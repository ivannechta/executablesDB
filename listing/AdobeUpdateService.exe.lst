push [ebp+arg_C]  +
push esi  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_20] +
mov eax [ebp+arg_4] +
sub esp 10h +
mov al ds:byte_496203 +
mov edx [ebp+arg_4] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ecx offset unk_496150 +
or ecx 0B000000h +
mov eax [edx] +
mov [ebp+var_C] eax +
mov eax [edx+4] +
mov [ebp+var_8] eax +
mov eax [edx+8] +
add edx 0Ch +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_4] eax +
mov eax [esi+4] +
push ecx  +
and dword ptr [ecx+4] 0 +
push [ebp+arg_10]  +
mov [ecx] eax +
mov eax [esi+4] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
movzx eax word ptr [eax] +
and dword ptr [ecx+14h] 0 +
mov [ecx+8] eax +
mov dword ptr [ecx+0Ch] 2 +
mov [ecx+10h] edx +
movzx eax word ptr [edx] +
mov [ecx+18h] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [ecx+1Ch] 1 +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_454F8A  +
add esp 1Ch +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset dword_4A314C +
call sub_403860  +
push offset loc_47AE70  +
mov dword_4A3160 0Fh +
mov dword_4A315C 0 +
mov byte ptr dword_4A314C 0 +
call sub_450116  +
pop ecx  +
retn   +
***
mov ecx offset dword_4A3164 +
call sub_403860  +
push 3  +
push offset aAad  +
mov ecx offset dword_4A3164 +
mov dword_4A3178 0Fh +
mov dword_4A3174 0 +
mov byte ptr dword_4A3164 0 +
call loc_402170  +
push offset loc_47AEC0  +
call sub_450116  +
pop ecx  +
retn   +
***
push offset loc_47AF10  +
mov eax dword_4A317C +
mov ecx offset unk_4A19B0 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset unk_4A1B28 +
mov ecx offset unk_4A1FC0 +
call sub_450CCD  +
push offset loc_47B08C  +
call sub_450116  +
pop ecx  +
retn   +
***
mov eax [edi+10h] +
test eax eax +
jnz loc_4013BE  +
xor al al +
pop edi  +
retn   +
xor ecx ecx +
inc eax  +
mov edx 2 +
mul  edx +
push esi  +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_44FE9A  +
add esp 4 +
mov esi eax +
cmp dword ptr [edi+14h] 8 +
jb loc_4013E5  +
mov eax [edi] +
jmp loc_4013E7  +
mov eax edi +
push eax  +
mov eax [edi+10h] +
inc eax  +
push eax  +
push esi  +
call sub_45B087  +
add esp 0Ch +
push esi  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_40140F  +
push esi  +
call sub_44FE4F  +
add esp 4 +
xor al al +
pop esi  +
pop edi  +
retn   +
cmp word ptr [esi] 0 +
jnz loc_401419  +
xor ecx ecx +
jmp loc_40142F  +
mov ecx esi +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401420  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
mov ecx edi +
call loc_401E70  +
push esi  +
call sub_44FE4F  +
add esp 4 +
mov al 1 +
pop esi  +
pop edi  +
retn   +
***
sub esp 230h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0Fh  +
mov edi ecx +
call ds:CreateToolhelp32Snapshot  +
mov esi eax +
mov [ebp+pe.dwSize] 22Ch +
lea eax [ebp+pe] +
push eax  +
push esi  +
call ds:Process32FirstW  +
test eax eax +
jz loc_4014AC  +
mov ebx ds:Process32NextW +
cmp [ebp+pe.th32ProcessID] edi +
jz loc_4014C6  +
lea eax [ebp+pe] +
push eax  +
push esi  +
call ebx  +
test eax eax +
jnz loc_401496  +
push esi  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
push esi  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
mov ebx [ebp+14h] +
mov [ebp-250h] eax +
mov eax [ebp+0Ch] +
push esi  +
push edi  +
mov [ebp-24Ch] eax +
xor edi edi +
mov eax [ebp+10h] +
mov [ebp-248h] eax +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-244h] +
mov [ebp-254h] edx +
push eax  +
push 1  +
push edi  +
push edi  +
mov [ebp-244h] edi +
mov [ebp-8] edi +
call ds:WTSEnumerateSessionsW  +
mov edx [ebp-8] +
xor ecx ecx +
mov esi [ebp-244h] +
test edx edx +
jz loc_401571  +
mov eax esi +
movq xmm0 qword ptr [eax] +
movq qword ptr [ebp-260h] xmm0 +
cmp [eax+8] edi +
jz loc_40156B  +
inc ecx  +
add eax 0Ch +
cmp ecx edx +
jb loc_401550  +
jmp loc_401571  +
mov edi [ebp-260h] +
push esi  +
call ds:WTSFreeMemory  +
test edi edi +
jz loc_4015D3  +
push 0  +
push 2  +
call ds:CreateToolhelp32Snapshot  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_4015A8  +
call ds:GetLastError  +
pop edi  +
mov [ebx] eax +
xor al al +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-238h] +
mov dword ptr [ebp-238h] 22Ch +
push eax  +
push esi  +
call ds:Process32FirstW  +
test eax eax +
jnz loc_4015F0  +
call ds:GetLastError  +
mov [ebx] eax +
push esi  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aWinlogon_exe  +
lea eax [ebp-214h] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_401622  +
mov [ebp-0Ch] eax +
lea eax [ebp-0Ch] +
push eax  +
push dword ptr [ebp-230h]  +
call ds:ProcessIdToSessionId  +
test eax eax +
jz loc_401622  +
cmp [ebp-0Ch] edi +
jz loc_401636  +
lea eax [ebp-238h] +
push eax  +
push esi  +
call ds:Process32NextW  +
test eax eax +
jnz loc_4015F0  +
jmp loc_4015CC  +
***
mov eax [ebp-230h] +
test eax eax +
jz loc_4015CC  +
push eax  +
push 0  +
push 400h  +
call ds:OpenProcess  +
mov edi eax +
test edi edi +
jz loc_4015C4  +
lea eax [ebp-23Ch] +
push eax  +
push 2  +
push edi  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_401693  +
call ds:GetLastError  +
push esi  +
mov esi ds:CloseHandle +
mov [ebx] eax +
call esi  +
push edi  +
call esi  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-240h] +
push eax  +
push 1  +
push 2  +
push 0  +
push 18Bh  +
push dword ptr [ebp-23Ch]  +
call ds:DuplicateTokenEx  +
test eax eax +
jnz loc_4016E4  +
call ds:GetLastError  +
push esi  +
mov esi ds:CloseHandle +
mov [ebx] eax +
call esi  +
push edi  +
call esi  +
push dword ptr [ebp-23Ch]  +
call esi  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ebp-248h]  +
push dword ptr [ebp-24Ch]  +
push dword ptr [ebp-250h]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push dword ptr [ebp-254h]  +
push 0  +
push dword ptr [ebp-240h]  +
call ds:CreateProcessAsUserW  +
test eax eax +
jnz loc_40174F  +
call ds:GetLastError  +
push esi  +
mov esi ds:CloseHandle +
mov [ebx] eax +
call esi  +
push edi  +
call esi  +
push dword ptr [ebp-240h]  +
call esi  +
push dword ptr [ebp-23Ch]  +
call esi  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ds:CloseHandle +
call esi  +
push edi  +
call esi  +
push dword ptr [ebp-240h]  +
call esi  +
push dword ptr [ebp-23Ch]  +
call esi  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475700  +
mov eax large fs:0 +
push eax  +
sub esp 0A0h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-0A8h] ecx +
mov eax [ebp+8] +
mov [ebp-0A0h] eax +
mov eax [ebp+10h] +
mov [ebp-0ACh] eax +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov dword ptr [ebp-30h] 0 +
mov [ebp-40h] ax +
push 1  +
mov [ebp-4] eax +
lea ecx [ebp-40h] +
mov esi [edx] +
mov edi [edx+4] +
push offset asc_487388  +
call loc_401F70  +
mov eax [ebp-0A8h] +
cmp dword ptr [eax+14h] 8 +
jb loc_401800  +
mov edx [eax] +
jmp loc_401802  +
mov edx eax +
cmp word ptr [edx] 0 +
jnz loc_40180C  +
xor ecx ecx +
jmp loc_40182A  +
mov ecx edx +
lea eax [ecx+2] +
mov [ebp-0A4h] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401817  +
sub ecx [ebp-0A4h] +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_401F70  +
push 2  +
push offset asc_48738C  +
lea ecx [ebp-40h] +
call loc_401F70  +
cmp esi edi +
jz loc_4018A3  +
cmp dword ptr [esi+14h] 8 +
jb loc_401851  +
mov edx [esi] +
jmp loc_401853  +
mov edx esi +
cmp word ptr [edx] 0 +
jnz loc_40185D  +
xor eax eax +
jmp loc_401883  +
mov eax edx +
lea ecx [eax+2] +
mov [ebp-0A4h] ecx +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_401870  +
sub eax [ebp-0A4h] +
sar eax 1 +
push eax  +
push edx  +
lea ecx [ebp-40h] +
call loc_401F70  +
push 1  +
push offset asc_487394  +
lea ecx [ebp-40h] +
call loc_401F70  +
add esi 18h +
cmp esi edi +
jnz loc_401847  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov ecx [ebp-0A8h] +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 1 +
cmp eax ecx +
jz loc_4018D4  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx eax +
call loc_402610  +
lea ecx [ebp-28h] +
call sub_4013B0  +
test al al +
jnz loc_4018F5  +
push 44h  +
lea eax [ebp-88h] +
push 0  +
push eax  +
call sub_453150  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-98h] +
mov esi [ebp-0A0h] +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
lea edx [ebp-40h] +
cmp dword ptr [ebp-2Ch] 8 +
xorps xmm0 xmm0 +
push esi  +
cmovnb edx [ebp-40h] +
push ecx  +
lea ecx [ebp-88h] +
mov dword ptr [ebp-88h] 44h +
push ecx  +
push eax  +
movups oword ptr [ebp-98h] xmm0 +
call loc_4014E0  +
add esp 1Ch +
test al al +
jz loc_401A03  +
cmp byte ptr [ebp+0Ch] 0 +
jnz loc_40196C  +
push 0FFFFFFFFh  +
push dword ptr [ebp-98h]  +
call ds:WaitForSingleObject  +
lea eax [ebp-44h] +
push eax  +
push dword ptr [ebp-98h]  +
call ds:GetExitCodeProcess  +
mov ecx [ebp-0ACh] +
xor esi esi +
mov eax [ebp-44h] +
mov [ecx] eax +
mov ecx [ebp-98h] +
call sub_401450  +
test al al +
jz loc_4019DF  +
mov edi ds:Sleep +
push 0FFFFFFFFh  +
mov ecx [edi] +
test ecx ecx +
jz loc_401B97  +
mov edx [edi+4] +
push ecx  +
call loc_402FE0  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_4023A0  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
retn   +
***
push esi  +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_401C5D  +
xor eax eax +
push eax  +
push edx  +
call loc_401E70  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_401C63  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_401E70  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi+14h] +
cmp eax 8 +
jb loc_401CA4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_401CC1  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call sub_4020A0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
mov esi ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_401D33  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401D40  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx ecx +
mov eax 2AAAAAABh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_401DDE  +
sub esi [ebx] +
mov eax 2AAAAAABh +
imul  esi +
push edi  +
sar edx 2 +
mov eax 0AAAAAAAh +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_401DE3  +
sub ecx [ebx] +
mov eax 2AAAAAABh +
imul  ecx +
inc edi  +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0AAAAAAAh +
mov eax esi +
shr eax 1 +
sub edx eax +
cmp edx esi +
lea ecx [eax+esi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edi +
cmovb ecx edi +
push ecx  +
mov ecx ebx +
call sub_402400  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
cmp dword ptr [ecx+14h] 8 +
jb loc_401DF9  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_401E39  +
cmp dword ptr [esi+14h] 8 +
jb loc_401E39  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_401E2B  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call loc_4024A0  +
pop ebx  +
mov dword ptr [esi+14h] 7 +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_401E57  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_401EC6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_401E8A  +
mov eax [esi] +
jmp loc_401E8C  +
mov eax esi +
cmp ebx eax +
jb loc_401EC6  +
cmp ecx 8 +
jb loc_401E99  +
mov edx [esi] +
jmp loc_401E9B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_401EC6  +
cmp ecx 8 +
jb loc_401EAE  +
mov eax [esi] +
jmp loc_401EB0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call loc_402610  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7FFFFFFEh +
ja loc_401F5E  +
cmp [esi+14h] edi +
jnb loc_401EF4  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402A00  +
test edi edi +
jz loc_401F55  +
cmp dword ptr [esi+14h] 8 +
jb loc_401F1F  +
mov ecx [esi] +
jmp loc_401F21  +
test edi edi +
jnz loc_401EEA  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_401F11  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ecx esi +
test edi edi +
jz loc_401F33  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_401F4D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_401FC6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_401F8A  +
mov eax [esi] +
jmp loc_401F8C  +
mov eax esi +
cmp edi eax +
jb loc_401FC6  +
cmp ecx 8 +
jb loc_401F99  +
mov edx [esi] +
jmp loc_401F9B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_401FC6  +
cmp ecx 8 +
jb loc_401FAE  +
mov eax [esi] +
jmp loc_401FB0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
call loc_402730  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
or eax 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
sub eax edx +
cmp eax ecx +
jbe loc_402080  +
push ebx  +
lea ebx [edx+ecx] +
test ecx ecx +
jz loc_402077  +
cmp ebx 7FFFFFFEh +
ja loc_40208A  +
cmp [esi+14h] ebx +
jnb loc_402010  +
push edx  +
push ebx  +
mov ecx esi +
call sub_402A00  +
mov ecx [ebp+0Ch] +
test ebx ebx +
jz loc_402077  +
cmp dword ptr [esi+14h] 8 +
jb loc_40203B  +
mov edx [esi] +
jmp loc_40203D  +
test ebx ebx +
jnz loc_402006  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40202D  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop ebx  +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_402055  +
lea eax [ecx+ecx] +
push eax  +
mov eax [esi+10h] +
push edi  +
lea eax [edx+eax*2] +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40206F  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_4020C7  +
mov eax [esi+10h] +
add eax 1 +
jz loc_4020D5  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_450F90  +
add esp 0Ch +
jmp loc_4020D5  +
test edi edi +
jz loc_4020CF  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402102  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 4  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_402146  +
cmp dword ptr [esi+14h] 10h +
jb loc_402146  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_402138  +
push edi  +
push ebx  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call loc_402500  +
pop ebx  +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_402162  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_4021D5  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40218A  +
mov eax [esi] +
jmp loc_40218C  +
mov eax esi +
cmp ebx eax +
jb loc_4021D5  +
cmp ecx 10h +
jb loc_402199  +
mov edx [esi] +
jmp loc_40219B  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_4021D5  +
cmp ecx 10h +
jb loc_4021BF  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_402270  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_402270  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 0FFFFFFFEh +
ja loc_40225B  +
cmp [esi+14h] edi +
jnb loc_4021FC  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402C20  +
test edi edi +
jz loc_402252  +
cmp dword ptr [esi+14h] 10h +
jb loc_402223  +
mov eax [esi] +
jmp loc_402225  +
test edi edi +
jnz loc_4021F2  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_402217  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
test edi edi +
jz loc_402234  +
push edi  +
push ebx  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40224C  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_402372  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_4022DE  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_40237C  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 10h +
jb loc_4022C5  +
mov edx [esi] +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_4028F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_4028F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 0FFFFFFFEh +
ja loc_402386  +
cmp [esi+14h] edi +
jnb loc_402310  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402C20  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_402369  +
cmp dword ptr [ebx+14h] 10h +
jb loc_402306  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_402337  +
mov edx [esi] +
jmp loc_402339  +
test edi edi +
jnz loc_4022FE  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40232B  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_40234B  +
push edi  +
lea eax [ebx+ecx] +
push eax  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_402363  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 0AAAAAAAh +
ja loc_4023E4  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_4023D7  +
test cl 1Fh +
jnz loc_4023E9  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_4023EE  +
sub ecx eax +
cmp ecx 4 +
jb loc_4023F3  +
cmp ecx 23h +
ja loc_4023F8  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
sub esp 8 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
mov edi ecx +
mov [ebp+var_8] esi +
call loc_402990  +
mov edx [edi+4] +
mov ebx eax +
mov byte ptr [ebp+var_4] 0 +
push [ebp+var_4]  +
push ecx  +
mov ecx [edi] +
push ebx  +
call sub_4034C0  +
mov ecx [edi+4] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 0Ch +
imul  ecx +
mov eax [edi] +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+var_4] ecx +
test eax eax +
jz loc_402481  +
mov edx [edi+4] +
push ecx  +
mov ecx eax +
call loc_402FE0  +
mov esi [edi] +
mov eax 2AAAAAABh +
mov ecx [edi+8] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov ecx [ebp+var_4] +
mov esi [ebp+var_8] +
lea eax [esi+esi*2] +
lea eax [ebx+eax*8] +
mov [edi+8] eax +
lea eax [ecx+ecx*2] +
lea eax [ebx+eax*8] +
mov [edi+4] eax +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_4024E0  +
add eax eax +
cmp eax 1000h +
jb loc_4024D3  +
test cl 1Fh +
jnz loc_4024E5  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_4024EA  +
sub ecx eax +
cmp ecx 4 +
jb loc_4024EF  +
cmp ecx 23h +
ja loc_4024F4  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
cmp ecx 0FFFFFFFFh +
ja loc_40253C  +
cmp ecx 1000h +
jb loc_40252F  +
test al 1Fh +
jnz loc_402541  +
mov ecx [eax-4] +
cmp ecx eax +
jnb loc_402546  +
sub eax ecx +
cmp eax 4 +
jb loc_40254B  +
cmp eax 23h +
ja loc_402550  +
mov eax ecx +
push eax  +
call sub_44FE87  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 7FFFFFFEh +
ja loc_4025D3  +
cmp [ecx+14h] esi +
jnb loc_40258A  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_402A00  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_4025B2  +
cmp esi 8 +
jnb loc_4025B2  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_401E00  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_4025C6  +
mov [ecx+10h] esi +
cmp dword ptr [ecx+14h] 8 +
jb loc_4025C1  +
mov ecx [ecx] +
xor eax eax +
mov [ecx] ax +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
cmp dword ptr [ecx+14h] 8 +
jb loc_4025FB  +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
xor eax eax +
mov [ecx+edx*2] ax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40270C  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_40266A  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_402716  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_402650  +
mov edx [esi] +
jmp loc_402652  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call loc_402B70  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 7FFFFFFEh +
ja loc_402720  +
cmp [esi+14h] edi +
jnb loc_40269F  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402A00  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_402703  +
cmp dword ptr [ebx+14h] 8 +
jb loc_402695  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_4026CA  +
mov edx [esi] +
jmp loc_4026CC  +
test edi edi +
jnz loc_40268D  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4026BC  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_4026E1  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4026FB  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40281A  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
or eax 0FFFFFFFFh +
sub eax edx +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_402824  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_402811  +
cmp edi 7FFFFFFEh +
ja loc_40282E  +
cmp [esi+14h] edi +
jnb loc_4027A4  +
push edx  +
push edi  +
mov ecx esi +
call sub_402A00  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_402811  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40279A  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_4027CF  +
mov edx [esi] +
jmp loc_4027D1  +
test edi edi +
jnz loc_402792  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4027C1  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_4027EF  +
lea eax [ecx+ecx] +
push eax  +
mov eax [ebp+0Ch] +
lea eax [ebx+eax*2] +
push eax  +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402809  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 0FFFFFFFEh +
ja loc_4028AE  +
cmp [ecx+14h] esi +
jnb loc_402867  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_402C20  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_40288F  +
cmp esi 10h +
jnb loc_40288F  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_402110  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_4028A1  +
mov [ecx+10h] esi +
cmp dword ptr [ecx+14h] 10h +
jb loc_40289E  +
mov ecx [ecx] +
mov byte ptr [ecx] 0 +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
cmp dword ptr [ecx+14h] 10h +
jb loc_4028D9  +
mov eax [ecx] +
mov byte ptr [eax+edx] 0 +
pop ebp  +
retn 4  +
mov byte ptr [ecx+edx] 0 +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_40297F  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_40292F  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_402923  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_402977  +
cmp dword ptr [esi+14h] 10h +
jb loc_40293D  +
mov eax [esi] +
jmp loc_40293F  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx] +
mov eax edi +
sub eax ecx +
jz loc_402959  +
push eax  +
lea eax [ebx+edx] +
push eax  +
push ebx  +
call loc_450F90  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
pop ebx  +
jb loc_402971  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_40299E  +
pop ebp  +
retn 4  +
***
cmp eax 0AAAAAAAh +
ja loc_4029E4  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_4029D5  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4029E9  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_4029EE  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_40299A  +
jmp loc_4029F3  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_475770  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_402A44  +
mov edi eax +
jmp loc_402A6B  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_402A6B  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_402A6B  +
mov edi 7FFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
push eax  +
mov ecx esi +
call loc_402D80  +
mov edx eax +
jmp loc_402AAA  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_402D80  +
mov [ebp-18h] eax +
mov eax offset loc_402AA1 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov edx [ebp-18h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_18] edx +
test ebx ebx +
jz loc_402AD2  +
cmp dword ptr [esi+14h] 8 +
jb loc_402ABE  +
mov ecx [esi] +
jmp loc_402AC0  +
mov ecx esi +
test ebx ebx +
jz loc_402AD2  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402AE5  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402AFD  +
mov eax [esi] +
jmp loc_402AFF  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_18] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_402B17  +
mov esi eax +
xor eax eax +
mov [esi+ebx*2] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_402C0D  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_402BB7  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_402BA9  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_402C05  +
cmp dword ptr [esi+14h] 8 +
jb loc_402BC5  +
mov eax [esi] +
jmp loc_402BC7  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_402BE3  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call loc_450F90  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
pop ebx  +
jb loc_402BFD  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push 0FFFFFFFFh  +
push offset loc_475790  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_402C61  +
mov edi eax +
jmp loc_402C88  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_402C88  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_402C88  +
mov edi 0FFFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
push eax  +
mov ecx esi +
call loc_402DF0  +
mov ecx eax +
jmp loc_402CC7  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_402DF0  +
mov [ebp-18h] eax +
mov eax offset loc_402CBE +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ecx [ebp-18h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_18] ecx +
test ebx ebx +
jz loc_402CEC  +
cmp dword ptr [esi+14h] 10h +
jb loc_402CDB  +
mov eax [esi] +
jmp loc_402CDD  +
mov eax esi +
test ebx ebx +
jz loc_402CEC  +
push ebx  +
push eax  +
push ecx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_402CFF  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_402D17  +
mov eax [esi] +
jmp loc_402D19  +
mov eax esi +
mov byte ptr [eax] 0 +
mov eax [ebp+var_18] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_402D2F  +
mov esi eax +
mov byte ptr [esi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi [ebp-14h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_402D5D  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_402D73  +
mov esi [esi] +
push 0  +
push 0  +
mov byte ptr [esi] 0 +
call sub_452780  +
int 3  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_402D8E  +
pop ebp  +
retn 4  +
***
cmp eax 7FFFFFFFh +
ja loc_402DD0  +
add eax eax +
cmp eax 1000h +
jb loc_402DC1  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_402DD5  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_402DDA  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_402D8A  +
jmp loc_402DDF  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_402DFE  +
pop ebp  +
retn 4  +
***
cmp eax 0FFFFFFFFh +
ja loc_402E3C  +
cmp eax 1000h +
jb loc_402E2D  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_402E41  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_402E46  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_402DFA  +
jmp loc_402E4B  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ebx edx +
mov [ebp-4] esi +
mov dword ptr [ebp-8] 0 +
cmp word ptr [edi] 0 +
jnz loc_402E84  +
xor eax eax +
jmp loc_402E9F  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_402E90  +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
mov ecx ebx +
call loc_401F70  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_4020A0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4757C9  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp+var_14] ebx +
mov esi ecx +
mov [ebp+var_18] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402F2F  +
mov eax [esi] +
jmp loc_402F31  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov edi [ebp+arg_0] +
mov [ebp+var_4] ecx +
mov ebx [ebx+10h] +
mov [ebp+var_10] 1 +
cmp [edi] cx +
jz loc_402F5F  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402F50  +
sub ecx edx +
sar ecx 1 +
lea eax [ecx+ebx] +
mov ebx [esi+10h] +
cmp ebx eax +
ja loc_402F91  +
cmp [esi+14h] eax +
jz loc_402F91  +
push 1  +
push eax  +
mov ecx esi +
call loc_402560  +
test al al +
jz loc_402F91  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_402F89  +
mov eax [esi] +
jmp loc_402F8B  +
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
push 0FFFFFFFFh  +
push 0  +
push [ebp+var_14]  +
mov ecx esi +
call loc_402730  +
cmp word ptr [edi] 0 +
jnz loc_402FA9  +
xor ecx ecx +
jmp loc_402FBF  +
mov ecx edi +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402FB0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx esi +
call loc_401F70  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_403029  +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_40305D  +
xor eax eax +
push eax  +
push edx  +
call loc_401F70  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_403063  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_401F70  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
mov edx [esi+10h] +
cmp edx ecx +
jb loc_403495  +
push ebx  +
mov ebx [ebp+10h] +
push edi  +
mov edi [ebx+10h] +
cmp edi [ebp+14h] +
jb loc_40349F  +
mov ebx [ebp+0Ch] +
mov eax edx +
sub eax ecx +
cmp ebx eax +
mov [ebp-4] eax +
cmova ebx eax +
sub edi [ebp+14h] +
mov [ebp-0Ch] edi +
mov edi [ebp+18h] +
cmp edi [ebp-0Ch] +
mov [ebp+0Ch] ebx +
mov ebx edx +
cmova edi [ebp-0Ch] +
or eax 0FFFFFFFFh +
sub ebx [ebp+0Ch] +
sub eax edi +
mov [ebp+18h] ebx +
cmp eax ebx +
mov ebx [ebp+10h] +
jbe loc_4034A9  +
mov ecx [ebp+18h] +
mov eax [ebp-4] +
add ecx edi +
sub eax [ebp+0Ch] +
cmp edx ecx +
mov [ebp+18h] ecx +
mov ecx [ebp+8] +
mov [ebp-4] eax +
jnb loc_403153  +
cmp dword ptr [ebp+18h] 7FFFFFFEh +
ja loc_4034B3  +
mov ebx [ebp+18h] +
cmp [esi+14h] ebx +
mov ebx [ebp+10h] +
jnb loc_403132  +
push edx  +
push dword ptr [ebp+18h]  +
mov ecx esi +
call sub_402A00  +
mov eax [ebp-4] +
jmp loc_403150  +
cmp dword ptr [ebp+18h] 0 +
jnz loc_403153  +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403149  +
mov edx [esi] +
jmp loc_40314B  +
mov edx esi +
xor ecx ecx +
mov [edx] cx +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
cmp edi edx +
jnz loc_403189  +
cmp dword ptr [ebx+14h] 8 +
jb loc_403162  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40316C  +
mov edx [esi] +
jmp loc_40316E  +
mov edx esi +
test edi edi +
jz loc_403467  +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+14h] +
lea eax [ebx+eax*2] +
push eax  +
lea eax [edx+ecx*2] +
jmp loc_40345E  +
cmp esi ebx +
jz loc_403211  +
mov edx [esi+14h] +
cmp edx 8 +
jb loc_4031A3  +
mov ebx [esi] +
mov [ebp-4] ebx +
mov ebx [ebp+10h] +
jmp loc_4031A9  +
mov ecx [ebp+8] +
mov [ebp-4] esi +
cmp edx 8 +
jb loc_4031B2  +
mov edx [esi] +
jmp loc_4031B4  +
mov edx esi +
test eax eax +
jz loc_4031D9  +
mov ebx [ebp-4] +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
add eax ecx +
lea eax [ebx+eax*2] +
push eax  +
lea eax [ecx+edi] +
lea eax [edx+eax*2] +
push eax  +
call loc_450F90  +
mov ebx [ebp+10h] +
add esp 0Ch +
cmp dword ptr [ebx+14h] 8 +
jb loc_4031E1  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_4031EB  +
mov edx [esi] +
jmp loc_4031ED  +
mov edx esi +
test edi edi +
jz loc_403467  +
mov ecx [ebp+8] +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+14h] +
lea eax [ebx+eax*2] +
push eax  +
lea eax [edx+ecx*2] +
push eax  +
call loc_452BD0  +
jmp loc_403464  +
cmp edi edx +
jnb loc_403287  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_403221  +
mov ebx [esi] +
jmp loc_403223  +
mov ebx esi +
cmp eax 8 +
jb loc_40322C  +
mov edx [esi] +
jmp loc_40322E  +
mov edx esi +
test edi edi +
jz loc_403249  +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+14h] +
lea eax [ebx+eax*2] +
push eax  +
lea eax [edx+ecx*2] +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_403255  +
mov ebx [esi] +
jmp loc_403257  +
mov ebx esi +
cmp eax 8 +
jb loc_403260  +
mov edx [esi] +
jmp loc_403262  +
mov edx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_403467  +
mov ecx [ebp+8] +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
add eax ecx +
lea eax [ebx+eax*2] +
push eax  +
lea eax [ecx+edi] +
lea eax [edx+eax*2] +
jmp loc_40345E  +
mov ebx [ebp+14h] +
cmp ebx ecx +
ja loc_403312  +
mov edx [esi+14h] +
cmp edx 8 +
jb loc_4032A4  +
mov ebx [esi] +
mov [ebp+10h] ebx +
mov ebx [ebp+14h] +
jmp loc_4032A7  +
mov [ebp+10h] esi +
cmp edx 8 +
jb loc_4032B0  +
mov edx [esi] +
jmp loc_4032B2  +
mov edx esi +
test eax eax +
jz loc_4032DA  +
mov ebx [ebp+10h] +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
add eax ecx +
lea eax [ebx+eax*2] +
push eax  +
lea eax [ecx+edi] +
lea eax [edx+eax*2] +
push eax  +
call loc_450F90  +
mov ecx [ebp+8] +
add esp 0Ch +
mov ebx [ebp+14h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4032E9  +
mov edx [esi] +
mov [ebp+14h] edx +
jmp loc_4032EC  +
mov [ebp+14h] esi +
cmp eax 8 +
jb loc_4032F5  +
mov edx [esi] +
jmp loc_4032F7  +
mov edx esi +
test edi edi +
jz loc_403467  +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+14h] +
lea eax [eax+ebx*2] +
push eax  +
lea eax [edx+ecx*2] +
jmp loc_40345E  +
lea eax [ecx+edx] +
mov [ebp+10h] eax +
cmp eax ebx +
mov eax [ebp-4] +
ja loc_4033A6  +
mov edx [esi+14h] +
cmp edx 8 +
jb loc_403335  +
mov ebx [esi] +
mov [ebp-4] ebx +
mov ebx [ebp+14h] +
jmp loc_403338  +
mov [ebp-4] esi +
cmp edx 8 +
jb loc_403341  +
mov edx [esi] +
jmp loc_403343  +
mov edx esi +
test eax eax +
jz loc_403369  +
mov ebx [ebp+10h] +
add eax eax +
push eax  +
mov eax [ebp-4] +
lea eax [eax+ebx*2] +
push eax  +
lea eax [ecx+edi] +
lea eax [edx+eax*2] +
push eax  +
call loc_450F90  +
mov ecx [ebp+8] +
add esp 0Ch +
mov ebx [ebp+14h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_403378  +
mov edx [esi] +
mov [ebp+14h] edx +
jmp loc_40337B  +
mov [ebp+14h] esi +
cmp eax 8 +
jb loc_403384  +
mov edx [esi] +
jmp loc_403386  +
mov edx esi +
test edi edi +
jz loc_403467  +
sub ebx [ebp+0Ch] +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+14h] +
add ebx edi +
lea eax [eax+ebx*2] +
push eax  +
lea eax [edx+ecx*2] +
jmp loc_40345E  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4033B8  +
mov ecx [esi] +
mov [ebp-8] ecx +
mov ecx [ebp+8] +
jmp loc_4033BB  +
mov [ebp-8] esi +
cmp eax 8 +
jb loc_4033C7  +
mov eax [esi] +
mov [ebp-0Ch] eax +
jmp loc_4033CA  +
mov [ebp-0Ch] esi +
test edx edx +
jz loc_4033EB  +
lea eax [edx+edx] +
push eax  +
mov eax [ebp-8] +
lea eax [eax+ebx*2] +
push eax  +
mov eax [ebp-0Ch] +
lea eax [eax+ecx*2] +
push eax  +
call loc_450F90  +
mov ecx [ebp+8] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4033FA  +
mov edx [esi] +
mov [ebp+8] edx +
jmp loc_4033FD  +
mov [ebp+8] esi +
cmp eax 8 +
jb loc_403406  +
mov edx [esi] +
jmp loc_403408  +
mov edx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_40342E  +
mov ebx [ebp+10h] +
add eax eax +
push eax  +
mov eax [ebp+8] +
lea eax [eax+ebx*2] +
push eax  +
lea eax [ecx+edi] +
lea eax [edx+eax*2] +
push eax  +
call loc_450F90  +
mov ebx [ebp+14h] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40343A  +
mov edx [esi] +
jmp loc_40343C  +
mov edx esi +
cmp eax 8 +
jb loc_403445  +
mov ecx [esi] +
jmp loc_403447  +
mov ecx esi +
mov eax edi +
sub eax [ebp+0Ch] +
jz loc_403467  +
add eax eax +
push eax  +
lea eax [ebx+edi] +
lea eax [edx+eax*2] +
push eax  +
mov eax [ebp+10h] +
lea eax [ecx+eax*2] +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov ecx [ebp+18h] +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
pop edi  +
pop ebx  +
jb loc_403486  +
mov eax [esi] +
xor edx edx +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax esi +
xor edx edx +
pop esi  +
mov [eax+ecx*2] dx +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_403501  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4034F0  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
push edi  +
mov [esi] ax +
call sub_4020A0  +
add edi 18h +
add esi 18h +
cmp edi ebx +
jnz loc_4034D1  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+14h] 8 +
jb loc_403555  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+14h] 8 +
jb loc_403534  +
mov edx [esi] +
mov eax [edi] +
mov [esi] eax +
mov [edi] edx +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [edi+10h] +
push ebx  +
mov ebx [esi] +
add eax 1 +
jz loc_40354C  +
add eax eax +
push eax  +
push edi  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov [edi] ebx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+14h] 8 +
jnb loc_40356D  +
mov edx ecx +
mov ecx esi +
call sub_403590  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [esi+10h] +
mov edi [ecx] +
add eax 1 +
jz loc_403584  +
add eax eax +
push eax  +
push esi  +
push ecx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp ecx ebx +
jz loc_4035CD  +
push esi  +
push edi  +
lea eax [ecx+10h] +
xor edx edx +
mov edi eax +
xor esi esi +
sub edi ecx +
inc edi  +
shr edi 1 +
cmp ecx eax +
cmova edi edx +
test edi edi +
jz loc_4035CB  +
sub ebx ecx +
mov ax [ebx+ecx] +
lea ecx [ecx+2] +
movzx edx word ptr [ecx-2] +
inc esi  +
mov [ecx-2] ax +
mov [ebx+ecx-2] dx +
cmp esi edi +
jnz loc_4035B2  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475803  +
mov eax large fs:0 +
push eax  +
sub esp 80h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_88] 0 +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_6C] 7 +
mov [ebp+var_70] 0 +
mov [ebp+var_80] ax +
mov [ebp+var_54] 0Fh +
mov [ebp+var_58] eax +
mov byte ptr [ebp+var_68] al +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] eax +
mov byte ptr [ebp+var_2C] al +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_68] +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+arg_1C] +
mov [ebp+var_44] offset unk_49EA50 +
push eax  +
mov [ebp+var_40] 80h +
mov [ebp+var_3C] offset unk_49EAD0 +
mov [ebp+var_38] 3 +
mov [ebp+var_34] offset unk_49EAD8 +
mov [ebp+var_30] 80h +
mov [ebp+var_84] 2 +
call loc_402270  +
lea ecx [ebp+var_84] +
call sub_40DB90  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
test eax eax +
jnz loc_4036CA  +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call loc_402270  +
lea ecx [ebp+var_84] +
call sub_403720  +
mov ecx [ebp+arg_30] +
cmp ecx 10h +
jb loc_4036F6  +
inc ecx  +
push ecx  +
jmp loc_4036EB  +
push 0  +
push offset unk_48741C  +
call loc_402170  +
lea ecx [ebp+var_84] +
call sub_403720  +
mov eax [ebp+arg_30] +
cmp eax 10h +
jb loc_4036F6  +
inc eax  +
push eax  +
push [ebp+arg_1C]  +
lea ecx [ebp+arg_1C] +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 34h  +
***
mov edi ecx +
mov eax [edi+6Ch] +
lea esi [edi+58h] +
cmp eax 10h +
jb loc_40373A  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_403750  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+1Ch] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_403769  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40377F  +
mov esi [esi] +
mov byte ptr [esi] 0 +
mov eax [edi+18h] +
cmp eax 8 +
jb loc_403797  +
inc eax  +
lea ecx [edi+4] +
push eax  +
push dword ptr [edi+4]  +
call loc_4024A0  +
mov dword ptr [edi+18h] 7 +
mov dword ptr [edi+14h] 0 +
cmp dword ptr [edi+18h] 8 +
jb loc_4037B6  +
mov eax [edi+4] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [edi+4] ax +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4037D4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_4037EF  +
mov eax [esi] +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [ecx] 0 +
jnz loc_403831  +
xor edx edx +
push edx  +
push ecx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov edx ecx +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_403837  +
sub edx edi +
pop edi  +
push edx  +
push ecx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_403870  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_45D74A  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475854  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_40392E  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_24] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aMainStarted  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
mov [ebp+ServiceStartTable.lpServiceName] offset ServiceName +
lea eax [ebp+ServiceStartTable] +
mov [ebp+ServiceStartTable.lpServiceProc] offset sub_403D00 +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
push eax  +
call ds:StartServiceCtrlDispatcherW  +
test eax eax +
jnz loc_403972  +
call ds:GetLastError  +
jmp loc_4039CE  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4039B7  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_24] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 1 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aMainFinished  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
mov eax 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4758D7  +
mov eax large fs:0 +
push eax  +
push ebx  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_403A6D  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aServiceworkert  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword_4A2904 +
add esp 8 +
test eax eax +
jnz loc_403AB5  +
push 10h  +
call sub_44FE54  +
add esp 4 +
mov [ebp-14h] eax +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 1 +
mov ecx eax +
movups oword ptr [eax] xmm0 +
call sub_4048B0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2904 eax +
mov ecx eax +
call loc_404940  +
test al al +
mov eax dword_4A2908 +
jz loc_403B0C  +
test eax eax +
jnz loc_403B05  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 2 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
push offset aServiceworke_0  +
jmp loc_403B51  +
test eax eax +
jnz loc_403B4C  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 3 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
push offset aServiceworke_1  +
mov ecx [eax+4] +
add eax 4 +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword_4A2908 +
add esp 8 +
test eax eax +
jnz loc_403BA3  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 4 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aServiceworke_2  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_475924  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+arg_0] +
mov ServiceStatus.dwControlsAccepted eax +
mov eax [ebp+arg_4] +
mov ServiceStatus.dwCheckPoint eax +
mov eax dword_4A2908 +
mov ServiceStatus.dwCurrentState ebx +
mov ServiceStatus.dwWin32ExitCode edx +
test eax eax +
jnz loc_403C59  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push ebx  +
push offset aReportsvcstatu  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 0Ch +
push offset ServiceStatus  +
push hServiceStatus  +
call ds:SetServiceStatus  +
test eax eax +
jnz loc_403CE5  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_403CC6  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 1 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov edi [eax+4] +
lea esi [eax+4] +
push ebx  +
call ds:GetLastError  +
push eax  +
push offset aReportsvcsta_0  +
push offset word_4873C8  +
push esi  +
call dword ptr [edi+24h]  +
add esp 14h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475964  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_403D80  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aServicemainSta  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
push offset HandlerProc  +
push offset ServiceName  +
call ds:RegisterServiceCtrlHandlerW  +
mov hServiceStatus eax +
test eax eax +
jnz loc_403E10  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_403DF0  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-14h] esi +
push 84h  +
push 0  +
push esi  +
mov dword ptr [ebp-4] 1 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov edi [eax+4] +
lea esi [eax+4] +
call ds:GetLastError  +
push eax  +
push offset aServicemainFai  +
push offset word_4873C8  +
push esi  +
call dword ptr [edi+24h]  +
add esp 10h +
jmp loc_403E56  +
xor edx edx +
mov ServiceStatus.dwWaitHint 0 +
xorps xmm0 xmm0 +
push 0  +
movups oword ptr ServiceStatus.dwServiceType xmm0 +
lea ecx [edx+2] +
mov ServiceStatus.dwServiceType 10h +
movq qword ptr ServiceStatus.dwServiceSpecificExitCode xmm0 +
push 0  +
mov ServiceStatus.dwServiceSpecificExitCode 0 +
call sub_403BD0  +
add esp 8 +
call sub_403E70  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4759B6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_403ED9  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aSvcinitStarted  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
call sub_410900  +
mov dword_4A2900 eax +
test eax eax +
jnz loc_403F21  +
push 1  +
push eax  +
call ds:GetLastError  +
mov edx eax +
mov ecx 1 +
call sub_403BD0  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor edx edx +
push 2  +
push 1  +
lea ecx [edx+4] +
call sub_403BD0  +
add esp 8 +
push 0  +
push 0  +
push 0  +
push offset StartAddress  +
push 0  +
push 0  +
call ds:CreateThread  +
test eax eax +
jnz loc_403F57  +
call sub_4077C0  +
push offset aSvcinitCreatTh  +
jmp loc_403F61  +
call sub_4077C0  +
push offset aSvcinitCreateT  +
mov ecx [eax+4] +
add eax 4 +
push eax  +
call dword ptr [ecx+14h]  +
mov eax dword_4A2908 +
add esp 8 +
test eax eax +
jnz loc_403FB3  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 1 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aSvcinitNowWati  +
push eax  +
call dword ptr [ecx+14h]  +
mov ecx dword_4A2900 +
push 0  +
push 0FFFFFFFFh  +
call sub_410A00  +
mov ecx dword_4A2900 +
call sub_410AB0  +
xor edx edx +
push 3  +
push 0  +
lea ecx [edx+1] +
call sub_403BD0  +
mov eax dword_4A2908 +
add esp 18h +
test eax eax +
jnz loc_404032  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 2 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aSvcinitFinishe  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475A16  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4040CB  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aServicectrlhan  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
sub [ebp+arg_0] 1 +
jnz loc_40415F  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_404128  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 1 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aReceivededServ  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
cmp ServiceStatus.dwCurrentState 4 +
jnz loc_40415F  +
xor edx edx +
push 4  +
push 0  +
lea ecx [edx+3] +
call sub_403BD0  +
mov ecx dword_4A2900 +
add esp 8 +
call sub_4109A0  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4041A4  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 2 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aServicectrlh_0  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
call ds:InitializeCriticalSectionEx  +
test eax eax +
jnz loc_4041F2  +
call ds:GetLastError  +
test eax eax +
jle locret_4041F4  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475AD2  +
mov eax large fs:0 +
push eax  +
sub esp 88h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-78h] esi +
mov edi [ebp+8] +
lea ecx [ebp-74h] +
push 26h  +
xor eax eax +
mov dword ptr [ebp-94h] 0 +
push offset aOutputResultFa  +
mov dword ptr [ebp-60h] 7 +
mov dword ptr [ebp-64h] 0 +
mov [ebp-74h] ax +
call loc_401E70  +
add esi 10h +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-44h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_404284  +
mov eax [esi] +
jmp loc_404286  +
mov eax esi +
push eax  +
call sub_404760  +
test al al +
jnz loc_40431B  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4042D0  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp-78h] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 1 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp-4] 0 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aAdobeupdates_0  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
mov dword ptr [edi+14h] 7 +
xor eax eax +
mov dword ptr [edi+10h] 0 +
mov ecx edi +
mov [edi] ax +
push 26h  +
push offset aOutputResultFa  +
call loc_401E70  +
mov ecx [ebp-60h] +
cmp ecx 8 +
jb loc_404733  +
inc ecx  +
push ecx  +
jmp loc_404728  +
mov edx [ebp-78h] +
lea eax [ebp-44h] +
push eax  +
mov ecx esi +
movzx eax byte ptr [edx+28h] +
add edx 4 +
push eax  +
lea eax [ebp-40h] +
push eax  +
call loc_401780  +
add esp 0Ch +
test al al +
jnz loc_40452A  +
call sub_4077C0  +
cmp dword ptr [esi+14h] 8 +
lea ecx [eax+4] +
jb loc_404350  +
mov esi [esi] +
push dword ptr [ebp-44h]  +
mov eax [ecx] +
push dword ptr [ebp-40h]  +
push esi  +
push offset aAdobeupdates_1  +
push offset word_4873C8  +
push ecx  +
call dword ptr [eax+24h]  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-34h] 0 +
movq qword ptr [ebp-3Ch] xmm0 +
add esp 18h +
mov dword ptr [ebp-38h] 0 +
mov byte ptr [ebp-34h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-44h] 0 +
push offset aOutputResultFa  +
lea ecx [ebp-90h] +
mov byte ptr [ebp-4] 4 +
call loc_401D00  +
lea eax [ebp-90h] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-3Ch] +
call sub_4111F0  +
mov byte ptr [ebp-4] 4 +
mov eax [ebp-7Ch] +
cmp eax 8 +
jb loc_4043D8  +
inc eax  +
lea ecx [ebp-90h] +
push eax  +
push dword ptr [ebp-90h]  +
call loc_4024A0  +
lea eax [ebp-44h] +
push eax  +
lea ecx [ebp-3Ch] +
call loc_411E60  +
xor eax eax +
mov dword ptr [ebp-48h] 7 +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-5Ch] ax +
mov byte ptr [ebp-4] 6 +
xorps xmm0 xmm0 +
push dword ptr [ebp-40h]  +
mov [ebp-30h] ax +
mov [ebp-16h] eax +
mov [ebp-12h] ax +
lea eax [ebp-30h] +
push offset aD  +
push eax  +
movups oword ptr [ebp-2Eh] xmm0 +
movq qword ptr [ebp-1Eh] xmm0 +
call ds:wsprintfW  +
add esp 0Ch +
cmp word ptr [ebp-30h] 0 +
jnz loc_404433  +
xor ecx ecx +
jmp loc_40444F  +
lea ecx [ebp-30h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_404440  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-5Ch] +
call loc_401E70  +
push offset aErrcode  +
lea ecx [ebp-90h] +
call loc_401D00  +
push ecx  +
mov eax esp +
mov byte ptr [ebp-4] 7 +
mov esi [ebp-44h] +
mov [eax] esi +
test esi esi +
jz loc_404482  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp-5Ch] +
push eax  +
lea eax [ebp-90h] +
push eax  +
lea ecx [ebp-3Ch] +
call sub_412340  +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-7Ch] +
cmp eax 8 +
jb loc_4044B4  +
inc eax  +
lea ecx [ebp-90h] +
push eax  +
push dword ptr [ebp-90h]  +
call loc_4024A0  +
lea eax [ebp-74h] +
push eax  +
lea ecx [ebp-3Ch] +
call sub_412740  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_4044D8  +
mov eax [edi] +
jmp loc_4044DA  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp-74h] +
push eax  +
mov ecx edi +
call sub_4020A0  +
mov eax [ebp-48h] +
cmp eax 8 +
jb loc_4044FF  +
inc eax  +
lea ecx [ebp-5Ch] +
push eax  +
push dword ptr [ebp-5Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-48h] 7 +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-5Ch] ax +
mov byte ptr [ebp-4] 3 +
test esi esi +
jz loc_404521  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov byte ptr [ebp-4] 8 +
jmp loc_4046F3  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-34h] 0 +
movq qword ptr [ebp-3Ch] xmm0 +
mov dword ptr [ebp-38h] 0 +
mov byte ptr [ebp-34h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-40h] 0 +
push offset aOutputResultSu  +
lea ecx [ebp-90h] +
mov byte ptr [ebp-4] 0Bh +
call loc_401D00  +
lea eax [ebp-90h] +
mov byte ptr [ebp-4] 0Ch +
push eax  +
lea ecx [ebp-3Ch] +
call sub_4111F0  +
mov byte ptr [ebp-4] 0Bh +
mov eax [ebp-7Ch] +
cmp eax 8 +
jb loc_404598  +
inc eax  +
lea ecx [ebp-90h] +
push eax  +
push dword ptr [ebp-90h]  +
call loc_4024A0  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-3Ch] +
call loc_411E60  +
xor eax eax +
mov dword ptr [ebp-48h] 7 +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-5Ch] ax +
mov byte ptr [ebp-4] 0Dh +
xorps xmm0 xmm0 +
push dword ptr [ebp-44h]  +
mov [ebp-30h] ax +
mov [ebp-16h] eax +
mov [ebp-12h] ax +
lea eax [ebp-30h] +
push offset aD  +
push eax  +
movups oword ptr [ebp-2Eh] xmm0 +
movq qword ptr [ebp-1Eh] xmm0 +
call ds:wsprintfW  +
add esp 0Ch +
cmp word ptr [ebp-30h] 0 +
jnz loc_4045F3  +
xor ecx ecx +
jmp loc_40460F  +
lea ecx [ebp-30h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_404600  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-5Ch] +
call loc_401E70  +
push offset aRetcode  +
lea ecx [ebp-90h] +
call loc_401D00  +
push ecx  +
mov eax esp +
mov byte ptr [ebp-4] 0Eh +
mov esi [ebp-40h] +
mov [eax] esi +
test esi esi +
jz loc_404642  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp-5Ch] +
push eax  +
lea eax [ebp-90h] +
push eax  +
lea ecx [ebp-3Ch] +
call sub_412340  +
mov byte ptr [ebp-4] 0Dh +
mov eax [ebp-7Ch] +
cmp eax 8 +
jb loc_404674  +
inc eax  +
lea ecx [ebp-90h] +
push eax  +
push dword ptr [ebp-90h]  +
call loc_4024A0  +
lea eax [ebp-74h] +
push eax  +
lea ecx [ebp-3Ch] +
call sub_412740  +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_4046A6  +
mov eax [edi] +
jmp loc_4046A8  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp-74h] +
push eax  +
mov ecx edi +
call sub_4020A0  +
mov eax [ebp-48h] +
cmp eax 8 +
jb loc_4046CD  +
inc eax  +
lea ecx [ebp-5Ch] +
push eax  +
push dword ptr [ebp-5Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-48h] 7 +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-5Ch] ax +
mov byte ptr [ebp-4] 0Ah +
test esi esi +
jz loc_4046EF  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov byte ptr [ebp-4] 0Fh +
mov esi [ebp-38h] +
test esi esi +
jz loc_404708  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_404708  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp-34h] 0 +
jz loc_404714  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40471E  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp-60h] +
cmp eax 8 +
jb loc_404733  +
inc eax  +
push eax  +
push dword ptr [ebp-74h]  +
lea ecx [ebp-74h] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_475B10  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_0] +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
cmp [edx] ax +
jnz loc_4047AA  +
xor ecx ecx +
jmp loc_4047BF  +
mov ecx edx +
lea esi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4047B0  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_40] +
call loc_401E70  +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
push eax  +
push offset word_4873C8  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 1 +
call loc_401E70  +
lea edx [ebp+var_28] +
lea ecx [ebp+var_40] +
call loc_41E920  +
cmp [ebp+var_18] 0 +
jbe loc_40482F  +
lea ecx [ebp+var_28] +
call sub_40E0D0  +
test al al +
jnz loc_40488E  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aAdobeupdates_2  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
xor bl bl +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_404846  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
mov ecx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
cmp ecx 8 +
jb loc_40486F  +
inc ecx  +
push ecx  +
push [ebp+var_40]  +
lea ecx [ebp+var_40] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
mov bl 1 +
jmp loc_404831  +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_4048AC  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475B52  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov byte ptr [edi] 1 +
mov dword ptr [edi+4] 1 +
call sub_405730  +
mov [edi+8] eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_404929  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword_4A2908 eax +
mov [edi+0Ch] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475B88  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi] 0 +
mov dword ptr [ebp-14h] 0 +
jz loc_404B8B  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
add esp 0Ch +
push edi  +
push offset nullsub_1  +
push 36EE80h  +
push ecx  +
mov ecx [edi+0Ch] +
lea ebx [edi+10h] +
push ebx  +
push 2  +
call loc_413250  +
test eax eax +
jz loc_404A1D  +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_4049E6  +
mov eax [edi] +
push offset aProblemIniti_0  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
add esp 0Ch +
mov eax [esi+0Ch] +
add eax 4 +
push offset aFailedToCrea_1  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
add esp 0Ch +
mov dword ptr [esi+4] 0 +
push 7530h  +
call ds:Sleep  +
mov ebx large fs:2Ch +
jmp loc_404AEB  +
cmp dword ptr [ebx+14h] 8 +
jb loc_404A25  +
mov ebx [ebx] +
mov eax [edi] +
push ebx  +
push offset aSuccessInitial  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
mov ebx large fs:2Ch +
add esp 0Ch +
mov eax dword_4A3A78 +
mov ecx [ebx] +
cmp eax [ecx+4] +
jle loc_404AA0  +
push offset dword_4A3A78  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A78 0FFFFFFFFh +
jnz loc_404AA0  +
push 40h  +
push 0  +
push offset dword_4A3A38  +
mov dword ptr [ebp-4] 0 +
call sub_453150  +
add esp 0Ch +
call sub_405440  +
push offset loc_47ADB0  +
call sub_450116  +
add esp 4 +
mov dword ptr [ebp-4] 0FFFFFFFFh +
push offset dword_4A3A78  +
call sub_450220  +
add esp 4 +
mov ecx offset dword_4A3A38 +
call sub_405F30  +
test al al +
mov eax [esi+0Ch] +
jz loc_404AD2  +
add eax 4 +
mov dword ptr [esi+4] 1 +
push offset aSuccessfullyIn  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
add esp 8 +
mov dword ptr [ebp-14h] 1 +
jmp loc_404AF5  +
mov ecx [eax+4] +
add eax 4 +
push offset aFailedToInitia  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
mov dword ptr [esi+4] 0 +
cmp dword ptr [ebp-14h] 0 +
jz loc_404B82  +
mov eax [esi+0Ch] +
add eax 4 +
push offset aCommunicationI  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
mov ecx [ebx] +
add esp 8 +
mov eax dword_4A3A78 +
cmp eax [ecx+4] +
jle loc_404B6C  +
push offset dword_4A3A78  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A78 0FFFFFFFFh +
jnz loc_404B6C  +
push 40h  +
push 0  +
push offset dword_4A3A38  +
mov dword ptr [ebp-4] 1 +
call sub_453150  +
add esp 0Ch +
call sub_405440  +
push offset loc_47ADB0  +
call sub_450116  +
add esp 4 +
mov dword ptr [ebp-4] 0FFFFFFFFh +
push offset dword_4A3A78  +
call sub_450220  +
add esp 4 +
mov ecx dword_4A3A44 +
call sub_413A80  +
push 3E8h  +
call ds:Sleep  +
cmp byte ptr [esi] 0 +
jnz near ptr dword_40497C+4  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_404BC6  +
mov eax [esi+40h] +
push offset aReaddatacallba  +
push eax  +
mov edx [eax] +
call dword ptr [edx+4]  +
mov ecx [esi+44h] +
add esp 8 +
pop esi  +
pop ebp  +
jmp sub_4109A0  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475BEF  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov [ebp+var_14] edi +
mov [ebp+var_4] 0 +
lea ecx [edi+8] +
mov dword ptr [edi+4] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_404C28  +
mov eax [ecx] +
jmp loc_404C2A  +
mov eax ecx +
xor edx edx +
mov [eax] dx +
lea eax [edi+28h] +
mov byte ptr [edi+20h] 1 +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] edx +
cmp dword ptr [eax+14h] 8 +
jb loc_404C48  +
mov eax [eax] +
xor edx edx +
mov [eax] dx +
lea eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 2 +
mov [edi+44h] edx +
cmp ecx eax +
jz loc_404C64  +
push 0FFFFFFFFh  +
push edx  +
push eax  +
call loc_402610  +
push 78h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 78h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 3 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_4130D0  +
mov byte ptr [ebp+var_4] 2 +
mov [edi+24h] eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_404CCD  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 4 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword_4A2908 eax +
mov ecx [ebp+arg_14] +
add eax 4 +
mov [edi+40h] eax +
cmp ecx 8 +
jb loc_404CE8  +
inc ecx  +
push ecx  +
push [ebp+arg_0]  +
lea ecx [ebp+arg_0] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_475C10  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [edi+44h] +
mov byte ptr [edi+20h] 0 +
call sub_4109A0  +
mov esi [edi+24h] +
test esi esi +
jz loc_404D52  +
mov ecx esi +
call sub_4131E0  +
push 78h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov dword ptr [edi+24h] 0 +
mov eax [edi+3Ch] +
lea esi [edi+28h] +
cmp eax 8 +
jb loc_404D68  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_404D7E  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov eax [edi+1Ch] +
cmp eax 8 +
jb loc_404D98  +
inc eax  +
lea ecx [edi+8] +
push eax  +
push dword ptr [edi+8]  +
call loc_4024A0  +
mov dword ptr [edi+1Ch] 7 +
mov dword ptr [edi+18h] 0 +
cmp dword ptr [edi+1Ch] 8 +
jb loc_404DC5  +
mov eax [edi+8] +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov [edi+8] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
cmp dword ptr [edi+1Ch] 8 +
lea esi [edi+8] +
jb loc_404DF2  +
mov edx [esi] +
jmp loc_404DF4  +
mov edx esi +
mov eax [edi+40h] +
push edx  +
push offset aInitializingCo  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
add esp 0Ch +
push 64h  +
call ds:Sleep  +
push edi  +
push offset sub_404BA0  +
push 927C0h  +
push ecx  +
mov ecx [edi+24h] +
push esi  +
push 3  +
call loc_413250  +
test eax eax +
jz loc_404E65  +
mov ecx [edi+40h] +
push eax  +
push offset aProblemInitial  +
push offset word_4873C8  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+24h]  +
add esp 10h +
cmp dword ptr [esi+14h] 8 +
jb loc_404E48  +
mov esi [esi] +
mov eax [edi+40h] +
push esi  +
push offset aCreateipcchann  +
push offset word_4873C8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
add esp 10h +
xor al al +
pop edi  +
pop esi  +
pop ecx  +
retn   +
pop edi  +
mov al 1 +
pop esi  +
pop ecx  +
retn   +
***
sub esp 8 +
push 0  +
call ds:CoInitialize  +
mov ecx [ebp+arg_0] +
call loc_404F50  +
call ds:CoUninitialize  +
xor eax eax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475C38  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi+40h] +
push offset aInsideCommunic  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
add esp 0Ch +
call sub_410900  +
mov [esi+44h] eax +
mov byte ptr [esi+20h] 1 +
cmp byte ptr [esi+20h] 0 +
jz loc_405130  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call loc_401E70  +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-34h] +
mov edi [esi+24h] +
push eax  +
lea ecx [edi+44h] +
call sub_41EBF0  +
test al al +
jnz loc_405030  +
cmp [edi+39h] al +
jz loc_4050BB  +
push 0  +
push offset word_4873C8  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-34h] 0FFFFh +
mov dword ptr [ebp-30h] 0FFFFh +
mov dword ptr [ebp-2Ch] 0 +
call loc_401E70  +
jmp loc_405069  +
push offset aTerminateChann  +
lea ecx [ebp-28h] +
call loc_4053B0  +
test eax eax +
jz loc_4050EA  +
push offset aPipeIsClosedOn  +
lea ecx [ebp-28h] +
call loc_4053B0  +
test eax eax +
jz loc_4050EA  +
lea eax [ebp-34h] +
mov ecx esi +
push eax  +
call sub_4051C0  +
test al al +
jz loc_4050D5  +
mov ecx [esi+44h] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_410A00  +
add esp 8 +
cmp eax 2 +
jnz loc_405093  +
mov eax [esi+40h] +
push offset aFailureInWaitf  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_4050AF  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
cmp byte ptr [esi+20h] 0 +
jnz loc_404FB0  +
jmp loc_405130  +
mov eax [esi+40h] +
push 0FFFFFFFCh  +
push offset aFailedToReadpa  +
push offset word_4873C8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
add esp 10h +
jmp loc_405104  +
mov eax [esi+40h] +
push offset aHandleipcpacke  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
jmp loc_405101  +
mov eax [esi+40h] +
push offset aListenipcpacke  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
mov byte ptr [esi+20h] 0 +
add esp 0Ch +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_405120  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-18h] eax +
mov [ebp-28h] ax +
mov eax [esi+40h] +
push offset aClosingIpcChan  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
mov ecx [esi+24h] +
add esp 8 +
call sub_413A80  +
mov ecx [esi+44h] +
call sub_410AB0  +
mov dword ptr [esi+44h] 0 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+20h] +
push esi  +
lea esi [ecx+0Ch] +
cmp eax 8 +
jb loc_405197  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4051B4  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475C68  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_4051F1  +
mov edx [esi] +
jmp loc_4051F3  +
mov edx esi +
mov eax [ecx+40h] +
push edx  +
push offset aReceivedIpcPac  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
sub esp 0Ch +
mov ecx esp +
mov [ebp+var_10] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_405222  +
mov eax [ecx] +
jmp loc_405224  +
mov eax ecx +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push esi  +
mov [eax] dx +
call loc_402610  +
mov [ebp+var_4] 0 +
cmp dword_4A290C 0 +
jnz loc_405254  +
push 1  +
call sub_44FE54  +
mov [ebp+var_10] eax +
add esp 4 +
mov dword_4A290C eax +
mov eax [ebp+arg_0] +
add eax 0Ch +
mov [ebp+var_4] 0FFFFFFFFh +
push eax  +
call sub_4084A0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_475C98  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+14h] 8 +
jb loc_4052BA  +
mov ebx [esi] +
jmp loc_4052BC  +
mov ebx esi +
cmp dword ptr [edi+1Ch] 8 +
lea edx [edi+8] +
jb loc_4052C7  +
mov edx [edx] +
mov eax [edi+40h] +
push ebx  +
push edx  +
push offset aWritePacketOnG  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
add esp 10h +
mov [ebp+var_14] 7 +
xor eax eax +
mov [ebp+var_18] 0 +
lea ecx [ebp+var_28] +
mov word ptr [ebp+var_28] ax +
push eax  +
push offset word_4873C8  +
call loc_401E70  +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
cmp eax esi +
jz loc_40532B  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx eax +
call loc_402610  +
mov eax [esi+10h] +
mov ecx [edi+24h] +
mov [ebp+var_34] 0Eh +
mov [ebp+var_30] 0FFFFh +
lea eax ds:2[eax*2] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_34] +
push eax  +
call sub_4138A0  +
test eax eax +
jns loc_405371  +
mov ecx [edi+40h] +
push eax  +
push offset aErrorSendingIp  +
push offset word_4873C8  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+24h]  +
add esp 10h +
xor bl bl +
jmp loc_405373  +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_405388  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
cmp word ptr [esi] 0 +
jnz loc_4053C3  +
xor edx edx +
jmp loc_4053DF  +
mov edx esi +
lea edi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_4053D0  +
sub edx edi +
sar edx 1 +
cmp dword ptr [ecx+14h] 8 +
lea ebx [ecx+10h] +
jb loc_4053EA  +
mov ecx [ecx] +
mov ebx [ebx] +
mov edi edx +
cmp ebx edx +
cmovb edi ebx +
test edi edi +
jnz loc_405410  +
xor eax eax +
test eax eax +
jnz loc_405435  +
cmp edx ebx +
jbe loc_405431  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ax [ecx] +
cmp ax [esi] +
jnz loc_405423  +
add ecx 2 +
add esi 2 +
sub edi 1 +
jmp loc_4053F5  +
***
movzx eax word ptr [ecx] +
cmp ax [esi] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_4053F9  +
***
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_475D02  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] offset dword_4A3A38 +
mov dword_4A3A3C 0 +
mov dword_4A3A40 0 +
call sub_4067C0  +
mov dword_4A3A3C eax +
mov [ebp+var_4] 0 +
xor eax eax +
push 20h  +
push offset aF7c71944b49b44  +
mov ecx offset dword_4A3A48 +
mov dword_4A3A5C 7 +
mov dword_4A3A58 0 +
mov word ptr dword_4A3A48 ax +
call loc_401E70  +
xor eax eax +
mov dword_4A3A74 7 +
mov dword_4A3A70 0 +
mov word ptr dword_4A3A60 ax +
push 78h  +
mov byte ptr [ebp+var_4] 2 +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
push 78h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 3 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_4130D0  +
mov byte ptr [ebp+var_4] 2 +
mov dword_4A3A44 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_40554A  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 4 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword_4A2908 eax +
add eax 4 +
mov dword_4A3A38 eax +
mov eax offset dword_4A3A38 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_4062B0  +
push dword ptr [esi]  +
call sub_44FE87  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475D26  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax dword_4A3A38 +
push offset aInsideIpcwrapp  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
mov esi dword_4A3A44 +
add esp 8 +
test esi esi +
jz loc_405603  +
mov ecx esi +
call sub_4131E0  +
push 78h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov dword_4A3A44 0 +
mov edi dword_4A3A3C +
mov eax [edi] +
mov [ebp-14h] eax +
cmp eax edi +
jz loc_405640  +
mov esi [eax+28h] +
test esi esi +
jz loc_405631  +
mov ecx esi +
call sub_404D00  +
push 48h  +
push esi  +
call sub_44FE8C  +
mov edi dword_4A3A3C +
add esp 8 +
lea ecx [ebp-14h] +
call loc_406360  +
mov eax [ebp-14h] +
cmp eax edi +
jnz loc_405612  +
mov dword ptr [ebp-4] 0 +
mov ecx offset dword_4A3A3C +
push dword ptr [edi+4]  +
call loc_4061C0  +
mov eax dword_4A3A3C +
mov [eax+4] eax +
mov eax dword_4A3A3C +
mov [eax] eax +
mov eax dword_4A3A3C +
mov [eax+8] eax +
mov eax dword_4A3A74 +
mov dword_4A3A40 0 +
cmp eax 8 +
jb loc_405691  +
inc eax  +
mov ecx offset dword_4A3A60 +
push eax  +
push dword_4A3A60  +
call loc_4024A0  +
xor eax eax +
mov dword_4A3A74 7 +
mov word ptr dword_4A3A60 ax +
mov eax dword_4A3A5C +
mov dword_4A3A70 0 +
cmp eax 8 +
jb loc_4056C9  +
inc eax  +
mov ecx offset dword_4A3A48 +
push eax  +
push dword_4A3A48  +
call loc_4024A0  +
xor eax eax +
mov dword_4A3A5C 7 +
mov word ptr dword_4A3A48 ax +
mov ecx offset dword_4A3A3C +
mov eax dword_4A3A3C +
push eax  +
mov dword_4A3A58 0 +
push dword ptr [eax]  +
lea eax [ebp-14h] +
push eax  +
call loc_4062B0  +
push dword_4A3A3C  +
call sub_44FE87  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475D5C  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3A78 +
cmp eax [ecx+4] +
jle loc_4057B4  +
push offset dword_4A3A78  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A78 0FFFFFFFFh +
jnz loc_4057B4  +
push 40h  +
push 0  +
push offset dword_4A3A38  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
call sub_405440  +
push offset loc_47ADB0  +
call sub_450116  +
add esp 4 +
push offset dword_4A3A78  +
call sub_450220  +
add esp 4 +
mov eax offset dword_4A3A38 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475C98  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_28] +
xor eax eax +
mov [ebp+var_14] 7 +
push eax  +
push offset word_4873C8  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_401E70  +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
cmp eax esi +
jz loc_405851  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx eax +
call loc_402610  +
mov eax [esi+10h] +
mov ecx [edi+0Ch] +
mov [ebp+var_34] 0Eh +
mov [ebp+var_30] 0FFFFh +
lea eax ds:2[eax*2] +
mov [ebp+var_2C] eax +
lea eax [ebp+var_34] +
push eax  +
call sub_4138A0  +
test eax eax +
jns loc_405896  +
mov ecx [edi] +
push eax  +
push offset aErrorSendingIp  +
push offset word_4873C8  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+24h]  +
add esp 10h +
xor bl bl +
jmp loc_405898  +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_4058AD  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_475E24  +
mov eax large fs:0 +
push eax  +
sub esp 9Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_A4] ebx +
push 0  +
call ds:CoInitialize  +
xorps xmm0 xmm0 +
mov [ebp+var_18] 0 +
movq [ebp+var_20] xmm0 +
mov dword ptr [ebp+var_20+4] 0 +
mov byte ptr [ebp+var_18] 0 +
mov dword ptr [ebp+var_20] 0 +
mov [ebp+var_4] 1 +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_88] +
push 0Ah  +
xor eax eax +
mov [ebp+var_74] 7 +
push offset aMessage  +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
call loc_401E70  +
lea eax [ebp+var_88] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
lea ecx [ebp+var_20] +
call sub_4111F0  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_40599C  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_4024A0  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_20] +
call loc_411E60  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+lpWideCharStr] ax +
lea ecx [ebp+lpWideCharStr] +
mov byte ptr [ebp+var_4] 4 +
call sub_414680  +
lea ecx [ebx+28h] +
lea eax [ebp+lpWideCharStr] +
cmp ecx eax +
jz loc_4059DC  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402610  +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+lpWideCharStr] +
cmp [ebp+var_44] 8 +
lea edx [ebp+var_3C] +
cmovnb ecx [ebp+lpWideCharStr] +
push ecx  +
call sub_414310  +
sub esp 14h +
mov ecx esp +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_405A23  +
mov eax [ecx] +
jmp loc_405A25  +
mov eax ecx +
push 0FFFFFFFFh  +
mov byte ptr [eax] 0 +
lea eax [ebp+var_3C] +
push 0  +
push eax  +
call loc_402270  +
sub esp 18h +
lea eax [ebp+var_A0] +
push eax  +
call sub_4035D0  +
mov esi eax +
lea eax [ebp+var_3C] +
cmp eax esi +
jz loc_405A7D  +
mov eax [ebp+var_28] +
cmp eax 10h +
jb loc_405A62  +
inc eax  +
lea ecx [ebp+var_3C] +
push eax  +
push [ebp+var_3C]  +
call loc_402500  +
push esi  +
lea ecx [ebp+var_3C] +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
call sub_406240  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_8C] +
cmp eax 10h +
jb loc_405A9F  +
inc eax  +
lea ecx [ebp+var_A0] +
push eax  +
push [ebp+var_A0]  +
call loc_402500  +
cmp [ebp+var_28] 10h +
lea ecx [ebp+var_3C] +
lea edx [ebp+lpWideCharStr] +
cmovnb ecx [ebp+var_3C] +
push ecx  +
call loc_414490  +
add esp 4 +
mov [ebp+var_24] 0 +
xor eax eax +
mov byte ptr [ebp+var_4] 7 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp+var_A0] +
mov [ebp+var_8C] 7 +
mov [ebp+var_90] 0 +
mov word ptr [ebp+var_A0] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_88] +
push 6  +
xor eax eax +
mov [ebp+var_74] 7 +
push offset aOutput  +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov byte ptr [ebp+var_4] 9 +
mov edi [ebp+var_40] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] edi +
test edi edi +
jz loc_405B36  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
lea eax [ebp+var_A0] +
push eax  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_20] +
call sub_411F30  +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_405B67  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_4024A0  +
xor eax eax +
mov byte ptr [ebp+var_4] 7 +
mov word ptr [ebp+var_88] ax +
mov eax [ebp+var_8C] +
mov [ebp+var_74] 7 +
mov [ebp+var_78] 0 +
cmp eax 8 +
jb loc_405BA0  +
inc eax  +
lea ecx [ebp+var_A0] +
push eax  +
push [ebp+var_A0]  +
call loc_4024A0  +
push 9  +
xor eax eax +
mov [ebp+var_8C] 7 +
push offset aInit_comm  +
lea ecx [ebp+var_A0] +
mov [ebp+var_90] 0 +
mov word ptr [ebp+var_A0] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 0Ah +
lea ecx [ebp+var_88] +
push 0Ah  +
xor eax eax +
mov [ebp+var_74] 7 +
push offset aActiontype  +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
call loc_401E70  +
push ecx  +
mov eax esp +
mov byte ptr [ebp+var_4] 0Bh +
mov esi [ebp+var_24] +
mov [eax] esi +
test esi esi +
jz loc_405C12  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp+var_A0] +
push eax  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_20] +
call sub_412340  +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_405C43  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_74] 7 +
mov word ptr [ebp+var_88] ax +
mov eax [ebp+var_8C] +
mov [ebp+var_78] 0 +
cmp eax 8 +
jb loc_405C78  +
inc eax  +
lea ecx [ebp+var_A0] +
push eax  +
push [ebp+var_A0]  +
call loc_4024A0  +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_4] 0Ch +
lea ecx [ebp+var_A0] +
push 7  +
xor eax eax +
mov [ebp+var_8C] 7 +
push offset aSuccess  +
mov [ebp+var_90] 0 +
mov word ptr [ebp+var_A0] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_88] +
push 6  +
xor eax eax +
mov [ebp+var_74] 7 +
push offset aResult  +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 0Eh +
lea eax [ebp+var_14] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_405CF6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp+var_A0] +
push eax  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_20] +
call sub_411F30  +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_405D27  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_4024A0  +
xor eax eax +
mov byte ptr [ebp+var_4] 0Ch +
mov word ptr [ebp+var_88] ax +
mov eax [ebp+var_8C] +
mov [ebp+var_74] 7 +
mov [ebp+var_78] 0 +
cmp eax 8 +
jb loc_405D60  +
inc eax  +
lea ecx [ebp+var_A0] +
push eax  +
push [ebp+var_A0]  +
call loc_4024A0  +
push 7  +
xor eax eax +
mov [ebp+var_8C] 7 +
push offset aRetcode  +
lea ecx [ebp+var_A0] +
mov [ebp+var_90] 0 +
mov word ptr [ebp+var_A0] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 0Fh +
lea eax [ebp+var_14] +
push eax  +
push ecx  +
mov eax esp +
mov [eax] esi +
test esi esi +
jz loc_405DA6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp+lpWideCharStr] +
push eax  +
lea eax [ebp+var_A0] +
push eax  +
lea ecx [ebp+var_20] +
call sub_411F30  +
mov eax [ebp+var_8C] +
cmp eax 8 +
jb loc_405DD7  +
inc eax  +
lea ecx [ebp+var_A0] +
push eax  +
push [ebp+var_A0]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_5C] 7 +
mov [ebp+var_60] 0 +
mov word ptr [ebp+var_70] ax +
lea eax [ebp+var_70] +
mov byte ptr [ebp+var_4] 10h +
push eax  +
lea ecx [ebp+var_20] +
call sub_412740  +
lea eax [ebp+var_70] +
mov ecx ebx +
push eax  +
call sub_4057D0  +
mov bl al +
test bl bl +
jz loc_405E2E  +
mov ecx [ebp+var_A4] +
lea edx [ebp+var_70] +
cmp [ebp+var_5C] 8 +
cmovnb edx [ebp+var_70] +
mov ecx [ecx] +
push edx  +
push offset aSentIpcPacketT  +
push ecx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
add esp 0Ch +
mov eax [ebp+var_5C] +
cmp eax 8 +
jb loc_405E43  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_4024A0  +
xor eax eax +
mov byte ptr [ebp+var_4] 7 +
mov word ptr [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov [ebp+var_5C] 7 +
mov [ebp+var_60] 0 +
test eax eax +
jz loc_405E68  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov byte ptr [ebp+var_4] 5 +
test esi esi +
jz loc_405E76  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_28] +
cmp eax 10h +
jb loc_405E8B  +
inc eax  +
lea ecx [ebp+var_3C] +
push eax  +
push [ebp+var_3C]  +
call loc_402500  +
mov eax [ebp+var_44] +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
cmp eax 8 +
jb loc_405EB2  +
inc eax  +
lea ecx [ebp+lpWideCharStr] +
push eax  +
push [ebp+lpWideCharStr]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+lpWideCharStr] ax +
mov byte ptr [ebp+var_4] 1 +
test edi edi +
jz loc_405ED4  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov [ebp+var_4] 11h +
mov esi dword ptr [ebp+var_20+4] +
test esi esi +
jz loc_405EF0  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_405EF0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp+var_18] 0 +
jz loc_405EFC  +
call ds:CoUninitialize  +
test esi esi +
jz loc_405F06  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475E5F  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_4058D0  +
test al al +
jz loc_406021  +
mov eax [esi] +
push offset aSentCommunnica  +
push eax  +
mov edx [eax] +
call dword ptr [edx+14h]  +
push 48h  +
call sub_44FE54  +
mov edi eax +
add esp 0Ch +
mov [ebp+var_10] edi +
push 48h  +
push 0  +
push edi  +
mov [ebp+var_4] 0 +
call sub_453150  +
sub esp 0Ch +
lea ebx [esi+28h] +
mov ecx esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_405FB4  +
mov eax [ecx] +
jmp loc_405FB6  +
mov eax ecx +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ebx  +
mov [eax] dx +
call loc_402610  +
mov ecx edi +
call sub_404BD0  +
mov edi eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx edi +
call sub_404DE0  +
test al al +
jnz loc_405FF3  +
mov ecx [esi] +
push offset aFailedInInitia  +
push offset word_4873C8  +
push ecx  +
mov edx [ecx] +
call dword ptr [edx+24h]  +
jmp loc_40604F  +
mov ecx edi +
call sub_404E70  +
test al al +
jz loc_406035  +
mov eax [esi] +
push offset aSuccessfullyCr  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+14h]  +
add esp 8 +
lea eax [ebp+var_18] +
lea ecx [esi+4] +
push ebx  +
push eax  +
call loc_406E30  +
mov eax [ebp+var_18] +
mov [eax+28h] edi +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [esi+0Ch] +
call sub_413A80  +
mov eax [esi] +
push offset aFailedInCreati  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
add esp 0Ch +
test edi edi +
jz loc_406068  +
mov ecx edi +
call sub_404D00  +
push 48h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax [esi] +
push offset aFailedToSentCo  +
push offset word_4873C8  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+24h]  +
mov ecx [esi+0Ch] +
add esp 0Ch +
call sub_413A80  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475E88  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_10] eax +
mov ecx [ebp+arg_0] +
mov [ebp+var_14] ecx +
mov [ebp+var_4] 0 +
mov esi [eax+4] +
mov ebx esi +
mov edi [esi+4] +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_406107  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [edi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_4060FD  +
mov edi [edi+8] +
jmp loc_406101  +
mov ebx edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_4060E8  +
cmp ebx esi +
jz loc_40611B  +
lea eax [ebx+10h] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_4067F0  +
test eax eax +
jns loc_40611D  +
mov ebx esi +
mov esi [ebp+var_10] +
cmp ebx [esi+4] +
lea ecx [esi+4] +
jz loc_40616C  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call loc_406E30  +
mov eax [ebp+var_1C] +
mov edi [eax+28h] +
test edi edi +
jz loc_40616C  +
mov eax [ebp+var_10] +
lea esi [ebp+arg_4] +
cmp [ebp+arg_18] 8 +
cmovnb esi [ebp+arg_4] +
mov eax [eax] +
push esi  +
push offset aSendmessagetoc  +
push eax  +
mov edx [eax] +
call dword ptr [edx+14h]  +
add esp 0Ch +
mov ecx edi +
push [ebp+var_14]  +
call sub_405280  +
mov bl al +
jmp loc_40618A  +
cmp [ebp+arg_18] 8 +
lea edx [ebp+arg_4] +
mov eax [esi] +
cmovnb edx [ebp+arg_4] +
push edx  +
push offset aSendmessaget_0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
xor bl bl +
mov eax [ebp+arg_18] +
cmp eax 8 +
jb loc_40619F  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
mov eax ecx +
push edi  +
mov [ebp-4] eax +
mov edi ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_406232  +
push esi  +
push dword ptr [edi+8]  +
mov ecx eax +
call loc_4061C0  +
mov eax [ebx+24h] +
lea esi [ebx+10h] +
mov edi [edi] +
cmp eax 8 +
jb loc_406202  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_406218  +
mov esi [esi] +
xor eax eax +
push ebx  +
mov [esi] ax +
call sub_44FE87  +
mov eax [ebp-4] +
add esp 4 +
cmp byte ptr [edi+0Dh] 0 +
mov ebx edi +
jz loc_4061E0  +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jnb loc_406265  +
mov eax [esi+10h] +
add eax 1 +
jz loc_406273  +
push eax  +
push esi  +
push edi  +
call loc_450F90  +
add esp 0Ch +
jmp loc_406273  +
test edi edi +
jz loc_40626D  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40629E  +
mov eax [esi] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 4  +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475EB6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov edx [edi] +
mov esi [ebp+0Ch] +
mov ebx [ebp+8] +
mov eax [ebp+10h] +
cmp esi [edx] +
jnz loc_406317  +
cmp eax edx +
jnz loc_406317  +
mov dword ptr [ebp-4] 0 +
push dword ptr [edx+4]  +
call loc_4061C0  +
mov ecx [edi] +
mov [ecx+4] ecx +
mov ecx [edi] +
mov [ecx] ecx +
mov ecx [edi] +
mov [ecx+8] ecx +
mov dword ptr [edi+4] 0 +
mov ecx [edi] +
mov ecx [ecx] +
mov [ebx] ecx +
jmp loc_40633E  +
cmp esi eax +
jz loc_40633C  +
lea ecx [ebp+0Ch] +
call loc_406360  +
push esi  +
lea eax [ebp-10h] +
mov ecx edi +
push eax  +
call sub_4063B0  +
mov esi [ebp+0Ch] +
cmp esi [ebp+10h] +
jnz loc_406320  +
mov [ebx] esi +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4063AC  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40638F  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40638A  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_406380  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4063AA  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_4063AA  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_406398  +
mov [edx] eax +
mov eax edx +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov ebx ecx +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
lea ecx [ebp+arg_4] +
push edi  +
mov [ebp+var_4] eax +
call loc_406360  +
mov ecx [ebp+var_4] +
mov edx [ecx] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_4063DF  +
mov esi [ecx+8] +
jmp loc_4063FA  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4063EC  +
mov esi edx +
jmp loc_4063FA  +
mov edi [ebp+arg_4] +
mov esi [edi+8] +
cmp edi ecx +
jnz loc_406483  +
cmp byte ptr [esi+0Dh] 0 +
mov edx [ecx+4] +
jnz loc_406406  +
mov [esi+4] edx +
mov eax [ebx] +
cmp [eax+4] ecx +
jnz loc_406412  +
mov [eax+4] esi +
jmp loc_40641D  +
cmp [edx] ecx +
jnz loc_40641A  +
mov [edx] esi +
jmp loc_40641D  +
mov [edx+8] esi +
mov edi [ebx] +
cmp [edi] ecx +
jnz loc_406446  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_40642D  +
mov ecx edx +
jmp loc_406441  +
mov eax [esi] +
mov ecx esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406441  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_406437  +
mov [edi] ecx +
mov ecx [ebp+var_4] +
mov edi [ebx] +
cmp [edi+8] ecx +
jnz loc_4064E1  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_406464  +
mov ecx edx +
mov [edi+8] ecx +
mov ecx [ebp+var_4] +
jmp loc_4064E1  +
mov eax [esi+8] +
mov ecx esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40647B  +
nop   +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_406470  +
mov [edi+8] ecx +
mov ecx [ebp+var_4] +
jmp loc_4064E1  +
mov [edx+4] edi +
mov eax [ecx] +
mov [edi] eax +
cmp edi [ecx+8] +
jnz loc_406493  +
mov edx edi +
jmp loc_4064AD  +
cmp byte ptr [esi+0Dh] 0 +
mov edx [edi+4] +
jnz loc_40649F  +
mov [esi+4] edx +
mov [edx] esi +
mov eax [ecx+8] +
mov [edi+8] eax +
mov eax [ecx+8] +
mov [eax+4] edi +
mov eax [ebx] +
cmp [eax+4] ecx +
jnz loc_4064B9  +
mov [eax+4] edi +
jmp loc_4064C7  +
mov eax [ecx+4] +
cmp [eax] ecx +
jnz loc_4064C4  +
mov [eax] edi +
jmp loc_4064C7  +
mov [eax+8] edi +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebp+var_4] +
mov cl [edi+0Ch] +
mov al [eax+0Ch] +
mov [edi+0Ch] al +
mov eax [ebp+var_4] +
mov [eax+0Ch] cl +
mov ecx eax +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_406745  +
mov eax [ebx] +
cmp esi [eax+4] +
jz loc_406741  +
cmp byte ptr [esi+0Ch] 1 +
jnz loc_40673E  +
mov ecx [edx] +
cmp esi ecx +
jnz loc_4065B8  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_406556  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40652E  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_406540  +
mov [eax+4] ecx +
jmp loc_40654E  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40654B  +
mov [eax] ecx +
jmp loc_40654E  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_406625  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_406575  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_406621  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_406652  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov edi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edi+8] +
mov [ecx] eax +
mov eax [edi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40659F  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_40663A  +
mov [eax+4] edi +
jmp loc_406649  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_406602  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4065D9  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_4065EB  +
mov [eax+4] ecx +
jmp loc_4065FA  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4065F8  +
mov [eax+8] ecx +
jmp loc_4065FA  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_406625  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4066A7  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4066A7  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [ebx] +
mov esi edx +
mov edx [edx+4] +
cmp esi [eax+4] +
jnz loc_4064F6  +
jmp loc_40673E  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_406647  +
mov [eax+8] edi +
jmp loc_406649  +
mov [eax] edi +
mov [edi+8] ecx +
mov [ecx+4] edi +
mov ecx [edx+8] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406676  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_40668D  +
mov [eax+4] ecx +
mov [ecx] edx +
jmp loc_40673B  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40669D  +
mov [eax] ecx +
mov [ecx] edx +
jmp loc_40673B  +
mov [eax+8] ecx +
mov [ecx] edx +
jmp loc_40673B  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4066F4  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov edi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edi] +
mov [ecx+8] eax +
mov eax [edi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4066CD  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_4066DF  +
mov [eax+4] edi +
jmp loc_4066ED  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_4066EA  +
mov [eax] edi +
jmp loc_4066ED  +
mov [eax+8] edi +
mov [edi] ecx +
mov [ecx+4] edi +
mov ecx [edx] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406717  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_406729  +
mov [eax+4] ecx +
jmp loc_406738  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_406736  +
mov [eax+8] ecx +
jmp loc_406738  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [ebp+var_4] +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx+24h] +
lea esi [ecx+10h] +
cmp eax 8 +
jb loc_40675E  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov ecx [ebp+var_4] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_406774  +
mov esi [esi] +
xor eax eax +
push ecx  +
mov [esi] ax +
call sub_44FE87  +
mov ecx [ebx+4] +
add esp 4 +
test ecx ecx +
jz loc_40679E  +
mov eax [ebp+var_8] +
dec ecx  +
pop edi  +
mov [ebx+4] ecx +
mov ecx [ebp+arg_4] +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+var_8] +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz sub_45B2CA  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_4067DD  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_4067E6  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
mov edx [ebp+arg_0] +
push ebx  +
push edi  +
cmp dword ptr [edx+14h] 8 +
lea edi [edx+10h] +
jb loc_406803  +
mov edx [edx] +
cmp dword ptr [ecx+14h] 8 +
lea ebx [ecx+10h] +
jb loc_40680E  +
mov ecx [ecx] +
mov edi [edi] +
mov ebx [ebx] +
cmp ebx edi +
push esi  +
mov esi edi +
cmovb esi ebx +
test esi esi +
jnz loc_406832  +
xor eax eax +
pop esi  +
test eax eax +
jnz loc_406857  +
cmp edi ebx +
jbe loc_406853  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_406845  +
add ecx 2 +
add edx 2 +
sub esi 1 +
jmp loc_40681C  +
movzx eax word ptr [ecx] +
cmp ax [edx] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_406820  +
sbb eax eax +
neg eax  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+10h] +
sub esp 8 +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_4068BE  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40687D  +
mov eax [esi] +
jmp loc_40687F  +
mov eax esi +
cmp edx eax +
jb loc_4068BE  +
cmp ecx 10h +
jb loc_40688C  +
mov edi [esi] +
jmp loc_40688E  +
mov edi esi +
mov eax [esi+10h] +
add eax edi +
cmp eax edx +
jbe loc_4068BE  +
cmp ecx 10h +
jb loc_4068A0  +
mov eax [esi] +
jmp loc_4068A2  +
mov eax esi +
push dword ptr [ebp+14h]  +
sub edx eax +
mov ecx esi +
push edx  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_406A50  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov ecx [esi+10h] +
mov eax [ebp+8] +
cmp ecx eax +
jb loc_406A2E  +
mov edx [ebp+14h] +
mov edi ecx +
sub edi eax +
push ebx  +
mov ebx [ebp+0Ch] +
cmp ebx edi +
cmova ebx edi +
or eax 0FFFFFFFFh +
sub ecx ebx +
sub eax edx +
cmp eax ecx +
jbe loc_406A38  +
sub edi ebx +
mov [ebp-8] edi +
cmp edx ebx +
jnb loc_406937  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406903  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_406906  +
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_406912  +
mov eax [esi] +
mov [ebp-4] eax +
jmp loc_406915  +
mov [ebp-4] esi +
test edi edi +
jz loc_406937  +
mov eax [ebp+0Ch] +
add eax [ebp+8] +
add eax ebx +
push edi  +
push eax  +
mov eax [ebp-4] +
add eax [ebp+8] +
add eax edx +
push eax  +
call loc_450F90  +
mov edx [ebp+14h] +
add esp 0Ch +
mov eax [esi+10h] +
mov edi eax +
sub edi ebx +
add edi edx +
test edx edx +
jnz loc_40694C  +
test ebx ebx +
jz loc_406A23  +
cmp edi 0FFFFFFFEh +
ja loc_406A42  +
cmp [esi+14h] edi +
jnb loc_406981  +
push eax  +
push edi  +
mov ecx esi +
call sub_402C20  +
mov edx [ebp+14h] +
test edi edi +
jz loc_406A23  +
cmp ebx edx +
jnb loc_4069E3  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4069AC  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_4069AF  +
test edi edi +
jnz loc_40696E  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40699E  +
mov eax [esi] +
pop ebx  +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_4069BB  +
mov ecx [esi] +
mov [ebp-4] ecx +
jmp loc_4069BE  +
mov [ebp-4] esi +
mov eax [ebp-8] +
test eax eax +
jz loc_4069E3  +
push eax  +
mov eax [ebp+0Ch] +
add eax [ebp+8] +
add eax ebx +
push eax  +
mov eax [ebp-4] +
add eax [ebp+8] +
add eax edx +
push eax  +
call loc_450F90  +
mov edx [ebp+14h] +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_4069ED  +
mov eax [esi] +
jmp loc_4069EF  +
mov eax esi +
test edx edx +
jz loc_406A03  +
add eax [ebp+8] +
push edx  +
push dword ptr [ebp+10h]  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_406A1D  +
mov eax [esi] +
pop ebx  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+10h] +
cmp eax ebx +
jb loc_406DFF  +
mov ecx [ebp+10h] +
mov edi [ecx+10h] +
cmp edi [ebp+14h] +
jb loc_406E09  +
mov edx [ebp+0Ch] +
sub eax ebx +
cmp edx eax +
mov [ebp-4] eax +
cmova edx eax +
sub edi [ebp+14h] +
mov eax [esi+10h] +
mov [ebp-8] edi +
mov edi [ebp+18h] +
cmp edi [ebp-8] +
mov [ebp+0Ch] edx +
cmova edi [ebp-8] +
sub eax edx +
mov [ebp+18h] eax +
or eax 0FFFFFFFFh +
sub eax edi +
cmp eax [ebp+18h] +
jbe loc_406E13  +
mov ebx [ebp+18h] +
mov eax [ebp-4] +
add ebx edi +
sub eax edx +
mov [ebp+18h] ebx +
cmp [esi+10h] ebx +
mov ebx [ebp+8] +
mov [ebp-4] eax +
jnb loc_406B19  +
cmp dword ptr [ebp+18h] 0FFFFFFFEh +
ja loc_406E1D  +
mov ebx [ebp+18h] +
cmp [esi+14h] ebx +
mov ebx [ebp+8] +
jnb loc_406AF3  +
push dword ptr [esi+10h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
call sub_402C20  +
mov ecx [ebp+10h] +
mov edx [ebp+0Ch] +
mov eax [ebp-4] +
jmp loc_406B19  +
cmp dword ptr [ebp+18h] 0 +
jnz loc_406B19  +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_406B0D  +
mov ebx [esi] +
mov [ebp-8] ebx +
jmp loc_406B10  +
mov [ebp-8] esi +
mov ebx [ebp-8] +
mov byte ptr [ebx] 0 +
mov ebx [ebp+8] +
cmp edi edx +
jnz loc_406B48  +
cmp dword ptr [ecx+14h] 10h +
jb loc_406B25  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 10h +
jb loc_406B2F  +
mov edx [esi] +
jmp loc_406B31  +
mov edx esi +
test edi edi +
jz loc_406DD3  +
mov eax [ebp+14h] +
add eax ecx +
push edi  +
push eax  +
lea eax [edx+ebx] +
jmp loc_406DCA  +
cmp esi ecx +
jz loc_406BC3  +
cmp dword ptr [esi+14h] 10h +
jb loc_406B5C  +
mov ebx [esi] +
mov [ebp-8] ebx +
mov ebx [ebp+8] +
jmp loc_406B5F  +
mov [ebp-8] esi +
cmp dword ptr [esi+14h] 10h +
jb loc_406B6F  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_406B72  +
mov [ebp+8] esi +
test eax eax +
jz loc_406B92  +
push eax  +
mov eax [ebp-8] +
add eax ebx +
add eax edx +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edi +
push eax  +
call loc_450F90  +
mov ecx [ebp+10h] +
add esp 0Ch +
cmp dword ptr [ecx+14h] 10h +
jb loc_406B9A  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 10h +
jb loc_406BA4  +
mov edx [esi] +
jmp loc_406BA6  +
mov edx esi +
test edi edi +
jz loc_406DD3  +
mov eax [ebp+14h] +
add eax ecx +
push edi  +
push eax  +
lea eax [edx+ebx] +
push eax  +
call loc_452BD0  +
jmp loc_406DD0  +
cmp edi edx +
jnb loc_406C3A  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406BD6  +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_406BD9  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_406BE2  +
mov ecx [esi] +
jmp loc_406BE4  +
mov ecx esi +
test edi edi +
jz loc_406BFF  +
mov eax [ebp+8] +
add eax [ebp+14h] +
push edi  +
push eax  +
lea eax [ecx+ebx] +
push eax  +
call loc_450F90  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406C0E  +
mov ecx [esi] +
mov [ebp+14h] ecx +
jmp loc_406C11  +
mov [ebp+14h] esi +
cmp eax 10h +
jb loc_406C1A  +
mov ecx [esi] +
jmp loc_406C1C  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_406DD3  +
push eax  +
mov eax [ebp+14h] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
jmp loc_406DCA  +
mov ecx [ebp+14h] +
cmp ecx ebx +
ja loc_406CAC  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_406C53  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_406C56  +
mov [ebp+8] esi +
cmp ecx 10h +
jb loc_406C5F  +
mov ecx [esi] +
jmp loc_406C61  +
mov ecx esi +
test eax eax +
jz loc_406C7C  +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406C88  +
mov edx [esi] +
jmp loc_406C8A  +
mov edx esi +
cmp eax 10h +
jb loc_406C93  +
mov ecx [esi] +
jmp loc_406C95  +
mov ecx esi +
test edi edi +
jz loc_406DD3  +
mov eax [ebp+14h] +
add eax edx +
push edi  +
push eax  +
lea eax [ecx+ebx] +
jmp loc_406DCA  +
lea eax [ebx+edx] +
cmp eax ecx +
mov eax [esi+14h] +
ja loc_406D23  +
cmp eax 10h +
jb loc_406CC2  +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_406CC5  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_406CCE  +
mov ecx [esi] +
jmp loc_406CD0  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_406CF1  +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_450F90  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_406CFD  +
mov eax [esi] +
jmp loc_406CFF  +
mov eax esi +
cmp ecx 10h +
jb loc_406D08  +
mov ecx [esi] +
jmp loc_406D0A  +
mov ecx esi +
test edi edi +
jz loc_406DD3  +
sub eax edx +
add eax [ebp+14h] +
add eax edi +
push edi  +
push eax  +
lea eax [ecx+ebx] +
jmp loc_406DCA  +
cmp eax 10h +
jb loc_406D2F  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_406D32  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_406D3B  +
mov ecx [esi] +
jmp loc_406D3D  +
mov ecx esi +
test edx edx +
jz loc_406D58  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
push edx  +
push eax  +
lea eax [ecx+ebx] +
push eax  +
call loc_450F90  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406D67  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_406D6A  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_406D73  +
mov ecx [esi] +
jmp loc_406D75  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_406D93  +
push eax  +
mov eax [ebp+10h] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_406DA2  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_406DA5  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_406DAE  +
mov edx [esi] +
jmp loc_406DB0  +
mov edx esi +
mov ecx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
jz loc_406DD3  +
push eax  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
add eax edi +
push eax  +
mov eax [ebp+8] +
add eax edx +
add eax ecx +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov ecx [ebp+18h] +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_406DF0  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax+ecx] 0 +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ecx] +
mov ebx esi +
push edi  +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov edi [esi+4] +
mov [ebp-0Ch] ecx +
mov [ebp-4] eax +
mov [ebp-8] esi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_406E82  +
mov esi eax +
inc ebp  +
cld   +
cmp ebx esi +
jz loc_406EA7  +
lea ecx [ebx+10h] +
push ecx  +
mov ecx eax +
call sub_4067F0  +
test eax eax +
js loc_406EA7  +
mov eax [ebp-10h] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov byte ptr [eax+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp-4] +
push ecx  +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
push ecx  +
mov ecx [ebp-0Ch] +
call sub_406EF0  +
mov ecx [ebp-0Ch] +
push eax  +
add eax 10h +
push eax  +
push ebx  +
lea eax [ebp-0Ch] +
push eax  +
call sub_406FB0  +
mov ecx [ebp-10h] +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov byte ptr [ecx+4] 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_475EF1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_407190  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_406F79  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_406F60  +
mov eax [esi] +
jmp loc_406F62  +
mov eax esi +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ecx  +
mov ecx esi +
mov [eax] dx +
call loc_402610  +
mov dword ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_475F10  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax ecx +
mov [ebp+var_20] eax +
mov ecx [ebp+arg_C] +
mov ebx [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [ebp+var_4] 0 +
cmp dword ptr [eax+4] 0 +
mov [ebp+var_24] ebx +
mov [ebp+var_28] edx +
mov [ebp+var_1C] ecx +
mov [ebp+var_2C] ecx +
jnz loc_40701A  +
push ecx  +
push ecx  +
push dword ptr [eax]  +
mov ecx eax +
push 1  +
push ebx  +
call loc_407280  +
mov eax ebx +
jmp loc_40716B  +
mov edi [eax] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_40704D  +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_407148  +
push [ebp+var_1C]  +
push ecx  +
mov ecx [ebp+var_20] +
push esi  +
push 1  +
push ebx  +
call loc_407280  +
mov eax ebx +
jmp loc_40716B  +
cmp esi edi +
jnz loc_40707C  +
mov esi [edi+8] +
push edx  +
lea ecx [esi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_407148  +
push [ebp+var_1C]  +
push ecx  +
mov ecx [ebp+var_20] +
push esi  +
push 0  +
push ebx  +
call loc_407280  +
mov eax ebx +
jmp loc_40716B  +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_4070DA  +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call loc_407220  +
mov ebx [ebp+var_18] +
push [ebp+var_28]  +
lea ecx [ebx+10h] +
call sub_4067F0  +
test eax eax +
jns loc_4070DA  +
mov eax [ebx+8] +
push [ebp+var_1C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_20] +
jz loc_4070C9  +
mov esi [ebp+var_24] +
push ebx  +
push 0  +
push esi  +
call loc_407280  +
jmp loc_407169  +
push esi  +
mov esi [ebp+var_24] +
push 1  +
push esi  +
call loc_407280  +
jmp loc_407169  +
push [ebp+var_28]  +
lea ecx [esi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_407148  +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call loc_406360  +
mov ebx [ebp+var_18] +
cmp ebx edi +
jz loc_40710B  +
mov ecx [ebp+var_28] +
lea eax [ebx+10h] +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_407148  +
mov eax [esi+8] +
push [ebp+var_1C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_20] +
jz loc_407129  +
push esi  +
mov esi [ebp+var_24] +
push 0  +
push esi  +
call loc_407280  +
jmp loc_407169  +
mov esi [ebp+var_24] +
push ebx  +
push 1  +
push esi  +
call loc_407280  +
jmp loc_407169  +
push dword ptr [ebp-2Ch]  +
call sub_4071D0  +
push 0  +
push 0  +
call sub_452780  +
push [ebp+var_1C]  +
lea eax [ebp+var_30] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+var_28]  +
push ecx  +
mov ecx [ebp+var_20] +
push eax  +
call sub_4074D0  +
mov esi [ebp+var_24] +
mov eax [eax] +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push 2Ch  +
mov esi ecx +
call sub_44FE54  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_4071C1  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_4071B2  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_4071BD  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_45B2CA  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+24h] +
lea esi [edi+10h] +
cmp eax 8 +
jb loc_4071EE  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_407204  +
mov esi [esi] +
xor eax eax +
push edi  +
mov [esi] ax +
call sub_44FE87  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407232  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
***
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_407253  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407279  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407243  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_407271  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_407271  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_407260  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40727B  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 5D1745Ch +
jb loc_4072C8  +
mov edi [ebp+18h] +
mov eax [edi+24h] +
lea esi [edi+10h] +
cmp eax 8 +
jb loc_4072AB  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4074A8  +
jmp loc_4074A6  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_4072E9  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_407308  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_4072FB  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_407308  +
mov [ecx] ebx +
jmp loc_407308  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_407308  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_407491  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_4073D2  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_4073D8  +
cmp eax [ecx+8] +
jnz loc_407373  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40734E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_407360  +
mov [ecx+4] edx +
jmp loc_40736E  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_40736B  +
mov [ecx] edx +
jmp loc_40736E  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40739D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_4073B5  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_407481  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4073C8  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_407481  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_407481  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_4073F5  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_407484  +
cmp eax [ecx] +
jnz loc_407435  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40740E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_407420  +
mov [ecx+4] edx +
jmp loc_40742F  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40742D  +
mov [ecx+8] edx +
jmp loc_40742F  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40745F  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_407471  +
mov [ecx+4] esi +
jmp loc_40747F  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40747C  +
mov [ecx] esi +
jmp loc_40747F  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_407317  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [esi] +
xor eax eax +
push edi  +
mov [esi] ax +
call sub_44FE87  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_44EC5C  +
push 0FFFFFFFFh  +
push offset loc_475F40  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax ecx +
mov [ebp+var_24] eax +
mov ecx [ebp+arg_C] +
mov edx [ebp+arg_8] +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax [eax] +
mov ebx eax +
mov [ebp+var_28] edx +
mov [ebp+var_1C] ecx +
mov [ebp+var_2C] ecx +
mov esi [eax+4] +
mov al 1 +
mov byte ptr [ebp+var_20] al +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40755C  +
nop   +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
mov ebx esi +
call sub_4067F0  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_20] al +
test al al +
jz loc_40754D  +
mov esi [esi] +
jmp loc_407550  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
mov edx [ebp+var_28] +
jz loc_407530  +
mov ecx [ebp+var_1C] +
mov esi ebx +
mov [ebp+var_18] esi +
test al al +
jz loc_407593  +
mov edx [ebp+var_24] +
mov eax [edx] +
cmp ebx [eax] +
jnz loc_407588  +
push ecx  +
push ecx  +
push ebx  +
push 1  +
lea eax [ebp+var_24] +
mov ecx edx +
push eax  +
call loc_407280  +
mov ecx [eax] +
mov [edi] ecx +
mov byte ptr [edi+4] 1 +
jmp loc_4075DC  +
lea ecx [ebp+var_18] +
call loc_407220  +
mov esi [ebp+var_18] +
push [ebp+var_28]  +
lea ecx [esi+10h] +
call sub_4067F0  +
push [ebp+var_1C]  +
test eax eax +
jns loc_4075D1  +
push ecx  +
mov ecx [ebp+var_24] +
lea eax [ebp+var_20] +
push ebx  +
push [ebp+var_20]  +
push eax  +
call loc_407280  +
mov eax [eax] +
mov [edi] eax +
mov byte ptr [edi+4] 1 +
jmp loc_4075DC  +
push dword ptr [ebp-2Ch]  +
call sub_4071D0  +
push 0  +
push 0  +
call sub_452780  +
call sub_4071D0  +
mov [edi] esi +
mov byte ptr [edi+4] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_475F8D  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
sub esp 14h +
lea ecx [edi+4] +
call sub_41D630  +
push 0D0h  +
mov [ebp+var_4] 0 +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
push 0D0h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_453150  +
add esp 8 +
mov ecx esi +
call sub_418F70  +
sub esp 8 +
mov byte ptr [ebp+var_4] 0 +
mov ecx eax +
mov [edi] eax +
call sub_41D310  +
mov ecx [edi] +
push 0  +
call sub_41CFE0  +
push dword ptr [edi]  +
call sub_417A80  +
mov ecx eax +
call loc_417B30  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+7Ch] +
lea esi [edi+68h] +
cmp eax 8 +
jb loc_4076CA  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4076E0  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+50h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4076FB  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_407711  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+38h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40772C  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_407742  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+20h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40775D  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_407773  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov eax [edi+1Ch] +
cmp eax 8 +
jb loc_40778D  +
inc eax  +
lea ecx [edi+8] +
push eax  +
push dword ptr [edi+8]  +
call loc_4024A0  +
mov dword ptr [edi+1Ch] 7 +
mov dword ptr [edi+18h] 0 +
cmp dword ptr [edi+1Ch] 8 +
jb loc_4077AC  +
mov eax [edi+8] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [edi+8] ax +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475FC2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_4A2908 +
test eax eax +
jnz loc_407822  +
push 84h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
push 84h  +
push 0  +
push esi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
mov ecx esi +
call sub_407600  +
mov dword_4A2908 eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_48C5F0 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_407860  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_407876  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4078C3  +
mov edx [edi+8] +
push ecx  +
call loc_402FE0  +
mov esi [edi+4] +
mov eax 2AAAAAABh +
mov ecx [edi+0Ch] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_475FF0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea eax [ebp+arg_0] +
mov [ebp+var_4] 1 +
push eax  +
lea ecx [esi+4] +
call sub_40A020  +
lea ecx [esi+10h] +
lea eax [ebp+arg_C] +
cmp ecx eax +
jz loc_40791C  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402610  +
mov al [ebp+arg_24] +
mov ecx [ebp+arg_0] +
mov [esi+28h] al +
test ecx ecx +
jz loc_40796A  +
mov edx [ebp+arg_4] +
push ecx  +
call loc_402FE0  +
mov ecx [ebp+arg_8] +
mov eax 2AAAAAABh +
mov esi [ebp+arg_0] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov [ebp+arg_0] 0 +
mov [ebp+arg_4] 0 +
mov [ebp+arg_8] 0 +
mov eax [ebp+arg_20] +
cmp eax 8 +
jb loc_40797F  +
inc eax  +
lea ecx [ebp+arg_C] +
push eax  +
push [ebp+arg_C]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 28h  +
***
push 0FFFFFFFFh  +
push offset loc_4760BF  +
mov eax large fs:0 +
push eax  +
sub esp 9Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_A8] ebx +
xor eax eax +
xor ecx ecx +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] eax +
mov word ptr [ebp+lpExistingFileName] cx +
mov [ebp+var_4] ecx +
lea ecx [ebp+lpExistingFileName] +
cmp ecx edi +
jz loc_407A01  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call loc_402610  +
mov eax [ebp+var_30] +
test eax eax +
setz al  +
test al al +
jnz loc_407BEA  +
push 17h  +
xor eax eax +
mov [ebp+var_90] 7 +
push offset aCreativeclouds  +
lea ecx [ebp+lpNewFileName] +
mov [ebp+var_94] 0 +
mov word ptr [ebp+lpNewFileName] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp+lpNewFileName] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+lpExistingFileName] +
call sub_41E3F0  +
mov byte ptr [ebp+var_4] 0 +
add esp 4 +
mov eax [ebp+var_90] +
cmp eax 8 +
jb loc_407A75  +
inc eax  +
lea ecx [ebp+lpNewFileName] +
push eax  +
push [ebp+lpNewFileName]  +
call loc_4024A0  +
cmp [ebp+var_2C] 8 +
lea eax [ebp+lpExistingFileName] +
cmovnb eax [ebp+lpExistingFileName] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_407C3B  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov [ebp+var_74] 7 +
mov [ebp+var_78] eax +
mov word ptr [ebp+var_88] ax +
lea ecx [ebp+var_88] +
mov byte ptr [ebp+var_4] 4 +
call sub_414680  +
lea ecx [ebp+var_28] +
call sub_41E050  +
test al al +
jz loc_407B31  +
push ecx  +
lea edx [ebp+var_88] +
lea ecx [ebp+var_28] +
call sub_41E3F0  +
add esp 4 +
test al al +
jz loc_407B31  +
push ecx  +
lea ecx [ebp+var_28] +
call sub_41E4E0  +
add esp 4 +
test al al +
jz loc_407B31  +
push offset aCreativeclouds  +
lea ecx [ebp+lpNewFileName] +
call loc_401D00  +
push ecx  +
mov byte ptr [ebp+var_4] 5 +
lea edx [ebp+lpNewFileName] +
mov ebx 1 +
lea ecx [ebp+var_28] +
mov [ebp+var_A8] ebx +
call sub_41E3F0  +
add esp 4 +
mov [ebp+var_89] 0 +
test al al +
jnz loc_407B38  +
mov [ebp+var_89] 1 +
mov [ebp+var_4] 4 +
test bl 1 +
jz loc_407B82  +
mov eax [ebp+var_90] +
and ebx 0FFFFFFFEh +
cmp eax 8 +
jb loc_407B65  +
inc eax  +
lea ecx [ebp+lpNewFileName] +
push eax  +
push [ebp+lpNewFileName]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_90] 7 +
mov [ebp+var_94] 0 +
mov word ptr [ebp+lpNewFileName] ax +
cmp [ebp+var_89] 0 +
jz loc_407C71  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_407BCE  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_A8] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 6 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 4 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aCouldNotGetTem  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
jmp loc_407F5C  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_407C29  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_A8] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 2 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 0 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aEmptyLbsPathRe  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
push 0  +
lea eax [ebp+lpExistingFileName] +
push eax  +
call sub_407FF0  +
test al al +
jnz loc_407A8F  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aFailedToGetExe  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
xor bl bl +
jmp loc_407FB9  +
push ecx  +
lea ecx [ebp+var_28] +
call sub_41E590  +
add esp 4 +
test al al +
jnz loc_407CAE  +
call sub_4077C0  +
mov ecx [eax+4] +
lea edx [ebp+var_28] +
add eax 4 +
cmp [ebp+var_14] 8 +
cmovnb edx [ebp+var_28] +
push edx  +
push offset aCouldNotDelete  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 10h +
jmp loc_407F5C  +
xor eax eax +
mov [ebp+var_90] 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr [ebp+lpNewFileName] ax +
lea ecx [ebp+lpNewFileName] +
lea eax [ebp+var_28] +
mov [ebp+var_94] 0 +
push eax  +
call loc_402610  +
cmp [ebp+var_90] 8 +
lea ecx [ebp+lpNewFileName] +
push 0  +
cmovnb ecx [ebp+lpNewFileName] +
lea eax [ebp+lpExistingFileName] +
cmp [ebp+var_2C] 8 +
push ecx  +
cmovnb eax [ebp+lpExistingFileName] +
push eax  +
call ds:CopyFileW  +
test eax eax +
mov eax [ebp+var_90] +
jz loc_407F11  +
cmp eax 8 +
jb loc_407D2C  +
inc eax  +
lea ecx [ebp+lpNewFileName] +
push eax  +
push [ebp+lpNewFileName]  +
call loc_4024A0  +
call sub_4077C0  +
cmp [ebp+var_14] 8 +
lea edx [ebp+var_28] +
lea ecx [ebp+lpExistingFileName] +
cmovnb edx [ebp+var_28] +
cmp [ebp+var_2C] 8 +
lea esi [eax+4] +
mov eax [esi] +
cmovnb ecx [ebp+lpExistingFileName] +
push edx  +
push ecx  +
push offset aCopiedLbsFromS  +
push offset word_4873C8  +
push esi  +
call dword ptr [eax+14h]  +
xor eax eax +
mov [ebp+var_44] 7 +
add esp 14h +
mov [ebp+var_48] 0 +
mov [ebp+pszPath] ax +
lea eax [ebp+pszPath] +
mov byte ptr [ebp+var_4] 7 +
cmp eax edi +
jz loc_407D8A  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov ecx eax +
call loc_402610  +
lea eax [ebp+var_28] +
cmp edi eax +
jz loc_407D9D  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
call loc_402610  +
xor eax eax +
mov [ebp+var_5C] 7 +
mov [ebp+var_60] 0 +
mov word ptr [ebp+var_70] ax +
push offset aAdobepim_dll  +
lea ecx [ebp+lpNewFileName] +
mov byte ptr [ebp+var_4] 8 +
call loc_401D00  +
push ecx  +
lea edx [ebp+lpNewFileName] +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+pszPath] +
call sub_41E3F0  +
add esp 4 +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+lpNewFileName] +
call sub_401C90  +
cmp [ebp+var_44] 8 +
lea eax [ebp+pszPath] +
cmovnb eax dword ptr [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_407EFD  +
lea ecx [ebp+var_70] +
call sub_41E050  +
test al al +
jz loc_407E70  +
push ecx  +
lea edx [ebp+var_88] +
lea ecx [ebp+var_70] +
call sub_41E3F0  +
add esp 4 +
test al al +
jz loc_407E70  +
push ecx  +
lea ecx [ebp+var_70] +
call sub_41E4E0  +
add esp 4 +
test al al +
jz loc_407E70  +
push offset aAdobepim_dll  +
lea ecx [ebp+lpNewFileName] +
call loc_401D00  +
push ecx  +
mov byte ptr [ebp+var_4] 0Ah +
lea edx [ebp+lpNewFileName] +
or ebx 2 +
lea ecx [ebp+var_70] +
mov [ebp+var_A8] ebx +
call sub_41E3F0  +
add esp 4 +
mov [ebp+var_89] 0 +
test al al +
jnz loc_407E77  +
mov [ebp+var_89] 1 +
mov [ebp+var_4] 8 +
test bl 2 +
jz loc_407E8E  +
lea ecx [ebp+lpNewFileName] +
call sub_401C90  +
cmp [ebp+var_89] 0 +
jz loc_407EB5  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aCouldNotGetTem  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
jmp loc_407EFD  +
sub esp 10h +
lea edx [ebp+var_70] +
lea ecx [ebp+pszPath] +
call sub_41E750  +
add esp 10h +
test al al +
jnz loc_407EFD  +
call sub_4077C0  +
cmp [ebp+var_5C] 8 +
lea edx [ebp+var_70] +
lea ecx [ebp+pszPath] +
cmovnb edx [ebp+var_70] +
cmp [ebp+var_44] 8 +
lea esi [eax+4] +
mov eax [esi] +
cmovnb ecx dword ptr [ebp+pszPath] +
push edx  +
push ecx  +
push offset aCouldNotCopyPi  +
push offset word_4873C8  +
push esi  +
call dword ptr [eax+24h]  +
add esp 14h +
lea ecx [ebp+var_70] +
mov bl 1 +
call sub_401C90  +
lea ecx [ebp+pszPath] +
call sub_401C90  +
jmp loc_407F5E  +
cmp eax 8 +
jb loc_407F29  +
inc eax  +
lea ecx [ebp+lpNewFileName] +
push eax  +
push [ebp+lpNewFileName]  +
call loc_4024A0  +
call sub_4077C0  +
cmp [ebp+var_14] 8 +
lea edx [ebp+var_28] +
lea ecx [ebp+lpExistingFileName] +
cmovnb edx [ebp+var_28] +
cmp [ebp+var_2C] 8 +
lea esi [eax+4] +
mov eax [esi] +
cmovnb ecx [ebp+lpExistingFileName] +
push edx  +
push ecx  +
push offset aCouldNotCopyLb  +
push offset word_4873C8  +
push esi  +
call dword ptr [eax+24h]  +
add esp 14h +
xor bl bl +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_407F79  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_74] 7 +
mov word ptr [ebp+var_88] ax +
mov eax [ebp+var_14] +
mov [ebp+var_78] 0 +
cmp eax 8 +
jb loc_407FA5  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov ecx [ebp+var_2C] +
cmp ecx 8 +
jb loc_407FCE  +
inc ecx  +
push ecx  +
push [ebp+lpExistingFileName]  +
lea ecx [ebp+lpExistingFileName] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476166  +
mov eax large fs:0 +
push eax  +
sub esp 9Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
xor eax eax +
mov [ebp+var_74] 7 +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
mov [ebp+var_4] eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] eax +
mov word ptr [ebp+var_58] ax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] eax +
mov word ptr [ebp+pszPath] ax +
lea ecx [ebp+pszPath] +
mov byte ptr [ebp+var_4] 2 +
call sub_41E0D0  +
test al al +
jnz loc_4080C3  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4080A5  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_A8] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 3 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 2 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aCouldNotFindCu  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
add esp 0Ch +
xor bl bl +
jmp loc_408408  +
lea ecx [ebp+pszPath] +
call loc_41E2B0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+pszPath] +
push eax  +
lea ecx [ebp+var_58] +
call loc_402610  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+pszPath] +
push eax  +
lea ecx [ebp+var_88] +
call loc_402610  +
push 17h  +
xor eax eax +
mov [ebp+var_90] 7 +
push offset aAccCreativeClo  +
lea ecx [ebp+var_A4] +
mov [ebp+var_94] 0 +
mov word ptr [ebp+var_A4] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp+var_A4] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+pszPath] +
call sub_41E3F0  +
mov byte ptr [ebp+var_4] 2 +
add esp 4 +
mov eax [ebp+var_90] +
cmp eax 8 +
jb loc_408155  +
inc eax  +
lea ecx [ebp+var_A4] +
push eax  +
push [ebp+var_A4]  +
call loc_4024A0  +
cmp [ebp+var_2C] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_40818F  +
lea ecx [ebp+var_88] +
call sub_41E210  +
lea ecx [ebp+var_58] +
call sub_41E170  +
test al al +
jz loc_40818F  +
push offset aAdobeDesktopCo  +
lea ecx [ebp+var_58] +
call sub_403040  +
push 4  +
xor eax eax +
mov [ebp+var_90] 7 +
push offset aAds  +
lea ecx [ebp+var_A4] +
mov [ebp+var_94] 0 +
mov word ptr [ebp+var_A4] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp+var_A4] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_58] +
call sub_41E3F0  +
mov byte ptr [ebp+var_4] 2 +
add esp 4 +
mov eax [ebp+var_90] +
cmp eax 8 +
jb loc_4081F6  +
inc eax  +
lea ecx [ebp+var_A4] +
push eax  +
push [ebp+var_A4]  +
call loc_4024A0  +
push 4  +
xor eax eax +
mov [ebp+var_90] 7 +
push offset aAcc  +
lea ecx [ebp+var_A4] +
mov [ebp+var_94] 0 +
mov word ptr [ebp+var_A4] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp+var_A4] +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_88] +
call sub_41E3F0  +
mov eax [ebp+var_90] +
add esp 4 +
cmp eax 8 +
jb loc_40825C  +
inc eax  +
lea ecx [ebp+var_A4] +
push eax  +
push [ebp+var_A4]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov [ebp+var_5C] 7 +
mov [ebp+var_60] eax +
mov word ptr [ebp+var_70] ax +
mov eax [ebp+arg_4] +
mov byte ptr [ebp+var_4] 8 +
test eax eax +
jnz loc_4082A0  +
push 21h  +
push offset a__UtilsCreativ  +
lea ecx [ebp+var_70] +
call loc_401E70  +
lea eax [ebp+var_88] +
jmp loc_4082B7  +
cmp eax 1 +
jnz loc_4082C4  +
push 2Eh  +
push offset a__Elevationman  +
lea ecx [ebp+var_70] +
call loc_401E70  +
lea eax [ebp+var_58] +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
call loc_402610  +
push ecx  +
lea edx [ebp+var_70] +
lea ecx [ebp+var_28] +
call sub_41E3F0  +
add esp 4 +
test al al +
jz loc_408353  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_408353  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
call ds:PathIsDirectoryW  +
push ecx  +
lea edx [ebp-89h] +
lea ecx [ebp+var_28] +
call sub_41E4A0  +
add esp 4 +
test al al +
jnz loc_40833C  +
call sub_4077C0  +
mov ecx [eax+4] +
lea edx [ebp+var_28] +
add eax 4 +
cmp [ebp+var_14] 8 +
cmovnb edx [ebp+var_28] +
push edx  +
push offset aAppDoesNotExis  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_4083B1  +
lea eax [ebp+var_28] +
cmp esi eax +
jz loc_40834F  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_402610  +
mov bl 1 +
jmp loc_4083B6  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_408392  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_A8] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 9 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 8 +
mov dword_4A2908 eax +
cmp [ebp+var_14] 8 +
lea ecx [ebp+var_28] +
lea edx [eax+4] +
cmovnb ecx [ebp+var_28] +
mov eax [edx] +
push ecx  +
push offset aFailedToDetect  +
push offset word_4873C8  +
push edx  +
call dword ptr [eax+24h]  +
add esp 10h +
xor bl bl +
mov eax [ebp+var_5C] +
cmp eax 8 +
jb loc_4083CB  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_5C] 7 +
mov word ptr [ebp+var_70] ax +
mov eax [ebp+var_14] +
mov [ebp+var_60] 0 +
cmp eax 8 +
jb loc_4083F4  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_40841D  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+pszPath] ax +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_408446  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
mov ecx [ebp+var_74] +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
cmp ecx 8 +
jb loc_408475  +
inc ecx  +
push ecx  +
push [ebp+var_88]  +
lea ecx [ebp+var_88] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_476222  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax dword_4A2908 +
test eax eax +
jnz loc_408511  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_68] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 0 +
mov dword_4A2908 eax +
cmp dword ptr [edi+14h] 8 +
lea edx [eax+4] +
jb loc_40851E  +
mov ecx [edi] +
jmp loc_408520  +
mov ecx edi +
mov eax [edx] +
push ecx  +
push offset aInsideHandleme  +
push edx  +
call dword ptr [eax+14h]  +
xorps xmm0 xmm0 +
mov [ebp+var_14] 0 +
movq [ebp+var_1C] xmm0 +
add esp 0Ch +
mov dword ptr [ebp+var_1C+4] 0 +
mov byte ptr [ebp+var_14] 0 +
mov dword ptr [ebp+var_1C] 0 +
xor eax eax +
mov [ebp+var_20] 7 +
mov [ebp+var_24] 0 +
mov word ptr [ebp+var_34] ax +
push edi  +
lea ecx [ebp+var_1C] +
mov byte ptr [ebp+var_4] 4 +
call sub_4111F0  +
test al al +
jnz loc_408620  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4085B5  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_68] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 5 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 4 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_0  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax dword_4A2908 +
add esp 0Ch +
test eax eax +
jnz loc_408608  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_68] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 6 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 4 +
mov dword_4A2908 eax +
cmp dword ptr [edi+14h] 8 +
lea ecx [eax+4] +
jb loc_408613  +
mov edi [edi] +
mov eax [ecx] +
push edi  +
push offset aDataReceivedIs  +
push ecx  +
call dword ptr [eax]  +
jmp loc_408696  +
push 12h  +
xor eax eax +
mov [ebp+var_6C] 7 +
push offset aActionActionty  +
lea ecx [ebp+var_80] +
mov [ebp+var_70] 0 +
mov word ptr [ebp+var_80] ax +
call loc_401E70  +
lea eax [ebp+var_34] +
mov byte ptr [ebp+var_4] 7 +
push eax  +
lea eax [ebp+var_80] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_411790  +
test al al +
mov byte ptr [ebp+var_4] 4 +
mov eax [ebp+var_6C] +
setz bl  +
cmp eax 8 +
jb loc_408675  +
inc eax  +
lea ecx [ebp+var_80] +
push eax  +
push [ebp+var_80]  +
call loc_4024A0  +
test bl bl +
jz loc_40870D  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_1  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [ebp+var_20] +
add esp 0Ch +
cmp eax 8 +
jb loc_4086AE  +
inc eax  +
lea ecx [ebp+var_34] +
push eax  +
push [ebp+var_34]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_20] 7 +
mov [ebp+var_24] 0 +
mov word ptr [ebp+var_34] ax +
mov byte ptr [ebp+var_4] 8 +
mov esi dword ptr [ebp+var_1C+4] +
test esi esi +
jz loc_4086DB  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_4086DB  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp+var_14] 0 +
jz loc_4086E7  +
call ds:CoUninitialize  +
test esi esi +
jz loc_4086F1  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_18] +
cmp eax 8 +
jb loc_408706  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_4024A0  +
xor al al +
jmp loc_40891F  +
push offset aCreateprocess  +
lea ecx [ebp+var_34] +
call loc_4053B0  +
test eax eax +
jnz loc_40882F  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_2  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_4C] +
push eax  +
call loc_408940  +
xor eax eax +
mov [ebp+var_50] 7 +
mov [ebp+var_54] 0 +
mov word ptr [ebp+var_64] ax +
push offset aActionActionar  +
lea ecx [ebp+var_80] +
mov byte ptr [ebp+var_4] 0Ah +
call loc_401D00  +
lea eax [ebp+var_64] +
mov byte ptr [ebp+var_4] 0Bh +
push eax  +
lea eax [ebp+var_80] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_411790  +
lea ecx [ebp+var_80] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_401C90  +
push offset aLbs  +
lea ecx [ebp+var_64] +
call loc_4053B0  +
test eax eax +
jnz loc_408821  +
push 0FFFFFFFFh  +
push eax  +
mov [ebp+var_70] eax +
lea ecx [ebp+var_80] +
mov word ptr [ebp+var_80] ax +
lea eax [ebp+arg_4] +
push eax  +
mov [ebp+var_6C] 7 +
call loc_402610  +
sub esp 18h +
mov byte ptr [ebp+var_4] 0Ch +
mov ecx esp +
mov [ebp+var_68] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4087E1  +
mov eax [ecx] +
jmp loc_4087E3  +
mov eax ecx +
xor edx edx +
push 0FFFFFFFFh  +
mov [eax] dx +
lea eax [ebp+var_80] +
push edx  +
push eax  +
call loc_402610  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 0Dh +
push eax  +
call sub_405730  +
mov ecx eax +
mov byte ptr [ebp+var_4] 0Ch +
call sub_4060A0  +
mov eax [ebp+var_6C] +
cmp eax 8 +
jb loc_408821  +
inc eax  +
lea ecx [ebp+var_80] +
push eax  +
push [ebp+var_80]  +
call loc_4024A0  +
lea ecx [ebp+var_64] +
call sub_401C90  +
mov byte ptr [ebp+var_4] 4 +
jmp loc_408893  +
push offset aStopservice  +
lea ecx [ebp+var_34] +
call loc_4053B0  +
test eax eax +
jnz loc_408862  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_3  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
lea eax [ebp+var_4C] +
push eax  +
call sub_409740  +
jmp loc_408893  +
push offset aDeletelbs  +
lea ecx [ebp+var_34] +
call loc_4053B0  +
test eax eax +
jnz loc_40889B  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_4  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
lea eax [ebp+var_4C] +
push eax  +
call sub_409AF0  +
lea ecx [ebp+var_4C] +
call sub_401C90  +
call sub_4077C0  +
mov ecx [eax+4] +
add eax 4 +
push offset aInsideHandle_5  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp+var_20] +
add esp 8 +
cmp eax 8 +
jb loc_4088C7  +
inc eax  +
lea ecx [ebp+var_34] +
push eax  +
push [ebp+var_34]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_20] 7 +
mov [ebp+var_24] 0 +
mov word ptr [ebp+var_34] ax +
mov byte ptr [ebp+var_4] 0Eh +
mov esi dword ptr [ebp+var_1C+4] +
test esi esi +
jz loc_4088F4  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_4088F4  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp+var_14] 0 +
jz loc_408900  +
call ds:CoUninitialize  +
test esi esi +
jz loc_40890A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_18] +
cmp eax 8 +
jb loc_40891F  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47639F  +
mov eax large fs:0 +
push eax  +
sub esp 130h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov ebx [ebp+0Ch] +
mov [ebp-120h] eax +
xor eax eax +
mov [ebp-11Ch] ebx +
mov dword ptr [ebp-13Ch] 0 +
mov dword ptr [ebp-0C4h] 7 +
mov dword ptr [ebp-0C8h] 0 +
mov [ebp-0D8h] ax +
mov [ebp-4] eax +
mov dword ptr [ebp-54h] 7 +
mov [ebp-58h] eax +
mov [ebp-68h] ax +
mov dword ptr [ebp-90h] 7 +
mov [ebp-94h] eax +
mov [ebp-0A4h] ax +
mov dword ptr [ebp-0F4h] 7 +
mov [ebp-0F8h] eax +
mov [ebp-108h] ax +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-38h] +
push 20h  +
push offset aActionAction_0  +
mov dword ptr [ebp-24h] 7 +
mov [ebp-28h] eax +
mov [ebp-38h] ax +
call loc_401E70  +
lea eax [ebp-0D8h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-38h] +
mov ecx ebx +
push eax  +
call sub_411790  +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_408A32  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
push offset aTrue  +
lea ecx [ebp-0D8h] +
call loc_4053B0  +
test eax eax +
mov dword ptr [ebp-78h] 7 +
mov dword ptr [ebp-7Ch] 0 +
setz byte ptr [ebp-114h]  +
xor eax eax +
mov [ebp-8Ch] ax +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-50h] +
push 1Eh  +
push offset aActionActionar  +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-40h] eax +
mov [ebp-50h] ax +
call loc_401E70  +
lea eax [ebp-8Ch] +
mov byte ptr [ebp-4] 6 +
push eax  +
lea eax [ebp-50h] +
mov ecx ebx +
push eax  +
call sub_411790  +
mov byte ptr [ebp-4] 5 +
mov eax [ebp-3Ch] +
cmp eax 8 +
jb loc_408AB2  +
inc eax  +
lea ecx [ebp-50h] +
push eax  +
push dword ptr [ebp-50h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
mov eax dword_4A2908 +
mov dword ptr [ebp-40h] 0 +
test eax eax +
jnz loc_408B05  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp-10Ch] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 7 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp-4] 5 +
mov dword_4A2908 eax +
cmp dword ptr [ebp-78h] 8 +
lea edx [eax+4] +
mov eax [edx] +
lea ecx [ebp-8Ch] +
cmovnb ecx [ebp-8Ch] +
push ecx  +
push offset aInsideHandlecr  +
push edx  +
call dword ptr [eax+14h]  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-6Ch] 0 +
xor ebx ebx +
movq qword ptr [ebp-74h] xmm0 +
xor edi edi +
mov [ebp-74h] ebx +
add esp 0Ch +
mov [ebp-70h] ebx +
mov [ebp-6Ch] edi +
mov byte ptr [ebp-4] 8 +
lea ecx [ebp-50h] +
push 1Ah  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
push offset aActionAction_1  +
mov [ebp-40h] edi +
mov [ebp-50h] ax +
call loc_401E70  +
mov ecx [ebp-11Ch] +
lea eax [ebp-50h] +
push eax  +
mov byte ptr [ebp-4] 9 +
call sub_411530  +
mov [ebp-10Dh] al +
mov byte ptr [ebp-4] 8 +
mov eax [ebp-3Ch] +
cmp eax 8 +
jb loc_408B99  +
inc eax  +
lea ecx [ebp-50h] +
push eax  +
push dword ptr [ebp-50h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov dword ptr [ebp-40h] 0 +
mov [ebp-50h] ax +
cmp [ebp-10Dh] al +
jz loc_408F01  +
xor esi esi +
mov [ebp-118h] eax +
mov [ebp-0C0h] esi +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-38h] +
push 21h  +
push offset aActionAction_2  +
mov dword ptr [ebp-24h] 7 +
mov [ebp-28h] esi +
mov [ebp-38h] ax +
call loc_401E70  +
mov ecx [ebp-11Ch] +
lea eax [ebp-118h] +
push eax  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea eax [ebp-10Ch] +
push eax  +
call sub_411B40  +
mov ecx [eax] +
test ecx ecx +
jz loc_408C1D  +
mov eax [ecx] +
mov esi ecx +
push ecx  +
mov [ebp-0C0h] esi +
call dword ptr [eax+4]  +
mov eax [ebp-10Ch] +
test eax eax +
jz loc_408C2D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov byte ptr [ebp-4] 0Ah +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_408C46  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
cmp dword ptr [ebp-118h] 0 +
jle loc_408EF1  +
push offset aActionAction_2  +
lea ecx [ebp-0F0h] +
call loc_401D00  +
push 1  +
push offset asc_48C354  +
lea ecx [ebp-0F0h] +
mov byte ptr [ebp-4] 0Ch +
call loc_401F70  +
mov eax 7 +
mov dword ptr [ebp-40h] 0 +
xor ecx ecx +
mov [ebp-3Ch] eax +
mov [ebp-50h] cx +
mov [ebp-0A8h] eax +
mov [ebp-0ACh] ecx +
mov [ebp-0BCh] cx +
xor edi edi +
mov byte ptr [ebp-4] 0Eh +
cmp [ebp-118h] edi +
jle loc_408E8E  +
mov esi [ebp-11Ch] +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-0F0h] +
push eax  +
lea ecx [ebp-50h] +
call loc_402610  +
xor eax eax +
xorps xmm0 xmm0 +
push edi  +
mov [ebp-20h] ax +
mov [ebp-16h] eax +
mov [ebp-12h] ax +
lea eax [ebp-20h] +
push offset aD  +
push eax  +
movq qword ptr [ebp-1Eh] xmm0 +
call ds:wsprintfW  +
add esp 0Ch +
cmp word ptr [ebp-20h] 0 +
jnz loc_408D06  +
xor ecx ecx +
jmp loc_408D1F  +
lea ecx [ebp-20h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_408D10  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20h] +
push eax  +
lea ecx [ebp-0BCh] +
call loc_401E70  +
push offset asc_48C358  +
lea edx [ebp-0BCh] +
lea ecx [ebp-138h] +
call sub_402ED0  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp-50h] +
mov byte ptr [ebp-4] 0Fh +
call loc_402730  +
mov eax [ebp-124h] +
cmp eax 8 +
jb loc_408D77  +
inc eax  +
lea ecx [ebp-138h] +
push eax  +
push dword ptr [ebp-138h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-24h] 7 +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] ax +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 10h +
push eax  +
lea eax [ebp-50h] +
mov ecx esi +
push eax  +
call sub_411790  +
test al al +
jz loc_408E39  +
push 0Bh  +
push 0  +
push offset aOutguidpath  +
lea ecx [ebp-38h] +
call sub_40A370  +
test eax eax +
jle loc_408E2D  +
push 0FFFFFFFFh  +
add eax 0Ch +
lea ecx [ebp-38h] +
push eax  +
lea eax [ebp-138h] +
push eax  +
call sub_40A2D0  +
mov ebx eax +
lea eax [ebp-68h] +
cmp eax ebx +
jz loc_408E0B  +
mov eax [ebp-54h] +
cmp eax 8 +
jb loc_408DEE  +
inc eax  +
lea ecx [ebp-68h] +
push eax  +
push dword ptr [ebp-68h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-54h] 7 +
push ebx  +
lea ecx [ebp-68h] +
mov dword ptr [ebp-58h] 0 +
mov [ebp-68h] ax +
call sub_4020A0  +
mov byte ptr [ebp-4] 10h +
mov eax [ebp-124h] +
cmp eax 8 +
jb loc_408E2D  +
inc eax  +
lea ecx [ebp-138h] +
push eax  +
push dword ptr [ebp-138h]  +
call loc_4024A0  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-74h] +
call sub_401A70  +
mov byte ptr [ebp-4] 0Eh +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_408E52  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
inc edi  +
cmp edi [ebp-118h] +
jl loc_408CC0  +
mov eax [ebp-0A8h] +
mov esi [ebp-0C0h] +
cmp eax 8 +
jb loc_408E83  +
inc eax  +
lea ecx [ebp-0BCh] +
push eax  +
push dword ptr [ebp-0BCh]  +
call loc_4024A0  +
mov edi [ebp-6Ch] +
mov ebx [ebp-74h] +
mov eax [ebp-3Ch] +
jmp loc_408E90  +
xor edi edi +
xor ecx ecx +
mov dword ptr [ebp-0A8h] 7 +
mov dword ptr [ebp-0ACh] 0 +
mov [ebp-0BCh] cx +
cmp eax 8 +
jb loc_408EBF  +
inc eax  +
lea ecx [ebp-50h] +
push eax  +
push dword ptr [ebp-50h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov [ebp-50h] ax +
mov eax [ebp-0DCh] +
mov dword ptr [ebp-40h] 0 +
cmp eax 8 +
jb loc_408EF1  +
inc eax  +
lea ecx [ebp-0F0h] +
push eax  +
push dword ptr [ebp-0F0h]  +
call loc_4024A0  +
mov byte ptr [ebp-4] 8 +
test esi esi +
jz loc_408F52  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
jmp loc_408F52  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_408F40  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp-10Ch] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 12h +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp-4] 8 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aNoCmdargsNodes  +
push eax  +
call dword ptr [ecx+14h]  +
add esp 8 +
push offset aLbs  +
lea ecx [ebp-8Ch] +
call loc_4053B0  +
test eax eax +
jnz loc_409255  +
lea eax [ebp-68h] +
push eax  +
call sub_4079A0  +
test al al +
jnz loc_40913C  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_408FBA  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp-114h] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 13h +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp-4] 8 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aCouldNotCopy_0  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
sub esp 0Ch +
mov ecx esp +
mov [ebp-114h] esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_408FFF  +
mov eax [ecx] +
jmp loc_409001  +
mov eax ecx +
push 0Dh  +
xor edx edx +
push offset aCreateprocess  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp-4] 14h +
mov ecx esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_409041  +
mov eax [ecx] +
jmp loc_409043  +
mov eax ecx +
push 26h  +
xor edx edx +
push offset aOutputResultFa  +
mov [eax] dx +
call loc_401E70  +
mov esi [ebp-120h] +
push esi  +
mov byte ptr [ebp-4] 8 +
call sub_409D60  +
test ebx ebx +
jz loc_409090  +
mov edx [ebp-70h] +
push ecx  +
mov ecx ebx +
call loc_402FE0  +
sub edi ebx +
mov eax 2AAAAAABh +
imul  edi +
add esp 4 +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push ebx  +
call loc_4023A0  +
mov eax [ebp-78h] +
cmp eax 8 +
jb loc_4090AB  +
inc eax  +
lea ecx [ebp-8Ch] +
push eax  +
push dword ptr [ebp-8Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-78h] 7 +
mov [ebp-8Ch] ax +
mov eax [ebp-90h] +
mov dword ptr [ebp-7Ch] 0 +
cmp eax 8 +
jb loc_4090E0  +
inc eax  +
lea ecx [ebp-0A4h] +
push eax  +
push dword ptr [ebp-0A4h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-90h] 7 +
mov [ebp-0A4h] ax +
mov eax [ebp-54h] +
mov dword ptr [ebp-94h] 0 +
cmp eax 8 +
jb loc_409112  +
inc eax  +
lea ecx [ebp-68h] +
push eax  +
push dword ptr [ebp-68h]  +
call loc_4024A0  +
mov ecx [ebp-0C4h] +
xor eax eax +
mov dword ptr [ebp-54h] 7 +
mov dword ptr [ebp-58h] 0 +
mov [ebp-68h] ax +
cmp ecx 8 +
jb loc_4096F4  +
inc ecx  +
push ecx  +
jmp loc_4096E3  +
xor eax eax +
mov dword ptr [ebp-24h] 7 +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] ax +
push 1  +
push offset asc_487388  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 15h +
call loc_401F70  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-68h] +
push eax  +
lea ecx [ebp-38h] +
call loc_402730  +
push 1  +
push offset asc_487388  +
lea ecx [ebp-38h] +
call loc_401F70  +
push 0Dh  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
push offset aSelfdelete  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-40h] 0 +
mov [ebp-50h] ax +
call loc_401E70  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 16h +
push eax  +
lea ecx [ebp-50h] +
call loc_402730  +
lea eax [ebp-50h] +
push eax  +
lea ecx [ebp-74h] +
call sub_401A70  +
xor eax eax +
mov dword ptr [ebp-0A8h] 7 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp-0BCh] +
mov dword ptr [ebp-0ACh] 0 +
mov [ebp-0BCh] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp-0BCh] +
mov byte ptr [ebp-4] 17h +
lea ecx [ebp-68h] +
call sub_41E3F0  +
mov eax [ebp-0A8h] +
add esp 4 +
cmp eax 8 +
jb loc_409227  +
inc eax  +
lea ecx [ebp-0BCh] +
push eax  +
push dword ptr [ebp-0BCh]  +
call loc_4024A0  +
mov eax [ebp-3Ch] +
cmp eax 8 +
jb loc_40923C  +
inc eax  +
lea ecx [ebp-50h] +
push eax  +
push dword ptr [ebp-50h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-3Ch] 7 +
mov dword ptr [ebp-40h] 0 +
mov [ebp-50h] ax +
jmp loc_409319  +
push offset aAdobeinstaller  +
lea ecx [ebp-8Ch] +
call loc_4053B0  +
test eax eax +
jnz loc_40951A  +
push eax  +
push offset word_4873C8  +
lea ecx [ebp-68h] +
call loc_401E70  +
lea ecx [ebp-68h] +
call sub_41E170  +
test al al +
jz loc_409294  +
push offset aAdobeDesktopCo  +
lea ecx [ebp-68h] +
call sub_403040  +
push 10h  +
xor eax eax +
mov dword ptr [ebp-24h] 7 +
push offset aElevationmanag  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp-38h] +
mov byte ptr [ebp-4] 18h +
lea ecx [ebp-68h] +
call sub_41E3F0  +
mov byte ptr [ebp-4] 8 +
add esp 4 +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_4092E3  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
push 13h  +
xor eax eax +
mov dword ptr [ebp-24h] 7 +
push offset aAdobeInstaller  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] ax +
call loc_401E70  +
push ecx  +
lea edx [ebp-38h] +
mov byte ptr [ebp-4] 19h +
lea ecx [ebp-68h] +
call sub_41E3F0  +
add esp 4 +
mov byte ptr [ebp-4] 8 +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_409332  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
push 2Ch  +
call sub_44FE54  +
push 2Ch  +
mov esi eax +
push 0  +
push esi  +
mov [ebp-10Ch] esi +
call sub_453150  +
mov dword ptr [esi] offset off_48C5F0 +
lea eax [esi+10h] +
mov dword ptr [esi+4] 0 +
add esp 10h +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_409390  +
mov eax [eax] +
push dword ptr [ebp-114h]  +
xor ecx ecx +
mov [eax] cx +
sub esp 18h +
mov [esi+28h] cl +
mov ecx esp +
mov [ebp-114h] esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4093CF  +
mov eax [ecx] +
jmp loc_4093D1  +
mov eax ecx +
xor edx edx +
push 0FFFFFFFFh  +
mov [eax] dx +
lea eax [ebp-68h] +
push edx  +
push eax  +
call loc_402610  +
sub esp 0Ch +
mov byte ptr [ebp-4] 1Ch +
lea eax [ebp-74h] +
mov ecx esp +
push eax  +
call sub_40A1E0  +
mov ecx esi +
mov byte ptr [ebp-4] 8 +
call sub_4078D0  +
sub esp 18h +
mov ecx esp +
mov [ebp-114h] esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_409430  +
mov eax [ecx] +
jmp loc_409432  +
mov eax ecx +
push 0Dh  +
xor edx edx +
push offset aCreateprocess  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp-4] 1Dh +
mov edx [esi] +
mov ecx esi +
push esp  +
call dword ptr [edx]  +
lea eax [ebp-138h] +
mov byte ptr [ebp-4] 8 +
push eax  +
call sub_409D60  +
mov edi eax +
lea eax [ebp-0A4h] +
cmp eax edi +
jz loc_4094AE  +
mov eax [ebp-90h] +
cmp eax 8 +
jb loc_40948B  +
inc eax  +
lea ecx [ebp-0A4h] +
push eax  +
push dword ptr [ebp-0A4h]  +
call loc_4024A0  +
push 0  +
lea ecx [ebp-0A4h] +
mov dword ptr [ebp-90h] 7 +
call sub_4025E0  +
push edi  +
lea ecx [ebp-0A4h] +
call sub_4020A0  +
lea ecx [ebp-138h] +
call sub_401C90  +
push ecx  +
mov ecx esi +
call sub_409720  +
mov ecx [ebp-120h] +
lea eax [ebp-0A4h] +
push eax  +
call sub_401CD0  +
lea ecx [ebp-74h] +
call sub_401B50  +
lea ecx [ebp-8Ch] +
call sub_401C90  +
lea ecx [ebp-108h] +
call sub_401C90  +
lea ecx [ebp-0A4h] +
call sub_401C90  +
lea ecx [ebp-68h] +
call sub_401C90  +
lea ecx [ebp-0D8h] +
call sub_401C90  +
mov eax [ebp-120h] +
jmp loc_4096F6  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_409559  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp-114h] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 1Ah +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp-4] 8 +
mov dword_4A2908 eax +
cmp dword ptr [ebp-78h] 8 +
lea ecx [ebp-8Ch] +
lea edx [eax+4] +
cmovnb ecx [ebp-8Ch] +
mov eax [edx] +
push ecx  +
push offset aInsideHandle_6  +
push offset word_4873C8  +
push edx  +
call dword ptr [eax+24h]  +
sub esp 8 +
mov ecx esp +
mov [ebp-114h] esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4095AF  +
mov eax [ecx] +
jmp loc_4095B1  +
mov eax ecx +
push 0Dh  +
xor edx edx +
push offset aCreateprocess  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp-4] 1Bh +
mov ecx esp +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4095F1  +
mov eax [ecx] +
jmp loc_4095F3  +
mov eax ecx +
push 26h  +
xor edx edx +
push offset aOutputResultFa  +
mov [eax] dx +
call loc_401E70  +
mov esi [ebp-120h] +
push esi  +
mov byte ptr [ebp-4] 8 +
call sub_409D60  +
test ebx ebx +
jz loc_409640  +
mov edx [ebp-70h] +
push ecx  +
mov ecx ebx +
call loc_402FE0  +
sub edi ebx +
mov eax 2AAAAAABh +
imul  edi +
add esp 4 +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push ebx  +
call loc_4023A0  +
mov eax [ebp-78h] +
cmp eax 8 +
jb loc_40965B  +
inc eax  +
lea ecx [ebp-8Ch] +
push eax  +
push dword ptr [ebp-8Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-78h] 7 +
mov [ebp-8Ch] ax +
mov eax [ebp-90h] +
mov dword ptr [ebp-7Ch] 0 +
cmp eax 8 +
jb loc_409690  +
inc eax  +
lea ecx [ebp-0A4h] +
push eax  +
push dword ptr [ebp-0A4h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-90h] 7 +
mov [ebp-0A4h] ax +
mov eax [ebp-54h] +
mov dword ptr [ebp-94h] 0 +
cmp eax 8 +
jb loc_4096C2  +
inc eax  +
lea ecx [ebp-68h] +
push eax  +
push dword ptr [ebp-68h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-54h] 7 +
mov [ebp-68h] ax +
mov eax [ebp-0C4h] +
mov dword ptr [ebp-58h] 0 +
cmp eax 8 +
jb loc_4096F4  +
inc eax  +
push eax  +
push dword ptr [ebp-0D8h]  +
lea ecx [ebp-0D8h] +
call loc_4024A0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_407840  +
push 2Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47641A  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor eax eax +
mov [ebp+var_70] 0 +
mov [ebp+var_20] 7 +
mov [ebp+var_24] 0 +
mov word ptr [ebp+var_34] ax +
mov [ebp+var_4] eax +
lea eax [ebp+var_34] +
push 1  +
push eax  +
call sub_407FF0  +
test al al +
jnz loc_409872  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_4097DA  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_50] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 0 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aFailedToGetE_0  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
sub esp 0Ch +
mov ecx esp +
mov [ebp+var_50] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_40980E  +
mov eax [ecx] +
jmp loc_409810  +
mov eax ecx +
push 0Bh  +
xor edx edx +
push offset aStopservice  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp+var_4] 2 +
mov ecx esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_409842  +
mov eax [ecx] +
jmp loc_409844  +
mov eax ecx +
push 26h  +
xor edx edx +
push offset aOutputResultFa  +
mov [eax] dx +
call loc_401E70  +
push edi  +
mov byte ptr [ebp+var_4] 0 +
call sub_409D60  +
mov ecx [ebp+var_20] +
cmp ecx 8 +
jb loc_409AC6  +
inc ecx  +
push ecx  +
jmp loc_409ABB  +
xorps xmm0 xmm0 +
mov [ebp+var_14] 0 +
movq [ebp+var_1C] xmm0 +
mov dword ptr [ebp+var_1C] 0 +
mov dword ptr [ebp+var_1C+4] 0 +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_6C] +
push 0Eh  +
xor eax eax +
mov [ebp+var_58] 7 +
push offset aDeregister1  +
mov [ebp+var_5C] 0 +
mov word ptr [ebp+var_6C] ax +
call loc_401E70  +
lea eax [ebp+var_6C] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea ecx [ebp+var_1C] +
call sub_401BA0  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_58] +
cmp eax 8 +
jb loc_4098E6  +
inc eax  +
lea ecx [ebp+var_6C] +
push eax  +
push [ebp+var_6C]  +
call loc_4024A0  +
push 21h  +
xor eax eax +
mov [ebp+var_58] 7 +
push offset aServicelabelAd  +
lea ecx [ebp+var_6C] +
mov [ebp+var_5C] 0 +
mov word ptr [ebp+var_6C] ax +
call loc_401E70  +
lea eax [ebp+var_6C] +
mov byte ptr [ebp+var_4] 5 +
push eax  +
lea ecx [ebp+var_1C] +
call sub_401BA0  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_58] +
cmp eax 8 +
jb loc_409932  +
inc eax  +
lea ecx [ebp+var_6C] +
push eax  +
push [ebp+var_6C]  +
call loc_4024A0  +
push 2Ch  +
call sub_44FE54  +
push 2Ch  +
mov esi eax +
push 0  +
push esi  +
mov [ebp+var_54] esi +
call sub_453150  +
mov dword ptr [esi] offset off_48C5F0 +
lea eax [esi+10h] +
mov dword ptr [esi+4] 0 +
add esp 10h +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_40997F  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
push ecx  +
mov [esi+28h] cl +
sub esp 18h +
mov ecx esp +
mov [ebp+var_54] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4099A8  +
mov eax [ecx] +
jmp loc_4099AA  +
mov eax ecx +
xor edx edx +
push 0FFFFFFFFh  +
mov [eax] dx +
lea eax [ebp+var_34] +
push edx  +
push eax  +
call loc_402610  +
sub esp 0Ch +
mov byte ptr [ebp+var_4] 6 +
lea eax [ebp+var_1C] +
mov ecx esp +
push eax  +
call sub_40A1E0  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_4078D0  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_54] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_4099F8  +
mov eax [ecx] +
jmp loc_4099FA  +
mov eax ecx +
push 0Dh  +
xor edx edx +
push offset aCreateprocess  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp+var_4] 7 +
mov edx [esi] +
mov ecx esi +
push esp  +
call dword ptr [edx]  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call sub_409D60  +
mov ecx esi +
call sub_407840  +
push 2Ch  +
push esi  +
call sub_44FE8C  +
xor eax eax +
mov dword ptr [edi+14h] 7 +
add esp 8 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
mov ecx edi +
lea eax [ebp+var_4C] +
push eax  +
call sub_4020A0  +
mov eax [ebp+var_38] +
cmp eax 8 +
jb loc_409A6B  +
inc eax  +
lea ecx [ebp+var_4C] +
push eax  +
push [ebp+var_4C]  +
call loc_4024A0  +
mov esi dword ptr [ebp+var_1C] +
xor eax eax +
mov [ebp+var_38] 7 +
mov [ebp+var_3C] 0 +
mov word ptr [ebp+var_4C] ax +
test esi esi +
jz loc_409AB1  +
mov edx dword ptr [ebp+var_1C+4] +
push ecx  +
mov ecx esi +
call loc_402FE0  +
mov ecx [ebp+var_14] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov eax [ebp+var_20] +
cmp eax 8 +
jb loc_409AC6  +
inc eax  +
push eax  +
push [ebp+var_34]  +
lea ecx [ebp+var_34] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47648B  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_38] ebx +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] ebx +
mov [ebp+pszPath] ax +
lea ecx [ebp+pszPath] +
mov [ebp+var_4] eax +
call sub_41E050  +
test al al +
jz loc_409B84  +
push 17h  +
xor eax eax +
mov [ebp+var_3C] 7 +
push offset aCreativeclouds  +
lea ecx [ebp+var_50] +
mov [ebp+var_40] ebx +
mov word ptr [ebp+var_50] ax +
call loc_401E70  +
push ecx  +
mov byte ptr [ebp+var_4] 1 +
lea edx [ebp+var_50] +
mov ebx 1 +
lea ecx [ebp+pszPath] +
mov [ebp+var_38] ebx +
call sub_41E3F0  +
add esp 4 +
mov [ebp+var_29] 0 +
test al al +
jnz loc_409B88  +
mov [ebp+var_29] 1 +
mov [ebp+var_4] 0 +
test bl 1 +
jz loc_409BBD  +
mov eax [ebp+var_3C] +
cmp eax 8 +
jb loc_409BA9  +
inc eax  +
lea ecx [ebp+var_50] +
push eax  +
push [ebp+var_50]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_3C] 7 +
mov [ebp+var_40] 0 +
mov word ptr [ebp+var_50] ax +
cmp [ebp+var_29] 0 +
jz loc_409C9B  +
mov eax dword_4A2908 +
test eax eax +
jnz loc_409C03  +
push 84h  +
call sub_44FE54  +
mov esi eax +
mov [ebp+var_30] esi +
push 84h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 2 +
call sub_453150  +
add esp 10h +
mov ecx esi +
call sub_407600  +
mov byte ptr [ebp+var_4] 0 +
mov dword_4A2908 eax +
mov ecx [eax+4] +
add eax 4 +
push offset aCouldNotGetTem  +
push offset word_4873C8  +
push eax  +
call dword ptr [ecx+24h]  +
sub esp 0Ch +
mov ecx esp +
mov [ebp+var_30] esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_409C37  +
mov eax [ecx] +
jmp loc_409C39  +
mov eax ecx +
push 9  +
xor edx edx +
push offset aDeletelbs  +
mov [eax] dx +
call loc_401E70  +
sub esp 18h +
mov byte ptr [ebp+var_4] 3 +
mov ecx esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_409C6B  +
mov eax [ecx] +
jmp loc_409C6D  +
mov eax ecx +
push 26h  +
xor edx edx +
push offset aOutputResultFa  +
mov [eax] dx +
call loc_401E70  +
push edi  +
mov byte ptr [ebp+var_4] 0 +
call sub_409D60  +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_409D35  +
inc ecx  +
push ecx  +
jmp loc_409D2A  +
push ecx  +
lea ecx [ebp+pszPath] +
call sub_41E590  +
add esp 4 +
test al al +
jnz loc_409CF1  +
call sub_4077C0  +
cmp [ebp+var_14] 8 +
lea ecx [ebp+pszPath] +
cmovnb ecx dword ptr [ebp+pszPath] +
push ecx  +
lea edx [eax+4] +
mov eax [edx] +
push offset aCouldNotDelete  +
push offset word_4873C8  +
push edx  +
call dword ptr [eax+24h]  +
sub esp 8 +
mov ecx esp +
mov [ebp+var_34] esp +
push offset aDeletelbs  +
call loc_401D00  +
sub esp 18h +
mov byte ptr [ebp+var_4] 4 +
mov ecx esp +
push offset aOutputResultFa  +
jmp loc_409D11  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_34] esp +
push offset aDeletelbs  +
call loc_401D00  +
sub esp 18h +
mov byte ptr [ebp+var_4] 5 +
mov ecx esp +
push offset aOutputResultSu  +
call loc_401D00  +
push edi  +
mov byte ptr [ebp+var_4] 0 +
call sub_409D60  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_409D35  +
inc eax  +
push eax  +
push dword ptr [ebp+pszPath]  +
lea ecx [ebp+pszPath] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4764F4  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_54] 0 +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_24] 7 +
mov [ebp+var_28] 0 +
mov word ptr [ebp+var_38] ax +
xorps xmm0 xmm0 +
mov [ebp+var_14] eax +
movq [ebp+var_1C] xmm0 +
mov dword ptr [ebp+var_1C+4] eax +
mov byte ptr [ebp+var_14] al +
mov dword ptr [ebp+var_1C] eax +
mov [ebp+var_20] eax +
lea eax [ebp+arg_4] +
mov byte ptr [ebp+var_4] 5 +
push eax  +
lea ecx [ebp+var_1C] +
call sub_4111F0  +
test al al +
jnz loc_409E9C  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_409DF6  +
mov eax [edi] +
jmp loc_409DF8  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+arg_4] +
push eax  +
mov ecx edi +
call sub_4020A0  +
mov byte ptr [ebp+var_4] 6 +
mov esi dword ptr [ebp+var_1C+4] +
test esi esi +
jz loc_409E21  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_409E21  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp+var_14] 0 +
jz loc_409E2D  +
call ds:CoUninitialize  +
test esi esi +
jz loc_409E37  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_24] +
cmp eax 8 +
jb loc_409E4C  +
inc eax  +
lea ecx [ebp+var_38] +
push eax  +
push [ebp+var_38]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_24] 7 +
mov word ptr [ebp+var_38] ax +
mov eax [ebp+arg_18] +
mov [ebp+var_28] 0 +
cmp eax 8 +
jb loc_409E75  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_4024A0  +
mov ecx [ebp+arg_30] +
xor eax eax +
mov [ebp+arg_18] 7 +
mov [ebp+arg_14] 0 +
mov word ptr [ebp+arg_4] ax +
cmp ecx 8 +
jb loc_409FF2  +
inc ecx  +
push ecx  +
jmp loc_409FE7  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_1C] +
call loc_411E60  +
push 0Ah  +
xor eax eax +
mov [ebp+var_3C] 7 +
push offset aActiontype  +
lea ecx [ebp+var_50] +
mov [ebp+var_40] 0 +
mov word ptr [ebp+var_50] ax +
call loc_401E70  +
push ecx  +
mov eax esp +
mov byte ptr [ebp+var_4] 7 +
mov esi [ebp+var_20] +
mov [eax] esi +
test esi esi +
jz loc_409EE1  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea eax [ebp+arg_1C] +
push eax  +
lea eax [ebp+var_50] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_412340  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_3C] +
cmp eax 8 +
jb loc_409F0A  +
inc eax  +
lea ecx [ebp+var_50] +
push eax  +
push [ebp+var_50]  +
call loc_4024A0  +
lea eax [ebp+var_38] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_412740  +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_409F3C  +
mov eax [edi] +
jmp loc_409F3E  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+var_38] +
push eax  +
mov ecx edi +
call sub_4020A0  +
mov byte ptr [ebp+var_4] 4 +
test esi esi +
jz loc_409F5C  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov byte ptr [ebp+var_4] 8 +
mov esi dword ptr [ebp+var_1C+4] +
test esi esi +
jz loc_409F75  +
mov ecx esi +
xor esi esi +
test ecx ecx +
jz loc_409F75  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [ebp+var_14] 0 +
jz loc_409F81  +
call ds:CoUninitialize  +
test esi esi +
jz loc_409F8B  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_24] +
cmp eax 8 +
jb loc_409FA0  +
inc eax  +
lea ecx [ebp+var_38] +
push eax  +
push [ebp+var_38]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_24] 7 +
mov word ptr [ebp+var_38] ax +
mov eax [ebp+arg_18] +
mov [ebp+var_28] 0 +
cmp eax 8 +
jb loc_409FC9  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+arg_18] 7 +
mov word ptr [ebp+arg_4] ax +
mov eax [ebp+arg_30] +
mov [ebp+arg_14] 0 +
cmp eax 8 +
jb loc_409FF2  +
inc eax  +
push eax  +
push [ebp+arg_1C]  +
lea ecx [ebp+arg_1C] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 34h  +
***
push 0FFFFFFFFh  +
push offset loc_476520  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov ebx [ebp+arg_0] +
mov [ebp+var_1C] edi +
cmp edi ebx +
jz loc_40A139  +
mov esi [ebx] +
mov ecx [ebx+4] +
cmp esi ecx +
setz al  +
test al al +
jz loc_40A07E  +
mov edx [edi+4] +
push ecx  +
mov ecx [edi] +
call loc_402FE0  +
mov eax [edi] +
add esp 4 +
jmp loc_40A136  +
sub ecx esi +
mov eax 2AAAAAABh +
imul  ecx +
mov ecx [edi+4] +
sub ecx [edi] +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp+var_18] eax +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp+var_14] eax +
cmp [ebp+var_18] eax +
ja loc_40A0EC  +
mov eax [edi] +
mov ecx esi +
mov edx [ebx+4] +
push eax  +
call sub_40A460  +
mov edx [edi+4] +
mov ecx eax +
call loc_402FE0  +
mov ecx [ebx+4] +
mov eax 2AAAAAABh +
sub ecx [ebx] +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea ecx [eax+eax*2] +
mov eax [edi] +
lea eax [eax+ecx*8] +
jmp loc_40A136  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp [ebp+var_18] eax +
ja loc_40A14F  +
mov eax [ebp+var_14] +
push dword ptr [edi]  +
mov ecx [ebx] +
lea eax [eax+eax*2] +
lea esi [esi+eax*8] +
mov edx esi +
call sub_40A460  +
mov edx [ebx+4] +
add esp 4 +
mov byte ptr [ebp+var_14] 0 +
push [ebp+var_14]  +
push ecx  +
push dword ptr [edi+4]  +
mov ecx esi +
call loc_40A4A0  +
add esp 0Ch +
mov [edi+4] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [edi] +
test eax eax +
jz loc_40A182  +
mov edx [edi+4] +
push ecx  +
mov ecx eax +
call loc_402FE0  +
mov esi [edi] +
mov eax 2AAAAAABh +
mov ecx [edi+8] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov ecx [ebx+4] +
mov eax 2AAAAAABh +
sub ecx [ebx] +
imul  ecx +
mov ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
call loc_40A310  +
test al al +
jz loc_40A139  +
mov [ebp+var_4] 0 +
mov edx [ebx+4] +
mov byte ptr [ebp+var_14] 0 +
push [ebp+var_14]  +
push ecx  +
push dword ptr [edi]  +
mov ecx [ebx] +
jmp loc_40A12E  +
***
push 0FFFFFFFFh  +
push offset loc_476540  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov ebx [ebp+arg_0] +
mov eax 2AAAAAABh +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov ecx [ebx+4] +
sub ecx [ebx] +
imul  ecx +
mov [ebp+var_18] esi +
sar edx 2 +
mov edi edx +
mov dword ptr [esi] 0 +
shr edi 1Fh +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
add edi edx +
jz loc_40A29C  +
cmp edi 0AAAAAAAh +
jbe loc_40A265  +
push offset aVectorTTooLong  +
call sub_44EC5C  +
push edi  +
call loc_402990  +
mov [esi] eax +
lea ecx [edi+edi*2] +
mov [esi+4] eax +
mov eax [esi] +
mov [ebp+var_4] 0 +
mov byte ptr [ebp+var_14] 0 +
push [ebp+var_14]  +
lea eax [eax+ecx*8] +
mov [esi+8] eax +
mov edx [ebx+4] +
push ecx  +
push dword ptr [esi]  +
mov ecx [ebx] +
call loc_40A4A0  +
add esp 0Ch +
mov [esi+4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
xor eax eax +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 7 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_402610  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jnz loc_40A33A  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp edi 0AAAAAAAh +
ja loc_40A360  +
push edi  +
call loc_402990  +
mov [esi] eax +
lea ecx [edi+edi*2] +
mov [esi+4] eax +
mov eax [esi] +
pop edi  +
lea eax [eax+ecx*8] +
mov [esi+8] eax +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
sub esp 0Ch +
mov edx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_4] esi +
test ecx ecx +
jnz loc_40A394  +
cmp edx [esi+10h] +
ja loc_40A394  +
mov eax edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push ebx  +
mov ebx [esi+10h] +
push edi  +
cmp edx ebx +
jnb loc_40A448  +
sub ebx edx +
cmp ecx ebx +
ja loc_40A448  +
mov eax 1 +
sub eax ecx +
add ebx eax +
mov eax [esi+14h] +
mov [ebp+var_8] eax +
cmp eax 8 +
jb loc_40A3C3  +
mov eax [esi] +
jmp loc_40A3C5  +
mov eax esi +
lea eax [eax+edx*2] +
mov [ebp+arg_4] eax +
test ebx ebx +
jz loc_40A3E7  +
mov edx [ebp+arg_0] +
mov ecx ebx +
movzx edx word ptr [edx] +
cmp [eax] dx +
jz loc_40A423  +
add eax 2 +
sub ecx 1 +
jnz loc_40A3D7  +
mov ecx [ebp+arg_8] +
xor eax eax +
test eax eax +
jz loc_40A448  +
test ecx ecx +
jz loc_40A40B  +
mov edx [ebp+arg_0] +
mov edi ecx +
mov esi eax +
mov cx [esi] +
cmp cx [edx] +
jnz loc_40A428  +
add esi 2 +
add edx 2 +
sub edi 1 +
jnz loc_40A3F8  +
cmp [ebp+var_8] 8 +
mov esi [ebp+var_4] +
jb loc_40A416  +
mov esi [esi] +
pop edi  +
sub eax esi +
pop ebx  +
sar eax 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_8] +
jmp loc_40A3E9  +
sbb ecx ecx +
and ecx 0FFFFFFFEh +
add ecx 1 +
jz loc_40A40B  +
mov edx eax +
or ecx 0FFFFFFFFh +
sub edx [ebp+arg_4] +
sar edx 1 +
sub ecx edx +
add ebx ecx +
mov ecx [ebp+arg_8] +
add eax 2 +
jmp loc_40A3C8  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov ebx edx +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
cmp esi ebx +
jz loc_40A48B  +
cmp edi esi +
jz loc_40A481  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call loc_402610  +
add esi 18h +
add edi 18h +
cmp esi ebx +
jnz loc_40A471  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476571  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx edx +
mov edi ecx +
mov esi [ebp+8] +
mov [ebp-14h] esi +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-14h] +
mov edi [ebp+8] +
cmp esi edi +
jz loc_40A57D  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40A557  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40A56F  +
mov eax [esi] +
jmp loc_40A571  +
mov eax esi +
xor ecx ecx +
add esi 18h +
mov [eax] cx +
cmp esi edi +
jnz loc_40A544  +
push 0  +
push 0  +
call sub_452780  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi edx +
test esi esi +
jnz loc_40A5B4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_40A5D1  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_40A5EF  +
cmp edi esi +
jb loc_40A5EF  +
push esi  +
push ebx  +
push ecx  +
call loc_452BD0  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
push edi  +
push 0  +
push ecx  +
call sub_453150  +
add esp 0Ch +
test ebx ebx +
jnz loc_40A619  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop ebx  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
cmp edi esi +
jnb loc_40A60F  +
call sub_45DE51  +
mov dword ptr [eax] 22h +
call sub_45B2BA  +
pop ebx  +
pop edi  +
mov eax 22h +
pop esi  +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_47C344 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_452277  +
mov ecx [ebp+var_4] +
add esp 8 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_47C344 +
push eax  +
call sub_4522DA  +
pop ecx  +
retn   +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
push 0FFFFFFFFh  +
push (offset loc_4765D9+1)  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_28] esi +
mov edi [ebp+arg_0] +
push 0  +
mov [ebp+var_2C] esi +
call sub_44ECC9  +
mov [ebp+var_4] 0 +
mov dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov byte ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+18h] ax +
mov [esi+1Ch] eax +
mov [esi+20h] ax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov [esi+2Ch] eax +
mov [esi+30h] al +
mov byte ptr [ebp+var_4] 6 +
test edi edi +
jnz loc_40A7E0  +
lea eax [ebp+var_20] +
mov [ebp+var_24] offset off_47C344 +
push eax  +
lea eax [ebp+var_18] +
mov [ebp+var_18] offset aBadLocaleName +
xorps xmm0 xmm0 +
mov [ebp+var_14] 1 +
push eax  +
movq [ebp+var_20] xmm0 +
call sub_452277  +
add esp 8 +
mov [ebp+var_24] offset off_47C380 +
lea eax [ebp+var_24] +
push offset unk_49C548  +
push eax  +
call sub_452780  +
push edi  +
push esi  +
call sub_44F011  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476600  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
call sub_44F05C  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_40A84E  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_40A865  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_40A87C  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_40A893  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_40A8AA  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_40A8C1  +
push eax  +
call sub_45B0EB  +
add esp 4 +
mov ecx esi +
mov dword ptr [esi+4] 0 +
call sub_44ED21  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov dword ptr [esi] offset off_47C380 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_47C38C +
jz loc_40A93D  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_47C38C +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476620  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_40A9CA  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40A9CA  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_48CFD4 +
jz loc_40A9FD  +
push 8  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ecx+4] +
push dword ptr [ecx]  +
mov ecx eax +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
mov edx [eax] +
call dword ptr [edx+8]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
lea edx [ebp+var_8] +
sub esp 8 +
push esi  +
push [ebp+arg_0]  +
push edx  +
call dword ptr [eax+0Ch]  +
mov esi [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_40AA93  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_40AA93  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
cmp eax [edx+4] +
jnz loc_40AAC0  +
mov eax [esi] +
cmp eax [ebp+arg_4] +
jnz loc_40AAC0  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_476650  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_4] 0 +
cmp [ebp+arg_18] 0 +
setz al  +
test al al +
jnz loc_40AB23  +
push 2  +
push offset asc_48C984  +
lea ecx [ebp+arg_8] +
call loc_40FA00  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+arg_0] +
call sub_40AA10  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+arg_8] +
mov byte ptr [ebp+var_4] 1 +
call loc_40FB30  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_40AB55  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
lea eax [ebp+arg_8] +
mov ecx esi +
push eax  +
call sub_40ED80  +
mov ecx [ebp+arg_1C] +
cmp ecx 10h +
jb loc_40AB75  +
inc ecx  +
push ecx  +
push [ebp+arg_8]  +
lea ecx [ebp+arg_8] +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
mov [ebp+var_C] esi +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
push [ebp+arg_8]  +
lea ecx [ebp+var_28] +
push [ebp+arg_4]  +
call sub_40AAD0  +
mov ecx eax +
add esp 20h +
cmp dword ptr [ecx+14h] 10h +
jb loc_40ABE4  +
mov ecx [ecx] +
lea eax [esi+4] +
mov dword ptr [esi] offset off_47C344 +
xorps xmm0 xmm0 +
mov [ebp+var_10] ecx +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [ebp+var_10] +
push eax  +
mov byte ptr [ebp+var_C] 1 +
call sub_452277  +
mov eax [ebp+var_14] +
add esp 8 +
mov dword ptr [esi] offset off_47C380 +
cmp eax 10h +
jb loc_40AC23  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402500  +
mov ecx [ebp+arg_4] +
mov eax esi +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_8] +
mov [esi+10h] ecx +
mov ecx [ebp+var_8] +
mov dword ptr [esi] offset off_48D480 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push 0FFFFFFFFh  +
push offset loc_476678  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov edx [ebp+arg_0] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40ACCA  +
xor ecx ecx +
jmp loc_40ACD9  +
mov ecx edx +
lea edi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40ACD0  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_2C] +
call loc_402170  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_2C] +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
push eax  +
call sub_40AB90  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_40AD10  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_48C870 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
call sub_44F1EF  +
mov esi [ebp+8] +
mov edx eax +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40AD76  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40AD80  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp eax 1 +
jnz loc_40ADEF  +
push 15h  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
push esi  +
call loc_40AD30  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 18h +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
and ecx eax +
jz loc_40AE2B  +
cmp byte ptr [ebp+0Ch] 0 +
jnz loc_40AE31  +
test cl 4 +
jnz loc_40AE3A  +
test cl 2 +
jnz loc_40AE67  +
jmp loc_40AE94  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_452780  +
call sub_40FEB0  +
push eax  +
push 1  +
push offset aIos_baseBadbit  +
lea ecx [esp+10h] +
call sub_40AC80  +
push offset unk_49C3F4  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_48C94C +
push eax  +
call sub_452780  +
call sub_40FEB0  +
push eax  +
push 1  +
push offset aIos_baseFailbi  +
lea ecx [esp+10h] +
call sub_40AC80  +
push offset unk_49C3F4  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_48C94C +
push eax  +
call sub_452780  +
call sub_40FEB0  +
push eax  +
push 1  +
push offset aIos_baseEofbit  +
lea ecx [esp+10h] +
call sub_40AC80  +
push offset unk_49C3F4  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_48C94C +
push eax  +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_4766A6  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+30h] +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4766D6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
push 0  +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 201h +
mov dword ptr [edi+18h] 6 +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
call loc_40AE00  +
push 8  +
call sub_44FE54  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_44EF0E  +
mov [esi+4] eax +
add esp 8 +
mov [edi+30h] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
mov dword ptr [edi] offset off_48D480 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_48C94C +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
mov dword ptr [edi] offset off_48D480 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_48C870 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
mov dword ptr [edi] offset off_48D480 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40B140  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40B156  +
mov esi [esi] +
lea eax [edi+4] +
mov byte ptr [esi] 0 +
push eax  +
mov dword ptr [edi] offset off_47C344 +
call sub_4522DA  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
cmp dword ptr [ecx+24h] 10h +
lea eax [ecx+10h] +
jb locret_40B17B  +
mov eax [eax] +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40B1A3  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40B1B9  +
mov esi [esi] +
lea eax [edi+4] +
mov byte ptr [esi] 0 +
push eax  +
mov dword ptr [edi] offset off_47C344 +
call sub_4522DA  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40B1DF  +
push 28h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476738  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xorps xmm0 xmm0 +
movq qword ptr [esi+4] xmm0 +
mov [ebp+var_4] 0 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 1 +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [esi] offset off_48C750 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476738  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xorps xmm0 xmm0 +
movq qword ptr [esi+4] xmm0 +
mov [ebp+var_4] 0 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 0 +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [esi] offset off_48D090 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4767A1  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_8C] edi +
push [ebp+arg_0]  +
mov edx offset aNamevaluepairs +
lea ecx [ebp+var_A4] +
call loc_40FF10  +
push offset aStored  +
mov edx eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_88] +
call sub_410020  +
mov esi eax +
mov ebx [ebp+arg_4] +
push offset unk_4A1C80  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebx+4] +
push ecx  +
call sub_45233E  +
push eax  +
mov edx esi +
lea ecx [ebp+var_70] +
call sub_410020  +
push offset aTryingToRetrie  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_58] +
call sub_410020  +
mov esi eax +
mov ecx [ebp+arg_8] +
add ecx 4 +
mov byte ptr [ebp+var_4] 3 +
push offset unk_4A1C80  +
push ecx  +
call sub_45233E  +
push eax  +
mov edx esi +
lea ecx [ebp+var_40] +
call sub_410020  +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_28] +
call sub_410020  +
add esp 28h +
xorps xmm0 xmm0 +
movq qword ptr [edi+4] xmm0 +
mov byte ptr [ebp+var_4] 6 +
lea ecx [edi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [edi] offset off_48D038 +
mov dword ptr [edi+0Ch] 1 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax [ebp+var_14] +
mov dword ptr [edi] offset off_48C750 +
cmp eax 10h +
jb loc_40B40E  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402500  +
mov eax [ebp+var_2C] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_40B435  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_402500  +
mov eax [ebp+var_44] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
cmp eax 10h +
jb loc_40B45C  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_402500  +
mov eax [ebp+var_5C] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
cmp eax 10h +
jb loc_40B483  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_402500  +
mov eax [ebp+var_74] +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] 0 +
mov byte ptr [ebp+var_70] 0 +
cmp eax 10h +
jb loc_40B4B0  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_402500  +
mov eax [ebp+var_90] +
mov [ebp+var_74] 0Fh +
mov [ebp+var_78] 0 +
mov byte ptr [ebp+var_88] 0 +
cmp eax 10h +
jb loc_40B4E3  +
inc eax  +
lea ecx [ebp+var_A4] +
push eax  +
push [ebp+var_A4]  +
call loc_402500  +
mov eax [ebp+arg_8] +
mov [edi+2Ch] eax +
mov eax edi +
mov dword ptr [edi] offset off_48D1AC +
mov [edi+28h] ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4767C8  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov ebx [ebp+arg_0] +
lea eax [ebx+4] +
push eax  +
lea eax [edi+4] +
push eax  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_40B5A9  +
cmp byte ptr [esi] 0 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
jnz loc_40B56E  +
xor ecx ecx +
jmp loc_40B57C  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40B573  +
sub ecx edx +
push ecx  +
push esi  +
lea ecx [ebp+var_28] +
call loc_402170  +
push ebx  +
push edi  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_58] +
call sub_40B2F0  +
push offset unk_49C4BC  +
lea eax [ebp+var_58] +
push eax  +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40B5E3  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40B5F9  +
mov esi [esi] +
lea eax [edi+4] +
mov byte ptr [esi] 0 +
push eax  +
mov dword ptr [edi] offset off_47C344 +
call sub_4522DA  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40B61F  +
push 30h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_48C750 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 1Fh  +
push offset aCloneIsNotImpl  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_48D090 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx esi +
push 7  +
push offset aUnknown  +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
xor eax eax +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
call dword ptr [esi+1Ch]  +
push eax  +
push [ebp+arg_0]  +
mov ecx edi +
call dword ptr [esi+38h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push 0  +
push 0  +
call dword ptr [eax+38h]  +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
call dword ptr [esi+1Ch]  +
push eax  +
push [ebp+arg_0]  +
mov eax [esi+40h] +
mov ecx edi +
call eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
mov eax [esi] +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_0]  +
mov eax [eax+30h] +
call eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
mov eax [esi] +
call dword ptr [eax+0Ch]  +
push [ebp+arg_4]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_0]  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
push esi  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
mov eax [esi] +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+40h] +
call eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
retn   +
***
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+14h]  +
***
retn 4  +
***
jmp dword ptr [eax+5Ch]  +
***
mov eax [ecx] +
jmp dword ptr [eax+0A4h]  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 35h  +
push offset aBufferedtransf  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+0Ch] +
call eax  +
test al al +
jnz loc_40BC22  +
push 33h  +
push offset aCryptomaterial  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] al +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_48] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_24] +
push 0  +
push eax  +
lea ecx [ebp+var_3C] +
mov [ebp+var_4C] offset off_48D038 +
mov [ebp+var_40] 4 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
call loc_402270  +
push offset unk_49C4E8  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_4C] offset off_48C744 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 3Bh  +
push offset aCryptomateri_0  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_40BD20  +
mov dword ptr [esi] offset off_48C744 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_48D0AC +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 50h  +
push offset aGeneratablecry  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx eax +
test ecx ecx +
jnz loc_40BE7C  +
retn   +
mov eax [ecx+4] +
mov eax [eax+4] +
add eax 4 +
add eax ecx +
retn   +
***
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx eax +
test ecx ecx +
jnz loc_40BE9C  +
retn   +
mov eax [ecx+4] +
mov eax [eax+4] +
add eax 4 +
add eax ecx +
retn   +
***
mov eax [ecx] +
call dword ptr [eax+4]  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 38h  +
push offset aPk_messageaccu  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 3Ch  +
push offset aPk_messageac_0  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+8]  +
***
mov byte ptr [ecx+10h] 0 +
xor eax eax +
cmp [ecx+10h] al +
setz al  +
retn   +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
xor eax eax +
pop ebp  +
retn 10h  +
***
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_476870  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
push 24h  +
push offset aAlgorithmparam  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_402170  +
push [ebp+arg_0]  +
lea edx [ebp+var_2C] +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_5C] +
call sub_410020  +
push offset aNotUsed  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_44] +
call sub_410020  +
add esp 8 +
xorps xmm0 xmm0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 3 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 6 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax [ebp+var_30] +
cmp eax 10h +
jb loc_40C143  +
inc eax  +
lea ecx [ebp+var_44] +
push eax  +
push [ebp+var_44]  +
call loc_402500  +
mov eax [ebp+var_48] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
cmp eax 10h +
jb loc_40C16A  +
inc eax  +
lea ecx [ebp+var_5C] +
push eax  +
push [ebp+var_5C]  +
call loc_402500  +
mov eax [ebp+var_18] +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
cmp eax 10h +
jb loc_40C191  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_48C6DC +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476890  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_48CF48 +
call sub_44F130  +
test al al +
jnz loc_40C20A  +
cmp [esi+8] al +
jz loc_40C20A  +
cmp [esi+9] al +
jnz loc_40C20A  +
push dword ptr [esi+4]  +
lea ecx [ebp+var_34] +
call sub_40C080  +
push offset unk_49C51C  +
lea eax [ebp+var_34] +
push eax  +
call sub_452780  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C217  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4768B6  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_48CF48 +
call sub_44F130  +
test al al +
jnz loc_40C291  +
cmp [esi+8] al +
jz loc_40C291  +
cmp [esi+9] al +
jnz loc_40C291  +
push dword ptr [esi+4]  +
lea ecx [ebp+var_34] +
call sub_40C080  +
push offset unk_49C51C  +
lea eax [ebp+var_34] +
push eax  +
call sub_452780  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C29E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40C2AF  +
push 10h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_48C6DC +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4768E6  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_40C3B6  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call loc_43D630  +
pop ebp  +
retn 10h  +
***
push 1  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call loc_43D630  +
pop ebp  +
retn 10h  +
***
mov eax [ecx] +
push [ebp+arg_0]  +
call dword ptr [eax+0C0h]  +
pop ebp  +
retn 10h  +
***
retn 8  +
***
mov ecx [ecx+44h] +
push 1  +
push 0FFFFFFFFh  +
push 0  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+14h]  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_47691C  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [esi+44h] +
test ecx ecx +
jz loc_40C49A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [esi+30h] +
xor al al +
mov ecx [esi+2Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 1 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C4C3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+30h] +
xor al al +
mov ecx [esi+2Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C52F  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx+8] +
xor al al +
mov ecx [ecx+4] +
push edi  +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476988  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
xor ecx ecx +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
mov byte ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_48D31C +
mov dword ptr [esi+4] offset off_48D30C +
mov [ebp+var_18] 0 +
call sub_40FD30  +
mov [ebp+var_14] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov byte ptr [ebp+var_28] 0 +
push ecx  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 3 +
push eax  +
lea ecx [ebp+var_34] +
call sub_410120  +
add esp 8 +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 4 +
call sub_43E0E0  +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_40C5F8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp+var_14] +
xor al al +
mov ecx [ebp+var_18] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_40C647  +
push 20h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx+14h] +
xor al al +
mov ecx [ecx+10h] +
push edi  +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
pop edi  +
retn   +
***
mov ecx [ecx+4] +
test ecx ecx +
jz locret_40C67D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4769E0  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_28] esi +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov dword ptr [esi+0Ch] 0 +
mov [ebp+var_2C] esi +
mov dword ptr [esi+14h] 0 +
mov [ebp+var_4] 2 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C6D8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp+arg_C] +
mov [esi+0Ch] eax +
mov [ebp+var_4] 3 +
push ecx  +
lea ecx [esi+18h] +
mov dword ptr [esi] offset off_48C87C +
mov dword ptr [esi+4] offset off_48CFC4 +
call sub_40C560  +
mov [ebp+var_4] 4 +
xor ecx ecx +
mov dword ptr [esi] offset off_48C7A0 +
mov dword ptr [esi+4] offset off_48C768 +
mov [ebp+var_14] 0 +
call sub_40FD30  +
mov [ebp+var_10] 0 +
mov [ebp+var_20] edi +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_24] 0 +
push ecx  +
lea eax [ebp+var_24] +
mov byte ptr [ebp+var_4] 6 +
push eax  +
lea ecx [ebp+var_38] +
call sub_410120  +
add esp 8 +
push eax  +
mov byte ptr [ebp+var_4] 7 +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+1Ch]  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+0C4h]  +
mov ecx [ebp+var_34] +
test ecx ecx +
jz loc_40C767  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp+var_10] +
xor al al +
mov ecx [ebp+var_14] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset sub_476706  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40C7D9  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40C7EA  +
push 38h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ecx+8] +
xor eax eax +
push esi  +
mov esi [ecx+0Ch] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_40C828  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476A08  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea edx [ebp+var_24] +
push edx  +
mov [ebp+var_10] 0 +
call dword ptr [eax+4]  +
mov ecx eax +
mov [ebp+var_4] 0 +
call loc_434810  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_432E00  +
mov edx [ebp+var_1C] +
xor eax eax +
mov ebx [ebp+var_18] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_40C8B3  +
call sub_4746E8  +
jmp loc_40C8B8  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476A08  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea edx [ebp+var_24] +
push edx  +
mov [ebp+var_10] 0 +
call dword ptr [eax+8]  +
mov ecx eax +
mov [ebp+var_4] 0 +
call loc_434810  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_432E00  +
mov edx [ebp+var_1C] +
xor eax eax +
mov ebx [ebp+var_18] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_40C953  +
call sub_4746E8  +
jmp loc_40C958  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [eax+1Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
call dword ptr [eax+0Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 51h  +
push offset aPk_messageenco  +
lea ecx [ebp-24h] +
mov dword ptr [ebp-10h] 0Fh +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-24h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-48h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-24h] +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-4Ch] offset off_48D038 +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-28h] 0Fh +
mov dword ptr [ebp-2Ch] 0 +
mov byte ptr [ebp-3Ch] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-4Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-4Ch] offset off_48D090 +
call sub_452780  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_476A67  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
xor ecx ecx +
mov [ebp+var_14] esi +
mov dword ptr [esi+8] 0 +
call sub_40FD30  +
mov dword ptr [esi+0Ch] 0 +
mov [ebp+var_4] 2 +
xor ecx ecx +
mov dword ptr [esi+14h] 0 +
call sub_40FD30  +
mov dword ptr [esi+18h] 0 +
mov byte ptr [ebp+var_4] 3 +
xor ecx ecx +
mov dword ptr [esi+20h] 0 +
call sub_40FD30  +
mov dword ptr [esi+24h] 0 +
mov byte ptr [ebp+var_4] 4 +
xor ecx ecx +
mov dword ptr [esi+2Ch] 0 +
call sub_40FD30  +
mov dword ptr [esi+30h] 0 +
mov byte ptr [ebp+var_4] 5 +
lea edi [esi+34h] +
cmp dword_4A291C 0 +
mov [ebp+var_10] edi +
jnz loc_40CB54  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 6 +
lea edi [esi+48h] +
cmp dword_4A291C 0 +
mov [ebp+var_10] edi +
jnz loc_40CBB1  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov ecx eax +
mov dword ptr [edi+10h] 0 +
mov eax esi +
mov dword ptr [ecx+4] 0 +
mov ecx [edi+0Ch] +
mov dword ptr [ecx] 0 +
mov byte ptr [esi+5Ch] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+48h]  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
mov edx [eax] +
call dword ptr [edx+0Ch]  +
cmp byte ptr [esi+5Ch] 0 +
jz loc_40CC3D  +
cmp [ebp+arg_4] 0 +
jnz loc_40CC3D  +
mov byte ptr [esi+5Ch] 1 +
pop esi  +
pop ebp  +
retn 8  +
mov byte ptr [esi+5Ch] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
mov esi ecx +
xor eax eax +
push edi  +
mov edx [esi+50h] +
mov ecx edx +
mov ebx [esi+54h] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40CC77  +
call sub_4746E8  +
jmp loc_40CC7C  +
call sub_45B0EB  +
mov edx [esi+3Ch] +
xor eax eax +
mov ebx [esi+40h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40CCA1  +
call sub_4746E8  +
jmp loc_40CCA6  +
call sub_45B0EB  +
mov edx [esi+30h] +
add esp 4 +
mov ecx [esi+2Ch] +
mov edi edx +
xor al al +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [esi+24h] +
xor al al +
mov ecx [esi+20h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [esi+18h] +
xor al al +
mov ecx [esi+14h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [esi+0Ch] +
xor al al +
mov ecx [esi+8] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push 0  +
push [ebp+arg_14]  +
sub esp 8 +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call loc_4230B0  +
add esp 1Ch +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [esi+58h] +
test ecx ecx +
jz loc_40CD6A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edi [esi+54h] +
lea eax [esi+38h] +
mov ecx [eax+18h] +
cmp edi eax +
jnz loc_40CD7F  +
mov byte ptr [eax+11h] 0 +
xor al al +
stos   +
mov edi [esi+34h] +
lea eax [esi+8] +
mov ecx [eax+28h] +
cmp edi eax +
jnz loc_40CD94  +
mov byte ptr [eax+21h] 0 +
xor al al +
stos   +
test [ebp+arg_0] 1 +
jz loc_40CDA5  +
push 60h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [esi+58h] +
test ecx ecx +
jz loc_40CDFA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edi [esi+54h] +
lea eax [esi+38h] +
mov ecx [eax+18h] +
cmp edi eax +
jnz loc_40CE0F  +
mov byte ptr [eax+11h] 0 +
xor al al +
stos   +
mov edi [esi+34h] +
lea eax [esi+8] +
mov ecx [eax+28h] +
cmp edi eax +
jnz loc_40CE24  +
mov byte ptr [eax+21h] 0 +
xor al al +
stos   +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx+28h] +
push edi  +
mov edi [ecx+2Ch] +
cmp edi ecx +
jnz loc_40CE55  +
mov byte ptr [ecx+21h] 0 +
xor al al +
mov ecx edx +
stos   +
pop edi  +
retn   +
***
mov edx [ecx+18h] +
push edi  +
mov edi [ecx+1Ch] +
cmp edi ecx +
jnz loc_40CE75  +
mov byte ptr [ecx+11h] 0 +
xor al al +
mov ecx edx +
stos   +
pop edi  +
retn   +
***
mov ecx [ebp+arg_0] +
call loc_4217B0  +
xor al al +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_4] +
push 1  +
push 0  +
push 1  +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov byte ptr [ebp+var_4] 5 +
call dword ptr [eax+14h]  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push 1  +
push 0  +
push 1  +
push ecx  +
mov ecx esi +
mov byte ptr [ebp+arg_0] 0 +
call dword ptr [eax+14h]  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_40CF0C  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ecx  +
retn   +
***
lea eax [ecx+20h] +
retn   +
***
add ecx 34h +
pop ebp  +
jmp sub_4225D0  +
***
add ecx 34h +
pop ebp  +
jmp sub_422800  +
***
add ecx 0FFFFFF54h +
pop ebp  +
jmp sub_4225D0  +
***
add ecx 0FFFFFF54h +
pop ebp  +
jmp sub_422800  +
***
push ecx  +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call sub_438F30  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476AA3  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+0Ch] 0 +
mov [ebp+var_14] esi +
mov dword ptr [esi+14h] 0 +
mov [ebp+var_4] 2 +
xor ecx ecx +
mov dword ptr [esi] offset off_48D0B8 +
mov dword ptr [esi+4] offset off_48D09C +
mov dword ptr [esi+34h] 0 +
call sub_40FD30  +
mov dword ptr [esi+38h] 0 +
mov byte ptr [ebp+var_4] 3 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D050  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+arg_0] +
mov eax esi +
mov [esi+0Ch] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
mov [esi+0Ch] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+38h] +
xor al al +
mov ecx [esi+34h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D0BF  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40D0D0  +
push 3Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476ADE  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+0Ch] 0 +
mov [ebp+var_14] esi +
mov dword ptr [esi+14h] 0 +
mov [ebp+var_4] 2 +
xor ecx ecx +
mov dword ptr [esi] offset off_48D48C +
mov dword ptr [esi+4] offset off_48D19C +
mov dword ptr [esi+1Ch] 0 +
call sub_40FD30  +
mov dword ptr [esi+20h] 0 +
mov byte ptr [ebp+var_4] 3 +
xor ecx ecx +
mov dword ptr [esi+28h] 0 +
call sub_40FD30  +
mov dword ptr [esi+2Ch] 0 +
mov byte ptr [ebp+var_4] 4 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D17F  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov eax esi +
mov dword ptr [esi+0Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+2Ch] +
xor al al +
mov ecx [esi+28h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [esi+20h] +
xor al al +
mov ecx [esi+1Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 8 +
mov [ebp+var_4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D201  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40D212  +
push 38h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476B2E  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_14] ebx +
push 3Ch  +
mov [ebp+var_18] ebx +
mov [ebp+var_14] 48h +
mov byte ptr [ebp+var_10] 0 +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+var_1C] edi +
push 3Ch  +
push 0  +
push edi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 0Ch +
push 38h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_20] esi +
push 38h  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_453150  +
add esp 8 +
mov ecx esi +
call sub_40D0F0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0 +
call sub_40CFC0  +
push [ebp+arg_0]  +
mov ecx ebx +
mov [ebp+var_4] 0FFFFFFFFh +
sub esp 8 +
push eax  +
call sub_43DAF0  +
push ecx  +
lea eax [ebp+var_10] +
mov [ebp+var_4] 2 +
push eax  +
mov edx offset aInsertlinebrea +
mov dword ptr [ebx] offset off_48D1E8 +
lea ecx [ebp+var_2C] +
mov dword ptr [ebx+4] offset off_48D54C +
call sub_4101D0  +
add esp 8 +
mov ecx eax +
mov byte ptr [ebp+var_4] 3 +
movzx eax byte ptr [ecx+8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aMaxlinelength  +
call sub_410620  +
push eax  +
mov ecx ebx +
call loc_425440  +
mov ecx [ebp+var_28] +
test ecx ecx +
jz loc_40D32D  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset sub_47691C  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov ecx [esi+44h] +
test ecx ecx +
jz loc_40D38A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [esi+30h] +
xor al al +
mov ecx [esi+2Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 1 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D3B3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40D3C4  +
push 48h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476BA6  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
push 0  +
mov [ebp+var_14] 0 +
mov dword ptr [edi+8] offset unk_48D2DC +
mov dword ptr [edi+40h] offset unk_48C6D0 +
call sub_40D850  +
push ecx  +
lea ecx [edi+38h] +
mov [ebp+var_4] 0 +
call sub_40DA00  +
mov byte ptr [ebp+var_4] 1 +
lea esi [edi+6Ch] +
cmp dword_4A291C 0 +
mov eax [edi+8] +
mov dword ptr [edi] offset off_48D2E8 +
mov dword ptr [edi+4] offset off_48D068 +
mov dword ptr [edi+34h] offset off_48D2CC +
mov dword ptr [edi+38h] offset off_48CEF4 +
mov dword ptr [edi+3Ch] offset off_48CFF0 +
mov eax [eax+4] +
mov [ebp+var_14] esi +
mov dword ptr [eax+edi+8] offset off_48D450 +
jnz loc_40D48A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 2 +
lea esi [edi+80h] +
cmp dword_4A291C 0 +
mov [ebp+var_14] esi +
jnz loc_40D4EA  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 3 +
lea esi [edi+94h] +
cmp dword_4A291C 0 +
mov [ebp+var_14] esi +
jnz loc_40D54A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 4 +
lea esi [edi+0A8h] +
cmp dword_4A291C 0 +
mov [ebp+var_14] esi +
jnz loc_40D5AA  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 5 +
lea esi [edi+0BCh] +
cmp dword_4A291C 0 +
mov [ebp+var_14] esi +
jnz loc_40D60A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 6 +
lea esi [edi+0D0h] +
cmp dword_4A291C 0 +
mov [ebp+var_14] esi +
jnz loc_40D66A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
jmp sub_40D710  +
***
add ecx 0Ch +
jmp sub_40D710  +
***
push esi  +
mov esi ecx +
call sub_40D710  +
test [ebp+arg_0] 1 +
jz loc_40D6FF  +
push 0E8h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov esi ecx +
xor eax eax +
push edi  +
mov edx [esi+0D8h] +
mov ecx edx +
mov ebx [esi+0DCh] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D73D  +
call sub_4746E8  +
jmp loc_40D742  +
call sub_45B0EB  +
mov edx [esi+0C4h] +
xor eax eax +
mov ebx [esi+0C8h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D76D  +
call sub_4746E8  +
jmp loc_40D772  +
call sub_45B0EB  +
mov edx [esi+0B0h] +
xor eax eax +
mov ebx [esi+0B4h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D79D  +
call sub_4746E8  +
jmp loc_40D7A2  +
call sub_45B0EB  +
mov edx [esi+9Ch] +
xor eax eax +
mov ebx [esi+0A0h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D7CD  +
call sub_4746E8  +
jmp loc_40D7D2  +
call sub_45B0EB  +
mov edx [esi+88h] +
xor eax eax +
mov ebx [esi+8Ch] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D7FD  +
call sub_4746E8  +
jmp loc_40D802  +
call sub_45B0EB  +
mov edx [esi+74h] +
xor eax eax +
mov ebx [esi+78h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_40D827  +
call sub_4746E8  +
jmp loc_40D82C  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi+44h] offset off_4912A4 +
lea ecx [esi+44h] +
mov dword ptr [ecx+4] offset off_491358 +
call loc_4424D0  +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_40D990  +
***
push 0FFFFFFFFh  +
push offset loc_476BDB  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
cmp [ebp+arg_0] 0 +
mov [ebp+var_14] 0 +
jz loc_40D890  +
mov dword ptr [esi+8] offset unk_48D40C +
cmp dword_4A291C 0 +
lea edi [esi+0Ch] +
mov eax [esi+8] +
mov dword ptr [esi+4] offset off_48C778 +
mov [ebp+arg_0] edi +
mov eax [eax+4] +
mov dword ptr [eax+esi+8] offset off_48D56C +
mov eax [esi+8] +
mov dword ptr [esi] offset off_48CF24 +
mov dword ptr [esi+4] offset off_48D428 +
mov eax [eax+4] +
mov dword ptr [eax+esi+8] offset off_48D3D4 +
jnz loc_40D8DE  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 0 +
lea edi [esi+20h] +
cmp dword_4A291C 0 +
mov [ebp+arg_0] edi +
jnz loc_40D93E  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
xor eax eax +
push esi  +
push edi  +
mov edx [ebx+28h] +
mov ecx edx +
mov esi [ebx+2Ch] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_40D9B7  +
call sub_4746E8  +
jmp loc_40D9BC  +
call sub_45B0EB  +
mov edx [ebx+14h] +
xor eax eax +
mov esi [ebx+18h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_40D9E6  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476C0F  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [esi+8] +
mov dword ptr [esi] offset off_48C5F8 +
mov dword ptr [esi+4] offset off_48CF58 +
push 18h  +
mov eax [eax+4] +
mov dword ptr [eax+esi+8] offset off_48CFF8 +
mov dword ptr [esi+0Ch] offset off_4912A4 +
mov dword ptr [esi+10h] offset off_491358 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov byte ptr [esi+18h] 1 +
mov dword ptr [esi+1Ch] 100h +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+var_10] edi +
mov [ebp+var_4] 2 +
mov ebx [esi+1Ch] +
mov ecx ebx +
mov [edi+8] ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_40DA9A  +
xor eax eax +
jmp loc_40DAA1  +
mov ecx ebx +
call loc_43F720  +
mov [edi+0Ch] eax +
mov eax esi +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi] 0 +
mov [esi+24h] edi +
mov [esi+20h] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
add ecx 0Ch +
mov dword ptr [ecx] offset off_4912A4 +
mov dword ptr [ecx+4] offset off_491358 +
jmp loc_4424D0  +
***
push esi  +
mov esi ecx +
call sub_40D990  +
test [ebp+arg_0] 1 +
jz loc_40DB1C  +
push 38h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+0Ch] +
mov dword ptr [ecx] offset off_4912A4 +
mov dword ptr [ecx+4] offset off_491358 +
call loc_4424D0  +
test [ebp+arg_0] 1 +
jz loc_40DB5C  +
push 38h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_40DB87  +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476CC2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
sub esp 2F0h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-1Ch] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
cmp dword ptr [edi+40h] 0 +
jz loc_40DFD0  +
cmp dword ptr [edi+48h] 0 +
jz loc_40DFD0  +
cmp dword ptr [edi+50h] 0 +
jz loc_40DFD0  +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
push ecx  +
push dword ptr [edi+44h]  +
lea ecx [ebp-64h] +
mov dword ptr [ebp-54h] 0 +
push dword ptr [edi+40h]  +
movups oword ptr [ebp-64h] xmm0 +
call sub_432F80  +
mov byte ptr [ebp-4] 1 +
xorps xmm0 xmm0 +
push ecx  +
push dword ptr [edi+4Ch]  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-40h] 0 +
push dword ptr [edi+48h]  +
movups oword ptr [ebp-50h] xmm0 +
call sub_432F80  +
mov byte ptr [ebp-4] 2 +
xorps xmm0 xmm0 +
push ecx  +
push dword ptr [edi+54h]  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-2Ch] 0 +
push dword ptr [edi+50h]  +
movups oword ptr [ebp-3Ch] xmm0 +
call sub_432F80  +
push 0E8h  +
lea eax [ebp-2A8h] +
mov byte ptr [ebp-4] 3 +
push 0  +
push eax  +
call sub_453150  +
add esp 8 +
lea ecx [ebp-2A8h] +
call sub_40D3E0  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea eax [ebp-50h] +
push eax  +
lea eax [ebp-64h] +
push eax  +
lea ecx [ebp-2A8h] +
call loc_439BE0  +
push 0F4h  +
lea eax [ebp-160h] +
push 0  +
push eax  +
call sub_453150  +
mov eax [ebp-2A0h] +
lea esi [ebp-2A0h] +
add esp 8 +
lea ecx [ebp-154h] +
mov eax [eax+4] +
add esi eax +
call sub_40D3E0  +
mov dword ptr [ebp-160h] offset off_48C6F4 +
mov dword ptr [ebp-15Ch] offset off_48D17C +
mov dword ptr [ebp-158h] offset off_48C6C4 +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-14Ch] +
mov eax [ebp-14Ch] +
push esi  +
mov eax [eax+4] +
add ecx eax +
mov eax [ecx] +
call dword ptr [eax+8]  +
lea esi [edi+1Ch] +
mov byte ptr [ebp-4] 8 +
mov eax [esi+10h] +
lea ecx [ebp-158h] +
mov [ebp-2ACh] eax +
mov eax [ebp-158h] +
mov [ebp-2B8h] esi +
mov eax [eax+8] +
call eax  +
mov edx [ebp-160h] +
lea ecx [ebp-160h] +
mov [ebp-2BCh] eax +
mov edx [edx+40h] +
call edx  +
mov edx [ebp-160h] +
lea ecx [ebp-160h] +
mov [ebp-2B4h] eax +
lea eax [ebp-2C4h] +
push eax  +
mov edx [edx+3Ch] +
call edx  +
lea ecx [ebp-160h] +
mov [ebp-2B0h] eax +
call loc_40F730  +
mov ecx [ebp-2BCh] +
mov edx eax +
push dword ptr [ebp-2B4h]  +
mov esi [ebp-2B0h] +
mov eax [ecx] +
push dword ptr [esi+4]  +
mov eax [eax+8] +
push edx  +
call eax  +
cmp [ebp-2ACh] eax +
jb loc_40DDD2  +
lea ecx [ebp-154h] +
call sub_40D710  +
lea ecx [ebp-2A8h] +
call sub_40D710  +
lea ecx [ebp-3Ch] +
call sub_40C800  +
lea ecx [ebp-50h] +
call sub_40C800  +
lea ecx [ebp-64h] +
call sub_40C800  +
mov eax 7 +
jmp loc_40DFD5  +
mov eax [ebp-160h] +
lea ecx [ebp-160h] +
xorps xmm0 xmm0 +
mov dword ptr [ebp-20h] 0 +
movq qword ptr [ebp-28h] xmm0 +
mov eax [eax+4] +
call eax  +
push eax  +
lea ecx [ebp-28h] +
call sub_40ECD0  +
push 60h  +
lea eax [ebp-1C0h] +
mov byte ptr [ebp-4] 9 +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
lea ecx [ebp-1C0h] +
call sub_4434A0  +
sub esp 8 +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-1C0h] +
mov dword ptr [ebp-1C0h] offset off_48D1B8 +
call sub_43EE50  +
mov byte ptr [ebp-4] 0Bh +
cmp dword ptr [edi+30h] 10h +
mov eax [ebp-20h] +
mov [ebp-2B0h] eax +
mov eax [edi+2Ch] +
mov [ebp-2ACh] eax +
jb loc_40DE5E  +
mov esi [edi+1Ch] +
mov [ebp-2B8h] esi +
lea eax [ebp-1C0h] +
push eax  +
mov eax [ebp-160h] +
lea ecx [ebp-160h] +
mov eax [eax+24h] +
call eax  +
mov esi eax +
mov [ebp-2B4h] esi +
push dword ptr [ebp-2ACh]  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-160h] +
push dword ptr [ebp-2B8h]  +
mov eax [ebp-160h] +
push esi  +
call dword ptr [eax+28h]  +
mov eax [esi] +
mov ecx esi +
push 0  +
push 0  +
call dword ptr [eax+0Ch]  +
push 0  +
push dword ptr [ebp-2B0h]  +
lea eax [ebp-1C0h] +
push esi  +
push eax  +
mov eax [ebp-160h] +
lea ecx [ebp-160h] +
mov eax [eax+30h] +
call eax  +
mov [ebp-2ACh] eax +
mov byte ptr [ebp-4] 0Dh +
mov ecx esi +
mov edx [esi] +
push 1  +
call dword ptr [edx]  +
push 48h  +
mov byte ptr [ebp-4] 0Bh +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-2B0h] esi +
push 48h  +
push 0  +
push esi  +
mov byte ptr [ebp-4] 0Eh +
call sub_453150  +
add esp 0Ch +
push 10h  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
mov [ebp-2B4h] ecx +
sub esp 8 +
mov byte ptr [ebp-4] 0Eh +
xorps xmm0 xmm0 +
lea eax [edi+58h] +
movups oword ptr [ecx] xmm0 +
mov dword ptr [ecx] offset off_48CE40 +
mov dword ptr [ecx+4] offset off_48C628 +
mov [ecx+0Ch] eax +
push ecx  +
mov ecx esi +
call sub_40D230  +
push eax  +
push ecx  +
push dword ptr [ebp-2ACh]  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-2FCh] +
push dword ptr [ebp-20h]  +
call sub_40C680  +
mov byte ptr [ebp-4] 12h +
mov ecx [ebp-2F0h] +
test ecx ecx +
jz loc_40DF6B  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp-1C0h] +
call sub_40CDC0  +
mov edx [ebp-20h] +
xor al al +
mov ecx [ebp-24h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-154h] +
call sub_40D710  +
lea ecx [ebp-2A8h] +
call sub_40D710  +
lea ecx [ebp-3Ch] +
call sub_40C800  +
lea ecx [ebp-50h] +
call sub_40C800  +
lea ecx [ebp-64h] +
call sub_40C800  +
xor eax eax +
jmp loc_40DFD5  +
mov ebx [ebp-14h] +
mov eax offset loc_40DFC6 +
retn   +
mov ebx [ebp-14h] +
mov eax 1 +
jmp loc_40DFD5  +
mov eax 2 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov [ebp+var_4] ecx +
xor esi esi +
nop   +
cmp dword ptr [edi+14h] 8 +
mov ebx [edi+10h] +
jb loc_40E01D  +
mov eax [edi] +
jmp loc_40E01F  +
mov eax edi +
push ebx  +
push esi  +
push eax  +
call sub_40A370  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_40E04A  +
mov ecx [ebp+var_4] +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
push ebx  +
push esi  +
call loc_403090  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
add esi [eax+10h] +
jmp loc_40E010  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push 0FFFFFFFFh  +
push offset loc_476D18  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
lea ecx [ebp+var_28] +
call sub_40E060  +
xor eax eax +
mov [ebp+var_4] 0 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_40] +
push 1  +
xor eax eax +
mov [ebp+var_2C] 7 +
push offset asc_48CCB8  +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
call loc_401E70  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_28] +
call sub_40E000  +
mov eax [ebp+var_2C] +
add esp 4 +
cmp eax 8 +
jb loc_40E17E  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+var_40] ax +
mov byte ptr [ebp+var_4] al +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_40E1AA  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_44] 7 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp+var_58] +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_40] +
push 1  +
xor eax eax +
mov [ebp+var_2C] 7 +
push offset a__0  +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
call loc_401E70  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_28] +
call sub_40E000  +
mov eax [ebp+var_2C] +
add esp 4 +
cmp eax 8 +
jb loc_40E21E  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+var_40] ax +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_40E247  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
push 1Ah  +
push 0  +
push offset aAdobeSystemsIn  +
lea ecx [ebp+var_28] +
call sub_40A370  +
cmp eax 0FFFFFFFFh +
jnz loc_40E277  +
push 11h  +
push 0  +
push offset aAdobeSystems_0  +
lea ecx [ebp+var_28] +
call sub_40A370  +
cmp eax 0FFFFFFFFh +
jnz loc_40E277  +
xor bl bl +
jmp loc_40E279  +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_40E28E  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
call sub_40F420  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
pop ebp  +
retn 4  +
***
mov eax [ecx-8] +
add ecx 0FFFFFFF8h +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_40E311  +
add eax 34h +
retn   +
xor eax eax +
retn   +
***
add ecx 0FFFFFFF8h +
mov eax [ecx] +
jmp dword ptr [eax+44h]  +
***
push 0FFFFFFFFh  +
push offset loc_476D5A  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 110h  +
call sub_44FE54  +
mov edi eax +
mov [ebp+var_10] edi +
push 110h  +
push 0  +
push edi  +
mov [ebp+var_4] 0 +
call sub_453150  +
add esp 10h +
mov ecx edi +
call sub_40CAA0  +
lea esi [edi+60h] +
mov byte ptr [ebp+var_4] 1 +
mov ecx esi +
mov [ebp+var_14] esi +
call sub_40F5F0  +
mov dword ptr [esi] offset off_48CF60 +
mov eax edi +
mov dword ptr [edi] offset off_48C638 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-4] +
add ecx 0FFFFFFFCh +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_40E3E1  +
add eax 3Ch +
retn   +
xor eax eax +
retn   +
***
mov eax [ecx-4] +
add ecx 0FFFFFFFCh +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_40E401  +
add eax 3Ch +
retn   +
xor eax eax +
retn   +
***
add ecx 0FFFFFFF4h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
add ecx 0FFFFFFF4h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+0Ch]  +
***
add ecx 0FFFFFFF8h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
add ecx 0FFFFFFF8h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+0Ch]  +
***
push ecx  +
push esi  +
push edi  +
push 0B0h  +
mov edi ecx +
call sub_44FE54  +
push 0B0h  +
mov esi eax +
push 0  +
push esi  +
mov [ebp+var_4] esi +
call sub_453150  +
add esp 10h +
mov ecx esi +
push edi  +
call sub_40F200  +
pop edi  +
mov dword ptr [esi] offset off_48CF60 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx esi +
push 5  +
push offset aSha1  +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
mov eax [ecx+0ACh] +
retn   +
***
mov eax [ecx+0ACh] +
mov dword ptr [eax] 67452301h +
mov dword ptr [eax+4] 0EFCDAB89h +
mov dword ptr [eax+8] 98BADCFEh +
mov dword ptr [eax+0Ch] 10325476h +
mov dword ptr [eax+10h] 0C3D2E1F0h +
retn   +
***
mov edx [ebp+arg_0] +
mov ecx [ecx+0ACh] +
call sub_440150  +
pop ebp  +
retn 4  +
***
jmp dword ptr [eax+20h]  +
***
mov eax [ecx+8] +
add ecx 8 +
call dword ptr [eax+8]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+0Ch] +
jmp eax  +
***
mov eax [ecx+8] +
add ecx 8 +
call dword ptr [eax+8]  +
jmp loc_40C9D0  +
***
mov eax [ecx+8] +
push esi  +
lea esi [ecx+8] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+8] +
call eax  +
test al al +
jnz loc_40E5B0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+8]  +
mov al 1 +
pop esi  +
retn   +
***
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
retn 4  +
***
sub esp 0Ch +
push ebx  +
mov ebx ecx +
mov eax [ebx+8] +
lea ecx [ebx+8] +
push esi  +
push edi  +
call dword ptr [eax+8]  +
mov edx [ebx] +
mov esi eax +
mov ecx ebx +
mov edi [esi] +
call dword ptr [edx+40h]  +
mov edx [ebx] +
mov ecx ebx +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call dword ptr [edx+3Ch]  +
mov ecx ebx +
mov eax [eax+4] +
push eax  +
call loc_40F730  +
push eax  +
mov ecx esi +
call dword ptr [edi+8]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
sub esp 14h +
add ecx 8 +
push ebx  +
push esi  +
push edi  +
call dword ptr [eax]  +
lea ecx [ebp-14h] +
push ecx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+0Ch]  +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
test esi esi +
jz loc_40E65D  +
lea eax [esi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_40E68B  +
sub eax 4 +
sub esi 1 +
jnz loc_40E650  +
xor esi esi +
mov edx [ebp-0Ch] +
xor eax eax +
mov ebx [ebp-8] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_40E6A2  +
call sub_4746E8  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
jz loc_40E65D  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_437D60  +
sub eax 4 +
lea esi [eax+esi*4] +
jmp loc_40E65F  +
***
call sub_45B0EB  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx+4] +
xor eax eax +
push esi  +
mov esi [ecx+8] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_40E6E8  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
add ecx 18h +
mov eax [ecx] +
jmp dword ptr [eax+38h]  +
***
add ecx 18h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+34h]  +
***
mov eax [ecx+18h] +
push esi  +
lea esi [ecx+18h] +
mov ecx esi +
mov eax [eax+40h] +
call eax  +
test al al +
jnz loc_40E743  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+60h] +
call eax  +
test al al +
jnz loc_40E743  +
mov al 1 +
pop esi  +
retn   +
xor al al +
pop esi  +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
push offset dword_4A314C  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push eax  +
lea ecx [esi+18h] +
call loc_424C00  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push offset dword_4A314C  +
push [ebp+arg_0]  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push eax  +
lea ecx [esi+18h] +
call loc_424A70  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi [ecx+18h] +
lea esi [ecx+18h] +
push offset dword_4A314C  +
push [ebp+arg_0]  +
call dword ptr [eax+0A4h]  +
push eax  +
mov ecx esi +
call dword ptr [edi+7Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
add ecx 18h +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+1Ch]  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 28h +
lea ecx [esp] +
call sub_40F7D0  +
push offset unk_49C5F4  +
lea eax [esp+4] +
push eax  +
call sub_452780  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
mov edx ecx +
mov [ebp+var_4] edx +
test ebx ebx +
jz loc_40E8BA  +
push esi  +
mov esi [edx+0Ch] +
push edi  +
mov edx [esi+10h] +
cmp ebx edx +
jnb loc_40E880  +
lea eax [edx+ebx] +
cmp eax [esi+14h] +
jbe loc_40E880  +
mov edi [esi+10h] +
add edx edx +
cmp edi edx +
ja loc_40E880  +
cmp [esi+14h] edx +
jz loc_40E880  +
push 1  +
push edx  +
mov ecx esi +
call loc_402840  +
test al al +
jz loc_40E880  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40E87C  +
mov esi [esi] +
mov byte ptr [esi+edi] 0 +
mov edi [ebp+var_4] +
mov edi [edi+0Ch] +
mov edx [edi+14h] +
cmp edx 10h +
jb loc_40E892  +
mov eax [edi] +
jmp loc_40E894  +
mov eax edi +
mov esi [edi+10h] +
lea ecx [esi+eax] +
cmp edx 10h +
jb loc_40E8A3  +
mov eax [edi] +
jmp loc_40E8A5  +
mov eax edi +
add eax esi +
mov esi [ebp+arg_0] +
lea edx [esi+ebx] +
push edx  +
push esi  +
push ecx  +
push eax  +
mov ecx edi +
call sub_40FE30  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_476D90  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_0] +
lea eax [ecx+0Ch] +
push eax  +
push offset off_49EE58  +
push offset aOutputstringpo  +
mov esi [edx] +
mov ecx edx +
mov eax [esi+4] +
call eax  +
test al al +
jnz loc_40E990  +
push 2Dh  +
push offset aStringsinkOutp  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] al +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_48] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_24] +
push 0  +
push eax  +
lea ecx [ebp+var_3C] +
mov [ebp+var_4C] offset off_48D038 +
mov [ebp+var_40] 1 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_4C] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476D90  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [ebp+arg_4] 0 +
jz loc_40EA6C  +
mov eax [esi] +
mov eax [eax+0BCh] +
call eax  +
test al al +
jnz loc_40EA6C  +
push 45h  +
push offset aUnflushableTTh  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] al +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_48] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_24] +
push 0  +
push eax  +
lea ecx [ebp+var_3C] +
mov [ebp+var_4C] offset off_48D038 +
mov [ebp+var_40] 2 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
call loc_402270  +
push offset unk_49C4F8  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_4C] offset off_48CE34 +
call sub_452780  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
mov ecx eax +
test ecx ecx +
jz loc_40EAAA  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_40EAAA  +
push [ebp+arg_C]  +
mov edx [ecx] +
dec eax  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [edx+90h] +
call eax  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+90h] +
push offset dword_4A314C  +
call eax  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_476DC1  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_40EB1C  +
push eax  +
call sub_40EEF0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp dword_4A291C 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi ecx +
jz loc_40EB70  +
push offset unk_49F8D8  +
push offset unk_49EFE8  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_40EB70  +
lea eax [esi+10h] +
push eax  +
push edi  +
push ebx  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_40EBC3  +
mov ecx [ebp+arg_0] +
mov edx offset off_49EFE4 +
push ebx  +
call sub_40B510  +
mov al [esi+10h] +
lea ebx [esi+1Ch] +
mov [edi] al +
add esp 4 +
mov eax [esi+14h] +
mov [edi+4] eax +
mov eax [esi+18h] +
mov [edi+8] eax +
add edi 0Ch +
cmp edi ebx +
jz loc_40EBC3  +
mov esi [ebx+4] +
mov edx [edi+8] +
push 0  +
push esi  +
push dword ptr [edi+4]  +
call sub_410310  +
mov [edi+8] eax +
mov edx esi +
mov [edi+4] esi +
mov ecx eax +
push esi  +
push dword ptr [ebx+8]  +
call sub_40A5A0  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40EBE5  +
mov [ebp+arg_0] eax +
pop ebp  +
jmp sub_40EFD0  +
pop ebp  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi ecx +
jz loc_40EC2E  +
push offset unk_49F8D8  +
push offset unk_49F8D8  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_40EC2E  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [ebp+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_40EC46  +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
mov edx offset off_49F8D4 +
call sub_40B510  +
mov eax [esi+10h] +
add esp 4 +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40EC65  +
mov [ebp+arg_0] eax +
pop ebp  +
jmp sub_40F030  +
pop ebp  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi ecx +
jz loc_40ECAE  +
push offset unk_49F8D8  +
push offset unk_49F378  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_40ECAE  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [ebp+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_40ECC6  +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
mov edx offset off_49F374 +
call sub_40B510  +
mov al [esi+10h] +
add esp 4 +
mov [edi] al +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edi +
mov [esi+4] edi +
call sub_40FD30  +
test edi edi +
jnz loc_40ECF5  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
pop esi  +
pop ecx  +
pop ebp  +
retn 4  +
mov ecx edi +
call loc_43F720  +
mov [esi+8] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ecx  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax [ebp+arg_0] +
mov [ecx+0Ch] eax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 28h +
lea ecx [esp] +
call sub_40F890  +
push offset unk_49C5A0  +
lea eax [esp+4] +
push eax  +
call sub_452780  +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_40EDB6  +
mov eax [esi+10h] +
add eax 1 +
jz loc_40EDC0  +
push eax  +
push esi  +
push edi  +
call loc_450F90  +
add esp 0Ch +
jmp loc_40EDC0  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40EDED  +
mov eax [esi] +
mov byte ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edi +
mov byte ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_40B850  +
mov dword ptr [esi] offset off_48C75C +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_40EE47  +
push 10h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_48CE34 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476DE8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40EF56  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov [ebp+var_4] 0 +
lea ebx [esi+10h] +
mov dword ptr [esi] offset off_48D418 +
mov al [edi+10h] +
mov [ebx] al +
mov eax [edi+14h] +
mov [ebx+4] eax +
mov eax [edi+18h] +
mov [ebx+8] eax +
mov eax [edi+20h] +
mov ecx eax +
mov [ebp+arg_0] ebx +
mov [ebp+arg_0] eax +
mov [ebx+10h] eax +
call sub_40FD30  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_40EF9C  +
xor eax eax +
jmp loc_40EFA1  +
call loc_43F720  +
mov edx [ebx+10h] +
mov ecx eax +
push edx  +
mov [ebx+14h] eax +
push dword ptr [edi+24h]  +
call sub_40A5A0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40F013  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_48D028 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40F073  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_48D55C +
mov al [edi+10h] +
mov [esi+10h] al +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_40B850  +
mov dword ptr [esi] offset off_48D404 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+108h] +
lea eax [esi+0C0h] +
push edi  +
mov edi [eax+4Ch] +
cmp edi eax +
jnz loc_40F0E2  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
mov edi [esi+0BCh] +
lea eax [esi+70h] +
mov ecx [eax+48h] +
cmp edi eax +
jnz loc_40F0FA  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
mov ecx esi +
call sub_40CC50  +
test [ebp+arg_0] 1 +
jz loc_40F115  +
push 110h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+0Ch] +
call sub_40D710  +
test [ebp+arg_0] 1 +
jz loc_40F142  +
push 0F4h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_40F167  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+0A8h] +
lea eax [esi+60h] +
push edi  +
mov edi [eax+4Ch] +
cmp edi eax +
jnz loc_40F18F  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
mov edi [esi+5Ch] +
lea eax [esi+10h] +
mov ecx [eax+48h] +
cmp edi eax +
jnz loc_40F1A4  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
test [ebp+arg_0] 1 +
jz loc_40F1B8  +
push 0B0h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov ecx [edx+0A8h] +
lea eax [edx+60h] +
push edi  +
mov edi [eax+4Ch] +
cmp edi eax +
jnz loc_40F1DB  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
mov edi [edx+5Ch] +
lea eax [edx+10h] +
mov ecx [eax+48h] +
cmp edi eax +
jnz loc_40F1F0  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
pop edi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov eax [esi+4] +
mov [edi+4] eax +
mov eax [esi+8] +
mov [edi+8] eax +
mov byte ptr [edi+51h] 0 +
mov eax [esi+58h] +
mov [edi+58h] eax +
cmp eax 10h +
ja loc_40F234  +
cmp byte ptr [edi+51h] 0 +
jnz loc_40F234  +
mov byte ptr [edi+51h] 1 +
lea ecx [edi+10h] +
jmp loc_40F236  +
xor ecx ecx +
mov edx eax +
mov [edi+5Ch] ecx +
shl edx 2 +
push edx  +
push dword ptr [esi+5Ch]  +
call sub_40A5A0  +
mov byte ptr [edi+0A1h] 0 +
add esp 8 +
mov eax [esi+0A8h] +
mov [edi+0A8h] eax +
cmp eax 10h +
ja loc_40F277  +
cmp byte ptr [edi+0A1h] 0 +
jnz loc_40F277  +
mov byte ptr [edi+0A1h] 1 +
lea ecx [edi+60h] +
jmp loc_40F279  +
xor ecx ecx +
mov edx eax +
mov [edi+0ACh] ecx +
shl edx 2 +
push edx  +
push dword ptr [esi+0ACh]  +
call sub_40A5A0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_40F2D0  +
test [ebp+arg_0] 1 +
jz loc_40F2BC  +
push 28h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476E16  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+24h] +
xor al al +
mov ecx [esi+20h] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_48CF48 +
call sub_44F130  +
test al al +
jnz loc_40F347  +
cmp [esi+8] al +
jz loc_40F347  +
cmp [esi+9] al +
jnz loc_40F347  +
push dword ptr [esi+4]  +
lea ecx [ebp+var_34] +
call sub_40C080  +
push offset unk_49C51C  +
lea eax [ebp+var_34] +
push eax  +
call sub_452780  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40F354  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4768B6  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_48CF48 +
call sub_44F130  +
test al al +
jnz loc_40F3D1  +
cmp [esi+8] al +
jz loc_40F3D1  +
cmp [esi+9] al +
jnz loc_40F3D1  +
push dword ptr [esi+4]  +
lea ecx [ebp+var_34] +
call sub_40C080  +
push offset unk_49C51C  +
lea eax [ebp+var_34] +
push eax  +
call sub_452780  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40F3DE  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40F3EF  +
push 14h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476E76  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_88] edi +
lea ecx [ebp+var_A4] +
mov [ebp+var_8C] 0 +
call sub_40FC90  +
mov esi eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
push 3  +
push offset aRsa  +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] 0 +
call loc_402170  +
push offset asc_48CDB0  +
lea edx [ebp+var_24] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_84] +
call sub_410020  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_6C] +
call sub_410070  +
push offset asc_48CDAC  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_54] +
call sub_410020  +
push offset aSha1  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_3C] +
call sub_410020  +
push offset asc_48CDA8  +
mov edx eax +
mov byte ptr [ebp+var_4] 5 +
mov ecx edi +
call sub_410020  +
mov eax [ebp+var_28] +
add esp 14h +
cmp eax 10h +
jb loc_40F507  +
inc eax  +
lea ecx [ebp+var_3C] +
push eax  +
push [ebp+var_3C]  +
call loc_402500  +
mov eax [ebp+var_40] +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
cmp eax 10h +
jb loc_40F52E  +
inc eax  +
lea ecx [ebp+var_54] +
push eax  +
push [ebp+var_54]  +
call loc_402500  +
mov eax [ebp+var_58] +
mov [ebp+var_40] 0Fh +
mov [ebp+var_44] 0 +
mov byte ptr [ebp+var_54] 0 +
cmp eax 10h +
jb loc_40F555  +
inc eax  +
lea ecx [ebp+var_6C] +
push eax  +
push [ebp+var_6C]  +
call loc_402500  +
mov eax [ebp+var_70] +
mov [ebp+var_58] 0Fh +
mov [ebp+var_5C] 0 +
mov byte ptr [ebp+var_6C] 0 +
cmp eax 10h +
jb loc_40F582  +
inc eax  +
lea ecx [ebp+var_84] +
push eax  +
push [ebp+var_84]  +
call loc_402500  +
mov eax [ebp+var_10] +
mov [ebp+var_70] 0Fh +
mov [ebp+var_74] 0 +
mov byte ptr [ebp+var_84] 0 +
cmp eax 10h +
jb loc_40F5AC  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_402500  +
mov eax [ebp+var_90] +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] 0 +
cmp eax 10h +
jb loc_40F5DC  +
inc eax  +
lea ecx [ebp+var_A4] +
push eax  +
push [ebp+var_A4]  +
call loc_402500  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476EA0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov [ebp+var_10] edx +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
mov byte ptr [edx+51h] 0 +
mov dword ptr [edx+58h] 10h +
cmp byte ptr [edx+51h] 0 +
jnz loc_40F642  +
mov byte ptr [edx+51h] 1 +
lea ecx [edx+10h] +
jmp loc_40F644  +
xor ecx ecx +
mov [edx+5Ch] ecx +
mov byte ptr [edx+0A1h] 0 +
mov dword ptr [edx+0A8h] 10h +
cmp byte ptr [edx+0A1h] 0 +
jnz loc_40F66D  +
mov byte ptr [edx+0A1h] 1 +
lea ecx [edx+60h] +
jmp loc_40F66F  +
xor ecx ecx +
mov [edx+0ACh] ecx +
mov eax edx +
mov dword ptr [ecx] 67452301h +
mov dword ptr [ecx+4] 0EFCDAB89h +
mov dword ptr [ecx+8] 98BADCFEh +
mov dword ptr [ecx+0Ch] 10325476h +
mov dword ptr [ecx+10h] 0C3D2E1F0h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3A7C +
cmp eax [ecx+4] +
jle loc_40F6FC  +
push offset dword_4A3A7C  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A7C 0FFFFFFFFh +
jnz loc_40F6FC  +
push offset loc_47ADC0  +
mov dword_4A3A88 offset off_48C6E8 +
call sub_450116  +
push offset dword_4A3A7C  +
call sub_450220  +
add esp 8 +
mov eax offset dword_4A3A88 +
retn   +
***
retn 4  +
***
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
sub esp 14h +
add ecx 8 +
push ebx  +
push esi  +
call dword ptr [eax]  +
lea ecx [ebp-14h] +
push ecx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+8]  +
mov esi [eax+8] +
mov ecx [eax+0Ch] +
test esi esi +
jz loc_40F76D  +
lea eax [esi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_40F79D  +
sub eax 4 +
sub esi 1 +
jnz loc_40F760  +
xor ebx ebx +
mov edx [ebp-0Ch] +
xor eax eax +
mov esi [ebp-8] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea ecx ds:0[edx*4] +
pop edi  +
push esi  +
cmp ecx 10h +
jb loc_40F7B6  +
call sub_4746E8  +
add esp 4 +
lea eax [ebx-1] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
jz loc_40F76D  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
lea ebx [esi-1] +
shl ebx 5 +
add ebx eax +
jmp loc_40F76F  +
***
call sub_45B0EB  +
add esp 4 +
lea eax [ebx-1] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_476ED0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 37h  +
push offset aBufferedtran_0  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
lea eax [ebp+var_28] +
mov dword ptr [esi+0Ch] 0 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax [ebp+var_14] +
mov dword ptr [esi] offset off_48D090 +
cmp eax 10h +
jb loc_40F938  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_48D404 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
or eax 0FFFFFFFFh +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_40F9E1  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_40F9D8  +
cmp edi 0FFFFFFFEh +
ja loc_40F9EB  +
cmp [esi+14h] edi +
jnb loc_40F9AB  +
push ecx  +
push edi  +
mov ecx esi +
call sub_402C20  +
test edi edi +
jz loc_40F9D8  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_40FDF0  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40F9D2  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_40F985  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40F9C6  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_40FA65  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40FA1A  +
mov eax [esi] +
jmp loc_40FA1C  +
mov eax esi +
cmp ebx eax +
jb loc_40FA65  +
cmp ecx 10h +
jb loc_40FA29  +
mov edx [esi] +
jmp loc_40FA2B  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_40FA65  +
cmp ecx 10h +
jb loc_40FA4F  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_40FB30  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_40FB30  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
or eax 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
sub eax edx +
cmp eax ecx +
jbe loc_40FB10  +
push edi  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_40FB07  +
cmp edi 0FFFFFFFEh +
ja loc_40FB1A  +
cmp [esi+14h] edi +
jnb loc_40FAAC  +
push edx  +
push edi  +
mov ecx esi +
call sub_402C20  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_40FB07  +
cmp dword ptr [esi+14h] 10h +
jb loc_40FAD3  +
mov edx [esi] +
jmp loc_40FAD5  +
test edi edi +
jnz loc_40FAA2  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40FAC7  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_40FAE9  +
mov eax [esi+10h] +
push ecx  +
add eax edx +
push ebx  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40FB01  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40FC0A  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
or eax 0FFFFFFFFh +
sub eax edx +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_40FC14  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_40FC01  +
cmp edi 0FFFFFFFEh +
ja loc_40FC1E  +
cmp [esi+14h] edi +
jnb loc_40FBA1  +
push edx  +
push edi  +
mov ecx esi +
call sub_402C20  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_40FC01  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40FB97  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40FBC8  +
mov edx [esi] +
jmp loc_40FBCA  +
test edi edi +
jnz loc_40FB8F  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40FBBC  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_40FBE3  +
mov eax [ebp+0Ch] +
add eax ebx +
push ecx  +
push eax  +
mov eax [esi+10h] +
add eax edx +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40FBFB  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_40FC71  +
shl eax 2 +
cmp eax 1000h +
jb loc_40FC64  +
test cl 1Fh +
jnz loc_40FC76  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_40FC7B  +
sub ecx eax +
cmp ecx 4 +
jb loc_40FC80  +
cmp ecx 23h +
ja loc_40FC85  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_476EF8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 5  +
push offset aPssr  +
lea ecx [ebp+var_2C] +
mov [ebp+var_14] 0 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_402170  +
push offset aMgf1  +
lea edx [ebp+var_2C] +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_410020  +
mov eax [ebp+var_18] +
add esp 4 +
cmp eax 10h +
jb loc_40FD11  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476830  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp ecx 0FFFFFFFFh +
jbe loc_40FDD7  +
push 3Ah  +
push offset aAllocatorbaseR  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0Fh +
mov [ebp+var_14] 0 +
mov byte ptr [ebp+var_24] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_48] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_24] +
push 0  +
push eax  +
lea ecx [ebp+var_3C] +
mov [ebp+var_4C] offset off_48D038 +
mov [ebp+var_40] 1 +
mov [ebp+var_28] 0Fh +
mov [ebp+var_2C] 0 +
mov byte ptr [ebp+var_3C] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_4C] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_4C] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp eax 1 +
jnz loc_40FE10  +
cmp dword ptr [ecx+14h] 10h +
jb loc_40FE06  +
mov ecx [ecx] +
mov al [ebp+arg_8] +
mov [ecx+edx] al +
pop ebp  +
retn 0Ch  +
cmp dword ptr [ecx+14h] 10h +
jb loc_40FE18  +
mov ecx [ecx] +
push eax  +
movsx eax [ebp+arg_8] +
push eax  +
lea eax [ecx+edx] +
push eax  +
call sub_453150  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi ecx +
mov ecx [ebp+arg_C] +
cmp edi ecx +
jnz loc_40FE79  +
mov ecx [ebp+arg_4] +
sub ecx eax +
cmp dword ptr [esi+14h] 10h +
jb loc_40FE64  +
mov edx [esi] +
sub eax edx +
push ecx  +
push eax  +
mov ecx esi +
call loc_4028F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
mov edx esi +
push ecx  +
sub eax edx +
mov ecx esi +
push eax  +
call loc_4028F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
mov edx [ebp+arg_4] +
sub edx eax +
cmp dword ptr [esi+14h] 10h +
push ebx  +
jb loc_40FE89  +
mov ebx [esi] +
jmp loc_40FE8B  +
mov ebx esi +
sub ecx edi +
sub eax ebx +
push ecx  +
push edi  +
push edx  +
push eax  +
mov ecx esi +
call loc_406860  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3A1C +
cmp eax [ecx+4] +
jle loc_40FF06  +
push offset dword_4A3A1C  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A1C 0FFFFFFFFh +
jnz loc_40FF06  +
push offset nullsub_3  +
mov dword_4A3A20 offset off_48D044 +
mov dword_4A3A24 5 +
call sub_450116  +
push offset dword_4A3A1C  +
call sub_450220  +
add esp 8 +
mov eax offset dword_4A3A20 +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476F39  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40FF6C  +
mov eax [esi] +
jmp loc_40FF6E  +
mov eax esi +
mov byte ptr [eax] 0 +
mov dword ptr [ebp-4] 0 +
cmp byte ptr [edi] 0 +
mov dword ptr [ebp-10h] 1 +
jnz loc_40FF88  +
xor ecx ecx +
jmp loc_40FF99  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40FF90  +
sub ecx edx +
mov eax [ebp+8] +
mov ebx [esi+10h] +
mov eax [eax+10h] +
add eax ecx +
cmp ebx eax +
ja loc_40FFCE  +
cmp [esi+14h] eax +
jz loc_40FFCE  +
push 1  +
push eax  +
mov ecx esi +
call loc_402840  +
test al al +
jz loc_40FFCE  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_40FFC8  +
mov eax [esi] +
jmp loc_40FFCA  +
mov eax esi +
mov byte ptr [eax+ebx] 0 +
cmp byte ptr [edi] 0 +
jnz loc_40FFD7  +
xor ecx ecx +
jmp loc_40FFE9  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40FFE0  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx esi +
call loc_40FA00  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp+8]  +
mov ecx esi +
call loc_40FB30  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov [ebp+var_4] ebx +
mov [ebp+var_8] 0 +
cmp byte ptr [edi] 0 +
jnz loc_410041  +
xor esi esi +
jmp loc_41004F  +
mov esi edi +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_410046  +
sub esi ecx +
push esi  +
push edi  +
mov ecx edx +
call loc_40FA00  +
push eax  +
mov ecx ebx +
call sub_40ED80  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [edx+14h] +
sub eax [edx+10h] +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] esi +
cmp [ecx+10h] eax +
jbe loc_4100B6  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax [edx+10h] +
jb loc_4100B6  +
push 0FFFFFFFFh  +
push 0  +
push edx  +
push ecx  +
call loc_4103F0  +
push eax  +
mov ecx esi +
call sub_40ED80  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_40FB30  +
push eax  +
mov ecx esi +
call sub_40ED80  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476620  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
test ecx ecx +
jz loc_41010E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476F68  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_20] offset off_490AAC +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 1 +
push 1  +
push [ebp+arg_0]  +
lea ecx [ebp+var_20] +
mov [ebp+var_4] 0 +
push offset aInputbuffer  +
call sub_410550  +
mov dword ptr [esi] offset off_490AAC +
mov dword ptr [esi+4] 0 +
mov cl [eax+8] +
mov [esi+8] cl +
mov edi [eax+4] +
mov dword ptr [eax+4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4101A8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_1C] +
mov [esi+4] edi +
test ecx ecx +
jz loc_4101B8  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476F98  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_20] offset off_490AAC +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 1 +
push ecx  +
push [ebp+arg_0]  +
lea ecx [ebp+var_20] +
mov [ebp+var_4] 0 +
push edx  +
call sub_4106B0  +
mov dword ptr [esi] offset off_490AAC +
mov dword ptr [esi+4] 0 +
mov cl [eax+8] +
mov [esi+8] cl +
mov edi [eax+4] +
mov dword ptr [eax+4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_410253  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_1C] +
mov [esi+4] edi +
test ecx ecx +
jz loc_410263  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3A8C +
cmp eax [ecx+4] +
jle loc_4102CC  +
push offset dword_4A3A8C  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3A8C 0FFFFFFFFh +
jnz loc_4102CC  +
push offset loc_47ADD0  +
mov dword_4A3A84 0 +
call sub_450116  +
push offset dword_4A3A8C  +
call sub_450220  +
add esp 8 +
mov eax dword_4A3A84 +
test eax eax +
jnz locret_410302  +
push esi  +
push 4  +
call sub_44FE54  +
add esp 4 +
mov dword ptr [eax] offset off_48C688 +
mov esi dword_4A3A84 +
test esi esi +
jz loc_4102FC  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3A84 eax +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi edx +
mov [ebp+var_8] edi +
cmp esi ebx +
jnz loc_410331  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+arg_8] 0 +
jz loc_41037D  +
mov ecx ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_410346  +
xor eax eax +
jmp loc_41034D  +
mov ecx ebx +
call loc_43F720  +
cmp ebx [ebp+arg_0] +
mov edx ebx +
mov ecx eax +
mov [ebp+var_4] eax +
cmovb esi ebx +
push esi  +
push edi  +
call sub_40A5A0  +
mov ecx [ebp+arg_0] +
xor al al +
push [ebp+var_8]  +
stos   +
call sub_45B0EB  +
mov eax [ebp+var_4] +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
xor al al +
mov ecx esi +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov ecx ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_4103A0  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx ebx +
call loc_43F720  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov dword ptr [esi] offset off_47CF48 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+10h] +
mov eax [eax+10h] +
push edi  +
cmp eax ecx +
jb loc_410526  +
mov edi [ebp+14h] +
sub eax ecx +
mov ecx [esi+10h] +
cmp edi eax +
cmova edi eax +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax edi +
jbe loc_410530  +
lea ebx [ecx+edi] +
test edi edi +
jz loc_41051D  +
cmp ebx 0FFFFFFFEh +
ja loc_41053A  +
cmp [esi+14h] ebx +
jnb loc_410459  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_402C20  +
test ebx ebx +
jz loc_41051D  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_41047F  +
mov edx [esi] +
jmp loc_410481  +
test ebx ebx +
jnz loc_41044D  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_410473  +
mov eax [esi] +
pop edi  +
mov [eax] bl +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 10h  +
***
mov edx esi +
cmp eax 10h +
jb loc_41048A  +
mov eax [esi] +
jmp loc_41048C  +
mov eax esi +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_4104A0  +
push ecx  +
push edx  +
add eax edi +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov eax [ebp+0Ch] +
cmp esi eax +
jnz loc_4104D9  +
mov eax [ebp+10h] +
test eax eax +
jz loc_4104B0  +
add eax edi +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_4104BC  +
mov edx [esi] +
jmp loc_4104BE  +
mov edx esi +
cmp ecx 10h +
jb loc_4104C7  +
mov ecx [esi] +
jmp loc_4104C9  +
mov ecx esi +
test edi edi +
jz loc_4104FF  +
push edi  +
add eax edx +
push eax  +
push ecx  +
call loc_450F90  +
jmp loc_4104FC  +
cmp dword ptr [eax+14h] 10h +
jb loc_4104E1  +
mov eax [eax] +
cmp dword ptr [esi+14h] 10h +
jb loc_4104EB  +
mov edx [esi] +
jmp loc_4104ED  +
mov edx esi +
test edi edi +
jz loc_4104FF  +
add eax [ebp+10h] +
push edi  +
push eax  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_410517  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ebx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
mov byte ptr [eax+ebx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_476FCF  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebx+0Ch] +
push 28h  +
call sub_44FE54  +
add esp 4 +
mov [ebp-14h] eax +
push dword ptr [ebx+10h]  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
push esi  +
push dword ptr [ebx+8]  +
movups oword ptr [eax] xmm0 +
mov ecx eax +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
call sub_410790  +
mov esi eax +
mov eax [edi+4] +
mov dword ptr [edi+4] 0 +
mov [ebp-14h] eax +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4105E0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp-14h] +
mov [esi+0Ch] eax +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4105F0  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov eax [ebx+10h] +
mov [edi+4] esi +
mov [edi+8] al +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 0Ch  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 14h  +
mov esi ecx +
call sub_44FE54  +
mov bl [ebp+arg_8] +
mov edi eax +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
add esp 4 +
mov [ebp+var_4] edi +
movups oword ptr [edi] xmm0 +
mov dword ptr [edi+10h] 0 +
mov [edi+4] eax +
mov eax [ebp+arg_4] +
mov [edi+8] bl +
mov byte ptr [edi+9] 0 +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_48D028 +
mov eax [eax] +
mov [edi+10h] eax +
mov eax [esi+4] +
mov dword ptr [esi+4] 0 +
mov ecx [edi+0Ch] +
mov [ebp+var_4] eax +
test ecx ecx +
jz loc_410687  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [ebp+var_4] +
mov [edi+0Ch] eax +
mov ecx [esi+4] +
test ecx ecx +
jz loc_410697  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov [esi+4] edi +
mov eax esi +
pop edi  +
mov [esi+8] bl +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 14h  +
mov esi ecx +
call sub_44FE54  +
mov edi eax +
xorps xmm0 xmm0 +
mov eax [ebp+arg_0] +
add esp 4 +
mov [ebp+var_4] edi +
movups oword ptr [edi] xmm0 +
mov dword ptr [edi+10h] 0 +
mov [edi+4] eax +
mov eax [ebp+arg_4] +
mov word ptr [edi+8] 1 +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_48D55C +
mov al [eax] +
mov [edi+10h] al +
mov ebx [esi+4] +
mov dword ptr [esi+4] 0 +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_41070D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [edi+0Ch] ebx +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41071D  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov [esi+4] edi +
mov eax esi +
pop edi  +
mov byte ptr [esi+8] 1 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi edx +
mov [ebp+var_4] ecx +
sub ebx esi +
xor edx edx +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_0] +
cmova ebx edx +
test ebx ebx +
jz loc_410781  +
movzx eax word ptr [esi] +
push eax  +
call sub_45DBF4  +
mov ecx [ebp+arg_4] +
lea esi [esi+2] +
inc edi  +
add esp 4 +
mov [ecx] ax +
mov ecx [ebp+arg_4] +
add ecx 2 +
mov [ebp+arg_4] ecx +
cmp edi ebx +
jnz loc_410752  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
sub ecx 34h +
sub ecx 4 +
sub ecx 28h +
sub ecx 4 +
sub ecx 4 +
sub ecx 34h +
sub ecx 38h +
sub ecx 8 +
sub ecx 4 +
sub ecx 34h +
sub ecx 34h +
sub ecx 28h +
sub ecx 28h +
sub ecx 4 +
sub ecx 4 +
sub ecx 34h +
sub ecx 4 +
sub ecx 28h +
sub ecx 0E4h +
sub ecx 4 +
sub ecx 4 +
sub ecx 34h +
jmp sub_40CF50  +
***
push ecx  +
push esi  +
push 4  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov ecx esi +
mov [ebp+var_4] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi] 0 +
call sub_41EB80  +
test eax eax +
jz loc_410986  +
mov eax dword_4A2910 +
test eax eax +
jz loc_41095B  +
push offset aFailedInCreate  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aOobeevents  +
push offset aOobeutils  +
push 28h  +
call eax  +
add esp 18h +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41097F  +
mov eax [ecx] +
push offset aFailedInCreate  +
push offset aOobeevents  +
push offset word_4873C8  +
push 28h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push dword ptr [esi]  +
call ds:ResetEvent  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
test ecx ecx +
jnz loc_4109F3  +
mov eax dword_4A2910 +
test eax eax +
jz loc_4109CE  +
push offset aNullOobe_event  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aOobeevents  +
push offset aOobeutils  +
push 32h  +
call eax  +
add esp 18h +
retn   +
mov ecx dword_4A2914 +
test ecx ecx +
jz locret_4109FB  +
mov eax [ecx] +
push offset aNullOobe_event  +
push offset aOobeevents  +
push offset word_4873C8  +
push 32h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
retn   +
push dword ptr [ecx]  +
call ds:SetEvent  +
retn   +
***
and esp 0FFFFFFF8h +
push ebx  +
push esi  +
mov esi ecx +
test esi esi +
jnz loc_410A6F  +
mov eax dword_4A2910 +
test eax eax +
jz loc_410A40  +
push offset aNullOobe_eve_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aOobeevents  +
push offset aOobeutils  +
push 32h  +
call eax  +
add esp 18h +
lea eax [esi+2] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_410A64  +
mov eax [ecx] +
push offset aNullOobe_eve_0  +
push offset aOobeevents  +
push offset word_4873C8  +
push 32h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov eax 2 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_0] +
mov eax ecx +
and eax [ebp+arg_4] +
cmp eax 0FFFFFFFFh +
jnz loc_410A7E  +
or ecx eax +
push ecx  +
push dword ptr [esi]  +
call ds:WaitForSingleObject  +
xor ebx ebx +
test eax eax +
jz loc_410A96  +
cmp eax 102h +
setnz bl  +
inc ebx  +
push dword ptr [esi]  +
call ds:ResetEvent  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
test ecx ecx +
jz locret_410B46  +
sub ecx 8 +
cmp dword ptr [ecx] 0DDDDh +
jnz locret_410B46  +
push ecx  +
call sub_45B0EB  +
pop ecx  +
retn   +
***
push ecx  +
call ds:VariantClear  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47702F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_410BDB  +
push [ebp+arg_0]  +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_410BDD  +
cmp [ebp+arg_0] eax +
jz loc_410BDD  +
push 8007000Eh  +
call sub_450D80  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_410BF4  +
push 8007000Eh  +
call sub_450D80  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47705F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0Ch  +
call sub_44FE54  +
mov edx eax +
add esp 4 +
mov [ebp+var_10] edx +
test edx edx +
jz loc_410C6C  +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
movq qword ptr [edx] xmm0 +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 1 +
mov [edx] eax +
jmp loc_410C6E  +
xor edx edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi] edx +
test edx edx +
jnz loc_410C85  +
push 8007000Eh  +
call sub_450D80  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_410CF8  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_410CF2  +
test esi esi +
jz loc_410CF2  +
mov eax [esi] +
test eax eax +
jz loc_410CD0  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_410CE7  +
push eax  +
call sub_44FE4F  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [ebp+var_C] 0 +
lea ecx [ebp+var_8] +
mov [ebp+var_8] 0 +
push ecx  +
push edx  +
mov eax [edi] +
push edi  +
call dword ptr [eax+54h]  +
test eax eax +
jns loc_410D5C  +
push offset unk_48F2E0  +
push edi  +
push eax  +
call sub_450DA0  +
mov ecx [ebp+var_8] +
mov eax esi +
pop edi  +
mov [esi] ecx +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
mov [esi] eax +
xor ecx ebp +
pop edi  +
mov eax esi +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov [ebp+var_C] 0 +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_8] +
push ecx  +
mov eax [esi] +
push esi  +
mov [ebp+var_8] 0 +
call dword ptr [eax+68h]  +
test eax eax +
jns loc_410DBF  +
push offset unk_48F2E0  +
push esi  +
push eax  +
call sub_450DA0  +
push ecx  +
push [ebp+var_8]  +
mov ecx edi +
call sub_410C10  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_477088  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov [ebp+var_18] 0 +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
mov [ebp+var_14] 0 +
test eax eax +
jz loc_410E2F  +
mov ecx [eax] +
jmp loc_410E31  +
xor ecx ecx +
mov eax [esi] +
lea edx [ebp+var_14] +
push edx  +
push ecx  +
push esi  +
call dword ptr [eax+90h]  +
test eax eax +
jns loc_410E4F  +
push offset unk_48F2E0  +
push esi  +
push eax  +
call sub_450DA0  +
mov esi [ebp+arg_4] +
mov eax [ebp+var_14] +
mov [edi] eax +
test esi esi +
jz loc_410E9F  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_410E9F  +
test esi esi +
jz loc_410E9F  +
mov eax [esi] +
test eax eax +
jz loc_410E7D  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_410E94  +
push eax  +
call sub_44FE4F  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [ebp+var_C] 0 +
lea ecx [ebp+var_8] +
mov [ebp+var_8] 0 +
push ecx  +
push edi  +
mov eax [edi] +
call dword ptr [eax+0B4h]  +
test eax eax +
jns loc_410F1B  +
push offset unk_48F2D0  +
push edi  +
push eax  +
call sub_450DA0  +
mov ecx [ebp+var_8] +
mov eax esi +
pop edi  +
mov [esi] ecx +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
mov [esi] eax +
xor ecx ebp +
pop edi  +
mov eax esi +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4770C0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_18] edi +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 1 +
mov eax [ebp+arg_C] +
mov [ebp+var_14] 0 +
test eax eax +
jz loc_410F96  +
mov edx [eax] +
jmp loc_410F98  +
xor edx edx +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_410FA3  +
mov eax [eax] +
jmp loc_410FA5  +
xor eax eax +
movups xmm0 oword ptr [ebx] +
mov ecx [esi] +
lea edi [ebp+var_14] +
push edi  +
push edx  +
push eax  +
sub esp 10h +
mov eax esp +
push esi  +
movups oword ptr [eax] xmm0 +
call dword ptr [ecx+0E0h]  +
mov edi [ebp+var_18] +
test eax eax +
jns loc_410FD2  +
push offset unk_48F2D0  +
push esi  +
push eax  +
call sub_450DA0  +
mov esi [ebp+arg_8] +
or ebx 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx ds:SysFreeString +
mov [edi] eax +
test esi esi +
jz loc_411033  +
mov eax ebx +
xadd [esi+8] eax +
dec eax  +
jnz loc_41102C  +
test esi esi +
jz loc_41102C  +
mov eax [esi] +
test eax eax +
jz loc_411004  +
push eax  +
call ecx  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_41101B  +
push eax  +
call sub_44FE4F  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
mov ecx ds:SysFreeString +
add esp 8 +
mov [ebp+arg_8] 0 +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_411077  +
xadd [esi+8] ebx +
dec ebx  +
jnz loc_411077  +
test esi esi +
jz loc_411077  +
mov eax [esi] +
test eax eax +
jz loc_411055  +
push eax  +
call ecx  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_41106C  +
push eax  +
call sub_44FE4F  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4770F8  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
mov [ebp+var_14] 0 +
test eax eax +
jz loc_4110E5  +
mov ecx [eax] +
jmp loc_4110E7  +
xor ecx ecx +
mov eax [esi] +
lea edx [ebp+var_14] +
push edx  +
push ecx  +
push esi  +
call dword ptr [eax+104h]  +
test eax eax +
jns loc_411105  +
push offset unk_48F2D0  +
push esi  +
push eax  +
call sub_450DA0  +
mov esi [ebp+arg_0] +
movzx edi word ptr [ebp+var_14] +
test esi esi +
jz loc_411154  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_411154  +
test esi esi +
jz loc_411154  +
mov eax [esi] +
test eax eax +
jz loc_411132  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_411149  +
push eax  +
call sub_44FE4F  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov ax di +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476600  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4111B9  +
mov dword ptr [esi+4] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp byte ptr [esi+8] 0 +
jz loc_4111C5  +
call ds:CoUninitialize  +
mov byte ptr [esi+8] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4111D6  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov ebx [ebp-20h] +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_4114BD  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_0  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_41151D  +
cmp dword_4A2910 0 +
jz loc_4114F3  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_411523  +
mov esi dword_4A2914 +
test esi esi +
jz loc_411523  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_0  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_4112D1 +
retn   +
***
push 0FFFFFFFFh  +
mov edi [ebp-28h] +
mov esi [edi] +
test esi esi +
jz loc_411717  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_2  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_411777  +
cmp dword_4A2910 0 +
jz loc_41174D  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_2  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_41177D  +
mov esi dword_4A2914 +
test esi esi +
jz loc_41177D  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_2  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_4116BC +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4771C8  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_38] ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_0] +
mov [ebp+var_34] ecx +
mov [ebp+var_3C] eax +
mov [ebp+var_28] 0 +
xor eax eax +
mov [ebp+var_4] 0 +
mov [ebp+var_18] eax +
xor esi esi +
mov [ebp+var_20] esi +
xor edi edi +
mov [ebp+var_24] esi +
mov [ebp+var_1C] edi +
mov byte ptr [ebp+var_4] 3 +
cmp [ecx+4] edi +
jz loc_411AB7  +
push ebx  +
mov byte ptr [ebp+var_4] 4 +
call sub_411530  +
test al al +
jz loc_41193C  +
cmp dword ptr [ebx+14h] 8 +
jb loc_411814  +
mov ebx [ebx] +
push ecx  +
mov ecx esp +
mov [ebp+var_40] esp +
push ebx  +
call sub_410B60  +
mov eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 5 +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_411838  +
push 80004003h  +
call sub_450D80  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
call sub_410DE0  +
mov ecx [eax] +
test ecx ecx +
jz loc_411856  +
mov eax [ecx] +
mov esi ecx +
push ecx  +
mov [ebp+var_20] esi +
call dword ptr [eax+4]  +
mov eax [ebp+var_2C] +
test eax eax +
jz loc_411863  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test esi esi +
jnz loc_411871  +
push 80004003h  +
call sub_450D80  +
mov eax [esi] +
lea ecx [ebp+var_24] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
cmp [ebp+var_24] 0 +
jz loc_41191E  +
mov eax [ebp+var_18] +
test eax eax +
jz loc_411892  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp+var_18] +
mov [ebp+var_18] 0 +
mov eax [esi] +
push ecx  +
push 0  +
push esi  +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+var_18] +
test ecx ecx +
jz loc_41191E  +
lea eax [ebp+var_2C] +
push eax  +
call sub_410D80  +
mov ebx eax +
lea eax [ebp+var_1C] +
cmp eax ebx +
jz loc_4118D2  +
mov ecx eax +
call sub_410CA0  +
mov edi [ebx] +
mov [ebp+var_1C] edi +
test edi edi +
jz loc_4118D2  +
inc dword ptr [edi+8]  +
lea ecx [ebp+var_2C] +
call sub_410CA0  +
test edi edi +
jz loc_4118E2  +
mov eax [edi] +
jmp loc_4118E4  +
xor eax eax +
mov ecx [ebp+var_3C] +
push eax  +
call sub_401C40  +
lea ecx [ebp+var_1C] +
mov [ebp+var_4] 3 +
call sub_410CA0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_18] +
test eax eax +
jz loc_411917  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al 1 +
jmp loc_411B20  +
lea ecx [ebp+var_1C] +
call sub_410CA0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_18] +
jmp loc_411B14  +
lea ecx [ebp+var_1C] +
call sub_410CA0  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_18] +
jmp loc_411B14  +
mov ebx [ebp-34h] +
mov edi [ebx] +
test edi edi +
jz loc_41197E  +
mov eax [ebp-30h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_3  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push dword ptr [ebx]  +
jmp loc_4119EC  +
cmp dword_4A2910 0 +
jz loc_4119BB  +
mov eax [ebp+var_30] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_3  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call dword_4A2910  +
add esp 20h +
jmp loc_4119F2  +
mov edi dword_4A2914 +
test edi edi +
jz loc_4119F2  +
mov eax [ebp+var_30] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_3  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push dword_4A2914  +
call dword ptr [edi+34h]  +
add esp 1Ch +
mov eax offset loc_4119F8 +
retn   +
lea ecx [ebp-1Ch] +
mov dword ptr [ebp-4] 3 +
call sub_410CA0  +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-20h] +
test eax eax +
jz loc_411A18  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp-18h] +
jmp loc_411B14  +
mov edi [ebp-34h] +
mov esi [edi] +
test esi esi +
jz loc_411A4B  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_4  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_411AAB  +
cmp dword_4A2910 0 +
jz loc_411A81  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_4  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_411AB1  +
mov esi dword_4A2914 +
test esi esi +
jz loc_411AB1  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_4  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_4119F8 +
retn   +
mov ecx [ecx] +
test ecx ecx +
jnz loc_411AF3  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_411AE9  +
push offset aStringvaluefor  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 18h +
jmp loc_411B0D  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_411B10  +
mov eax [ecx] +
push offset aStringvaluefor  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov eax [ebp+var_18] +
mov byte ptr [ebp+var_4] 0 +
test eax eax +
jz loc_411B1E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_477200  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax ecx +
mov [ebp+var_2C] eax +
mov ebx [ebp+arg_0] +
xor esi esi +
mov ecx [ebp+arg_8] +
mov edi [ebp+arg_4] +
mov [ebp+var_28] eax +
mov [ebp+var_20] ebx +
mov [ebp+var_34] ecx +
mov [ebp+var_38] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_4] esi +
mov [ebp+var_1C] esi +
test ecx ecx +
jz loc_411B9D  +
mov [ecx] esi +
cmp dword ptr [eax+4] 0 +
jz loc_411DA7  +
push edi  +
mov ecx eax +
mov byte ptr [ebp+var_4] 1 +
call sub_411530  +
test al al +
jz loc_411C32  +
cmp dword ptr [edi+14h] 8 +
jb loc_411BBF  +
mov edi [edi] +
push ecx  +
mov ecx esp +
mov [ebp+var_3C] esp +
push edi  +
call sub_410B60  +
mov eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 2 +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_411BE3  +
push 80004003h  +
call sub_450D80  +
lea eax [ebp+var_30] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_410DE0  +
mov ecx [eax] +
test ecx ecx +
jz loc_411C01  +
mov eax [ecx] +
mov esi ecx +
push ecx  +
mov [ebp+var_18] esi +
call dword ptr [eax+4]  +
mov eax [ebp+var_30] +
test eax eax +
jz loc_411C0E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
test esi esi +
jnz loc_411C1C  +
push 80004003h  +
call sub_450D80  +
mov eax [esi] +
lea ecx [ebp+var_1C] +
push ecx  +
push esi  +
call dword ptr [eax+20h]  +
mov ecx [ebp+var_34] +
test ecx ecx +
jz loc_411C32  +
mov eax [ebp+var_1C] +
mov [ecx] eax +
mov [ebp+var_4] 0 +
jmp loc_411E1C  +
mov ebx [ebp-28h] +
mov edi [ebx] +
test edi edi +
jz loc_411C6C  +
mov eax [ebp-24h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_5  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_411CDA  +
cmp dword_4A2910 0 +
jz loc_411CA9  +
mov eax [ebp+var_24] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_5  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 20h +
jmp loc_411CE0  +
mov edi dword_4A2914 +
test edi edi +
jz loc_411CE0  +
mov eax [ebp+var_24] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_5  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [edi+34h]  +
add esp 1Ch +
mov eax [ebp+var_20] +
mov dword ptr [eax] 0 +
mov eax offset loc_411CEF +
retn   +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-18h] +
test eax eax +
jz loc_411D03  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-20h] +
jmp loc_411E3B  +
mov edi [ebp-28h] +
mov esi [edi] +
test esi esi +
jz loc_411D32  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_411D92  +
cmp dword_4A2910 0 +
jz loc_411D68  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_411D98  +
mov esi dword_4A2914 +
test esi esi +
jz loc_411D98  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_6  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax [ebp+var_20] +
mov dword ptr [eax] 0 +
mov eax offset loc_411CEF +
retn   +
mov ecx [eax] +
test ecx ecx +
jz loc_411DCB  +
mov eax [ecx] +
push offset aGetnodelistfor  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov [ebx] esi +
jmp loc_411E28  +
mov eax dword_4A2910 +
test eax eax +
jz loc_411DF8  +
push offset aGetnodelistfor  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call eax  +
add esp 18h +
mov [ebx] esi +
jmp loc_411E28  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_411E1C  +
mov eax [ecx] +
push offset aGetnodelistfor  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov [ebx] esi +
test esi esi +
jz loc_411E28  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0FFFFFFFFh +
test esi esi +
jz loc_411E39  +
mov ecx [esi] +
push esi  +
call dword ptr [ecx+8]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ecx+4] 0 +
jz loc_411EB6  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_411F19  +
push esi  +
lea eax [ebp-4] +
push eax  +
call sub_410EC0  +
mov ecx [eax] +
mov eax [ebp+8] +
mov esi [eax] +
cmp esi ecx +
jz loc_411EA0  +
mov [eax] ecx +
test ecx ecx +
jz loc_411E96  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
test esi esi +
jz loc_411EA0  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp-4] +
pop esi  +
test eax eax +
jz loc_411EAE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_411EF7  +
mov eax dword_4A2910 +
test eax eax +
jz loc_411EED  +
push offset aGetrootnode___  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call eax  +
add esp 18h +
xor al al +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_411F11  +
mov eax [ecx] +
push offset aGetrootnode___  +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
xor al al +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 80004003h  +
call sub_450D80  +
push 0FFFFFFFFh  +
push offset loc_477268  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_34] edi +
mov [ebp+var_3C] eax +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_8] +
test eax eax +
setz cl  +
test cl cl +
jz loc_411FD2  +
mov ecx [edi] +
test ecx ecx +
jnz loc_411FC8  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_411FBA  +
push offset aAddchildtonode  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 18h +
jmp loc_412303  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_412306  +
push offset aAddchildtonode  +
jmp loc_4122EE  +
cmp dword ptr [edi+4] 0 +
jz loc_4122AD  +
xor esi esi +
mov [ebp+var_18] esi +
mov eax 3 +
mov dword ptr [ebp+pvargSrc.anonymous_0+8] 1 +
mov word ptr [ebp+pvargSrc.anonymous_0] ax +
mov byte ptr [ebp+var_4] al +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
lea eax [ebp+pvargSrc] +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantCopy  +
test eax eax +
jns loc_412016  +
push eax  +
call sub_450D80  +
push ecx  +
mov byte ptr [ebp+var_4] 4 +
mov ecx esp +
mov [ebp+var_54] esp +
push offset word_4873C8  +
call sub_410B60  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_38] +
cmp dword ptr [eax+14h] 8 +
jb loc_412039  +
mov eax [eax] +
push ecx  +
mov ecx esp +
mov [ebp+var_38] esp +
push eax  +
call sub_410B60  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [edi+4] +
test ecx ecx +
jnz loc_41205A  +
push 80004003h  +
call sub_450D80  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
call sub_410F40  +
mov ecx [eax] +
test ecx ecx +
jz loc_41207C  +
mov eax [ecx] +
mov esi ecx +
push ecx  +
mov [ebp+var_18] esi +
call dword ptr [eax+4]  +
mov eax [ebp+var_2C] +
test eax eax +
jz loc_412089  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 3 +
mov edi ds:VariantClear +
push eax  +
call edi  +
cmp dword ptr [ebx+14h] 8 +
jb loc_4120A1  +
mov ebx [ebx] +
mov eax 8 +
push ebx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_4120C6  +
test ebx ebx +
jz loc_4120C6  +
push 8007000Eh  +
call sub_450D80  +
mov byte ptr [ebp+var_4] 7 +
test esi esi +
jnz loc_4120D8  +
push 80004003h  +
call sub_450D80  +
movups xmm0 oword ptr [ebp+pvarg.anonymous_0] +
mov ecx [esi] +
sub esp 10h +
mov eax esp +
push esi  +
movups oword ptr [eax] xmm0 +
call dword ptr [ecx+7Ch]  +
test eax eax +
jns loc_4120FA  +
push offset unk_48F2E0  +
push esi  +
push eax  +
call sub_450DA0  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call edi  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_412115  +
push 80004003h  +
call sub_450D80  +
push esi  +
lea eax [ebp+var_2C] +
push eax  +
call sub_410D00  +
mov eax [ebp+var_2C] +
test eax eax +
jz loc_41212C  +
mov edx [eax] +
push eax  +
call dword ptr [edx+8]  +
mov ecx [ebp+var_3C] +
lea eax [ebp+var_18] +
push eax  +
call loc_412B90  +
lea eax [ebp+pvargSrc] +
push eax  +
call edi  +
mov byte ptr [ebp+var_4] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_41215C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al 1 +
jmp loc_412319  +
mov ebx [ebp-34h] +
mov edi [ebx] +
test edi edi +
jz loc_412191  +
mov eax [ebp-30h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_4121FF  +
cmp dword_4A2910 0 +
jz loc_4121CE  +
mov eax [ebp+var_30] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 20h +
jmp loc_412205  +
mov edi dword_4A2914 +
test edi edi +
jz loc_412205  +
mov eax [ebp+var_30] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [edi+34h]  +
add esp 1Ch +
mov eax offset loc_41220B +
retn   +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+10h] +
jmp loc_41230D  +
mov edi [ebp-34h] +
mov esi [edi] +
test esi esi +
jz loc_412241  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_8  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_4122A1  +
cmp dword_4A2910 0 +
jz loc_412277  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_8  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_4122A7  +
mov esi dword_4A2914 +
test esi esi +
jz loc_4122A7  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_8  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_41220B +
retn   +
mov ecx [edi] +
test ecx ecx +
jnz loc_4122E9  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_4122DF  +
push offset aAddchildtono_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 18h +
jmp loc_412303  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_412306  +
push offset aAddchildtono_0  +
mov eax [ecx] +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_412317  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4772C8  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_18] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_38] edi +
mov [ebp+var_3C] eax +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_8] +
test eax eax +
setz cl  +
test cl cl +
jz loc_4123DC  +
mov ecx [edi] +
test ecx ecx +
jnz loc_4123D2  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_4123C4  +
push offset aAddchildtonode  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 18h +
jmp loc_412701  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_412704  +
push offset aAddchildtonode  +
jmp loc_4126EC  +
cmp dword ptr [edi+4] 0 +
jz loc_4126AB  +
xor esi esi +
mov [ebp+var_1C] esi +
mov eax 3 +
mov dword ptr [ebp+pvargSrc.anonymous_0+8] 1 +
mov word ptr [ebp+pvargSrc.anonymous_0] ax +
mov byte ptr [ebp+var_4] al +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
lea eax [ebp+pvargSrc] +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantCopy  +
test eax eax +
jns loc_412420  +
push eax  +
call sub_450D80  +
push ecx  +
mov byte ptr [ebp+var_4] 4 +
mov ecx esp +
mov [ebp+var_50] esp +
push offset word_4873C8  +
call sub_410B60  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_3C] +
cmp dword ptr [eax+14h] 8 +
jb loc_412443  +
mov eax [eax] +
push ecx  +
mov ecx esp +
mov [ebp+var_3C] esp +
push eax  +
call sub_410B60  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [edi+4] +
test ecx ecx +
jnz loc_412464  +
push 80004003h  +
call sub_450D80  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_410F40  +
mov ecx [eax] +
test ecx ecx +
jz loc_412486  +
mov eax [ecx] +
mov esi ecx +
push ecx  +
mov [ebp+var_1C] esi +
call dword ptr [eax+4]  +
mov eax [ebp+var_30] +
test eax eax +
jz loc_412493  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 3 +
mov edi ds:VariantClear +
push eax  +
call edi  +
cmp dword ptr [ebx+14h] 8 +
jb loc_4124AB  +
mov ebx [ebx] +
mov eax 8 +
push ebx  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_4124D0  +
test ebx ebx +
jz loc_4124D0  +
push 8007000Eh  +
call sub_450D80  +
mov byte ptr [ebp+var_4] 7 +
test esi esi +
jnz loc_4124E2  +
push 80004003h  +
call sub_450D80  +
movups xmm0 oword ptr [ebp+pvarg.anonymous_0] +
mov ecx [esi] +
sub esp 10h +
mov eax esp +
push esi  +
movups oword ptr [eax] xmm0 +
call dword ptr [ecx+7Ch]  +
test eax eax +
jns loc_412504  +
push offset unk_48F2E0  +
push esi  +
push eax  +
call sub_450DA0  +
lea eax [ebp+pvarg] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
call edi  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_41251F  +
push 80004003h  +
call sub_450D80  +
push esi  +
lea eax [ebp+var_30] +
push eax  +
call sub_410D00  +
mov eax [ebp+var_30] +
test eax eax +
jz loc_412536  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea eax [ebp+pvargSrc] +
push eax  +
call edi  +
mov byte ptr [ebp+var_4] 1 +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_41255A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al 1 +
jmp loc_412717  +
mov ebx [ebp-38h] +
mov edi [ebx] +
test edi edi +
jz loc_41258F  +
mov eax [ebp-34h] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [ebx]  +
jmp loc_4125FD  +
cmp dword_4A2910 0 +
jz loc_4125CC  +
mov eax [ebp+var_34] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 20h +
jmp loc_412603  +
mov edi dword_4A2914 +
test edi edi +
jz loc_412603  +
mov eax [ebp+var_34] +
mov edi [edi] +
mov esi [eax+4] +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCaughtExcept_7  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [edi+34h]  +
add esp 1Ch +
mov eax offset loc_412609 +
retn   +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+10h] +
jmp loc_41270B  +
mov edi [ebp-38h] +
mov esi [edi] +
test esi esi +
jz loc_41263F  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_41269F  +
cmp dword_4A2910 0 +
jz loc_412675  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_9  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_4126A5  +
mov esi dword_4A2914 +
test esi esi +
jz loc_4126A5  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcept_9  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_412609 +
retn   +
mov ecx [edi] +
test ecx ecx +
jnz loc_4126E7  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_4126DD  +
push offset aAddchildtono_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 18h +
jmp loc_412701  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_412704  +
push offset aAddchildtono_0  +
mov eax [ecx] +
push offset aXmlparser  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_412715  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_18] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
mov ebx [ebp-20h] +
mov edi [ebp-20h] +
mov esi [edi] +
test esi esi +
jz loc_41291E  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_11  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword ptr [edi]  +
jmp loc_41297E  +
cmp dword_4A2910 0 +
jz loc_412954  +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_11  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aXmlparser  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
jmp loc_412984  +
mov esi dword_4A2914 +
test esi esi +
jz loc_412984  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aCaughtExcep_11  +
push offset aXmlparser  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
mov eax offset loc_412809 +
retn   +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 0  +
push 0  +
push 17h  +
push offset MultiByteStr  +
push 0  +
push 0  +
mov [ebp+var_8] ecx +
call ds:MultiByteToWideChar  +
mov esi eax +
test esi esi +
jz loc_412A3E  +
lea edx [esi+esi] +
lea ecx [edx+8] +
cmp edx ecx +
sbb eax eax +
test eax ecx +
jz loc_412A6B  +
lea ecx [edx+8] +
cmp edx ecx +
sbb eax eax +
and eax ecx +
lea ecx [edx+8] +
cmp eax 400h +
ja loc_4129FE  +
cmp edx ecx +
sbb eax eax +
and eax ecx +
call sub_4506D0  +
mov edi esp +
test edi edi +
jz loc_412A6B  +
mov dword ptr [edi] 0CCCCh +
jmp loc_412A19  +
cmp edx ecx +
sbb eax eax +
and eax ecx +
push eax  +
call sub_45B31A  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_412A6B  +
mov dword ptr [edi] 0DDDDh +
add edi 8 +
test edi edi +
jz loc_412A6B  +
push esi  +
push edi  +
push 17h  +
push offset MultiByteStr  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_412A52  +
mov ecx edi +
call sub_410B30  +
call ds:GetLastError  +
test eax eax +
jle loc_412A70  +
movzx eax ax +
or eax 80070000h +
jmp loc_412A70  +
mov ecx [ebp+var_8] +
sub esp 8 +
push edi  +
call sub_412B20  +
mov ecx edi +
mov esi eax +
call sub_410B30  +
mov eax esi +
jmp loc_412A70  +
mov eax 8007000Eh +
lea esp [ebp-14h] +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov edx [edi] +
test edx edx +
jz loc_412AB3  +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
lea eax [ebp+pUnknown] +
push eax  +
push offset riid  +
push 17h  +
push 0  +
push esi  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
js loc_412AF9  +
push [ebp+pUnknown]  +
call ds:OleRun  +
mov esi eax +
test esi esi +
js loc_412AEC  +
mov eax [ebp+pUnknown] +
push edi  +
push offset unk_48F2A0  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp+pUnknown] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
test esi esi +
jns loc_412AFF  +
mov dword ptr [edi] 0 +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 18h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_412B50  +
mov eax 80070057h +
pop esi  +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp word ptr [eax] 7Bh +
lea ecx [ebp+pclsid] +
push ecx  +
push eax  +
jnz loc_412B63  +
call ds:CLSIDFromString  +
jmp loc_412B69  +
call ds:CLSIDFromProgID  +
test eax eax +
js loc_412B7B  +
sub esp 8 +
lea eax [ebp+pclsid] +
mov ecx esi +
push eax  +
call sub_412A90  +
mov ecx [ebp+var_8] +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov esi [esi] +
test esi esi +
jz loc_412BFB  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
lea ecx [ebp-8] +
mov dword ptr [ebp-8] 0 +
mov eax [esi] +
push ecx  +
push offset unk_48F2B0  +
push esi  +
call dword ptr [eax]  +
mov ecx [edi] +
mov ebx eax +
xor eax eax +
test ebx ebx +
cmovns eax [ebp-8] +
mov [ebp-0Ch] eax +
test ecx ecx +
jz loc_412BE5  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp-0Ch] +
mov [edi] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
test ebx ebx +
jns loc_412C0D  +
cmp ebx 80004002h +
jz loc_412C0D  +
jmp loc_412C22  +
mov edx [edi] +
test edx edx +
jz loc_412C0D  +
mov dword ptr [edi] 0 +
mov ecx [edx] +
push edx  +
call dword ptr [ecx+8]  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
call sub_450D80  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477330  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-24h] edx +
mov esi ecx +
mov eax [ebp+8] +
xor ebx ebx +
mov [ebp-1Ch] eax +
xor eax eax +
mov dword ptr [ebp-14h] 0 +
mov [ebp-18h] eax +
cmp [esi+38h] al +
jz loc_412CDC  +
mov edi [ebp+0Ch] +
cmp byte ptr [esi+39h] 0 +
jz loc_412CDC  +
add eax [ebp-1Ch] +
lea ecx [ebp-14h] +
push 0  +
push ecx  +
push edi  +
push eax  +
push edx  +
call ds:ReadFile  +
mov [ebp-20h] eax +
call ds:GetLastError  +
mov ecx [ebp-14h] +
cmp eax 6Dh +
jz loc_412CAF  +
test ecx ecx +
jnz loc_412CB9  +
jmp loc_412CC8  +
cmp dword ptr [ebp-20h] 0 +
jz loc_412D5A  +
cmp ecx edi +
jz loc_412CDC  +
add [ebp-18h] ecx +
sub edi ecx +
cmp ebx 64h +
jg loc_412CFA  +
inc ebx  +
push 0Ah  +
call ds:Sleep  +
cmp byte ptr [esi+38h] 0 +
mov eax [ebp-18h] +
mov edx [ebp-24h] +
jnz loc_412C80  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 11h  +
xor eax eax +
mov dword ptr [ebp-28h] 7 +
push offset aTerminateChann  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-2Ch] 0 +
mov [ebp-3Ch] ax +
call loc_401E70  +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 1 +
push eax  +
mov ecx esi +
call sub_413C40  +
mov eax [ebp-28h] +
cmp eax 8 +
jb loc_412D44  +
inc eax  +
lea ecx [ebp-3Ch] +
push eax  +
push dword ptr [ebp-3Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-28h] 7 +
mov dword ptr [ebp-2Ch] 0 +
mov [ebp-3Ch] ax +
jmp loc_412DB8  +
push 11h  +
xor eax eax +
mov dword ptr [ebp-40h] 7 +
push offset aTerminateChann  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-44h] 0 +
mov [ebp-54h] ax +
call loc_401E70  +
lea eax [ebp-54h] +
mov dword ptr [ebp-4] 0 +
push eax  +
mov ecx esi +
call sub_413C40  +
mov eax [ebp-40h] +
cmp eax 8 +
jb loc_412DA4  +
inc eax  +
lea ecx [ebp-54h] +
push eax  +
push dword ptr [ebp-54h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-40h] 7 +
mov dword ptr [ebp-44h] 0 +
mov [ebp-54h] ax +
mov eax [esi+74h] +
mov edi ds:CloseHandle +
test eax eax +
jz loc_412DD4  +
cmp eax 0FFFFFFFFh +
jz loc_412DD4  +
push eax  +
call edi  +
mov dword ptr [esi+74h] 0 +
mov eax [esi+70h] +
test eax eax +
jz loc_412DEA  +
cmp eax 0FFFFFFFFh +
jz loc_412DEA  +
push eax  +
call edi  +
mov dword ptr [esi+70h] 0 +
mov byte ptr [esi+39h] 0 +
xor al al +
jmp loc_412CDE  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47737E  +
mov eax large fs:0 +
push eax  +
sub esp 80h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
cmp byte ptr [esi+38h] 0 +
jz loc_4130AE  +
cmp byte ptr [esi+39h] 0 +
jz loc_4130AE  +
mov ebx [esi+70h] +
test ebx ebx +
jz loc_413099  +
cmp ebx 0FFFFFFFFh +
jz loc_413099  +
xor al al +
cmp [esi+38h] al +
jz loc_412E91  +
cmp byte ptr [esi+39h] 0 +
jz loc_412E91  +
test al al +
jnz loc_412E91  +
lea eax [ebp-5Ch] +
mov edx ebx +
push 0Ch  +
push eax  +
mov ecx esi +
call loc_412C30  +
add esp 8 +
test al al +
jz loc_4130AE  +
cmp byte ptr [esi+38h] 0 +
mov al 1 +
jnz loc_412E65  +
xor al al +
xor edi edi +
cmp [esi+38h] al +
jz loc_412ED7  +
add [ebp-37h] esi +
xor eax eax +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-2Ch] ax +
mov [ebp-4] eax +
test edi edi +
jz loc_412FD9  +
mov dword ptr [ebp-60h] 0Fh +
mov [ebp-64h] eax +
mov [ebp-74h] al +
cmp [edi] al +
jnz loc_412F0B  +
xor ecx ecx +
jmp loc_412F19  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_412F10  +
sub ecx edx +
push ecx  +
push edi  +
lea ecx [ebp-74h] +
call loc_402170  +
push ecx  +
lea edx [ebp-74h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-8Ch] +
call sub_41F130  +
add esp 4 +
mov ebx eax +
lea eax [ebp-2Ch] +
cmp eax ebx +
jz loc_412F74  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_412F57  +
inc eax  +
lea ecx [ebp-2Ch] +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-18h] 7 +
push ebx  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-1Ch] 0 +
mov [ebp-2Ch] ax +
call sub_4020A0  +
mov eax [ebp-78h] +
cmp eax 8 +
jb loc_412F8F  +
inc eax  +
lea ecx [ebp-8Ch] +
push eax  +
push dword ptr [ebp-8Ch]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-78h] 7 +
mov [ebp-8Ch] ax +
mov [ebp-4] al +
mov eax [ebp-60h] +
mov dword ptr [ebp-7Ch] 0 +
cmp eax 10h +
jb loc_412FBE  +
inc eax  +
lea ecx [ebp-74h] +
push eax  +
push dword ptr [ebp-74h]  +
call loc_402500  +
push edi  +
mov dword ptr [ebp-60h] 0Fh +
mov dword ptr [ebp-64h] 0 +
mov byte ptr [ebp-74h] 0 +
call sub_44FE4F  +
add esp 4 +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
push eax  +
push offset word_4873C8  +
lea ecx [ebp-44h] +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
call loc_401E70  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-44h] +
mov eax [ebp-5Ch] +
mov [ebp-50h] eax +
mov eax [ebp-58h] +
mov [ebp-4Ch] eax +
mov eax [ebp-1Ch] +
push 0FFFFFFFFh  +
push 0  +
lea eax ds:2[eax*2] +
mov [ebp-48h] eax +
lea eax [ebp-2Ch] +
push eax  +
call loc_402610  +
lea ebx [esi+58h] +
push ebx  +
call ds:EnterCriticalSection  +
lea eax [ebp-50h] +
push eax  +
lea ecx [esi+44h] +
call sub_41EE60  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_413054  +
push dword ptr [esi+40h]  +
call eax  +
add esp 4 +
mov eax [ebp-30h] +
cmp eax 8 +
jb loc_413069  +
inc eax  +
lea ecx [ebp-44h] +
push eax  +
push dword ptr [ebp-44h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-44h] ax +
mov eax [ebp-18h] +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
cmp eax 8 +
jb loc_413099  +
inc eax  +
lea ecx [ebp-2Ch] +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_4024A0  +
cmp byte ptr [esi+38h] 0 +
jnz loc_412E40  +
jmp loc_4130AE  +
push edi  +
call sub_44FE4F  +
add esp 4 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4773B8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_413122  +
mov eax [edi] +
jmp loc_413124  +
mov eax edi +
xor ecx ecx +
push ecx  +
mov [eax] cx +
mov ecx edi +
push offset word_4873C8  +
call loc_401E70  +
mov [ebp+var_4] 0 +
lea esi [edi+44h] +
mov dword ptr [edi+1Ch] 0 +
mov byte ptr [edi+38h] 0 +
mov byte ptr [edi+39h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov dword ptr [edi+40h] 0 +
push 8  +
mov [ebp+var_14] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_413195  +
call sub_45B2CA  +
mov [esi] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi] +
mov [eax] esi +
lea eax [esi+14h] +
mov esi ds:InitializeCriticalSection +
push eax  +
call esi  +
lea eax [edi+20h] +
mov dword ptr [edi+70h] 0 +
push eax  +
mov dword ptr [edi+74h] 0 +
call esi  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
lea eax [ebx+20h] +
push eax  +
call ds:DeleteCriticalSection  +
lea eax [ebx+58h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [ebx+44h] +
call loc_41ED60  +
push dword ptr [ebx+44h]  +
call sub_44FE87  +
mov dword ptr [ebx+44h] 0 +
add esp 4 +
mov eax [ebx+14h] +
cmp eax 8 +
jb loc_413225  +
inc eax  +
mov ecx ebx +
push eax  +
push dword ptr [ebx]  +
call loc_4024A0  +
mov dword ptr [ebx+14h] 7 +
mov dword ptr [ebx+10h] 0 +
cmp dword ptr [ebx+14h] 8 +
jb loc_413243  +
mov eax [ebx] +
xor ecx ecx +
pop edi  +
pop ebx  +
mov [eax] cx +
retn   +
xor eax eax +
pop edi  +
mov [ebx] ax +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4773E6  +
mov eax large fs:0 +
push eax  +
sub esp 0B8h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+0Ch] +
lea ebx [esi+20h] +
push ebx  +
mov [ebp-1Ch] ebx +
call ds:EnterCriticalSection  +
mov eax [ebp+18h] +
test eax eax +
jz loc_4132A0  +
mov [esi+3Ch] eax +
mov eax [ebp+1Ch] +
mov [esi+40h] eax +
cmp byte ptr [esi+39h] 0 +
jz loc_4132B7  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax 5 +
jmp loc_4137DE  +
lea ecx [esi+44h] +
call sub_41ECE0  +
push offset word_4873C8  +
mov ecx edi +
call loc_4053B0  +
test eax eax +
jz loc_4137D2  +
push edi  +
mov edx offset a_Pipe +
lea ecx [ebp-34h] +
call loc_413B30  +
add esp 4 +
mov edi eax +
cmp esi edi +
jz loc_413324  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4132FD  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_413315  +
mov eax [esi] +
jmp loc_413317  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-20h] +
cmp eax 8 +
jb loc_413340  +
inc eax  +
lea ecx [ebp-34h] +
push eax  +
push dword ptr [ebp-34h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-20h] 7 +
mov [ebp-34h] ax +
mov eax [ebp+8] +
dec eax  +
mov dword ptr [ebp-24h] 0 +
cmp eax 3 +
ja loc_4137D2  +
jmp ds:off_4137FC[eax*4]  +
push offset a_out  +
mov edx esi +
mov dword ptr [esi+18h] 1 +
lea ecx [ebp-4Ch] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_413389  +
mov eax [eax] +
push 0  +
push 0  +
push 0FA000h  +
push 0FA000h  +
push 1  +
push 1  +
push 2  +
push eax  +
call ds:CreateNamedPipeW  +
lea ecx [ebp-4Ch] +
mov edi eax +
call sub_401C90  +
mov ebx ds:GetLastError +
call ebx  +
cmp edi 0FFFFFFFFh +
jz loc_4134D7  +
test edi edi +
jz loc_4134D7  +
push offset off_48F310  +
mov edx esi +
mov [esi+74h] edi +
lea ecx [ebp-64h] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_4133E4  +
mov eax [eax] +
push 0  +
push 0  +
push 0FA000h  +
push 0FA000h  +
push 1  +
push 1  +
push 1  +
push eax  +
call ds:CreateNamedPipeW  +
lea ecx [ebp-64h] +
mov edi eax +
call sub_401C90  +
call ebx  +
cmp edi 0FFFFFFFFh +
jz loc_4134D0  +
test edi edi +
jz loc_4134D0  +
mov eax 51EB851Fh +
mov [esi+70h] edi +
mul  dword ptr [ebp+14h] +
xor edi edi +
mov eax edx +
shr eax 5 +
mov [ebp-18h] eax +
test eax eax +
jle loc_413480  +
jmp loc_413446  +
mov ebx ds:GetLastError +
push 0  +
push dword ptr [esi+70h]  +
inc edi  +
call ds:ConnectNamedPipe  +
test eax eax +
jz loc_41345D  +
mov ebx 1 +
jmp loc_413469  +
call ebx  +
xor ebx ebx +
cmp eax 217h +
setz bl  +
call ds:GetLastError  +
test ebx ebx +
jnz loc_413481  +
push 64h  +
call ds:Sleep  +
cmp edi [ebp-18h] +
jl loc_413440  +
inc edi  +
push 0  +
push 0  +
push 0  +
push dword ptr [esi+70h]  +
call ds:SetNamedPipeHandleState  +
mov eax [ebp-18h] +
inc eax  +
cmp eax edi +
jz loc_4135AD  +
push 0  +
push dword ptr [esi+74h]  +
call ds:ConnectNamedPipe  +
test eax eax +
jz loc_4134B2  +
mov ebx 1 +
jmp loc_4134C2  +
call ds:GetLastError  +
xor ebx ebx +
cmp eax 217h +
setz bl  +
call ds:GetLastError  +
test ebx ebx +
jnz loc_4136DB  +
mov ecx esi +
call sub_413A80  +
lea eax [esi+20h] +
push eax  +
call ds:LeaveCriticalSection  +
mov eax 0FFFFFFFAh +
jmp loc_4137DE  +
push offset a_out  +
mov edx esi +
mov dword ptr [esi+18h] 1 +
lea ecx [ebp-7Ch] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_41350C  +
mov eax [eax] +
push 0  +
push 0  +
push 0FA000h  +
push 0FA000h  +
push 1  +
push 1  +
push 2  +
push eax  +
call ds:CreateNamedPipeW  +
lea ecx [ebp-7Ch] +
mov edi eax +
call sub_401C90  +
mov ebx ds:GetLastError +
call ebx  +
cmp edi 0FFFFFFFFh +
jz loc_4134D7  +
test edi edi +
jz loc_4134D7  +
mov eax 51EB851Fh +
mov [esi+74h] edi +
mul  dword ptr [ebp+14h] +
xor edi edi +
mov eax edx +
shr eax 5 +
mov [ebp-18h] eax +
test eax eax +
jle loc_4135A0  +
push 0  +
push dword ptr [esi+74h]  +
inc edi  +
call ds:ConnectNamedPipe  +
test eax eax +
jz loc_413577  +
mov ebx 1 +
jmp loc_413583  +
call ebx  +
xor ebx ebx +
cmp eax 217h +
setz bl  +
call ds:GetLastError  +
test ebx ebx +
jnz loc_4135A1  +
push 64h  +
call ds:Sleep  +
mov ebx ds:GetLastError +
cmp edi [ebp-18h] +
jl loc_413560  +
inc edi  +
mov eax [ebp-18h] +
inc eax  +
cmp eax edi +
jnz loc_4136DB  +
mov ecx esi +
call sub_413A80  +
lea eax [esi+20h] +
push eax  +
call ds:LeaveCriticalSection  +
mov eax 4 +
jmp loc_4137DE  +
mov eax 0CCCCCCCDh +
mov dword ptr [esi+18h] 3 +
mul  dword ptr [ebp+14h] +
mov edi 1 +
mov ebx edx +
shr ebx 3 +
cmp ebx edi +
jl loc_4136DB  +
mov eax [esi+70h] +
cmp eax 0FFFFFFFFh +
jz loc_4135FC  +
test eax eax +
jnz loc_41364D  +
push offset a_out  +
mov edx esi +
mov dword ptr [esi+70h] 0 +
lea ecx [ebp-94h] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_413620  +
mov eax [eax] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 0  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
lea ecx [ebp-94h] +
mov [esi+70h] eax +
call sub_401C90  +
call ds:GetLastError  +
mov eax [esi+74h] +
cmp eax 0FFFFFFFFh +
jz loc_413659  +
test eax eax +
jnz loc_4136AA  +
push offset off_48F310  +
mov edx esi +
mov dword ptr [esi+74h] 0 +
lea ecx [ebp-0ACh] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_41367D  +
mov eax [eax] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 0  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
lea ecx [ebp-0ACh] +
mov [esi+74h] eax +
call sub_401C90  +
call ds:GetLastError  +
mov eax [esi+70h] +
cmp eax 0FFFFFFFFh +
jz loc_4136C2  +
test eax eax +
jz loc_4136C2  +
mov eax [esi+74h] +
cmp eax 0FFFFFFFFh +
jz loc_4136C2  +
test eax eax +
jnz loc_4136DB  +
cmp edi ebx +
jz loc_4134D0  +
push 0Ah  +
call ds:Sleep  +
inc edi  +
cmp edi ebx +
jle loc_4135F0  +
cmp dword ptr [ebp+8] 2 +
mov byte ptr [esi+39h] 1 +
jz loc_4137C4  +
lea eax [ebp-14h] +
mov byte ptr [esi+38h] 1 +
push eax  +
push 0  +
push esi  +
push offset loc_412E00  +
push 0  +
push 0  +
mov dword ptr [ebp-14h] 0 +
call ds:CreateThread  +
mov [esi+1Ch] eax +
test eax eax +
jnz loc_4137C4  +
mov [esi+38h] al +
jmp loc_4134D0  +
***
mov eax 0CCCCCCCDh +
mov dword ptr [esi+18h] 3 +
mul  dword ptr [ebp+14h] +
mov edi 1 +
mov ebx edx +
shr ebx 3 +
mov [ebp-18h] ebx +
cmp ebx edi +
jl loc_4136DB  +
push offset a_out  +
mov edx esi +
lea ecx [ebp-0C4h] +
call sub_402ED0  +
add esp 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_41375D  +
mov eax [eax] +
push 0  +
push 80h  +
push 3  +
push 0  +
push 0  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
lea ecx [ebp-0C4h] +
mov ebx eax +
call sub_401C90  +
call ds:GetLastError  +
cmp ebx 0FFFFFFFFh +
jz loc_413792  +
test ebx ebx +
jnz loc_4137AB  +
mov ebx [ebp-18h] +
cmp edi ebx +
jz loc_4137B3  +
push 0Ah  +
call ds:Sleep  +
inc edi  +
cmp edi ebx +
jle loc_413740  +
jmp loc_4136DB  +
***
mov [esi+70h] ebx +
jmp loc_4136DB  +
***
mov eax [ebp-1Ch] +
push eax  +
call ds:LeaveCriticalSection  +
mov eax 0FFFFFFFAh +
jmp loc_4137DE  +
lea eax [esi+20h] +
push eax  +
call ds:LeaveCriticalSection  +
xor eax eax +
jmp loc_4137DE  +
push ebx  +
call ds:LeaveCriticalSection  +
mov eax 0FFFFFFF9h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 10h +
push 0FFFFFFFFh  +
push offset loc_477433  +
mov eax large fs:0 +
push eax  +
sub esp 80h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
lea esi [ebx+20h] +
push esi  +
call ds:EnterCriticalSection  +
push 1  +
call ds:Sleep  +
cmp byte ptr [ebx+39h] 0 +
jnz loc_4138FC  +
push esi  +
call ds:LeaveCriticalSection  +
mov eax 0FFFFFFFCh +
jmp loc_413A59  +
xor ecx ecx +
mov [ebp+var_3C] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [edi+0Ch] +
mov word ptr [ebp+var_50] cx +
push eax  +
lea ecx [ebp+var_50] +
mov [ebp+var_40] 0 +
call loc_402610  +
push ecx  +
lea edx [ebp+var_50] +
mov [ebp+var_4] 0 +
lea ecx [ebp+lpBuffer] +
call sub_41F0A0  +
add esp 4 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_1C] +
inc ecx  +
mov [ebp+nNumberOfBytesToWrite] ecx +
cmp ecx 19000h +
jbe loc_413959  +
push esi  +
call ds:LeaveCriticalSection  +
mov edi 2 +
jmp loc_413A1B  +
mov eax [edi] +
mov [ebp+Buffer] eax +
mov eax [edi+4] +
mov [ebp+var_34] eax +
mov eax [ebx+74h] +
mov [ebp+var_30] ecx +
mov [ebp+hFile] eax +
test eax eax +
jnz loc_413980  +
push esi  +
call ds:LeaveCriticalSection  +
or edi 0FFFFFFFFh +
jmp loc_413A1B  +
push 0Ch  +
lea edx [ebp+Buffer] +
mov ecx eax +
call sub_413810  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4139B6  +
push offset aTerminateChann  +
lea ecx [ebp+var_70] +
call loc_401D00  +
lea eax [ebp+var_70] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov ecx ebx +
call sub_413C40  +
lea ecx [ebp+var_70] +
jmp loc_4139FD  +
cmp [ebp+var_18] 10h +
lea edx [ebp+lpBuffer] +
push [ebp+nNumberOfBytesToWrite]  +
cmovnb edx [ebp+lpBuffer] +
mov ecx [ebp+hFile] +
call sub_413810  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_413A12  +
push offset aTerminateChann  +
lea ecx [ebp+var_88] +
call loc_401D00  +
lea eax [ebp+var_88] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
mov ecx ebx +
call sub_413C40  +
lea ecx [ebp+var_88] +
call sub_401C90  +
mov ecx ebx +
call sub_413AF0  +
push esi  +
call ds:LeaveCriticalSection  +
jmp loc_413A1B  +
push esi  +
call ds:LeaveCriticalSection  +
xor edi edi +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_413A30  +
inc eax  +
lea ecx [ebp+lpBuffer] +
push eax  +
push [ebp+lpBuffer]  +
call loc_402500  +
mov ecx [ebp+var_3C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+lpBuffer] 0 +
cmp ecx 8 +
jb loc_413A57  +
inc ecx  +
push ecx  +
push [ebp+var_50]  +
lea ecx [ebp+var_50] +
call loc_4024A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ds:CloseHandle +
mov eax [esi+74h] +
mov byte ptr [esi+38h] 0 +
test eax eax +
jz loc_413AA4  +
cmp eax 0FFFFFFFFh +
jz loc_413AA4  +
push eax  +
call edi  +
mov dword ptr [esi+74h] 0 +
mov eax [esi+70h] +
test eax eax +
jz loc_413ABA  +
cmp eax 0FFFFFFFFh +
jz loc_413ABA  +
push eax  +
call edi  +
mov dword ptr [esi+70h] 0 +
mov eax [esi+1Ch] +
mov byte ptr [esi+39h] 0 +
test eax eax +
jz loc_413ADF  +
cmp eax 0FFFFFFFFh +
jz loc_413ADF  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
push dword ptr [esi+1Ch]  +
call edi  +
mov dword ptr [esi+1Ch] 0 +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esi+74h] +
test eax eax +
jz loc_413B0D  +
cmp eax 0FFFFFFFFh +
jz loc_413B0D  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+74h] 0 +
mov eax [esi+70h] +
test eax eax +
jz loc_413B27  +
cmp eax 0FFFFFFFFh +
jz loc_413B27  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+70h] 0 +
mov byte ptr [esi+39h] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477479  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_413B8C  +
mov eax [esi] +
jmp loc_413B8E  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov [ebp-4] ecx +
mov dword ptr [ebp-10h] 1 +
cmp [edi] cx +
jz loc_413BB6  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413BA7  +
sub ecx edx +
sar ecx 1 +
mov eax [ebp+8] +
mov ebx [esi+10h] +
mov eax [eax+10h] +
add eax ecx +
cmp ebx eax +
ja loc_413BED  +
cmp [esi+14h] eax +
jz loc_413BED  +
push 1  +
push eax  +
mov ecx esi +
call loc_402560  +
test al al +
jz loc_413BED  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_413BE5  +
mov eax [esi] +
jmp loc_413BE7  +
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
cmp word ptr [edi] 0 +
jnz loc_413BF7  +
xor ecx ecx +
jmp loc_413C0F  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_413C00  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx esi +
call loc_401F70  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp+8]  +
mov ecx esi +
call loc_402730  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ecx  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_C] +
push ecx  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_403880  +
add esp 14h +
pop ecx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-8] eax +
mov edx [ebp+10h] +
xorps xmm0 xmm0 +
push ebx  +
mov ebx [ebp+8] +
mov ecx ebx +
push esi  +
push edi  +
mov [ebp-20h] ebx +
mov [ebp-24h] edx +
lea esi [ecx+1] +
movq qword ptr [ebp-14h] xmm0 +
push edx  +
lea eax [ebp-14h] +
push eax  +
push edi  +
lea eax [ebp-0Ch] +
push ebx  +
push eax  +
call sub_44F27F  +
add esp 14h +
test eax eax +
jle loc_413DA8  +
mov edx [ebp-24h] +
add ebx eax +
inc esi  +
sub edi eax +
jnz loc_413D87  +
mov ebx [ebp-20h] +
inc esi  +
push 2  +
push esi  +
call sub_45DE64  +
add esp 8 +
mov [ebp-20h] eax +
test eax eax +
jz loc_413E0B  +
xorps xmm0 xmm0 +
mov edi eax +
movq qword ptr [ebp-1Ch] xmm0 +
test esi esi +
jz loc_413DF5  +
push dword ptr [ebp-24h]  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-28h]  +
push ebx  +
push edi  +
call sub_44F27F  +
add esp 14h +
test eax eax +
jle loc_413DF2  +
add ebx eax +
add edi 2 +
sub esi 1 +
jnz loc_413DD0  +
mov eax [ebp-20h] +
xor ecx ecx +
mov [edi] cx +
mov ecx [ebp-8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_44EC3F  +
mov eax [ebp+arg_4] +
sub esp 44h +
push esi  +
mov esi ecx +
mov [esi+4] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [esi] offset off_47D2D4 +
call sub_44F214  +
add esp 4 +
movups xmm0 oword ptr [eax] +
lea eax [ebp+var_40] +
push eax  +
movups oword ptr [esi+8] xmm0 +
call sub_44F47B  +
add esp 4 +
movups xmm0 oword ptr [eax] +
movups oword ptr [esi+18h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [esi+28h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [esi+38h] xmm0 +
mov eax [eax+28h] +
mov [esi+40h] eax +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4774AF  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_413F08  +
cmp dword ptr [esi] 0 +
jnz loc_413F08  +
push 44h  +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_413EE1  +
mov ecx offset unk_48741C +
jmp loc_413EEB  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_413EEB  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_40A720  +
push 0  +
push eax  +
mov ecx edi +
call sub_413E20  +
lea ecx [ebp+var_44] +
mov [esi] eax +
call sub_40A810  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_44F3D6  +
add esp 8 +
test [ebp+arg_0] ax +
mov eax 0 +
setnz al  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push [ebp+lpCharType]  +
push [ebp+arg_4]  +
push [ebp+lpSrcStr]  +
call sub_44F3FA  +
add esp 10h +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_413F9D  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jnz loc_413F9D  +
add esi 2 +
cmp esi edi +
jnz loc_413F82  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi edi +
jz loc_413FDD  +
movzx eax word ptr [esi] +
mov ecx ebx +
mov edx [ebx] +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+10h] +
call eax  +
test al al +
jz loc_413FDD  +
add esi 2 +
cmp esi edi +
jnz loc_413FC2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_44F419  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_414050  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_44F419  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_414035  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
push dword ptr [ebp+SrcStr]  +
call sub_44F546  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
inc ebx  +
shr ebx 1 +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_4140C0  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
call sub_44F546  +
mov [esi] ax +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
add esi 2 +
cmp edi ebx +
jnz loc_4140A5  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub esp 14h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov al [ebp+arg_0] +
xorps xmm0 xmm0 +
mov byte ptr [ebp+var_8] al +
lea eax [ecx+18h] +
push eax  +
lea eax [ebp+var_14] +
movq [ebp+var_14] xmm0 +
push eax  +
push 1  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_44F27F  +
movzx ecx word ptr [ebp+var_C] +
add esp 14h +
test eax eax +
mov edx 0FFFFh +
cmovs ecx edx +
mov ax cx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 1Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
sub edi esi +
mov [ebp+var_18] 0 +
cmp esi [ebp+arg_4] +
cmova edi edx +
test edi edi +
jz loc_4141AF  +
add ecx 18h +
mov [ebp+var_1C] ecx +
mov al [esi] +
xorps xmm0 xmm0 +
mov byte ptr [ebp+var_8] al +
lea eax [ebp+var_14] +
push ecx  +
push eax  +
push 1  +
lea eax [ebp+var_8] +
movq [ebp+var_14] xmm0 +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_44F27F  +
movzx ecx word ptr [ebp+var_C] +
lea ebx [ebx+2] +
add esp 14h +
test eax eax +
mov eax 0FFFFh +
cmovs ecx eax +
mov eax [ebp+var_18] +
inc eax  +
mov [ebx-2] cx +
mov ecx [ebp+var_1C] +
inc esi  +
mov [ebp+var_18] eax +
cmp eax edi +
jnz loc_414167  +
mov ecx [ebp+var_4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ecx+18h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp+var_14] +
movq qword ptr [ebp+var_14] xmm0 +
push eax  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_44F4E8  +
movzx ecx [ebp+arg_4] +
add esp 10h +
movzx edx [ebp+MultiByteStr] +
cmp eax 1 +
cmovnz edx ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov al dl +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+14h] +
xor edx edx +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
sub edi esi +
mov dword ptr [ebp-18h] 0 +
inc edi  +
shr edi 1 +
cmp esi [ebp+0Ch] +
cmova edi edx +
test edi edi +
jz loc_4142A2  +
add ecx 18h +
mov [ebp-1Ch] ecx +
mov ecx [ebp-4] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [esi] offset off_47D2D4 +
jz loc_4142DD  +
push dword ptr [esi+0Ch]  +
call sub_45B0EB  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [esi] offset off_47C38C +
test [ebp+arg_0] 1 +
jz loc_4142FF  +
push 44h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov ebx ecx +
mov [ebp+var_4] edx +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
mov esi eax +
lea eax [esi+1] +
push eax  +
call sub_45B31A  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_4143A7  +
mov eax dword_4A2910 +
test eax eax +
jz loc_41437A  +
push offset aErrorAllocatin  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call eax  +
add esp 18h +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41439E  +
mov eax [ecx] +
push offset aErrorAllocatin  +
push offset aStringutils  +
push offset word_4873C8  +
push 28h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push 0  +
push 0  +
lea eax [esi+1] +
push eax  +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_414450  +
cmp dword_4A2910 0 +
jz loc_41440E  +
call ds:GetLastError  +
push eax  +
push offset aFailedToConver  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
push edi  +
call sub_45B0EB  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov esi dword_4A2914 +
test esi esi +
jz loc_41443E  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aFailedToConver  +
push offset aStringutils  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
push edi  +
call sub_45B0EB  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov byte ptr [edi+esi] 0 +
cmp byte ptr [edi] 0 +
jnz loc_41445D  +
xor ecx ecx +
jmp loc_41446B  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_414462  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_4] +
push edi  +
call loc_402170  +
push edi  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
mov ebx ecx +
mov [ebp-4] edx +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov esi eax +
xor ecx ecx +
mov edx 2 +
lea eax [esi+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_45B31A  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_414533  +
mov eax dword_4A2910 +
test eax eax +
jz loc_414506  +
push offset aErrorAllocat_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call eax  +
add esp 18h +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41452A  +
mov eax [ecx] +
push offset aErrorAllocat_0  +
push offset aStringutils  +
push offset word_4873C8  +
push 28h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_4145D5  +
cmp dword_4A2910 0 +
jz loc_414593  +
call ds:GetLastError  +
push eax  +
push offset aFailedToConv_0  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aStringutils  +
push offset aOobeutils  +
push 28h  +
call dword_4A2910  +
add esp 1Ch +
push edi  +
call sub_45B0EB  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi dword_4A2914 +
test esi esi +
jz loc_4145C3  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aFailedToConv_0  +
push offset aStringutils  +
push offset word_4873C8  +
push 28h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
push edi  +
call sub_45B0EB  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
xor eax eax +
mov [edi+esi*2] ax +
cmp [edi] ax +
jnz loc_4145E4  +
xor ecx ecx +
jmp loc_4145FF  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4145F0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp-4] +
push edi  +
call loc_401E70  +
push edi  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_476706  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx+68h] +
mov ecx esi +
call sub_414750  +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_48D060 +
call sub_44F167  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 10h  +
mov ebx ecx +
call sub_44FE54  +
add esp 4 +
mov edi eax +
push edi  +
call ds:CoCreateGuid  +
push 104h  +
lea eax [ebp+sz] +
push eax  +
push edi  +
call ds:StringFromGUID2  +
push 10h  +
push edi  +
mov esi eax +
call sub_44FE8C  +
add esp 8 +
test esi esi +
js loc_414737  +
cmp [ebp+sz] 0 +
jnz loc_4146FD  +
xor ecx ecx +
lea eax [ebp+sz] +
push ecx  +
push eax  +
mov ecx ebx +
call loc_401E70  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
lea ecx [ebp+sz] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_414706  +
sub ecx edx +
lea eax [ebp+sz] +
sar ecx 1 +
push ecx  +
push eax  +
mov ecx ebx +
call loc_401E70  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
xor al al +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-68h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_48F3AC +
mov eax [edi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov dword ptr [edi-50h] offset off_48F32C +
call sub_416050  +
mov esi [edi-1Ch] +
mov dword ptr [edi-50h] offset off_48F36C +
test esi esi +
jz loc_4147D8  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4147CD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4147CD  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_48F62C +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edi-6Ch] eax +
mov eax [edi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-58h] offset off_48F31C +
mov eax [edi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi-5Ch] eax +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_48F61C +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edi-6Ch] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4774FF  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_48F620 +
mov dword ptr [edi+10h] offset unk_48F320 +
mov dword ptr [edi+68h] offset off_48F614 +
push ecx  +
lea esi [edi+18h] +
mov [ebp+var_4] 0 +
push esi  +
mov [ebp+var_10] 1 +
call sub_4160D0  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_48F3AC +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_416ED0  +
mov dword ptr [esi] offset off_48F32C +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
add esi [ebp+arg_C] +
push edi  +
adc ebx [ebp+arg_10] +
mov edi ecx +
mov [esp+18h+var_4] eax +
mov edx [edi+20h] +
mov eax [edx] +
test eax eax +
jz loc_414932  +
cmp [edi+38h] eax +
jnb loc_414932  +
mov [edi+38h] eax +
mov eax ds:dword_47C3AC +
cmp esi ds:dword_47C3A8 +
jnz loc_414947  +
cmp ebx eax +
jz loc_414A2C  +
mov ecx [ebp+arg_1C] +
test cl 1 +
jz loc_4149DA  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+18h+var_8] eax +
test eax eax +
jz loc_4149D5  +
test ebx ebx +
jl loc_4149CD  +
jg loc_41496A  +
test esi esi +
jb loc_4149CD  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_4149CD  +
jl loc_414981  +
cmp esi eax +
ja loc_4149CD  +
sub ecx [esp+18h+var_8] +
mov eax [edi+2Ch] +
sar ecx 1 +
add ecx esi +
mov [esp+18h+var_8] ecx +
sub [eax] ecx +
mov ecx [edi+1Ch] +
mov eax [esp+18h+var_8] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_1C] 2 +
jz loc_414A2C  +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_414A2C  +
mov eax [edi+1Ch] +
mov edx [eax] +
mov eax [edi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edi+20h] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_414A2C  +
mov ebx ds:dword_47C3AC +
jmp loc_414A26  +
mov eax ds:dword_47C3AC +
test cl 2 +
jz loc_414A24  +
cmp dword ptr [edx] 0 +
jz loc_414A24  +
test ebx ebx +
jl loc_4149CD  +
jg loc_4149EE  +
test esi esi +
jb loc_4149CD  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_4149CD  +
jl loc_414A05  +
cmp esi eax +
ja loc_4149CD  +
mov eax [edi+20h] +
sub ecx [eax] +
mov eax [edi+30h] +
sar ecx 1 +
add ecx esi +
mov [esp+18h+var_8] ecx +
sub [eax] ecx +
mov ecx [edi+20h] +
mov eax [esp+18h+var_8] +
add eax eax +
add [ecx] eax +
jmp loc_414A2C  +
mov ebx eax +
mov esi ds:dword_47C3A8 +
mov eax [esp+18h+var_4] +
xorps xmm0 xmm0 +
pop edi  +
mov [eax] esi +
mov [eax+4] ebx +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_414A7A  +
cmp [ebx+38h] eax +
jnb loc_414A7A  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_414B6E  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_414B6E  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_414AB5  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_414AED  +
cmp eax 1 +
jnz loc_414AD5  +
test cl 2 +
jnz loc_414AD9  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_414AED  +
test eax eax +
jz loc_414AE7  +
mov esi ds:dword_47C3A8 +
mov edi ds:dword_47C3AC +
jmp loc_414AED  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_414C1E  +
jg loc_414AFF  +
test esi esi +
jb loc_414C1E  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_414C1E  +
jl loc_414B1E  +
cmp esi eax +
ja loc_414C1E  +
sub ecx [ebp+var_4] +
mov eax [ebx+2Ch] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_C] ecx +
sub [eax] ecx +
mov ecx [ebx+1Ch] +
mov eax [ebp+arg_C] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_10] 2 +
jz loc_414C2A  +
mov eax [ebx+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_414C2A  +
mov eax [ebx+1Ch] +
mov edx [eax] +
mov eax [ebx+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [ebx+20h] +
sub ecx edx +
sar ecx 1 +
mov [eax] edx +
mov eax [ebx+30h] +
mov [eax] ecx +
jmp loc_414C2A  +
test cl 2 +
jz loc_414C12  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_414C12  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_414BA3  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_414BD6  +
cmp eax 1 +
jnz loc_414BBE  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_414BD6  +
test eax eax +
jz loc_414BD0  +
mov esi ds:dword_47C3A8 +
mov edi ds:dword_47C3AC +
jmp loc_414BD6  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_414C1E  +
jg loc_414BE0  +
test esi esi +
jb loc_414C1E  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_414C1E  +
jl loc_414BF7  +
cmp esi eax +
ja loc_414C1E  +
sub ecx [ebp+arg_10] +
mov eax [ebx+30h] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_10] ecx +
sub [eax] ecx +
mov ecx [ebx+20h] +
mov eax [ebp+arg_10] +
add eax eax +
add [ecx] eax +
jmp loc_414C2A  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_414C2A  +
mov esi ds:dword_47C3A8 +
mov edi ds:dword_47C3AC +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jnz loc_414C75  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
push ebx  +
mov ebx [edx+2Ch] +
mov ecx [ebx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_414C89  +
mov ax [esi] +
pop ebx  +
pop edi  +
pop esi  +
retn   +
test byte ptr [edx+3Ch] 4 +
jnz loc_414CBE  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_414CBE  +
cmp eax esi +
ja loc_414CA1  +
cmp [edx+38h] esi +
jbe loc_414CBE  +
cmp [edx+38h] eax +
jnb loc_414CA9  +
mov [edx+38h] eax +
mov eax [edx+38h] +
sub eax [edi] +
sar eax 1 +
mov [ebx] eax +
mov eax [edx+1Ch] +
pop ebx  +
pop edi  +
pop esi  +
mov eax [eax] +
mov ax [eax] +
retn   +
pop ebx  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
mov eax [ecx+1Ch] +
push esi  +
push edi  +
mov edi 0FFFFh +
mov esi [eax] +
test esi esi +
jz loc_414D28  +
mov eax [ecx+0Ch] +
cmp esi [eax] +
jbe loc_414D28  +
mov dx [ebp+arg_0] +
cmp di dx +
jz loc_414CFF  +
cmp dx [esi-2] +
jz loc_414CFF  +
test byte ptr [ecx+3Ch] 2 +
jnz loc_414D28  +
mov eax [ecx+2Ch] +
inc dword ptr [eax]  +
mov eax [ecx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di dx +
jz loc_414D20  +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
mov [eax] dx +
movzx eax dx +
pop ebp  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_414D5C  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov bx [ebp+8] +
mov ecx 0FFFFh +
cmp cx bx +
jnz loc_414D75  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_414D9D  +
mov edi [esi+20h] +
mov ecx [edi] +
test ecx ecx +
jz loc_414D9D  +
mov edx [esi+38h] +
cmp ecx edx +
jnb loc_414D9D  +
mov eax [esi+30h] +
mov eax [eax] +
mov [edi] edx +
lea ecx [ecx+eax*2] +
mov eax [esi+30h] +
sub ecx edx +
sar ecx 1 +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_414DD4  +
mov edx [esi+30h] +
mov edi [edx] +
lea eax [ecx+edi*2] +
cmp ecx eax +
jnb loc_414DD0  +
lea ecx [edi-1] +
mov ax bx +
mov [edx] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
mov [esi] bx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test ecx ecx +
jnz loc_414DD8  +
xor edi edi +
jmp loc_414DE8  +
mov eax [esi+30h] +
mov edi [eax] +
mov eax [esi+0Ch] +
add edi edi +
sub edi [eax] +
add edi ecx +
sar edi 1 +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_414DF8  +
mov ecx 20h +
jmp loc_414E00  +
test ecx ecx +
jz loc_414E13  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_414E0F  +
shr ecx 1 +
jnz loc_414E00  +
test ecx ecx +
jnz loc_414E21  +
pop edi  +
pop ebx  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
lea ecx [esi+40h] +
mov [ebp-8] eax +
push eax  +
call loc_402D80  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov edx [ecx] +
mov [ebp-4] edx +
test edi edi +
jz loc_414E53  +
lea ecx [edi+edi] +
push ecx  +
push edx  +
push ebx  +
call loc_452BD0  +
mov edx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_414E9C  +
mov eax [esi+10h] +
mov ecx [ebp-8] +
mov [esi+38h] ebx +
add ecx ecx +
sar ecx 1 +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_414E8C  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
sar ebx 1 +
mov [eax] ebx +
jmp loc_414F1E  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_414F1E  +
mov eax [esi+38h] +
mov ecx [esi+10h] +
sub eax edx +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [esi+38h] eax +
mov eax [esi+20h] +
mov eax [eax] +
sub eax edx +
sar eax 1 +
lea edx [ebx+eax*2] +
mov eax [ecx] +
sub eax [ebp-4] +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [ecx] eax +
mov eax [esi+20h] +
mov ecx [ebp-8] +
add ecx ecx +
sub ecx edx +
mov [eax] edx +
add ecx ebx +
mov eax [esi+30h] +
sar ecx 1 +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_414EF6  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
sar ebx 1 +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_414F1E  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
sub eax [ebp-4] +
sar eax 1 +
lea ecx [ebx+eax*2] +
mov eax [esi+0Ch] +
sub edx ecx +
add edx 2 +
sar edx 1 +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_414F30  +
push edi  +
push dword ptr [ebp-4]  +
lea ecx [esi+40h] +
call loc_4024A0  +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+8] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_48F62C +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_48F31C +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_48F61C +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_48F61C +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
retn 0Ch  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_47C3A8 +
mov ecx ds:dword_47C3AC +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 20h  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_47C3A8 +
mov ecx ds:dword_47C3AC +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_415177  +
mov edi [ebp+arg_4] +
jg loc_4150A3  +
test edi edi +
jz loc_415177  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_416190  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_41511E  +
jg loc_4150CC  +
test esi esi +
jz loc_41511E  +
cmp ebx eax +
jg loc_4150DC  +
jl loc_4150D6  +
cmp edi esi +
jnb loc_4150DC  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_4150F8  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+30h] +
sub [eax] esi +
mov eax [edx+20h] +
add [eax] ecx +
jmp loc_415152  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax word ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_415164  +
mov edx [esp+24h+var_10] +
add esi 2 +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_4150B3  +
jl loc_415164  +
test edi edi +
jnz loc_4150B3  +
mov ecx [esp+24h+var_18] +
mov edx ecx +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
mov edx ecx +
mov [esp+18h+var_C] edx +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_415299  +
mov edi [ebp+arg_4] +
jg loc_4151C3  +
test edi edi +
jz loc_415299  +
mov ecx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] ecx +
mov [esp+20h+var_10] eax +
mov ecx edx +
call sub_4161B0  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_41523E  +
jg loc_4151EC  +
test esi esi +
jz loc_41523E  +
cmp ebx eax +
jg loc_4151FC  +
jl loc_4151F6  +
cmp edi esi +
jnb loc_4151FC  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_415218  +
mov ecx [esp+20h+var_C] +
lea eax [esi+esi] +
push eax  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esp+20h+var_8] +
lea ecx [esi+esi] +
add [ebp+arg_0] ecx +
add [esp+20h+var_10] esi +
mov edx [esp+20h+var_C] +
adc [esp+20h+var_14] eax +
sub edi esi +
sbb ebx eax +
mov eax [edx+2Ch] +
sub [eax] esi +
mov eax [edx+1Ch] +
add [eax] ecx +
jmp loc_415274  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_415286  +
mov edx [ebp+arg_0] +
mov [edx] ax +
add edx 2 +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] edx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov edx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_4151D3  +
jl loc_415286  +
test edi edi +
jnz loc_4151D3  +
mov ecx [esp+20h+var_14] +
mov edx ecx +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [esp+20h+var_4] +
mov edx ecx +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ecx 0FFFFh +
cmp cx ax +
jnz loc_4152C6  +
mov eax ecx +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
movzx eax word ptr [edx] +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
mov eax 0FFFFh +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476706  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ecx+34h] +
mov dword ptr [ecx] offset off_48F36C +
test esi esi +
jz loc_41536A  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41535F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41535F  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4768E6  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_48D060 +
call sub_44F167  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_48F32C +
call sub_416050  +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_48F36C +
test edi edi +
jz loc_4154A8  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_41549D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41549D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_44FE8C  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_4154B9  +
push 44h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_4156F0  +
test [ebp+arg_0] 1 +
jz loc_4154EF  +
push 68h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476706  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-8] +
mov eax [esi] +
lea edx [esi+8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_48F31C +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_48D060 +
call sub_44F167  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_41556A  +
push 50h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476706  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-18h] +
mov eax [esi] +
lea edx [esi+18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_48F61C +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_48D060 +
call sub_44F167  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_4155EA  +
push 60h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_48F36C +
test edi edi +
jz loc_41565D  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_415652  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_415652  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_44FE8C  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_41566E  +
push 38h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_4768E6  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea edx [ecx+20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_48F62C +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edx-24h] eax +
mov eax [edx-10h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-10h] offset off_48F31C +
mov eax [edx-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-14h] eax +
mov eax [edx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_48F61C +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-24h] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_48D060 +
call sub_44F167  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_477528  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_415831  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_415855  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_415855  +
cmp ecx esi +
jz loc_415855  +
call sub_416D70  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_413D20  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_416500  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_477558  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_44] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_48] eax +
mov [ebp+var_40] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
cmp eax 2000h +
mov [ebp+var_3C] esi +
setz al  +
test ecx ecx +
jg loc_415978  +
jl loc_41595F  +
test esi esi +
jnz loc_415978  +
test al al +
jnz loc_415978  +
mov [ebp+var_3C] 6 +
mov ecx 6 +
mov [ebp+var_34] 0 +
jmp loc_4159D7  +
mov [ebp+var_34] ecx +
mov ecx esi +
test al al +
jz loc_4159D7  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_491650 +
comisd xmm0 ds:qword_491638 +
jbe loc_4159D7  +
lea eax [ebp+var_34] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_45EDF7  +
mov eax [ebp+var_34] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_4159F1  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_4159FE  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_40F950  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_40] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_3C]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 4Ch  +
push eax  +
push [ebp+var_44]  +
call sub_416CB0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_413D20  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_48] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_40]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_44]  +
call sub_4168F0  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_415A78  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_477558  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_44] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_48] eax +
mov [ebp+var_40] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
cmp eax 2000h +
mov [ebp+var_3C] esi +
setz al  +
test ecx ecx +
jg loc_415B28  +
jl loc_415B0F  +
test esi esi +
jnz loc_415B28  +
test al al +
jnz loc_415B28  +
mov [ebp+var_3C] 6 +
mov ecx 6 +
mov [ebp+var_34] 0 +
jmp loc_415B87  +
mov [ebp+var_34] ecx +
mov ecx esi +
test al al +
jz loc_415B87  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_491650 +
comisd xmm0 ds:qword_491638 +
jbe loc_415B87  +
lea eax [ebp+var_34] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_45EDF7  +
mov eax [ebp+var_34] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_415BA1  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_415BAE  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_40F950  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_40] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_3C]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 0  +
push eax  +
push [ebp+var_44]  +
call sub_416CB0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_413D20  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_48] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_40]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_44]  +
call sub_4168F0  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_415C28  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_416860  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_413D20  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_416500  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_416860  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_413D20  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_416500  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_416860  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_413D20  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_416500  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_416860  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_413D20  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call sub_416500  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4775A2  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] ecx +
mov esi [ebp+arg_C] +
movzx edi [ebp+arg_10] +
mov ebx [ebp+arg_0] +
mov [ebp+var_38] edi +
test dword ptr [esi+14h] 4000h +
jnz loc_415EAC  +
movzx eax [ebp+arg_14] +
mov edx [ecx] +
push eax  +
push edi  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [edx+24h]  +
jmp loc_416029  +
lea eax [ebp+var_34] +
mov ecx esi +
push eax  +
call sub_40AED0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_417480  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_30] +
test ecx ecx +
jz loc_415EE8  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_415EE8  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
cmp [ebp+arg_14] 0 +
lea eax [ebp+var_50] +
mov [ebp+var_4] 2 +
mov ecx edi +
push eax  +
jz loc_415F18  +
call sub_416360  +
mov edi eax +
jmp loc_415F1F  +
call sub_416380  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_415F54  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_415F3B  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_14] 7 +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] eax +
mov word ptr [ebp+var_28] ax +
call sub_4020A0  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_3C] +
cmp eax 8 +
jb loc_415F6D  +
inc eax  +
lea ecx [ebp+var_50] +
push eax  +
push [ebp+var_50]  +
call loc_4024A0  +
cmp dword ptr [esi+24h] 0 +
mov ecx [ebp+var_18] +
jl loc_415F89  +
jg loc_415F7E  +
cmp dword ptr [esi+20h] 0 +
jbe loc_415F89  +
mov edi [esi+20h] +
cmp edi ecx +
jbe loc_415F89  +
sub edi ecx +
jmp loc_415F8B  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_415FC3  +
push edi  +
push [ebp+var_38]  +
lea eax [ebp+var_34] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [ebp+var_2C]  +
call sub_4163F0  +
mov ecx [ebp+var_18] +
add esp 18h +
xor edi edi +
mov edx [eax] +
mov [ebp+arg_4] edx +
mov eax [eax+4] +
mov [ebp+arg_8] eax +
jmp loc_415FC9  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
cmp [ebp+var_14] 8 +
mov [ebp+var_30] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
push [ebp+var_30]  +
lea eax [ebp+var_34] +
push edx  +
push eax  +
push [ebp+var_2C]  +
call loc_416470  +
push edi  +
push [ebp+var_38]  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push ebx  +
push [ebp+var_2C]  +
mov [ebp+arg_8] eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call sub_4163F0  +
mov eax [ebp+var_14] +
add esp 30h +
cmp eax 8 +
jb loc_416029  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
test byte ptr [esi+3Ch] 1 +
jz loc_41608C  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_41606C  +
mov eax [esi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
jmp loc_416079  +
mov eax [esi+2Ch] +
mov ecx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esi+40h] +
call loc_4024A0  +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4775DB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov eax [esi] +
push ecx  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_48F61C +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_416F90  +
lea edx [esi+10h] +
mov [ebp+arg_0] edx +
mov eax [edx] +
mov eax [eax+4] +
mov dword ptr [edx+eax] offset off_48F31C +
mov eax [edx] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-4] eax +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_48F62C +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41619F  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_4161BF  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_47C38C +
jz loc_4161ED  +
push 8  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_41623E  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_416244  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_4162AE  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4162B4  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_401E70  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+8] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41631C  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_416322  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_402170  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+1Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+18h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476620  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_4163D6  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_14] +
mov [ebp+var_4] ebx +
test esi esi +
jz loc_41645A  +
push edi  +
mov edi [ebp+arg_10] +
mov ebx 0FFFFh +
nop   +
test edx edx +
jz loc_41644D  +
mov eax [edx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41643A  +
mov ecx [edx+30h] +
mov eax [ecx] +
test eax eax +
jle loc_41643A  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+20h] +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov [edx] di +
movzx eax di +
jmp loc_416445  +
mov eax [edx] +
mov ecx edx +
push edi  +
call dword ptr [eax+0Ch]  +
movzx eax ax +
mov edx [ebp+arg_C] +
cmp bx ax +
jnz loc_416451  +
mov byte ptr [ebp+arg_8] 1 +
sub esi 1 +
jnz loc_416410  +
mov ebx [ebp+var_4] +
pop edi  +
mov ecx [ebp+arg_8] +
mov eax ebx +
pop esi  +
mov [ebx] ecx +
mov [ebx+4] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov edx [ebp+14h] +
push esi  +
mov esi [ebp+1Ch] +
mov [ebp-4] eax +
push edi  +
mov edi [ebp+18h] +
test esi esi +
jz loc_4164E4  +
push ebx  +
mov ecx [ebp+10h] +
pop edi  +
mov [eax] ecx +
mov [eax+4] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47762C  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov ecx [ebp+arg_18] +
mov [ebp+var_58] eax +
mov [ebp+var_54] esi +
mov [ebp+var_44] ecx +
test edi edi +
jz loc_416555  +
mov al [ecx] +
cmp al 2Bh +
jz loc_41654E  +
cmp al 2Dh +
jnz loc_416555  +
mov ebx 1 +
jmp loc_416557  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 0E00h +
cmp eax 800h +
jnz loc_416583  +
lea eax [ebx+2] +
cmp eax edi +
ja loc_416583  +
cmp byte ptr [ecx+ebx] 30h +
jnz loc_416583  +
mov cl [ecx+ebx+1] +
cmp cl 78h +
jz loc_416581  +
cmp cl 58h +
jnz loc_416583  +
mov ebx eax +
lea eax [ebp+var_50] +
mov ecx esi +
push eax  +
call sub_40AED0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4175C0  +
add esp 4 +
mov [ebp+var_48] eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_4165C0  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4165C0  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
push eax  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_417250  +
mov ecx [ebp+var_44] +
lea eax [ebp+var_28] +
mov [ebp+var_4] 2 +
cmp [ebp+var_14] 8 +
mov edx [ebp+var_48] +
cmovnb eax [ebp+var_28] +
push eax  +
lea eax [edi+ecx] +
mov edx [edx] +
push eax  +
push ecx  +
mov ecx [ebp+var_48] +
call dword ptr [edx+2Ch]  +
lea eax [ebp+var_50] +
mov ecx esi +
push eax  +
call sub_40AED0  +
push eax  +
mov byte ptr [ebp+var_4] 3 +
call sub_417480  +
mov esi eax +
add esp 4 +
mov [ebp+var_44] esi +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_416644  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_416644  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov ecx esi +
call sub_4170C0  +
mov byte ptr [ebp+var_4] 5 +
lea esi [ebp+var_40] +
cmp [ebp+var_2C] 10h +
cmovnb esi [ebp+var_40] +
mov al [esi] +
cmp al 7Fh +
jz loc_4166B0  +
test al al +
jle loc_4166B0  +
mov ecx [ebp+var_44] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
movzx edx ax +
mov al [esi] +
mov [ebp+var_44] edx +
cmp al 7Fh +
jz loc_4166B0  +
test al al +
jle loc_4166B0  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_4166B0  +
push edx  +
sub edi ecx +
lea ecx [ebp+var_28] +
push 1  +
push edi  +
call loc_417130  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov edx [ebp+var_44] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_416680  +
mov esi [ebp+var_54] +
mov eax [ebp+var_18] +
mov [ebp+var_44] eax +
cmp dword ptr [esi+24h] 0 +
jl loc_4166D2  +
jg loc_4166C7  +
cmp dword ptr [esi+20h] 0 +
jbe loc_4166D2  +
mov edi [esi+20h] +
cmp edi eax +
jbe loc_4166D2  +
sub edi eax +
jmp loc_4166D4  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41677C  +
cmp eax 100h +
jz loc_416734  +
push edi  +
push [ebp+arg_14]  +
lea eax [ebp+var_50] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4163F0  +
mov edx eax +
lea ecx [ebp+var_28] +
xor edi edi +
cmp [ebp+var_14] 8 +
push ebx  +
cmovnb ecx [ebp+var_28] +
mov eax [edx] +
mov [ebp+arg_8] eax +
mov eax [edx+4] +
push ecx  +
mov [ebp+arg_C] eax +
lea eax [ebp+var_50] +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
add esp 30h +
jmp loc_41679E  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_50] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
mov ecx eax +
push edi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_50] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4163F0  +
add esp 30h +
xor edi edi +
jmp loc_41679E  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push ebx  +
cmovnb eax [ebp+var_28] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_50] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
add esp 18h +
mov edx [eax] +
cmp [ebp+var_14] 8 +
mov ecx [ebp+var_44] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+var_48] eax +
mov [ebp+arg_C] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [ebp+var_48]  +
lea eax [ebp+var_50] +
push edx  +
push eax  +
push ebx  +
call loc_416470  +
push edi  +
push [ebp+arg_14]  +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov esi [ebp+var_58] +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
call sub_4163F0  +
mov eax [ebp+var_2C] +
add esp 30h +
cmp eax 10h +
jb loc_416813  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_402500  +
mov ecx [ebp+var_14] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
cmp ecx 8 +
jb loc_41683A  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_4024A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test cl 20h +
jz loc_41687A  +
mov byte ptr [eax] 2Bh +
inc eax  +
test cl 8 +
jz loc_416883  +
mov byte ptr [eax] 23h +
inc eax  +
mov edi [ebp+arg_8] +
mov dl [edi] +
cmp dl 4Ch +
jz loc_416892  +
mov [eax] dl +
inc eax  +
jmp loc_41689E  +
mov word ptr [eax] 3649h +
mov byte ptr [eax+2] 34h +
add eax 3 +
mov edx ecx +
and edx 0E00h +
cmp edx 400h +
jnz loc_4168BC  +
mov cl 6Fh +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
cmp edx 800h +
jz loc_4168D3  +
mov cl [edi+1] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
shl cl 3 +
not cl  +
and cl 20h +
or cl 58h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47768C  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_1C] +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov edi [ebp+arg_18] +
mov [ebp+var_64] eax +
mov [ebp+var_60] esi +
mov [ebp+var_58] edi +
mov [ebp+var_48] ecx +
test ecx ecx +
jz loc_416948  +
mov al [edi] +
cmp al 2Bh +
jz loc_416941  +
cmp al 2Dh +
jnz loc_416948  +
mov ebx 1 +
jmp loc_41694A  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 3000h +
cmp eax 3000h +
jz loc_416960  +
mov edx offset aEe +
jmp loc_416982  +
lea eax [ebx+2] +
mov edx offset aPp +
cmp eax ecx +
ja loc_416982  +
cmp byte ptr [edi+ebx] 30h +
jnz loc_416982  +
mov cl [edi+ebx+1] +
cmp cl 78h +
jz loc_416980  +
cmp cl 58h +
jnz loc_416982  +
mov ebx eax +
push edx  +
push edi  +
call sub_45E380  +
mov [ebp+var_5C] eax +
mov eax 2Eh +
mov word ptr [ebp+var_14] ax +
call sub_45ED75  +
mov eax [eax] +
mov al [eax] +
mov byte ptr [ebp+var_14] al +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call sub_45E380  +
add esp 10h +
mov edi eax +
lea eax [ebp+var_54] +
mov ecx esi +
push eax  +
call sub_40AED0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4175C0  +
add esp 4 +
mov [ebp+var_4C] eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_4169ED  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_4169ED  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
push eax  +
push [ebp+var_48]  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 7 +
mov [ebp+var_1C] 0 +
mov word ptr [ebp+var_2C] ax +
call loc_417250  +
mov edx [ebp+var_4C] +
lea eax [ebp+var_2C] +
mov ecx [ebp+var_58] +
mov [ebp+var_4] 2 +
cmp [ebp+var_18] 8 +
mov edx [edx] +
cmovnb eax [ebp+var_2C] +
push eax  +
mov eax [ebp+var_48] +
add eax ecx +
push eax  +
push ecx  +
mov ecx [ebp+var_4C] +
call dword ptr [edx+2Ch]  +
lea eax [ebp+var_54] +
mov ecx esi +
push eax  +
call sub_40AED0  +
push eax  +
mov byte ptr [ebp+var_4] 3 +
call sub_417480  +
mov esi eax +
add esp 4 +
mov [ebp+var_58] esi +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_50] +
test ecx ecx +
jz loc_416A75  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_416A75  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+var_44] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov ecx esi +
call sub_4170C0  +
mov byte ptr [ebp+var_4] 5 +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+10h]  +
mov esi [ebp+var_48] +
movzx edx ax +
mov [ebp+var_4C] edx +
cmp edi esi +
jz loc_416ABB  +
mov ecx [ebp+var_58] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp [ebp+var_18] 8 +
mov edx [ebp+var_4C] +
movzx ecx ax +
lea eax [ebp+var_2C] +
cmovnb eax [ebp+var_2C] +
cmp edi esi +
mov [eax+edi*2] cx +
cmovz edi [ebp+var_5C] +
lea esi [ebp+var_44] +
cmp [ebp+var_30] 10h +
cmovnb esi [ebp+var_44] +
mov al [esi] +
cmp al 7Fh +
jz loc_416B00  +
test al al +
jle loc_416B00  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_416B00  +
push edx  +
sub edi ecx +
lea ecx [ebp+var_2C] +
push 1  +
push edi  +
call loc_417130  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov edx [ebp+var_4C] +
cmovg esi eax +
mov al [esi] +
cmp al 7Fh +
jnz loc_416AD0  +
mov edi [ebp+var_60] +
mov eax [ebp+var_1C] +
mov [ebp+var_5C] eax +
cmp dword ptr [edi+24h] 0 +
jl loc_416B22  +
jg loc_416B17  +
cmp dword ptr [edi+20h] 0 +
jbe loc_416B22  +
mov esi [edi+20h] +
cmp esi eax +
jbe loc_416B22  +
sub esi eax +
jmp loc_416B24  +
xor esi esi +
mov eax [edi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_416BCC  +
cmp eax 100h +
jz loc_416B84  +
push esi  +
push [ebp+arg_14]  +
lea eax [ebp+var_54] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_4163F0  +
mov ecx eax +
xor esi esi +
cmp [ebp+var_18] 8 +
push ebx  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_2C] +
cmovnb eax [ebp+var_2C] +
push eax  +
push dword ptr [ecx+4]  +
lea eax [ebp+var_54] +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
add esp 30h +
jmp loc_416BEE  +
cmp [ebp+var_18] 8 +
lea eax [ebp+var_2C] +
push ebx  +
cmovnb eax [ebp+var_2C] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_54] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
mov ecx eax +
push esi  +
push [ebp+arg_14]  +
mov eax [ecx] +
mov [ebp+arg_8] eax +
mov eax [ecx+4] +
mov [ebp+arg_C] eax +
lea eax [ebp+var_54] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push [ebp+arg_0]  +
call sub_4163F0  +
add esp 30h +
xor esi esi +
jmp loc_416BEE  +
cmp [ebp+var_18] 8 +
lea eax [ebp+var_2C] +
push ebx  +
cmovnb eax [ebp+var_2C] +
push eax  +
push [ebp+arg_C]  +
lea eax [ebp+var_54] +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call loc_416470  +
add esp 18h +
mov edx [eax] +
cmp [ebp+var_18] 8 +
mov ecx [ebp+var_5C] +
mov [ebp+arg_8] edx +
mov eax [eax+4] +
mov [ebp+var_48] eax +
mov [ebp+arg_C] eax +
lea eax [ebp+var_2C] +
cmovnb eax [ebp+var_2C] +
sub ecx ebx +
push ecx  +
lea eax [eax+ebx*2] +
mov ebx [ebp+arg_0] +
push eax  +
push [ebp+var_48]  +
lea eax [ebp+var_54] +
push edx  +
push eax  +
push ebx  +
call loc_416470  +
push esi  +
push [ebp+arg_14]  +
mov esi [ebp+var_64] +
mov ecx [eax] +
mov [ebp+arg_8] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+arg_C] eax +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
call sub_4163F0  +
mov eax [ebp+var_30] +
add esp 30h +
cmp eax 10h +
jb loc_416C63  +
inc eax  +
lea ecx [ebp+var_44] +
push eax  +
push [ebp+var_44]  +
call loc_402500  +
mov ecx [ebp+var_18] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
cmp ecx 8 +
jb loc_416C8A  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call loc_4024A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_416CC9  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_416CD2  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_416CE4  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_416D29  +
cmp ecx 2000h +
jz loc_416D31  +
cmp ecx 3000h +
jnz loc_416D0E  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_416D3E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_416D53  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4776D4  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+38h] 0 +
jz loc_416E20  +
push esi  +
lea ecx [ebp+var_18] +
call sub_4157F0  +
mov [ebp+var_4] 0 +
cmp [ebp+var_14] 0 +
jz loc_416DEF  +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
cmp eax 0FFFFFFFFh +
jnz loc_416DEF  +
mov eax [esi] +
mov ecx [eax+4] +
mov eax [ecx+esi+0Ch] +
add ecx esi +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
jnz loc_416DE7  +
or eax 4 +
push 0  +
push eax  +
call loc_40AE00  +
mov [ebp+var_4] 1 +
call sub_44F130  +
test al al +
jnz loc_416E07  +
mov ecx [ebp+var_18] +
call sub_416E40  +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_18] +
mov ecx [edx] +
mov ecx [ecx+4] +
mov ecx [ecx+edx+38h] +
test ecx ecx +
jz loc_416E20  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4766D6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 8  +
mov dword ptr [edi] offset off_48F36C +
call sub_44FE54  +
mov esi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push 1  +
mov [ebp+var_4] 0 +
call sub_44EF0E  +
mov [esi+4] eax +
lea ecx [edi+8] +
lea eax [edi+4] +
mov [edi+34h] esi +
mov [edi+0Ch] eax +
add esp 8 +
lea eax [edi+14h] +
mov [edi+10h] ecx +
mov [edi+1Ch] eax +
lea eax [edi+18h] +
mov [edi+20h] eax +
lea eax [edi+24h] +
mov [edi+2Ch] eax +
lea eax [edi+28h] +
mov [edi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [edi+20h] +
mov dword ptr [eax] 0 +
mov eax [edi+30h] +
mov dword ptr [eax] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47772E  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_40AF20  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+var_14] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_40AED0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4175C0  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_417007  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_417007  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx edi +
mov eax [edi] +
push 20h  +
call dword ptr [eax+30h]  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] ax +
jnz loc_417031  +
mov eax [esi+0Ch] +
mov ecx esi +
or eax 4 +
push 0  +
push eax  +
call loc_40AE00  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_47D344 +
call sub_45B0EB  +
push dword ptr [esi+10h]  +
call sub_45B0EB  +
push dword ptr [esi+14h]  +
call sub_45B0EB  +
add esp 0Ch +
mov dword ptr [esi] offset off_47C38C +
test [ebp+arg_0] 1 +
jz loc_41708E  +
push 18h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [esi+8]  +
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+14h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp eax 1 +
jnz loc_417102  +
cmp dword ptr [ecx+14h] 8 +
jb loc_4170F6  +
mov ecx [ecx] +
mov ax [ebp+arg_8] +
mov [ecx+edx*2] ax +
pop ebp  +
retn 0Ch  +
cmp dword ptr [ecx+14h] 8 +
jb loc_41710A  +
mov ecx [ecx] +
push edi  +
lea edi [ecx+edx*2] +
test eax eax +
jz loc_41712A  +
mov ecx eax +
mov eax dword ptr [ebp+arg_8] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx edx +
jb loc_417228  +
mov ebx [ebp+0Ch] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax ebx +
jbe loc_417232  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_41721F  +
cmp edi 7FFFFFFEh +
ja loc_41723C  +
cmp [esi+14h] edi +
jnb loc_417195  +
push ecx  +
push edi  +
mov ecx esi +
call sub_402A00  +
mov edx [ebp+8] +
test edi edi +
jz loc_41721F  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4171C0  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_4171C3  +
test edi edi +
jnz loc_417186  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4171B2  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov [ebp+0Ch] esi +
cmp eax 8 +
jb loc_4171CC  +
mov ecx [esi] +
jmp loc_4171CE  +
mov ecx esi +
mov eax [esi+10h] +
sub eax edx +
jz loc_4171F1  +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
lea eax [eax+edx*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call loc_450F90  +
mov edx [ebp+8] +
add esp 0Ch +
push dword ptr [ebp+10h]  +
mov ecx esi +
push ebx  +
push edx  +
call sub_4170E0  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_417217  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_44EC7C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
cmp ebx 0FFFFFFFFh +
jz loc_41731E  +
cmp ebx 7FFFFFFEh +
ja loc_417328  +
cmp [esi+14h] ebx +
jnb loc_41729B  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_402A00  +
test ebx ebx +
jz loc_417316  +
cmp ebx 1 +
jnz loc_4172CF  +
cmp dword ptr [esi+14h] 8 +
jb loc_4172C4  +
mov ecx [esi] +
mov ax [ebp+0Ch] +
mov [ecx] ax +
jmp loc_4172F5  +
test ebx ebx +
jnz loc_417285  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_4172B7  +
mov eax [esi] +
xor ecx ecx +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ax [ebp+0Ch] +
mov ecx esi +
mov [ecx] ax +
jmp loc_4172F5  +
cmp dword ptr [esi+14h] 8 +
push edi  +
jb loc_4172DA  +
mov edi [esi] +
jmp loc_4172DC  +
mov edi esi +
mov eax [ebp+0Ch] +
mov ecx ebx +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_41730E  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
push 0FFFFFFFFh  +
push offset loc_477758  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_18] +
push 0  +
mov [ebp+var_20] esi +
call sub_44ECC9  +
mov [ebp+var_4] 0 +
mov edi dword_4A3AA0 +
mov ebx dword_4A3A30 +
mov [ebp+var_1C] ebx +
test edi edi +
jnz loc_4173C4  +
push edi  +
lea ecx [ebp+var_14] +
call sub_44ECC9  +
cmp dword_4A3AA0 edi +
jnz loc_4173B6  +
mov eax dword_4A1A7C +
inc eax  +
mov dword_4A1A7C eax +
mov dword_4A3AA0 eax +
lea ecx [ebp+var_14] +
call sub_44ED21  +
mov edi dword_4A3AA0 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_4173D8  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41744D  +
jmp loc_4173DA  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_4173F0  +
call sub_44EF08  +
cmp edi [eax+0Ch] +
jnb loc_4173F4  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41744D  +
test ebx ebx +
jz loc_4173FC  +
mov esi ebx +
jmp loc_41744D  +
push [ebp+var_20]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4177E0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_417434  +
xorps xmm0 xmm0 +
mov [ebp+var_2C] offset off_47CF48 +
push offset unk_49C61C  +
lea eax [ebp+var_2C] +
movq [ebp+var_28] xmm0 +
push eax  +
mov dword ptr [ebp+var_28] offset aBadCast +
call sub_452780  +
mov esi [ebp+var_1C] +
mov ecx esi +
mov dword_4A3A30 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_44EEDA  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_44ED21  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477788  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_24] esi +
call sub_44ECC9  +
mov [ebp+var_4] 0 +
mov edi dword_4A3A90 +
mov ebx dword_4A3A28 +
mov [ebp+var_20] ebx +
test edi edi +
jnz loc_417504  +
push edi  +
lea ecx [ebp+var_18] +
call sub_44ECC9  +
cmp dword_4A3A90 edi +
jnz loc_4174F6  +
mov eax dword_4A1A7C +
inc eax  +
mov dword_4A1A7C eax +
mov dword_4A3A90 eax +
lea ecx [ebp+var_18] +
call sub_44ED21  +
mov edi dword_4A3A90 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_417518  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41758D  +
jmp loc_41751A  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_417530  +
call sub_44EF08  +
cmp edi [eax+0Ch] +
jnb loc_417534  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41758D  +
test ebx ebx +
jz loc_41753C  +
mov esi ebx +
jmp loc_41758D  +
push [ebp+var_24]  +
lea eax [ebp+var_20] +
push eax  +
call sub_417700  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_417574  +
xorps xmm0 xmm0 +
mov [ebp+var_30] offset off_47CF48 +
push offset unk_49C61C  +
lea eax [ebp+var_30] +
movq [ebp+var_2C] xmm0 +
push eax  +
mov dword ptr [ebp+var_2C] offset aBadCast +
call sub_452780  +
mov esi [ebp+var_20] +
mov ecx esi +
mov dword_4A3A28 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_44EEDA  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_44ED21  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477788  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push 0  +
mov [ebp+var_24] esi +
call sub_44ECC9  +
mov [ebp+var_4] 0 +
mov edi dword_4A1A94 +
mov ebx dword_4A3A2C +
mov [ebp+var_20] ebx +
test edi edi +
jnz loc_417644  +
push edi  +
lea ecx [ebp+var_18] +
call sub_44ECC9  +
cmp dword_4A1A94 edi +
jnz loc_417636  +
mov eax dword_4A1A7C +
inc eax  +
mov dword_4A1A7C eax +
mov dword_4A1A94 eax +
lea ecx [ebp+var_18] +
call sub_44ED21  +
mov edi dword_4A1A94 +
mov ecx [esi+4] +
cmp edi [ecx+0Ch] +
jnb loc_417658  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4176CD  +
jmp loc_41765A  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_417670  +
call sub_44EF08  +
cmp edi [eax+0Ch] +
jnb loc_417674  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_4176CD  +
test ebx ebx +
jz loc_41767C  +
mov esi ebx +
jmp loc_4176CD  +
push [ebp+var_24]  +
lea eax [ebp+var_20] +
push eax  +
call sub_413E80  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4176B4  +
xorps xmm0 xmm0 +
mov [ebp+var_30] offset off_47CF48 +
push offset unk_49C61C  +
lea eax [ebp+var_30] +
movq [ebp+var_2C] xmm0 +
push eax  +
mov dword ptr [ebp+var_2C] offset aBadCast +
call sub_452780  +
mov esi [ebp+var_20] +
mov ecx esi +
mov dword_4A3A2C esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_44EEDA  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_44ED21  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4777E0  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 40h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebx+8] +
mov dword ptr [ebp-14h] 0 +
test edi edi +
jz loc_4177C2  +
cmp dword ptr [edi] 0 +
jnz loc_4177C2  +
push 18h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-18h] esi +
mov ecx [ebx+0Ch] +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movups oword ptr [esi] xmm0 +
movq qword ptr [esi+10h] xmm0 +
mov ecx [ecx+4] +
test ecx ecx +
jnz loc_417780  +
mov eax offset unk_48741C +
jmp loc_41778A  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_41778A  +
lea eax [ecx+1Ch] +
push eax  +
lea ecx [ebp-4Ch] +
call sub_40A720  +
mov dword ptr [ebp-14h] 1 +
mov dword ptr [esi+4] 0 +
push 1  +
mov dword ptr [ebp-4] 2 +
mov ecx esi +
push eax  +
mov dword ptr [esi] offset off_47D344 +
call loc_417890  +
lea ecx [ebp-4Ch] +
mov [edi] esi +
call sub_40A810  +
mov eax 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47780F  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_41786B  +
cmp dword ptr [esi] 0 +
jnz loc_41786B  +
push 8  +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov eax [ecx+4] +
test eax eax +
jnz loc_417841  +
mov ecx offset unk_48741C +
jmp loc_41784B  +
mov ecx [eax+18h] +
test ecx ecx +
jnz loc_41784B  +
lea ecx [eax+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_40A720  +
mov dword ptr [edi+4] 0 +
lea ecx [ebp+var_44] +
mov dword ptr [edi] offset off_47D314 +
mov [esi] edi +
call sub_40A810  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477830  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov [ebp-20h] ebx +
call sub_45ED75  +
mov esi eax +
lea eax [ebp-80h] +
push eax  +
mov [ebp-1Ch] esi +
call sub_44F47B  +
add esp 4 +
cmp byte ptr [ebp+0Ch] 0 +
movups xmm0 oword ptr [eax] +
movups oword ptr [ebp-50h] xmm0 +
movups xmm0 oword ptr [eax+10h] +
movups oword ptr [ebp-40h] xmm0 +
movq xmm0 qword ptr [eax+20h] +
movq qword ptr [ebp-30h] xmm0 +
mov eax [eax+28h] +
mov [ebp-28h] eax +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebp-4] 0 +
jz loc_417921  +
mov esi offset unk_48741C +
jmp loc_417924  +
mov esi [esi+8] +
lea eax [ebp-80h] +
push eax  +
call sub_44F47B  +
mov edi esi +
add esp 4 +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_417935  +
sub edi ecx +
inc edi  +
push 1  +
push edi  +
call sub_45DE64  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_417955  +
call sub_44EC3F  +
test edi edi +
jz loc_41796E  +
mov ecx edx +
sub ecx esi +
lea eax [ebp-50h] +
mov byte ptr [ebp-18h] 2Eh +
push eax  +
lea eax [ebp-24h] +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push 1  +
lea eax [ebp-18h] +
xorps xmm0 xmm0 +
push eax  +
lea eax [ebp-1Ch] +
movq qword ptr [ebp-24h] xmm0 +
push eax  +
call sub_44F27F  +
movzx eax word ptr [ebp-1Ch] +
add esp 14h +
mov [ebx+0Ch] ax +
xorps xmm0 xmm0 +
lea eax [ebp-50h] +
mov byte ptr [ebp-18h] 2Ch +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
lea eax [ebp-24h] +
movq qword ptr [ebp-24h] xmm0 +
push eax  +
push 1  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call sub_44F27F  +
movzx eax word ptr [ebp-1Ch] +
add esp 14h +
mov [ebx+0Eh] ax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp-20h] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_415580  +
***
push 0FFFFFFFFh  +
push offset loc_47786C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3AA4 +
cmp eax [ecx+4] +
jle loc_417B15  +
push offset dword_4A3AA4  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AA4 0FFFFFFFFh +
jnz loc_417B15  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword_4A3AA8 xmm0 +
mov dword ptr qword_4A3AA8 0 +
mov dword ptr qword_4A3AA8+4 0 +
call sub_418720  +
push offset sub_47AE00  +
mov dword ptr qword_4A3AA8 eax +
call sub_450116  +
push offset dword_4A3AA4  +
call sub_450220  +
add esp 8 +
mov eax offset qword_4A3AA8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477898  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+8] +
mov [ebp-20h] edi +
test edi edi +
jnz loc_417B6E  +
xor al al +
jmp loc_417C5D  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+8] +
call eax  +
mov [ebp-21h] al +
test al al +
jz loc_417C5A  +
lea ecx [edi+4] +
push ecx  +
lea eax [ebp-28h] +
mov ecx ebx +
push eax  +
call sub_417E90  +
mov eax [eax] +
cmp eax [ebx] +
jnz loc_417C1F  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-14h] 0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-20h] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea ecx [ebp-1Ch] +
call sub_418300  +
mov eax [ebp-20h] +
mov ecx ebx +
add eax 4 +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
call loc_418790  +
mov ecx [ebp-2Ch] +
lea eax [ebp-1Ch] +
push eax  +
lea ecx [ecx+28h] +
call sub_418370  +
mov ecx [ebp-1Ch] +
test ecx ecx +
jz loc_417C5A  +
mov eax [ebp-14h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
jmp loc_417C5A  +
mov ecx [eax+2Ch] +
lea ebx [eax+28h] +
mov eax [ebx] +
cmp eax ecx +
jz loc_417C3B  +
cmp edi [eax] +
jz loc_417C5A  +
add eax 4 +
cmp eax ecx +
jnz loc_417C30  +
lea esi [edi+74h] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [edi+70h]  +
push esi  +
call ds:LeaveCriticalSection  +
lea eax [ebp-20h] +
mov ecx ebx +
push eax  +
call sub_418300  +
mov al [ebp-21h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+10h] +
mov edx [ebp+8] +
mov [ebp-20h] eax +
mov eax [ebp+14h] +
mov [ebp-1Ch] eax +
mov eax [ebp+18h] +
mov [ebp-18h] eax +
mov eax [ebp+1Ch] +
mov [ebp-14h] eax +
mov eax [ebp+20h] +
mov [ebp-10h] eax +
mov eax [ebp+24h] +
mov [ebp-0Ch] eax +
mov eax [ebp+28h] +
mov [ebp-8] eax +
mov eax [ebp+2Ch] +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_417D6C  +
xor eax eax +
mov dword ptr [ebp-24h] 7 +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] ax +
cmp [edx] ax +
jnz loc_417CE3  +
xor ecx ecx +
jmp loc_417CFF  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_417CF0  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-38h] +
call loc_401E70  +
lea eax [ebp-38h] +
mov ecx esi +
push eax  +
lea eax [ebp-3Ch] +
push eax  +
call sub_417E90  +
mov edi [eax] +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_417D2F  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
cmp edi [esi] +
jz loc_417D6C  +
mov esi [edi+28h] +
cmp esi [edi+2Ch] +
jz loc_417D6C  +
mov ebx [ebp+0Ch] +
nop   +
mov ecx [esi] +
push 0  +
push 0  +
push dword ptr [ebp-4]  +
mov eax [ecx] +
push dword ptr [ebp-8]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push ebx  +
call dword ptr [eax+14h]  +
add esi 4 +
cmp esi [edi+2Ch] +
jnz loc_417D40  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 3Ch +
mov eax [ebp+10h] +
mov edx [ebp+8] +
mov [esp+1Ch] eax +
mov eax [ebp+14h] +
mov [esp+18h] eax +
mov eax [ebp+18h] +
mov [esp+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+10h] eax +
mov eax [ebp+20h] +
mov [esp+0Ch] eax +
mov eax [ebp+24h] +
mov [esp+8] eax +
mov eax [ebp+28h] +
mov [esp+4] eax +
mov eax [ebp+2Ch] +
mov [esp] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test edx edx +
jz loc_417E84  +
xor eax eax +
mov dword ptr [esp+40h] 7 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+2Ch] ax +
cmp [edx] ax +
jnz loc_417DF0  +
xor ecx ecx +
jmp loc_417E04  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_417DF5  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [esp+34h] +
call loc_401E70  +
lea eax [esp+2Ch] +
mov ecx esi +
push eax  +
lea eax [esp+48h] +
push eax  +
call sub_417E90  +
mov edi [eax] +
mov eax [esp+40h] +
cmp eax 8 +
jb loc_417E3A  +
inc eax  +
lea ecx [esp+2Ch] +
push eax  +
push dword ptr [esp+30h]  +
call loc_4024A0  +
cmp edi [esi] +
jz loc_417E84  +
mov esi [edi+28h] +
cmp esi [edi+2Ch] +
jz loc_417E84  +
mov ebx [ebp+0Ch] +
mov ecx [esi] +
push 0  +
push 0  +
push dword ptr [esp+14h]  +
mov eax [ecx] +
push dword ptr [esp+1Ch]  +
push dword ptr [esp+24h]  +
push dword ptr [esp+2Ch]  +
push dword ptr [esp+34h]  +
push dword ptr [esp+3Ch]  +
push dword ptr [esp+44h]  +
push dword ptr [esp+4Ch]  +
push ebx  +
call dword ptr [eax+10h]  +
add esi 4 +
cmp esi [edi+2Ch] +
jnz loc_417E50  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 30h  +
***
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ecx] +
mov ebx esi +
push edi  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
mov edi [esi+4] +
mov [ebp+var_4] eax +
mov [ebp+var_C] esi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_417ED9  +
mov esi eax +
push esi  +
lea ecx [edi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_417EC9  +
mov edi [edi+8] +
jmp loc_417ECD  +
mov ebx edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
jz loc_417EB7  +
mov esi [ebp+var_C] +
mov eax [ebp+var_4] +
cmp ebx esi +
jz loc_417EFA  +
lea edx [ebx+10h] +
mov ecx eax +
push edx  +
call sub_4067F0  +
test eax eax +
js loc_417EFA  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+var_8] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [ebp+var_4] eax +
call loc_406360  +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_417F35  +
mov esi [ebx+8] +
jmp loc_417F50  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_417F42  +
mov esi ecx +
jmp loc_417F50  +
mov edi [ebp+arg_4] +
mov esi [edi+8] +
cmp edi ebx +
jnz loc_417FE0  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [ebx+4] +
jnz loc_417F5C  +
mov [esi+4] eax +
mov ecx dword ptr qword_4A3AA8 +
cmp [ecx+4] ebx +
jnz loc_417F6C  +
mov [ecx+4] esi +
jmp loc_417F77  +
cmp [eax] ebx +
jnz loc_417F74  +
mov [eax] esi +
jmp loc_417F77  +
mov [eax+8] esi +
mov ecx dword ptr qword_4A3AA8 +
cmp [ecx] ebx +
jnz loc_417FA7  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_417F8B  +
mov edx eax +
jmp loc_417F9F  +
mov ecx [esi] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_417F9F  +
mov edx ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_417F95  +
mov ecx dword ptr qword_4A3AA8 +
mov [ecx] edx +
mov edi dword ptr qword_4A3AA8 +
cmp [edi+8] ebx +
jnz loc_41803A  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_417FC3  +
mov edx eax +
mov [edi+8] edx +
jmp loc_41803A  +
mov ecx [esi+8] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_417FDB  +
nop   +
mov edx ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_417FD0  +
mov [edi+8] edx +
jmp loc_41803A  +
mov [ecx+4] edi +
mov eax [ebx] +
mov [edi] eax +
cmp edi [ebx+8] +
jnz loc_417FF0  +
mov eax edi +
jmp loc_41800A  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [edi+4] +
jnz loc_417FFC  +
mov [esi+4] eax +
mov [eax] esi +
mov ecx [ebx+8] +
mov [edi+8] ecx +
mov ecx [ebx+8] +
mov [ecx+4] edi +
mov ecx dword ptr qword_4A3AA8 +
cmp [ecx+4] ebx +
jnz loc_41801A  +
mov [ecx+4] edi +
jmp loc_418028  +
mov ecx [ebx+4] +
cmp [ecx] ebx +
jnz loc_418025  +
mov [ecx] edi +
jmp loc_418028  +
mov [ecx+8] edi +
mov ecx [ebx+4] +
mov [edi+4] ecx +
mov cl [ebx+0Ch] +
mov dl [edi+0Ch] +
mov [edi+0Ch] cl +
mov [ebx+0Ch] dl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_4182BB  +
mov ecx dword ptr qword_4A3AA8 +
cmp esi [ecx+4] +
jz loc_4182B7  +
cmp byte ptr [esi+0Ch] 1 +
jnz loc_4182B7  +
mov edx [eax] +
cmp esi edx +
jnz loc_41811D  +
mov edx [eax+8] +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_4180B7  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax+8] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41808B  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp eax [ecx+4] +
jnz loc_4180A1  +
mov [ecx+4] edx +
jmp loc_4180AF  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_4180AC  +
mov [ecx] edx +
jmp loc_4180AF  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41818E  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_4180D6  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jz loc_41818A  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_4181BF  +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi+8] +
mov [edx] ecx +
mov ecx [edi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_418100  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp edx [ecx+4] +
jnz loc_4181A7  +
mov [ecx+4] edi +
jmp loc_4181B6  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_41816B  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41813E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp eax [ecx+4] +
jnz loc_418154  +
mov [ecx+4] edx +
jmp loc_418163  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_418161  +
mov [ecx+8] edx +
jmp loc_418163  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov edx [eax] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41818E  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_418218  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_418218  +
mov byte ptr [edx+0Ch] 0 +
mov ecx dword ptr qword_4A3AA8 +
mov esi eax +
mov eax [eax+4] +
cmp esi [ecx+4] +
jnz loc_418053  +
jmp loc_4182B7  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4181B4  +
mov [ecx+8] edi +
jmp loc_4181B6  +
mov [ecx] edi +
mov [edi+8] edx +
mov [edx+4] edi +
mov edx [eax+8] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4181E3  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp eax [ecx+4] +
jnz loc_4181FE  +
mov [ecx+4] edx +
mov [edx] eax +
jmp loc_4182B4  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_41820E  +
mov [ecx] edx +
mov [edx] eax +
jmp loc_4182B4  +
mov [ecx+8] edx +
mov [edx] eax +
jmp loc_4182B4  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_418269  +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi] +
mov [edx+8] ecx +
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41823E  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp edx [ecx+4] +
jnz loc_418254  +
mov [ecx+4] edi +
jmp loc_418262  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_41825F  +
mov [ecx] edi +
jmp loc_418262  +
mov [ecx+8] edi +
mov [edi] edx +
mov [edx+4] edi +
mov edx [eax] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41828C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword ptr qword_4A3AA8 +
cmp eax [ecx+4] +
jnz loc_4182A2  +
mov [ecx+4] edx +
jmp loc_4182B1  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_4182AF  +
mov [ecx+8] edx +
jmp loc_4182B1  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov byte ptr [esi+0Ch] 1 +
lea ecx [ebx+10h] +
call sub_418850  +
push ebx  +
call sub_44FE87  +
mov ecx dword ptr qword_4A3AA8+4 +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
test ecx ecx +
jz loc_4182EE  +
mov eax [ebp+var_4] +
dec ecx  +
mov dword ptr qword_4A3AA8+4 ecx +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+4] +
cmp edi eax +
jnb loc_418341  +
mov ecx [esi] +
cmp ecx edi +
ja loc_418341  +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_418329  +
push ecx  +
mov ecx esi +
call loc_418470  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418359  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax [esi+8] +
jnz loc_41834E  +
push ecx  +
mov ecx esi +
call loc_418470  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418359  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_8] ebx +
cmp ebx esi +
jz loc_418392  +
mov edx [esi] +
mov eax [esi+4] +
mov ecx [ebx] +
cmp edx eax +
jnz loc_41839C  +
mov [ebx+4] ecx +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push edi  +
mov edi [ebx+4] +
sub edi ecx +
sar edi 2 +
mov [ebp+var_4] edi +
mov edi eax +
sub edi edx +
sar edi 2 +
cmp edi [ebp+var_4] +
ja loc_4183DC  +
sub eax edx +
push eax  +
push edx  +
push ecx  +
call loc_450F90  +
mov ecx [esi+4] +
add esp 0Ch +
sub ecx [esi] +
mov eax [ebx] +
sar ecx 2 +
pop edi  +
pop esi  +
lea eax [eax+ecx*4] +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebx+8] +
sub eax ecx +
sar eax 2 +
cmp edi eax +
ja loc_418424  +
mov eax [ebp+var_4] +
lea ebx [edx+eax*4] +
mov eax ebx +
sub eax edx +
push eax  +
push edx  +
push ecx  +
call loc_450F90  +
mov esi [esi+4] +
mov edi [ebp+var_8] +
sub esi ebx +
push esi  +
push ebx  +
mov edi [edi+4] +
push edi  +
call loc_450F90  +
mov ecx [ebp+var_8] +
lea eax [esi+edi] +
add esp 18h +
mov [ecx+4] eax +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
test ecx ecx +
jz loc_41842F  +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax [esi+4] +
mov ecx ebx +
sub eax [esi] +
sar eax 2 +
push eax  +
call loc_4184E0  +
test al al +
jz loc_41845D  +
mov eax [esi] +
mov esi [esi+4] +
mov edi [ebx] +
sub esi eax +
push esi  +
push eax  +
push edi  +
call loc_450F90  +
lea eax [esi+edi] +
add esp 0Ch +
mov [ebx+4] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_4184C3  +
mov ecx [esi] +
sub edx ecx +
push ebx  +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_4184C8  +
sub edi ecx +
inc edx  +
sar edi 2 +
mov eax edi +
shr eax 1 +
sub ebx eax +
cmp ebx edi +
lea ecx [eax+edi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_4185B0  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jnz loc_41850A  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp edi 3FFFFFFFh +
ja loc_41852D  +
push edi  +
call loc_4186B0  +
mov [esi] eax +
mov [esi+4] eax +
mov eax [esi] +
lea eax [eax+edi*4] +
mov [esi+8] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr qword_4A3AA8 +
mov ecx [ebp+10h] +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
cmp esi [eax] +
jnz loc_418575  +
cmp ecx eax +
jnz loc_418575  +
call loc_418610  +
mov ecx dword ptr qword_4A3AA8 +
mov eax edi +
mov ecx [ecx] +
mov [edi] ecx +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp esi ecx +
jz loc_41859A  +
lea ecx [ebp+0Ch] +
call loc_406360  +
push esi  +
lea eax [ebp-4] +
push eax  +
call sub_417F10  +
mov esi [ebp+0Ch] +
cmp esi [ebp+10h] +
jnz loc_418580  +
mov [edi] esi +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push eax  +
mov esi ecx +
mov [ebp+var_4] eax +
call loc_4186B0  +
mov edx [esi] +
mov edi eax +
mov ecx [esi+4] +
sub ecx edx +
push ecx  +
push edx  +
push edi  +
call loc_450F90  +
mov ecx [esi] +
add esp 0Ch +
mov ebx [esi+4] +
sub ebx ecx +
sar ebx 2 +
test ecx ecx +
jz loc_4185F6  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax [ebp+var_4] +
lea eax [edi+eax*4] +
mov [esi+8] eax +
lea eax [edi+ebx*4] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475C10  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax dword ptr qword_4A3AA8 +
mov edi [eax+4] +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_41867D  +
push dword ptr [esi+8]  +
mov ecx offset qword_4A3AA8 +
call sub_418750  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_418850  +
push edi  +
call sub_44FE87  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_418650  +
mov eax dword ptr qword_4A3AA8 +
mov [eax+4] eax +
mov eax dword ptr qword_4A3AA8 +
mov [eax] eax +
mov eax dword ptr qword_4A3AA8 +
mov [eax+8] eax +
mov dword ptr qword_4A3AA8+4 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_4186BE  +
pop ebp  +
retn 4  +
***
cmp eax 3FFFFFFFh +
ja loc_418701  +
shl eax 2 +
cmp eax 1000h +
jb loc_4186F2  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_418706  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_41870B  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_4186BA  +
jmp loc_418710  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
add esp 4 +
test eax eax +
jz sub_45B2CA  +
lea ecx [eax+4] +
mov [eax] eax +
test ecx ecx +
jz loc_41873D  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_418746  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_418788  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_418750  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_418850  +
push edi  +
call sub_44FE87  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_418763  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ecx] +
mov ebx esi +
push edi  +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov edi [esi+4] +
mov [ebp-0Ch] ecx +
mov [ebp-4] eax +
mov [ebp-8] esi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4187E2  +
mov esi eax +
inc ebp  +
cld   +
cmp ebx esi +
jz loc_418807  +
lea ecx [ebx+10h] +
push ecx  +
mov ecx eax +
call sub_4067F0  +
test eax eax +
js loc_418807  +
mov eax [ebp-10h] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov byte ptr [eax+4] 0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp-4] +
push ecx  +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
push ecx  +
mov ecx [ebp-0Ch] +
call sub_4188C0  +
mov ecx [ebp-0Ch] +
push eax  +
add eax 10h +
push eax  +
push ebx  +
lea eax [ebp-0Ch] +
push eax  +
call sub_418990  +
mov ecx [ebp-10h] +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov byte ptr [ecx+4] 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [esi+18h] +
test ecx ecx +
jz loc_41887E  +
mov eax [esi+20h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_418891  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4188AE  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4778D1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call loc_418B70  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_418957  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_418930  +
mov eax [esi] +
jmp loc_418932  +
mov eax esi +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ecx  +
mov ecx esi +
mov [eax] dx +
call loc_402610  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4778F0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax ecx +
mov [ebp+var_20] eax +
mov ecx [ebp+arg_C] +
mov ebx [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [ebp+var_4] 0 +
cmp dword ptr [eax+4] 0 +
mov [ebp+var_24] ebx +
mov [ebp+var_28] edx +
mov [ebp+var_1C] ecx +
mov [ebp+var_2C] ecx +
jnz loc_4189FA  +
push ecx  +
push ecx  +
push dword ptr [eax]  +
mov ecx eax +
push 1  +
push ebx  +
call loc_418BD0  +
mov eax ebx +
jmp loc_418B4B  +
mov edi [eax] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_418A2D  +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_418B28  +
push [ebp+var_1C]  +
push ecx  +
mov ecx [ebp+var_20] +
push esi  +
push 1  +
push ebx  +
call loc_418BD0  +
mov eax ebx +
jmp loc_418B4B  +
cmp esi edi +
jnz loc_418A5C  +
mov esi [edi+8] +
push edx  +
lea ecx [esi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_418B28  +
push [ebp+var_1C]  +
push ecx  +
mov ecx [ebp+var_20] +
push esi  +
push 0  +
push ebx  +
call loc_418BD0  +
mov eax ebx +
jmp loc_418B4B  +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_418ABA  +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call loc_407220  +
mov ebx [ebp+var_18] +
push [ebp+var_28]  +
lea ecx [ebx+10h] +
call sub_4067F0  +
test eax eax +
jns loc_418ABA  +
mov eax [ebx+8] +
push [ebp+var_1C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_20] +
jz loc_418AA9  +
mov esi [ebp+var_24] +
push ebx  +
push 0  +
push esi  +
call loc_418BD0  +
jmp loc_418B49  +
push esi  +
mov esi [ebp+var_24] +
push 1  +
push esi  +
call loc_418BD0  +
jmp loc_418B49  +
push [ebp+var_28]  +
lea ecx [esi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_418B28  +
lea ecx [ebp+var_18] +
mov [ebp+var_18] esi +
call loc_406360  +
mov ebx [ebp+var_18] +
cmp ebx edi +
jz loc_418AEB  +
mov ecx [ebp+var_28] +
lea eax [ebx+10h] +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_418B28  +
mov eax [esi+8] +
push [ebp+var_1C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_20] +
jz loc_418B09  +
push esi  +
mov esi [ebp+var_24] +
push 0  +
push esi  +
call loc_418BD0  +
jmp loc_418B49  +
mov esi [ebp+var_24] +
push ebx  +
push 1  +
push esi  +
call loc_418BD0  +
jmp loc_418B49  +
push dword ptr [ebp-2Ch]  +
call sub_418BB0  +
push 0  +
push 0  +
call sub_452780  +
push [ebp+var_1C]  +
lea eax [ebp+var_30] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+var_28]  +
push ecx  +
mov ecx [ebp+var_20] +
push eax  +
call sub_418DF0  +
mov esi [ebp+var_24] +
mov eax [eax] +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push 34h  +
mov esi ecx +
call sub_44FE54  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_418BA1  +
mov eax [esi] +
lea ecx [edx+4] +
mov [edx] eax +
test ecx ecx +
jz loc_418B92  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_418B9D  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
call sub_45B2CA  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [esi+10h] +
call sub_418850  +
push esi  +
call sub_44FE87  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 4EC4EC3h +
jnb loc_418DC4  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_418C07  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_418C26  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_418C19  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_418C26  +
mov [ecx] ebx +
jmp loc_418C26  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_418C26  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_418DAF  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_418CF0  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_418CF6  +
cmp eax [ecx+8] +
jnz loc_418C91  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_418C6C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_418C7E  +
mov [ecx+4] edx +
jmp loc_418C8C  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_418C89  +
mov [ecx] edx +
jmp loc_418C8C  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_418CBB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_418CD3  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_418D9F  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_418CE6  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_418D9F  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_418D9F  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_418D13  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_418DA2  +
cmp eax [ecx] +
jnz loc_418D53  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_418D2C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_418D3E  +
mov [ecx+4] edx +
jmp loc_418D4D  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_418D4B  +
mov [ecx+8] edx +
jmp loc_418D4D  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_418D7D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_418D8F  +
mov [ecx+4] esi +
jmp loc_418D9D  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_418D9A  +
mov [ecx] esi +
jmp loc_418D9D  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_418C35  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [ebp+18h] +
lea ecx [esi+10h] +
call sub_418850  +
push esi  +
call sub_44FE87  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_44EC5C  +
push 0FFFFFFFFh  +
push offset loc_477920  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax ecx +
mov [ebp+var_24] eax +
mov ecx [ebp+arg_C] +
mov edx [ebp+arg_8] +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax [eax] +
mov ebx eax +
mov [ebp+var_28] edx +
mov [ebp+var_1C] ecx +
mov [ebp+var_2C] ecx +
mov esi [eax+4] +
mov al 1 +
mov byte ptr [ebp+var_20] al +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_418E7C  +
nop   +
lea eax [esi+10h] +
mov ecx edx +
push eax  +
mov ebx esi +
call sub_4067F0  +
test eax eax +
sets al  +
mov byte ptr [ebp+var_20] al +
test al al +
jz loc_418E6D  +
mov esi [esi] +
jmp loc_418E70  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
mov edx [ebp+var_28] +
jz loc_418E50  +
mov ecx [ebp+var_1C] +
mov esi ebx +
mov [ebp+var_18] esi +
test al al +
jz loc_418EB3  +
mov edx [ebp+var_24] +
mov eax [edx] +
cmp ebx [eax] +
jnz loc_418EA8  +
push ecx  +
push ecx  +
push ebx  +
push 1  +
lea eax [ebp+var_24] +
mov ecx edx +
push eax  +
call loc_418BD0  +
mov ecx [eax] +
mov [edi] ecx +
mov byte ptr [edi+4] 1 +
jmp loc_418F0B  +
lea ecx [ebp+var_18] +
call loc_407220  +
mov esi [ebp+var_18] +
push [ebp+var_28]  +
lea ecx [esi+10h] +
call sub_4067F0  +
test eax eax +
jns loc_418EF1  +
push [ebp+var_1C]  +
lea eax [ebp+var_20] +
push ecx  +
mov ecx [ebp+var_24] +
push ebx  +
push [ebp+var_20]  +
push eax  +
call loc_418BD0  +
mov eax [eax] +
mov [edi] eax +
mov byte ptr [edi+4] 1 +
jmp loc_418F0B  +
push dword ptr [ebp-2Ch]  +
call sub_418BB0  +
push 0  +
push 0  +
call sub_452780  +
mov ebx [ebp+var_1C] +
lea ecx [ebx+10h] +
call sub_418850  +
push ebx  +
call sub_44FE87  +
add esp 4 +
mov [edi] esi +
mov byte ptr [edi+4] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
and esp 0FFFFFFF8h +
mov eax [ebp+arg_0] +
lea ecx [ebp+arg_C] +
push ecx  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_403870  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_45D76E  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477974  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_41CD90  +
mov [ebp+var_4] 0 +
lea eax [esi+98h] +
mov dword ptr [esi] offset off_48F754 +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_418FC9  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
mov [esi+0C0h] ecx +
mov [esi+0C4h] ecx +
mov [esi+0C8h] ecx +
mov byte ptr [ebp+var_4] 2 +
push 12h  +
mov [esi+90h] ecx +
mov [esi+68h] ecx +
lea ecx [esi+4] +
push offset ServiceName  +
call loc_401E70  +
mov ecx esi +
call sub_420130  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_419050  +
test [ebp+arg_0] 1 +
jz loc_41903F  +
push 0D0h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov eax [edi+68h] +
mov dword ptr [edi] offset off_48F754 +
test eax eax +
jz loc_419071  +
push eax  +
call esi  +
mov dword ptr [edi+68h] 0 +
mov eax [edi+90h] +
test eax eax +
jz loc_4190AE  +
mov eax [eax] +
test eax eax +
jz loc_419089  +
cmp eax 0FFFFFFFFh +
jz loc_419089  +
push eax  +
call esi  +
mov eax [edi+90h] +
test eax eax +
jz loc_4190A4  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_44FE8C  +
add esp 8 +
mov dword ptr [edi+90h] 0 +
mov ecx [edi+0C0h] +
test ecx ecx +
jz loc_41910B  +
mov edx [edi+0C4h] +
push ecx  +
call loc_402FE0  +
mov esi [edi+0C0h] +
mov eax 2AAAAAABh +
mov ecx [edi+0C8h] +
add esp 4 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4023A0  +
mov dword ptr [edi+0C0h] 0 +
mov dword ptr [edi+0C4h] 0 +
mov dword ptr [edi+0C8h] 0 +
mov eax [edi+0ACh] +
lea esi [edi+98h] +
cmp eax 8 +
jb loc_419127  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41913D  +
mov esi [esi] +
xor eax eax +
mov ecx edi +
pop edi  +
mov [esi] ax +
pop esi  +
jmp sub_41CE80  +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
add ecx 4Ch +
mov word ptr [ebp+var_8] 0 +
mov [ebp+var_C] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_419178  +
mov ecx [ecx] +
push offset aRbCcsUtf8  +
push ecx  +
lea eax [ebp+var_C] +
push eax  +
call sub_45F3E2  +
mov eax [ebp+var_C] +
add esp 0Ch +
test eax eax +
jz loc_4191E5  +
push eax  +
push 2  +
lea eax [ebp+var_8] +
push 1  +
push eax  +
call sub_460989  +
push [ebp+var_C]  +
call sub_45D996  +
mov cl byte ptr [ebp+var_8] +
add esp 14h +
mov al byte ptr [ebp+var_8+1] +
cmp cl 0FFh +
jnz loc_4191B9  +
cmp al 0FEh +
jz loc_4191C2  +
cmp al 0FFh +
jnz loc_4191D5  +
cmp cl 0FEh +
jnz loc_4191D5  +
mov eax 1 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+8Ch] 1 +
jnz loc_419244  +
call sub_419150  +
test al al +
jnz loc_419244  +
mov eax [ebx] +
test eax eax +
jz loc_41923D  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx] 0 +
mov ecx edi +
call sub_41AE50  +
cmp dword ptr [edi+60h] 8 +
lea esi [edi+4Ch] +
jb loc_419251  +
mov eax [esi] +
jmp loc_419253  +
mov eax esi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 40000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4192E4  +
cmp dword ptr [esi+14h] 8 +
jb loc_41927B  +
mov esi [esi] +
push 0  +
push 80h  +
push 1  +
push 0  +
push 3  +
push 40000000h  +
push esi  +
call ds:CreateFileW  +
mov [ebx] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4192B0  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp dword ptr [edi+8Ch] 1 +
lea ecx [ebp+NumberOfBytesWritten] +
push 0  +
push ecx  +
jnz loc_4192CD  +
mov [ebp+Buffer] 0FEFFh +
lea ecx [ebp+Buffer] +
push 2  +
jmp loc_4192DC  +
mov word ptr [ebp+Buffer] 0BBEFh +
lea ecx [ebp+Buffer] +
mov byte ptr [ebp+Buffer+2] 0BFh +
push 3  +
push ecx  +
push eax  +
call ds:WriteFile  +
mov ecx [ebp+var_4] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4779A6  +
mov eax large fs:0 +
push eax  +
sub esp 254h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
lea eax [ebp-218h] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp-218h] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_419405  +
mov dword ptr [ebp-234h] 7 +
mov [ebp-238h] eax +
mov [ebp-248h] ax +
cmp [ebp-218h] ax +
jnz loc_41937E  +
xor ecx ecx +
jmp loc_419396  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419387  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-248h] +
call loc_401E70  +
xor bl bl +
lea eax [ebp-248h] +
cmp dword ptr [ebp-234h] 8 +
push 0  +
cmovnb eax [ebp-248h] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
test eax eax +
jz loc_4193DA  +
cmp eax 0B7h +
jz loc_4193DA  +
cmp eax 50h +
jnz loc_4193DC  +
mov bl 1 +
mov eax [ebp-234h] +
cmp eax 8 +
jb loc_4193FA  +
inc eax  +
lea ecx [ebp-248h] +
push eax  +
push dword ptr [ebp-248h]  +
call loc_4024A0  +
test bl bl +
jnz loc_419405  +
xor al al +
jmp loc_419526  +
xor eax eax +
mov dword ptr [ebp-21Ch] 7 +
mov dword ptr [ebp-220h] 0 +
mov [ebp-230h] ax +
cmp [ebp-218h] ax +
jnz loc_41942F  +
xor ecx ecx +
jmp loc_41944F  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419440  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-218h] +
push eax  +
lea ecx [ebp-230h] +
call loc_401E70  +
mov dword ptr [ebp-4] 0 +
xor eax eax +
mov dword ptr [ebp-24Ch] 7 +
mov dword ptr [ebp-250h] 0 +
mov [ebp-260h] ax +
cmp [esi] ax +
jnz loc_41948F  +
xor ecx ecx +
jmp loc_4194A3  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419494  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-260h] +
call loc_401E70  +
lea edx [ebp-260h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-230h] +
call loc_41F5E0  +
mov byte ptr [ebp-4] 0 +
mov bl al +
mov ecx [ebp-24Ch] +
cmp ecx 8 +
jb loc_4194E9  +
inc ecx  +
push ecx  +
push dword ptr [ebp-260h]  +
lea ecx [ebp-260h] +
call loc_4024A0  +
test bl bl +
jz loc_419506  +
lea ecx [edi+4Ch] +
lea eax [ebp-230h] +
cmp ecx eax +
jz loc_419504  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402610  +
mov bl 1 +
mov ecx [ebp-21Ch] +
cmp ecx 8 +
jb loc_419524  +
inc ecx  +
push ecx  +
push dword ptr [ebp-230h]  +
lea ecx [ebp-230h] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4779D8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+6Ch] 0 +
jnz loc_419589  +
xor al al +
jmp loc_4196AF  +
xor ecx ecx +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [esi+4Ch] +
mov word ptr [ebp+var_28] cx +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
call loc_402610  +
mov [ebp+var_4] 0 +
cmp [ebp+var_18] 0 +
jnz loc_4195D0  +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_4195C4  +
mov eax [eax] +
push eax  +
mov ecx esi +
call loc_419300  +
test al al +
jz loc_4195E6  +
cmp dword ptr [esi+68h] 0 +
lea ecx [esi+68h] +
jnz loc_4195ED  +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov eax [eax] +
call eax  +
test al al +
jnz loc_4195ED  +
xor bl bl +
jmp loc_419698  +
cmp dword ptr [esi+90h] 0 +
jnz loc_419615  +
push 4  +
call sub_44FE54  +
add esp 4 +
mov [ebp+var_3C] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax] 0 +
mov [esi+90h] eax +
cmp dword ptr [esi+48h] 8 +
lea eax [esi+34h] +
jb loc_419620  +
mov eax [eax] +
sub esp 18h +
mov ecx esp +
push eax  +
call loc_401D00  +
mov ecx [esi+90h] +
call sub_420940  +
lea eax [ebp+var_38] +
push eax  +
call sub_460DA5  +
mov eax [ebp+var_34] +
add esp 4 +
mov ecx [ebp+var_38] +
mov [esi+0B4h] eax +
mov [esi+0BCh] eax +
mov eax [esi+90h] +
mov [esi+0B0h] ecx +
mov [esi+0B8h] ecx +
mov eax [eax] +
test eax eax +
jz loc_419692  +
push 0EA60h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_419692  +
push ecx  +
mov ecx esi +
call sub_41FC00  +
mov eax [esi+90h] +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
mov byte ptr [esi+6Dh] 1 +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_4196AD  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+68h] +
test eax eax +
jz loc_4196ED  +
cmp eax 0FFFFFFFFh +
jz loc_4196ED  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+68h] 0 +
mov eax [esi+90h] +
test eax eax +
jz loc_41972E  +
mov eax [eax] +
test eax eax +
jz loc_419709  +
cmp eax 0FFFFFFFFh +
jz loc_419709  +
push eax  +
call ds:CloseHandle  +
mov eax [esi+90h] +
test eax eax +
jz loc_419724  +
push 4  +
push eax  +
mov dword ptr [eax] 0 +
call sub_44FE8C  +
add esp 8 +
mov dword ptr [esi+90h] 0 +
mov byte ptr [esi+6Dh] 0 +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov esi edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_419760  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
sar esi 1 +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
add esi esi +
push esi  +
mov esi ds:WriteFile +
push edi  +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
push 4  +
push offset asc_48F64C  +
push dword ptr [ebx+68h]  +
call esi  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov esi edi +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_4197F0  +
push 2  +
push 0  +
push 0  +
push dword ptr [ebx+68h]  +
sub esi ecx +
call ds:SetFilePointer  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
push esi  +
mov esi ds:WriteFile +
push edi  +
push dword ptr [ebx+68h]  +
call esi  +
push 0  +
lea eax [ebp-8] +
mov dword ptr [ebp-8] 0 +
push eax  +
push 2  +
push offset asc_48F654  +
push dword ptr [ebx+68h]  +
call esi  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 24Ch +
mov eax dword_49E070 +
xor eax esp +
mov [esp+24Ch+var_4] eax +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
or eax edx +
push edi  +
mov edi ecx +
jnz loc_419895  +
lea eax [esp+258h+var_248] +
push eax  +
call sub_460DA5  +
mov edx [esp+25Ch+var_244] +
add esp 4 +
mov eax [esp+258h+var_248] +
jmp loc_4198B8  +
push 0  +
push 3E8h  +
push edx  +
push esi  +
call sub_450660  +
imul ecx eax +
mov [esp+258h+var_248] eax +
mov [esp+258h+var_244] edx +
sub esi ecx +
mov [esp+258h+var_240] si +
mov [esp+258h+var_238] eax +
mov [edi+0B8h] eax +
lea eax [esp+258h+var_238] +
push eax  +
lea eax [esp+25Ch+var_22C] +
mov [esp+25Ch+var_234] edx +
push eax  +
mov [edi+0BCh] edx +
call sub_45F316  +
lea eax [esp+260h+var_22C] +
push eax  +
push offset aXX  +
lea eax [esp+268h+var_208] +
push 100h  +
push eax  +
call sub_46079E  +
movzx eax [esp+270h+var_240] +
push eax  +
lea eax [esp+274h+var_208] +
push eax  +
push offset aS_3d  +
push 100h  +
push ebx  +
call sub_418F30  +
mov ecx [esp+284h+var_4] +
add esp 2Ch +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_477A11  +
mov eax large fs:0 +
push eax  +
sub esp 0B8h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea eax [ebp+var_C0] +
push 0B0h  +
push 0  +
push eax  +
mov [ebp+var_C4] 0 +
call sub_453150  +
add esp 4 +
lea ecx [ebp+var_C0] +
call sub_414840  +
mov [ebp+var_4] 0 +
call ds:GetCurrentThreadId  +
push eax  +
lea ecx [ebp+var_B0] +
call sub_41B590  +
push esi  +
lea ecx [ebp+var_C0] +
call sub_41B570  +
lea ecx [ebp+var_58] +
call sub_414750  +
lea eax [ebp+var_58] +
mov [ebp+var_4] 1 +
push eax  +
mov [ebp+var_58] offset off_48D060 +
call sub_44F167  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_477AE5  +
mov eax large fs:0 +
push eax  +
sub esp 2C8h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebp+arg_8] +
mov esi [ebp+arg_24] +
mov edi [ebp+arg_28] +
mov [ebp+var_244] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_260] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_264] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_268] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_26C] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_270] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_274] eax +
xor eax eax +
mov [ebp+var_214] 7 +
mov [ebp+var_218] 0 +
mov word ptr [ebp+var_228] ax +
cmp [esi] ax +
jnz loc_419A8B  +
xor ecx ecx +
jmp loc_419A9F  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_419A90  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp+var_228] +
call loc_401E70  +
lea eax [ebp+var_210] +
mov [ebp+var_4] 0 +
push eax  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+arg_0]  +
call sub_419850  +
push offset aEyj  +
push esi  +
call loc_4524FD  +
add esp 8 +
test eax eax +
jz loc_419B09  +
push offset a_eyj  +
push eax  +
call loc_4524FD  +
add esp 8 +
test eax eax +
jz loc_419B09  +
push 27h  +
push offset aFoundAccessDev  +
lea ecx [ebp+var_228] +
mov [ebp+var_244] 28h +
call loc_401E70  +
jmp loc_419B18  +
lea eax [ebp+var_228] +
mov ecx ebx +
push eax  +
push esi  +
call loc_420560  +
push [ebp+var_244]  +
lea eax [ebp+var_240] +
push eax  +
call sub_41B020  +
mov esi eax +
add ebx 1Ch +
mov byte ptr [ebp+var_4] 1 +
push ebx  +
lea edx [ebp+var_210] +
lea ecx [ebp+var_25C] +
call loc_413B30  +
push offset asc_48C354  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2D4] +
call loc_402E60  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2BC] +
call sub_41BEE0  +
push offset asc_48C358  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_2A4] +
call loc_402E60  +
push ebx  +
mov edx eax +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_28C] +
call sub_41BE90  +
add esp 14h +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 6 +
call loc_402730  +
mov eax [ebp+var_278] +
cmp eax 8 +
jb loc_419BC6  +
inc eax  +
lea ecx [ebp+var_28C] +
push eax  +
push [ebp+var_28C]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_278] 7 +
mov word ptr [ebp+var_28C] ax +
mov eax [ebp+var_290] +
mov [ebp+var_27C] 0 +
cmp eax 8 +
jb loc_419C01  +
inc eax  +
lea ecx [ebp+var_2A4] +
push eax  +
push [ebp+var_2A4]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_290] 7 +
mov word ptr [ebp+var_2A4] ax +
mov eax [ebp+var_2A8] +
mov [ebp+var_294] 0 +
cmp eax 8 +
jb loc_419C3C  +
inc eax  +
lea ecx [ebp+var_2BC] +
push eax  +
push [ebp+var_2BC]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2A8] 7 +
mov word ptr [ebp+var_2BC] ax +
mov eax [ebp+var_2C0] +
mov [ebp+var_2AC] 0 +
cmp eax 8 +
jb loc_419C77  +
inc eax  +
lea ecx [ebp+var_2D4] +
push eax  +
push [ebp+var_2D4]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C0] 7 +
mov word ptr [ebp+var_2D4] ax +
mov eax [ebp+var_248] +
mov [ebp+var_2C4] 0 +
cmp eax 8 +
jb loc_419CB2  +
inc eax  +
lea ecx [ebp+var_25C] +
push eax  +
push [ebp+var_25C]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_248] 7 +
mov word ptr [ebp+var_25C] ax +
mov byte ptr [ebp+var_4] al +
mov eax [ebp+var_22C] +
mov [ebp+var_24C] 0 +
cmp eax 8 +
jb loc_419CF0  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_260] +
lea ecx [ebp+var_240] +
mov esi offset word_4873C8 +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 7 +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419D43  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_264] +
lea ecx [ebp+var_240] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 8 +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419D91  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_268] +
lea ecx [ebp+var_240] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 9 +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419DDF  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_26C] +
lea ecx [ebp+var_240] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Ah +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419E2D  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_270] +
lea ecx [ebp+var_240] +
test eax eax +
mov edx esi +
push ebx  +
cmovnz edx eax +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Bh +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419E7B  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
mov eax [ebp+var_274] +
lea ecx [ebp+var_240] +
test eax eax +
push ebx  +
cmovnz esi eax +
mov edx esi +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Ch +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_22C] +
cmp eax 8 +
jb loc_419EC9  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
lea eax [ebp+var_240] +
push eax  +
call sub_419930  +
push ebx  +
mov edx eax +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_25C] +
call sub_41BE90  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 0Eh +
call loc_402730  +
mov eax [ebp+var_248] +
cmp eax 8 +
jb loc_419F18  +
inc eax  +
lea ecx [ebp+var_25C] +
push eax  +
push [ebp+var_25C]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_248] 7 +
mov word ptr [ebp+var_25C] ax +
mov byte ptr [ebp+var_4] al +
mov eax [ebp+var_22C] +
mov [ebp+var_24C] 0 +
cmp eax 8 +
jb loc_419F56  +
inc eax  +
lea ecx [ebp+var_240] +
push eax  +
push [ebp+var_240]  +
call loc_4024A0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp+var_228] +
mov ecx edi +
push eax  +
call loc_402730  +
mov eax [ebp+var_214] +
cmp eax 8 +
jb loc_419F86  +
inc eax  +
lea ecx [ebp+var_228] +
push eax  +
push [ebp+var_228]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push 0FFFFFFFFh  +
push offset loc_477B26  +
mov eax large fs:0 +
push eax  +
mov eax 2058h +
call sub_450CA0  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_20] +
mov [ebp+var_205C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_2058] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_2054] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_2050] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_204C] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2048] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_2044] eax +
cmp [esi+64h] ebx +
jg loc_41A1D6  +
mov eax [esi+90h] +
test eax eax +
jz loc_41A1D6  +
mov eax [eax] +
test eax eax +
jz loc_41A1D6  +
push 0EA60h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_41A1D6  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
js loc_41A0A6  +
jg loc_41A082  +
cmp ecx 384h +
jb loc_41A0A6  +
push ecx  +
mov ecx esi +
call sub_41FC00  +
test al al +
jz loc_41A0A6  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [ebp+var_2014] 7 +
mov [ebp+var_2018] 0 +
mov [ebp+WideCharStr] ax +
mov [ebp+var_4] eax +
test edi edi +
jnz loc_41A0D2  +
mov eax [ebp+var_2044] +
jmp loc_41A101  +
push edi  +
push 0  +
push [ebp+var_2044]  +
lea eax [ebp+var_2010] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_403870  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_45D723  +
add esp 20h +
lea eax [ebp+var_2010] +
lea ecx [ebp+WideCharStr] +
push ecx  +
push eax  +
push [ebp+var_2048]  +
mov ecx esi +
push [ebp+var_204C]  +
push [ebp+var_2050]  +
push [ebp+var_2054]  +
push [ebp+var_2058]  +
push [ebp+var_205C]  +
push ebx  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call sub_4199F0  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_41A19D  +
mov [ebp+var_202C] 0Fh +
mov [ebp+var_2030] 0 +
mov byte ptr [ebp+var_2040] 0 +
lea edx [ebp+var_2040] +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+WideCharStr] +
call sub_41F200  +
cmp [ebp+var_202C] 10h +
lea ecx [ebp+var_2040] +
mov eax [esi] +
cmovnb ecx [ebp+var_2040] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp+var_2040] +
call sub_4037C0  +
jmp loc_41A1B9  +
cmp [ebp+var_2014] 8 +
lea ecx [ebp+WideCharStr] +
mov eax [esi] +
cmovnb ecx dword ptr [ebp+WideCharStr] +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
mov eax [esi+90h] +
test eax eax +
jz loc_41A1CB  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+WideCharStr] +
call sub_401C90  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477C26  +
mov eax large fs:0 +
push eax  +
sub esp 3B4h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
xorps xmm0 xmm0 +
movq qword ptr [ebp-78h] xmm0 +
mov dword ptr [ebp-78h] 0 +
mov dword ptr [ebp-74h] 0 +
call sub_4067C0  +
mov [ebp-78h] eax +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
movq qword ptr [ebp-4Ch] xmm0 +
mov dword ptr [ebp-44h] 0 +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-44h] 0 +
movq qword ptr [ebp-58h] xmm0 +
mov dword ptr [ebp-50h] 0 +
mov dword ptr [ebp-58h] 0 +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-50h] 0 +
xor eax eax +
mov dword ptr [ebp-94h] 7 +
mov dword ptr [ebp-98h] 0 +
mov [ebp-0A8h] ax +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-60h] eax +
mov [ebp-70h] ax +
mov dword ptr [ebp-0F4h] 7 +
mov [ebp-0F8h] eax +
mov [ebp-108h] ax +
mov dword ptr [ebp-10Ch] 7 +
mov [ebp-110h] eax +
mov [ebp-120h] ax +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-90h] +
push eax  +
push offset word_4873C8  +
mov dword ptr [ebp-7Ch] 7 +
mov [ebp-80h] eax +
mov [ebp-90h] ax +
call loc_401E70  +
xor eax eax +
mov byte ptr [ebp-4] 7 +
push 0FFFFFFFFh  +
push eax  +
add esi 4Ch +
mov dword ptr [ebp-0DCh] 7 +
push esi  +
lea ecx [ebp-0F0h] +
mov dword ptr [ebp-0E0h] 0 +
mov [ebp-0F0h] ax +
call loc_402610  +
lea edx [ebp-120h] +
mov byte ptr [ebp-4] 8 +
mov ecx esi +
call sub_41F920  +
lea ecx [ebp-0F0h] +
call loc_41F690  +
xor esi esi +
lea edx [ebp-90h] +
lea ecx [ebp-3C0h] +
call sub_402ED0  +
lea ecx [ebp-70h] +
mov byte ptr [ebp-4] 11h +
push ecx  +
mov edx eax +
lea ecx [ebp-3A8h] +
call sub_41BE90  +
push offset asc_4873B4  +
mov edx eax +
mov byte ptr [ebp-4] 12h +
lea ecx [ebp-138h] +
call loc_402E60  +
add esp 0Ch +
mov eax [ebp-394h] +
cmp eax 8 +
jb loc_41A76D  +
inc eax  +
lea ecx [ebp-3A8h] +
push eax  +
push dword ptr [ebp-3A8h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-394h] 7 +
mov dword ptr [ebp-398h] 0 +
mov [ebp-3A8h] ax +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-3ACh] +
cmp eax 8 +
jb loc_41A7AC  +
inc eax  +
lea ecx [ebp-3C0h] +
push eax  +
push dword ptr [ebp-3C0h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-3ACh] 7 +
cmp dword ptr [ebp-124h] 8 +
lea ecx [ebp-388h] +
mov [ebp-3C0h] ax +
lea eax [ebp-138h] +
cmovnb eax [ebp-138h] +
push ecx  +
push eax  +
mov dword ptr [ebp-3B0h] 0 +
call ds:FindFirstFileW  +
mov ebx [ebp-4Ch] +
mov [ebp-390h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_41A810  +
call ds:GetLastError  +
mov edi [ebp-58h] +
jmp loc_41ABF0  +
xor bl bl +
cmp word ptr [ebp-35Ch] 0 +
mov [ebp-389h] bl +
jnz loc_41A826  +
xor ecx ecx +
jmp loc_41A83F  +
lea ecx [ebp-35Ch] +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41A830  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-35Ch] +
push eax  +
lea ecx [ebp-0A8h] +
call loc_401E70  +
mov ecx offset a__0 +
lea eax [ebp-35Ch] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_41A886  +
test dx dx +
jz loc_41A882  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_41A886  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_41A860  +
xor eax eax +
jmp loc_41A88B  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_41AB3D  +
mov ecx offset a___0 +
lea eax [ebp-35Ch] +
nop   +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_41A8C6  +
test dx dx +
jz loc_41A8C2  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_41A8C6  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_41A8A0  +
xor eax eax +
jmp loc_41A8CB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_41AB3D  +
mov ecx [ebp-48h] +
mov eax 2AAAAAABh +
sub ecx [ebp-4Ch] +
xor esi esi +
imul  ecx +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
jz loc_41AAA9  +
mov ebx [ebp-4Ch] +
cmp edi esi +
jbe loc_41AE10  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call loc_402610  +
mov byte ptr [ebp-4] 16h +
lea eax [ebp-70h] +
push dword ptr [ebp-60h]  +
cmp dword ptr [ebp-5Ch] 8 +
lea ecx [ebp-0A8h] +
push 0  +
cmovnb eax [ebp-70h] +
push eax  +
call sub_40A370  +
test eax eax +
jnz loc_41A9A1  +
push dword ptr [ebp-18h]  +
lea ecx [ebp-0A8h] +
mov byte ptr [ebp-389h] 1 +
push eax  +
lea eax [ebp-40h] +
push eax  +
call sub_40A2D0  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
cmp dword ptr [eax+14h] 8 +
jb loc_41A96E  +
mov eax [eax] +
push ecx  +
push eax  +
call ds:lstrcmpW  +
test eax eax +
mov eax [ebp-2Ch] +
setz byte ptr [ebp-38Ah]  +
cmp eax 8 +
jb loc_41A994  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_4024A0  +
cmp byte ptr [ebp-38Ah] 0 +
jnz loc_41AA8A  +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41A9BA  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
inc esi  +
add ebx 18h +
cmp edi esi +
ja loc_41A8FD  +
mov bl [ebp-389h] +
cmp bl 1 +
jnz loc_41AB3D  +
cmp dword ptr [ebp-0F4h] 8 +
lea ecx [ebp-108h] +
lea eax [ebp-0A8h] +
cmovnb ecx [ebp-108h] +
cmp dword ptr [ebp-94h] 8 +
push ecx  +
cmovnb eax [ebp-0A8h] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_41AAA9  +
push offset asc_4873B8  +
lea edx [ebp-90h] +
lea ecx [ebp-40h] +
call sub_402ED0  +
mov byte ptr [ebp-4] 17h +
lea ecx [ebp-0A8h] +
cmp dword ptr [ebp-94h] 8 +
mov edx eax +
cmovnb ecx [ebp-0A8h] +
push ecx  +
lea ecx [ebp-28h] +
call loc_402E60  +
mov byte ptr [ebp-4] 15h +
add esp 8 +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_41AA5F  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_4024A0  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
call ds:DeleteFileW  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41AB3D  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
jmp loc_41AB38  +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41AAA3  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
mov bl [ebp-389h] +
cmp bl 1 +
jnz loc_41AB3D  +
push offset asc_4873B8  +
lea edx [ebp-90h] +
lea ecx [ebp-28h] +
call sub_402ED0  +
mov byte ptr [ebp-4] 18h +
lea ecx [ebp-0A8h] +
cmp dword ptr [ebp-94h] 8 +
mov edx eax +
cmovnb ecx [ebp-0A8h] +
push ecx  +
lea ecx [ebp-40h] +
call loc_402E60  +
add esp 8 +
mov byte ptr [ebp-4] 1Ah +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41AB04  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
lea ecx [ebp-58h] +
lea eax [ebp-40h] +
mov dword ptr [ebp-18h] 0 +
push eax  +
call sub_401A70  +
mov byte ptr [ebp-4] 15h +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_41AB3D  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_4024A0  +
lea eax [ebp-388h] +
push eax  +
push dword ptr [ebp-390h]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_41A810  +
mov ecx [ebp-54h] +
mov eax 2AAAAAABh +
mov edi [ebp-58h] +
sub ecx edi +
push dword ptr [ebp-390h]  +
imul  ecx +
mov ecx edi +
sar edx 2 +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
mov edx [ebp-54h] +
push ebx  +
call sub_41C0A0  +
mov esi 3 +
add esp 8 +
cmp ebx esi +
jbe loc_41ABED  +
nop   +
lea eax [esi-3] +
cmp ebx eax +
jbe loc_41AE10  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
push 0FFFFFFFFh  +
push eax  +
push edi  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call loc_402610  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
call ds:DeleteFileW  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41ABE2  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
inc esi  +
add edi 18h +
cmp esi ebx +
jb loc_41AB90  +
mov edi [ebp-58h] +
mov ebx [ebp-4Ch] +
mov eax [ebp-124h] +
cmp eax 8 +
jb loc_41AC0E  +
inc eax  +
lea ecx [ebp-138h] +
push eax  +
push dword ptr [ebp-138h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-124h] 7 +
mov [ebp-138h] ax +
mov eax [ebp-0DCh] +
mov dword ptr [ebp-128h] 0 +
cmp eax 8 +
jb loc_41AC49  +
inc eax  +
lea ecx [ebp-0F0h] +
push eax  +
push dword ptr [ebp-0F0h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-0DCh] 7 +
mov [ebp-0F0h] ax +
mov eax [ebp-7Ch] +
mov dword ptr [ebp-0E0h] 0 +
cmp eax 8 +
jb loc_41AC81  +
inc eax  +
lea ecx [ebp-90h] +
push eax  +
push dword ptr [ebp-90h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-7Ch] 7 +
mov [ebp-90h] ax +
mov eax [ebp-10Ch] +
mov dword ptr [ebp-80h] 0 +
cmp eax 8 +
jb loc_41ACB6  +
inc eax  +
lea ecx [ebp-120h] +
push eax  +
push dword ptr [ebp-120h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-10Ch] 7 +
mov [ebp-120h] ax +
mov eax [ebp-0F4h] +
mov dword ptr [ebp-110h] 0 +
cmp eax 8 +
jb loc_41ACF1  +
inc eax  +
lea ecx [ebp-108h] +
push eax  +
push dword ptr [ebp-108h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-0F4h] 7 +
mov [ebp-108h] ax +
mov eax [ebp-5Ch] +
mov dword ptr [ebp-0F8h] 0 +
cmp eax 8 +
jb loc_41AD23  +
inc eax  +
lea ecx [ebp-70h] +
push eax  +
push dword ptr [ebp-70h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-5Ch] 7 +
mov [ebp-70h] ax +
mov eax [ebp-94h] +
mov dword ptr [ebp-60h] 0 +
cmp eax 8 +
jb loc_41AD55  +
inc eax  +
lea ecx [ebp-0A8h] +
push eax  +
push dword ptr [ebp-0A8h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-94h] 7 +
mov dword ptr [ebp-98h] 0 +
mov [ebp-0A8h] ax +
test edi edi +
jz loc_41ADA1  +
mov edx [ebp-54h] +
push ecx  +
mov ecx edi +
call loc_402FE0  +
mov ecx [ebp-50h] +
mov eax 2AAAAAABh +
sub ecx edi +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push edi  +
call loc_4023A0  +
test ebx ebx +
jz loc_41ADD0  +
mov edx [ebp-48h] +
push ecx  +
mov ecx ebx +
call loc_402FE0  +
mov ecx [ebp-44h] +
mov eax 2AAAAAABh +
sub ecx ebx +
add esp 4 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push ebx  +
call loc_4023A0  +
mov eax [ebp-78h] +
lea ecx [ebp-78h] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp-390h] +
push eax  +
call loc_41B900  +
push dword ptr [ebp-78h]  +
call sub_44FE87  +
add esp 4 +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aInvalidVectorT  +
call sub_44EC7C  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_41B900  +
push dword ptr [esi]  +
call sub_44FE87  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477C70  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
lea esi [edi+4Ch] +
mov [ebp+var_18] 0 +
push esi  +
lea ecx [ebp+lpNewFileName] +
mov word ptr [ebp+lpNewFileName] ax +
call loc_402610  +
lea ecx [ebp+lpNewFileName] +
mov [ebp+var_4] 0 +
call loc_41F690  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 1 +
call sub_41F4C0  +
lea eax [ebp+var_58] +
mov edx offset asc_487394 +
push eax  +
lea ecx [ebp+var_70] +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+lpNewFileName] +
mov byte ptr [ebp+var_4] 2 +
call loc_402730  +
mov eax [ebp+var_5C] +
cmp eax 8 +
jb loc_41AF09  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
lea edx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
mov ecx esi +
call sub_41F920  +
lea edx [ebp+var_40] +
lea ecx [ebp+lpNewFileName] +
call loc_41F720  +
cmp [ebp+var_14] 8 +
lea eax [ebp+lpNewFileName] +
cmovnb eax [ebp+lpNewFileName] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_41AF95  +
cmp dword ptr [esi+10h] 0 +
jz loc_41AF95  +
cmp [ebp+var_18] 0 +
jz loc_41AF95  +
cmp [ebp+var_14] 8 +
lea eax [ebp+lpNewFileName] +
cmovnb eax [ebp+lpNewFileName] +
cmp dword ptr [esi+14h] 8 +
jb loc_41AF6C  +
mov esi [esi] +
push eax  +
push esi  +
call sub_460C2A  +
add esp 8 +
test eax eax +
jnz loc_41AF95  +
lea ecx [edi+98h] +
lea eax [ebp+lpNewFileName] +
cmp ecx eax +
jz loc_41AF91  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402610  +
mov bl 1 +
jmp loc_41AF97  +
xor bl bl +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_41AFAC  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+var_40] ax +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_41AFD5  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
mov ecx [ebp+var_14] +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
cmp ecx 8 +
jb loc_41AFFE  +
inc ecx  +
push ecx  +
push [ebp+lpNewFileName]  +
lea ecx [ebp+lpNewFileName] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
add eax 0FFFFFFF6h +
mov [ebp+var_4] 0 +
push esi  +
cmp eax 3Ch +
ja loc_41B0EA  +
movzx eax ds:byte_41B138[eax] +
jmp ds:off_41B118[eax*4]  +
mov ecx [ebp+arg_0] +
push offset aFatal  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aError  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aWarn  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aInfo  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aDebug  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aTrace  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_0] +
push offset aNone  +
call loc_401D00  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov esi [ebp+arg_0] +
xor eax eax +
push 3  +
push offset aAll  +
mov ecx esi +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_401E70  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp dword ptr [esi+60h] 8 +
push 0FFFFFFFFh  +
push offset loc_477CF8  +
mov eax large fs:0 +
push eax  +
mov eax 109Ch +
call sub_450CA0  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_14] +
mov edi [ebp+arg_18] +
mov [ebp+var_10A0] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_109C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_1098] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1094] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_108C] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_1090] eax +
mov eax [ebp+arg_0] +
cmp [esi+64h] eax +
jg loc_41B54F  +
mov eax [esi+90h] +
test eax eax +
jz loc_41B54F  +
mov eax [eax] +
test eax eax +
jz loc_41B54F  +
push 0EA60h  +
push eax  +
call ds:WaitForSingleObject  +
test eax eax +
jnz loc_41B54F  +
mov ecx [esi+0B8h] +
sub ecx [esi+0B0h] +
mov eax [esi+0BCh] +
sbb eax [esi+0B4h] +
js loc_41B2B0  +
jg loc_41B28C  +
cmp ecx 384h +
jb loc_41B2B0  +
push ecx  +
mov ecx esi +
call sub_41FC00  +
test al al +
jz loc_41B2B0  +
mov eax [esi+0B8h] +
mov [esi+0B0h] eax +
mov eax [esi+0BCh] +
mov [esi+0B4h] eax +
xor eax eax +
mov [ebp+var_105C] 7 +
mov [ebp+var_1060] 0 +
mov word ptr [ebp+var_1070] ax +
mov [ebp+var_4] eax +
mov [ebp+var_1044] 7 +
mov [ebp+var_1048] eax +
mov word ptr [ebp+var_1058] ax +
mov [ebp+var_102C] 7 +
mov [ebp+var_1030] eax +
mov word ptr [ebp+var_1040] ax +
mov [ebp+var_1074] 7 +
mov [ebp+var_1078] eax +
mov word ptr [ebp+var_1088] ax +
mov byte ptr [ebp+var_4] 3 +
test ebx ebx +
jz loc_41B34F  +
push ebx  +
lea ecx [ebp+MultiByteStr] +
call sub_403800  +
lea edx [ebp+var_1070] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+MultiByteStr] +
call sub_41F2B0  +
lea ecx [ebp+MultiByteStr] +
mov byte ptr [ebp+var_4] 3 +
call sub_4037C0  +
jmp loc_41B35F  +
push offset word_4873C8  +
lea ecx [ebp+var_1070] +
call sub_401C40  +
test edi edi +
jz loc_41B395  +
push edi  +
lea ecx [ebp+MultiByteStr] +
call sub_403800  +
lea edx [ebp+var_1058] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+MultiByteStr] +
call sub_41F2B0  +
lea ecx [ebp+MultiByteStr] +
mov byte ptr [ebp+var_4] 3 +
call sub_4037C0  +
jmp loc_41B3A5  +
push offset word_4873C8  +
lea ecx [ebp+var_1058] +
call sub_401C40  +
mov eax [ebp+var_1090] +
test eax eax +
jnz loc_41B3B7  +
mov eax [ebp+var_108C] +
jmp loc_41B3E6  +
push eax  +
push 0  +
push [ebp+var_108C]  +
lea eax [ebp+var_1010] +
push 0FFFFFFFFh  +
push 0FFFh  +
push eax  +
call sub_403870  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_45D6FC  +
add esp 20h +
lea eax [ebp+var_1010] +
push eax  +
lea ecx [ebp+MultiByteStr] +
call sub_403800  +
lea edx [ebp+var_1088] +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+MultiByteStr] +
call sub_41F2B0  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_1014] +
cmp eax 10h +
jb loc_41B429  +
inc eax  +
lea ecx [ebp+MultiByteStr] +
push eax  +
push dword ptr [ebp+MultiByteStr]  +
call loc_402500  +
cmp [ebp+var_1074] 8 +
lea edx [ebp+var_1088] +
lea ecx [ebp+var_1058] +
cmovnb edx [ebp+var_1088] +
lea edi [ebp+var_1040] +
cmp [ebp+var_1044] 8 +
lea eax [ebp+var_1070] +
push edi  +
cmovnb ecx [ebp+var_1058] +
cmp [ebp+var_105C] 8 +
push edx  +
cmovnb eax [ebp+var_1070] +
push ecx  +
push eax  +
push [ebp+var_1094]  +
mov ecx esi +
push [ebp+var_1098]  +
push [ebp+var_109C]  +
push [ebp+var_10A0]  +
push [ebp+arg_0]  +
push [ebp+arg_28]  +
push [ebp+arg_24]  +
call sub_4199F0  +
cmp dword ptr [esi+8Ch] 0 +
jnz loc_41B4F5  +
mov [ebp+var_1014] 0Fh +
mov [ebp+var_1018] 0 +
mov [ebp+MultiByteStr] 0 +
lea edx [ebp+MultiByteStr] +
mov byte ptr [ebp+var_4] 7 +
mov ecx edi +
call sub_41F200  +
cmp [ebp+var_1014] 10h +
lea ecx [ebp+MultiByteStr] +
mov eax [esi] +
cmovnb ecx dword ptr [ebp+MultiByteStr] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp+MultiByteStr] +
call sub_4037C0  +
jmp loc_41B511  +
cmp [ebp+var_102C] 8 +
lea ecx [ebp+var_1040] +
mov eax [esi] +
cmovnb ecx [ebp+var_1040] +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
mov eax [esi+90h] +
test eax eax +
jz loc_41B523  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
lea ecx [ebp+var_1088] +
call sub_401C90  +
lea ecx [ebp+var_1040] +
call sub_401C90  +
lea ecx [ebp+var_1058] +
call sub_401C90  +
lea ecx [ebp+var_1070] +
call sub_401C90  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 2Ch  +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_41B7B0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_477D4A  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41B5DA  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_41B5FE  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_41B5FE  +
cmp ecx esi +
jz loc_41B5FE  +
call sub_416D70  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_1C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41B6C1  +
lea eax [ebp+var_28] +
push eax  +
call sub_40AED0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_417340  +
add esp 4 +
mov ebx eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_24] +
test ecx ecx +
jz loc_41B652  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41B652  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 4 +
mov eax [esi] +
mov edx [ebx] +
mov ecx [eax+4] +
movzx eax word ptr [ecx+esi+40h] +
add ecx esi +
push eax  +
push ecx  +
mov byte ptr [ebp+var_30] 0 +
lea eax [ebp+var_30] +
push dword ptr [ecx+38h]  +
mov ecx ebx +
push [ebp+var_30]  +
push eax  +
call dword ptr [edx+20h]  +
cmp byte ptr [ebp+var_30] 0 +
mov eax 4 +
cmovnz edi eax +
jmp loc_41B6BA  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41B6A4  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_40AE00  +
mov eax offset loc_41B6B4 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_41B6E2  +
mov eax [ecx+0Ch] +
or eax edi +
cmp dword ptr [ecx+38h] 0 +
jnz loc_41B6DA  +
or eax 4 +
push 0  +
push eax  +
call loc_40AE00  +
mov [ebp+var_4] 6 +
call sub_44F130  +
test al al +
jnz loc_41B6F9  +
mov ecx esi +
call sub_416E40  +
mov byte ptr [ebp+var_4] 7 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41B70F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_41B7A2  +
mov eax [edi+10h] +
test eax eax +
jz loc_41B7A2  +
cmp eax 0FFFFFFFFh +
jbe loc_41B750  +
or eax 0FFFFFFFFh +
jmp loc_41B751  +
dec eax  +
cmp dword ptr [edi+14h] 8 +
jb loc_41B759  +
mov ecx [edi] +
lea esi [ecx+eax*2] +
or al 0 +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+24h+var_4] eax +
mov edx ecx +
mov [esp+24h+var_20] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_41B849  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_41B849  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call loc_401E70  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
lea eax [esp+30h+var_24] +
push eax  +
call sub_4020A0  +
mov ecx [esp+30h+var_10] +
cmp ecx 8 +
jb loc_41B8DD  +
inc ecx  +
push ecx  +
jmp loc_41B8D0  +
test cl 4 +
jnz loc_41B893  +
mov eax [edx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_41B893  +
mov eax [edx+2Ch] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edx+0Ch] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call loc_401E70  +
mov dword ptr [esi+10h] 0 +
jmp loc_41B8AD  +
xor eax eax +
mov [esp+28h+var_8] 7 +
mov [esp+28h+var_C] 0 +
mov word ptr [esp+28h+var_1C] ax +
mov [esi+10h] eax +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
mov ecx esi +
lea eax [esp+28h+var_1C] +
push eax  +
call sub_4020A0  +
mov eax [esp+28h+var_8] +
cmp eax 8 +
jb loc_41B8DD  +
inc eax  +
push eax  +
push [esp+2Ch+var_1C]  +
lea ecx [esp+30h+var_1C] +
call loc_4024A0  +
mov ecx [esp+30h+var_C] +
mov eax esi +
pop esi  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_475EB6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [edi] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx [ebp+10h] +
cmp eax [esi] +
jnz loc_41B967  +
cmp edx esi +
jnz loc_41B967  +
mov dword ptr [ebp-4] 0 +
push dword ptr [esi+4]  +
call loc_4061C0  +
mov ecx [edi] +
mov [ecx+4] ecx +
mov ecx [edi] +
mov [ecx] ecx +
mov ecx [edi] +
mov [ecx+8] ecx +
mov dword ptr [edi+4] 0 +
mov ecx [edi] +
mov ecx [ecx] +
mov [ebx] ecx +
jmp loc_41B9D1  +
cmp eax edx +
jz loc_41B9CF  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41B990  +
jmp loc_41B9B8  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41B9B8  +
cmp eax [edx+8] +
jnz loc_41B9B8  +
mov eax edx +
mov [ebp+0Ch] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_41B9A5  +
mov [ebp+0Ch] edx +
push ecx  +
lea eax [ebp-10h] +
mov ecx edi +
push eax  +
call loc_41B9F0  +
mov eax [ebp+0Ch] +
cmp eax [ebp+10h] +
jnz near ptr dword_41B970  +
mov [ebx] eax +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx ecx +
mov edx esi +
mov [ebp-8] eax +
mov [ebp-4] edx +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41BA4E  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BA2D  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BA4B  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41BA21  +
jmp loc_41BA4B  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BA49  +
cmp esi [eax+8] +
jnz loc_41BA49  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41BA36  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [edx] +
push edi  +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_41BA5C  +
mov edi [edx+8] +
jmp loc_41BA74  +
mov eax [edx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41BA69  +
mov edi ecx +
jmp loc_41BA74  +
mov edi [esi+8] +
cmp esi edx +
jnz loc_41BB03  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [edx+4] +
jnz loc_41BA80  +
mov [edi+4] edx +
mov eax [ebx] +
mov ecx [ebp-4] +
cmp [eax+4] ecx +
jnz loc_41BA8F  +
mov [eax+4] edi +
jmp loc_41BA9A  +
cmp [edx] ecx +
jnz loc_41BA97  +
mov [edx] edi +
jmp loc_41BA9A  +
mov [edx+8] edi +
mov esi [ebx] +
cmp [esi] ecx +
jnz loc_41BAC3  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41BAAA  +
mov ecx edx +
jmp loc_41BABE  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BABE  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41BAB4  +
mov [esi] ecx +
mov ecx [ebp-4] +
mov esi [ebx] +
cmp [esi+8] ecx +
jnz loc_41BB67  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_41BAE1  +
mov ecx edx +
mov [esi+8] ecx +
mov ecx [ebp-4] +
jmp loc_41BB67  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BAFB  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41BAF0  +
mov [esi+8] ecx +
mov ecx [ebp-4] +
jmp loc_41BB67  +
mov [ecx+4] esi +
mov eax [edx] +
mov [esi] eax +
cmp esi [edx+8] +
jnz loc_41BB16  +
mov ecx [ebp-4] +
mov edx esi +
jmp loc_41BB33  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_41BB22  +
mov [edi+4] edx +
mov ecx [ebp-4] +
mov [edx] edi +
mov eax [ecx+8] +
mov [esi+8] eax +
mov eax [ecx+8] +
mov [eax+4] esi +
mov eax [ebx] +
cmp [eax+4] ecx +
jnz loc_41BB3F  +
mov [eax+4] esi +
jmp loc_41BB4D  +
mov eax [ecx+4] +
cmp [eax] ecx +
jnz loc_41BB4A  +
mov [eax] esi +
jmp loc_41BB4D  +
mov [eax+8] esi +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov cl [esi+0Ch] +
mov al [eax+0Ch] +
mov [esi+0Ch] al +
mov eax [ebp-4] +
mov [eax+0Ch] cl +
mov ecx eax +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_41BDCF  +
mov eax [ebx] +
cmp edi [eax+4] +
jz loc_41BDCB  +
cmp byte ptr [edi+0Ch] 1 +
jnz loc_41BDC8  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_41BC42  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_41BBE0  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BBB8  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_41BBCA  +
mov [eax+4] ecx +
jmp loc_41BBD8  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_41BBD5  +
mov [eax] ecx +
jmp loc_41BBD8  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41BCAF  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41BBFF  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_41BCAB  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41BCDC  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BC29  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_41BCC4  +
mov [eax+4] esi +
jmp loc_41BCD3  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_41BC8C  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BC63  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_41BC75  +
mov [eax+4] ecx +
jmp loc_41BC84  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_41BC82  +
mov [eax+8] ecx +
jmp loc_41BC84  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_41BCAF  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41BD31  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41BD31  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [ebx] +
mov edi edx +
mov edx [edx+4] +
cmp edi [eax+4] +
jnz loc_41BB80  +
jmp loc_41BDC8  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_41BCD1  +
mov [eax+8] esi +
jmp loc_41BCD3  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BD00  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_41BD17  +
mov [eax+4] ecx +
mov [ecx] edx +
jmp loc_41BDC5  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_41BD27  +
mov [eax] ecx +
mov [ecx] edx +
jmp loc_41BDC5  +
mov [eax+8] ecx +
mov [ecx] edx +
jmp loc_41BDC5  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_41BD7E  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BD57  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_41BD69  +
mov [eax+4] esi +
jmp loc_41BD77  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_41BD74  +
mov [eax] esi +
jmp loc_41BD77  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41BDA1  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_41BDB3  +
mov [eax+4] ecx +
jmp loc_41BDC2  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_41BDC0  +
mov [eax+8] ecx +
jmp loc_41BDC2  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [ebp-4] +
mov byte ptr [edi+0Ch] 1 +
mov eax [ecx+24h] +
lea esi [ecx+10h] +
pop edi  +
cmp eax 8 +
jb loc_41BDE9  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov ecx [ebp-4] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41BDFF  +
mov esi [esi] +
xor eax eax +
push ecx  +
mov [esi] ax +
call sub_44FE87  +
mov ecx [ebx+4] +
add esp 4 +
test ecx ecx +
jz loc_41BE28  +
mov eax [ebp-8] +
dec ecx  +
mov [ebx+4] ecx +
mov ecx [ebp+0Ch] +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp-8] +
mov eax [ebp+0Ch] +
pop esi  +
pop ebx  +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
sub esp 8 +
mov dword ptr [ebp-8] 0 +
mov esi ecx +
mov [ebp-4] esi +
push edx  +
push ecx  +
mov ecx [ebp+8] +
call loc_41BF50  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_4020A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx edx +
mov [ebp+var_4] esi +
call loc_402730  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_4020A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [edx+14h] +
sub eax [edx+10h] +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] esi +
cmp [ecx+10h] eax +
jbe loc_41BF18  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax [edx+10h] +
jb loc_41BF18  +
sub esp 8 +
push edx  +
push ecx  +
call loc_41BF50  +
jmp loc_41BF24  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_402730  +
mov dword ptr [esi+14h] 7 +
xor ecx ecx +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_4020A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
or ebx 0FFFFFFFFh +
push esi  +
mov eax [eax+10h] +
mov esi ecx +
cmp eax 0FFFFFFFFh +
push edi  +
cmovb ebx eax +
or eax 0FFFFFFFFh +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax ebx +
jbe loc_41C081  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_41C078  +
cmp edi 7FFFFFFEh +
ja loc_41C08B  +
cmp [esi+14h] edi +
jnb loc_41BFB0  +
push ecx  +
push edi  +
mov ecx esi +
call sub_402A00  +
test edi edi +
jz loc_41C078  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41BFDB  +
mov edx [esi] +
jmp loc_41BFDD  +
test edi edi +
jnz loc_41BFA4  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_41BFCD  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 10h  +
***
mov edx esi +
cmp eax 8 +
jb loc_41BFE6  +
mov ecx [esi] +
jmp loc_41BFE8  +
mov ecx esi +
mov eax [esi+10h] +
test eax eax +
jz loc_41BFFF  +
add eax eax +
push eax  +
push edx  +
lea eax [ecx+ebx*2] +
push eax  +
call loc_450F90  +
add esp 0Ch +
mov ecx [ebp+0Ch] +
cmp esi ecx +
jnz loc_41C030  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41C012  +
mov edx [esi] +
jmp loc_41C014  +
mov edx esi +
cmp eax 8 +
jb loc_41C01D  +
mov ecx [esi] +
jmp loc_41C01F  +
mov ecx esi +
test ebx ebx +
jz loc_41C056  +
lea eax [ebx+ebx] +
push eax  +
push edx  +
push ecx  +
call loc_450F90  +
jmp loc_41C053  +
cmp dword ptr [ecx+14h] 8 +
jb loc_41C038  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 8 +
jb loc_41C042  +
mov edx [esi] +
jmp loc_41C044  +
mov edx esi +
test ebx ebx +
jz loc_41C056  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_41C070  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aStringTooLong  +
call sub_44EC5C  +
push offset aStringTooLong  +
call sub_44EC5C  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax 2AAAAAABh +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov ebx ecx +
mov esi edi +
sub esi ebx +
imul  esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 20h +
jle loc_41C17A  +
mov esi [ebp+arg_0] +
test esi esi +
jle loc_41C196  +
push [ebp+arg_4]  +
mov edx ebx +
lea ecx [esp+1Ch+var_8] +
push edi  +
call loc_41C1E0  +
mov eax esi +
add esp 8 +
cdq   +
sub eax edx +
mov ecx eax +
sar ecx 1 +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
mov eax 2AAAAAABh +
mov [ebp+arg_0] ecx +
mov ecx edi +
sub ecx [esp+18h+var_4] +
imul  ecx +
mov ecx [esp+18h+var_8] +
mov eax 2AAAAAABh +
push [ebp+arg_4]  +
sar edx 2 +
sub ecx ebx +
mov esi edx +
shr esi 1Fh +
add esi edx +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax esi +
mov esi [ebp+arg_0] +
push esi  +
jge loc_41C14A  +
mov edx [esp+20h+var_8] +
mov ecx ebx +
call sub_41C0A0  +
mov ebx [esp+20h+var_4] +
jmp loc_41C159  +
mov ecx [esp+20h+var_4] +
mov edx edi +
call sub_41C0A0  +
mov edi [esp+20h+var_8] +
mov ecx edi +
mov eax 2AAAAAABh +
sub ecx ebx +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 20h +
jg loc_41C0D1  +
cmp eax 2 +
jl loc_41C18F  +
push ecx  +
push [ebp+arg_4]  +
mov edx edi +
mov ecx ebx +
call sub_41C6E0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp eax 20h +
jle loc_41C17A  +
mov ecx edi +
mov eax 2AAAAAABh +
sub ecx ebx +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 2 +
jl loc_41C1C7  +
sub esp 8 +
mov edx edi +
mov ecx ebx +
push [ebp+arg_4]  +
call loc_41C5D0  +
add esp 0Ch +
push [ebp+arg_4]  +
mov edx edi +
mov ecx ebx +
call sub_41C680  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_477D9A  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp-24h] ebx +
mov [ebp-30h] ecx +
mov esi [ebp+8] +
mov ecx esi +
mov al [ebp+0Ch] +
sub ecx ebx +
mov [ebp-14h] al +
mov eax 2AAAAAABh +
imul  ecx +
push dword ptr [ebp-14h]  +
sar edx 2 +
mov ecx ebx +
mov eax edx +
mov [ebp-1Ch] esi +
shr eax 1Fh +
add eax edx +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [eax+eax*2] +
lea edi [ebx+eax*8] +
lea eax [esi-18h] +
mov edx edi +
push eax  +
call sub_41C510  +
add esp 8 +
lea ebx [edi+18h] +
mov [ebp-20h] ebx +
cmp [ebp-24h] edi +
jnb loc_41C28A  +
mov esi [ebp-24h] +
lea eax [edi-18h] +
push edi  +
mov ecx eax +
mov [ebp-14h] eax +
call sub_4067F0  +
test eax eax +
js loc_41C287  +
push dword ptr [ebp-14h]  +
mov ecx edi +
call sub_4067F0  +
test eax eax +
js loc_41C287  +
mov edi [ebp-14h] +
cmp esi edi +
jb loc_41C260  +
mov esi [ebp-1Ch] +
cmp ebx esi +
jnb loc_41C2B2  +
nop   +
push edi  +
mov ecx ebx +
call sub_4067F0  +
test eax eax +
js loc_41C2AF  +
push ebx  +
mov ecx edi +
call sub_4067F0  +
test eax eax +
js loc_41C2AF  +
add ebx 18h +
cmp ebx esi +
jb loc_41C290  +
mov [ebp-20h] ebx +
mov esi ebx +
mov edx edi +
mov [ebp-14h] esi +
mov [ebp-18h] edx +
mov eax [ebp-1Ch] +
nop   +
cmp esi eax +
jnb loc_41C334  +
lea eax [ebx-4] +
mov [ebp-14h] eax +
mov eax [ebp-24h] +
cmp edx eax +
jbe loc_41C3A8  +
mov ebx [ebp-18h] +
lea esi [ebx-4] +
lea ecx [esi-14h] +
push edi  +
call sub_4067F0  +
test eax eax +
js loc_41C388  +
lea eax [esi-14h] +
mov ecx edi +
push eax  +
call sub_4067F0  +
test eax eax +
js loc_41C397  +
sub edi 18h +
lea eax [esi-14h] +
cmp edi eax +
jz loc_41C388  +
lea eax [esi-14h] +
mov ecx edi +
push eax  +
call sub_403510  +
mov ecx [edi+10h] +
mov eax [esi-4] +
mov [edi+10h] eax +
mov [esi-4] ecx +
mov ecx [edi+14h] +
mov eax [esi] +
mov [edi+14h] eax +
mov [esi] ecx +
mov eax [ebp-24h] +
sub ebx 18h +
sub esi 18h +
cmp eax ebx +
jb loc_41C341  +
jmp loc_41C39A  +
mov eax [ebp-24h] +
mov esi [ebp-14h] +
mov [ebp-18h] ebx +
mov edx [ebp-18h] +
cmp edx eax +
mov ebx [ebp-20h] +
mov eax [ebp-1Ch] +
jnz loc_41C442  +
cmp esi eax +
jz loc_41C4E4  +
cmp ebx esi +
jz loc_41C3E7  +
cmp edi ebx +
jz loc_41C3E7  +
push ebx  +
mov ecx edi +
call sub_403510  +
mov ecx [edi+10h] +
mov eax [ebx+10h] +
mov edx [ebp-18h] +
mov [edi+10h] eax +
mov [ebx+10h] ecx +
mov eax [ebx+14h] +
mov ecx [edi+14h] +
mov [edi+14h] eax +
mov eax [ebp-1Ch] +
mov [ebx+14h] ecx +
add ebx 18h +
mov ecx esi +
mov [ebp-20h] ebx +
add esi 18h +
mov ebx edi +
mov [ebp-2Ch] ecx +
mov [ebp-28h] ebx +
add edi 18h +
mov [ebp-14h] esi +
cmp ebx ecx +
mov ebx [ebp-20h] +
jz loc_41C2C0  +
push ecx  +
mov ecx [ebp-28h] +
call sub_403510  +
mov edx [ebp-2Ch] +
mov eax [ebp-28h] +
mov ebx [ebp-28h] +
mov ecx [eax+10h] +
mov eax [edx+10h] +
mov [ebx+10h] eax +
mov eax ebx +
mov [edx+10h] ecx +
mov ecx [eax+14h] +
mov eax [edx+14h] +
mov [ebx+14h] eax +
mov ebx [ebp-20h] +
mov [edx+14h] ecx +
mov edx [ebp-18h] +
jmp loc_41C2BC  +
***
sub edx 18h +
mov [ebp-18h] edx +
cmp esi eax +
jnz loc_41C4AF  +
sub edi 18h +
cmp edx edi +
jz loc_41C479  +
push edi  +
mov ecx edx +
call sub_403510  +
mov edx [ebp-18h] +
mov eax [edi+10h] +
mov ecx [edx+10h] +
mov [edx+10h] eax +
mov [edi+10h] ecx +
mov eax [edi+14h] +
mov ecx [edx+14h] +
mov [edx+14h] eax +
mov eax [ebp-1Ch] +
mov [edi+14h] ecx +
sub ebx 18h +
mov [ebp-20h] ebx +
cmp edi ebx +
jz loc_41C2C0  +
push ebx  +
mov ecx edi +
call sub_403510  +
mov ecx [edi+10h] +
mov eax [ebx+10h] +
mov edx [ebp-18h] +
mov [edi+10h] eax +
mov [ebx+10h] ecx +
mov ecx [edi+14h] +
mov eax [ebx+14h] +
mov [edi+14h] eax +
mov [ebx+14h] ecx +
jmp loc_41C2BC  +
***
cmp esi edx +
jz loc_41C4D9  +
push edx  +
mov ecx esi +
call sub_403510  +
mov edx [ebp-18h] +
mov ecx [esi+10h] +
mov eax [edx+10h] +
mov [esi+10h] eax +
mov [edx+10h] ecx +
mov eax [edx+14h] +
mov ecx [esi+14h] +
mov [esi+14h] eax +
mov eax [ebp-1Ch] +
mov [edx+14h] ecx +
add esi 18h +
mov [ebp-14h] esi +
jmp loc_41C2C0  +
***
mov eax [ebp-30h] +
mov [eax] edi +
mov [eax+4] ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push ebx  +
push esi  +
mov ebx ecx +
mov eax 2AAAAAABh +
mov ecx [ebp+arg_0] +
mov esi ecx +
push edi  +
push [ebp+arg_4]  +
mov edi edx +
mov [ebp+var_8] ebx +
sub esi ebx +
mov [ebp+var_4] edi +
imul  esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 28h +
jle loc_41C5AF  +
mov esi [ebp+var_8] +
inc eax  +
cdq   +
mov ecx esi +
and edx 7 +
add eax edx +
sar eax 3 +
lea ebx [eax+eax*2] +
lea edi [eax+eax*2] +
shl ebx 4 +
shl edi 3 +
lea eax [ebx+esi] +
lea edx [edi+esi] +
push eax  +
call sub_41C8C0  +
mov edx [ebp+var_4] +
mov ecx edx +
push [ebp+arg_4]  +
sub ecx edi +
lea eax [edi+edx] +
push eax  +
call sub_41C8C0  +
mov eax [ebp+arg_0] +
mov esi eax +
push [ebp+arg_4]  +
sub esi edi +
push eax  +
sub eax ebx +
mov edx esi +
mov ecx eax +
call sub_41C8C0  +
mov ecx [ebp+var_8] +
push [ebp+arg_4]  +
mov edx [ebp+var_4] +
push esi  +
lea ecx [edi+ecx] +
call sub_41C8C0  +
add esp 20h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push ecx  +
mov edx edi +
mov ecx ebx +
call sub_41C8C0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-8] eax +
push ebx  +
mov ebx ecx +
mov eax 2AAAAAABh +
sub edx ebx +
imul  edx +
push esi  +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-24h] eax +
cdq   +
sub eax edx +
mov esi eax +
sar esi 1 +
push edi  +
test esi esi +
jle loc_41C660  +
lea eax [esi+esi*2] +
lea edi [ebx+eax*8] +
sub edi 18h +
mov dword ptr [ebp-0Ch] 7 +
xor eax eax +
mov dword ptr [ebp-10h] 0 +
push edi  +
lea ecx [ebp-20h] +
mov [ebp-20h] ax +
dec esi  +
call sub_4020A0  +
push dword ptr [ebp+8]  +
lea eax [ebp-20h] +
mov edx esi +
push eax  +
push dword ptr [ebp-24h]  +
mov ecx ebx +
call sub_41C990  +
mov eax [ebp-0Ch] +
add esp 0Ch +
cmp eax 8 +
jb loc_41C65C  +
inc eax  +
lea ecx [ebp-20h] +
push eax  +
push dword ptr [ebp-20h]  +
call loc_4024A0  +
test esi esi +
jg loc_41C610  +
mov ecx [ebp-8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov ebx ecx +
mov esi edi +
mov eax 2AAAAAABh +
sub esi ebx +
imul  esi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 2 +
jl loc_41C6D0  +
push ecx  +
push [ebp+arg_0]  +
mov edx edi +
mov ecx ebx +
call sub_41CBF0  +
sub esi 18h +
mov eax 2AAAAAABh +
imul  esi +
add esp 8 +
sub edi 18h +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 2 +
jge loc_41C6A4  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477DD2  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax edx +
mov [ebp+var_38] eax +
mov ebx ecx +
cmp ebx eax +
jz loc_41C899  +
lea edi [ebx+18h] +
mov [ebp+var_30] edi +
cmp edi eax +
jz loc_41C899  +
lea eax [edi-18h] +
mov [ebp+var_2C] eax +
nop   +
xor eax eax +
mov [ebp+var_14] 7 +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov esi edi +
mov word ptr [ebp+var_28] ax +
call sub_4020A0  +
push ebx  +
lea ecx [ebp+var_28] +
call sub_4067F0  +
test eax eax +
jns loc_41C7C3  +
mov esi [ebp+var_2C] +
mov edx edi +
mov byte ptr [ebp+var_34] 0 +
mov ecx ebx +
push [ebp+var_34]  +
lea eax [esi+30h] +
push eax  +
call sub_41CCE0  +
add esp 8 +
lea eax [ebp+var_28] +
cmp ebx eax +
jz loc_41C86F  +
mov eax [ebx+14h] +
cmp eax 8 +
jb loc_41C794  +
inc eax  +
mov ecx ebx +
push eax  +
push dword ptr [ebx]  +
call loc_4024A0  +
mov dword ptr [ebx+14h] 7 +
mov dword ptr [ebx+10h] 0 +
cmp dword ptr [ebx+14h] 8 +
jb loc_41C7AC  +
mov eax [ebx] +
jmp loc_41C7AE  +
mov eax ebx +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+var_28] +
push eax  +
mov ecx ebx +
call sub_4020A0  +
jmp loc_41C86F  +
mov eax [ebp+var_2C] +
lea ecx [ebp+var_28] +
push eax  +
mov edi eax +
call sub_4067F0  +
test eax eax +
jns loc_41C825  +
cmp esi edi +
jz loc_41C813  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41C7EC  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41C804  +
mov eax [esi] +
jmp loc_41C806  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
mov esi edi +
lea ecx [ebp+var_28] +
sub edi 18h +
push edi  +
call sub_4067F0  +
test eax eax +
js loc_41C7D5  +
lea eax [ebp+var_28] +
cmp esi eax +
jz loc_41C869  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41C83F  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41C857  +
mov eax [esi] +
jmp loc_41C859  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+var_28] +
push eax  +
mov ecx esi +
call sub_4020A0  +
mov esi [ebp+var_2C] +
mov edi [ebp+var_30] +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_41C884  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
add edi 18h +
add esi 18h +
mov [ebp+var_30] edi +
mov [ebp+var_2C] esi +
cmp edi [ebp+var_38] +
jnz loc_41C730  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477E12  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
mov ebx [ebp+arg_0] +
mov ecx esi +
push edi  +
call sub_4067F0  +
test eax eax +
jns loc_41C91D  +
cmp esi edi +
jz loc_41C91D  +
push edi  +
mov ecx esi +
call sub_403510  +
mov ecx [esi+10h] +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov [edi+10h] ecx +
mov ecx [esi+14h] +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov [edi+14h] ecx +
push esi  +
mov ecx ebx +
call sub_4067F0  +
test eax eax +
jns loc_41C97D  +
cmp ebx esi +
jz loc_41C94D  +
push esi  +
mov ecx ebx +
call sub_403510  +
mov ecx [ebx+10h] +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov [esi+10h] ecx +
mov ecx [ebx+14h] +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov [esi+14h] ecx +
push edi  +
mov ecx esi +
call sub_4067F0  +
test eax eax +
jns loc_41C97D  +
cmp esi edi +
jz loc_41C97D  +
push edi  +
mov ecx esi +
call sub_403510  +
mov ecx [esi+10h] +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov [edi+10h] ecx +
mov ecx [esi+14h] +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov [edi+14h] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477E3C  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_4] +
lea edi ds:2[esi*2] +
mov ebx [ebp+arg_0] +
mov [ebp+var_20] eax +
mov al [ebp+arg_8] +
mov [ebp+var_1C] ebx +
mov byte ptr [ebp+var_14] al +
mov [ebp+var_24] esi +
cmp edi ebx +
jge loc_41CA54  +
lea eax [edi+edi*2] +
lea ecx [ecx+eax*8] +
lea eax [ecx-18h] +
push eax  +
call sub_4067F0  +
test eax eax +
jns loc_41C9F4  +
dec edi  +
mov ecx [ebp+var_18] +
lea eax [edi+edi*2] +
lea ebx [ecx+eax*8] +
lea eax [esi+esi*2] +
lea esi [ecx+eax*8] +
cmp esi ebx +
jz loc_41CA44  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CA1A  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CA32  +
mov eax [esi] +
jmp loc_41CA34  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push ebx  +
call sub_4020A0  +
mov ecx [ebp+var_18] +
mov ebx [ebp+var_1C] +
mov esi edi +
lea edi ds:2[edi*2] +
cmp edi ebx +
jl loc_41C9E0  +
jnz loc_41CAA9  +
lea eax [ebx-1] +
lea eax [eax+eax*2] +
lea edi [ecx+eax*8] +
lea eax [esi+esi*2] +
lea esi [ecx+eax*8] +
cmp esi edi +
jz loc_41CAA6  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CA7C  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CA94  +
mov eax [esi] +
jmp loc_41CA96  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
mov ecx [ebp+var_18] +
lea esi [ebx-1] +
push [ebp+var_14]  +
mov edx esi +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_41CAE0  +
add esp 0Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477E7C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov [ebp+var_10] ecx +
mov ebx [ebp+arg_4] +
lea eax [esi-1] +
cdq   +
sub eax edx +
mov [ebp+var_14] ebx +
mov edi eax +
sar edi 1 +
cmp [ebp+arg_0] esi +
jge loc_41CB97  +
push [ebp+var_14]  +
lea eax [edi+edi*2] +
lea ebx [ecx+eax*8] +
mov ecx ebx +
call sub_4067F0  +
test eax eax +
jns loc_41CB91  +
mov ecx [ebp+var_10] +
lea eax [esi+esi*2] +
lea esi [ecx+eax*8] +
cmp esi ebx +
jz loc_41CB80  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CB56  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CB6E  +
mov eax [esi] +
jmp loc_41CB70  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push ebx  +
call sub_4020A0  +
mov ecx [ebp+var_10] +
lea eax [edi-1] +
mov esi edi +
cdq   +
sub eax edx +
mov edi eax +
sar edi 1 +
cmp [ebp+arg_0] esi +
jl loc_41CB22  +
mov ecx [ebp+var_10] +
mov ebx [ebp+var_14] +
lea eax [esi+esi*2] +
lea esi [ecx+eax*8] +
cmp esi ebx +
jz loc_41CBDB  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CBB4  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CBCC  +
mov eax [esi] +
jmp loc_41CBCE  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push ebx  +
call sub_4020A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477EA6  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
lea esi [ebx-18h] +
mov [ebp+var_14] 7 +
xor eax eax +
mov [ebp+var_18] 0 +
push esi  +
lea ecx [ebp+var_28] +
mov word ptr [ebp+var_28] ax +
call sub_4020A0  +
cmp esi edi +
jz loc_41CC7D  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CC56  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CC6E  +
mov eax [esi] +
jmp loc_41CC70  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
push [ebp+arg_0]  +
lea eax [ebp+var_28] +
sub ebx edi +
push eax  +
sub ebx 18h +
mov eax 2AAAAAABh +
imul  ebx +
mov ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
xor edx edx +
push eax  +
call sub_41C990  +
mov eax [ebp+var_14] +
add esp 0Ch +
cmp eax 8 +
jb loc_41CCBC  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477ED6  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov ebx ecx +
cmp ebx edi +
jz loc_41CD6C  +
mov esi [ebp+arg_0] +
sub esi 18h +
sub edi 18h +
cmp esi edi +
jz loc_41CD54  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CD2D  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CD45  +
mov eax [esi] +
jmp loc_41CD47  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
cmp edi ebx +
jnz loc_41CD10  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477F2C  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea eax [esi+4] +
mov dword ptr [esi] offset off_48F800 +
mov dword ptr [eax+14h] 7 +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 8 +
jb loc_41CDD8  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+1Ch] +
mov [ebp+var_4] ecx +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_41CDF5  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+34h] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_41CE0F  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+4Ch] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_41CE29  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_41CF70  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41CE80  +
test [ebp+arg_0] 1 +
jz loc_41CE6F  +
push 90h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
lea eax [edi+74h] +
mov dword ptr [edi] offset off_48F800 +
push eax  +
mov dword ptr [edi+70h] 0 +
call ds:DeleteCriticalSection  +
mov eax [edi+60h] +
lea esi [edi+4Ch] +
cmp eax 8 +
jb loc_41CEB1  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CEC7  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+34h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CEE2  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CEF8  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+1Ch] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41CF13  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41CF29  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov eax [edi+18h] +
cmp eax 8 +
jb loc_41CF43  +
inc eax  +
lea ecx [edi+4] +
push eax  +
push dword ptr [edi+4]  +
call loc_4024A0  +
mov dword ptr [edi+18h] 7 +
mov dword ptr [edi+14h] 0 +
cmp dword ptr [edi+18h] 8 +
jb loc_41CF62  +
mov eax [edi+4] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [edi+4] ax +
pop edi  +
pop esi  +
retn   +
***
push 3  +
push offset asc_48F774  +
lea ecx [esi+1Ch] +
call loc_401E70  +
push 8  +
push offset aOobe_log  +
lea ecx [esi+34h] +
call loc_401E70  +
push 0  +
push offset word_4873C8  +
lea ecx [esi+4Ch] +
call loc_401E70  +
push 1Eh  +
mov ecx esi +
mov byte ptr [esi+6Ch] 1 +
call sub_41CFE0  +
lea eax [esi+74h] +
mov dword ptr [esi+70h] 0 +
push eax  +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+8Ch] 1 +
mov byte ptr [esi+6Dh] 0 +
call ds:InitializeCriticalSection  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_477F92  +
mov eax large fs:0 +
push eax  +
sub esp 258h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
xor eax eax +
mov [esi+64h] edi +
mov [ebp+var_220] 7 +
mov [ebp+var_224] 0 +
mov word ptr [ebp+pszPath] ax +
mov [ebp+var_4] eax +
lea eax [ebp+Buffer] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_41D2CF  +
cmp [ebp+Buffer] 0 +
jnz loc_41D05E  +
xor ecx ecx +
jmp loc_41D076  +
lea ecx [ebp+Buffer] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41D067  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Buffer] +
push eax  +
lea ecx [ebp+pszPath] +
call loc_401E70  +
xor ecx ecx +
mov [ebp+var_238] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [esi+34h] +
mov word ptr [ebp+var_24C] cx +
push eax  +
lea ecx [ebp+var_24C] +
mov [ebp+var_23C] 0 +
call loc_402610  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_264] +
push 6  +
xor eax eax +
mov [ebp+var_250] 7 +
push offset a_trace  +
mov [ebp+var_254] 0 +
mov word ptr [ebp+var_264] ax +
call loc_401E70  +
lea edx [ebp+var_264] +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_24C] +
call loc_41F7D0  +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
mov ecx [ebp+var_250] +
cmp ecx 8 +
jb loc_41D124  +
inc ecx  +
push ecx  +
push [ebp+var_264]  +
lea ecx [ebp+var_264] +
call loc_4024A0  +
test bl bl +
jz loc_41D294  +
lea edx [ebp+var_24C] +
lea ecx [ebp+pszPath] +
call loc_41F5E0  +
test al al +
jz loc_41D294  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jnz loc_41D171  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_41D294  +
push offset a_debug  +
lea ecx [ebp+var_264] +
call loc_401D00  +
lea edx [ebp+var_264] +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+pszPath] +
call loc_41F7D0  +
lea ecx [ebp+var_264] +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
call sub_401C90  +
test bl bl +
jz loc_41D1CF  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
cmp eax 1 +
jz loc_41D288  +
lea ecx [ebp+pszPath] +
call sub_41F880  +
test al al +
jz loc_41D294  +
push offset aAsu_trace  +
lea ecx [ebp+var_264] +
call loc_401D00  +
lea edx [ebp+var_264] +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+pszPath] +
call loc_41F5E0  +
lea ecx [ebp+var_264] +
mov byte ptr [ebp+var_4] 1 +
mov bl al +
call sub_401C90  +
test bl bl +
jz loc_41D294  +
lea ecx [ebp+pszPath] +
call sub_41F5C0  +
test al al +
jz loc_41D234  +
mov dword ptr [esi+64h] 0Ah +
jmp loc_41D294  +
lea ecx [ebp+pszPath] +
call sub_41F880  +
test al al +
jz loc_41D294  +
push offset aAsu_debug  +
lea ecx [ebp+var_264] +
call loc_401D00  +
lea edx [ebp+var_264] +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+pszPath] +
call loc_41F5E0  +
lea ecx [ebp+var_264] +
mov bl al +
call sub_401C90  +
test bl bl +
jz loc_41D294  +
lea ecx [ebp+pszPath] +
call sub_41F5C0  +
test al al +
jz loc_41D294  +
cmp edi 14h +
jle loc_41D294  +
mov dword ptr [esi+64h] 14h +
mov eax [ebp+var_238] +
cmp eax 8 +
jb loc_41D2B2  +
inc eax  +
lea ecx [ebp+var_24C] +
push eax  +
push [ebp+var_24C]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_238] 7 +
mov [ebp+var_23C] 0 +
mov word ptr [ebp+var_24C] ax +
mov eax [ebp+var_220] +
cmp eax 8 +
jb loc_41D2ED  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_477FCB  +
mov eax large fs:0 +
push eax  +
sub esp 244h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea eax [ebp+Buffer] +
mov [ebp+hObject] 0 +
push eax  +
push 104h  +
call ds:GetTempPathW  +
test eax eax +
jz loc_41D396  +
cmp [ebp+Buffer] 0 +
jnz loc_41D36E  +
xor edx edx +
jmp loc_41D386  +
lea edx [ebp+Buffer] +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_41D377  +
sub edx ecx +
sar edx 1 +
push edx  +
lea eax [ebp+Buffer] +
lea ecx [esi+4Ch] +
push eax  +
call loc_401E70  +
push 11h  +
push offset aCreativecloudA  +
lea ecx [esi+4Ch] +
call loc_401F70  +
cmp dword ptr [esi+60h] 8 +
jb loc_41D3B0  +
mov edx [esi+4Ch] +
jmp loc_41D3B3  +
lea edx [esi+4Ch] +
xor eax eax +
mov [ebp+var_220] 7 +
mov [ebp+var_224] 0 +
mov word ptr [ebp+pszPath] ax +
cmp [edx] ax +
jnz loc_41D3D9  +
xor ecx ecx +
jmp loc_41D3EF  +
mov ecx edx +
lea ebx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41D3E0  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+pszPath] +
call loc_401E70  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathIsDirectoryW  +
test eax eax +
setnz al  +
test al al +
mov eax [ebp+var_220] +
setz bl  +
cmp eax 8 +
jb loc_41D43F  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_4024A0  +
test bl bl +
jz loc_41D49A  +
cmp dword ptr [esi+60h] 8 +
jb loc_41D44E  +
mov eax [esi+4Ch] +
jmp loc_41D451  +
lea eax [esi+4Ch] +
push eax  +
lea ecx [ebp+pszPath] +
call loc_401D00  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
push 0  +
cmovnb eax [ebp+pszPath] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov eax [ebp+var_220] +
cmp eax 8 +
jb loc_41D49A  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_4024A0  +
push 7  +
xor eax eax +
mov [ebp+var_220] 7 +
push offset aAcc_log  +
lea ecx [ebp+pszPath] +
mov [ebp+var_224] 0 +
mov word ptr [ebp+pszPath] ax +
call loc_401E70  +
cmp [ebp+var_220] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathIsFileSpecW  +
cmp eax 1 +
mov eax [ebp+var_220] +
setnz bl  +
cmp eax 8 +
jb loc_41D508  +
inc eax  +
lea ecx [ebp+pszPath] +
push eax  +
push [ebp+pszPath]  +
call loc_4024A0  +
test bl bl +
jz loc_41D517  +
mov byte ptr [esi+6Ch] 0 +
xor al al +
jmp loc_41D610  +
push 7  +
xor eax eax +
mov [ebp+var_238] 7 +
push offset aAcc_log  +
lea ecx [ebp+var_24C] +
mov [ebp+var_23C] 0 +
mov word ptr [ebp+var_24C] ax +
call loc_401E70  +
lea edx [ebp+var_24C] +
mov [ebp+var_4] 0 +
lea ecx [esi+4Ch] +
call loc_41F5E0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov bl al +
mov ecx [ebp+var_238] +
cmp ecx 8 +
jb loc_41D582  +
inc ecx  +
push ecx  +
push [ebp+var_24C]  +
lea ecx [ebp+var_24C] +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_238] 7 +
mov [ebp+var_23C] 0 +
mov word ptr [ebp+var_24C] ax +
test bl bl +
jnz loc_41D5AA  +
mov [esi+6Ch] al +
xor al al +
jmp loc_41D610  +
mov eax [esi+68h] +
lea ebx [esi+68h] +
test eax eax +
jz loc_41D5C1  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [ebx] 0 +
lea edx [esi+34h] +
mov [ebp+hObject] 0 +
lea ecx [esi+4Ch] +
call sub_41F9F0  +
cmp byte ptr [esi+6Dh] 0 +
mov eax [esi] +
mov eax [eax] +
jz loc_41D5EA  +
push ebx  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
jmp loc_41D60D  +
lea ecx [ebp+hObject] +
push ecx  +
mov ecx esi +
call eax  +
mov [esi+6Ch] al +
test al al +
jz loc_41D60D  +
mov eax [ebp+hObject] +
test eax eax +
jz loc_41D60D  +
push eax  +
call ds:CloseHandle  +
mov al [esi+6Ch] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478037  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_48F81C +
mov dword ptr [esi+1Ch] 7 +
mov dword ptr [esi+18h] 0 +
cmp dword ptr [esi+1Ch] 8 +
jb loc_41D67A  +
mov eax [esi+8] +
jmp loc_41D67D  +
lea eax [esi+8] +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_4] ecx +
mov dword ptr [esi+34h] 7 +
mov [esi+30h] ecx +
cmp dword ptr [esi+34h] 8 +
jb loc_41D69A  +
mov eax [esi+20h] +
jmp loc_41D69D  +
lea eax [esi+20h] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+38h] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_41D6B7  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea eax [esi+50h] +
mov dword ptr [eax+14h] 7 +
mov [eax+10h] ecx +
cmp dword ptr [eax+14h] 8 +
jb loc_41D6D1  +
mov eax [eax] +
xor ecx ecx +
mov [eax] cx +
lea ecx [esi+68h] +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_41D6F1  +
mov eax [ecx] +
jmp loc_41D6F3  +
mov eax ecx +
xor edx edx +
mov [eax] dx +
push 12h  +
push offset ServiceName  +
mov byte ptr [ebp+var_4] 4 +
call loc_401E70  +
push 0  +
push offset word_4873C8  +
lea ecx [esi+8] +
call loc_401E70  +
push 12h  +
push offset ServiceName  +
lea ecx [esi+20h] +
call loc_401E70  +
push 12h  +
push offset ServiceName  +
lea ecx [esi+38h] +
call loc_401E70  +
push 0  +
push offset word_4873C8  +
lea ecx [esi+50h] +
call loc_401E70  +
call sub_417A80  +
mov [esi+4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41D795  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset word_4873C8  +
push offset word_4873C8  +
push 0Ah  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41D7C5  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset word_4873C8  +
push offset word_4873C8  +
push 14h  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41D7F5  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset word_4873C8  +
push offset word_4873C8  +
push 1Eh  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41D82F  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset word_4873C8 +
cmovnz edx eax +
mov eax [ecx] +
push offset word_4873C8  +
push edx  +
push 28h  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41D86F  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset word_4873C8 +
cmovnz edx eax +
mov eax [ecx] +
push offset word_4873C8  +
push edx  +
push 32h  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41D8AF  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset word_4873C8 +
cmovnz edx eax +
mov eax [ecx] +
push offset word_4873C8  +
push edx  +
push 3Ch  +
call dword ptr [eax+3Ch]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_10] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_C] +
jz loc_41D8F7  +
push esi  +
test eax eax +
mov esi offset word_4873C8 +
mov edx esi +
cmovnz edx eax +
mov eax [ecx] +
test ebx ebx +
cmovnz esi ebx +
lea ebx [ebp+arg_14] +
push ebx  +
push [ebp+arg_10]  +
push esi  +
push edx  +
push [ebp+arg_4]  +
call dword ptr [eax+3Ch]  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_41D915  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_41D920  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_41D92B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_41D936  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_41D941  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call loc_417C80  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_41D9E1  +
test ebx ebx +
jz loc_41D9E1  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_41D999  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_41D9A4  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_41D9AF  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_41D9BA  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset word_4873C8  +
push offset word_4873C8  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 0Ah  +
push edi  +
call loc_417C80  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_41DA61  +
test ebx ebx +
jz loc_41DA61  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_41DA19  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_41DA24  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_41DA2F  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_41DA3A  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset word_4873C8  +
push offset word_4873C8  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 14h  +
push edi  +
call loc_417C80  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [esp+10h+var_4] ebx +
jz loc_41DAE1  +
test ebx ebx +
jz loc_41DAE1  +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
jb loc_41DA99  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_41DAA4  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_41DAAF  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_41DABA  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
lea ebx [ebp+arg_C] +
push ebx  +
push [ebp+arg_8]  +
mov ebx [esp+20h+var_4] +
push offset word_4873C8  +
push offset word_4873C8  +
push ebx  +
push eax  +
push edx  +
push esi  +
push 1Eh  +
push edi  +
call loc_417C80  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DB1D  +
test eax eax +
jz loc_41DB1D  +
test edx edx +
jz loc_41DB1D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 28h  +
call sub_41DB80  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DB4D  +
test eax eax +
jz loc_41DB4D  +
test edx edx +
jz loc_41DB4D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 32h  +
call sub_41DB80  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DB7D  +
test eax eax +
jz loc_41DB7D  +
test edx edx +
jz loc_41DB7D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 3Ch  +
call sub_41DB80  +
pop edi  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
cmp dword ptr [ecx+4Ch] 8 +
lea eax [ecx+38h] +
push esi  +
push edi  +
jb loc_41DB93  +
mov eax [eax] +
cmp dword ptr [ecx+34h] 8 +
lea edx [ecx+20h] +
jb loc_41DB9E  +
mov edx [edx] +
cmp dword ptr [ecx+1Ch] 8 +
lea esi [ecx+8] +
jb loc_41DBA9  +
mov esi [esi] +
cmp dword ptr [ecx+7Ch] 8 +
lea edi [ecx+68h] +
jb loc_41DBB4  +
mov edi [edi] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push offset word_4873C8  +
push [ebp+arg_4]  +
push [ebp+arg_C]  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_0]  +
push edi  +
call loc_417C80  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41DC05  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset unk_48741C  +
push offset unk_48741C  +
push 0Ah  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41DC35  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset unk_48741C  +
push offset unk_48741C  +
push 14h  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
test edx edx +
jz loc_41DC65  +
mov eax [ecx] +
push esi  +
lea esi [ebp+arg_8] +
push esi  +
push edx  +
push offset unk_48741C  +
push offset unk_48741C  +
push 1Eh  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41DC9F  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset unk_48741C +
cmovnz edx eax +
mov eax [ecx] +
push offset unk_48741C  +
push edx  +
push 28h  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41DCDF  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset unk_48741C +
cmovnz edx eax +
mov eax [ecx] +
push offset unk_48741C  +
push edx  +
push 32h  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_8] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
jz loc_41DD1F  +
push edi  +
lea edi [ebp+arg_C] +
test eax eax +
push edi  +
push [ebp+arg_8]  +
mov edx offset unk_48741C +
cmovnz edx eax +
mov eax [ecx] +
push offset unk_48741C  +
push edx  +
push 3Ch  +
call dword ptr [eax+38h]  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_41DD59  +
test eax eax +
jz loc_41DD59  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_48741C  +
push 0Ah  +
call loc_41DE50  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_41DD89  +
test eax eax +
jz loc_41DD89  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_48741C  +
push 14h  +
call loc_41DE50  +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
test edx edx +
jz loc_41DDB9  +
test eax eax +
jz loc_41DDB9  +
push esi  +
lea esi [ebp+arg_C] +
push esi  +
push edx  +
push eax  +
push ecx  +
push offset unk_48741C  +
push 1Eh  +
call loc_41DE50  +
pop esi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DDED  +
test eax eax +
jz loc_41DDED  +
test edx edx +
jz loc_41DDED  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 28h  +
call loc_41DE50  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DE1D  +
test eax eax +
jz loc_41DE1D  +
test edx edx +
jz loc_41DE1D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 32h  +
call loc_41DE50  +
pop edi  +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
jz loc_41DE4D  +
test eax eax +
jz loc_41DE4D  +
test edx edx +
jz loc_41DE4D  +
push edi  +
lea edi [ebp+arg_10] +
push edi  +
push [ebp+arg_C]  +
push eax  +
push ecx  +
push edx  +
push 3Ch  +
call loc_41DE50  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478070  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+0Ch] +
mov edx [ebp+14h] +
mov [ebp-34h] eax +
mov eax [ebp+18h] +
mov [ebp-30h] eax +
mov eax [ebp+1Ch] +
mov [ebp-2Ch] eax +
test edx edx +
jz loc_41DF78  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov [ebp-4] eax +
mov dword ptr [ebp-38h] 0Fh +
mov [ebp-3Ch] eax +
mov [ebp-4Ch] al +
cmp [edx] al +
jnz loc_41DEC6  +
xor ecx ecx +
jmp loc_41DED9  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41DED0  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp-4Ch] +
call loc_402170  +
lea edx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-4Ch] +
call sub_41F2B0  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp-38h] +
cmp eax 10h +
jb loc_41DF0B  +
inc eax  +
lea ecx [ebp-4Ch] +
push eax  +
push dword ptr [ebp-4Ch]  +
call loc_402500  +
cmp dword ptr [ebp-14h] 8 +
lea ebx [ebp-28h] +
lea esi [edi+38h] +
cmovnb ebx [ebp-28h] +
cmp dword ptr [esi+14h] 8 +
jb loc_41DF21  +
mov esi [esi] +
cmp dword ptr [edi+34h] 8 +
lea eax [edi+20h] +
jb loc_41DF2C  +
mov eax [eax] +
cmp dword ptr [edi+1Ch] 8 +
lea ecx [edi+8] +
jb loc_41DF37  +
mov ecx [ecx] +
cmp dword ptr [edi+7Ch] 8 +
lea edx [edi+68h] +
jb loc_41DF42  +
mov edx [edx] +
sub esp 8 +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push offset unk_48741C  +
push dword ptr [ebp-34h]  +
push ebx  +
push esi  +
push eax  +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx [edi+4] +
push edx  +
call loc_417D80  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_41DF78  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
cmp [ebp+arg_10] 0 +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_C] +
jz loc_41DFD7  +
push esi  +
test eax eax +
mov esi offset unk_48741C +
mov edx esi +
cmovnz edx eax +
mov eax [ecx] +
test ebx ebx +
cmovnz esi ebx +
lea ebx [ebp+arg_14] +
push ebx  +
push [ebp+arg_10]  +
push esi  +
push edx  +
push [ebp+arg_4]  +
call dword ptr [eax+38h]  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [ecx+64h] 8 +
lea eax [ecx+50h] +
push ebx  +
push esi  +
push edi  +
jb loc_41DFF5  +
mov eax [eax] +
cmp dword ptr [ecx+4Ch] 8 +
lea edx [ecx+38h] +
jb loc_41E000  +
mov edx [edx] +
cmp dword ptr [ecx+34h] 8 +
lea esi [ecx+20h] +
jb loc_41E00B  +
mov esi [esi] +
cmp dword ptr [ecx+1Ch] 8 +
lea edi [ecx+8] +
jb loc_41E016  +
mov edi [edi] +
cmp dword ptr [ecx+7Ch] 8 +
lea ebx [ecx+68h] +
jb loc_41E021  +
mov ebx [ebx] +
sub esp 8 +
mov ecx [ecx+4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push edx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
push ebx  +
call loc_417D80  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ecx  +
push edi  +
push 0  +
push 0  +
mov [ebp+var_4] ecx +
call ds:GetTempPathW  +
mov edi eax +
test edi edi +
jnz loc_41E06F  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
xor ecx ecx +
lea eax [edi+1] +
mov edx 2 +
mul  edx +
push esi  +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_45B31A  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41E0A7  +
push esi  +
push edi  +
call ds:GetTempPathW  +
push esi  +
test eax eax +
jnz loc_41E0AF  +
call sub_45B0EB  +
add esp 4 +
pop esi  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_4] +
call sub_401C40  +
push esi  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 104h  +
lea eax [ebp+pszPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_41E10F  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jz loc_41E0FE  +
cmp [ebp+pszPath] 0 +
jnz loc_41E12E  +
xor ecx ecx +
jmp loc_41E146  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41E137  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_401E70  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
push 2Bh  +
lea eax [ebp+szPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jnz loc_41E1AE  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
push offset aAdobe  +
lea eax [ebp+szPath] +
push 104h  +
push eax  +
call sub_460A39  +
add esp 0Ch +
cmp [ebp+szPath] 0 +
jnz loc_41E1D5  +
xor ecx ecx +
jmp loc_41E1EF  +
lea ecx [ebp+szPath] +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41E1E0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+szPath] +
mov ecx esi +
push eax  +
call loc_401E70  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 0  +
push 26h  +
lea eax [ebp+szPath] +
mov esi ecx +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jnz loc_41E24E  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+szPath] 0 +
jnz loc_41E25C  +
xor ecx ecx +
jmp loc_41E274  +
lea ecx [ebp+szPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41E265  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+szPath] +
mov ecx esi +
push eax  +
call loc_401E70  +
push 1Bh  +
push offset aAdobeAdobeCrea  +
mov ecx esi +
call loc_401F70  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebx+10h] +
test esi esi +
jnz loc_41E2C0  +
pop esi  +
xor al al +
pop ebx  +
retn   +
***
xor ecx ecx +
lea eax [esi+1] +
mov edx 2 +
mul  edx +
push edi  +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_45B31A  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41E3C4  +
cmp dword ptr [ebx+14h] 8 +
jb loc_41E2F1  +
mov eax [ebx] +
jmp loc_41E2F3  +
mov eax ebx +
push eax  +
lea eax [esi+1] +
push eax  +
push edi  +
call sub_45B087  +
lea eax [esi-1] +
add esp 0Ch +
cmp word ptr [edi+eax*2] 5Ch +
lea eax [edi+eax*2] +
jnz loc_41E33A  +
nop   +
xor ecx ecx +
mov [eax] cx +
mov eax edi +
lea edx [eax+2] +
jz loc_41E310  +
push edi  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_41E3CA  +
cmp dword_4A2910 eax +
jz loc_41E38B  +
call ds:GetLastError  +
push eax  +
push offset aFailedToRemove  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call dword_4A2910  +
add esp 1Ch +
push edi  +
call sub_44FE4F  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi dword_4A2914 +
test esi esi +
jz loc_41E3BB  +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push offset aFailedToRemove  +
push offset aFileutils  +
push offset word_4873C8  +
push 32h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 18h +
push edi  +
call sub_44FE4F  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
retn   +
***
push edi  +
mov ecx ebx +
call sub_401C40  +
push edi  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
sub esp 8 +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41E492  +
mov eax [esi+10h] +
test eax eax +
jz loc_41E492  +
add ecx 0Bh +
mov edx 2 +
add eax ecx +
xor ecx ecx +
mov [ebp+var_4] eax +
mul  edx +
push ebx  +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_45B31A  +
mov ebx eax +
add esp 4 +
mov [ebp+var_8] ebx +
test ebx ebx +
jnz loc_41E446  +
pop ebx  +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword ptr [edi+14h] 8 +
jb loc_41E450  +
mov eax [edi] +
jmp loc_41E452  +
mov eax edi +
push eax  +
push [ebp+var_4]  +
push ebx  +
call sub_45B087  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_41E467  +
mov esi [esi] +
push esi  +
push ebx  +
call ds:PathAppendW  +
mov esi [ebp+var_8] +
cmp eax 1 +
push esi  +
mov ecx edi +
setz bl  +
call sub_401C40  +
push esi  +
call sub_45B0EB  +
add esp 4 +
mov al bl +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
cmp dword ptr [esi+14h] 8 +
jb loc_41E4B0  +
mov eax [esi] +
jmp loc_41E4B2  +
mov eax esi +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41E4D8  +
cmp dword ptr [esi+14h] 8 +
jb loc_41E4C5  +
mov esi [esi] +
push esi  +
call ds:PathIsDirectoryW  +
test eax eax +
setnz al  +
mov [edi] al +
mov al 1 +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor al al +
pop esi  +
retn   +
***
cmp dword ptr [esi+14h] 8 +
jb loc_41E4ED  +
mov eax [esi] +
jmp loc_41E4EF  +
mov eax esi +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41E510  +
cmp dword ptr [esi+14h] 8 +
jb loc_41E502  +
mov esi [esi] +
push esi  +
call ds:PathIsDirectoryW  +
test eax eax +
pop esi  +
setnz al  +
retn   +
cmp dword ptr [esi+14h] 8 +
jb loc_41E518  +
mov esi [esi] +
push 0  +
push esi  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov esi eax +
test esi esi +
jz loc_41E581  +
mov eax dword_4A2910 +
test eax eax +
jz loc_41E55C  +
push esi  +
push offset off_48F920  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call eax  +
add esp 1Ch +
xor eax eax +
test esi esi +
setz al  +
pop esi  +
retn   +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41E581  +
mov eax [ecx] +
push esi  +
push offset off_48F920  +
push offset aFileutils  +
push offset word_4873C8  +
push 32h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 18h +
xor eax eax +
test esi esi +
pop esi  +
setz al  +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+14h] 8 +
jb loc_41E5A1  +
mov eax [edi] +
jmp loc_41E5A3  +
mov eax edi +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41E741  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E5BC  +
mov eax [edi] +
jmp loc_41E5BE  +
mov eax edi +
push eax  +
call ds:PathIsDirectoryW  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E5CF  +
mov eax [edi] +
jmp loc_41E5D1  +
mov eax edi +
push ebx  +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
test bl bl +
jnz loc_41E739  +
push esi  +
mov esi ds:GetLastError +
call esi  +
cmp eax 5 +
jnz loc_41E6BD  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E603  +
mov eax [edi] +
jmp loc_41E605  +
mov eax edi +
push eax  +
call ds:GetFileAttributesW  +
mov edx eax +
mov [ebp+var_4] edx +
test dl 1 +
jz loc_41E6BD  +
mov ecx dword_4A2910 +
test ecx ecx +
jz loc_41E654  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E62E  +
mov eax [edi] +
jmp loc_41E630  +
mov eax edi +
push edx  +
push eax  +
push offset aFileSIsWithRea  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 14h  +
call ecx  +
add esp 20h +
jmp loc_41E688  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41E688  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E668  +
mov edx [edi] +
jmp loc_41E66A  +
mov edx edi +
push [ebp+var_4]  +
mov eax [ecx] +
push edx  +
push offset aFileSIsWithRea  +
push offset aFileutils  +
push offset word_4873C8  +
push 14h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 1Ch +
cmp dword ptr [edi+14h] 8 +
jb loc_41E692  +
mov eax [edi] +
jmp loc_41E694  +
mov eax edi +
push 80h  +
push eax  +
call ds:SetFileAttributesW  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E6AA  +
mov eax [edi] +
jmp loc_41E6AC  +
mov eax edi +
push eax  +
call ds:DeleteFileW  +
cmp eax 1 +
setz bl  +
test bl bl +
jnz loc_41E738  +
cmp dword_4A2910 0 +
jz loc_41E6FF  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E6CE  +
mov edi [edi] +
call esi  +
push eax  +
push edi  +
push offset aFailedToDelete  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call dword_4A2910  +
add esp 20h +
mov al bl +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
mov esi dword_4A2914 +
test esi esi +
jz loc_41E738  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E711  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push edi  +
push offset aFailedToDelete  +
push offset aFileutils  +
push offset word_4873C8  +
push 32h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 1Ch +
pop esi  +
mov al bl +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4780A8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_41E789  +
mov eax [esi] +
jmp loc_41E78B  +
mov eax esi +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_41E7F1  +
mov eax dword_4A2910 +
test eax eax +
jz loc_41E7C6  +
push offset aSourceFileDoes  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call eax  +
add esp 18h +
xor al al +
jmp loc_41E8F8  +
mov ecx dword_4A2914 +
test ecx ecx +
jz loc_41E7EA  +
mov eax [ecx] +
push offset aSourceFileDoes  +
push offset aFileutils  +
push offset word_4873C8  +
push 32h  +
push ecx  +
call dword ptr [eax+34h]  +
add esp 14h +
xor al al +
jmp loc_41E8F8  +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
push edi  +
lea ecx [ebp+pszPath] +
mov [ebp+var_18] 0 +
mov [ebp+pszPath] ax +
call loc_402610  +
lea ecx [ebp+pszPath] +
mov [ebp+var_4] 0 +
call loc_41E2B0  +
push ecx  +
lea ecx [ebp+pszPath] +
call sub_41E4E0  +
add esp 4 +
cmp dword ptr [edi+14h] 8 +
jb loc_41E836  +
mov eax [edi] +
jmp loc_41E838  +
mov eax edi +
cmp dword ptr [esi+14h] 8 +
jb loc_41E840  +
mov esi [esi] +
push 0  +
push eax  +
push esi  +
call ds:CopyFileW  +
test eax eax +
jnz loc_41E8CB  +
cmp dword_4A2910 eax +
jz loc_41E88E  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E85E  +
mov edi [edi] +
call ds:GetLastError  +
push eax  +
push edi  +
push offset aFailedToCopyFi  +
push offset word_4873C8  +
push offset word_4873C8  +
push offset aFileutils  +
push offset aOobeutils  +
push 32h  +
call dword_4A2910  +
add esp 20h +
xor bl bl +
jmp loc_41E8E1  +
mov esi dword_4A2914 +
test esi esi +
jz loc_41E8C7  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E8A0  +
mov edi [edi] +
mov esi [esi] +
call ds:GetLastError  +
push eax  +
push edi  +
push offset aFailedToCopyFi  +
push offset aFileutils  +
push offset word_4873C8  +
push 32h  +
push dword_4A2914  +
call dword ptr [esi+34h]  +
add esp 1Ch +
xor bl bl +
jmp loc_41E8E1  +
cmp dword ptr [edi+14h] 8 +
jb loc_41E8D3  +
mov edi [edi] +
push 80h  +
push edi  +
call ds:SetFileAttributesW  +
mov bl 1 +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_41E8F6  +
inc ecx  +
push ecx  +
push dword ptr [ebp+pszPath]  +
lea ecx [ebp+pszPath] +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4780D8  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-84h] edx +
cmp dword ptr [ecx+14h] 8 +
xorps xmm0 xmm0 +
movups oword ptr [ebp-48h] xmm0 +
mov dword ptr [ebp-48h] 10h +
jb loc_41E966  +
mov ecx [ecx] +
push 30h  +
lea eax [ebp-78h] +
mov [ebp-44h] ecx +
push 0  +
push eax  +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebp-3Ch] 0 +
mov dword ptr [ebp-20h] 0AAC56Bh +
mov dword ptr [ebp-1Ch] 11D0CD44h +
mov dword ptr [ebp-18h] 0C000C28Ch +
mov dword ptr [ebp-14h] 0EE95C24Fh +
call sub_453150  +
add esp 0Ch +
mov dword ptr [ebp-78h] 30h +
lea eax [ebp-48h] +
mov dword ptr [ebp-74h] 0 +
mov [ebp-60h] eax +
lea eax [ebp-78h] +
mov dword ptr [ebp-70h] 0 +
push eax  +
lea eax [ebp-20h] +
mov dword ptr [ebp-6Ch] 2 +
push eax  +
push 0FFFFFFFFh  +
mov dword ptr [ebp-68h] 0 +
mov dword ptr [ebp-64h] 1 +
mov dword ptr [ebp-5Ch] 1 +
mov dword ptr [ebp-58h] 0 +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-50h] 100h +
mov dword ptr [ebp-4Ch] 0 +
call ds:WinVerifyTrust  +
test eax eax +
jnz loc_41EB3F  +
push dword ptr [ebp-58h]  +
call ds:WTHelperProvDataFromStateData  +
test eax eax +
jz loc_41EB3F  +
push 0  +
push 0  +
push 0  +
push eax  +
call ds:WTHelperGetProvSignerFromChain  +
mov [ebp-88h] eax +
test eax eax +
jz loc_41EB3F  +
xor esi esi +
mov [ebp-7Ch] esi +
cmp [eax+0Ch] esi +
jbe loc_41EB3F  +
push esi  +
push eax  +
call ds:WTHelperGetProvCertFromChain  +
test eax eax +
jz loc_41EB2C  +
xor ecx ecx +
mov dword ptr [ebp-24h] 7 +
mov dword ptr [ebp-28h] 0 +
mov [ebp-38h] cx +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
mov [ebp-4] ecx +
mov eax [eax+4] +
push 4  +
push eax  +
mov [ebp-80h] eax +
call ds:CertGetNameStringW  +
mov edi eax +
cmp edi 1 +
jbe loc_41EAE3  +
lea ecx [edi+edi] +
push ecx  +
push 0  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_41EAE0  +
push edi  +
push esi  +
push 0  +
push 0  +
push 4  +
push dword ptr [ebp-80h]  +
call ds:CertGetNameStringW  +
cmp word ptr [esi] 0 +
jnz loc_41EAB6  +
xor ecx ecx +
jmp loc_41EACF  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41EAC0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-38h] +
call loc_401E70  +
push esi  +
call ds:LocalFree  +
mov esi [ebp-7Ch] +
cmp dword ptr [ebp-28h] 0 +
jbe loc_41EB10  +
mov edi [ebp-84h] +
cmp dword ptr [edi+10h] 0 +
jbe loc_41EB01  +
push offset asc_48FB90  +
mov ecx edi +
call sub_403040  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-38h] +
mov ecx edi +
push eax  +
call loc_402730  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-24h] +
cmp eax 8 +
jb loc_41EB2C  +
inc eax  +
lea ecx [ebp-38h] +
push eax  +
push dword ptr [ebp-38h]  +
call loc_4024A0  +
mov eax [ebp-88h] +
inc esi  +
mov [ebp-7Ch] esi +
cmp esi [eax+0Ch] +
jb loc_41EA48  +
lea eax [ebp-78h] +
mov dword ptr [ebp-6Ch] 2 +
push eax  +
lea eax [ebp-20h] +
mov dword ptr [ebp-5Ch] 2 +
push eax  +
push 0FFFFFFFFh  +
call ds:WinVerifyTrust  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+14h] +
push ebx  +
call ds:EnterCriticalSection  +
cmp dword ptr [esi+10h] 0 +
jnz loc_41EC1B  +
push ebx  +
call ds:LeaveCriticalSection  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
lea eax [ebp+var_C] +
mov ecx esi +
push eax  +
call sub_41F080  +
mov edx eax +
mov ecx [edx] +
test ecx ecx +
jnz loc_41EC32  +
xor eax eax +
jmp loc_41EC34  +
mov eax [ecx] +
mov ecx [eax+8] +
mov eax [eax+4] +
dec ecx  +
and ecx [edx+8] +
mov edx [ebp+arg_0] +
mov ecx [eax+ecx*4] +
movq xmm0 qword ptr [ecx] +
movq qword ptr [edx] xmm0 +
mov eax [ecx+8] +
add ecx 0Ch +
mov [edx+8] eax +
add edx 0Ch +
cmp edx ecx +
jz loc_41EC68  +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call loc_402610  +
mov ecx [esi+8] +
mov eax [esi+4] +
dec ecx  +
and ecx [esi+0Ch] +
push edi  +
mov edi [eax+ecx*4] +
mov eax [edi+20h] +
add edi 0Ch +
cmp eax 8 +
jb loc_41EC8C  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_4024A0  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_41ECA2  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
add dword ptr [esi+10h] 0FFFFFFFFh +
pop edi  +
jnz loc_41ECC2  +
push ebx  +
mov [esi+0Ch] eax +
call ds:LeaveCriticalSection  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
inc dword ptr [esi+0Ch]  +
push ebx  +
call ds:LeaveCriticalSection  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov esi ecx +
lea ebx [esi+14h] +
push ebx  +
call ds:EnterCriticalSection  +
cmp dword ptr [esi+10h] 0 +
jz loc_41ED47  +
push edi  +
mov ecx [esi+8] +
mov eax [esi+4] +
dec ecx  +
and ecx [esi+0Ch] +
mov edi [eax+ecx*4] +
mov eax [edi+20h] +
add edi 0Ch +
cmp eax 8 +
jb loc_41ED18  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_4024A0  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_41ED2E  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_41ED3E  +
mov [esi+0Ch] eax +
jmp loc_41ED41  +
inc dword ptr [esi+0Ch]  +
cmp [esi+10h] eax +
jnz loc_41ECF5  +
pop edi  +
push ebx  +
call ds:LeaveCriticalSection  +
pop esi  +
mov al 1 +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_41EDC3  +
mov eax [esi+0Ch] +
dec eax  +
add ecx eax +
mov eax [esi+8] +
dec eax  +
and ecx eax +
mov eax [esi+4] +
mov edi [eax+ecx*4] +
mov eax [edi+20h] +
add edi 0Ch +
cmp eax 8 +
jb loc_41ED98  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_4024A0  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_41EDAE  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_41EDBC  +
mov [esi+0Ch] eax +
mov ecx [esi+10h] +
test ecx ecx +
jnz loc_41ED70  +
mov edi [esi+8] +
test edi edi +
jz loc_41EDE8  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_41EE26  +
mov eax [esi+8] +
cmp eax 3FFFFFFFh +
ja loc_41EE37  +
shl eax 2 +
cmp eax 1000h +
jb loc_41EE1D  +
test cl 1Fh +
jnz loc_41EE3C  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_41EE41  +
sub ecx eax +
cmp ecx 4 +
jb loc_41EE46  +
cmp ecx 23h +
ja loc_41EE4B  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [esi+8] 0 +
pop edi  +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_478111  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi+10h] +
inc eax  +
cmp [esi+8] eax +
ja loc_41EE98  +
push ecx  +
call loc_41EF40  +
mov eax [esi+8] +
dec eax  +
and [esi+0Ch] eax +
mov eax [esi+10h] +
add eax [esi+0Ch] +
mov ecx [esi+8] +
dec ecx  +
and ecx eax +
mov eax [esi+4] +
lea edi ds:0[ecx*4] +
cmp dword ptr [edi+eax] 0 +
jnz loc_41EED6  +
push 24h  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_41EED0  +
call sub_45B2CA  +
mov eax [esi+4] +
mov [edi+eax] ecx +
mov eax [esi+4] +
mov edx [edi+eax] +
mov [ebp+var_10] edx +
mov [ebp+var_14] edx +
mov [ebp+var_4] 0 +
test edx edx +
jz loc_41EF20  +
mov ecx [ebp+arg_0] +
push 0FFFFFFFFh  +
movq xmm0 qword ptr [ecx] +
movq qword ptr [edx] xmm0 +
mov eax [ecx+8] +
mov [edx+8] eax +
lea eax [ecx+0Ch] +
lea ecx [edx+0Ch] +
xor edx edx +
mov dword ptr [ecx+14h] 7 +
push edx  +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ecx] dx +
call loc_402610  +
inc dword ptr [esi+10h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi 1 +
mov [ebp-8] edi +
mov ecx [edi+8] +
test ecx ecx +
cmovnz esi ecx +
mov eax esi +
sub eax ecx +
cmp eax 1 +
jb loc_41EF6E  +
cmp esi 8 +
jnb loc_41EF81  +
mov eax 71C71C7h +
sub eax esi +
cmp eax esi +
jb loc_41F073  +
add esi esi +
jmp loc_41EF60  +
***
mov ebx [edi+0Ch] +
sub esi ecx +
mov [ebp-4] ebx +
lea eax [ecx+esi] +
push eax  +
call loc_4186B0  +
mov ecx [edi+4] +
mov edi [edi+8] +
shl ebx 2 +
shl edi 2 +
mov [ebp-0Ch] eax +
lea edx [ecx+ebx] +
add ebx eax +
sub edi edx +
add edi ecx +
push edi  +
push edx  +
push ebx  +
call loc_450F90  +
add esp 0Ch +
lea edx [edi+ebx] +
mov [ebp-10h] edx +
cmp [ebp-4] esi +
ja loc_41F00A  +
mov ebx [ebp-8] +
mov eax [ebx+4] +
mov edi eax +
mov ebx [ebp-4] +
sub edi eax +
lea ecx ds:0[ebx*4] +
add edi ecx +
push edi  +
push eax  +
push edx  +
call loc_450F90  +
mov eax esi +
sub eax ebx +
shl eax 2 +
push eax  +
mov eax [ebp-10h] +
add eax edi +
push 0  +
push eax  +
call sub_453150  +
mov edi [ebp-0Ch] +
mov ecx ebx +
lea eax ds:0[ecx*4] +
push eax  +
push 0  +
push edi  +
call sub_453150  +
jmp loc_41F04E  +
mov edi [ebp-8] +
lea ebx ds:0[esi*4] +
push ebx  +
mov ecx [edi+4] +
push ecx  +
push edx  +
call loc_450F90  +
mov edi [edi+4] +
mov edx [ebp-4] +
lea eax [ebx+edi] +
sub edi eax +
lea ecx ds:0[edx*4] +
add edi ecx +
push edi  +
push eax  +
push dword ptr [ebp-0Ch]  +
call loc_450F90  +
mov eax [ebp-0Ch] +
push ebx  +
add eax edi +
push 0  +
push eax  +
call sub_453150  +
mov edi [ebp-0Ch] +
mov ebx [ebp-8] +
add esp 24h +
mov eax [ebx+4] +
test eax eax +
jz loc_41F064  +
push dword ptr [ebx+8]  +
push eax  +
call loc_40FC30  +
mov [ebx+4] edi +
add [ebx+8] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aDequeTTooLong  +
call sub_44EC5C  +
mov eax [ebp+arg_0] +
mov edx [ecx+0Ch] +
mov ecx [ecx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov [eax+8] edx +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_478189  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41F188  +
mov ecx [esi] +
xor edx edx +
mov [ecx] dx +
mov [ebp+var_4] edx +
cmp dword ptr [eax+14h] 10h +
mov [ebp+var_10] 1 +
jb loc_41F19F  +
mov eax [eax] +
push ecx  +
mov edx esi +
mov ecx eax +
call loc_414490  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov dword ptr [esi] offset off_47C35C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] edx +
push edi  +
cmp dword ptr [esi+14h] 8 +
jb loc_41F217  +
mov eax [esi] +
jmp loc_41F219  +
mov eax esi +
push 0  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
inc eax  +
push eax  +
mov [ebp+cchMultiByte] eax +
call sub_44FE9A  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 8 +
jb loc_41F248  +
mov esi [esi] +
push 0  +
push 0  +
push [ebp+cchMultiByte]  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
test eax eax +
jg loc_41F275  +
push edi  +
call sub_44FE4F  +
add esp 4 +
xor al al +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp byte ptr [edi] 0 +
jnz loc_41F27E  +
xor ecx ecx +
jmp loc_41F28C  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41F283  +
sub ecx edx +
push ecx  +
mov ecx [ebp+var_8] +
push edi  +
call loc_402170  +
push edi  +
call sub_44FE4F  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] edx +
push edi  +
cmp dword ptr [esi+14h] 10h +
jb loc_41F2C6  +
mov eax [esi] +
jmp loc_41F2C8  +
mov eax esi +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov ebx eax +
xor ecx ecx +
mov edx 2 +
lea eax [ebx+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_45B31A  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41F327  +
cmp dword ptr [esi+14h] 10h +
jb loc_41F308  +
mov esi [esi] +
push ebx  +
push edi  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jg loc_41F330  +
push edi  +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov [edi+ebx*2] ax +
cmp [edi] ax +
jnz loc_41F33F  +
xor ecx ecx +
jmp loc_41F353  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F344  +
sub ecx edx +
sar ecx 1 +
push ecx  +
mov ecx [ebp+var_4] +
push edi  +
call loc_401E70  +
push edi  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 448h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+444h] eax +
push esi  +
push edi  +
lea eax [esp+10h] +
mov esi edx +
push eax  +
mov edi ecx +
call ds:GetLocalTime  +
movaps xmm0 oword ptr [esp+10h] +
lea eax [esp+28h] +
push eax  +
lea eax [esp+34h] +
movaps oword ptr [esp+34h] xmm0 +
push eax  +
call ds:SystemTimeToFileTime  +
imul eax esi +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
divsd xmm0 ds:qword_491630 +
movsd qword ptr [esp+8] xmm0 +
call sub_474B30  +
addsd xmm0 qword ptr [esp+8] +
call sub_474A10  +
mov [esp+28h] eax +
lea eax [esp+30h] +
push eax  +
lea eax [esp+2Ch] +
mov [esp+30h] edx +
push eax  +
call ds:FileTimeToSystemTime  +
movaps xmm0 oword ptr [esp+30h] +
lea eax [esp+248h] +
push 100h  +
push eax  +
push offset aYyyyMD  +
lea eax [esp+1Ch] +
movaps oword ptr [esp+1Ch] xmm0 +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+248h] +
push eax  +
push offset aS  +
lea eax [esp+50h] +
push 100h  +
push eax  +
call sub_418F30  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_41F469  +
xor al al +
pop edi  +
pop esi  +
mov ecx [esp+444h] +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp word ptr [esp+48h] 0 +
jnz loc_41F475  +
xor ecx ecx +
jmp loc_41F48F  +
lea ecx [esp+48h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F480  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [esp+4Ch] +
mov ecx edi +
push eax  +
call loc_401E70  +
mov ecx [esp+44Ch] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 61Ch +
mov eax dword_49E070 +
xor eax esp +
mov [esp+61Ch+var_4] eax +
push esi  +
lea eax [esp+620h+Date] +
mov esi ecx +
push eax  +
call ds:GetLocalTime  +
push 100h  +
lea eax [esp+624h+TimeStr] +
push eax  +
push offset Format  +
lea eax [esp+62Ch+Date] +
push eax  +
push 8  +
push 400h  +
call ds:GetTimeFormatW  +
push 100h  +
lea eax [esp+624h+DateStr] +
push eax  +
push offset aYyyyMD  +
lea eax [esp+62Ch+Date] +
push eax  +
push 0  +
push 400h  +
call ds:GetDateFormatW  +
lea eax [esp+620h+TimeStr] +
push eax  +
lea eax [esp+624h+DateStr] +
push eax  +
push offset aSS  +
lea eax [esp+62Ch+var_608] +
push 100h  +
push eax  +
call sub_418F30  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_41F571  +
xor al al +
pop esi  +
mov ecx [esp+61Ch+var_4] +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
cmp word ptr [esp+620h+var_608] 0 +
jnz loc_41F57D  +
xor eax eax +
jmp loc_41F593  +
lea eax [esp+620h+var_608] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_41F584  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [esp+624h+var_608] +
mov ecx esi +
push eax  +
call loc_401E70  +
mov ecx [esp+628h+var_C] +
mov al 1 +
pop esi  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_41F5C8  +
mov ecx [ecx] +
push ecx  +
call ds:PathFileExistsW  +
cmp eax 1 +
setz al  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_41F603  +
mov eax [edi] +
jmp loc_41F605  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_45B087  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_41F622  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAppendW  +
mov esi eax +
test esi esi +
jz loc_41F66E  +
cmp word ptr [ebp-20Ch] 0 +
jnz loc_41F644  +
xor ecx ecx +
jmp loc_41F65F  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F650  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx edi +
push eax  +
call loc_401E70  +
mov ecx [ebp-4] +
xor eax eax +
cmp esi 1 +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_41F6B0  +
mov eax [esi] +
jmp loc_41F6B2  +
mov eax esi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_45B087  +
add esp 0Ch +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRemoveExtensionW  +
cmp word ptr [ebp-20Ch] 0 +
jnz loc_41F6E2  +
xor ecx ecx +
jmp loc_41F6FF  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F6F0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx esi +
push eax  +
call loc_401E70  +
mov ecx [ebp-4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_41F743  +
mov eax [edi] +
jmp loc_41F745  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_45B087  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_41F762  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathAddExtensionW  +
test eax eax +
jnz loc_41F786  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp word ptr [ebp-20Ch] 0 +
jnz loc_41F794  +
xor ecx ecx +
jmp loc_41F7AF  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F7A0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx edi +
push eax  +
call loc_401E70  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
cmp dword ptr [edi+14h] 8 +
jb loc_41F7F3  +
mov eax [edi] +
jmp loc_41F7F5  +
mov eax edi +
push eax  +
lea eax [ebp-20Ch] +
push 104h  +
push eax  +
call sub_45B087  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_41F812  +
mov esi [esi] +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call ds:PathRenameExtensionW  +
test eax eax +
jnz loc_41F836  +
pop edi  +
xor al al +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp word ptr [ebp-20Ch] 0 +
jnz loc_41F844  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
sub esp 20Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_41F8A0  +
mov eax [esi] +
jmp loc_41F8A2  +
mov eax esi +
push eax  +
lea eax [ebp+pszPath] +
push 104h  +
push eax  +
call sub_45B087  +
add esp 0Ch +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveFileSpecW  +
test eax eax +
jnz loc_41F8D9  +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+pszPath] 0 +
jnz loc_41F8E7  +
xor ecx ecx +
jmp loc_41F8FF  +
lea ecx [ebp+pszPath] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41F8F0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+pszPath] +
mov ecx esi +
push eax  +
call loc_401E70  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4781B6  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push 1  +
sub esp 8 +
call sub_41FB50  +
cmp eax 0FFFFFFFFh +
jnz loc_41F96D  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push dword ptr [edi+10h]  +
mov ecx edi +
push eax  +
lea eax [ebp+var_24] +
push eax  +
call sub_40A2D0  +
mov edi eax +
cmp esi edi +
jz loc_41F9BC  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41F995  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_4024A0  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_41F9AD  +
mov eax [esi] +
jmp loc_41F9AF  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
push edi  +
call sub_4020A0  +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_41F9D1  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov edi edx +
jb loc_41F9FB  +
mov ecx [ecx] +
push ecx  +
call ds:PathFindFileNameW  +
mov edx eax +
cmp word ptr [edx] 0 +
jnz loc_41FA19  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx edi +
call loc_401E70  +
mov al 1 +
pop edi  +
retn   +
mov ecx edx +
push esi  +
lea esi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41FA20  +
sub ecx esi +
sar ecx 1 +
pop esi  +
push ecx  +
push edx  +
mov ecx edi +
call loc_401E70  +
mov al 1 +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax 2010h +
call sub_450CA0  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi edx +
xor edx edx +
cmp dword ptr [ecx+14h] 8 +
push edi  +
mov [ebp-2010h] edx +
jb loc_41FA6C  +
mov ecx [ecx] +
mov ebx ds:CreateFileW +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 0C0000000h  +
push ecx  +
call ebx  +
cmp dword ptr [esi+14h] 8 +
mov edi eax +
jb loc_41FA91  +
mov esi [esi] +
push 0  +
push 80h  +
push 4  +
push 0  +
push 0  +
push 40000000h  +
push esi  +
call ebx  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_41FAC7  +
push edi  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi ds:GetLastError +
push 0  +
lea eax [ebp-2008h] +
push eax  +
push 1000h  +
lea eax [ebp-2004h] +
push eax  +
push edi  +
call ds:ReadFile  +
test eax eax +
jz loc_41FB0F  +
push 0  +
lea eax [ebp-200Ch] +
push eax  +
push dword ptr [ebp-2008h]  +
lea eax [ebp-2004h] +
push eax  +
push ebx  +
call ds:WriteFile  +
jmp loc_41FB17  +
call esi  +
mov [ebp-2010h] eax +
cmp dword ptr [ebp-2008h] 1000h +
jz loc_41FAD0  +
mov esi ds:CloseHandle +
push edi  +
call esi  +
push ebx  +
call esi  +
mov edx [ebp-2010h] +
xor eax eax +
mov ecx [ebp-4] +
test edx edx +
pop edi  +
setz al  +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx ecx +
mov eax [ebx+10h] +
test edx edx +
jnz loc_41FB71  +
or ecx 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
pop ebx  +
cmova eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push esi  +
or ecx 0FFFFFFFFh +
push edi  +
cmp edx eax +
ja loc_41FBEF  +
sub eax edx +
cmp eax ecx +
cmova eax ecx +
cmp dword ptr [ebx+14h] 8 +
jb loc_41FB8B  +
mov ecx [ebx] +
jmp loc_41FB8D  +
mov ecx ebx +
lea edi [ecx+eax*2] +
cmp word ptr [edi] 2Eh +
jnz loc_41FBD9  +
cmp [ebp+arg_8] 0 +
mov esi edx +
mov edx offset a__0 +
mov eax edi +
jbe loc_41FBB8  +
mov cx [eax] +
cmp cx [edx] +
jnz loc_41FBCF  +
add eax 2 +
add edx 2 +
sub esi 1 +
jnz loc_41FBA5  +
cmp dword ptr [ebx+14h] 8 +
jb loc_41FBC0  +
mov ebx [ebx] +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 1 +
jz loc_41FBB8  +
mov ecx ebx +
call sub_401DF0  +
cmp edi eax +
jz loc_41FBEC  +
mov edx [ebp+arg_8] +
sub edi 2 +
jmp loc_41FB90  +
or ecx 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478223  +
mov eax large fs:0 +
push eax  +
sub esp 480h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_48C] edi +
xor eax eax +
mov [ebp+var_414] 7 +
mov [ebp+var_418] 0 +
mov word ptr [ebp+var_428] ax +
mov [ebp+var_4] eax +
lea ecx [ebp+var_478] +
push 1  +
push offset asc_4873B8  +
mov [ebp+var_464] 7 +
mov [ebp+var_468] eax +
mov word ptr [ebp+var_478] ax +
call loc_401E70  +
mov byte ptr [ebp+var_4] 1 +
lea edx [ebp+var_478] +
cmp [ebp+var_464] 8 +
cmovnb edx [ebp+var_478] +
cmp word ptr [edx] 0 +
jnz loc_41FCA1  +
xor ecx ecx +
jmp loc_41FCB5  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_41FCA6  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push ecx  +
lea esi [edi+4Ch] +
push edx  +
mov ecx esi +
call loc_41B730  +
push eax  +
push 0  +
lea eax [ebp+var_440] +
mov ecx esi +
push eax  +
call sub_40A2D0  +
mov ebx eax +
lea eax [ebp+var_428] +
cmp eax ebx +
jz loc_41FD26  +
mov eax [ebp+var_414] +
cmp eax 8 +
jb loc_41FCFD  +
inc eax  +
lea ecx [ebp+var_428] +
push eax  +
push [ebp+var_428]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_414] 7 +
push ebx  +
lea ecx [ebp+var_428] +
mov [ebp+var_418] 0 +
mov word ptr [ebp+var_428] ax +
call sub_4020A0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_42C] +
cmp eax 8 +
jb loc_41FD48  +
inc eax  +
lea ecx [ebp+var_440] +
push eax  +
push [ebp+var_440]  +
call loc_4024A0  +
lea eax [ebp+var_478] +
push eax  +
lea edx [ebp+var_428] +
lea ecx [ebp+var_458] +
call sub_420860  +
push offset aAsu_trace  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_440] +
call loc_402E60  +
add esp 8 +
mov ebx eax +
lea eax [ebp+var_428] +
cmp eax ebx +
jz loc_41FDCC  +
mov eax [ebp+var_414] +
cmp eax 8 +
jb loc_41FDA3  +
inc eax  +
lea ecx [ebp+var_428] +
push eax  +
push [ebp+var_428]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_414] 7 +
push ebx  +
lea ecx [ebp+var_428] +
mov [ebp+var_418] 0 +
mov word ptr [ebp+var_428] ax +
call sub_4020A0  +
mov eax [ebp+var_42C] +
cmp eax 8 +
jb loc_41FDEA  +
inc eax  +
lea ecx [ebp+var_440] +
push eax  +
push [ebp+var_440]  +
call loc_4024A0  +
xor eax eax +
mov byte ptr [ebp+var_4] 1 +
mov word ptr [ebp+var_440] ax +
mov eax [ebp+var_444] +
mov [ebp+var_42C] 7 +
mov [ebp+var_430] 0 +
cmp eax 8 +
jb loc_41FE29  +
inc eax  +
lea ecx [ebp+var_458] +
push eax  +
push [ebp+var_458]  +
call loc_4024A0  +
mov eax [edi+64h] +
cmp eax 0Ah +
jz loc_41FE44  +
cmp eax 14h +
jz loc_41FE3D  +
mov edi 0A00000h +
jmp loc_41FE49  +
mov edi 1400000h +
jmp loc_41FE49  +
mov edi 3200000h +
push 400h  +
lea eax [ebp+var_410] +
push 0  +
push eax  +
call sub_453150  +
cmp [ebp+var_414] 8 +
lea eax [ebp+var_428] +
push offset aRbCcsUtf8  +
cmovnb eax [ebp+var_428] +
push eax  +
lea eax [ebp+var_47C] +
mov [ebp+var_47C] 0 +
push eax  +
call sub_45F3E2  +
mov eax [ebp+var_47C] +
add esp 18h +
test eax eax +
jz loc_41FEB8  +
push eax  +
push 9  +
lea eax [ebp+var_410] +
push 1  +
push eax  +
call sub_460989  +
push [ebp+var_47C]  +
call sub_45D996  +
add esp 14h +
xor bl bl +
cmp dword ptr [esi+14h] 8 +
jb loc_41FEC4  +
mov eax [esi] +
jmp loc_41FEC6  +
mov eax esi +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_41FEF1  +
xor bl bl +
jmp loc_4200B2  +
lea ecx [ebp+var_460] +
push ecx  +
push eax  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_41FF1F  +
mov eax [ebp+var_460] +
mov bl 1 +
mov [ebp+var_484] eax +
mov eax [ebp+var_45C] +
mov [ebp+var_480] eax +
jmp loc_41FF37  +
mov eax [ebp+var_45C] +
mov [ebp+var_480] eax +
mov eax [ebp+var_460] +
mov [ebp+var_484] eax +
push [ebp+hObject]  +
call ds:CloseHandle  +
test bl bl +
jz loc_4200B2  +
cmp [ebp+var_480] 0 +
jl loc_4200B2  +
jg loc_41FF66  +
cmp [ebp+var_484] edi +
jb loc_4200B2  +
mov edi [ebp+var_48C] +
mov eax [edi+68h] +
lea ebx [edi+68h] +
test eax eax +
jz loc_41FF7D  +
push eax  +
call ds:CloseHandle  +
xor eax eax +
mov [ebp+var_42C] 7 +
push 0FFFFFFFFh  +
push eax  +
push esi  +
lea ecx [ebp+var_440] +
mov [ebp+var_430] 0 +
mov word ptr [ebp+var_440] ax +
call loc_402610  +
lea ecx [ebp+var_440] +
mov byte ptr [ebp+var_4] 5 +
call sub_4212C0  +
lea edx [ebp+var_440] +
mov ecx esi +
call loc_41FA40  +
test al al +
jz loc_41FFD0  +
mov ecx edi +
call sub_41B180  +
mov eax [edi] +
mov ecx edi +
push ebx  +
mov eax [eax] +
call eax  +
push 8  +
push offset aKeeplogs  +
lea ecx [ebp+var_458] +
mov [ebp+var_444] 0Fh +
mov bl al +
mov [ebp+var_448] 0 +
mov byte ptr [ebp+var_458] 0 +
call loc_402170  +
mov byte ptr [ebp+var_4] 6 +
lea eax [ebp+var_458] +
mov esi [ebp+var_444] +
lea ecx [ebp+var_410] +
cmp esi 10h +
cmovnb eax [ebp+var_458] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_420048  +
test dl dl +
jz loc_420044  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_420048  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_420028  +
xor eax eax +
jmp loc_42004D  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_42005F  +
push ecx  +
mov ecx edi +
call loc_41A200  +
mov esi [ebp+var_444] +
cmp esi 10h +
jb loc_420079  +
lea eax [esi+1] +
push eax  +
push [ebp+var_458]  +
lea ecx [ebp+var_458] +
call loc_402500  +
mov eax [ebp+var_42C] +
mov [ebp+var_444] 0Fh +
mov [ebp+var_448] 0 +
mov byte ptr [ebp+var_458] 0 +
cmp eax 8 +
jb loc_4200B2  +
inc eax  +
lea ecx [ebp+var_440] +
push eax  +
push [ebp+var_440]  +
call loc_4024A0  +
mov eax [ebp+var_464] +
cmp eax 8 +
jb loc_4200D0  +
inc eax  +
lea ecx [ebp+var_478] +
push eax  +
push [ebp+var_478]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_464] 7 +
mov word ptr [ebp+var_478] ax +
mov eax [ebp+var_414] +
mov [ebp+var_468] 0 +
cmp eax 8 +
jb loc_42010B  +
inc eax  +
lea ecx [ebp+var_428] +
push eax  +
push [ebp+var_428]  +
call loc_4024A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478290  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0Dh  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aProxyusername  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 0 +
add esi 0C0h +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_4201AF  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 0Ah  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aProxyUser  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 1 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_420200  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 9  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aProxyuser  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 2 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_420251  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 4  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aUser  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 3 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_4202A2  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 8  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aUsername  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 4 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_4202F3  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 0Eh  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aProxyPassword  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 5 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_420344  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 0Dh  +
xor eax eax +
mov [ebp+var_10] 7 +
push offset aProxypassword  +
lea ecx [ebp+var_24] +
mov [ebp+var_14] 0 +
mov word ptr [ebp+var_24] ax +
call loc_401E70  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 6 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
cmp eax 8 +
jb loc_420395  +
inc eax  +
lea ecx [ebp+var_24] +
push eax  +
push [ebp+var_24]  +
call loc_4024A0  +
push 8  +
xor eax eax +
mov [ebp+var_28] 7 +
push offset aPassword  +
lea ecx [ebp+var_3C] +
mov [ebp+var_2C] 0 +
mov word ptr [ebp+var_3C] ax +
call loc_401E70  +
lea eax [ebp+var_3C] +
mov [ebp+var_4] 7 +
push eax  +
mov ecx esi +
call sub_401BA0  +
mov eax [ebp+var_28] +
cmp eax 8 +
jb loc_4203DF  +
inc eax  +
lea ecx [ebp+var_3C] +
push eax  +
push [ebp+var_3C]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4782CE  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
xor edx edx +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] dx +
mov [ebp+var_4] edx +
mov eax [eax] +
add eax [ecx] +
mov ecx esi +
push eax  +
push edx  +
lea eax [ebp+var_40] +
push eax  +
call sub_40A2D0  +
push offset asc_48FCF4  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_58] +
call loc_402E60  +
add esp 4 +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_4204A0  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_420483  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_14] 7 +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call sub_4020A0  +
mov eax [ebp+var_44] +
cmp eax 8 +
jb loc_4204B5  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_44] 7 +
mov word ptr [ebp+var_58] ax +
mov byte ptr [ebp+var_4] al +
mov eax [ebp+var_2C] +
mov [ebp+var_48] 0 +
cmp eax 8 +
jb loc_4204E1  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
push 0FFFFFFFFh  +
push dword ptr [ebx]  +
lea eax [ebp+var_40] +
mov ecx esi +
push eax  +
call sub_40A2D0  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 3 +
call loc_402730  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_42051A  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
lea eax [ebp+var_28] +
cmp esi eax +
jz loc_42052D  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_402610  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_420542  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478326  +
mov eax large fs:0 +
push eax  +
sub esp 98h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-84h] ecx +
mov edx [ebp+8] +
mov eax [ebp+0Ch] +
mov [ebp-8Ch] eax +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov dword ptr [ebp-30h] 0 +
mov [ebp-40h] ax +
cmp [edx] ax +
jnz loc_4205BD  +
xor ecx ecx +
jmp loc_4205D1  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4205C2  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_401E70  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-40h] +
mov edi [ebp-2Ch] +
lea ebx [ebp-40h] +
mov esi [ebp-40h] +
lea edx [ebp-40h] +
mov eax [ebp-30h] +
cmp edi 8 +
cmovnb ecx esi +
cmovnb ebx esi +
push ecx  +
push ebx  +
cmovnb edx esi +
lea eax [ecx+eax*2] +
push eax  +
lea ecx [ebp-74h] +
call sub_410730  +
mov eax [ebp-84h] +
add esp 0Ch +
mov esi [eax+0C0h] +
cmp esi [eax+0C4h] +
jz loc_42081F  +
xor eax eax +
mov dword ptr [ebp-5Ch] 7 +
push 0FFFFFFFFh  +
push eax  +
push esi  +
lea ecx [ebp-70h] +
mov dword ptr [ebp-60h] 0 +
mov [ebp-70h] ax +
call loc_402610  +
push offset asc_48FD00  +
lea edx [ebp-70h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
call sub_402ED0  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov edx offset asc_48FD04 +
lea ecx [ebp-58h] +
call loc_413B30  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 3 +
push eax  +
mov edx offset asc_48FD0C +
lea ecx [ebp-0A4h] +
call loc_413B30  +
add esp 0Ch +
mov edi eax +
lea eax [ebp-28h] +
cmp eax edi +
jz loc_4206CF  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_4206B2  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
push edi  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call sub_4020A0  +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-90h] +
cmp eax 8 +
jb loc_4206F1  +
inc eax  +
lea ecx [ebp-0A4h] +
push eax  +
push dword ptr [ebp-0A4h]  +
call loc_4024A0  +
push dword ptr [ebp-18h]  +
mov edi [ebp-14h] +
lea eax [ebp-28h] +
cmp edi 8 +
lea ecx [ebp-40h] +
push 0  +
cmovnb eax [ebp-28h] +
push eax  +
call sub_40A370  +
mov ebx [ebp-44h] +
mov [ebp-80h] eax +
cmp eax 0FFFFFFFFh +
jz loc_42079F  +
push dword ptr [ebp-48h]  +
cmp ebx 8 +
lea ecx [ebp-58h] +
push 0  +
cmovnb ecx [ebp-58h] +
push ecx  +
lea ecx [ebp-40h] +
call sub_40A370  +
mov edx eax +
mov [ebp-74h] edx +
cmp edx 0FFFFFFFFh +
jz loc_42079F  +
mov ecx [ebp-18h] +
mov eax [ebp-80h] +
add ecx eax +
cmp ecx edx +
jz loc_42079F  +
mov ecx [ebp-18h] +
mov [ebp-7Ch] eax +
lea eax [ebp-88h] +
push eax  +
lea eax [ebp-78h] +
mov [ebp-88h] ecx +
push eax  +
lea eax [ebp-7Ch] +
mov [ebp-78h] edx +
push eax  +
push dword ptr [ebp-8Ch]  +
call sub_4203F0  +
mov eax [ebp-18h] +
mov [ebp-7Ch] eax +
mov eax [ebp-74h] +
mov [ebp-74h] eax +
mov eax [ebp-80h] +
mov [ebp-78h] eax +
lea eax [ebp-7Ch] +
push eax  +
lea eax [ebp-74h] +
push eax  +
lea eax [ebp-78h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
call sub_4203F0  +
mov edi [ebp-14h] +
mov ebx [ebp-44h] +
cmp ebx 8 +
jb loc_4207B6  +
lea eax [ebx+1] +
push eax  +
push dword ptr [ebp-58h]  +
lea ecx [ebp-58h] +
call loc_4024A0  +
mov edi [ebp-14h] +
xor eax eax +
mov dword ptr [ebp-44h] 7 +
mov dword ptr [ebp-48h] 0 +
mov [ebp-58h] ax +
cmp edi 8 +
jb loc_4207DE  +
lea eax [edi+1] +
push eax  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-28h] +
call loc_4024A0  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov [ebp-28h] ax +
mov [ebp-4] al +
mov eax [ebp-5Ch] +
mov dword ptr [ebp-18h] 0 +
cmp eax 8 +
jb loc_42080A  +
inc eax  +
lea ecx [ebp-70h] +
push eax  +
push dword ptr [ebp-70h]  +
call loc_4024A0  +
mov eax [ebp-84h] +
add esi 18h +
cmp esi [eax+0C4h] +
jnz loc_420630  +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_420834  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_4024A0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_477479  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4208BC  +
mov eax [esi] +
jmp loc_4208BE  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
mov eax [ebx+10h] +
mov edi [esi+10h] +
mov [ebp+var_10] 1 +
add eax [ecx+10h] +
cmp edi eax +
ja loc_420905  +
cmp [esi+14h] eax +
jz loc_420905  +
push 1  +
push eax  +
mov ecx esi +
call loc_402560  +
test al al +
jz loc_420905  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4208FD  +
mov eax [esi] +
jmp loc_4208FF  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call loc_402730  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call loc_402730  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jnz loc_42098E  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:CreateMutexW  +
mov [esi] eax +
test eax eax +
jnz loc_42098B  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_42098B  +
cmp [ebp+arg_14] 8 +
lea eax [ebp+lpName] +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 0  +
call ds:OpenMutexW  +
mov [esi] eax +
cmp dword ptr [esi] 0 +
mov ecx [ebp+arg_14] +
setnz bl  +
cmp ecx 8 +
jb loc_4209A6  +
inc ecx  +
push ecx  +
push [ebp+lpName]  +
lea ecx [ebp+lpName] +
call loc_4024A0  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 18h  +
***
sub esp 0Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
lea eax [ebp+var_C] +
push esi  +
mov esi ecx +
mov [ebp+var_C] edx +
lea ecx [esi+4] +
mov [ebp+var_8] 1 +
push ecx  +
xorps xmm0 xmm0 +
mov dword ptr [esi] offset off_47C344 +
push eax  +
movq qword ptr [ecx] xmm0 +
call sub_452277  +
mov ecx [ebp+var_4] +
add esp 8 +
mov dword ptr [esi] offset off_47C374 +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov dword ptr [esi] offset off_47C374 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 20h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
push [ebp+arg_10]  +
mov [ebp+var_18] ebx +
push [ebp+arg_C]  +
mov [ebp+var_1C] eax +
push esi  +
call loc_420DE0  +
mov ecx [ebx] +
mov edi eax +
or ebx 0FFFFFFFFh +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_8] 0 +
lea edx [edi+esi] +
lea esi [ebx-3] +
test edx edx +
jns loc_420AB4  +
mov eax edx +
neg eax  +
jz loc_420AB4  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
add [ebp+var_10] eax +
jmp loc_420AC2  +
mov ecx [ebp+var_10] +
mov eax edx +
shr eax 5 +
lea ecx [ecx+eax*4] +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_14] +
and edx 1Fh +
mov [ebp+var_8] 0 +
test edi edi +
jns loc_420AEC  +
mov eax edi +
neg eax  +
jz loc_420AEC  +
mov ecx ebx +
sub ecx edi +
shr ecx 5 +
shl ecx 2 +
sub esi ecx +
mov ecx [ebp+var_14] +
add ecx esi +
jmp loc_420AF4  +
mov eax edi +
shr eax 5 +
lea ecx [ecx+eax*4] +
push edx  +
push [ebp+var_10]  +
mov esi edi +
mov byte ptr [ebp+var_14] 0 +
and esi 1Fh +
mov eax esi +
push eax  +
push ecx  +
push [ebp+var_14]  +
mov ecx [ebp+arg_8] +
call loc_421170  +
mov ecx [ebp+var_18] +
add esp 14h +
mov [ebp+var_8] 0 +
mov ecx [ecx] +
test edi edi +
jns loc_420B3C  +
mov eax edi +
neg eax  +
jz loc_420B3C  +
sub ebx edi +
mov eax 0FFFFFFFCh +
shr ebx 5 +
shl ebx 2 +
sub eax ebx +
add ecx eax +
jmp loc_420B42  +
shr edi 5 +
lea ecx [ecx+edi*4] +
mov eax [ebp+var_1C] +
pop edi  +
mov [eax] ecx +
mov ecx [ebp+var_4] +
mov [eax+4] esi +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
mov [ebp+var_20] eax +
mov ebx ecx +
push [ebp+arg_4]  +
lea eax [ebp+var_18] +
mov [ebp+var_1C] ebx +
push eax  +
movq [ebp+var_18] xmm0 +
call sub_420ED0  +
push [ebp+arg_10]  +
lea eax [ebp+var_10] +
xorps xmm0 xmm0 +
push [ebp+arg_C]  +
mov ecx ebx +
movq [ebp+var_10] xmm0 +
push eax  +
call sub_420ED0  +
mov ecx dword ptr [ebp+var_18] +
or edi 0FFFFFFFFh +
mov ebx [ebx] +
mov esi ecx +
mov eax dword ptr [ebp+var_18+4] +
sub esi ebx +
sar esi 2 +
shl esi 5 +
lea edx [edi-3] +
add esi eax +
cmp ecx dword ptr [ebp+var_10] +
jnz loc_420BD2  +
cmp eax dword ptr [ebp+var_10+4] +
jz loc_420C4C  +
mov ecx [ebp+var_1C] +
xorps xmm0 xmm0 +
xor edx edx +
movq [ebp+var_28] xmm0 +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_420C10  +
mov edx eax +
test edx edx +
jns loc_420C05  +
neg eax  +
jz loc_420C05  +
mov ecx edi +
mov eax 0FFFFFFFCh +
sub ecx edx +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
add ebx eax +
jmp loc_420C0D  +
mov eax edx +
shr eax 5 +
lea ebx [ebx+eax*4] +
and edx 1Fh +
push dword ptr [ebp+var_18+4]  +
mov byte ptr [ebp+var_28+4] 0 +
lea ecx [ebp+var_10] +
push dword ptr [ebp+var_18]  +
push edx  +
push ebx  +
push dword ptr [ebp+var_10+4]  +
push dword ptr [ebp+var_10]  +
push dword ptr [ebp+var_28+4]  +
call sub_421240  +
mov ecx [ebp+var_1C] +
add esp 1Ch +
mov eax dword ptr [ebp+var_10] +
sub eax [ecx] +
sar eax 2 +
shl eax 5 +
add eax dword ptr [ebp+var_10+4] +
push eax  +
call loc_420D70  +
mov edx 0FFFFFFFCh +
mov ecx [ebp+var_1C] +
mov dword ptr [ebp+var_10+4] 0 +
mov ecx [ecx] +
test esi esi +
jns loc_420C70  +
mov eax esi +
neg eax  +
jz loc_420C70  +
sub edi esi +
shr edi 5 +
shl edi 2 +
sub edx edi +
add ecx edx +
jmp loc_420C78  +
mov eax esi +
shr eax 5 +
lea ecx [ecx+eax*4] +
mov eax [ebp+var_20] +
and esi 1Fh +
pop edi  +
mov [eax] ecx +
mov ecx [ebp+var_8] +
mov [eax+4] esi +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx [ecx+0Ch] +
xorps xmm0 xmm0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ecx] +
movq qword ptr [esi] xmm0 +
mov [esi] edi +
mov dword ptr [esi+4] 0 +
test edx edx +
jz loc_420CFA  +
jns loc_420CEA  +
mov eax edx +
neg eax  +
jz loc_420CEA  +
or ecx 0FFFFFFFFh +
mov eax esi +
sub ecx edx +
shr ecx 5 +
lea ecx ds:4[ecx*4] +
sub edi ecx +
and edx 1Fh +
mov [esi] edi +
pop edi  +
mov [esi+4] edx +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
shr eax 5 +
and edx 1Fh +
mov [esi+4] edx +
lea eax [edi+eax*4] +
mov [esi] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
push esi  +
mov esi [ecx] +
mov ecx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test ecx ecx +
jns loc_420D52  +
mov eax ecx +
neg eax  +
cmp edx eax +
jnb loc_420D52  +
add edx ecx +
mov eax 0FFFFFFFCh +
or ecx 0FFFFFFFFh +
sub ecx edx +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
add esi eax +
and edx 1Fh +
mov [edi] esi +
mov eax edi +
mov [edi+4] edx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
add edx ecx +
mov eax edi +
mov ecx edx +
shr ecx 5 +
and edx 1Fh +
mov [edi+4] edx +
lea esi [esi+ecx*4] +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
cmp esi 0FFFFFFFFh +
ja loc_420DCA  +
mov ecx [edi+4] +
lea ebx [esi+1Fh] +
mov eax [edi] +
mov edx ecx +
sub edx eax +
shr ebx 5 +
sar edx 2 +
cmp ebx edx +
jnb loc_420DA7  +
push ecx  +
lea eax [eax+ebx*4] +
mov ecx edi +
push eax  +
lea eax [ebp-4] +
push eax  +
call sub_420F40  +
mov [edi+0Ch] esi +
and esi 1Fh +
jbe loc_420DC1  +
mov eax [edi] +
mov ecx esi +
lea edx [eax+ebx*4] +
mov eax 1 +
shl eax cl +
dec eax  +
and [edx-4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aVectorBoolTooL  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-8] eax +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
sub ebx [esi] +
sar ebx 2 +
shl ebx 5 +
add ebx [ebp+10h] +
test edi edi +
jz loc_420EA3  +
mov ecx [esi+0Ch] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax edi +
jb loc_420EB8  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 0 +
push eax  +
lea eax [edi+1Fh] +
add eax ecx +
mov ecx esi +
shr eax 5 +
push eax  +
call sub_420FB0  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_420E45  +
mov [esi+0Ch] edi +
jmp loc_420EA3  +
lea eax [ebp-10h] +
xorps xmm0 xmm0 +
push eax  +
mov ecx esi +
movq qword ptr [ebp-10h] xmm0 +
call sub_420CA0  +
add [esi+0Ch] edi +
mov ecx esi +
mov eax [esi] +
mov [ebp-18h] eax +
lea eax [ebp-20h] +
push eax  +
mov dword ptr [ebp-14h] 0 +
call sub_420CA0  +
push ebx  +
lea ecx [ebp-18h] +
mov edi [eax] +
mov esi [eax+4] +
lea eax [ebp-28h] +
push eax  +
call sub_420D10  +
push esi  +
push edi  +
push dword ptr [ebp-0Ch]  +
mov byte ptr [ebp-14h] 0 +
lea ecx [ebp-10h] +
push dword ptr [ebp-10h]  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push dword ptr [ebp-14h]  +
call loc_4211C0  +
add esp 1Ch +
mov ecx [ebp-8] +
mov eax ebx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push offset aVectorBoolTooL  +
call sub_44EC5C  +
push esi  +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_8] +
mov eax ecx +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [eax] +
mov [ebp+var_8] eax +
push edi  +
mov edi [ebp+arg_0] +
cmp ebx esi +
jnz loc_420F86  +
cmp edx [eax+4] +
jnz loc_420F86  +
mov [eax+4] esi +
mov [edi] ebx +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp ebx edx +
jz loc_420F6F  +
mov esi [eax+4] +
sub esi edx +
push esi  +
push edx  +
push ebx  +
call loc_450F90  +
mov ecx [ebp+var_8] +
lea eax [esi+ebx] +
add esp 0Ch +
mov [ecx+4] eax +
mov eax [ebp+arg_4] +
mov [edi] eax +
jmp loc_420F71  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov eax [edi+4] +
mov ecx eax +
mov edx [edi] +
sub ecx edx +
sar ecx 2 +
cmp ecx esi +
jbe loc_420FDB  +
sub esi ecx +
lea eax [eax+esi*4] +
mov [edi+4] eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
jnb loc_42103D  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx eax +
jnb loc_421001  +
cmp edx ebx +
ja loc_421001  +
mov eax esi +
sub ebx edx +
sub eax ecx +
sar ebx 2 +
push eax  +
mov ecx edi +
call loc_4210D0  +
mov eax [edi] +
lea ebx [eax+ebx*4] +
jmp loc_42100D  +
mov eax esi +
sub eax ecx +
mov ecx edi +
push eax  +
call loc_4210D0  +
mov ecx [edi+4] +
mov edx esi +
mov eax ecx +
mov byte ptr [ebp+var_4] 0 +
push [ebp+var_4]  +
sub eax [edi] +
push ecx  +
sar eax 2 +
push ebx  +
sub edx eax +
call loc_421140  +
mov eax [edi+4] +
add esp 0Ch +
sub eax [edi] +
sar eax 2 +
sub esi eax +
shl esi 2 +
add [edi+4] esi +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+8] +
mov [ebp-8] esi +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
test esi esi +
jz loc_4210BB  +
cmp esi 3FFFFFFFh +
ja loc_4210C3  +
push edi  +
push esi  +
call loc_4186B0  +
mov edx [ebp-8] +
lea edi ds:0[esi*4] +
mov [ebx] eax +
mov [ebx+4] eax +
mov eax [ebx] +
mov byte ptr [ebp-4] 0 +
add eax edi +
push dword ptr [ebp-4]  +
mov [ebx+8] eax +
mov esi [ebx] +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call loc_421140  +
add esp 0Ch +
lea eax [edi+esi] +
mov [ebx+4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax ecx +
jnb loc_421126  +
sub edx [esi] +
push ebx  +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax ecx +
jb loc_42112C  +
sub edi [esi] +
add edx ecx +
sar edi 2 +
mov eax edi +
shr eax 1 +
sub ebx eax +
cmp ebx edi +
lea ecx [eax+edi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_4185B0  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
test edx edx +
jz loc_421161  +
push esi  +
mov esi [ebp+8] +
test ecx ecx +
jz loc_421158  +
mov eax [esi] +
mov [ecx] eax +
add ecx 4 +
sub edx 1 +
jnz loc_421150  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+10h] +
push esi  +
mov esi [ebp+0Ch] +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov edi [ebp+14h] +
mov ecx [ebp+18h] +
cmp [ebp+0Ch] edi +
jnz loc_4211E0  +
cmp [ebp+10h] ecx +
jz loc_42122B  +
test ecx ecx +
jz loc_4211E7  +
dec ecx  +
jmp loc_4211F2  +
sub edi 4 +
mov ecx 1Fh +
mov [ebp+14h] edi +
mov edx [ebp+20h] +
mov esi [ebp+1Ch] +
mov [ebp+18h] ecx +
test edx edx +
jz loc_421202  +
dec edx  +
jmp loc_42120D  +
sub esi 4 +
mov edx 1Fh +
mov [ebp+1Ch] esi +
mov eax 1 +
mov [ebp+20h] edx +
shl eax cl +
test [edi] eax +
mov eax [esi] +
jz loc_421224  +
bts eax edx +
mov [esi] eax +
jmp loc_4211D0  +
***
btr eax edx +
mov [esi] eax +
jmp loc_4211D0  +
***
mov ecx [ebp+1Ch] +
mov eax ebx +
pop edi  +
mov [ebx] ecx +
mov ecx [ebp+20h] +
pop esi  +
mov [ebx+4] ecx +
pop ebx  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_18] +
push ebx  +
push esi  +
mov esi [ebp+arg_14] +
mov ebx ecx +
mov ecx [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
cmp edi [ebp+arg_C] +
jnz loc_42125E  +
cmp ecx [ebp+arg_10] +
jz loc_4212AC  +
mov eax 1 +
shl eax cl +
test [edi] eax +
mov eax [esi] +
jz loc_421270  +
bts eax edx +
jmp loc_421273  +
btr eax edx +
mov [esi] eax +
mov edx [ebp+arg_18] +
mov esi [ebp+arg_14] +
cmp edx 1Fh +
jnb loc_421283  +
inc edx  +
jmp loc_42128B  +
xor edx edx +
add esi 4 +
mov [ebp+arg_14] esi +
mov ecx [ebp+arg_8] +
mov edi [ebp+arg_4] +
mov [ebp+arg_18] edx +
cmp ecx 1Fh +
jnb loc_42129F  +
inc ecx  +
mov [ebp+arg_8] ecx +
jmp loc_421254  +
xor ecx ecx +
add edi 4 +
mov [ebp+arg_8] ecx +
mov [ebp+arg_4] edi +
jmp loc_421254  +
pop edi  +
mov [ebx] esi +
mov eax ebx +
pop esi  +
mov [ebx+4] edx +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478370  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
xor eax eax +
mov [ebp+var_14] 7 +
push 0FFFFFFFFh  +
push eax  +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402610  +
lea ecx [ebp+var_28] +
mov [ebp+var_4] 0 +
call loc_41F690  +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 1 +
call sub_41F4C0  +
lea eax [ebp+var_58] +
mov edx offset asc_487394 +
push eax  +
lea ecx [ebp+var_70] +
call loc_413B30  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 2 +
call loc_402730  +
mov eax [ebp+var_5C] +
cmp eax 8 +
jb loc_421374  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
lea edx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
mov ecx esi +
call sub_41F920  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_28] +
call loc_41F720  +
lea eax [ebp+var_28] +
cmp esi eax +
jz loc_4213B4  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_402610  +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_4213C9  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov word ptr [ebp+var_40] ax +
mov eax [ebp+var_44] +
mov [ebp+var_30] 0 +
cmp eax 8 +
jb loc_4213F2  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_4024A0  +
xor eax eax +
mov [ebp+var_44] 7 +
mov word ptr [ebp+var_58] ax +
mov eax [ebp+var_14] +
mov [ebp+var_48] 0 +
cmp eax 8 +
jb loc_42141B  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_4024A0  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov edx [ecx+14h] +
cmp edx [ecx+18h] +
jnz loc_4214A0  +
mov eax [edx+14h] +
sub eax [edx+10h] +
jnz loc_4214A0  +
cmp [ecx+20h] eax +
jnz loc_4214A0  +
mov ecx 1 +
test cl cl +
setz al  +
retn   +
xor ecx ecx +
xor eax eax +
test cl cl +
setz al  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx ecx +
xorps xmm0 xmm0 +
push esi  +
movlpd oword ptr [esp+8] xmm0 +
mov esi [esp+10h+var_4] +
mov edx [ebx+0Ch] +
push edi  +
mov edi [esp+14h+var_8] +
mov eax [edx+14h] +
test eax eax +
jz loc_4214E4  +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
mov eax [eax] +
add edi ecx +
adc esi 0 +
test eax eax +
jnz loc_4214D3  +
mov eax [edx+20h] +
xor edx edx +
sub eax [ebx+18h] +
sbb edx [ebx+1Ch] +
add eax edi +
pop edi  +
adc edx esi +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_421515  +
push 30h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 30h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+2Ch] eax +
lea ecx [esp+4] +
call sub_422F70  +
push offset unk_49C6E4  +
lea eax [esp+8] +
push eax  +
call sub_452780  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
call sub_421EA0  +
test [esp+arg_0] 1 +
jz loc_42158A  +
push 28h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
jmp sub_421EA0  +
***
call sub_422130  +
test [esp+arg_0] 1 +
jz loc_4215BA  +
push 30h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push ecx  +
call sub_422130  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebp  +
mov ebp [esp+0Ch+arg_4] +
push esi  +
mov esi ecx +
test ebp ebp +
ja loc_42160B  +
mov eax [esp+10h+arg_0] +
jb loc_4215EA  +
cmp eax 7Fh +
ja loc_42160B  +
push 1  +
push 0  +
mov byte ptr [esp+18h+arg_0] al +
lea ecx [esp+18h+arg_0] +
mov eax [esi] +
push 1  +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
pop esi  +
mov eax 1 +
pop ebp  +
add esp 8 +
retn   +
push ebx  +
lea ecx [esp+14h+arg_0] +
call sub_422B50  +
mov edx [esi] +
mov ebx eax +
push 1  +
mov cl bl +
lea eax [esp+18h+var_8] +
push 0  +
or cl 80h +
push 1  +
mov byte ptr [esp+20h+var_8] cl +
mov ecx esi +
push eax  +
call dword ptr [edx+14h]  +
test ebx ebx +
jz loc_42167C  +
lea eax [ebx+1] +
push edi  +
lea edi ds:0FFFFFFF8h[ebx*8] +
mov [esp+14h] eax +
mov eax [esp+18h+arg_0] +
mov edx ebp +
mov ecx edi +
call sub_473E70  +
mov edx [esi] +
mov ecx esi +
push 1  +
push 0  +
mov byte ptr [esp+20h+var_8] al +
lea eax [esp+20h+var_8] +
push 1  +
push eax  +
call dword ptr [edx+14h]  +
sub edi 8 +
sub ebx 1 +
jnz loc_421645  +
mov eax [esp+28h+var_14] +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 8 +
retn   +
pop ebx  +
pop esi  +
mov eax 1 +
pop ebp  +
add esp 8 +
retn   +
***
push ecx  +
push ebx  +
push ebp  +
mov ebp ecx +
lea ecx [esp+0Bh] +
push esi  +
push edi  +
push ecx  +
mov eax [ebp+0] +
mov ecx ebp +
mov edi edx +
call dword ptr [eax+48h]  +
test eax eax +
jnz loc_4216B2  +
xor al al +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov cl [esp+13h] +
mov eax [esp+18h] +
test cl cl +
js loc_4216D2  +
mov byte ptr [eax] 1 +
movzx eax cl +
cdq   +
mov [edi] eax +
mov al 1 +
mov [edi+4] edx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
movzx ebx cl +
and ebx 7Fh +
jnz loc_4216E4  +
mov [eax] bl +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov byte ptr [eax] 1 +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov ecx [edi+4] +
xor eax eax +
and ecx 0FF000000h +
dec ebx  +
or eax ecx +
jnz loc_42173C  +
mov eax [ebp+0] +
lea ecx [esp+13h] +
push ecx  +
mov ecx ebp +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_4216AA  +
mov ecx [edi] +
mov esi [edi+4] +
movzx eax byte ptr [esp+13h] +
shld esi ecx +
cdq   +
shl ecx 8 +
or esi edx +
or ecx eax +
mov [edi+4] esi +
mov [edi] ecx +
test ebx ebx +
jnz loc_4216F4  +
pop edi  +
pop esi  +
pop ebp  +
mov al 1 +
pop ebx  +
pop ecx  +
retn   +
***
call loc_421520  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
lea eax [esp+3] +
push esi  +
mov esi edx +
lea edx [esp+8] +
push eax  +
call loc_421690  +
add esp 4 +
test al al +
jz loc_42179D  +
mov ecx [esp+0Ch] +
mov eax [esp+8] +
mov [esi] eax +
test ecx ecx +
jnz loc_42179D  +
test eax eax +
jz loc_421788  +
mov ecx 1 +
xor edx edx +
cmp edx eax +
sbb eax eax +
neg eax  +
cmp ecx eax +
jnz loc_42179D  +
mov al [esp+7] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_421520  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push esi  +
mov esi ecx +
lea ecx [esp+6] +
push ecx  +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_42181F  +
cmp byte ptr [esp+6] 5 +
jnz loc_42181F  +
lea eax [esp+7] +
mov ecx esi +
push eax  +
lea edx [esp+0Ch] +
call loc_421690  +
add esp 4 +
test al al +
jz loc_42181F  +
mov eax [esp+0Ch] +
mov ecx [esp+8] +
test eax eax +
jnz loc_42181F  +
test ecx ecx +
jnz loc_4217FE  +
xor edx edx +
jmp loc_421803  +
mov edx 1 +
xor eax eax +
cmp eax ecx +
sbb eax eax +
neg eax  +
cmp edx eax +
jnz loc_42181F  +
cmp byte ptr [esp+7] 0 +
jz loc_421824  +
test ecx ecx +
jnz loc_421824  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_421520  +
call loc_421520  +
push ebp  +
push esi  +
push edi  +
mov ebp ecx +
mov byte ptr [esp+11h+var_1] 4 +
push 1  +
push 0  +
push 1  +
mov eax [ebp+0] +
lea ecx [esp+1Dh+var_1] +
push ecx  +
mov ecx ebp +
mov ebx edx +
call dword ptr [eax+14h]  +
mov edi [esp+18h] +
mov ecx ebp +
push 0  +
push edi  +
call sub_4215D0  +
mov edx [ebp+0] +
add esp 8 +
mov ecx ebp +
mov esi eax +
push 1  +
push 0  +
push edi  +
push ebx  +
call dword ptr [edx+14h]  +
lea eax [edi+1] +
pop edi  +
add eax esi +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4783B0  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov eax [esi] +
lea ecx [ebp+var_78] +
push ecx  +
mov ecx esi +
call dword ptr [eax+50h]  +
push [ebp+var_78]  +
lea ecx [ebp+var_38] +
mov [ebp+var_2C] 0FFFFFFFFh +
mov [ebp+var_28] 0 +
mov [ebp+var_38] offset off_48FE70 +
mov [ebp+var_34] offset off_48FE60 +
mov [ebp+var_24] esi +
mov [ebp+var_20] 0 +
call loc_421E40  +
mov [ebp+var_4] 2 +
lea ecx [ebp+var_70] +
push [ebp+var_78]  +
push edi  +
call sub_422050  +
mov byte ptr [ebp+var_4] 3 +
mov al [ebp+var_1F] +
test al al +
jz loc_42196D  +
mov eax [ebp+var_18] +
lea ecx [ebp+var_38] +
mov [ebp+var_40] eax +
mov eax [ebp+var_14] +
push 1  +
mov [ebp+var_3C] eax +
lea eax [ebp+var_40] +
push offset dword_4A314C  +
push eax  +
lea eax [ebp+var_70] +
push eax  +
mov eax [ebp+var_38] +
call dword ptr [eax+7Ch]  +
lea ecx [ebp+var_38] +
call loc_421F00  +
lea ecx [ebp+var_70] +
call sub_4221C0  +
lea ecx [ebp+var_70] +
call sub_422130  +
lea ecx [ebp+var_38] +
call sub_421EA0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
test al al +
jz loc_42196D  +
mov eax [ebp+var_18] +
or eax [ebp+var_14] +
jmp loc_421995  +
mov ecx [ebp+var_24] +
lea edx [ebp+var_74] +
push 2  +
push edx  +
mov word ptr [ebp+var_74] 0 +
mov eax [ecx] +
call dword ptr [eax+4Ch]  +
cmp eax 2 +
jnz loc_421997  +
movzx ecx byte ptr [ebp+var_74] +
movzx eax byte ptr [ebp+var_74+1] +
shl cx 8 +
or cx ax +
jz loc_421926  +
lea edx [ebp+var_70] +
lea ecx [ebp+var_38] +
call sub_421880  +
mov al [ebp+var_1F] +
jmp loc_421961  +
***
sub esp 10h +
push ebx  +
push esi  +
mov ebx edx +
mov [esp+18h+var_4] 7 +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_4219CA  +
xor esi esi +
jmp loc_4219ED  +
xor edx edx +
mov esi 20h +
lea ecx [esi+edx] +
mov eax ebx +
shr ecx 1 +
shr eax cl +
test eax eax +
jz loc_4219E2  +
mov edx ecx +
jmp loc_4219E4  +
mov esi ecx +
mov eax esi +
sub eax edx +
cmp eax 1 +
ja loc_4219D1  +
lea eax [esp+1Ch+var_8] +
mov [esp+1Ch+var_C] esi +
cmp esi 7 +
mov [esp+1Ch+var_8] 7 +
lea ecx [esp+1Ch+var_C] +
cmovbe ecx eax +
lea edx [esp+1Ch+var_4] +
call sub_422BF0  +
mov esi eax +
sub esi 7 +
jz loc_421A3B  +
mov eax [edi] +
mov ecx esi +
push 1  +
push 0  +
mov edx ebx +
shr edx cl +
lea ecx [esp+24h+var_10] +
push 1  +
or dl 80h +
push ecx  +
mov ecx edi +
mov byte ptr [esp+2Ch+var_10] dl +
call dword ptr [eax+14h]  +
sub esi 7 +
jnz loc_421A17  +
mov eax [edi] +
lea ecx [esp+1Ch+var_10] +
push 1  +
push 0  +
push 1  +
and bl 7Fh +
push ecx  +
mov ecx edi +
mov byte ptr [esp+2Ch+var_10] bl +
call dword ptr [eax+14h]  +
pop edi  +
pop esi  +
pop ebx  +
add esp 10h +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov edi edx +
xor esi esi +
lea ecx [esp+0Fh] +
push ecx  +
mov ecx ebx +
mov [edi] esi +
mov eax [ebx] +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_421AB8  +
mov eax [edi] +
inc esi  +
test eax 0FE000000h +
jnz loc_421AB8  +
mov dl [esp+0Fh] +
movzx ecx dl +
and ecx 7Fh +
shl eax 7 +
add ecx eax +
mov [edi] ecx +
test dl dl +
jns loc_421AB1  +
mov eax [ebx] +
lea ecx [esp+0Fh] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+48h]  +
test eax eax +
jnz loc_421A80  +
jmp loc_421AB8  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
call loc_421520  +
push 0FFFFFFFFh  +
push offset loc_4783F7  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+arg_0] +
push 18h  +
mov [ebp+var_48] eax +
mov [ebp+var_40] offset off_4912A4 +
mov [ebp+var_3C] offset off_491358 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_34] 1 +
mov [ebp+var_30] 100h +
call sub_44FE54  +
mov ebx eax +
add esp 4 +
mov [ebp+var_14] ebx +
mov [ebp+var_4] 2 +
mov esi [ebp+var_30] +
mov ecx esi +
mov [ebx+8] esi +
call sub_40FD30  +
test esi esi +
jnz loc_421B45  +
xor eax eax +
jmp loc_421B4C  +
mov ecx esi +
call loc_43F720  +
mov [ebx+0Ch] eax +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx] 0 +
mov [ebp+var_28] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_4] 3 +
mov edx [edi] +
push 1  +
push 0  +
push 1  +
mov al [edx] +
mov cl al +
shl al 2 +
add cl al +
lea eax [ebp+var_44] +
shl cl 3 +
add cl [edx+4] +
push eax  +
mov eax [ebp+var_40] +
mov byte ptr [ebp+var_44] cl +
lea ecx [ebp+var_40] +
call dword ptr [eax+14h]  +
mov eax [edi+4] +
mov esi 2 +
sub eax [edi] +
sar eax 2 +
cmp eax esi +
jbe loc_421BC2  +
mov edx [edi] +
lea ecx [ebp+var_40] +
mov edx [edx+esi*4] +
call sub_4219B0  +
mov eax [edi+4] +
inc esi  +
sub eax [edi] +
sar eax 2 +
cmp esi eax +
jb loc_421BA8  +
mov ebx [ebp+var_48] +
lea ecx [ebp+var_44] +
push 1  +
push 0  +
push 1  +
mov eax [ebx] +
push ecx  +
mov ecx ebx +
mov byte ptr [ebp+var_44] 6 +
call dword ptr [eax+14h]  +
mov eax [ebp+var_2C] +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-18h] xmm0 +
mov edx [ebp+var_14] +
mov esi [ebp+var_18] +
test eax eax +
jz loc_421C01  +
nop   +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
mov eax [eax] +
add esi ecx +
adc edx 0 +
test eax eax +
jnz loc_421BF0  +
mov ecx [ebp+var_20] +
xor eax eax +
add ecx esi +
adc eax edx +
push eax  +
push ecx  +
mov ecx ebx +
call sub_4215D0  +
add esp 8 +
mov [ebp+var_18] 0FFFFFFFFh +
lea eax [ebp+var_18] +
mov [ebp+var_14] 0FFFFFFFFh +
lea ecx [ebp+var_40] +
push 1  +
push offset dword_4A314C  +
push eax  +
mov eax [ebp+var_40] +
push ebx  +
call dword ptr [eax+7Ch]  +
lea ecx [ebp+var_40] +
mov [ebp+var_40] offset off_4912A4 +
mov [ebp+var_3C] offset off_491358 +
call loc_4424D0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
lea ecx [esp+0Eh] +
mov eax [ebx] +
push ecx  +
mov ecx ebx +
mov [esp+20h] edi +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_421D6D  +
cmp byte ptr [esp+0Eh] 6 +
jnz loc_421D6D  +
lea eax [esp+0Fh] +
mov ecx ebx +
push eax  +
lea edx [esp+14h] +
call loc_421690  +
add esp 4 +
test al al +
jz loc_421D6D  +
mov eax [esp+14h] +
mov esi [esp+10h] +
test eax eax +
jnz loc_421D6D  +
test esi esi +
jnz loc_421CD7  +
xor ecx ecx +
jmp loc_421CDC  +
mov ecx 1 +
xor eax eax +
cmp eax esi +
sbb eax eax +
neg eax  +
cmp ecx eax +
jnz loc_421D6D  +
cmp byte ptr [esp+0Fh] 0 +
jz loc_421D6D  +
cmp esi 1 +
jb loc_421D6D  +
mov eax [ebx] +
lea ecx [esp+0Eh] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_421D72  +
push ecx  +
mov ecx edi +
call sub_422A10  +
movzx ecx byte ptr [esp+0Eh] +
mov eax 66666667h +
imul  ecx +
mov eax [edi] +
sar edx 4 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [eax] ecx +
mov ecx 28h +
movzx eax byte ptr [esp+0Eh] +
cdq   +
idiv  ecx +
mov eax [edi] +
mov [eax+4] edx +
add esi 0FFFFFFFFh +
jz loc_421D64  +
lea edx [esp+10h] +
mov ecx ebx +
call loc_421A60  +
mov edi eax +
cmp edi esi +
ja loc_421D6D  +
mov ecx [esp+1Ch] +
lea eax [esp+10h] +
push eax  +
call sub_4229A0  +
sub esi edi +
jnz loc_421D41  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_421520  +
call loc_421520  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478430  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-10h] 0 +
push dword ptr [ebp+8]  +
lea ecx [ebp-18h] +
mov dword ptr [ebp-4] 0 +
call loc_421C70  +
mov dword ptr [ebp-4] 1 +
mov eax [esi+4] +
mov ecx [esi] +
mov esi eax +
mov edx [ebp-14h] +
sub esi ecx +
mov edi [ebp-18h] +
sub edx edi +
xor esi edx +
test esi 0FFFFFFFCh +
jnz loc_421E34  +
cmp ecx eax +
jz loc_421E0E  +
mov esi edi +
sub esi ecx +
test edi edi +
jz loc_421E21  +
mov eax [ebp-10h] +
sub eax edi +
sar eax 2 +
push eax  +
push edi  +
call loc_40FC30  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_421520  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea edx [esp+0Bh] +
push edi  +
push edx  +
mov ecx [esi+14h] +
mov eax [ecx] +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_421E8F  +
mov bl [ebp+8] +
cmp [esp+0Fh] bl +
jnz loc_421E8F  +
mov ecx [esi+14h] +
lea edi [esi+19h] +
push edi  +
lea edx [esi+20h] +
call loc_421690  +
add esp 4 +
test al al +
jz loc_421E8F  +
cmp byte ptr [edi] 0 +
jnz loc_421E86  +
test bl 20h +
jz loc_421E94  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_421520  +
call loc_421520  +
push 0FFFFFFFFh  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push ecx  +
cmp byte ptr [ecx+19h] 0 +
push ebx  +
push esi  +
push edi  +
mov byte ptr [ecx+18h] 1 +
jz loc_421F1E  +
mov eax [ecx+20h] +
or eax [ecx+24h] +
jz loc_421F62  +
jmp loc_421F69  +
mov ebx [ecx+14h] +
lea ecx [esp+0Ch] +
push 2  +
push ecx  +
mov ecx ebx +
mov word ptr [esp+14h] 0 +
mov eax [ebx] +
call dword ptr [eax+4Ch]  +
movzx esi byte ptr [esp+0Ch] +
mov edi eax +
mov eax [ebx] +
mov ecx ebx +
movzx edx byte ptr [esp+0Dh] +
shl si 8 +
push 0  +
mov eax [eax+54h] +
or si dx +
push edi  +
movzx esi si +
call eax  +
cmp eax 2 +
jnz loc_421F6E  +
test si si +
jnz loc_421F6E  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_421520  +
call loc_421520  +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+0Ch] +
cmp byte ptr [esi+19h] 0 +
jz loc_421FAB  +
mov ecx [esi+24h] +
mov eax [esi+20h] +
cmp [edi+4] ecx +
jb loc_421FAB  +
ja loc_421FA6  +
cmp [edi] eax +
jbe loc_421FAB  +
mov [edi] eax +
mov [edi+4] ecx +
push dword ptr [ebp+14h]  +
mov ecx [esi+14h] +
push dword ptr [ebp+10h]  +
push edi  +
mov eax [ecx] +
push dword ptr [ebp+8]  +
call dword ptr [eax+7Ch]  +
cmp byte ptr [esi+19h] 0 +
mov ebx eax +
mov edx [edi] +
mov edi [edi+4] +
jz loc_421FE4  +
mov eax [esi+24h] +
mov ecx [esi+20h] +
cmp eax edi +
ja loc_421FDA  +
jb loc_421FEF  +
cmp ecx edx +
jb loc_421FEF  +
sub ecx edx +
mov [esi+20h] ecx +
sbb eax edi +
mov [esi+24h] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call loc_421520  +
push 0FFFFFFFFh  +
push offset loc_47847F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 18h  +
mov dword ptr [esi] offset off_4912A4 +
mov dword ptr [esi+4] offset off_491358 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov byte ptr [esi+0Ch] 1 +
mov dword ptr [esi+10h] 100h +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+var_10] edi +
mov [ebp+var_4] 2 +
mov ebx [esi+10h] +
mov ecx ebx +
mov [edi+8] ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_4220CC  +
xor eax eax +
jmp loc_4220D3  +
mov ecx ebx +
call loc_43F720  +
mov ecx [ebp+arg_0] +
mov [edi+0Ch] eax +
mov eax esi +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi] 0 +
mov [esi+28h] ecx +
mov cl [ebp+arg_4] +
mov [esi+18h] edi +
mov [esi+14h] edi +
mov dword ptr [esi] offset off_48FDAC +
mov dword ptr [esi+4] offset off_48FD9C +
mov byte ptr [esi+2Ch] 0 +
mov [esi+2Dh] cl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4784A8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov dword ptr [esi] offset off_48FDAC +
mov dword ptr [esi+4] offset off_48FD9C +
mov [ebp+var_4] 0 +
mov byte ptr [ebp+var_4] 1 +
cmp byte ptr [esi+2Ch] 0 +
jnz loc_42218E  +
call sub_4221C0  +
jmp loc_42218E  +
mov eax offset loc_42218B +
retn   +
mov esi [ebp-14h] +
mov ecx esi +
mov dword ptr [esi] offset off_4912A4 +
mov dword ptr [esi+4] offset off_491358 +
call loc_4424D0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_49E070 +
xor eax esp +
mov [esp+1Ch+var_4] eax +
mov eax [ecx+14h] +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+1Ch+var_10] xmm0 +
mov edx [esp+10h] +
mov [esp+1Ch+var_14] ecx +
mov byte ptr [ecx+2Ch] 1 +
push ebx  +
mov ebx [esp+20h+var_10] +
push esi  +
push edi  +
test eax eax +
jz loc_42220C  +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
mov eax [eax] +
add ebx ecx +
adc edx 0 +
test eax eax +
jnz loc_4221F7  +
mov ecx [esp+28h+var_14] +
mov al [ecx+2Dh] +
xor esi esi +
mov edi [ecx+20h] +
mov ecx [ecx+28h] +
add edi ebx +
push 1  +
push 0  +
mov byte ptr [esp+30h+var_18] al +
adc esi edx +
mov eax [ecx] +
lea edx [esp+30h+var_18] +
push 1  +
push edx  +
call dword ptr [eax+14h]  +
push esi  +
mov esi [esp+3Ch+var_24] +
push edi  +
mov ecx [esi+28h] +
call sub_4215D0  +
mov eax [esi] +
lea ecx [esp+40h+var_20] +
add esp 8 +
mov [esp+38h+var_20] 0FFFFFFFFh +
mov [esp+38h+var_1C] 0FFFFFFFFh +
push 1  +
push offset dword_4A314C  +
push ecx  +
push dword ptr [esi+28h]  +
mov ecx esi +
call dword ptr [eax+7Ch]  +
mov ecx [esp+48h+var_24] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 7Ch +
push 0FFFFFFFFh  +
push offset loc_4784F0  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+7Ch+var_4] eax +
push esi  +
push eax  +
lea eax [ebp+7Ch+var_88] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+7Ch+arg_0] +
lea ecx [ebp+7Ch+var_7C] +
push 30h  +
mov [ebp+7Ch+var_70] 0FFFFFFFFh +
mov [ebp+7Ch+var_6C] 0 +
mov [ebp+7Ch+var_7C] offset off_48FE70 +
mov [ebp+7Ch+var_78] offset off_48FE60 +
mov [ebp+7Ch+var_68] eax +
mov [ebp+7Ch+var_64] 0 +
call loc_421E40  +
mov [ebp+7Ch+var_7C] offset off_48FFFC +
mov [ebp+7Ch+var_78] offset off_48FFEC +
mov [ebp+7Ch+var_80] 2 +
lea eax [ebp+7Ch+var_7C] +
push 30h  +
lea ecx [ebp+7Ch+var_2C] +
mov [ebp+7Ch+var_20] 0FFFFFFFFh +
mov byte ptr [ebp+7Ch+var_1C] 0 +
mov [ebp+7Ch+var_2C] offset off_48FE70 +
mov [ebp+7Ch+var_28] offset off_48FE60 +
mov [ebp+7Ch+var_18] eax +
mov [ebp+7Ch+var_14] 0 +
call loc_421E40  +
mov [ebp+7Ch+var_2C] offset off_48FFFC +
mov [ebp+7Ch+var_28] offset off_48FFEC +
mov byte ptr [ebp+7Ch+var_80] 5 +
lea ecx [ebp+7Ch+var_9C] +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
lea ecx [ebp+7Ch+var_2C] +
mov byte ptr [ebp+7Ch+var_80] 6 +
push ecx  +
mov ecx eax +
call loc_421D80  +
mov byte ptr [ebp+7Ch+var_80] 5 +
mov ecx [ebp+7Ch+var_9C] +
test ecx ecx +
jz loc_422368  +
mov eax [ebp+7Ch+var_94] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
cmp [ebp+7Ch+var_13] 0 +
jz loc_42243C  +
mov eax [ebp+7Ch+var_C] +
or eax [ebp+7Ch+var_8] +
jz loc_422471  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_2C] +
push ecx  +
mov ecx esi +
mov eax [eax+14h] +
call eax  +
mov byte ptr [ebp+7Ch+var_90] al +
lea ecx [ebp+7Ch+var_2C] +
call loc_421F00  +
lea eax [ebp+7Ch+var_7C] +
mov [ebp+7Ch+var_48] 0FFFFFFFFh +
push 3  +
lea ecx [ebp+7Ch+var_54] +
mov [ebp+7Ch+var_44] 0 +
mov [ebp+7Ch+var_54] offset off_48FE70 +
mov [ebp+7Ch+var_50] offset off_48FE60 +
mov [ebp+7Ch+var_40] eax +
mov [ebp+7Ch+var_3C] 0 +
call loc_421E40  +
lea eax [ebp-0Fh] +
mov byte ptr [ebp+7Ch+var_80] 9 +
push eax  +
mov eax [ebp+7Ch+var_54] +
lea ecx [ebp+7Ch+var_54] +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_42247A  +
cmp byte ptr [ebp+7Ch+var_8C+1] 0 +
jnz loc_42247A  +
push [ebp+7Ch+var_34]  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_54] +
push [ebp+7Ch+var_90]  +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
lea ecx [ebp+7Ch+var_54] +
call loc_421F00  +
lea ecx [ebp+7Ch+var_7C] +
call loc_421F00  +
lea ecx [ebp+7Ch+var_54] +
call sub_421EA0  +
lea ecx [ebp+7Ch+var_2C] +
call sub_421EA0  +
lea ecx [ebp+7Ch+var_7C] +
call sub_421EA0  +
mov ecx [ebp+7Ch+var_88] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+7Ch+var_4] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+7Ch] +
pop ebp  +
retn 4  +
mov ecx [ebp+7Ch+var_18] +
lea edx [ebp-10h] +
push 2  +
push edx  +
mov word ptr [ebp-10h] 0 +
mov eax [ecx] +
call dword ptr [eax+4Ch]  +
movzx edx byte ptr [ebp+7Ch+var_8C] +
movzx ecx byte ptr [ebp+7Ch+var_8C+1] +
shl dx 8 +
or dx cx +
cmp eax 2 +
jnz loc_42237E  +
test dx dx +
jnz loc_42237E  +
mov byte ptr [ebp+7Ch+var_90] 0 +
jmp loc_42238E  +
call loc_421520  +
int 3  +
push ebp  +
lea ebp [esp-94h] +
sub esp 94h +
push 0FFFFFFFFh  +
push offset loc_478540  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+7Ch+arg_C] eax +
push esi  +
push eax  +
lea eax [ebp+7Ch+var_88] +
mov large fs:0 eax +
mov esi ecx +
push 30h  +
push [ebp+7Ch+arg_18]  +
lea ecx [ebp+7Ch+var_4C] +
call sub_422050  +
mov [ebp+7Ch+var_4C] offset off_48FF38 +
mov [ebp+7Ch+var_48] offset off_48FF28 +
push 30h  +
lea eax [ebp+7Ch+var_4C] +
mov [ebp+7Ch+var_80] 0 +
push eax  +
lea ecx [ebp+7Ch+var_1C] +
call sub_422050  +
mov [ebp+7Ch+var_1C] offset off_48FF38 +
mov [ebp+7Ch+var_18] offset off_48FF28 +
mov byte ptr [ebp+7Ch+var_80] 1 +
lea ecx [ebp+7Ch+var_98] +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
lea ecx [ebp+7Ch+var_1C] +
mov byte ptr [ebp+7Ch+var_80] 2 +
push ecx  +
mov ecx eax +
call sub_421AC0  +
mov byte ptr [ebp+7Ch+var_80] 1 +
mov ecx [ebp+7Ch+var_98] +
test ecx ecx +
jz loc_422532  +
mov eax [ebp+7Ch+var_90] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_1C] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp+7Ch+var_1C] +
call sub_4221C0  +
push 3  +
lea eax [ebp+7Ch+var_4C] +
push eax  +
lea ecx [ebp+7Ch+var_7C] +
call sub_422050  +
push 1  +
push 0  +
push 1  +
lea eax [ebp+7Ch+var_8C] +
mov byte ptr [ebp+7Ch+var_80] 3 +
push eax  +
mov eax [ebp+7Ch+var_7C] +
lea ecx [ebp+7Ch+var_7C] +
mov byte ptr [ebp+7Ch+var_8C] 0 +
call dword ptr [eax+14h]  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_7C] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
lea ecx [ebp+7Ch+var_7C] +
call sub_4221C0  +
lea ecx [ebp+7Ch+var_4C] +
call sub_4221C0  +
lea ecx [ebp+7Ch+var_7C] +
call sub_422130  +
lea ecx [ebp+7Ch+var_1C] +
call sub_422130  +
lea ecx [ebp+7Ch+var_4C] +
call sub_422130  +
mov ecx [ebp+7Ch+var_88] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+7Ch+arg_C] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+94h] +
pop ebp  +
retn 4  +
***
sub esp 7Ch +
push 0FFFFFFFFh  +
push offset loc_478590  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+7Ch+var_4] eax +
push esi  +
push eax  +
lea eax [ebp+7Ch+var_88] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+7Ch+arg_0] +
lea ecx [ebp+7Ch+var_2C] +
push 30h  +
mov [ebp+7Ch+var_20] 0FFFFFFFFh +
mov [ebp+7Ch+var_1C] 0 +
mov [ebp+7Ch+var_2C] offset off_48FE70 +
mov [ebp+7Ch+var_28] offset off_48FE60 +
mov [ebp+7Ch+var_18] eax +
mov [ebp+7Ch+var_14] 0 +
call loc_421E40  +
mov [ebp+7Ch+var_2C] offset off_48FFFC +
mov [ebp+7Ch+var_28] offset off_48FFEC +
sub esp 0Ch +
mov [ebp+7Ch+var_80] 2 +
lea edx [ebp+7Ch+var_8C] +
lea ecx [ebp+7Ch+var_2C] +
call sub_422CE0  +
add esp 0Ch +
mov [ebp+7Ch+var_48] 0FFFFFFFFh +
lea eax [ebp+7Ch+var_2C] +
mov [ebp+7Ch+var_44] 0 +
lea ecx [ebp+7Ch+var_54] +
mov [ebp+7Ch+var_54] offset off_48FE70 +
mov [ebp+7Ch+var_50] offset off_48FE60 +
push 30h  +
mov [ebp+7Ch+var_40] eax +
mov [ebp+7Ch+var_3C] 0 +
call loc_421E40  +
mov [ebp+7Ch+var_54] offset off_48FFFC +
mov [ebp+7Ch+var_50] offset off_48FFEC +
mov byte ptr [ebp+7Ch+var_80] 5 +
lea ecx [ebp+7Ch+var_98] +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
lea ecx [ebp+7Ch+var_54] +
mov byte ptr [ebp+7Ch+var_80] 6 +
push ecx  +
mov ecx eax +
call loc_421D80  +
mov byte ptr [ebp+7Ch+var_80] 5 +
mov ecx [ebp+7Ch+var_98] +
test ecx ecx +
jz loc_4226C9  +
mov eax [ebp+7Ch+var_90] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
cmp [ebp+7Ch+var_3B] 0 +
jz loc_42274B  +
mov eax [ebp+7Ch+var_34] +
or eax [ebp+7Ch+var_30] +
jz loc_422780  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_54] +
push ecx  +
mov ecx esi +
mov eax [eax+14h] +
call eax  +
mov byte ptr [ebp+7Ch+var_8C] al +
lea ecx [ebp+7Ch+var_54] +
call loc_421F00  +
lea eax [ebp+7Ch+var_2C] +
mov [ebp+7Ch+var_70] 0FFFFFFFFh +
push 4  +
lea ecx [ebp+7Ch+var_7C] +
mov [ebp+7Ch+var_6C] 0 +
mov [ebp+7Ch+var_7C] offset off_48FE70 +
mov [ebp+7Ch+var_78] offset off_48FE60 +
mov [ebp+7Ch+var_68] eax +
mov [ebp+7Ch+var_64] 0 +
call loc_421E40  +
mov byte ptr [ebp+7Ch+var_80] 9 +
lea ecx [ebp+7Ch+var_7C] +
push [ebp+7Ch+var_C]  +
mov eax [esi] +
push [ebp+7Ch+var_8C]  +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
lea ecx [ebp+7Ch+var_7C] +
call loc_421F00  +
cmp [ebp+7Ch+var_13] 0 +
jz loc_422789  +
mov eax [ebp+7Ch+var_C] +
or eax [ebp+7Ch+var_8] +
jmp loc_4227B1  +
mov ecx [ebp+7Ch+var_40] +
lea edx [ebp+7Ch+var_8C] +
push 2  +
push edx  +
mov word ptr [ebp+7Ch+var_8C] 0 +
mov eax [ecx] +
call dword ptr [eax+4Ch]  +
movzx edx byte ptr [ebp+7Ch+var_8C] +
movzx ecx byte ptr [ebp+7Ch+var_8C+1] +
shl dx 8 +
or dx cx +
cmp eax 2 +
jnz loc_4226DB  +
test dx dx +
jnz loc_4226DB  +
mov byte ptr [ebp+7Ch+var_8C] 0 +
jmp loc_4226EB  +
mov ecx [ebp+7Ch+var_18] +
lea edx [ebp+7Ch+var_8C] +
push 2  +
push edx  +
mov word ptr [ebp+7Ch+var_8C] 0 +
mov eax [ecx] +
call dword ptr [eax+4Ch]  +
cmp eax 2 +
jnz loc_4227B3  +
movzx edx byte ptr [ebp+7Ch+var_8C] +
movzx eax byte ptr [ebp+7Ch+var_8C+1] +
shl dx 8 +
or dx ax +
jz loc_4227BE  +
mov eax [esi] +
lea ecx [ebp+7Ch+var_2C] +
push ecx  +
mov ecx esi +
call dword ptr [eax+24h]  +
lea ecx [ebp+7Ch+var_2C] +
call loc_421F00  +
lea ecx [ebp+7Ch+var_7C] +
call sub_421EA0  +
lea ecx [ebp+7Ch+var_54] +
call sub_421EA0  +
lea ecx [ebp+7Ch+var_2C] +
call sub_421EA0  +
mov ecx [ebp+7Ch+var_88] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+7Ch+var_4] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+7Ch] +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4785E6  +
mov eax large fs:0 +
push eax  +
sub esp 0A0h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 30h  +
push [ebp+arg_0]  +
lea ecx [ebp+var_40] +
call sub_422050  +
mov [ebp+var_40] offset off_48FF38 +
mov [ebp+var_3C] offset off_48FF28 +
push ecx  +
lea ecx [ebp+var_40] +
mov [ebp+var_4] 0 +
call loc_422DE0  +
add esp 4 +
lea eax [ebp+var_40] +
lea ecx [ebp+var_70] +
push 30h  +
push eax  +
call sub_422050  +
mov [ebp+var_70] offset off_48FF38 +
mov [ebp+var_6C] offset off_48FF28 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_AC] +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
lea ecx [ebp+var_70] +
mov byte ptr [ebp+var_4] 2 +
push ecx  +
mov ecx eax +
call sub_421AC0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_AC] +
test ecx ecx +
jz loc_4228B9  +
mov eax [ebp+var_A4] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax [esi] +
lea ecx [ebp+var_70] +
push ecx  +
mov ecx esi +
call dword ptr [eax+18h]  +
lea ecx [ebp+var_70] +
call sub_4221C0  +
push 4  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_A0] +
call sub_422050  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_A0] +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+20h]  +
lea ecx [ebp+var_A0] +
call sub_4221C0  +
mov eax [esi] +
lea ecx [ebp+var_40] +
push ecx  +
mov ecx esi +
call dword ptr [eax+28h]  +
lea ecx [ebp+var_40] +
call sub_4221C0  +
lea ecx [ebp+var_A0] +
call sub_422130  +
lea ecx [ebp+var_70] +
call sub_422130  +
lea ecx [ebp+var_40] +
call sub_422130  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea edx [ecx+0Ch] +
mov ecx [esp+arg_0] +
call sub_421880  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 8 +
mov eax [ecx+0Ch] +
lea edx [esp+8+var_8] +
push 1  +
push offset dword_4A314C  +
push 0FFFFFFFFh  +
add ecx 0Ch +
xorps xmm0 xmm0 +
push 0FFFFFFFFh  +
push edx  +
push [ebp+arg_0]  +
movlpd oword ptr [esp+20h+var_8] xmm0 +
call dword ptr [eax+80h]  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
mov edi [esp+4+arg_0] +
mov eax [esi+4] +
cmp edi eax +
jnb loc_4229DF  +
mov ecx [esi] +
cmp ecx edi +
ja loc_4229DF  +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_4229C8  +
push 1  +
mov ecx esi +
call loc_422A80  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4229F8  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
retn 4  +
cmp eax [esi+8] +
jnz loc_4229ED  +
push 1  +
mov ecx esi +
call loc_422A80  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4229F8  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
retn 4  +
***
mov edx [esi+4] +
mov ecx edx +
sub ecx [esi] +
sar ecx 2 +
cmp ecx 2 +
jbe loc_422A33  +
mov eax 2 +
sub eax ecx +
lea eax [edx+eax*4] +
mov [esi+4] eax +
pop esi  +
retn 4  +
jnb loc_422A6E  +
push ebx  +
mov ebx 2 +
mov eax ebx +
sub eax ecx +
mov ecx esi +
push edi  +
push eax  +
call loc_422A80  +
mov edi [esi+4] +
mov ecx ebx +
mov eax edi +
sub eax [esi] +
sar eax 2 +
sub ecx eax +
jz loc_422A5C  +
xor eax eax +
stos   +
mov eax [esi+4] +
sub eax [esi] +
sar eax 2 +
sub ebx eax +
shl ebx 2 +
add [esi+4] ebx +
pop edi  +
pop ebx  +
pop esi  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esp+8] +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax ecx +
jnb loc_422AD5  +
push ebx  +
push ebp  +
mov ebp [esi] +
mov ebx 3FFFFFFFh +
sub edx ebp +
mov eax ebx +
sar edx 2 +
sub eax edx +
cmp eax ecx +
jb loc_422ADA  +
sub edi ebp +
add edx ecx +
sar edi 2 +
xor ebp ebp +
mov eax edi +
shr eax 1 +
sub ebx eax +
cmp ebx edi +
lea ecx [eax+edi] +
cmovb ecx ebp +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_422AF0  +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
mov ebp [esp+arg_0] +
push esi  +
push edi  +
push ebp  +
mov esi ecx +
call loc_4186B0  +
mov edx [esi] +
mov edi eax +
mov ecx [esi+4] +
sub ecx edx +
push ecx  +
push edx  +
push edi  +
call loc_450F90  +
mov ecx [esi] +
add esp 0Ch +
mov ebx [esi+4] +
sub ebx ecx +
sar ebx 2 +
test ecx ecx +
jz loc_422B31  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
lea eax [edi+ebp*4] +
mov [esi+8] eax +
lea eax [edi+ebx*4] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
mov ebp [ecx] +
mov eax ebp +
mov ecx [ecx+4] +
or eax ecx +
mov [esp+8+var_4] ecx +
jnz loc_422B64  +
pop ebp  +
pop ecx  +
retn   +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov esi 40h +
nop   +
lea edi [esi+ebx] +
mov edx ecx +
shr edi 1 +
mov eax ebp +
mov ecx edi +
call sub_473E70  +
or eax edx +
jz loc_422B88  +
mov ebx edi +
jmp loc_422B8A  +
mov esi edi +
mov ecx esi +
sub ecx ebx +
cmp ecx 8 +
mov ecx [esp+14h+var_4] +
ja loc_422B70  +
shr esi 3 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
pop ecx  +
retn   +
***
test edi edi +
jnz loc_422BBB  +
xor eax eax +
pop edi  +
retn   +
push esi  +
xor esi esi +
mov edx 20h +
lea ecx [edx+esi] +
mov eax edi +
shr ecx 1 +
shr eax cl +
test eax eax +
jz loc_422BD4  +
mov esi ecx +
jmp loc_422BD6  +
mov edx ecx +
mov ecx edx +
sub ecx esi +
cmp ecx 1 +
ja loc_422BC3  +
pop esi  +
mov eax edx +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478620  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
mov esi [edx] +
lea ecx [eax-1] +
add ecx esi +
cmp ecx eax +
jnb loc_422CA3  +
push 25h  +
push offset aRounduptomulti  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_50] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
test esi esi +
jz loc_422CB4  +
lea eax [esi-1] +
test eax esi +
jnz loc_422CB4  +
and eax ecx +
sub ecx eax +
jmp loc_422CBC  +
mov eax ecx +
xor edx edx +
div  esi +
sub ecx edx +
mov eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478658  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_D+1] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [esi] +
lea ecx [ebp+var_D] +
push ecx  +
mov ecx esi +
call dword ptr [eax+48h]  +
test eax eax +
jz loc_422D6A  +
cmp byte ptr [ebp+var_D] 2 +
jnz loc_422D6A  +
lea edx [ebp+var_14] +
mov ecx esi +
call loc_421750  +
mov esi [ebp+var_14] +
mov ecx esi +
mov [ebp+var_20] esi +
call sub_40FD30  +
test esi esi +
jnz loc_422D46  +
xor edi edi +
mov [ebp+var_14] edi +
jmp loc_422D52  +
mov ecx esi +
call loc_43F720  +
mov edi eax +
mov [ebp+var_14] eax +
mov [ebp+var_1C] edi +
mov ecx [ebp+var_18] +
mov [ebp+var_4] 0 +
push esi  +
push edi  +
mov edx [ecx] +
call dword ptr [edx+44h]  +
cmp esi eax +
jz loc_422D6F  +
call loc_421520  +
mov edx edi +
cmp esi 4 +
jbe loc_422D82  +
cmp byte ptr [edx] 0 +
jnz loc_422DAB  +
dec esi  +
inc edx  +
cmp esi 4 +
ja loc_422D76  +
xor edi edi +
mov dword ptr [ebx] 0 +
test esi esi +
jz loc_422DB5  +
nop   +
mov eax [ebx] +
movzx ecx byte ptr [edi+edx] +
inc edi  +
shl eax 8 +
or ecx eax +
mov [ebx] ecx +
cmp edi esi +
jb loc_422D90  +
test ecx ecx +
jbe loc_422DB5  +
call loc_421520  +
cmp esi 4 +
jbe loc_422D82  +
call loc_421520  +
mov edx [ebp+var_14] +
xor al al +
mov ecx [ebp+var_20] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+var_D+1] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+0Ch] eax +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov ebp ecx +
mov dword ptr [esp+14h] 0 +
mov byte ptr [esp+18h] 0 +
lea eax [esp+15h] +
mov esi 4 +
test esi esi +
sub ecx 4 +
sub ecx 4 +
sub ecx 4 +
jmp sub_421500  +
***
and esp 0FFFFFFF8h +
sub esp 8 +
mov eax [ecx] +
lea edx [esp+8+var_8] +
push 1  +
push offset dword_4A314C  +
push [ebp+arg_8]  +
xorps xmm0 xmm0 +
push [ebp+arg_4]  +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push edx  +
push [ebp+arg_0]  +
call dword ptr [eax+80h]  +
mov eax [esp+20h+var_20] +
mov edx [esp+20h+var_1C] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_422F20  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_402500  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_422F36  +
mov esi [esi] +
lea eax [edi+4] +
mov byte ptr [esi] 0 +
push eax  +
mov dword ptr [edi] offset off_47C344 +
call sub_4522DA  +
add esp 4 +
test [esp+0Dh+var_1] 1 +
jz loc_422F5D  +
push 28h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
mov eax [ecx+10h] +
sub esp 8 +
xor edx edx +
push esi  +
mov esi [ecx+18h] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_423066  +
ja loc_423059  +
cmp eax esi +
jbe loc_423066  +
sub eax esi +
pop esi  +
sbb edx ecx +
mov [esp+8+var_4] edx +
add esp 8 +
retn   +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+4] xmm0 +
mov eax [esp+0Ch+var_8] +
pop esi  +
add esp 8 +
retn   +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_423095  +
push 20h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax [esp+arg_0] +
mov dword ptr [eax] 0 +
xor eax eax +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4786E6  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov ebx ecx +
mov eax [ebp+0Ch] +
push 20h  +
mov [ebp-7Ch] eax +
call sub_44FE54  +
add esp 4 +
mov esi eax +
cmp byte ptr [ebp+1Ch] 0 +
mov [ebp-80h] esi +
jz loc_423109  +
mov dword ptr [esi] offset off_4902B4 +
mov dword ptr [esi+4] offset off_4902A4 +
jmp loc_423116  +
mov dword ptr [esi] offset off_490378 +
mov dword ptr [esi+4] offset off_490368 +
mov eax [ebp+8] +
lea ecx [ebp-78h] +
sub esp 10h +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+18h] 0 +
mov [esi+10h] eax +
push esi  +
push ebx  +
mov [esi+0Ch] edi +
call sub_43DDF0  +
mov edi [ebp+20h] +
mov ecx esi +
mov dword ptr [ebp-4] 6 +
call sub_423040  +
test eax eax +
jz loc_4231C1  +
mov ebx [ebp+10h] +
mov eax [ebp-78h] +
lea ecx [ebp-78h] +
push 1  +
push 0  +
push ebx  +
push dword ptr [ebp-7Ch]  +
call dword ptr [eax+14h]  +
push 1  +
mov eax edi +
lea ecx [ebp-78h] +
bswap eax  +
push 0  +
mov [ebp-70h] eax +
lea eax [ebp-70h] +
push 4  +
push eax  +
mov eax [ebp-78h] +
push offset dword_4A314C  +
call dword ptr [eax+88h]  +
mov eax [ebp-78h] +
lea ecx [ebp-78h] +
push 1  +
push 0  +
push 0  +
push 0  +
inc edi  +
call dword ptr [eax+14h]  +
mov eax [ebp-78h] +
lea ecx [ebp-78h] +
push 1  +
push 0FFFFFFFFh  +
push 0  +
push 0  +
call dword ptr [eax+14h]  +
mov ecx esi +
call sub_423040  +
test eax eax +
jnz loc_423160  +
lea ecx [ebp-78h] +
call sub_4231F0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_478748  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov esi [edi] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
push eax  +
push [ebp+arg_8]  +
mov ecx edi +
push [ebp+arg_14]  +
call dword ptr [esi+8]  +
mov ebx eax +
mov ecx ebx +
mov [ebp+var_1C] ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_423304  +
xor esi esi +
jmp loc_42330D  +
mov ecx ebx +
call loc_43F720  +
mov esi eax +
mov [ebp+var_18] esi +
push esi  +
push [ebp+arg_14]  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_14] +
push [ebp+arg_10]  +
mov edx [edi] +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [edx+20h]  +
cmp byte ptr [ebp+var_14] 0 +
jz loc_423345  +
cmp [ebp+var_10] 0 +
jnz loc_423345  +
mov bl 1 +
jmp loc_423347  +
xor bl bl +
mov ecx [ebp+var_1C] +
xor al al +
mov edi esi +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 84h +
push 0FFFFFFFFh  +
push offset loc_478788  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+84h+var_4] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+84h+var_90] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+84h+var_94] esi +
mov eax [ebp+84h+arg_4] +
lea ecx [ebp+84h+var_A4] +
mov ebx [ebp+84h+arg_0] +
mov [ebp+84h+var_98] eax +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+3Ch]  +
mov eax [esi+8] +
lea ecx [esi+8] +
call dword ptr [eax+8]  +
mov edx [ebx] +
mov edi eax +
mov ecx ebx +
mov [ebp+84h+var_9C] edi +
call dword ptr [edx+48h]  +
mov esi [edi] +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+1Ch]  +
push eax  +
push [ebp+84h+var_A0]  +
mov ecx edi +
call dword ptr [esi+4]  +
mov ecx [ebp+84h+var_94] +
mov esi eax +
call loc_40F730  +
cmp eax esi +
jnb loc_423413  +
lea ecx [ebp+84h+var_2C] +
call sub_423A40  +
push offset unk_49C740  +
lea eax [ebp+84h+var_2C] +
push eax  +
call sub_452780  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+48h]  +
mov esi [edi] +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+1Ch]  +
mov ecx [ebp+84h+var_94] +
lea edx [ebp+84h+var_AC] +
push eax  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+3Ch]  +
mov ecx [ebp+84h+var_94] +
mov eax [eax+4] +
push eax  +
call loc_40F730  +
push eax  +
mov ecx edi +
call dword ptr [esi+8]  +
test eax eax +
jnz loc_4234BE  +
push 58h  +
push offset aTf_signerbaseT  +
lea ecx [ebp+84h+var_44] +
mov [ebp+84h+var_30] 0Fh +
mov [ebp+84h+var_34] eax +
mov byte ptr [ebp+84h+var_44] al +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+84h+var_88] 0 +
movq [ebp+84h+var_28] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+84h+var_88] 1 +
lea eax [ebp+84h+var_44] +
push 0  +
push eax  +
lea ecx [ebp+84h+var_1C] +
mov [ebp+84h+var_2C] offset off_48D038 +
mov [ebp+84h+var_20] 0 +
mov [ebp+84h+var_8] 0Fh +
mov [ebp+84h+var_C] 0 +
mov byte ptr [ebp+84h+var_1C] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp+84h+var_2C] +
mov byte ptr [ebp+84h+var_88] 0 +
push eax  +
mov [ebp+84h+var_2C] offset off_48D090 +
call sub_452780  +
mov edi [ebp+84h+arg_8] +
cmp edi eax +
jbe loc_4234F6  +
push offset aTf_signerbas_0  +
lea ecx [ebp+84h+var_5C] +
call sub_403800  +
lea eax [ebp+84h+var_5C] +
mov [ebp+84h+var_88] 2 +
push eax  +
lea ecx [ebp+84h+var_84] +
call sub_40B1F0  +
push offset unk_49C468  +
lea eax [ebp+84h+var_84] +
push eax  +
call sub_452780  +
mov edx [ebx+0Ch] +
push 0  +
push edi  +
push dword ptr [ebx+8]  +
call sub_410310  +
push edi  +
push [ebp+84h+var_98]  +
mov edx edi +
mov [ebx+0Ch] eax +
mov ecx eax +
mov [ebx+8] edi +
call sub_40A5A0  +
mov esi [ebp+84h+var_9C] +
lea eax [ebx+28h] +
add esp 14h +
mov ecx ebx +
mov esi [esi] +
push eax  +
mov eax [ebx] +
push 0  +
push 0  +
push edi  +
push [ebp+84h+var_98]  +
call dword ptr [eax+48h]  +
mov ecx [ebp+84h+var_9C] +
push eax  +
call dword ptr [esi+14h]  +
mov ecx [ebp+84h+var_90] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+84h+var_4] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+84h] +
pop ebp  +
retn 0Ch  +
***
push [esp+8+arg_0]  +
mov esi ecx +
mov [esp+0Ch+var_4] esi +
call sub_423580  +
mov dword ptr [esi] offset off_490298 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_490258 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 64h +
sub ecx 4 +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
retn 0Ch  +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_423B35  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47887C  +
mov eax large fs:0 +
push eax  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3AB8 +
cmp eax [ecx+4] +
jle loc_423BBB  +
push offset dword_4A3AB8  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AB8 0FFFFFFFFh +
jnz loc_423BBB  +
push offset loc_47AF30  +
mov dword_4A3ABC offset off_4905D4 +
mov dword_4A3AC0 offset off_4905C4 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AB8  +
call sub_450220  +
add esp 4 +
mov eax offset dword_4A3ABC +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_423BE5  +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
mov edi ecx +
call sub_423C20  +
push [esp+arg_8]  +
mov eax [edi] +
mov ecx edi +
push [esp+4+arg_4]  +
push [esp+8+arg_0]  +
call dword ptr [eax+38h]  +
pop edi  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4788A8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
push [ebp+arg_0]  +
mov eax [eax+14h] +
call eax  +
test al al +
jnz loc_423C8C  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
lea ecx [ebp+var_50] +
push ecx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+8]  +
push [ebp+arg_0]  +
lea ecx [ebp+var_38] +
mov [ebp+var_4] 0 +
push eax  +
call sub_4251C0  +
push offset unk_49C7C0  +
lea eax [ebp+var_38] +
push eax  +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push [esp+8+arg_0]  +
mov esi ecx +
mov [esp+0Ch+var_4] esi +
call sub_40B660  +
mov dword ptr [esi] offset off_4905B8 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
mov eax [ecx] +
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi [esi] +
call dword ptr [eax+20h]  +
push eax  +
push [esp+0Ch+arg_4]  +
mov ecx esi +
call dword ptr [edi+20h]  +
pop edi  +
pop esi  +
retn 8  +
***
sub esp 10h +
mov eax [ecx] +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov [esp+18h] ecx +
call dword ptr [eax+10h]  +
mov edi [esp+24h] +
mov ebx eax +
mov eax [esp+34h] +
mov ecx 0 +
test al 3 +
mov edx ebx +
mov esi 0 +
cmovnz edx ecx +
mov ecx [esp+28h] +
xor ebp ebp +
mov [esp+1Ch] edx +
test ecx ecx +
cmovnz ebp ebx +
test al 2 +
mov [esp+14h] ebp +
mov ebp ebx +
cmovnz ebp esi +
mov esi [esp+2Ch] +
mov [esp+10h] ebp +
mov ebp [esp+30h] +
test al 8 +
jz loc_423D79  +
mov eax ebp +
neg edx  +
sub eax ebx +
mov [esp+1Ch] edx +
add edi eax +
mov eax ebp +
sub eax ebx +
add ecx eax +
mov eax ebp +
sub eax ebx +
mov [esp+28h] ecx +
add esi eax +
mov eax [esp+14h] +
neg eax  +
mov [esp+14h] eax +
mov eax [esp+10h] +
neg eax  +
mov [esp+10h] eax +
mov eax [esp+34h] +
cmp ebp ebx +
jb loc_423DE5  +
mov edx eax +
and edx 4 +
and eax 1 +
mov [esp+2Ch] edx +
mov [esp+34h] eax +
test edx edx +
jz loc_423DAE  +
push ebx  +
mov edx ecx +
mov ecx esi +
push edi  +
call sub_43F260  +
mov ecx [esp+20h] +
add esp 8 +
mov eax [ecx] +
push esi  +
push 0  +
push esi  +
jmp loc_423DB9  +
mov edx [esp+18h] +
push esi  +
push ecx  +
push edi  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
cmp dword ptr [esp+34h] 0 +
jz loc_423DC7  +
inc byte ptr [ebx+edi-1]  +
mov ecx [esp+28h] +
sub ebp ebx +
add ecx [esp+14h] +
add edi [esp+1Ch] +
add esi [esp+10h] +
mov edx [esp+2Ch] +
mov [esp+28h] ecx +
cmp ebp ebx +
jnb loc_423D90  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
pop ebx  +
add esp 10h +
retn 14h  +
***
mov eax [ecx] +
mov eax [eax+14h] +
call eax  +
and eax 1 +
retn   +
***
lea edx [esp+3] +
push 1  +
push edx  +
call dword ptr [eax+20h]  +
mov al [esp+3] +
pop ecx  +
retn   +
***
push ebx  +
push ebp  +
mov ebp [esp+0Ch] +
mov ebx ecx +
push esi  +
push edi  +
mov edi [esp+18h] +
sub edi ebp +
jnz loc_423E46  +
xor esi esi +
jmp loc_423E70  +
xor edx edx +
mov esi 20h +
lea ecx [esi+edx] +
mov eax edi +
shr ecx 1 +
shr eax cl +
test eax eax +
jz loc_423E61  +
mov edx ecx +
jmp loc_423E63  +
mov esi ecx +
mov eax esi +
sub eax edx +
cmp eax 1 +
ja loc_423E50  +
mov eax [ebx] +
lea ecx [esp+18h] +
push 4  +
push ecx  +
mov ecx ebx +
call dword ptr [eax+20h]  +
cmp esi 20h +
jnb loc_423E93  +
mov eax 1 +
mov ecx esi +
shl eax cl +
dec eax  +
and eax [esp+18h] +
jmp loc_423E97  +
mov eax [esp+18h] +
mov [esp+18h] eax +
cmp eax edi +
ja loc_423E70  +
pop edi  +
pop esi  +
add eax ebp +
pop ebp  +
pop ebx  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4788D0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_4] +
xorps xmm0 xmm0 +
mov eax [ebp+arg_0] +
push 0  +
push edx  +
mov [ebp+var_24] eax +
mov eax [ecx] +
mov [ebp+var_20] edx +
lea edx [ebp+var_30] +
push offset dword_4A314C  +
push edx  +
mov [ebp+var_30] offset off_490378 +
mov [ebp+var_2C] offset off_490368 +
movlpd oword ptr [ebp-18h] xmm0 +
call dword ptr [eax+28h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
push esi  +
push edi  +
push 0  +
push [ebp+arg_0]  +
mov edi ecx +
push offset dword_4A314C  +
push ecx  +
mov esi [edi] +
call sub_423B40  +
add esp 4 +
mov ecx edi +
push eax  +
call dword ptr [esi+28h]  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47890B  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 128h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-130h] ecx +
mov eax [ebx+8] +
lea edx [ebp-128h] +
mov [ebp-134h] eax +
mov esi 100h +
mov eax [ebx+0Ch] +
mov [ebp-138h] eax +
mov [ebp-20h] esi +
mov byte ptr [ebp-27h] 1 +
mov [ebp-1Ch] edx +
mov edi [ebx+10h] +
mov eax edi +
mov ecx [ebx+14h] +
or eax ecx +
mov dword ptr [ebp-4] 0 +
mov [ebp-12Ch] ecx +
jz loc_424048  +
test ecx ecx +
ja loc_423FF3  +
jb loc_423FF1  +
cmp edi esi +
jnb loc_423FF3  +
mov esi edi +
mov ecx [ebp-130h] +
push esi  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov ecx [ebp-134h] +
push 1  +
push 0  +
push esi  +
push dword ptr [ebp-1Ch]  +
mov eax [ecx] +
push dword ptr [ebp-138h]  +
call dword ptr [eax+88h]  +
mov ecx [ebp-12Ch] +
sub edi esi +
mov edx [ebp-1Ch] +
mov eax edi +
sbb ecx 0 +
or eax ecx +
mov [ebp-12Ch] ecx +
jz loc_42403B  +
mov esi [ebp-20h] +
jmp loc_423FE7  +
lea eax [ebp-128h] +
cmp edx eax +
jnz loc_424050  +
mov esi [ebp-20h] +
mov edi edx +
xor al al +
mov ecx esi +
stos   +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 10h  +
***
mov esi [esp+8+arg_0] +
mov ecx esi +
push 7  +
push offset aNullrng  +
mov [esp+10h+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478950  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 5Ch  +
push offset aNullrngNullrng  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 0Fh +
mov dword ptr [ebp-40h] 0 +
mov byte ptr [ebp-50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-50h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-38h] offset off_48D090 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_478988  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+arg_4] +
push esi  +
call sub_424220  +
mov ecx esi +
mov [ebp+var_14] esi +
call sub_40FD30  +
test esi esi +
jnz loc_4241C8  +
xor edi edi +
mov [ebp+arg_4] edi +
jmp loc_4241D4  +
mov ecx esi +
call loc_43F720  +
mov edi eax +
mov [ebp+arg_4] eax +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
mov ecx ebx +
mov edx [ebx] +
push esi  +
push edi  +
call dword ptr [edx+38h]  +
mov edx [ebp+arg_0] +
mov ecx edi +
push esi  +
call loc_43F490  +
push [ebp+arg_4]  +
mov bl al +
mov ecx esi +
xor al al +
stos   +
call sub_45B0EB  +
add esp 8 +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4789F1  +
mov eax large fs:0 +
push eax  +
sub esp 0BCh +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov esi [ebp+arg_0] +
call dword ptr [eax+1Ch]  +
cmp esi eax +
jbe loc_424329  +
push ecx  +
mov edx esi +
lea ecx [ebp+var_50] +
call sub_423900  +
mov esi eax +
mov [ebp+var_4] 0 +
mov ecx edi +
mov edx [edi] +
call dword ptr [edx+1Ch]  +
mov edx eax +
lea ecx [ebp+var_68] +
call sub_423900  +
push eax  +
mov edx offset aHashtransforma +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_80] +
call sub_424EA0  +
push offset aByteDigestTo  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_98] +
call sub_410020  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_B0] +
call sub_410070  +
push offset aBytes  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_C8] +
call sub_410020  +
add esp 14h +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 5 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-4] +
add ecx 0FFFFFFFCh +
call dword ptr [eax+0A0h]  +
test eax eax +
jz loc_424368  +
lea ecx [eax+4] +
mov eax [ecx] +
jmp dword ptr [eax+4]  +
xor eax eax +
retn   +
***
mov eax [ecx-4] +
add ecx 0FFFFFFFCh +
call dword ptr [eax+0A4h]  +
test eax eax +
jz locret_424388  +
lea ecx [eax+4] +
mov eax [ecx] +
jmp dword ptr [eax+8]  +
retn 8  +
***
mov eax [ecx] +
push [esp+arg_0]  +
call dword ptr [eax+1Ch]  +
retn 8  +
***
mov eax [ecx] +
push [esp+arg_8]  +
push [esp+4+arg_0]  +
mov eax [eax+20h] +
call eax  +
retn 0Ch  +
***
mov eax [ecx] +
push [esp+arg_4]  +
mov eax [eax+24h] +
call eax  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478A28  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
cmp dword ptr [eax+10h] 0 +
setz al  +
test al al +
mov eax [ecx] +
jz loc_42442A  +
push edx  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
lea edx [ebp+var_50] +
push edx  +
call dword ptr [eax+8]  +
push eax  +
lea ecx [ebp+var_38] +
mov [ebp+var_4] 0 +
call sub_4250F0  +
push offset unk_49C780  +
lea eax [ebp+var_38] +
push eax  +
call sub_452780  +
int 3  +
push ecx  +
push esi  +
push dword ptr [esp+0Ch]  +
mov esi ecx +
mov [esp+8] esi +
call sub_40B850  +
mov dword ptr [esi] offset off_490560 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478A28  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
cmp dword ptr [eax+10h] 0 +
setz al  +
test al al +
mov eax [ecx] +
jz loc_4244D3  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edx  +
call dword ptr [eax+14h]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
lea edx [ebp-50h] +
push edx  +
call dword ptr [eax+8]  +
push eax  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 0 +
call sub_4250F0  +
push offset unk_49C780  +
lea eax [ebp-38h] +
push eax  +
call sub_452780  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478A28  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
cmp dword ptr [eax+10h] 0 +
setz al  +
test al al +
mov eax [ecx] +
jz loc_424591  +
push dword ptr [ebp+14h]  +
mov eax [eax+2Ch] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call eax  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
lea edx [ebp-50h] +
push edx  +
call dword ptr [eax+8]  +
push eax  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 0 +
call sub_4250F0  +
push offset unk_49C780  +
lea eax [ebp-38h] +
push eax  +
call sub_452780  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478A28  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
cmp dword ptr [eax+10h] 0 +
setz al  +
test al al +
mov eax [ecx] +
jz loc_42461E  +
push dword ptr [ebp+10h]  +
mov eax [eax+30h] +
push dword ptr [ebp+0Ch]  +
call eax  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
lea edx [ebp-50h] +
push edx  +
call dword ptr [eax+8]  +
push eax  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 0 +
call sub_4250F0  +
push offset unk_49C780  +
lea eax [ebp-38h] +
push eax  +
call sub_452780  +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
jz loc_424680  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A0h]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+3Ch] +
call eax  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
call sub_423B40  +
mov edx [esi] +
lea ecx [esp+10h+var_8] +
push 1  +
push offset dword_4A314C  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ecx  +
xorps xmm0 xmm0 +
mov ecx esi +
push eax  +
movlpd oword ptr [esp+28h+var_8] xmm0 +
call dword ptr [edx+80h]  +
mov eax [esp+28h+var_20] +
mov edx [esp+28h+var_1C] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
mov eax [esi] +
jz loc_4246E7  +
mov ecx esi +
call dword ptr [eax+0A0h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
mov eax [edx+40h] +
add esp 4 +
jmp eax  +
lea ecx [esp+7] +
push ecx  +
mov ecx esi +
call dword ptr [eax+50h]  +
neg eax  +
pop esi  +
sbb eax eax +
neg eax  +
pop ecx  +
retn   +
***
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
mov ecx esi +
mov eax [esi] +
jz loc_424721  +
call dword ptr [eax+0A4h]  +
pop esi  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+48h]  +
push 1  +
push [esp+4+arg_0]  +
call dword ptr [eax+44h]  +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478A50  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_4] +
call dword ptr [eax+0A4h]  +
test eax eax +
mov eax [esi] +
jz loc_424784  +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push edi  +
push ebx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+44h]  +
jmp loc_4247C1  +
push 1  +
push offset dword_4A314C  +
lea ecx [ebp+var_18] +
mov [ebp+var_38] offset off_490378 +
push ecx  +
lea ecx [ebp+var_38] +
mov [ebp+var_34] offset off_490368 +
xorps xmm0 xmm0 +
mov [ebp+var_2C] ebx +
push ecx  +
mov ecx esi +
mov [ebp+var_28] edi +
movlpd oword ptr [ebp-20h] xmm0 +
mov [ebp+var_18] edi +
mov [ebp+var_14] 0 +
call dword ptr [eax+7Ch]  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
mov ecx esi +
mov eax [esi] +
jz loc_424801  +
call dword ptr [eax+0A0h]  +
pop esi  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+50h]  +
push 1  +
push [esp+4+arg_0]  +
call dword ptr [eax+4Ch]  +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478A80  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov ebx [ebp+arg_0] +
mov edi [ebp+arg_4] +
call dword ptr [eax+0A0h]  +
test eax eax +
jz loc_424864  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A0h]  +
push edi  +
push ebx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+4Ch]  +
jmp loc_42488F  +
push ecx  +
push 0  +
push edi  +
lea eax [ebp+var_30] +
mov [ebp+var_30] offset off_490378 +
xorps xmm0 xmm0 +
mov [ebp+var_2C] offset off_490368 +
push eax  +
mov ecx esi +
mov [ebp+var_24] ebx +
mov [ebp+var_20] edi +
movlpd oword ptr [ebp-18h] xmm0 +
call sub_422EC0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+14h+var_4] eax +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_4248FE  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
mov edx [eax] +
mov eax [edx+54h] +
call eax  +
pop esi  +
mov ecx [esp+1Ch+var_C] +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [ebp+arg_0] +
mov [esp+18h+var_10] eax +
mov eax [ebp+arg_4] +
mov [esp+18h+var_C] eax +
call sub_423B40  +
mov edx [esi] +
lea ecx [esp+18h+var_10] +
push 1  +
push offset dword_4A314C  +
push ecx  +
push eax  +
mov ecx esi +
call dword ptr [edx+7Ch]  +
mov ecx [esp+28h+var_14] +
mov eax [esp+28h+var_20] +
mov edx [esp+28h+var_1C] +
pop esi  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
mov ecx esi +
mov eax [esi] +
jz loc_424963  +
call dword ptr [eax+0A0h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
mov eax [edx+58h] +
jmp eax  +
mov eax [eax+3Ch] +
pop esi  +
jmp eax  +
***
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
jz loc_424991  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A0h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
jmp dword ptr [edx+5Ch]  +
call sub_423B40  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A0h]  +
test eax eax +
jz loc_4249BA  +
mov eax [esi] +
sub esp 0Ch +
mov ecx esi +
call dword ptr [eax+0A0h]  +
mov ecx eax +
call sub_424B80  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esi] +
call dword ptr [eax+0A0h]  +
test eax eax +
mov ecx esi +
mov eax [esi] +
jz loc_4249E3  +
call dword ptr [eax+0A0h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
mov eax [edx+60h] +
jmp eax  +
call dword ptr [eax+5Ch]  +
neg eax  +
pop esi  +
sbb eax eax +
neg eax  +
retn   +
***
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424A13  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
mov eax [edx+64h] +
jmp eax  +
xor al al +
pop esi  +
retn   +
***
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424A41  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
pop esi  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+68h]  +
mov eax [esp+arg_0] +
mov [esp+arg_0] eax +
call sub_423B40  +
push 1  +
push offset dword_4A314C  +
lea ecx [esp+8+arg_0] +
push ecx  +
push eax  +
mov ecx esi +
call loc_424A70  +
mov eax [esp+10h+var_8] +
pop esi  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424AAA  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
mov [esp+0Ch] ecx +
mov dword ptr [eax] 0 +
test ecx ecx +
jz loc_424B59  +
mov ebx [ebp+10h] +
mov edi [ebp+8] +
mov eax [esi] +
mov ecx esi +
mov eax [eax+60h] +
call eax  +
test al al +
jz loc_424B59  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+40h] +
call eax  +
test al al +
jz loc_424B17  +
push dword ptr [ebp+14h]  +
mov eax [esi] +
lea ecx [esp+14h] +
push ebx  +
push ecx  +
push edi  +
mov ecx esi +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov dword ptr [esp+24h] 0FFFFFFFFh +
call dword ptr [eax+7Ch]  +
test eax eax +
jnz loc_424B5B  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+40h] +
call eax  +
test al al +
jnz loc_424AE5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+38h]  +
test eax eax +
jns loc_424B27  +
or ecx 0FFFFFFFFh +
jmp loc_424B2A  +
lea ecx [eax+1] +
push dword ptr [ebp+14h]  +
mov eax [edi] +
push ecx  +
push 0  +
push 0  +
push ebx  +
mov ecx edi +
call dword ptr [eax+88h]  +
test eax eax +
jnz loc_424B64  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+64h]  +
mov eax [ebp+0Ch] +
mov ecx [esp+0Ch] +
inc dword ptr [eax]  +
cmp [eax] ecx +
jb loc_424AC7  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [esi] +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424BD1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
mov ecx eax +
pop esi  +
mov edx [eax] +
jmp dword ptr [edx+6Ch]  +
mov eax [esi] +
mov ecx esi +
push 0FFFFFFFFh  +
call dword ptr [eax+68h]  +
test eax eax +
jnz loc_424BD1  +
nop   +
mov eax [esi] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov eax [eax+54h] +
call eax  +
or eax edx +
jnz loc_424BE0  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424C3A  +
mov edi [ebp+0Ch] +
mov ebx [ebp+8] +
push dword ptr [ebp+10h]  +
lea eax [esp+10h] +
mov dword ptr [esp+10h] 0FFFFFFFFh +
push edi  +
push eax  +
push ebx  +
mov ecx esi +
call loc_424A70  +
test eax eax +
jnz loc_424C92  +
cmp [esp+0Ch] eax +
jnz loc_424C40  +
push dword ptr [ebp+10h]  +
mov eax [esi] +
lea ecx [esp+14h] +
push edi  +
push ecx  +
push ebx  +
mov ecx esi +
mov dword ptr [esp+20h] 0FFFFFFFFh +
mov dword ptr [esp+24h] 0 +
call dword ptr [eax+7Ch]  +
test eax eax +
jnz loc_424C92  +
mov eax [esp+10h] +
or eax [esp+14h] +
jnz loc_424C63  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi] +
call dword ptr [eax+0A4h]  +
test eax eax +
jz loc_424CC4  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
pop esi  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+98h]  +
pop esi  +
retn 4  +
***
mov eax [esi] +
push 0FFFFFFFFh  +
push offset loc_478ABE  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_4] +
mov [ebp+arg_4] esi +
push 0  +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
mov eax [ecx] +
push esi  +
push [ebp+arg_0]  +
call dword ptr [eax+30h]  +
mov edi eax +
mov [ebp+var_4] 1 +
test esi esi +
jz loc_424D74  +
mov edx [esi] +
mov ecx esi +
push 1  +
call dword ptr [edx]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478AEE  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx] +
mov edi [ebp+arg_0] +
push edi  +
call dword ptr [eax+24h]  +
mov esi eax +
mov [ebp+arg_0] esi +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
mov ecx esi +
mov eax [esi] +
push [ebp+arg_4]  +
call dword ptr [eax+0Ch]  +
mov eax [ebx] +
mov ecx ebx +
push 0  +
push [ebp+arg_C]  +
push esi  +
push edi  +
call dword ptr [eax+30h]  +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx esi +
mov edx [esi] +
push 1  +
call dword ptr [edx]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_478AEE  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx] +
mov edi [ebp+arg_0] +
push edi  +
call dword ptr [eax+24h]  +
mov esi eax +
mov [ebp+arg_0] esi +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
mov ecx ebx +
push [ebp+arg_4]  +
mov eax [ebx] +
push esi  +
call dword ptr [eax+28h]  +
push [ebp+arg_10]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_C]  +
call dword ptr [eax+0Ch]  +
mov eax [ebx] +
mov ecx ebx +
push 0  +
push [ebp+arg_14]  +
push esi  +
push edi  +
call dword ptr [eax+30h]  +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx esi +
mov edx [esi] +
push 1  +
call dword ptr [edx]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
sub esp 8 +
cmp byte ptr [edx] 0 +
push esi  +
push edi  +
mov edi ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_8] edi +
jnz loc_424EBC  +
xor esi esi +
jmp loc_424ECA  +
mov esi edx +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_424EC1  +
sub esi ecx +
push esi  +
push edx  +
push ecx  +
mov ecx [esp+1Ch+arg_0] +
call sub_424EF0  +
push eax  +
mov ecx edi +
call sub_40ED80  +
mov eax edi +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
mov edi [esp+arg_4] +
mov esi ecx +
test edi edi +
jz loc_424F55  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_424F08  +
mov eax [esi] +
jmp loc_424F0A  +
mov eax esi +
cmp edi eax +
jb loc_424F55  +
cmp ecx 10h +
jb loc_424F17  +
mov edx [esi] +
jmp loc_424F19  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax edi +
jbe loc_424F55  +
cmp ecx 10h +
jb loc_424F3E  +
push [esp+arg_8]  +
mov eax [esi] +
sub edi eax +
push edi  +
push esi  +
push ecx  +
mov ecx esi +
call loc_4103F0  +
pop edi  +
pop esi  +
retn 0Ch  +
push [esp+arg_8]  +
mov eax esi +
sub edi eax +
push edi  +
push esi  +
push ecx  +
mov ecx esi +
call loc_4103F0  +
pop edi  +
pop esi  +
retn 0Ch  +
mov ecx [esi+10h] +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [esp+4+arg_8] +
sub eax ecx +
cmp eax ebx +
jbe loc_424FD5  +
test ebx ebx +
jz loc_424FCD  +
push ebp  +
lea ebp [ecx+ebx] +
mov ecx esi +
push 0  +
push ebp  +
call loc_402840  +
test al al +
jz loc_424FCC  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_424F88  +
mov edx [esi] +
jmp loc_424F8A  +
mov edx esi +
cmp eax 10h +
jb loc_424F93  +
mov eax [esi] +
jmp loc_424F95  +
mov eax esi +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_424FA9  +
push ecx  +
push edx  +
add eax ebx +
push eax  +
call loc_450F90  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
jb loc_424FB3  +
mov eax [esi] +
jmp loc_424FB5  +
mov eax esi +
test ebx ebx +
jz loc_424FC4  +
push ebx  +
push edi  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
push ebp  +
mov ecx esi +
call sub_4028C0  +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn 0Ch  +
push offset aStringTooLong  +
call sub_44EC5C  +
int 3  +
sub ecx 4 +
jmp sub_423BD0  +
***
retn 10h  +
***
mov esi [esp+8+arg_0] +
mov ecx esi +
push 9  +
push offset aBitbucket  +
mov [esp+10h+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478950  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 39h  +
push offset aRandomnumberge  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 0Fh +
mov dword ptr [ebp-40h] 0 +
mov byte ptr [ebp-50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-50h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-38h] offset off_48D090 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_478690  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_28] +
push offset aThisObjectDoes  +
mov [ebp+var_30] esi +
call loc_425330  +
add esp 4 +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 0 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov ecx [ebp+var_14] +
mov dword ptr [esi] offset off_48D090 +
cmp ecx 10h +
jb loc_42518D  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_490560 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478B38  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_74] ebx +
mov edx [ebp+arg_4] +
mov edi [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_70] +
mov [ebp+var_78] ebx +
call sub_423900  +
mov esi eax +
push offset asc_48C984  +
mov edx edi +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_58] +
call loc_425330  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_40] +
call sub_410070  +
push offset aIsNotAValidKey  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_28] +
call sub_410020  +
add esp 10h +
xorps xmm0 xmm0 +
movq qword ptr [ebx+4] xmm0 +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebx+10h] +
push 0FFFFFFFFh  +
mov dword ptr [ebx] offset off_48D038 +
mov dword ptr [ebx+0Ch] 1 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax [ebp+var_14] +
mov dword ptr [ebx] offset off_48C750 +
cmp eax 10h +
jb loc_425291  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_402500  +
mov eax [ebp+var_2C] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_4252B8  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_402500  +
mov eax [ebp+var_44] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
cmp eax 10h +
jb loc_4252DF  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_402500  +
mov ecx [ebp+var_5C] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
cmp ecx 10h +
jb loc_425306  +
inc ecx  +
push ecx  +
push [ebp+var_70]  +
lea ecx [ebp+var_70] +
call loc_402500  +
mov eax ebx +
mov dword ptr [ebx] offset off_4905B8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478809  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp-14h] ebx +
mov esi ecx +
mov [ebp-18h] esi +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_42538F  +
mov eax [esi] +
jmp loc_425391  +
mov eax esi +
mov byte ptr [eax] 0 +
mov edi [ebp+8] +
mov dword ptr [ebp-4] 0 +
mov ebx [ebx+10h] +
mov dword ptr [ebp-10h] 1 +
cmp byte ptr [edi] 0 +
jnz loc_4253B1  +
xor ecx ecx +
jmp loc_4253BF  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4253B6  +
sub ecx edx +
lea eax [ecx+ebx] +
mov ebx [esi+10h] +
cmp ebx eax +
ja loc_4253EF  +
cmp [esi+14h] eax +
jz loc_4253EF  +
push 1  +
push eax  +
mov ecx esi +
call loc_402840  +
test al al +
jz loc_4253EF  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_4253E9  +
mov eax [esi] +
jmp loc_4253EB  +
mov eax esi +
mov byte ptr [eax+ebx] 0 +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call loc_40FB30  +
cmp byte ptr [edi] 0 +
jnz loc_425406  +
xor ecx ecx +
jmp loc_425419  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_425410  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx esi +
call loc_40FA00  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478B88  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+8] +
lea ecx [ebp-14h] +
push ecx  +
push offset off_49F374  +
push offset aInsertlinebrea  +
mov eax [ebx] +
mov ecx ebx +
mov byte ptr [ebp-14h] 1 +
call dword ptr [eax+4]  +
mov eax [ebx] +
lea ecx [ebp+8] +
push ecx  +
push offset off_49F8D4  +
push offset aMaxlinelength  +
mov ecx ebx +
mov dword ptr [ebp+8] 48h +
call dword ptr [eax+4]  +
mov cl [ebp-14h] +
mov eax offset unk_48741C +
mov esi [esi+44h] +
test cl cl +
mov edi offset asc_48FD64 +
mov dword ptr [ebp-1Ch] 6 +
cmovz edi eax +
mov dword ptr [ebp-54h] 0 +
xor eax eax +
test cl cl +
cmovnz eax [ebp+8] +
xor ecx ecx +
mov [ebp-18h] eax +
mov dword ptr [ebp+8] offset aAbcdefghijklmn +
call sub_40FD30  +
mov dword ptr [ebp-50h] 0 +
test edi edi +
jz loc_4254FB  +
mov eax edi +
lea edx [eax+1] +
nop   +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4254F0  +
sub eax edx +
jmp loc_4254FD  +
xor eax eax +
mov [ebp-60h] edi +
mov [ebp-5Ch] eax +
mov byte ptr [ebp-64h] 0 +
mov dword ptr [ebp-4] 1 +
xor ecx ecx +
mov dword ptr [ebp-3Ch] 0 +
call sub_40FD30  +
mov dword ptr [ebp-38h] 0 +
test edi edi +
jz loc_42553B  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_425530  +
sub ecx edx +
jmp loc_42553D  +
xor ecx ecx +
mov [ebp-48h] edi +
mov [ebp-44h] ecx +
mov byte ptr [ebp-4Ch] 0 +
push ecx  +
lea eax [ebp+8] +
mov byte ptr [ebp-4] 3 +
push eax  +
mov edx offset aEncodinglookup +
lea ecx [ebp-34h] +
call sub_425630  +
add esp 8 +
mov byte ptr [ebp-4] 4 +
movzx ecx byte ptr [eax+8] +
push ecx  +
push ecx  +
push offset aPaddingbyte  +
mov ecx eax +
call sub_425750  +
movzx ecx byte ptr [eax+8] +
push ecx  +
lea ecx [ebp-18h] +
push ecx  +
push offset aGroupsize  +
mov ecx eax +
call sub_410620  +
movzx ecx byte ptr [eax+8] +
push ecx  +
lea ecx [ebp-4Ch] +
push ecx  +
push offset aSeparator  +
mov ecx eax +
call sub_410550  +
movzx ecx byte ptr [eax+8] +
push ecx  +
lea ecx [ebp-64h] +
push ecx  +
push offset aTerminator  +
mov ecx eax +
call sub_410550  +
push 1  +
lea ecx [ebp-1Ch] +
push ecx  +
push offset aLog2base  +
mov ecx eax +
call sub_410620  +
mov dword ptr [ebp-28h] offset off_4906F8 +
lea ecx [ebp-28h] +
mov [ebp-24h] ebx +
mov [ebp-20h] eax +
mov eax [esi] +
push 0FFFFFFFFh  +
push ecx  +
mov ecx esi +
call dword ptr [eax+28h]  +
mov ecx [ebp-30h] +
test ecx ecx +
jz loc_4255EE  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp-38h] +
xor al al +
mov ecx [ebp-3Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [ebp-50h] +
add esp 4 +
mov ecx [ebp-54h] +
mov edi edx +
xor al al +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476F98  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_20] offset off_490AAC +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 1 +
push ecx  +
push [ebp+arg_0]  +
lea ecx [ebp+var_20] +
mov [ebp+var_4] 0 +
push edx  +
call sub_4256E0  +
mov dword ptr [esi] offset off_490AAC +
mov dword ptr [esi+4] 0 +
mov cl [eax+8] +
mov [esi+8] cl +
mov edi [eax+4] +
mov dword ptr [eax+4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4256B3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_1C] +
mov [esi+4] edi +
test ecx ecx +
jz loc_4256C3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push ebp  +
push esi  +
push edi  +
push 14h  +
mov edi ecx +
call sub_44FE54  +
mov bl [esp+18h+arg_8] +
mov esi eax +
mov edx [esp+18h+arg_0] +
add esp 4 +
mov [esp+14h+var_4] esi +
mov [esi+4] edx +
mov [esi+8] bl +
mov byte ptr [esi+9] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_4906E8 +
mov byte ptr [esi+10h] 3Dh +
mov ebp [edi+4] +
mov dword ptr [edi+4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4257A1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebp +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4257B1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [edi+4] esi +
mov eax edi +
mov [edi+8] bl +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 0Ch  +
***
mov eax ecx +
mov ecx [esp+arg_0] +
test ecx ecx +
jz locret_4257E3  +
mov [esp+arg_0] eax +
jmp sub_4258D0  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [esp+8+arg_8] +
mov esi ecx +
jz loc_42582D  +
push offset unk_49F8D8  +
push offset unk_4A0C74  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_42582D  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [esp+10h+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_425847  +
push [esp+8+arg_4]  +
mov ecx [esp+0Ch+arg_0] +
mov edx offset off_4A0C70 +
call sub_40B510  +
mov al [esi+10h] +
add esp 4 +
mov [edi] al +
pop edi  +
pop esi  +
retn 0Ch  +
***
mov eax ecx +
mov ecx [esp+arg_0] +
test ecx ecx +
jz locret_425863  +
mov [esp+arg_0] eax +
jmp sub_425930  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [esp+8+arg_8] +
mov esi ecx +
jz loc_4258AD  +
push offset unk_49F8D8  +
push offset unk_4A0B58  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_4258AD  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [esp+10h+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_4258C7  +
push [esp+8+arg_4]  +
mov ecx [esp+0Ch+arg_0] +
mov edx offset off_4A0B54 +
call sub_40B510  +
mov eax [esi+10h] +
add esp 4 +
mov [edi] eax +
pop edi  +
pop esi  +
retn 0Ch  +
***
mov esi ecx +
push edi  +
mov edi [esp+4+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_425911  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_4906E8 +
mov al [edi+10h] +
mov [esi+10h] al +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
mov esi ecx +
push edi  +
mov edi [esp+4+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_425971  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_4906D8 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478690  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
push 19h  +
push offset aIntegerDivisio  +
lea ecx [ebp+var_28] +
mov [ebp+var_30] esi +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
lea eax [ebp+var_28] +
mov dword ptr [esi+0Ch] 6 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_425A38  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_490A9C +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478690  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
push 32h  +
push offset aIntegerNoInteg  +
lea ecx [ebp+var_28] +
mov [ebp+var_30] esi +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
lea eax [ebp+var_28] +
mov dword ptr [esi+0Ch] 6 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_425B08  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_490A90 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_425B79  +
mov edx [ecx+0Ch] +
cmp dword ptr [edx] 0 +
jnz loc_425B79  +
mov eax [ecx+8] +
test eax eax +
jz loc_425B6C  +
lea ecx [eax-1] +
lea ecx [edx+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_425B68  +
sub ecx 4 +
sub eax 1 +
jnz loc_425B50  +
mov ecx 1 +
test cl cl +
setz al  +
retn   +
***
test eax eax +
jnz loc_425B79  +
mov ecx 1 +
xor eax eax +
test cl cl +
setz al  +
retn   +
***
xor ecx ecx +
xor eax eax +
test cl cl +
setz al  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478BB8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_0]  +
lea eax [ebp+var_20] +
push eax  +
call sub_435420  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_425BF9  +
call sub_4746E8  +
jmp loc_425BFE  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478BE8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0 +
call loc_432E00  +
push [ebp+arg_4]  +
mov ecx eax +
mov [ebp+var_4] 0 +
call loc_4350B0  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_432E00  +
mov edx [ebp+var_1C] +
xor eax eax +
mov ebx [ebp+var_18] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_425C96  +
call sub_4746E8  +
jmp loc_425C9B  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478BE8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_24] +
mov [ebp+var_10] 0 +
call loc_432E00  +
push [ebp+arg_4]  +
mov ecx eax +
mov [ebp+var_4] 0 +
call loc_434F40  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_432E00  +
mov edx [ebp+var_1C] +
xor eax eax +
mov ebx [ebp+var_18] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_425D36  +
call sub_4746E8  +
jmp loc_425D3B  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push [esp+8+arg_0]  +
mov [esp+0Ch+var_4] 0 +
call sub_434C80  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 4  +
***
sub esp 8 +
push ecx  +
push [esp+0Ch+arg_0]  +
mov [esp+10h+var_4] 0 +
call sub_435420  +
mov eax [esp+8+arg_0] +
add esp 8 +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_490A90 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_425E69  +
cmp dword ptr [edx+10h] 1 +
jz loc_425E5C  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setz al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setz al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_425E7A  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setz al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setz al  +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_425EB9  +
cmp dword ptr [edx+10h] 1 +
jz loc_425EAC  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setnle al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setnle al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_425ECA  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setnle al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setnle al  +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_425F09  +
cmp dword ptr [edx+10h] 1 +
jz loc_425EFC  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setns al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setns al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_425F1A  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setns al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setns al  +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_425F59  +
cmp dword ptr [edx+10h] 1 +
jz loc_425F4C  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
sets al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
sets al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_425F6A  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
sets al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
sets al  +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
push esi  +
mov ecx edx +
mov [esp+18h+var_8] esi +
call sub_434C80  +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
push esi  +
mov ecx edx +
mov [esp+18h+var_8] esi +
call sub_434DE0  +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
push esi  +
mov ecx edx +
mov [esp+18h+var_8] esi +
call sub_435420  +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
push esi  +
mov ecx edx +
mov [esp+18h+var_8] esi +
call sub_435900  +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
push esi  +
mov ecx edx +
mov [esp+18h+var_8] esi +
call sub_435A40  +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478C26  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea ecx [edi+0Ch] +
mov dword ptr [edi+4] offset off_4908C8 +
push esi  +
mov [edi+8] edi +
mov dword ptr [edi] offset off_490A20 +
call loc_432E00  +
mov [ebp+var_4] 0 +
push dword ptr [esi+8]  +
push ecx  +
lea ecx [edi+20h] +
call sub_4332C0  +
mov byte ptr [ebp+var_4] 1 +
lea esi [edi+34h] +
cmp dword_4A291C 0 +
mov [ebp+arg_0] esi +
jnz loc_4260EB  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478C26  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov eax [ebp+arg_0] +
lea ecx [esi+0Ch] +
add eax 0Ch +
mov dword ptr [esi+4] offset off_4908C8 +
push eax  +
mov [esi+8] esi +
mov dword ptr [esi] offset off_490A20 +
call loc_432E00  +
mov [ebp+var_4] 0 +
push dword ptr [esi+14h]  +
push ecx  +
lea ecx [esi+20h] +
call sub_4332C0  +
mov byte ptr [ebp+var_4] 1 +
lea edi [esi+34h] +
cmp dword_4A291C 0 +
mov [ebp+arg_0] edi +
jnz loc_4261BE  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478C5F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 48h  +
call sub_44FE54  +
add esp 4 +
mov [ebp+var_10] eax +
push esi  +
mov ecx eax +
mov [ebp+var_4] 0 +
call sub_426140  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+0Ch] +
mov ecx [esp+4+arg_0] +
push eax  +
mov [esp+8+var_4] 0 +
call sub_426040  +
mov eax [esp+8+arg_0] +
add esp 8 +
retn 8  +
***
mov ecx [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
call loc_432E00  +
mov eax [esp+8] +
pop ecx  +
retn 8  +
***
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
cmp dword ptr [ecx+10h] 1 +
jz loc_4262F5  +
cmp dword ptr [eax+10h] 1 +
jz loc_4262E6  +
push eax  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setz al  +
retn 8  +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setz al  +
retn 8  +
cmp dword ptr [eax+10h] 1 +
jz loc_426308  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setz al  +
retn 8  +
push eax  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setz al  +
retn 8  +
***
mov eax [esp+arg_0] +
mov edx [ecx] +
push eax  +
push eax  +
call dword ptr [edx+0Ch]  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478C90  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_34] +
call sub_425FE0  +
lea ecx [esi+0Ch] +
mov [ebp+var_4] 0 +
push ecx  +
mov edx eax +
lea ecx [ebp+var_20] +
call sub_426040  +
add esp 8 +
push eax  +
lea ecx [esi+34h] +
mov byte ptr [ebp+var_4] 1 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4263D1  +
call sub_4746E8  +
jmp loc_4263D6  +
call sub_45B0EB  +
mov edx [ebp+var_2C] +
xor eax eax +
mov esi [ebp+var_28] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4263FB  +
call sub_4746E8  +
jmp loc_426400  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478C90  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_34] +
push eax  +
call sub_425D80  +
lea edx [esi+0Ch] +
mov [ebp+var_4] 0 +
push edx  +
mov edx eax +
lea ecx [ebp+var_20] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [esi+34h] +
mov byte ptr [ebp+var_4] 1 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_42649F  +
call sub_4746E8  +
jmp loc_4264A4  +
call sub_45B0EB  +
mov edx [ebp+var_2C] +
xor eax eax +
mov esi [ebp+var_28] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4264C9  +
call sub_4746E8  +
jmp loc_4264CE  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [esp+arg_0] +
lea eax [ecx+0Ch] +
sub esp 14h +
lea ecx [esp+14h+var_14] +
push eax  +
call sub_4361E0  +
add esp 4 +
mov edx [eax+0Ch] +
mov eax [eax+8] +
test eax eax +
jz loc_426523  +
lea ecx [eax-1] +
lea ecx [edx+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_426523  +
sub ecx 4 +
sub eax 1 +
jnz loc_426516  +
push ebx  +
push esi  +
cmp eax 1 +
jnz loc_426532  +
cmp [edx] eax +
jnz loc_426532  +
mov bl al +
jmp loc_426534  +
xor bl bl +
mov edx [esp+1Ch+var_C] +
xor eax eax +
mov esi [esp+1Ch+var_8] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea ecx ds:0[edx*4] +
pop edi  +
push esi  +
cmp ecx 10h +
jb loc_426565  +
call sub_4746E8  +
add esp 4 +
mov al bl +
pop esi  +
pop ebx  +
add esp 14h +
retn 4  +
call sub_45B0EB  +
add esp 4 +
mov al bl +
pop esi  +
pop ebx  +
add esp 14h +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [esi+0Ch] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_4362A0  +
push eax  +
lea ecx [esi+34h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4265EE  +
call sub_4746E8  +
jmp loc_4265F3  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push [esp+arg_4]  +
mov edi ecx +
mov esi [edi] +
call dword ptr [esi+40h]  +
push eax  +
push dword ptr [esp+10h]  +
mov ecx edi +
call dword ptr [esi+3Ch]  +
pop edi  +
pop esi  +
retn 8  +
***
call sub_426650  +
xor eax eax +
push esi  +
push edi  +
mov edx [ebx+3Ch] +
mov ecx edx +
mov esi [ebx+40h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_426677  +
call sub_4746E8  +
jmp loc_42667C  +
call sub_45B0EB  +
mov edx [ebx+28h] +
xor eax eax +
mov esi [ebx+2Ch] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4266A1  +
call sub_4746E8  +
jmp loc_4266A6  +
call sub_45B0EB  +
mov edx [ebx+14h] +
xor eax eax +
mov esi [ebx+18h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4266D0  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478CEF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 68h  +
call sub_44FE54  +
add esp 4 +
mov [ebp+var_10] eax +
push esi  +
mov ecx eax +
mov [ebp+var_4] 0 +
call sub_426900  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478BE8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi+14h] +
mov ecx [ebp+arg_4] +
shl eax 5 +
push eax  +
lea eax [ebp+var_24] +
mov [ebp+var_10] 0 +
push eax  +
call sub_425CC0  +
lea ecx [esi+0Ch] +
mov [ebp+var_4] 0 +
mov esi [ebp+arg_0] +
mov edx eax +
push ecx  +
mov ecx esi +
call sub_426040  +
mov edx [ebp+var_1C] +
xor eax eax +
mov ebx [ebp+var_18] +
mov ecx edx +
mov edi ebx +
add esp 4 +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_4267C0  +
call sub_4746E8  +
jmp loc_4267C5  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478C90  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+14h] +
lea ecx [ebp+var_34] +
shl edx 5 +
call sub_433030  +
lea ecx [esi+0Ch] +
mov [ebp+var_4] 0 +
push ecx  +
mov edx eax +
lea ecx [ebp+var_20] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [esi+34h] +
mov byte ptr [ebp+var_4] 1 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_426861  +
call sub_4746E8  +
jmp loc_426866  +
call sub_45B0EB  +
mov edx [ebp+var_2C] +
xor eax eax +
mov esi [ebp+var_28] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_42688B  +
call sub_4746E8  +
jmp loc_426890  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov [esp+8+var_4] 0 +
push [esp+8+arg_C]  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call sub_444F60  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 14h  +
***
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call dword ptr [eax+58h]  +
mov ecx eax +
call loc_4449A0  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_478D23  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_426140  +
lea eax [ebx+48h] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [esi+48h] +
mov dword ptr [esi] offset off_4909B0 +
call loc_432E00  +
mov byte ptr [ebp+var_4] 1 +
mov edi [ebx+60h] +
mov ecx edi +
mov [esi+60h] edi +
call sub_437B10  +
test edi edi +
jnz loc_426966  +
xor eax eax +
jmp loc_42697E  +
lea ecx ds:0[edi*4] +
cmp ecx 10h +
jb loc_426979  +
call loc_43F6B0  +
jmp loc_42697E  +
call loc_43F720  +
mov edx [esi+60h] +
mov ecx eax +
shl edx 2 +
push edx  +
mov [esi+64h] eax +
push dword ptr [ebx+64h]  +
call sub_438750  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_4269D0  +
xor eax eax +
push esi  +
push edi  +
mov edx [ebx+60h] +
mov ecx edx +
mov esi [ebx+64h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4269F7  +
call sub_4746E8  +
jmp loc_4269FC  +
call sub_45B0EB  +
mov edx [ebx+50h] +
xor eax eax +
mov esi [ebx+54h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_426A2C  +
call sub_4746E8  +
add esp 4 +
mov ecx ebx +
pop edi  +
pop esi  +
pop ebx  +
jmp sub_426650  +
call sub_45B0EB  +
add esp 4 +
mov ecx ebx +
pop edi  +
pop esi  +
pop ebx  +
jmp sub_426650  +
***
push 0FFFFFFFFh  +
push offset loc_478D58  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+arg_0] +
xor ecx ecx +
mov edi [ebp+arg_4] +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov byte ptr [ebx+10h] 0 +
mov dword ptr [ebx] offset off_48D31C +
mov dword ptr [ebx+4] offset off_48D30C +
mov [ebp+var_14] 0 +
call sub_40FD30  +
mov [ebp+var_10] 0 +
mov [ebp+var_20] esi +
mov [ebp+var_1C] edi +
mov byte ptr [ebp+var_24] 0 +
push ecx  +
lea eax [ebp+var_24] +
mov [ebp+var_4] 3 +
push eax  +
lea ecx [ebp+var_30] +
call sub_410120  +
add esp 8 +
push eax  +
mov ecx ebx +
mov byte ptr [ebp+var_4] 4 +
call sub_43E0E0  +
mov ecx [ebp+var_2C] +
test ecx ecx +
jz loc_426AD7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp+var_10] +
xor al al +
mov ecx [ebp+var_14] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea ecx [esp+arg_0] +
mov eax [esi+4] +
cmp ecx eax +
jnb loc_426B57  +
mov ecx [esi] +
lea edx [esp+arg_0] +
cmp ecx edx +
ja loc_426B57  +
push edi  +
mov edi edx +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_426B3E  +
push 1  +
mov ecx esi +
call loc_422A80  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_426B4C  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
mov eax esi +
pop edi  +
pop esi  +
retn 4  +
cmp eax [esi+8] +
jnz loc_426B65  +
push 1  +
mov ecx esi +
call loc_422A80  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_426B72  +
mov eax [esp+8] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push edx  +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call loc_4378C0  +
push [ebp+arg_0]  +
lea ecx [ebp+var_20] +
mov [ebp+var_4] 0 +
call sub_426B10  +
push eax  +
mov ecx esi +
call loc_4378C0  +
mov ecx [ebp+var_20] +
test ecx ecx +
jz loc_426BEB  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_426C00  +
push 2  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_426CA5  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_426C40  +
push 348h  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_426D28  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
xor esi esi +
push edi  +
mov edi edx +
test ebp ebp +
jz loc_426D83  +
test edi edi +
jz loc_426D83  +
push ebx  +
mov eax 20h +
lea ebx [ecx-4] +
sub eax ebp +
lea ebx [ebx+edi*4] +
mov [esp+0Ch+arg_0] eax +
mov edx [ebx] +
lea ebx [ebx-4] +
mov ecx ebp +
mov eax edx +
shr eax cl +
mov ecx [esp+0Ch+arg_0] +
or eax esi +
mov esi edx +
mov [ebx+4] eax +
shl esi cl +
sub edi 1 +
jnz loc_426D65  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478DB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
add eax 4 +
push offset unk_4A0FB4  +
push eax  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_426DE2  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_8] +
lea ecx [ebp+var_20] +
push dword ptr [eax]  +
call sub_432EF0  +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_20] +
push eax  +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
xor eax eax +
mov esi [ebp+var_14] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_426E24  +
call sub_4746E8  +
jmp loc_426E29  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi ecx +
test esi esi +
jz loc_426E65  +
lea eax [edx+esi*4] +
sub edi edx +
mov ecx [edi+eax-4] +
lea eax [eax-4] +
mov edx [eax] +
dec esi  +
cmp ecx edx +
ja loc_426E70  +
jb loc_426E6A  +
test esi esi +
jnz loc_426E51  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi edx +
mov esi [ebx] +
mov eax esi +
sub eax [esp+8+arg_0] +
mov [ebx] eax +
cmp eax esi +
ja loc_426E9B  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
mov eax 1 +
cmp edi eax +
jbe loc_426EB6  +
mov edx [ebx+eax*4] +
lea ecx [edx-1] +
mov [ebx+eax*4] ecx +
test edx edx +
jnz loc_426E95  +
inc eax  +
cmp eax edi +
jb loc_426EA4  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
lea eax [esi-1] +
mov [edi] eax +
cmp eax esi +
jbe loc_426EF2  +
mov esi 1 +
cmp edx esi +
jbe loc_426EF2  +
mov eax [esp+arg_0] +
mov edi [esp+arg_4] +
lea eax [eax+ecx*4] +
lea edi [edi+ecx*4] +
lea edx [edx+ecx*4] +
neg ecx  +
test ecx 2 +
jz loc_426F62  +
sub ecx 2 +
jmp loc_426F79  +
jecxz loc_426F96  +
mov esi [eax+ecx*4] +
adc esi [edi+ecx*4] +
mov [edx+ecx*4] esi +
mov esi [eax+ecx*4+4] +
adc esi [edi+ecx*4+4] +
mov [edx+ecx*4+4] esi +
mov esi [eax+ecx*4+8] +
adc esi [edi+ecx*4+8] +
mov [edx+ecx*4+8] esi +
mov esi [eax+ecx*4+0Ch] +
adc esi [edi+ecx*4+0Ch] +
mov [edx+ecx*4+0Ch] esi +
lea ecx [ecx+4] +
jmp loc_426F62  +
mov eax 0 +
setb al  +
pop esi  +
pop edi  +
retn 8  +
***
mov eax [esp+arg_0] +
mov edi [esp+arg_4] +
lea eax [eax+ecx*4] +
lea edi [edi+ecx*4] +
lea edx [edx+ecx*4] +
neg ecx  +
test ecx 2 +
jz loc_426FD2  +
sub ecx 2 +
jmp loc_426FE9  +
jecxz loc_427006  +
mov esi [eax+ecx*4] +
sbb esi [edi+ecx*4] +
mov [edx+ecx*4] esi +
mov esi [eax+ecx*4+4] +
sbb esi [edi+ecx*4+4] +
mov [edx+ecx*4+4] esi +
mov esi [eax+ecx*4+8] +
sbb esi [edi+ecx*4+8] +
mov [edx+ecx*4+8] esi +
mov esi [eax+ecx*4+0Ch] +
sbb esi [edi+ecx*4+0Ch] +
mov [edx+ecx*4+0Ch] esi +
lea ecx [ecx+4] +
jmp loc_426FD2  +
mov eax 0 +
setb al  +
pop esi  +
pop edi  +
retn 8  +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov edi [esp+10h] +
lea eax [eax+ecx*4] +
lea edi [edi+ecx*4] +
lea edx [edx+ecx*4] +
neg ecx  +
pxor mm2 mm2 +
jz loc_4270AD  +
test ecx 2 +
jz loc_427047  +
sub ecx 2 +
jmp loc_427076  +
movd mm0 dword ptr [eax+ecx*4] +
movd mm1 dword ptr [edi+ecx*4] +
paddq mm0 mm1 +
paddq mm2 mm0 +
movd dword ptr [edx+ecx*4] mm2 +
psrlq mm2 20h +
movd mm0 dword ptr [eax+ecx*4+4] +
movd mm1 dword ptr [edi+ecx*4+4] +
paddq mm0 mm1 +
paddq mm2 mm0 +
movd dword ptr [edx+ecx*4+4] mm2 +
psrlq mm2 20h +
movd mm0 dword ptr [eax+ecx*4+8] +
movd mm1 dword ptr [edi+ecx*4+8] +
paddq mm0 mm1 +
paddq mm2 mm0 +
movd dword ptr [edx+ecx*4+8] mm2 +
psrlq mm2 20h +
movd mm0 dword ptr [eax+ecx*4+0Ch] +
movd mm1 dword ptr [edi+ecx*4+0Ch] +
paddq mm0 mm1 +
paddq mm2 mm0 +
movd dword ptr [edx+ecx*4+0Ch] mm2 +
psrlq mm2 20h +
add ecx 4 +
jnz loc_427047  +
movd eax mm2 +
emms   +
pop esi  +
pop edi  +
retn 8  +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov edi [esp+10h] +
lea eax [eax+ecx*4] +
lea edi [edi+ecx*4] +
lea edx [edx+ecx*4] +
neg ecx  +
pxor mm2 mm2 +
jz loc_42714D  +
test ecx 2 +
jz loc_4270E7  +
sub ecx 2 +
jmp loc_427116  +
movd mm0 dword ptr [eax+ecx*4] +
movd mm1 dword ptr [edi+ecx*4] +
psubq mm0 mm1 +
psubq mm0 mm2 +
movd dword ptr [edx+ecx*4] mm0 +
psrlq mm0 3Fh +
movd mm2 dword ptr [eax+ecx*4+4] +
movd mm1 dword ptr [edi+ecx*4+4] +
psubq mm2 mm1 +
psubq mm2 mm0 +
movd dword ptr [edx+ecx*4+4] mm2 +
psrlq mm2 3Fh +
movd mm0 dword ptr [eax+ecx*4+8] +
movd mm1 dword ptr [edi+ecx*4+8] +
psubq mm0 mm1 +
psubq mm0 mm2 +
movd dword ptr [edx+ecx*4+8] mm0 +
psrlq mm0 3Fh +
movd mm2 dword ptr [eax+ecx*4+0Ch] +
movd mm1 dword ptr [edi+ecx*4+0Ch] +
psubq mm2 mm1 +
psubq mm2 mm0 +
movd dword ptr [edx+ecx*4+0Ch] mm2 +
psrlq mm2 3Fh +
add ecx 4 +
jnz loc_4270E7  +
movd eax mm2 +
emms   +
pop esi  +
pop edi  +
retn 8  +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov eax [edi] +
mul  dword ptr [esi] +
mov ecx edx +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov eax [edi] +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx ebx +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx] +
add eax esi +
mov ecx edx +
mov esi [ebp+arg_0] +
mov edx [ebp+arg_8] +
adc ecx 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
mul  dword ptr [edx+4] +
add eax ecx +
adc edx 0 +
add eax ebx +
mov [esi+8] eax +
adc edx edi +
pop edi  +
mov [esi+0Ch] edx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov eax [ebx] +
xor edi edi +
mul  dword ptr [esi] +
mov ecx edx +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov eax [ebx] +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx edi +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_0] +
adc ebx 0 +
mov [edx+4] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
mul  dword ptr [ecx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+4] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
mov esi [ebp+arg_8] +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
adc edi 0 +
mul  dword ptr [esi] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+8] eax +
mov ecx esi +
mov eax [ebp+arg_4] +
adc edi 0 +
mov [esp+10h+var_4] edi +
mov eax [eax] +
mul  dword ptr [ecx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
mov ebx [esp+10h+var_4] +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
mov esi [ebp+arg_8] +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
adc edi 0 +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
add ebx edx +
mov eax [eax+0Ch] +
adc edi 0 +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_0] +
adc edi 0 +
mov [edx+0Ch] eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
mul  dword ptr [ecx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+8] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
mov esi [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add edi edx +
adc ebx 0 +
mul  dword ptr [esi+4] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add edi edx +
mov [ecx+10h] eax +
mov ecx esi +
mov eax [ebp+arg_4] +
adc ebx 0 +
mov eax [eax+8] +
mul  dword ptr [ecx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+0Ch] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+8] +
add eax esi +
mov ecx edx +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_8] +
adc ecx 0 +
mov [edx+14h] eax +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
mul  dword ptr [esi+0Ch] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add eax ebx +
adc edx edi +
mov [ecx+18h] eax +
pop edi  +
pop esi  +
mov [ecx+1Ch] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov eax [esi] +
mul  dword ptr [ebx] +
mov ecx edx +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov eax [esi] +
mul  dword ptr [ebx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx edi +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_0] +
adc ebx 0 +
mov [edx+4] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
mul  dword ptr [ecx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+4] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_8] +
mov eax [esi+8] +
adc edi 0 +
mul  dword ptr [edx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+8] eax +
mov ecx [ebp+arg_8] +
adc edi 0 +
mov eax [esi] +
mul  dword ptr [ecx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+4] +
mov esi eax +
add esi ecx +
adc edx 0 +
add edi edx +
adc ebx 0 +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_0] +
adc ebx 0 +
mov [edx+0Ch] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
mul  dword ptr [ecx+10h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+0Ch] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+4] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_8] +
mov eax [esi+10h] +
adc edi 0 +
mul  dword ptr [edx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+10h] eax +
mov ecx [ebp+arg_8] +
adc edi 0 +
mov eax [esi] +
mul  dword ptr [ecx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
add esi ecx +
adc edx 0 +
add edi edx +
adc ebx 0 +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov eax [eax+0Ch] +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_0] +
adc ebx 0 +
mov [edx+14h] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
mul  dword ptr [ecx+18h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+14h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+10h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+0Ch] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+4] +
mov ecx eax +
add ecx esi +
adc edx 0 +
add ebx edx +
adc edi 0 +
mov esi [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov eax [esi+18h] +
mul  dword ptr [edx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+18h] eax +
mov eax [esi] +
adc edi 0 +
mov ecx [ebp+arg_8] +
mov [esp+10h+var_4] edi +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
mov ebx [esp+10h+var_4] +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_0] +
adc edi 0 +
mov [edx+1Ch] eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+8] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+0Ch] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+10h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+18h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx+8] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_8] +
mov eax [esi+1Ch] +
adc ebx 0 +
mul  dword ptr [edx+4] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add edi edx +
mov [ecx+20h] eax +
mov ecx [ebp+arg_8] +
adc ebx 0 +
mov eax [esi+8] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+0Ch] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx eax +
add ecx esi +
adc edx 0 +
mov eax [ebp+arg_4] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mov eax [eax+10h] +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+8] +
add eax esi +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_0] +
adc edi 0 +
mov [edx+24h] eax +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+10h] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+18h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_8] +
mov eax [esi+1Ch] +
adc ebx 0 +
mul  dword ptr [edx+0Ch] +
add eax ecx +
adc edx 0 +
add edi edx +
mov ecx [ebp+arg_0] +
adc ebx 0 +
mov [ecx+28h] eax +
mov eax [esi+10h] +
mov ecx [ebp+arg_8] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+14h] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+10h] +
add eax esi +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_0] +
adc edi 0 +
mov [edx+2Ch] eax +
mov eax [ebp+arg_4] +
mov eax [eax+14h] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+18h] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_8] +
mov eax [esi+1Ch] +
adc ebx 0 +
mul  dword ptr [edx+14h] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add edi edx +
mov [ecx+30h] eax +
mov ecx [ebp+arg_8] +
adc ebx 0 +
mov eax [esi+18h] +
mul  dword ptr [ecx+1Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+1Ch] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx edx +
add eax esi +
mov esi [ebp+arg_0] +
adc ecx 0 +
mov edx [ebp+arg_8] +
mov [esi+34h] eax +
mov eax [ebp+arg_4] +
mov eax [eax+1Ch] +
mul  dword ptr [edx+1Ch] +
add eax ecx +
adc edx 0 +
add eax ebx +
mov [esi+38h] eax +
adc edx edi +
pop edi  +
mov [esi+3Ch] edx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov eax [ebx] +
mul  eax +
mov [ecx] eax +
mov edi edx +
mov eax [ebx] +
mul  dword ptr [ebx+4] +
mov [esp+18h+var_4] eax +
mov esi edx +
lea ecx [eax+eax] +
mov eax 0 +
add edi ecx +
adc eax eax +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_0] +
mov [eax+4] edi +
mov eax [ebx+4] +
mul  eax +
mov ecx eax +
mov edi edx +
mov eax esi +
mov edx 2 +
mul  edx +
add ecx eax +
mov eax [esp+18h+var_4] +
adc edi edx +
add ecx [esp+18h+var_8] +
adc edi 0 +
shr eax 1Fh +
add ecx eax +
mov eax [ebp+arg_0] +
adc edi 0 +
mov [eax+0Ch] edi +
pop edi  +
pop esi  +
mov [eax+8] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
push edi  +
mov eax [esi] +
mul  eax +
mov [ecx] eax +
mov edi edx +
mov eax [esi] +
mov ecx 2 +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax edx +
mul  ecx +
mov ecx esi +
shr ecx 1Fh +
add eax ecx +
lea ecx [esi+esi] +
adc edx ebx +
add edi ecx +
adc ebx ebx +
xor ecx ecx +
add ebx eax +
mov eax [ebp+arg_0] +
mov [esp+18h+var_8] ebx +
adc ecx edx +
mov [esp+18h+var_C] ecx +
mov ecx [ebp+arg_4] +
mov [eax+4] edi +
mov eax [ecx] +
mul  dword ptr [ecx+8] +
mov esi eax +
mov eax edx +
mov edx 2 +
mov ecx esi +
mul  edx +
shr ecx 1Fh +
mov edi eax +
mov ebx edx +
add edi ecx +
mov ecx [ebp+arg_4] +
adc ebx 0 +
mov ecx [ecx+4] +
mov eax ecx +
mul  ecx +
lea ecx [esi+esi] +
add eax ecx +
mov ecx [esp+18h+var_8] +
adc edx 0 +
add ecx eax +
mov eax [esp+18h+var_C] +
adc eax 0 +
xor esi esi +
add eax edx +
adc esi esi +
add eax edi +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_0] +
adc esi ebx +
mov ebx [ebp+arg_4] +
xor edi edi +
mov [esp+18h+var_8] esi +
mov [eax+8] ecx +
mov eax [ebx] +
mul  dword ptr [ebx+0Ch] +
mov ecx eax +
mov [esp+18h+var_4] edx +
mov eax [ebx+4] +
mul  dword ptr [ebx+8] +
mov ebx eax +
add ebx ecx +
mov ecx 2 +
adc edx edi +
mov eax edx +
mul  ecx +
mov ecx ebx +
mov esi eax +
shr ecx 1Fh +
add esi ecx +
adc edx edi +
mov eax [esp+18h+var_4] +
shld edi eax +
mov ecx [esp+18h+var_C] +
add eax eax +
add esi eax +
lea eax [ebx+ebx] +
mov ebx [esp+18h+var_8] +
adc edx edi +
add ecx eax +
adc ebx 0 +
xor eax eax +
add ebx esi +
mov [esp+18h+var_8] ebx +
adc eax edx +
mov [esp+18h+var_C] eax +
mov eax [ebp+arg_0] +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_4] +
mov eax [ecx+4] +
mul  dword ptr [ecx+0Ch] +
mov ecx 2 +
mov esi eax +
mov eax edx +
mul  ecx +
mov ecx esi +
shr ecx 1Fh +
mov edi eax +
add edi ecx +
mov ebx edx +
mov ecx [ebp+arg_4] +
adc ebx 0 +
mov ecx [ecx+8] +
mov eax ecx +
mul  ecx +
lea ecx [esi+esi] +
mov esi [esp+18h+var_8] +
add eax ecx +
mov ecx [esp+18h+var_C] +
adc edx 0 +
add esi eax +
adc ecx 0 +
xor eax eax +
add ecx edx +
adc eax eax +
add ecx edi +
mov edi [ebp+arg_4] +
adc eax ebx +
mov [esp+18h+var_C] ecx +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_0] +
mov [eax+10h] esi +
mov eax [edi+8] +
mul  dword ptr [edi+0Ch] +
mov ebx eax +
mov esi edx +
mov eax [esp+18h+var_C] +
lea ecx [ebx+ebx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc [esp+18h+var_8] 0 +
mov [ecx+14h] eax +
mov eax [edi+0Ch] +
mul  eax +
mov ecx eax +
mov edi edx +
mov eax esi +
mov edx 2 +
mul  edx +
add ecx eax +
mov eax [ebp+arg_0] +
adc edi edx +
add ecx [esp+18h+var_8] +
adc edi 0 +
shr ebx 1Fh +
add ecx ebx +
mov [eax+18h] ecx +
adc edi 0 +
mov [eax+1Ch] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
push edi  +
mov eax [esi] +
mul  eax +
mov [ecx] eax +
mov edi edx +
mov eax [esi] +
mov ecx 2 +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax edx +
mul  ecx +
mov ecx esi +
shr ecx 1Fh +
add eax ecx +
lea ecx [esi+esi] +
adc edx ebx +
add edi ecx +
adc ebx ebx +
xor ecx ecx +
add ebx eax +
mov eax [ebp+arg_0] +
mov [esp+20h+var_C] ebx +
adc ecx edx +
mov [esp+20h+var_10] ecx +
mov ecx [ebp+arg_4] +
mov [eax+4] edi +
mov eax [ecx] +
mul  dword ptr [ecx+8] +
mov esi eax +
mov eax edx +
mov edx 2 +
mov ecx esi +
mul  edx +
shr ecx 1Fh +
mov edi eax +
mov ebx edx +
mov edx [ebp+arg_4] +
add edi ecx +
lea ecx [esi+esi] +
adc ebx 0 +
mov eax [edx+4] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_C] +
adc edx 0 +
add ecx eax +
mov eax [esp+20h+var_10] +
adc eax 0 +
xor esi esi +
add eax edx +
adc esi esi +
add eax edi +
mov [esp+20h+var_10] eax +
mov eax [ebp+arg_0] +
adc esi ebx +
mov ebx [ebp+arg_4] +
xor edi edi +
mov [esp+20h+var_C] esi +
mov [eax+8] ecx +
mov eax [ebx] +
mul  dword ptr [ebx+0Ch] +
mov ecx eax +
mov [esp+20h+var_8] edx +
mov eax [ebx+4] +
mul  dword ptr [ebx+8] +
mov ebx eax +
add ebx ecx +
mov ecx 2 +
adc edx edi +
mov eax edx +
mul  ecx +
mov ecx ebx +
shr ecx 1Fh +
mov esi eax +
add esi ecx +
adc edx edi +
mov eax [esp+20h+var_8] +
shld edi eax +
mov ecx [esp+20h+var_10] +
add eax eax +
add esi eax +
lea eax [ebx+ebx] +
mov ebx [ebp+arg_4] +
adc edx edi +
add ecx eax +
mov eax [esp+20h+var_C] +
adc eax 0 +
xor edi edi +
add eax esi +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
adc edi edx +
mov [esp+20h+var_10] edi +
xor esi esi +
mov [eax+0Ch] ecx +
mov eax [ebx] +
mul  dword ptr [ebx+10h] +
mov ecx eax +
mov edi edx +
mov eax [ebx+4] +
mul  dword ptr [ebx+0Ch] +
mov ebx eax +
add ebx ecx +
mov ecx 2 +
adc edx esi +
mov eax edx +
mul  ecx +
mov ecx ebx +
shr ecx 1Fh +
add eax ecx +
lea ecx [ebx+ebx] +
adc edx esi +
shld esi edi +
add edi edi +
add eax edi +
mov [esp+20h+var_8] eax +
adc edx esi +
mov esi [ebp+arg_4] +
mov [esp+20h+var_4] edx +
mov eax [esi+8] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_C] +
adc edx 0 +
add ecx eax +
mov eax [esp+20h+var_10] +
adc eax 0 +
xor ebx ebx +
add eax edx +
adc ebx ebx +
add eax [esp+20h+var_8] +
mov [esp+20h+var_10] eax +
adc ebx [esp+20h+var_4] +
mov eax [ebp+arg_0] +
mov [esp+20h+var_C] ebx +
xor ebx ebx +
mov [eax+10h] ecx +
mov eax [esi] +
mul  dword ptr [esi+14h] +
mov ecx eax +
mov edi edx +
mov eax [esi+4] +
mul  dword ptr [esi+10h] +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_4] +
adc edx ebx +
add edi edx +
mov eax [ecx+8] +
adc ebx ebx +
mov [esp+20h+var_4] edi +
mul  dword ptr [ecx+0Ch] +
mov ecx 2 +
mov edi eax +
add edi esi +
adc edx 0 +
mov eax edx +
mul  ecx +
mov ecx edi +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
adc edx 0 +
shld ebx eax +
add eax eax +
add esi eax +
lea eax [edi+edi] +
mov edi [esp+20h+var_10] +
adc edx ebx +
add edi eax +
mov eax [esp+20h+var_C] +
adc eax 0 +
xor ebx ebx +
add eax esi +
mov esi [ebp+arg_4] +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
adc ebx edx +
mov [esp+20h+var_10] ebx +
xor ebx ebx +
mov [eax+14h] edi +
mov eax [esi] +
mul  dword ptr [esi+18h] +
mov ecx eax +
mov edi edx +
mov eax [esi+4] +
mul  dword ptr [esi+14h] +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_4] +
adc edx ebx +
add edi edx +
mov eax [ecx+8] +
adc ebx ebx +
mov [esp+20h+var_8] edi +
mul  dword ptr [ecx+10h] +
mov ecx 2 +
mov [esp+20h+var_4] ebx +
mov edi eax +
add edi esi +
adc edx 0 +
mov eax edx +
mul  ecx +
mov ecx edi +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
mov ecx [esp+20h+var_8] +
mov ebx edx +
mov edx [ebp+arg_4] +
adc ebx 0 +
shld eax ecx +
add ecx ecx +
add esi ecx +
lea ecx [edi+edi] +
adc ebx eax +
mov eax [edx+0Ch] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_C] +
adc edx 0 +
add ecx eax +
mov eax [esp+20h+var_10] +
adc eax 0 +
xor edi edi +
add eax edx +
adc edi edi +
add eax esi +
mov esi [ebp+arg_4] +
mov [esp+20h+var_10] eax +
adc edi ebx +
mov eax [ebp+arg_0] +
mov [esp+20h+var_C] edi +
mov [eax+18h] ecx +
mov eax [esi] +
mul  dword ptr [esi+1Ch] +
mov ecx eax +
mov edi edx +
mov eax [esi+4] +
xor ebx ebx +
mul  dword ptr [esi+18h] +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_4] +
adc edx ebx +
add edi edx +
mov eax [ecx+8] +
adc ebx ebx +
mul  dword ptr [ecx+14h] +
mov ecx eax +
add ecx esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_4] +
mov [esp+20h+var_4] edi +
adc ebx 0 +
mov eax [edx+0Ch] +
mul  dword ptr [edx+10h] +
mov edi eax +
add edi ecx +
mov ecx 2 +
adc edx 0 +
mov eax edx +
mul  ecx +
mov ecx edi +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
adc edx 0 +
shld ebx eax +
add eax eax +
add esi eax +
lea eax [edi+edi] +
adc edx ebx +
mov ebx [esp+20h+var_10] +
add ebx eax +
mov eax [esp+20h+var_C] +
adc eax 0 +
xor ecx ecx +
add eax esi +
mov esi [ebp+arg_4] +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
adc ecx edx +
mov [esp+20h+var_10] ecx +
mov [eax+1Ch] ebx +
xor ebx ebx +
mov eax [esi+4] +
mul  dword ptr [esi+1Ch] +
mov ecx eax +
mov edi edx +
mov eax [esi+8] +
mul  dword ptr [esi+18h] +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_4] +
adc edx ebx +
add edi edx +
mov eax [ecx+0Ch] +
adc ebx ebx +
mov [esp+20h+var_8] edi +
mul  dword ptr [ecx+14h] +
mov ecx 2 +
mov [esp+20h+var_4] ebx +
mov edi eax +
add edi esi +
adc edx 0 +
mov eax edx +
mul  ecx +
mov ecx edi +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
mov ebx edx +
adc ebx 0 +
mov ecx [esp+20h+var_8] +
shld eax ecx +
mov edx [ebp+arg_4] +
add ecx ecx +
add esi ecx +
lea ecx [edi+edi] +
mov edi [esp+20h+var_C] +
adc ebx eax +
mov eax [edx+10h] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_10] +
adc edx 0 +
add edi eax +
adc ecx 0 +
xor eax eax +
add ecx edx +
adc eax eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc eax ebx +
mov [esp+20h+var_10] ecx +
mov [esp+20h+var_C] eax +
xor ebx ebx +
mov eax [ebp+arg_0] +
mov [eax+20h] edi +
mov eax [esi+8] +
mul  dword ptr [esi+1Ch] +
mov ecx eax +
mov edi edx +
mov eax [esi+0Ch] +
mul  dword ptr [esi+18h] +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_4] +
adc edx ebx +
add edi edx +
mov eax [ecx+10h] +
adc ebx ebx +
mov [esp+20h+var_4] edi +
mul  dword ptr [ecx+14h] +
mov ecx 2 +
mov edi eax +
add edi esi +
adc edx 0 +
mov eax edx +
mul  ecx +
mov ecx edi +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
mov ecx [esp+20h+var_10] +
adc edx 0 +
shld ebx eax +
add eax eax +
add esi eax +
lea eax [edi+edi] +
adc edx ebx +
mov ebx [ebp+arg_4] +
add ecx eax +
mov eax [esp+20h+var_C] +
adc eax 0 +
xor edi edi +
add eax esi +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
adc edi edx +
mov [esp+20h+var_10] edi +
xor esi esi +
mov [eax+24h] ecx +
mov eax [ebx+0Ch] +
mul  dword ptr [ebx+1Ch] +
mov ecx eax +
mov edi edx +
mov eax [ebx+10h] +
mul  dword ptr [ebx+18h] +
mov ebx eax +
add ebx ecx +
adc edx esi +
mov eax edx +
mov ecx 2 +
mul  ecx +
mov ecx ebx +
shr ecx 1Fh +
add eax ecx +
lea ecx [ebx+ebx] +
mov ebx [ebp+arg_4] +
adc edx esi +
shld esi edi +
add edi edi +
add eax edi +
mov [esp+20h+var_4] eax +
adc edx esi +
mov esi [esp+20h+var_C] +
mov [esp+20h+var_8] edx +
mov edx [ebp+arg_4] +
mov eax [edx+14h] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_10] +
adc edx 0 +
add esi eax +
adc ecx 0 +
xor eax eax +
add ecx edx +
adc eax eax +
add ecx [esp+20h+var_4] +
mov [esp+20h+var_10] ecx +
adc eax [esp+20h+var_8] +
xor edi edi +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
mov [eax+28h] esi +
mov eax [ebx+10h] +
mul  dword ptr [ebx+1Ch] +
mov ecx eax +
mov [esp+20h+var_4] edx +
mov eax [ebx+14h] +
mul  dword ptr [ebx+18h] +
mov ebx eax +
add ebx ecx +
mov ecx 2 +
adc edx edi +
mov eax edx +
mul  ecx +
mov ecx ebx +
mov esi eax +
shr ecx 1Fh +
mov eax [esp+20h+var_4] +
add esi ecx +
mov ecx [esp+20h+var_C] +
adc edx edi +
shld edi eax +
add eax eax +
add esi eax +
lea eax [ebx+ebx] +
adc edx edi +
mov edi [esp+20h+var_10] +
add edi eax +
adc ecx 0 +
xor eax eax +
add ecx esi +
mov [esp+20h+var_C] ecx +
mov ecx [ebp+arg_4] +
adc eax edx +
mov [esp+20h+var_10] eax +
mov eax [ebp+arg_0] +
mov [eax+2Ch] edi +
mov eax [ecx+14h] +
mul  dword ptr [ecx+1Ch] +
mov ecx 2 +
mov esi eax +
mov eax edx +
mul  ecx +
mov ecx esi +
shr ecx 1Fh +
mov edi eax +
mov ebx edx +
add edi ecx +
mov edx [ebp+arg_4] +
adc ebx 0 +
mov eax [edx+18h] +
lea ecx [esi+esi] +
mov esi [esp+20h+var_C] +
mul  eax +
add eax ecx +
mov ecx [esp+20h+var_10] +
adc edx 0 +
add esi eax +
adc ecx 0 +
xor eax eax +
add ecx edx +
adc eax eax +
add ecx edi +
mov edi [ebp+arg_4] +
adc eax ebx +
mov [esp+20h+var_10] ecx +
mov [esp+20h+var_C] eax +
mov eax [ebp+arg_0] +
mov [eax+30h] esi +
mov eax [edi+18h] +
mul  dword ptr [edi+1Ch] +
mov ebx eax +
mov esi edx +
mov eax [esp+20h+var_10] +
lea ecx [ebx+ebx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc [esp+20h+var_C] 0 +
mov [ecx+34h] eax +
mov eax [edi+1Ch] +
mul  eax +
mov ecx eax +
mov edi edx +
mov eax esi +
mov edx 2 +
mul  edx +
add ecx eax +
mov eax [ebp+arg_0] +
adc edi edx +
add ecx [esp+20h+var_C] +
adc edi 0 +
shr ebx 1Fh +
add ecx ebx +
mov [eax+38h] ecx +
adc edi 0 +
mov [eax+3Ch] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi [esp+8+arg_8] +
mov eax [ebx] +
mul  dword ptr [edi] +
mov [esi] eax +
mov ecx [edi+4] +
mov eax [ebx+4] +
imul ecx [ebx] +
imul eax [edi] +
pop edi  +
add ecx eax +
add ecx edx +
mov [esi+4] ecx +
pop esi  +
pop ebx  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
xor ebx ebx +
mov eax [eax] +
push edi  +
mov edi [ebp+arg_0] +
mul  dword ptr [esi] +
mov [edi] eax +
mov ecx edx +
mov eax [ebp+arg_4] +
mov eax [eax] +
mul  dword ptr [esi+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
adc edx ebx +
xor ecx ecx +
mov eax [eax+4] +
add ebx edx +
mov edx [ebp+arg_8] +
adc ecx ecx +
mul  dword ptr [edx] +
add eax esi +
mov [edi+4] eax +
mov eax [ebp+arg_4] +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_8] +
adc ecx 0 +
mov eax [eax+8] +
mul  dword ptr [edx] +
mov edi eax +
add edi ebx +
mov ebx [ebp+arg_4] +
adc edx 0 +
xor esi esi +
add ecx edx +
mov eax [ebx+4] +
mov [esp+10h+var_4] ecx +
mov ecx [ebp+arg_8] +
mul  dword ptr [ecx+4] +
mov ecx eax +
mov eax [ebx] +
mov ebx [ebp+arg_0] +
add ecx edi +
mov edi [esp+10h+var_4] +
adc edx esi +
mov esi [ebp+arg_8] +
add edi edx +
mul  dword ptr [esi+8] +
add eax ecx +
mov [ebx+8] eax +
mov eax [ebp+arg_4] +
adc edx 0 +
mov ecx [esi+0Ch] +
mov ebx [ebp+arg_4] +
imul ecx [eax] +
mov eax [eax+0Ch] +
imul eax [esi] +
add ecx eax +
mov eax [esi+4] +
imul eax [ebx+8] +
add ecx eax +
mov eax ebx +
mov ebx [ebp+arg_0] +
mov eax [eax+4] +
imul eax [esi+8] +
add eax edi +
add eax ecx +
pop edi  +
add edx eax +
pop esi  +
mov [ebx+0Ch] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov eax [esi] +
mul  dword ptr [ebx] +
mov ecx edx +
mov edx [ebp+arg_0] +
mov [edx] eax +
mov eax [esi] +
mul  dword ptr [ebx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_0] +
adc edx edi +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx ebx +
mul  dword ptr [edx] +
add eax esi +
mov [ecx+4] eax +
adc edx 0 +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
add edi edx +
adc ebx 0 +
mov eax [eax] +
mul  dword ptr [ecx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+4] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_8] +
mov eax [esi+8] +
adc edi 0 +
mul  dword ptr [edx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+8] eax +
mov ecx [ebp+arg_8] +
adc edi 0 +
mov eax [esi] +
mul  dword ptr [ecx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+4] +
mov esi eax +
add esi ecx +
adc edx 0 +
add edi edx +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
adc ebx 0 +
mov eax [eax+0Ch] +
mul  dword ptr [ecx] +
mov ecx [ebp+arg_0] +
add eax esi +
adc edx 0 +
add edi edx +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_4] +
adc ebx 0 +
mov ecx [ebp+arg_8] +
mov eax [eax] +
mul  dword ptr [ecx+10h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+0Ch] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+4] +
mov ecx eax +
add ecx esi +
mov esi [ebp+arg_4] +
adc edx 0 +
add ebx edx +
mov edx [ebp+arg_8] +
mov eax [esi+10h] +
adc edi 0 +
mul  dword ptr [edx] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add ebx edx +
mov [ecx+10h] eax +
mov ecx [ebp+arg_8] +
adc edi 0 +
mov eax [esi] +
mul  dword ptr [ecx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
mov eax [eax+4] +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+8] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
add esi ecx +
adc edx 0 +
mov eax [ebp+arg_4] +
add edi edx +
mov ecx [ebp+arg_8] +
adc ebx 0 +
mov eax [eax+0Ch] +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx] +
mov ecx [ebp+arg_0] +
add eax esi +
adc edx 0 +
mov [ecx+14h] eax +
add edi edx +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
adc ebx 0 +
mov eax [eax] +
mul  dword ptr [ecx+18h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi edi +
adc edx 0 +
xor edi edi +
mov eax [eax+4] +
add ebx edx +
mul  dword ptr [ecx+14h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx edi +
mov eax [eax+8] +
add ebx edx +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+10h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx edi +
mov eax [eax+0Ch] +
add ebx edx +
mul  dword ptr [ecx+0Ch] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx edi +
mov eax [eax+10h] +
add ebx edx +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+8] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx edi +
mov eax [eax+14h] +
add ebx edx +
mul  dword ptr [ecx+4] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx edi +
mov eax [eax+18h] +
add ebx edx +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_0] +
mul  dword ptr [edi] +
add eax ecx +
mov [esi+18h] eax +
mov eax [ebp+arg_4] +
adc edx 0 +
mov ecx [edi+1Ch] +
add edx ebx +
imul ecx [eax] +
mov eax [eax+1Ch] +
imul eax [edi] +
add ecx eax +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
imul eax [edi+14h] +
add ecx eax +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
imul eax [edi+10h] +
add ecx eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
imul eax [edi+18h] +
add ecx eax +
mov eax [ebp+arg_4] +
mov eax [eax+14h] +
imul eax [edi+8] +
add ecx eax +
mov eax [ebp+arg_4] +
mov eax [eax+18h] +
imul eax [edi+4] +
add ecx eax +
mov eax [edi+0Ch] +
mov edi [ebp+arg_4] +
add edx ecx +
imul eax [edi+10h] +
pop edi  +
add eax edx +
mov [esi+1Ch] eax +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
push [esp+10h+arg_8]  +
lea eax [esp+14h+var_10] +
push [esp+14h+arg_4]  +
push eax  +
call sub_427160  +
mov ecx [esp+1Ch+arg_0] +
mov eax [esp+1Ch+var_8] +
mov [ecx] eax +
mov eax [esp+1Ch+var_4] +
mov [ecx+4] eax +
add esp 1Ch +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov eax [ebx+8] +
mul  dword ptr [ecx] +
mov esi [ebx] +
mov eax esi +
mov ecx edx +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+8] +
mov eax [ebx+4] +
add ecx edx +
mov ebx [ebp+arg_8] +
adc edi edi +
mul  dword ptr [ebx+4] +
mov ebx [ebx+0Ch] +
mov eax esi +
add ecx edx +
adc edi 0 +
mul  ebx +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor eax eax +
add edi edx +
adc eax eax +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [esp+18h+var_8] +
add ecx esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_8] +
adc eax 0 +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
mul  dword ptr [edx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
add edi edx +
mov [esp+18h+var_4] edi +
adc [esp+18h+var_8] 0 +
mov edi [eax+0Ch] +
mov eax edi +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
cmp [ebp+arg_C] eax +
sbb esi esi +
xor ecx ecx +
neg esi  +
add esi edx +
adc ecx ecx +
add [esp+18h+var_4] esi +
adc [esp+18h+var_8] ecx +
mov ecx [ebp+arg_4] +
mov eax [ecx+4] +
mul  ebx +
mov esi eax +
mov eax [ecx+8] +
add esi [esp+18h+var_4] +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor ebx ebx +
add [esp+18h+var_8] edx +
adc ebx ebx +
mul  dword ptr [ecx+8] +
mov ecx eax +
add ecx esi +
adc edx 0 +
mov esi [esp+18h+var_8] +
mov eax edi +
mov edi [ebp+arg_8] +
add esi edx +
adc ebx 0 +
mul  dword ptr [edi+4] +
add eax ecx +
mov ecx [ebp+arg_4] +
adc edx 0 +
add esi edx +
mov [esp+18h+var_8] esi +
adc ebx 0 +
mov [esp+18h+var_4] ebx +
mov ebx [ebp+arg_0] +
mov [ebx] eax +
mov eax [ecx+8] +
mul  dword ptr [edi+0Ch] +
mov esi eax +
mov eax [ecx+0Ch] +
add esi [esp+18h+var_8] +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor edi edi +
add [esp+18h+var_4] edx +
adc edi edi +
mul  dword ptr [ecx+8] +
add eax esi +
mov ecx edx +
mov edx [ebp+arg_8] +
mov [ebx+4] eax +
adc ecx 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
mul  dword ptr [edx+0Ch] +
add eax ecx +
adc edx 0 +
add eax [esp+18h+var_4] +
mov [ebx+8] eax +
adc edx edi +
pop edi  +
pop esi  +
mov [ebx+0Ch] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov eax [ebx+18h] +
mul  dword ptr [ecx] +
mov esi [ebx] +
mov eax esi +
mov ecx edx +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+18h] +
mov eax [ebx+14h] +
add ecx edx +
mov edx [ebp+arg_8] +
adc edi edi +
mul  dword ptr [edx+4] +
mov eax [ebx+10h] +
add ecx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+8] +
mov eax [ebx+0Ch] +
add ecx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+0Ch] +
mov eax [ebx+8] +
add ecx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+10h] +
mov eax [ebx+4] +
mov ebx [ebp+arg_8] +
add ecx edx +
adc edi 0 +
mul  dword ptr [ebx+14h] +
mov ebx [ebx+1Ch] +
mov eax esi +
add ecx edx +
adc edi 0 +
mul  ebx +
mov esi eax +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor eax eax +
add edi edx +
adc eax eax +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_4] +
mov eax [eax+4] +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [esp+18h+var_8] +
add ecx esi +
adc edx 0 +
add edi edx +
mov edx [ebp+arg_8] +
adc eax 0 +
mov [esp+18h+var_8] eax +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+0Ch] +
add edi edx +
adc [esp+18h+var_8] 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add edi edx +
adc [esp+18h+var_8] 0 +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
adc [esp+18h+var_8] 0 +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add edi edx +
mov edx [ebp+arg_8] +
adc [esp+18h+var_8] 0 +
mul  dword ptr [edx+4] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
add edi edx +
mov [esp+18h+var_4] edi +
adc [esp+18h+var_8] 0 +
mov edi [eax+1Ch] +
mov eax edi +
mul  dword ptr [ecx] +
add eax esi +
adc edx 0 +
cmp [ebp+arg_C] eax +
sbb esi esi +
xor ecx ecx +
neg esi  +
add esi edx +
adc ecx ecx +
add [esp+18h+var_4] esi +
adc [esp+18h+var_8] ecx +
mov ecx [ebp+arg_4] +
mov eax [ecx+4] +
mul  ebx +
mov esi eax +
mov eax [ecx+8] +
add esi [esp+18h+var_4] +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor ebx ebx +
add [esp+18h+var_8] edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
add [esp+18h+var_8] edx +
mov eax [eax+0Ch] +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
add [esp+18h+var_8] edx +
mov eax [eax+10h] +
adc ebx 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
add [esp+18h+var_8] edx +
mov edx [ebp+arg_8] +
mov eax [eax+14h] +
adc ebx 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
add esi ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
adc edx 0 +
add [esp+18h+var_8] edx +
mov eax [eax+18h] +
adc ebx 0 +
mul  dword ptr [ecx+8] +
mov ecx eax +
mov eax edi +
mov edi [ebp+arg_8] +
add ecx esi +
mov esi [esp+18h+var_8] +
adc edx 0 +
add esi edx +
adc ebx 0 +
mul  dword ptr [edi+4] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add esi edx +
mov [ecx] eax +
mov ecx [ebp+arg_4] +
adc ebx 0 +
mov [esp+18h+var_8] esi +
mov eax [ecx+8] +
mul  dword ptr [edi+1Ch] +
mov esi eax +
mov eax [ecx+0Ch] +
add esi [esp+18h+var_8] +
mov ecx [ebp+arg_8] +
adc edx 0 +
xor edi edi +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+10h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+14h] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+0Ch] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+8] +
mov ecx [ebp+arg_0] +
add eax esi +
adc edx 0 +
mov [ecx+4] eax +
add ebx edx +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
adc edi 0 +
mov eax [ecx+0Ch] +
mul  dword ptr [edx+1Ch] +
mov esi eax +
mov eax [ecx+10h] +
mov ecx [ebp+arg_8] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+14h] +
add edi edx +
mov edx [ebp+arg_8] +
adc ebx 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+18h] +
add edi edx +
adc ebx 0 +
mul  dword ptr [ecx+10h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
mov esi [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add edi edx +
adc ebx 0 +
mul  dword ptr [esi+0Ch] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add edi edx +
mov [ecx+8] eax +
mov ecx [ebp+arg_4] +
adc ebx 0 +
mov eax [ecx+10h] +
mul  dword ptr [esi+1Ch] +
mov esi eax +
mov eax [ecx+14h] +
mov ecx [ebp+arg_8] +
add esi edi +
adc edx 0 +
xor edi edi +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
adc edx 0 +
mov eax [eax+18h] +
add ebx edx +
mov edx [ebp+arg_8] +
adc edi 0 +
mul  dword ptr [edx+14h] +
mov esi eax +
mov eax [ebp+arg_4] +
add esi ecx +
mov ecx [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add ebx edx +
adc edi 0 +
mul  dword ptr [ecx+10h] +
mov ecx [ebp+arg_0] +
add eax esi +
adc edx 0 +
mov [ecx+0Ch] eax +
add ebx edx +
mov ecx [ebp+arg_4] +
adc edi 0 +
mov eax [ecx+14h] +
mov edx [ebp+arg_8] +
mul  dword ptr [edx+1Ch] +
mov esi eax +
mov eax [ecx+18h] +
mov ecx [ebp+arg_8] +
add esi ebx +
adc edx 0 +
xor ebx ebx +
add edi edx +
adc ebx ebx +
mul  dword ptr [ecx+18h] +
mov ecx eax +
mov eax [ebp+arg_4] +
add ecx esi +
mov esi [ebp+arg_8] +
adc edx 0 +
mov eax [eax+1Ch] +
add edi edx +
adc ebx 0 +
mul  dword ptr [esi+14h] +
add eax ecx +
mov ecx [ebp+arg_0] +
adc edx 0 +
add edi edx +
mov [ecx+10h] eax +
mov ecx [ebp+arg_4] +
adc ebx 0 +
mov eax [ecx+18h] +
mul  dword ptr [esi+1Ch] +
mov esi eax +
mov eax [ecx+1Ch] +
mov ecx [ebp+arg_8] +
add esi edi +
adc edx 0 +
xor edi edi +
add ebx edx +
adc edi edi +
mul  dword ptr [ecx+18h] +
add eax esi +
mov ecx edx +
mov esi [ebp+arg_0] +
mov edx [ebp+arg_8] +
adc ecx 0 +
mov [esi+14h] eax +
mov eax [ebp+arg_4] +
mov eax [eax+1Ch] +
mul  dword ptr [edx+1Ch] +
add eax ecx +
adc edx 0 +
add eax ebx +
mov [esi+18h] eax +
adc edx edi +
pop edi  +
mov [esi+1Ch] edx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
lea ebx unk_48B3B0 +
mov esi esp +
and esp 0FFFFFFF0h +
lea edi [esp+0Ch+var_4C] +
sub esp 50h +
push esi  +
mov esi edi +
xor edx edx +
pshufd xmm0 oword ptr [eax+edx] +
pshufd xmm1 oword ptr [eax+edx] +
movdqa oword ptr [edi+edx*2] xmm0 +
psrlq xmm0 20h +
movdqa oword ptr [edi+edx*2+10h] xmm0 +
movdqa oword ptr [edi+edx*2+20h] xmm1 +
psrlq xmm1 20h +
movdqa oword ptr [edi+edx*2+30h] xmm1 +
add edx 10h +
cmp edx 10h +
jnz loc_428B03  +
lea edx [edi+20h] +
movdqa xmm7 oword ptr [esi] +
movdqa xmm5 oword ptr [edi] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx] +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+60h+var_54] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+60h+var_5C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+60h+var_5C] +
movq xmm1 [esp+60h+var_54] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+18h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+0A0h+var_94] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+0A0h+var_9C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+0A0h+var_9C] +
movq xmm1 [esp+0A0h+var_94] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+8] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+0A0h+var_94] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+0A0h+var_9C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+0A0h+var_9C] +
movq xmm1 [esp+0A0h+var_94] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+10h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+0A0h+var_94] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+12h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+0A0h+var_9C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_428D9A  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+0A0h+var_9C] +
movq xmm1 [esp+0A0h+var_94] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+18h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+0A0h+var_94] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+1Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+0A0h+var_9C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+0A0h+var_9C] +
movq xmm1 [esp+0A0h+var_94] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+20h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+0A0h+var_94] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+22h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+0A0h+var_9C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+0A0h+var_9C] +
movq xmm1 [esp+0A0h+var_94] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+38h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+8] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+10h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+12h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4293B3  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+18h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+1Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4293B3  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+20h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+22h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429376  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+28h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429376  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+30h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+32h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429339  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+38h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+3Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429376  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+40h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+42h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429376  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+48h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+4Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4293B3  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+50h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+52h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4293B3  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+58h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+5Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+60h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+120h+var_114] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+62h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+120h+var_11C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+120h+var_11C] +
movq xmm1 [esp+120h+var_114] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+68h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+6Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+70h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+72h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+78h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+80h] +
movdqa xmm1 oword ptr [esi+70h] +
movdqa xmm1 oword ptr [esi+60h] +
movdqa xmm1 oword ptr [esi+50h] +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+8] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+10h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+12h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A11D  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+18h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+1Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A11D  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+20h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+22h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0E0  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+28h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+2Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0E0  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+30h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+32h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0A3  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+38h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+3Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0A3  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+40h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+42h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A066  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+48h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+4Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A066  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+50h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+52h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A029  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+58h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+5Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A029  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+60h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+62h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429FEC  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+68h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+6Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429FEC  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+70h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+72h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429FAC  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+78h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+7Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429FEC  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+80h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+82h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_429FEC  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+88h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+8Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A029  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+90h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+92h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A029  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+98h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+9Ah] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A066  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0A0h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0A2h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A066  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0A8h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0AAh] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0A3  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0B0h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0B2h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0A3  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0B8h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0BAh] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0E0  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0C0h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0C2h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A0E0  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0C8h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0CAh] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A11D  +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0D0h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0D2h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42A11D  +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0D8h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0DAh] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add esi 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movdqa xmm3 oword ptr [esi] +
movq xmm1 qword ptr [esi+8] +
pmuludq xmm1 xmm3 +
pmuludq xmm3 xmm3 +
movdqa xmm0 oword ptr [ebx] +
movdqa xmm2 xmm0 +
pand xmm0 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm0 +
paddd xmm7 xmm1 +
pand xmm2 xmm3 +
psrld xmm3 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm2 +
paddd xmm5 xmm3 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movhlps xmm6 xmm4 +
movd dword ptr [ecx+0E0h] xmm4 +
paddd xmm5 xmm7 +
movhps [esp+220h+var_214] xmm5 +
psrlq xmm4 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0E2h] xmm4 +
psrlq xmm4 30h +
paddd xmm4 xmm6 +
movq [esp+220h+var_21C] xmm4 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm5 oword ptr [edi-10h] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx-10h] +
pand xmm6 xmm7 +
psrld xmm7 10h +
paddd xmm6 xmm6 +
paddd xmm7 xmm7 +
paddd xmm4 xmm4 +
paddd xmm5 xmm5 +
movq xmm0 [esp+220h+var_21C] +
movq xmm1 [esp+220h+var_214] +
paddd xmm4 xmm0 +
paddd xmm5 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0E8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0EAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0F0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0F2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0F8h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BA45  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+18h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BD3E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BD01  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BCC4  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BD01  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42BD3E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+38h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+80h] +
movdqa xmm1 oword ptr [esi-70h] +
movdqa xmm1 oword ptr [esi+70h] +
movdqa xmm1 oword ptr [esi-60h] +
movdqa xmm1 oword ptr [esi+60h] +
movdqa xmm1 oword ptr [esi-50h] +
movdqa xmm1 oword ptr [esi+50h] +
movdqa xmm1 oword ptr [esi-40h] +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42D029  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CFEC  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CFAF  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CF72  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CF35  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CEF8  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CEBB  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+38h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+3Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE7E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+40h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+42h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE41  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+48h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+4Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE04  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+50h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+52h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CDC7  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+58h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+5Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD8A  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+60h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+62h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD4D  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+68h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+6Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD10  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+70h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+72h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CCD0  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+78h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+7Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD10  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+80h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+82h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD4D  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+88h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+8Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CD8A  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+90h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+92h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CDC7  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+98h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+9Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE04  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0A0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0A2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE41  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0A8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0AAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CE7E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0B0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0B2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CEBB  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0B8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0BAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CEF8  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0C0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0C2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CF35  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0C8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0CAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CF72  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0D0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0D2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CFAF  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0D8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0DAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42CFEC  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0E0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0E2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42D029  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0E8h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0EAh] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+0F0h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0F2h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+0F8h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_8] +
mov ecx [ebp+arg_0] +
lea ebx unk_48B3B0 +
mov esi esp +
and esp 0FFFFFFF0h +
sub esp 70h +
push esi  +
xor edx edx +
pshufd xmm0 oword ptr [eax+edx] +
pshufd xmm1 oword ptr [eax+edx] +
pshufd xmm2 oword ptr [edi+edx] +
movdqa oword ptr [esp+edx*2+80h+var_6C] xmm0 +
psrlq xmm0 20h +
movdqa oword ptr [esp+edx*2+80h+var_5C] xmm0 +
movdqa oword ptr [esp+edx*2+80h+var_4C] xmm1 +
psrlq xmm1 20h +
movdqa oword ptr [esp+edx*2+80h+var_3C] xmm1 +
movdqa oword ptr [esp+edx*2+80h+var_2C] xmm2 +
psrlq xmm2 20h +
movdqa oword ptr [esp+edx*2+80h+var_1C] xmm2 +
add edx 10h +
cmp edx 10h +
jnz loc_42E260  +
lea edi [esp+80h+var_6C] +
lea edx [esp+80h+var_4C] +
lea esi [esp+80h+var_2C] +
movdqa xmm7 oword ptr [esi] +
movdqa xmm5 oword ptr [edi] +
pmuludq xmm5 xmm7 +
movdqa xmm4 oword ptr [ebx] +
movdqa xmm6 xmm4 +
pand xmm4 xmm5 +
psrld xmm5 10h +
pmuludq xmm7 oword ptr [edx] +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm6 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm6 +
paddq xmm4 xmm0 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
pmuludq xmm6 oword ptr [edx] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movhlps xmm7 xmm6 +
paddd xmm6 xmm7 +
psllq xmm6 20h +
paddd xmm4 xmm6 +
movq qword ptr [ecx+8] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E48E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E451  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm6 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm6 +
paddq xmm4 xmm0 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
pmuludq xmm6 oword ptr [edx] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm0 oword ptr [edi+10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movhlps xmm7 xmm6 +
paddd xmm6 xmm7 +
psllq xmm6 20h +
paddd xmm4 xmm6 +
movq qword ptr [ecx+18h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E8CE  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E891  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E854  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E817  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E7DA  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42E79D  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm6 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm6 +
paddq xmm4 xmm0 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
pmuludq xmm6 oword ptr [edx] +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm0 oword ptr [edi-40h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-40h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm0 oword ptr [edi+30h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+30h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm0 oword ptr [edi-30h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-30h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm0 oword ptr [edi+20h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+20h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm0 oword ptr [edi+10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movhlps xmm7 xmm6 +
paddd xmm6 xmm7 +
psllq xmm6 20h +
paddd xmm4 xmm6 +
movq qword ptr [ecx+38h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi-70h] +
movdqa xmm1 oword ptr [esi+70h] +
movdqa xmm1 oword ptr [esi-60h] +
movdqa xmm1 oword ptr [esi+60h] +
movdqa xmm1 oword ptr [esi-50h] +
movdqa xmm1 oword ptr [esi+50h] +
movdqa xmm1 oword ptr [esi-40h] +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F1A9  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F16C  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F12F  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F0F2  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F0B5  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F078  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42F03B  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+38h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+3Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EFFE  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+40h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+42h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EFC1  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+48h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+4Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EF84  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+50h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+52h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EF47  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+58h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+5Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EF0A  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+60h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+62h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EECD  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+68h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+6Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42EE90  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+70h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+72h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm6 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm6 +
paddq xmm4 xmm0 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
pmuludq xmm6 oword ptr [edx] +
movdqa xmm1 oword ptr [esi+80h] +
movdqa xmm0 oword ptr [edi-80h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-80h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-70h] +
movdqa xmm0 oword ptr [edi+70h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+70h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+70h] +
movdqa xmm0 oword ptr [edi-70h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-70h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-60h] +
movdqa xmm0 oword ptr [edi+60h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+60h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+60h] +
movdqa xmm0 oword ptr [edi-60h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-60h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-50h] +
movdqa xmm0 oword ptr [edi+50h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+50h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+50h] +
movdqa xmm0 oword ptr [edi-50h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-50h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-40h] +
movdqa xmm0 oword ptr [edi+40h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+40h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm0 oword ptr [edi-40h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-40h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm0 oword ptr [edi+30h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+30h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm0 oword ptr [edi-30h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-30h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm0 oword ptr [edi+20h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+20h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm0 oword ptr [edi-20h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-20h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm0 oword ptr [edi+10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx+10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
paddq xmm4 xmm0 +
paddd xmm6 xmm1 +
movhlps xmm7 xmm6 +
paddd xmm6 xmm7 +
psllq xmm6 20h +
paddd xmm4 xmm6 +
movq qword ptr [ecx+78h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
psllq xmm5 20h +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42FCDF  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42FD1C  +
shr eax 10h +
movd xmm0 eax +
movd xmm1 dword ptr [ecx+4] +
psrld xmm1 10h +
pcmpgtd xmm1 xmm0 +
psrld xmm1 1Fh +
paddd xmm4 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_42FD59  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+18h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
psllq xmm5 20h +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430134  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430171  +
shr eax 10h +
movd xmm0 eax +
movd xmm1 dword ptr [ecx+4] +
psrld xmm1 10h +
pcmpgtd xmm1 xmm0 +
psrld xmm1 1Fh +
paddd xmm4 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4301AE  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4301EB  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430228  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430265  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4302A2  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+38h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebx  +
movdqa xmm1 oword ptr [esi+80h] +
movdqa xmm1 oword ptr [esi-70h] +
movdqa xmm1 oword ptr [esi+70h] +
movdqa xmm1 oword ptr [esi-60h] +
movdqa xmm1 oword ptr [esi+60h] +
movdqa xmm1 oword ptr [esi-50h] +
movdqa xmm1 oword ptr [esi+50h] +
movdqa xmm1 oword ptr [esi-40h] +
movdqa xmm1 oword ptr [esi+40h] +
movdqa xmm1 oword ptr [esi-30h] +
movdqa xmm1 oword ptr [esi+30h] +
movdqa xmm1 oword ptr [esi-20h] +
movdqa xmm1 oword ptr [esi+20h] +
movdqa xmm1 oword ptr [esi-10h] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi-10h] +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm0 xmm1 +
pmuludq xmm1 oword ptr [edx-10h] +
movdqa xmm3 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm3 xmm1 +
psrld xmm1 10h +
paddd xmm6 xmm3 +
paddd xmm7 xmm1 +
retn   +
***
psllq xmm5 20h +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430962  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4309A2  +
shr eax 10h +
movd xmm0 eax +
movd xmm1 dword ptr [ecx+4] +
psrld xmm1 10h +
pcmpgtd xmm1 xmm0 +
psrld xmm1 1Fh +
paddd xmm4 xmm1 +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_4309DF  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+8] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+0Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430A1C  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+10h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+12h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430A59  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+18h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+1Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430A96  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+20h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+22h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430AD3  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+28h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+2Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430B10  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+30h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+32h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430B4D  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+38h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+3Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430B8A  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+40h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+42h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430BC7  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+48h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+4Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430C04  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+50h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+52h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430C41  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+58h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+5Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add esi 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430C7E  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+60h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+62h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
add edi 10h +
add edx 10h +
movdqa xmm7 oword ptr [esi] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
call sub_430CBB  +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+68h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+6Ah] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
movdqa xmm7 oword ptr [esi+10h] +
movdqa xmm0 oword ptr [edi] +
pmuludq xmm0 xmm7 +
movdqa xmm2 oword ptr [ebx] +
pmuludq xmm7 oword ptr [edx] +
movdqa xmm6 xmm2 +
pand xmm2 xmm0 +
psrld xmm0 10h +
paddd xmm4 xmm2 +
paddd xmm5 xmm0 +
pand xmm6 xmm7 +
psrld xmm7 10h +
movq xmm0 xmm6 +
punpckhqdq xmm6 xmm0 +
movq xmm1 xmm7 +
punpckhqdq xmm7 xmm1 +
paddd xmm6 xmm0 +
pslldq xmm6 4 +
paddd xmm7 xmm1 +
paddd xmm4 xmm6 +
pslldq xmm7 4 +
movq xmm6 xmm4 +
paddd xmm5 xmm7 +
movq xmm7 xmm5 +
movd dword ptr [ecx+70h] xmm4 +
psrlq xmm6 10h +
paddq xmm6 xmm7 +
punpckhqdq xmm4 xmm0 +
punpckhqdq xmm5 xmm0 +
movq qword ptr [ecx+72h] xmm6 +
psrlq xmm6 30h +
paddd xmm4 xmm6 +
psllq xmm5 10h +
paddq xmm4 xmm5 +
movq qword ptr [ecx+78h] xmm4 +
pop esp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov al byte_4A2927 +
mov dword_4A3184 offset sub_427160 +
mov dword_4A31A8 offset sub_428150 +
mov dword_4A31CC offset sub_427960 +
mov dword_4A31F0 offset sub_428540 +
mov dword_4A31F4 offset sub_428570 +
test al al +
jnz loc_431685  +
call sub_446070  +
mov al byte_4A2927 +
cmp byte_4A2926 0 +
jz loc_431759  +
test al al +
jnz loc_43169B  +
call sub_446070  +
cmp byte_4A2925 0 +
jz loc_4316B8  +
mov off_49EB5C offset loc_427020 +
mov off_49EB60 offset loc_4270C0 +
mov dword_49EB58 20h +
mov dword_4A3188 offset sub_42B9A0 +
mov dword_4A318C offset sub_42BC10 +
mov dword_4A3194 offset sub_42C150 +
mov dword_4A31A4 offset sub_42CC10 +
mov dword_4A31AC offset sub_42E240 +
mov dword_4A31B0 offset sub_42E3A0 +
mov dword_4A31B8 offset sub_42E6E0 +
mov dword_4A31C8 offset sub_42EDD0 +
mov dword_4A31D0 offset sub_428AE0 +
mov dword_4A31D4 offset sub_428D10 +
mov dword_4A31DC offset sub_4292A0 +
mov dword_4A31EC offset sub_429F10 +
mov dword_4A31F8 offset sub_42FC10 +
mov dword_4A3200 offset sub_430010 +
mov dword_4A3210 offset sub_4307A0 +
retn   +
mov dword_4A3188 offset sub_4271D0 +
mov dword_4A318C offset sub_427360 +
mov dword_4A31AC offset sub_428180 +
mov dword_4A31B0 offset sub_428250 +
mov dword_4A31D0 offset sub_4279E0 +
mov dword_4A31D4 offset sub_427BA0 +
mov dword_4A31F8 offset sub_4286D0 +
retn   +
***
sub esp 14h +
push ebp  +
mov ebp [esp+24h] +
mov eax ecx +
mov [esp+8] edx +
mov [esp+4] eax +
cmp ebp dword_49EB58 +
ja loc_4317D7  +
push dword ptr [esp+20h]  +
shr ebp 2 +
push dword ptr [esp+20h]  +
push eax  +
mov eax dword_4A3184[ebp*4] +
call eax  +
add esp 0Ch +
pop ebp  +
add esp 14h +
retn   +
***
mov edx [esp+1Ch] +
push ebx  +
mov ebx ebp +
shr ebx 1 +
push esi  +
push edi  +
mov ecx ebx +
lea eax ds:0[ebx*4] +
lea esi [eax+edx] +
mov [esp+30h] eax +
mov [esp+1Ch] esi +
jz loc_43181C  +
mov edi esi +
mov eax esi +
sub edi edx +
nop   +
mov edx [eax-4] +
lea eax [eax-4] +
mov esi [edi+eax] +
dec ecx  +
cmp edx esi +
ja loc_43198D  +
jb loc_431985  +
test ecx ecx +
jnz loc_431800  +
xor eax eax +
xor ecx ecx +
mov edx ebx +
test eax eax +
cmovg edx ecx +
mov ecx [esp+28h] +
mov eax edx +
mov [esp+20h] edx +
xor eax ebx +
lea eax [ecx+eax*4] +
push eax  +
lea eax [ecx+edx*4] +
mov edx [esp+14h] +
push eax  +
mov ecx ebx +
call off_49EB60  +
mov edx [esp+2Ch] +
lea esi ds:0[ebx*4] +
add esi edx +
mov ecx ebx +
mov [esp+18h] esi +
test ebx ebx +
jz loc_431880  +
mov edi esi +
mov eax esi +
sub edi edx +
mov edx [eax-4] +
lea eax [eax-4] +
mov esi [edi+eax] +
dec ecx  +
cmp edx esi +
ja loc_43199F  +
jb loc_431997  +
test ecx ecx +
jnz loc_431864  +
xor eax eax +
mov edx [esp+2Ch] +
xor ecx ecx +
test eax eax +
mov edi ebx +
cmovg edi ecx +
mov ecx [esp+30h] +
add ecx [esp+10h] +
mov eax edi +
xor eax ebx +
lea eax [edx+eax*4] +
push eax  +
lea eax [edx+edi*4] +
mov edx ecx +
push eax  +
mov ecx ebx +
call off_49EB60  +
mov eax [esp+14h] +
push ebx  +
push dword ptr [esp+1Ch]  +
push dword ptr [esp+24h]  +
lea esi [eax+ebp*4] +
mov eax [esp+1Ch] +
mov edx esi +
lea ecx [eax+ebp*4] +
call loc_4317A0  +
mov ecx [esp+1Ch] +
lea eax ds:0[ebx*4] +
add eax ecx +
mov edx esi +
push ebx  +
push eax  +
push ecx  +
mov ecx [esp+2Ch] +
call loc_4317A0  +
mov edx [esp+44h] +
mov ecx [esp+28h] +
push ebx  +
push edx  +
mov edx [esp+48h] +
push edx  +
mov edx esi +
call loc_4317A0  +
mov ecx [esp+34h] +
lea eax ds:0[ebx*4] +
add esp 24h +
add eax ecx +
lea esi [ecx+ebp*4] +
mov ecx ebx +
push eax  +
push esi  +
mov edx esi +
call off_49EB5C  +
mov ecx [esp+10h] +
lea edx ds:0[ebx*4] +
push ecx  +
push esi  +
mov [esp+20h] eax +
lea edx [edx+ecx] +
mov [esp+38h] eax +
mov ecx ebx +
call off_49EB5C  +
add [esp+18h] eax +
lea ecx [ebx+ebp] +
mov eax [esp+10h] +
mov edx esi +
lea ecx [eax+ecx*4] +
push ecx  +
mov [esp+20h] ecx +
mov ecx ebx +
push esi  +
call off_49EB5C  +
add [esp+30h] eax +
mov ecx ebp +
push dword ptr [esp+14h]  +
lea eax ds:0[ebx*4] +
add eax [esp+14h] +
mov edx eax +
push eax  +
cmp [esp+28h] edi +
jnz loc_4319A9  +
call off_49EB60  +
mov ebp [esp+30h] +
sub ebp eax +
jmp loc_4319B5  +
or eax 0FFFFFFFFh +
jmp loc_43181E  +
***
mov eax 1 +
jmp loc_43181E  +
***
or eax 0FFFFFFFFh +
jmp loc_431882  +
***
mov eax 1 +
jmp loc_431882  +
***
call off_49EB5C  +
mov ebp [esp+30h] +
add ebp eax +
mov ecx [esi] +
mov eax [esp+18h] +
add eax ecx +
mov [esi] eax +
cmp eax ecx +
jb loc_4319C7  +
xor eax eax +
jmp loc_4319E0  +
mov eax 1 +
cmp ebx eax +
jbe loc_4319DB  +
add dword ptr [esi+eax*4] 1 +
jnz loc_4319C3  +
inc eax  +
cmp eax ebx +
jb loc_4319D0  +
mov eax 1 +
mov edx [esp+1Ch] +
mov ecx [edx] +
add eax ecx +
add eax ebp +
mov [edx] eax +
cmp eax ecx +
jnb loc_431A0B  +
mov eax 1 +
cmp ebx eax +
jbe loc_431A0B  +
add dword ptr [edx+eax*4] 1 +
jnz loc_431A0B  +
inc eax  +
cmp eax ebx +
jb loc_431A00  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
add esp 14h +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_4] +
mov [esp+8+var_4] edx +
mov [esp+8+var_8] ecx +
cmp eax dword_49EB58 +
ja loc_431A4E  +
push [esp+8+arg_0]  +
shr eax 2 +
push ecx  +
mov eax dword_4A31CC[eax*4] +
call eax  +
add esp 8 +
add esp 8 +
retn   +
push ebx  +
push ebp  +
push esi  +
mov ebp eax +
lea ebx [edx+eax*4] +
push edi  +
mov edi [esp+18h+arg_0] +
mov edx ebx +
shr ebp 1 +
push ebp  +
push edi  +
call sub_431A20  +
mov eax [esp+20h+arg_4] +
lea esi [edi+ebp*4] +
mov ecx [esp+20h+var_8] +
mov edx ebx +
push ebp  +
push esi  +
lea ecx [ecx+eax*4] +
call sub_431A20  +
push ebp  +
mov edx ebx +
mov ebx [esp+2Ch+var_4] +
push esi  +
push edi  +
mov ecx ebx +
call loc_4317A0  +
mov eax [esp+34h+var_8] +
add esp 1Ch +
lea esi [eax+ebp*4] +
push ebx  +
mov ebx [esp+1Ch+arg_4] +
mov edx esi +
push esi  +
mov ecx ebx +
call off_49EB5C  +
push [esp+10h+arg_0]  +
mov edx esi +
mov ecx ebx +
push esi  +
mov edi eax +
call off_49EB5C  +
add edi eax +
lea ecx [ebx+ebp] +
mov eax [esp+18h+var_8] +
lea edx [eax+ecx*4] +
mov ecx [edx] +
lea eax [ecx+edi] +
mov [edx] eax +
cmp eax ecx +
jnb loc_431AE3  +
mov eax 1 +
cmp ebp eax +
jbe loc_431AE3  +
add dword ptr [edx+eax*4] 1 +
jnz loc_431AE3  +
inc eax  +
cmp eax ebp +
jb loc_431AD8  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_8] +
mov eax ecx +
push edi  +
mov edi edx +
mov [esp+10h+var_4] eax +
mov [esp+10h+var_8] edi +
cmp esi dword_49EB58 +
ja loc_431B2B  +
push [esp+10h+arg_4]  +
shr esi 2 +
push [esp+14h+arg_0]  +
push eax  +
mov eax dword_4A31A8[esi*4] +
call eax  +
add esp 0Ch +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push ebx  +
mov ebx [esp+14h+arg_4] +
push ebp  +
mov ebp [esp+18h+arg_0] +
shr esi 1 +
push esi  +
push ebx  +
push ebp  +
mov [esp+24h+arg_8] esi +
call loc_4317A0  +
mov ecx [esp+24h+var_8] +
lea eax ds:0[esi*4] +
push esi  +
add eax ebp +
lea edi [edi+esi*4] +
push ebx  +
push eax  +
mov edx edi +
call sub_431AF0  +
mov eax [esp+30h+var_4] +
add esp 18h +
mov ecx [esp+18h+arg_8] +
push [esp+18h+var_8]  +
lea esi [eax+esi*4] +
push esi  +
mov edx esi +
call off_49EB5C  +
mov eax [esp+18h+arg_8] +
mov edx edi +
push eax  +
lea eax [ebx+eax*4] +
mov ebx [esp+1Ch+var_8] +
push eax  +
push ebp  +
mov ecx ebx +
call sub_431AF0  +
mov ecx [esp+24h+arg_8] +
add esp 0Ch +
mov edx esi +
push ebx  +
push esi  +
call off_49EB5C  +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
sub esp 18h +
push ebx  +
mov ebx ecx +
mov [esp+8] edx +
mov ecx [esp+2Ch] +
mov [esp+4] ebx +
cmp ecx dword_49EB58 +
ja loc_431BF1  +
mov eax [esp+20h] +
mov edx ecx +
shr edx 2 +
push dword ptr [eax+ecx*4-4]  +
mov eax dword_4A31F0[edx*4] +
push dword ptr [esp+2Ch]  +
push dword ptr [esp+2Ch]  +
push ebx  +
call eax  +
add esp 10h +
pop ebx  +
add esp 18h +
retn   +
***
push ebp  +
mov ebp [esp+28h] +
push esi  +
push edi  +
mov edi ecx +
shr edi 1 +
mov ecx edi +
lea eax ds:0[edi*4] +
lea edx [eax+ebp] +
mov [esp+18h] eax +
mov [esp+20h] edx +
jz loc_431C3C  +
mov ebx edx +
mov eax edx +
sub ebx ebp +
mov edx [eax-4] +
lea eax [eax-4] +
mov esi [ebx+eax] +
dec ecx  +
cmp edx esi +
ja loc_431D78  +
jb loc_431D70  +
test ecx ecx +
jnz loc_431C20  +
xor eax eax +
xor edx edx +
mov ecx edi +
test eax eax +
cmovg ecx edx +
mov eax ecx +
mov [esp+24h] ecx +
xor eax edi +
lea eax ds:0[eax*4] +
add eax ebp +
push eax  +
lea eax ds:0[ecx*4] +
mov ecx edi +
add eax ebp +
mov ebp [esp+14h] +
push eax  +
mov edx ebp +
call off_49EB60  +
mov esi [esp+34h] +
lea edx ds:0[edi*4] +
add edx esi +
mov ecx edi +
mov [esp+1Ch] edx +
test edi edi +
jz loc_431CAC  +
mov ebx edx +
mov eax edx +
sub ebx esi +
nop   +
mov edx [eax-4] +
lea eax [eax-4] +
mov esi [ebx+eax] +
dec ecx  +
cmp edx esi +
ja loc_431D8A  +
jb loc_431D82  +
test ecx ecx +
jnz loc_431C90  +
xor eax eax +
xor ecx ecx +
mov esi edi +
test eax eax +
cmovg esi ecx +
mov ecx [esp+34h] +
add ebp [esp+18h] +
mov eax esi +
xor eax edi +
mov edx ebp +
lea eax [ecx+eax*4] +
push eax  +
lea eax [ecx+esi*4] +
mov ecx edi +
push eax  +
call off_49EB60  +
mov eax [esp+38h] +
mov ecx [esp+14h] +
push edi  +
push ebp  +
mov ebp [esp+18h] +
lea ebx [ecx+eax*4] +
push ebp  +
mov edx ebx +
call loc_4317A0  +
push edi  +
push dword ptr [esp+2Ch]  +
mov edx ebx +
mov ecx ebp +
push dword ptr [esp+34h]  +
call loc_4317A0  +
mov eax [esp+44h] +
lea edx ds:0[edi*4] +
add esp 18h +
mov ecx edi +
push eax  +
add eax edx +
mov edx ebx +
push eax  +
call off_49EB60  +
cmp [esp+24h] esi +
mov ebp eax +
mov esi [esp+14h] +
mov edx ebx +
push esi  +
mov ecx edi +
push ebx  +
jnz loc_431D94  +
call off_49EB5C  +
mov edx [esp+10h] +
mov ecx ebx +
push edi  +
sub ebp eax +
call sub_426E40  +
xor ecx ecx +
add esp 4 +
cmp eax 0FFFFFFFFh +
mov edx ebx +
lea eax ds:0[edi*4] +
setz cl  +
add eax esi +
push eax  +
mov [esp+3Ch] ecx +
mov ecx edi +
push ebx  +
call off_49EB60  +
mov ecx [esp+38h] +
mov esi ecx +
sub esi eax +
jmp loc_431DD3  +
or eax 0FFFFFFFFh +
jmp loc_431C3E  +
***
mov eax 1 +
jmp loc_431C3E  +
***
or eax 0FFFFFFFFh +
jmp loc_431CAE  +
***
mov eax 1 +
jmp loc_431CAE  +
***
call off_49EB60  +
mov edx [esp+10h] +
mov ecx ebx +
push edi  +
add ebp eax +
call sub_426E40  +
xor ecx ecx +
add esp 4 +
cmp eax 0FFFFFFFFh +
mov edx ebx +
lea eax ds:0[edi*4] +
setz cl  +
add eax esi +
push eax  +
mov [esp+3Ch] ecx +
mov ecx edi +
push ebx  +
call off_49EB5C  +
mov ecx [esp+38h] +
lea esi [ecx+eax] +
add ebp ecx +
js loc_431E05  +
mov ecx [ebx] +
lea eax [ecx+ebp] +
mov [ebx] eax +
cmp eax ecx +
jb loc_431DE8  +
xor eax eax +
add esi eax +
jmp loc_431E16  +
mov eax 1 +
cmp edi eax +
jbe loc_431DFC  +
add dword ptr [ebx+eax*4] 1 +
jnz loc_431DE2  +
inc eax  +
cmp eax edi +
jb loc_431DF1  +
mov eax 1 +
add esi eax +
jmp loc_431E16  +
neg ebp  +
mov edx edi +
push ebp  +
mov ecx ebx +
call sub_426E80  +
add esp 4 +
sub esi eax +
mov edx [esp+10h] +
lea ebp ds:0[edi*4] +
add ebp [esp+10h] +
mov ecx edi +
push ebp  +
push ebx  +
call off_49EB5C  +
mov ecx [ebp+0] +
add eax esi +
add eax ecx +
mov [ebp+0] eax +
cmp eax ecx +
jnb loc_431E52  +
mov eax 1 +
cmp edi eax +
jbe loc_431E52  +
add dword ptr [ebp+eax*4+0] 1 +
jnz loc_431E52  +
inc eax  +
cmp eax edi +
jb loc_431E46  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
sub esp 14h +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+28h] +
mov ebx edx +
push edi  +
mov edi [esp+34h] +
mov [esp+10h] ecx +
mov [esp+34h] edi +
cmp esi edi +
jnz loc_431EB1  +
mov eax [esp+28h] +
mov edx [esp+30h] +
push esi  +
cmp eax edx +
jnz loc_431E9D  +
push eax  +
mov edx ebx +
call sub_431A20  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
push edx  +
push eax  +
mov edx ebx +
call loc_4317A0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
jbe loc_431EC7  +
mov edx [esp+28h] +
mov eax esi +
mov ebp [esp+30h] +
mov esi edi +
mov edi eax +
mov [esp+34h] edi +
jmp loc_431ECF  +
mov edx [esp+30h] +
mov ebp [esp+28h] +
mov [esp+2Ch] edx +
cmp esi 2 +
jnz loc_431F8F  +
cmp dword ptr [ebp+4] 0 +
jnz loc_431F8F  +
mov eax [ebp+0] +
mov [esp+1Ch] eax +
sub eax 0 +
jz loc_431F74  +
sub eax 1 +
jz loc_431F43  +
xor ebx ebx +
test edi edi +
jz loc_431F30  +
sub edx ecx +
mov esi ecx +
mov ebp edi +
mov [esp+2Ch] edx +
mov edi [esp+1Ch] +
mov ecx edx +
mov eax [ecx+esi] +
lea esi [esi+4] +
mul  edi +
add eax ebx +
mov [esi-4] eax +
adc edx 0 +
mov ebx edx +
sub ebp 1 +
jnz loc_431F11  +
mov edi [esp+34h] +
mov ecx [esp+10h] +
mov [ecx+edi*4] ebx +
mov dword ptr [ecx+edi*4+4] 0 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
cmp ecx edx +
jz loc_431F5D  +
lea eax ds:0[edi*4] +
push eax  +
push edx  +
push ecx  +
call loc_452BD0  +
mov ecx [esp+1Ch] +
add esp 0Ch +
mov dword ptr [ecx+edi*4+4] 0 +
mov dword ptr [ecx+edi*4] 0 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
lea ecx [edi+2] +
test ecx ecx +
jz loc_432180  +
mov edi [esp+10h] +
xor eax eax +
stos   +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
xor edx edx +
mov eax edi +
div  esi +
test al 1 +
jnz loc_43208D  +
push esi  +
push dword ptr [esp+30h]  +
mov edx ebx +
push ebp  +
call loc_4317A0  +
lea ecx ds:0[esi*8] +
add esp 0Ch +
lea eax ds:0[esi*4] +
mov [esp+20h] ecx +
add eax [esp+10h] +
lea edx [ecx+ebx] +
mov [esp+34h] eax +
cmp edx eax +
jz loc_431FE0  +
lea ecx ds:0[esi*4] +
push ecx  +
push eax  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
lea ecx [esi+esi] +
mov [esp+14h] ecx +
cmp ecx edi +
jnb loc_432039  +
mov eax [esp+2Ch] +
lea edx [eax+ecx*4] +
lea eax [ecx+esi] +
mov [esp+18h] edx +
lea ecx [ebx+eax*4] +
mov [esp+1Ch] ecx +
push esi  +
push edx  +
push ebp  +
mov edx ebx +
call loc_4317A0  +
mov eax [esp+20h] +
lea ecx ds:0[esi*8] +
mov edx [esp+24h] +
add esp 0Ch +
add edx ecx +
mov ecx [esp+1Ch] +
add ecx [esp+20h] +
lea eax [eax+esi*2] +
mov [esp+18h] edx +
mov [esp+14h] eax +
mov [esp+1Ch] ecx +
cmp eax edi +
jb loc_432000  +
mov [esp+1Ch] esi +
cmp esi edi +
jnb loc_432138  +
mov eax [esp+2Ch] +
sub eax [esp+10h] +
mov ecx [esp+34h] +
mov [esp+2Ch] eax +
push esi  +
add eax ecx +
mov edx ebx +
push eax  +
push ebp  +
call loc_4317A0  +
mov eax [esp+28h] +
lea edx ds:0[esi*8] +
mov ecx [esp+40h] +
add esp 0Ch +
add ecx edx +
mov [esp+34h] ecx +
lea eax [eax+esi*2] +
mov [esp+1Ch] eax +
cmp eax edi +
mov eax [esp+2Ch] +
jb loc_432055  +
jmp loc_432138  +
mov dword ptr [esp+1Ch] 0 +
test edi edi +
jz loc_4320E7  +
mov edx [esp+2Ch] +
mov eax ecx +
sub edx ecx +
mov [esp+34h] eax +
mov [esp+20h] edx +
mov ecx [esp+34h] +
add eax edx +
push esi  +
push eax  +
push ebp  +
mov edx ebx +
call loc_4317A0  +
mov ecx [esp+28h] +
lea edx ds:0[esi*8] +
mov eax [esp+40h] +
add esp 0Ch +
add eax edx +
mov edx [esp+20h] +
mov [esp+34h] eax +
lea ecx [ecx+esi*2] +
mov [esp+1Ch] ecx +
cmp ecx edi +
jb loc_4320B0  +
mov [esp+34h] esi +
cmp esi edi +
jnb loc_432138  +
mov eax [esp+2Ch] +
lea ecx [eax+esi*4] +
lea eax [ebx+esi*8] +
mov [esp+1Ch] ecx +
mov [esp+2Ch] eax +
push esi  +
push ecx  +
push ebp  +
mov edx ebx +
mov ecx eax +
call loc_4317A0  +
mov eax [esp+40h] +
lea edx ds:0[esi*8] +
mov ecx [esp+28h] +
add esp 0Ch +
add [esp+2Ch] edx +
add ecx edx +
mov [esp+1Ch] ecx +
lea eax [eax+esi*2] +
mov [esp+34h] eax +
cmp eax edi +
mov eax [esp+2Ch] +
jb loc_432101  +
mov ebp [esp+10h] +
lea eax [ebx+esi*8] +
lea edx ds:0[esi*4] +
mov ecx edi +
add edx ebp +
sub ecx esi +
push eax  +
push edx  +
call off_49EB5C  +
test eax eax +
jz loc_432180  +
lea edx ds:0[edi*4] +
add edx ebp +
mov ecx [edx] +
lea eax [ecx+1] +
mov [edx] eax +
cmp eax ecx +
jnb loc_432180  +
mov eax 1 +
cmp esi eax +
jbe loc_432180  +
add dword ptr [edx+eax*4] 1 +
jnz loc_432180  +
inc eax  +
cmp eax esi +
jb loc_432175  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
push ecx  +
push ebx  +
push ebp  +
mov ebp [esp+14h] +
mov eax ecx +
mov [esp+8] eax +
mov ebx edx +
push esi  +
push edi  +
cmp ebp 2 +
jnz loc_432251  +
mov ebp [esp+18h] +
mov edx 3 +
mov edi [ebp+0] +
mov esi edi +
and esi 7 +
add bh bh +
adc eax offset dword_4A31A8 +
mov ecx [esi] +
add esp 0Ch +
lea eax [ecx-1] +
mov [esi] eax +
cmp eax ecx +
jbe loc_432213  +
mov edx 1 +
nop   +
mov ecx [esi+edx*4] +
lea eax [ecx-1] +
mov [esi+edx*4] eax +
test ecx ecx +
jnz loc_432213  +
inc edx  +
cmp edx 2 +
jb loc_432200  +
mov eax [esi] +
not dword ptr [esi+4]  +
not eax  +
mov ecx eax +
lea eax [ecx+2] +
mov [esi] eax +
cmp eax ecx +
jnb loc_43223C  +
mov eax 1 +
push esi  +
push ebx  +
push dword ptr [esp+18h]  +
call dword_4A31A8  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
shr ebp 1 +
push ebp  +
push dword ptr [esp+1Ch]  +
call loc_432190  +
lea ecx [ebp-1] +
mov dword ptr [ebx] 1 +
add esp 8 +
test ecx ecx +
jz loc_432274  +
lea edi [ebx+4] +
xor eax eax +
stos   +
mov eax [esp+10h] +
lea esi [ebx+ebp*4] +
push ebp  +
push dword ptr [esp+1Ch]  +
mov edx esi +
lea edi [eax+ebp*4] +
push eax  +
push ebx  +
mov ecx edi +
call loc_431BB0  +
mov eax [esp+28h] +
mov edx esi +
push ebp  +
mov ecx ebx +
lea eax [eax+ebp*4] +
push eax  +
push dword ptr [esp+28h]  +
call sub_431AF0  +
add esp 1Ch +
mov edx ebx +
mov ecx ebp +
push ebx  +
push edi  +
call off_49EB5C  +
mov edx ebp +
mov ecx ebx +
call loc_426EC0  +
push ebp  +
push ebx  +
push dword ptr [esp+18h]  +
mov edx esi +
mov ecx edi +
call sub_431AF0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
mov ebp [esp+10h+arg_C] +
mov ebx edx +
push esi  +
mov esi [esp+14h+arg_0] +
mov eax ecx +
push edi  +
push ebp  +
push [esp+1Ch+arg_8]  +
mov [esp+20h+var_8] ebx +
push esi  +
mov [esp+24h+var_4] eax +
call sub_431AF0  +
mov edi [esp+24h+arg_4] +
lea eax ds:0[ebp*4] +
mov ecx [esp+24h+var_8] +
add ebx eax +
push ebp  +
push edi  +
push [esp+2Ch+var_4]  +
mov edx ebx +
push esi  +
call loc_431BB0  +
mov ecx [esp+34h+var_8] +
lea eax ds:0[ebp*4] +
add esp 1Ch +
add eax esi +
mov edx ecx +
push ecx  +
push eax  +
mov ecx ebp +
call off_49EB60  +
push edi  +
mov edi [esp+1Ch+var_8] +
mov edx ebx +
push edi  +
mov ecx ebp +
mov esi eax +
call off_49EB5C  +
mov eax [esp+18h+var_4] +
neg esi  +
and esi ebp +
lea edx [edi+esi*4] +
cmp eax edx +
jz loc_432374  +
lea ecx ds:0[ebp*4] +
push ecx  +
push edx  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [edx+0Ch] +
mov ebx [eax] +
mov eax [eax+4] +
mov [esp+24h+var_1C] eax +
mov eax [edx] +
mov [esp+24h+var_18] eax +
mov eax [edx+4] +
push edi  +
mov [esp+28h+var_14] eax +
mov edi ecx +
mov ecx [edx+8] +
mov eax ebx +
mov edx [esp+28h+var_1C] +
or eax edx +
jnz loc_4323C3  +
mov [edi] ecx +
mov [edi+4] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [esp+28h+var_18] +
push ecx  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_8] ecx +
lea ecx [esp+2Ch+var_C] +
push edx  +
mov edx ebx +
mov [esp+30h+var_C] eax +
mov [esp+30h+var_4] esi +
call sub_438250  +
add esp 4 +
lea ecx [esp+2Ch+var_10] +
mov edx ebx +
mov esi eax +
push [esp+2Ch+var_1C]  +
call sub_438250  +
add esp 8 +
mov [edi+4] esi +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
push ebx  +
mov ebx [esp+8] +
push ebp  +
push esi  +
push edi  +
push eax  +
push dword ptr [esp+1Ch]  +
mov edi edx +
lea esi [eax+2] +
mov ebp ecx +
mov ecx edi +
push 2  +
push ebx  +
lea edx [edi+esi*4] +
call loc_431E60  +
add esp 10h +
mov edx ebp +
mov ecx esi +
push edi  +
push ebp  +
call off_49EB60  +
mov esi [esp+1Ch] +
mov edi [esp+18h] +
cmp dword ptr [ebp+esi*4+0] 0 +
jnz loc_432468  +
push esi  +
mov edx edi +
mov ecx ebp +
call sub_426E40  +
add esp 4 +
test eax eax +
js loc_432488  +
push edi  +
push ebp  +
mov edx ebp +
mov ecx esi +
call off_49EB60  +
sub [ebp+esi*4+0] eax +
mov eax 0 +
add dword ptr [ebx] 1 +
setz al  +
add [ebx+4] eax +
jmp loc_432450  +
***
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub esp 28h +
mov [esp+28h+var_18] edx +
mov edx [esp+28h+arg_8] +
push ebx  +
mov [esp+2Ch+var_14] ecx +
mov ecx [esp+2Ch+arg_0] +
push ebp  +
lea eax [edx+2] +
lea ebx [ecx+eax*4] +
mov [esp+30h+var_20] eax +
push esi  +
lea eax [edx+2] +
mov [esp+34h+var_24] ebx +
mov edx [esp+34h+arg_C] +
push edi  +
mov edi [esp+38h+arg_10] +
add eax edi +
lea eax [ecx+eax*4] +
xor ecx ecx +
mov [esp+38h+var_4] eax +
lea eax ds:0[edi*4] +
cmp [eax+edx-4] ecx +
lea ebp [eax+ebx] +
mov dword ptr [ebp-4] 0 +
setz cl  +
mov [esp+38h+var_1C] ebp +
mov dword ptr [ebx] 0 +
lea eax ds:0[ecx*4] +
lea esi [eax+ebx] +
mov [esp+38h+var_10] eax +
cmp esi edx +
jz loc_432511  +
mov eax edi +
sub eax ecx +
shl eax 2 +
push eax  +
push edx  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov ebx [ebp-4] +
test ebx ebx +
jnz loc_43251C  +
xor edx edx +
jmp loc_43253F  +
xor esi esi +
mov edx 20h +
lea ecx [edx+esi] +
mov eax ebx +
shr ecx 1 +
shr eax cl +
test eax eax +
jz loc_432534  +
mov esi ecx +
jmp loc_432536  +
mov edx ecx +
mov eax edx +
sub eax esi +
cmp eax 1 +
ja loc_432523  +
mov ecx 20h +
mov ebx 0 +
sub ecx edx +
mov [esp+38h+arg_C] ecx +
jz loc_432583  +
xor esi esi +
test edi edi +
jz loc_432583  +
mov ebp 20h +
sub ebp ecx +
nop   +
mov eax [esp+38h+var_24] +
mov edx [eax+esi*4] +
mov eax edx +
shl eax cl +
mov ecx [esp+38h+var_24] +
or eax ebx +
mov ebx edx +
mov [ecx+esi*4] eax +
mov ecx ebp +
shr ebx cl +
inc esi  +
mov ecx [esp+38h+arg_C] +
cmp esi edi +
jb loc_432560  +
mov esi [esp+38h+arg_8] +
mov edx [esp+38h+arg_0] +
mov ebx [esp+38h+var_10] +
mov ecx [esp+38h+arg_4] +
add ebx edx +
mov [esp+38h+var_10] ebx +
lea eax ds:0[esi*4] +
mov dword ptr [eax+edx+4] 0 +
lea ebp [eax+edx] +
mov dword ptr [ebp+0] 0 +
mov [esp+38h+var_C] ebp +
mov dword ptr [edx] 0 +
cmp ebx ecx +
jz loc_4325CF  +
push eax  +
push ecx  +
push ebx  +
call loc_452BD0  +
mov edx [esp+44h+arg_0] +
add esp 0Ch +
mov eax [esp+38h+var_20] +
xor ebx ebx +
cmp [esp+38h+arg_C] ebx +
jz loc_432621  +
xor esi esi +
test eax eax +
jz loc_43261D  +
mov edi [esp+38h+arg_C] +
mov ebp 20h +
sub ebp edi +
jmp loc_4325F4  +
mov edx [esp+38h+arg_0] +
mov edx [edx+esi*4] +
mov ecx edi +
mov eax edx +
shl eax cl +
mov ecx [esp+38h+arg_0] +
or eax ebx +
mov ebx edx +
mov [ecx+esi*4] eax +
mov ecx ebp +
mov eax [esp+38h+var_20] +
inc esi  +
shr ebx cl +
cmp esi eax +
jb loc_4325F0  +
mov edi [esp+38h+arg_10] +
mov ebp [esp+38h+var_C] +
mov esi [esp+38h+arg_8] +
cmp dword ptr [ebp+4] 0 +
jnz loc_4326A4  +
cmp dword ptr [ebp+0] 1 +
ja loc_4326A4  +
mov edx [esp+38h+var_18] +
mov eax esi +
sub eax edi +
shl eax 2 +
lea ecx [eax+edx] +
mov dword ptr [eax+edx] 0 +
mov dword ptr [eax+edx+4] 0 +
mov edx [esp+38h+arg_0] +
add edx eax +
mov [esp+38h+arg_4] ecx +
mov [esp+38h+arg_10] edx +
cmp dword ptr [ebp+0] 0 +
jnz loc_432688  +
mov ecx edi +
test edi edi +
jz loc_432688  +
mov eax [esp+38h+var_1C] +
mov ebx edx +
sub ebx [esp+38h+var_24] +
nop   +
mov edx [ebx+eax-4] +
lea eax [eax-4] +
mov esi [eax] +
dec ecx  +
cmp edx esi +
ja loc_432684  +
jb loc_4326A8  +
test ecx ecx +
jnz loc_432670  +
mov edx [esp+38h+arg_10] +
push [esp+38h+var_24]  +
mov ecx edi +
push edx  +
call off_49EB60  +
mov ecx [esp+40h] +
sub [ebp+0] eax +
mov edx [esp+40h+arg_8] +
inc dword ptr [ecx]  +
jmp loc_432658  +
mov [esp+38h+arg_8] eax +
mov eax [esp+38h+var_24] +
mov ecx [esp+38h+var_1C] +
mov eax [eax+edi*4-8] +
add eax 1 +
mov [esp+38h+var_C] eax +
mov eax 0 +
setz al  +
add eax [ecx-4] +
mov [esp+38h+var_8] eax +
mov eax [esp+38h+arg_8] +
add eax 0FFFFFFFEh +
cmp eax edi +
jb loc_432729  +
mov ecx [esp+38h+arg_0] +
mov ebx eax +
mov edx [esp+38h+var_18] +
sub ebx edi +
lea ebp [ecx-8] +
sub ecx edx +
lea esi [edx+ebx*4] +
mov [esp+38h+arg_0] ecx +
shr ebx 1 +
lea ebp [ebp+eax*4+0] +
inc ebx  +
lea eax [esp+38h+var_C] +
mov edx ebp +
push eax  +
mov ecx esi +
call sub_432380  +
mov ecx [esp+3Ch+arg_0] +
add esp 4 +
mov edx [esp+38h+var_4] +
push edi  +
push [esp+3Ch+var_24]  +
lea ecx [ecx+esi] +
push esi  +
call loc_432410  +
add esp 0Ch +
sub ebp 8 +
sub esi 8 +
sub ebx 1 +
jnz loc_4326F4  +
mov eax [esp+38h+var_10] +
lea esi ds:0[edi*4] +
mov edx [esp+38h+var_14] +
cmp edx eax +
jz loc_43274B  +
push esi  +
push eax  +
push edx  +
call loc_452BD0  +
mov edx [esp+44h+var_14] +
add esp 0Ch +
mov ecx [esp+38h+arg_C] +
xor ebx ebx +
test ecx ecx +
jz loc_432782  +
test edi edi +
jz loc_432782  +
mov ebp 20h +
add esi 0FFFFFFFCh +
sub ebp ecx +
add esi edx +
mov edx [esi] +
lea esi [esi-4] +
mov eax edx +
shr eax cl +
mov ecx ebp +
or eax ebx +
mov ebx edx +
shl ebx cl +
mov ecx [esp+38h+arg_C] +
mov [esi+4] eax +
sub edi 1 +
jnz loc_432765  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 28h +
retn   +
***
sub esp 34h +
mov [esp+20h] ecx +
mov ecx [esp+44h] +
mov [esp+10h] edx +
mov [esp+18h] ecx +
push ebx  +
lea eax ds:0[ecx*4] +
mov [esp+28h] eax +
lea ebx [eax+edx] +
mov [esp+20h] ebx +
lea eax [ecx+ecx*2] +
lea eax [edx+eax*4] +
mov [esp+0Ch] eax +
push ebp  +
mov ebp ecx +
push esi  +
lea esi [edx+ecx*8] +
mov [esp+10h] esi +
push edi  +
mov edi 2 +
mov [esp+1Ch] edi +
test ecx ecx +
jz loc_43282A  +
mov eax [esp+50h] +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax-4] 0 +
jnz loc_432826  +
cmp dword ptr [eax] 0 +
jnz loc_432826  +
sub eax 8 +
sub ebp 2 +
jnz loc_432813  +
mov [esp+28h] ebp +
xor eax eax +
lea ecx [ecx+ecx*2] +
mov [esp+24h] eax +
xor al al +
mov [esp+13h] al +
test ecx ecx +
jz loc_432846  +
xor eax eax +
mov edi edx +
stos   +
lea edi [eax+2] +
mov ecx [esp+48h] +
mov dword ptr [edx] 1 +
cmp esi ecx +
jz loc_432866  +
mov eax [esp+4Ch] +
shl eax 2 +
push eax  +
push ecx  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esp+18h] +
mov ecx [esp+50h] +
cmp eax ecx +
jz loc_432880  +
push dword ptr [esp+34h]  +
push ecx  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov edx [esi] +
test edx edx +
jnz loc_432950  +
bsf eax edx +
mov ecx eax +
mov [esp+48h] eax +
add [esp+24h] ecx +
shr edx cl +
cmp edx 1 +
jnz loc_4329BE  +
cmp dword ptr [esi+4] 0 +
jnz loc_4329BE  +
lea ecx [ebp-2] +
test ecx ecx +
jz loc_43298A  +
lea eax [ecx+1] +
lea eax [esi+eax*4] +
cmp dword ptr [eax-4] 0 +
jnz loc_4329BA  +
cmp dword ptr [eax] 0 +
jnz loc_4329BA  +
sub eax 8 +
sub ecx 2 +
jnz loc_432977  +
mov al [esp+13h] +
mov edx [esp+30h] +
test al al +
mov eax [esp+20h] +
jz loc_432B76  +
mov ecx [esp+54h] +
push eax  +
mov eax [esp+54h] +
push eax  +
call off_49EB60  +
mov eax [esp+24h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 34h +
retn   +
***
mov ecx [esp+48h] +
mov dword ptr [esp+38h] 0 +
test ecx ecx +
jz loc_432A1D  +
mov [esp+3Ch] ebp +
test ebp ebp +
jz loc_432A1D  +
mov edi [esp+38h] +
mov eax 20h +
sub eax ecx +
dec ebp  +
mov [esp+40h] eax +
lea ebx [esi+ebp*4] +
mov esi [esp+3Ch] +
mov ebp eax +
mov edx [ebx] +
lea ebx [ebx-4] +
mov eax edx +
shr eax cl +
mov ecx ebp +
or eax edi +
mov edi edx +
shl edi cl +
mov ecx [esp+48h] +
mov [ebx+4] eax +
sub esi 1 +
jnz loc_4329F0  +
mov ebp [esp+28h] +
mov ebx [esp+2Ch] +
mov edi [esp+1Ch] +
mov esi [esp+14h] +
xor ecx ecx +
mov [esp+1Ch] ecx +
cmp [esp+48h] ecx +
jz loc_432A6F  +
test edi edi +
jz loc_432A6F  +
mov ecx [esp+48h] +
mov eax 20h +
mov esi [esp+1Ch] +
sub eax ecx +
mov [esp+3Ch] eax +
mov ebp esi +
mov edx [ebx+ebp*4] +
mov eax edx +
shl eax cl +
mov ecx [esp+3Ch] +
or eax esi +
mov [ebx+ebp*4] eax +
mov esi edx +
shr esi cl +
inc ebp  +
mov ecx [esp+48h] +
cmp ebp edi +
jb loc_432A42  +
mov ebp [esp+28h] +
mov [esp+1Ch] esi +
mov esi [esp+14h] +
mov ecx [esp+1Ch] +
add [ebx+edi*4] ecx +
xor eax eax +
test ecx ecx +
mov ecx ebp +
setnz al  +
lea eax [edi+eax*2] +
mov [esp+40h] eax +
test ebp ebp +
jz loc_432AB3  +
mov edi [esp+18h] +
lea eax [esi+ebp*4] +
sub edi esi +
mov [esp+48h] edi +
mov edx [eax-4] +
lea eax [eax-4] +
mov edi [edi+eax] +
dec ecx  +
cmp edx edi +
ja loc_432B4C  +
jb loc_432B44  +
mov edi [esp+48h] +
test ecx ecx +
jnz loc_432A93  +
xor eax eax +
mov edi [esp+18h] +
cmp eax 0FFFFFFFFh +
mov eax esi +
setz dl  +
sub eax edi +
sar eax 2 +
movzx ecx dl +
imul eax ecx +
xor [esp+13h] dl +
shl eax 2 +
add edi eax +
sub esi eax +
mov [esp+18h] edi +
mov edx esi +
mov edi [esp+20h] +
mov eax edi +
sub eax ebx +
mov [esp+14h] esi +
sar eax 2 +
imul eax ecx +
push dword ptr [esp+18h]  +
push esi  +
shl eax 2 +
sub edi eax +
add ebx eax +
mov eax [esi+ebp*4-4] +
or eax [esi+ebp*4-8] +
neg eax  +
mov [esp+28h] edi +
mov [esp+34h] ebx +
sbb eax eax +
inc eax  +
imul eax eax +
add ebp eax +
mov ecx ebp +
mov [esp+30h] ebp +
call off_49EB60  +
push ebx  +
push edi  +
mov edx edi +
mov edi [esp+48h] +
mov ecx edi +
call off_49EB5C  +
mov ecx [esp+20h] +
add [ecx+edi*4] eax +
lea edi [edi+eax*2] +
mov [esp+1Ch] edi +
jmp loc_432880  +
***
or eax 0FFFFFFFFh +
jmp loc_432AB5  +
***
mov eax 1 +
jmp loc_432AB5  +
***
cmp dword ptr [esp+54h] 0 +
jbe loc_432B6C  +
mov ecx [esp+34h] +
mov edi [esp+30h] +
shr ecx 2 +
xor eax eax +
stos   +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 34h +
retn   +
***
cmp edx eax +
jz loc_432B88  +
push dword ptr [esp+34h]  +
push eax  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esp+24h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 34h +
retn   +
***
push ecx  +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
mov ebp ecx +
push esi  +
cmp ebp edx +
jz loc_432BC0  +
lea eax ds:0[ebx*4] +
push eax  +
push edx  +
push ebp  +
call loc_452BD0  +
add esp 0Ch +
mov esi [esp+14h] +
test esi esi +
jz loc_432C60  +
push edi  +
xor esi esi +
mov [esp+10h] eax +
mov edi ebx +
test ebx ebx +
jz loc_432C4C  +
lea edx ds:0FFFFFFFCh[ebx*4] +
add edx ebp +
nop   +
mov ecx [edx] +
lea edx [edx-4] +
mov eax ecx +
shr eax 1 +
or eax esi +
mov esi ecx +
shl esi 1Fh +
mov [edx+4] eax +
sub edi 1 +
jnz loc_432C30  +
mov eax [esp+10h] +
shl eax 1Fh +
add [ebp+ebx*4-4] eax +
mov esi [esp+18h] +
test esi esi +
jnz near ptr off_432BD0  +
***
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
push ebp  +
push edi  +
mov edi ecx +
cmp edi edx +
jz loc_432C8F  +
lea eax ds:0[ebx*4] +
push eax  +
push edx  +
push edi  +
call loc_452BD0  +
add esp 0Ch +
mov ebp [esp+8+arg_0] +
test ebp ebp +
jz loc_432CE1  +
push esi  +
dec ebp  +
xor eax eax +
xor esi esi +
test ebx ebx +
jz loc_432CBA  +
mov edx [edi+esi*4] +
lea ecx [edx+edx] +
or ecx eax +
mov eax edx +
mov [edi+esi*4] ecx +
inc esi  +
shr eax 1Fh +
cmp esi ebx +
jb loc_432CA1  +
test eax eax +
jnz loc_432CCD  +
mov edx [esp+0Ch+arg_4] +
mov ecx edi +
push ebx  +
call sub_426E40  +
add esp 4 +
test eax eax +
js loc_432CDC  +
push [esp+0Ch+arg_4]  +
mov edx edi +
mov ecx ebx +
push edi  +
call off_49EB60  +
test ebp ebp +
jnz loc_432C98  +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
ja loc_432CFF  +
mov eax ds:dword_48B38C[ecx*4] +
pop ecx  +
retn   +
cmp ecx 10h +
ja loc_432D0B  +
mov eax 10h +
pop ecx  +
retn   +
cmp ecx 20h +
ja loc_432D17  +
mov eax 20h +
pop ecx  +
retn   +
cmp ecx 40h +
ja loc_432D23  +
mov eax 40h +
pop ecx  +
retn   +
lea eax [ecx-1] +
lea ecx [esp+4+var_4] +
mov [esp+4+var_4] eax +
call sub_422BB0  +
mov ecx eax +
mov edx 1 +
shl edx cl +
mov eax edx +
pop ecx  +
retn   +
***
sub esp 8 +
cmp dword_4A291C 0 +
push esi  +
mov esi ecx +
mov [esp+0Ch+var_4] esi +
jnz loc_432D62  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
pop esi  +
add esp 8 +
retn   +
***
mov esi ecx +
xor eax eax +
push edi  +
mov edx [esi+8] +
mov ecx edx +
mov ebx [esi+0Ch] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_432DD7  +
call sub_4746E8  +
jmp loc_432DDC  +
call sub_45B0EB  +
add esp 4 +
test [esp+4+arg_0] 1 +
jz loc_432DF1  +
push 14h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn 4  +
***
push ecx  +
cmp dword_4A291C 0 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [esp+0Ch] edi +
jnz loc_432E22  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ebx [esp+14h] +
mov dword ptr [edi] offset off_49099C +
mov eax [ebx+8] +
mov ecx [ebx+0Ch] +
test eax eax +
jz loc_432E4D  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_432E4D  +
sub ecx 4 +
sub eax 1 +
jnz loc_432E40  +
cmp eax 8 +
ja loc_432E5B  +
mov esi ds:dword_48B38C[eax*4] +
jmp loc_432E96  +
cmp eax 10h +
ja loc_432E67  +
mov esi 10h +
jmp loc_432E96  +
cmp eax 20h +
ja loc_432E73  +
mov esi 20h +
jmp loc_432E96  +
cmp eax 40h +
ja loc_432E7F  +
mov esi 40h +
jmp loc_432E96  +
dec eax  +
lea ecx [esp+14h] +
mov [esp+14h] eax +
call sub_422BB0  +
mov esi 1 +
mov ecx eax +
shl esi cl +
mov ecx esi +
mov [edi+8] esi +
call sub_437B10  +
test esi esi +
jnz loc_432EA8  +
xor eax eax +
jmp loc_432EC0  +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_432EBB  +
call loc_43F6B0  +
jmp loc_432EC0  +
call loc_43F720  +
mov [edi+0Ch] eax +
mov eax [ebx+10h] +
mov edx [edi+0Ch] +
mov [edi+10h] eax +
mov ecx [ebx+0Ch] +
cmp edx ecx +
jz loc_432EE4  +
mov eax [edi+8] +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn 4  +
***
push esi  +
mov esi ecx +
mov [esp+8+var_4] esi +
jnz loc_432F10  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ecx [esp+8+arg_0] +
mov [esi+0Ch] eax +
test ecx ecx +
js loc_432F56  +
mov dword ptr [esi+10h] 0 +
mov [eax] ecx +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
mov dword ptr [esi+10h] 1 +
neg ecx  +
mov [eax] ecx +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478DEB  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_38] edi +
cmp dword_4A291C 0 +
mov ebx [ebp+arg_0] +
mov [ebp+var_3C] edi +
jnz loc_432FCD  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
xor ecx ecx +
mov dword ptr [edi+8] 0 +
call sub_437B10  +
mov dword ptr [edi+0Ch] 0 +
push [ebp+arg_4]  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] 0 +
push ebx  +
call sub_426A40  +
push 0  +
push [ebp+arg_4]  +
lea eax [ebp+var_34] +
mov ecx edi +
push eax  +
call loc_4333D0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478E29  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
mov [ebp+var_14] edi +
lea eax [esi+20h] +
mov [ebp+var_4] 0 +
shr eax 5 +
push eax  +
push ecx  +
mov [ebp+var_10] 0 +
call sub_4332C0  +
push ecx  +
mov [ebp+var_4] 0 +
mov ecx edi +
push esi  +
mov [ebp+var_10] 1 +
call sub_433180  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_4330E7  +
mov edx [ecx+0Ch] +
cmp dword ptr [edx] 0 +
jnz loc_4330E7  +
mov eax [ecx+8] +
test eax eax +
jz loc_4330E4  +
lea ecx [eax-1] +
lea ecx [edx+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_4330E0  +
sub ecx 4 +
sub eax 1 +
jnz loc_4330D0  +
mov al 1 +
retn   +
***
test eax eax +
jnz loc_4330E7  +
mov al 1 +
retn   +
***
xor al al +
retn   +
***
mov ebx [esp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
cmp edi ebx +
jz loc_43316C  +
mov ecx [ebx+8] +
cmp [edi+8] ecx +
jnz loc_433113  +
mov eax [ebx+0Ch] +
mov edx ecx +
shr edx 1 +
cmp dword ptr [eax+edx*4] 0 +
jnz loc_43314B  +
mov eax [ebx+0Ch] +
test ecx ecx +
jz loc_43312D  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_43312D  +
sub eax 4 +
sub ecx 1 +
jnz loc_433120  +
call sub_432CF0  +
mov edx [edi+0Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi+8]  +
call sub_437F60  +
add esp 0Ch +
mov [edi+0Ch] eax +
mov [edi+8] esi +
mov ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
cmp edx ecx +
jz loc_433166  +
mov eax [edi+8] +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebx+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn 4  +
***
push edi  +
mov edi [esp+arg_0] +
mov ebx ecx +
lea eax [edi+20h] +
shr eax 5 +
cmp eax 8 +
ja loc_43319D  +
mov esi ds:dword_48B38C[eax*4] +
jmp loc_4331D8  +
cmp eax 10h +
ja loc_4331A9  +
mov esi 10h +
jmp loc_4331D8  +
cmp eax 20h +
ja loc_4331B5  +
mov esi 20h +
jmp loc_4331D8  +
cmp eax 40h +
ja loc_4331C1  +
mov esi 40h +
jmp loc_4331D8  +
dec eax  +
lea ecx [esp+arg_0] +
mov [esp+arg_0] eax +
call sub_422BB0  +
mov esi 1 +
mov ecx eax +
shl esi cl +
mov eax [ebx+8] +
cmp esi eax +
jbe loc_43320D  +
mov edx [ebx+0Ch] +
push 1  +
push esi  +
push eax  +
call sub_437F60  +
mov edx [ebx+8] +
add esp 0Ch +
mov ecx esi +
mov [ebx+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [ebx+8] esi +
mov eax [ebx+0Ch] +
mov ecx edi +
shr ecx 5 +
and edi 1Fh +
lea ecx [eax+ecx*4] +
mov eax [ecx] +
bts eax edi +
pop edi  +
pop esi  +
mov [ecx] eax +
pop ebx  +
retn 8  +
***
mov esi [esp+8+arg_0] +
push ecx  +
mov ecx esi +
mov [esp+0Ch+var_4] 0 +
call loc_432E00  +
cmp dword ptr [esi+10h] 1 +
jz loc_433279  +
mov eax [esi+0Ch] +
cmp dword ptr [eax] 0 +
jnz loc_433279  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_433284  +
lea edx [ecx-1] +
lea edx [eax+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_433275  +
sub edx 4 +
sub ecx 1 +
jnz loc_433261  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
test ecx ecx +
jz loc_433284  +
mov eax 1 +
sub eax [esi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
mov esi [esp+8+arg_0] +
push ecx  +
mov ecx esi +
mov [esp+0Ch+var_4] 0 +
call loc_432E00  +
mov dword ptr [esi+10h] 0 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
sub esp 8 +
cmp dword_4A291C 0 +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov [esp+14h+var_4] ebx +
jnz loc_4332E4  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov eax [esp+14h+arg_4] +
mov dword ptr [ebx] offset off_49099C +
cmp eax 8 +
ja loc_4332FC  +
mov esi ds:dword_48B38C[eax*4] +
jmp loc_433337  +
cmp eax 10h +
ja loc_433308  +
mov esi 10h +
jmp loc_433337  +
cmp eax 20h +
ja loc_433314  +
mov esi 20h +
jmp loc_433337  +
cmp eax 40h +
ja loc_433320  +
mov esi 40h +
jmp loc_433337  +
dec eax  +
lea ecx [esp+14h+arg_4] +
mov [esp+14h+arg_4] eax +
call sub_422BB0  +
mov esi 1 +
mov ecx eax +
shl esi cl +
mov ecx esi +
mov [ebx+8] esi +
call sub_437B10  +
test esi esi +
jnz loc_433349  +
xor eax eax +
jmp loc_433361  +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_43335C  +
call loc_43F6B0  +
jmp loc_433361  +
call loc_43F720  +
mov [ebx+0Ch] eax +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [eax] 0 +
mov ecx [ebx+8] +
mov edi [ebx+0Ch] +
sub ecx 1 +
jz loc_433383  +
add edi 4 +
xor eax eax +
stos   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
add esp 8 +
retn 8  +
***
mov edx [ecx+0Ch] +
push esi  +
mov esi [ecx+8] +
test esi esi +
jz loc_4333AE  +
lea eax [esi-1] +
lea eax [edx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_4333B2  +
sub eax 4 +
sub esi 1 +
jnz loc_4333A1  +
xor eax eax +
pop esi  +
retn   +
test esi esi +
jz loc_4333AE  +
lea ecx [edx-4] +
lea ecx [ecx+esi*4] +
call sub_437D60  +
lea eax [eax+esi*4] +
add eax 0FFFFFFFCh +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
lea ecx [esp+0Fh] +
mov eax [ebx] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+50h]  +
cmp dword ptr [ebp+10h] 1 +
mov cl [esp+0Fh] +
jnz loc_433402  +
test cl cl +
jns loc_433402  +
mov eax 1 +
jmp loc_433404  +
xor eax eax +
mov esi [ebp+0Ch] +
mov [edi+10h] eax +
test esi esi +
jz loc_43344A  +
nop   +
xor eax eax +
cmp [edi+10h] eax +
jnz loc_43341B  +
test cl cl +
jmp loc_43341E  +
cmp cl 0FFh +
setz al  +
test eax eax +
jz loc_433447  +
mov eax [ebx] +
mov ecx ebx +
push 0  +
push 1  +
call dword ptr [eax+54h]  +
mov eax [ebx] +
lea ecx [esp+0Fh] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+50h]  +
sub esi 1 +
jz loc_433447  +
mov cl [esp+0Fh] +
jmp loc_433410  +
***
mov [ebp+0Ch] esi +
lea eax [esi+3] +
shr eax 2 +
cmp eax 8 +
ja loc_43345E  +
mov edx ds:dword_48B38C[eax*4] +
jmp loc_433499  +
cmp eax 10h +
ja loc_43346A  +
mov edx 10h +
jmp loc_433499  +
cmp eax 20h +
ja loc_433476  +
mov edx 20h +
jmp loc_433499  +
cmp eax 40h +
ja loc_433482  +
mov edx 40h +
jmp loc_433499  +
dec eax  +
lea ecx [esp+10h] +
mov [esp+10h] eax +
call sub_422BB0  +
mov edx 1 +
mov ecx eax +
shl edx cl +
push 0  +
push edx  +
push dword ptr [edi+8]  +
mov [esp+1Ch] edx +
mov edx [edi+0Ch] +
call sub_437F60  +
mov ecx [esp+1Ch] +
add esp 0Ch +
mov [edi+8] ecx +
shl ecx 2 +
mov [edi+0Ch] eax +
push ecx  +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
test esi esi +
jz loc_43350B  +
lea eax [esi-1] +
mov [esp+10h] esi +
mov [esp+14h] eax +
mov esi eax +
mov eax [ebx] +
lea ecx [esp+0Fh] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+48h]  +
mov eax [edi+0Ch] +
mov ecx esi +
shr ecx 2 +
lea edx [eax+ecx*4] +
movzx eax byte ptr [esp+0Fh] +
mov ecx esi +
dec esi  +
and ecx 3 +
shl ecx 3 +
shl eax cl +
or [edx] eax +
sub dword ptr [esp+10h] 1 +
jnz loc_4334D8  +
mov esi [ebp+0Ch] +
cmp dword ptr [edi+10h] 1 +
jnz loc_433552  +
mov eax [edi+8] +
shl eax 2 +
cmp esi eax +
jnb loc_433547  +
mov eax [edi+0Ch] +
mov ecx esi +
shr ecx 2 +
lea edx [eax+ecx*4] +
mov ecx esi +
and ecx 3 +
mov eax 0FFh +
shl ecx 3 +
inc esi  +
shl eax cl +
or [edx] eax +
mov eax [edi+8] +
shl eax 2 +
cmp esi eax +
jb loc_433520  +
mov ecx [edi+0Ch] +
mov edx [edi+8] +
call loc_426EC0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478E69  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_14] eax +
xor ebx ebx +
mov [ebp+var_20] ebx +
mov edi [eax+8] +
mov esi edi +
mov ecx [eax+0Ch] +
mov [ebp+var_20] ecx +
test edi edi +
jz loc_4335B3  +
lea eax [edi-1] +
lea eax [ecx+eax*4] +
cmp [eax] ebx +
jnz loc_4335E8  +
sub eax 4 +
sub esi 1 +
jnz loc_4335A7  +
xor ecx ecx +
cmp ecx 1 +
mov [ebp+var_18] ecx +
lea edx [ebp+var_1C] +
mov [ebp+var_1C] 1 +
lea eax [ebp+var_18] +
cmovbe eax edx +
mov esi [eax] +
mov eax [ebp+var_14] +
mov edx [eax+10h] +
cmp edx 1 +
jz loc_433617  +
lea ecx [esi-1] +
mov eax ecx +
shr eax 2 +
cmp eax edi +
jb loc_4335FF  +
xor al al +
jmp loc_43360D  +
test esi esi +
jz loc_4335B3  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_437D60  +
lea ecx [esi-1] +
lea ecx [eax+ecx*4] +
jmp loc_4335B5  +
mov edi [ebp+var_20] +
and ecx 3 +
shl ecx 3 +
mov eax [edi+eax*4] +
shr eax cl +
test al al +
jns loc_433612  +
inc esi  +
cmp edx 1 +
jnz loc_433656  +
lea edx ds:0FFFFFFFFh[esi*8] +
lea ecx [ebp+var_48] +
call sub_433030  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] 0 +
push ecx  +
mov ecx eax +
mov [ebp+var_20] 1 +
call sub_433230  +
mov ecx [ebp+var_14] +
mov edx eax +
mov ebx 3 +
call sub_425F30  +
mov [ebp+var_D] 1 +
test al al +
jnz loc_43365A  +
mov [ebp+var_D] 0 +
test bl 2 +
jz loc_433691  +
mov eax [ebp+var_28] +
and ebx 0FFFFFFFDh +
mov edx [ebp+var_2C] +
mov edi eax +
mov [ebp+var_14] eax +
mov ecx edx +
push [ebp+var_14]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_433689  +
call sub_4746E8  +
jmp loc_43368E  +
call sub_45B0EB  +
add esp 4 +
test bl 1 +
jz loc_4336C0  +
mov edx [ebp+var_40] +
xor eax eax +
mov ebx [ebp+var_3C] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4336B8  +
call sub_4746E8  +
jmp loc_4336BD  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+var_D] 0 +
lea eax [esi+1] +
jnz loc_4336CB  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478EA0  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
cmp [ebp+arg_8] 0 +
jz loc_4337E5  +
cmp dword ptr [edi+10h] 1 +
jnz loc_4337E5  +
call sub_433390  +
mov ebx [ebp+arg_4] +
lea ecx [ebp+arg_8] +
cmp eax ebx +
mov [ebp+arg_8] eax +
lea edx [ebp+arg_4] +
cmovnb edx ecx +
lea ecx [ebp+var_34] +
mov edx [edx] +
shl edx 3 +
call sub_433030  +
push edi  +
mov edx eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_20] +
call sub_425F80  +
add esp 4 +
mov byte ptr [ebp+var_4] 2 +
xor eax eax +
mov edx [ebp+var_2C] +
mov ecx edx +
mov esi [ebp+var_28] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43377C  +
call sub_4746E8  +
jmp loc_433781  +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp+var_20] +
push 0  +
push ebx  +
push [ebp+arg_0]  +
call sub_4336E0  +
mov edx [ebp+var_18] +
xor eax eax +
mov esi [ebp+var_14] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4337C9  +
call sub_4746E8  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_433829  +
lea esi [ebx-1] +
nop   +
mov eax esi +
shr eax 2 +
cmp eax [edi+8] +
jb loc_4337FE  +
xor al al +
jmp loc_43380E  +
mov edx [edi+0Ch] +
mov ecx esi +
and ecx 3 +
shl ecx 3 +
mov eax [edx+eax*4] +
shr eax cl +
mov ecx [ebp+arg_0] +
lea edx [ebp+arg_4] +
push 1  +
push 0  +
mov byte ptr [ebp+arg_4] al +
mov eax [ecx] +
push 1  +
push edx  +
call dword ptr [eax+14h]  +
dec esi  +
sub ebx 1 +
jnz loc_4337F0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478EC8  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 2  +
push [ebp+arg_0]  +
lea ecx [ebp+var_44] +
call sub_422050  +
push 1  +
sub esp 8 +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_433560  +
add esp 4 +
mov ecx esi +
push eax  +
lea eax [ebp+var_44] +
push eax  +
call sub_4336E0  +
lea ecx [ebp+var_44] +
call sub_4221C0  +
lea ecx [ebp+var_44] +
call sub_422130  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478EF8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+8] +
lea ecx [ebp-38h] +
push 2  +
mov dword ptr [ebp-2Ch] 0FFFFFFFFh +
mov byte ptr [ebp-28h] 0 +
mov dword ptr [ebp-38h] offset off_48FE70 +
mov dword ptr [ebp-34h] offset off_48FE60 +
mov [ebp-24h] eax +
mov byte ptr [ebp-20h] 0 +
call loc_421E40  +
mov dword ptr [ebp-4] 2 +
cmp byte ptr [ebp-1Fh] 0 +
jz loc_43398D  +
mov ebx [ebp-18h] +
lea ecx [ebp-38h] +
mov esi [ebp-14h] +
call sub_424650  +
cmp edx esi +
jb loc_43398D  +
ja loc_43394F  +
cmp eax ebx +
jb loc_43398D  +
push 1  +
push dword ptr [ebp-18h]  +
lea eax [ebp-38h] +
mov ecx edi +
push eax  +
call loc_4333D0  +
lea ecx [ebp-38h] +
call loc_421F00  +
lea ecx [ebp-38h] +
call sub_421EA0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_421520  +
push 0FFFFFFFFh  +
push offset loc_478F28  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_38] ecx +
mov edi [ebp+arg_4] +
mov esi edi +
mov eax [ebp+arg_0] +
shr esi 3 +
inc esi  +
mov [ebp+var_34] eax +
mov ecx esi +
mov [ebp+var_40] esi +
call sub_40FD30  +
test esi esi +
jnz loc_4339EF  +
xor ebx ebx +
jmp loc_4339F8  +
mov ecx esi +
call loc_43F720  +
mov ebx eax +
mov [ebp+var_3C] ebx +
mov eax [ebp+var_34] +
mov ecx eax +
mov [ebp+var_4] 0 +
push esi  +
push ebx  +
mov edx [eax] +
call dword ptr [edx+20h]  +
test esi esi +
jz loc_433A2C  +
mov dl [ebx] +
and edi 7 +
cmp edi 8 +
jnb loc_433A28  +
mov al 1 +
mov ecx edi +
shl al cl +
dec al  +
and al dl +
jmp loc_433A2A  +
mov al dl +
mov [ebx] al +
push esi  +
push ebx  +
lea ecx [ebp+var_30] +
call sub_426A40  +
mov ecx [ebp+var_38] +
lea eax [ebp+var_30] +
push 0  +
push esi  +
push eax  +
call loc_4333D0  +
xor al al +
mov edi ebx +
mov ecx esi +
stos   +
push ebx  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478F68  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+0Ch] +
mov eax [ebp+8] +
mov esi [ebp+10h] +
mov [ebp-58h] eax +
cmp dword ptr [ebx+10h] 1 +
mov [ebp-5Ch] ebx +
jz loc_433AD2  +
cmp dword ptr [esi+10h] 1 +
jz loc_433AEA  +
push esi  +
mov ecx ebx +
call loc_435C80  +
jmp loc_433AE6  +
cmp dword ptr [esi+10h] 1 +
jnz loc_433B67  +
push esi  +
mov ecx ebx +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_433B67  +
push 28h  +
push offset aIntegerMinMust  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-40h] 0Fh +
mov dword ptr [ebp-44h] 0 +
mov byte ptr [ebp-54h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-38h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-54h] +
push 0  +
push eax  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-3Ch] offset off_48D038 +
mov dword ptr [ebp-30h] 1 +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-3Ch] offset off_48C750 +
call sub_452780  +
push ebx  +
mov edx esi +
lea ecx [ebp-70h] +
call sub_425FB0  +
add esp 4 +
mov dword ptr [ebp-4] 2 +
mov esi [ebp-68h] +
test esi esi +
jz loc_433B9D  +
mov ecx [ebp-64h] +
lea eax [esi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_433BE5  +
sub eax 4 +
sub esi 1 +
jnz loc_433B90  +
xor ebx ebx +
mov esi [ebp-58h] +
push ebx  +
push esi  +
mov ecx edi +
call sub_4339A0  +
lea edx [ebp-70h] +
mov ecx edi +
call sub_425E90  +
test al al +
jnz loc_433BA2  +
push dword ptr [ebp-5Ch]  +
mov ecx edi +
call sub_434D40  +
mov edx [ebp-68h] +
xor eax eax +
mov esi [ebp-64h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_433BFE  +
call sub_4746E8  +
jmp loc_433C03  +
test esi esi +
jz loc_433B9D  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
lea ebx [esi-1] +
shl ebx 5 +
add ebx eax +
jmp loc_433B9F  +
***
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478F90  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov ebx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_49096C +
mov dword ptr [esi+4] 0 +
lea edi [ebx+4] +
mov [ebp+var_10] eax +
mov ecx edi +
mov [esi+0Ch] edi +
call sub_40FD30  +
test edi edi +
jnz loc_433C88  +
xor eax eax +
jmp loc_433C8F  +
mov ecx edi +
call loc_43F720  +
push ebx  +
push [ebp+var_10]  +
mov [esi+10h] eax +
add eax 4 +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx [ecx+10h] +
sub esp 8 +
mov eax [ecx+4] +
bswap eax  +
mov [edx] eax +
push dword ptr [ecx+0Ch]  +
inc dword ptr [ecx+4]  +
push dword ptr [ecx+10h]  +
mov edx [esp+10h+arg_4] +
mov ecx [esp+10h+arg_0] +
call sub_4377F0  +
add esp 10h +
retn 8  +
***
xor al al +
push edi  +
mov edx [esi+10h] +
mov edi edx +
mov ecx [esi+0Ch] +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
test [esp+4+arg_0] 1 +
jz loc_433D1B  +
push 14h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4790C7  +
mov eax large fs:0 +
push eax  +
sub esp 11Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_8C] ecx +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_A8] eax +
mov [ebp+var_AC] ebx +
call sub_437BE0  +
sub esp 14h +
mov ecx esp +
push eax  +
call loc_432E00  +
push offset aMin  +
lea eax [ebp+var_EC] +
mov ecx ebx +
push eax  +
call sub_437DA0  +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_433DB8  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_88] offset off_49099C +
mov [ebp+var_80] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_7C] eax +
mov [ebp+var_78] 0 +
mov dword ptr [eax+4] 0 +
mov eax [ebp+var_7C] +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_88] +
mov eax [ebx] +
push ecx  +
push offset off_4A0FB0  +
push offset aMax  +
mov eax [eax+4] +
mov ecx ebx +
call eax  +
test al al +
jnz loc_433E83  +
mov eax [ebx] +
lea ecx [ebp+var_74] +
push ecx  +
push offset off_49F8D4  +
push offset aBitlength  +
mov eax [eax+4] +
mov ecx ebx +
call eax  +
test al al +
jz loc_433EB8  +
mov edx [ebp+var_74] +
lea ecx [ebp+var_A4] +
call sub_433030  +
push eax  +
lea ecx [ebp+var_88] +
mov byte ptr [ebp+var_4] 2 +
call sub_4330F0  +
mov byte ptr [ebp+var_4] 1 +
xor eax eax +
mov edx [ebp+var_9C] +
mov ecx edx +
mov esi [ebp+var_98] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_433EB1  +
call sub_4746E8  +
add esp 4 +
cmp [ebp+var_DC] 1 +
jz loc_433F2E  +
cmp [ebp+var_78] 1 +
jz loc_433F4C  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_EC] +
call loc_435C80  +
jmp loc_433F48  +
call sub_45B0EB  +
jmp loc_433E80  +
push 1Dh  +
push offset aIntegerMissing  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 4 +
lea eax [ebp+var_58] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
mov byte ptr [ebp+var_4] 3 +
mov [ebp+var_38] offset off_48C750 +
push offset unk_49C468  +
lea eax [ebp+var_38] +
push eax  +
call sub_452780  +
cmp [ebp+var_78] 1 +
jnz loc_433FB2  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_EC] +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_433FB2  +
push 28h  +
push offset aIntegerMinMust  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 6 +
lea eax [ebp+var_58] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
mov byte ptr [ebp+var_4] 5 +
jmp loc_433F19  +
call sub_437BE0  +
sub esp 14h +
mov ecx esp +
push eax  +
call loc_432E00  +
push offset aEquivalentto  +
lea eax [ebp+var_100] +
mov ecx ebx +
push eax  +
call sub_437DA0  +
mov byte ptr [ebp+var_4] 7 +
call sub_437C60  +
sub esp 14h +
mov ecx esp +
push eax  +
call loc_432E00  +
push offset aMod  +
lea eax [ebp+var_D8] +
mov ecx ebx +
push eax  +
call sub_437DA0  +
mov byte ptr [ebp+var_4] 8 +
cmp [ebp+var_F0] 1 +
jz loc_434698  +
lea edx [ebp+var_D8] +
lea ecx [ebp+var_100] +
call sub_425EE0  +
test al al +
jnz loc_434698  +
mov eax [ebx] +
lea ecx [ebp+var_70] +
push ecx  +
push offset off_4A0F50  +
push offset aRandomnumberty  +
mov ecx ebx +
mov [ebp+var_70] 0 +
call dword ptr [eax+4]  +
xor esi esi +
mov [ebp+var_90] esi +
mov byte ptr [ebp+var_4] 0Bh +
xor ecx ecx +
mov [ebp+var_B4] esi +
call sub_40FD30  +
mov [ebp+var_B0] esi +
mov [ebp+var_C0] esi +
mov [ebp+var_BC] esi +
mov byte ptr [ebp+var_C4] 0 +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_C4] +
mov eax [ebx] +
push ecx  +
push offset off_49EFE4  +
push offset aSeed  +
mov eax [eax+4] +
mov ecx ebx +
call eax  +
test al al +
jz loc_4341DD  +
push esi  +
lea ecx [ebp+var_68] +
call sub_442240  +
push 30h  +
lea eax [ebp+var_68] +
mov byte ptr [ebp+var_4] 0Eh +
push eax  +
lea ecx [ebp+var_40] +
call sub_422050  +
mov [ebp+var_40] offset off_48FF38 +
mov [ebp+var_3C] offset off_48FF28 +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 0Fh +
push eax  +
lea ecx [ebp+var_EC] +
call sub_433840  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_88] +
call sub_433840  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_100] +
call sub_433840  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_D8] +
call sub_433840  +
mov edx [ebp+var_70] +
push ecx  +
lea ecx [ebp+var_40] +
call sub_437E50  +
add esp 4 +
cmp byte ptr [ebp+var_C4] 0 +
jz loc_434129  +
mov eax [ebp+var_B4] +
mov edx [ebp+var_B0] +
jmp loc_434135  +
mov eax [ebp+var_BC] +
mov edx [ebp+var_C0] +
push eax  +
lea ecx [ebp+var_40] +
call sub_421830  +
add esp 4 +
lea ecx [ebp+var_40] +
call sub_4221C0  +
lea ecx [ebp+var_68] +
call sub_421440  +
push eax  +
lea ecx [ebp+var_9C] +
call sub_40ECD0  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_68] +
mov ebx [ebp+var_98] +
mov edi [ebp+var_94] +
push ebx  +
push edi  +
call sub_4427E0  +
push 14h  +
call sub_44FE54  +
add esp 4 +
mov [ebp+var_74] eax +
push ebx  +
push edi  +
mov ecx eax +
mov byte ptr [ebp+var_4] 11h +
call sub_433C30  +
push [ebp+var_94]  +
mov esi eax +
mov ecx ebx +
xor al al +
mov [ebp+var_90] esi +
stos   +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp+var_40] +
call sub_422130  +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_68] +
mov [ebp+var_68] offset off_4912A4 +
mov [ebp+var_64] offset off_491358 +
call loc_4424D0  +
test esi esi +
jz loc_4341DD  +
mov ebx esi +
mov [ebp+var_A8] ebx +
jmp loc_4341E3  +
mov ebx [ebp+var_A8] +
mov eax [ebp+var_70] +
sub eax 0 +
jz loc_434481  +
sub eax 1 +
jz loc_434216  +
push offset aIntegerInvalid  +
lea ecx [ebp+var_58] +
call sub_403800  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 1Dh +
push eax  +
lea ecx [ebp+var_38] +
call sub_40B1F0  +
jmp loc_433F20  +
mov ecx [ebp+var_AC] +
lea edx [ebp+var_70] +
push edx  +
push offset off_4A0F28  +
push offset aPointertoprime  +
mov eax [ecx] +
mov [ebp+var_70] 0 +
call dword ptr [eax+4]  +
mov ebx [ebp+var_70] +
xor eax eax +
mov [ebp+var_74] ebx +
nop   +
inc eax  +
mov [ebp+var_AC] eax +
cmp eax 10h +
jnz loc_434302  +
lea eax [ebp+var_EC] +
push eax  +
lea ecx [ebp+var_A4] +
call loc_432E00  +
push ebx  +
lea eax [ebp+var_D8] +
mov byte ptr [ebp+var_4] 19h +
push eax  +
lea eax [ebp+var_100] +
push eax  +
lea edx [ebp+var_88] +
lea ecx [ebp+var_A4] +
call loc_448DC0  +
add esp 0Ch +
test al al +
jz loc_434538  +
mov ecx [ebp+var_8C] +
lea eax [ebp+var_A4] +
push eax  +
call sub_4330F0  +
push ebx  +
lea eax [ebp+var_D8] +
push eax  +
lea eax [ebp+var_100] +
push eax  +
lea edx [ebp+var_88] +
lea ecx [ebp+var_A4] +
call loc_448DC0  +
add esp 0Ch +
test al al +
jz loc_434633  +
mov byte ptr [ebp+var_4] 0Dh +
xor eax eax +
mov edx [ebp+var_9C] +
mov ecx edx +
mov ebx [ebp+var_98] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4342FA  +
call sub_4746E8  +
jmp loc_4342FF  +
call sub_45B0EB  +
add esp 4 +
mov ebx [ebp+var_8C] +
lea eax [ebp+var_88] +
push eax  +
lea eax [ebp+var_EC] +
mov ecx ebx +
push eax  +
push [ebp+var_A8]  +
call loc_433A80  +
mov edi [ebp+var_80] +
test edi edi +
jz loc_434344  +
mov ecx [ebp+var_7C] +
lea eax [edi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_4343DF  +
sub eax 4 +
sub edi 1 +
jnz loc_434333  +
xor eax eax +
push eax  +
lea ecx [ebp+var_A4] +
call sub_432EF0  +
lea eax [ebp+var_A4] +
mov byte ptr [ebp+var_4] 1Ah +
push eax  +
lea edx [ebp+var_D8] +
lea ecx [ebp+var_128] +
call sub_425FE0  +
add esp 4 +
push eax  +
mov edx ebx +
mov byte ptr [ebp+var_4] 1Bh +
lea ecx [ebp+var_114] +
call sub_425F80  +
add esp 4 +
mov byte ptr [ebp+var_4] 1Ch +
lea ecx [ebp+var_D8] +
push [ebp+var_74]  +
lea edx [ebp+var_88] +
push ecx  +
lea ecx [ebp+var_100] +
push ecx  +
mov ecx eax +
call sub_437F00  +
mov edx eax +
mov ecx ebx +
call loc_448DC0  +
mov edx [ebp+var_10C] +
add esp 0Ch +
mov ebx [ebp+var_108] +
mov ecx edx +
mov [ebp+var_69] al +
mov edi ebx +
xor eax eax +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_4343FD  +
call sub_4746E8  +
jmp loc_434402  +
test edi edi +
jz loc_434344  +
lea ecx [ecx+edi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
dec edi  +
shl edi 5 +
add eax edi +
jmp loc_434346  +
call sub_45B0EB  +
mov edx [ebp+var_120] +
xor eax eax +
mov ebx [ebp+var_11C] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43442D  +
call sub_4746E8  +
jmp loc_434432  +
call sub_45B0EB  +
mov byte ptr [ebp+var_4] 0Dh +
xor eax eax +
mov edx [ebp+var_9C] +
add esp 4 +
mov ebx [ebp+var_98] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_434461  +
call sub_4746E8  +
jmp loc_434466  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+var_69] 0 +
jnz loc_43463E  +
mov eax [ebp+var_AC] +
mov ebx [ebp+var_74] +
jmp loc_434240  +
call sub_437C60  +
mov edx eax +
lea ecx [ebp+var_D8] +
call sub_425E40  +
test al al +
jz loc_4344B6  +
mov ecx [ebp+var_8C] +
lea eax [ebp+var_88] +
push eax  +
lea eax [ebp+var_EC] +
push eax  +
push ebx  +
call loc_433A80  +
jmp loc_43463E  +
lea eax [ebp+var_EC] +
push eax  +
lea edx [ebp+var_100] +
lea ecx [ebp+var_114] +
call sub_425FB0  +
add esp 4 +
lea ecx [ebp+var_D8] +
mov byte ptr [ebp+var_4] 12h +
push ecx  +
mov edx eax +
lea ecx [ebp+var_128] +
call sub_426040  +
add esp 4 +
push eax  +
lea edx [ebp+var_EC] +
mov byte ptr [ebp+var_4] 13h +
lea ecx [ebp+var_A4] +
call sub_425F80  +
add esp 4 +
lea ecx [ebp+var_128] +
call sub_40C800  +
lea ecx [ebp+var_114] +
mov byte ptr [ebp+var_4] 16h +
call sub_40C800  +
lea edx [ebp+var_A4] +
lea ecx [ebp+var_88] +
call sub_425F30  +
test al al +
jz loc_4345B6  +
lea ecx [ebp+var_A4] +
call sub_40C800  +
mov edx [ebp+var_B0] +
xor al al +
mov ecx [ebp+var_B4] +
mov edi edx +
push edx  +
stos   +
call sub_45B0EB  +
add esp 4 +
test esi esi +
jz loc_43456A  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+var_D8] +
call sub_40C800  +
lea ecx [ebp+var_100] +
call sub_40C800  +
lea ecx [ebp+var_88] +
call sub_40C800  +
lea ecx [ebp+var_EC] +
call sub_40C800  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
lea eax [ebp+var_A4] +
push eax  +
lea edx [ebp+var_88] +
lea ecx [ebp+var_54] +
call sub_425FB0  +
add esp 4 +
lea ecx [ebp+var_D8] +
mov byte ptr [ebp+var_4] 17h +
push ecx  +
mov edx eax +
lea ecx [ebp+var_24] +
call sub_426010  +
add esp 4 +
push eax  +
push ecx  +
mov byte ptr [ebp+var_4] 18h +
call sub_437BE0  +
add esp 4 +
push eax  +
push ebx  +
mov ebx [ebp+var_8C] +
mov ecx ebx +
call loc_433A80  +
lea ecx [ebp+var_24] +
call sub_40C800  +
lea ecx [ebp+var_54] +
mov byte ptr [ebp+var_4] 16h +
call sub_40C800  +
lea eax [ebp+var_D8] +
mov ecx ebx +
push eax  +
call sub_425B90  +
lea eax [ebp+var_A4] +
mov ecx ebx +
push eax  +
call sub_434D40  +
lea ecx [ebp+var_A4] +
call sub_40C800  +
mov edx [ebp+var_B0] +
xor al al +
mov ecx [ebp+var_B4] +
mov edi edx +
push edx  +
stos   +
call sub_45B0EB  +
add esp 4 +
test esi esi +
jz loc_434665  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax]  +
lea ecx [ebp+var_D8] +
call sub_40C800  +
lea ecx [ebp+var_100] +
call sub_40C800  +
lea ecx [ebp+var_88] +
call sub_40C800  +
lea ecx [ebp+var_EC] +
call sub_40C800  +
mov al 1 +
jmp loc_434598  +
push 31h  +
push offset aIntegerInval_0  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 0Ah +
lea eax [ebp+var_58] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
mov byte ptr [ebp+var_4] 9 +
jmp loc_433F19  +
***
push ebx  +
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+10h] 1 +
jz loc_43478E  +
mov ecx [esi+0Ch] +
mov edi [esi+8] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
cmp eax edx +
jnb loc_434803  +
mov eax 1 +
cmp edi eax +
jbe loc_43473F  +
add dword ptr [ecx+eax*4] 1 +
jnz loc_434803  +
inc eax  +
cmp eax edi +
jb loc_434730  +
mov edi [esi+8] +
mov eax [esi+8] +
add edi edi +
cmp edi eax +
jbe loc_434779  +
mov edx [esi+0Ch] +
push 1  +
push edi  +
push eax  +
call sub_437F60  +
mov edx [esi+8] +
add esp 0Ch +
mov ecx edi +
mov [esi+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [esi+8] edi +
mov ecx [esi+8] +
mov eax [esi+0Ch] +
shr ecx 1 +
mov dword ptr [eax+ecx*4] 1 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi [esi+0Ch] +
mov ebx [esi+8] +
mov ecx [edi] +
lea eax [ecx-1] +
mov [edi] eax +
cmp eax ecx +
jbe loc_4347C2  +
mov edx 1 +
cmp ebx edx +
jbe loc_4347C2  +
mov ecx [edi+edx*4] +
lea eax [ecx-1] +
mov [edi+edx*4] eax +
test ecx ecx +
jnz loc_4347C2  +
inc edx  +
cmp edx ebx +
jb loc_4347B0  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
test eax eax +
jz loc_4347F6  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_4347F2  +
sub ecx 4 +
sub eax 1 +
jnz loc_4347D2  +
call sub_437BE0  +
push eax  +
mov ecx esi +
call sub_4330F0  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
test eax eax +
jnz loc_434803  +
call sub_437BE0  +
push eax  +
mov ecx esi +
call sub_4330F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+10h] 1 +
jnz loc_4348CE  +
mov ecx [esi+0Ch] +
mov edi [esi+8] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
cmp eax edx +
jnb loc_43494B  +
mov eax 1 +
cmp edi eax +
jbe loc_434871  +
add dword ptr [ecx+eax*4] 1 +
jnz loc_43494B  +
inc eax  +
cmp eax edi +
jb loc_434862  +
mov edi [esi+8] +
mov eax [esi+8] +
add edi edi +
cmp edi eax +
jbe loc_4348AB  +
mov edx [esi+0Ch] +
push 1  +
push edi  +
push eax  +
call sub_437F60  +
mov edx [esi+8] +
add esp 0Ch +
mov ecx edi +
mov [esi+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [esi+8] edi +
mov ecx [esi+8] +
mov eax [esi+0Ch] +
shr ecx 1 +
mov dword ptr [eax+ecx*4] 1 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi [esi+0Ch] +
mov ebx [esi+8] +
mov ecx [edi] +
lea eax [ecx-1] +
mov [edi] eax +
cmp eax ecx +
jbe loc_43494B  +
mov edx 1 +
cmp ebx edx +
jbe loc_434902  +
mov ecx [edi+edx*4] +
lea eax [ecx-1] +
mov [edi+edx*4] eax +
test ecx ecx +
jnz loc_43494B  +
inc edx  +
cmp edx ebx +
jb loc_4348F0  +
call sub_437C60  +
lea ecx [ebp-20h] +
push ecx  +
mov ecx eax +
call sub_433230  +
push eax  +
mov ecx esi +
mov dword ptr [ebp-4] 0 +
call sub_4330F0  +
mov edx [ebp-18h] +
xor eax eax +
mov ebx [ebp-14h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_434943  +
call sub_4746E8  +
jmp loc_434948  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
push ebp  +
push esi  +
push edi  +
push dword ptr [ebx+0Ch]  +
mov eax [ebx+8] +
mov edi edx +
mov esi ecx +
mov ecx [edi+8] +
mov edx [esi+0Ch] +
push dword ptr [edi+0Ch]  +
cmp ecx eax +
jnz loc_434995  +
call off_49EB5C  +
test eax eax +
jnz loc_434A7B  +
mov [esi+10h] eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
jbe loc_434A11  +
mov ecx eax +
call off_49EB5C  +
mov edx [edi+0Ch] +
mov ebp [esi+0Ch] +
mov [esp+14h] eax +
mov eax [ebx+8] +
lea ecx ds:0[eax*4] +
add edx ecx +
add ebp ecx +
cmp ebp edx +
jz loc_4349CF  +
mov eax [edi+8] +
sub eax [ebx+8] +
shl eax 2 +
push eax  +
push edx  +
push ebp  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+0Ch] +
mov ebx [ebx+8] +
mov edx [edi+8] +
lea edi [eax+ebx*4] +
mov ecx [edi] +
mov eax [esp+14h] +
add eax ecx +
mov [edi] eax +
cmp eax ecx +
jnb loc_434AC4  +
mov eax 1 +
sub edx ebx +
cmp edx eax +
jbe loc_434A7B  +
add dword ptr [edi+eax*4] 1 +
jnz loc_434AC4  +
inc eax  +
cmp eax edx +
jb loc_434A00  +
jmp loc_434A7B  +
call off_49EB5C  +
mov edx [ebx+0Ch] +
mov ebp [esi+0Ch] +
mov [esp+14h] eax +
mov eax [edi+8] +
lea ecx ds:0[eax*4] +
add edx ecx +
add ebp ecx +
cmp ebp edx +
jz loc_434A47  +
mov eax [ebx+8] +
sub eax [edi+8] +
shl eax 2 +
push eax  +
push edx  +
push ebp  +
call loc_452BD0  +
add esp 0Ch +
mov edx [ebx+8] +
mov eax [esi+0Ch] +
mov ebx [edi+8] +
mov ecx [eax+ebx*4] +
lea edi [eax+ebx*4] +
mov eax [esp+14h] +
add eax ecx +
mov [edi] eax +
cmp eax ecx +
jnb loc_434AC4  +
mov eax 1 +
sub edx ebx +
cmp edx eax +
jbe loc_434A7B  +
add dword ptr [edi+eax*4] 1 +
jnz loc_434AC4  +
inc eax  +
cmp eax edx +
jb loc_434A70  +
mov edi [esi+8] +
mov eax [esi+8] +
add edi edi +
cmp edi eax +
jbe loc_434AB5  +
mov edx [esi+0Ch] +
push 1  +
push edi  +
push eax  +
call sub_437F60  +
mov edx [esi+8] +
add esp 0Ch +
mov ecx edi +
mov [esi+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [esi+8] edi +
mov ecx [esi+8] +
mov eax [esi+0Ch] +
shr ecx 1 +
mov dword ptr [eax+ecx*4] 1 +
pop edi  +
mov dword ptr [esi+10h] 0 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub esp 0Ch +
push ebx  +
push ebp  +
mov ebp edx +
mov ebx ecx +
push esi  +
push edi  +
mov [esp+10h] ebp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [esp+18h] ecx +
test eax eax +
jz loc_434B00  +
lea edx [eax-1] +
lea edx [ecx+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_434B00  +
sub edx 4 +
sub eax 1 +
jnz loc_434AF3  +
mov esi eax +
and esi 1 +
add esi eax +
mov eax [esp+20h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp+14h] edx +
test eax eax +
jz loc_434B31  +
lea ecx [eax-1] +
lea ecx [edx+ecx*4] +
nop   +
cmp dword ptr [ecx] 0 +
jnz loc_434B2D  +
sub ecx 4 +
sub eax 1 +
jnz loc_434B20  +
mov ecx [esp+18h] +
mov edi eax +
and edi 1 +
add edi eax +
cmp esi edi +
jnz loc_434BB2  +
mov ecx esi +
test esi esi +
jz loc_434B6C  +
mov ebp [ebp+0Ch] +
lea eax [edx+esi*4] +
sub ebp edx +
push edx  +
push dword ptr [ebp+0Ch]  +
mov edx [ebx+0Ch] +
mov ecx esi +
call off_49EB60  +
pop edi  +
pop esi  +
pop ebp  +
mov dword ptr [ebx+10h] 0 +
pop ebx  +
add esp 0Ch +
retn   +
***
mov eax [esp+10h] +
mov ecx [esp+20h] +
mov edx [ebx+0Ch] +
push dword ptr [eax+0Ch]  +
push dword ptr [ecx+0Ch]  +
mov ecx esi +
call off_49EB60  +
pop edi  +
pop esi  +
pop ebp  +
mov dword ptr [ebx+10h] 1 +
pop ebx  +
add esp 0Ch +
retn   +
***
jbe loc_434C17  +
push edx  +
mov edx [ebx+0Ch] +
push ecx  +
mov ecx edi +
call off_49EB60  +
mov ecx [ebp+0Ch] +
mov edx [ebx+0Ch] +
mov [esp+20h] eax +
lea eax ds:0[edi*4] +
add ecx eax +
add edx eax +
cmp edx ecx +
jz loc_434BF3  +
mov eax esi +
sub eax edi +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
lea eax ds:0[edi*4] +
mov ecx [ebx+0Ch] +
sub esi edi +
push dword ptr [esp+20h]  +
add ecx eax +
mov edx esi +
call sub_426E80  +
add esp 4 +
mov dword ptr [ebx+10h] 0 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
***
push ecx  +
push edx  +
mov edx [ebx+0Ch] +
mov ecx esi +
call off_49EB60  +
mov ecx [esp+20h] +
lea ebp ds:0[esi*4] +
mov edx [ebx+0Ch] +
add edx ebp +
mov [esp+18h] eax +
mov ecx [ecx+0Ch] +
add ecx ebp +
cmp edx ecx +
jz loc_434C57  +
mov eax edi +
sub eax esi +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
mov eax [esp+24h] +
add esp 0Ch +
mov ecx [ebx+0Ch] +
sub edi esi +
push eax  +
add ecx ebp +
mov edx edi +
call sub_426E80  +
add esp 4 +
mov dword ptr [ebx+10h] 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479109  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_10] +
mov [ebp+var_14] 0 +
lea edx [ebp+arg_4] +
mov edi [ebp+arg_4] +
mov eax [ebx+8] +
mov [ebp+var_10] eax +
mov esi [edi+8] +
cmp eax esi +
mov [ebp+arg_4] esi +
mov esi [ebp+arg_0] +
cmovnb edx ecx +
push dword ptr [edx]  +
push ecx  +
mov ecx esi +
call sub_4332C0  +
mov [ebp+var_4] 0 +
mov ecx esi +
cmp dword ptr [ebx+10h] 1 +
mov [ebp+var_14] 1 +
jz loc_434D05  +
cmp dword ptr [edi+10h] 1 +
mov edx ebx +
push edi  +
jz loc_434D0E  +
call loc_434960  +
jmp loc_434D24  +
cmp dword ptr [edi+10h] 1 +
jz loc_434D15  +
push ebx  +
mov edx edi +
call loc_434AD0  +
jmp loc_434D24  +
push edi  +
mov edx ebx +
call loc_434960  +
mov dword ptr [esi+10h] 1 +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
mov edi [esp+arg_0] +
mov esi ecx +
mov ebx [edi+8] +
mov eax [esi+8] +
cmp ebx eax +
jbe loc_434D82  +
mov edx [esi+0Ch] +
push 1  +
push ebx  +
push eax  +
call sub_437F60  +
mov edx [esi+8] +
add esp 0Ch +
mov ecx ebx +
mov [esi+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [esi+8] ebx +
cmp dword ptr [esi+10h] 1 +
mov ecx esi +
jz loc_434DA4  +
cmp dword ptr [edi+10h] 1 +
mov edx esi +
push edi  +
jz loc_434DAD  +
call loc_434960  +
mov eax esi +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn 4  +
cmp dword ptr [edi+10h] 1 +
jz loc_434DBE  +
push esi  +
mov edx edi +
call loc_434AD0  +
mov eax esi +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn 4  +
push edi  +
mov edx esi +
call loc_434960  +
add esp 4 +
mov dword ptr [esi+10h] 1 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479109  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_10] +
mov [ebp+var_14] 0 +
lea edx [ebp+arg_4] +
mov edi [ebp+arg_4] +
mov eax [ebx+8] +
mov [ebp+var_10] eax +
mov esi [edi+8] +
cmp eax esi +
mov [ebp+arg_4] esi +
mov esi [ebp+arg_0] +
cmovnb edx ecx +
push dword ptr [edx]  +
push ecx  +
mov ecx esi +
call sub_4332C0  +
mov [ebp+var_4] 0 +
mov ecx esi +
cmp dword ptr [ebx+10h] 1 +
mov [ebp+var_14] 1 +
jz loc_434E65  +
cmp dword ptr [edi+10h] 1 +
mov edx ebx +
push edi  +
jnz loc_434E7F  +
call loc_434960  +
jmp loc_434E84  +
cmp dword ptr [edi+10h] 1 +
jz loc_434E7C  +
push edi  +
mov edx ebx +
call loc_434960  +
mov dword ptr [esi+10h] 1 +
jmp loc_434E84  +
push ebx  +
mov edx edi +
call loc_434AD0  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [esp+arg_0] +
mov esi ecx +
mov ebx [edi+8] +
mov eax [esi+8] +
cmp ebx eax +
jbe loc_434EDE  +
mov edx [esi+0Ch] +
push 1  +
push ebx  +
push eax  +
call sub_437F60  +
mov edx [esi+8] +
mov ecx ebx +
sub ecx edx +
mov [esi+0Ch] eax +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 18h +
mov [esi+8] ebx +
cmp dword ptr [esi+10h] 1 +
mov ecx esi +
jz loc_434EFF  +
cmp dword ptr [edi+10h] 1 +
mov edx esi +
push edi  +
jnz loc_434F22  +
call loc_434960  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
cmp dword ptr [edi+10h] 1 +
jz loc_434F1F  +
push edi  +
mov edx esi +
call loc_434960  +
add esp 4 +
mov dword ptr [esi+10h] 1 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
push esi  +
mov edx edi +
call loc_434AD0  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
sub esp 10h +
push ebx  +
push ebp  +
mov ebp ecx +
push esi  +
push edi  +
mov [esp+1Ch] ebp +
mov esi [ebp+8] +
mov eax [ebp+0Ch] +
test esi esi +
jz loc_434F6D  +
lea eax [eax+esi*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_434F6D  +
sub eax 4 +
sub esi 1 +
jnz loc_434F60  +
mov eax [esp+24h] +
mov ebx eax +
mov ecx eax +
shr ebx 5 +
add eax 1Fh +
mov [esp+24h] ebx +
shr eax 5 +
and ecx 1Fh +
add eax esi +
mov [esp+14h] ecx +
cmp eax 8 +
ja loc_434F99  +
mov edi ds:dword_48B38C[eax*4] +
jmp loc_434FD4  +
cmp eax 10h +
ja loc_434FA5  +
mov edi 10h +
jmp loc_434FD4  +
cmp eax 20h +
ja loc_434FB1  +
mov edi 20h +
jmp loc_434FD4  +
cmp eax 40h +
ja loc_434FBD  +
mov edi 40h +
jmp loc_434FD4  +
dec eax  +
lea ecx [esp+18h] +
mov [esp+18h] eax +
call sub_422BB0  +
mov edi 1 +
mov ecx eax +
shl edi cl +
mov eax [ebp+8] +
cmp edi eax +
jbe loc_435009  +
mov edx [ebp+0Ch] +
push 1  +
push edi  +
push eax  +
call sub_437F60  +
mov edx [ebp+8] +
add esp 0Ch +
mov ecx edi +
mov [ebp+0Ch] eax +
sub ecx edx +
shl ecx 2 +
push ecx  +
lea eax [eax+edx*4] +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [ebp+8] edi +
mov edi [ebp+0Ch] +
lea edx [esi+ebx] +
cmp edx ebx +
cmovb ebx edx +
test ebx ebx +
jz loc_43503B  +
dec edx  +
cmp edx ebx +
jb loc_435031  +
mov eax edx +
sub eax ebx +
lea ecx [edi+eax*4] +
mov eax [ecx] +
lea ecx [ecx-4] +
mov [edi+edx*4] eax +
dec edx  +
cmp edx ebx +
jnb loc_435024  +
test ebx ebx +
jz loc_43503B  +
mov ecx ebx +
xor eax eax +
stos   +
mov eax [ebp+0Ch] +
xor edi edi +
mov ecx [esp+24h] +
lea ecx [eax+ecx*4] +
mov eax [esp+14h] +
mov [esp+24h] ecx +
test eax eax +
jz loc_4350A1  +
add eax 1Fh +
shr eax 5 +
add eax esi +
xor esi esi +
mov [esp+18h] eax +
test eax eax +
jz loc_4350A1  +
mov ebp [esp+14h] +
mov ebx 20h +
sub ebx ebp +
mov edx [ecx+esi*4] +
mov ecx ebp +
mov eax edx +
shl eax cl +
mov ecx [esp+24h] +
or eax edi +
mov edi edx +
mov [ecx+esi*4] eax +
mov ecx ebx +
shr edi cl +
inc esi  +
mov ecx [esp+24h] +
cmp esi [esp+18h] +
jb loc_435070  +
mov eax [esp+1Ch] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn 4  +
***
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
pop ebx  +
add esp 10h +
retn 4  +
***
sub esp 8 +
push ebx  +
push ebp  +
push esi  +
mov esi ecx +
push edi  +
mov edx [esi+8] +
mov eax [esi+0Ch] +
mov [esp+10h] eax +
test edx edx +
jz loc_4350E1  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_4350DD  +
sub eax 4 +
sub edx 1 +
jnz loc_4350D0  +
mov eax [esp+10h] +
mov ecx [esp+1Ch] +
mov ebx ecx +
shr ebx 5 +
and ecx 1Fh +
cmp edx ebx +
mov [esp+14h] ebx +
mov ebp ebx +
mov [esp+1Ch] ecx +
cmovb ebp edx +
test ebp ebp +
jz loc_43513D  +
cmp ebp edx +
jnb loc_435124  +
mov ecx ebp +
lea ebx [eax+ebp*4] +
mov edi eax +
mov eax [ebx] +
lea edi [edi+4] +
inc ecx  +
mov [edi-4] eax +
lea ebx [ebx+4] +
cmp ecx edx +
jb loc_435110  +
mov ebx [esp+14h] +
mov ecx [esp+10h] +
mov eax edx +
sub eax ebp +
lea edi [ecx+eax*4] +
test ebp ebp +
jz loc_435139  +
mov ecx ebp +
xor eax eax +
stos   +
mov ecx [esp+1Ch] +
cmp edx ebx +
jbe loc_43514F  +
push ecx  +
mov ecx [esi+0Ch] +
sub edx ebx +
call sub_426D40  +
add esp 4 +
cmp dword ptr [esi+10h] 1 +
jnz loc_435185  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
test eax eax +
jz loc_435178  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_435174  +
sub ecx 4 +
sub eax 1 +
jnz loc_435165  +
jmp loc_435178  +
test eax eax +
jnz loc_435185  +
call sub_437BE0  +
push eax  +
mov ecx esi +
call sub_4330F0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_479138  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-20h] edx +
mov [ebp-18h] ecx +
mov eax [edx+8] +
mov esi [edx+0Ch] +
test eax eax +
jz loc_4351ED  +
lea edx [eax-1] +
lea edx [esi+edx*4] +
nop   +
cmp dword ptr [edx] 0 +
jnz loc_4351ED  +
sub edx 4 +
sub eax 1 +
jnz loc_4351E0  +
mov edi 1 +
cmp eax 8 +
ja loc_435200  +
mov ebx ds:dword_48B38C[eax*4] +
jmp loc_435236  +
cmp eax 10h +
ja loc_43520C  +
mov ebx 10h +
jmp loc_435236  +
cmp eax 20h +
ja loc_435218  +
mov ebx 20h +
jmp loc_435236  +
cmp eax 40h +
ja loc_435224  +
mov ebx 40h +
jmp loc_435236  +
dec eax  +
lea ecx [ebp-14h] +
mov [ebp-14h] eax +
call sub_422BB0  +
mov ebx edi +
mov ecx eax +
shl ebx cl +
mov ecx [ebp+8] +
mov [ebp-14h] ebx +
mov eax [ecx+8] +
mov ecx [ecx+0Ch] +
test eax eax +
jz loc_43525D  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_43525D  +
sub ecx 4 +
sub eax 1 +
jnz loc_435250  +
cmp eax 8 +
ja loc_43526B  +
mov edx ds:dword_48B38C[eax*4] +
jmp loc_4352A1  +
cmp eax 10h +
ja loc_435277  +
mov edx 10h +
jmp loc_4352A1  +
cmp eax 20h +
ja loc_435283  +
mov edx 20h +
jmp loc_4352A1  +
cmp eax 40h +
ja loc_43528F  +
mov edx 40h +
jmp loc_4352A1  +
dec eax  +
lea ecx [ebp-10h] +
mov [ebp-10h] eax +
call sub_422BB0  +
mov edx edi +
mov ecx eax +
shl edx cl +
lea esi [edx+ebx] +
mov [ebp-10h] edx +
cmp esi 8 +
ja loc_4352B5  +
mov edi ds:dword_48B38C[esi*4] +
jmp loc_4352EB  +
cmp esi 10h +
ja loc_4352C1  +
mov edi 10h +
jmp loc_4352EB  +
cmp esi 20h +
ja loc_4352CD  +
mov edi 20h +
jmp loc_4352EB  +
cmp esi 40h +
ja loc_4352D9  +
mov edi 40h +
jmp loc_4352EB  +
lea eax [esi-1] +
lea ecx [ebp-1Ch] +
mov [ebp-1Ch] eax +
call sub_422BB0  +
mov ecx eax +
shl edi cl +
mov ebx [ebp-18h] +
push 0  +
push edi  +
push dword ptr [ebx+8]  +
mov edx [ebx+0Ch] +
call sub_437F60  +
add esp 0Ch +
mov [ebx+0Ch] eax +
lea ecx ds:0[edi*4] +
mov [ebx+8] edi +
push ecx  +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
mov dword ptr [ebx+10h] 0 +
mov ecx esi +
mov [ebp-28h] esi +
call sub_437B10  +
test esi esi +
jnz loc_435331  +
xor ebx ebx +
jmp loc_43534B  +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_435344  +
call loc_43F6B0  +
jmp loc_435349  +
call loc_43F720  +
mov ebx eax +
mov [ebp-24h] ebx +
mov eax [ebp+8] +
mov edx ebx +
mov ecx [ebp-18h] +
mov dword ptr [ebp-4] 0 +
push dword ptr [ebp-10h]  +
push dword ptr [eax+0Ch]  +
mov eax [ebp-20h] +
push dword ptr [ebp-14h]  +
mov ecx [ecx+0Ch] +
push dword ptr [eax+0Ch]  +
call loc_431E60  +
xor eax eax +
add esp 10h +
mov edi ebx +
mov ecx esi +
stos   +
lea eax ds:0[esi*4] +
push ebx  +
cmp eax 10h +
jb loc_435393  +
call sub_4746E8  +
jmp loc_435398  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [esp+arg_0] +
mov ebx ecx +
push edi  +
push esi  +
mov edi edx +
call loc_4351A0  +
add esp 4 +
cmp dword ptr [edi+10h] 1 +
setnz dl  +
cmp dword ptr [esi+10h] 1 +
setnz al  +
cmp dl al +
jz loc_435414  +
mov edx [ebx+10h] +
cmp edx 1 +
jz loc_43540A  +
mov ecx [ebx+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_43540A  +
mov eax [ebx+8] +
test eax eax +
jz loc_435414  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_435406  +
sub ecx 4 +
sub eax 1 +
jnz loc_4353F4  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
test eax eax +
jz loc_435414  +
mov eax 1 +
sub eax edx +
mov [ebx+10h] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479179  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
cmp dword_4A291C 0 +
jnz loc_43546F  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi [ebp+arg_0] +
mov ecx 2 +
mov dword ptr [esi] offset off_49099C +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
mov edx edi +
mov ecx esi +
mov [ebp+var_10] 1 +
call sub_4353B0  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4791A8  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov [ebp-3Ch] esi +
mov ebx ecx +
mov edi [ebp+8] +
mov edx [ebp+0Ch] +
mov [ebp-48h] edx +
mov ecx [edi+8] +
mov eax [edi+0Ch] +
test ecx ecx +
jz loc_43553D  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_43553D  +
sub eax 4 +
sub ecx 1 +
jnz loc_435530  +
mov eax [edx+8] +
mov edx [edx+0Ch] +
test eax eax +
jz loc_43555D  +
lea edx [edx+eax*4] +
add edx 0FFFFFFFCh +
cmp dword ptr [edx] 0 +
jnz loc_435573  +
sub edx 4 +
sub eax 1 +
jnz loc_435550  +
lea ecx [ebp-38h] +
call sub_425990  +
push offset unk_49C7FC  +
lea eax [ebp-38h] +
push eax  +
call sub_452780  +
test eax eax +
jz loc_43555D  +
cmp ecx eax +
jnb loc_43559C  +
push edi  +
mov ecx ebx +
call sub_4330F0  +
mov dword ptr [ebx+10h] 0 +
call sub_437BE0  +
push eax  +
mov ecx esi +
call sub_4330F0  +
jmp loc_4356B3  +
mov edx ecx +
and edx 1 +
add edx ecx +
mov ecx eax +
and ecx 1 +
mov [ebp-44h] edx +
add ecx eax +
mov [ebp-40h] ecx +
call sub_432CF0  +
mov edx [ebx+0Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [ebx+8]  +
call sub_437F60  +
add esp 0Ch +
mov [ebx+0Ch] eax +
lea ecx ds:0[esi*4] +
mov [ebx+8] esi +
push ecx  +
push 0  +
push eax  +
call sub_453150  +
mov ecx [ebp-44h] +
add esp 0Ch +
sub ecx [ebp-40h] +
add ecx 2 +
mov dword ptr [ebx+10h] 0 +
call sub_432CF0  +
mov esi eax +
mov eax [ebp-3Ch] +
push 0  +
push esi  +
push dword ptr [eax+8]  +
mov edx [eax+0Ch] +
call sub_437F60  +
mov ecx [ebp-3Ch] +
add esp 0Ch +
mov [ecx+0Ch] eax +
mov [ecx+8] esi +
lea ecx ds:0[esi*4] +
push ecx  +
push 0  +
push eax  +
call sub_453150  +
mov eax [ebp-3Ch] +
add esp 0Ch +
mov ecx [ebp-44h] +
mov dword ptr [eax+10h] 0 +
mov eax [ebp-40h] +
add eax 2 +
lea esi [ecx+eax*2] +
add esi eax +
mov ecx esi +
mov [ebp-50h] esi +
call sub_437B10  +
test esi esi +
jz loc_435668  +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_435661  +
call loc_43F6B0  +
jmp loc_435666  +
call loc_43F720  +
mov esi eax +
mov [ebp-4Ch] esi +
push dword ptr [ebp-40h]  +
mov eax [ebp-48h] +
mov dword ptr [ebp-4] 0 +
mov ecx [ebx+0Ch] +
push dword ptr [eax+0Ch]  +
mov eax [ebp-3Ch] +
push dword ptr [ebp-44h]  +
push dword ptr [edi+0Ch]  +
mov edx [eax+0Ch] +
push esi  +
call sub_432490  +
mov edx [ebp-50h] +
xor eax eax +
add esp 14h +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4356CF  +
call sub_4746E8  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_45B0EB  +
jmp loc_4356B0  +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_490A9C +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4791E0  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push esi  +
call loc_4354E0  +
mov edx 1 +
add esp 8 +
cmp [esi+10h] edx +
jnz loc_43589B  +
mov esi [ebx+10h] +
cmp esi edx +
jz loc_4357F8  +
mov ecx [ebx+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_4357F8  +
mov eax [ebx+8] +
test eax eax +
jz loc_4357FF  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_4357F4  +
sub ecx 4 +
sub eax 1 +
jnz loc_4357E5  +
jmp loc_4357FF  +
test eax eax +
jz loc_4357FF  +
mov eax edx +
sub eax esi +
mov [ebx+10h] eax +
mov ecx edi +
call loc_425B30  +
test al al +
jz loc_435896  +
mov ecx ebx +
call loc_434810  +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_34] +
push eax  +
call sub_433290  +
push edi  +
mov edx eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_20] +
call sub_425FB0  +
add esp 4 +
push eax  +
mov ecx edi +
mov byte ptr [ebp+var_4] 1 +
call sub_4330F0  +
mov edx [ebp+var_18] +
xor eax eax +
mov esi [ebp+var_14] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435864  +
call sub_4746E8  +
jmp loc_435869  +
call sub_45B0EB  +
mov edx [ebp+var_2C] +
xor eax eax +
mov esi [ebp+var_28] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43588E  +
call sub_4746E8  +
jmp loc_435893  +
call sub_45B0EB  +
add esp 4 +
mov edx 1 +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+10h] 1 +
jnz loc_4358E9  +
mov esi [ebx+10h] +
cmp esi 1 +
jz loc_4358E4  +
mov ecx [ebx+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_4358E4  +
mov eax [ebx+8] +
test eax eax +
jz loc_4358E9  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_4358E0  +
sub ecx 4 +
sub eax 1 +
jnz loc_4358C1  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
test eax eax +
jz loc_4358E9  +
sub edx esi +
mov [ebx+10h] edx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479221  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
cmp dword_4A291C 0 +
jnz loc_435950  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_24] offset off_49099C +
mov [ebp+var_1C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_18] eax +
mov [ebp+var_14] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 1 +
cmp dword_4A291C 0 +
jnz loc_4359A8  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi [ebp+arg_0] +
mov ecx 2 +
mov dword ptr [esi] offset off_49099C +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
push [ebp+arg_4]  +
mov edx esi +
mov [ebp+var_10] 1 +
push edi  +
lea ecx [ebp+var_24] +
call sub_435780  +
mov ebx [ebp+var_18] +
xor eax eax +
mov edx [ebp+var_1C] +
mov edi ebx +
mov ecx edx +
add esp 8 +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_435A20  +
call sub_4746E8  +
jmp loc_435A25  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_479261  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
cmp dword_4A291C 0 +
jnz loc_435A90  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi [ebp+arg_0] +
mov ecx 2 +
mov dword ptr [esi] offset off_49099C +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
mov [ebp+var_10] 1 +
jnz loc_435AF4  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_24] offset off_49099C +
mov [ebp+var_1C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_18] eax +
mov [ebp+var_14] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
push [ebp+arg_4]  +
lea edx [ebp+var_24] +
mov [ebp+var_4] 1 +
push edi  +
mov ecx esi +
call sub_435780  +
mov ebx [ebp+var_18] +
xor eax eax +
mov edx [ebp+var_1C] +
mov edi ebx +
mov ecx edx +
add esp 8 +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_435B67  +
call sub_4746E8  +
jmp loc_435B6C  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 34h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+30h] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov [esp+10h] ebx +
test edi edi +
jz loc_435C5E  +
mov eax [ebx+0Ch] +
lea edx [edi-1] +
test edx edi +
jnz loc_435BC8  +
mov ecx [eax] +
and ecx edx +
jmp loc_435C3A  +
mov esi [ebx+8] +
test esi esi +
jz loc_435BE2  +
lea eax [eax+esi*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_435BE2  +
sub eax 4 +
sub esi 1 +
jnz loc_435BD5  +
xor ecx ecx +
cmp edi 5 +
ja loc_435C11  +
xor edx edx +
test esi esi +
jz loc_435C03  +
mov eax [ebx+0Ch] +
lea eax [eax+esi*4] +
add ecx [eax-4] +
lea eax [eax-4] +
adc edx 0 +
sub esi 1 +
jnz loc_435BF5  +
push 0  +
push edi  +
push edx  +
push ecx  +
call sub_4740E0  +
mov ecx eax +
jmp loc_435C3A  +
test esi esi +
jz loc_435C3A  +
mov eax [ebx+0Ch] +
lea ebx [eax+esi*4] +
push 0  +
push edi  +
push ecx  +
push dword ptr [ebx-4]  +
lea ebx [ebx-4] +
call sub_4740E0  +
mov ecx eax +
sub esi 1 +
jnz loc_435C20  +
mov ebx [esp+10h] +
cmp dword ptr [ebx+10h] 1 +
jnz loc_435C48  +
test ecx ecx +
jz loc_435C48  +
sub edi ecx +
mov ecx edi +
pop edi  +
mov eax ecx +
mov ecx [esp+38h] +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea ecx [esp+14h] +
call sub_425990  +
push offset unk_49C7FC  +
lea eax [esp+18h] +
push eax  +
call sub_452780  +
push esi  +
push edi  +
mov edi [ecx+0Ch] +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_435C9F  +
lea eax [ecx-1] +
lea eax [edi+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_435C9F  +
sub eax 4 +
sub ecx 1 +
jnz loc_435C92  +
mov eax [esp+0Ch] +
mov esi [eax+0Ch] +
mov eax [eax+8] +
test eax eax +
jz loc_435CC0  +
lea edx [eax-1] +
lea edx [esi+edx*4] +
cmp dword ptr [edx] 0 +
jnz loc_435CC0  +
sub edx 4 +
sub eax 1 +
jnz loc_435CB3  +
cmp eax ecx +
jnz loc_435CFD  +
test ecx ecx +
jz loc_435CE4  +
lea eax [esi+ecx*4] +
sub edi esi +
mov edx [edi+eax-4] +
lea eax [eax-4] +
mov esi [eax] +
dec ecx  +
cmp edx esi +
ja loc_435CF3  +
jb loc_435CEB  +
test ecx ecx +
jnz loc_435CD0  +
pop edi  +
xor eax eax +
pop esi  +
retn 4  +
***
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn 4  +
***
pop edi  +
mov eax 1 +
pop esi  +
retn 4  +
***
sbb eax eax +
and eax 2 +
pop edi  +
dec eax  +
pop esi  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4792A8  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
cmp dword ptr [esi+10h] 1 +
mov dword ptr [ebp-14h] 0 +
jz loc_43600A  +
call loc_425B30  +
test al al +
jz loc_43600A  +
cmp dword_4A291C 0 +
jnz loc_435D73  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ebx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov ecx ebx +
mov [ebp-20h] ebx +
call sub_437B10  +
lea ecx [ebx+6] +
call loc_43F720  +
mov edi eax +
mov dword ptr [ebp-18h] 0 +
mov [ebp-1Ch] edi +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi] 0 +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov esi [esi+8] +
mov ecx [ecx+0Ch] +
test esi esi +
jz loc_435DD5  +
lea eax [ecx-4] +
lea eax [eax+esi*4] +
cmp dword ptr [eax] 0 +
jnz loc_435EB4  +
sub eax 4 +
sub esi 1 +
jnz loc_435DC4  +
xor edx edx +
inc edx  +
lea ecx [ebp-3Ch] +
shr edx 1 +
call sub_433030  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-34h] +
mov edx [ebp-30h] +
cmp ebx ecx +
jnz loc_435DFA  +
mov eax ecx +
shr eax 1 +
cmp dword ptr [edx+eax*4] 0 +
jnz loc_435E33  +
test ecx ecx +
jz loc_435E11  +
lea eax [ecx-1] +
lea eax [edx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_435E11  +
sub eax 4 +
sub ecx 1 +
jnz loc_435E04  +
call sub_432CF0  +
mov esi eax +
mov edx edi +
push 0  +
push esi  +
push ebx  +
call sub_437F60  +
mov edx [ebp-30h] +
mov edi eax +
mov ebx esi +
mov [ebp-1Ch] edi +
add esp 0Ch +
mov [ebp-20h] ebx +
cmp edi edx +
jz loc_435E49  +
lea eax ds:0[ebx*4] +
push eax  +
push edx  +
push edi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebp-2Ch] +
lea ecx [ebp-78h] +
mov edx [ebp-10h] +
mov [ebp-18h] eax +
lea eax [ebp-28h] +
push eax  +
call sub_426010  +
add esp 4 +
push eax  +
lea edx [ebp-28h] +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-64h] +
call sub_425F80  +
add esp 4 +
push 1  +
lea ecx [ebp-50h] +
mov byte ptr [ebp-4] 3 +
push ecx  +
mov ecx eax +
call sub_425C20  +
push eax  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 4 +
call sub_4330F0  +
mov edx [ebp-48h] +
xor eax eax +
mov esi [ebp-44h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435ED4  +
call sub_4746E8  +
jmp loc_435ED9  +
test esi esi +
jz loc_435DD5  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
lea edx [esi-1] +
shl edx 5 +
add edx eax +
jmp loc_435DD7  +
***
call sub_45B0EB  +
mov edx [ebp-5Ch] +
xor eax eax +
mov esi [ebp-58h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435EFE  +
call sub_4746E8  +
jmp loc_435F03  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 1 +
xor eax eax +
mov edx [ebp-70h] +
add esp 4 +
mov esi [ebp-6Ch] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435F2C  +
call sub_4746E8  +
jmp loc_435F31  +
call sub_45B0EB  +
add esp 4 +
cmp dword ptr [ebp-2Ch] 1 +
jz loc_435F4E  +
cmp dword ptr [ebp-18h] 1 +
jz loc_435F7B  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-3Ch] +
call loc_435C80  +
jmp loc_435F62  +
cmp dword ptr [ebp-18h] 1 +
jnz loc_435F70  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-3Ch] +
call loc_435C80  +
neg eax  +
test eax eax +
jns loc_435F7B  +
mov edi [ebp-1Ch] +
mov ebx [ebp-20h] +
jmp loc_435DE6  +
***
mov ebx [ebp+8] +
lea eax [ebp-28h] +
push eax  +
mov ecx ebx +
call loc_432E00  +
mov edx [ebp-34h] +
xor eax eax +
mov esi [ebp-30h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435FAB  +
call sub_4746E8  +
jmp loc_435FB0  +
call sub_45B0EB  +
mov edx [ebp-20h] +
xor eax eax +
mov esi [ebp-1Ch] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_435FEC  +
call sub_4746E8  +
add esp 4 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_45B0EB  +
add esp 4 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_437BE0  +
mov ecx [ebp+8] +
push eax  +
call loc_432E00  +
mov eax [ebp+8] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4792D8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea eax [ebp+var_20] +
push eax  +
call loc_435D10  +
lea eax [ebp+var_34] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_20] +
call sub_425D80  +
cmp dword ptr [esi+10h] 1 +
jz loc_436093  +
cmp dword ptr [eax+10h] 1 +
jz loc_43608C  +
push eax  +
mov ecx esi +
call loc_435C80  +
jmp loc_4360A8  +
mov eax 1 +
jmp loc_4360A8  +
cmp dword ptr [eax+10h] 1 +
jz loc_43609E  +
or eax 0FFFFFFFFh +
jmp loc_4360A8  +
push eax  +
mov ecx esi +
call loc_435C80  +
neg eax  +
mov edx [ebp+var_2C] +
test eax eax +
mov esi [ebp+var_28] +
mov ecx edx +
setz bl  +
mov edi esi +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4360CF  +
call sub_4746E8  +
jmp loc_4360D4  +
call sub_45B0EB  +
mov esi [ebp+var_14] +
xor eax eax +
mov edx [ebp+var_18] +
mov edi esi +
mov ecx edx +
add esp 4 +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4360F9  +
call sub_4746E8  +
jmp loc_4360FE  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx ecx +
mov dword ptr [esp] 0 +
push esi  +
mov eax [edx+8] +
mov esi [edx+0Ch] +
test eax eax +
jz loc_43614D  +
lea ecx [eax-1] +
lea ecx [esi+ecx*4] +
push 0FFFFFFFFh  +
push offset loc_479308  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
mov [ebp+var_10] edi +
push [ebp+arg_4]  +
lea ecx [ebp+var_60] +
mov [ebp+var_14] 0 +
call sub_426070  +
push [ebp+arg_0]  +
lea ecx [ebp+var_60] +
mov [ebp+var_4] 0 +
push esi  +
push edi  +
call sub_444EA0  +
lea ecx [ebp+var_60] +
call sub_426650  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479338  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
mov [ebp+var_10] edi +
lea ecx [ebp+var_48] +
mov [ebp+var_14] 0 +
call sub_4376E0  +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
mov ecx eax +
mov edx [eax] +
push esi  +
call dword ptr [edx+64h]  +
push eax  +
mov ecx edi +
call loc_432E00  +
lea ecx [ebp+var_48] +
call sub_40D990  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx+14h] +
xor eax eax +
push esi  +
mov esi [ecx+18h] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436288  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
sub esp 68h +
push 0FFFFFFFFh  +
push offset loc_47941E  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+68h+var_74] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+68h+arg_4] +
mov [ebp+68h+var_4] 0 +
cmp dword ptr [edi+10h] 1 +
jnz loc_436335  +
push esi  +
lea eax [ebp+68h+var_18] +
push eax  +
call sub_435A40  +
mov ebx [ebp+68h+arg_0] +
mov ecx eax +
push esi  +
push ebx  +
mov [ebp+68h+var_6C] 0 +
call sub_4362A0  +
mov edx [ebp+68h+var_10] +
xor eax eax +
mov esi [ebp+68h+var_C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436326  +
call sub_4746E8  +
add esp 4 +
mov eax ebx +
jmp loc_4365AB  +
call sub_45B0EB  +
add esp 4 +
mov eax ebx +
jmp loc_4365AB  +
mov ebx [esi+8] +
test ebx ebx +
jz loc_436408  +
mov eax [esi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_436408  +
shl ebx 2 +
mov ecx ebx +
mov [ebp+68h+var_C] ebx +
call sub_437B10  +
test ebx ebx +
jnz loc_436362  +
xor eax eax +
jmp loc_43636E  +
lea ecx ds:0[ebx*4] +
call loc_43F720  +
mov [ebp+68h+arg_4] eax +
mov [ebp+68h+var_8] eax +
mov [ebp+68h+var_6C] 0Ah +
push dword ptr [esi+8]  +
push ecx  +
lea ecx [ebp+68h+var_2C] +
call sub_4332C0  +
mov edx [ebp+68h+arg_4] +
mov byte ptr [ebp+68h+var_6C] 0Bh +
push dword ptr [esi+8]  +
push dword ptr [esi+0Ch]  +
push dword ptr [edi+8]  +
push dword ptr [edi+0Ch]  +
mov edi [ebp+68h+var_20] +
mov ecx edi +
call loc_4327C0  +
push dword ptr [esi+8]  +
mov edx edi +
mov ecx edi +
push dword ptr [esi+0Ch]  +
push eax  +
call loc_432BA0  +
mov esi [ebp+68h+arg_0] +
lea eax [ebp+68h+var_2C] +
add esp 1Ch +
mov ecx esi +
push eax  +
call loc_432E00  +
mov edx [ebp+68h+var_24] +
xor eax eax +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
mov eax [ebp+68h+var_20] +
push eax  +
jb loc_4363E5  +
call sub_4746E8  +
jmp loc_4363EA  +
call sub_45B0EB  +
mov edx [ebp+68h+arg_4] +
add esp 4 +
mov edi edx +
xor eax eax +
mov ecx ebx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
jmp loc_4365AB  +
mov ecx esi +
call loc_4330B0  +
test al al +
jnz loc_43659A  +
cmp dword ptr [edi+8] 0 +
jbe loc_43659A  +
mov eax [edi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43659A  +
call sub_437C60  +
mov edx eax +
mov ecx edi +
call sub_425E40  +
test al al +
jz loc_43644A  +
call sub_437C60  +
jmp loc_43659F  +
push edi  +
lea eax [ebp+68h+var_18] +
mov ecx esi +
push eax  +
call sub_435A40  +
push edi  +
lea ecx [ebp+68h+var_2C] +
mov [ebp+68h+var_6C] 1 +
push ecx  +
mov ecx eax +
call sub_4362A0  +
lea ecx [ebp+68h+var_18] +
mov byte ptr [ebp+68h+var_6C] 3 +
call sub_40C800  +
lea ecx [ebp+68h+var_2C] +
call loc_4330B0  +
test al al +
jz loc_43649D  +
call sub_437BE0  +
push eax  +
lea ecx [ebp+68h+var_9C] +
call loc_432E00  +
mov byte ptr [ebp+68h+var_6C] 4 +
mov ebx 2 +
jmp loc_436520  +
push 1  +
lea ecx [ebp+68h+var_18] +
call sub_432EF0  +
lea eax [ebp+68h+var_2C] +
mov [ebp+68h+var_6C] 5 +
push eax  +
mov edx edi +
mov [ebp+68h+var_4] 4 +
lea ecx [ebp+68h+var_88] +
call sub_425FB0  +
mov [ebp+68h+var_6C] 6 +
lea ecx [ebp+68h+var_68] +
push eax  +
mov edx esi +
mov [ebp+68h+var_4] 0Ch +
call sub_425FE0  +
lea ecx [ebp+68h+var_18] +
mov [ebp+68h+var_6C] 7 +
push ecx  +
mov edx eax +
mov [ebp+68h+var_4] 1Ch +
lea ecx [ebp+68h+var_54] +
call sub_425F80  +
mov [ebp+68h+var_6C] 8 +
lea ecx [ebp+68h+var_40] +
push edi  +
mov edx eax +
mov [ebp+68h+var_4] 3Ch +
call sub_426010  +
add esp 10h +
mov [ebp+68h+var_6C] 9 +
mov ebx 7Ch +
mov esi [ebp+68h+arg_0] +
mov ecx esi +
push eax  +
mov [ebp+68h+var_4] ebx +
call loc_432E00  +
or ebx 1 +
test bl 40h +
jz loc_436541  +
lea ecx [ebp+68h+var_40] +
and ebx 0FFFFFFBFh +
call sub_40C800  +
test bl 20h +
jz loc_436551  +
lea ecx [ebp+68h+var_54] +
and ebx 0FFFFFFDFh +
call sub_40C800  +
test bl 10h +
jz loc_436561  +
lea ecx [ebp+68h+var_68] +
and ebx 0FFFFFFEFh +
call sub_40C800  +
test bl 8 +
jz loc_436571  +
lea ecx [ebp+68h+var_88] +
and ebx 0FFFFFFF7h +
call sub_40C800  +
test bl 4 +
jz loc_436581  +
lea ecx [ebp+68h+var_18] +
and ebx 0FFFFFFFBh +
call sub_40C800  +
test bl 2 +
jz loc_43658E  +
lea ecx [ebp+68h+var_9C] +
call sub_40C800  +
lea ecx [ebp+68h+var_2C] +
call sub_40C800  +
mov eax esi +
jmp loc_4365AB  +
call sub_437BE0  +
mov ecx [ebp+68h+arg_0] +
push eax  +
call loc_432E00  +
mov eax [ebp+68h+arg_0] +
mov ecx [ebp+68h+var_74] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
lea esp [ebp+68h] +
pop ebp  +
retn 8  +
***
push ebx  +
push ebp  +
mov ebp [esp+0Ch] +
push esi  +
push edi  +
push ebp  +
mov esi ebp +
call loc_435B90  +
xor ebx ebx +
mov ecx eax +
lea edi [ebx+1] +
test ecx ecx +
jz loc_43660C  +
cmp ecx 1 +
jz loc_436620  +
mov eax esi +
xor edx edx +
div  ecx +
imul eax edi +
mov esi edx +
add ebx eax +
test esi esi +
jz loc_43660C  +
cmp esi 1 +
jz loc_436615  +
mov eax ecx +
xor edx edx +
div  esi +
imul eax ebx +
mov ecx edx +
add edi eax +
test ecx ecx +
jnz loc_4365E0  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
sub ebp ebx +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov ecx [esi+14h] +
mov eax [ebp+arg_4] +
mov ebx [edi+8] +
cmp ebx ecx +
jnz loc_4366C0  +
cmp [eax+8] ecx +
jnz loc_4366C0  +
push dword ptr [eax+0Ch]  +
mov edx [esi+2Ch] +
mov ecx ebx +
push dword ptr [edi+0Ch]  +
call off_49EB5C  +
test eax eax +
jnz loc_436699  +
push dword ptr [edi+8]  +
mov edx [esi+18h] +
mov ecx [esi+2Ch] +
call sub_426E40  +
add esp 4 +
test eax eax +
js loc_4366A9  +
push dword ptr [esi+18h]  +
mov edx [esi+2Ch] +
mov ecx [edi+8] +
push edx  +
call off_49EB60  +
lea eax [esi+20h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
mov edx edi +
lea ecx [ebp+var_20] +
call sub_425F80  +
add esp 4 +
lea ebx [esi+34h] +
mov [ebp+var_4] 0 +
push eax  +
mov ecx ebx +
call sub_4330F0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov edi eax +
mov edx [ebp+var_18] +
mov ecx edx +
mov [ebp+arg_0] eax +
xor eax eax +
push [ebp+arg_0]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43670E  +
call sub_4746E8  +
jmp loc_436713  +
call sub_45B0EB  +
add esp 4 +
add esi 0Ch +
cmp dword ptr [ebx+10h] 1 +
jz loc_43672F  +
cmp dword ptr [esi+10h] 1 +
jz loc_436743  +
push esi  +
mov ecx ebx +
call loc_435C80  +
jmp loc_43673F  +
cmp dword ptr [esi+10h] 1 +
jnz loc_43674B  +
push esi  +
mov ecx ebx +
call loc_435C80  +
neg eax  +
test eax eax +
js loc_43674B  +
push esi  +
mov ecx ebx +
call sub_434EA0  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi+14h] +
cmp [esi+8] ecx +
jnz loc_4367C9  +
cmp [eax+8] ecx +
jnz loc_4367C9  +
push dword ptr [eax+0Ch]  +
mov edx [esi+0Ch] +
mov ecx [esi+8] +
push edx  +
call off_49EB5C  +
test eax eax +
jnz loc_4367B2  +
push dword ptr [esi+8]  +
mov edx [edi+18h] +
mov ecx [esi+0Ch] +
call sub_426E40  +
add esp 4 +
test eax eax +
js loc_436806  +
push dword ptr [edi+18h]  +
mov edx [esi+0Ch] +
mov ecx [esi+8] +
push edx  +
call off_49EB60  +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
push eax  +
mov ecx esi +
call sub_434D40  +
add edi 0Ch +
cmp dword ptr [esi+10h] 1 +
jz loc_4367EA  +
cmp dword ptr [edi+10h] 1 +
jz loc_4367FE  +
push edi  +
mov ecx esi +
call loc_435C80  +
jmp loc_4367FA  +
cmp dword ptr [edi+10h] 1 +
jnz loc_436806  +
push edi  +
mov ecx esi +
call loc_435C80  +
neg eax  +
test eax eax +
js loc_436806  +
push edi  +
mov ecx esi +
call sub_434EA0  +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov ecx [esi+14h] +
mov eax [ebp+arg_4] +
mov ebx [edi+8] +
cmp ebx ecx +
jnz loc_43688B  +
cmp [eax+8] ecx +
jnz loc_43688B  +
push dword ptr [eax+0Ch]  +
mov edx [esi+2Ch] +
mov ecx ebx +
push dword ptr [edi+0Ch]  +
call off_49EB60  +
test eax eax +
jz loc_436874  +
push dword ptr [esi+18h]  +
mov edx [esi+2Ch] +
mov ecx [edi+8] +
push edx  +
call off_49EB5C  +
lea eax [esi+20h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
mov edx edi +
lea ecx [ebp+var_20] +
call sub_425FB0  +
add esp 4 +
lea ecx [esi+34h] +
mov [ebp+var_4] 0 +
push eax  +
mov [ebp+arg_0] ecx +
call sub_4330F0  +
mov [ebp+var_4] 0FFFFFFFFh +
xor eax eax +
mov edx [ebp+var_18] +
mov ecx edx +
mov ebx [ebp+var_14] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4368D5  +
call sub_4746E8  +
jmp loc_4368DA  +
call sub_45B0EB  +
add esp 4 +
cmp dword ptr [esi+44h] 1 +
jnz loc_4368F3  +
lea ecx [esi+0Ch] +
mov esi [ebp+arg_0] +
push ecx  +
mov ecx esi +
call sub_434D40  +
jmp loc_4368F6  +
mov esi [ebp+arg_0] +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi+14h] +
cmp [esi+8] ecx +
jnz loc_436954  +
cmp [eax+8] ecx +
jnz loc_436954  +
push dword ptr [eax+0Ch]  +
mov edx [esi+0Ch] +
mov ecx [esi+8] +
push edx  +
call off_49EB60  +
test eax eax +
jz loc_43696D  +
push dword ptr [edi+18h]  +
mov edx [esi+0Ch] +
mov ecx [esi+8] +
push edx  +
call off_49EB5C  +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
push eax  +
mov ecx esi +
call sub_434EA0  +
cmp dword ptr [esi+10h] 1 +
jnz loc_43696D  +
lea eax [edi+0Ch] +
mov ecx esi +
push eax  +
call sub_434D40  +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
***
push edi  +
mov edi ecx +
cmp dword ptr [esi+10h] 1 +
jz loc_4369C2  +
mov ecx [esi+0Ch] +
cmp dword ptr [ecx] 0 +
jnz loc_4369C2  +
mov eax [esi+8] +
test eax eax +
jz loc_4369BB  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp dword ptr [ecx] 0 +
jnz loc_4369B7  +
sub ecx 4 +
sub eax 1 +
jnz loc_4369A3  +
pop edi  +
mov eax esi +
pop esi  +
retn 4  +
test eax eax +
jnz loc_4369C2  +
pop edi  +
mov eax esi +
pop esi  +
retn 4  +
mov ecx [edi+18h] +
mov edx [edi+2Ch] +
cmp edx ecx +
jz loc_4369DD  +
mov eax [edi+14h] +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
push dword ptr [esi+0Ch]  +
mov edx [edi+2Ch] +
mov ecx [esi+8] +
push edx  +
call off_49EB60  +
test eax eax +
jz loc_436A09  +
mov ecx [esi+8] +
mov eax [edi+2Ch] +
mov edx [edi+14h] +
sub edx ecx +
push 1  +
lea ecx [eax+ecx*4] +
call sub_426E80  +
add esp 4 +
lea eax [edi+20h] +
pop edi  +
pop esi  +
retn 4  +
***
sub esp 44h +
push 0FFFFFFFFh  +
push offset loc_479460  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+44h+var_50] +
mov large fs:0 eax +
cmp dword ptr [ecx+14h] 0 +
lea edx [ecx+0Ch] +
mov [ebp+44h+var_8] 0 +
jbe loc_436B86  +
mov eax [edx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_436B86  +
push edx  +
lea ecx [ebp+44h+var_B8] +
call loc_436DB0  +
push [ebp+44h+arg_C]  +
lea eax [ebp+44h+var_44] +
mov [ebp+44h+var_48] 0 +
push eax  +
lea ecx [ebp+44h+var_B8] +
call sub_426740  +
mov esi eax +
push [ebp+44h+arg_4]  +
lea eax [ebp+44h+var_30] +
mov byte ptr [ebp+44h+var_48] 1 +
push eax  +
lea ecx [ebp+44h+var_B8] +
call sub_426740  +
push [ebp+44h+arg_10]  +
lea ecx [ebp+44h+var_B8] +
mov byte ptr [ebp+44h+var_48] 2 +
push esi  +
push [ebp+44h+arg_8]  +
push eax  +
lea eax [ebp+44h+var_1C] +
push eax  +
call sub_4268B0  +
push eax  +
push [ebp+44h+arg_0]  +
lea ecx [ebp+44h+var_B8] +
mov byte ptr [ebp+44h+var_48] 3 +
call sub_437010  +
mov edx [ebp+44h+var_14] +
xor eax eax +
mov esi [ebp+44h+var_10] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436AEB  +
call sub_4746E8  +
jmp loc_436AF0  +
call sub_45B0EB  +
mov edx [ebp+44h+var_28] +
xor eax eax +
mov esi [ebp+44h+var_24] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436B15  +
call sub_4746E8  +
jmp loc_436B1A  +
call sub_45B0EB  +
mov edx [ebp+44h+var_3C] +
xor eax eax +
mov esi [ebp+44h+var_38] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436B5F  +
call sub_4746E8  +
add esp 4 +
lea ecx [ebp+44h+var_B8] +
call sub_4269D0  +
mov eax [ebp+44h+arg_0] +
mov ecx [ebp+44h+var_50] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
lea esp [ebp+44h] +
pop ebp  +
retn 14h  +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp+44h+var_B8] +
call sub_4269D0  +
mov eax [ebp+44h+arg_0] +
mov ecx [ebp+44h+var_50] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
lea esp [ebp+44h] +
pop ebp  +
retn 14h  +
push [ebp+44h+arg_10]  +
mov esi [ebp+44h+arg_0] +
push [ebp+44h+arg_C]  +
push [ebp+44h+arg_8]  +
push [ebp+44h+arg_4]  +
push esi  +
call sub_444F60  +
mov eax esi +
mov ecx [ebp+44h+var_50] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
lea esp [ebp+44h] +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47949B  +
mov eax large fs:0 +
push eax  +
sub esp 80h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
cmp dword ptr [ecx+14h] 0 +
lea edx [ecx+0Ch] +
jbe loc_436D76  +
mov eax [edx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_436D76  +
push edx  +
lea ecx [ebp-8Ch] +
call loc_436DB0  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea ecx [ebp-8Ch] +
call sub_426740  +
mov ebx [ebp+14h] +
lea ecx [ebp-8Ch] +
mov esi [ebp+8] +
push ebx  +
push dword ptr [ebp+10h]  +
mov byte ptr [ebp-4] 1 +
push eax  +
mov eax [ebp-8Ch] +
push esi  +
mov [ebp+0Ch] ebx +
call dword ptr [eax+58h]  +
mov ecx eax +
call loc_4449A0  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp-18h] +
mov edi eax +
mov edx [ebp-1Ch] +
mov ecx edx +
mov [ebp+14h] eax +
xor eax eax +
push dword ptr [ebp+14h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_436C7E  +
call sub_4746E8  +
jmp loc_436C83  +
call sub_45B0EB  +
add esp 4 +
test ebx ebx +
jz loc_436CE3  +
add [ebp-53h] esi +
mov edx [ebp-2Ch] +
xor eax eax +
mov esi [ebp-28h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436D05  +
call sub_4746E8  +
jmp loc_436D0A  +
call sub_45B0EB  +
mov edx [ebp-3Ch] +
xor eax eax +
mov esi [ebp-38h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_436D4F  +
call sub_4746E8  +
add esp 4 +
lea ecx [ebp-8Ch] +
call sub_426650  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-8Ch] +
call sub_426650  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push dword ptr [ebp+14h]  +
mov eax [ecx] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call dword ptr [eax+58h]  +
mov ecx eax +
call loc_4449A0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4794EE  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-5Ch] esi +
mov eax [ebp+8] +
push eax  +
mov [ebp-60h] esi +
call sub_426070  +
mov dword ptr [ebp-4] 0 +
push dword ptr [esi+14h]  +
mov dword ptr [esi] offset off_4909B0 +
push ecx  +
lea ecx [esi+48h] +
call sub_4332C0  +
mov byte ptr [ebp-4] 1 +
mov eax [esi+14h] +
lea edi [eax+eax*4] +
mov ecx edi +
mov [esi+60h] edi +
call sub_437B10  +
test edi edi +
jnz loc_436E20  +
xor eax eax +
jmp loc_436E38  +
lea ecx ds:0[edi*4] +
cmp ecx 10h +
jb loc_436E33  +
call loc_43F6B0  +
jmp loc_436E38  +
call loc_43F720  +
mov [esi+64h] eax +
mov byte ptr [ebp-4] 2 +
cmp dword ptr [esi+14h] 0 +
jbe loc_436E81  +
mov eax [esi+18h] +
mov al [eax] +
and al 1 +
jz loc_436E81  +
push dword ptr [esi+14h]  +
mov edx [esi+64h] +
push dword ptr [esi+18h]  +
mov ecx [esi+54h] +
call loc_432190  +
add esp 8 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 4Bh  +
push offset aMontgomeryrepr  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-40h] 0Fh +
mov dword ptr [ebp-44h] 0 +
mov byte ptr [ebp-54h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq qword ptr [ebp-38h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-54h] +
push 0  +
push eax  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-3Ch] offset off_48D038 +
mov dword ptr [ebp-30h] 1 +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 3 +
push eax  +
mov dword ptr [ebp-3Ch] offset off_48C750 +
call sub_452780  +
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+18h+arg_0] +
mov ebx ecx +
push edi  +
mov edi [esp+1Ch+arg_4] +
mov eax [ebx+2Ch] +
mov ebp [ebx+64h] +
mov ecx ebp +
push dword ptr [edi+8]  +
mov [esp+20h+var_4] eax +
mov eax [ebx+14h] +
push dword ptr [edi+0Ch]  +
mov [esp+24h+var_8] eax +
push dword ptr [esi+8]  +
lea edx ds:0[eax*8] +
push dword ptr [esi+0Ch]  +
add edx ebp +
call loc_431E60  +
mov eax [esi+8] +
add esp 10h +
mov esi [esp+1Ch+var_8] +
mov edx [edi+8] +
lea ecx [esi+esi] +
sub ecx edx +
sub ecx eax +
jz loc_436F63  +
add eax edx +
lea edi ds:0[eax*4] +
add edi ebp +
xor eax eax +
stos   +
mov ecx [esp+1Ch+var_4] +
lea edx ds:0[esi*8] +
push esi  +
push dword ptr [ebx+54h]  +
add edx ebp +
push dword ptr [ebx+18h]  +
push ebp  +
call sub_4322E0  +
add esp 10h +
lea eax [ebx+20h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn 8  +
***
sub esp 8 +
push ebx  +
push ebp  +
mov ebx ecx +
push esi  +
mov esi [esp+14h+arg_0] +
push edi  +
mov edi [ebx+14h] +
mov ebp [ebx+64h] +
mov ecx ebp +
push dword ptr [esi+8]  +
mov eax [ebx+2Ch] +
push dword ptr [esi+0Ch]  +
lea edx ds:0[edi*8] +
mov [esp+20h+var_4] eax +
add edx ebp +
mov [esp+20h+var_8] edi +
call sub_431A20  +
mov eax [esi+8] +
mov ecx edi +
sub ecx eax +
add esp 8 +
add ecx ecx +
jz loc_436FE3  +
lea edi ds:0[eax*8] +
add edi ebp +
xor eax eax +
stos   +
mov edi [esp+18h+var_8] +
mov ecx [esp+18h+var_4] +
lea edx ds:0[edi*8] +
push edi  +
push dword ptr [ebx+54h]  +
add edx ebp +
push dword ptr [ebx+18h]  +
push ebp  +
call sub_4322E0  +
add esp 10h +
lea eax [ebx+20h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn 4  +
***
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
mov esi ecx +
mov [esp+18h+var_4] 0 +
push edi  +
mov edi [esp+1Ch+arg_4] +
mov ebx [esi+64h] +
mov eax [esi+2Ch] +
mov ecx [edi+0Ch] +
mov ebp [esi+14h] +
mov [esp+1Ch+var_8] eax +
cmp ebx ecx +
jz loc_43704A  +
mov eax [edi+8] +
shl eax 2 +
push eax  +
push ecx  +
push ebx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [edi+8] +
lea ecx ds:0[ebp*2] +
sub ecx eax +
jz loc_43705F  +
lea edi [ebx+eax*4] +
xor eax eax +
stos   +
mov ecx [esp+1Ch+var_8] +
lea edx [ebx+ebp*8] +
push ebp  +
push dword ptr [esi+54h]  +
push dword ptr [esi+18h]  +
push ebx  +
call sub_4322E0  +
mov ecx [esp+2Ch+arg_0] +
lea eax [esi+20h] +
add esp 10h +
push eax  +
call loc_432E00  +
mov eax [esp+20h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn 8  +
***
push ebx  +
push [esp+4+arg_8]  +
mov ecx [esp+8+arg_0] +
call sub_435780  +
add esp 8 +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4371DF  +
call sub_4746E8  +
jmp loc_4371E4  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
call sub_426010  +
add esp 4 +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_43726F  +
call sub_4746E8  +
jmp loc_437274  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_20] +
push eax  +
call loc_436120  +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4372FA  +
call sub_4746E8  +
jmp loc_4372FF  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
test eax eax +
jz loc_437341  +
lea ecx [eax-1] +
lea ecx [edx+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_437341  +
sub ecx 4 +
sub eax 1 +
jnz loc_437334  +
cmp eax 1 +
jnz loc_43734F  +
cmp [edx] eax +
jnz loc_43734F  +
mov al al +
retn 4  +
xor al al +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_20] +
push eax  +
call sub_425D80  +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4373CA  +
call sub_4746E8  +
jmp loc_4373CF  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
call sub_425FE0  +
add esp 4 +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_43745F  +
call sub_4746E8  +
jmp loc_437464  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_20] +
push eax  +
call sub_425D60  +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4374EA  +
call sub_4746E8  +
jmp loc_4374EF  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_434EA0  +
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
call sub_425FB0  +
add esp 4 +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_43758F  +
call sub_4746E8  +
jmp loc_437594  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea eax [ebp+var_20] +
push eax  +
call sub_433230  +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_43761A  +
call sub_4746E8  +
jmp loc_43761F  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_434D40  +
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+arg_4]  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
call sub_425F80  +
add esp 4 +
push eax  +
lea ecx [esi+20h] +
mov [ebp+var_4] 0 +
call sub_4330F0  +
mov edx [ebp+var_18] +
mov ebx eax +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_4376BF  +
call sub_4746E8  +
jmp loc_4376C4  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_479528  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
cmp dword_4A291C 0 +
lea edi [esi+0Ch] +
mov dword ptr [esi+4] offset off_4908C8 +
mov [esi+8] esi +
mov [ebp+var_14] edi +
jnz loc_437734  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 0 +
lea edi [esi+20h] +
cmp dword_4A291C 0 +
mov dword ptr [esi] offset off_490900 +
mov [ebp+var_14] edi +
jnz loc_43779A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47955B  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 0C0h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov [ebp-0CCh] ecx +
mov esi [ebx+8] +
lea ecx [ebp-0C8h] +
call sub_40F5F0  +
mov dword ptr [ebp-0C8h] offset off_48CF60 +
mov edx [ebp-0CCh] +
lea ecx [ebp-0C8h] +
push 1  +
push 0  +
sub esp 8 +
mov dword ptr [ebp-4] 0 +
push dword ptr [ebx+0Ch]  +
push esi  +
push edi  +
call loc_4230B0  +
mov edi [ebp-1Ch] +
lea eax [ebp-68h] +
add esp 1Ch +
cmp edi eax +
jnz loc_437889  +
mov ecx [ebp-20h] +
xor eax eax +
stos   +
mov edi [ebp-6Ch] +
lea eax [ebp-0B8h] +
cmp edi eax +
jnz loc_43789D  +
mov ecx [ebp-70h] +
xor eax eax +
stos   +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
push esi  +
push edi  +
mov edi ecx +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov esi [ebx+4] +
sub esi [ebx] +
sar esi 2 +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
test esi esi +
jz loc_43793A  +
cmp esi 3FFFFFFFh +
ja loc_437942  +
push esi  +
call loc_4186B0  +
mov [edi] eax +
mov [edi+4] eax +
mov eax [edi] +
lea eax [eax+esi*4] +
mov [edi+8] eax +
mov ecx [ebx+4] +
mov eax [ebx] +
sub ecx eax +
sar ecx 2 +
lea esi ds:0[ecx*4] +
push esi  +
push eax  +
push dword ptr [edi]  +
call loc_450F90  +
add esp 0Ch +
add eax esi +
mov [edi+4] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push dword ptr [esp+18h]  +
mov eax [ecx] +
push dword ptr [esp+18h]  +
push dword ptr [esp+18h]  +
call dword ptr [eax+50h]  +
mov eax [esp+8] +
pop ecx  +
retn 14h  +
***
push [esp+4+arg_8]  +
mov [esp+8+var_4] 0 +
push [esp+8+arg_4]  +
mov eax [ecx] +
push [esp+0Ch+arg_0]  +
call dword ptr [eax+4Ch]  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 0Ch  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+44h]  +
***
mov ecx [ecx+4] +
push [esp+arg_4]  +
push [esp+4+arg_0]  +
mov eax [ecx] +
call dword ptr [eax+48h]  +
mov ecx [esp+arg_0] +
push eax  +
call sub_4330F0  +
retn 8  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+48h]  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+40h]  +
***
mov ecx [ecx+4] +
push [esp+arg_4]  +
push [esp+4+arg_0]  +
mov eax [ecx] +
call dword ptr [eax+3Ch]  +
mov ecx [esp+arg_0] +
push eax  +
call sub_4330F0  +
retn 8  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+3Ch]  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+38h]  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
mov eax [eax+4] +
jmp eax  +
***
retn   +
***
mov edx [ecx+8] +
xor eax eax +
mov ecx [ecx+4] +
push edi  +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
pop edi  +
retn   +
***
call sub_40D990  +
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_437AC5  +
push 8  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push 1  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
call loc_4186B0  +
mov [esi] eax +
mov [esi+4] eax +
mov eax [esi] +
add eax 4 +
mov [esi+8] eax +
mov ecx [esi] +
mov eax [esp+4+arg_0] +
mov eax [eax] +
mov [ecx] eax +
lea eax [ecx+4] +
mov [esi+4] eax +
pop esi  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_478620  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp ecx 3FFFFFFFh +
jbe loc_437BBD  +
push 3Ah  +
push offset aAllocatorbaseR  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_50] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
push esi  +
mov ecx [eax] +
mov eax dword_4A3AD0 +
cmp eax [ecx+4] +
jle loc_437C30  +
push offset dword_4A3AD0  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AD0 0FFFFFFFFh +
jnz loc_437C30  +
push offset loc_47AF90  +
mov dword_4A3AD4 0 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AD0  +
call sub_450220  +
add esp 4 +
mov eax dword_4A3AD4 +
test eax eax +
jnz loc_437C5D  +
call sub_4381B0  +
mov esi dword_4A3AD4 +
test esi esi +
jz loc_437C58  +
test eax eax +
jz loc_437C54  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3AD4 eax +
pop esi  +
retn   +
***
mov eax large fs:2Ch +
push esi  +
mov ecx [eax] +
mov eax dword_4A3AD8 +
cmp eax [ecx+4] +
jle loc_437CB0  +
push offset dword_4A3AD8  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AD8 0FFFFFFFFh +
jnz loc_437CB0  +
push offset loc_47AF70  +
mov dword_4A3ADC 0 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AD8  +
call sub_450220  +
add esp 4 +
mov eax dword_4A3ADC +
test eax eax +
jnz loc_437CDD  +
call sub_438110  +
mov esi dword_4A3ADC +
test esi esi +
jz loc_437CD8  +
test eax eax +
jz loc_437CD4  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3ADC eax +
pop esi  +
retn   +
***
mov eax large fs:2Ch +
push esi  +
mov ecx [eax] +
mov eax dword_4A3AE0 +
cmp eax [ecx+4] +
jle loc_437D30  +
push offset dword_4A3AE0  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AE0 0FFFFFFFFh +
jnz loc_437D30  +
push offset loc_47AF50  +
mov dword_4A3AE4 0 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AE0  +
call sub_450220  +
add esp 4 +
mov eax dword_4A3AE4 +
test eax eax +
jnz loc_437D5D  +
call sub_438070  +
mov esi dword_4A3AE4 +
test esi esi +
jz loc_437D58  +
test eax eax +
jz loc_437D54  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3AE4 eax +
pop esi  +
retn   +
***
test edi edi +
jnz loc_437D6B  +
xor eax eax +
pop edi  +
retn   +
push esi  +
xor esi esi +
mov edx 20h +
lea ecx [edx+esi] +
mov eax edi +
shr ecx 1 +
shr eax cl +
test eax eax +
jz loc_437D84  +
mov esi ecx +
jmp loc_437D86  +
mov edx ecx +
mov ecx edx +
sub ecx esi +
cmp ecx 8 +
ja loc_437D73  +
shr edx 3 +
pop esi  +
mov eax edx +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479598  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
lea edx [ebp+arg_8] +
mov [ebp+var_4] 0 +
mov eax [ecx] +
push edx  +
push offset off_4A0FB0  +
push [ebp+arg_4]  +
call dword ptr [eax+4]  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
mov ecx esi +
call loc_432E00  +
mov edx [ebp+arg_10] +
xor eax eax +
mov ebx [ebp+arg_14] +
mov ecx edx +
mov edi ebx +
stos   +
lea ecx ds:0[edx*4] +
push ebx  +
cmp ecx 10h +
jb loc_437E17  +
call sub_4746E8  +
jmp loc_437E1C  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_437E4C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
sub esp 10h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+10h+var_4] eax +
mov eax edx +
mov [esp+10h+var_C] 0 +
sar eax 18h +
mov [esp+10h+var_B] al +
mov eax edx +
sar eax 10h +
push ebx  +
mov [esp+0Ah] al +
mov eax edx +
push ebp  +
sar eax 8 +
mov ebp ecx +
push esi  +
mov [esp+1Ch+var_9] al +
mov esi 4 +
push edi  +
mov [esp+20h+var_8] dl +
lea eax [esp+20h+var_B] +
cmp byte ptr [eax] 0 +
jnz loc_437E9D  +
dec esi  +
inc eax  +
cmp esi 1 +
ja loc_437E91  +
lea eax [esp+19h] +
sub eax esi +
test byte ptr [eax] 80h +
jz loc_437EA9  +
inc esi  +
mov eax [ebp+0] +
lea ecx [esp+20h+var_10] +
push 1  +
push 0  +
push 1  +
push ecx  +
mov ecx ebp +
mov byte ptr [esp+30h+var_10] 2 +
call dword ptr [eax+14h]  +
push 0  +
push esi  +
mov ecx ebp +
call sub_4215D0  +
mov edi [ebp+0] +
lea edx [esp+21h] +
add esp 8 +
sub edx esi +
mov ecx ebp +
mov ebx eax +
push 1  +
push 0  +
push esi  +
push edx  +
call dword ptr [edi+14h]  +
mov ecx [esp+20h+var_4] +
lea eax [esi+1] +
pop edi  +
pop esi  +
add eax ebx +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
add esp 10h +
retn   +
***
mov edi edx +
mov esi ecx +
cmp dword ptr [edi+10h] 1 +
jz loc_437F33  +
cmp dword ptr [esi+10h] 1 +
jz loc_437F24  +
push esi  +
mov ecx edi +
call loc_435C80  +
test eax eax +
cmovs esi edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
mov eax 1 +
test eax eax +
cmovs esi edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
cmp dword ptr [esi+10h] 1 +
jz loc_437F46  +
or eax 0FFFFFFFFh +
test eax eax +
cmovs esi edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push esi  +
mov ecx edi +
call loc_435C80  +
neg eax  +
test eax eax +
cmovs esi edi +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov ebp [esp+arg_0] +
mov ebx edx +
push esi  +
mov esi [esp+4+arg_4] +
push edi  +
cmp ebp esi +
jnz loc_437F79  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
cmp [esp+8+arg_8] 0 +
jz loc_43800D  +
mov ecx esi +
call sub_437B10  +
test esi esi +
jnz loc_437F97  +
xor ecx ecx +
mov [esp+8+arg_0] ecx +
jmp loc_437FBB  +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_437FB0  +
call loc_43F6B0  +
mov ecx eax +
mov [esp+8+arg_0] ecx +
jmp loc_437FBB  +
call loc_43F720  +
mov ecx eax +
mov [esp+8+arg_0] eax +
cmp esi ebp +
lea edx ds:0[esi*4] +
mov eax ebp +
cmovb eax esi +
shl eax 2 +
push eax  +
push ebx  +
call sub_438750  +
xor eax eax +
add esp 8 +
mov edi ebx +
mov ecx ebp +
stos   +
lea eax ds:0[ebp*4] +
push ebx  +
cmp eax 10h +
jb loc_437FFC  +
call sub_4746E8  +
mov eax [esp+0Ch+arg_0] +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
call sub_45B0EB  +
mov eax [esp+0Ch+arg_0] +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
xor eax eax +
mov edi ebx +
mov ecx ebp +
stos   +
lea eax ds:0[ebp*4] +
push ebx  +
cmp eax 10h +
jb loc_438029  +
call sub_4746E8  +
jmp loc_43802E  +
call sub_45B0EB  +
add esp 4 +
mov ecx esi +
call sub_437B10  +
test esi esi +
jnz loc_438043  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
lea ecx ds:0[esi*4] +
cmp ecx 10h +
jb loc_438058  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
jmp loc_43F6B0  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
jmp loc_43F720  +
***
push 0FFFFFFFFh  +
push offset loc_4795CF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 14h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_4380C2  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax] 2 +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4795CF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 14h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_438162  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax] 1 +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4795CF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 14h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_438202  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
mov ebp [esp+10h+arg_0] +
mov ebx edx +
push esi  +
push edi  +
mov [esp+18h+var_4] ebx +
mov esi ecx +
lea eax [ebp+1] +
test eax eax +
jnz loc_43826F  +
mov eax [esi+8] +
jmp loc_438289  +
push 0  +
test ebp ebp +
jz loc_43827E  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
jmp loc_438284  +
push ebx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_450660  +
mov [esp+18h+var_8] eax +
xor edi edi +
mul  ebx +
sub [esi] eax +
mov ebx edx +
mov eax [esp+18h+var_8] +
sbb edi edi +
xor ecx ecx +
mul  ebp +
mov ebp [esi+4] +
sub ebp eax +
sbb ecx edx +
mov edx [esp+18h+arg_0] +
neg edi  +
sub ebp edi +
mov edi [esp+18h+var_4] +
sbb ecx 0 +
sub ebp ebx +
sbb ecx 0 +
add [esi+8] ecx +
mov ecx [esp+18h+var_8] +
mov eax [esi+8] +
mov [esi+4] ebp +
test eax eax +
jnz loc_4382DB  +
mov eax [esp+18h+arg_0] +
cmp ebp eax +
ja loc_4382D9  +
jnz loc_4382FF  +
cmp [esi] edi +
jb loc_4382FF  +
mov edx eax +
mov ebp [esi+4] +
xor ecx ecx +
sub [esi] edi +
sbb ecx ecx +
xor eax eax +
neg ecx  +
sub ebp ecx +
mov ecx [esp+18h+var_8] +
sbb eax eax +
sub ebp edx +
sbb eax 0 +
add [esi+8] eax +
inc ecx  +
mov [esp+18h+var_8] ecx +
jmp loc_4382C1  +
pop edi  +
pop esi  +
pop ebp  +
mov eax ecx +
pop ebx  +
add esp 8 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479607  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 24h  +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+var_10] edi +
mov bl [ebp+arg_8] +
mov edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov [edi+4] edx +
mov [edi+8] bl +
mov byte ptr [edi+9] 0 +
mov dword ptr [edi+0Ch] 0 +
push [ebp+arg_4]  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_4908A8 +
call loc_432E00  +
mov eax [esi+4] +
mov dword ptr [esi+4] 0 +
mov ecx [edi+0Ch] +
mov dword ptr [ebp+arg_8] eax +
test ecx ecx +
jz loc_438397  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax dword ptr [ebp+arg_8] +
mov [edi+0Ch] eax +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4383A7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+4] edi +
mov eax esi +
mov [esi+8] bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov eax ecx +
mov ecx [esp+arg_0] +
test ecx ecx +
jz locret_438453  +
mov [esp+arg_0] eax +
jmp sub_438580  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [esp+8+arg_8] +
mov esi ecx +
jz loc_43849D  +
push offset unk_49F8D8  +
push offset unk_4A0F54  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_43849D  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [esp+10h+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_4384B7  +
push [esp+8+arg_4]  +
mov ecx [esp+0Ch+arg_0] +
mov edx offset off_4A0F50 +
call sub_40B510  +
mov eax [esi+10h] +
add esp 4 +
mov [edi] eax +
pop edi  +
pop esi  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_476DC1  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_4384FC  +
push eax  +
call sub_4385E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
mov esi ecx +
jz loc_43854B  +
push offset unk_49F8D8  +
push offset unk_4A0FB4  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_43854B  +
lea eax [esi+10h] +
push eax  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_43856D  +
push [esp+4+arg_4]  +
mov ecx [esp+8+arg_0] +
mov edx offset off_4A0FB0 +
call sub_40B510  +
mov ecx [esp+8+arg_8] +
lea eax [esi+10h] +
add esp 4 +
push eax  +
call sub_4330F0  +
pop esi  +
retn 0Ch  +
***
mov esi ecx +
push edi  +
mov edi [esp+4+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4385C1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_4908B8 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476DE8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_438646  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
lea eax [edi+10h] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [esi+10h] +
mov dword ptr [esi] offset off_4908A8 +
call loc_432E00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_4386A0  +
push 0FFFFFFFFh  +
push offset loc_479636  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+18h] +
xor eax eax +
mov ebx [esi+1Ch] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4386EC  +
call sub_4746E8  +
jmp loc_4386F1  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_48CF48 +
call sub_44F130  +
test al al +
jnz loc_43872D  +
cmp [esi+8] al +
jz loc_43872D  +
cmp [esi+9] al +
jnz loc_43872D  +
push dword ptr [esi+4]  +
lea ecx [ebp+var_34] +
call sub_40C080  +
push offset unk_49C51C  +
lea eax [ebp+var_34] +
push eax  +
call sub_452780  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43873A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
test esi esi +
jnz loc_438761  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
test ecx ecx +
jnz loc_43877D  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop edi  +
mov eax 16h +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_43879B  +
cmp edi esi +
jb loc_43879B  +
push esi  +
push ebx  +
push ecx  +
call loc_452BD0  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push edi  +
push 0  +
push ecx  +
call sub_453150  +
add esp 0Ch +
test ebx ebx +
jnz loc_4387C4  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop ebx  +
pop edi  +
mov eax 16h +
pop esi  +
retn   +
cmp edi esi +
jnb loc_4387BB  +
call sub_45DE51  +
mov dword ptr [eax] 22h +
call sub_45B2BA  +
pop ebx  +
pop edi  +
mov eax 22h +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+arg_0] +
mov ebp ecx +
push edi  +
mov edx offset aValuenames +
mov eax esi +
mov bl [eax] +
cmp bl [edx] +
jnz loc_438821  +
test bl bl +
jz loc_43881D  +
mov cl [eax+1] +
cmp cl [edx+1] +
jnz loc_438821  +
add eax 2 +
add edx 2 +
test cl cl +
jnz loc_438801  +
xor eax eax +
jmp loc_438826  +
sbb eax eax +
or eax 1 +
mov ecx [ebp+4] +
test eax eax +
mov edi [esp+4+arg_8] +
mov ebx [esp+4+arg_4] +
push edi  +
mov eax [ecx] +
push ebx  +
push esi  +
mov eax [eax+4] +
jnz loc_43885D  +
call eax  +
test al al +
jz loc_438854  +
mov ecx [ebp+8] +
push edi  +
push ebx  +
push esi  +
mov eax [ecx] +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_438874  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn 0Ch  +
call eax  +
test al al +
jnz loc_438874  +
mov ecx [ebp+8] +
push edi  +
push ebx  +
push esi  +
mov eax [ecx] +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_438854  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 1 +
pop ebx  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov edx offset aValuenames +
mov eax edi +
mov bl [eax] +
cmp bl [edx] +
jnz loc_4388B6  +
test bl bl +
jz loc_4388B2  +
mov cl [eax+1] +
cmp cl [edx+1] +
jnz loc_4388B6  +
add eax 2 +
add edx 2 +
test cl cl +
jnz loc_438896  +
xor eax eax +
jmp loc_4388BB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_438929  +
nop   +
mov ecx [esi+4] +
mov eax edi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4388E5  +
test dl dl +
jz loc_4388E1  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4388E5  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4388C5  +
xor eax eax +
jmp loc_4388EA  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_438968  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43895D  +
mov ecx offset aValuenames +
mov eax edi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_438920  +
test dl dl +
jz loc_43891C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_438920  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_438900  +
xor eax eax +
jmp loc_438925  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_4388C0  +
mov edi [ebp+0Ch] +
mov edx offset off_4A1030 +
mov ecx [ebp+8] +
push edi  +
call sub_40B510  +
mov ecx [esi+0Ch] +
add esp 4 +
mov ebx [ebp+10h] +
test ecx ecx +
jz loc_438951  +
push ebx  +
push edi  +
push dword ptr [ebp+8]  +
call loc_438880  +
mov edx [esi+4] +
cmp byte ptr [edx] 0 +
jnz loc_438985  +
xor ecx ecx +
jmp loc_438999  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push dword ptr [ebp+10h]  +
mov eax [esi] +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
push edi  +
call dword ptr [eax+4]  +
mov byte ptr [esi+9] 1 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx edx +
lea esi [ecx+1] +
push ecx  +
push edx  +
mov ecx ebx +
call loc_40FA00  +
push 1  +
push offset unk_490AA4  +
mov ecx eax +
call loc_40FA00  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx [esi+4] +
test ecx ecx +
jz loc_4389D0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test byte ptr [esp+8] 1 +
jz loc_4389E2  +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
mov ecx [ecx+4] +
test ecx ecx +
jnz loc_438880  +
xor al al +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 30h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+2Ch] eax +
mov eax [ebp+0Ch] +
mov edx [ebp+8] +
push eax  +
push edx  +
call sub_433D30  +
test al al +
jz loc_438A36  +
mov ecx [esp+2Ch] +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea ecx [esp+4] +
call sub_425A60  +
push offset unk_49C838  +
lea eax [esp+8] +
push eax  +
call sub_452780  +
cmp dword ptr [ecx+10h] 1 +
jz loc_438A79  +
cmp dword ptr [edx+10h] 1 +
jz loc_438A6C  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setnz al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setnz al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_438A8A  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setnz al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setnz al  +
retn   +
***
add ecx 0Ch +
jmp sub_4330F0  +
***
add ecx 20h +
jmp sub_4330F0  +
***
lea eax [ecx+80h] +
retn   +
***
lea eax [ecx+94h] +
retn   +
***
lea eax [ecx+0A8h] +
retn   +
***
lea eax [ecx+0BCh] +
retn   +
***
lea eax [ecx+0D0h] +
retn   +
***
sub ecx 0FFFFFF80h +
jmp sub_4330F0  +
***
add ecx 94h +
jmp sub_4330F0  +
***
add ecx 6Ch +
jmp sub_4330F0  +
***
add ecx 0A8h +
jmp sub_4330F0  +
***
add ecx 0BCh +
jmp sub_4330F0  +
***
add ecx 0D0h +
jmp sub_4330F0  +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_426CC0  +
push 1BB8Dh  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_438BD8  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_438B70  +
push 1  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_438C55  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_438BF0  +
push 1  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_438CD5  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478D88  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_20] +
mov [ebp+var_14] 0 +
call sub_438C70  +
push 1  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_426B80  +
mov ecx [ebp+var_20] +
add esp 4 +
test ecx ecx +
jz loc_438D55  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push esi  +
push [esp+10h+arg_0]  +
mov esi ecx +
mov [esp+14h+var_4] 0 +
mov [esp+14h+var_8] esi +
call sub_4361E0  +
add esp 4 +
mov eax esi +
pop esi  +
add esp 0Ch +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push edx  +
mov edx ecx +
lea ecx [ebp+var_20] +
call sub_4361E0  +
add esp 4 +
mov esi eax +
mov [ebp+var_4] 0 +
call sub_437C60  +
cmp dword ptr [esi+10h] 1 +
jz loc_438E01  +
cmp dword ptr [eax+10h] 1 +
jz loc_438DFA  +
push eax  +
mov ecx esi +
call loc_435C80  +
jmp loc_438E16  +
mov eax 1 +
jmp loc_438E16  +
cmp dword ptr [eax+10h] 1 +
jz loc_438E0C  +
or eax 0FFFFFFFFh +
jmp loc_438E16  +
push eax  +
mov ecx esi +
call loc_435C80  +
neg eax  +
mov edx [ebp+var_18] +
test eax eax +
mov esi [ebp+var_14] +
mov ecx edx +
setz bl  +
mov edi esi +
xor eax eax +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_438E3D  +
call sub_4746E8  +
jmp loc_438E42  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479670  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov ebx ecx +
mov [ebp+var_10] ebx +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_3C] +
push edi  +
mov [ebp+var_14] 0 +
call sub_4361E0  +
push eax  +
mov edx esi +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_426010  +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
mov ecx ebx +
call sub_425FE0  +
mov edx [ebp+var_20] +
xor eax eax +
mov esi [ebp+var_1C] +
add esp 0Ch +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_438EE7  +
call sub_4746E8  +
jmp loc_438EEC  +
call sub_45B0EB  +
mov edx [ebp+var_34] +
xor eax eax +
mov esi [ebp+var_30] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_438F11  +
call sub_4746E8  +
jmp loc_438F16  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov [esp+4+var_4] 0 +
call sub_438CF0  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479698  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_38] +
push 30h  +
mov [ebp+var_2C] 0FFFFFFFFh +
mov [ebp+var_28] 0 +
mov [ebp+var_38] offset off_48FE70 +
mov [ebp+var_34] offset off_48FE60 +
mov [ebp+var_24] eax +
mov [ebp+var_20] 0 +
call loc_421E40  +
mov [ebp+var_38] offset off_48FFFC +
mov [ebp+var_34] offset off_48FFEC +
lea ecx [esi+8] +
mov [ebp+var_4] 2 +
mov eax [ecx] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+1Ch] +
lea ecx [esi+1Ch] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
lea ecx [ebp+var_38] +
call loc_421F00  +
lea ecx [ebp+var_38] +
call sub_421EA0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4796C8  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 30h  +
push [ebp+arg_0]  +
lea ecx [ebp+var_40] +
call sub_422050  +
mov [ebp+var_40] offset off_48FF38 +
mov [ebp+var_3C] offset off_48FF28 +
lea ecx [esi+8] +
mov [ebp+var_4] 0 +
mov eax [ecx] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+1Ch] +
lea ecx [esi+1Ch] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
lea ecx [ebp+var_40] +
call sub_4221C0  +
lea ecx [ebp+var_40] +
call sub_422130  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov esi ecx +
mov [esp+8+var_4] 0 +
mov eax [esi+8] +
lea ecx [esi+8] +
mov eax [eax+4] +
add ecx eax +
call sub_43CAE0  +
mov edx [esp+8+arg_4] +
lea eax [esi+0Ch] +
mov ecx [esp+8+arg_0] +
push eax  +
lea eax [esi+20h] +
push eax  +
call sub_436170  +
mov eax [esp+10h+arg_0] +
add esp 8 +
pop esi  +
pop ecx  +
retn 8  +
***
push edi  +
mov esi ecx +
call sub_437C60  +
cmp dword ptr [esi-18h] 1 +
lea edi [esi-28h] +
jz loc_439113  +
cmp dword ptr [eax+10h] 1 +
jz loc_439127  +
push eax  +
mov ecx edi +
call loc_435C80  +
jmp loc_439123  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43918C  +
push eax  +
mov ecx edi +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43918C  +
cmp dword ptr [edi+8] 0 +
jbe loc_43918C  +
mov eax [edi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43918C  +
call sub_437C60  +
add esi 0FFFFFFECh +
cmp dword ptr [esi+10h] 1 +
jz loc_439154  +
cmp dword ptr [eax+10h] 1 +
jz loc_439168  +
push eax  +
mov ecx esi +
call loc_435C80  +
jmp loc_439164  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43918C  +
push eax  +
mov ecx esi +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43918C  +
cmp dword ptr [esi+8] 0 +
jbe loc_43918C  +
mov eax [esi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43918C  +
mov edx edi +
mov ecx esi +
call sub_425F30  +
test al al +
jz loc_43918C  +
pop edi  +
mov al 1 +
pop esi  +
pop ecx  +
retn 8  +
pop edi  +
xor al al +
pop esi  +
pop ecx  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 30h +
push 0  +
push [ebp+arg_8]  +
lea eax [ecx-34h] +
mov [esp+38h+var_2C] offset loc_40CF40 +
push [ebp+arg_4]  +
lea ecx [esp+3Ch+var_14] +
mov [esp+3Ch+var_28] 0FFFFFFF8h +
push [ebp+arg_0]  +
mov [esp+40h+var_20] offset sub_40CF30 +
push eax  +
mov [esp+44h+var_1C] 0FFFFFFF8h +
call loc_43C510  +
movq xmm0 [esp+44h+var_40] +
lea ecx [esp+44h+var_28] +
sub esp 0Ch +
mov eax esp +
push offset aPublicexponent  +
movq qword ptr [eax] xmm0 +
sub esp 0Ch +
movq xmm0 [esp+60h+var_34] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aModulus  +
movq qword ptr [eax] xmm0 +
mov dword ptr [eax+8] 0 +
call sub_43BD00  +
mov ecx eax +
call loc_43BEB0  +
mov ecx eax +
call loc_43BEB0  +
mov al [eax+10h] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 28h +
push esi  +
lea esi [ecx-34h] +
mov dword ptr [esp+2Ch+var_18] offset loc_438AB0 +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edi +
push esi  +
mov dword ptr [esp+34h+var_18+4] 0FFFFFFF8h +
mov dword ptr [esp+34h+var_C] offset loc_438AA0 +
mov dword ptr [esp+34h+var_C+4] 0FFFFFFF8h +
mov [esp+34h+var_24] esi +
mov [esp+34h+var_20] edi +
mov [esp+34h+var_1C] 0 +
call sub_43C900  +
test al al +
jz loc_439291  +
mov [esp+30h+var_1C] 1 +
jmp loc_4392B0  +
push offset unk_49EEEC  +
push offset unk_49EEEC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_4392B0  +
push edi  +
lea ecx [esi+34h] +
call sub_439240  +
movq xmm0 [esp+30h+var_18] +
lea ecx [esp+30h+var_24] +
sub esp 0Ch +
mov eax esp +
push offset aPublicexponent  +
movq qword ptr [eax] xmm0 +
sub esp 0Ch +
movq xmm0 [esp+4Ch+var_C] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aModulus  +
movq qword ptr [eax] xmm0 +
mov dword ptr [eax+8] 0 +
call sub_43BF70  +
mov ecx eax +
call sub_43BF70  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_437C60  +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
call sub_425FB0  +
add esp 4 +
lea ecx [esi+4] +
mov [ebp+var_4] 0 +
mov edx eax +
call sub_438DA0  +
mov edx [ebp+var_18] +
mov bl al +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_439373  +
call sub_4746E8  +
jmp loc_439378  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 6Ch +
push 0FFFFFFFFh  +
push offset loc_4797A0  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+6Ch+var_4] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+6Ch+var_78] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+6Ch+var_6C] ebx +
mov esi [ebp+6Ch+arg_4] +
lea ecx [ebp+6Ch+var_60] +
mov eax [ebp+6Ch+arg_0] +
mov [ebp+6Ch+var_64] 0 +
mov [ebp+6Ch+var_68] eax +
mov eax [esi] +
push ecx  +
push offset off_49F8D4  +
push offset aModulussize  +
mov eax [eax+4] +
mov ecx esi +
mov [ebp+6Ch+var_60] 800h +
call eax  +
test al al +
jnz loc_43941C  +
mov eax [esi] +
lea ecx [ebp+6Ch+var_60] +
push ecx  +
push offset off_49F8D4  +
push offset aKeysize  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp [ebp+6Ch+var_60] 10h +
jge loc_43949F  +
push 3Ah  +
push offset aInvertiblers_0  +
lea ecx [ebp+6Ch+var_1C] +
mov [ebp+6Ch+var_8] 0Fh +
mov [ebp+6Ch+var_C] 0 +
mov byte ptr [ebp+6Ch+var_1C] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+6Ch+var_70] 0 +
movq [ebp+6Ch+var_40] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+6Ch+var_70] 1 +
lea eax [ebp+6Ch+var_1C] +
push 0  +
push eax  +
lea ecx [ebp+6Ch+var_34] +
mov [ebp+6Ch+var_44] offset off_48D038 +
mov [ebp+6Ch+var_38] 1 +
mov [ebp+6Ch+var_20] 0Fh +
mov [ebp+6Ch+var_24] 0 +
mov byte ptr [ebp+6Ch+var_34] 0 +
call loc_402270  +
mov byte ptr [ebp+6Ch+var_70] 0 +
push offset unk_49C468  +
lea eax [ebp+6Ch+var_44] +
mov [ebp+6Ch+var_44] offset off_48C750 +
push eax  +
call sub_452780  +
sub esp 14h +
mov edi esp +
mov [ebp+6Ch+var_64] edi +
cmp dword_4A291C 0 +
jnz loc_4394BF  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [edi] offset off_49099C +
mov ecx 2 +
mov dword ptr [edi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [edi+0Ch] eax +
mov ecx esi +
mov dword ptr [edi+10h] 0 +
push offset aPublicexponent  +
mov dword ptr [eax] 11h +
mov eax [edi+0Ch] +
mov dword ptr [eax+4] 0 +
lea eax [ebp+6Ch+var_5C] +
push eax  +
call sub_437DA0  +
add ebx 0FFFFFFE4h +
mov [ebp+6Ch+var_70] 2 +
push eax  +
mov ecx ebx +
call sub_4330F0  +
mov [ebp+6Ch+var_70] 0FFFFFFFFh +
xor eax eax +
mov edx [ebp+6Ch+var_54] +
mov ecx edx +
mov esi [ebp+6Ch+var_50] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439545  +
call sub_4746E8  +
jmp loc_43954A  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_439565  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+6Ch+var_5C] offset off_49099C +
mov [ebp+6Ch+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+6Ch+var_4C] 0 +
mov [ebp+6Ch+var_50] esi +
mov dword ptr [esi] 3 +
mov dword ptr [esi+4] 0 +
cmp dword ptr [ebx+10h] 1 +
jz loc_4395C8  +
lea eax [ebp+6Ch+var_5C] +
mov ecx ebx +
push eax  +
call loc_435C80  +
test eax eax +
js loc_4395C8  +
cmp dword ptr [ebx+8] 0 +
jbe loc_4395C8  +
mov eax [ebx+0Ch] +
mov [ebp+6Ch+var_45] 0 +
mov al [eax] +
and al 1 +
jnz loc_4395CC  +
mov [ebp+6Ch+var_45] 1 +
xor eax eax +
mov edi esi +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+6Ch+var_45] 0 +
jz loc_439653  +
push 2Eh  +
push offset aInvertiblers_1  +
lea ecx [ebp+6Ch+var_1C] +
mov [ebp+6Ch+var_8] 0Fh +
mov [ebp+6Ch+var_C] 0 +
mov byte ptr [ebp+6Ch+var_1C] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+6Ch+var_70] 3 +
movq [ebp+6Ch+var_40] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+6Ch+var_70] 4 +
lea eax [ebp+6Ch+var_1C] +
push 0  +
push eax  +
lea ecx [ebp+6Ch+var_34] +
mov [ebp+6Ch+var_44] offset off_48D038 +
mov [ebp+6Ch+var_38] 1 +
mov [ebp+6Ch+var_20] 0Fh +
mov [ebp+6Ch+var_24] 0 +
mov byte ptr [ebp+6Ch+var_34] 0 +
call loc_402270  +
mov byte ptr [ebp+6Ch+var_70] 3 +
jmp loc_43948A  +
push ebx  +
lea ecx [ebp+6Ch+var_AC] +
mov [ebp+6Ch+var_B0] offset off_490AD4 +
call loc_432E00  +
mov [ebp+6Ch+var_70] 5 +
lea eax [ebp+6Ch+var_B0] +
mov edx [ebp+6Ch+var_60] +
lea ecx [ebp+6Ch+var_BC] +
mov [ebp+6Ch+var_64] eax +
call sub_447EC0  +
mov byte ptr [ebp+6Ch+var_70] 6 +
movzx ecx byte ptr [eax+8] +
push ecx  +
lea ecx [ebp+6Ch+var_64] +
push ecx  +
push offset aPointertoprime  +
mov ecx eax +
call sub_43C780  +
mov [ebp+6Ch+var_80] 0 +
mov [ebp+6Ch+var_84] offset off_490AAC +
mov cl [eax+8] +
mov [ebp+6Ch+var_7C] cl +
mov esi [eax+4] +
mov dword ptr [eax+4] 0 +
mov ecx [ebp+6Ch+var_80] +
test ecx ecx +
jz loc_4396BF  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+6Ch+var_80] esi +
mov byte ptr [ebp+6Ch+var_70] 8 +
mov ecx [ebp+6Ch+var_B8] +
test ecx ecx +
jz loc_4396D3  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov esi [ebp+6Ch+var_6C] +
lea eax [ebp+6Ch+var_84] +
push eax  +
push [ebp+6Ch+var_68]  +
lea edi [esi+44h] +
mov ecx edi +
call loc_438A00  +
lea eax [ebp+6Ch+var_84] +
push eax  +
push [ebp+6Ch+var_68]  +
lea ecx [esi+58h] +
call loc_438A00  +
cmp dword_4A291C 0 +
jnz loc_43970E  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+6Ch+var_5C] offset off_49099C +
mov [ebp+6Ch+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+6Ch+var_50] eax +
mov [ebp+6Ch+var_4C] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov byte ptr [ebp+6Ch+var_70] 9 +
cmp dword_4A291C 0 +
jnz loc_439763  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+6Ch+var_98] offset off_49099C +
mov [ebp+6Ch+var_90] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+6Ch+var_8C] eax +
mov [ebp+6Ch+var_88] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [ebp+6Ch+var_5C] +
mov byte ptr [ebp+6Ch+var_70] 0Ah +
push eax  +
lea edx [esi+58h] +
lea ecx [ebp+6Ch+var_18] +
call sub_425FB0  +
mov esi eax +
lea eax [ebp+6Ch+var_98] +
mov byte ptr [ebp+6Ch+var_70] 0Bh +
push eax  +
mov edx edi +
lea ecx [ebp+6Ch+var_30] +
call sub_425FB0  +
push esi  +
mov edx eax +
mov byte ptr [ebp+6Ch+var_70] 0Ch +
lea ecx [ebp+6Ch+var_E4] +
call sub_438E60  +
add esp 0Ch +
push eax  +
lea eax [ebp+6Ch+var_D0] +
mov byte ptr [ebp+6Ch+var_70] 0Dh +
push eax  +
mov ecx ebx +
call sub_4362A0  +
mov ebx [ebp+6Ch+var_6C] +
push eax  +
mov byte ptr [ebp+6Ch+var_70] 0Eh +
lea ecx [ebx+30h] +
call sub_4330F0  +
mov edx [ebp+6Ch+var_C8] +
xor eax eax +
mov esi [ebp+6Ch+var_C4] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439817  +
call sub_4746E8  +
jmp loc_43981C  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_DC] +
xor eax eax +
mov esi [ebp+6Ch+var_D8] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439841  +
call sub_4746E8  +
jmp loc_439846  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_28] +
xor eax eax +
mov esi [ebp+6Ch+var_24] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43986B  +
call sub_4746E8  +
jmp loc_439870  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_10] +
xor eax eax +
mov esi [ebp+6Ch+var_C] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439895  +
call sub_4746E8  +
jmp loc_43989A  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_8C] +
add esp 4 +
mov edi edx +
xor eax eax +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov byte ptr [ebp+6Ch+var_70] 8 +
xor eax eax +
mov edx [ebp+6Ch+var_50] +
mov ecx 2 +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 8 +
cmp dword_4A291C 0 +
jnz loc_4398E4  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+6Ch+var_5C] offset off_49099C +
mov [ebp+6Ch+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+6Ch+var_50] eax +
mov [ebp+6Ch+var_4C] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [ebp+6Ch+var_5C] +
mov byte ptr [ebp+6Ch+var_70] 0Fh +
push eax  +
lea edx [ebx+44h] +
lea ecx [ebp+6Ch+var_30] +
call sub_425FB0  +
push eax  +
lea edx [ebx+30h] +
mov byte ptr [ebp+6Ch+var_70] 10h +
lea ecx [ebp+6Ch+var_18] +
call sub_426040  +
add esp 8 +
push eax  +
lea ecx [ebx+6Ch] +
mov byte ptr [ebp+6Ch+var_70] 11h +
call sub_4330F0  +
mov edx [ebp+6Ch+var_10] +
xor eax eax +
mov esi [ebp+6Ch+var_C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439972  +
call sub_4746E8  +
jmp loc_439977  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_28] +
xor eax eax +
mov esi [ebp+6Ch+var_24] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43999C  +
call sub_4746E8  +
jmp loc_4399A1  +
call sub_45B0EB  +
mov byte ptr [ebp+6Ch+var_70] 8 +
add esp 4 +
mov edx [ebp+6Ch+var_50] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_4399D7  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+6Ch+var_5C] offset off_49099C +
mov [ebp+6Ch+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+6Ch+var_50] eax +
mov [ebp+6Ch+var_4C] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [ebp+6Ch+var_5C] +
mov byte ptr [ebp+6Ch+var_70] 12h +
push eax  +
lea edx [ebx+58h] +
lea ecx [ebp+6Ch+var_30] +
call sub_425FB0  +
push eax  +
lea edx [ebx+30h] +
mov byte ptr [ebp+6Ch+var_70] 13h +
lea ecx [ebp+6Ch+var_18] +
call sub_426040  +
add esp 8 +
push eax  +
lea ecx [ebx+80h] +
mov byte ptr [ebp+6Ch+var_70] 14h +
call sub_4330F0  +
mov edx [ebp+6Ch+var_10] +
xor eax eax +
mov esi [ebp+6Ch+var_C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439A68  +
call sub_4746E8  +
jmp loc_439A6D  +
call sub_45B0EB  +
mov edx [ebp+6Ch+var_28] +
xor eax eax +
mov esi [ebp+6Ch+var_24] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439A92  +
call sub_4746E8  +
jmp loc_439A97  +
call sub_45B0EB  +
mov byte ptr [ebp+6Ch+var_70] 8 +
add esp 4 +
mov edx [ebp+6Ch+var_50] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
lea eax [ebx+58h] +
push eax  +
lea edx [ebx+44h] +
lea ecx [ebp+6Ch+var_18] +
call sub_425FE0  +
add esp 8 +
push eax  +
lea ecx [ebx-30h] +
mov byte ptr [ebp+6Ch+var_70] 15h +
call sub_4330F0  +
mov byte ptr [ebp+6Ch+var_70] 8 +
xor eax eax +
mov edx [ebp+6Ch+var_10] +
mov ecx edx +
mov esi [ebp+6Ch+var_C] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439AF7  +
call sub_4746E8  +
jmp loc_439AFC  +
call sub_45B0EB  +
add esp 4 +
lea eax [ebx+44h] +
lea ecx [ebx+58h] +
push eax  +
lea eax [ebp+6Ch+var_18] +
push eax  +
call sub_4362A0  +
push eax  +
lea ecx [ebx+94h] +
mov byte ptr [ebp+6Ch+var_70] 16h +
call sub_4330F0  +
mov edx [ebp+6Ch+var_10] +
xor eax eax +
mov esi [ebp+6Ch+var_C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439B41  +
call sub_4746E8  +
jmp loc_439B46  +
call sub_45B0EB  +
mov ecx [ebp+6Ch+var_80] +
add esp 4 +
test ecx ecx +
jz loc_439B56  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp+6Ch+var_A4] +
xor eax eax +
mov esi [ebp+6Ch+var_A0] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439B78  +
call sub_4746E8  +
jmp loc_439B7D  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+6Ch+var_78] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+6Ch+var_4] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+6Ch] +
pop ebp  +
retn 8  +
***
mov edx [ecx+0Ch] +
xor eax eax +
push esi  +
mov esi [ecx+10h] +
mov ecx edx +
push edi  +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439BC8  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_479892  +
mov eax large fs:0 +
push eax  +
sub esp 138h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-9Ch] ecx +
mov ebx [ebp+8] +
mov esi [ebp+0Ch] +
mov edi [ebp+10h] +
mov [ebp-0A0h] ebx +
cmp dword ptr [ebx+8] 0 +
jbe loc_43A745  +
mov eax [ebx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43A745  +
cmp dword ptr [esi+8] 0 +
ja loc_439C44  +
xor dl dl +
jmp loc_439C4C  +
mov eax [esi+0Ch] +
mov dl [eax] +
and dl 1 +
cmp dword ptr [edi+8] 0 +
ja loc_439C56  +
xor al al +
jmp loc_439C5D  +
mov eax [edi+0Ch] +
mov al [eax] +
and al 1 +
test al al +
setz cl  +
test dl dl +
setz al  +
or cl al +
jnz loc_43A745  +
push ebx  +
mov ebx [ebp-9Ch] +
lea ecx [ebx+0Ch] +
call sub_4330F0  +
push esi  +
lea ecx [ebx+20h] +
call sub_4330F0  +
lea ecx [ebx+6Ch] +
push edi  +
call sub_4330F0  +
push esi  +
mov edx edi +
lea ecx [ebp-28h] +
call sub_425FE0  +
add esp 4 +
mov ecx eax +
mov dword ptr [ebp-4] 2 +
call loc_434810  +
push eax  +
lea ecx [ebp-0FCh] +
call loc_432E00  +
mov byte ptr [ebp-4] 4 +
xor eax eax +
mov edx [ebp-20h] +
mov ecx edx +
mov esi [ebp-1Ch] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_439CDE  +
call sub_4746E8  +
jmp loc_439CE3  +
call sub_45B0EB  +
add esp 4 +
xor ebx ebx +
cmp dword ptr [ebp-0F4h] 0 +
jbe loc_439D05  +
mov eax [ebp-0F0h] +
mov al [eax] +
and al 1 +
jnz loc_439D15  +
push 1  +
lea ecx [ebp-0FCh] +
call loc_4350B0  +
inc ebx  +
jmp loc_439CF0  +
***
push dword ptr [ebp-0A0h]  +
lea ecx [ebp-144h] +
mov [ebp-0D4h] ebx +
call sub_426070  +
mov byte ptr [ebp-4] 5 +
cmp dword_4A291C 0 +
jnz loc_439D48  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-0E8h] offset off_49099C +
mov dword ptr [ebp-0E0h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-0DCh] eax +
mov dword ptr [ebp-0D8h] 0 +
mov dword ptr [eax] 2 +
mov eax [ebp-0DCh] +
mov dword ptr [eax+4] 0 +
mov byte ptr [ebp-4] 6 +
lea eax [ebp-0FCh] +
push eax  +
lea eax [ebp-0E8h] +
push eax  +
lea eax [ebp-0B4h] +
push eax  +
lea ecx [ebp-144h] +
call sub_444EA0  +
mov byte ptr [ebp-4] 7 +
cmp dword_4A291C 0 +
jnz loc_439DDC  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov dword ptr [ebp-18h] 0 +
mov [ebp-1Ch] esi +
mov dword ptr [esi] 1 +
mov dword ptr [esi+4] 0 +
cmp dword ptr [ebp-0A4h] 1 +
jz loc_439E31  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-0B4h] +
call loc_435C80  +
jmp loc_439E34  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi esi +
mov ecx 2 +
setz bl  +
xor eax eax +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jz loc_439E92  +
mov byte ptr [ebp-4] 6 +
xor eax eax +
mov edx [ebp-0ACh] +
mov ecx edx +
mov esi [ebp-0A8h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43A206  +
call sub_4746E8  +
add esp 4 +
lea ecx [ebp-0E8h] +
call loc_434700  +
jmp loc_439DA0  +
***
cmp dword_4A291C 0 +
jnz loc_439EAA  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi 2 +
mov dword ptr [ebp-0C8h] offset off_49099C +
mov ecx esi +
mov [ebp-0C0h] esi +
call sub_437B10  +
lea ecx [esi+6] +
call loc_43F720  +
mov ebx eax +
xor eax eax +
mov [ebp-0BCh] ebx +
mov [ebp-0B8h] eax +
mov [ebx+4] eax +
mov [ebx] eax +
mov byte ptr [ebp-4] 8 +
mov [ebp-0D0h] eax +
cmp dword_4A291C 0 +
jnz loc_439F08  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov edx [ebp-0A0h] +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-68h] +
mov byte ptr [ebp-4] 9 +
call sub_425FB0  +
add esp 4 +
cmp dword ptr [ebp-0A4h] 1 +
jz loc_439F7E  +
cmp dword ptr [eax+10h] 1 +
jz loc_439F77  +
push eax  +
lea ecx [ebp-0B4h] +
call loc_435C80  +
jmp loc_439F97  +
mov eax 1 +
jmp loc_439F97  +
cmp dword ptr [eax+10h] 1 +
jz loc_439F89  +
or eax 0FFFFFFFFh +
jmp loc_439F97  +
push eax  +
lea ecx [ebp-0B4h] +
call loc_435C80  +
neg eax  +
mov edx [ebp-60h] +
test eax eax +
mov eax [ebp-5Ch] +
mov ecx edx +
mov [ebp-0CCh] eax +
mov edi eax +
push dword ptr [ebp-0CCh]  +
setnz byte ptr [ebp-95h]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_439FCD  +
call sub_4746E8  +
jmp loc_439FD2  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 8 +
add esp 4 +
mov edx [ebp-1Ch] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-95h] 0 +
jz loc_43A1D7  +
lea eax [ebp-0B4h] +
push eax  +
lea ecx [ebp-144h] +
call sub_426420  +
mov edi eax +
lea eax [ebp-0C8h] +
cmp eax edi +
jz loc_43A099  +
mov ecx [edi+8] +
cmp esi ecx +
jnz loc_43A02F  +
mov edx [edi+0Ch] +
mov eax ecx +
shr eax 1 +
cmp dword ptr [edx+eax*4] 0 +
jnz loc_43A075  +
mov eax [edi+0Ch] +
test ecx ecx +
jz loc_43A04D  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_43A04D  +
sub eax 4 +
sub ecx 1 +
jnz loc_43A040  +
call sub_432CF0  +
mov esi eax +
mov edx ebx +
push 0  +
push esi  +
push dword ptr [ebp-0C0h]  +
call sub_437F60  +
mov ebx eax +
mov [ebp-0C0h] esi +
add esp 0Ch +
mov [ebp-0BCh] ebx +
mov ecx [edi+0Ch] +
cmp ebx ecx +
jz loc_43A08E  +
lea eax ds:0[esi*4] +
push eax  +
push ecx  +
push ebx  +
call loc_452BD0  +
add esp 0Ch +
mov ebx [edi+10h] +
mov [ebp-0B8h] ebx +
jmp loc_43A09F  +
mov ebx [ebp-0B8h] +
cmp dword_4A291C 0 +
jnz loc_43A0B7  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov dword ptr [ebp-18h] 0 +
mov edx eax +
mov [ebp-1Ch] edx +
mov dword ptr [edx] 1 +
mov dword ptr [edx+4] 0 +
cmp ebx 1 +
jz loc_43A10B  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-0C8h] +
call loc_435C80  +
mov edx [ebp-1Ch] +
jmp loc_43A10E  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi edx +
mov ecx 2 +
setz bl  +
xor eax eax +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jnz loc_43A2A9  +
mov eax [ebp-0D0h] +
inc eax  +
mov [ebp-0D0h] eax +
cmp eax [ebp-0D4h] +
jz loc_43A21E  +
mov edi [ebp-0ACh] +
mov ebx [ebp-0BCh] +
cmp edi esi +
jnz loc_43A16A  +
mov eax esi +
shr eax 1 +
cmp dword ptr [ebx+eax*4] 0 +
jz loc_43A16A  +
mov eax [ebp-0A8h] +
jmp loc_43A1B0  +
mov ecx esi +
test esi esi +
jz loc_43A183  +
lea eax [esi-1] +
lea eax [ebx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_43A183  +
sub eax 4 +
sub ecx 1 +
jnz loc_43A176  +
call sub_432CF0  +
mov edx [ebp-0A8h] +
mov esi eax +
push 0  +
push esi  +
push edi  +
call sub_437F60  +
mov edi esi +
mov [ebp-0A8h] eax +
mov esi [ebp-0C0h] +
add esp 0Ch +
mov [ebp-0ACh] edi +
cmp eax ebx +
jz loc_43A1C6  +
lea ecx ds:0[edi*4] +
push ecx  +
push ebx  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebp-0B8h] +
mov [ebp-0A4h] eax +
jmp loc_439EF0  +
***
xor eax eax +
mov edi ebx +
mov ecx esi +
stos   +
lea eax ds:0[esi*4] +
push ebx  +
cmp eax 10h +
jb loc_43A1F9  +
call sub_4746E8  +
add esp 4 +
jmp loc_439E51  +
***
call sub_45B0EB  +
add esp 4 +
jmp loc_439E51  +
***
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-0E8h] +
call loc_434700  +
jmp loc_439DA0  +
***
push 3Bh  +
push offset aInvertiblersaf  +
lea ecx [ebp-54h] +
mov dword ptr [ebp-40h] 0Fh +
mov dword ptr [ebp-44h] 0 +
mov byte ptr [ebp-54h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq qword ptr [ebp-90h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 16h +
lea eax [ebp-54h] +
push 0  +
push eax  +
lea ecx [ebp-84h] +
mov dword ptr [ebp-94h] offset off_48D038 +
mov dword ptr [ebp-88h] 1 +
mov dword ptr [ebp-70h] 0Fh +
mov dword ptr [ebp-74h] 0 +
mov byte ptr [ebp-84h] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-94h] +
mov byte ptr [ebp-4] 15h +
push eax  +
mov dword ptr [ebp-94h] offset off_48C750 +
call sub_452780  +
cmp dword_4A291C 0 +
jnz loc_43A2C1  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea edx [ebp-0B4h] +
lea ecx [ebp-50h] +
call sub_425FB0  +
add esp 4 +
push dword ptr [ebp-0A0h]  +
mov edx eax +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-68h] +
call sub_438D70  +
add esp 4 +
mov ecx [ebp-9Ch] +
sub ecx 0FFFFFF80h +
mov byte ptr [ebp-4] 0Ch +
push eax  +
call sub_4330F0  +
mov edx [ebp-60h] +
xor eax eax +
mov ebx [ebp-5Ch] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A35F  +
call sub_4746E8  +
jmp loc_43A364  +
call sub_45B0EB  +
mov edx [ebp-48h] +
xor eax eax +
mov ebx [ebp-44h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A389  +
call sub_4746E8  +
jmp loc_43A38E  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 8 +
add esp 4 +
mov edx [ebp-1Ch] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov ebx [ebp-9Ch] +
lea ecx [ebp-50h] +
mov edx [ebp-0A0h] +
add esp 4 +
lea eax [ebx+80h] +
push eax  +
call sub_426010  +
add esp 4 +
lea ecx [ebx+94h] +
mov byte ptr [ebp-4] 0Dh +
push eax  +
call sub_4330F0  +
mov byte ptr [ebp-4] 8 +
xor eax eax +
mov edx [ebp-48h] +
mov ecx edx +
mov ebx [ebp-44h] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A400  +
call sub_4746E8  +
jmp loc_43A405  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_43A420  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov ebx [ebp-9Ch] +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-68h] +
mov byte ptr [ebp-4] 0Eh +
lea edx [ebx+80h] +
call sub_425FB0  +
add esp 4 +
push eax  +
lea edx [ebx+6Ch] +
mov byte ptr [ebp-4] 0Fh +
lea ecx [ebp-50h] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [ebx+0A8h] +
mov byte ptr [ebp-4] 10h +
call sub_4330F0  +
mov edx [ebp-48h] +
xor eax eax +
mov ebx [ebp-44h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A4BD  +
call sub_4746E8  +
jmp loc_43A4C2  +
call sub_45B0EB  +
mov edx [ebp-60h] +
xor eax eax +
mov ebx [ebp-5Ch] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A4E7  +
call sub_4746E8  +
jmp loc_43A4EC  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 8 +
add esp 4 +
mov edx [ebp-1Ch] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_43A522  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-28h] offset off_49099C +
mov dword ptr [ebp-20h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov ebx [ebp-9Ch] +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-68h] +
mov byte ptr [ebp-4] 11h +
lea edx [ebx+94h] +
call sub_425FB0  +
add esp 4 +
push eax  +
lea edx [ebx+6Ch] +
mov byte ptr [ebp-4] 12h +
lea ecx [ebp-50h] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [ebx+0BCh] +
mov byte ptr [ebp-4] 13h +
call sub_4330F0  +
mov edx [ebp-48h] +
xor eax eax +
mov ebx [ebp-44h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A5BF  +
call sub_4746E8  +
jmp loc_43A5C4  +
call sub_45B0EB  +
mov edx [ebp-60h] +
xor eax eax +
mov ebx [ebp-5Ch] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A5E9  +
call sub_4746E8  +
jmp loc_43A5EE  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 8 +
add esp 4 +
mov edx [ebp-1Ch] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov ebx [ebp-9Ch] +
add esp 4 +
lea eax [ebx+80h] +
push eax  +
lea eax [ebp-50h] +
push eax  +
lea ecx [ebx+94h] +
call sub_4362A0  +
push eax  +
lea ecx [ebx+0D0h] +
mov byte ptr [ebp-4] 14h +
call sub_4330F0  +
mov edx [ebp-48h] +
xor eax eax +
mov ebx [ebp-44h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43A65A  +
call sub_4746E8  +
jmp loc_43A65F  +
call sub_45B0EB  +
mov edx [ebp-0BCh] +
xor eax eax +
add esp 4 +
mov edi edx +
mov ecx esi +
stos   +
lea eax ds:0[esi*4] +
push edx  +
cmp eax 10h +
jb loc_43A684  +
call sub_4746E8  +
jmp loc_43A689  +
call sub_45B0EB  +
mov edx [ebp-0ACh] +
xor eax eax +
mov esi [ebp-0A8h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43A6B4  +
call sub_4746E8  +
jmp loc_43A6B9  +
call sub_45B0EB  +
mov edx [ebp-0E0h] +
xor eax eax +
mov esi [ebp-0DCh] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43A6E4  +
call sub_4746E8  +
jmp loc_43A6E9  +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-144h] +
call sub_426650  +
mov edx [ebp-0F4h] +
xor eax eax +
mov esi [ebp-0F0h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43A73E  +
call sub_4746E8  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_45B0EB  +
jmp loc_43A71D  +
***
push 3Bh  +
push offset aInvertiblersaf  +
lea ecx [ebp-6Ch] +
mov dword ptr [ebp-58h] 0Fh +
mov dword ptr [ebp-5Ch] 0 +
mov byte ptr [ebp-6Ch] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-38h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-6Ch] +
push 0  +
push eax  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-3Ch] offset off_48D038 +
mov dword ptr [ebp-30h] 1 +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-3Ch] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-3Ch] offset off_48C750 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_4798C8  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_38] +
push 30h  +
mov [ebp+var_2C] 0FFFFFFFFh +
mov [ebp+var_28] 0 +
mov [ebp+var_38] offset off_48FE70 +
mov [ebp+var_34] offset off_48FE60 +
mov [ebp+var_24] eax +
mov [ebp+var_20] 0 +
call loc_421E40  +
mov [ebp+var_38] offset off_48FFFC +
mov [ebp+var_34] offset off_48FFEC +
sub esp 0Ch +
mov [ebp+var_4] 2 +
lea edx [ebp+var_3C] +
lea ecx [ebp+var_38] +
call sub_422CE0  +
mov eax [esi-2Ch] +
lea ecx [esi-2Ch] +
add esp 0Ch +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi-18h] +
lea ecx [esi-18h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+34h] +
lea ecx [esi+34h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+48h] +
lea ecx [esi+48h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+5Ch] +
lea ecx [esi+5Ch] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+70h] +
lea ecx [esi+70h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+84h] +
lea ecx [esi+84h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
mov eax [esi+98h] +
lea ecx [esi+98h] +
lea edx [ebp+var_38] +
push edx  +
call dword ptr [eax+4]  +
lea ecx [ebp+var_38] +
call loc_421F00  +
lea ecx [ebp+var_38] +
call sub_421EA0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4796C8  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 30h  +
push [ebp+arg_0]  +
lea ecx [ebp+var_40] +
call sub_422050  +
mov [ebp+var_40] offset off_48FF38 +
mov [ebp+var_3C] offset off_48FF28 +
push ecx  +
lea ecx [ebp+var_40] +
mov [ebp+var_4] 0 +
call loc_422DE0  +
mov eax [esi-2Ch] +
lea ecx [esi-2Ch] +
add esp 4 +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi-18h] +
lea ecx [esi-18h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+34h] +
lea ecx [esi+34h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+48h] +
lea ecx [esi+48h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+5Ch] +
lea ecx [esi+5Ch] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+70h] +
lea ecx [esi+70h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+84h] +
lea ecx [esi+84h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
mov eax [esi+98h] +
lea ecx [esi+98h] +
lea edx [ebp+var_40] +
push edx  +
call dword ptr [eax+8]  +
lea ecx [ebp+var_40] +
call sub_4221C0  +
lea ecx [ebp+var_40] +
call sub_422130  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-14h] esi +
cmp eax 10h +
jb loc_43ABC7  +
call sub_4746E8  +
jmp loc_43ABCC  +
call sub_45B0EB  +
lea eax [ebp+0] +
add esp 4 +
cmp eax esi +
jz loc_43AC4D  +
mov ecx [esi+8] +
cmp ebx ecx +
jnz loc_43ABEA  +
mov edx [esi+0Ch] +
mov eax ecx +
shr eax 1 +
cmp dword ptr [edx+eax*4] 0 +
jnz loc_43AC29  +
mov eax [esi+0Ch] +
test ecx ecx +
jz loc_43AC04  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_43AC04  +
sub eax 4 +
sub ecx 1 +
jnz loc_43ABF7  +
call sub_432CF0  +
mov edx [ebp+0Ch] +
mov esi eax +
push 0  +
push esi  +
push ebx  +
call sub_437F60  +
mov ebx esi +
mov edi eax +
mov esi [ebp-14h] +
add esp 0Ch +
mov [ebp+0Ch] edi +
mov [ebp+8] ebx +
jmp loc_43AC2C  +
mov edi [ebp+0Ch] +
mov ecx [esi+0Ch] +
cmp edi ecx +
jz loc_43AC45  +
lea eax ds:0[ebx*4] +
push eax  +
push ecx  +
push edi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+10h] +
mov [ebp+10h] eax +
jmp loc_43AC53  +
mov edi [ebp+0Ch] +
mov eax [ebp+10h] +
cmp eax 1 +
jz loc_43AC8A  +
cmp dword ptr [edi] 0 +
jnz loc_43AC8A  +
mov esi [ebp+1Ch] +
mov eax ebx +
test ebx ebx +
jz near ptr dword_43AB18+8  +
lea ecx [ebx-1] +
lea ecx [edi+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_43AC82  +
sub ecx 4 +
sub eax 1 +
jnz loc_43AC70  +
jmp near ptr dword_43AB18+8  +
***
test eax eax +
jz near ptr dword_43AB18+8  +
mov esi [ebp+14h] +
lea eax [ebp-30h] +
add esi 0FFFFFFECh +
lea ecx [ebp-90h] +
push esi  +
push eax  +
lea eax [ebp-44h] +
push eax  +
call sub_444EA0  +
mov edi [ebp-18h] +
lea eax [ebp-44h] +
push edi  +
push eax  +
lea ecx [ebp-90h] +
mov byte ptr [ebp-4] 6 +
call sub_426350  +
push eax  +
lea ecx [ebp-44h] +
call sub_4330F0  +
mov ecx [ebp+14h] +
lea edx [ebp-44h] +
lea eax [ecx+9Ch] +
push eax  +
lea eax [ecx+4Ch] +
push eax  +
lea eax [ecx+60h] +
push eax  +
lea eax [ecx+74h] +
push eax  +
lea eax [ecx+88h] +
mov ecx [ebp+20h] +
push eax  +
call sub_449750  +
add esp 14h +
lea eax [ebp+0] +
mov dword ptr [ebp-1Ch] 1 +
push eax  +
push dword ptr [ebp+20h]  +
lea ecx [ebp-90h] +
call sub_426350  +
mov ecx [ebp+20h] +
push eax  +
call sub_4330F0  +
push esi  +
push dword ptr [ebp+20h]  +
lea eax [ebp+54h] +
push eax  +
lea ecx [ebp-90h] +
call sub_444EA0  +
cmp dword ptr [eax+10h] 1 +
jz loc_43AD41  +
cmp dword ptr [edi+10h] 1 +
jz loc_43AD3A  +
push edi  +
mov ecx eax +
call loc_435C80  +
jmp loc_43AD56  +
mov eax 1 +
jmp loc_43AD56  +
cmp dword ptr [edi+10h] 1 +
jz loc_43AD4C  +
or eax 0FFFFFFFFh +
jmp loc_43AD56  +
push edi  +
mov ecx eax +
call loc_435C80  +
neg eax  +
mov edx [ebp+5Ch] +
test eax eax +
mov esi [ebp+60h] +
mov ecx edx +
setnz byte ptr [ebp+27h]  +
mov edi esi +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43AD7E  +
call sub_4746E8  +
jmp loc_43AD83  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp+27h] 0 +
jz loc_43ADFB  +
push 47h  +
push offset aInvertiblers_2  +
lea ecx [ebp+50h] +
mov dword ptr [ebp+64h] 0Fh +
mov dword ptr [ebp+60h] 0 +
mov byte ptr [ebp+50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq qword ptr [ebp+2Ch] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 8 +
lea eax [ebp+50h] +
push 0  +
push eax  +
lea ecx [ebp+38h] +
mov dword ptr [ebp+28h] offset off_48D038 +
mov dword ptr [ebp+34h] 6 +
mov dword ptr [ebp+4Ch] 0Fh +
mov dword ptr [ebp+48h] 0 +
mov byte ptr [ebp+38h] 0 +
call loc_402270  +
push offset unk_49C854  +
lea eax [ebp+28h] +
mov byte ptr [ebp-4] 7 +
push eax  +
call sub_452780  +
mov edx [ebp-3Ch] +
xor eax eax +
mov esi [ebp-38h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43AE1D  +
call sub_4746E8  +
jmp loc_43AE22  +
call sub_45B0EB  +
mov edx [ebp+0Ch] +
xor eax eax +
add esp 4 +
mov edi edx +
mov ecx ebx +
stos   +
lea eax ds:0[ebx*4] +
push edx  +
cmp eax 10h +
jb loc_43AE44  +
call sub_4746E8  +
jmp loc_43AE49  +
call sub_45B0EB  +
mov edx [ebp-28h] +
xor eax eax +
mov esi [ebp-24h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43AE6E  +
call sub_4746E8  +
jmp loc_43AE73  +
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-90h] +
call sub_426650  +
mov eax [ebp+20h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+68h] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+6Ch] +
pop ebp  +
retn 0Ch  +
***
sub esp 70h +
push 0FFFFFFFFh  +
push offset loc_479B06  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+70h+var_7C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+70h+var_8] esi +
push [ebp+70h+arg_4]  +
xor ebx ebx +
lea ecx [esi-0B0h] +
push [ebp+70h+arg_0]  +
mov [ebp+70h+var_C] ebx +
call sub_4390F0  +
test al al +
jz loc_43B0F6  +
call sub_437C60  +
cmp dword ptr [esi-54h] 1 +
jz loc_43AF1C  +
cmp dword ptr [eax+10h] 1 +
jz loc_43AF39  +
push eax  +
lea ecx [esi-64h] +
call loc_435C80  +
jmp loc_43AF31  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43B0F6  +
push eax  +
lea ecx [esi-64h] +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43B0F6  +
cmp [esi-5Ch] ebx +
jbe loc_43B0F6  +
mov eax [esi-58h] +
mov al [eax] +
and al 1 +
jz loc_43B0F6  +
lea eax [esi-0D8h] +
mov edx eax +
lea ecx [esi-64h] +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
call sub_437C60  +
cmp dword ptr [esi-40h] 1 +
lea ecx [esi-50h] +
jz loc_43AF83  +
cmp dword ptr [eax+10h] 1 +
jz loc_43AFA0  +
push eax  +
call loc_435C80  +
jmp loc_43AF95  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43B0F6  +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43B0F6  +
lea ecx [esi-50h] +
cmp [ecx+8] ebx +
jbe loc_43B0F6  +
mov eax [ecx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43B0F6  +
lea edx [esi-0D8h] +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
call sub_437C60  +
cmp dword ptr [esi-68h] 1 +
lea ecx [esi-78h] +
jz loc_43AFE5  +
cmp dword ptr [eax+10h] 1 +
jz loc_43B002  +
push eax  +
call loc_435C80  +
jmp loc_43AFF7  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43B0F6  +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43B0F6  +
lea ecx [esi-78h] +
cmp [ecx+8] ebx +
jbe loc_43B0F6  +
mov eax [ecx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43B0F6  +
lea eax [esi-0D8h] +
mov edx eax +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
call sub_437C60  +
cmp dword ptr [esi-2Ch] 1 +
lea ecx [esi-3Ch] +
jz loc_43B049  +
cmp dword ptr [eax+10h] 1 +
jz loc_43B066  +
push eax  +
call loc_435C80  +
jmp loc_43B05B  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43B0F6  +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43B0F6  +
lea ecx [esi-3Ch] +
cmp [ecx+8] ebx +
jbe loc_43B0F6  +
mov eax [ecx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43B0F6  +
lea edx [esi-64h] +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
call sub_437C60  +
cmp dword ptr [esi-18h] 1 +
lea ecx [esi-28h] +
jz loc_43B0A0  +
cmp dword ptr [eax+10h] 1 +
jz loc_43B0B5  +
push eax  +
call loc_435C80  +
jmp loc_43B0AE  +
cmp dword ptr [eax+10h] 1 +
jnz loc_43B0F6  +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_43B0F6  +
lea ecx [esi-28h] +
cmp [ecx+8] ebx +
jbe loc_43B0F6  +
mov eax [ecx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_43B0F6  +
lea edx [esi-50h] +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
cmp dword ptr [esi-4] 1 +
lea eax [esi-14h] +
jz loc_43B0F6  +
mov ecx eax +
call loc_425B30  +
test al al +
jz loc_43B0F6  +
lea edx [esi-64h] +
lea ecx [esi-14h] +
call sub_425F30  +
test al al +
jz loc_43B0F6  +
mov al 1 +
jmp loc_43B0F8  +
xor al al +
cmp [ebp+70h+arg_4] 1 +
mov [ebp+70h+var_1] al +
jb loc_43B8CB  +
test al al +
jz loc_43B134  +
lea eax [esi-50h] +
push eax  +
lea edx [esi-64h] +
lea ecx [ebp+70h+var_20] +
call sub_425FE0  +
add esp 4 +
lea edx [esi-0D8h] +
mov ecx eax +
mov ebx 1 +
call sub_425E40  +
mov [ebp+70h+var_1] bl +
test al al +
jnz loc_43B138  +
mov [ebp+70h+var_1] 0 +
test bl 1 +
jz loc_43B16F  +
mov eax [ebp+70h+var_14] +
and ebx 0FFFFFFFEh +
mov edx [ebp+70h+var_18] +
mov edi eax +
mov [ebp+70h+var_C] eax +
mov ecx edx +
push [ebp+70h+var_C]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B167  +
call sub_4746E8  +
jmp loc_43B16C  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+70h+var_1] 0 +
jz loc_43B332  +
cmp dword_4A291C 0 +
jnz loc_43B191  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_20] offset off_49099C +
mov [ebp+70h+var_18] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_14] eax +
mov [ebp+70h+var_10] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov [ebp+70h+var_74] 0 +
or ebx 2 +
cmp dword_4A291C 0 +
mov [ebp+70h+var_C] ebx +
jnz loc_43B1EF  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_48] offset off_49099C +
mov [ebp+70h+var_40] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_3C] eax +
mov [ebp+70h+var_38] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov [ebp+70h+var_74] 1 +
or ebx 4 +
cmp dword_4A291C 0 +
mov [ebp+70h+var_C] ebx +
jnz loc_43B24D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_34] offset off_49099C +
mov [ebp+70h+var_2C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_28] eax +
mov [ebp+70h+var_24] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [ebp+70h+var_48] +
mov [ebp+70h+var_74] 2 +
or ebx 8 +
lea edx [esi-50h] +
push eax  +
lea ecx [ebp+70h+var_A4] +
mov [ebp+70h+var_C] ebx +
call sub_425FB0  +
mov esi eax +
mov edi [ebp+70h+var_8] +
lea eax [ebp+70h+var_34] +
mov [ebp+70h+var_74] 3 +
lea ecx [ebp+70h+var_90] +
or ebx 10h +
push eax  +
lea edx [edi-64h] +
mov [ebp+70h+var_C] ebx +
call sub_425FB0  +
mov [ebp+70h+var_74] 4 +
lea ecx [ebp+70h+var_70] +
or ebx 20h +
mov edx eax +
push esi  +
mov [ebp+70h+var_C] ebx +
call sub_438E60  +
mov esi eax +
lea ecx [edi-78h] +
mov [ebp+70h+var_74] 5 +
push ecx  +
or ebx 40h +
lea edx [edi-0C4h] +
lea ecx [ebp+70h+var_5C] +
mov [ebp+70h+var_C] ebx +
call sub_425FE0  +
mov [ebp+70h+var_74] 6 +
lea ecx [ebp+70h+var_B8] +
or ebx 80h +
mov edx eax +
push esi  +
mov [ebp+70h+var_C] ebx +
call sub_426040  +
add esp 14h +
lea edx [ebp+70h+var_20] +
mov ecx eax +
or ebx 100h +
call sub_425E40  +
mov [ebp+70h+var_1] 1 +
test al al +
jnz loc_43B336  +
mov [ebp+70h+var_1] 0 +
test ebx 100h +
jz loc_43B36E  +
mov edx [ebp+70h+var_B0] +
xor eax eax +
mov esi [ebp+70h+var_AC] +
mov ecx edx +
mov edi esi +
and ebx 0FFFFFEFFh +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43B366  +
call sub_4746E8  +
jmp loc_43B36B  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jns loc_43B3A2  +
mov edx [ebp+70h+var_54] +
xor eax eax +
mov esi [ebp+70h+var_50] +
mov ecx edx +
mov edi esi +
and ebx 0FFFFFF7Fh +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43B39A  +
call sub_4746E8  +
jmp loc_43B39F  +
call sub_45B0EB  +
add esp 4 +
test bl 40h +
jz loc_43B3D4  +
mov edx [ebp+70h+var_68] +
xor eax eax +
mov esi [ebp+70h+var_64] +
mov ecx edx +
mov edi esi +
and ebx 0FFFFFFBFh +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43B3CC  +
call sub_4746E8  +
jmp loc_43B3D1  +
call sub_45B0EB  +
add esp 4 +
test bl 20h +
jz loc_43B406  +
mov edx [ebp+70h+var_88] +
xor eax eax +
mov esi [ebp+70h+var_84] +
mov ecx edx +
mov edi esi +
and ebx 0FFFFFFDFh +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43B3FE  +
call sub_4746E8  +
jmp loc_43B403  +
call sub_45B0EB  +
add esp 4 +
test bl 10h +
jz loc_43B438  +
mov edx [ebp+70h+var_9C] +
xor eax eax +
mov esi [ebp+70h+var_98] +
mov ecx edx +
mov edi esi +
and ebx 0FFFFFFEFh +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_43B430  +
call sub_4746E8  +
jmp loc_43B435  +
call sub_45B0EB  +
add esp 4 +
test bl 8 +
jz loc_43B46A  +
mov esi [ebp+70h+var_2C] +
xor eax eax +
mov edx [ebp+70h+var_28] +
mov ecx esi +
mov edi edx +
and ebx 0FFFFFFF7h +
stos   +
lea eax ds:0[esi*4] +
push edx  +
cmp eax 10h +
jb loc_43B462  +
call sub_4746E8  +
jmp loc_43B467  +
call sub_45B0EB  +
add esp 4 +
test bl 4 +
jz loc_43B49C  +
mov esi [ebp+70h+var_40] +
xor eax eax +
mov edx [ebp+70h+var_3C] +
mov ecx esi +
mov edi edx +
and ebx 0FFFFFFFBh +
stos   +
lea eax ds:0[esi*4] +
push edx  +
cmp eax 10h +
jb loc_43B494  +
call sub_4746E8  +
jmp loc_43B499  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+70h+var_74] 0FFFFFFFFh +
test bl 2 +
jz loc_43B4D5  +
mov esi [ebp+70h+var_18] +
xor eax eax +
mov edx [ebp+70h+var_14] +
mov ecx esi +
mov edi edx +
and ebx 0FFFFFFFDh +
stos   +
lea eax ds:0[esi*4] +
push edx  +
cmp eax 10h +
jb loc_43B4CD  +
call sub_4746E8  +
jmp loc_43B4D2  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+70h+var_1] 0 +
jz loc_43B5F1  +
cmp dword_4A291C 0 +
jnz loc_43B4F7  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_34] offset off_49099C +
mov [ebp+70h+var_2C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_28] eax +
mov [ebp+70h+var_24] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov esi [ebp+70h+var_8] +
lea eax [ebp+70h+var_34] +
mov [ebp+70h+var_74] 7 +
lea ecx [ebp+70h+var_5C] +
or ebx 200h +
push eax  +
lea edx [esi-64h] +
mov [ebp+70h+var_C] ebx +
call sub_425FB0  +
mov [ebp+70h+var_74] 8 +
lea edx [esi-78h] +
or ebx 400h +
lea ecx [ebp+70h+var_70] +
push eax  +
mov [ebp+70h+var_C] ebx +
call sub_426040  +
add esp 8 +
mov [ebp+70h+var_74] 9 +
lea ecx [esi-3Ch] +
or ebx 800h +
mov edx eax +
mov [ebp+70h+var_C] ebx +
call sub_425E40  +
test al al +
jz loc_43B5F4  +
push 1  +
lea ecx [ebp+70h+var_20] +
call sub_432EF0  +
lea eax [ebp+70h+var_20] +
mov [ebp+70h+var_74] 0Ah +
or ebx 1000h +
lea edx [esi-50h] +
push eax  +
lea ecx [ebp+70h+var_90] +
mov [ebp+70h+var_C] ebx +
call sub_425FB0  +
mov [ebp+70h+var_74] 0Bh +
lea edx [esi-78h] +
or ebx 2000h +
lea ecx [ebp+70h+var_A4] +
push eax  +
mov [ebp+70h+var_C] ebx +
call sub_426040  +
add esp 8 +
lea ecx [esi-28h] +
mov edx eax +
or ebx 4000h +
call sub_425E40  +
test al al +
jz loc_43B5F4  +
mov [ebp+70h+var_1] 1 +
jmp loc_43B5F8  +
mov esi [ebp+70h+var_8] +
mov [ebp+70h+var_1] 0 +
test ebx 4000h +
jz loc_43B635  +
mov eax [ebp+70h+var_98] +
and ebx 0FFFFBFFFh +
mov edx [ebp+70h+var_9C] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B62D  +
call sub_4746E8  +
jmp loc_43B632  +
call sub_45B0EB  +
add esp 4 +
test ebx 2000h +
jz loc_43B672  +
mov eax [ebp+70h+var_84] +
and ebx 0FFFFDFFFh +
mov edx [ebp+70h+var_88] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B66A  +
call sub_4746E8  +
jmp loc_43B66F  +
call sub_45B0EB  +
add esp 4 +
test ebx 1000h +
jz loc_43B6AB  +
mov edx [ebp+70h+var_18] +
xor eax eax +
mov edi [ebp+70h+var_14] +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
and ebx 0FFFFEFFFh +
cmp eax 10h +
mov eax [ebp+70h+var_14] +
push eax  +
jb loc_43B6A3  +
call sub_4746E8  +
jmp loc_43B6A8  +
call sub_45B0EB  +
add esp 4 +
test ebx 800h +
jz loc_43B6E8  +
mov eax [ebp+70h+var_64] +
and ebx 0FFFFF7FFh +
mov edx [ebp+70h+var_68] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B6E0  +
call sub_4746E8  +
jmp loc_43B6E5  +
call sub_45B0EB  +
add esp 4 +
test ebx 400h +
jz loc_43B725  +
mov eax [ebp+70h+var_50] +
and ebx 0FFFFFBFFh +
mov edx [ebp+70h+var_54] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B71D  +
call sub_4746E8  +
jmp loc_43B722  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+70h+var_74] 0FFFFFFFFh +
test ebx 200h +
jz loc_43B761  +
mov edx [ebp+70h+var_28] +
xor eax eax +
mov ecx [ebp+70h+var_2C] +
mov edi edx +
stos   +
mov eax [ebp+70h+var_2C] +
and ebx 0FFFFFDFFh +
shl eax 2 +
push edx  +
cmp eax 10h +
jb loc_43B759  +
call sub_4746E8  +
jmp loc_43B75E  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+70h+var_1] 0 +
jz loc_43B814  +
cmp dword_4A291C 0 +
jnz loc_43B783  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_20] offset off_49099C +
mov [ebp+70h+var_18] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_14] eax +
mov [ebp+70h+var_10] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
lea eax [esi-50h] +
mov [ebp+70h+var_74] 0Ch +
or ebx 8000h +
lea edx [esi-14h] +
push eax  +
lea ecx [ebp+70h+var_CC] +
mov [ebp+70h+var_C] ebx +
call sub_425FE0  +
lea ecx [esi-64h] +
mov [ebp+70h+var_74] 0Dh +
push ecx  +
or ebx 10000h +
lea ecx [ebp+70h+var_48] +
mov edx eax +
mov [ebp+70h+var_C] ebx +
call sub_426040  +
add esp 8 +
lea edx [ebp+70h+var_20] +
mov ecx eax +
or ebx 20000h +
call sub_425E40  +
mov [ebp+70h+var_1] 1 +
test al al +
jnz loc_43B818  +
mov [ebp+70h+var_1] 0 +
test ebx 20000h +
jz loc_43B855  +
mov eax [ebp+70h+var_3C] +
and ebx 0FFFDFFFFh +
mov edx [ebp+70h+var_40] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B84D  +
call sub_4746E8  +
jmp loc_43B852  +
call sub_45B0EB  +
add esp 4 +
test ebx 10000h +
jz loc_43B892  +
mov eax [ebp+70h+var_C0] +
and ebx 0FFFEFFFFh +
mov edx [ebp+70h+var_C4] +
mov edi eax +
mov [ebp+70h+var_8] eax +
mov ecx edx +
push [ebp+70h+var_8]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_43B88A  +
call sub_4746E8  +
jmp loc_43B88F  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+70h+var_74] 0FFFFFFFFh +
test ebx 8000h +
jz loc_43B8CB  +
mov ebx [ebp+70h+var_18] +
xor eax eax +
mov edx [ebp+70h+var_14] +
mov ecx ebx +
mov edi edx +
stos   +
lea eax ds:0[ebx*4] +
push edx  +
cmp eax 10h +
jb loc_43B8C3  +
call sub_4746E8  +
jmp loc_43B8C8  +
call sub_45B0EB  +
add esp 4 +
mov eax [ebp+70h+arg_4] +
cmp eax 2 +
jb loc_43B90B  +
cmp [ebp+70h+var_1] 0 +
jz loc_43B907  +
mov ebx [ebp+70h+arg_0] +
lea edi [eax-2] +
push edi  +
lea edx [esi-64h] +
mov ecx ebx +
call sub_447DA0  +
add esp 4 +
test al al +
jz loc_43B907  +
push edi  +
lea edx [esi-50h] +
mov ecx ebx +
call sub_447DA0  +
add esp 4 +
test al al +
jz loc_43B907  +
mov al 1 +
jmp loc_43B90E  +
xor al al +
jmp loc_43B90E  +
mov al [ebp+70h+var_1] +
mov ecx [ebp+70h+var_7C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
lea esp [ebp+70h] +
pop ebp  +
retn 8  +
***
sub esp 5Ch +
and esp 0FFFFFFF8h +
sub esp 58h +
push esi  +
lea esi [ecx-0E4h] +
mov dword ptr [esp+5Ch+var_48] offset loc_438B60 +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edi +
push esi  +
mov dword ptr [esp+64h+var_48+4] 0FFFFFFF8h +
mov dword ptr [esp+64h+var_3C] offset loc_438B50 +
mov dword ptr [esp+64h+var_3C+4] 0FFFFFFF8h +
mov dword ptr [esp+64h+var_30] offset loc_438B40 +
mov dword ptr [esp+64h+var_30+4] 0FFFFFFF8h +
mov dword ptr [esp+64h+var_24] offset loc_438B30 +
mov dword ptr [esp+64h+var_24+4] 0FFFFFFF8h +
mov dword ptr [esp+64h+var_18] offset loc_438B20 +
mov dword ptr [esp+64h+var_18+4] 0FFFFFFF8h +
mov dword ptr [esp+64h+var_C] offset loc_438B10 +
mov dword ptr [esp+64h+var_C+4] 0FFFFFFF8h +
mov [esp+64h+var_54] esi +
mov [esp+64h+var_50] edi +
mov [esp+64h+var_4C] 0 +
call sub_43C800  +
test al al +
jz loc_43BB24  +
mov [esp+60h+var_4C] 1 +
jmp loc_43BB43  +
push offset unk_49FDFC  +
push offset unk_49EEEC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_43BB43  +
push edi  +
lea ecx [esi+34h] +
call sub_439240  +
movq xmm0 [esp+60h+var_48] +
lea ecx [esp+60h+var_54] +
sub esp 0Ch +
mov eax esp +
push offset aMultiplicative  +
movq qword ptr [eax] xmm0 +
sub esp 0Ch +
movq xmm0 [esp+7Ch+var_3C] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aModprime2priva  +
sub esp 0Ch +
movq qword ptr [eax] xmm0 +
movq xmm0 [esp+8Ch+var_30] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aModprime1priva  +
sub esp 0Ch +
movq qword ptr [eax] xmm0 +
movq xmm0 [esp+9Ch+var_24] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aPrivateexponen  +
sub esp 0Ch +
movq qword ptr [eax] xmm0 +
movq xmm0 [esp+0ACh+var_18] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aPrime2  +
sub esp 0Ch +
movq qword ptr [eax] xmm0 +
movq xmm0 [esp+0BCh+var_C] +
mov dword ptr [eax+8] 0 +
mov eax esp +
push offset aPrime1  +
movq qword ptr [eax] xmm0 +
mov dword ptr [eax+8] 0 +
call sub_43C1C0  +
mov ecx eax +
call sub_43C1C0  +
mov ecx eax +
call sub_43C1C0  +
mov ecx eax +
call sub_43C1C0  +
mov ecx eax +
call sub_43C1C0  +
mov ecx eax +
call sub_43C1C0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
push esi  +
push edi  +
cmp byte ptr [ebx+11h] 0 +
jz loc_43BD5D  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
call sub_45233E  +
mov ecx [ebx+0Ch] +
add esp 8 +
mov esi eax +
push 0Bh  +
push offset aThisobject  +
call loc_40FA00  +
cmp byte ptr [esi] 0 +
mov edi eax +
jnz loc_43BD39  +
xor ecx ecx +
jmp loc_43BD49  +
mov ecx esi +
lea edx [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43BD40  +
sub ecx edx +
push ecx  +
push esi  +
mov ecx edi +
call loc_40FA00  +
push 3Bh  +
push 1  +
mov ecx eax +
call loc_40F950  +
cmp byte ptr [ebx+10h] 0 +
jnz loc_43BDF1  +
push 0Bh  +
push offset aThisobject  +
push dword ptr [ebx+4]  +
call sub_45DD60  +
add esp 0Ch +
test eax eax +
jnz loc_43BDF1  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
call sub_45233E  +
mov esi [ebx+4] +
add esp 8 +
lea ecx [esi+0Bh] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_43BDB5  +
test dl dl +
jz loc_43BDB1  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_43BDB5  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_43BD95  +
xor eax eax +
jmp loc_43BDBA  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43BDF1  +
push dword ptr [ebx+8]  +
mov edx offset off_49EEE8 +
mov ecx esi +
call sub_40B510  +
mov esi [ebx] +
add esp 4 +
mov edi [ebx+0Ch] +
lea eax [esi+0Ch] +
push eax  +
lea ecx [edi+0Ch] +
call sub_4330F0  +
lea eax [esi+20h] +
push eax  +
lea ecx [edi+20h] +
call sub_4330F0  +
mov byte ptr [ebx+10h] 1 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+arg_0] +
mov ebx ecx +
lea eax [edi+0Ch] +
push eax  +
lea ecx [ebx+0Ch] +
call sub_4330F0  +
lea eax [edi+20h] +
push eax  +
lea ecx [ebx+20h] +
call sub_4330F0  +
test edi edi +
jz loc_43BE2B  +
lea ebp [edi+38h] +
jmp loc_43BE2D  +
xor ebp ebp +
lea ecx [ebx+44h] +
call loc_4424D0  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebx+44h] +
call loc_442340  +
lea eax [edi+6Ch] +
push eax  +
lea ecx [ebx+6Ch] +
call sub_4330F0  +
lea eax [edi+80h] +
push eax  +
lea ecx [ebx+80h] +
call sub_4330F0  +
lea eax [edi+94h] +
push eax  +
lea ecx [ebx+94h] +
call sub_4330F0  +
lea eax [edi+0A8h] +
push eax  +
lea ecx [ebx+0A8h] +
call sub_4330F0  +
lea eax [edi+0BCh] +
push eax  +
lea ecx [ebx+0BCh] +
call sub_4330F0  +
lea eax [edi+0D0h] +
push eax  +
lea ecx [ebx+0D0h] +
call sub_4330F0  +
pop edi  +
pop esi  +
pop ebp  +
mov eax ebx +
pop ebx  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [esp+10h] +
cmp byte ptr [esi+11h] 0 +
jz loc_43BEF1  +
cmp byte ptr [edi] 0 +
jnz loc_43BEC8  +
xor ecx ecx +
jmp loc_43BED9  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43BED0  +
sub ecx edx +
push ecx  +
mov ecx [esi+0Ch] +
push edi  +
call loc_40FA00  +
push 1  +
push offset unk_490AA4  +
mov ecx eax +
call loc_40FA00  +
cmp byte ptr [esi+10h] 0 +
jnz loc_43BF63  +
mov ecx [esi+4] +
mov eax edi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_43BF20  +
test dl dl +
jz loc_43BF1C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_43BF20  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_43BF00  +
xor eax eax +
jmp loc_43BF25  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43BF63  +
push dword ptr [esi+8]  +
mov edx offset off_4A0FB0 +
mov ecx edi +
call sub_40B510  +
mov edx [esi] +
add esp 4 +
mov eax [esp+1Ch] +
mov ecx [edx+8] +
mov ecx [ecx+eax] +
mov eax [esp+18h] +
add ecx edx +
add eax 8 +
add ecx eax +
call dword ptr [esp+14h]  +
mov ecx [esi+0Ch] +
push eax  +
call sub_4330F0  +
mov byte ptr [esi+10h] 1 +
pop edi  +
mov eax esi +
pop esi  +
pop ecx  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_479B66  +
mov eax large fs:0 +
push eax  +
sub esp 0A4h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+8] 0 +
mov edi [ebp+arg_0] +
jnz loc_43C0DB  +
lea ecx [ebp+var_AC] +
call sub_43C710  +
mov [ebp+var_4] 0 +
lea edx [ebp+var_AC] +
mov ecx [esi+4] +
push edx  +
push offset off_4A0FB0  +
push edi  +
mov eax [ecx] +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_43C08C  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
call sub_45233E  +
add esp 8 +
lea ecx [ebp+var_50] +
push eax  +
call sub_403800  +
push offset aMissingRequire  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_68] +
call sub_410020  +
add esp 4 +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_80] +
call sub_410020  +
add esp 4 +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_98] +
call sub_410020  +
add esp 4 +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov edx [esi] +
lea eax [ebp+var_AC] +
push eax  +
mov eax [ebp+arg_C] +
mov ecx [edx+8] +
mov ecx [ecx+eax] +
mov eax [ebp+arg_8] +
add ecx edx +
add eax 8 +
add ecx eax +
call [ebp+arg_4]  +
mov edx [ebp+var_A4] +
xor eax eax +
mov ebx [ebp+var_A0] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43C0D3  +
call sub_4746E8  +
jmp loc_43C0D8  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esp+0Ch] +
cmp byte ptr [esi+11h] 0 +
jz loc_43C141  +
cmp byte ptr [edi] 0 +
jnz loc_43C117  +
xor ecx ecx +
jmp loc_43C129  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43C120  +
sub ecx edx +
push ecx  +
mov ecx [esi+0Ch] +
push edi  +
call loc_40FA00  +
push 1  +
push offset unk_490AA4  +
mov ecx eax +
call loc_40FA00  +
cmp byte ptr [esi+10h] 0 +
jnz loc_43C1B3  +
mov ecx [esi+4] +
mov eax edi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_43C170  +
test dl dl +
jz loc_43C16C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_43C170  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_43C150  +
xor eax eax +
jmp loc_43C175  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43C1B3  +
push dword ptr [esi+8]  +
mov edx offset off_4A0FB0 +
mov ecx edi +
call sub_40B510  +
mov edx [esi] +
add esp 4 +
mov eax [esp+18h] +
mov ecx [edx+8] +
mov ecx [ecx+eax] +
mov eax [esp+14h] +
add ecx edx +
add eax 8 +
add ecx eax +
call dword ptr [esp+10h]  +
mov ecx [esi+0Ch] +
push eax  +
call sub_4330F0  +
mov byte ptr [esi+10h] 1 +
pop edi  +
mov eax esi +
pop esi  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_479B66  +
mov eax large fs:0 +
push eax  +
sub esp 0A4h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [esi+8] 0 +
mov edi [ebp+arg_0] +
jnz loc_43C32B  +
lea ecx [ebp+var_AC] +
call sub_43C710  +
mov [ebp+var_4] 0 +
lea edx [ebp+var_AC] +
mov ecx [esi+4] +
push edx  +
push offset off_4A0FB0  +
push edi  +
mov eax [ecx] +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_43C2DC  +
push offset unk_4A1C80  +
push offset unk_49FDFC  +
call sub_45233E  +
add esp 8 +
lea ecx [ebp+var_50] +
push eax  +
call sub_403800  +
push offset aMissingRequire  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_68] +
call sub_410020  +
add esp 4 +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_80] +
call sub_410020  +
add esp 4 +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_98] +
call sub_410020  +
add esp 4 +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov edx [esi] +
lea eax [ebp+var_AC] +
push eax  +
mov eax [ebp+arg_C] +
mov ecx [edx+8] +
mov ecx [ecx+eax] +
mov eax [ebp+arg_8] +
add ecx edx +
add eax 8 +
add ecx eax +
call [ebp+arg_4]  +
mov edx [ebp+var_A4] +
xor eax eax +
mov ebx [ebp+var_A0] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_43C323  +
call sub_4746E8  +
jmp loc_43C328  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
and esp 0FFFFFFF8h +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx offset aValuenames +
push edi  +
mov edi [ebp+arg_4] +
mov [esi+8] eax +
mov eax [ebp+arg_C] +
mov [esi+0Ch] eax +
mov eax edi +
mov [esi] ebx +
mov [esi+4] edi +
mov word ptr [esi+10h] 0 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_43C3A0  +
test dl dl +
jz loc_43C39C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_43C3A0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_43C380  +
xor eax eax +
jmp loc_43C3A5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43C440  +
push [ebp+arg_8]  +
mov edx offset off_4A1030 +
mov word ptr [esi+10h] 101h +
mov ecx edi +
call sub_40B510  +
add esp 4 +
push offset unk_49EEEC  +
push offset unk_49FDFC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_43C3EC  +
push [ebp+arg_C]  +
lea ecx [ebx+34h] +
push [ebp+arg_8]  +
push dword ptr [esi+4]  +
call sub_4391A0  +
push offset unk_4A1C80  +
push offset unk_49FDFC  +
call sub_45233E  +
mov ecx [esi+0Ch] +
add esp 8 +
mov edi eax +
push 0Ch  +
push offset aThispointer  +
call loc_40FA00  +
cmp byte ptr [edi] 0 +
mov ebx eax +
jnz loc_43C41A  +
xor ecx ecx +
jmp loc_43C429  +
mov ecx edi +
lea edx [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43C420  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx ebx +
call loc_40FA00  +
push 3Bh  +
push 1  +
mov ecx eax +
call loc_40F950  +
mov ebx [ebp+arg_0] +
cmp byte ptr [esi+10h] 0 +
jnz loc_43C4F7  +
push 0Ch  +
push offset aThispointer  +
push dword ptr [esi+4]  +
call sub_45DD60  +
add esp 0Ch +
test eax eax +
jnz loc_43C4C7  +
push offset unk_4A1C80  +
push offset unk_49FDFC  +
call sub_45233E  +
mov edi [esi+4] +
add esp 8 +
lea ecx [edi+0Ch] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_43C498  +
test dl dl +
jz loc_43C494  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_43C498  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_43C478  +
xor eax eax +
jmp loc_43C49D  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43C4C7  +
push dword ptr [esi+8]  +
mov edx offset off_4A107C +
mov ecx edi +
call sub_40B510  +
mov eax [ebp+arg_C] +
add esp 4 +
mov [eax] ebx +
mov eax esi +
mov byte ptr [esi+10h] 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
cmp byte ptr [esi+10h] 0 +
jnz loc_43C4F7  +
push offset unk_49EEEC  +
push offset unk_49FDFC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_43C4F7  +
push [ebp+arg_C]  +
lea ecx [ebx+34h] +
push [ebp+arg_8]  +
push dword ptr [esi+4]  +
call sub_4391A0  +
mov [esi+10h] al +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax [esp+4] +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
push esi  +
mov esi ecx +
mov ecx offset aValuenames +
push edi  +
mov edi [esp+18h] +
mov [esi] eax +
mov eax [esp+1Ch] +
mov [esi+8] eax +
mov eax edi +
mov [esi+4] edi +
mov [esi+0Ch] ebx +
mov word ptr [esi+10h] 0 +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_43C560  +
test dl dl +
jz loc_43C55C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_43C560  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_43C540  +
xor eax eax +
jmp loc_43C565  +
sbb eax eax +
or eax 1 +
mov ebp [esp+24h] +
test eax eax +
jnz loc_43C621  +
push dword ptr [esp+1Ch]  +
mov edx offset off_4A1030 +
mov word ptr [esi+10h] 101h +
mov ecx edi +
call sub_40B510  +
mov edi [esp+20h] +
add esp 4 +
test ebp ebp +
jz loc_43C59F  +
mov eax [ebp+0] +
mov ecx ebp +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
call dword ptr [eax+4]  +
push offset unk_49EEEC  +
push offset unk_49EEEC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_43C5C6  +
mov ecx [esp+14h] +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
lea ecx [ecx+34h] +
call sub_4391A0  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
call sub_45233E  +
mov ecx [esi+0Ch] +
add esp 8 +
mov edi eax +
push 0Ch  +
push offset aThispointer  +
call loc_40FA00  +
cmp byte ptr [edi] 0 +
mov ebx eax +
jnz loc_43C5F4  +
xor ecx ecx +
jmp loc_43C609  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_43C600  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx ebx +
call loc_40FA00  +
push 3Bh  +
push 1  +
mov ecx eax +
call loc_40F950  +
mov ebx [esp+20h] +
cmp byte ptr [esi+10h] 0 +
jnz loc_43C6D0  +
push 0Ch  +
push offset aThispointer  +
push dword ptr [esi+4]  +
call sub_45DD60  +
add esp 0Ch +
test eax eax +
jnz loc_43C6AE  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
call sub_45233E  +
mov edi [esi+4] +
add esp 8 +
lea ecx [edi+0Ch] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_43C680  +
test dl dl +
jz loc_43C67C  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_43C680  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_43C660  +
xor eax eax +
jmp loc_43C685  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_43C6AE  +
push dword ptr [esi+8]  +
mov edx offset off_4A10AC +
mov ecx edi +
call sub_40B510  +
mov eax [esp+18h] +
add esp 4 +
mov [ebx] eax +
mov eax esi +
mov byte ptr [esi+10h] 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 14h  +
***
cmp byte ptr [esi+10h] 0 +
jnz loc_43C6D0  +
mov edi [esp+1Ch] +
test ebp ebp +
jz loc_43C6D4  +
mov eax [ebp+0] +
mov ecx ebp +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
mov [esi+10h] al +
jmp loc_43C6D4  +
mov edi [esp+1Ch] +
cmp byte ptr [esi+10h] 0 +
jnz loc_43C704  +
push offset unk_49EEEC  +
push offset unk_49EEEC  +
call sub_452302  +
add esp 8 +
test eax eax +
jz loc_43C704  +
mov ecx [esp+14h] +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
lea ecx [ecx+34h] +
call sub_4391A0  +
mov [esi+10h] al +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
retn 14h  +
***
sub esp 8 +
cmp dword_4A291C 0 +
push esi  +
mov esi ecx +
mov [esp+0Ch+var_4] 0 +
mov [esp+0Ch+var_8] esi +
jnz loc_43C73A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax esi +
pop esi  +
add esp 8 +
retn   +
***
push ebp  +
push esi  +
push edi  +
push 14h  +
mov esi ecx +
call sub_44FE54  +
mov bl [esp+18h+arg_8] +
mov edi eax +
mov eax [esp+18h+arg_4] +
add esp 4 +
mov edx [esp+14h+arg_0] +
mov [esp+14h+var_4] edi +
mov [edi+4] edx +
mov [edi+8] bl +
mov byte ptr [edi+9] 0 +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_490AC4 +
mov eax [eax] +
mov [edi+10h] eax +
mov ebp [esi+4] +
mov dword ptr [esi+4] 0 +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_43C7D6  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [edi+0Ch] ebp +
mov ecx [esi+4] +
test ecx ecx +
jz loc_43C7E6  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+4] edi +
mov eax esi +
pop edi  +
mov [esi+8] bl +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_479BA0  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_2C] +
push 0Bh  +
push offset aThisobject  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_402170  +
push offset unk_4A1C80  +
push offset unk_49FDFC  +
mov [ebp+var_4] 0 +
call sub_45233E  +
push eax  +
lea edx [ebp+var_2C] +
lea ecx [ebp+var_44] +
call sub_410020  +
add esp 0Ch +
mov ecx eax +
mov byte ptr [ebp+var_4] 1 +
cmp dword ptr [ecx+14h] 10h +
jb loc_43C884  +
mov ecx [ecx] +
mov eax [esi] +
push edi  +
push offset off_49FDF8  +
push ecx  +
mov eax [eax+4] +
mov ecx esi +
call eax  +
mov ecx [ebp+var_30] +
mov bl al +
cmp ecx 10h +
jb loc_43C8AB  +
inc ecx  +
push ecx  +
push [ebp+var_44]  +
lea ecx [ebp+var_44] +
call loc_402500  +
mov eax [ebp+var_18] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
cmp eax 10h +
jb loc_43C8D2  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479BA0  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_2C] +
push 0Bh  +
push offset aThisobject  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_402170  +
push offset unk_4A1C80  +
push offset unk_49EEEC  +
mov [ebp+var_4] 0 +
call sub_45233E  +
push eax  +
lea edx [ebp+var_2C] +
lea ecx [ebp+var_44] +
call sub_410020  +
add esp 0Ch +
mov ecx eax +
mov byte ptr [ebp+var_4] 1 +
cmp dword ptr [ecx+14h] 10h +
jb loc_43C984  +
mov ecx [ecx] +
mov eax [esi] +
push edi  +
push offset off_49EEE8  +
push ecx  +
mov eax [eax+4] +
mov ecx esi +
call eax  +
mov ecx [ebp+var_30] +
mov bl al +
cmp ecx 10h +
jb loc_43C9AB  +
inc ecx  +
push ecx  +
push [ebp+var_44]  +
lea ecx [ebp+var_44] +
call loc_402500  +
mov eax [ebp+var_18] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
cmp eax 10h +
jb loc_43C9D2  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax ecx +
mov ecx [esp+arg_0] +
test ecx ecx +
jz locret_43CA13  +
mov [esp+arg_0] eax +
jmp sub_43CA80  +
retn 4  +
***
cmp dword_4A291C 0 +
push esi  +
push edi  +
mov edi [esp+8+arg_8] +
mov esi ecx +
jz loc_43CA5D  +
push offset unk_49F8D8  +
push offset unk_4A0F2C  +
call sub_452302  +
add esp 8 +
test eax eax +
jnz loc_43CA5D  +
lea eax [esi+10h] +
push eax  +
push edi  +
push [esp+10h+arg_4]  +
call dword_4A291C  +
add esp 0Ch +
test al al +
jnz loc_43CA77  +
push [esp+8+arg_4]  +
mov ecx [esp+0Ch+arg_0] +
mov edx offset off_4A0F28 +
call sub_40B510  +
mov eax [esi+10h] +
add esp 4 +
mov [edi] eax +
pop edi  +
pop esi  +
retn 0Ch  +
***
mov esi ecx +
push edi  +
mov edi [esp+4+arg_0] +
mov dword ptr [esi] offset off_48CF48 +
mov eax [edi+4] +
mov [esi+4] eax +
movzx eax byte ptr [edi+8] +
mov [esi+8] al +
movzx eax byte ptr [edi+9] +
mov [esi+9] al +
mov dword ptr [esi+0Ch] 0 +
mov ebx [edi+0Ch] +
mov dword ptr [edi+0Ch] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43CAC1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [esi+0Ch] ebx +
mov byte ptr [edi+9] 1 +
mov dword ptr [esi] offset off_490AC4 +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479BDC  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3AC8 +
cmp eax [ecx+4] +
jle loc_43CB58  +
push offset dword_4A3AC8  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AC8 0FFFFFFFFh +
jnz loc_43CB58  +
push offset loc_47AF40  +
mov dword_4A3ACC offset off_49056C +
call sub_450116  +
push offset dword_4A3AC8  +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_450220  +
add esp 8 +
mov eax [esi] +
mov ecx esi +
push 0  +
push offset dword_4A3ACC  +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov eax [ecx] +
jmp dword ptr [eax+0CCh]  +
***
cmp [esp+arg_8] 0 +
push [esp+arg_4]  +
mov eax [ecx] +
push [esp+4+arg_0]  +
jz loc_43CC0A  +
call dword ptr [eax+0D0h]  +
retn 0Ch  +
call dword ptr [eax+0CCh]  +
retn 0Ch  +
***
push [esp+8+arg_0]  +
mov esi ecx +
mov [esp+0Ch+var_4] esi +
call sub_40B850  +
mov dword ptr [esi] offset off_491154 +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push [esp+4+arg_0]  +
mov [esp+8+var_4] 0 +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 4  +
***
mov ecx [ecx+24h] +
mov eax [ecx] +
jmp dword ptr [eax+10h]  +
***
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+0Ch]  +
***
mov ecx [esi+0Ch] +
mov ecx [esi+0Ch] +
cmp byte ptr [ecx+10h] 0 +
jz locret_43CD08  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov ecx eax +
mov edx [eax] +
jmp dword ptr [edx+28h]  +
retn 8  +
***
cmp byte ptr [ecx+10h] 0 +
jz loc_43CD2A  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+2Ch] +
jmp eax  +
xor al al +
retn 0Ch  +
***
cmp byte ptr [ecx+10h] 0 +
jz loc_43CD4A  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+30h] +
jmp eax  +
xor al al +
retn 8  +
***
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+84h]  +
***
mov ecx [esi+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
push [esp+arg_10]  +
xor ecx ecx +
cmp [esi+10h] cl +
mov edx [eax] +
cmovnz ecx [esp+4+arg_C] +
push ecx  +
push [esp+8+arg_8]  +
mov ecx eax +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call dword ptr [edx+88h]  +
pop esi  +
retn 14h  +
***
mov ecx [esi+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
push [esp+arg_10]  +
xor ecx ecx +
cmp [esi+10h] cl +
mov edx [eax] +
cmovnz ecx [esp+4+arg_C] +
push ecx  +
push [esp+8+arg_8]  +
mov ecx eax +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call dword ptr [edx+8Ch]  +
pop esi  +
retn 14h  +
***
cmp byte ptr [ecx+10h] 0 +
jz loc_43CE0D  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+90h] +
jmp eax  +
xor al al +
retn 10h  +
***
cmp byte ptr [ecx+10h] 0 +
jz loc_43CE3D  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
mov eax [edx+94h] +
jmp eax  +
xor al al +
retn 0Ch  +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_43CE65  +
push 14h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_43CF39  +
mov eax [esi] +
push edi  +
call dword ptr [eax+0B0h]  +
mov ecx [esi+0Ch] +
mov edi eax +
test ecx ecx +
jz loc_43CF31  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov [esi+0Ch] edi +
mov eax edi +
pop edi  +
pop esi  +
retn   +
mov eax [esi+0Ch] +
pop esi  +
retn   +
***
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43CF50  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [esp+8] +
mov [esi+0Ch] eax +
pop esi  +
retn 4  +
***
mov eax [ecx] +
call dword ptr [eax+0A0h]  +
push [esp+arg_14]  +
mov ecx eax +
push [esp+4+arg_10]  +
mov edx [eax] +
push [esp+8+arg_C]  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call dword ptr [edx+80h]  +
retn 18h  +
***
mov eax [ecx] +
call dword ptr [eax+0A4h]  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+7Ch]  +
***
push [esp+arg_0]  +
mov esi ecx +
mov eax [esi] +
mov dword ptr [esi+14h] 0 +
call dword ptr [eax+1Ch]  +
mov ebx [esp+10h] +
test ebx ebx +
jz loc_43CFD6  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
pop esi  +
lea ecx [ebx-1] +
pop ebx  +
mov edx [eax] +
mov [esp+8] ecx +
mov ecx eax +
jmp dword ptr [edx+28h]  +
pop esi  +
pop ebx  +
retn 8  +
***
push edi  +
mov eax [esi+14h] +
sub eax 0 +
jz loc_43CFF8  +
sub eax 1 +
jz loc_43D00B  +
pop edi  +
xor al al +
pop esi  +
retn 0Ch  +
mov eax [esi] +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_0]  +
mov eax [eax+20h] +
call eax  +
test al al +
jnz loc_43D045  +
mov edi [esp+10h] +
test edi edi +
jz loc_43D04C  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push [esp+8+arg_8]  +
lea ecx [edi-1] +
push ecx  +
mov edx [eax] +
mov ecx eax +
push [esp+10h+arg_0]  +
push offset dword_4A314C  +
mov eax [edx+90h] +
call eax  +
test al al +
jz loc_43D04C  +
mov dword ptr [esi+14h] 1 +
pop edi  +
mov al 1 +
pop esi  +
retn 0Ch  +
pop edi  +
mov dword ptr [esi+14h] 0 +
xor al al +
pop esi  +
retn 0Ch  +
***
push edi  +
mov eax [esi+14h] +
sub eax 0 +
jz loc_43D078  +
sub eax 1 +
jz loc_43D087  +
pop edi  +
xor al al +
pop esi  +
retn 8  +
mov eax [esi] +
push [esp+4+arg_4]  +
mov eax [eax+24h] +
call eax  +
test al al +
jnz loc_43D0CD  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+0B8h] +
call eax  +
test al al +
jz loc_43D0DB  +
mov edi [esp+4+arg_0] +
test edi edi +
jz loc_43D0D4  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push [esp+4+arg_4]  +
lea ecx [edi-1] +
push ecx  +
mov edx [eax] +
mov ecx eax +
push offset dword_4A314C  +
mov eax [edx+94h] +
call eax  +
test al al +
jz loc_43D0D4  +
mov dword ptr [esi+14h] 1 +
pop edi  +
mov al 1 +
pop esi  +
retn 8  +
mov dword ptr [esi+14h] 0 +
pop edi  +
xor al al +
pop esi  +
retn 8  +
***
push edi  +
mov edi [esi+14h] +
mov eax [esi+0Ch] +
cmp edi eax +
jb loc_43D124  +
push ebx  +
push ebp  +
mov ebp [esi+18h] +
lea edx [eax+ebp] +
mov [esi+18h] edx +
mov ecx [esi+4] +
mov ebx [esi+8] +
add ecx ebx +
cmp edx ecx +
jnz loc_43D118  +
mov [esi+18h] ebx +
sub edi eax +
mov eax ebp +
pop ebp  +
pop ebx  +
mov [esi+14h] edi +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov ebx ecx +
lea edx [esp+8+var_4] +
push esi  +
mov esi [esp+0Ch+arg_0] +
mov ecx esi +
push edi  +
mov eax [ebx+8] +
lea edi [ebx+14h] +
sub eax [ebx+18h] +
add eax [ebx+4] +
cmp [edi] eax +
mov [esp+10h+var_4] eax +
cmovb edx edi +
mov eax [edx] +
cmp eax [esi] +
cmovb ecx edx +
mov eax [ecx] +
mov [esi] eax +
mov edx [ebx+18h] +
add eax edx +
mov [ebx+18h] eax +
mov ecx [esi] +
sub [edi] ecx +
jz loc_43D178  +
mov ecx [ebx+8] +
add ecx [ebx+4] +
cmp eax ecx +
jnz loc_43D17E  +
mov eax [ebx+8] +
mov [ebx+18h] eax +
pop edi  +
pop esi  +
mov eax edx +
pop ebx  +
pop ecx  +
retn 4  +
***
sub esp 8 +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+14h] +
lea ebp [edi+14h] +
mov [esp+18h+var_4] eax +
lea eax [esp+18h+var_8] +
mov ecx [edi+4] +
sub ecx [edi+18h] +
add ecx [edi+8] +
mov ebx [edi+10h] +
imul ebx [edi+0Ch] +
cmp [ebp+0] ecx +
mov edx [edi+18h] +
cmovb eax ebp +
mov [esp+18h+var_8] ecx +
cmp [eax] ebx +
cmovb ebx [eax] +
sub [ebp+0] ebx +
lea ecx [edx+ebx] +
mov [edi+18h] ecx +
jz loc_43D1DE  +
mov eax [edi+4] +
add eax [edi+8] +
cmp ecx eax +
jnz loc_43D1E4  +
mov eax [edi+8] +
mov [edi+18h] eax +
mov esi [esp+18h+arg_0] +
push ebx  +
push edx  +
push esi  +
call loc_452BD0  +
push dword ptr [ebp+0]  +
lea ecx [ebx+esi] +
push dword ptr [edi+18h]  +
push ecx  +
call loc_452BD0  +
mov eax [esp+30h+var_4] +
add esp 18h +
mov dword ptr [ebp+0] 0 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn 4  +
***
push esi  +
push 0FFFFFFFFh  +
push offset sub_476946  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi+30h] +
xor al al +
mov ecx [esi+2Ch] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0 +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43D2CF  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_43D2E0  +
push 44h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_479C63  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-54h] edi +
mov eax [ebp+14h] +
mov [edi+0Ch] eax +
mov [ebp-58h] edi +
mov dword ptr [edi+14h] 0 +
mov dword ptr [ebp-4] 2 +
lea ebx [edi+28h] +
mov dword ptr [edi] offset off_490F64 +
xor ecx ecx +
mov dword ptr [edi+4] offset off_491048 +
mov dword ptr [edi+18h] 0 +
mov dword ptr [edi+1Ch] 1 +
mov dword ptr [edi+20h] 0 +
mov byte ptr [edi+24h] 0 +
mov [ebp-54h] ebx +
mov dword ptr [ebx+4] 0 +
call sub_40FD30  +
mov dword ptr [ebx+8] 0 +
mov byte ptr [ebp-4] 3 +
cmp dword ptr [edi+1Ch] 1 +
jb loc_43D3E3  +
mov esi [edi+18h] +
mov edx [ebx+8] +
push 0  +
push esi  +
push dword ptr [ebx+4]  +
call sub_410310  +
mov [ebx+8] eax +
add esp 0Ch +
mov [ebx+4] esi +
mov eax edi +
mov ecx [ebx+8] +
mov dword ptr [ebx+0Ch] 1 +
mov [ebx+10h] esi +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 2Ch  +
push offset aFilterwithbuff  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 0Fh +
mov dword ptr [ebp-40h] 0 +
mov byte ptr [ebp-50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-50h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 1 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 4 +
push eax  +
mov dword ptr [ebp-38h] offset off_48C750 +
call sub_452780  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_479CA0  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edx [ebx] +
lea eax [ebx+20h] +
mov esi [ebp+8] +
lea edi [ebx+1Ch] +
push eax  +
push edi  +
lea ecx [ebx+18h] +
push ecx  +
push esi  +
mov ecx ebx +
call dword ptr [edx+0BCh]  +
cmp dword ptr [edi] 1 +
jb loc_43D4FF  +
mov esi [ebx+18h] +
mov edx [ebx+30h] +
push 0  +
push esi  +
push dword ptr [ebx+2Ch]  +
call sub_410310  +
mov [ebx+30h] eax +
add esp 0Ch +
mov [ebx+2Ch] esi +
mov eax [ebx+30h] +
mov dword ptr [ebx+34h] 1 +
mov [ebx+38h] esi +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+40h] eax +
mov byte ptr [ebx+24h] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 2Ch  +
push offset aFilterwithbuff  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 0Fh +
mov dword ptr [ebp-40h] 0 +
mov byte ptr [ebp-50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-50h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 1 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-38h] offset off_48C750 +
call sub_452780  +
push 0FFFFFFFFh  +
push offset loc_479CD8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp [ebp+arg_4] 0 +
jnz loc_43D5F3  +
push 17h  +
push offset aFilterwithbu_0  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402170  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_50] +
call sub_43E420  +
push offset unk_49C894  +
lea eax [ebp+var_50] +
push eax  +
call sub_452780  +
cmp [ebp+arg_0] 0 +
jz loc_43D5FE  +
call sub_43D9F0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0D8h]  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_479D10  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
cmp byte ptr [ebp+14h] 0 +
mov eax [ebp+8] +
mov [ebp-54h] eax +
jnz loc_43D6AB  +
push 17h  +
push offset aFilterwithbu_0  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402170  +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea ecx [ebp-50h] +
call sub_43E420  +
push offset unk_49C894  +
lea eax [ebp-50h] +
push eax  +
call sub_452780  +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_43D8EA  +
cmp byte ptr [esi+24h] 0 +
mov edx [esi+3Ch] +
lea ebx [edx+ecx] +
mov [ebp-58h] ebx +
jnz loc_43D761  +
mov ecx [esi+18h] +
cmp ebx ecx +
jb loc_43D757  +
sub ecx edx +
push ecx  +
mov [ebp-5Ch] ecx +
lea ecx [esi+28h] +
push eax  +
call sub_43D220  +
mov edi [esi] +
lea eax [esi+18h] +
push eax  +
lea ecx [esi+28h] +
call sub_43D130  +
push eax  +
mov ecx esi +
call dword ptr [edi+0C4h]  +
mov ecx [esi+1Ch] +
xor edx edx +
mov eax [esi+20h] +
push 0  +
mov [ebp-60h] ecx +
lea eax [eax+ecx*2] +
add eax 0FFFFFFFEh +
div  ecx +
mov edx [esi+30h] +
mov ebx eax +
mov edi ebx +
imul edi ecx +
push edi  +
push dword ptr [esi+2Ch]  +
call sub_410310  +
mov [esi+30h] eax +
add esp 0Ch +
mov eax [ebp-60h] +
mov [esi+2Ch] edi +
mov [esi+34h] eax +
mov eax [esi+30h] +
mov [esi+40h] eax +
mov eax [ebp-54h] +
add eax [ebp-5Ch] +
mov [esi+38h] ebx +
mov ebx [ebp-58h] +
mov dword ptr [esi+3Ch] 0 +
sub ebx [esi+18h] +
mov [ebp-54h] eax +
mov [ebp-58h] ebx +
mov byte ptr [esi+24h] 1 +
cmp byte ptr [esi+24h] 0 +
jz loc_43D8DA  +
mov ecx [esi+1Ch] +
lea edi [esi+1Ch] +
cmp ecx 1 +
jnz loc_43D802  +
cmp ebx [esi+20h] +
jbe loc_43D7D9  +
cmp dword ptr [esi+3Ch] 0 +
jbe loc_43D7D9  +
mov eax [esi+30h] +
lea edx [esi+3Ch] +
sub eax [esi+40h] +
lea ecx [ebp-5Ch] +
add eax [esi+2Ch] +
mov edi ebx +
sub edi [esi+20h] +
cmp [edx] eax +
mov [ebp-5Ch] eax +
lea eax [ebp-60h] +
cmovb ecx edx +
mov [ebp-60h] edi +
cmp [ecx] edi +
cmovb eax ecx +
mov edi [eax] +
sub [edx] edi +
mov eax [esi+40h] +
mov [ebp-5Ch] eax +
lea ecx [eax+edi] +
mov [esi+40h] ecx +
jz loc_43D7BE  +
mov eax [esi+30h] +
add eax [esi+2Ch] +
cmp ecx eax +
jnz loc_43D7C4  +
mov eax [esi+30h] +
mov [esi+40h] eax +
mov eax [esi] +
mov ecx esi +
push edi  +
push dword ptr [ebp-5Ch]  +
call dword ptr [eax+0D0h]  +
sub ebx edi +
cmp ebx [esi+20h] +
ja loc_43D775  +
mov eax [esi+20h] +
cmp ebx eax +
jbe loc_43D8DA  +
mov edi ebx +
sub edi eax +
push dword ptr [ebp+18h]  +
mov ecx esi +
push edi  +
push dword ptr [ebp-54h]  +
call sub_43CBF0  +
mov eax [ebp-54h] +
add eax edi +
sub ebx edi +
jmp loc_43D8DD  +
mov eax [esi+20h] +
add eax ecx +
cmp ebx eax +
jb loc_43D86E  +
cmp [esi+3Ch] ecx +
jb loc_43D86B  +
mov edx [esi+3Ch] +
mov edi [esi+34h] +
cmp edx edi +
jb loc_43D84B  +
mov eax [esi+40h] +
mov [ebp-5Ch] eax +
lea ecx [eax+edi] +
mov [esi+40h] ecx +
mov eax [esi+30h] +
mov [ebp-58h] eax +
mov eax [esi+2Ch] +
add eax [ebp-58h] +
cmp ecx eax +
jnz loc_43D841  +
mov eax [ebp-58h] +
mov [esi+40h] eax +
mov ecx [ebp-5Ch] +
sub edx edi +
mov [esi+3Ch] edx +
jmp loc_43D84D  +
xor ecx ecx +
push dword ptr [esi+1Ch]  +
mov eax [esi] +
lea edi [esi+1Ch] +
push ecx  +
mov ecx esi +
call dword ptr [eax+0D0h]  +
mov ecx [edi] +
sub ebx ecx +
mov eax [esi+20h] +
add eax ecx +
cmp ebx eax +
jnb loc_43D810  +
mov [ebp-58h] ebx +
mov eax [esi+20h] +
mov ecx [edi] +
add eax ecx +
cmp ebx eax +
jb loc_43D8B8  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_43D8B8  +
mov edi [ebp-54h] +
sub ecx eax +
push ecx  +
mov [ebp-5Ch] ecx +
lea ecx [esi+28h] +
push edi  +
call sub_43D220  +
add edi [ebp-5Ch] +
lea ecx [esi+28h] +
push dword ptr [esi+1Ch]  +
mov [ebp-54h] edi +
mov edi [esi] +
call sub_43D0F0  +
push eax  +
mov ecx esi +
call dword ptr [edi+0D0h]  +
mov ebx [ebp-58h] +
lea edi [esi+1Ch] +
mov ecx [edi] +
sub ebx ecx +
mov edx [esi+20h] +
lea eax [edx+ecx] +
cmp ebx eax +
jb loc_43D8DA  +
mov eax ebx +
lea ecx [ebp-5Ch] +
sub eax edx +
mov edx edi +
mov [ebp-5Ch] eax +
call sub_422E80  +
mov edi eax +
jmp loc_43D7E8  +
***
mov eax [ebp-54h] +
sub ebx [esi+3Ch] +
lea ecx [esi+28h] +
push ebx  +
push eax  +
call sub_43D220  +
cmp dword ptr [ebp+10h] 0 +
jz loc_43D9C4  +
cmp byte ptr [esi+24h] 0 +
jnz loc_43D90C  +
cmp dword ptr [esi+18h] 0 +
jnz loc_43D90C  +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax+0C4h]  +
mov edi [esi+3Ch] +
mov ecx edi +
mov [ebp-18h] edi +
call sub_40FD30  +
test edi edi +
jnz loc_43D921  +
xor eax eax +
jmp loc_43D928  +
mov ecx edi +
call loc_43F720  +
mov [ebp-58h] eax +
mov [ebp-14h] eax +
push eax  +
lea ecx [esi+28h] +
mov dword ptr [ebp-4] 1 +
call sub_43D190  +
mov eax [esi] +
mov ecx esi +
push edi  +
push dword ptr [ebp-58h]  +
call dword ptr [eax+0D4h]  +
mov edi [esi+18h] +
push 0  +
mov byte ptr [esi+24h] 0 +
mov edx [esi+30h] +
push edi  +
push dword ptr [esi+2Ch]  +
call sub_410310  +
mov [esi+2Ch] edi +
add esp 0Ch +
mov [esi+30h] eax +
mov ecx esi +
mov eax [esi+30h] +
mov [esi+38h] edi +
mov edi [ebp+10h] +
mov dword ptr [esi+34h] 1 +
dec edi  +
mov dword ptr [esi+3Ch] 0 +
mov [esi+40h] eax +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push dword ptr [ebp+14h]  +
mov ecx eax +
push edi  +
mov edx [eax] +
push 0  +
push 0  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
mov edx [ebp-58h] +
neg eax  +
mov ecx [ebp-18h] +
mov edi edx +
sbb eax eax +
neg eax  +
mov [esi+14h] eax +
xor al al +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov esi ecx +
cmp byte ptr [esi+24h] 0 +
jz loc_43DAB2  +
mov eax [esi+1Ch] +
push ebx  +
push edi  +
cmp eax 1 +
jbe loc_43DA59  +
cmp [esi+3Ch] eax +
jb loc_43DAB0  +
push ebp  +
mov edx [esi+3Ch] +
mov edi [esi+34h] +
cmp edx edi +
jb loc_43DA3B  +
mov ebx [esi+40h] +
lea ecx [ebx+edi] +
mov [esi+40h] ecx +
mov eax [esi+2Ch] +
mov ebp [esi+30h] +
add eax ebp +
cmp ecx eax +
jnz loc_43DA34  +
mov [esi+40h] ebp +
sub edx edi +
mov [esi+3Ch] edx +
jmp loc_43DA3D  +
xor ebx ebx +
push dword ptr [esi+1Ch]  +
mov eax [esi] +
mov ecx esi +
push ebx  +
call dword ptr [eax+0D0h]  +
mov eax [esi+3Ch] +
cmp eax [esi+1Ch] +
jnb loc_43DA12  +
pop ebp  +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
mov edx [esi+3Ch] +
test edx edx +
jz loc_43DAB0  +
lea ebx [esi+3Ch] +
mov ecx [esi+30h] +
lea eax [esp+10h+var_4] +
sub ecx [esi+40h] +
add ecx [esi+2Ch] +
cmp [ebx] ecx +
mov edi [esi+40h] +
cmovb eax ebx +
mov [esp+10h+var_4] ecx +
mov eax [eax] +
cmp eax edx +
cmovb edx eax +
sub [ebx] edx +
lea ecx [edi+edx] +
mov [esi+40h] ecx +
jz loc_43DA97  +
mov eax [esi+30h] +
add eax [esi+2Ch] +
cmp ecx eax +
jnz loc_43DA9D  +
mov eax [esi+30h] +
mov [esi+40h] eax +
mov eax [esi] +
mov ecx esi +
push edx  +
push edi  +
call dword ptr [eax+0D0h]  +
mov edx [esi+3Ch] +
test edx edx +
jnz loc_43DA63  +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_43DAE5  +
push edi  +
mov edi [esp+8+arg_0] +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+0C8h]  +
add edi [esi+1Ch] +
sub ebx [esi+1Ch] +
jnz loc_43DAD1  +
pop edi  +
pop esi  +
pop ebx  +
retn 8  +
***
push 0FFFFFFFFh  +
mov ecx [ecx+44h] +
mov ecx [ecx+44h] +
test ecx ecx +
jz locret_43DBC8  +
mov eax [ecx] +
push 1  +
push 0  +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call dword ptr [eax+14h]  +
retn 8  +
***
mov ecx [ecx+44h] +
test ecx ecx +
jz locret_43DBE8  +
mov eax [ecx] +
push 1  +
push 0  +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call dword ptr [eax+18h]  +
retn 8  +
***
push edi  +
mov edi [esp+4+arg_4] +
mov edx [esi+0Ch] +
add edx [esi+18h] +
cmp edx [esp+4+arg_0] +
jz loc_43DC31  +
mov ecx [esi+10h] +
xor eax eax +
cmp eax [esi+1Ch] +
jb loc_43DC1A  +
ja loc_43DC15  +
cmp ecx [esi+18h] +
jbe loc_43DC1A  +
sub ecx [esi+18h] +
jmp loc_43DC1C  +
xor ecx ecx +
cmp ecx edi +
mov eax edi +
cmovb eax ecx +
push eax  +
push [esp+8+arg_0]  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
add [esi+18h] edi +
pop edi  +
adc dword ptr [esi+1Ch] 0 +
xor eax eax +
pop esi  +
retn 10h  +
***
mov edx [ecx+10h] +
xor eax eax +
sub esp 8 +
cmp eax [ecx+1Ch] +
jb loc_43DC70  +
ja loc_43DC54  +
cmp edx [ecx+18h] +
jbe loc_43DC70  +
sub edx [ecx+18h] +
sbb eax [ecx+1Ch] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_0] +
mov [eax] edx +
mov eax [ecx+0Ch] +
add eax [ecx+18h] +
add esp 8 +
retn 4  +
mov eax [esp+8+arg_0] +
xorps xmm0 xmm0 +
movlpd oword ptr [esp] xmm0 +
mov edx [esp+8+var_8] +
mov [eax] edx +
mov eax [ecx+0Ch] +
add eax [ecx+18h] +
add esp 8 +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479CA0  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [ebp+arg_0] +
lea edx [ebp+var_58] +
push edx  +
push offset off_4A1248  +
push offset aOutputbuffer  +
mov eax [ecx] +
mov [ebp+var_58] 0 +
mov [ebp+var_54] 0 +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_43DD61  +
push 28h  +
push offset aArraysinkMissi  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] al +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_50] +
push 0  +
push eax  +
lea ecx [ebp+var_28] +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov eax [ebp+var_58] +
mov [esi+0Ch] eax +
mov eax [ebp+var_54] +
mov [esi+10h] eax +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi ecx +
xor eax eax +
mov ecx [edi+10h] +
cmp eax [edi+1Ch] +
jb loc_43DDBA  +
ja loc_43DDB5  +
cmp ecx [edi+18h] +
jbe loc_43DDBA  +
sub ecx [edi+18h] +
jmp loc_43DDBC  +
xor ecx ecx +
mov esi [esp+arg_4] +
mov eax esi +
mov edx [esp+arg_0] +
cmp ecx esi +
cmovb eax ecx +
mov ecx [edi+0Ch] +
add ecx [edi+18h] +
push eax  +
call loc_43F120  +
add esp 4 +
add [edi+18h] esi +
adc dword ptr [edi+1Ch] 0 +
xor eax eax +
pop edi  +
pop esi  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_479DA9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi+0Ch] 0 +
mov [ebp+var_14] edi +
mov dword ptr [edi+14h] 0 +
lea esi [edi+18h] +
mov [ebp+var_4] 2 +
xor ecx ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+4] 0 +
call sub_40FD30  +
mov dword ptr [esi+8] 0 +
mov eax [ebp+arg_0] +
lea ecx [edi+34h] +
mov byte ptr [ebp+var_4] 3 +
mov dword ptr [edi] offset off_490DB0 +
mov dword ptr [edi+4] offset off_490DA0 +
mov [edi+24h] eax +
mov byte ptr [edi+28h] 0 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_43DE85  +
mov eax [ecx] +
jmp loc_43DE87  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push offset dword_4A314C  +
mov byte ptr [eax] 0 +
call loc_402270  +
lea ecx [edi+4Ch] +
mov byte ptr [ebp+var_4] 4 +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_43DEB7  +
mov eax [ecx] +
jmp loc_43DEB9  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push offset dword_4A314C  +
mov byte ptr [eax] 0 +
call loc_402270  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [edi+24h] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov [edi+2Ch] eax +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_43DEEE  +
mov edx [ecx] +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+arg_4] +
mov [edi+0Ch] ecx +
jmp loc_43DEF4  +
mov eax [ebp+arg_4] +
mov [edi+0Ch] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
call sub_4231F0  +
mov esi [esp+5+arg_0] +
push edi  +
mov edi ecx +
mov byte ptr [esp+9+var_1] 0 +
lea ecx [esp+9+var_1] +
mov eax [esi] +
push ecx  +
push offset off_49F374  +
push offset aPutmessage  +
mov ecx esi +
call dword ptr [eax+4]  +
mov al byte ptr [esp+9+var_1] +
lea ecx [esp+9+arg_0] +
push ecx  +
mov [edi+28h] al +
mov ecx esi +
mov eax [esi] +
push offset off_49F8D4  +
push offset aTruncateddiges  +
mov [esp+15h+arg_0] 0FFFFFFFFh +
call dword ptr [eax+4]  +
mov eax [esp+9+arg_0] +
test eax eax +
jns loc_43DF89  +
mov ecx [edi+24h] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov [edi+2Ch] eax +
pop edi  +
pop esi  +
pop ecx  +
retn 4  +
***
push ebp  +
mov ebp [esp+4+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi [esp+0Ch+arg_4] +
mov eax [esi+14h] +
sub eax 0 +
jz loc_43DFD1  +
sub eax 1 +
jz loc_43DFDE  +
sub eax 1 +
jz loc_43E060  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn 10h  +
cmp byte ptr [esi+28h] 0 +
mov dword ptr [esi+10h] 0 +
jz loc_43E01E  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push [esp+0Ch+arg_C]  +
lea ecx [esi+34h] +
push 0  +
mov edx [eax] +
push edi  +
push ebp  +
push ecx  +
mov ecx eax +
call dword ptr [edx+88h]  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi+14h] ecx +
test eax eax +
jz loc_43E01E  +
sub edi [esi+10h] +
mov eax 1 +
cmp edi eax +
cmova eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov ecx [esi+24h] +
push edi  +
push ebp  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
test ebx ebx +
jz loc_43DFC8  +
mov eax [esi+2Ch] +
lea ecx [esp+0Ch+arg_8] +
push ecx  +
push eax  +
push eax  +
mov [esp+18h+arg_8] eax +
mov ecx esi +
lea eax [esi+4Ch] +
push eax  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push eax  +
lea ecx [esi+18h] +
call sub_43CB80  +
mov ecx [esi+24h] +
push dword ptr [esi+2Ch]  +
mov [esi+30h] eax +
push eax  +
mov edx [ecx] +
call dword ptr [edx+38h]  +
mov edi [esi+2Ch] +
mov ebp [esi+30h] +
test ebx ebx +
jz loc_43E06B  +
dec ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push dword ptr [esp+20h]  +
lea ecx [esi+4Ch] +
push ebx  +
mov edx [eax] +
push edi  +
push ebp  +
push ecx  +
mov ecx eax +
call dword ptr [edx+88h]  +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
mov [esi+14h] ecx +
test eax eax +
jz loc_43DFC8  +
mov ecx [esi+2Ch] +
mov eax 1 +
sub ecx [esi+10h] +
pop edi  +
pop esi  +
cmp ecx eax +
pop ebp  +
cmova eax ecx +
pop ebx  +
retn 10h  +
***
cmp byte ptr [esi+10h] 0 +
push 0FFFFFFFFh  +
push offset loc_479DF0  +
mov eax large fs:0 +
push eax  +
sub esp 64h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
xor ecx ecx +
mov [ebp+var_5C] 0 +
call sub_40FD30  +
mov [ebp+var_58] 0 +
mov [ebp+var_68] 0 +
mov [ebp+var_64] 0 +
mov byte ptr [ebp+var_6C] 0 +
mov [ebp+var_4] 1 +
lea ecx [ebp+var_6C] +
mov eax [esi] +
push ecx  +
push offset off_49EFE4  +
push offset aInputbuffer  +
mov eax [eax+4] +
mov ecx esi +
call eax  +
test al al +
jnz loc_43E1CD  +
push 29h  +
push offset aStringstoreMis  +
lea ecx [ebp+var_54] +
mov [ebp+var_40] 0Fh +
mov [ebp+var_44] 0 +
mov byte ptr [ebp+var_54] al +
call loc_402170  +
xorps xmm0 xmm0 +
movq [ebp+var_38] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_54] +
push 0  +
push eax  +
lea ecx [ebp+var_2C] +
mov [ebp+var_3C] offset off_48D038 +
mov [ebp+var_30] 1 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_3C] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov [ebp+var_3C] offset off_48C750 +
call sub_452780  +
mov cl byte ptr [ebp+var_6C] +
mov edx [ebp+var_58] +
test cl cl +
mov eax [ebp+var_68] +
mov ecx [ebp+var_5C] +
cmovnz eax edx +
mov [edi+14h] eax +
mov eax [ebp+var_64] +
cmovnz eax ecx +
mov dword ptr [edi+1Ch] 0 +
mov [edi+18h] eax +
mov edi edx +
xor al al +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_4] +
xorps xmm0 xmm0 +
push edi  +
push [esp+10h+arg_C]  +
mov edi ecx +
movlpd oword ptr [esp+14h+var_8] xmm0 +
push [esp+14h+arg_8]  +
lea ecx [esp+18h+var_8] +
push dword ptr [esi+4]  +
mov eax [edi] +
push dword ptr [esi]  +
push ecx  +
push [esp+24h+arg_0]  +
mov ecx edi +
call dword ptr [eax+80h]  +
mov ecx [esp+10h+var_8] +
add [edi+1Ch] ecx +
mov [esi] ecx +
mov ecx [esp+0Ch] +
pop edi  +
mov [esi+4] ecx +
pop esi  +
add esp 8 +
retn 10h  +
***
push esi  +
sub ecx 4 +
sub ecx 4 +
sub ecx 4 +
jmp sub_43DF10  +
***
push 0FFFFFFFFh  +
push offset loc_479E4B  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_8] +
mov edx [ecx] +
mov esi [ebp+arg_4] +
push eax  +
push offset off_49F8D4  +
mov eax [edx+4] +
push esi  +
call eax  +
test al al +
jnz loc_43E3F9  +
push 0Dh  +
push offset aBasen_encoder  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] al +
call loc_402170  +
push offset aMissingRequi_0  +
lea edx [ebp+var_50] +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_68] +
call sub_410020  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_80] +
call sub_410020  +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_98] +
call sub_410020  +
add esp 0Ch +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_478690  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_28] +
push offset aNonblockingInp  +
mov [ebp+var_30] esi +
call loc_425330  +
add esp 4 +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 0 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov ecx [ebp+var_14] +
mov dword ptr [esi] offset off_48D090 +
cmp ecx 10h +
jb loc_43E4BD  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_491154 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
push ebx  +
mov eax [edi] +
call dword ptr [eax+2Ch]  +
mov edx [edi] +
mov ecx edi +
push ebx  +
mov esi eax +
call dword ptr [edx+30h]  +
add eax esi +
add eax [esp+10h] +
add eax ebx +
pop edi  +
pop esi  +
pop ebx  +
lea eax ds:9[eax*8] +
retn 8  +
***
mov eax [esi] +
mov eax [eax+28h] +
call eax  +
test al al +
jz loc_43E559  +
push [esp+4+arg_8]  +
mov eax [esi] +
mov ecx esi +
push [esp+8+arg_4]  +
call dword ptr [eax+4]  +
mov ecx eax +
mov eax [esp+0Ch+var_4] +
cmp eax ecx +
jbe loc_43E550  +
sub eax ecx +
shr eax 3 +
pop esi  +
retn 0Ch  +
xor eax eax +
shr eax 3 +
pop esi  +
retn 0Ch  +
xor eax eax +
pop esi  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_479E90  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_40] edi +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
mov esi [ebp+arg_1C] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_28] eax +
mov eax [ebp+arg_14] +
inc eax  +
mov [ebp+var_1C] ecx +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_20] +
add eax 7 +
mov [ebp+var_38] esi +
shr eax 3 +
mov [ebp+var_20] eax +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov edx [edi] +
mov ebx eax +
push ebx  +
mov ecx edi +
call dword ptr [edx+2Ch]  +
sub esi ebx +
mov [ebp+var_4C] ebx +
sub esi [ebp+var_2C] +
mov edi eax +
add esi [ebp+var_20] +
mov ecx ebx +
mov [ebp+var_44] edi +
call sub_40FD30  +
test ebx ebx +
jnz loc_43E5EF  +
xor eax eax +
jmp loc_43E5F6  +
mov ecx ebx +
call loc_43F720  +
mov [ebp+var_30] eax +
mov [ebp+var_48] eax +
mov [ebp+var_4] 0 +
mov ecx edi +
mov [ebp+var_58] edi +
call sub_40FD30  +
test edi edi +
jnz loc_43E615  +
xor eax eax +
jmp loc_43E61C  +
mov ecx edi +
call loc_43F720  +
mov [ebp+var_24] eax +
mov [ebp+var_54] eax +
mov eax [ebp+var_1C] +
mov ecx eax +
push [ebp+var_30]  +
mov byte ptr [ebp+var_4] 1 +
mov edx [eax] +
call dword ptr [edx+14h]  +
mov ecx [ebp+var_3C] +
push edi  +
push [ebp+var_24]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov ecx [ebp+var_28] +
lea edx [ebp+var_18] +
mov eax ecx +
shr eax 1Dh +
bswap eax  +
mov [ebp+var_18] eax +
lea eax ds:0[ecx*8] +
mov ecx [ebp+var_1C] +
bswap eax  +
mov [ebp+var_14] eax +
push 8  +
mov eax [ecx] +
push edx  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_28] +
push edx  +
push [ebp+var_34]  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_1C] +
push ebx  +
push [ebp+var_30]  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_1C] +
push edi  +
push [ebp+var_24]  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_1C] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_40] +
mov eax [ecx] +
call dword ptr [eax+34h]  +
mov ecx [ebp+var_20] +
push 0  +
push ebx  +
mov edx [eax] +
sub ecx ebx +
sub ecx [ebp+var_2C] +
push esi  +
mov esi [ebp+var_38] +
push ecx  +
mov ecx [ebp+var_1C] +
push esi  +
push ecx  +
mov ecx eax +
call dword ptr [edx+4]  +
mov edx [ebp+var_28] +
mov eax esi +
mov esi [ebp+var_20] +
sub eax edx +
sub eax edi +
dec esi  +
sub eax ebx +
sub eax [ebp+var_2C] +
add esi eax +
push edx  +
mov edx [ebp+var_34] +
xor byte ptr [esi] 1 +
lea ecx [esi+1] +
call loc_43F120  +
mov ecx [ebp+var_28] +
push edi  +
mov edx [ebp+var_24] +
inc ecx  +
add ecx esi +
call loc_43F120  +
mov edi [ebp+var_38] +
mov eax edi +
mov esi [ebp+arg_14] +
sub eax [ebp+var_2C] +
add eax [ebp+var_20] +
push esi  +
push [ebp+arg_10]  +
push eax  +
call loc_452BD0  +
add esp 14h +
mov ecx 0CCh +
test esi esi +
mov eax 0BCh +
cmovnz eax ecx +
mov ecx [ebp+var_20] +
mov [edi+ecx-1] al +
mov ecx [ebp+arg_20] +
and ecx 7 +
jz loc_43E73A  +
mov dl [edi] +
cmp ecx 8 +
jnb loc_43E736  +
mov al 1 +
shl al cl +
dec al  +
and al dl +
jmp loc_43E738  +
mov al dl +
mov [edi] al +
mov edx [ebp+var_24] +
xor al al +
mov ecx [ebp+var_44] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [ebp+var_30] +
xor al al +
mov edi edx +
mov ecx ebx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 24h  +
***
push 0FFFFFFFFh  +
push offset loc_479ED3  +
mov eax large fs:0 +
push eax  +
sub esp 84h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_64] ecx +
mov eax [ebp+arg_1C] +
mov ecx [ebp+arg_4] +
mov edi [ebp+arg_14] +
mov ebx [ebp+arg_0] +
mov [ebp+var_7C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+var_5C] ecx +
mov [ebp+var_6C] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_70] edi +
lea eax [eax+7] +
shr eax 3 +
mov [ebp+var_60] eax +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+var_64] +
mov esi eax +
push esi  +
mov [ebp+var_74] esi +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
mov [ebp+var_80] eax +
mov ecx esi +
mov eax edi +
mov [ebp+var_8C] esi +
sub eax esi +
sub eax [ebp+var_6C] +
add eax [ebp+var_60] +
mov [ebp+var_84] eax +
call sub_40FD30  +
test esi esi +
jnz loc_43E817  +
xor ecx ecx +
mov [ebp+var_78] ecx +
jmp loc_43E823  +
mov ecx esi +
call loc_43F720  +
mov ecx eax +
mov [ebp+var_78] eax +
mov [ebp+var_88] ecx +
mov edx [ebp+var_5C] +
mov [ebp+var_4] 0 +
push ecx  +
mov ecx edx +
mov eax [edx] +
call dword ptr [eax+14h]  +
mov edx [ebp+arg_C] +
mov eax 0CCh +
test edx edx +
mov byte ptr [ebx] 1 +
mov ecx 0BCh +
mov dword ptr [ebx+4] 0 +
cmovnz ecx eax +
mov [ebp+var_68] 0 +
mov eax [ebp+var_60] +
push edx  +
mov edx [ebp+arg_8] +
movzx eax byte ptr [edi+eax-1] +
cmp eax ecx +
mov eax [ebp+var_68] +
mov ecx edi +
setz al  +
sub ecx [ebp+var_6C] +
add ecx [ebp+var_60] +
mov [ebp+var_68] eax +
mov [ebx] al +
call loc_43F490  +
add esp 4 +
test al al +
jz loc_43E898  +
cmp byte ptr [ebp+var_68] 0 +
jz loc_43E898  +
mov eax 1 +
jmp loc_43E89A  +
xor eax eax +
mov ecx [ebp+var_64] +
mov [ebx] al +
mov eax [ecx] +
call dword ptr [eax+34h]  +
push 1  +
mov ecx eax +
mov eax [ebp+var_60] +
push esi  +
push [ebp+var_84]  +
sub eax esi +
sub eax [ebp+var_6C] +
mov edx [ecx] +
push eax  +
push edi  +
push [ebp+var_5C]  +
call dword ptr [edx+4]  +
mov ecx [ebp+arg_18] +
and ecx 7 +
mov [ebp+var_68] ecx +
jz loc_43E8E1  +
mov dl [edi] +
cmp ecx 8 +
jnb loc_43E8DD  +
mov al 1 +
shl al cl +
dec al  +
and al dl +
jmp loc_43E8DF  +
mov al dl +
mov [edi] al +
sub edi [ebp+var_80] +
sub edi esi +
mov esi [ebp+var_70] +
sub edi [ebp+var_6C] +
add edi [ebp+var_60] +
lea ecx [edi-1] +
cmp esi ecx +
jz loc_43E900  +
cmp byte ptr [esi] 0 +
jnz loc_43E900  +
inc esi  +
cmp esi ecx +
jnz loc_43E8F6  +
mov eax edi +
sub eax esi +
dec eax  +
mov [ebx+4] eax +
cmp byte ptr [esi] 1 +
jnz loc_43E95C  +
mov ecx [ebp+var_64] +
push [ebp+var_74]  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
xor edx edx +
mov ecx esi +
cmp [ebp+var_68] edx +
setnz dl  +
sub ecx edx +
sub ecx [ebp+var_70] +
cmp ecx eax +
jb loc_43E95C  +
mov ecx [ebp+var_64] +
push [ebp+var_74]  +
mov eax [ebx+4] +
push [ebp+arg_C]  +
mov edx [ebp+arg_18] +
mov [ebp+var_70] eax +
mov eax [ecx] +
push edx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_70] +
cmp ecx eax +
ja loc_43E95C  +
push ecx  +
lea eax [esi+1] +
push eax  +
push [ebp+var_7C]  +
call loc_452BD0  +
add esp 0Ch +
jmp loc_43E966  +
mov dword ptr [ebx+4] 0 +
mov byte ptr [ebx] 0 +
mov ecx [ebx+4] +
mov eax ecx +
mov esi [ebp+var_5C] +
shr eax 1Dh +
bswap eax  +
mov [ebp+var_18] eax +
lea eax ds:0[ecx*8] +
bswap eax  +
mov [ebp+var_14] eax +
lea ecx [ebp+var_18] +
mov eax [esi] +
push 8  +
push ecx  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push dword ptr [ebx+4]  +
mov eax [esi] +
mov ecx esi +
push [ebp+var_7C]  +
call dword ptr [eax+0Ch]  +
mov eax [esi] +
mov esi [ebp+var_74] +
mov ecx [ebp+var_5C] +
push esi  +
push [ebp+var_78]  +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+var_5C] +
push [ebp+var_80]  +
push edi  +
mov eax [ecx] +
mov edi ecx +
call dword ptr [eax+0Ch]  +
mov eax [edi] +
mov ecx edi +
push [ebp+var_84]  +
mov eax [eax+30h] +
call eax  +
test al al +
jz loc_43E9D8  +
cmp byte ptr [ebx] 0 +
jz loc_43E9D8  +
mov eax 1 +
jmp loc_43E9DA  +
xor eax eax +
mov ecx [ebp+var_64] +
mov [ebx] al +
mov eax [ecx] +
mov eax [eax+28h] +
call eax  +
test al al +
jnz loc_43EA1F  +
cmp [ebx] al +
jz loc_43EA1F  +
cmp dword ptr [ebx+4] 0 +
jz loc_43EA1F  +
push offset aPssr_memMessag  +
lea ecx [ebp+var_30] +
call sub_403800  +
lea eax [ebp+var_30] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea ecx [ebp+var_58] +
call sub_40B270  +
push offset unk_49C420  +
lea eax [ebp+var_58] +
push eax  +
call sub_452780  +
mov edx [ebp+var_78] +
xor al al +
mov edi edx +
mov ecx esi +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push 0FFFFFFFFh  +
push offset loc_479F36  +
mov eax large fs:0 +
push eax  +
sub esp 88h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_90] ebx +
mov esi [ebp+arg_0] +
push 10h  +
mov [ebp+var_94] ebx +
call ds:GetLastError  +
mov edx eax +
lea ecx [ebp+var_8C] +
call sub_43EEF0  +
add esp 4 +
mov edi eax +
push esi  +
mov edx offset aOs_rng +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_74] +
call loc_40FF10  +
add esp 4 +
push offset aOperationFaile  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_5C] +
call sub_410020  +
add esp 4 +
push offset a0x  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_44] +
call sub_410020  +
add esp 4 +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2C] +
call sub_410070  +
add esp 4 +
xorps xmm0 xmm0 +
movq qword ptr [ebx+4] xmm0 +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebx+10h] +
push 0FFFFFFFFh  +
mov dword ptr [ebx] offset off_48D038 +
mov dword ptr [ebx+0Ch] 6 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_43EB5B  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov eax [ebp+var_30] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp eax 10h +
jb loc_43EB82  +
inc eax  +
lea ecx [ebp+var_44] +
push eax  +
push [ebp+var_44]  +
call loc_402500  +
mov eax [ebp+var_48] +
mov [ebp+var_30] 0Fh +
mov [ebp+var_34] 0 +
mov byte ptr [ebp+var_44] 0 +
cmp eax 10h +
jb loc_43EBA9  +
inc eax  +
lea ecx [ebp+var_5C] +
push eax  +
push [ebp+var_5C]  +
call loc_402500  +
mov eax [ebp+var_60] +
mov [ebp+var_48] 0Fh +
mov [ebp+var_4C] 0 +
mov byte ptr [ebp+var_5C] 0 +
cmp eax 10h +
jb loc_43EBD0  +
inc eax  +
lea ecx [ebp+var_74] +
push eax  +
push [ebp+var_74]  +
call loc_402500  +
mov ecx [ebp+var_78] +
mov [ebp+var_60] 0Fh +
mov [ebp+var_64] 0 +
mov byte ptr [ebp+var_74] 0 +
cmp ecx 10h +
jb loc_43EBFD  +
inc ecx  +
push ecx  +
push [ebp+var_8C]  +
lea ecx [ebp+var_8C] +
call loc_402500  +
mov eax ebx +
mov dword ptr [ebx] offset off_491204 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_479CD8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0F0000000h  +
push 1  +
push 0  +
push 0  +
push esi  +
call ds:CryptAcquireContextA  +
test eax eax +
jnz loc_43ECAE  +
push 13h  +
push offset aCryptacquireco  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] eax +
mov byte ptr [ebp+var_28] al +
call loc_402170  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_50] +
call sub_43EA60  +
push offset unk_49C8D0  +
lea eax [ebp+var_50] +
push eax  +
call sub_452780  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4767F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
lea eax [edi+4] +
xorps xmm0 xmm0 +
mov dword ptr [edi] offset off_47C344 +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_452277  +
add esp 8 +
mov [ebp+var_4] 0 +
lea ecx [edi+10h] +
mov dword ptr [edi] offset off_48D038 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
lea eax [esi+10h] +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov dword ptr [edi] offset off_491204 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test [esp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4911D4 +
jz loc_43ED8B  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
mov dword ptr [ecx] offset off_4911D4 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479CD8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
call sub_43F030  +
push esi  +
push [ebp+dwLen]  +
push dword ptr [eax]  +
call ds:CryptGenRandom  +
test eax eax +
jnz loc_43EE2E  +
push 0Eh  +
push offset aCryptgenrandom  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] eax +
mov byte ptr [ebp+var_28] al +
call loc_402170  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [ebp+var_50] +
call sub_43EA60  +
push offset unk_49C8D0  +
lea eax [ebp+var_50] +
push eax  +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_479F70  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx 20h +
mov [ebp+var_18] 20h +
call sub_40FD30  +
mov ecx 20h +
call loc_43F720  +
mov esi eax +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
mov [ebp+var_10] offset off_4911D4 +
push 20h  +
push esi  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 3 +
call sub_43EDB0  +
mov byte ptr [ebp+var_4] 0 +
mov ecx edi +
mov eax [edi] +
push 20h  +
push esi  +
call dword ptr [eax+0Ch]  +
xor al al +
mov edi esi +
mov ecx 20h +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_479F9E  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp+var_48] esi +
mov [ebp+var_4C] 0 +
test edi edi +
jnz loc_43EF4A  +
push 1  +
mov dword ptr [esi+14h] 0Fh +
mov [esi+10h] edx +
push offset a0  +
mov [esi] dl +
call loc_402170  +
jmp loc_43F004  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_43EFE4  +
xor edx edx +
mov eax edi +
div  [ebp+arg_0] +
mov ecx edx +
mov edi eax +
cmp ecx 0Ah +
lea eax [ebp+var_2C] +
push eax  +
sbb dl dl +
add cl 57h +
and dl 0D9h +
add dl cl +
lea ecx [ebp+var_44] +
call sub_423830  +
add esp 4 +
mov ebx eax +
lea eax [ebp+var_2C] +
cmp eax ebx +
jz loc_43EFC7  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_43EFAC  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
push ebx  +
lea ecx [ebp+var_2C] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call sub_406240  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_30] +
cmp eax 10h +
jb loc_43EFE0  +
inc eax  +
lea ecx [ebp+var_44] +
push eax  +
push [ebp+var_44]  +
call loc_402500  +
test edi edi +
jnz loc_43EF67  +
lea eax [ebp+var_2C] +
mov ecx esi +
push eax  +
call sub_40ED80  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_43F004  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_402500  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_479FDF  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3AE8 +
cmp eax [ecx+4] +
jle loc_43F0A6  +
push offset dword_4A3AE8  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AE8 0FFFFFFFFh +
jnz loc_43F0A6  +
push offset loc_47AFB0  +
mov dword_4A3AEC 0 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AE8  +
call sub_450220  +
add esp 4 +
mov eax dword_4A3AEC +
test eax eax +
jnz loc_43F10A  +
push 4  +
call sub_44FE54  +
add esp 4 +
mov [ebp+var_10] eax +
mov ecx eax +
mov [ebp+var_4] 0 +
call sub_43EC30  +
mov edi dword_4A3AEC +
mov esi eax +
test edi edi +
jz loc_43F102  +
test esi esi +
jz loc_43F0EF  +
push 0  +
push dword ptr [esi]  +
call ds:CryptReleaseContext  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov dword_4A3AEC esi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+1Ch] +
xor ebp ebp +
push edi  +
mov edi esi +
mov [esp+18h] edx +
shr edi 2 +
mov ebx ecx +
test edi edi +
jz loc_43F1D4  +
cmp edi 8 +
jb loc_43F1B3  +
lea eax [edx-4] +
lea eax [eax+edi*4] +
lea ecx [ebx-4] +
lea ecx [ecx+edi*4] +
cmp ebx eax +
ja loc_43F159  +
cmp ecx edx +
jnb loc_43F1B3  +
mov eax edi +
mov ecx edi +
and eax 7 +
mov esi edx +
sub ecx eax +
sub esi ebx +
mov [esp+10h] esi +
lea eax [ebx+10h] +
mov esi [esp+20h] +
mov [esp+14h] ecx +
mov ecx edx +
mov edx [esp+10h] +
movups xmm0 oword ptr [ecx] +
add ebp 8 +
lea ecx [ecx+20h] +
lea eax [eax+20h] +
movups xmm1 oword ptr [eax-30h] +
pxor xmm1 xmm0 +
movups oword ptr [eax-30h] xmm1 +
movups xmm1 oword ptr [edx+eax-20h] +
movups xmm0 oword ptr [eax-20h] +
pxor xmm1 xmm0 +
movups oword ptr [eax-20h] xmm1 +
cmp ebp [esp+14h] +
jb loc_43F180  +
mov edx [esp+18h] +
cmp ebp edi +
jnb loc_43F1D4  +
mov esi edx +
lea ecx [ebx+ebp*4] +
sub edi ebp +
sub esi ebx +
add ebp edi +
mov eax [ecx+esi] +
lea ecx [ecx+4] +
xor [ecx-4] eax +
sub edi 1 +
jnz loc_43F1C2  +
mov esi [esp+20h] +
shl ebp 2 +
sub esi ebp +
jz loc_43F254  +
add ebx ebp +
add edx ebp +
xor ecx ecx +
test esi esi +
jz loc_43F254  +
cmp esi 20h +
jb loc_43F23B  +
lea eax [edx-1] +
lea edi [ebx-1] +
add eax esi +
add edi esi +
cmp ebx eax +
ja loc_43F1FC  +
cmp edi edx +
jnb loc_43F23B  +
mov eax esi +
mov edi esi +
and eax 1Fh +
mov ebp edx +
sub edi eax +
mov eax ebx +
sub ebp ebx +
movups xmm0 oword ptr [eax] +
lea eax [eax+20h] +
movups xmm1 oword ptr [eax+ebp-20h] +
pxor xmm1 xmm0 +
movups oword ptr [eax-20h] xmm1 +
movups xmm1 oword ptr [edx+ecx+10h] +
add ecx 20h +
movups xmm0 oword ptr [eax-10h] +
pxor xmm1 xmm0 +
movups oword ptr [eax-10h] xmm1 +
cmp ecx edi +
jb loc_43F210  +
cmp ecx esi +
jnb loc_43F254  +
sub edx ebx +
lea eax [ecx+ebx] +
sub esi ecx +
mov cl [eax+edx] +
lea eax [eax+1] +
xor [eax-1] cl +
sub esi 1 +
jnz loc_43F246  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
***
sub esp 1Ch +
push ebx  +
push ebp  +
mov ebp [esp+24h+arg_0] +
mov ebx edx +
push esi  +
mov esi [esp+28h+arg_4] +
mov edx ecx +
push edi  +
mov edi esi +
mov [esp+2Ch+var_14] ebx +
shr edi 2 +
xor ecx ecx +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_4] edi +
test edi edi +
jz loc_43F395  +
cmp edi 8 +
jb loc_43F346  +
lea eax [ebp-4] +
mov [esp+2Ch+var_1C] ecx +
lea eax [eax+edi*4] +
cmp edx eax +
ja loc_43F2B7  +
lea eax [edx-4] +
lea eax [eax+edi*4] +
cmp eax ebp +
jnb loc_43F346  +
lea eax [ebx-4] +
lea eax [eax+edi*4] +
cmp edx eax +
ja loc_43F2CB  +
lea eax [edx-4] +
lea eax [eax+edi*4] +
cmp eax ebx +
jnb loc_43F346  +
mov eax edi +
mov esi edi +
and eax 7 +
sub esi eax +
lea eax [ebx+10h] +
mov [esp+2Ch+var_8] esi +
mov esi edx +
sub esi ebx +
mov [esp+2Ch+var_1C] esi +
mov esi ebp +
mov edi [esp+2Ch+var_1C] +
sub esi ebx +
mov [esp+2Ch+var_10] esi +
mov esi edx +
mov edx [esp+2Ch+var_10] +
sub esi ebp +
mov [esp+2Ch+var_C] esi +
mov esi ebp +
mov ebx [esp+2Ch+var_C] +
movups xmm0 oword ptr [esi] +
add ecx 8 +
lea esi [esi+20h] +
lea eax [eax+20h] +
movups xmm1 oword ptr [eax-30h] +
pxor xmm1 xmm0 +
movups oword ptr [ebx+esi-20h] xmm1 +
movups xmm1 oword ptr [edx+eax-20h] +
movups xmm0 oword ptr [eax-20h] +
pxor xmm1 xmm0 +
movups oword ptr [edi+eax-20h] xmm1 +
cmp ecx [esp+2Ch+var_8] +
jb loc_43F301  +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+var_4] +
mov edx [esp+2Ch+var_18] +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_1C] ecx +
cmp ecx edi +
jnb loc_43F395  +
mov eax ebx +
lea ecx ds:0[ecx*4] +
sub eax ebp +
add ecx ebp +
mov [esp+2Ch+var_4] eax +
mov eax edx +
mov esi [esp+2Ch+var_4] +
sub eax ebp +
mov [esp+2Ch+var_8] eax +
mov eax [esp+2Ch+var_1C] +
sub edi eax +
mov ebp [esp+2Ch+var_8] +
add eax edi +
mov [esp+2Ch+var_1C] eax +
mov eax [esi+ecx] +
lea ecx [ecx+4] +
xor eax [ecx-4] +
mov [ecx+ebp-4] eax +
sub edi 1 +
jnz loc_43F377  +
mov esi [esp+2Ch+arg_4] +
mov ebp [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_1C] +
shl ecx 2 +
sub esi ecx +
mov [esp+2Ch+arg_4] esi +
jz loc_43F482  +
add edx ecx +
add ebx ecx +
add ebp ecx +
mov [esp+2Ch+var_18] edx +
xor edi edi +
mov [esp+2Ch+var_14] ebx +
mov [esp+2Ch+arg_0] ebp +
test esi esi +
jz loc_43F482  +
cmp esi 20h +
jb loc_43F463  +
lea eax [ebp-1] +
lea ecx [edx-1] +
add eax esi +
add ecx esi +
cmp edx eax +
ja loc_43F3DF  +
cmp ecx ebp +
jnb loc_43F463  +
lea eax [ebx-1] +
add eax esi +
cmp edx eax +
ja loc_43F3EC  +
cmp ecx ebx +
jnb loc_43F463  +
mov eax esi +
mov ecx esi +
mov esi edx +
and eax 1Fh +
sub esi ebx +
sub ecx eax +
mov [esp+2Ch+var_4] esi +
mov eax ebx +
mov esi ebp +
mov [esp+2Ch+var_10] ecx +
sub esi ebx +
lea ecx [ebp+10h] +
mov [esp+2Ch+var_8] esi +
mov esi edx +
mov edx [esp+2Ch+var_8] +
sub esi ebp +
mov ebp [esp+2Ch+var_4] +
mov [esp+2Ch+var_C] esi +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+var_C] +
movups xmm0 oword ptr [eax] +
add edi 20h +
lea eax [eax+20h] +
lea ecx [ecx+20h] +
movups xmm1 oword ptr [eax+edx-20h] +
pxor xmm1 xmm0 +
movups oword ptr [eax+ebp-20h] xmm1 +
movups xmm1 oword ptr [eax-10h] +
movups xmm0 oword ptr [ecx-20h] +
pxor xmm1 xmm0 +
movups oword ptr [ecx+ebx-20h] xmm1 +
cmp edi [esp+2Ch+var_10] +
jb loc_43F426  +
mov edx [esp+2Ch+var_18] +
mov ebx [esp+2Ch+var_14] +
mov ebp [esp+2Ch+arg_0] +
cmp edi esi +
jnb loc_43F482  +
sub ebx ebp +
lea ecx [edi+ebp] +
sub edx ebp +
sub esi edi +
mov al [ebx+ecx] +
lea ecx [ecx+1] +
xor al [ecx-1] +
mov [edx+ecx-1] al +
sub esi 1 +
jnz loc_43F470  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 1Ch +
retn   +
***
sub esp 10h +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+20h] +
mov eax edx +
push edi  +
mov edi esi +
mov [esp+10h] eax +
shr edi 2 +
xor ebx ebx +
xor edx edx +
mov [esp+1Ch] edi +
mov ebp ecx +
test edi edi +
jz loc_43F569  +
cmp edi 8 +
jb loc_43F546  +
mov ebx [esp+10h] +
mov eax edi +
and eax 7 +
mov ecx edi +
sub ecx eax +
mov esi ebp +
sub esi ebx +
mov [esp+14h] ecx +
mov [esp+18h] esi +
lea eax [ebx+10h] +
mov esi [esp+24h] +
xorps xmm3 xmm3 +
mov ebx [esp+14h] +
movaps xmm2 xmm3 +
mov edi [esp+18h] +
mov ecx ebp +
movups xmm0 oword ptr [ecx] +
add edx 8 +
lea ecx [ecx+20h] +
lea eax [eax+20h] +
movups xmm1 oword ptr [eax-30h] +
pxor xmm1 xmm0 +
por xmm3 xmm1 +
movups xmm1 oword ptr [edi+eax-20h] +
movups xmm0 oword ptr [eax-20h] +
pxor xmm1 xmm0 +
por xmm2 xmm1 +
cmp edx ebx +
jb loc_43F4F1  +
mov edi [esp+1Ch] +
por xmm2 xmm3 +
mov eax [esp+10h] +
movaps xmm0 xmm2 +
psrldq xmm0 8 +
por xmm2 xmm0 +
movaps xmm0 xmm2 +
psrldq xmm0 4 +
por xmm2 xmm0 +
movd ebx xmm2 +
cmp edx edi +
jnb loc_43F569  +
mov esi ebp +
lea ecx [eax+edx*4] +
sub edi edx +
sub esi eax +
add edx edi +
mov eax [ecx+esi] +
lea ecx [ecx+4] +
xor eax [ecx-4] +
or ebx eax +
sub edi 1 +
jnz loc_43F555  +
mov esi [esp+24h] +
shl edx 2 +
sub esi edx +
jnz loc_43F57F  +
pop edi  +
xor eax eax +
test ebx ebx +
pop esi  +
pop ebp  +
setz al  +
pop ebx  +
add esp 10h +
retn   +
***
mov ecx [esp+10h] +
add ebp edx +
add ecx edx +
mov eax ebx +
shr eax 10h +
mov edx ebx +
shr edx 18h +
xor edi edi +
or dl al +
mov [esp+10h] ecx +
mov eax ebx +
shr eax 8 +
or dl al +
or dl bl +
mov [esp+1Ch] edx +
test esi esi +
jz loc_43F665  +
cmp esi 20h +
jb loc_43F649  +
mov eax esi +
mov ebx esi +
and eax 1Fh +
mov edx ebp +
sub ebx eax +
xorps xmm3 xmm3 +
sub edx ecx +
mov eax ecx +
mov [esp+18h] edx +
movaps xmm2 xmm3 +
mov edx [esp+1Ch] +
mov ecx [esp+18h] +
movups xmm0 oword ptr [eax] +
lea eax [eax+20h] +
movups xmm1 oword ptr [eax+ecx-20h] +
pxor xmm1 xmm0 +
movups xmm0 oword ptr [eax-10h] +
por xmm3 xmm1 +
movups xmm1 oword ptr [edi+ebp+10h] +
add edi 20h +
pxor xmm1 xmm0 +
por xmm2 xmm1 +
cmp edi ebx +
jb loc_43F5E0  +
por xmm2 xmm3 +
mov ecx [esp+10h] +
movaps xmm0 xmm2 +
psrldq xmm0 8 +
por xmm2 xmm0 +
movaps xmm0 xmm2 +
psrldq xmm0 4 +
por xmm2 xmm0 +
movaps xmm0 xmm2 +
psrldq xmm0 2 +
por xmm2 xmm0 +
movaps xmm0 xmm2 +
psrldq xmm0 1 +
por xmm2 xmm0 +
movd eax xmm2 +
or dl al +
cmp edi esi +
jnb loc_43F665  +
sub ebp [esp+10h] +
add ecx edi +
sub esi edi +
mov al [ecx+ebp] +
lea ecx [ecx+1] +
xor al [ecx-1] +
or dl al +
sub esi 1 +
jnz loc_43F655  +
pop edi  +
xor eax eax +
test dl dl +
pop esi  +
pop ebp  +
setz al  +
pop ebx  +
add esp 10h +
retn   +
***
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_47C344 +
movq qword ptr [eax] xmm0 +
mov eax [esp+4+arg_0] +
add eax 4 +
push eax  +
call sub_452277  +
add esp 8 +
mov dword ptr [esi] offset off_47C350 +
mov eax esi +
pop esi  +
retn 4  +
***
sub esp 0Ch +
push esi  +
push edi  +
mov edi ecx +
push 10h  +
push edi  +
call sub_474707  +
add esp 8 +
test eax eax +
jnz loc_43F6ED  +
push 0  +
call sub_473BF1  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_43F6F3  +
push esi  +
call sub_473BF1  +
call esi  +
push 10h  +
push edi  +
call sub_474707  +
add esp 0Ch +
test eax eax +
jz loc_43F6C6  +
pop edi  +
pop esi  +
add esp 0Ch +
retn   +
***
xorps xmm0 xmm0 +
mov dword ptr [esp+8] offset off_47C350 +
push offset unk_49C8EC  +
lea eax [esp+0Ch] +
movq qword ptr [esp+10h] xmm0 +
push eax  +
mov dword ptr [esp+14h] offset aBadAllocation +
call sub_452780  +
sub esp 0Ch +
push esi  +
push edi  +
mov edi ecx +
push edi  +
call sub_45B31A  +
add esp 4 +
test eax eax +
jnz loc_43F759  +
push 0  +
call sub_473BF1  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_43F75F  +
push esi  +
call sub_473BF1  +
call esi  +
push edi  +
call sub_45B31A  +
add esp 8 +
test eax eax +
jz loc_43F734  +
pop edi  +
pop esi  +
add esp 0Ch +
retn   +
***
xorps xmm0 xmm0 +
mov dword ptr [esp+8] offset off_47C350 +
push offset unk_49C8EC  +
lea eax [esp+0Ch] +
movq qword ptr [esp+10h] xmm0 +
push eax  +
mov dword ptr [esp+14h] offset aBadAllocation +
call sub_452780  +
lea eax [esi+4] +
mov dword ptr [esi] offset off_47C344 +
push eax  +
call sub_4522DA  +
add esp 4 +
test [esp+arg_0] 1 +
jz loc_43F7B7  +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
xorps xmm0 xmm0 +
mov eax ecx +
movq qword ptr [ecx+4] xmm0 +
mov dword ptr [ecx+4] offset aBadAllocation +
mov dword ptr [ecx] offset off_47C350 +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A010  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
lea eax [edi+18h] +
push eax  +
push offset aEncodinglookup  +
push ecx  +
mov ecx esi +
call sub_43FF10  +
lea ebx [edi+20h] +
push ebx  +
push offset aLog2base  +
push ecx  +
mov ecx esi +
call sub_43E300  +
mov eax [ebx] +
test eax eax +
jle loc_43F8FB  +
cmp eax 8 +
jge loc_43F8FB  +
mov eax [esi] +
lea ecx [ebp-55h] +
push ecx  +
push offset off_4A0C70  +
push offset aPaddingbyte  +
mov eax [eax+4] +
mov ecx esi +
call eax  +
test al al +
jz loc_43F885  +
mov eax [esi] +
lea ecx [ebp-54h] +
push ecx  +
push offset off_49F374  +
push offset aPad  +
mov ecx esi +
mov byte ptr [ebp-54h] 1 +
call dword ptr [eax+4]  +
cmp byte ptr [ebp-54h] 0 +
jz loc_43F885  +
movzx eax byte ptr [ebp-55h] +
jmp loc_43F888  +
or eax 0FFFFFFFFh +
mov esi [ebx] +
mov ecx 8 +
mov [edi+1Ch] eax +
mov eax ecx +
cdq   +
idiv  esi +
mov dword ptr [edi+2Ch] 0 +
mov dword ptr [edi+28h] 0 +
test edx edx +
jz loc_43F8BC  +
add ecx 8 +
mov eax ecx +
cdq   +
idiv  esi +
test edx edx +
jnz loc_43F8B0  +
mov eax ecx +
cdq   +
idiv  esi +
push 0  +
mov esi eax +
mov [edi+24h] esi +
mov edx [edi+38h] +
push esi  +
push dword ptr [edi+34h]  +
call sub_410310  +
add esp 0Ch +
mov [edi+38h] eax +
mov [edi+34h] esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 39h  +
push offset aBasen_encoderL  +
lea ecx [ebp-50h] +
mov dword ptr [ebp-3Ch] 0Fh +
mov dword ptr [ebp-40h] 0 +
mov byte ptr [ebp-50h] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-50h] +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 1 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 0 +
push eax  +
mov dword ptr [ebp-38h] offset off_48C750 +
call sub_452780  +
push edi  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
mov [esi+14h] ecx +
test eax eax +
jz loc_43FB83  +
mov ecx [esi+28h] +
mov eax 1 +
sub ecx [esi+10h] +
pop edi  +
pop esi  +
cmp ecx eax +
pop ebp  +
cmova eax ecx +
pop ebx  +
pop ecx  +
retn 10h  +
***
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+28h] 0 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
pop ecx  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_47A060  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_10] +
push ecx  +
push offset off_49F8D4  +
push offset aGroupsize  +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_10] 0 +
call dword ptr [eax+4]  +
mov eax [ebp+var_10] +
xor ecx ecx +
mov [edi+30h] eax +
mov [ebp+var_18] 0 +
call sub_40FD30  +
mov [ebp+var_14] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 1 +
xor ecx ecx +
mov [ebp+var_30] 0 +
call sub_40FD30  +
mov [ebp+var_2C] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov byte ptr [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 3 +
cmp dword ptr [edi+30h] 0 +
jz loc_43FC61  +
lea eax [ebp+var_28] +
push eax  +
push offset aSeparator  +
push ecx  +
mov ecx esi +
call sub_440030  +
jmp loc_43FC76  +
mov eax [esi] +
lea ecx [ebp+var_28] +
push ecx  +
push offset off_49EFE4  +
push offset aSeparator  +
mov ecx esi +
call dword ptr [eax+4]  +
mov eax [esi] +
lea ecx [ebp+var_40] +
push ecx  +
push offset off_49EFE4  +
push offset aTerminator  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp byte ptr [ebp+var_28] 0 +
jz loc_43FC99  +
mov esi [ebp+var_18] +
mov ebx [ebp+var_14] +
jmp loc_43FC9F  +
mov esi [ebp+var_20] +
mov ebx [ebp+var_24] +
mov edx [edi+20h] +
push 0  +
push esi  +
push dword ptr [edi+1Ch]  +
call sub_410310  +
push esi  +
push ebx  +
mov edx esi +
mov [edi+20h] eax +
mov ecx eax +
mov [edi+1Ch] esi +
call sub_40A5A0  +
add esp 14h +
cmp byte ptr [ebp+var_40] 0 +
jz loc_43FCCF  +
mov esi [ebp+var_30] +
mov ebx [ebp+var_2C] +
jmp loc_43FCD5  +
mov esi [ebp+var_38] +
mov ebx [ebp+var_3C] +
mov edx [edi+2Ch] +
push 0  +
push esi  +
push dword ptr [edi+28h]  +
call sub_410310  +
push esi  +
push ebx  +
mov edx esi +
mov [edi+2Ch] eax +
mov ecx eax +
mov [edi+28h] esi +
call sub_40A5A0  +
mov edx [ebp+var_2C] +
xor al al +
mov ecx [ebp+var_30] +
mov dword ptr [edi+34h] 0 +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [ebp+var_14] +
xor al al +
mov ecx [ebp+var_18] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
add esp 1Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+14h] +
cmp eax 4 +
ja loc_43FEED  +
mov ebx [esp+10h+arg_C] +
mov ebp [esp+10h+arg_4] +
jmp ds:off_43FEF8[eax*4]  +
cmp dword ptr [esi+30h] 0 +
mov dword ptr [esi+10h] 0 +
jnz loc_43FE45  +
mov eax [esi] +
call dword ptr [eax+0A4h]  +
push ebx  +
push 0  +
mov edi ebp +
mov ecx eax +
mov edx [eax] +
push edi  +
push [esp+1Ch+arg_0]  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 3 +
mov [esi+14h] ecx +
test eax eax +
jz loc_43FE82  +
sub edi [esi+10h] +
mov eax 1 +
cmp edi eax +
cmova eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov eax [esi] +
mov ecx esi +
mov edi [esi+1Ch] +
mov ebx [esi+20h] +
call dword ptr [eax+0A4h]  +
push [esp+10h+arg_C]  +
mov ecx eax +
push 0  +
mov edx [eax] +
push edi  +
push ebx  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov [esi+14h] ecx +
test eax eax +
jnz loc_43FE6B  +
mov [esi+34h] eax +
mov ecx [esi+30h] +
mov ebx ebp +
sub ecx [esi+34h] +
sub ebx [esi+10h] +
mov eax [esi] +
cmp ecx ebx +
mov edi [esp+10h+arg_0] +
cmovb ebx ecx +
add edi [esi+10h] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push [esp+10h+arg_C]  +
mov ecx eax +
push 0  +
mov edx [eax] +
push ebx  +
push edi  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
mov [esi+14h] ecx +
test eax eax +
jnz loc_43FE57  +
add [esi+10h] ebx +
add [esi+34h] ebx +
mov ebx [esp+10h+arg_C] +
cmp [esi+10h] ebp +
jnb loc_43FE82  +
mov eax [esi+34h] +
cmp eax [esi+30h] +
jnz loc_43FDF3  +
jmp loc_43FDBB  +
sub ebx [esi+10h] +
mov eax 1 +
pop edi  +
cmp ebx eax +
pop esi  +
pop ebp  +
cmova eax ebx +
pop ebx  +
retn 10h  +
mov ecx [esi+1Ch] +
mov eax 1 +
sub ecx [esi+10h] +
pop edi  +
pop esi  +
cmp ecx eax +
pop ebp  +
cmova eax ecx +
pop ebx  +
retn 10h  +
mov eax [esp+10h+arg_8] +
test eax eax +
jz loc_43FEED  +
jmp loc_43FE90  +
mov eax [esp+10h+arg_8] +
mov edi [esi+28h] +
mov ebp [esi+2Ch] +
test eax eax +
jz loc_43FE9F  +
dec eax  +
mov [esp+10h+arg_8] eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0A4h]  +
push ebx  +
push [esp+14h+arg_8]  +
mov ecx eax +
mov edx [eax] +
push edi  +
push ebp  +
push offset dword_4A314C  +
call dword ptr [edx+88h]  +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 4 +
mov [esi+14h] ecx +
test eax eax +
jz loc_43FEE6  +
mov ecx [esi+28h] +
mov eax 1 +
sub ecx [esi+10h] +
pop edi  +
pop esi  +
cmp ecx eax +
pop ebp  +
cmova eax ecx +
pop ebx  +
retn 10h  +
mov dword ptr [esi+34h] 0 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_479E4B  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_8] +
mov edx [ecx] +
mov esi [ebp+arg_4] +
push eax  +
push offset off_4A0B54  +
mov eax [edx+4] +
push esi  +
call eax  +
test al al +
jnz loc_440009  +
push 0Dh  +
push offset aBasen_encoder  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] al +
call loc_402170  +
push offset aMissingRequi_0  +
lea edx [ebp+var_50] +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_68] +
call sub_410020  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_80] +
call sub_410020  +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_98] +
call sub_410020  +
add esp 0Ch +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_479E4B  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_8] +
mov edx [ecx] +
mov esi [ebp+arg_4] +
push eax  +
push offset off_49EFE4  +
mov eax [edx+4] +
push esi  +
call eax  +
test al al +
jnz loc_440129  +
push 7  +
push offset aGrouper  +
lea ecx [ebp+var_50] +
mov [ebp+var_3C] 0Fh +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_50] al +
call loc_402170  +
push offset aMissingRequi_0  +
lea edx [ebp+var_50] +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_68] +
call sub_410020  +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_80] +
call sub_410020  +
push offset asc_48C9F4  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_98] +
call sub_410020  +
add esp 0Ch +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 1 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
mov [ebp+var_38] offset off_48C750 +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 54h +
mov eax [ecx+0Ch] +
push ebx  +
mov [esp+58h+var_4C] ecx +
mov ebx edx +
mov [esp+58h+var_54] ebx +
push ebp  +
mov ebp [ecx+4] +
mov edx [ebx] +
mov ebx [esp+5Ch+var_4C] +
push esi  +
mov esi [ecx+10h] +
push edi  +
xor eax [ebx+8] +
mov edi [ecx] +
and eax ebp +
mov ebp ebx +
mov [esp+64h+var_30] edx +
mov ecx edi +
rol ecx 5 +
add ecx esi +
xor eax [ebp+0Ch] +
lea ebp [edx+5A827999h] +
add eax ecx +
add ebp eax +
mov eax ebx +
mov ebx [esp+64h+var_54] +
mov ecx ebp +
rol ecx 5 +
mov edx [eax+4] +
mov esi [ebx+4] +
mov ebx eax +
rol edx 1Eh +
mov [esp+64h+var_34] esi +
mov eax [ebx+8] +
xor eax edx +
and eax edi +
mov edi ebx +
xor eax [edi+8] +
lea edi [esi+ecx] +
add edi eax +
mov esi ebx +
mov ebx [esp+64h+var_54] +
mov eax edx +
mov ecx [esi+0Ch] +
mov ebx [ebx+8] +
add ecx 5A827999h +
mov esi [esi] +
add edi ecx +
mov ecx edi +
rol esi 1Eh +
xor eax esi +
rol ecx 5 +
add ecx ebx +
mov [esp+64h+var_4] ebx +
mov ebx [esp+64h+var_4C] +
and eax ebp +
xor eax edx +
rol ebp 1Eh +
add eax ecx +
add edx 5A827999h +
mov ebx [ebx+8] +
add ebx 5A827999h +
add ebx eax +
mov eax [esp+64h+var_54] +
mov ecx ebx +
rol ecx 5 +
mov eax [eax+0Ch] +
mov [esp+64h+var_8] eax +
mov eax ebp +
add ecx [esp+64h+var_8] +
xor eax esi +
and eax edi +
rol edi 1Eh +
xor eax esi +
add eax ecx +
add edx eax +
mov eax [esp+64h+var_54] +
mov ecx edx +
rol ecx 5 +
mov eax [eax+10h] +
mov [esp+64h+var_20] eax +
add ecx [esp+64h+var_20] +
mov eax ebp +
xor eax edi +
add esi 5A827999h +
and eax ebx +
rol ebx 1Eh +
xor eax ebp +
add eax ecx +
add esi eax +
mov eax [esp+64h+var_54] +
mov ecx esi +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+14h] +
mov [esp+64h+var_24] eax +
mov eax edi +
add ecx [esp+64h+var_24] +
xor eax ebx +
and eax edx +
rol edx 1Eh +
xor eax edi +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_54] +
mov ecx ebp +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+18h] +
mov [esp+64h+var_28] eax +
mov eax ebx +
add ecx [esp+64h+var_28] +
xor eax edx +
and eax esi +
rol esi 1Eh +
xor eax ebx +
add eax ecx +
add edi eax +
mov eax [esp+64h+var_54] +
mov ecx edi +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+1Ch] +
mov [esp+64h+var_2C] eax +
mov eax edx +
add ecx [esp+64h+var_2C] +
xor eax esi +
and eax ebp +
rol ebp 1Eh +
xor eax edx +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_54] +
mov ecx ebx +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+20h] +
mov [esp+64h+var_10] eax +
mov eax ebp +
add ecx [esp+64h+var_10] +
xor eax esi +
and eax edi +
rol edi 1Eh +
xor eax esi +
add eax ecx +
add edx eax +
mov eax [esp+64h+var_54] +
mov ecx edx +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+24h] +
mov [esp+64h+var_14] eax +
mov eax ebp +
add ecx [esp+64h+var_14] +
xor eax edi +
and eax ebx +
xor eax ebp +
add eax ecx +
add esi eax +
mov eax [esp+64h+var_54] +
rol ebx 1Eh +
mov eax [eax+28h] +
mov [esp+64h+var_18] eax +
mov ecx esi +
rol ecx 5 +
mov eax edi +
xor eax ebx +
add ecx 5A827999h +
add ecx [esp+64h+var_18] +
and eax edx +
xor eax edi +
rol edx 1Eh +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_54] +
mov ecx ebp +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+2Ch] +
mov [esp+64h+var_1C] eax +
mov eax ebx +
add ecx [esp+64h+var_1C] +
xor eax edx +
and eax esi +
rol esi 1Eh +
xor eax ebx +
add eax ecx +
add edi eax +
mov eax [esp+64h+var_54] +
mov ecx edi +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+30h] +
mov [esp+64h+var_C] eax +
mov eax edx +
add ecx [esp+64h+var_C] +
xor eax esi +
and eax ebp +
rol ebp 1Eh +
xor eax edx +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_54] +
mov ecx ebx +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+34h] +
mov [esp+64h+var_48] eax +
mov eax ebp +
add ecx [esp+64h+var_48] +
xor eax esi +
and eax edi +
rol edi 1Eh +
xor eax esi +
add eax ecx +
add edx eax +
mov eax [esp+64h+var_54] +
mov ecx edx +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+38h] +
mov [esp+64h+var_50] eax +
mov eax ebp +
add ecx [esp+64h+var_50] +
xor eax edi +
and eax ebx +
rol ebx 1Eh +
xor eax ebp +
add eax ecx +
add esi eax +
mov eax [esp+64h+var_54] +
mov ecx esi +
rol ecx 5 +
add ecx 5A827999h +
mov eax [eax+3Ch] +
mov [esp+64h+var_54] eax +
mov eax edi +
add ecx [esp+64h+var_54] +
xor eax ebx +
and eax edx +
xor eax edi +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_48] +
mov ecx ebp +
xor eax [esp+64h+var_10] +
xor eax [esp+64h+var_4] +
xor eax [esp+64h+var_30] +
rol eax 1 +
mov [esp+64h+var_44] eax +
mov eax ebx +
rol ecx 5 +
add ecx 5A827999h +
rol edx 1Eh +
add ecx [esp+64h+var_44] +
xor eax edx +
and eax esi +
rol esi 1Eh +
xor eax ebx +
add eax ecx +
add edi eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_14] +
mov ecx edi +
xor eax [esp+64h+var_8] +
xor eax [esp+64h+var_34] +
rol eax 1 +
mov [esp+64h+var_40] eax +
mov eax edx +
xor eax esi +
rol ecx 5 +
and eax ebp +
add ecx 5A827999h +
add ecx [esp+64h+var_40] +
xor eax edx +
add eax ecx +
rol ebp 1Eh +
add ebx eax +
mov [esp+64h+var_30] ebp +
mov eax [esp+64h+var_54] +
xor ebp esi +
xor eax [esp+64h+var_18] +
mov ecx ebx +
xor eax [esp+64h+var_20] +
and ebp edi +
xor eax [esp+64h+var_4] +
xor ebp esi +
rol eax 1 +
add edx 5A827999h +
mov [esp+64h+var_3C] eax +
add esi 5A827999h +
rol ecx 5 +
add ecx eax +
rol edi 1Eh +
mov eax [esp+64h+var_1C] +
add ebp ecx +
xor eax [esp+64h+var_24] +
add ebp edx +
xor eax [esp+64h+var_8] +
mov ecx ebp +
xor eax [esp+64h+var_44] +
mov edx [esp+64h+var_30] +
rol eax 1 +
mov [esp+64h+var_38] eax +
mov eax edx +
xor eax edi +
rol ecx 5 +
add ecx [esp+64h+var_38] +
and eax ebx +
xor edx eax +
rol ebx 1Eh +
add edx ecx +
mov eax edi +
add edx esi +
xor eax ebx +
mov esi [esp+64h+var_C] +
mov ecx edx +
xor esi [esp+64h+var_28] +
xor esi [esp+64h+var_20] +
xor esi [esp+64h+var_40] +
rol esi 1 +
rol ecx 5 +
xor eax ebp +
mov [esp+64h+var_8] esi +
add esi ecx +
rol ebp 1Eh +
add esi eax +
mov ecx [esp+64h+var_30] +
mov eax [esp+64h+var_48] +
add ecx 6ED9EBA1h +
xor eax [esp+64h+var_2C] +
add esi ecx +
xor eax [esp+64h+var_24] +
mov ecx esi +
xor eax [esp+64h+var_3C] +
rol eax 1 +
mov [esp+64h+var_34] eax +
mov eax ebx +
xor eax ebp +
rol ecx 5 +
xor eax edx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_34] +
add eax ecx +
rol edx 1Eh +
add edi eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_10] +
mov ecx edi +
xor eax [esp+64h+var_28] +
xor eax [esp+64h+var_38] +
rol eax 1 +
mov [esp+64h+var_30] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_30] +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_14] +
mov ecx ebx +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_8] +
rol eax 1 +
mov [esp+64h+var_2C] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_2C] +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_18] +
xor eax [esp+64h+var_10] +
mov ecx ebp +
xor eax [esp+64h+var_34] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_28] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_28] +
add eax ecx +
rol ebx 1Eh +
add edx eax +
mov eax [esp+64h+var_1C] +
xor eax [esp+64h+var_14] +
mov ecx edx +
xor eax [esp+64h+var_30] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_24] eax +
mov eax edi +
xor eax ebx +
rol ecx 5 +
xor eax ebp +
add ecx 6ED9EBA1h +
rol ebp 1Eh +
add ecx [esp+64h+var_24] +
add eax ecx +
add esi eax +
mov eax [esp+64h+var_C] +
xor eax [esp+64h+var_18] +
mov ecx esi +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_3C] +
rol eax 1 +
mov [esp+64h+var_20] eax +
mov eax ebx +
xor eax ebp +
rol ecx 5 +
xor eax edx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_20] +
add eax ecx +
rol edx 1Eh +
add edi eax +
mov eax [esp+64h+var_48] +
xor eax [esp+64h+var_1C] +
mov ecx edi +
xor eax [esp+64h+var_28] +
xor eax [esp+64h+var_38] +
rol eax 1 +
mov [esp+64h+var_1C] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_1C] +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_C] +
mov ecx ebx +
xor eax [esp+64h+var_24] +
xor eax [esp+64h+var_8] +
rol eax 1 +
mov [esp+64h+var_18] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_18] +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_48] +
mov ecx ebp +
xor eax [esp+64h+var_20] +
xor eax [esp+64h+var_34] +
rol eax 1 +
mov [esp+64h+var_48] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_48] +
add eax ecx +
rol ebx 1Eh +
add edx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_1C] +
mov ecx edx +
xor eax [esp+64h+var_30] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_50] eax +
mov eax edi +
xor eax ebx +
rol ecx 5 +
xor eax ebp +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_50] +
add eax ecx +
rol ebp 1Eh +
add esi eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_18] +
mov ecx esi +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_54] eax +
mov eax ebx +
xor eax ebp +
rol ecx 5 +
xor eax edx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_54] +
add eax ecx +
rol edx 1Eh +
add edi eax +
mov eax [esp+64h+var_48] +
xor eax [esp+64h+var_28] +
mov ecx edi +
xor eax [esp+64h+var_3C] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_44] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_44] +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_24] +
mov ecx ebx +
xor eax [esp+64h+var_38] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_40] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_40] +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_20] +
mov ecx ebp +
xor eax [esp+64h+var_8] +
xor eax [esp+64h+var_3C] +
rol eax 1 +
mov [esp+64h+var_3C] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_3C] +
add eax ecx +
rol ebx 1Eh +
add edx eax +
mov eax [esp+64h+var_1C] +
xor eax [esp+64h+var_34] +
mov ecx edx +
xor eax [esp+64h+var_38] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_38] eax +
mov eax edi +
rol ecx 5 +
xor eax ebx +
add ecx 6ED9EBA1h +
xor eax ebp +
add ecx [esp+64h+var_38] +
add eax ecx +
rol ebp 1Eh +
add esi eax +
mov eax [esp+64h+var_18] +
xor eax [esp+64h+var_30] +
mov ecx esi +
xor eax [esp+64h+var_8] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_14] eax +
mov eax ebx +
xor eax ebp +
rol ecx 5 +
xor eax edx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_14] +
add eax ecx +
rol edx 1Eh +
add edi eax +
mov eax [esp+64h+var_48] +
xor eax [esp+64h+var_2C] +
mov ecx edi +
xor eax [esp+64h+var_34] +
xor eax [esp+64h+var_3C] +
rol eax 1 +
mov [esp+64h+var_34] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_34] +
add eax ecx +
add ebx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_28] +
mov ecx ebx +
xor eax [esp+64h+var_30] +
xor eax [esp+64h+var_38] +
rol eax 1 +
mov [esp+64h+var_30] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_30] +
add eax ecx +
add ebp eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_24] +
mov ecx ebp +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_14] +
rol eax 1 +
mov [esp+64h+var_2C] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
add ecx 6ED9EBA1h +
add ecx [esp+64h+var_2C] +
add eax ecx +
rol ebx 1Eh +
add edx eax +
mov ecx ebx +
mov eax [esp+64h+var_20] +
or ecx ebp +
xor eax [esp+64h+var_28] +
and ecx edi +
xor eax [esp+64h+var_34] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_28] eax +
mov eax ebx +
mov [esp+64h+var_4] edx +
and eax ebp +
rol edx 5 +
or ecx eax +
add ecx [esp+64h+var_28] +
add esi 8F1BBCDCh +
mov eax [esp+64h+var_1C] +
add ecx esi +
xor eax [esp+64h+var_24] +
add edx ecx +
xor eax [esp+64h+var_30] +
add edi 8F1BBCDCh +
xor eax [esp+64h+var_40] +
mov esi [esp+64h+var_4] +
rol eax 1 +
mov [esp+64h+var_24] eax +
rol ebp 1Eh +
mov ecx ebp +
mov [esp+64h+var_8] edx +
or ecx esi +
rol edx 5 +
and ecx ebx +
mov eax ebp +
and eax esi +
add ebx 8F1BBCDCh +
or ecx eax +
rol esi 1Eh +
add ecx [esp+64h+var_24] +
mov eax [esp+64h+var_18] +
add ecx edi +
xor eax [esp+64h+var_20] +
add edx ecx +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_3C] +
mov edi [esp+64h+var_8] +
mov ecx edi +
rol eax 1 +
or ecx esi +
mov [esp+64h+var_20] eax +
and ecx ebp +
mov eax edi +
mov [esp+64h+var_4] edx +
and eax esi +
rol edx 5 +
or ecx eax +
rol edi 1Eh +
add ecx [esp+64h+var_20] +
mov eax [esp+64h+var_48] +
add ecx ebx +
xor eax [esp+64h+var_1C] +
add edx ecx +
xor eax [esp+64h+var_28] +
mov ecx edi +
xor eax [esp+64h+var_38] +
mov ebx [esp+64h+var_4] +
or ecx ebx +
rol eax 1 +
and ecx esi +
mov [esp+64h+var_1C] eax +
mov eax edi +
and eax ebx +
mov [esp+64h+var_8] edx +
or ecx eax +
rol edx 5 +
mov eax [esp+64h+var_50] +
add ecx 8F1BBCDCh +
xor eax [esp+64h+var_18] +
add ecx [esp+64h+var_1C] +
xor eax [esp+64h+var_24] +
add ecx ebp +
xor eax [esp+64h+var_14] +
add edx ecx +
mov ebp [esp+64h+var_8] +
rol ebx 1Eh +
rol eax 1 +
mov ecx ebx +
mov [esp+64h+var_18] eax +
or ecx ebp +
mov eax ebx +
mov [esp+64h+var_4] edx +
and ecx edi +
rol edx 5 +
and eax ebp +
or ecx eax +
add ecx [esp+64h+var_18] +
mov eax [esp+64h+var_54] +
add esi 8F1BBCDCh +
xor eax [esp+64h+var_48] +
add ecx esi +
xor eax [esp+64h+var_20] +
add edx ecx +
xor eax [esp+64h+var_34] +
add edi 8F1BBCDCh +
mov esi [esp+64h+var_4] +
rol eax 1 +
mov [esp+64h+var_48] eax +
rol ebp 1Eh +
mov ecx ebp +
mov [esp+64h+var_8] edx +
or ecx esi +
rol edx 5 +
and ecx ebx +
mov eax ebp +
and eax esi +
add ebx 8F1BBCDCh +
or ecx eax +
rol esi 1Eh +
add ecx [esp+64h+var_48] +
mov eax [esp+64h+var_50] +
add ecx edi +
xor eax [esp+64h+var_1C] +
add edx ecx +
xor eax [esp+64h+var_30] +
mov ecx esi +
xor eax [esp+64h+var_44] +
mov edi [esp+64h+var_8] +
or ecx edi +
rol eax 1 +
and ecx ebp +
mov [esp+64h+var_50] eax +
add ebp 8F1BBCDCh +
mov eax esi +
mov [esp+64h+var_4] edx +
and eax edi +
rol edx 5 +
or ecx eax +
rol edi 1Eh +
add ecx [esp+64h+var_50] +
mov eax [esp+64h+var_54] +
add ecx ebx +
xor eax [esp+64h+var_18] +
add edx ecx +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_40] +
mov ebx [esp+64h+var_4] +
mov ecx ebx +
rol eax 1 +
or ecx edi +
mov [esp+64h+var_54] eax +
and ecx esi +
mov eax ebx +
mov [esp+64h+var_8] edx +
and eax edi +
rol edx 5 +
or ecx eax +
rol ebx 1Eh +
add ecx [esp+64h+var_54] +
mov eax [esp+64h+var_48] +
add ecx ebp +
xor eax [esp+64h+var_28] +
add edx ecx +
xor eax [esp+64h+var_3C] +
mov ecx ebx +
xor eax [esp+64h+var_44] +
mov ebp [esp+64h+var_8] +
or ecx ebp +
rol eax 1 +
and ecx edi +
mov [esp+64h+var_44] eax +
mov eax ebx +
and eax ebp +
mov [esp+64h+var_4] edx +
or ecx eax +
rol edx 5 +
add ecx [esp+64h+var_44] +
add esi 8F1BBCDCh +
mov eax [esp+64h+var_50] +
add ecx esi +
xor eax [esp+64h+var_24] +
add edx ecx +
xor eax [esp+64h+var_38] +
add edi 8F1BBCDCh +
xor eax [esp+64h+var_40] +
mov esi [esp+64h+var_4] +
rol eax 1 +
mov [esp+64h+var_40] eax +
rol ebp 1Eh +
mov ecx ebp +
mov [esp+64h+var_8] edx +
or ecx esi +
rol edx 5 +
and ecx ebx +
mov eax ebp +
and eax esi +
add ebx 8F1BBCDCh +
or ecx eax +
rol esi 1Eh +
add ecx [esp+64h+var_40] +
mov eax [esp+64h+var_54] +
add ecx edi +
xor eax [esp+64h+var_20] +
add edx ecx +
xor eax [esp+64h+var_14] +
mov ecx esi +
xor eax [esp+64h+var_3C] +
mov edi [esp+64h+var_8] +
or ecx edi +
rol eax 1 +
and ecx ebp +
mov [esp+64h+var_3C] eax +
mov eax esi +
and eax edi +
mov [esp+64h+var_4] edx +
or ecx eax +
rol edx 5 +
add ecx [esp+64h+var_3C] +
mov eax [esp+64h+var_1C] +
add ecx ebx +
xor eax [esp+64h+var_34] +
add edx ecx +
xor eax [esp+64h+var_38] +
xor eax [esp+64h+var_44] +
mov ebx [esp+64h+var_4] +
rol eax 1 +
mov [esp+64h+var_38] eax +
rol edi 1Eh +
mov ecx edi +
mov [esp+64h+var_C] edx +
or ecx ebx +
rol edx 5 +
and ecx esi +
mov eax edi +
and eax ebx +
rol ebx 1Eh +
or ecx eax +
add ecx [esp+64h+var_38] +
lea eax [edx-70E44324h] +
add ecx ebp +
mov ebp [esp+64h+var_C] +
add eax ecx +
mov ecx [esp+64h+var_18] +
xor ecx [esp+64h+var_30] +
mov edx eax +
xor ecx [esp+64h+var_14] +
xor ecx [esp+64h+var_40] +
rol ecx 1 +
mov [esp+64h+var_14] ecx +
mov ecx ebp +
mov [esp+64h+var_8] eax +
or ecx ebx +
mov eax ebp +
rol edx 5 +
and eax ebx +
and ecx edi +
or eax ecx +
add eax [esp+64h+var_14] +
add esi 8F1BBCDCh +
mov ecx [esp+64h+var_48] +
add eax esi +
xor ecx [esp+64h+var_2C] +
add eax edx +
xor ecx [esp+64h+var_34] +
mov edx eax +
xor ecx [esp+64h+var_3C] +
rol ecx 1 +
mov esi [esp+64h+var_8] +
mov [esp+64h+var_34] ecx +
mov [esp+64h+var_C] eax +
rol ebp 1Eh +
rol edx 5 +
mov ecx ebp +
or ecx esi +
mov eax ebp +
and ecx ebx +
and eax esi +
or ecx eax +
rol esi 1Eh +
add ecx [esp+64h+var_34] +
lea eax [edx-70E44324h] +
add ecx edi +
mov [esp+64h+var_8] esi +
add eax ecx +
mov edi [esp+64h+var_C] +
mov ecx [esp+64h+var_50] +
mov edx eax +
xor ecx [esp+64h+var_28] +
xor ecx [esp+64h+var_30] +
xor ecx [esp+64h+var_38] +
rol ecx 1 +
mov [esp+64h+var_30] ecx +
mov ecx esi +
or ecx edi +
mov [esp+64h+var_10] eax +
and ecx ebp +
rol edx 5 +
mov eax esi +
and eax edi +
rol edi 1Eh +
or ecx eax +
mov [esp+64h+var_C] edi +
add ecx [esp+64h+var_30] +
lea eax [edx-70E44324h] +
add ecx ebx +
mov ebx [esp+64h+var_10] +
add eax ecx +
mov ecx [esp+64h+var_54] +
xor ecx [esp+64h+var_24] +
mov edx eax +
xor ecx [esp+64h+var_2C] +
xor ecx [esp+64h+var_14] +
rol ecx 1 +
mov [esp+64h+var_2C] ecx +
mov ecx edi +
mov [esp+64h+var_4] eax +
or ecx ebx +
and ecx esi +
rol edx 5 +
mov eax edi +
and eax ebx +
rol ebx 1Eh +
or ecx eax +
mov [esp+64h+var_10] ebx +
add ecx [esp+64h+var_2C] +
lea esi [edx-70E44324h] +
mov eax [esp+64h+var_20] +
add ecx ebp +
xor eax [esp+64h+var_28] +
add esi ecx +
xor eax [esp+64h+var_34] +
mov ecx ebx +
xor eax [esp+64h+var_44] +
mov edx esi +
mov ebp [esp+64h+var_4] +
or ecx ebp +
rol eax 1 +
rol edx 5 +
and ecx edi +
mov [esp+64h+var_28] eax +
mov eax ebx +
lea edi [edx-70E44324h] +
and eax ebp +
rol ebp 1Eh +
or ecx eax +
mov [esp+64h+var_4] ebp +
add ecx [esp+64h+var_28] +
add ecx [esp+64h+var_8] +
mov eax [esp+64h+var_1C] +
add edi ecx +
xor eax [esp+64h+var_24] +
mov ecx esi +
xor eax [esp+64h+var_30] +
or ecx ebp +
xor eax [esp+64h+var_40] +
and ecx ebx +
rol eax 1 +
mov edx edi +
mov [esp+64h+var_24] eax +
mov eax esi +
and eax ebp +
rol edx 5 +
or ecx eax +
rol esi 1Eh +
add ecx [esp+64h+var_24] +
add ecx [esp+64h+var_C] +
mov eax [esp+64h+var_18] +
lea ebx [edx-70E44324h] +
xor eax [esp+64h+var_20] +
add ebx ecx +
xor eax [esp+64h+var_2C] +
mov ecx esi +
xor eax [esp+64h+var_3C] +
or ecx edi +
rol eax 1 +
and ecx ebp +
mov [esp+64h+var_20] eax +
mov edx ebx +
mov eax esi +
rol edx 5 +
and eax edi +
rol edi 1Eh +
or ecx eax +
mov eax [esp+64h+var_48] +
xor eax [esp+64h+var_1C] +
xor eax [esp+64h+var_28] +
lea ebp [edx-70E44324h] +
xor eax [esp+64h+var_38] +
add ecx [esp+64h+var_20] +
add ecx [esp+64h+var_10] +
rol eax 1 +
add ebp ecx +
mov [esp+64h+var_1C] eax +
mov ecx edi +
or ecx ebx +
mov eax edi +
and eax ebx +
and ecx esi +
or ecx eax +
rol ebx 1Eh +
add ecx [esp+64h+var_1C] +
mov edx ebp +
mov eax [esp+64h+var_4] +
add eax 8F1BBCDCh +
rol edx 5 +
add ecx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_18] +
add edx ecx +
xor eax [esp+64h+var_24] +
mov ecx edx +
xor eax [esp+64h+var_14] +
rol eax 1 +
mov [esp+64h+var_18] eax +
mov eax edi +
xor eax ebx +
rol ecx 5 +
xor eax ebp +
add eax [esp+64h+var_18] +
add eax esi +
lea esi [ecx-359D3E2Ah] +
add esi eax +
rol ebp 1Eh +
mov eax [esp+64h+var_54] +
mov ecx esi +
xor eax [esp+64h+var_48] +
xor eax [esp+64h+var_20] +
xor eax [esp+64h+var_34] +
rol eax 1 +
mov [esp+64h+var_10] eax +
mov eax ebx +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol edx 1Eh +
add eax [esp+64h+var_10] +
add eax edi +
lea edi [ecx-359D3E2Ah] +
add edi eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_1C] +
mov ecx edi +
xor eax [esp+64h+var_30] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_50] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add eax [esp+64h+var_50] +
add eax ebx +
lea ebx [ecx-359D3E2Ah] +
add ebx eax +
mov eax [esp+64h+var_54] +
xor eax [esp+64h+var_18] +
mov ecx ebx +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_54] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add eax [esp+64h+var_54] +
add eax ebp +
lea ebp [ecx-359D3E2Ah] +
add ebp eax +
mov eax [esp+64h+var_10] +
xor eax [esp+64h+var_28] +
mov ecx ebp +
xor eax [esp+64h+var_3C] +
xor eax [esp+64h+var_44] +
rol eax 1 +
mov [esp+64h+var_C] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
rol ebx 1Eh +
add eax [esp+64h+var_C] +
add eax edx +
lea edx [ecx-359D3E2Ah] +
add edx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_24] +
mov ecx edx +
xor eax [esp+64h+var_38] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_40] eax +
mov eax edi +
xor eax ebx +
rol ecx 5 +
xor eax ebp +
add eax [esp+64h+var_40] +
add eax esi +
lea esi [ecx-359D3E2Ah] +
add esi eax +
mov eax [esp+64h+var_54] +
mov ecx esi +
xor eax [esp+64h+var_20] +
xor eax [esp+64h+var_14] +
xor eax [esp+64h+var_3C] +
rol eax 1 +
mov [esp+64h+var_4] eax +
mov eax ebx +
rol ecx 5 +
rol ebp 1Eh +
xor eax ebp +
xor eax edx +
rol edx 1Eh +
add eax [esp+64h+var_4] +
add eax edi +
lea edi [ecx-359D3E2Ah] +
add edi eax +
mov eax [esp+64h+var_1C] +
xor eax [esp+64h+var_34] +
mov ecx edi +
xor eax [esp+64h+var_38] +
xor eax [esp+64h+var_C] +
rol eax 1 +
mov [esp+64h+var_38] eax +
mov eax esi +
xor eax ebp +
rol ecx 5 +
xor eax edx +
rol esi 1Eh +
add eax [esp+64h+var_38] +
add eax ebx +
lea ebx [ecx-359D3E2Ah] +
add ebx eax +
mov eax [esp+64h+var_18] +
xor eax [esp+64h+var_30] +
mov ecx ebx +
xor eax [esp+64h+var_14] +
xor eax [esp+64h+var_40] +
rol eax 1 +
mov [esp+64h+var_3C] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax edx +
rol edi 1Eh +
add eax [esp+64h+var_3C] +
add eax ebp +
lea ebp [ecx-359D3E2Ah] +
add ebp eax +
mov eax [esp+64h+var_10] +
xor eax [esp+64h+var_2C] +
mov ecx ebp +
xor eax [esp+64h+var_34] +
xor eax [esp+64h+var_4] +
rol eax 1 +
mov [esp+64h+var_34] eax +
mov eax esi +
xor eax edi +
rol ecx 5 +
xor eax ebx +
rol ebx 1Eh +
add eax [esp+64h+var_34] +
add eax edx +
lea edx [ecx-359D3E2Ah] +
add edx eax +
mov eax [esp+64h+var_50] +
xor eax [esp+64h+var_28] +
mov ecx edx +
xor eax [esp+64h+var_30] +
xor eax [esp+64h+var_38] +
rol eax 1 +
mov [esp+64h+var_30] eax +
mov eax edi +
xor eax ebx +
rol ecx 5 +
xor eax ebp +
add ecx 0CA62C1D6h +
add eax [esp+64h+var_30] +
add eax esi +
add eax ecx +
mov [esp+64h+var_8] eax +
mov esi [esp+64h+var_54] +
mov ecx eax +
xor esi [esp+64h+var_24] +
mov eax ebx +
xor esi [esp+64h+var_2C] +
xor esi [esp+64h+var_3C] +
rol ebp 1Eh +
xor eax ebp +
rol esi 1 +
xor eax edx +
rol ecx 5 +
add eax esi +
mov [esp+64h+var_2C] esi +
mov esi [esp+64h+var_20] +
add eax edi +
xor esi [esp+64h+var_28] +
add ecx 0CA62C1D6h +
xor esi [esp+64h+var_34] +
add eax ecx +
mov edi [esp+64h+var_8] +
mov ecx eax +
xor esi [esp+64h+var_C] +
mov [esp+64h+var_48] eax +
mov eax edi +
xor eax ebp +
rol edx 1Eh +
xor eax edx +
rol ecx 5 +
mov [esp+64h+var_14] edx +
rol esi 1 +
add eax esi +
rol edi 1Eh +
add eax ebx +
mov [esp+64h+var_8] edi +
mov ebx [esp+64h+var_1C] +
lea edx [ecx-359D3E2Ah] +
xor ebx [esp+64h+var_24] +
add edx eax +
xor ebx [esp+64h+var_30] +
mov ecx edx +
xor ebx [esp+64h+var_40] +
mov eax edi +
xor eax [esp+64h+var_48] +
xor eax [esp+64h+var_14] +
rol [esp+64h+var_48] 1Eh +
rol ecx 5 +
rol ebx 1 +
add eax ebx +
add eax ebp +
mov ebp [esp+64h+var_18] +
xor ebp [esp+64h+var_20] +
lea edi [ecx-359D3E2Ah] +
xor ebp [esp+64h+var_2C] +
add edi eax +
mov eax [esp+64h+var_8] +
mov ecx edi +
xor eax [esp+64h+var_48] +
xor ebp [esp+64h+var_4] +
xor eax edx +
rol edx 1Eh +
mov [esp+64h+var_4] edx +
mov edx [esp+64h+var_10] +
xor edx [esp+64h+var_1C] +
rol ebp 1 +
xor edx esi +
xor edx [esp+64h+var_38] +
add eax ebp +
add eax [esp+64h+var_14] +
rol ecx 5 +
add ecx 0CA62C1D6h +
rol edx 1 +
add eax ecx +
mov esi eax +
mov eax [esp+64h+var_48] +
xor eax [esp+64h+var_4] +
mov ecx esi +
xor eax edi +
rol ecx 5 +
add eax edx +
add eax [esp+64h+var_8] +
add ecx 0CA62C1D6h +
add ecx eax +
rol edi 1Eh +
mov eax [esp+64h+var_4] +
mov [esp+64h+var_8] edi +
xor eax [esp+64h+var_8] +
mov edi [esp+64h+var_50] +
xor eax esi +
xor edi [esp+64h+var_18] +
xor edx [esp+64h+var_50] +
xor edi ebx +
xor edi [esp+64h+var_3C] +
mov [esp+64h+var_1C] ecx +
rol ecx 5 +
xor edx [esp+64h+var_30] +
xor edx [esp+64h+var_C] +
rol edi 1 +
add eax edi +
rol esi 1Eh +
add eax [esp+64h+var_48] +
lea ebx [ecx-359D3E2Ah] +
mov ecx [esp+64h+var_54] +
add ebx eax +
xor ecx [esp+64h+var_10] +
mov eax ebx +
rol eax 5 +
xor ecx ebp +
xor ecx [esp+64h+var_34] +
mov ebp [esp+64h+var_1C] +
rol ecx 1 +
add ecx eax +
mov [esp+64h+var_14] esi +
mov eax ebp +
rol edx 1 +
xor eax [esp+64h+var_8] +
xor esi eax +
rol ebp 1Eh +
add esi 0CA62C1D6h +
add esi [esp+64h+var_4] +
add esi ecx +
mov eax esi +
rol eax 5 +
add edx eax +
mov eax ebp +
xor eax ebx +
rol ebx 1Eh +
xor eax [esp+64h+var_14] +
add eax 0CA62C1D6h +
add eax [esp+64h+var_8] +
add edx eax +
mov eax [esp+64h+var_54] +
xor eax edi +
mov ecx edx +
xor eax [esp+64h+var_2C] +
xor eax [esp+64h+var_40] +
mov edi [esp+64h+var_4C] +
rol eax 1 +
add eax [esp+64h+var_14] +
mov [esp+64h+var_54] eax +
mov eax ebp +
add [edi+0Ch] ebx +
xor eax ebx +
add [edi+4] edx +
xor eax esi +
add eax 0CA62C1D6h +
rol ecx 5 +
add eax [edi] +
add ecx [esp+64h+var_54] +
rol esi 1Eh +
add eax ecx +
add [edi+8] esi +
add [edi+10h] ebp +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 54h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi unk_48B700 +
push ebp  +
mov ebx esp +
and esp 0FFFFFFF0h +
sub esp 70h +
push ebx  +
mov [esp+84h+var_1C] ecx +
mov [esp+84h+var_18] edx +
lea eax [edi+edx] +
mov [esp+84h+var_14] eax +
mov [esp+84h+var_20] esi +
test edi 1 +
jnz loc_441213  +
dec [esp+84h+var_20]  +
movdqa xmm0 oword ptr [ecx] +
movdqa xmm1 oword ptr [ecx+10h] +
jmp loc_441226  +
mov esi ecx +
lea edi [esp+84h+var_80] +
mov ecx 8 +
movs   +
mov esi [esp+84h+var_20] +
jmp loc_441232  +
movdqa oword ptr [esp+84h+var_70] xmm1 +
movdqa oword ptr [esp+84h+var_80] xmm0 +
sub esi 0C0h +
mov ebx [edx] +
bswap ebx  +
mov [esp+84h+var_24] ebx +
mov ebx [edx+4] +
bswap ebx  +
mov [esp+84h+var_28] ebx +
mov ebx [edx+8] +
bswap ebx  +
mov [esp+84h+var_2C] ebx +
mov ebx [edx+0Ch] +
bswap ebx  +
mov [esp+84h+var_30] ebx +
mov ebx [edx+10h] +
bswap ebx  +
mov [esp+84h+var_34] ebx +
mov ebx [edx+14h] +
bswap ebx  +
mov [esp+84h+var_38] ebx +
mov ebx [edx+18h] +
bswap ebx  +
mov [esp+84h+var_3C] ebx +
mov ebx [edx+1Ch] +
bswap ebx  +
mov [esp+84h+var_40] ebx +
mov ebx [edx+20h] +
bswap ebx  +
mov [esp+84h+var_44] ebx +
mov ebx [edx+24h] +
bswap ebx  +
mov [esp+84h+var_48] ebx +
mov ebx [edx+28h] +
bswap ebx  +
mov [esp+84h+var_4C] ebx +
mov ebx [edx+2Ch] +
bswap ebx  +
mov [esp+84h+var_50] ebx +
mov ebx [edx+30h] +
bswap ebx  +
mov [esp+84h+var_54] ebx +
mov ebx [edx+34h] +
bswap ebx  +
mov [esp+84h+var_58] ebx +
mov ebx [edx+38h] +
bswap ebx  +
mov [esp+84h+var_5C] ebx +
mov ebx [edx+3Ch] +
bswap ebx  +
mov [esp+84h+var_60] ebx +
mov edi dword ptr [esp+84h+var_70] +
mov eax dword ptr [esp+84h+var_80+4] +
xor eax dword ptr [esp+84h+var_80+8] +
mov ecx dword ptr [esp+84h+var_80] +
mov edx dword ptr [esp+84h+var_70+4] +
xor edx dword ptr [esp+84h+var_70+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_70+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi] +
add edx [esp+84h+var_24] +
add edx dword ptr [esp+84h+var_70+0Ch] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+0Ch] +
mov dword ptr [esp+84h+var_80+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+0Ch] eax +
mov edi dword ptr [esp+84h+var_70] +
xor edi dword ptr [esp+84h+var_70+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+4] +
add edi [esp+84h+var_28] +
add edi dword ptr [esp+84h+var_70+8] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80+8] +
mov dword ptr [esp+84h+var_80+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70+8] ecx +
mov edx dword ptr [esp+84h+var_80+0Ch] +
xor edx dword ptr [esp+84h+var_70] +
and edx edi +
xor edx dword ptr [esp+84h+var_70] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+8] +
add edx [esp+84h+var_2C] +
add edx dword ptr [esp+84h+var_70+4] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+4] +
mov dword ptr [esp+84h+var_80+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+4] eax +
mov edi dword ptr [esp+84h+var_80+8] +
xor edi dword ptr [esp+84h+var_80+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+0Ch] +
add edi [esp+84h+var_30] +
add edi dword ptr [esp+84h+var_70] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80] +
mov dword ptr [esp+84h+var_80] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70] ecx +
mov edx dword ptr [esp+84h+var_80+4] +
xor edx dword ptr [esp+84h+var_80+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_80+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+10h] +
add edx [esp+84h+var_34] +
add edx dword ptr [esp+84h+var_80+0Ch] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+0Ch] +
mov dword ptr [esp+84h+var_70+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+0Ch] eax +
mov edi dword ptr [esp+84h+var_80] +
xor edi dword ptr [esp+84h+var_80+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+14h] +
add edi [esp+84h+var_38] +
add edi dword ptr [esp+84h+var_80+8] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70+8] +
mov dword ptr [esp+84h+var_70+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80+8] ecx +
mov edx dword ptr [esp+84h+var_70+0Ch] +
xor edx dword ptr [esp+84h+var_80] +
and edx edi +
xor edx dword ptr [esp+84h+var_80] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+18h] +
add edx [esp+84h+var_3C] +
add edx dword ptr [esp+84h+var_80+4] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+4] +
mov dword ptr [esp+84h+var_70+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+4] eax +
mov edi dword ptr [esp+84h+var_70+8] +
xor edi dword ptr [esp+84h+var_70+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+1Ch] +
add edi [esp+84h+var_40] +
add edi dword ptr [esp+84h+var_80] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70] +
mov dword ptr [esp+84h+var_70] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80] ecx +
mov edx dword ptr [esp+84h+var_70+4] +
xor edx dword ptr [esp+84h+var_70+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_70+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+20h] +
add edx [esp+84h+var_44] +
add edx dword ptr [esp+84h+var_70+0Ch] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+0Ch] +
mov dword ptr [esp+84h+var_80+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+0Ch] eax +
mov edi dword ptr [esp+84h+var_70] +
xor edi dword ptr [esp+84h+var_70+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+24h] +
add edi [esp+84h+var_48] +
add edi dword ptr [esp+84h+var_70+8] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80+8] +
mov dword ptr [esp+84h+var_80+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70+8] ecx +
mov edx dword ptr [esp+84h+var_80+0Ch] +
xor edx dword ptr [esp+84h+var_70] +
and edx edi +
xor edx dword ptr [esp+84h+var_70] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+28h] +
add edx [esp+84h+var_4C] +
add edx dword ptr [esp+84h+var_70+4] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+4] +
mov dword ptr [esp+84h+var_80+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+4] eax +
mov edi dword ptr [esp+84h+var_80+8] +
xor edi dword ptr [esp+84h+var_80+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+2Ch] +
add edi [esp+84h+var_50] +
add edi dword ptr [esp+84h+var_70] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80] +
mov dword ptr [esp+84h+var_80] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70] ecx +
mov edx dword ptr [esp+84h+var_80+4] +
xor edx dword ptr [esp+84h+var_80+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_80+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+30h] +
add edx [esp+84h+var_54] +
add edx dword ptr [esp+84h+var_80+0Ch] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+0Ch] +
mov dword ptr [esp+84h+var_70+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+0Ch] eax +
mov edi dword ptr [esp+84h+var_80] +
xor edi dword ptr [esp+84h+var_80+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+34h] +
add edi [esp+84h+var_58] +
add edi dword ptr [esp+84h+var_80+8] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70+8] +
mov dword ptr [esp+84h+var_70+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80+8] ecx +
mov edx dword ptr [esp+84h+var_70+0Ch] +
xor edx dword ptr [esp+84h+var_80] +
and edx edi +
xor edx dword ptr [esp+84h+var_80] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
add edx [esi+38h] +
add edx [esp+84h+var_5C] +
add edx dword ptr [esp+84h+var_80+4] +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+4] +
mov dword ptr [esp+84h+var_70+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+4] eax +
mov edi dword ptr [esp+84h+var_70+8] +
xor edi dword ptr [esp+84h+var_70+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
add edi [esi+3Ch] +
add edi [esp+84h+var_60] +
add edi dword ptr [esp+84h+var_80] +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70] +
mov dword ptr [esp+84h+var_70] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80] ecx +
add esi 40h +
mov edx dword ptr [esp+84h+var_70+4] +
xor edx dword ptr [esp+84h+var_70+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_70+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_5C] +
mov edi [esp+84h+var_28] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_48] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_24] +
xor ebp edi +
add edx [esi] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_70+0Ch] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_24] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+0Ch] +
mov dword ptr [esp+84h+var_80+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+0Ch] eax +
mov edi dword ptr [esp+84h+var_70] +
xor edi dword ptr [esp+84h+var_70+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_60] +
mov edx [esp+84h+var_2C] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_4C] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_28] +
xor ebp edx +
add edi [esi+4] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_70+8] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_28] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80+8] +
mov dword ptr [esp+84h+var_80+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70+8] ecx +
mov edx dword ptr [esp+84h+var_80+0Ch] +
xor edx dword ptr [esp+84h+var_70] +
and edx edi +
xor edx dword ptr [esp+84h+var_70] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_24] +
mov edi [esp+84h+var_30] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_50] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_2C] +
xor ebp edi +
add edx [esi+8] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_70+4] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_2C] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+4] +
mov dword ptr [esp+84h+var_80+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+4] eax +
mov edi dword ptr [esp+84h+var_80+8] +
xor edi dword ptr [esp+84h+var_80+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_28] +
mov edx [esp+84h+var_34] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_54] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_30] +
xor ebp edx +
add edi [esi+0Ch] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_70] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_30] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80] +
mov dword ptr [esp+84h+var_80] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70] ecx +
mov edx dword ptr [esp+84h+var_80+4] +
xor edx dword ptr [esp+84h+var_80+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_80+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_2C] +
mov edi [esp+84h+var_38] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_58] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_34] +
xor ebp edi +
add edx [esi+10h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_80+0Ch] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_34] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+0Ch] +
mov dword ptr [esp+84h+var_70+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+0Ch] eax +
mov edi dword ptr [esp+84h+var_80] +
xor edi dword ptr [esp+84h+var_80+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_30] +
mov edx [esp+84h+var_3C] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_5C] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_38] +
xor ebp edx +
add edi [esi+14h] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_80+8] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_38] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70+8] +
mov dword ptr [esp+84h+var_70+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80+8] ecx +
mov edx dword ptr [esp+84h+var_70+0Ch] +
xor edx dword ptr [esp+84h+var_80] +
and edx edi +
xor edx dword ptr [esp+84h+var_80] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_34] +
mov edi [esp+84h+var_40] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_60] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_3C] +
xor ebp edi +
add edx [esi+18h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_80+4] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_3C] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+4] +
mov dword ptr [esp+84h+var_70+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+4] eax +
mov edi dword ptr [esp+84h+var_70+8] +
xor edi dword ptr [esp+84h+var_70+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_38] +
mov edx [esp+84h+var_44] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_24] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_40] +
xor ebp edx +
add edi [esi+1Ch] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_80] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_40] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70] +
mov dword ptr [esp+84h+var_70] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80] ecx +
mov edx dword ptr [esp+84h+var_70+4] +
xor edx dword ptr [esp+84h+var_70+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_70+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_3C] +
mov edi [esp+84h+var_48] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_28] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_44] +
xor ebp edi +
add edx [esi+20h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_70+0Ch] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_44] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+0Ch] +
mov dword ptr [esp+84h+var_80+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+0Ch] eax +
mov edi dword ptr [esp+84h+var_70] +
xor edi dword ptr [esp+84h+var_70+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_40] +
mov edx [esp+84h+var_4C] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_2C] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_48] +
xor ebp edx +
add edi [esi+24h] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_70+8] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_48] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80+8] +
mov dword ptr [esp+84h+var_80+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70+8] ecx +
mov edx dword ptr [esp+84h+var_80+0Ch] +
xor edx dword ptr [esp+84h+var_70] +
and edx edi +
xor edx dword ptr [esp+84h+var_70] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_44] +
mov edi [esp+84h+var_50] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_30] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_4C] +
xor ebp edi +
add edx [esi+28h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_70+4] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_4C] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_80+4] +
mov dword ptr [esp+84h+var_80+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_70+4] eax +
mov edi dword ptr [esp+84h+var_80+8] +
xor edi dword ptr [esp+84h+var_80+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_48] +
mov edx [esp+84h+var_54] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_34] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_50] +
xor ebp edx +
add edi [esi+2Ch] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_70] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_50] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_80] +
mov dword ptr [esp+84h+var_80] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_70] ecx +
mov edx dword ptr [esp+84h+var_80+4] +
xor edx dword ptr [esp+84h+var_80+8] +
and edx edi +
xor edx dword ptr [esp+84h+var_80+8] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_4C] +
mov edi [esp+84h+var_58] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_38] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_54] +
xor ebp edi +
add edx [esi+30h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_80+0Ch] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_54] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_70+4] +
and eax ecx +
xor eax dword ptr [esp+84h+var_70+4] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+0Ch] +
mov dword ptr [esp+84h+var_70+0Ch] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+0Ch] eax +
mov edi dword ptr [esp+84h+var_80] +
xor edi dword ptr [esp+84h+var_80+4] +
and edi edx +
xor edi dword ptr [esp+84h+var_80+4] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_50] +
mov edx [esp+84h+var_5C] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_3C] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_58] +
xor ebp edx +
add edi [esi+34h] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_80+8] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_58] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_70] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_70] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70+8] +
mov dword ptr [esp+84h+var_70+8] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80+8] ecx +
mov edx dword ptr [esp+84h+var_70+0Ch] +
xor edx dword ptr [esp+84h+var_80] +
and edx edi +
xor edx dword ptr [esp+84h+var_80] +
mov ebp edi +
ror edi 6 +
ror ebp 19h +
xor ebp edi +
ror edi 5 +
xor ebp edi +
add edx ebp +
mov ebp [esp+84h+var_54] +
mov edi [esp+84h+var_60] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_40] +
mov ebp edi +
shr ebp 3 +
ror edi 7 +
add ebx [esp+84h+var_5C] +
xor ebp edi +
add edx [esi+38h] +
ror edi 0Bh +
add edx dword ptr [esp+84h+var_80+4] +
xor ebp edi +
add ebp ebx +
mov [esp+84h+var_5C] ebp +
add edx ebp +
mov ebx ecx +
xor ecx dword ptr [esp+84h+var_80+0Ch] +
and eax ecx +
xor eax dword ptr [esp+84h+var_80+0Ch] +
mov ebp ebx +
ror ebx 2 +
add eax edx +
add edx dword ptr [esp+84h+var_70+4] +
mov dword ptr [esp+84h+var_70+4] edx +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add eax ebp +
mov dword ptr [esp+84h+var_80+4] eax +
mov edi dword ptr [esp+84h+var_70+8] +
xor edi dword ptr [esp+84h+var_70+0Ch] +
and edi edx +
xor edi dword ptr [esp+84h+var_70+0Ch] +
mov ebp edx +
ror edx 6 +
ror ebp 19h +
xor ebp edx +
ror edx 5 +
xor ebp edx +
add edi ebp +
mov ebp [esp+84h+var_58] +
mov edx [esp+84h+var_24] +
mov ebx ebp +
shr ebp 0Ah +
ror ebx 11h +
xor ebp ebx +
ror ebx 2 +
xor ebx ebp +
add ebx [esp+84h+var_44] +
mov ebp edx +
shr ebp 3 +
ror edx 7 +
add ebx [esp+84h+var_60] +
xor ebp edx +
add edi [esi+3Ch] +
ror edx 0Bh +
add edi dword ptr [esp+84h+var_80] +
xor ebp edx +
add ebp ebx +
mov [esp+84h+var_60] ebp +
add edi ebp +
mov ebx eax +
xor eax dword ptr [esp+84h+var_80+8] +
and ecx eax +
xor ecx dword ptr [esp+84h+var_80+8] +
mov ebp ebx +
ror ebx 2 +
add ecx edi +
add edi dword ptr [esp+84h+var_70] +
mov dword ptr [esp+84h+var_70] edi +
ror ebp 16h +
xor ebp ebx +
ror ebx 0Bh +
xor ebp ebx +
add ecx ebp +
mov dword ptr [esp+84h+var_80] ecx +
cmp esi [esp+84h+var_20] +
jb loc_441826  +
mov edx [esp+84h+var_18] +
add edx 40h +
mov ebp [esp+84h+var_1C] +
mov [esp+84h+var_18] edx +
test [esp+84h+var_20] 1 +
jz loc_4420E7  +
movdqa xmm1 oword ptr [ebp+arg_8] +
movdqa xmm0 oword ptr [ebp+0] +
paddd xmm1 oword ptr [esp+84h+var_70] +
paddd xmm0 oword ptr [esp+84h+var_80] +
movdqa oword ptr [ebp+arg_8] xmm1 +
movdqa oword ptr [ebp+0] xmm0 +
cmp edx [esp+84h+var_14] +
jb loc_441226  +
jmp loc_442123  +
add [ebp+0] ecx +
add dword ptr [ebp+arg_8] edi +
mov eax dword ptr [esp+84h+var_80+4] +
mov ebx dword ptr [esp+84h+var_80+8] +
mov ecx dword ptr [esp+84h+var_80+0Ch] +
add [ebp+4] eax +
add [ebp+arg_0] ebx +
add [ebp+arg_4] ecx +
mov eax dword ptr [esp+84h+var_70+4] +
mov ebx dword ptr [esp+84h+var_70+8] +
mov ecx dword ptr [esp+84h+var_70+0Ch] +
add dword ptr [ebp+arg_8+4] eax +
add dword ptr [ebp+arg_8+8] ebx +
add dword ptr [ebp+arg_8+0Ch] ecx +
mov ecx ebp +
cmp edx [esp+84h+var_14] +
jb loc_441213  +
pop esp  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp byte_4A2927 0 +
push esi  +
push edi  +
mov edi ecx +
jnz loc_442142  +
call sub_446070  +
mov esi [esp+8+arg_4] +
xor edx edx +
cmp byte_4A2926 dl +
mov ecx esi +
setz dl  +
and ecx 0FFFFFFC0h +
sub ecx edx +
mov edx [esp+8+arg_0] +
push ecx  +
mov ecx [edi+0B4h] +
call sub_4411D0  +
and esi 3Fh +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi [esp+14h] +
mov ebx ecx +
shr esi 2 +
push edi  +
xor edi edi +
mov [esp+10h] edx +
mov [esp+18h] esi +
test esi esi +
jz loc_442232  +
cmp esi 8 +
jb loc_442217  +
cmp dword_4A1FB4 2 +
jl loc_442217  +
lea eax [edx-4] +
lea eax [eax+esi*4] +
lea ecx [esi-1] +
lea ecx [ebx+ecx*4] +
cmp ebx eax +
ja loc_4421C3  +
cmp ecx edx +
jnb loc_442217  +
mov eax esi +
mov ecx ebx +
push ebp  +
mov ebp esi +
and eax 7 +
sub ebp eax +
mov esi ebx +
sub esi edx +
lea eax [edx+10h] +
mov [esp+10h] esi +
mov esi [esp+1Ch] +
mov edx [esp+10h] +
movups xmm0 oword ptr [eax-10h] +
add edi 8 +
lea ecx [ecx+20h] +
lea eax [eax+20h] +
add eax offset unk_491640 +
movups oword ptr [edx+eax-20h] xmm0 +
cmp edi ebp +
jb loc_4421E2  +
mov edx [esp+14h] +
pop ebp  +
cmp edi esi +
jnb loc_442232  +
sub edx ebx +
lea eax [ebx+edi*4] +
sub esi edi +
mov ecx [edx+eax] +
lea eax [eax+4] +
bswap ecx  +
mov [eax-4] ecx +
sub esi 1 +
jnz loc_442222  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476C0F  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov edx 100h +
test ecx ecx +
mov dword ptr [edi] offset off_4912A4 +
push 18h  +
setz al  +
mov dword ptr [edi+4] offset off_491358 +
test al al +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
cmovnz ecx edx +
mov [edi+0Ch] al +
mov [edi+10h] ecx +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 2 +
mov ebx [edi+10h] +
mov ecx ebx +
mov [esi+8] ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_4422C8  +
xor eax eax +
jmp loc_4422CF  +
mov ecx ebx +
call loc_43F720  +
mov [esi+0Ch] eax +
mov eax edi +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi] 0 +
mov [edi+18h] esi +
mov [edi+14h] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_4912A4 +
mov dword ptr [esi+4] offset off_491358 +
call loc_4424D0  +
test [esp+arg_0] 1 +
jz loc_442337  +
push 28h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A09E  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-14h] edi +
mov ebx [ebp+8] +
mov dword ptr [edi+20h] 0 +
push 18h  +
mov al [ebx+0Ch] +
mov [edi+0Ch] al +
mov eax [ebx+10h] +
mov [edi+10h] eax +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-18h] esi +
mov dword ptr [ebp-4] 0 +
mov eax [ebx+14h] +
mov [ebp-10h] eax +
mov ecx [eax] +
mov [esi] ecx +
mov ebx [eax+8] +
mov ecx ebx +
mov [esi+8] ebx +
call sub_40FD30  +
test ebx ebx +
jnz loc_4423B8  +
xor eax eax +
jmp loc_4423BF  +
mov ecx ebx +
call loc_43F720  +
mov ebx [ebp-10h] +
mov ecx eax +
mov edx [esi+8] +
push edx  +
mov [esi+0Ch] eax +
push dword ptr [ebx+0Ch]  +
call sub_40A5A0  +
mov eax [ebx+10h] +
add esp 8 +
mov ecx [ebp+8] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [edi+18h] esi +
mov [edi+14h] esi +
mov eax [ecx+14h] +
mov ebx [eax] +
test ebx ebx +
jz loc_442476  +
push 18h  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp-18h] esi +
mov dword ptr [ebp-4] 1 +
mov ecx [ebx] +
mov [esi] ecx +
mov edi [ebx+8] +
mov ecx edi +
mov [esi+8] edi +
call sub_40FD30  +
test edi edi +
jnz loc_44242F  +
xor eax eax +
jmp loc_442436  +
mov ecx edi +
call loc_43F720  +
mov edx [esi+8] +
mov ecx eax +
push edx  +
mov [esi+0Ch] eax +
push dword ptr [ebx+0Ch]  +
call sub_40A5A0  +
mov eax [ebx+10h] +
add esp 8 +
mov edi [ebp-14h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [edi+18h] +
mov [eax] esi +
mov eax [edi+18h] +
mov eax [eax] +
mov [edi+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_442400  +
mov ecx [ebp+8] +
mov eax [edi+18h] +
push 1  +
push 0  +
mov dword ptr [eax] 0 +
push dword ptr [ecx+20h]  +
mov eax [edi] +
push dword ptr [ecx+1Ch]  +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4912A4 +
mov dword ptr [ecx+4] offset off_491358 +
jmp loc_4424D0  +
***
push esi  +
mov esi [ecx+14h] +
test esi esi +
jz loc_442507  +
push ebx  +
push edi  +
fistp  dword ptr [edi+5Bh] +
pop esi  +
retn   +
***
mov esi ecx +
mov [esp+8+var_4] 100h +
mov ecx [esp+8+arg_0] +
lea edx [esp+8+var_4] +
push edx  +
push offset off_49F8D4  +
push offset aNodesize  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esp+8+var_4] +
mov ecx esi +
mov [esi+10h] eax +
call sub_442550  +
pop esi  +
pop ecx  +
retn 4  +
***
push esi  +
mov esi [ebp+14h] +
mov esi [esi] +
test esi esi +
jz loc_442587  +
push ebx  +
push edi  +
nop   +
mov edx [esi+0Ch] +
xor al al +
mov ecx [esi+8] +
mov edi edx +
mov ebx [esi] +
stos   +
push edx  +
call sub_45B0EB  +
push 18h  +
push esi  +
call sub_44FE8C  +
add esp 0Ch +
mov esi ebx +
test ebx ebx +
jnz loc_442560  +
pop edi  +
pop ebx  +
mov eax [ebp+14h] +
mov [ebp+18h] eax +
pop esi  +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov eax [ebp+14h] +
mov dword ptr [eax] 0 +
mov dword ptr [ebp+20h] 0 +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A0CF  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_4425F7  +
mov eax [esi] +
push 1  +
push 0  +
push ecx  +
push dword ptr [esi+1Ch]  +
mov ecx esi +
mov dword ptr [esi+20h] 0 +
call dword ptr [eax+14h]  +
mov edi [ebp+0Ch] +
push ebx  +
mov ebx ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jz loc_44275B  +
push esi  +
push edi  +
mov esi [ebx+14h] +
mov eax [esi+10h] +
cmp eax [esi+8] +
jnz loc_442759  +
mov eax [esi] +
mov [ebx+14h] eax +
test esi esi +
jz loc_442751  +
mov edx [esi+0Ch] +
xor al al +
mov ecx [esi+8] +
mov edi edx +
stos   +
push edx  +
call sub_45B0EB  +
push 18h  +
push esi  +
call sub_44FE8C  +
add esp 0Ch +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jnz loc_442720  +
pop edi  +
pop esi  +
mov ecx [ebx+14h] +
pop ebx  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
jnz locret_44276D  +
mov [ecx+14h] eax +
mov [ecx+10h] eax +
retn   +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [esp+8+arg_0] +
mov ecx [edx+14h] +
mov esi [ecx+10h] +
cmp [ecx+14h] esi +
jnz loc_442787  +
xor eax eax +
jmp loc_442794  +
mov eax [ecx+0Ch] +
mov al [esi+eax] +
mov [edi] al +
mov eax 1 +
add [ecx+10h] eax +
test eax eax +
jz loc_4427B7  +
mov ecx [edx+14h] +
mov eax [ecx+10h] +
cmp eax [ecx+8] +
jnz loc_4427AD  +
mov ecx edx +
call loc_442710  +
pop edi  +
mov eax 1 +
pop esi  +
retn 4  +
cmp dword ptr [edx+20h] 0 +
jbe loc_4427D4  +
mov eax [edx+1Ch] +
mov al [eax] +
mov [edi] al +
mov eax 1 +
inc dword ptr [edx+1Ch]  +
dec dword ptr [edx+20h]  +
pop edi  +
pop esi  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_478A80  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_4] +
xorps xmm0 xmm0 +
mov eax [ebp+arg_0] +
push 1  +
mov [ebp+var_28] edx +
mov [ebp+var_18] edx +
lea edx [ebp+var_18] +
push offset dword_4A314C  +
mov [ebp+var_2C] eax +
mov eax [ecx] +
push edx  +
lea edx [ebp+var_38] +
mov [ebp+var_38] offset off_490378 +
push edx  +
mov [ebp+var_34] offset off_490368 +
movlpd oword ptr [ebp-20h] xmm0 +
mov [ebp+var_14] 0 +
call dword ptr [eax+7Ch]  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+14h] +
mov edx [eax+10h] +
cmp [eax+14h] edx +
jz loc_44288F  +
mov eax [eax+0Ch] +
mov cl [edx+eax] +
mov eax [esp+arg_0] +
mov [eax] cl +
mov eax 1 +
retn 4  +
cmp dword ptr [ecx+20h] 0 +
jbe loc_4428A8  +
mov eax [ecx+1Ch] +
mov cl [eax] +
mov eax [esp+arg_0] +
mov [eax] cl +
mov eax 1 +
retn 4  +
xor eax eax +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4788D0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push ecx  +
mov [ebp+var_24] eax +
mov eax [ebp+arg_4] +
push 0  +
push eax  +
mov [ebp+var_20] eax +
lea eax [ebp+var_30] +
push eax  +
mov [ebp+var_30] offset off_490378 +
mov [ebp+var_2C] offset off_490368 +
movlpd oword ptr [ebp-18h] xmm0 +
call sub_422EC0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_47A0F0  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_50] ebx +
cmp [ebp+arg_C] 0 +
mov edx [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov esi [ebp+arg_8] +
mov [ebp+var_44] edx +
mov [ebp+var_54] edi +
mov [ebp+var_4C] esi +
jz loc_442A3D  +
mov ecx [ebp+var_54] +
mov edi [edi] +
mov eax edi +
mov ebx [ebx+14h] +
mov ecx [ecx+4] +
or eax ecx +
mov [ebp+var_48] ecx +
jz loc_4429DB  +
jmp loc_442995  +
mov edx [ebp+var_44] +
test ebx ebx +
jz loc_4429DB  +
mov esi [ebx+14h] +
sub esi [ebx+10h] +
test ecx ecx +
ja loc_4429AB  +
jb loc_4429A9  +
cmp edi esi +
jnb loc_4429AB  +
mov esi edi +
mov eax [ebx+0Ch] +
add eax [ebx+10h] +
mov edx [edx] +
mov ecx [ebp+var_44] +
push 1  +
push 0  +
push esi  +
push eax  +
push [ebp+var_4C]  +
call dword ptr [edx+8Ch]  +
add [ebx+10h] esi +
sub edi esi +
mov ecx [ebp+var_48] +
mov eax edi +
mov ebx [ebx] +
sbb ecx 0 +
or eax ecx +
mov [ebp+var_48] ecx +
jnz loc_442992  +
mov ecx [ebp+var_50] +
call loc_442710  +
mov ecx [ebp+var_50] +
xor eax eax +
mov esi [ebp+var_48] +
mov ebx [ecx+20h] +
cmp eax esi +
ja loc_4429F8  +
jb loc_4429FA  +
cmp ebx edi +
jb loc_4429FA  +
mov ebx edi +
test ebx ebx +
jz loc_442A31  +
mov edx [ebp+var_44] +
cmp [ecx+24h] al +
push 1  +
push 0  +
mov eax [edx] +
push ebx  +
push dword ptr [ecx+1Ch]  +
mov ecx edx +
push [ebp+var_4C]  +
jz loc_442A1D  +
call dword ptr [eax+8Ch]  +
jmp loc_442A23  +
call dword ptr [eax+88h]  +
mov eax [ebp+var_50] +
add [eax+1Ch] ebx +
sub [eax+20h] ebx +
sub edi ebx +
sbb esi 0 +
mov eax [ebp+var_54] +
sub [eax] edi +
sbb [eax+4] esi +
xor eax eax +
jmp loc_442A7B  +
push dword_4A3180  +
lea ecx [ebp+var_40] +
mov [ebp+var_40] offset off_4900E4 +
mov [ebp+var_3C] offset off_4900D4 +
mov [ebp+var_34] ebx +
call sub_442C30  +
push 0  +
push esi  +
push edi  +
push [ebp+var_44]  +
lea ecx [ebp+var_40] +
call loc_442E00  +
push dword ptr [edi+4]  +
mov edx [ebx] +
mov ecx ebx +
push dword ptr [edi]  +
mov esi eax +
call dword ptr [edx+54h]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_47A120  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push dword_4A3180  +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov esi [ebp+arg_10] +
mov [ebp+var_34] ecx +
lea ecx [ebp+var_40] +
mov [ebp+var_40] offset off_4900E4 +
mov [ebp+var_3C] offset off_4900D4 +
call sub_442C30  +
push dword ptr [ebx+4]  +
lea ecx [ebp+var_40] +
push dword ptr [ebx]  +
call sub_4248B0  +
mov ecx [ebp+arg_8] +
sub ecx [ebx] +
push [ebp+arg_14]  +
mov eax [ebp+arg_C] +
sbb eax [ebx+4] +
mov [ebp+var_44] eax +
lea eax [ebp+var_48] +
push esi  +
push eax  +
mov [ebp+var_48] ecx +
lea ecx [ebp+var_40] +
push edi  +
call loc_442E00  +
mov ecx [ebp+var_48] +
add [ebx] ecx +
mov ecx [ebp+var_44] +
adc [ebx+4] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_47A15F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_442B95  +
mov eax [esi] +
push 1  +
push 0  +
push ecx  +
push dword ptr [esi+1Ch]  +
mov ecx esi +
mov dword ptr [esi+20h] 0 +
call dword ptr [eax+14h]  +
mov ecx [esi+18h] +
mov ebx [ebp+arg_0] +
mov eax [ecx+8] +
cmp [ecx+14h] eax +
jnz loc_442C06  +
push 18h  +
call sub_44FE54  +
mov edi eax +
add esp 4 +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
lea edx [esi+10h] +
mov ecx [edx] +
cmp ecx [ebx] +
cmovb edx ebx +
mov eax [edx] +
mov ecx eax +
mov [ebp+arg_0] eax +
mov [edi+8] eax +
call sub_40FD30  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_442BDD  +
xor eax eax +
jmp loc_442BE2  +
call loc_43F720  +
mov [edi+0Ch] eax +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi] 0 +
mov eax [esi+18h] +
mov [eax] edi +
mov eax [esi+18h] +
mov eax [eax] +
mov [esi+18h] eax +
mov eax [esi+18h] +
mov ecx [eax+8] +
sub ecx [eax+14h] +
mov [ebx] ecx +
mov ecx [esi+18h] +
mov eax [ecx+14h] +
add eax [ecx+0Ch] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ecx+0Ch] +
mov eax [edx+14h] +
mov [ecx+10h] eax +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+20h] 0 +
mov eax [edx+1Ch] +
mov [ecx+24h] eax +
mov eax [edx+20h] +
mov [ecx+28h] eax +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47A180  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
lea edx [ebp+var_18] +
push 1  +
push offset dword_4A314C  +
mov [ebp+var_2C] eax +
xorps xmm0 xmm0 +
mov eax [ecx] +
push edx  +
lea edx [ebp+var_38] +
mov [ebp+var_38] offset off_490378 +
push edx  +
mov [ebp+var_34] offset off_490368 +
mov [ebp+var_28] 1 +
movlpd oword ptr [ebp-20h] xmm0 +
mov [ebp+var_18] 1 +
mov [ebp+var_14] 0 +
call dword ptr [eax+7Ch]  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47A180  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx [ebp+arg_4] +
xorps xmm0 xmm0 +
mov eax [ebp+arg_0] +
push 1  +
mov [ebp+var_28] edx +
mov [ebp+var_18] edx +
lea edx [ebp+var_18] +
push offset dword_4A314C  +
mov [ebp+var_2C] eax +
mov eax [ecx] +
push edx  +
lea edx [ebp+var_38] +
mov [ebp+var_38] offset off_490378 +
push edx  +
mov [ebp+var_34] offset off_490368 +
movlpd oword ptr [ebp-20h] xmm0 +
mov [ebp+var_14] 0 +
call dword ptr [eax+7Ch]  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4788D0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push ecx  +
push 0  +
mov [ebp+var_24] eax +
lea eax [ebp+var_30] +
push 1  +
push eax  +
mov [ebp+var_30] offset off_490378 +
mov [ebp+var_2C] offset off_490368 +
mov [ebp+var_20] 1 +
movlpd oword ptr [ebp-18h] xmm0 +
call sub_422EC0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov dword ptr [esp+10h] 0 +
mov ebx [edx] +
mov edx [edx+4] +
push edi  +
mov ecx [esi+10h] +
mov [esp+10h] edx +
test ecx ecx +
jz loc_442EA3  +
mov edi [ecx+14h] +
xor eax eax +
sub edi [ecx+10h] +
sub edi [esi+20h] +
sbb eax eax +
cmp eax edx +
ja loc_442E47  +
jb loc_442E49  +
cmp edi ebx +
jb loc_442E49  +
mov edi ebx +
push dword ptr [ebp+14h]  +
mov eax [ecx+10h] +
mov edx [ebp+8] +
add eax [esi+20h] +
add eax [ecx+0Ch] +
mov ecx [ebp+8] +
mov edx [edx] +
push 0  +
push edi  +
push eax  +
push dword ptr [ebp+10h]  +
call dword ptr [edx+88h]  +
mov edx eax +
mov [esp+14h] edx +
test edx edx +
mov edx [esp+10h] +
jnz loc_442EEE  +
add [esi+18h] edi +
adc dword ptr [esi+1Ch] 0 +
sub ebx edi +
mov eax ebx +
sbb edx 0 +
or eax edx +
mov [esp+10h] edx +
jz loc_442F03  +
mov eax [esi+10h] +
mov eax [eax] +
mov ecx eax +
mov [esi+10h] eax +
mov dword ptr [esi+20h] 0 +
test ecx ecx +
jnz loc_442E30  +
mov eax ebx +
or eax edx +
jz loc_442EEE  +
mov edi [esi+28h] +
test edi edi +
jz loc_442EEE  +
xor eax eax +
cmp eax edx +
ja loc_442EBC  +
jb loc_442EBE  +
cmp edi ebx +
jb loc_442EBE  +
mov edi ebx +
push dword ptr [ebp+14h]  +
mov ecx [ebp+8] +
push 0  +
push edi  +
push dword ptr [esi+24h]  +
mov eax [ecx] +
push dword ptr [ebp+10h]  +
call dword ptr [eax+88h]  +
mov edx eax +
mov [esp+14h] edx +
test edx edx +
mov edx [esp+10h] +
jnz loc_442EEE  +
add [esi+24h] edi +
sub [esi+28h] edi +
sub ebx edi +
sbb edx 0 +
mov eax [ebp+0Ch] +
sub [eax] ebx +
sbb [eax+4] edx +
mov eax [esp+14h] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [ebp+0Ch] +
add [esi+20h] edi +
pop edi  +
pop esi  +
sub [eax] ebx +
pop ebx  +
sbb [eax+4] edx +
mov eax [esp+8] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 3Ch +
sub ecx 4 +
jmp sub_442310  +
***
push 0FFFFFFFFh  +
push offset loc_47A1C0  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_30] esi +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_2C] +
push eax  +
mov edx offset aIteratedhashba +
mov [ebp+var_34] esi +
call loc_40FF10  +
add esp 4 +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
movq qword ptr [esi+4] xmm0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [esi+10h] +
push 0FFFFFFFFh  +
mov dword ptr [esi] offset off_48D038 +
mov dword ptr [esi+0Ch] 4 +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_402270  +
mov ecx [ebp+var_18] +
mov dword ptr [esi] offset off_48D0AC +
cmp ecx 10h +
jb loc_44308E  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call loc_402500  +
mov eax esi +
mov dword ptr [esi] offset off_4913B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A1F8  +
mov eax large fs:0 +
push eax  +
sub esp 54h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov edx [edi+4] +
mov ebx [ebp+0Ch] +
mov esi [ebp+8] +
mov ecx [edi+8] +
mov [ebp-60h] esi +
lea eax [ebx+edx] +
mov [ebp-5Ch] edx +
mov [edi+4] eax +
cmp eax edx +
jnb loc_44310F  +
lea eax [ecx+1] +
mov [edi+8] eax +
mov eax [edi] +
cmp [edi+8] ecx +
jb loc_4431DF  +
mov ecx edi +
call dword ptr [eax+20h]  +
mov edx [edi] +
mov [ebp-54h] eax +
lea ecx [eax-1] +
and [ebp-5Ch] ecx +
mov ecx edi +
call dword ptr [edx+58h]  +
mov edx [ebp-5Ch] +
mov [ebp-58h] eax +
test edx edx +
jz loc_443180  +
lea ecx [ebx+edx] +
add eax edx +
cmp ecx [ebp-54h] +
jb loc_4431D2  +
mov ecx [ebp-54h] +
sub ecx edx +
push ecx  +
push esi  +
push eax  +
call loc_452BD0  +
mov esi [edi] +
add esp 0Ch +
mov ecx edi +
call dword ptr [esi+20h]  +
push eax  +
mov eax [ebp-58h] +
mov ecx edi +
push eax  +
call dword ptr [esi+54h]  +
mov edx [ebp-54h] +
mov eax edx +
mov ecx [ebp-5Ch] +
sub eax ecx +
mov esi [ebp-60h] +
sub ecx edx +
add esi eax +
mov eax [ebp-58h] +
add ebx ecx +
jmp loc_443183  +
mov edx [ebp-54h] +
cmp ebx edx +
jb loc_4431C7  +
mov ecx edi +
cmp esi eax +
jnz loc_4431BA  +
mov esi [edi] +
call dword ptr [esi+20h]  +
push eax  +
mov eax [ebp-58h] +
mov ecx edi +
push eax  +
call dword ptr [esi+54h]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [edi] +
push ebx  +
push esi  +
call dword ptr [eax+54h]  +
sub ebx eax +
add esi ebx +
mov ebx eax +
test ebx ebx +
jz loc_44319C  +
mov eax [ebp-58h] +
cmp eax esi +
jz loc_44319C  +
push ebx  +
push esi  +
push eax  +
call loc_452BD0  +
add esp 0Ch +
jmp loc_44319C  +
***
lea ecx [ebp-50h] +
push ecx  +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 0 +
call sub_442FF0  +
push offset unk_49C918  +
lea eax [ebp-38h] +
push eax  +
call sub_452780  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+20h]  +
mov ecx [esp+arg_0] +
lea esi [eax-1] +
and esi [edi+4] +
sub eax esi +
mov [ecx] eax +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+58h]  +
pop edi  +
add eax esi +
pop esi  +
retn 4  +
***
mov eax [ecx] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
jmp dword ptr [eax+48h]  +
***
push ebx  +
push ebp  +
push esi  +
push edi  +
push eax  +
mov edi ecx +
call sub_424220  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+58h]  +
mov edx [edi] +
mov ecx edi +
mov [esp+14h+var_4] eax +
call dword ptr [edx+5Ch]  +
mov edx [edi] +
mov ecx edi +
mov ebx eax +
call dword ptr [edx+20h]  +
mov edx [edi] +
mov ecx edi +
mov esi eax +
call dword ptr [edx+4Ch]  +
push ecx  +
lea ecx [esi-8] +
mov ebp eax +
push ecx  +
mov ecx edi +
call sub_443370  +
mov ecx [edi+4] +
shl ecx 3 +
test ebp ebp +
jz loc_4432AF  +
bswap ecx  +
mov edx [esp+14h+var_4] +
shr esi 2 +
lea eax [esi+ebp] +
mov [edx+eax*4-8] ecx +
mov eax [edi+4] +
mov ecx [edi+8] +
shr eax 1Dh +
lea eax [eax+ecx*8] +
test ebp ebp +
jz loc_4432CF  +
bswap eax  +
sub esi ebp +
mov ecx edi +
mov [edx+esi*4-4] eax +
mov esi [edi] +
call dword ptr [esi+20h]  +
push eax  +
push [esp+18h+var_4]  +
mov ecx edi +
call dword ptr [esi+54h]  +
mov eax [esp+14h+arg_4] +
test al 3 +
jnz loc_44332F  +
mov ecx [esp+18h] +
test ebp ebp +
jz loc_443310  +
push eax  +
mov edx ebx +
call loc_442180  +
mov eax [edi] +
add esp 4 +
mov ecx edi +
call dword ptr [eax+18h]  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
cmp ebx ecx +
jz loc_443359  +
push eax  +
push ebx  +
mov edx eax +
call sub_438750  +
mov eax [edi] +
add esp 8 +
mov ecx edi +
call dword ptr [eax+18h]  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test ebp ebp +
jz loc_443347  +
push eax  +
mov edx ebx +
mov ecx ebx +
call loc_442180  +
add esp 4 +
mov eax [esp+14h+arg_4] +
push eax  +
push ebx  +
push dword ptr [esp+20h]  +
call loc_452BD0  +
add esp 0Ch +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
***
mov ebx ecx +
push ebp  +
push esi  +
push edi  +
mov eax [ebx] +
call dword ptr [eax+20h]  +
mov edx [ebx] +
mov ecx ebx +
mov [esp+14h+var_4] eax +
lea esi [eax-1] +
and esi [ebx+4] +
call dword ptr [edx+58h]  +
mov edi [esp+14h+arg_0] +
mov ebp eax +
mov byte ptr [esi+ebp] 80h +
inc esi  +
cmp esi edi +
ja loc_4433B5  +
sub edi esi +
lea eax [esi+ebp] +
push edi  +
push 0  +
push eax  +
call sub_453150  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
mov eax [esp+14h+var_4] +
sub eax esi +
push eax  +
lea eax [esi+ebp] +
push 0  +
push eax  +
call sub_453150  +
mov esi [ebx] +
add esp 0Ch +
mov ecx ebx +
call dword ptr [esi+20h]  +
push eax  +
push ebp  +
mov ecx ebx +
call dword ptr [esi+54h]  +
push edi  +
push 0  +
push ebp  +
call sub_453150  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
***
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47A248  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov dword ptr [esi] offset off_4914CC +
mov byte ptr [esi+29h] 0 +
mov dword ptr [esi+30h] 20h +
cmp byte ptr [esi+29h] 0 +
mov [ebp+var_10] esi +
jnz loc_4434EE  +
mov byte ptr [esi+29h] 1 +
lea ecx [esi+8] +
jmp loc_4434F0  +
xor ecx ecx +
mov [esi+34h] ecx +
mov [ebp+var_4] 2 +
mov byte ptr [esi+49h] 0 +
mov dword ptr [esi+50h] 10h +
cmp byte ptr [esi+49h] 0 +
jnz loc_443514  +
mov byte ptr [esi+49h] 1 +
lea ecx [esi+38h] +
jmp loc_443516  +
xor ecx ecx +
mov [esi+54h] ecx +
push 120h  +
mov byte ptr [ebp+var_4] 3 +
call sub_44FE54  +
mov edx eax +
add esp 4 +
mov [ebp+var_10] edx +
lea ecx [edx+18h] +
mov byte ptr [ecx+0F9h] 0 +
mov dword ptr [ecx+100h] 3Ch +
cmp byte ptr [ecx+0F9h] 0 +
jnz loc_44355E  +
mov eax ecx +
mov byte ptr [ecx+0F9h] 1 +
neg eax  +
and eax 0Fh +
add eax ecx +
jmp loc_443560  +
xor eax eax +
mov [ecx+104h] eax +
mov dword ptr [edx] offset off_4913FC +
mov dword ptr [edx+4] offset off_49143C +
mov [esi+58h] edx +
push dword ptr [esi+30h]  +
mov byte ptr [esi+5Ch] 0 +
push 0  +
push dword ptr [esi+34h]  +
call sub_453150  +
add esp 0Ch +
push dword ptr [esi+50h]  +
push 0  +
push dword ptr [esi+54h]  +
call sub_453150  +
add esp 0Ch +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A27B  +
mov eax large fs:0 +
push eax  +
push ebx  +
sub esp 0C8h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-14h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-0D4h] edi +
mov esi [ebx+8] +
lea ecx [ebp-0D0h] +
call sub_443960  +
mov dword ptr [ebp-0D0h] offset off_491468 +
push 20h  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-0D0h] +
push dword ptr [edi+34h]  +
call loc_4430C0  +
push dword ptr [ebx+0Ch]  +
lea ecx [ebp-0D0h] +
push esi  +
call loc_4430C0  +
mov esi [edi+34h] +
lea ecx [ebp-0D0h] +
mov edi [ebp-0D0h] +
mov eax [edi+1Ch] +
call eax  +
push eax  +
push esi  +
lea ecx [ebp-0D0h] +
call dword ptr [edi+38h]  +
mov eax [ebp-0D4h] +
lea edi [ebp-70h] +
mov byte ptr [eax+5Ch] 0 +
lea eax [ebp-70h] +
neg eax  +
and eax 0Fh +
add eax edi +
mov edi [ebp-1Ch] +
cmp edi eax +
jnz loc_44367B  +
mov ecx [ebp-20h] +
xor eax eax +
stos   +
mov edi [ebp-74h] +
lea eax [ebp-0C0h] +
cmp edi eax +
jnz loc_44368F  +
mov ecx [ebp-78h] +
xor eax eax +
stos   +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [esi+0B0h] +
lea edx [esi+60h] +
mov eax edx +
neg eax  +
and eax 0Fh +
push edi  +
mov edi [edx+54h] +
add eax edx +
cmp edi eax +
jnz loc_4436D5  +
xor eax eax +
mov byte ptr [edx+49h] 0 +
stos   +
mov edi [esi+5Ch] +
lea eax [esi+10h] +
mov ecx [eax+48h] +
cmp edi eax +
jnz loc_4436EA  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
pop edi  +
pop esi  +
retn   +
***
mov ecx [esi+0B0h] +
lea edx [esi+60h] +
mov eax edx +
neg eax  +
and eax 0Fh +
push edi  +
mov edi [edx+54h] +
add eax edx +
cmp edi eax +
jnz loc_443715  +
xor eax eax +
mov byte ptr [edx+49h] 0 +
stos   +
mov edi [esi+5Ch] +
lea eax [esi+10h] +
mov ecx [eax+48h] +
cmp edi eax +
jnz loc_44372A  +
mov byte ptr [eax+41h] 0 +
xor eax eax +
stos   +
test [esp+4+arg_0] 1 +
jz loc_44373F  +
push 0B8h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 24h +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi ecx +
mov [esp+30h+var_24] edi +
test ebx ebx +
jnz loc_443774  +
test esi esi +
jz loc_443806  +
cmp byte ptr [edi+5Ch] 0 +
jnz loc_44378D  +
mov ecx [edi+58h] +
push dword_4A3180  +
push 20h  +
mov eax [ecx] +
push dword ptr [edi+34h]  +
call dword ptr [eax+18h]  +
lea ecx [esp+3Ch+var_2C] +
call sub_44CC00  +
mov ecx [edi+54h] +
push 0  +
add [ecx] eax +
adc [ecx+4] edx +
call sub_45F04A  +
mov ecx [edi+54h] +
add esp 4 +
add [ecx+8] eax +
adc [ecx+0Ch] edx +
mov ecx [edi+58h] +
mov edx [edi+54h] +
add ecx 4 +
push edx  +
push 0  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
test ebx ebx +
ja loc_4437D2  +
jb loc_4437CE  +
cmp esi 10h +
jnb loc_4437D2  +
mov edi esi +
jmp loc_4437D7  +
mov edi 10h +
mov edx [ebp+arg_0] +
mov ecx [esp+48h+var_3C] +
push 1  +
push 0  +
mov eax [edx] +
push edi  +
push dword ptr [ecx+54h]  +
mov ecx edx +
push [ebp+arg_4]  +
call dword ptr [eax+88h]  +
sub esi edi +
mov edi [esp+5Ch+var_50] +
sbb ebx 0 +
test ebx ebx +
ja loc_4437B1  +
jb loc_443806  +
test esi esi +
jnz loc_4437B1  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push edi  +
push 120h  +
mov esi ecx +
call sub_44FE54  +
add esp 4 +
lea ecx [esi-4] +
mov edi eax +
mov [esp+0Ch+var_4] edi +
push ecx  +
mov ecx edi +
call sub_443BA0  +
lea eax [edi+4] +
mov dword ptr [edi] offset off_4913FC +
pop edi  +
mov dword ptr [eax] offset off_49143C +
pop esi  +
pop ecx  +
retn   +
***
push edi  +
push 0B8h  +
mov edi ecx +
call sub_44FE54  +
add esp 4 +
mov esi eax +
mov ecx esi +
mov [esp+0Ch+var_4] esi +
push edi  +
call sub_443B00  +
pop edi  +
mov dword ptr [esi] offset off_491468 +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
mov esi [esp+8+arg_0] +
mov ecx esi +
push 7  +
push offset aSha256  +
mov [esp+10h+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
mov eax [ecx+0B4h] +
retn   +
***
mov eax [ecx+0B4h] +
movups xmm0 oword ptr ds:oword_491274 +
movups oword ptr [eax] xmm0 +
movups xmm0 oword ptr ds:oword_491284 +
movups oword ptr [eax+10h] xmm0 +
retn   +
***
sub esp 44h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+44h+var_4] eax +
mov edx [esp+44h+arg_0] +
push esi  +
mov esi [ecx+0B4h] +
lea ecx [esp+48h+var_44] +
push 40h  +
call loc_442180  +
add esp 4 +
cmp byte_4A2927 0 +
jnz loc_443925  +
call sub_446070  +
xor edx edx +
mov eax 40h +
cmp byte_4A2926 dl +
mov ecx esi +
setz dl  +
sub eax edx +
lea edx [esp+48h+var_44] +
push eax  +
call sub_4411D0  +
mov ecx [esp+48h+var_4] +
pop esi  +
xor ecx esp +
call sub_44FE3E  +
add esp 44h +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_476EA0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov [ebp+var_10] edx +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
mov byte ptr [edx+51h] 0 +
mov dword ptr [edx+58h] 10h +
cmp byte ptr [edx+51h] 0 +
jnz loc_4439B2  +
mov byte ptr [edx+51h] 1 +
lea ecx [edx+10h] +
jmp loc_4439B4  +
xor ecx ecx +
mov [edx+5Ch] ecx +
lea ecx [edx+60h] +
mov byte ptr [ecx+49h] 0 +
mov dword ptr [ecx+50h] 10h +
cmp byte ptr [ecx+49h] 0 +
jnz loc_4439DA  +
mov eax ecx +
mov byte ptr [ecx+49h] 1 +
neg eax  +
and eax 0Fh +
add eax ecx +
jmp loc_4439DC  +
xor eax eax +
mov [ecx+54h] eax +
mov eax edx +
mov ecx [edx+0B4h] +
movups xmm0 oword ptr ds:oword_491274 +
movups oword ptr [ecx] xmm0 +
movups xmm0 oword ptr ds:oword_491284 +
movups oword ptr [ecx+10h] xmm0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
mov esi [esp+8+arg_0] +
mov ecx esi +
push 3  +
push offset unk_4913BC  +
mov [esp+10h+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_402170  +
mov eax esi +
pop esi  +
pop ecx  +
retn 4  +
***
retn   +
***
mov eax [esp+arg_0] +
cmp eax 10h +
jnb loc_443A81  +
mov eax 10h +
retn 4  +
cmp eax 20h +
jbe loc_443A8E  +
mov eax 20h +
retn 4  +
add eax 7 +
mov ecx eax +
and ecx 7 +
sub eax ecx +
retn 4  +
***
retn   +
***
mov ecx [esi+118h] +
lea edx [esi+18h] +
mov eax edx +
neg eax  +
and eax 0Fh +
push edi  +
mov edi [edx+104h] +
add eax edx +
cmp edi eax +
jnz loc_443ADB  +
xor eax eax +
mov byte ptr [edx+0F9h] 0 +
stos   +
test [esp+4+arg_0] 1 +
jz loc_443AF0  +
push 120h  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
retn 4  +
***
push edi  +
mov edi ecx +
mov eax [esi+4] +
mov [edi+4] eax +
mov eax [esi+8] +
mov [edi+8] eax +
mov byte ptr [edi+51h] 0 +
mov eax [esi+58h] +
mov [edi+58h] eax +
cmp eax 10h +
ja loc_443B32  +
cmp byte ptr [edi+51h] 0 +
jnz loc_443B32  +
mov byte ptr [edi+51h] 1 +
lea ecx [edi+10h] +
jmp loc_443B34  +
xor ecx ecx +
mov edx eax +
mov [edi+5Ch] ecx +
shl edx 2 +
push edx  +
push dword ptr [esi+5Ch]  +
call sub_40A5A0  +
lea edx [edi+60h] +
add esp 8 +
mov byte ptr [edx+49h] 0 +
mov eax [esi+0B0h] +
mov [edx+50h] eax +
cmp eax 10h +
ja loc_443B72  +
cmp byte ptr [edx+49h] 0 +
jnz loc_443B72  +
mov ecx edx +
mov byte ptr [edx+49h] 1 +
neg ecx  +
and ecx 0Fh +
add ecx edx +
jmp loc_443B74  +
xor ecx ecx +
mov [edx+54h] ecx +
mov edx eax +
shl edx 2 +
push edx  +
push dword ptr [esi+0B4h]  +
call sub_438750  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
retn 4  +
***
push edi  +
sub ecx 4 +
test ecx ecx +
jz loc_443C38  +
lea eax [ecx+4] +
retn   +
xor eax eax +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A2C8  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ecx] +
call dword ptr [eax+34h]  +
lea ecx [ebp-50h] +
push ecx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+8]  +
push offset aThisObjectDo_0  +
mov edx eax +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-68h] +
call sub_410020  +
add esp 4 +
xorps xmm0 xmm0 +
movq qword ptr [ebp-34h] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-28h] +
push 0  +
push eax  +
mov dword ptr [ebp-38h] offset off_48D038 +
mov dword ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_402270  +
push offset unk_49C420  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 1 +
push eax  +
mov dword ptr [ebp-38h] offset off_48D090 +
call sub_452780  +
mov eax [ecx] +
push [esp+arg_0]  +
call dword ptr [eax+10h]  +
xor ecx ecx +
cmp [esp+arg_0] eax +
setz al  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_47A303  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
push [ebp+arg_0]  +
call loc_432E00  +
mov [ebp+var_4] 0 +
call sub_437C60  +
push eax  +
lea ecx [edi+14h] +
call loc_432E00  +
mov al [ebp+arg_4] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
mov [edi+34h] al +
mov word ptr [edi+36h] 1 +
mov esi [edi+8] +
mov ecx [edi+0Ch] +
test esi esi +
jz loc_443D93  +
lea eax [esi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_443DBA  +
sub eax 4 +
sub esi 1 +
jnz loc_443D86  +
mov eax 1 +
push eax  +
lea ecx [edi+14h] +
mov [edi+28h] eax +
call loc_434F40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
test esi esi +
jz loc_443D93  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
lea ecx [esi-1] +
shl ecx 5 +
add eax ecx +
cmp eax 11h +
jbe loc_443D93  +
cmp eax 18h +
ja loc_443DE2  +
mov eax 2 +
jmp loc_443D98  +
cmp eax 46h +
ja loc_443DEE  +
mov eax 3 +
jmp loc_443D98  +
cmp eax 0C5h +
ja loc_443DFC  +
mov eax 4 +
jmp loc_443D98  +
cmp eax 21Bh +
ja loc_443E0A  +
mov eax 5 +
jmp loc_443D98  +
mov ecx 59Ah +
cmp ecx eax +
sbb eax eax +
neg eax  +
add eax 6 +
jmp loc_443D98  +
***
push ecx  +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi ecx +
mov edx [edi+8] +
mov eax [edi+0Ch] +
test edx edx +
jz loc_443E44  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_443E44  +
sub eax 4 +
sub edx 1 +
jnz loc_443E37  +
shl edx 5 +
cmp byte ptr [edi+36h] 0 +
jz loc_443E51  +
xor esi esi +
jmp loc_443E54  +
mov esi [edi+28h] +
mov byte ptr [edi+36h] 0 +
mov ebp [edi+8] +
mov ebx esi +
shr ebx 5 +
cmp ebx ebp +
jnb loc_443E7A  +
mov eax [edi+0Ch] +
mov ecx esi +
and ecx 1Fh +
mov eax [eax+ebx*4] +
shr eax cl +
and al 1 +
jnz loc_443E81  +
cmp esi edx +
jnb loc_443EF1  +
inc esi  +
jmp loc_443E60  +
***
push esi  +
mov ecx edi +
call loc_4350B0  +
add [edi+2Ch] esi +
mov esi 1 +
mov ecx [edi+28h] +
mov eax esi +
shl eax cl +
mov ecx edi +
push eax  +
call loc_435B90  +
cmp byte ptr [edi+34h] 0 +
mov ebp eax +
mov [edi+30h] ebp +
jz loc_443EE7  +
mov ebx [edi+28h] +
mov edx ebx +
shr edx 5 +
cmp edx [edi+8] +
jnb loc_443EE7  +
mov eax [edi+0Ch] +
mov ecx ebx +
and ecx 1Fh +
mov eax [eax+edx*4] +
shr eax cl +
and al 1 +
jz loc_443EE7  +
mov ecx ebx +
mov byte ptr [edi+35h] 1 +
shl esi cl +
lea eax [edi+14h] +
sub esi ebp +
mov ecx edi +
push eax  +
mov [edi+30h] esi +
call sub_434D40  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov byte ptr [edi+35h] 0 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov byte ptr [edi+37h] 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
jmp sub_443F70  +
***
mov eax [esp+8] +
mov ecx [esp+4] +
cmp eax 0CCCCCCCh +
ja loc_443F50  +
lea eax [eax+eax*4] +
shl eax 2 +
cmp eax 1000h +
jb loc_443F46  +
test cl 1Fh +
jnz loc_443F55  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_443F5A  +
sub ecx eax +
cmp ecx 4 +
jb loc_443F5F  +
cmp ecx 23h +
ja loc_443F64  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
pop ecx  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_443FC5  +
push edi  +
mov edi [ebx+4] +
cmp esi edi +
jz loc_443F91  +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 14h +
cmp esi edi +
jnz loc_443F82  +
mov esi [ebx] +
mov eax 66666667h +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_443F10  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jnz loc_443FDB  +
retn 4  +
***
cmp eax 0CCCCCCCh +
ja loc_444020  +
lea eax [eax+eax*4] +
shl eax 2 +
cmp eax 1000h +
jb loc_444011  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_444025  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44402A  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz locret_443FD8  +
jmp loc_44402F  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_47A339  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
cmp dword_4A291C 0 +
jnz loc_44408D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi [ebp+arg_0] +
mov ecx 2 +
mov dword ptr [esi] offset off_49099C +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
mov ecx edi +
push [ebp+arg_4]  +
mov edx [edi] +
push esi  +
mov [ebp+var_10] 1 +
call dword ptr [edx+30h]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A370  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-10h] ebx +
mov edx [ebp+18h] +
mov dword ptr [ebp-4Ch] 0 +
mov esi [edx+8] +
mov edx [edx+0Ch] +
test esi esi +
jz loc_444154  +
lea eax [esi-1] +
lea eax [edx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_4441BD  +
sub eax 4 +
sub esi 1 +
jnz loc_444147  +
xor edi edi +
mov ecx [ebp+10h] +
mov [ebp-38h] edi +
mov esi [ecx+8] +
mov ecx [ecx+0Ch] +
test esi esi +
jz loc_44417D  +
lea eax [esi-1] +
lea eax [ecx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_4441D6  +
sub eax 4 +
sub esi 1 +
jnz loc_444170  +
xor ecx ecx +
cmp ecx edi +
mov [ebp-34h] ecx +
lea eax [ebp-38h] +
lea edx [ebp-34h] +
cmovnb eax edx +
mov eax [eax] +
mov [ebp-48h] eax +
test eax eax +
jnz loc_4441EF  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
mov ecx [ebp+8] +
push eax  +
call loc_432E00  +
mov eax [ebp+8] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
test esi esi +
jz loc_444154  +
lea ecx [edx-4] +
lea ecx [ecx+esi*4] +
call sub_422BB0  +
lea edi [esi-1] +
shl edi 5 +
add edi eax +
jmp loc_444156  +
***
test esi esi +
jz loc_44417D  +
lea ecx [ecx+esi*4] +
add ecx 0FFFFFFFCh +
call sub_422BB0  +
lea ecx [esi-1] +
shl ecx 5 +
add ecx eax +
jmp loc_44417F  +
***
cmp eax 2Eh +
ja loc_4441FB  +
mov ecx 1 +
jmp loc_444209  +
mov ecx 104h +
cmp ecx eax +
sbb ecx ecx +
neg ecx  +
add ecx 2 +
mov edi 1 +
mov [ebp-1Ch] ecx +
shl edi cl +
mov eax edi +
mov [ebp-14h] edi +
shl eax cl +
lea ecx [ebp-58h] +
push eax  +
mov [ebp-18h] eax +
call sub_445530  +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp-58h] +
add ecx 14h +
push esi  +
mov [ebp-20h] ecx +
call sub_4330F0  +
lea eax [edi+edi*4] +
mov edi [ebp+14h] +
shl eax 2 +
mov [ebp-3Ch] eax +
add eax [ebp-58h] +
push edi  +
mov ecx eax +
mov [ebp-38h] eax +
call sub_4330F0  +
cmp dword ptr [ebp-1Ch] 1 +
jnz loc_44427B  +
mov eax [ebx] +
mov ecx ebx +
mov esi [ebp-58h] +
push edi  +
push dword ptr [ebp+0Ch]  +
call dword ptr [eax+0Ch]  +
push eax  +
lea ecx [esi+3Ch] +
call sub_4330F0  +
jmp loc_4445F5  +
mov edx [ebp-10h] +
mov ecx edx +
mov ebx [ebp-58h] +
push esi  +
add ebx 28h +
mov eax [edx] +
call dword ptr [eax+18h]  +
push eax  +
mov ecx ebx +
call sub_4330F0  +
mov eax [ebp-14h] +
mov ecx [ebp-10h] +
mov esi [ebp-58h] +
push edi  +
lea eax [eax+eax*4] +
shl eax 3 +
add esi eax +
mov [ebp-44h] eax +
mov eax [ecx] +
mov [ebp-40h] esi +
call dword ptr [eax+18h]  +
push eax  +
mov ecx esi +
call sub_4330F0  +
mov edi [ebp-14h] +
cmp edi 3 +
jbe loc_4442F0  +
mov esi [ebp-58h] +
add edi 0FFFFFFFCh +
shr edi 1 +
add esi 3Ch +
inc edi  +
mov ecx [ebp-10h] +
lea eax [esi-28h] +
push ebx  +
push eax  +
mov edx [ecx] +
call dword ptr [edx+0Ch]  +
push eax  +
mov ecx esi +
call sub_4330F0  +
add esi 28h +
sub edi 1 +
jnz loc_4442D0  +
mov edi [ebp-14h] +
cmp edi 1 +
jbe loc_444401  +
mov edx [ebp-38h] +
lea ebx [edi-2] +
mov ecx [ebp-20h] +
lea eax [edi+1] +
mov edi [ebp-18h] +
add edx 1Ch +
shr ebx 1 +
inc ebx  +
mov [ebp-2Ch] eax +
mov [ebp-30h] edx +
mov [ebp-34h] ebx +
mov esi eax +
mov [ebp-24h] esi +
cmp eax edi +
jnb loc_4443E0  +
mov [ebp-28h] ecx +
mov edi edx +
mov edx [ebp-10h] +
push dword ptr [ebp+14h]  +
push ecx  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ebx eax +
lea ecx [edi-8] +
cmp ecx ebx +
jz loc_4443B6  +
mov edx [ebx+8] +
cmp [edi] edx +
jnz loc_44435B  +
mov ecx [ebx+0Ch] +
mov eax edx +
shr eax 1 +
cmp dword ptr [ecx+eax*4] 0 +
jnz loc_444396  +
mov eax [ebx+0Ch] +
test edx edx +
jz loc_444375  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_444375  +
sub eax 4 +
sub edx 1 +
jnz loc_444368  +
mov ecx edx +
call sub_432CF0  +
mov edx [edi+4] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi]  +
call sub_437F60  +
mov [edi] esi +
add esp 0Ch +
mov esi [ebp-24h] +
mov [edi+4] eax +
mov ecx [ebx+0Ch] +
mov edx [edi+4] +
mov eax [edi] +
cmp edx ecx +
jz loc_4443B0  +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebx+10h] +
mov [edi+8] eax +
mov ecx [ebp-28h] +
add esi [ebp-14h] +
add ecx [ebp-3Ch] +
add edi [ebp-3Ch] +
mov [ebp-24h] esi +
mov [ebp-28h] ecx +
cmp esi [ebp-18h] +
jb loc_444330  +
mov eax [ebp-2Ch] +
mov edx [ebp-30h] +
mov ecx [ebp-20h] +
mov ebx [ebp-34h] +
mov edi [ebp-18h] +
add eax 2 +
add ecx 28h +
add edx 28h +
mov [ebp-2Ch] eax +
sub ebx 1 +
mov [ebp-20h] ecx +
mov [ebp-30h] edx +
mov [ebp-34h] ebx +
jnz loc_444317  +
mov edi [ebp-14h] +
mov eax [ebp-18h] +
lea esi [edi+edi*2] +
mov [ebp+14h] esi +
cmp esi eax +
jnb loc_4444E1  +
mov edx [ebp-58h] +
lea ecx [edi+edi] +
mov eax esi +
lea edi ds:2[esi*4] +
sub eax ecx +
add edi esi +
lea eax [eax+eax*4] +
lea ecx [edx+eax*4] +
mov [ebp-34h] ecx +
lea edi [edx+edi*4] +
mov edx [ebp-10h] +
push dword ptr [ebp-40h]  +
push ecx  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ebx eax +
lea ecx [edi-8] +
cmp ecx ebx +
jz loc_4444BE  +
mov edx [ebx+8] +
cmp [edi] edx +
jnz loc_44445C  +
mov ecx [ebx+0Ch] +
mov eax edx +
shr eax 1 +
cmp dword ptr [ecx+eax*4] 0 +
jnz loc_44449E  +
mov eax [ebx+0Ch] +
test edx edx +
jz loc_44447D  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_44447D  +
sub eax 4 +
sub edx 1 +
jnz loc_444470  +
mov ecx edx +
call sub_432CF0  +
mov edx [edi+4] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi]  +
call sub_437F60  +
mov [edi] esi +
add esp 0Ch +
mov esi [ebp+14h] +
mov [edi+4] eax +
mov ecx [ebx+0Ch] +
mov edx [edi+4] +
mov eax [edi] +
cmp edx ecx +
jz loc_4444B8  +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebx+10h] +
mov [edi+8] eax +
mov ecx [ebp-14h] +
add edi [ebp-44h] +
mov eax [ebp-18h] +
lea esi [esi+ecx*2] +
mov ecx [ebp-34h] +
add ecx [ebp-44h] +
mov [ebp+14h] esi +
mov [ebp-34h] ecx +
cmp esi eax +
jb loc_444431  +
mov edi [ebp-14h] +
mov edx edi +
mov [ebp-34h] edx +
cmp edi eax +
jnb loc_4445F5  +
mov ebx [ebp-38h] +
lea esi [edi+edi] +
lea eax [esi+esi*4] +
mov [ebp-44h] esi +
shl eax 2 +
add ebx 30h +
mov [ebp-40h] eax +
mov ecx esi +
mov eax 2 +
mov [ebp-30h] ecx +
sub eax edi +
mov [ebp-38h] ebx +
mov [ebp-3Ch] eax +
add eax ecx +
cmp eax ecx +
jnb loc_4445D9  +
mov esi ecx +
mov edi ebx +
sub esi eax +
dec esi  +
shr esi 1 +
inc esi  +
mov [ebp+14h] esi +
add ebx [ebp-40h] +
add edx esi +
mov eax [ebp-3Ch] +
add ecx esi +
mov [ebp-34h] edx +
mov [ebp-38h] ebx +
mov [ebp-30h] ecx +
cmp edx [ebp-18h] +
jb loc_444515  +
cmp dword_4A291C 0 +
jnz loc_44460D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-6Ch] offset off_49099C +
mov dword ptr [ebp-64h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-60h] eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [eax+4] 0 +
mov eax [ebp-60h] +
mov dword ptr [eax] 0 +
mov ecx [ebp-48h] +
xor esi esi +
xor ebx ebx +
mov byte ptr [ebp-4] 1 +
mov byte ptr [ebp+0Fh] 1 +
lea eax [ecx-1] +
add ecx 0FFFFFFFFh +
mov [ebp-38h] eax +
mov [ebp+14h] ecx +
js loc_444855  +
mov edi [ebp-64h] +
mov eax [ebp+10h] +
mov edx ecx +
shr edx 5 +
cmp edx [eax+8] +
jb loc_444681  +
xor al al +
jmp loc_444691  +
mov eax [eax+0Ch] +
and ecx 1Fh +
mov eax [eax+edx*4] +
shr eax cl +
mov ecx [ebp+14h] +
and al 1 +
movzx eax al +
lea esi [eax+esi*2] +
mov eax [ebp+18h] +
cmp edx [eax+8] +
jb loc_4446A3  +
xor al al +
jmp loc_4446B3  +
mov eax [eax+0Ch] +
and ecx 1Fh +
mov eax [eax+edx*4] +
shr eax cl +
mov ecx [ebp+14h] +
and al 1 +
movzx eax al +
lea ebx [eax+ebx*2] +
test ecx ecx +
jz loc_4446D2  +
mov edx [ebp-14h] +
lea eax [esi+esi] +
cmp eax edx +
jnb loc_4446D2  +
lea eax [ebx+ebx] +
cmp eax edx +
jb loc_444849  +
mov eax [ebp-38h] +
sub eax ecx +
xor edx edx +
mov ecx eax +
mov eax [ebp+14h] +
mov [ebp-38h] eax +
test esi esi +
jnz loc_4446E9  +
test ebx ebx +
jz loc_4446F9  +
mov eax ebx +
or eax esi +
test al 1 +
jnz loc_4446F9  +
shr esi 1 +
dec ecx  +
shr ebx 1 +
inc edx  +
jmp loc_4446E1  +
***
cmp byte ptr [ebp+0Fh] 0 +
mov [ebp-18h] edx +
mov [ebp-30h] esi +
mov [ebp-34h] ebx +
jz loc_44488C  +
mov ecx [ebp-1Ch] +
shl ebx cl +
mov ecx [ebp-58h] +
add ebx esi +
lea eax [ebx+ebx*4] +
lea ebx [ecx+eax*4] +
lea eax [ebp-6Ch] +
cmp eax ebx +
jz loc_444796  +
mov edx [ebx+8] +
cmp edi edx +
jnz loc_444737  +
mov eax [ebx+0Ch] +
mov ecx edx +
shr ecx 1 +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_444771  +
mov eax [ebx+0Ch] +
test edx edx +
jz loc_444751  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_444751  +
sub eax 4 +
sub edx 1 +
jnz loc_444744  +
mov ecx edx +
call sub_432CF0  +
mov edx [ebp-60h] +
mov esi eax +
push 0  +
push esi  +
push edi  +
call sub_437F60  +
mov edi esi +
mov [ebp-60h] eax +
add esp 0Ch +
mov [ebp-64h] edi +
mov edx [ebx+0Ch] +
mov ecx [ebp-60h] +
cmp ecx edx +
jz loc_444790  +
lea eax ds:0[edi*4] +
push eax  +
push edx  +
push ecx  +
call loc_452BD0  +
mov edi [ebp-64h] +
add esp 0Ch +
mov eax [ebx+10h] +
mov [ebp-5Ch] eax +
mov byte ptr [ebp+0Fh] 0 +
mov ebx [ebp-10h] +
mov esi [ebp-18h] +
test esi esi +
jz loc_444842  +
mov eax [ebx] +
lea ecx [ebp-6Ch] +
push ecx  +
dec esi  +
mov ecx ebx +
mov [ebp-18h] esi +
call dword ptr [eax+18h]  +
mov edi [ebp-64h] +
mov ebx eax +
lea eax [ebp-6Ch] +
cmp eax ebx +
jz loc_444837  +
mov ecx [ebx+8] +
cmp edi ecx +
jnz loc_4447D7  +
mov eax [ebx+0Ch] +
mov edx ecx +
shr edx 1 +
cmp dword ptr [eax+edx*4] 0 +
jnz loc_444812  +
mov eax [ebx+0Ch] +
test ecx ecx +
jz loc_4447F1  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_4447F1  +
sub eax 4 +
sub ecx 1 +
jnz loc_4447E4  +
call sub_432CF0  +
mov edx [ebp-60h] +
mov esi eax +
push 0  +
push esi  +
push edi  +
call sub_437F60  +
mov edi esi +
mov [ebp-60h] eax +
mov esi [ebp-18h] +
add esp 0Ch +
mov [ebp-64h] edi +
mov edx [ebx+0Ch] +
mov ecx [ebp-60h] +
cmp ecx edx +
jz loc_444831  +
lea eax ds:0[edi*4] +
push eax  +
push edx  +
push ecx  +
call loc_452BD0  +
mov edi [ebp-64h] +
add esp 0Ch +
mov eax [ebx+10h] +
mov [ebp-5Ch] eax +
mov ebx [ebp-10h] +
test esi esi +
jnz loc_4447A8  +
mov ecx [ebp+14h] +
xor ebx ebx +
xor esi esi +
sub ecx 1 +
mov [ebp+14h] ecx +
jns loc_444670  +
mov ebx [ebp+8] +
lea eax [ebp-6Ch] +
push eax  +
mov ecx ebx +
call loc_432E00  +
mov edx [ebp-64h] +
xor eax eax +
mov esi [ebp-60h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_444972  +
call sub_4746E8  +
jmp loc_444977  +
test ecx ecx +
jz loc_44493C  +
mov ebx [ebp-10h] +
mov eax [ebx] +
dec ecx  +
mov [ebp-44h] ecx +
lea ecx [ebp-6Ch] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+18h]  +
mov edi [ebp-64h] +
mov esi eax +
lea eax [ebp-6Ch] +
mov [ebp-48h] esi +
cmp eax esi +
jz loc_44492B  +
mov edx [esi+8] +
cmp edi edx +
jnz loc_4448C9  +
mov eax [esi+0Ch] +
mov ecx edx +
shr ecx 1 +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_444906  +
mov eax [esi+0Ch] +
test edx edx +
jz loc_4448E3  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_4448E3  +
sub eax 4 +
sub edx 1 +
jnz loc_4448D6  +
mov ecx edx +
call sub_432CF0  +
mov edx [ebp-60h] +
mov esi eax +
push 0  +
push esi  +
push edi  +
call sub_437F60  +
mov edi esi +
mov [ebp-60h] eax +
mov esi [ebp-48h] +
add esp 0Ch +
mov [ebp-64h] edi +
mov edx [esi+0Ch] +
mov ecx [ebp-60h] +
cmp ecx edx +
jz loc_444925  +
lea eax ds:0[edi*4] +
push eax  +
push edx  +
push ecx  +
call loc_452BD0  +
mov edi [ebp-64h] +
add esp 0Ch +
mov eax [esi+10h] +
mov [ebp-5Ch] eax +
mov ecx [ebp-44h] +
test ecx ecx +
jnz loc_444897  +
mov ebx [ebp-34h] +
mov esi [ebp-30h] +
test esi esi +
jnz loc_444948  +
test ebx ebx +
jz loc_44479A  +
mov ecx [ebp-1Ch] +
mov edx [ebp-10h] +
shl ebx cl +
mov ecx [ebp-58h] +
add ebx esi +
mov edx [edx] +
lea eax [ebx+ebx*4] +
mov ebx [ebp-10h] +
lea eax [ecx+eax*4] +
mov ecx ebx +
push eax  +
lea eax [ebp-6Ch] +
push eax  +
call dword ptr [edx+20h]  +
mov edi [ebp-64h] +
jmp loc_44479D  +
***
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-58h] +
call sub_443F70  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A3B0  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+14h] +
lea ecx [ebp-34h] +
push edi  +
call loc_445360  +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 0 +
mov byte ptr [ebp-4] 1 +
test edi edi +
jz loc_444A17  +
cmp edi 4924924h +
jbe loc_444A0C  +
push offset aVectorTTooLong  +
call sub_44EC5C  +
push edi  +
lea ecx [ebp-28h] +
call sub_445690  +
test edi edi +
mov esi [ebp-34h] +
mov [ebp-10h] esi +
jz loc_444AFB  +
mov dword ptr [ebp-14h] 0 +
mov [ebp-18h] esi +
mov [ebp-1Ch] edi +
mov eax [ebx] +
push ecx  +
mov ecx ebx +
mov eax [eax+14h] +
call eax  +
mov esi [ebp+10h] +
lea ecx [ebp-80h] +
movzx eax al +
push eax  +
push esi  +
call sub_443D10  +
push eax  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 2 +
call sub_445240  +
add esi 14h +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-64h] +
xor eax eax +
mov [ebp+10h] esi +
mov ecx edx +
mov esi [ebp-60h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_444A83  +
call sub_4746E8  +
jmp loc_444A88  +
call sub_45B0EB  +
mov edx [ebp-78h] +
xor eax eax +
mov esi [ebp-74h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_444AAD  +
call sub_4746E8  +
jmp loc_444AB2  +
call sub_45B0EB  +
mov esi [ebp-28h] +
add esp 4 +
mov edi [ebp-14h] +
add esi edi +
mov ecx esi +
call loc_443E20  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+8]  +
mov ecx [esi+28h] +
mov esi [ebp-18h] +
dec ecx  +
push eax  +
mov eax 1 +
shl eax cl +
mov ecx esi +
push eax  +
call sub_4453D0  +
add edi 38h +
add esi 0Ch +
sub dword ptr [ebp-1Ch] 1 +
mov [ebp-14h] edi +
mov [ebp-18h] esi +
jnz loc_444A30  +
mov esi [ebp-34h] +
push dword ptr [ebp+0Ch]  +
xor edi edi +
lea ecx [ebp-48h] +
mov [ebp-14h] edi +
call loc_432E00  +
mov byte ptr [ebp-4] 3 +
nop   +
mov ecx [ebp+14h] +
xor al al +
mov [ebp+13h] al +
test ecx ecx +
jz loc_444E17  +
mov edx esi +
mov [ebp-1Ch] ecx +
mov esi [ebp-28h] +
mov [ebp+0Ch] edx +
add esi 30h +
nop   +
cmp byte ptr [esi+7] 0 +
jnz loc_444B86  +
cmp edi [esi-4] +
jnz loc_444B86  +
mov eax [esi] +
shr eax 1 +
cmp byte ptr [esi+5] 0 +
lea ecx [eax+eax*4] +
mov eax [edx] +
lea ecx [eax+ecx*4] +
mov [ebp-18h] ecx +
jz loc_444B69  +
mov edi [ebx] +
lea eax [ebp-48h] +
push eax  +
mov ecx ebx +
call dword ptr [edi+10h]  +
push eax  +
push dword ptr [ebp-18h]  +
mov ecx ebx +
call dword ptr [edi+20h]  +
mov edi [ebp-14h] +
jmp loc_444B75  +
mov eax [ebx] +
lea edx [ebp-48h] +
push edx  +
push ecx  +
mov ecx ebx +
call dword ptr [eax+20h]  +
lea ecx [esi-30h] +
call loc_443E20  +
mov al [ebp+13h] +
mov edx [ebp+0Ch] +
mov ecx [ebp-1Ch] +
test al al +
jnz loc_444B8F  +
cmp [esi+7] al +
jnz loc_444B91  +
mov al 1 +
add edx 0Ch +
mov [ebp+13h] al +
add esi 38h +
mov [ebp+0Ch] edx +
sub ecx 1 +
mov [ebp-1Ch] ecx +
jnz loc_444B30  +
test al al +
jz loc_444C40  +
mov eax [ebx] +
lea ecx [ebp-48h] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+18h]  +
mov edi eax +
lea eax [ebp-48h] +
cmp eax edi +
jz loc_444C31  +
mov edx [edi+8] +
cmp [ebp-40h] edx +
jnz loc_444BD6  +
mov eax [edi+0Ch] +
mov ecx edx +
shr ecx 1 +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_444C10  +
mov eax [edi+0Ch] +
test edx edx +
jz loc_444BF0  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_444BF0  +
sub eax 4 +
sub edx 1 +
jnz loc_444BE3  +
mov ecx edx +
call sub_432CF0  +
mov edx [ebp-3Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [ebp-40h]  +
call sub_437F60  +
add esp 0Ch +
mov [ebp-3Ch] eax +
mov [ebp-40h] esi +
mov ecx [edi+0Ch] +
mov esi [ebp-3Ch] +
cmp esi ecx +
jz loc_444C2B  +
mov eax [ebp-40h] +
shl eax 2 +
push eax  +
push ecx  +
push esi  +
call loc_452BD0  +
add esp 0Ch +
mov eax [edi+10h] +
mov [ebp-38h] eax +
mov edi [ebp-14h] +
mov esi [ebp-34h] +
inc edi  +
mov [ebp-14h] edi +
jmp loc_444B10  +
***
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_444E17  +
mov eax [ebp-34h] +
nop   +
mov ecx [ebp+8] +
mov edi ecx +
mov esi [eax] +
add ecx 14h +
mov [ebp+8] ecx +
mov ecx [eax+4] +
mov eax 66666667h +
sub ecx esi +
imul  ecx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
lea eax [eax+eax*4] +
lea esi [esi+eax*4] +
add esi 0FFFFFFECh +
mov [ebp+10h] esi +
cmp edi esi +
jz loc_444D01  +
mov edx [esi+8] +
cmp [edi+8] edx +
jnz loc_444C9C  +
mov eax [esi+0Ch] +
mov ecx edx +
shr ecx 1 +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_444CE0  +
mov eax [esi+0Ch] +
test edx edx +
jz loc_444CBD  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_444CBD  +
sub eax 4 +
sub edx 1 +
jnz loc_444CB0  +
mov ecx edx +
call sub_432CF0  +
mov edx [edi+0Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi+8]  +
call sub_437F60  +
mov [edi+8] esi +
add esp 0Ch +
mov esi [ebp+10h] +
mov [edi+0Ch] eax +
mov ecx [esi+0Ch] +
mov edx [edi+0Ch] +
cmp edx ecx +
jz loc_444CFB  +
mov eax [edi+8] +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [ebp-10h] +
mov ecx [eax+4] +
sub ecx [eax] +
mov eax 66666667h +
imul  ecx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jbe loc_444E04  +
add eax 0FFFFFFFEh +
mov [ebp+10h] eax +
cmp eax 1 +
jl loc_444D60  +
lea esi [eax+eax*4] +
shl esi 2 +
mov eax [ebp-10h] +
mov edx [ebx] +
mov ecx [eax] +
add ecx esi +
lea eax [ecx+14h] +
push eax  +
push ecx  +
mov ecx ebx +
call dword ptr [edx+20h]  +
mov eax [ebp-10h] +
mov ecx ebx +
mov edx [ebx] +
mov eax [eax] +
add eax esi +
push eax  +
push edi  +
call dword ptr [edx+20h]  +
sub esi 14h +
sub dword ptr [ebp+10h] 1 +
jnz loc_444D34  +
mov eax [ebp-10h] +
mov edx [ebx] +
mov ecx [eax] +
lea eax [ecx+14h] +
push eax  +
push ecx  +
mov ecx ebx +
call dword ptr [edx+20h]  +
mov eax [ebp-10h] +
mov ecx ebx +
mov esi [ebx] +
push dword ptr [eax]  +
push edi  +
call dword ptr [esi+18h]  +
push eax  +
mov ecx ebx +
call dword ptr [esi+0Ch]  +
mov esi eax +
mov [ebp+10h] esi +
cmp edi esi +
jz loc_444E04  +
mov edx [esi+8] +
cmp [edi+8] edx +
jnz loc_444DA6  +
mov eax [esi+0Ch] +
mov ecx edx +
shr ecx 1 +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_444DE3  +
mov eax [esi+0Ch] +
test edx edx +
jz loc_444DC0  +
lea eax [eax+edx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_444DC0  +
sub eax 4 +
sub edx 1 +
jnz loc_444DB3  +
mov ecx edx +
call sub_432CF0  +
mov edx [edi+0Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi+8]  +
call sub_437F60  +
mov [edi+8] esi +
add esp 0Ch +
mov esi [ebp+10h] +
mov [edi+0Ch] eax +
mov ecx [esi+0Ch] +
mov edx [edi+0Ch] +
cmp edx ecx +
jz loc_444DFE  +
mov eax [edi+8] +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [ebp-10h] +
add eax 0Ch +
sub dword ptr [ebp+14h] 1 +
mov [ebp-10h] eax +
jnz loc_444C50  +
mov edx [ebp-40h] +
xor eax eax +
mov esi [ebp-3Ch] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_444E39  +
call sub_4746E8  +
jmp loc_444E3E  +
call sub_45B0EB  +
mov ebx [ebp-28h] +
add esp 4 +
test ebx ebx +
jz loc_444E78  +
push dword ptr [ebp+14h]  +
mov edx [ebp-24h] +
push ecx  +
mov ecx ebx +
call loc_445CF0  +
mov ecx [ebp-20h] +
mov eax 92492493h +
sub ecx ebx +
add esp 8 +
imul  ecx +
add edx ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push ebx  +
call loc_445A50  +
lea ecx [ebp-34h] +
call sub_445790  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_47A339  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 0 +
cmp dword_4A291C 0 +
jnz loc_444EED  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov esi [ebp+arg_0] +
mov ecx 2 +
mov dword ptr [esi] offset off_49099C +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
push 1  +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
mov ecx edi +
push [ebp+arg_4]  +
mov edx [edi] +
push esi  +
mov [ebp+var_10] 1 +
call dword ptr [edx+54h]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edx [ecx] +
push [esp+8+arg_C]  +
mov [esp+0Ch+var_4] 0 +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call dword ptr [edx+58h]  +
mov ecx eax +
call loc_444100  +
mov eax [esp+4+arg_0] +
pop ecx  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A3F3  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-5Ch] ebx +
mov eax [ebp+0Ch] +
lea ecx [ebp-4Ch] +
mov esi [ebp+8] +
push eax  +
call loc_432E00  +
push esi  +
lea ecx [ebp-38h] +
mov dword ptr [ebp-4] 0 +
call loc_432E00  +
push offset sub_40C800  +
push offset sub_432D40  +
push 1  +
push 14h  +
lea eax [ebp-24h] +
mov byte ptr [ebp-4] 1 +
push eax  +
call sub_47435C  +
mov dword ptr [ebp-4] 2 +
xor edi edi +
mov esi [ebx] +
mov ecx ebx +
mov [ebp-50h] edi +
mov dword ptr [ebp-58h] 1 +
mov dword ptr [ebp-54h] 2 +
call dword ptr [esi+8]  +
push eax  +
lea eax [ebp-38h] +
mov ecx ebx +
push eax  +
mov eax [esi+4] +
call eax  +
test al al +
jnz loc_445117  +
lea edi [ebp-38h] +
mov esi [ebp-50h] +
lea ecx [ebp-4Ch] +
mov edx [ebx] +
push edi  +
lea eax [esi+esi*4] +
lea eax [ecx+eax*4] +
mov ecx ebx +
push eax  +
call dword ptr [edx+60h]  +
mov edx [ebp-54h] +
lea edi [ebp-4Ch] +
mov ebx eax +
lea ecx [edx+edx*4] +
lea edi [edi+ecx*4] +
cmp edi ebx +
jz loc_4450E2  +
mov ecx [ebx+8] +
cmp [edi+8] ecx +
jnz loc_44507E  +
mov edx [ebx+0Ch] +
mov eax ecx +
shr eax 1 +
cmp dword ptr [edx+eax*4] 0 +
jnz loc_4450BE  +
mov eax [ebx+0Ch] +
test ecx ecx +
jz loc_44509D  +
lea eax [eax+ecx*4] +
add eax 0FFFFFFFCh +
cmp dword ptr [eax] 0 +
jnz loc_44509D  +
sub eax 4 +
sub ecx 1 +
jnz loc_445090  +
call sub_432CF0  +
mov edx [edi+0Ch] +
mov esi eax +
push 0  +
push esi  +
push dword ptr [edi+8]  +
call sub_437F60  +
mov [edi+8] esi +
add esp 0Ch +
mov esi [ebp-50h] +
mov [edi+0Ch] eax +
mov ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [edi+8] +
cmp edx ecx +
jz loc_4450D9  +
shl eax 2 +
push eax  +
push ecx  +
push edx  +
call loc_452BD0  +
add esp 0Ch +
mov eax [ebx+10h] +
mov edx [ebp-54h] +
mov [edi+10h] eax +
mov ebx [ebp-5Ch] +
lea edi [ebp-4Ch] +
mov ecx edx +
mov [ebp-54h] esi +
mov esi [ebp-58h] +
mov [ebp-50h] esi +
mov esi [ebx] +
lea eax [ecx+ecx*4] +
mov [ebp-58h] ecx +
mov ecx ebx +
lea edi [edi+eax*4] +
call dword ptr [esi+8]  +
push eax  +
mov eax [esi+4] +
mov ecx ebx +
push edi  +
call eax  +
test al al +
jz loc_445042  +
mov edi [ebp-50h] +
lea ecx [ebp-4Ch] +
lea eax [edi+edi*4] +
lea eax [ecx+eax*4] +
push eax  +
lea ecx [ebx+0Ch] +
call sub_4330F0  +
push offset sub_40C800  +
push 3  +
mov esi eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
push 14h  +
lea eax [ebp-4Ch] +
push eax  +
call sub_474275  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 8  +
***
xor eax eax +
push esi  +
push edi  +
mov edx [ebx+1Ch] +
mov ecx edx +
mov esi [ebx+20h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_445197  +
call sub_4746E8  +
jmp loc_44519C  +
call sub_45B0EB  +
mov edx [ebx+8] +
xor eax eax +
mov esi [ebx+0Ch] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4451C6  +
call sub_4746E8  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_44522E  +
push [esp+8+var_4]  +
mov edx [edi+4] +
push ecx  +
call loc_445CF0  +
mov ecx [edi+8] +
mov eax 92492493h +
sub ecx [edi] +
add esp 8 +
imul  ecx +
add edx ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_445A50  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A452  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+4] +
mov ebx [ebp+arg_0] +
cmp ebx ecx +
jnb loc_4452CA  +
mov eax [esi] +
cmp eax ebx +
ja loc_4452CA  +
sub ebx eax +
mov eax 92492493h +
imul  ebx +
add edx ebx +
sar edx 5 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ecx [esi+8] +
jnz loc_44529A  +
push ecx  +
mov ecx esi +
call loc_4455F0  +
mov eax [esi] +
lea ecx ds:0[edi*8] +
sub ecx edi +
mov edi [esi+4] +
mov [ebp+arg_0] edi +
mov [ebp+var_10] edi +
lea ebx [eax+ecx*8] +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_445331  +
push ebx  +
mov ecx edi +
call loc_432E00  +
mov byte ptr [ebp+var_4] 1 +
jmp loc_4452F7  +
cmp ecx [esi+8] +
jnz loc_4452D7  +
push ecx  +
mov ecx esi +
call loc_4455F0  +
mov edi [esi+4] +
mov [ebp+arg_0] edi +
mov [ebp+var_10] edi +
mov [ebp+var_4] 2 +
test edi edi +
jz loc_445331  +
push ebx  +
mov ecx edi +
call loc_432E00  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebx+14h] +
push eax  +
lea ecx [edi+14h] +
call loc_432E00  +
mov eax [ebx+28h] +
mov [edi+28h] eax +
mov eax [ebx+2Ch] +
mov [edi+2Ch] eax +
mov eax [ebx+30h] +
mov [edi+30h] eax +
movzx eax byte ptr [ebx+34h] +
mov [edi+34h] al +
movzx eax byte ptr [ebx+35h] +
mov [edi+35h] al +
movzx eax byte ptr [ebx+36h] +
mov [edi+36h] al +
movzx eax byte ptr [ebx+37h] +
mov [edi+37h] al +
add dword ptr [esi+4] 38h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
jmp sub_445790  +
***
push ebx  +
mov ebx [esp+8] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
test ebx ebx +
jz loc_4453B8  +
cmp ebx 15555555h +
ja loc_4453BF  +
push esi  +
push ebx  +
call loc_445AC0  +
push dword ptr [esp+10h]  +
mov [edi] eax +
lea esi [ebx+ebx*2] +
mov [edi+4] eax +
sub esp 8 +
mov eax [edi] +
mov edx ebx +
shl esi 2 +
add eax esi +
mov [edi+8] eax +
mov ecx [edi] +
call sub_445B30  +
add esp 0Ch +
add [edi+4] esi +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push 0FFFFFFFFh  +
push offset loc_47A470  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov ecx [ebx+4] +
mov eax 66666667h +
mov edi [ebp+arg_0] +
mov edx ecx +
sub edx [ebx] +
imul  edx +
sar edx 3 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov [ebp+var_18] esi +
cmp esi edi +
jbe loc_44545E  +
sub edi esi +
lea eax [edi+edi*4] +
lea eax [ecx+eax*4] +
mov [ebp+arg_4] eax +
mov esi eax +
cmp eax ecx +
jz loc_445447  +
mov edi ecx +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 14h +
cmp esi edi +
jnz loc_445435  +
mov eax [ebp+arg_4] +
mov [ebx+4] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
jnb loc_44544A  +
mov edx [ebp+arg_4] +
cmp edx ecx +
jnb loc_44549A  +
mov eax [ebx] +
cmp eax edx +
ja loc_44549A  +
sub edx eax +
mov ecx ebx +
mov eax 66666667h +
imul  edx +
mov eax edi +
sub eax [ebp+var_18] +
sar edx 3 +
mov esi edx +
shr esi 1Fh +
push eax  +
add esi edx +
call sub_4457F0  +
mov ecx [ebx] +
lea eax [esi+esi*4] +
lea eax [ecx+eax*4] +
mov [ebp+arg_4] eax +
jmp loc_4454A6  +
mov eax edi +
mov ecx ebx +
sub eax esi +
push eax  +
call sub_4457F0  +
mov [ebp+var_4] 0 +
mov eax 66666667h +
mov ecx [ebx+4] +
sub ecx [ebx] +
push [ebp+arg_4]  +
imul  ecx +
mov ecx [ebx+4] +
sub esp 8 +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
push [ebp+arg_4]  +
add eax edx +
mov edx edi +
sub edx eax +
call sub_445C50  +
mov ecx [ebx+4] +
mov eax 66666667h +
sub ecx [ebx] +
add esp 10h +
imul  ecx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
sub edi eax +
lea eax [edi+edi*4] +
shl eax 2 +
add [ebx+4] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_47A490  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov edi [ebp+arg_0] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jz loc_4455C1  +
cmp edi 0CCCCCCCh +
jbe loc_44558D  +
push offset aVectorTTooLong  +
call sub_44EC5C  +
push edi  +
call loc_443FD0  +
mov [esi] eax +
lea ebx [edi+edi*4] +
mov [esi+4] eax +
mov edx edi +
mov eax [esi] +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
shl ebx 2 +
add eax ebx +
sub esp 8 +
mov [esi+8] eax +
mov ecx [esi] +
call loc_445B60  +
add esp 0Ch +
add [esi+4] ebx +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx ecx +
mov eax 92492493h +
push esi  +
push edi  +
mov ecx [ebx+8] +
mov esi ecx +
mov edi [ebx+4] +
sub esi edi +
imul  esi +
add edx esi +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_445671  +
mov esi [ebx] +
mov eax 92492493h +
sub edi esi +
imul  edi +
push ebp  +
add edx edi +
mov ebp 4924924h +
sar edx 5 +
mov eax ebp +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_445677  +
sub ecx esi +
mov eax 92492493h +
imul  ecx +
inc edi  +
add edx ecx +
sar edx 5 +
mov esi edx +
shr esi 1Fh +
add esi edx +
xor edx edx +
mov eax esi +
shr eax 1 +
sub ebp eax +
cmp ebp esi +
lea ecx [eax+esi] +
cmovb ecx edx +
cmp ecx edi +
cmovb ecx edi +
push ecx  +
mov ecx ebx +
call sub_445690  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
push 0FFFFFFFFh  +
push offset loc_47A4B0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
push [ebp+arg_0]  +
call loc_4459E0  +
mov [ebp+var_4] 0 +
mov ebx eax +
push [ebp+arg_0]  +
mov edx [edi+4] +
mov ecx [edi] +
sub esp 8 +
mov [ebp+var_14] ebx +
push ebx  +
call loc_445D70  +
mov esi [edi] +
mov eax 92492493h +
mov ecx [edi+4] +
add esp 10h +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 5 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+var_14] ecx +
test esi esi +
jz loc_44573B  +
push [ebp+arg_0]  +
mov edx [edi+4] +
push ecx  +
mov ecx esi +
call loc_445CF0  +
mov esi [edi] +
mov eax 92492493h +
mov ecx [edi+8] +
add esp 8 +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_445A50  +
mov ecx [ebp+var_14] +
mov edx [ebp+arg_0] +
lea eax ds:0[edx*8] +
sub eax edx +
lea eax [ebx+eax*8] +
mov [edi+8] eax +
lea eax ds:0[ecx*8] +
sub eax ecx +
lea eax [ebx+eax*8] +
mov [edi+4] eax +
mov [edi] ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_4457E3  +
push edi  +
mov edi [ebx+4] +
cmp esi edi +
jz loc_4457B0  +
mov ecx esi +
call sub_443F70  +
add esi 0Ch +
cmp esi edi +
jnz loc_4457A2  +
mov esi [ebx] +
mov eax 2AAAAAABh +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
sar edx 1 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_445880  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax 66666667h +
push ebp  +
push esi  +
push edi  +
mov ebp [ebx+8] +
mov edx ebp +
mov esi [ebx+4] +
sub edx esi +
mov edi [esp+0Ch+arg_0] +
imul  edx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax edi +
jnb loc_44586E  +
sub esi [ebx] +
mov eax 66666667h +
imul  esi +
mov eax 0CCCCCCCh +
sar edx 3 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
sub eax ecx +
cmp eax edi +
jb loc_445875  +
sub ebp [ebx] +
mov eax 66666667h +
imul  ebp +
add edi ecx +
xor ebp ebp +
sar edx 3 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0CCCCCCCh +
mov eax esi +
shr eax 1 +
sub edx eax +
cmp edx esi +
lea ecx [eax+esi] +
cmovb ecx ebp +
cmp ecx edi +
cmovb ecx edi +
push ecx  +
mov ecx ebx +
call sub_4458E0  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
push offset aVectorTTooLong  +
call sub_44EC5C  +
int 3  +
***
mov eax [esp+8] +
mov ecx [esp+4] +
cmp eax 15555555h +
ja loc_4458C0  +
lea eax [eax+eax*2] +
shl eax 2 +
cmp eax 1000h +
jb loc_4458B6  +
test cl 1Fh +
jnz loc_4458C5  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_4458CA  +
sub ecx eax +
cmp ecx 4 +
jb loc_4458CF  +
cmp ecx 23h +
ja loc_4458D4  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
pop ecx  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_47A4D0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
push [ebp+arg_0]  +
call loc_443FD0  +
mov [ebp+var_4] 0 +
mov ebx eax +
push [ebp+arg_0]  +
mov edx [edi+4] +
mov ecx [edi] +
sub esp 8 +
mov [ebp+var_18] ebx +
push ebx  +
call loc_445EA0  +
mov eax [edi+4] +
add esp 10h +
mov esi [edi] +
mov ecx eax +
sub ecx esi +
mov [ebp+var_14] eax +
mov eax 66666667h +
imul  ecx +
sar edx 3 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+var_18] ecx +
test esi esi +
jz loc_445992  +
cmp esi [ebp+var_14] +
jz loc_445970  +
nop   +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 14h +
cmp esi [ebp+var_14] +
jnz loc_445960  +
mov esi [edi] +
mov eax 66666667h +
mov ecx [edi+8] +
sub ecx esi +
imul  ecx +
sar edx 3 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_443F10  +
mov ecx [ebp+var_18] +
mov eax [ebp+arg_0] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
mov [edi+8] eax +
lea eax [ecx+ecx*4] +
lea eax [ebx+eax*4] +
mov [edi+4] eax +
mov [edi] ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [esp+4] +
test ecx ecx +
jnz loc_4459ED  +
xor eax eax +
retn 4  +
***
cmp ecx 4924924h +
ja loc_445A39  +
lea eax ds:0[ecx*8] +
sub eax ecx +
shl eax 3 +
cmp eax 1000h +
jb loc_445A2A  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_445A3E  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_445A43  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz locret_4459EA  +
jmp loc_445A48  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
mov edx [esp+8] +
mov ecx [esp+4] +
cmp edx 4924924h +
ja loc_445A97  +
lea eax ds:0[edx*8] +
sub eax edx +
shl eax 3 +
cmp eax 1000h +
jb loc_445A8D  +
test cl 1Fh +
jnz loc_445A9C  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_445AA1  +
sub ecx eax +
cmp ecx 4 +
jb loc_445AA6  +
cmp ecx 23h +
ja loc_445AAB  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
pop ecx  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
mov eax [esp+4] +
test eax eax +
jnz loc_445ACB  +
retn 4  +
***
cmp eax 15555555h +
ja loc_445B10  +
lea eax [eax+eax*2] +
shl eax 2 +
cmp eax 1000h +
jb loc_445B01  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_445B15  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_445B1A  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz locret_445AC8  +
jmp loc_445B1F  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
test edx edx +
jz locret_445B54  +
test ecx ecx +
jz loc_445B4C  +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
add ecx 0Ch +
sub edx 1 +
jnz loc_445B34  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A501  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov [ebp-18h] esi +
mov dword ptr [ebp-4] 0 +
test edi edi +
jz loc_445C38  +
mov [ebp-1Ch] esi +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_445C06  +
cmp dword_4A291C 0 +
jnz loc_445BCB  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov dword ptr [esi] offset off_49099C +
mov ecx 2 +
mov dword ptr [esi+8] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
dec edi  +
mov byte ptr [ebp-4] 0 +
add esi 14h +
mov [ebp-14h] esi +
jmp loc_445BA0  +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A531  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov ebx [ebp+arg_0] +
mov [ebp+var_18] esi +
mov [ebp+var_4] 0 +
nop   +
test edi edi +
jz loc_445CD8  +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_445CA7  +
push ebx  +
mov ecx esi +
call loc_432E00  +
dec edi  +
mov byte ptr [ebp+var_4] 0 +
add esi 14h +
mov [ebp+var_14] esi +
jmp loc_445C90  +
mov esi [ebp-18h] +
mov edi [ebp-14h] +
cmp esi edi +
jz loc_445CCF  +
nop   +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 14h +
cmp esi edi +
jnz loc_445CC0  +
push 0  +
push 0  +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp edx +
cmp ecx ebp +
jz loc_445D60  +
push ebx  +
push esi  +
push edi  +
lea esi [ecx+20h] +
mov edx [esi-4] +
xor eax eax +
mov ebx [esi] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_445D21  +
call sub_4746E8  +
jmp loc_445D26  +
call sub_45B0EB  +
mov edx [esi-18h] +
xor eax eax +
mov ebx [esi-14h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_445D4B  +
call sub_4746E8  +
jmp loc_445D50  +
call sub_45B0EB  +
add esi 38h +
add esp 4 +
lea eax [esi-20h] +
cmp eax ebp +
jnz loc_445D00  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A569  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx edx +
mov esi ecx +
mov edi [ebp+8] +
mov [ebp-14h] edi +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-14h] +
cmp esi [ebp+8] +
jz loc_445E81  +
add esi 20h +
mov edx [esi-4] +
xor eax eax +
mov ebx [esi] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_445E44  +
call sub_4746E8  +
jmp loc_445E49  +
call sub_45B0EB  +
mov edx [esi-18h] +
xor eax eax +
mov ebx [esi-14h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_445E6E  +
call sub_4746E8  +
jmp loc_445E73  +
call sub_45B0EB  +
add esi 38h +
add esp 4 +
lea eax [esi-20h] +
cmp eax [ebp+8] +
jnz loc_445E23  +
push 0  +
push 0  +
call sub_452780  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A5A1  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx edx +
mov edi ecx +
mov esi [ebp+8] +
mov [ebp-14h] esi +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-14h] +
mov edi [ebp+8] +
cmp esi edi +
jz loc_445F1F  +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 14h +
cmp esi edi +
jnz loc_445F10  +
push 0  +
push 0  +
call sub_452780  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor al al +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor al al +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 34h +
mov eax dword_49E070 +
xor eax esp +
mov [esp+34h+var_4] eax +
lea edx [esp+34h+var_14] +
xor ecx ecx +
call sub_445F40  +
test al al +
jz loc_4461B2  +
lea edx [esp+34h+var_34] +
mov ecx 1 +
call sub_445F40  +
test al al +
jz loc_4461B2  +
mov eax [esp+34h+var_28] +
test eax 4000000h +
jz loc_4460C4  +
call sub_445FF0  +
mov cl al +
mov eax [esp+34h+var_28] +
mov byte_4A2926 cl +
jmp loc_4460CA  +
mov cl byte_4A2926 +
test cl cl +
jz loc_4460DF  +
test [esp+34h+var_2C] 2000000h +
mov byte_4A2924 1 +
jnz loc_4460E6  +
mov byte_4A2924 0 +
test eax 2000000h +
jnz loc_446113  +
lea edx [esp+34h+var_24] +
mov ecx 80000000h +
call sub_445F40  +
cmp [esp+34h+var_24] 80000001h +
jb loc_446113  +
lea edx [esp+34h+var_24] +
mov ecx 80000001h +
call sub_445F40  +
mov eax [esp+34h+var_8] +
mov ecx [esp+34h+var_C] +
mov [esp+34h+var_C] eax +
lea eax [esp+34h+var_10] +
mov [esp+34h+var_8] ecx +
cmp dword ptr [eax] 756E6547h +
jnz loc_446164  +
cmp dword ptr [eax+4] 49656E69h +
jnz loc_446164  +
cmp dword ptr [eax+8] 6C65746Eh +
jnz loc_446164  +
mov eax [esp+34h+var_34] +
and eax 0F00h +
cmp eax 0F00h +
mov eax [esp+34h+var_30] +
setz byte_4A2925  +
shr eax 8 +
movzx eax al +
shl eax 3 +
jmp loc_44619C  +
lea eax [esp+34h+var_10] +
cmp dword ptr [eax] 68747541h +
jnz loc_446197  +
cmp dword ptr [eax+4] 69746E65h +
jnz loc_446197  +
cmp dword ptr [eax+8] 444D4163h +
jnz loc_446197  +
lea edx [esp+34h+var_14] +
mov ecx 80000005h +
call sub_445F40  +
movzx eax byte ptr [esp+34h+var_C] +
jmp loc_44619C  +
mov eax dword_49EB64 +
test eax eax +
mov byte_4A2927 1 +
mov ecx 20h +
cmovz eax ecx +
mov dword_49EB64 eax +
mov ecx [esp+34h+var_4] +
xor ecx esp +
call sub_44FE3E  +
add esp 34h +
retn   +
***
cmp dword ptr [ecx+10h] 1 +
jz loc_4461F9  +
cmp dword ptr [edx+10h] 1 +
jz loc_4461EC  +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setle al  +
retn   +
mov ecx 1 +
xor eax eax +
test ecx ecx +
setle al  +
retn   +
cmp dword ptr [edx+10h] 1 +
jz loc_44620A  +
or ecx 0FFFFFFFFh +
xor eax eax +
test ecx ecx +
setle al  +
retn   +
push edx  +
call loc_435C80  +
mov ecx eax +
xor eax eax +
neg ecx  +
test ecx ecx +
setle al  +
retn   +
***
sub esp 8 +
push esi  +
push [esp+0Ch+arg_4]  +
mov esi ecx +
mov [esp+10h+var_4] 0 +
push [esp+10h+arg_0]  +
mov [esp+14h+var_8] esi +
call sub_436170  +
add esp 8 +
mov eax esi +
pop esi  +
add esp 8 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A5C8  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0Ch  +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
push 0DB7h  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_44A280  +
mov eax [esi+4] +
lea ecx [ebp+var_10] +
mov [ebp+var_10] 2 +
cmp ecx eax +
jnb loc_4462F0  +
mov ecx [esi] +
lea edx [ebp+var_10] +
cmp ecx edx +
ja loc_4462F0  +
mov edi edx +
sub edi ecx +
sar edi 1 +
cmp eax [esi+8] +
jnz loc_4462DE  +
push ecx  +
mov ecx esi +
call loc_44A220  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_44630C  +
mov eax [esi] +
mov ax [eax+edi*2] +
mov [ecx] ax +
jmp loc_44630C  +
cmp eax [esi+8] +
jnz loc_4462FD  +
push ecx  +
mov ecx esi +
call loc_44A220  +
mov eax [esi+4] +
test eax eax +
jz loc_44630C  +
mov ecx 2 +
mov [eax] cx +
add dword ptr [esi+4] 2 +
mov ecx 1 +
mov edx 3 +
mov [ebp+var_14] ecx +
mov [ebp+var_10] edx +
mov edi 1 +
cmp ecx edi +
jbe loc_446352  +
mov ebx [esi] +
mov esi [ebp+var_14] +
add ebx 2 +
movzx ecx word ptr [ebx] +
mov eax edx +
xor edx edx +
div  ecx +
test edx edx +
jz loc_446349  +
mov edx [ebp+var_10] +
inc edi  +
add ebx 2 +
cmp edi esi +
jb loc_446331  +
mov esi [ebp+var_18] +
mov ecx [ebp+var_14] +
mov edx [ebp+var_10] +
cmp edi ecx +
jnz loc_4463CB  +
movzx edi dx +
lea ecx [ebp+var_14] +
mov eax edi +
mov [ebp+var_14] eax +
mov eax [esi+4] +
cmp ecx eax +
jnb loc_446399  +
mov ecx [esi] +
lea ebx [ebp+var_14] +
cmp ecx ebx +
ja loc_446399  +
mov edi ebx +
sub edi ecx +
sar edi 1 +
cmp eax [esi+8] +
jnz loc_446387  +
push ecx  +
mov ecx esi +
call loc_44A220  +
mov edx [ebp+var_10] +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4463B3  +
mov eax [esi] +
mov ax [eax+edi*2] +
mov [ecx] ax +
jmp loc_4463B3  +
cmp eax [esi+8] +
jnz loc_4463A9  +
push ecx  +
mov ecx esi +
call loc_44A220  +
mov edx [ebp+var_10] +
mov eax [esi+4] +
test eax eax +
jz loc_4463B3  +
mov [eax] di +
add dword ptr [esi+4] 2 +
mov ecx 36h +
mov eax [esi+4] +
sub eax [esi] +
sar eax 1 +
cmp eax ecx +
cmovb ecx eax +
mov [ebp+var_14] ecx +
add edx 2 +
mov [ebp+var_10] edx +
cmp edx 7FCFh +
jbe loc_446320  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 1Ch +
push ebx  +
push ebp  +
push esi  +
xor ebx ebx +
mov esi ecx +
push edi  +
mov [esp+2Ch+var_18] ebx +
call sub_44A2F0  +
mov edi [eax] +
mov ebp [eax+4] +
sub ebp edi +
mov [esp+2Ch+var_18] edi +
sar ebp 1 +
cmp dword ptr [esi+10h] 1 +
jz loc_44647D  +
mov ecx esi +
call loc_425B30  +
test al al +
jz loc_44647D  +
movzx eax word ptr [edi+ebp*2-2] +
lea ecx [esp+2Ch+var_14] +
push eax  +
call sub_432EF0  +
mov ebx 1 +
cmp [esi+10h] ebx +
jz loc_44645F  +
cmp [esp+2Ch+var_4] ebx +
jz loc_44647D  +
lea eax [esp+2Ch+var_14] +
mov ecx esi +
push eax  +
call loc_435C80  +
jmp loc_446473  +
cmp [esp+2Ch+var_4] ebx +
jnz loc_446477  +
lea eax [esp+2Ch+var_14] +
mov ecx esi +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jg loc_44647D  +
mov [esp+13h] bl +
jmp loc_446482  +
mov [esp+2Ch+var_19] 0 +
test bl 1 +
jz loc_4464B7  +
mov edx [esp+2Ch+var_C] +
xor eax eax +
mov ebx [esp+2Ch+var_8] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4464AB  +
call sub_4746E8  +
jmp loc_4464B0  +
call sub_45B0EB  +
mov edi [esp+30h+var_18] +
add esp 4 +
cmp [esp+2Ch+var_19] 0 +
jz loc_4464F0  +
cmp dword ptr [esi+10h] 0 +
mov eax [esi+0Ch] +
mov eax [eax] +
jz loc_4464CB  +
neg eax  +
movzx eax ax +
lea edx [edi+ebp*2] +
mov [esp+2Ch+var_18] eax +
mov ecx edi +
push [esp+2Ch+var_18]  +
lea eax [esp+30h+var_18] +
push eax  +
call sub_44A4F0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 1Ch +
retn   +
pop edi  +
pop esi  +
pop ebp  +
xor al al +
pop ebx  +
add esp 1Ch +
retn   +
***
push ecx  +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov ebx edx +
mov ebp ecx +
call sub_44A2F0  +
xor esi esi +
mov edi [eax] +
movzx eax word ptr [edi] +
cmp eax ebx +
jnb loc_44653B  +
mov ecx edi +
movzx eax word ptr [ecx] +
mov ecx ebp +
push eax  +
call loc_435B90  +
test eax eax +
jz loc_446556  +
inc esi  +
movzx eax word ptr [edi+esi*2] +
lea ecx [edi+esi*2] +
cmp eax ebx +
jb loc_446520  +
movzx eax word ptr [edi+esi*2] +
cmp ebx eax +
jnz loc_44655E  +
push ebx  +
mov ecx ebp +
call loc_435B90  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
xor al al +
pop ebx  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A671  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_34] edx +
mov ebx ecx +
mov [ebp+var_1C] ebx +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
cmp dword_4A291C eax +
jnz loc_4465C2  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+var_20] 0 +
mov [ebp+var_24] esi +
mov dword ptr [esi] 3 +
mov dword ptr [esi+4] 0 +
cmp dword ptr [ebx+10h] 1 +
jz loc_446610  +
lea eax [ebp+var_30] +
mov ecx ebx +
push eax  +
call loc_435C80  +
jmp loc_446613  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi esi +
mov ecx 2 +
setle bl  +
xor eax eax +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jz loc_446781  +
cmp dword_4A291C 0 +
jnz loc_44664C  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_70] offset off_49099C +
mov [ebp+var_68] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edi eax +
mov [ebp+var_60] 0 +
mov [ebp+var_64] edi +
mov dword ptr [edi] 2 +
mov dword ptr [edi+4] 0 +
mov eax [ebp+var_1C] +
mov ebx 1 +
mov [ebp+var_4] 0 +
mov [ebp+var_18] ebx +
cmp [eax+10h] ebx +
jz loc_4466B2  +
lea ecx [ebp+var_70] +
push ecx  +
mov ecx eax +
call loc_435C80  +
test eax eax +
jnz loc_4466B2  +
mov esi [ebp+var_24] +
jmp loc_44671D  +
cmp dword_4A291C 0 +
jnz loc_4466CA  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ecx [ebp+var_1C] +
lea edx [ebp+var_30] +
mov esi eax +
mov [ebp+var_20] 0 +
mov [ebp+var_24] esi +
mov ebx 3 +
mov dword ptr [esi] 3 +
mov dword ptr [esi+4] 0 +
call sub_425E40  +
mov [ebp+var_D] 0 +
test al al +
jz loc_446721  +
mov [ebp+var_D] 1 +
test bl 2 +
jz loc_446753  +
mov edx [ebp+var_28] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
and ebx 0FFFFFFFDh +
push esi  +
cmp eax 10h +
jb loc_446748  +
call sub_4746E8  +
jmp loc_44674D  +
call sub_45B0EB  +
mov edi [ebp+var_64] +
add esp 4 +
test bl 1 +
jz loc_44676C  +
push [ebp+var_64]  +
xor eax eax +
mov ecx 2 +
stos   +
call sub_45B0EB  +
add esp 4 +
mov al [ebp+var_D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov edi [ebp+var_1C] +
cmp dword ptr [edi+8] 0 +
jbe loc_44679B  +
mov eax [edi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_44679B  +
mov esi [ebp+var_24] +
mov ebx [ebp+var_14] +
jmp loc_446812  +
cmp dword_4A291C 0 +
jnz loc_4467B3  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+var_20] 0 +
mov [ebp+var_24] esi +
mov dword ptr [esi] 2 +
mov dword ptr [esi+4] 0 +
mov [ebp+var_4] 1 +
lea edx [ebp+var_30] +
mov ebx 4 +
mov ecx edi +
mov [ebp+var_14] ebx +
mov [ebp+var_18] ebx +
call sub_438A50  +
test al al +
jnz loc_4468A1  +
cmp dword_4A291C 0 +
jnz loc_44682A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_70] offset off_49099C +
mov [ebp+var_68] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_64] eax +
mov [ebp+var_60] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov edx [ebp+var_34] +
lea ecx [ebp+var_98] +
mov [ebp+var_4] 2 +
or ebx 8 +
push edi  +
mov [ebp+var_18] ebx +
call sub_438D70  +
or ebx 10h +
add esp 4 +
mov [ebp+var_14] ebx +
cmp dword ptr [eax+10h] 1 +
jz loc_4468A1  +
lea ecx [ebp+var_70] +
push ecx  +
mov ecx eax +
call loc_435C80  +
mov [ebp+var_D] 0 +
test eax eax +
jz loc_4468A5  +
mov [ebp+var_D] 1 +
test bl 10h +
jz loc_4468E5  +
mov eax [ebp+var_8C] +
and ebx 0FFFFFFEFh +
mov edx [ebp+var_90] +
mov edi eax +
mov [ebp+var_18] eax +
mov ecx edx +
push [ebp+var_18]  +
xor eax eax +
mov [ebp+var_14] ebx +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_4468DD  +
call sub_4746E8  +
jmp loc_4468E2  +
call sub_45B0EB  +
add esp 4 +
test bl 8 +
jz loc_446917  +
mov edx [ebp+var_64] +
xor eax eax +
mov ecx [ebp+var_68] +
mov edi edx +
stos   +
mov eax [ebp+var_68] +
and ebx 0FFFFFFF7h +
shl eax 2 +
mov [ebp+var_14] ebx +
push edx  +
cmp eax 10h +
jb loc_44690F  +
call sub_4746E8  +
jmp loc_446914  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
test bl 4 +
jz loc_446950  +
mov edx [ebp+var_28] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
and ebx 0FFFFFFFBh +
lea eax ds:0[edx*4] +
mov [ebp+var_14] ebx +
push esi  +
cmp eax 10h +
jb loc_446948  +
call sub_4746E8  +
jmp loc_44694D  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+var_D] 0 +
jnz loc_446D90  +
cmp dword_4A291C 0 +
jnz loc_446972  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+var_20] 0 +
mov [ebp+var_24] esi +
mov dword ptr [esi] 1 +
mov dword ptr [esi+4] 0 +
mov edx [ebp+var_1C] +
lea eax [ebp+var_30] +
push eax  +
lea ecx [ebp+var_5C] +
mov [ebp+var_4] 3 +
call sub_425FB0  +
add esp 4 +
xor eax eax +
mov byte ptr [ebp+var_4] 5 +
mov edi esi +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
mov esi [ebp+var_50] +
add esp 4 +
mov edx [ebp+var_54] +
xor ebx ebx +
mov eax ebx +
shr eax 5 +
cmp eax edx +
jnb loc_4469FD  +
mov eax [esi+eax*4] +
mov ecx ebx +
and ecx 1Fh +
shr eax cl +
and al 1 +
jnz loc_446A00  +
inc ebx  +
jmp loc_4469E6  +
push ebx  +
lea eax [ebp+var_84] +
mov [ebp+var_18] ebx +
push eax  +
lea ecx [ebp+var_5C] +
call sub_425C20  +
mov edi [ebp+var_1C] +
lea eax [ebp+var_84] +
mov edx [ebp+var_34] +
lea ecx [ebp+var_48] +
push edi  +
push eax  +
mov byte ptr [ebp+var_4] 6 +
call sub_436170  +
add esp 8 +
mov byte ptr [ebp+var_4] 7 +
cmp dword_4A291C 0 +
jnz loc_446A4C  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
or [ebp+var_14] 20h +
mov esi eax +
mov [ebp+var_24] esi +
mov [ebp+var_20] 0 +
mov dword ptr [esi] 1 +
mov dword ptr [esi+4] 0 +
cmp [ebp+var_38] 1 +
jz loc_446AB5  +
lea eax [ebp+var_30] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
test eax eax +
jz loc_446ACD  +
cmp [ebp+var_4C] 1 +
jz loc_446AD3  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
jmp loc_446AC9  +
cmp [ebp+var_4C] 1 +
jnz loc_446AD3  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
neg eax  +
test eax eax +
jnz loc_446AD3  +
mov [ebp+var_D] 1 +
jmp loc_446AD7  +
mov [ebp+var_D] 0 +
test byte ptr [ebp+var_14] 20h +
jz loc_446AF4  +
xor eax eax +
mov edi esi +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
mov edi [ebp+var_1C] +
add esp 4 +
cmp [ebp+var_D] 0 +
jz loc_446BA5  +
mov edx [ebp+var_40] +
xor eax eax +
mov esi [ebp+var_3C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446B20  +
call sub_4746E8  +
jmp loc_446B25  +
call sub_45B0EB  +
mov edx [ebp+var_7C] +
xor eax eax +
mov esi [ebp+var_78] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446B4A  +
call sub_4746E8  +
jmp loc_446B4F  +
call sub_45B0EB  +
mov edx [ebp+var_54] +
xor eax eax +
mov esi [ebp+var_50] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446B89  +
call sub_4746E8  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov [ebp+var_34] 1 +
cmp ebx 1 +
jbe loc_446D12  +
lea eax [ebp+var_30] +
push eax  +
lea ecx [ebp+var_48] +
call sub_425D80  +
push edi  +
mov edx eax +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_98] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [ebp+var_48] +
mov byte ptr [ebp+var_4] 9 +
call sub_4330F0  +
mov edx [ebp+var_90] +
xor eax eax +
mov esi [ebp+var_8C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446C0B  +
call sub_4746E8  +
jmp loc_446C10  +
call sub_45B0EB  +
mov byte ptr [ebp+var_4] 7 +
xor eax eax +
mov edx [ebp+var_28] +
add esp 4 +
mov esi [ebp+var_24] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446C39  +
call sub_4746E8  +
jmp loc_446C3E  +
call sub_45B0EB  +
add esp 4 +
cmp [ebp+var_38] 1 +
jz loc_446C5B  +
cmp [ebp+var_4C] 1 +
jz loc_446C77  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
jmp loc_446C6F  +
cmp [ebp+var_4C] 1 +
jnz loc_446C77  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
neg eax  +
test eax eax +
jz loc_446AFE  +
cmp dword_4A291C 0 +
jnz loc_446C8F  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+var_20] 0 +
mov [ebp+var_24] esi +
mov dword ptr [esi] 1 +
mov dword ptr [esi+4] 0 +
cmp [ebp+var_38] 1 +
jz loc_446CDE  +
lea eax [ebp+var_30] +
push eax  +
lea ecx [ebp+var_48] +
call loc_435C80  +
jmp loc_446CE1  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi esi +
mov ecx 2 +
setz bl  +
xor eax eax +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jnz loc_446D12  +
mov esi [ebp+var_34] +
inc esi  +
mov [ebp+var_34] esi +
cmp esi [ebp+var_18] +
jnb loc_446D12  +
mov edi [ebp+var_1C] +
jmp loc_446BB5  +
mov edx [ebp+var_40] +
xor eax eax +
mov esi [ebp+var_3C] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446D34  +
call sub_4746E8  +
jmp loc_446D39  +
call sub_45B0EB  +
mov edx [ebp+var_7C] +
xor eax eax +
mov esi [ebp+var_78] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446D5E  +
call sub_4746E8  +
jmp loc_446D63  +
call sub_45B0EB  +
mov edx [ebp+var_54] +
xor eax eax +
mov esi [ebp+var_50] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_446D88  +
call sub_4746E8  +
jmp loc_446D8D  +
call sub_45B0EB  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A6C9  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov [ebp+var_14] esi +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] 0 +
cmp dword_4A291C 0 +
jnz loc_446DFF  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_58] offset off_49099C +
mov [ebp+var_50] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edx eax +
mov [ebp+var_48] 0 +
mov [ebp+var_4C] edx +
mov dword ptr [edx] 3 +
mov dword ptr [edx+4] 0 +
cmp dword ptr [esi+10h] 1 +
jz loc_446E50  +
lea eax [ebp+var_58] +
mov ecx esi +
push eax  +
call loc_435C80  +
mov edx [ebp+var_4C] +
jmp loc_446E53  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi edx +
mov ecx 2 +
setle bl  +
xor eax eax +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jz loc_446FC9  +
cmp dword_4A291C 0 +
jnz loc_446E8C  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_44] offset off_49099C +
mov [ebp+var_3C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edi eax +
mov [ebp+var_34] 0 +
mov [ebp+var_38] edi +
mov dword ptr [edi] 2 +
mov dword ptr [edi+4] 0 +
mov eax 1 +
mov [ebp+var_4] 0 +
mov [ebp+var_14] eax +
mov [ebp+var_18] eax +
cmp [esi+10h] eax +
jz loc_446EF2  +
lea eax [ebp+var_44] +
mov ecx esi +
push eax  +
call loc_435C80  +
test eax eax +
jnz loc_446EF2  +
mov ebx [ebp+var_4C] +
jmp loc_446F5E  +
cmp dword_4A291C 0 +
jnz loc_446F0A  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_58] offset off_49099C +
mov [ebp+var_50] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ebx eax +
mov [ebp+var_48] 0 +
lea edx [ebp+var_58] +
mov [ebp+var_4C] ebx +
mov ecx esi +
mov [ebp+var_14] 3 +
mov dword ptr [ebx] 3 +
mov dword ptr [ebx+4] 0 +
call sub_425E40  +
mov [ebp+var_D] 0 +
test al al +
jz loc_446F62  +
mov [ebp+var_D] 1 +
mov eax [ebp+var_14] +
test al 2 +
jz loc_446F9C  +
mov edx [ebp+var_50] +
and eax 0FFFFFFFDh +
mov [ebp+var_14] eax +
mov edi ebx +
xor eax eax +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_446F8E  +
call sub_4746E8  +
jmp loc_446F93  +
call sub_45B0EB  +
mov edi [ebp+var_38] +
add esp 4 +
mov eax [ebp+var_14] +
test al 1 +
jz loc_446FB4  +
push [ebp+var_38]  +
xor eax eax +
mov ecx 2 +
stos   +
call sub_45B0EB  +
add esp 4 +
mov al [ebp+var_D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword_4A291C 0 +
jnz loc_446FE1  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_30] offset off_49099C +
mov [ebp+var_28] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_24] eax +
mov [ebp+var_20] 0 +
mov dword ptr [eax+4] 0 +
mov eax [ebp+var_24] +
mov dword ptr [eax] 0 +
cmp [ebp+arg_0] 0 +
mov [ebp+var_4] 1 +
mov [ebp+var_18] 0 +
jbe loc_447192  +
cmp dword_4A291C 0 +
jnz loc_44704D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_44] offset off_49099C +
mov [ebp+var_3C] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov [ebp+var_34] 0 +
mov [ebp+var_38] esi +
mov dword ptr [esi] 2 +
mov dword ptr [esi+4] 0 +
mov byte ptr [ebp+var_4] 2 +
cmp dword_4A291C 0 +
jnz loc_4470A4  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_58] offset off_49099C +
mov [ebp+var_50] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_4C] eax +
mov [ebp+var_48] 0 +
mov dword ptr [eax] 2 +
mov dword ptr [eax+4] 0 +
lea eax [ebp+var_44] +
mov byte ptr [ebp+var_4] 3 +
mov edx [ebp+var_14] +
lea ecx [ebp+var_6C] +
push eax  +
call sub_425FB0  +
add esp 4 +
push eax  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
push [ebp+var_1C]  +
lea ecx [ebp+var_30] +
call loc_433A80  +
mov edx [ebp+var_64] +
xor eax eax +
mov ebx [ebp+var_60] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_447129  +
call sub_4746E8  +
jmp loc_44712E  +
call sub_45B0EB  +
mov edx [ebp+var_50] +
xor eax eax +
mov ebx [ebp+var_4C] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_447153  +
call sub_4746E8  +
jmp loc_447158  +
call sub_45B0EB  +
add esp 4 +
mov byte ptr [ebp+var_4] 1 +
xor eax eax +
mov edi esi +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
mov ecx [ebp+var_14] +
lea edx [ebp+var_30] +
add esp 4 +
call sub_446570  +
test al al +
jz loc_4471B4  +
mov eax [ebp+var_18] +
inc eax  +
mov [ebp+var_18] eax +
cmp eax [ebp+arg_0] +
jb loc_447035  +
mov edx [ebp+var_28] +
xor eax eax +
mov esi [ebp+var_24] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_447207  +
call sub_4746E8  +
jmp loc_44720C  +
mov edx [ebp+var_28] +
xor eax eax +
mov esi [ebp+var_24] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4471EB  +
call sub_4746E8  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_45B0EB  +
add esp 4 +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A799  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-18h] 0 +
cmp dword_4A291C 0 +
jnz loc_44727F  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-5Ch] offset off_49099C +
mov dword ptr [ebp-54h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edx eax +
mov dword ptr [ebp-4Ch] 0 +
mov [ebp-50h] edx +
mov dword ptr [edx] 1 +
mov dword ptr [edx+4] 0 +
cmp dword ptr [esi+10h] 1 +
jz loc_4472D0  +
lea eax [ebp-5Ch] +
mov ecx esi +
push eax  +
call loc_435C80  +
mov edx [ebp-50h] +
jmp loc_4472D3  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi edx +
mov ecx 2 +
setle bl  +
xor eax eax +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jz loc_447304  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [esi+8] 0 +
jbe loc_447A36  +
mov eax [esi+0Ch] +
mov al [eax] +
and al 1 +
jz loc_447A36  +
cmp dword_4A291C 0 +
jnz loc_447333  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-5Ch] offset off_49099C +
mov dword ptr [ebp-54h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-50h] eax +
mov dword ptr [ebp-4Ch] 0 +
mov dword ptr [eax] 3 +
mov dword ptr [eax+4] 0 +
mov dword ptr [ebp-4] 0 +
xor ebx ebx +
cmp dword_4A291C 0 +
jnz loc_44738D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-48h] offset off_49099C +
mov dword ptr [ebp-40h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [eax] 4 +
mov dword ptr [eax+4] 0 +
lea eax [ebp-30h] +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-5Ch] +
call sub_425D80  +
lea ecx [ebp-48h] +
mov byte ptr [ebp-4] 2 +
push ecx  +
mov edx eax +
lea ecx [ebp-70h] +
call sub_425FB0  +
add esp 4 +
mov edx esi +
mov byte ptr [ebp-4] 3 +
mov ecx eax +
call loc_4499D0  +
mov edx [ebp-68h] +
cmp eax 1 +
mov esi [ebp-64h] +
mov ecx edx +
mov [ebp-34h] eax +
setz byte ptr [ebp-0Dh]  +
xor eax eax +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_447424  +
call sub_4746E8  +
jmp loc_447429  +
call sub_45B0EB  +
mov edx [ebp-28h] +
xor eax eax +
mov esi [ebp-24h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44744E  +
call sub_4746E8  +
jmp loc_447453  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 0 +
add esp 4 +
mov edx [ebp-3Ch] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_4474A0  +
mov esi [ebp-1Ch] +
inc ebx  +
cmp ebx 40h +
jnz loc_44748B  +
mov ecx esi +
call sub_436030  +
test al al +
jnz loc_4474A6  +
lea ecx [ebp-5Ch] +
call loc_434700  +
lea ecx [ebp-5Ch] +
call loc_434700  +
jmp loc_447375  +
***
cmp dword ptr [ebp-34h] 0 +
jnz loc_4474AD  +
xor bl bl +
jmp loc_447A14  +
push 1  +
lea ecx [ebp-70h] +
call sub_432EF0  +
mov esi [ebp-1Ch] +
lea eax [ebp-70h] +
push eax  +
mov edx esi +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-98h] +
call sub_425F80  +
add esp 4 +
lea ecx [ebp-70h] +
mov byte ptr [ebp-4] 6 +
call sub_40C800  +
mov edi [ebp-8Ch] +
xor ebx ebx +
mov edx [ebp-90h] +
mov eax ebx +
shr eax 5 +
cmp eax edx +
jnb loc_447507  +
mov eax [edi+eax*4] +
mov ecx ebx +
and ecx 1Fh +
shr eax cl +
and al 1 +
jnz loc_44750A  +
inc ebx  +
jmp loc_4474F0  +
***
push ebx  +
lea eax [ebp-70h] +
mov [ebp-34h] ebx +
push eax  +
lea ecx [ebp-98h] +
call sub_425C20  +
lea eax [ebp-5Ch] +
mov byte ptr [ebp-4] 7 +
push esi  +
push eax  +
lea edx [ebp-70h] +
lea ecx [ebp-48h] +
call loc_449C40  +
add esp 8 +
mov byte ptr [ebp-4] 8 +
cmp dword_4A291C 0 +
jnz loc_447550  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-24h] eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [eax] 2 +
mov dword ptr [eax+4] 0 +
mov ecx 1 +
mov byte ptr [ebp-4] 9 +
mov [ebp-14h] ecx +
mov [ebp-18h] ecx +
cmp [ebp-38h] ecx +
jz loc_4475AD  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-48h] +
call loc_435C80  +
test eax eax +
jz loc_4475F9  +
push 2  +
lea ecx [ebp-84h] +
call sub_432EF0  +
lea eax [ebp-84h] +
mov dword ptr [ebp-4] 0Ah +
push eax  +
mov edx esi +
mov dword ptr [ebp-18h] 3 +
lea ecx [ebp-0ACh] +
call sub_425FB0  +
mov ecx 7 +
add esp 4 +
mov [ebp-14h] ecx +
mov edx eax +
lea ecx [ebp-48h] +
call sub_425E40  +
mov byte ptr [ebp-0Dh] 0 +
test al al +
jz loc_4475FD  +
mov byte ptr [ebp-0Dh] 1 +
mov eax [ebp-14h] +
test al 4 +
jz loc_447642  +
mov edx [ebp-0A4h] +
and eax 0FFFFFFFBh +
mov [ebp-14h] eax +
mov ecx edx +
mov eax [ebp-0A0h] +
mov edi eax +
mov [ebp-18h] eax +
xor eax eax +
push dword ptr [ebp-18h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_447637  +
call sub_4746E8  +
jmp loc_44763C  +
call sub_45B0EB  +
mov eax [ebp-14h] +
add esp 4 +
test al 2 +
jz loc_44767A  +
mov edx [ebp-7Ch] +
and eax 0FFFFFFFDh +
mov edi [ebp-78h] +
mov ecx edx +
mov [ebp-14h] eax +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
mov eax [ebp-78h] +
push eax  +
jb loc_44766F  +
call sub_4746E8  +
jmp loc_447674  +
call sub_45B0EB  +
mov eax [ebp-14h] +
add esp 4 +
mov dword ptr [ebp-4] 8 +
test al 1 +
jz loc_44769C  +
mov edx [ebp-24h] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
jnz loc_44798E  +
mov dword ptr [ebp-18h] 1 +
cmp ebx 1 +
jbe loc_44798A  +
cmp dword_4A291C 0 +
jnz loc_4476CE  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ebx eax +
mov dword ptr [ebp-20h] 0 +
mov [ebp-24h] ebx +
mov dword ptr [ebx] 2 +
mov dword ptr [ebx+4] 0 +
lea eax [ebp-0C0h] +
mov byte ptr [ebp-4] 0Bh +
push eax  +
lea ecx [ebp-48h] +
call sub_425D80  +
lea ecx [ebp-30h] +
mov byte ptr [ebp-4] 0Ch +
push ecx  +
mov edx eax +
lea ecx [ebp-84h] +
call sub_425FB0  +
add esp 4 +
push esi  +
mov edx eax +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-0ACh] +
call sub_426040  +
add esp 4 +
push eax  +
lea ecx [ebp-48h] +
mov byte ptr [ebp-4] 0Eh +
call sub_4330F0  +
mov edx [ebp-0A4h] +
xor eax eax +
mov esi [ebp-0A0h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44777E  +
call sub_4746E8  +
jmp loc_447783  +
call sub_45B0EB  +
mov edx [ebp-7Ch] +
xor eax eax +
mov esi [ebp-78h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4477A8  +
call sub_4746E8  +
jmp loc_4477AD  +
call sub_45B0EB  +
mov edx [ebp-0B8h] +
xor eax eax +
mov esi [ebp-0B4h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4477D8  +
call sub_4746E8  +
jmp loc_4477DD  +
call sub_45B0EB  +
add esp 4 +
mov byte ptr [ebp-4] 8 +
xor eax eax +
mov edi ebx +
mov ecx 2 +
stos   +
push ebx  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_447810  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov esi eax +
mov dword ptr [ebp-20h] 0 +
mov [ebp-24h] esi +
mov dword ptr [esi] 2 +
mov dword ptr [esi+4] 0 +
mov edx [ebp-1Ch] +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-0C0h] +
mov byte ptr [ebp-4] 0Fh +
call sub_425FB0  +
add esp 4 +
cmp dword ptr [ebp-38h] 1 +
jz loc_447882  +
cmp dword ptr [eax+10h] 1 +
jz loc_44787B  +
push eax  +
lea ecx [ebp-48h] +
call loc_435C80  +
jmp loc_447898  +
mov eax 1 +
jmp loc_447898  +
cmp dword ptr [eax+10h] 1 +
jz loc_44788D  +
or eax 0FFFFFFFFh +
jmp loc_447898  +
push eax  +
lea ecx [ebp-48h] +
call loc_435C80  +
neg eax  +
mov edx [ebp-0B8h] +
test eax eax +
mov ebx [ebp-0B4h] +
mov ecx edx +
setz byte ptr [ebp-0Dh]  +
mov edi ebx +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4478C6  +
call sub_4746E8  +
jmp loc_4478CB  +
call sub_45B0EB  +
add esp 4 +
mov byte ptr [ebp-4] 8 +
xor eax eax +
mov edi esi +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
jnz loc_44798E  +
cmp dword_4A291C 0 +
jnz loc_447908  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
cmp dword ptr [ebp-38h] 1 +
mov esi eax +
mov [ebp-24h] esi +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [esi] 2 +
mov dword ptr [esi+4] 0 +
jz loc_447957  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-48h] +
call loc_435C80  +
jmp loc_44795A  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi esi +
mov ecx 2 +
setz bl  +
xor eax eax +
stos   +
push esi  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jnz loc_44798A  +
mov eax [ebp-18h] +
mov esi [ebp-1Ch] +
inc eax  +
mov [ebp-18h] eax +
cmp eax [ebp-34h] +
jb loc_4476B6  +
xor bl bl +
jmp loc_447990  +
mov bl 1 +
mov edx [ebp-40h] +
xor eax eax +
mov esi [ebp-3Ch] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4479B2  +
call sub_4746E8  +
jmp loc_4479B7  +
call sub_45B0EB  +
mov edx [ebp-68h] +
xor eax eax +
mov esi [ebp-64h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4479DC  +
call sub_4746E8  +
jmp loc_4479E1  +
call sub_45B0EB  +
mov edx [ebp-90h] +
xor eax eax +
mov esi [ebp-8Ch] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_447A0C  +
call sub_4746E8  +
jmp loc_447A11  +
call sub_45B0EB  +
add esp 4 +
mov edx [ebp-54h] +
xor eax eax +
mov esi [ebp-50h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_447AA2  +
call sub_4746E8  +
jmp loc_447AA7  +
cmp dword_4A291C 0 +
jnz loc_447A4E  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ecx [ebp-1Ch] +
lea edx [ebp-30h] +
mov esi eax +
mov dword ptr [ebp-20h] 0 +
mov [ebp-24h] esi +
mov dword ptr [esi] 2 +
mov dword ptr [esi+4] 0 +
call sub_425E40  +
mov bl al +
mov edi esi +
xor eax eax +
mov ecx 2 +
stos   +
push esi  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A7E8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 14h  +
mov [ebp+var_10] 0 +
call sub_44FE54  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_447B1D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_28] offset off_49099C +
mov [ebp+var_20] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov ebx eax +
mov [ebp+var_18] 0 +
mov [ebp+var_1C] ebx +
mov dword ptr [ebx] 7FCFh +
mov dword ptr [ebx+4] 0 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_28] +
push esi  +
mov [ebp+var_10] 1 +
call sub_425D80  +
mov esi eax +
xor eax eax +
mov edi ebx +
mov ecx 2 +
stos   +
push ebx  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A829  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] 0 +
cmp dword_4A291C 0 +
jnz loc_447BE9  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_28] offset off_49099C +
mov [ebp+var_20] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edx eax +
mov [ebp+var_18] 0 +
mov [ebp+var_1C] edx +
mov dword ptr [edx] 7FCFh +
mov dword ptr [edx+4] 0 +
cmp dword ptr [esi+10h] 1 +
jz loc_447C3A  +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
call loc_435C80  +
mov edx [ebp+var_1C] +
jmp loc_447C3D  +
or eax 0FFFFFFFFh +
test eax eax +
mov edi edx +
mov ecx 2 +
setle bl  +
xor eax eax +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
test bl bl +
jz loc_447C73  +
mov ecx esi +
call sub_446400  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_44A370  +
cmp dword ptr [esi+10h] 1 +
jz loc_447C8E  +
cmp dword ptr [eax+10h] 1 +
jz loc_447CAA  +
push eax  +
mov ecx esi +
call loc_435C80  +
jmp loc_447CA2  +
cmp dword ptr [eax+10h] 1 +
jnz loc_447D60  +
push eax  +
mov ecx esi +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_447D60  +
call sub_44A2F0  +
mov ecx [eax] +
mov eax [eax+4] +
sub eax ecx +
sar eax 1 +
movzx edx word ptr [ecx+eax*2-2] +
mov ecx esi +
call loc_446500  +
test al al +
jnz loc_447CFF  +
push 3  +
lea ecx [ebp+var_3C] +
call sub_432EF0  +
mov [ebp+var_4] 0 +
lea edx [ebp+var_3C] +
mov ebx 1 +
mov ecx esi +
mov [ebp+var_14] ebx +
call sub_446570  +
test al al +
jz loc_447D02  +
mov ecx esi +
call loc_447230  +
test al al +
jz loc_447D02  +
mov [ebp+var_D] bl +
jmp loc_447D06  +
mov ebx [ebp+var_14] +
mov [ebp+var_D] 0 +
test bl 1 +
jz loc_447D4B  +
mov edx [ebp+var_34] +
xor eax eax +
mov esi [ebp+var_30] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_447D43  +
call sub_4746E8  +
mov al [ebp+var_D] +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_45B0EB  +
add esp 4 +
mov al [ebp+var_D] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_44A2F0  +
mov ecx [eax] +
mov eax [eax+4] +
sub eax ecx +
sar eax 1 +
movzx edx word ptr [ecx+eax*2-2] +
mov ecx esi +
call loc_446500  +
xor ecx ecx +
test al al +
setz cl  +
mov al cl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi edx +
push 0FFFFFFFFh  +
push offset loc_478CB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword_4A291C 0 +
jnz loc_447E32  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_20] offset off_49099C +
mov [ebp+var_18] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_14] eax +
mov [ebp+var_10] 0 +
mov dword ptr [eax] 2 +
mov eax [ebp+var_14] +
mov dword ptr [eax+4] 0 +
lea edx [ebp+var_20] +
mov [ebp+var_4] 0 +
mov ecx esi +
call sub_446570  +
mov edx [ebp+var_18] +
mov bl al +
mov esi [ebp+var_14] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_447EA3  +
call sub_4746E8  +
jmp loc_447EA8  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 70h +
push 0FFFFFFFFh  +
push offset loc_47A8B8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+70h+var_4] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+70h+var_7C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+70h+var_48] esi +
mov [ebp+70h+var_94] 0 +
cmp ebx 10h +
jnb loc_447F80  +
push 12h  +
push offset aInvalidBitLeng  +
lea ecx [ebp+70h+var_1C] +
mov [ebp+70h+var_8] 0Fh +
mov [ebp+70h+var_C] 0 +
mov byte ptr [ebp+70h+var_1C] 0 +
call loc_402170  +
xorps xmm0 xmm0 +
mov [ebp+70h+var_74] 0 +
movq [ebp+70h+var_40] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+70h+var_74] 1 +
lea eax [ebp+70h+var_1C] +
push 0  +
push eax  +
lea ecx [ebp+70h+var_34] +
mov [ebp+70h+var_44] offset off_48D038 +
mov [ebp+70h+var_38] 1 +
mov [ebp+70h+var_20] 0Fh +
mov [ebp+70h+var_24] 0 +
mov byte ptr [ebp+70h+var_34] 0 +
call loc_402270  +
push offset unk_49C468  +
lea eax [ebp+70h+var_44] +
mov byte ptr [ebp+70h+var_74] 0 +
push eax  +
mov [ebp+70h+var_44] offset off_48C750 +
call sub_452780  +
cmp dword_4A291C 0 +
jnz loc_447F98  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_90] offset off_49099C +
mov [ebp+70h+var_88] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_84] eax +
mov [ebp+70h+var_80] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov [ebp+70h+var_74] 2 +
cmp dword_4A291C 0 +
jnz loc_447FF0  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_70] offset off_49099C +
mov [ebp+70h+var_68] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_64] eax +
mov [ebp+70h+var_60] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov byte ptr [ebp+70h+var_74] 3 +
test bl 1 +
jnz loc_4481C8  +
cmp dword_4A291C 0 +
jnz loc_44804E  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_5C] offset off_49099C +
mov [ebp+70h+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_50] eax +
mov [ebp+70h+var_4C] 0 +
mov dword ptr [eax] 0B6h +
mov dword ptr [eax+4] 0 +
shr ebx 1 +
lea ecx [ebp+70h+var_5C] +
mov byte ptr [ebp+70h+var_74] 4 +
lea eax [ebx-8] +
push eax  +
lea eax [ebp+70h+var_30] +
push eax  +
call sub_425CC0  +
push eax  +
lea ecx [ebp+70h+var_90] +
mov byte ptr [ebp+70h+var_74] 5 +
call sub_4330F0  +
mov eax [ebp+70h+var_24] +
mov edi eax +
mov edx [ebp+70h+var_28] +
mov ecx edx +
mov [ebp+70h+var_48] eax +
xor eax eax +
push [ebp+70h+var_48]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_4480D1  +
call sub_4746E8  +
jmp loc_4480D6  +
call sub_45B0EB  +
mov byte ptr [ebp+70h+var_74] 3 +
add esp 4 +
mov edx [ebp+70h+var_50] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_44810C  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_5C] offset off_49099C +
mov [ebp+70h+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_50] eax +
mov [ebp+70h+var_4C] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov edx ebx +
mov byte ptr [ebp+70h+var_74] 6 +
lea ecx [ebp+70h+var_18] +
call sub_433030  +
lea ecx [ebp+70h+var_5C] +
mov byte ptr [ebp+70h+var_74] 7 +
push ecx  +
mov edx eax +
lea ecx [ebp+70h+var_30] +
call sub_425FB0  +
add esp 4 +
push eax  +
lea ecx [ebp+70h+var_70] +
mov byte ptr [ebp+70h+var_74] 8 +
call sub_4330F0  +
mov edx [ebp+70h+var_28] +
xor eax eax +
mov ebx [ebp+70h+var_24] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_448197  +
call sub_4746E8  +
jmp loc_44819C  +
call sub_45B0EB  +
add esp 4 +
mov edx [ebp+70h+var_10] +
xor eax eax +
mov ebx [ebp+70h+var_C] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_448291  +
call sub_4746E8  +
jmp loc_448296  +
lea edx [ebx-1] +
shr edx 1 +
lea ecx [ebp+70h+var_18] +
call sub_433030  +
push eax  +
lea ecx [ebp+70h+var_90] +
mov byte ptr [ebp+70h+var_74] 9 +
call sub_4330F0  +
mov byte ptr [ebp+70h+var_74] 3 +
mov eax [ebp+70h+var_C] +
mov edi eax +
mov edx [ebp+70h+var_10] +
mov ecx edx +
mov [ebp+70h+var_48] eax +
xor eax eax +
push [ebp+70h+var_48]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_44820D  +
call sub_4746E8  +
jmp loc_448212  +
call sub_45B0EB  +
add esp 4 +
cmp dword_4A291C 0 +
jnz loc_44822D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+70h+var_5C] offset off_49099C +
mov [ebp+70h+var_54] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+70h+var_50] eax +
mov [ebp+70h+var_4C] 0 +
mov dword ptr [eax] 0B5h +
mov dword ptr [eax+4] 0 +
lea eax [ebx+1] +
mov byte ptr [ebp+70h+var_74] 0Ah +
shr eax 1 +
lea ecx [ebp+70h+var_5C] +
sub eax 8 +
push eax  +
lea eax [ebp+70h+var_18] +
push eax  +
call sub_425CC0  +
push eax  +
lea ecx [ebp+70h+var_70] +
mov byte ptr [ebp+70h+var_74] 0Bh +
call sub_4330F0  +
jmp loc_44819F  +
call sub_45B0EB  +
mov byte ptr [ebp+70h+var_74] 3 +
add esp 4 +
mov edx [ebp+70h+var_50] +
xor eax eax +
mov edi edx +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
mov [ebp+70h+var_48] 1 +
lea eax [ebp+70h+var_48] +
push ecx  +
push eax  +
lea ecx [ebp+70h+var_54] +
call sub_44A3F0  +
add esp 8 +
mov ecx eax +
mov byte ptr [ebp+70h+var_74] 0Ch +
movzx eax byte ptr [ecx+8] +
push eax  +
lea eax [ebp+70h+var_90] +
push eax  +
push offset aMin  +
call sub_438310  +
mov ecx eax +
movzx eax byte ptr [ecx+8] +
push eax  +
lea eax [ebp+70h+var_70] +
push eax  +
push offset aMax  +
call sub_438310  +
mov ecx eax +
mov dword ptr [esi] offset off_490AAC +
mov dword ptr [esi+4] 0 +
mov al [ecx+8] +
mov [esi+8] al +
mov edi [ecx+4] +
mov dword ptr [ecx+4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_448325  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+70h+var_50] +
mov [esi+4] edi +
test ecx ecx +
jz loc_448335  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov edx [ebp+70h+var_68] +
xor eax eax +
mov ebx [ebp+70h+var_64] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_448357  +
call sub_4746E8  +
jmp loc_44835C  +
call sub_45B0EB  +
mov edx [ebp+70h+var_88] +
xor eax eax +
mov ebx [ebp+70h+var_84] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_448381  +
call sub_4746E8  +
jmp loc_448386  +
call sub_45B0EB  +
add esp 4 +
mov eax esi +
mov ecx [ebp+70h+var_7C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+70h+var_4] +
xor ecx ebp +
call sub_44FE3E  +
lea esp [ebp+70h] +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47A909  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
push [ebp+arg_0]  +
call loc_432E00  +
push [ebp+arg_4]  +
lea ecx [edi+14h] +
mov [ebp+var_4] 0 +
call loc_432E00  +
push [ebp+arg_8]  +
lea ecx [edi+28h] +
mov byte ptr [ebp+var_4] 1 +
call loc_432E00  +
mov byte ptr [ebp+var_4] 2 +
lea esi [edi+44h] +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] esi +
mov dword ptr [edi+3Ch] 0 +
mov ecx esi +
mov dword ptr [edi+40h] 0 +
push eax  +
push 0  +
mov [ebp+arg_0] 0 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
call loc_421050  +
mov dword ptr [esi+0Ch] 0 +
mov ecx edi +
mov byte ptr [ebp+var_4] 3 +
call loc_448950  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_47A958  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov ebx [esi+44h] +
xor edx edx +
mov [ebp+var_2C] eax +
or edi 0FFFFFFFFh +
mov eax [esi+50h] +
movq [ebp+var_28] xmm0 +
mov byte ptr [ebp+var_1D] 0 +
mov dword ptr [ebp+var_28+4] ebx +
test eax eax +
jz loc_4484EE  +
mov edx eax +
test edx edx +
jns loc_4484E0  +
neg eax  +
jz loc_4484E0  +
mov ecx edi +
mov eax 0FFFFFFFCh +
sub ecx edx +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
add ebx eax +
jmp loc_4484E8  +
mov eax edx +
shr eax 5 +
lea ebx [ebx+eax*4] +
and edx 1Fh +
mov dword ptr [ebp+var_28+4] ebx +
mov ecx [esi+40h] +
mov ebx [esi+44h] +
mov [ebp+var_18] 0 +
test ecx ecx +
jns loc_448518  +
mov eax ecx +
neg eax  +
jz loc_448518  +
sub edi ecx +
mov eax 0FFFFFFFCh +
shr edi 5 +
shl edi 2 +
sub eax edi +
add ebx eax +
jmp loc_448520  +
mov eax ecx +
shr eax 5 +
lea ebx [ebx+eax*4] +
push edx  +
push dword ptr [ebp+var_28+4]  +
and ecx 1Fh +
lea edx [ebp+var_1D] +
push ecx  +
push ebx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_28] +
call sub_44A560  +
mov eax dword ptr [ebp+var_28] +
add esp 14h +
sub eax [esi+44h] +
sar eax 2 +
shl eax 5 +
add eax dword ptr [ebp+var_28+4] +
mov [esi+40h] eax +
mov eax [esi+50h] +
mov ecx [esi+40h] +
cmp ecx eax +
jnz loc_448634  +
push eax  +
lea ecx [ebp+var_40] +
call sub_432EF0  +
lea eax [esi+28h] +
mov [ebp+var_4] 0 +
push eax  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_54] +
call sub_425FE0  +
add esp 4 +
push eax  +
mov ecx esi +
mov byte ptr [ebp+var_4] 1 +
call sub_434D40  +
mov edx [ebp+var_4C] +
xor eax eax +
mov ebx [ebp+var_48] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4485AA  +
call sub_4746E8  +
jmp loc_4485AF  +
call sub_45B0EB  +
mov [ebp+var_4] 0FFFFFFFFh +
xor eax eax +
mov edx [ebp+var_38] +
add esp 4 +
mov ebx [ebp+var_34] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4485DB  +
call sub_4746E8  +
jmp loc_4485E0  +
call sub_45B0EB  +
add esp 4 +
lea eax [esi+14h] +
cmp dword ptr [esi+10h] 1 +
jz loc_4485FC  +
cmp dword ptr [eax+10h] 1 +
jz loc_448610  +
push eax  +
mov ecx esi +
call loc_435C80  +
jmp loc_44860C  +
cmp dword ptr [eax+10h] 1 +
jnz loc_448617  +
push eax  +
mov ecx esi +
call loc_435C80  +
neg eax  +
test eax eax +
jle loc_448617  +
xor al al +
jmp loc_4486F8  +
mov ecx esi +
mov dword ptr [esi+40h] 0 +
call loc_448950  +
push [ebp+var_2C]  +
mov ecx esi +
call sub_448470  +
jmp loc_4486F8  +
push ecx  +
lea ecx [ebp+var_40] +
call sub_432EF0  +
lea eax [esi+28h] +
mov [ebp+var_4] 2 +
push eax  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_7C] +
call sub_425FE0  +
add esp 4 +
push eax  +
mov edx esi +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_68] +
call sub_425F80  +
add esp 4 +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_2C] +
push eax  +
call sub_4330F0  +
mov edx [ebp+var_60] +
xor eax eax +
mov ebx [ebp+var_5C] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_448697  +
call sub_4746E8  +
jmp loc_44869C  +
call sub_45B0EB  +
mov edx [ebp+var_74] +
xor eax eax +
mov ebx [ebp+var_70] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4486C1  +
call sub_4746E8  +
jmp loc_4486C6  +
call sub_45B0EB  +
mov edx [ebp+var_38] +
xor eax eax +
mov ebx [ebp+var_34] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4486EB  +
call sub_4746E8  +
jmp loc_4486F0  +
call sub_45B0EB  +
add esp 4 +
mov al 1 +
inc dword ptr [esi+40h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47A9CB  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp-28h] eax +
mov ebx [ebp+0Ch] +
mov si [ebp+10h] +
mov ecx [ebp+8] +
mov [ebp-20h] ebx +
xor ebx ebx +
mov [ebp-14h] ecx +
mov [ebp-18h] ebx +
test si si +
jz loc_44892F  +
mov eax [eax+0Ch] +
movzx edi dx +
push edi  +
mov [ebp-24h] eax +
mov [ebp-1Ch] edi +
call loc_435B90  +
mov edx edi +
mov ecx [ebp-14h] +
sub edx eax +
movzx eax si +
imul eax edx +
xor edx edx +
div  edi +
mov eax [ecx+8] +
mov ecx [ecx+0Ch] +
mov esi edx +
test eax eax +
jz loc_4487AC  +
lea ecx [ecx+eax*4] +
add ecx 0FFFFFFFCh +
cmp [ecx] ebx +
jnz loc_4487AC  +
sub ecx 4 +
sub eax 1 +
jnz loc_4487A0  +
cmp eax 1 +
ja loc_448825  +
push edi  +
lea ecx [ebp-50h] +
call sub_432EF0  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-3Ch] +
push esi  +
mov dword ptr [ebp-18h] 1 +
call sub_432EF0  +
mov edx [ebp-20h] +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-4] 1 +
lea ecx [ebp-78h] +
push eax  +
mov dword ptr [ebp-18h] 3 +
call sub_425FE0  +
add esp 4 +
mov edx [ebp-14h] +
lea ecx [ebp-64h] +
mov dword ptr [ebp-4] 2 +
push eax  +
mov dword ptr [ebp-18h] 7 +
call sub_425F80  +
add esp 4 +
lea edx [ebp-50h] +
mov ecx eax +
mov ebx 0Fh +
call sub_425E40  +
mov byte ptr [ebp-0Dh] 1 +
test al al +
jnz loc_448829  +
mov byte ptr [ebp-0Dh] 0 +
test bl 8 +
jz loc_448860  +
mov eax [ebp-58h] +
and ebx 0FFFFFFF7h +
mov edx [ebp-5Ch] +
mov edi eax +
mov [ebp-14h] eax +
mov ecx edx +
push dword ptr [ebp-14h]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_448858  +
call sub_4746E8  +
jmp loc_44885D  +
call sub_45B0EB  +
add esp 4 +
test bl 4 +
jz loc_448897  +
mov eax [ebp-6Ch] +
and ebx 0FFFFFFFBh +
mov edx [ebp-70h] +
mov edi eax +
mov [ebp-14h] eax +
mov ecx edx +
push dword ptr [ebp-14h]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_44888F  +
call sub_4746E8  +
jmp loc_448894  +
call sub_45B0EB  +
add esp 4 +
test bl 2 +
jz loc_4488CA  +
mov edx [ebp-34h] +
xor eax eax +
mov edi [ebp-30h] +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
and ebx 0FFFFFFFDh +
cmp eax 10h +
mov eax [ebp-30h] +
push eax  +
jb loc_4488C2  +
call sub_4746E8  +
jmp loc_4488C7  +
call sub_45B0EB  +
add esp 4 +
test bl 1 +
jz loc_4488F9  +
mov edx [ebp-48h] +
xor eax eax +
mov ebx [ebp-44h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4488F1  +
call sub_4746E8  +
jmp loc_4488F6  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
mov edi [ebp-1Ch] +
jz loc_448904  +
add esi edi +
mov ebx [ebp-24h] +
cmp esi ebx +
jnb loc_44892F  +
mov eax [ebp-28h] +
mov ecx [eax] +
mov eax esi +
shr eax 5 +
lea edx [ecx+eax*4] +
mov ecx esi +
mov eax [edx] +
and ecx 1Fh +
bts eax ecx +
add esi edi +
mov [edx] eax +
cmp esi ebx +
jb loc_448910  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47AA3C  +
mov eax large fs:0 +
push eax  +
sub esp 94h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-10h] ebx +
call sub_44A2F0  +
mov ecx [eax] +
mov esi [eax+4] +
sub esi ecx +
mov [ebp-24h] ecx +
sar esi 1 +
cmp dword_4A291C 0 +
mov [ebp-20h] esi +
jnz loc_4489AC  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-38h] offset off_49099C +
mov dword ptr [ebp-30h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-28h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
push ebx  +
lea edx [ebx+14h] +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-88h] +
call sub_425FB0  +
add esp 4 +
add ebx 28h +
mov byte ptr [ebp-4] 1 +
push ebx  +
mov edx eax +
lea ecx [ebp-74h] +
call sub_426010  +
add esp 4 +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 2 +
push ecx  +
mov edx eax +
lea ecx [ebp-60h] +
call sub_425F80  +
add esp 4 +
mov edi eax +
mov byte ptr [ebp-4] 3 +
cmp dword_4A291C 0 +
jnz loc_448A46  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-4Ch] offset off_49099C +
mov dword ptr [ebp-44h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov edx eax +
mov dword ptr [ebp-3Ch] 0 +
mov [ebp-40h] edx +
mov dword ptr [edx] 8000h +
mov dword ptr [edx+4] 0 +
cmp dword ptr [edi+10h] 1 +
jz loc_448A97  +
lea eax [ebp-4Ch] +
mov ecx edi +
push eax  +
call loc_435C80  +
mov edx [ebp-40h] +
jmp loc_448A9A  +
or eax 0FFFFFFFFh +
test eax eax +
lea ecx [ebp-4Ch] +
cmovs ecx edi +
cmp dword ptr [ecx+10h] 0 +
mov eax [ecx+0Ch] +
mov eax [eax] +
mov [ebp-14h] eax +
jz loc_448AB5  +
neg eax  +
mov [ebp-14h] eax +
mov edi edx +
xor eax eax +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov eax [ebp-54h] +
add esp 4 +
mov edx [ebp-58h] +
mov edi eax +
mov [ebp-18h] eax +
mov ecx edx +
xor eax eax +
push dword ptr [ebp-18h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_448AF0  +
call sub_4746E8  +
jmp loc_448AF5  +
call sub_45B0EB  +
mov eax [ebp-68h] +
add esp 4 +
mov edx [ebp-6Ch] +
mov edi eax +
mov [ebp-18h] eax +
mov ecx edx +
xor eax eax +
push dword ptr [ebp-18h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_448B1F  +
call sub_4746E8  +
jmp loc_448B24  +
call sub_45B0EB  +
mov eax [ebp-7Ch] +
add esp 4 +
mov edx [ebp-80h] +
mov edi eax +
mov [ebp-18h] eax +
mov ecx edx +
xor eax eax +
push dword ptr [ebp-18h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_448B4E  +
call sub_4746E8  +
jmp loc_448B53  +
call sub_45B0EB  +
mov edx [ebp-2Ch] +
add esp 4 +
mov edi edx +
xor eax eax +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov edi [ebp-10h] +
add esp 4 +
add edi 44h +
mov dword ptr [ebp-4] 4 +
xorps xmm0 xmm0 +
mov eax [edi] +
xor edx edx +
movq qword ptr [ebp-1Ch] xmm0 +
mov ecx eax +
mov [ebp-18h] eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_448BC3  +
mov edx eax +
test edx edx +
jns loc_448BB8  +
neg eax  +
jz loc_448BB8  +
mov esi [ebp-20h] +
or ecx 0FFFFFFFFh +
sub ecx edx +
mov eax 0FFFFFFFCh +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
mov ecx [ebp-18h] +
add ecx eax +
jmp loc_448BC0  +
mov eax edx +
shr eax 5 +
lea ecx [ecx+eax*4] +
and edx 1Fh +
mov eax [edi] +
push edx  +
push ecx  +
push 0  +
push eax  +
lea eax [ebp-1Ch] +
mov ecx edi +
push eax  +
call sub_420B60  +
push ecx  +
push dword ptr [ebp-14h]  +
mov ecx edi +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_44A0D0  +
mov eax [ebp-10h] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_448C3D  +
xor esi esi +
cmp [ebp-20h] esi +
jbe loc_448DAB  +
mov eax [ebp-24h] +
mov ecx ebx +
movzx eax word ptr [eax+esi*2] +
push eax  +
call loc_4365C0  +
push eax  +
mov eax [ebp-24h] +
mov ecx edi +
push ebx  +
push dword ptr [ebp-10h]  +
mov dx [eax+esi*2] +
call loc_448720  +
inc esi  +
add esp 0Ch +
cmp esi [ebp-20h] +
jb loc_448C00  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
lea ecx [ebp-38h] +
call sub_432EF0  +
mov edx [ebp-10h] +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-9Ch] +
mov dword ptr [ebp-4] 5 +
call sub_425FB0  +
add esp 4 +
push 1  +
lea ecx [ebp-4Ch] +
mov byte ptr [ebp-4] 6 +
push ecx  +
mov ecx eax +
call sub_425C20  +
mov eax [ebp-90h] +
mov edi eax +
mov edx [ebp-94h] +
mov ecx edx +
mov [ebp-14h] eax +
xor eax eax +
push dword ptr [ebp-14h]  +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_448CA0  +
call sub_4746E8  +
jmp loc_448CA5  +
call sub_45B0EB  +
add esp 4 +
mov byte ptr [ebp-4] 9 +
xor eax eax +
mov edx [ebp-30h] +
mov ecx edx +
mov edi [ebp-2Ch] +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
mov eax [ebp-2Ch] +
push eax  +
jb loc_448CCF  +
call sub_4746E8  +
jmp loc_448CD4  +
call sub_45B0EB  +
add esp 4 +
lea eax [ebp-38h] +
mov ecx ebx +
push 1  +
push eax  +
call sub_425C20  +
xor eax eax +
mov byte ptr [ebp-4] 0Ah +
mov [ebp-14h] eax +
test esi esi +
jz loc_448D57  +
mov ecx [ebp-24h] +
movzx ebx word ptr [ecx+eax*2] +
mov ecx [ebp-10h] +
mov esi ebx +
push esi  +
lea ecx [ecx+28h] +
call loc_4365C0  +
movzx edi ax +
mov edx ebx +
mov eax [ebp-10h] +
add eax 28h +
push edi  +
push eax  +
mov eax [ebp-10h] +
push eax  +
lea ecx [eax+44h] +
call loc_448720  +
mov eax edi +
add esp 0Ch +
add eax eax +
cmp eax esi +
lea eax [edi+edi] +
jl loc_448D2F  +
sub eax ebx +
mov ecx [ebp-10h] +
mov edx ebx +
movzx eax ax +
push eax  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-4Ch] +
push eax  +
lea ecx [ecx+44h] +
call loc_448720  +
mov eax [ebp-14h] +
add esp 0Ch +
inc eax  +
mov [ebp-14h] eax +
cmp eax [ebp-20h] +
jb loc_448CF1  +
mov edx [ebp-30h] +
xor eax eax +
mov esi [ebp-2Ch] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_448D79  +
call sub_4746E8  +
jmp loc_448D7E  +
call sub_45B0EB  +
mov edx [ebp-44h] +
xor eax eax +
mov esi [ebp-40h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_448DA3  +
call sub_4746E8  +
jmp loc_448DA8  +
call sub_45B0EB  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47AB12  +
mov eax large fs:0 +
push eax  +
sub esp 0F0h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-1Ch] edx +
mov esi ecx +
mov [ebp-4Ch] esi +
push dword ptr [ebp+0Ch]  +
mov edx [ebp+8] +
lea ecx [ebp-60h] +
xor ebx ebx +
mov [ebp-14h] ebx +
call sub_438D70  +
add esp 4 +
mov [ebp-4] ebx +
call sub_437C60  +
mov edi [ebp-50h] +
cmp edi 1 +
jz loc_448E2E  +
cmp dword ptr [eax+10h] 1 +
jz loc_449487  +
push eax  +
lea ecx [ebp-60h] +
call loc_435C80  +
jmp loc_448E43  +
cmp dword ptr [eax+10h] 1 +
jnz loc_449487  +
push eax  +
lea ecx [ebp-60h] +
call loc_435C80  +
neg eax  +
test eax eax +
jnz loc_449487  +
call sub_44A2F0  +
mov ecx [eax] +
mov eax [eax+4] +
sub eax ecx +
mov [ebp-18h] ecx +
sar eax 1 +
lea eax [ecx+eax*2] +
mov [ebp-34h] eax +
lea ecx [ebp-30h] +
movzx eax word ptr [eax-2] +
push eax  +
call sub_432EF0  +
cmp dword ptr [esi+10h] 1 +
jz loc_448E8F  +
cmp dword ptr [ebp-20h] 1 +
jz loc_448E88  +
lea eax [ebp-30h] +
mov ecx esi +
push eax  +
call loc_435C80  +
jmp loc_448EA7  +
mov eax 1 +
jmp loc_448EA7  +
cmp dword ptr [ebp-20h] 1 +
jz loc_448E9A  +
or eax 0FFFFFFFFh +
jmp loc_448EA7  +
lea eax [ebp-30h] +
mov ecx esi +
push eax  +
call loc_435C80  +
neg eax  +
mov edx [ebp-28h] +
test eax eax +
mov edi [ebp-24h] +
mov ecx edx +
setle byte ptr [ebp-0Dh]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
mov eax [ebp-24h] +
push eax  +
jb loc_448ED0  +
call sub_4746E8  +
jmp loc_448ED5  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_44914D  +
mov ecx esi +
call loc_434810  +
mov edi [esi+10h] +
cmp edi 1 +
jz loc_448F23  +
mov ecx esi +
call loc_425B30  +
test al al +
jz loc_448F23  +
mov eax [esi+0Ch] +
mov eax [eax] +
test edi edi +
jz loc_448F07  +
neg eax  +
mov edx [ebp-34h] +
mov ecx [ebp-18h] +
mov [ebp-14h] eax +
lea eax [ebp-14h] +
push eax  +
call sub_44A4A0  +
mov edi eax +
add esp 4 +
mov [ebp-18h] edi +
jmp loc_448F26  +
mov edi [ebp-18h] +
mov esi [ebp+10h] +
cmp edi [ebp-34h] +
jnb loc_448FCD  +
movzx eax word ptr [edi] +
lea ecx [ebp-30h] +
push eax  +
call sub_432EF0  +
push dword ptr [ebp+0Ch]  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-30h] +
or ebx 1 +
lea ecx [ebp-74h] +
mov [ebp-14h] ebx +
call sub_426040  +
add esp 4 +
mov ecx [ebp+8] +
or ebx 2 +
mov dword ptr [ebp-4] 2 +
cmp dword ptr [eax+10h] 1 +
mov [ebp-14h] ebx +
jz loc_448F86  +
cmp dword ptr [ecx+10h] 1 +
jz loc_448FC7  +
push ecx  +
mov ecx eax +
call loc_435C80  +
jmp loc_448F96  +
cmp dword ptr [ecx+10h] 1 +
jnz loc_448FC7  +
push ecx  +
mov ecx eax +
call loc_435C80  +
neg eax  +
test eax eax +
jnz loc_448FC7  +
test esi esi +
jz loc_448FCD  +
movzx eax word ptr [edi] +
lea ecx [ebp-48h] +
push eax  +
call sub_432EF0  +
mov dword ptr [ebp-4] 3 +
lea ecx [ebp-48h] +
mov eax [esi] +
or ebx 4 +
push ecx  +
mov ecx esi +
mov [ebp-14h] ebx +
mov eax [eax] +
call eax  +
test al al +
jnz loc_448FCD  +
mov byte ptr [ebp-0Dh] 1 +
jmp loc_448FD1  +
mov byte ptr [ebp-0Dh] 0 +
test bl 4 +
jz loc_449008  +
mov eax [ebp-3Ch] +
and ebx 0FFFFFFFBh +
mov edx [ebp-40h] +
mov edi eax +
mov [ebp-14h] eax +
mov ecx edx +
push dword ptr [ebp-14h]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_449000  +
call sub_4746E8  +
jmp loc_449005  +
call sub_45B0EB  +
add esp 4 +
test bl 2 +
jz loc_44903F  +
mov eax [ebp-68h] +
and ebx 0FFFFFFFDh +
mov edx [ebp-6Ch] +
mov edi eax +
mov [ebp-14h] eax +
mov ecx edx +
push dword ptr [ebp-14h]  +
xor eax eax +
stos   +
lea eax ds:0[edx*4] +
cmp eax 10h +
jb loc_449037  +
call sub_4746E8  +
jmp loc_44903C  +
call sub_45B0EB  +
add esp 4 +
mov dword ptr [ebp-4] 0 +
test bl 1 +
jz loc_449079  +
mov edx [ebp-28h] +
xor eax eax +
mov edi [ebp-24h] +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
and ebx 0FFFFFFFEh +
cmp eax 10h +
mov eax [ebp-24h] +
push eax  +
jb loc_449071  +
call sub_4746E8  +
jmp loc_449076  +
call sub_45B0EB  +
add esp 4 +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_44908D  +
mov edi [ebp-18h] +
add edi 2 +
mov [ebp-18h] edi +
jmp loc_448F30  +
***
mov eax [ebp-18h] +
mov ecx [ebp-34h] +
mov esi [ebp-4Ch] +
cmp eax ecx +
jnb loc_449102  +
movzx eax word ptr [eax] +
lea ecx [ebp-48h] +
push eax  +
call sub_432EF0  +
lea eax [ebp-48h] +
mov byte ptr [ebp-4] 4 +
push eax  +
mov ecx esi +
call sub_4330F0  +
mov edx [ebp-40h] +
xor eax eax +
mov ebx [ebp-3Ch] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4490E9  +
call sub_4746E8  +
mov edx [ebp-1Ch] +
add esp 4 +
mov ecx esi +
call sub_4461D0  +
mov bl al +
jmp loc_4494F6  +
call sub_45B0EB  +
mov edx [ebp-1Ch] +
add esp 4 +
mov ecx esi +
call sub_4461D0  +
mov bl al +
jmp loc_4494F6  +
movzx eax word ptr [ecx-2] +
lea ecx [ebp-48h] +
inc eax  +
push eax  +
call sub_432EF0  +
lea eax [ebp-48h] +
mov byte ptr [ebp-4] 5 +
push eax  +
mov ecx esi +
call sub_4330F0  +
mov byte ptr [ebp-4] 0 +
xor eax eax +
mov edx [ebp-40h] +
mov ecx edx +
mov ebx [ebp-3Ch] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449145  +
call sub_4746E8  +
jmp loc_44914A  +
call sub_45B0EB  +
add esp 4 +
mov ebx [ebp+0Ch] +
cmp dword ptr [ebx+8] 0 +
jbe loc_449367  +
mov eax [ebx+0Ch] +
mov al [eax] +
and al 1 +
jz loc_449367  +
cmp dword_4A291C 0 +
jnz loc_44917F  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-48h] offset off_49099C +
mov dword ptr [ebp-40h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-3Ch] eax +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
mov byte ptr [ebp-4] 6 +
cmp dword_4A291C 0 +
jnz loc_4491D4  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-30h] offset off_49099C +
mov dword ptr [ebp-28h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-24h] eax +
mov dword ptr [ebp-20h] 0 +
mov dword ptr [eax] 2 +
mov dword ptr [eax+4] 0 +
mov byte ptr [ebp-4] 7 +
cmp dword_4A291C 0 +
jnz loc_449229  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-74h] offset off_49099C +
mov dword ptr [ebp-6Ch] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp-68h] eax +
mov dword ptr [ebp-64h] 0 +
mov dword ptr [eax] 1 +
mov dword ptr [eax+4] 0 +
push 1  +
lea eax [ebp-9Ch] +
mov byte ptr [ebp-4] 8 +
push eax  +
mov ecx ebx +
call sub_425CC0  +
mov esi eax +
mov edx [ebp+8] +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp-30h] +
mov byte ptr [ebp-4] 9 +
push eax  +
lea eax [ebp-74h] +
push eax  +
push ebx  +
lea ecx [ebp-88h] +
call sub_449600  +
push dword ptr [ebp+10h]  +
mov edx [ebp-1Ch] +
mov ecx [ebp-4Ch] +
push esi  +
push eax  +
mov byte ptr [ebp-4] 0Ah +
call loc_448DC0  +
mov edx [ebp-80h] +
mov bl al +
mov esi [ebp-7Ch] +
xor eax eax +
add esp 1Ch +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4492D2  +
call sub_4746E8  +
jmp loc_4492D7  +
call sub_45B0EB  +
mov edx [ebp-94h] +
xor eax eax +
mov esi [ebp-90h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449302  +
call sub_4746E8  +
jmp loc_449307  +
call sub_45B0EB  +
mov edx [ebp-68h] +
add esp 4 +
mov edi edx +
xor eax eax +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
mov edx [ebp-28h] +
xor eax eax +
mov esi [ebp-24h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449343  +
call sub_4746E8  +
jmp loc_449348  +
call sub_45B0EB  +
mov edx [ebp-3Ch] +
add esp 4 +
mov edi edx +
xor eax eax +
mov ecx 2 +
stos   +
push edx  +
call sub_45B0EB  +
add esp 4 +
jmp loc_4494F6  +
mov edx [ebp+8] +
lea ecx [ebp-88h] +
push esi  +
call sub_425FB0  +
add esp 4 +
push ebx  +
mov edx eax +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-9Ch] +
call sub_426040  +
add esp 4 +
push eax  +
mov ecx esi +
mov byte ptr [ebp-4] 0Ch +
call sub_434D40  +
mov edx [ebp-94h] +
xor eax eax +
mov ebx [ebp-90h] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4493C2  +
call sub_4746E8  +
jmp loc_4493C7  +
call sub_45B0EB  +
mov byte ptr [ebp-4] 0 +
xor eax eax +
mov edx [ebp-80h] +
add esp 4 +
mov ebx [ebp-7Ch] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4493F0  +
call sub_4746E8  +
jmp loc_4493F5  +
call sub_45B0EB  +
mov edi [ebp-1Ch] +
add esp 4 +
mov edx edi +
mov ecx esi +
call sub_425E90  +
test al al +
jnz loc_4494F4  +
push ecx  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0F8h] +
push edi  +
push esi  +
call sub_4483B0  +
push esi  +
lea ecx [ebp-0F8h] +
mov byte ptr [ebp-4] 0Dh +
call sub_448470  +
test al al +
jz loc_449469  +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_449443  +
mov eax [ecx] +
push esi  +
mov eax [eax] +
call eax  +
test al al +
jz loc_449459  +
mov ecx esi +
call sub_447DF0  +
test al al +
jz loc_449459  +
mov ecx esi +
call sub_447BA0  +
test al al +
jnz loc_449478  +
push esi  +
lea ecx [ebp-0F8h] +
call sub_448470  +
test al al +
jnz loc_449431  +
lea ecx [ebp-0F8h] +
xor bl bl +
call sub_449540  +
jmp loc_4494F6  +
lea ecx [ebp-0F8h] +
mov bl 1 +
call sub_449540  +
jmp loc_4494F6  +
cmp dword ptr [esi+10h] 1 +
jz loc_44949F  +
cmp edi 1 +
jz loc_4494F4  +
lea eax [ebp-60h] +
mov ecx esi +
push eax  +
call loc_435C80  +
jmp loc_4494B1  +
cmp edi 1 +
jnz loc_4494B5  +
lea eax [ebp-60h] +
mov ecx esi +
push eax  +
call loc_435C80  +
neg eax  +
test eax eax +
jg loc_4494F4  +
mov edx [ebp-1Ch] +
lea ecx [ebp-60h] +
call sub_4461D0  +
test al al +
jz loc_4494F4  +
lea ecx [ebp-60h] +
call sub_447BA0  +
test al al +
jz loc_4494F4  +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_4494E5  +
mov eax [ecx] +
lea edx [ebp-60h] +
push edx  +
mov eax [eax] +
call eax  +
test al al +
jz loc_4494F4  +
lea eax [ebp-60h] +
mov ecx esi +
push eax  +
call sub_4330F0  +
mov bl 1 +
jmp loc_4494F6  +
xor bl bl +
mov edx [ebp-58h] +
xor eax eax +
mov esi [ebp-54h] +
mov ecx edx +
mov edi esi +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_449518  +
call sub_4746E8  +
jmp loc_44951D  +
call sub_45B0EB  +
mov al bl +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [esi+44h] +
test ecx ecx +
jz loc_44956E  +
mov eax [esi+4Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_40FC30  +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 0 +
mov edx [esi+30h] +
xor eax eax +
push ebx  +
mov ebx [esi+34h] +
mov ecx edx +
push edi  +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449592  +
call sub_4746E8  +
jmp loc_449597  +
call sub_45B0EB  +
mov edx [esi+1Ch] +
xor eax eax +
mov ebx [esi+20h] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4495BC  +
call sub_4746E8  +
jmp loc_4495C1  +
call sub_45B0EB  +
mov edx [esi+8] +
add esp 4 +
mov esi [esi+0Ch] +
xor eax eax +
mov edi esi +
mov ecx edx +
stos   +
pop edi  +
lea eax ds:0[edx*4] +
pop ebx  +
push esi  +
cmp eax 10h +
jb loc_4495EB  +
call sub_4746E8  +
add esp 4 +
pop esi  +
retn   +
call sub_45B0EB  +
add esp 4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47AB50  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov ebx ecx +
mov [ebp+var_10] ebx +
mov edx [ebp+arg_4] +
lea ecx [ebp+var_64] +
push esi  +
mov [ebp+var_14] 0 +
call sub_425FB0  +
add esp 4 +
mov edx [ebp+arg_C] +
lea ecx [ebp+var_50] +
push eax  +
mov [ebp+var_4] 0 +
call sub_425FE0  +
add esp 4 +
push [ebp+arg_8]  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_3C] +
call sub_426040  +
add esp 4 +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_28] +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_425FE0  +
add esp 4 +
push esi  +
mov edx eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx ebx +
call sub_425F80  +
mov edx [ebp+var_20] +
xor eax eax +
mov esi [ebp+var_1C] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4496B5  +
call sub_4746E8  +
jmp loc_4496BA  +
call sub_45B0EB  +
mov edx [ebp+var_34] +
xor eax eax +
mov esi [ebp+var_30] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_4496DF  +
call sub_4746E8  +
jmp loc_4496E4  +
call sub_45B0EB  +
mov edx [ebp+var_48] +
xor eax eax +
mov esi [ebp+var_44] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449709  +
call sub_4746E8  +
jmp loc_44970E  +
call sub_45B0EB  +
mov edx [ebp+var_5C] +
xor eax eax +
mov esi [ebp+var_58] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449733  +
call sub_4746E8  +
jmp loc_449738  +
call sub_45B0EB  +
mov eax ebx +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_47ABA0  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp+var_10] ebx +
mov esi ecx +
mov [ebp+var_14] esi +
cmp dword_4A291C 0 +
mov [ebp+var_18] 0 +
jnz loc_4497A1  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_40] offset off_49099C +
mov [ebp+var_38] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_34] eax +
mov [ebp+var_30] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 0 +
cmp dword_4A291C 0 +
jnz loc_4497F9  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov [ebp+var_2C] offset off_49099C +
mov [ebp+var_24] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
mov [ebp+var_20] eax +
mov [ebp+var_1C] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov edi [ebp+arg_8] +
lea ecx [ebp+var_68] +
push edi  +
mov edx ebx +
mov byte ptr [ebp+var_4] 1 +
call sub_426040  +
push edi  +
push [ebp+arg_0]  +
mov edx eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_54] +
call sub_446220  +
add esp 0Ch +
push eax  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 3 +
call sub_4330F0  +
mov edx [ebp+var_4C] +
xor eax eax +
mov ebx [ebp+var_48] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449888  +
call sub_4746E8  +
jmp loc_44988D  +
call sub_45B0EB  +
mov byte ptr [ebp+var_4] 1 +
xor eax eax +
mov edx [ebp+var_60] +
add esp 4 +
mov ebx [ebp+var_5C] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4498B6  +
call sub_4746E8  +
jmp loc_4498BB  +
call sub_45B0EB  +
mov ebx [ebp+arg_C] +
lea ecx [ebp+var_54] +
mov edx [ebp+var_10] +
add esp 4 +
push ebx  +
call sub_426040  +
push ebx  +
push [ebp+arg_4]  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_68] +
call sub_446220  +
add esp 0Ch +
push eax  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 5 +
call sub_4330F0  +
mov edx [ebp+var_60] +
xor eax eax +
mov ebx [ebp+var_5C] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449911  +
call sub_4746E8  +
jmp loc_449916  +
call sub_45B0EB  +
mov byte ptr [ebp+var_4] 1 +
xor eax eax +
mov edx [ebp+var_4C] +
add esp 4 +
mov ebx [ebp+var_48] +
mov ecx edx +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_44993F  +
call sub_4746E8  +
jmp loc_449944  +
call sub_45B0EB  +
add esp 4 +
lea eax [ebp+var_2C] +
lea edx [ebp+var_40] +
mov ecx esi +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_8]  +
call sub_449600  +
mov edx [ebp+var_24] +
xor eax eax +
mov ebx [ebp+var_20] +
add esp 10h +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449983  +
call sub_4746E8  +
jmp loc_449988  +
call sub_45B0EB  +
mov edx [ebp+var_38] +
xor eax eax +
mov ebx [ebp+var_34] +
add esp 4 +
mov edi ebx +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_4499AD  +
call sub_4746E8  +
jmp loc_4499B2  +
call sub_45B0EB  +
mov eax esi +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47ABD8  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push esi  +
lea ecx [ebp-3Ch] +
call loc_432E00  +
push esi  +
mov edx edi +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-28h] +
call sub_426040  +
add esp 4 +
mov byte ptr [ebp-4] 1 +
mov esi 1 +
cmp dword ptr [ebp-18h] 1 +
mov edx [ebp-20h] +
mov edi [ebp-1Ch] +
jz loc_449AC9  +
cmp dword ptr [edi] 0 +
jnz loc_449AC9  +
mov eax edx +
test edx edx +
jz loc_449A55  +
lea ecx [edx-1] +
lea ecx [edi+ecx*4] +
cmp dword ptr [ecx] 0 +
jnz loc_449AC5  +
sub ecx 4 +
sub eax 1 +
jnz loc_449A48  +
cmp dword_4A291C 0 +
jnz loc_449A6D  +
call sub_431640  +
mov dword_4A291C offset sub_426D90 +
mov ecx 2 +
mov dword ptr [ebp-50h] offset off_49099C +
mov dword ptr [ebp-48h] 2 +
call sub_437B10  +
mov ecx 8 +
call loc_43F720  +
cmp dword ptr [ebp-2Ch] 1 +
mov ebx eax +
mov [ebp-44h] ebx +
mov dword ptr [ebp-40h] 0 +
mov dword ptr [ebx] 1 +
mov dword ptr [ebx+4] 0 +
jz loc_449BB2  +
lea eax [ebp-50h] +
push eax  +
lea ecx [ebp-3Ch] +
call loc_435C80  +
mov ecx eax +
jmp loc_449BB5  +
test eax eax +
jz loc_449A55  +
xor ebx ebx +
mov eax ebx +
shr eax 5 +
cmp eax edx +
jnb loc_449AE7  +
mov eax [edi+eax*4] +
mov ecx ebx +
and ecx 1Fh +
shr eax cl +
and al 1 +
jnz loc_449AEA  +
inc ebx  +
jmp loc_449AD0  +
***
push ebx  +
lea ecx [ebp-28h] +
call loc_4350B0  +
test bl 1 +
jz loc_449B18  +
push 8  +
lea ecx [ebp-3Ch] +
call loc_435B90  +
cmp eax 3 +
jz loc_449B16  +
push 8  +
lea ecx [ebp-3Ch] +
call loc_435B90  +
cmp eax 5 +
jnz loc_449B18  +
neg esi  +
push 4  +
lea ecx [ebp-28h] +
call loc_435B90  +
cmp eax 3 +
jnz loc_449B38  +
push 4  +
lea ecx [ebp-3Ch] +
call loc_435B90  +
cmp eax 3 +
jnz loc_449B38  +
neg esi  +
mov ecx [ebp-20h] +
mov eax [ebp-34h] +
mov [ebp-20h] eax +
mov eax [ebp-30h] +
mov [ebp-34h] ecx +
mov ecx [ebp-1Ch] +
mov [ebp-1Ch] eax +
mov eax [ebp-2Ch] +
mov [ebp-30h] ecx +
mov ecx [ebp-18h] +
mov [ebp-18h] eax +
lea eax [ebp-3Ch] +
push eax  +
lea eax [ebp-50h] +
mov [ebp-2Ch] ecx +
push eax  +
lea ecx [ebp-28h] +
call sub_435A40  +
push eax  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 2 +
call sub_4330F0  +
mov byte ptr [ebp-4] 1 +
xor eax eax +
mov edx [ebp-48h] +
mov ecx edx +
mov ebx [ebp-44h] +
mov edi ebx +
stos   +
lea eax ds:0[edx*4] +
push ebx  +
cmp eax 10h +
jb loc_449BA5  +
call sub_4746E8  +
add esp 4 +
jmp loc_449A23  +
***
call sub_45B0EB  +
add esp 4 +
jmp loc_449A23  +
***
or ecx 0FFFFFFFFh +
xor eax eax +
mov edi ebx +
test ecx ecx +
mov ecx 2 +
push ebx  +
cmovz eax esi +
mov [ebp-14h] eax +
xor eax eax +
stos   +
call sub_45B0EB  +
mov edx [ebp-20h] +
xor eax eax +
mov esi [ebp-1Ch] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449BF5  +
call sub_4746E8  +
jmp loc_449BFA  +
call sub_45B0EB  +
mov esi [ebp-30h] +
xor eax eax +
mov edx [ebp-34h] +
mov edi esi +
mov ecx edx +
add esp 4 +
stos   +
lea ecx ds:0[edx*4] +
push esi  +
cmp ecx 10h +
jb loc_449C1F  +
call sub_4746E8  +
jmp loc_449C24  +
call sub_45B0EB  +
mov eax [ebp-14h] +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47AC36  +
mov eax large fs:0 +
push eax  +
sub esp 0D4h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-48h] edx +
mov edi ecx +
mov [ebp-4Ch] edi +
mov esi [edx+8] +
mov edx [edx+0Ch] +
mov dword ptr [ebp-0E0h] 0 +
test esi esi +
jz loc_449C9D  +
lea eax [esi-1] +
lea eax [edx+eax*4] +
cmp dword ptr [eax] 0 +
jnz loc_449CBE  +
sub eax 4 +
sub esi 1 +
jnz loc_449C90  +
call sub_437CE0  +
push eax  +
mov ecx edi +
call loc_432E00  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
jz loc_449C9D  +
lea ecx [edx-4] +
lea ecx [ecx+esi*4] +
call sub_422BB0  +
lea ecx [esi-1] +
mov ebx eax +
shl ecx 5 +
add ebx ecx +
jz loc_449C9D  +
mov esi [ebp+0Ch] +
lea ecx [ebp-0C8h] +
push esi  +
call loc_436DB0  +
mov edx [ebp+8] +
lea ecx [ebp-30h] +
push esi  +
mov dword ptr [ebp-4] 0 +
call sub_426040  +
add esp 4 +
push eax  +
lea eax [ebp-60h] +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-0C8h] +
call sub_426740  +
mov byte ptr [ebp-4] 3 +
xor eax eax +
mov edx [ebp-28h] +
mov ecx edx +
mov esi [ebp-24h] +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_449D38  +
call sub_4746E8  +
jmp loc_449D3D  +
call sub_45B0EB  +
add esp 4 +
call sub_437CE0  +
push eax  +
lea eax [ebp-0DCh] +
push eax  +
lea ecx [ebp-0C8h] +
call sub_426740  +
lea eax [ebp-60h] +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-44h] +
call loc_432E00  +
lea eax [ebp-0DCh] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea eax [ebp-60h] +
push eax  +
lea ecx [ebp-0C8h] +
call sub_436F90  +
push eax  +
lea ecx [ebp-0C8h] +
call sub_436810  +
push eax  +
lea ecx [ebp-30h] +
call loc_432E00  +
mov byte ptr [ebp-4] 6 +
sub ebx 1 +
jz loc_449FCE  +
mov eax [ebp-48h] +
dec ebx  +
mov edx ebx +
shr edx 5 +
cmp edx [eax+8] +
jnb loc_449EC8  +
mov eax [eax+0Ch] +
mov ecx ebx +
and ecx 1Fh +
mov eax [eax+edx*4] +
shr eax cl +
and al 1 +
jz loc_449EC8  +
mov esi [ebp-28h] +
mov eax [ebp-9Ch] +
mov edi [ebp-64h] +
mov ecx edi +
push esi  +
push dword ptr [ebp-24h]  +
mov [ebp-18h] eax +
mov eax [ebp-0B4h] +
push dword ptr [ebp-3Ch]  +
mov [ebp-14h] edi +
push dword ptr [ebp-38h]  +
lea edx [edi+eax*8] +
mov [ebp-10h] eax +
call loc_431E60  +
mov edx [ebp-10h] +
add esp 10h +
mov eax [ebp-3Ch] +
lea ecx [edx+edx] +
sub ecx eax +
sub ecx esi +
jz loc_449E18  +
add eax esi +
lea edi [edi+eax*4] +
xor eax eax +
stos   +
mov edi [ebp-14h] +
mov ecx [ebp-18h] +
push edx  +
push dword ptr [ebp-74h]  +
lea edx [edi+edx*8] +
push dword ptr [ebp-0B0h]  +
push edi  +
call sub_4322E0  +
add esp 10h +
lea eax [ebp-60h] +
lea ecx [ebp-0C8h] +
push eax  +
lea eax [ebp-0A8h] +
push eax  +
call sub_436810  +
push eax  +
lea ecx [ebp-44h] +
call sub_4330F0  +
mov eax [ebp-9Ch] +
mov edi [ebp-64h] +
mov ecx edi +
mov [ebp-10h] eax +
mov eax [ebp-0B4h] +
push esi  +
push dword ptr [ebp-24h]  +
mov [ebp-14h] edi +
lea edx [edi+eax*8] +
mov [ebp-18h] eax +
call sub_431A20  +
mov edx [ebp-18h] +
add esp 8 +
mov ecx edx +
sub ecx esi +
add ecx ecx +
jz loc_449E8E  +
lea edi [edi+esi*8] +
xor eax eax +
stos   +
mov edi [ebp-14h] +
mov ecx [ebp-10h] +
push edx  +
push dword ptr [ebp-74h]  +
lea edx [edi+edx*8] +
push dword ptr [ebp-0B0h]  +
push edi  +
call sub_4322E0  +
add esp 10h +
lea eax [ebp-0DCh] +
lea ecx [ebp-0C8h] +
push eax  +
lea eax [ebp-0A8h] +
push eax  +
call sub_436810  +
lea ecx [ebp-30h] +
jmp loc_449FC0  +
push dword ptr [ebp-28h]  +
mov eax [ebp-9Ch] +
mov edi [ebp-64h] +
mov ecx edi +
push dword ptr [ebp-24h]  +
mov esi [ebp-3Ch] +
mov [ebp-10h] eax +
mov eax [ebp-0B4h] +
push esi  +
push dword ptr [ebp-38h]  +
mov [ebp-14h] edi +
lea edx [edi+eax*8] +
mov [ebp-18h] eax +
call loc_431E60  +
mov edx [ebp-18h] +
add esp 10h +
mov eax [ebp-28h] +
lea ecx [edx+edx] +
sub ecx esi +
sub ecx eax +
jz loc_449F15  +
add eax esi +
lea edi [edi+eax*4] +
xor eax eax +
stos   +
mov edi [ebp-14h] +
mov ecx [ebp-10h] +
push edx  +
push dword ptr [ebp-74h]  +
lea edx [edi+edx*8] +
push dword ptr [ebp-0B0h]  +
push edi  +
call sub_4322E0  +
add esp 10h +
lea eax [ebp-60h] +
lea ecx [ebp-0C8h] +
push eax  +
lea eax [ebp-0A8h] +
push eax  +
call sub_436810  +
push eax  +
lea ecx [ebp-30h] +
call sub_4330F0  +
mov eax [ebp-9Ch] +
mov edi [ebp-64h] +
mov ecx edi +
mov [ebp-10h] eax +
mov eax [ebp-0B4h] +
push esi  +
push dword ptr [ebp-38h]  +
mov [ebp-14h] edi +
lea edx [edi+eax*8] +
mov [ebp-18h] eax +
call sub_431A20  +
mov edx [ebp-18h] +
add esp 8 +
mov ecx edx +
sub ecx esi +
add ecx ecx +
jz loc_449F8B  +
lea edi [edi+esi*8] +
xor eax eax +
stos   +
mov edi [ebp-14h] +
mov ecx [ebp-10h] +
push edx  +
push dword ptr [ebp-74h]  +
lea edx [edi+edx*8] +
push dword ptr [ebp-0B0h]  +
push edi  +
call sub_4322E0  +
add esp 10h +
lea eax [ebp-0DCh] +
lea ecx [ebp-0C8h] +
push eax  +
lea eax [ebp-0A8h] +
push eax  +
call sub_436810  +
lea ecx [ebp-44h] +
push eax  +
call sub_4330F0  +
test ebx ebx +
jnz loc_449DA4  +
mov ebx [ebp-4Ch] +
lea eax [ebp-44h] +
push eax  +
push ebx  +
lea ecx [ebp-0C8h] +
call sub_437010  +
mov edx [ebp-28h] +
xor eax eax +
mov esi [ebp-24h] +
mov ecx edx +
mov edi esi +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44A003  +
call sub_4746E8  +
jmp loc_44A008  +
call sub_45B0EB  +
mov edx [ebp-3Ch] +
xor eax eax +
mov esi [ebp-38h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44A02D  +
call sub_4746E8  +
jmp loc_44A032  +
call sub_45B0EB  +
mov edx [ebp-0D4h] +
xor eax eax +
mov esi [ebp-0D0h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44A05D  +
call sub_4746E8  +
jmp loc_44A062  +
call sub_45B0EB  +
mov edx [ebp-58h] +
xor eax eax +
mov esi [ebp-54h] +
add esp 4 +
mov edi esi +
mov ecx edx +
stos   +
lea eax ds:0[edx*4] +
push esi  +
cmp eax 10h +
jb loc_44A0A7  +
call sub_4746E8  +
add esp 4 +
lea ecx [ebp-0C8h] +
call sub_4269D0  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_45B0EB  +
add esp 4 +
lea ecx [ebp-0C8h] +
call sub_4269D0  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 24h +
push ebx  +
mov ebx [esp+28h+arg_0] +
push ebp  +
mov ebp ecx +
mov byte ptr [esp+2Ch+var_20] 0 +
push esi  +
push edi  +
mov esi [ebp+0Ch] +
cmp ebx esi +
jbe loc_44A148  +
mov edi [ebp+0] +
xorps xmm0 xmm0 +
xor edx edx +
movq [esp+34h+var_1C] xmm0 +
test esi esi +
jz loc_44A128  +
mov edx esi +
test edx edx +
jns loc_44A11D  +
mov eax edx +
neg eax  +
jz loc_44A11D  +
or ecx 0FFFFFFFFh +
mov eax 0FFFFFFFCh +
sub ecx edx +
shr ecx 5 +
shl ecx 2 +
sub eax ecx +
add edi eax +
jmp loc_44A125  +
mov eax edx +
shr eax 5 +
lea edi [edi+eax*4] +
and edx 1Fh +
push edx  +
push edi  +
lea eax [esp+3Ch+var_20] +
sub ebx esi +
push eax  +
push ebx  +
lea eax [esp+44h+var_1C] +
mov ecx ebp +
push eax  +
call sub_420A50  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 24h +
retn 8  +
jnb loc_44A18A  +
lea eax [esp+34h+var_14] +
push eax  +
call sub_420CA0  +
push ebx  +
lea ecx [esp+38h+var_1C] +
mov dword ptr [esp+38h+var_1C+4] 0 +
mov edi [eax] +
mov esi [eax+4] +
mov eax [ebp+0] +
mov dword ptr [esp+38h+var_1C] eax +
lea eax [esp+38h+var_C] +
push eax  +
call sub_420D10  +
push esi  +
push edi  +
mov ecx ebp +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
lea eax [esp+44h+var_1C] +
push eax  +
call sub_420B60  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 24h +
retn 8  +
***
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_44A1DC  +
mov ecx [esi] +
test ecx ecx +
jz loc_44A1D1  +
mov eax [esi+8] +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_4024A0  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
pop esi  +
retn   +
***
mov ecx [esi] +
test ecx ecx +
jz loc_44A20D  +
mov eax [esi+8] +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_4024A0  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov eax esi +
pop esi  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 1 +
cmp eax 1 +
jnb loc_44A26F  +
mov ecx [esi] +
sub edx ecx +
push ebx  +
mov ebx 7FFFFFFFh +
sar edx 1 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_44A274  +
sub edi ecx +
inc edx  +
sar edi 1 +
mov eax edi +
shr eax 1 +
push ebp  +
sub ebx eax +
xor ebp ebp +
cmp ebx edi +
lea ecx [eax+edi] +
cmovb ecx ebp +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_44A280  +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_44EC5C  +
mov ebp [esp+arg_0] +
push esi  +
push edi  +
push ebp  +
mov edi ecx +
call loc_402D80  +
mov esi [edi] +
mov ebx eax +
mov edx [edi+4] +
sub edx esi +
and edx 0FFFFFFFEh +
push edx  +
push esi  +
push ebx  +
call loc_450F90  +
mov ecx [edi] +
add esp 0Ch +
mov esi [edi+4] +
sub esi ecx +
sar esi 1 +
test ecx ecx +
jz loc_44A2C4  +
mov eax [edi+8] +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx edi +
call loc_4024A0  +
lea eax [ebx+ebp*2] +
mov [edi+8] eax +
lea eax [ebx+esi*2] +
mov [edi+4] eax +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4A3AF0 +
cmp eax [ecx+4] +
jle loc_44A33C  +
push offset dword_4A3AF0  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AF0 0FFFFFFFFh +
jnz loc_44A33C  +
push offset loc_47B000  +
mov dword_4A3AF4 0 +
call sub_450116  +
push offset dword_4A3AF0  +
call sub_450220  +
add esp 8 +
mov eax dword_4A3AF4 +
test eax eax +
jnz locret_44A36B  +
push esi  +
call sub_446250  +
mov esi dword_4A3AF4 +
test esi esi +
jz loc_44A365  +
test eax eax +
jz loc_44A361  +
push ecx  +
mov ecx eax +
call sub_44A1E0  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3AF4 eax +
pop esi  +
retn   +
***
mov eax large fs:2Ch +
push esi  +
mov ecx [eax] +
mov eax dword_4A3AF8 +
cmp eax [ecx+4] +
jle loc_44A3C0  +
push offset dword_4A3AF8  +
call sub_45025F  +
add esp 4 +
cmp dword_4A3AF8 0FFFFFFFFh +
jnz loc_44A3C0  +
push offset loc_47AFE0  +
mov dword_4A3AFC 0 +
call sub_450116  +
add esp 4 +
push offset dword_4A3AF8  +
call sub_450220  +
add esp 4 +
mov eax dword_4A3AFC +
test eax eax +
jnz loc_44A3ED  +
call sub_447AC0  +
mov esi dword_4A3AFC +
test esi esi +
jz loc_44A3E8  +
test eax eax +
jz loc_44A3E4  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
pop esi  +
retn   +
mov dword_4A3AFC eax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_476F98  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_20] offset off_490AAC +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 1 +
push ecx  +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
push ecx  +
lea ecx [ebp+var_20] +
call sub_4383D0  +
mov dword ptr [esi] offset off_490AAC +
mov dword ptr [esi+4] 0 +
mov cl [eax+8] +
mov [esi+8] cl +
mov edi [eax+4] +
mov dword ptr [eax+4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_44A473  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_1C] +
mov [esi+4] edi +
test ecx ecx +
jz loc_44A483  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi edx +
mov edi ecx +
sub esi edi +
sar esi 1 +
test esi esi +
jle loc_44A4DC  +
mov eax [esp+arg_0] +
push ebx  +
mov ebx [eax] +
mov eax esi +
cdq   +
sub eax edx +
mov ecx eax +
sar ecx 1 +
movzx eax word ptr [edi+ecx*2] +
lea edx [edi+ecx*2] +
cmp ebx eax +
jb loc_44A4D5  +
or eax 0FFFFFFFFh +
lea edi [edx+2] +
sub eax ecx +
add esi eax +
jmp loc_44A4D7  +
mov esi ecx +
test esi esi +
jg loc_44A4B5  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov ebx [esp+8+arg_0] +
mov eax edx +
push esi  +
push edi  +
mov edi ecx +
mov [esp+10h+var_4] eax +
mov esi eax +
sub esi edi +
sar esi 1 +
test esi esi +
jle loc_44A539  +
push ebp  +
movzx ebp word ptr [ebx] +
nop   +
mov eax esi +
cdq   +
sub eax edx +
mov ecx eax +
sar ecx 1 +
cmp [edi+ecx*2] bp +
lea eax [edi+ecx*2] +
jnb loc_44A52E  +
lea edi [eax+2] +
or eax 0FFFFFFFFh +
sub eax ecx +
add esi eax +
jmp loc_44A530  +
mov esi ecx +
test esi esi +
jg loc_44A510  +
mov eax [esp+14h+var_4] +
pop ebp  +
cmp edi eax +
jz loc_44A54C  +
mov ax [ebx] +
cmp ax [edi] +
jb loc_44A54C  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ecx  +
retn   +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ecx  +
retn   +
***
push esi  +
mov esi [esp+arg_4] +
mov ebp edx +
mov edx [esp+arg_C] +
mov ebx ecx +
mov ecx [esp+arg_8] +
push edi  +
mov edi [esp+4+arg_10] +
cmp esi edx +
jnz loc_44A580  +
cmp ecx edi +
jz loc_44A5AC  +
mov eax 1 +
shl eax cl +
test [esi] eax +
setnz al  +
cmp al [ebp+0] +
jz loc_44A5AC  +
cmp ecx 1Fh +
jnb loc_44A59D  +
inc ecx  +
mov [esp+4+arg_8] ecx +
jmp loc_44A578  +
xor ecx ecx +
add esi 4 +
mov [esp+4+arg_8] ecx +
mov [esp+4+arg_4] esi +
jmp loc_44A578  +
pop edi  +
mov [ebx] esi +
mov eax ebx +
pop esi  +
pop ebp  +
mov [ebx+4] ecx +
pop ebx  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov eax [esi+10h] +
lea ecx [esi+10h] +
call dword ptr [eax+1Ch]  +
lea eax [esp+14h+var_C] +
xorps xmm0 xmm0 +
push eax  +
push ecx  +
lea ecx [esi+38h] +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
call sub_44AC30  +
lea eax [esp+14h+var_C] +
mov dword ptr [esp+14h+var_C] 0 +
push eax  +
push ecx  +
lea ecx [esi+4Ch] +
call sub_44AA40  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 18h +
push ebx  +
mov ebx [esp+1Ch+arg_4] +
push ebp  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+10h] +
lea ecx [edi+10h] +
push 1  +
push 0  +
push ebx  +
push [esp+34h+arg_0]  +
call dword ptr [eax+14h]  +
push 1  +
lea eax [esp+14h] +
push eax  +
lea eax [esp+24h] +
push eax  +
lea ecx [edi+38h] +
call sub_44BA10  +
mov ecx eax +
call sub_44AED0  +
mov esi [eax] +
test esi esi +
jz loc_44A652  +
mov esi [esi] +
mov edx [eax+8] +
mov ecx edx +
mov eax [esi+8] +
and edx 1 +
dec eax  +
shr ecx 1 +
and ecx eax +
mov eax [esi+4] +
mov eax [eax+ecx*4] +
add [eax+edx*8] ebx +
adc dword ptr [eax+edx*8+4] 0 +
cmp dword ptr [esp+34h] 0 +
jz loc_44A6CA  +
lea eax [esp+10h] +
xorps xmm0 xmm0 +
push eax  +
lea ecx [edi+38h] +
movlpd oword ptr [esp+14h] xmm0 +
call loc_44AD40  +
push 1  +
lea eax [esp+20h] +
push eax  +
lea eax [esp+34h+var_28+0Ch] +
push eax  +
lea ecx [edi+4Ch] +
call sub_44BA10  +
mov ecx eax +
call sub_44AED0  +
mov esi [eax] +
test esi esi +
jz loc_44A6B0  +
mov esi [esi] +
mov edx [eax+8] +
mov ecx edx +
mov eax [esi+8] +
and edx 3 +
dec eax  +
shr ecx 2 +
and ecx eax +
mov eax [esi+4] +
mov eax [eax+ecx*4] +
inc dword ptr [eax+edx*4]  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 18h +
retn 10h  +
***
mov [esp+4+var_4] 0 +
push eax  +
add ecx 4Ch +
call sub_44AB10  +
xor al al +
pop ecx  +
retn 4  +
***
sub esp 0Ch +
lea eax [esp+0Ch+var_C] +
add ecx 38h +
push esi  +
push eax  +
call sub_44AD00  +
mov esi [eax] +
test esi esi +
jz loc_44A718  +
mov esi [esi] +
mov ecx [eax+8] +
mov edx ecx +
mov eax [esi+8] +
shr edx 1 +
dec eax  +
and edx eax +
mov eax [esi+4] +
and ecx 1 +
pop esi  +
mov edx [eax+edx*4] +
mov eax [edx+ecx*8] +
mov edx [edx+ecx*8+4] +
add esp 0Ch +
retn   +
***
sub esp 0Ch +
lea eax [esp+0Ch+var_C] +
add ecx 38h +
push eax  +
call sub_44AD00  +
mov edx [eax] +
test edx edx +
jz loc_44A757  +
mov edx [edx] +
push esi  +
mov esi [eax+8] +
mov ecx esi +
mov eax [edx+8] +
and esi 1 +
dec eax  +
shr ecx 1 +
and ecx eax +
mov eax [edx+4] +
mov eax [eax+ecx*4] +
cmp dword ptr [eax+esi*8+4] 0 +
ja loc_44A782  +
cmp dword ptr [eax+esi*8] 0 +
ja loc_44A782  +
xor al al +
pop esi  +
add esp 0Ch +
retn   +
mov al 1 +
pop esi  +
add esp 0Ch +
retn   +
***
mov eax [ecx+10h] +
add ecx 10h +
mov eax [eax+3Ch] +
jmp eax  +
***
dec eax  +
retn   +
***
sub esp 18h +
lea eax [esp+18h+var_18] +
push esi  +
push ecx  +
push eax  +
lea eax [esp+24h+var_C] +
add ecx 4Ch +
push eax  +
call sub_44AD00  +
mov ecx eax +
call sub_44AE90  +
mov esi eax +
mov eax [esi] +
test eax eax +
jz loc_44A7D7  +
mov eax [eax] +
mov esi [esi+8] +
mov edx esi +
mov ecx [eax+8] +
mov eax [eax+4] +
dec ecx  +
shr edx 2 +
and edx ecx +
and esi 3 +
mov eax [eax+edx*4] +
mov eax [eax+esi*4] +
pop esi  +
add esp 18h +
retn   +
***
dec eax  +
retn   +
***
mov edi ecx +
lea ecx [edi+4Ch] +
call loc_44AF70  +
push dword ptr [edi+4Ch]  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [edi+4Ch] 0 +
lea ecx [edi+38h] +
call loc_44AF70  +
push dword ptr [edi+38h]  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [edi+38h] 0 +
lea ecx [edi+10h] +
mov dword ptr [ecx] offset off_4912A4 +
mov dword ptr [ecx+4] offset off_491358 +
call loc_4424D0  +
test [esp+arg_0] 1 +
jz loc_44A86F  +
push 60h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
mov eax [eax+3Ch] +
call eax  +
mov edi [esp+10h+arg_4] +
cmp [edi+4] edx +
jb loc_44A8A7  +
ja loc_44A89D  +
cmp [edi] eax +
jb loc_44A8A7  +
pop edi  +
xor eax eax +
pop esi  +
add esp 8 +
retn 18h  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+3Ch] +
call eax  +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_4] edx +
cmp [esp+10h+arg_C] edx +
ja loc_44A8CC  +
jb loc_44A8C6  +
cmp [esp+10h+arg_8] eax +
jnb loc_44A8CC  +
lea edx [esp+10h+arg_8] +
jmp loc_44A8D0  +
lea edx [esp+10h+var_8] +
push [esp+10h+arg_14]  +
mov eax [esi+10h] +
lea ecx [esi+10h] +
push [esp+14h+arg_10]  +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push edi  +
push [esp+24h+arg_0]  +
call dword ptr [eax+80h]  +
pop edi  +
pop esi  +
add esp 8 +
retn 18h  +
***
sub esp 0Ch +
push ebx  +
mov ebx ecx +
push ebp  +
push esi  +
push edi  +
mov eax [ebx] +
mov eax [eax+3Ch] +
call eax  +
mov edi [esp+1Ch+arg_4] +
mov ecx [edi+4] +
mov esi [edi] +
cmp ecx edx +
ja loc_44A923  +
jb loc_44A927  +
cmp esi eax +
jb loc_44A927  +
mov esi eax +
mov ecx edx +
push [esp+1Ch+arg_C]  +
mov [edi+4] ecx +
lea ecx [ebx+10h] +
push [esp+20h+arg_8]  +
mov [edi] esi +
mov eax [ecx] +
push edi  +
push [esp+28h+arg_0]  +
call dword ptr [eax+7Ch]  +
mov ebp eax +
lea ecx [ebx+38h] +
lea eax [esp+10h] +
push eax  +
call sub_44AD00  +
mov esi [eax] +
test esi esi +
jz loc_44A958  +
mov esi [esi] +
mov edx [eax+8] +
mov ecx edx +
mov eax [esi+8] +
and edx 1 +
dec eax  +
shr ecx 1 +
and ecx eax +
mov eax [esi+4] +
mov eax [eax+ecx*4] +
lea ecx [eax+edx*8] +
mov eax [edi] +
sub [ecx] eax +
mov eax [edi+4] +
sbb [ecx+4] eax +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn 10h  +
***
sub esp 18h +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_44AA2C  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+40h] +
call eax  +
test al al +
jnz loc_44AA2C  +
add dword ptr [esi+48h] 0FFFFFFFFh +
jnz loc_44A9BF  +
mov dword ptr [esi+44h] 0 +
jmp loc_44A9C2  +
inc dword ptr [esi+44h]  +
push ebx  +
push edi  +
push 0  +
lea eax [esp+28h+var_18] +
push eax  +
lea eax [esp+2Ch+var_C] +
push eax  +
lea ecx [esi+4Ch] +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
mov ebx [eax] +
test ebx ebx +
jz loc_44A9E7  +
mov ebx [ebx] +
mov edx [eax+8] +
mov ecx edx +
mov eax [ebx+8] +
and edx 3 +
dec eax  +
shr ecx 2 +
and ecx eax +
mov eax [ebx+4] +
mov eax [eax+ecx*4] +
cmp dword ptr [eax+edx*4] 0 +
jnz loc_44AA23  +
cmp dword ptr [esi+5Ch] 1 +
jbe loc_44AA23  +
add dword ptr [esi+5Ch] 0FFFFFFFFh +
jnz loc_44AA20  +
pop edi  +
pop ebx  +
mov dword ptr [esi+58h] 0 +
mov al 1 +
pop esi  +
add esp 18h +
retn   +
inc dword ptr [esi+58h]  +
pop edi  +
pop ebx  +
mov al 1 +
pop esi  +
add esp 18h +
retn   +
xor al al +
pop esi  +
add esp 18h +
retn   +
***
sub esp 28h +
lea eax [esp+28h+var_24] +
push esi  +
push eax  +
mov esi ecx +
call sub_44BA10  +
sub esp 0Ch +
mov ecx eax +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [ecx] +
test eax eax +
jz loc_44AA74  +
mov eax [eax] +
test eax eax +
jz loc_44AA74  +
mov eax [eax] +
mov [edx] eax +
mov eax [ecx+8] +
mov ecx esi +
mov [edx+8] eax +
lea eax [esp+38h+var_18] +
push eax  +
call sub_44AD00  +
sub esp 0Ch +
mov edx eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [edx] +
test eax eax +
jz loc_44AAAA  +
mov eax [eax] +
test eax eax +
jz loc_44AAAA  +
mov eax [eax] +
mov [ecx] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
lea eax [esp+44h+var_C] +
push eax  +
mov ecx esi +
call sub_44B830  +
push [esp+2Ch+arg_4]  +
lea eax [esp+30h+var_C] +
mov ecx esi +
push 1  +
push eax  +
call sub_44AD00  +
sub esp 0Ch +
mov edx eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [edx] +
test eax eax +
jz loc_44AAF2  +
mov eax [eax] +
test eax eax +
jz loc_44AAF2  +
mov eax [eax] +
mov [ecx] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov ecx esi +
call loc_44B160  +
pop esi  +
add esp 28h +
retn 8  +
***
mov eax [esi+0Ch] +
push 0FFFFFFFFh  +
push offset loc_47AC68  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 8  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_44ABEE  +
call sub_45B2CA  +
mov [esi] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi] +
mov [eax] esi +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov ecx esi +
call loc_44BA30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 28h +
lea eax [esp+28h+var_24] +
push esi  +
push eax  +
mov esi ecx +
call sub_44BA10  +
sub esp 0Ch +
mov ecx eax +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [ecx] +
test eax eax +
jz loc_44AC64  +
mov eax [eax] +
test eax eax +
jz loc_44AC64  +
mov eax [eax] +
mov [edx] eax +
mov eax [ecx+8] +
mov ecx esi +
mov [edx+8] eax +
lea eax [esp+38h+var_18] +
push eax  +
call sub_44AD00  +
sub esp 0Ch +
mov edx eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [edx] +
test eax eax +
jz loc_44AC9A  +
mov eax [eax] +
test eax eax +
jz loc_44AC9A  +
mov eax [eax] +
mov [ecx] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
lea eax [esp+44h+var_C] +
push eax  +
mov ecx esi +
call sub_44C1C0  +
push [esp+2Ch+arg_4]  +
lea eax [esp+30h+var_C] +
mov ecx esi +
push 1  +
push eax  +
call sub_44AD00  +
sub esp 0Ch +
mov edx eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [edx] +
test eax eax +
jz loc_44ACE2  +
mov eax [eax] +
test eax eax +
jz loc_44ACE2  +
mov eax [eax] +
mov [ecx] eax +
mov eax [edx+8] +
mov [ecx+8] eax +
mov ecx esi +
call loc_44BC50  +
pop esi  +
add esp 28h +
retn 8  +
***
mov eax [esp+arg_0] +
mov edx [ecx+0Ch] +
mov ecx [ecx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov [eax+8] edx +
retn 4  +
***
push esi  +
mov esi ecx +
call loc_44AF70  +
push dword ptr [esi]  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+0Ch] +
mov ecx [esi+10h] +
add eax ecx +
test al 1 +
jnz loc_44AD63  +
lea eax [ecx+2] +
shr eax 1 +
cmp [esi+8] eax +
ja loc_44AD63  +
push ecx  +
mov ecx esi +
call loc_44BB20  +
mov eax [esi+8] +
lea eax ds:0FFFFFFFFh[eax*2] +
and [esi+0Ch] eax +
mov edi [esi+10h] +
add edi [esi+0Ch] +
mov ecx [esi+8] +
mov eax edi +
shr eax 1 +
dec ecx  +
and ecx eax +
mov eax [esi+4] +
lea ebx ds:0[ecx*4] +
cmp dword ptr [ebx+eax] 0 +
jnz loc_44ADA6  +
push 10h  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44ADCD  +
mov eax [esi+4] +
mov [ebx+eax] ecx +
mov eax [esi+4] +
and edi 1 +
mov eax [ebx+eax] +
lea edx [eax+edi*8] +
test edx edx +
jz loc_44ADC4  +
mov ecx [esp+10h] +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
inc dword ptr [esi+10h]  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
call sub_45B2CA  +
push 0FFFFFFFFh  +
push offset loc_47AC68  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 8  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz loc_44AE3E  +
call sub_45B2CA  +
mov [esi] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov eax [esi] +
mov [eax] esi +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov ecx esi +
call sub_44C3A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esp+arg_0] +
mov [ecx+0Ch] eax +
retn 4  +
***
mov eax [ecx] +
xor edx edx +
test eax eax +
jz loc_44AEA0  +
mov eax [eax] +
test eax eax +
jz loc_44AEA0  +
mov edx [eax] +
mov eax [esp+arg_0] +
push esi  +
mov esi [ecx+8] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+8] esi +
test edx edx +
jz loc_44AEC6  +
mov ecx [edx] +
test ecx ecx +
jz loc_44AEC6  +
mov ecx [ecx] +
mov [eax] ecx +
pop esi  +
retn 8  +
***
mov eax [ecx] +
push esi  +
xor esi esi +
test eax eax +
jz loc_44AEE1  +
mov eax [eax] +
test eax eax +
jz loc_44AEE1  +
mov esi [eax] +
mov eax [esp+4+arg_0] +
mov edx [ecx+8] +
sub edx [esp+4+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+8] edx +
test esi esi +
jz loc_44AF0A  +
mov ecx [esi] +
test ecx ecx +
jz loc_44AF0A  +
mov ecx [ecx] +
mov [eax] ecx +
pop esi  +
retn 8  +
***
mov eax [ecx] +
push esi  +
xor esi esi +
test eax eax +
jz loc_44AF21  +
mov eax [eax] +
test eax eax +
jz loc_44AF21  +
mov esi [eax] +
mov eax [esp+4+arg_0] +
mov edx [ecx+8] +
add edx [esp+4+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+8] edx +
test esi esi +
jz loc_44AF4A  +
mov ecx [esi] +
test ecx ecx +
jz loc_44AF4A  +
mov ecx [ecx] +
mov [eax] ecx +
pop esi  +
retn 8  +
***
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
jz loc_44AF93  +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_44AF8D  +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+10h] 0 +
jnz loc_44AF80  +
push edi  +
mov edi [esi+8] +
test edi edi +
jz loc_44AFB8  +
mov eax [esi+4] +
dec edi  +
mov eax [eax+edi*4] +
test eax eax +
jz loc_44AFB4  +
push eax  +
call sub_44FE87  +
add esp 4 +
test edi edi +
jnz loc_44AFA0  +
mov ecx [esi+4] +
pop edi  +
test ecx ecx +
jz loc_44AFF7  +
mov eax [esi+8] +
cmp eax 3FFFFFFFh +
ja loc_44B007  +
shl eax 2 +
cmp eax 1000h +
jb loc_44AFEE  +
test cl 1Fh +
jnz loc_44B00C  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_44B011  +
sub ecx eax +
cmp ecx 4 +
jb loc_44B016  +
cmp ecx 23h +
ja loc_44B01B  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
add esp 4 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
sub esp 0Ch +
push ebp  +
mov ebp ecx +
push esi  +
mov esi 1 +
mov ecx [ebp+8] +
test ecx ecx +
cmovnz esi ecx +
mov eax esi +
sub eax ecx +
cmp eax 1 +
jb loc_44B052  +
cmp esi 8 +
jnb loc_44B065  +
mov eax 0FFFFFFFh +
sub eax esi +
cmp eax esi +
jb loc_44B155  +
add esi esi +
jmp loc_44B044  +
push ebx  +
mov ebx [ebp+0Ch] +
sub esi ecx +
push edi  +
shr ebx 2 +
mov [esp+1Ch+var_8] ebx +
lea eax [ecx+esi] +
push eax  +
call loc_44C5F0  +
mov edx [ebp+4] +
mov ecx [ebp+8] +
shl ebx 2 +
mov [esp+20h+var_10] eax +
shl ecx 2 +
lea eax [ebx+edx] +
sub ecx eax +
add ecx edx +
sar ecx 2 +
lea edi ds:0[ecx*4] +
push edi  +
push eax  +
mov eax [esp+28h+var_10] +
add eax ebx +
push eax  +
call loc_450F90  +
mov ecx [ebp+4] +
add esp 0Ch +
lea edx [edi+eax] +
mov edi [esp+20h+var_C] +
cmp edi esi +
ja loc_44B0F5  +
and ebx 0FFFFFFFCh +
mov eax esi +
push ebx  +
push ecx  +
sub eax edi +
push edx  +
mov [esp+2Ch+var_8] eax +
call loc_450F90  +
mov ecx [esp+2Ch+var_8] +
add esp 0Ch +
lea edx [ebx+eax] +
test ecx ecx +
jz loc_44B0E7  +
xor eax eax +
mov edi edx +
stos   +
mov edi [esp+20h+var_C] +
mov ebx [esp+20h+var_10] +
test edi edi +
jz loc_44B135  +
mov ecx edi +
mov edi ebx +
jmp loc_44B131  +
lea edi ds:0[esi*4] +
mov eax edi +
and eax 0FFFFFFFCh +
push eax  +
push ecx  +
push edx  +
call loc_450F90  +
mov eax [ebp+4] +
lea ecx [edi+eax] +
sub ebx ecx +
add ebx eax +
and ebx 0FFFFFFFCh +
push ebx  +
push ecx  +
push [esp+34h+var_10]  +
call loc_450F90  +
add esp 18h +
lea edi [ebx+eax] +
mov ebx [esp+20h+var_10] +
test esi esi +
jz loc_44B135  +
mov ecx esi +
xor eax eax +
stos   +
mov eax [ebp+4] +
test eax eax +
jz loc_44B145  +
push dword ptr [ebp+8]  +
push eax  +
call loc_44C420  +
pop edi  +
mov [ebp+4] ebx +
add [ebp+8] esi +
pop ebx  +
pop esi  +
pop ebp  +
add esp 0Ch +
retn 4  +
push offset aDequeTTooLong  +
call sub_44EC5C  +
int 3  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47AC90  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-1Ch] esi +
xor ebx ebx +
lea eax [ebp-58h] +
push eax  +
mov [ebp-34h] ebx +
mov [ebp-30h] ebx +
mov [ebp-2Ch] ebx +
call sub_44AD00  +
mov ecx [ebp+10h] +
mov eax [eax+8] +
sub ecx eax +
mov eax [esi+10h] +
mov edx eax +
sub edx ecx +
mov [ebp-14h] ecx +
mov [ebp-18h] edx +
mov [ebp-20h] eax +
cmp ecx edx +
jnb loc_44B441  +
mov [ebp-4] ebx +
mov ebx [ebp+14h] +
mov edi ebx +
cmp ecx ebx +
jnb loc_44B2D0  +
sub edi ecx +
test edi edi +
jz loc_44B1E7  +
push dword ptr [ebp+18h]  +
mov ecx esi +
call sub_44C480  +
dec edi  +
jmp loc_44B1D6  +
***
mov edi [ebp-14h] +
push ecx  +
test eax eax +
jz loc_44B2C4  +
mov eax [eax] +
test eax eax +
jz loc_44B2C4  +
mov eax [eax] +
test eax eax +
jz loc_44B2C4  +
mov eax [eax] +
mov ecx [ebp+18h] +
jmp loc_44B80B  +
***
mov ecx [ebp+18h] +
xor eax eax +
jmp loc_44B80B  +
***
lea eax [ebp-64h] +
mov ecx esi +
test edi edi +
jz loc_44B350  +
push eax  +
call sub_44AD00  +
lea ecx [ebx-1] +
push ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov ecx eax +
call sub_44AF10  +
mov ebx [eax] +
test ebx ebx +
jz loc_44B2F6  +
mov ebx [ebx] +
mov edx [eax+8] +
mov eax edx +
mov ecx [ebx+8] +
and edx 3 +
shr eax 2 +
dec ecx  +
and ecx eax +
mov eax [ebx+4] +
mov eax [eax+ecx*4] +
mov ecx esi +
lea eax [eax+edx*4] +
push eax  +
call sub_44C480  +
mov ebx [ebp+14h] +
dec edi  +
jmp loc_44B2D0  +
***
add dword ptr [eax+10h] 0FFFFFFFFh +
jnz loc_44B33F  +
mov dword ptr [eax+0Ch] 0 +
jmp loc_44B342  +
inc dword ptr [eax+0Ch]  +
cmp ecx [eax+10h] +
jb loc_44B330  +
push 0  +
push 0  +
call sub_452780  +
push ebx  +
push eax  +
lea eax [ebp-58h] +
push eax  +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
xor edi edi +
mov ecx [eax] +
cmp edi ecx +
jz loc_44B379  +
test ecx ecx +
jz loc_44B379  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B379  +
mov edi [ecx] +
mov [ebp-34h] edi +
mov edx [eax+8] +
sub esp 0Ch +
mov eax [ebp+18h] +
mov ecx esp +
mov [ebp-2Ch] edx +
mov eax [eax] +
mov [ebp+18h] eax +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test edi edi +
jz loc_44B3A7  +
mov eax [edi] +
test eax eax +
jz loc_44B3A7  +
mov eax [eax] +
mov [ecx] eax +
mov edi [ebp-14h] +
sub esp 0Ch +
mov eax esp +
mov [ecx+8] edx +
lea ecx [ebp-34h] +
push edi  +
push eax  +
call sub_44AF10  +
sub esp 0Ch +
lea ecx [ebp-34h] +
mov eax esp +
push ebx  +
push eax  +
call sub_44AF10  +
lea ecx [ebp-64h] +
call sub_44C660  +
add esp 24h +
lea eax [ebp-48h] +
lea ecx [ebp-34h] +
push edi  +
push eax  +
call sub_44AF10  +
push edi  +
lea eax [ebp-58h] +
mov ecx esi +
push eax  +
lea eax [ebp-64h] +
push eax  +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
mov eax [ebp-48h] +
lea ecx [ebp+18h] +
test eax eax +
jz loc_44B414  +
mov eax [eax] +
test eax eax +
jz loc_44B414  +
mov eax [eax] +
test eax eax +
jz loc_44B414  +
mov eax [eax] +
jmp loc_44B416  +
xor eax eax +
push dword ptr [ebp-40h]  +
push eax  +
mov eax [ebp-58h] +
test eax eax +
jz loc_44B437  +
mov eax [eax] +
test eax eax +
jz loc_44B437  +
mov eax [eax] +
test eax eax +
jz loc_44B437  +
mov eax [eax] +
push dword ptr [ebp-50h]  +
jmp loc_44B80C  +
***
push dword ptr [ebp-50h]  +
xor eax eax +
jmp loc_44B80C  +
***
sub edi edx +
test edi edi +
jz loc_44B4DD  +
mov eax [esi+0Ch] +
mov ecx [esi+10h] +
add eax ecx +
test al 3 +
jnz loc_44B47C  +
lea eax [ecx+4] +
shr eax 2 +
cmp [esi+8] eax +
ja loc_44B47C  +
push ecx  +
mov ecx esi +
call sub_44B030  +
mov eax [esi+8] +
lea eax ds:0FFFFFFFFh[eax*4] +
and [esi+0Ch] eax +
mov ebx [esi+10h] +
add ebx [esi+0Ch] +
mov eax [esi+8] +
mov ecx ebx +
shr ecx 2 +
dec eax  +
and ecx eax +
mov eax [esi+4] +
shl ecx 2 +
mov [ebp+14h] ecx +
cmp dword ptr [ecx+eax] 0 +
jnz loc_44B4BD  +
push 4  +
call loc_4186B0  +
mov ecx [esi+4] +
mov edx eax +
mov eax [ebp+14h] +
mov [eax+ecx] edx +
mov ecx eax +
mov eax [esi+4] +
and ebx 3 +
mov eax [eax+ecx] +
lea ecx [eax+ebx*4] +
test ecx ecx +
jz loc_44B4D4  +
mov eax [ebp+18h] +
mov eax [eax] +
mov [ecx] eax +
inc dword ptr [esi+10h]  +
dec edi  +
jmp loc_44B455  +
***
xor edi edi +
nop   +
lea eax [ebp-64h] +
mov ecx esi +
cmp edi [ebp-18h] +
jnb loc_44B5AA  +
push eax  +
call sub_44AD00  +
mov ecx [ebp-14h] +
add ecx edi +
push ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov ecx eax +
call sub_44AF10  +
mov ebx [eax] +
test ebx ebx +
jz loc_44B50D  +
mov ebx [ebx] +
mov edx [eax+8] +
mov eax edx +
mov ecx [ebx+8] +
and edx 3 +
shr eax 2 +
dec ecx  +
and ecx eax +
mov eax [ebx+4] +
mov eax [eax+ecx*4] +
mov ecx [esi+10h] +
lea eax [eax+edx*4] +
mov [ebp-24h] eax +
mov eax [esi+0Ch] +
add eax ecx +
test al 3 +
jnz loc_44B549  +
lea eax [ecx+4] +
shr eax 2 +
cmp [esi+8] eax +
ja loc_44B549  +
push ecx  +
mov ecx esi +
call sub_44B030  +
mov eax [esi+8] +
lea eax ds:0FFFFFFFFh[eax*4] +
and [esi+0Ch] eax +
mov ebx [esi+10h] +
add ebx [esi+0Ch] +
mov eax [esi+8] +
mov ecx ebx +
shr ecx 2 +
dec eax  +
and ecx eax +
mov eax [esi+4] +
shl ecx 2 +
mov [ebp+14h] ecx +
cmp dword ptr [ecx+eax] 0 +
jnz loc_44B58A  +
push 4  +
call loc_4186B0  +
mov ecx [esi+4] +
mov edx eax +
mov eax [ebp+14h] +
mov [eax+ecx] edx +
mov ecx eax +
mov eax [esi+4] +
and ebx 3 +
mov eax [eax+ecx] +
lea ecx [eax+ebx*4] +
test ecx ecx +
jz loc_44B5A1  +
mov eax [ebp-24h] +
mov eax [eax] +
mov [ecx] eax +
inc dword ptr [esi+10h]  +
inc edi  +
jmp loc_44B4E0  +
***
push dword ptr [ebp-14h]  +
push eax  +
lea eax [ebp-58h] +
push eax  +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
xor ebx ebx +
mov ecx [eax] +
cmp ebx ecx +
jz loc_44B5D5  +
test ecx ecx +
jz loc_44B5D5  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B5D5  +
mov ebx [ecx] +
mov [ebp-34h] ebx +
mov esi [eax+8] +
lea ecx [ebp-34h] +
push dword ptr [ebp-18h]  +
lea eax [ebp-58h] +
mov [ebp-2Ch] esi +
push eax  +
call sub_44AF10  +
xor eax eax +
test ebx ebx +
jz loc_44B5F8  +
mov ecx [ebx] +
test ecx ecx +
jz loc_44B5F8  +
mov eax [ecx] +
mov ecx [ebp-58h] +
test ecx ecx +
jz loc_44B615  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B615  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B615  +
mov ecx [ecx] +
push dword ptr [ebp-50h]  +
jmp loc_44B2A9  +
***
push dword ptr [ebp-50h]  +
xor ecx ecx +
jmp loc_44B2A9  +
***
mov eax [ebp-1Ch] +
mov ecx [ebp-20h] +
cmp ecx [eax+10h] +
jnb loc_44B71A  +
add dword ptr [eax+10h] 0FFFFFFFFh +
jnz loc_44B715  +
mov dword ptr [eax+0Ch] 0 +
cmp ecx [eax+10h] +
jb loc_44B708  +
push 0  +
push 0  +
call sub_452780  +
push dword ptr [ebp-14h]  +
push eax  +
lea eax [ebp-58h] +
push eax  +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
xor ebx ebx +
mov ecx [eax] +
cmp ebx ecx +
jz loc_44B74E  +
test ecx ecx +
jz loc_44B74E  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B74E  +
mov ebx [ecx] +
mov [ebp-34h] ebx +
mov esi [eax+8] +
lea ecx [ebp-34h] +
mov eax [ebp+18h] +
sub esp 0Ch +
mov [ebp-2Ch] esi +
mov eax [eax] +
mov [ebp+18h] eax +
mov eax esp +
push dword ptr [ebp-18h]  +
push eax  +
call sub_44AF10  +
sub esp 0Ch +
lea ecx [ebp-34h] +
mov eax esp +
push edi  +
push eax  +
push dword ptr [ebp-18h]  +
lea eax [ebp-64h] +
push eax  +
call sub_44AF10  +
mov ecx eax +
call sub_44AED0  +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test ebx ebx +
jz loc_44B7AA  +
mov eax [ebx] +
test eax eax +
jz loc_44B7AA  +
mov eax [eax] +
mov [ecx] eax +
mov [ecx+8] esi +
lea ecx [ebp-58h] +
call sub_44C700  +
add esp 24h +
lea eax [ebp-58h] +
lea ecx [ebp-34h] +
push edi  +
push eax  +
call sub_44AF10  +
xor eax eax +
test ebx ebx +
jz loc_44B7D3  +
mov ecx [ebx] +
test ecx ecx +
jz loc_44B7D3  +
mov eax [ecx] +
mov ecx [ebp-58h] +
lea edx [ebp+18h] +
test ecx ecx +
jz loc_44B7ED  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B7ED  +
mov ecx [ecx] +
test ecx ecx +
jz loc_44B7ED  +
mov ecx [ecx] +
jmp loc_44B7EF  +
xor ecx ecx +
push dword ptr [ebp-50h]  +
push ecx  +
test eax eax +
jz loc_44B807  +
mov eax [eax] +
test eax eax +
jz loc_44B807  +
mov eax [eax] +
test eax eax +
jz loc_44B807  +
mov eax [eax] +
jmp loc_44B809  +
xor eax eax +
mov ecx edx +
push esi  +
push eax  +
call sub_44C8E0  +
add esp 10h +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
sub esp 2Ch +
push ebx  +
push ebp  +
push esi  +
push edi  +
sub esp 0Ch +
mov esi ecx +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+48h+arg_4] +
test eax eax +
jz loc_44B85D  +
mov eax [eax] +
test eax eax +
jz loc_44B85D  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+arg_C] +
mov [ecx+8] eax +
lea eax [esp+48h+var_24] +
push eax  +
mov ecx esi +
call sub_44C510  +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+48h+arg_10] +
test eax eax +
jz loc_44B894  +
mov eax [eax] +
test eax eax +
jz loc_44B894  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+arg_18] +
mov [ecx+8] eax +
lea eax [esp+48h+var_18] +
push eax  +
mov ecx esi +
call sub_44C510  +
lea eax [esp+3Ch+var_C] +
mov ecx esi +
push eax  +
call sub_44AD00  +
mov ebp [esp+3Ch+var_1C] +
mov edx ebp +
mov ebx [esp+3Ch+var_10] +
mov edi ebx +
mov ecx [eax+8] +
sub edx ecx +
mov eax ebp +
sub eax ecx +
cmp ecx ebp +
mov ecx esi +
cmovbe edx eax +
mov eax ebx +
sub eax ebp +
mov [esp+3Ch+var_2C] edx +
sub edi ebp +
cmp ebp ebx +
cmovbe edi eax +
lea eax [esp+3Ch+var_C] +
push eax  +
call sub_44BA10  +
mov eax [eax+8] +
sub eax ebx +
cmp [esp+3Ch+var_2C] eax +
setb al  +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test al al +
jz loc_44B97E  +
mov eax [esp+48h+var_18] +
test eax eax +
jz loc_44B91C  +
mov eax [eax] +
test eax eax +
jz loc_44B91C  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+var_24] +
sub esp 0Ch +
mov [ecx+8] ebx +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test eax eax +
jz loc_44B943  +
mov eax [eax] +
test eax eax +
jz loc_44B943  +
mov eax [eax] +
mov [ecx] eax +
sub esp 0Ch +
mov [ecx+8] ebp +
mov ecx esi +
push esp  +
call sub_44AD00  +
lea ecx [esp+60h+var_C] +
call sub_44C700  +
add esp 24h +
test edi edi +
jz loc_44B9E7  +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_44B974  +
mov dword ptr [esi+0Ch] 0 +
jmp loc_44B977  +
inc dword ptr [esi+0Ch]  +
sub edi 1 +
jnz loc_44B965  +
jmp loc_44B9E7  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_44B990  +
mov eax [eax] +
test eax eax +
jz loc_44B990  +
mov eax [eax] +
mov [ecx] eax +
sub esp 0Ch +
mov [ecx+8] ebp +
mov ecx esi +
push esp  +
call sub_44BA10  +
mov eax [esp+54h+var_18] +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test eax eax +
jz loc_44B9C2  +
mov eax [eax] +
test eax eax +
jz loc_44B9C2  +
mov eax [eax] +
mov [ecx] eax +
mov [ecx+8] ebx +
lea ecx [esp+60h+var_C] +
call sub_44C660  +
add esp 24h +
test edi edi +
jz loc_44B9E7  +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_44B9E2  +
mov dword ptr [esi+0Ch] 0 +
sub edi 1 +
jnz loc_44B9D5  +
push [esp+3Ch+var_2C]  +
mov edi [esp+40h+arg_0] +
lea eax [esp+40h+var_C] +
push edi  +
push eax  +
mov ecx esi +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 2Ch +
retn 1Ch  +
***
mov eax [esp+arg_0] +
mov edx [ecx+10h] +
add edx [ecx+0Ch] +
mov ecx [ecx] +
mov dword ptr [eax+4] 0 +
mov [eax] ecx +
mov [eax+8] edx +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47ACB0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-18h] esi +
mov edi 1 +
mov dword ptr [ebp-4] 0 +
mov ecx [ebp-18h] +
call loc_44AF70  +
push 0  +
push 0  +
call sub_452780  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
push ebp  +
mov ebp ecx +
push esi  +
mov esi 1 +
mov ecx [ebp+8] +
test ecx ecx +
cmovnz esi ecx +
mov eax esi +
sub eax ecx +
cmp eax 1 +
jb loc_44BB42  +
cmp esi 8 +
jnb loc_44BB55  +
mov eax 0FFFFFFFh +
sub eax esi +
cmp eax esi +
jb loc_44BC44  +
add esi esi +
jmp loc_44BB34  +
***
push ebx  +
mov ebx [ebp+0Ch] +
sub esi ecx +
push edi  +
shr ebx 1 +
mov [esp+14h] ebx +
lea eax [ecx+esi] +
push eax  +
call loc_44C5F0  +
mov edx [ebp+4] +
mov ecx [ebp+8] +
shl ebx 2 +
mov [esp+10h] eax +
shl ecx 2 +
lea eax [ebx+edx] +
sub ecx eax +
add ecx edx +
sar ecx 2 +
lea edi ds:0[ecx*4] +
push edi  +
push eax  +
mov eax [esp+18h] +
add eax ebx +
push eax  +
call loc_450F90  +
mov ecx [ebp+4] +
add esp 0Ch +
lea edx [edi+eax] +
mov edi [esp+14h] +
cmp edi esi +
ja loc_44BBE4  +
and ebx 0FFFFFFFCh +
mov eax esi +
push ebx  +
push ecx  +
sub eax edi +
push edx  +
mov [esp+24h] eax +
call loc_450F90  +
mov ecx [esp+24h] +
add esp 0Ch +
lea edx [ebx+eax] +
test ecx ecx +
jz loc_44BBD6  +
xor eax eax +
mov edi edx +
stos   +
mov edi [esp+14h] +
mov ebx [esp+10h] +
test edi edi +
jz loc_44BC24  +
mov ecx edi +
mov edi ebx +
jmp loc_44BC20  +
lea edi ds:0[esi*4] +
mov eax edi +
and eax 0FFFFFFFCh +
push eax  +
push ecx  +
push edx  +
call loc_450F90  +
mov eax [ebp+4] +
lea ecx [edi+eax] +
sub ebx ecx +
add ebx eax +
and ebx 0FFFFFFFCh +
push ebx  +
push ecx  +
push dword ptr [esp+24h]  +
call loc_450F90  +
add esp 18h +
lea edi [ebx+eax] +
mov ebx [esp+10h] +
test esi esi +
jz loc_44BC24  +
mov ecx esi +
xor eax eax +
stos   +
mov eax [ebp+4] +
test eax eax +
jz loc_44BC34  +
push dword ptr [ebp+8]  +
push eax  +
call loc_44C420  +
pop edi  +
mov [ebp+4] ebx +
add [ebp+8] esi +
pop ebx  +
pop esi  +
pop ebp  +
add esp 0Ch +
retn 4  +
***
push offset aDequeTTooLong  +
call sub_44EC5C  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_47ACD0  +
mov eax large fs:0 +
push eax  +
sub esp 60h +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
mov [ebp-1Ch] edi +
xor ebx ebx +
lea eax [ebp-60h] +
push eax  +
mov [ebp-3Ch] ebx +
mov [ebp-38h] ebx +
mov [ebp-34h] ebx +
call sub_44AD00  +
mov ecx [ebp+10h] +
mov eax [eax+8] +
sub ecx eax +
mov eax [edi+10h] +
mov edx eax +
sub edx ecx +
mov [ebp-14h] ecx +
mov [ebp-18h] edx +
mov [ebp-28h] eax +
cmp ecx edx +
jnb loc_44BF3B  +
mov [ebp-4] ebx +
mov eax [ebp+14h] +
mov esi eax +
cmp ecx eax +
jnb loc_44BDC5  +
sub esi ecx +
test esi esi +
jz loc_44BCD7  +
push dword ptr [ebp+18h]  +
mov ecx edi +
call loc_44C550  +
dec esi  +
jmp loc_44BCC6  +
***
mov esi [ebp-14h] +
push ecx  +
test eax eax +
jz loc_44BDBA  +
mov eax [eax] +
test eax eax +
jz loc_44BDBA  +
mov eax [eax] +
test eax eax +
jz loc_44BDBA  +
mov eax [eax] +
mov ecx [ebp+18h] +
push esi  +
jmp loc_44C1A3  +
mov ecx [ebp+18h] +
xor eax eax +
push esi  +
jmp loc_44C1A3  +
***
mov eax [ebp-1Ch] +
sub esp 2Ch +
push ebx  +
push ebp  +
push esi  +
push edi  +
sub esp 0Ch +
mov esi ecx +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+48h+arg_4] +
test eax eax +
jz loc_44C1ED  +
mov eax [eax] +
test eax eax +
jz loc_44C1ED  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+arg_C] +
mov [ecx+8] eax +
lea eax [esp+48h+var_24] +
push eax  +
mov ecx esi +
call sub_44C510  +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+48h+arg_10] +
test eax eax +
jz loc_44C224  +
mov eax [eax] +
test eax eax +
jz loc_44C224  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+arg_18] +
mov [ecx+8] eax +
lea eax [esp+48h+var_18] +
push eax  +
mov ecx esi +
call sub_44C510  +
lea eax [esp+3Ch+var_C] +
mov ecx esi +
push eax  +
call sub_44AD00  +
mov ebp [esp+3Ch+var_1C] +
mov edx ebp +
mov ebx [esp+3Ch+var_10] +
mov edi ebx +
mov ecx [eax+8] +
sub edx ecx +
mov eax ebp +
sub eax ecx +
cmp ecx ebp +
mov ecx esi +
cmovbe edx eax +
mov eax ebx +
sub eax ebp +
mov [esp+3Ch+var_2C] edx +
sub edi ebp +
cmp ebp ebx +
cmovbe edi eax +
lea eax [esp+3Ch+var_C] +
push eax  +
call sub_44BA10  +
mov eax [eax+8] +
sub eax ebx +
cmp [esp+3Ch+var_2C] eax +
setb al  +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test al al +
jz loc_44C30E  +
mov eax [esp+48h+var_18] +
test eax eax +
jz loc_44C2AC  +
mov eax [eax] +
test eax eax +
jz loc_44C2AC  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+48h+var_24] +
sub esp 0Ch +
mov [ecx+8] ebx +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test eax eax +
jz loc_44C2D3  +
mov eax [eax] +
test eax eax +
jz loc_44C2D3  +
mov eax [eax] +
mov [ecx] eax +
sub esp 0Ch +
mov [ecx+8] ebp +
mov ecx esi +
push esp  +
call sub_44AD00  +
lea ecx [esp+60h+var_C] +
call sub_44C840  +
add esp 24h +
test edi edi +
jz loc_44C377  +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_44C304  +
mov dword ptr [esi+0Ch] 0 +
jmp loc_44C307  +
inc dword ptr [esi+0Ch]  +
sub edi 1 +
jnz loc_44C2F5  +
jmp loc_44C377  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_44C320  +
mov eax [eax] +
test eax eax +
jz loc_44C320  +
mov eax [eax] +
mov [ecx] eax +
sub esp 0Ch +
mov [ecx+8] ebp +
mov ecx esi +
push esp  +
call sub_44BA10  +
mov eax [esp+54h+var_18] +
sub esp 0Ch +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
test eax eax +
jz loc_44C352  +
mov eax [eax] +
test eax eax +
jz loc_44C352  +
mov eax [eax] +
mov [ecx] eax +
mov [ecx+8] ebx +
lea ecx [esp+60h+var_C] +
call sub_44C7A0  +
add esp 24h +
test edi edi +
jz loc_44C377  +
add dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_44C372  +
mov dword ptr [esi+0Ch] 0 +
sub edi 1 +
jnz loc_44C365  +
push [esp+3Ch+var_2C]  +
mov edi [esp+40h+arg_0] +
lea eax [esp+40h+var_C] +
push edi  +
push eax  +
mov ecx esi +
call sub_44AD00  +
mov ecx eax +
call sub_44AF10  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 2Ch +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_47ACF0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov ebx [ebp+arg_4] +
mov esi 1 +
mov [ebp+var_4] 0 +
nop   +
test esi esi +
jz loc_44C400  +
push ebx  +
mov ecx edi +
call loc_44AD40  +
dec esi  +
jmp loc_44C3E0  +
mov ecx [ebp-14h] +
call loc_44AF70  +
push 0  +
push 0  +
call sub_452780  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [esp+8] +
mov ecx [esp+4] +
cmp eax 3FFFFFFFh +
ja loc_44C45D  +
shl eax 2 +
cmp eax 1000h +
jb loc_44C453  +
test cl 1Fh +
jnz loc_44C462  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_44C467  +
sub ecx eax +
cmp ecx 4 +
jb loc_44C46C  +
cmp ecx 23h +
ja loc_44C471  +
mov ecx eax +
push ecx  +
call sub_44FE87  +
pop ecx  +
retn 8  +
***
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
call sub_45B2CA  +
push edi  +
test byte ptr [esi+0Ch] 3 +
jnz loc_44C49E  +
mov eax [esi+10h] +
add eax 4 +
shr eax 2 +
cmp [esi+8] eax +
ja loc_44C49E  +
push ecx  +
call sub_44B030  +
mov eax [esi+8] +
lea eax ds:0FFFFFFFFh[eax*4] +
and [esi+0Ch] eax +
mov edi [esi+0Ch] +
jnz loc_44C4B6  +
mov edi [esi+8] +
shl edi 2 +
mov ecx [esi+8] +
dec edi  +
mov eax edi +
dec ecx  +
shr eax 2 +
and ecx eax +
mov eax [esi+4] +
push ebx  +
lea ebx ds:0[ecx*4] +
cmp dword ptr [ebx+eax] 0 +
jnz loc_44C4E0  +
push 4  +
call loc_4186B0  +
mov ecx [esi+4] +
mov [ebx+ecx] eax +
mov eax [esi+4] +
mov ecx edi +
and ecx 3 +
mov eax [ebx+eax] +
pop ebx  +
lea ecx [eax+ecx*4] +
test ecx ecx +
jz loc_44C4FB  +
mov eax [esp+0Ch] +
mov eax [eax] +
mov [ecx] eax +
mov [esi+0Ch] edi +
inc dword ptr [esi+10h]  +
pop edi  +
pop esi  +
retn 4  +
***
mov edx [esp+arg_0] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
test ecx ecx +
jz loc_44C535  +
mov ecx [ecx] +
mov eax edx +
mov [edx] ecx +
mov ecx [esp+arg_C] +
mov [edx+8] ecx +
retn 10h  +
mov eax [esp+arg_C] +
mov [edx+8] eax +
mov eax edx +
retn 10h  +
***
push ebx  +
push esi  +
mov esi ecx +
push edi  +
test byte ptr [esi+0Ch] 1 +
jnz loc_44C56E  +
mov eax [esi+10h] +
add eax 2 +
shr eax 1 +
cmp [esi+8] eax +
ja loc_44C56E  +
push ecx  +
call loc_44BB20  +
mov eax [esi+8] +
lea eax ds:0FFFFFFFFh[eax*2] +
and [esi+0Ch] eax +
mov edi [esi+0Ch] +
jnz loc_44C585  +
mov edi [esi+8] +
add edi edi +
mov ecx [esi+8] +
dec edi  +
mov eax edi +
dec ecx  +
shr eax 1 +
and ecx eax +
mov eax [esi+4] +
lea ebx ds:0[ecx*4] +
cmp dword ptr [ebx+eax] 0 +
jnz loc_44C5B6  +
push 10h  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44C5E2  +
mov eax [esi+4] +
mov [ebx+eax] ecx +
mov eax [esi+4] +
mov ecx edi +
and ecx 1 +
mov eax [ebx+eax] +
lea edx [eax+ecx*8] +
test edx edx +
jz loc_44C5D6  +
mov ecx [esp+10h] +
mov eax [ecx] +
mov [edx] eax +
mov eax [ecx+4] +
mov [edx+4] eax +
mov [esi+0Ch] edi +
inc dword ptr [esi+10h]  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
call sub_45B2CA  +
mov eax [esp+4] +
test eax eax +
jnz loc_44C5FB  +
retn 4  +
***
cmp eax 3FFFFFFFh +
ja loc_44C63D  +
shl eax 2 +
cmp eax 1000h +
jb loc_44C62E  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_44C642  +
push ecx  +
call sub_44FE54  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44C647  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
retn 4  +
***
push eax  +
call sub_44FE54  +
add esp 4 +
test eax eax +
jnz locret_44C5F8  +
jmp loc_44C64C  +
call sub_44EC3F  +
call sub_44EC3F  +
call sub_45B2CA  +
call sub_45B2CA  +
push [esp+arg_18]  +
mov esi ecx +
sub esp 0Ch +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [esp+10h+arg_18] +
test eax eax +
jz loc_44C68C  +
mov eax [eax] +
test eax eax +
jz loc_44C68C  +
mov eax [eax] +
mov [edx] eax +
mov eax [esp+10h+arg_20] +
sub esp 0Ch +
mov ecx esp +
mov [edx+8] eax +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_44C6B7  +
mov eax [eax] +
test eax eax +
jz loc_44C6B7  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+1Ch+arg_14] +
sub esp 0Ch +
mov [ecx+8] eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_44C6E2  +
mov eax [eax] +
test eax eax +
jz loc_44C6E2  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+28h+arg_8] +
mov [ecx+8] eax +
mov ecx esi +
call sub_44C920  +
add esp 28h +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
push [esp+arg_18]  +
mov esi ecx +
sub esp 0Ch +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [esp+10h+arg_18] +
test eax eax +
jz loc_44C72C  +
mov eax [eax] +
test eax eax +
jz loc_44C72C  +
mov eax [eax] +
mov [edx] eax +
mov eax [esp+10h+arg_20] +
sub esp 0Ch +
mov ecx esp +
mov [edx+8] eax +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_44C757  +
mov eax [eax] +
test eax eax +
jz loc_44C757  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+1Ch+arg_14] +
sub esp 0Ch +
mov [ecx+8] eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_44C782  +
mov eax [eax] +
test eax eax +
jz loc_44C782  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+28h+arg_8] +
mov [ecx+8] eax +
mov ecx esi +
call sub_44C9C0  +
add esp 28h +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
push [esp+arg_18]  +
mov esi ecx +
sub esp 0Ch +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [esp+10h+arg_18] +
test eax eax +
jz loc_44C7CC  +
mov eax [eax] +
test eax eax +
jz loc_44C7CC  +
mov eax [eax] +
mov [edx] eax +
mov eax [esp+10h+arg_20] +
sub esp 0Ch +
mov ecx esp +
mov [edx+8] eax +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_44C7F7  +
mov eax [eax] +
test eax eax +
jz loc_44C7F7  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+1Ch+arg_14] +
sub esp 0Ch +
mov [ecx+8] eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_44C822  +
mov eax [eax] +
test eax eax +
jz loc_44C822  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+28h+arg_8] +
mov [ecx+8] eax +
mov ecx esi +
call sub_44CAB0  +
add esp 28h +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
push [esp+arg_18]  +
mov esi ecx +
sub esp 0Ch +
mov edx esp +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov eax [esp+10h+arg_18] +
test eax eax +
jz loc_44C86C  +
mov eax [eax] +
test eax eax +
jz loc_44C86C  +
mov eax [eax] +
mov [edx] eax +
mov eax [esp+10h+arg_20] +
sub esp 0Ch +
mov ecx esp +
mov [edx+8] eax +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_44C897  +
mov eax [eax] +
test eax eax +
jz loc_44C897  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+1Ch+arg_14] +
sub esp 0Ch +
mov [ecx+8] eax +
mov ecx esp +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+4] 0 +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_44C8C2  +
mov eax [eax] +
test eax eax +
jz loc_44C8C2  +
mov eax [eax] +
mov [ecx] eax +
mov eax [esp+28h+arg_8] +
mov [ecx+8] eax +
mov ecx esi +
call sub_44CB50  +
add esp 28h +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
push edi  +
mov edi ecx +
cmp esi [esp+4+arg_C] +
jz loc_44C91C  +
nop   +
mov ecx [esp+4+arg_0] +
mov eax esi +
shr eax 2 +
and esi 3 +
mov edx [ecx+8] +
mov ecx [ecx+4] +
dec edx  +
and edx eax +
mov eax [edi] +
mov ecx [ecx+edx*4] +
mov [ecx+esi*4] eax +
mov esi [esp+4+arg_4] +
inc esi  +
mov [esp+4+arg_4] esi +
cmp esi [esp+4+arg_C] +
jnz loc_44C8F0  +
pop edi  +
pop esi  +
retn   +
***
mov edx [esp+arg_8] +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [esp+8+arg_20] +
cmp edx [esp+8+arg_14] +
jz loc_44C994  +
push edi  +
mov eax [esp+0Ch+arg_0] +
test eax eax +
jnz loc_44C93F  +
xor edi edi +
jmp loc_44C941  +
mov edi [eax] +
mov eax [edi+8] +
mov ecx edx +
dec eax  +
shr ecx 2 +
and ecx eax +
and edx 3 +
mov eax [edi+4] +
mov eax [eax+ecx*4] +
mov ecx [esp+0Ch+arg_18] +
lea edi [eax+edx*4] +
test ecx ecx +
jz loc_44C962  +
mov ecx [ecx] +
mov edx [ecx+8] +
mov eax esi +
mov ecx [ecx+4] +
dec edx  +
shr eax 2 +
and esi 3 +
and edx eax +
mov eax [edi] +
mov ecx [ecx+edx*4] +
mov [ecx+esi*4] eax +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_20] +
inc edx  +
inc esi  +
mov [esp+0Ch+arg_8] edx +
mov [esp+0Ch+arg_20] esi +
cmp edx [esp+0Ch+arg_14] +
jnz loc_44C933  +
pop edi  +
mov eax [esp+8+arg_18] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov [ebx+8] esi +
test eax eax +
jz loc_44C9B6  +
mov eax [eax] +
test eax eax +
jz loc_44C9B6  +
mov eax [eax] +
mov [ebx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov edx [esp+arg_14] +
push edi  +
mov edi ecx +
cmp [esp+4+arg_8] edx +
jz loc_44CA32  +
push ebx  +
push esi  +
nop   +
mov eax [esp+0Ch+arg_C] +
dec edx  +
mov [esp+0Ch+arg_14] edx +
test eax eax +
jnz loc_44C9E1  +
xor esi esi +
jmp loc_44C9E3  +
mov esi [eax] +
mov eax [esi+8] +
mov ecx edx +
dec eax  +
shr ecx 2 +
and ecx eax +
and edx 3 +
mov eax [esi+4] +
mov esi [esp+0Ch+arg_20] +
dec esi  +
mov eax [eax+ecx*4] +
mov ecx [esp+0Ch+arg_18] +
mov [esp+0Ch+arg_20] esi +
lea ebx [eax+edx*4] +
test ecx ecx +
jz loc_44CA0D  +
mov ecx [ecx] +
mov eax [ecx+8] +
mov edx esi +
mov ecx [ecx+4] +
dec eax  +
shr edx 2 +
and esi 3 +
and edx eax +
mov eax [ebx] +
mov ecx [ecx+edx*4] +
mov [ecx+esi*4] eax +
mov edx [esp+0Ch+arg_14] +
cmp [esp+0Ch+arg_8] edx +
jnz loc_44C9D0  +
pop esi  +
pop ebx  +
mov eax [esp+4+arg_18] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
test eax eax +
jz loc_44CA51  +
mov eax [eax] +
test eax eax +
jz loc_44CA51  +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4+arg_20] +
mov [edi+8] eax +
mov eax edi +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
cmp esi [esp+4+arg_C] +
jz loc_44CAA2  +
nop   +
mov edx [esp+4+arg_0] +
mov eax esi +
shr eax 1 +
and esi 1 +
mov ecx [edx+8] +
dec ecx  +
and ecx eax +
mov eax [edx+4] +
mov ecx [eax+ecx*4] +
mov eax [edi] +
mov [ecx+esi*8] eax +
mov eax [edi+4] +
mov [ecx+esi*8+4] eax +
mov esi [esp+4+arg_4] +
inc esi  +
mov [esp+4+arg_4] esi +
cmp esi [esp+4+arg_C] +
jnz loc_44CA70  +
pop edi  +
pop esi  +
retn   +
***
mov edx [esp+arg_20] +
mov edx [esp+arg_14] +
sub ecx 4 +
jmp sub_44A810  +
***
push 0FFFFFFFFh  +
push offset loc_47AD28  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
test eax eax +
jnz loc_44CCAE  +
push 0Ah  +
call ds:GetLastError  +
mov edx eax +
lea ecx [ebp+var_50] +
call sub_43EEF0  +
add esp 4 +
push eax  +
mov edx offset aTimerQueryperf +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_68] +
call sub_424EA0  +
add esp 4 +
xorps xmm0 xmm0 +
movq [ebp+var_34] xmm0 +
push 0FFFFFFFFh  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_28] +
push 0  +
push eax  +
mov [ebp+var_38] offset off_48D038 +
mov [ebp+var_2C] 6 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_402270  +
push offset unk_49C854  +
lea eax [ebp+var_38] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
call sub_452780  +
mov eax dword ptr [ebp+PerformanceCount] +
mov edx dword ptr [ebp+PerformanceCount+4] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
movzx esi ds:byte_48B7A0[eax] +
mov edx esi +
mov ecx esi +
shr edx 7 +
imul edi edx +
shl ecx 19h +
imul edx edx +
xor edi ecx +
mov ecx esi +
shl ecx 8 +
or ecx esi +
shl ecx 8 +
or edi ecx +
lea ecx [esi+esi] +
xor edx ecx +
xor ecx ecx +
xor edx esi +
or ecx edi +
or edx edi +
mov dword_4A2930[eax*8] ecx +
mov dword_4A2934[eax*8] edx +
inc eax  +
cmp eax 100h +
jl loc_44CCD4  +
xorps xmm0 xmm0 +
pop edi  +
movlpd oword ptr oword_4A3130+8 xmm0 +
movlpd oword ptr oword_4A3130 xmm0 +
mov byte_4A2929 1 +
pop esi  +
retn   +
***
sub esp 10h +
push ebx  +
push ebp  +
xor edx edx +
push esi  +
mov [esp+18h] edx +
push edi  +
movzx edi ds:byte_48B8A0[edx] +
mov eax edi +
mov [esp+10h] edi +
shr eax 5 +
mov esi edi +
mov edx eax +
shr esi 6 +
mov ebx eax +
lea ecx [edi+edi] +
xor ecx edi +
and eax 1 +
mov [esp+14h] eax +
and ebx 2 +
shr edi 7 +
and edx 4 +
imul eax edi +
lea ebp [ecx+ecx] +
mov [esp+18h] edx +
xor ebp [esp+10h] +
mov edx esi +
shl ebp 19h +
and esi 1 +
shl ecx 2 +
and edx 2 +
xor ebp eax +
xor ecx [esp+10h] +
imul eax [esp+14h] +
shl ecx 8 +
xor ebp eax +
imul eax ebx +
xor ebp eax +
imul eax esi +
xor ebp eax +
imul eax edx +
xor ebp eax +
imul eax [esp+18h] +
xor ebp eax +
imul eax [esp+14h] +
xor ecx eax +
imul eax ebx +
xor ecx eax +
imul eax esi +
mov esi [esp+18h] +
xor ecx eax +
imul eax edx +
mov edx [esp+10h] +
xor ecx eax +
imul eax esi +
xor ecx eax +
mov eax [esp+10h] +
or ebp ecx +
lea ecx ds:0[eax*8] +
xor ecx eax +
imul eax [esp+14h] +
shl ecx 10h +
xor ecx eax +
imul eax ebx +
xor ecx eax +
imul eax esi +
xor ecx eax +
mov eax [esp+10h] +
or ebp ecx +
lea ecx ds:0[eax*4] +
xor ecx eax +
imul eax edi +
add ecx ecx +
xor ecx eax +
imul eax [esp+14h] +
xor ecx eax +
imul eax ebx +
xor ecx eax +
imul eax esi +
xor ecx eax +
xor eax eax +
xor ecx edx +
or edx ebp +
or ecx ebp +
or eax edx +
mov edx [esp+1Ch] +
mov dword_4A3218[edx*8] eax +
mov dword_4A321C[edx*8] ecx +
inc edx  +
mov [esp+1Ch] edx +
cmp edx 100h +
jl loc_44CD50  +
pop edi  +
pop esi  +
pop ebp  +
mov byte_4A2928 1 +
pop ebx  +
add esp 10h +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 38h +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
mov eax edi +
mov [esp+14h] esi +
shr eax 2 +
mov [esp+18h] eax +
add eax 6 +
mov [esi+10h] eax +
lea ecx [esi+18h] +
lea eax ds:4[eax*4] +
push eax  +
call sub_44E8D0  +
cmp byte_4A2927 0 +
mov esi [esi+11Ch] +
jnz loc_44CEE7  +
call sub_446070  +
cmp byte_4A2924 0 +
jz loc_44D0F0  +
mov eax [ebp+8] +
push edi  +
push eax  +
push esi  +
movups xmm0 oword ptr [eax+edi-10h] +
movaps oword ptr [esp+3Ch] xmm0 +
call loc_452BD0  +
movaps xmm1 oword ptr [esp+3Ch] +
add esp 0Ch +
mov eax [esp+18h] +
shl eax 2 +
lea edx [eax+esi] +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
mov [esp+28h] edi +
push dword ptr [ebp+8]  +
lea edi ds:0[eax*4] +
mov dword ptr [esp+30h] 4 +
mov edx edi +
call sub_438750  +
sub edi [ebp+0Ch] +
push edi  +
mov edi [ebp+0Ch] +
push 0  +
lea eax [esi+edi] +
push eax  +
call sub_453150  +
add esp 14h +
lea edx [esp+28h] +
lea ecx [esp+24h] +
call sub_422BF0  +
push eax  +
mov edx esi +
mov ecx esi +
call loc_442180  +
mov eax [esp+1Ch] +
add esp 4 +
shl eax 2 +
mov [esp+1Ch] eax +
add eax esi +
mov [esp+10h] eax +
mov dword ptr [esp+0Ch] offset unk_48B77C +
mov ecx [eax-4] +
mov eax ecx +
shr eax 10h +
movzx eax al +
movzx edx ds:byte_48B7A0[eax] +
mov eax ecx +
shr eax 8 +
xor edx 1 +
movzx eax al +
shl edx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor edx eax +
movzx eax cl +
shr ecx 18h +
shl edx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor edx eax +
movzx eax ds:byte_48B7A0[ecx] +
mov ecx [esp+10h] +
shl edx 8 +
xor edx eax +
xor edx [esi] +
mov [ecx] edx +
mov eax [esi+4] +
xor eax edx +
mov edx [esp+18h] +
mov [ecx+4] eax +
mov ecx [esi+8] +
xor ecx eax +
lea eax ds:8[edx*4] +
mov [eax+esi] ecx +
mov [esp+20h] eax +
lea eax ds:0Ch[edx*4] +
mov [esp+18h] eax +
mov eax [esi+0Ch] +
xor eax ecx +
mov [esi+edx*4+0Ch] eax +
lea edx ds:10h[edx*4] +
mov eax [esp+14h] +
mov [esp+2Ch] edx +
mov ecx [eax+118h] +
mov eax [eax+11Ch] +
lea ecx [eax+ecx*4] +
lea eax [edx+esi] +
cmp eax ecx +
jz loc_44D351  +
mov edx [esp+1Ch] +
lea eax [edx-4] +
mov [esp+28h] eax +
lea eax [edx+4] +
mov [esp+24h] eax +
cmp edi 18h +
jnz loc_44D238  +
mov ecx [esi+24h] +
xor ecx [esi+10h] +
mov eax [esi+14h] +
xor eax ecx +
mov [esi+28h] ecx +
mov [esi+2Ch] eax +
jmp loc_44D2A1  +
cmp edi 20h +
jnz loc_44D2A1  +
mov ecx [esi+2Ch] +
mov eax ecx +
shr eax 18h +
movzx edx ds:byte_48B7A0[eax] +
mov eax ecx +
shr eax 10h +
movzx eax al +
shl edx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor edx eax +
mov eax ecx +
shr eax 8 +
movzx eax al +
shl edx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor edx eax +
movzx eax cl +
mov ecx [esi+18h] +
shl edx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor edx eax +
mov eax [esi+14h] +
xor edx [esi+10h] +
xor eax edx +
mov [esi+30h] edx +
xor ecx eax +
mov [esi+34h] eax +
mov eax [esi+1Ch] +
xor eax ecx +
mov [esi+38h] ecx +
mov [esi+3Ch] eax +
mov esi [esp+10h] +
mov edx [esp+28h] +
mov eax [esp+1Ch] +
add eax esi +
mov [esp+10h] eax +
mov edx [edx+esi] +
mov eax edx +
shr eax 10h +
movzx eax al +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 8 +
movzx eax al +
shl ecx 8 +
movzx eax ds:byte_48B7A0[eax] +
xor ecx eax +
movzx eax dl +
shl ecx 8 +
shr edx 18h +
movzx eax ds:byte_48B7A0[eax] +
xor ecx eax +
movzx eax ds:byte_48B7A0[edx] +
mov edx [esp+10h] +
shl ecx 8 +
xor ecx eax +
mov eax [esp+0Ch] +
xor ecx [esi] +
xor ecx [eax] +
add eax 4 +
mov [edx] ecx +
mov [esp+0Ch] eax +
mov eax [esi+4] +
xor eax ecx +
mov ecx [esp+24h] +
mov [ecx+esi] eax +
mov ecx [esi+8] +
xor ecx eax +
mov eax [esp+20h] +
mov [eax+esi] ecx +
mov eax [esi+0Ch] +
xor eax ecx +
mov ecx [esp+18h] +
mov [ecx+esi] eax +
mov eax [esp+14h] +
mov ecx [eax+118h] +
mov eax [eax+11Ch] +
lea ecx [eax+ecx*4] +
mov eax [esp+2Ch] +
add eax esi +
cmp eax ecx +
jnz loc_44D220  +
mov edi [esp+14h] +
mov eax [edi+4] +
lea ecx [edi+4] +
mov esi [edi+11Ch] +
mov eax [eax+1Ch] +
mov [esp+20h] esi +
call eax  +
test al al +
jz loc_44D3A3  +
cmp byte_4A2929 0 +
jnz loc_44D37C  +
call sub_44CCD0  +
push 10h  +
mov edx esi +
mov ecx esi +
call loc_442180  +
mov ecx [edi+10h] +
add esp 4 +
shl ecx 4 +
add ecx esi +
mov edx ecx +
push 10h  +
call loc_442180  +
add esp 4 +
jmp loc_44D8C7  +
cmp byte_4A2928 0 +
jnz loc_44D3B1  +
call loc_44CD40  +
mov eax [edi+10h] +
mov ecx 4 +
mov [esp+18h] ecx +
lea eax ds:0FFFFFFFCh[eax*4] +
cmp eax ecx +
jbe loc_44D6EE  +
mov edi eax +
lea eax [edi+2] +
lea eax [esi+eax*4] +
mov [esp+10h] eax +
lea eax [esi+18h] +
mov [esp+0Ch] eax +
nop   +
mov edx [eax-8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov esi dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
mov edx [edx-8] +
xor esi (dword_4A3218+2)[eax*8] +
mov eax [esp+0Ch] +
movzx eax byte ptr [eax-8] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+3)[eax*8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [edx-8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov eax [esp+0Ch] +
mov [eax-8] ecx +
mov [edx-8] esi +
mov edx [eax-4] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov esi dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
mov edx [edx-4] +
xor esi (dword_4A3218+2)[eax*8] +
mov eax [esp+0Ch] +
movzx eax byte ptr [eax-4] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+3)[eax*8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [edx-4] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov eax [esp+0Ch] +
mov [eax-4] ecx +
mov [edx-4] esi +
mov edx [eax] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov esi dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
mov edx [edx] +
xor esi (dword_4A3218+2)[eax*8] +
mov eax [esp+0Ch] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+3)[eax*8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [edx] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov eax [esp+0Ch] +
mov [eax] ecx +
mov [edx] esi +
mov edx [eax+4] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov esi dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
mov edx [edx+4] +
xor esi (dword_4A3218+2)[eax*8] +
mov eax [esp+0Ch] +
movzx eax byte ptr [eax+4] +
movzx eax ds:byte_48B7A0[eax] +
xor esi (dword_4A3218+3)[eax*8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+10h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [edx+4] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov eax [esp+0Ch] +
mov [eax+4] ecx +
mov ecx [esp+18h] +
mov [edx+4] esi +
add ecx 4 +
add eax 10h +
mov [esp+18h] ecx +
sub edi 4 +
mov [esp+0Ch] eax +
sub edx 10h +
mov [esp+10h] edx +
cmp ecx edi +
jb loc_44D3E0  +
mov edi [esp+14h] +
mov esi [esp+20h] +
mov edx [esi+ecx*4] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+18h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [esi+edx*4] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov [esi+edx*4] ecx +
mov edx [esi+edx*4+4] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+18h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [esi+edx*4+4] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov [esi+edx*4+4] ecx +
mov edx [esi+edx*4+8] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+18h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [esi+edx*4+8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov [esi+edx*4+8] ecx +
mov edx [esi+edx*4+0Ch] +
mov eax edx +
shr eax 18h +
movzx ecx ds:byte_48B7A0[eax] +
mov eax edx +
shr eax 10h +
movzx eax al +
shr edx 8 +
mov ecx dword_4A321C[ecx*8] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+1)[eax*8] +
movzx eax dl +
mov edx [esp+18h] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+2)[eax*8] +
movzx eax byte ptr [esi+edx*4+0Ch] +
movzx eax ds:byte_48B7A0[eax] +
xor ecx (dword_4A3218+3)[eax*8] +
mov [esi+edx*4+0Ch] ecx +
mov eax [edi+10h] +
mov ecx [esi] +
add eax eax +
bswap ecx  +
mov eax [esi+eax*8] +
bswap eax  +
mov [esi] eax +
mov eax [edi+10h] +
add eax eax +
mov [esi+eax*8] ecx +
mov eax [edi+10h] +
mov ecx [esi+4] +
add eax eax +
bswap ecx  +
mov eax [esi+eax*8+4] +
bswap eax  +
mov [esi+4] eax +
mov eax [edi+10h] +
add eax eax +
mov [esi+eax*8+4] ecx +
mov eax [edi+10h] +
mov ecx [esi+8] +
add eax eax +
bswap ecx  +
mov eax [esi+eax*8+8] +
bswap eax  +
mov [esi+8] eax +
mov eax [edi+10h] +
add eax eax +
mov [esi+eax*8+8] ecx +
mov eax [edi+10h] +
mov ecx [esi+0Ch] +
add eax eax +
bswap ecx  +
mov eax [esi+eax*8+0Ch] +
bswap eax  +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
add eax eax +
mov [esi+eax*8+0Ch] ecx +
cmp byte_4A2927 0 +
jnz loc_44D8D5  +
call sub_446070  +
cmp byte_4A2924 0 +
jz loc_44D8F3  +
mov eax [edi+10h] +
lea ecx [esi+10h] +
dec eax  +
mov edx ecx +
shl eax 4 +
push eax  +
call loc_442180  +
add esp 4 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 3Ch +
mov eax dword_49E070 +
xor eax esp +
mov [esp+38h] eax +
push ebx  +
mov ebx [ebp+8] +
mov eax ecx +
mov cl byte_4A2927 +
mov [esp+20h] eax +
push esi  +
mov esi [ebp+0Ch] +
mov [esp+28h] esi +
push edi  +
mov edi [ebp+10h] +
mov [esp+30h] edi +
test cl cl +
jnz loc_44D947  +
call sub_446070  +
mov cl byte_4A2927 +
mov eax [esp+28h] +
cmp byte_4A2926 0 +
jz loc_44D972  +
push 0  +
push 10h  +
push edi  +
push esi  +
push ebx  +
mov ecx eax +
call loc_44E6C0  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+38h] +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edi [eax+118h] +
mov eax [edi] +
xor eax [ebx] +
mov edx [edi+18h] +
mov [esp+24h] eax +
mov eax [edi+4] +
xor eax [ebx+4] +
mov [esp+1Ch] eax +
mov eax [edi+8] +
xor eax [ebx+8] +
mov [esp+14h] eax +
mov eax [edi+0Ch] +
xor eax [ebx+0Ch] +
mov ebx [edi+10h] +
mov [esp+0Ch] eax +
mov eax [edi+14h] +
mov [esp+18h] eax +
mov eax [edi+1Ch] +
add edi 20h +
mov [esp+20h] edx +
mov [esp+10h] eax +
test cl cl +
jnz loc_44D9C6  +
call sub_446070  +
mov edx [esp+20h] +
xor ecx ecx +
xor eax eax +
and ecx dword_4A2930[eax] +
add eax dword_49EB64 +
cmp eax 800h +
jb loc_44D9D0  +
and ecx dword_4A3128 +
or [esp+1Ch] ecx +
or [esp+24h] ecx +
or [esp+14h] ecx +
mov eax [esp+0Ch] +
or eax ecx +
mov ecx [esp+10h] +
mov [esp+0Ch] eax +
movzx eax al +
xor ecx dword_4A2934[eax*8] +
mov [esp+10h] ecx +
mov ecx [esp+0Ch] +
shr ecx 8 +
movzx eax cl +
shr ecx 8 +
mov [esp+0Ch] ecx +
mov ecx [esp+14h] +
xor edx (dword_4A2930+1)[eax*8] +
movzx eax cl +
shr ecx 8 +
mov [esp+14h] ecx +
shr dword ptr [esp+14h] 8 +
xor edx dword_4A2934[eax*8] +
movzx eax cl +
mov ecx [esp+0Ch] +
movzx ecx cl +
mov eax (dword_4A2930+1)[eax*8] +
xor eax (dword_4A2930+2)[ecx*8] +
mov ecx [esp+18h] +
xor ecx eax +
mov eax [esp+1Ch] +
movzx eax al +
xor ecx dword_4A2934[eax*8] +
mov eax [esp+1Ch] +
mov [esp+18h] ecx +
mov ecx [esp+0Ch] +
shr eax 8 +
mov [esp+1Ch] eax +
shr ecx 8 +
movzx eax al +
shr dword ptr [esp+1Ch] 8 +
mov ecx (dword_4A2930+3)[ecx*8] +
xor ecx (dword_4A2930+1)[eax*8] +
mov eax [esp+14h] +
movzx eax al +
xor ecx (dword_4A2930+2)[eax*8] +
mov eax [esp+24h] +
xor ebx ecx +
mov ecx [esp+14h] +
movzx eax al +
shr ecx 8 +
xor ebx dword_4A2934[eax*8] +
mov ecx (dword_4A2930+3)[ecx*8] +
mov [esp+0Ch] ebx +
mov ebx [esp+24h] +
shr ebx 8 +
movzx eax bl +
shr ebx 8 +
xor ecx (dword_4A2930+1)[eax*8] +
mov eax [esp+1Ch] +
movzx eax al +
xor ecx (dword_4A2930+2)[eax*8] +
xor [esp+10h] ecx +
mov ecx [esp+1Ch] +
shr ecx 8 +
movzx eax bl +
shr ebx 8 +
mov ecx (dword_4A2930+3)[ecx*8] +
xor ecx (dword_4A2930+2)[eax*8] +
mov eax [esp+18h] +
xor edx ecx +
xor eax (dword_4A2930+3)[ebx*8] +
mov ecx [esp+28h] +
mov [esp+18h] eax +
mov [esp+20h] edx +
mov eax [ecx+0Ch] +
shr eax 1 +
dec eax  +
mov [esp+28h] eax +
jmp loc_44DB35  +
mov edx [esp+20h] +
mov ecx [esp+10h] +
movzx eax cl +
shr ecx 8 +
mov ebx (dword_4A2930+3)[eax*8] +
movzx eax cl +
shr ecx 8 +
mov [esp+10h] ecx +
xor ebx [edi] +
mov eax (dword_4A2930+2)[eax*8] +
xor eax [edi+4] +
shr ecx 8 +
mov [esp+24h] eax +
movzx eax dl +
mov edx dword_4A2934[ecx*8] +
mov ecx [esp+20h] +
xor edx (dword_4A2930+3)[eax*8] +
shr ecx 8 +
movzx eax cl +
shr ecx 8 +
mov [esp+20h] ecx +
shr ecx 8 +
xor ebx (dword_4A2930+2)[eax*8] +
mov eax [esp+18h] +
xor edx [edi+0Ch] +
movzx eax al +
mov [esp+14h] ebx +
mov ebx dword_4A2934[ecx*8] +
mov ecx [esp+18h] +
xor ebx (dword_4A2930+3)[eax*8] +
mov eax [esp+10h] +
movzx eax al +
shr ecx 8 +
xor ebx (dword_4A2930+1)[eax*8] +
movzx eax cl +
shr ecx 8 +
mov [esp+18h] ecx +
shr ecx 8 +
xor edx (dword_4A2930+2)[eax*8] +
mov eax [esp+0Ch] +
movzx eax al +
mov ecx dword_4A2934[ecx*8] +
xor ebx [edi+8] +
xor ecx (dword_4A2930+3)[eax*8] +
mov eax [esp+20h] +
movzx eax al +
xor ecx (dword_4A2930+1)[eax*8] +
xor [esp+24h] ecx +
mov ecx [esp+0Ch] +
shr ecx 8 +
movzx eax cl +
shr ecx 8 +
xor ebx (dword_4A2930+2)[eax*8] +
movzx eax cl +
shr ecx 8 +
xor edx (dword_4A2930+1)[eax*8] +
mov ecx dword_4A2934[ecx*8] +
mov eax [esp+18h] +
movzx eax al +
xor ecx (dword_4A2930+1)[eax*8] +
xor [esp+14h] ecx +
movzx eax dl +
shr edx 8 +
mov eax (dword_4A2930+3)[eax*8] +
xor eax [edi+10h] +
mov [esp+0Ch] eax +
movzx eax dl +
shr edx 8 +
mov ecx edx +
shr ecx 8 +
mov eax (dword_4A2930+2)[eax*8] +
xor eax [edi+14h] +
mov [esp+18h] eax +
mov ecx dword_4A2934[ecx*8] +
movzx eax bl +
shr ebx 8 +
xor ecx (dword_4A2930+3)[eax*8] +
xor ecx [edi+1Ch] +
movzx eax bl +
mov [esp+10h] ecx +
mov ecx [esp+0Ch] +
xor ecx (dword_4A2930+2)[eax*8] +
mov eax [esp+24h] +
lea edi [edi+20h] +
mov [esp+0Ch] ecx +
shr ebx 8 +
movzx eax al +
mov ecx ebx +
shr ecx 8 +
mov ecx dword_4A2934[ecx*8] +
xor ecx (dword_4A2930+3)[eax*8] +
movzx eax dl +
mov edx [esp+24h] +
shr edx 8 +
xor ecx (dword_4A2930+1)[eax*8] +
xor ecx [edi-8] +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
movzx eax dl +
shr edx 8 +
xor ecx (dword_4A2930+2)[eax*8] +
mov eax [esp+14h] +
mov [esp+10h] ecx +
mov ecx edx +
shr ecx 8 +
mov esi [esp+10h] +
movzx eax al +
mov ecx dword_4A2934[ecx*8] +
xor ecx (dword_4A2930+3)[eax*8] +
movzx eax bl +
mov ebx [esp+20h] +
xor ecx (dword_4A2930+1)[eax*8] +
xor [esp+18h] ecx +
mov ecx [esp+14h] +
shr ecx 8 +
movzx eax cl +
shr ecx 8 +
xor ebx (dword_4A2930+2)[eax*8] +
movzx eax cl +
shr ecx 8 +
mov [esp+20h] ebx +
xor esi (dword_4A2930+1)[eax*8] +
mov ecx dword_4A2934[ecx*8] +
movzx eax dl +
mov edx [esp+0Ch] +
mov [esp+10h] esi +
xor ecx (dword_4A2930+1)[eax*8] +
xor edx ecx +
sub dword ptr [esp+28h] 1 +
mov [esp+0Ch] edx +
jnz loc_44DB31  +
mov ecx [esp+18h] +
movzx eax bl +
shr ebx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+43h] al +
movzx eax bl +
shr ebx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+36h] al +
movzx eax bl +
shr ebx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+39h] al +
movzx eax byte ptr (dword_4A2930+1)[ebx*8] +
mov [esp+3Ch] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+3Fh] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+42h] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+35h] al +
movzx eax byte ptr (dword_4A2930+1)[ecx*8] +
mov ecx esi +
mov [esp+38h] al +
movzx eax dl +
shr edx 8 +
mov esi [esp+2Ch] +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+3Bh] al +
movzx eax dl +
shr edx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+3Eh] al +
movzx eax dl +
shr edx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+41h] al +
movzx eax byte ptr (dword_4A2930+1)[edx*8] +
mov [esp+34h] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+37h] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+3Ah] al +
movzx eax cl +
shr ecx 8 +
movzx eax byte ptr (dword_4A2930+1)[eax*8] +
mov [esp+3Dh] al +
movzx eax byte ptr (dword_4A2930+1)[ecx*8] +
mov ecx [edi] +
xor ecx [esp+34h] +
mov [esp+40h] al +
test esi esi +
jz loc_44DE7E  +
mov eax [esi] +
jmp loc_44DE80  +
xor eax eax +
xor eax ecx +
mov ecx [esp+30h] +
mov [ecx] eax +
test esi esi +
jz loc_44DE8F  +
add esi 4 +
mov edx [edi+4] +
xor edx [esp+38h] +
test esi esi +
jz loc_44DE9E  +
mov eax [esi] +
jmp loc_44DEA0  +
xor eax eax +
xor eax edx +
mov [ecx+4] eax +
test esi esi +
jz loc_44DEAC  +
add esi 4 +
mov edx [edi+8] +
xor edx [esp+3Ch] +
test esi esi +
jz loc_44DEBB  +
mov eax [esi] +
jmp loc_44DEBD  +
xor eax eax +
xor eax edx +
mov [ecx+8] eax +
test esi esi +
jz loc_44DEC9  +
add esi 4 +
mov edx [edi+0Ch] +
xor edx [esp+40h] +
test esi esi +
jz loc_44DED8  +
mov eax [esi] +
jmp loc_44DEDA  +
xor eax eax +
pop edi  +
xor eax edx +
mov [ecx+0Ch] eax +
mov ecx [esp+40h] +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push ebp  +
lea ebp dword_4A2930 +
mov edi dword_49EB64 +
mov [ecx+100h] esp +
lea esp [ecx-200h] +
mov esi [esp+arg_2F4] +
mov eax 10h +
and eax esi +
movdqa xmm3 oword ptr [edx+eax+10h] +
movdqa oword ptr [esp+arg_2AC] xmm3 +
lea eax [edx+eax+20h] +
sub eax esi +
movdqa xmm0 oword ptr [eax+esi] +
movdqa oword ptr [esp+esi+arg_1EC] xmm0 +
add esi 10h +
cmp esi 0C0h +
jl loc_44DF3F  +
movdqa xmm4 oword ptr [eax+esi] +
movdqa xmm1 oword ptr [edx] +
movd mm1 dword ptr [edx+10h] +
mov ebx [edx+14h] +
mov ecx [edx+18h] +
mov edx [edx+1Ch] +
xor eax eax +
mov esi [ebp+eax+0] +
add eax edi +
mov esi [ebp+eax+0] +
add eax edi +
mov esi [ebp+eax+0] +
add eax edi +
mov esi [ebp+eax+0] +
add eax edi +
cmp eax 800h +
jl loc_44DF70  +
lfence eax  +
test [esp+arg_2F0] 1 +
jz loc_44E140  +
mov esi [esp+arg_2CC] +
movdqu xmm2 qword ptr [esi] +
pxor xmm2 xmm1 +
psrldq xmm1 0Eh +
movd eax xmm1 +
mov al [esi+0Fh] +
movd mm2 eax +
mov eax 1 +
movd mm3 eax +
movd eax xmm2 +
psrldq xmm2 4 +
movd edi xmm2 +
psrldq xmm2 4 +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+4] +
pxor mm1 mm7 +
movzx esi ah +
xor edx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
xor ecx [ebp+esi*8+2] +
movzx esi ah +
xor ebx [ebp+esi*8+3] +
mov eax edi +
movd edi xmm2 +
psrldq xmm2 4 +
movzx esi al +
xor ebx [ebp+esi*8+4] +
movzx esi ah +
movd mm7 dword ptr [ebp+esi*8+1] +
pxor mm1 mm7 +
shr eax 10h +
movzx esi al +
xor edx [ebp+esi*8+2] +
movzx esi ah +
xor ecx [ebp+esi*8+3] +
mov eax edi +
movd edi xmm2 +
movzx esi al +
xor ecx [ebp+esi*8+4] +
movzx esi ah +
xor ebx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+2] +
pxor mm1 mm7 +
movzx esi ah +
xor edx [ebp+esi*8+3] +
mov eax edi +
movzx esi al +
xor edx [ebp+esi*8+4] +
movzx esi ah +
xor ecx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
xor ebx [ebp+esi*8+2] +
psrldq xmm2 3 +
mov eax dword ptr [esp+arg_2AC] +
mov edi dword ptr [esp+arg_2AC+8] +
movd mm0 dword ptr [esp+arg_2AC+0Ch] +
movzx esi cl +
movd mm7 dword ptr [ebp+esi*8+3] +
pxor mm0 mm7 +
movzx esi bl +
xor edi [ebp+esi*8+3] +
movzx esi bh +
movd mm7 dword ptr [ebp+esi*8+2] +
pxor mm0 mm7 +
shr ebx 10h +
movzx esi bl +
xor eax [ebp+esi*8+1] +
movzx esi bh +
mov ebx [ebp+esi*8+4] +
xor ebx dword ptr [esp+arg_2AC+4] +
movzx esi ch +
xor eax [ebp+esi*8+2] +
shr ecx 10h +
movzx esi dl +
xor eax [ebp+esi*8+3] +
movzx esi dh +
xor ebx [ebp+esi*8+2] +
shr edx 10h +
movzx esi ch +
xor edi [ebp+esi*8+4] +
movzx esi cl +
xor ebx [ebp+esi*8+1] +
movzx esi dl +
xor edi [ebp+esi*8+1] +
movzx esi dh +
movd mm7 dword ptr [ebp+esi*8+4] +
pxor mm0 mm7 +
movd ecx xmm2 +
movd edx mm1 +
movd dword ptr [esp+arg_1EC+0Ch] mm0 +
mov dword ptr [esp+arg_1EC] eax +
mov dword ptr [esp+arg_1EC+4] ebx +
mov dword ptr [esp+arg_1EC+8] edi +
jmp loc_44E23A  +
movd mm1 dword ptr [esp+arg_2AC] +
mov ebx dword ptr [esp+arg_2AC+4] +
mov ecx dword ptr [esp+arg_2AC+8] +
mov edx dword ptr [esp+arg_2AC+0Ch] +
mov eax [esp+arg_2CC] +
movdqu xmm2 qword ptr [eax] +
mov esi [esp+arg_2D0] +
movdqu xmm5 qword ptr [esi] +
pxor xmm2 xmm1 +
pxor xmm2 xmm5 +
movd eax xmm2 +
psrldq xmm2 4 +
movd edi xmm2 +
psrldq xmm2 4 +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+4] +
pxor mm1 mm7 +
movzx esi ah +
xor edx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
xor ecx [ebp+esi*8+2] +
movzx esi ah +
xor ebx [ebp+esi*8+3] +
mov eax edi +
movd edi xmm2 +
psrldq xmm2 4 +
movzx esi al +
xor ebx [ebp+esi*8+4] +
movzx esi ah +
movd mm7 dword ptr [ebp+esi*8+1] +
pxor mm1 mm7 +
shr eax 10h +
movzx esi al +
xor edx [ebp+esi*8+2] +
movzx esi ah +
xor ecx [ebp+esi*8+3] +
mov eax edi +
movd edi xmm2 +
movzx esi al +
xor ecx [ebp+esi*8+4] +
movzx esi ah +
xor ebx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+2] +
pxor mm1 mm7 +
movzx esi ah +
xor edx [ebp+esi*8+3] +
mov eax edi +
movzx esi al +
xor edx [ebp+esi*8+4] +
movzx esi ah +
xor ecx [ebp+esi*8+1] +
shr eax 10h +
movzx esi al +
xor ebx [ebp+esi*8+2] +
movzx esi ah +
movd mm7 dword ptr [ebp+esi*8+3] +
pxor mm1 mm7 +
movd eax mm1 +
add esp [esp+308h] +
add esp 40h +
jmp loc_44E27D  +
movd ecx mm2 +
movd edx mm1 +
mov eax [esp-40h+arg_22C] +
mov ebx [esp+204h] +
xor cl ch +
and ecx 0FFh +
paddb mm2 mm3 +
xor edx [ebp+ecx*8+3] +
movzx esi dl +
xor ebx [ebp+esi*8+3] +
movzx esi dh +
mov ecx [ebp+esi*8+2] +
shr edx 10h +
xor ecx [esp+208h] +
movzx esi dh +
xor eax [ebp+esi*8+4] +
movzx esi dl +
mov edx [ebp+esi*8+1] +
xor edx [esp-40h+arg_238] +
add esp [esp+308h] +
add esp 30h +
jmp loc_44E32D  +
movd mm0 dword ptr [esp-40h+arg_1EC+0Ch] +
mov edi dword ptr [esp-40h+arg_1EC+8] +
movzx esi cl +
movd mm7 dword ptr [ebp+esi*8+3] +
pxor mm0 mm7 +
mov cl al +
movzx esi ah +
xor edi [ebp+esi*8+2] +
shr eax 10h +
movzx esi bl +
xor edi [ebp+esi*8+3] +
movzx esi bh +
movd mm7 dword ptr [ebp+esi*8+2] +
pxor mm0 mm7 +
shr ebx 10h +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+1] +
pxor mm0 mm7 +
movzx esi ah +
mov eax [ebp+esi*8+4] +
movzx esi bl +
xor eax [ebp+esi*8+1] +
movzx esi bh +
mov ebx [ebp+esi*8+4] +
movzx esi ch +
xor eax [ebp+esi*8+2] +
movzx esi cl +
xor ebx [ebp+esi*8+3] +
shr ecx 10h +
movzx esi dl +
xor eax [ebp+esi*8+3] +
movzx esi dh +
xor ebx [ebp+esi*8+2] +
shr edx 10h +
movzx esi ch +
xor edi [ebp+esi*8+4] +
movzx esi cl +
xor ebx [ebp+esi*8+1] +
movzx esi dl +
xor edi [ebp+esi*8+1] +
movzx esi dh +
movd mm7 dword ptr [ebp+esi*8+4] +
pxor mm0 mm7 +
mov ecx edi +
xor eax dword ptr [esp-40h+arg_1EC] +
xor ebx dword ptr [esp-40h+arg_1EC+4] +
movd edx mm0 +
movd mm0 [esp-40h+arg_208] +
mov edi [esp-40h+arg_204] +
movzx esi cl +
movd mm7 dword ptr [ebp+esi*8+3] +
pxor mm0 mm7 +
mov cl al +
movzx esi ah +
xor edi [ebp+esi*8+2] +
shr eax 10h +
movzx esi bl +
xor edi [ebp+esi*8+3] +
movzx esi bh +
movd mm7 dword ptr [ebp+esi*8+2] +
pxor mm0 mm7 +
shr ebx 10h +
movzx esi al +
movd mm7 dword ptr [ebp+esi*8+1] +
pxor mm0 mm7 +
movzx esi ah +
mov eax [ebp+esi*8+4] +
movzx esi bl +
xor eax [ebp+esi*8+1] +
movzx esi bh +
mov ebx [ebp+esi*8+4] +
movzx esi ch +
xor eax [ebp+esi*8+2] +
movzx esi cl +
xor ebx [ebp+esi*8+3] +
shr ecx 10h +
movzx esi dl +
xor eax [ebp+esi*8+3] +
movzx esi dh +
xor ebx [ebp+esi*8+2] +
shr edx 10h +
movzx esi ch +
xor edi [ebp+esi*8+4] +
movzx esi cl +
xor ebx [ebp+esi*8+1] +
movzx esi dl +
xor edi [ebp+esi*8+1] +
movzx esi dh +
movd mm7 dword ptr [ebp+esi*8+4] +
pxor mm0 mm7 +
mov ecx edi +
xor eax [esp-40h+arg_1FC] +
xor ebx [esp-40h+arg_200] +
movd edx mm0 +
add esp 20h +
test esp 0FFh +
jnz loc_44E27D  +
sub esp 100h +
movzx esi ch +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi dl +
xor edi [ebp+esi*8+0] +
mov [esp+2D2h] di +
movzx esi dh +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi al +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_222] di +
shr edx 10h +
movzx esi ah +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi bl +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_226] di +
shr eax 10h +
movzx esi bh +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi cl +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_22A] di +
shr ebx 10h +
movzx esi dh +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi al +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_228] di +
shr ecx 10h +
movzx esi ah +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi bl +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_21C] di +
movzx esi bh +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi cl +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_220] di +
movzx esi ch +
movzx edi byte ptr [ebp+esi*8+1] +
movzx esi dl +
xor edi [ebp+esi*8+0] +
mov [esp+0A0h+arg_224] di +
mov eax [esp+2E8h] +
mov ebx [esp+0A0h+arg_238] +
mov ecx [esp+0A0h+arg_250] +
sub ecx 10h +
movdqu xmm2 qword ptr [eax] +
pxor xmm2 xmm4 +
movdqa xmm0 oword ptr [esp+0A0h+arg_23C] +
paddd xmm0 oword ptr [esp+0A0h+arg_22C] +
movdqa oword ptr [esp+0A0h+arg_22C] xmm0 +
pxor xmm2 oword ptr [esp+0A0h+arg_21C] +
movdqu qword ptr [ebx] xmm2 +
jle loc_44E518  +
mov [esp+0A0h+arg_250] ecx +
test ecx 1 +
jnz loc_44E21E  +
jmp loc_44E123  +
xorps xmm0 xmm0 +
lea eax [esp+0A0h+arg_1BC] +
movaps oword ptr [eax-70h] xmm0 +
movaps oword ptr [eax-60h] xmm0 +
movaps oword ptr [eax-50h] xmm0 +
movaps oword ptr [eax-40h] xmm0 +
movaps oword ptr [eax-30h] xmm0 +
movaps oword ptr [eax-20h] xmm0 +
movaps oword ptr [eax-10h] xmm0 +
movaps oword ptr [eax] xmm0 +
movaps oword ptr [eax+10h] xmm0 +
movaps oword ptr [eax+20h] xmm0 +
movaps oword ptr [eax+30h] xmm0 +
movaps oword ptr [eax+40h] xmm0 +
movaps oword ptr [eax+50h] xmm0 +
movaps oword ptr [eax+60h] xmm0 +
mov esp [esp+0A0h+arg_24C] +
emms   +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebp+0Ch] +
movaps xmm0 oword ptr [eax] +
lea edx [esi-1] +
pxor xmm0 oword ptr [edi] +
movaps oword ptr [eax] xmm0 +
cmp edx 1 +
jbe loc_44E5BD  +
add edx 0FFFFFFFEh +
lea ecx [edi+10h] +
shr edx 1 +
inc edx  +
movaps xmm0 oword ptr [eax] +
add esi esi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+18h] +
sub esp 8 +
mov ecx [ebp+8] +
mov edx [ebp+0Ch] +
movaps xmm1 oword ptr [eax] +
movaps xmm0 oword ptr [ecx] +
mov eax [ebp+14h] +
pxor xmm0 xmm1 +
movaps oword ptr [ecx] xmm0 +
movaps xmm0 oword ptr [edx] +
push esi  +
mov esi [ebp+10h] +
pxor xmm0 xmm1 +
movaps oword ptr [edx] xmm0 +
push edi  +
mov edi [ebp+1Ch] +
movaps xmm0 oword ptr [esi] +
pxor xmm0 xmm1 +
movaps oword ptr [esi] xmm0 +
movaps xmm0 oword ptr [eax] +
pxor xmm0 xmm1 +
movaps oword ptr [eax] xmm0 +
cmp edi 1 +
jbe loc_44E67D  +
mov edi [ebp+18h] +
mov ecx [ebp+1Ch] +
add edi 10h +
dec ecx  +
mov [esp+0Ch] ecx +
mov ecx [ebp+8] +
nop   +
sub dword ptr [esp+0Ch] 1 +
lea edi [edi+10h] +
movaps xmm1 oword ptr [edi-10h] +
movaps xmm0 oword ptr [ecx] +
mov eax [ebp+18h] +
add edi edi +
movaps xmm0 oword ptr [ecx] +
movaps xmm1 oword ptr [eax+edi*8] +
mov eax [ebp+14h] +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
mov al byte_4A2927 +
push ebx  +
mov ebx ecx +
mov [ebp-10h] ebx +
push esi  +
push edi  +
test al al +
jnz loc_44E6EB  +
call sub_446070  +
mov al byte_4A2927 +
cmp byte_4A2924 0 +
jz loc_44E719  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+0Ch]  +
push dword ptr [ebx+118h]  +
call loc_44E960  +
add esp 1Ch +
jmp loc_44E8B8  +
test al al +
jnz loc_44E722  +
call sub_446070  +
cmp byte_4A2926 0 +
jz loc_44E8A2  +
mov eax [ebp+14h] +
cmp eax 10h +
jb loc_44E8B8  +
mov esi offset dword_4A2930 +
mov dword ptr [ebp-0Ch] 10h +
mov edi esi +
sub esi 7F0h +
and edi 0FFFh +
and esi 0FFFh +
mov eax 210h +
call sub_4506D0  +
mov ebx esp +
mov eax ebx +
neg eax  +
movzx eax al +
add ebx eax +
mov eax ebx +
and eax 0FFFh +
lea ecx [ebx+10Ch] +
and ecx 0FFFh +
cmp esi edi +
jbe loc_44E79E  +
cmp eax edi +
jb loc_44E794  +
cmp eax esi +
jb loc_44E760  +
cmp ecx edi +
jbe loc_44E7AE  +
cmp ecx esi +
jbe loc_44E760  +
jmp loc_44E7AE  +
cmp eax esi +
jb loc_44E760  +
cmp ecx esi +
jbe loc_44E760  +
cmp eax edi +
jnb loc_44E760  +
cmp ecx edi +
ja loc_44E760  +
mov ecx [ebp+18h] +
mov esi [ebp+8] +
mov edi [ebp+14h] +
mov edx [ebp+0Ch] +
mov eax [ebp+10h] +
test cl 8 +
jz loc_44E7D8  +
add esi 0FFFFFFF0h +
mov dword ptr [ebp-0Ch] 0FFFFFFF0h +
add edx 0FFFFFFF0h +
add eax 0FFFFFFF0h +
add esi edi +
add edx edi +
add eax edi +
mov [ebp-8] eax +
mov eax ecx +
mov [ebx+0E0h] esi +
and eax 4 +
jz loc_44E7EE  +
mov esi edx +
test edx edx +
jnz loc_44E7F3  +
mov esi offset oword_4A3130 +
mov [ebx+0E4h] esi +
test eax eax +
jnz loc_44E803  +
mov esi edx +
test edx edx +
jnz loc_44E808  +
mov esi offset oword_4A3130 +
mov [ebx+0E8h] esi +
test cl 2 +
mov esi [ebp-8] +
mov [ebx+0ECh] esi +
mov esi [ebp-0Ch] +
mov dword ptr [ebp-8] 0 +
cmovnz esi [ebp-8] +
mov [ebp-8] esi +
mov [ebx+0F0h] esi +
test eax eax +
jz loc_44E83E  +
test edx edx +
jz loc_44E83E  +
mov esi [ebp-0Ch] +
jmp loc_44E840  +
xor esi esi +
mov [ebx+0F4h] esi +
test eax eax +
jnz loc_44E853  +
test edx edx +
jz loc_44E853  +
mov eax [ebp-0Ch] +
jmp loc_44E855  +
xor eax eax +
mov edx [ebp-10h] +
mov esi edi +
mov [ebx+0F8h] eax +
and esi 0Fh +
mov eax [ebp-8] +
mov [ebx+0FCh] eax +
movzx eax cl +
and ecx 1 +
and eax 1 +
or ecx 2 +
sub edi eax +
sub edi esi +
mov [ebx+104h] edi +
sub ecx [edx+0Ch] +
add ecx 0Ch +
shl ecx 4 +
mov [ebx+108h] ecx +
mov ecx ebx +
mov edx [edx+118h] +
call sub_44DF00  +
mov eax esi +
jmp loc_44E8B8  +
push dword ptr [ebp+18h]  +
mov ecx ebx +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_423CF0  +
lea esp [ebp-1Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push ebx  +
mov eax edx +
neg eax  +
mov ebx [edx+104h] +
and eax 0Fh +
mov ecx [edx+100h] +
add eax edx +
push ebp  +
push esi  +
mov esi [esp+0Ch+arg_0] +
push edi  +
cmp ebx eax +
jnz loc_44E918  +
cmp esi 3Ch +
ja loc_44E931  +
cmp ecx esi +
jbe loc_44E905  +
sub ecx esi +
lea edi [ebx+esi*4] +
xor eax eax +
stos   +
pop edi  +
mov [edx+100h] esi +
pop esi  +
pop ebp  +
mov [edx+104h] ebx +
pop ebx  +
retn 4  +
cmp esi 3Ch +
ja loc_44E931  +
cmp byte ptr [edx+0F9h] 0 +
jnz loc_44E931  +
mov byte ptr [edx+0F9h] 1 +
mov ebp eax +
jmp loc_44E933  +
xor ebp ebp +
cmp ebx eax +
jnz loc_44E944  +
mov edi ebx +
mov byte ptr [edx+0F9h] 0 +
xor eax eax +
stos   +
pop edi  +
mov [edx+100h] esi +
pop esi  +
mov [edx+104h] ebp +
pop ebp  +
pop ebx  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF0h +
sub esp 68h +
mov edx [ebp+20h] +
mov ecx 0 +
test dl 3 +
mov eax 10h +
push esi  +
mov esi [ebp+14h] +
cmovnz eax ecx +
mov [esp+18h] eax +
mov ecx esi +
neg ecx  +
lea eax ds:0[edx*8] +
not eax  +
sbb ecx ecx +
and eax 10h +
and ecx 10h +
mov [esp+1Ch] eax +
mov eax [ebp+18h] +
test dl 8 +
mov edx [ebp+1Ch] +
push edi  +
mov edi [ebp+10h] +
mov [esp+18h] ecx +
jz loc_44E9DF  +
add eax 0FFFFFFF0h +
add edi 0FFFFFFF0h +
add eax edx +
add esi 0FFFFFFF0h +
mov [esp+14h] eax +
neg ecx  +
mov eax [esp+1Ch] +
add edi edx +
neg eax  +
mov [esp+18h] ecx +
mov [esp+1Ch] eax +
add esi edx +
mov eax [esp+20h] +
neg eax  +
mov [esp+20h] eax +
jmp loc_44E9E3  +
mov [esp+14h] eax +
mov eax [ebp+20h] +
mov ecx [esp+18h] +
test al 10h +
jz loc_44EB5C  +
cmp edx 40h +
jb loc_44EB5C  +
mov [esp+24h] eax +
and eax 4 +
and dword ptr [esp+24h] 1 +
shr edx 6 +
mov [esp+28h] eax +
mov [esp+2Ch] edx +
cmp dword ptr [esp+24h] 0 +
movups xmm4 oword ptr [edi] +
movaps oword ptr [esp+60h] xmm4 +
jz loc_44EA46  +
movaps xmm0 oword ptr ds:oword_48B740 +
movaps xmm1 xmm0 +
movaps xmm2 xmm0 +
paddd xmm1 xmm4 +
movaps xmm3 xmm0 +
paddd xmm2 xmm1 +
paddd xmm3 xmm2 +
paddd xmm0 xmm3 +
movups oword ptr [edi] xmm0 +
jmp loc_44EA5F  +
mov eax [esp+1Ch] +
add edi eax +
movups xmm1 oword ptr [edi] +
add edi eax +
movups xmm2 oword ptr [edi] +
add edi eax +
movups xmm3 oword ptr [edi] +
add edi eax +
mov eax [esp+28h] +
movaps oword ptr [esp+50h] xmm3 +
movaps oword ptr [esp+40h] xmm2 +
movaps oword ptr [esp+30h] xmm1 +
test eax eax +
jz loc_44EAAA  +
movups xmm0 oword ptr [esi] +
add esi ecx +
pxor xmm0 xmm4 +
movaps oword ptr [esp+60h] xmm0 +
movups xmm0 oword ptr [esi] +
add esi ecx +
pxor xmm0 xmm1 +
movaps oword ptr [esp+30h] xmm0 +
movups xmm0 oword ptr [esi] +
add esi ecx +
pxor xmm0 xmm2 +
movaps oword ptr [esp+40h] xmm0 +
movups xmm0 oword ptr [esi] +
add esi ecx +
pxor xmm0 xmm3 +
movaps oword ptr [esp+50h] xmm0 +
push dword ptr [ebp+0Ch]  +
lea eax [esp+54h] +
push dword ptr [ebp+8]  +
push eax  +
lea eax [esp+4Ch] +
push eax  +
lea eax [esp+40h] +
push eax  +
lea eax [esp+74h] +
push eax  +
call loc_44E5E0  +
add esp 18h +
test esi esi +
jz loc_44EB09  +
cmp dword ptr [esp+28h] 0 +
jnz loc_44EB09  +
movups xmm0 oword ptr [esi] +
mov ecx [esp+18h] +
add esi ecx +
pxor xmm0 oword ptr [esp+60h] +
movups xmm1 oword ptr [esi] +
add esi ecx +
pxor xmm1 oword ptr [esp+30h] +
movups xmm2 oword ptr [esi] +
add esi ecx +
pxor xmm2 oword ptr [esp+40h] +
movups xmm3 oword ptr [esi] +
add esi ecx +
pxor xmm3 oword ptr [esp+50h] +
jmp loc_44EB21  +
movaps xmm0 oword ptr [esp+60h] +
movaps xmm1 oword ptr [esp+30h] +
movaps xmm2 oword ptr [esp+40h] +
movaps xmm3 oword ptr [esp+50h] +
mov ecx [esp+18h] +
mov eax [esp+14h] +
mov edx [esp+20h] +
movups oword ptr [eax] xmm0 +
add eax edx +
movups oword ptr [eax] xmm1 +
add eax edx +
movups oword ptr [eax] xmm2 +
add eax edx +
movups oword ptr [eax] xmm3 +
add eax edx +
mov edx [ebp+1Ch] +
sub edx 40h +
mov [esp+14h] eax +
sub dword ptr [esp+2Ch] 1 +
mov eax [esp+28h] +
mov [ebp+1Ch] edx +
jnz loc_44EA12  +
mov eax [ebp+20h] +
cmp edx 10h +
jb loc_44EBFB  +
mov ecx eax +
and eax 4 +
and ecx 1 +
mov [ebp+20h] eax +
shr edx 4 +
mov [esp+28h] ecx +
mov [esp+2Ch] edx +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_44ECDF  +
call sub_4612BD  +
jmp loc_44ECF3  +
cmp eax 8 +
jge loc_44ECF3  +
imul eax eax +
add eax offset stru_4A19B8 +
push eax  +
call sub_44F5D1  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_475C10  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_44EDD1  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
push esi  +
push ecx  +
call sub_4505AC  +
call sub_4505AC  +
push 0  +
mov eax [ebp+arg_0] +
push ecx  +
cmp byte_4A1AA5 0 +
mov eax [ebp+arg_0] +
push ecx  +
push ebx  +
push esi  +
push 0  +
mov ecx [ebp+arg_0] +
push ebx  +
sub esp 68h +
push ecx  +
push [ebp+lpCharType]  +
push ecx  +
push ebx  +
push ecx  +
push ecx  +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov eax dword_49E008 +
mov eax [ebp+arg_0] +
push esi  +
call ds:GetModuleHandleW  +
push esi  +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
call sub_4622D6  +
call sub_450959  +
call sub_40B980  +
push eax  +
call sub_464178  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_450915  +
test al al +
jnz loc_44FE19  +
push dword ptr [ebp-20h]  +
call sub_462E37  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_44FE24  +
call sub_462E19  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_4506FC  +
cmp ecx dword_49E070 +
jmp loc_44FE78  +
push [ebp+arg_0]  +
pop ebp  +
mov eax dword_49E070 +
mov eax [ebp+arg_0] +
call sub_450C89  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_450A10  +
call sub_450C89  +
cmp byte_4A1C54 0 +
mov eax dword_49E070 +
push [ebp+arg_0]  +
push edi  +
call sub_4502A5  +
call sub_4502A5  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
test [ebp+arg_0] 1 +
retn   +
***
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
mov ecx [ebp-0Ch] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_450639  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_450682  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_4506C3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_450690  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4506BE  +
cmp edx [esp+arg_4] +
ja loc_4506BE  +
jb loc_4506BF  +
cmp eax [esp+arg_0] +
jbe loc_4506BF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_450CA0  +
***
sub esp 14h +
push 0  +
call sub_403870  +
xor eax eax +
sub esp 324h +
mov ecx eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_4A1FB0 0 +
mov esi offset unk_4966C0 +
mov esi offset unk_4966C8 +
mov ebx offset unk_4966C8 +
cmp esi ebx +
jnb loc_450A01  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_4509F9  +
mov ecx edi +
call j_nullsub_1  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_4509EA  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
sub esp 0Ch +
lea ecx [ebp+var_C] +
call sub_450A86  +
push offset unk_49BC2C  +
lea eax [ebp+var_C] +
push eax  +
call sub_452780  +
int 3  +
***
push ebp  +
mov ebp esp +
and dword_4A1FB4 0 +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_49E0A0 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_450C82  +
and dword ptr [ebp-14h] 0 +
xor eax eax +
or dword_49E0A0 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_4A1FB4 ebx +
lea edi [ebp-2Ch] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-2Ch] +
mov ecx [ebp-20h] +
mov [ebp-0Ch] eax +
xor ecx 49656E69h +
mov eax [ebp-24h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-28h] +
xor eax 756E6547h +
or ecx eax +
neg ecx  +
push 1  +
pop eax  +
sbb cl cl +
push 0  +
add cl 1 +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jz loc_450BBF  +
mov eax [ebp-2Ch] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_450BAE  +
cmp eax 20660h +
jz loc_450BAE  +
cmp eax 20670h +
jz loc_450BAE  +
cmp eax 30650h +
jz loc_450BAE  +
cmp eax 30660h +
jz loc_450BAE  +
cmp eax 30670h +
jnz loc_450BBF  +
mov edi dword_4A1FB8 +
or edi 1 +
mov dword_4A1FB8 edi +
jmp loc_450BC5  +
mov edi dword_4A1FB8 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-20h] +
mov [ebp-1Ch] eax +
mov eax [ebp-24h] +
mov [ebp-8] eax +
mov [ebp-18h] eax +
jl loc_450C0C  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-2Ch] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-28h] +
test eax 200h +
mov [ebp-14h] eax +
mov eax [ebp-8] +
jz loc_450C0C  +
or edi 2 +
mov dword_4A1FB8 edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_450C82  +
or dword_49E0A0 4 +
mov dword_4A1FB4 2 +
test eax 8000000h +
jz loc_450C82  +
test eax 10000000h +
jz loc_450C82  +
xor ecx ecx +
xor eax eax +
cmp dword_4A3B00 eax +
setnz al  +
retn   +
***
sub ecx eax +
call sub_450D20  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_453150  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
jmp $+5  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_450D6C  +
push dword ptr [esi]  +
call sub_45B0EB  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi off_49E0B0 +
mov ecx esi +
push 0  +
push [ebp+arg_0]  +
call j_nullsub_1  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov ecx [ebp+arg_4] +
xor eax eax +
mov [ebp+pperrinfo] eax +
push esi  +
test ecx ecx +
jz loc_450E1A  +
mov esi [ecx] +
lea eax [ebp+var_8] +
push eax  +
push offset unk_47E274  +
push ecx  +
mov esi [esi] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
test eax eax +
js loc_450E17  +
mov eax [ebp+var_8] +
push edi  +
push [ebp+arg_8]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+0Ch] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
mov edi eax +
mov eax [ebp+var_8] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
test edi edi +
pop edi  +
jnz loc_450E17  +
lea eax [ebp+pperrinfo] +
push eax  +
push 0  +
call ds:GetErrorInfo  +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+pperrinfo] +
mov [ebp+pperrinfo] eax +
jmp loc_450E1A  +
mov eax [ebp+pperrinfo] +
mov esi off_49E0B0 +
mov ecx esi +
push eax  +
push [ebp+arg_0]  +
call j_nullsub_1  +
call esi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_47E284 +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_450EBA  +
cmp [ebp+arg_8] 0 +
jz loc_450EBA  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_47E284 +
test ecx ecx +
jz loc_450EF1  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_450F00  +
push eax  +
call ds:LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_47E284 +
test ecx ecx +
jz loc_450F34  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_450F42  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_450F53  +
push 10h  +
push edi  +
call sub_44FE8C  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
lea ecx [ebp-10h] +
push 0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_450E80  +
push offset unk_49BC68  +
lea eax [ebp-10h] +
push eax  +
call sub_452780  +
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_450FB0  +
cmp edi eax +
jb loc_451244  +
cmp ecx 20h +
jb loc_45148B  +
cmp ecx 80h +
jnb loc_450FD4  +
bt dword_49E0A0 1 +
jb loc_45145D  +
jmp loc_4511B7  +
bt dword_4A1FB8 1 +
jnb loc_450FE7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_451000  +
bt dword_49E0A0 1 +
jb loc_4513E0  +
bt dword_4A1FB8 0 +
jnb loc_4511B7  +
test edi 3 +
jnz loc_4511B7  +
test esi 3 +
jnz loc_4511D2  +
bt edi 2 +
jnb loc_451039  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_451050  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_4510BD  +
bt esi 3 +
jnb loc_451116  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_45116C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_451184  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_45116C  +
***
bt ecx 2 +
jnb loc_451197  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_4511AE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_4511F4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_4511D2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_4511BF  +
mov edx ecx +
cmp ecx 20h +
jb loc_45148B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_4511F4[edx*4]  +
jmp dword ptr ds:loc_451204[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_4513A4  +
bt dword_49E0A0 1 +
jb loc_4512F5  +
test edi 3 +
jz loc_45127D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_451270  +
cmp ecx 20h +
jb loc_4513A4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_4512A0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_45130C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_4512FD  +
cmp ecx 80h +
jb loc_45137C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_45130C  +
cmp ecx 20h +
jb loc_4513A4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_451381  +
test ecx 0FFFFFFFCh +
jz loc_4513C1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_4513AC  +
test ecx ecx +
jz loc_4513D4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_4513C5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_45145D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_451400  +
test ecx ecx +
jz loc_4514C0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_45148B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_451470  +
and ecx 1Fh +
jz loc_4514C0  +
mov eax ecx +
shr ecx 2 +
jz loc_4514A6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_451497  +
mov ecx eax +
and ecx 3 +
jz loc_4514C0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4514AD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_450A10  +
push esi  +
and dword ptr [ecx+4] 0 +
call sub_450A10  +
mov eax [ebp-2Ch] +
call sub_4505E0  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 44h +
push ecx  +
sub esp 18h +
push ebx  +
pop eax  +
mov ecx [ebp+arg_4] +
call sub_450A10  +
mov esp [ebp-18h] +
call sub_450A10  +
mov eax [ebp+arg_0] +
call sub_450A10  +
call sub_455192  +
push ebx  +
mov edx [ebp+arg_0] +
call sub_455192  +
push edi  +
push esi  +
pop ebp  +
mov eax [ebp+arg_0] +
sub esp 0Ch +
xor ecx ecx +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
cmpxchg [ebx] ecx +
test eax eax +
jnz loc_452404  +
push esi  +
push 2800h  +
push offset sub_45B0EB  +
push offset sub_4522F9  +
push eax  +
lea ecx [ebx+5] +
mov [ebp+var_4] eax +
push ecx  +
push eax  +
call sub_45AC93  +
mov esi eax +
add esp 18h +
test esi esi +
jz loc_4523F9  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_452384  +
sub ecx edx +
jz loc_4523A0  +
cmp byte ptr [esi+ecx-1] 20h +
jnz loc_4523A0  +
mov byte ptr [esi+ecx-1] 0 +
sub ecx 1 +
jnz loc_45238F  +
lea eax [ecx+1] +
mov [ebp+var_8] eax +
add eax 4 +
push edi  +
push eax  +
call sub_461ADB  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_4523EE  +
and dword ptr [edi] 0 +
lea eax [edi+4] +
push esi  +
push [ebp+var_8]  +
mov [ebp+var_C] edi +
push eax  +
mov [ebp+var_4] eax +
call sub_460AAE  +
mov ecx [ebp+var_4] +
add esp 0Ch +
xor eax eax +
cmpxchg [ebx] ecx +
test eax eax +
jnz loc_4523EE  +
push [ebp+var_C]  +
xor edi edi +
push [ebp+arg_4]  +
call ds:InterlockedPushEntrySList  +
mov eax [ebp+var_4] +
push edi  +
mov [ebp+var_4] eax +
call sub_461E45  +
pop ecx  +
pop edi  +
push esi  +
call sub_461E45  +
mov eax [ebp+var_4] +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
xor eax dword_49E070 +
and ecx 1Fh +
ror eax cl +
retn   +
***
retn   +
***
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_45252F  +
mov eax dword_4A1FB4 +
cmp eax 1 +
jle loc_452627  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_452553  +
movups xmm0 oword ptr [edi] +
jmp loc_45257E  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_452576  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_45255D  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4525EA  +
mov ecx [ebp-8] +
jmp loc_452581  +
***
adc al 4Ah +
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_452601  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_452601  +
movups xmm1 oword ptr [ecx] +
jmp loc_4525B3  +
***
cmp ax cx +
jz loc_4525AE  +
add edx esi +
jmp loc_452581  +
***
cmp [edi] ax +
jnz loc_452619  +
add edi esi +
add ecx esi +
jmp loc_4525B3  +
***
add edx esi +
jmp loc_45259A  +
***
add ecx 10h +
jmp loc_452648  +
***
add edx 10h +
add edi 10h +
jmp loc_452698  +
***
cmp [edx] ax +
jnz loc_452702  +
add edx esi +
add edi esi +
jmp loc_452698  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_452648  +
***
sub esp 20h +
sub esp 18h +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_455192  +
push ecx  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp+var_4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_4520DA  +
add esp 20h +
mov [ebp+var_8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_452BF0  +
cmp edi eax +
jb loc_452E84  +
cmp ecx 20h +
jb loc_4530CB  +
cmp ecx 80h +
jnb loc_452C14  +
bt dword_49E0A0 1 +
jb loc_45309D  +
jmp loc_452DF7  +
bt dword_4A1FB8 1 +
jnb loc_452C27  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_452C40  +
bt dword_49E0A0 1 +
jb loc_453020  +
bt dword_4A1FB8 0 +
jnb loc_452DF7  +
test edi 3 +
jnz loc_452DF7  +
test esi 3 +
jnz loc_452E12  +
bt edi 2 +
jnb loc_452C79  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_452C90  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_452CFD  +
bt esi 3 +
jnb loc_452D56  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_452DAC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_452DC4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_452DAC  +
***
bt ecx 2 +
jnb loc_452DD7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_452DEE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_452E34[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_452E12  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_452DFF  +
mov edx ecx +
cmp ecx 20h +
jb loc_4530CB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_452E34[edx*4]  +
jmp dword ptr ds:loc_452E44[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_452FE4  +
bt dword_49E0A0 1 +
jb loc_452F35  +
test edi 3 +
jz loc_452EBD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_452EB0  +
cmp ecx 20h +
jb loc_452FE4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_452EE0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_452F4C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_452F3D  +
cmp ecx 80h +
jb loc_452FBC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_452F4C  +
cmp ecx 20h +
jb loc_452FE4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_452FC1  +
test ecx 0FFFFFFFCh +
jz loc_453001  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_452FEC  +
test ecx ecx +
jz loc_453014  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_453005  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_453020  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_453110  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_45309D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_453040  +
test ecx ecx +
jz loc_453100  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_4530CB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_4530B0  +
and ecx 1Fh +
jz loc_453100  +
mov eax ecx +
shr ecx 2 +
jz loc_4530E6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_4530D7  +
mov ecx eax +
and ecx 3 +
jz loc_453100  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4530ED  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_45312C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_453123  +
shr eax 2 +
jz loc_45313E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_453131  +
pop ecx  +
jmp loc_45302D  +
***
mov ecx [esp+arg_8] +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_4549A2  +
sub eax 1 +
jz loc_454991  +
sub eax 1 +
jz loc_454962  +
sub eax 1 +
jz loc_454918  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_454890  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_453792  +
mov eax [esi] +
cmp eax [edx] +
jz loc_45337B  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_45331B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_45333D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_45335F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_45337D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45337D  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_45340C  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_4533AC  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_4533CE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_4533F0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_45340E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45340E  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_45349D  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_45343D  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_45345F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_453481  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_45349F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45349F  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_45352E  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_4534CE  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_4534F0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_453512  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_453530  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453530  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_4535C4  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_453564  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_453586  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_4535A8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_4535C6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4535C6  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_453655  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_4535F5  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_453617  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_453639  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_453657  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453657  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_4536E6  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_453686  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_4536A8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_4536CA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_4536E8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4536E8  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_453777  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_453717  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_453739  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_45375B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_453779  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453779  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_4532F1  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_453BB4  +
jmp ds:off_4549AA[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_453833  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_4537D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_4537F5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_453817  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_453835  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453835  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_4538CA  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_45386A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_45388C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_4538AE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_4538CC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4538CC  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_453961  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_453901  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_453923  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_453945  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_453963  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453963  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_4539F8  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_453998  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_4539BA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_4539DC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_4539FA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4539FA  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_453A90  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_453A30  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_453A52  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_453A74  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_453A92  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453A92  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_453B27  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_453AC7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_453AE9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_453B0B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_453B29  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453B29  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_453BAE  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_453B56  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_453B74  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_453B92  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_453BB0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453BB0  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_4549A4  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_453C3B  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_453BE3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_453C01  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_453C1F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_453C3D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453C3D  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_453CD2  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_453C72  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_453C94  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_453CB6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_453CD4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453CD4  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_453D69  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_453D09  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_453D2B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_453D4D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_453D6B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453D6B  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_453E00  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_453DA0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_453DC2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_453DE4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_453E02  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453E02  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_453E97  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_453E37  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_453E59  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_453E7B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_453E99  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453E99  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_453F2F  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_453ECF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_453EF1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_453F13  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_453F31  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453F31  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_453FC6  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_453F66  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_453F88  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_453FAA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_453FC8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453FC8  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_453BB6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_453BB6  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_454080  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_454020  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_454042  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_454064  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_454082  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454082  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_454117  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_4540B7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_4540D9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_4540FB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_454119  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454119  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_4541AE  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_45414E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_454170  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_454192  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_4541B0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4541B0  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_454245  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_4541E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_454207  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_454229  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_454247  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454247  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_4542DC  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_45427C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_45429E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_4542C0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_4542DE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4542DE  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_454374  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_454314  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_454336  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_454358  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_454376  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454376  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_45440B  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_4543AB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_4543CD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_4543EF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_45440D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45440D  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_453BB4  +
jmp loc_45486D  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_4544B6  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_454456  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_454478  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_45449A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_4544B8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4544B8  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_45454D  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_4544ED  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_45450F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_454531  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_45454F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45454F  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_4545E4  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_454584  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_4545A6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_4545C8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_4545E6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4545E6  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_45467B  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_45461B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_45463D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_45465F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_45467D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_45467D  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_454713  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_4546B3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_4546D5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_4546F7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_454715  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454715  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_4547AA  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_45474A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_45476C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_45478E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_4547AC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4547AC  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_454841  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_4547E1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_454803  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_454825  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_454843  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_454843  +
xor ecx ecx +
test ecx ecx +
jnz loc_453BB6  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_45486D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_453BB6  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_453FD0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_453FC8  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_4548B3  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_4548D5  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_4548F7  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_454911  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_4549A4  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_45493A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_454958  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_4548FF  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_454984  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_4549A4  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_4548FF  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_4548FF  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
sub esp 24Ch +
sub esp 24Ch +
xor eax eax +
pop ecx  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_454BDF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_44FE3E  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_44FE3E  +
***
sub esp 1Ch +
call sub_45AD28  +
call sub_454BAF  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_49E070 +
cmp [ebp+arg_0] 0 +
mov esi [eax+4] +
mov eax [ebp+lpMem] +
call sub_4551A0  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
sub esp 4 +
push ebx  +
push ebx  +
push esi  +
mov eax [ebp+arg_0] +
sub esp 2Ch +
sub esp 24h +
or dword ptr [ecx] 0FFFFFFFFh +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
sub esp 20h +
push ecx  +
push ecx  +
push ecx  +
mov edx [ecx] +
mov edx [ecx] +
mov edx [ecx] +
mov edx [ecx] +
push esi  +
push esi  +
push ebx  +
push esi  +
push esi  +
cmp byte ptr [ecx+4] 3 +
cmp dword ptr [edi+4] 0 +
mov eax dword_4A2078 +
push esi  +
sub esp 64h +
push esi  +
sub esp 18h +
mov eax dword_4A2068 +
mov eax dword_4A2068 +
sub esp 10h +
mov ecx dword_4A2068 +
sub esp 1Ch +
mov al [ecx] +
push ebx  +
push esi  +
push edi  +
test al al +
jz loc_457190  +
and [ebp+var_C] 0 +
mov edi 0FFFF0000h +
and [ebp+var_8] edi +
inc ecx  +
movzx esi al +
or ebx 0FFFFFFFFh +
push 4Eh  +
mov eax esi +
mov dword_4A2068 ecx +
pop edx  +
mov [ebp+var_1] 0 +
cmp eax edx +
jg loc_456E71  +
jz loc_45707A  +
sub eax 43h +
cmp eax 0Ah +
ja loc_457048  +
movzx eax ds:byte_4571C4[eax] +
jmp ds:off_4571AC[eax*4]  +
push offset aChar  +
lea ecx [ebp+var_C] +
call sub_455669  +
jmp loc_457090  +
push offset aShort  +
jmp loc_456E48  +
push offset aInt  +
jmp loc_456E48  +
push offset aLong  +
jmp loc_456E48  +
push offset aFloat  +
jmp loc_456E48  +
cmp eax 4Fh +
jz loc_45706D  +
jle loc_457048  +
cmp eax 53h +
jle loc_457041  +
cmp eax 58h +
jz loc_457037  +
cmp eax 5Fh +
jnz loc_457048  +
mov bl [ecx] +
inc ecx  +
movzx eax bl +
mov dword_4A2068 ecx +
cmp eax edx +
jg loc_456F50  +
jz loc_456F49  +
cmp eax 47h +
jg loc_456F25  +
cmp eax 46h +
jge loc_456F1E  +
test eax eax +
jz loc_456F08  +
cmp eax 24h +
jz loc_456EE6  +
add eax 0FFFFFFBCh +
cmp eax 1 +
ja loc_456FA2  +
push offset a__int8  +
lea ecx [ebp+var_C] +
call sub_455669  +
jmp loc_457093  +
push [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_456DE4  +
push eax  +
push offset a__w64  +
push [ebp+arg_0]  +
call sub_4558AB  +
add esp 14h +
jmp loc_4571A0  +
dec ecx  +
mov dword_4A2068 ecx +
lea ecx [ebp+var_C] +
push 1  +
call sub_45569B  +
jmp loc_457093  +
push offset a__int16  +
jmp loc_456ED9  +
cmp eax 49h +
jle loc_456F42  +
cmp eax 4Bh +
jle loc_456F3B  +
cmp eax 4Dh +
jg loc_456FA2  +
push offset a__int128  +
jmp loc_456ED9  +
push offset a__int64  +
jmp loc_456ED9  +
push offset a__int32  +
jmp loc_456ED9  +
push offset aBool  +
jmp loc_456ED9  +
cmp eax 4Fh +
jz loc_456FD4  +
cmp eax 52h +
jz loc_456FCA  +
cmp eax 53h +
jz loc_456FC0  +
cmp eax 55h +
jz loc_456FB6  +
cmp eax 57h +
jz loc_456FAC  +
add eax 0FFFFFFA8h +
cmp eax 1 +
ja loc_456FA2  +
lea eax [ebp+var_1C] +
dec ecx  +
push eax  +
mov dword_4A2068 ecx +
call sub_457D99  +
pop ecx  +
mov ecx [eax] +
mov edx [eax+4] +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
test ecx ecx +
jnz loc_457093  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_4571A3  +
push offset aUnknown_0  +
jmp loc_456ED9  +
push offset aWchar_t  +
jmp loc_456ED9  +
push offset aChar32_t  +
jmp loc_456ED9  +
push offset aChar16_t  +
jmp loc_456ED9  +
push offset aUnknown_1  +
jmp loc_456ED9  +
push 0FFFFFFFEh  +
pop ebx  +
mov ecx [ebp+arg_4] +
and [ebp+var_C] 0 +
and [ebp+var_8] edi +
mov eax [ecx] +
mov [ebp+var_1C] eax +
mov eax [ecx+4] +
mov [ebp+var_18] eax +
cmp ebx 0FFFFFFFEh +
jnz loc_457139  +
mov esi 800h +
or eax esi +
mov [ebp+var_18] eax +
lea eax [ebp+var_1C] +
push offset unk_48741C  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_45907E  +
mov edx [ebp+var_10] +
add esp 10h +
test edx esi +
jnz loc_45702F  +
push offset asc_47E664  +
lea ecx [ebp+var_14] +
call sub_455A0E  +
mov edx [ebp+var_10] +
mov ecx [ebp+var_14] +
jmp loc_456F95  +
push offset aVoid  +
jmp loc_456E48  +
mov ebx esi +
and ebx 3 +
jmp loc_457087  +
lea eax [ebp+var_1C] +
dec ecx  +
push eax  +
mov dword_4A2068 ecx +
call sub_457D99  +
pop ecx  +
mov ecx [eax] +
mov edx [eax+4] +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
test ecx ecx +
jnz loc_457090  +
jmp loc_456F95  +
push offset aLong_0  +
lea ecx [ebp+var_C] +
call sub_455669  +
push offset aDouble  +
lea ecx [ebp+var_C] +
call sub_455A0E  +
cmp ebx 0FFFFFFFFh +
jnz loc_456FD7  +
mov bl [ebp+var_1] +
sub esi 43h +
jz loc_4570D7  +
push 2  +
pop ecx  +
sub esi ecx +
jz loc_4570C8  +
sub esi ecx +
jz loc_4570C8  +
sub esi ecx +
jz loc_4570C8  +
sub esi ecx +
jz loc_4570C8  +
sub esi 14h +
jnz loc_4570FF  +
movzx eax bl +
sub eax 45h +
jz loc_4570C8  +
sub eax ecx +
jz loc_4570C8  +
sub eax ecx +
jz loc_4570C8  +
sub eax ecx +
jz loc_4570C8  +
sub eax ecx +
jnz loc_4570FF  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push offset aUnsigned  +
jmp loc_4570E4  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push offset aSigned  +
lea ecx [ebp+var_14] +
call sub_4553D2  +
mov ecx eax +
call sub_4558F3  +
mov eax [ebp+var_1C] +
mov [ebp+var_C] eax +
mov eax [ebp+var_18] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jz loc_457129  +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push 20h  +
lea ecx [ebp+var_14] +
call sub_45563D  +
mov ecx eax +
call sub_4558F3  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_C] +
call sub_45597B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov ecx [ebp+var_8] +
mov [eax+4] ecx +
jmp loc_4571A3  +
cmp dword ptr [ecx] 0 +
jnz loc_457176  +
test bl 1 +
jz loc_457164  +
push offset aConst  +
lea ecx [ebp+var_C] +
call sub_455669  +
test bl 2 +
jz loc_457176  +
push offset aVolatile  +
lea ecx [ebp+var_C] +
call sub_455A0E  +
jmp loc_457176  +
test bl 2 +
jz loc_457176  +
push offset aVolatile_0  +
lea ecx [ebp+var_C] +
call sub_455669  +
push offset asc_48FD44  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
call sub_45907E  +
add esp 10h +
jmp loc_4571A0  +
push [ebp+arg_4]  +
push 1  +
push [ebp+arg_0]  +
call sub_4558CF  +
add esp 0Ch +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
sub esp 54h +
sub esp 10h +
sub esp 18h +
mov eax dword_4A2078 +
mov ecx dword_4A2068 +
mov ecx dword_4A2068 +
mov eax dword_4A2078 +
sub esp 18h +
mov eax dword_4A2068 +
and [ebp+var_8] 0 +
and [ebp+var_4] 0FFFF0000h +
mov al [eax] +
test al al +
jz loc_457F6F  +
movsx eax al +
add eax 0FFFFFFD0h +
cmp eax 7 +
ja loc_457F6B  +
jmp ds:off_457F82[eax*4]  +
push offset aChar_0  +
jmp loc_457F06  +
push offset aShort_0  +
jmp loc_457F06  +
push offset aInt_0  +
jmp loc_457F06  +
push offset aLong_0  +
lea ecx [ebp+var_8] +
call sub_455669  +
mov eax dword_4A2068 +
movsx eax byte ptr [eax] +
inc dword_4A2068  +
sub eax 31h +
jz loc_457F33  +
dec eax  +
sub eax 1 +
jz loc_457F33  +
dec eax  +
sub eax 1 +
jz loc_457F33  +
dec eax  +
sub eax 1 +
jnz loc_457F5B  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aUnsigned  +
lea ecx [ebp+var_18] +
call sub_4553D2  +
mov ecx eax +
call sub_4558F3  +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
jmp loc_457F7C  +
push 2  +
jmp loc_457F71  +
push 1  +
mov ecx [ebp+arg_0] +
call sub_45540C  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 18h +
mov ecx dword_4A2068 +
test edi edi +
cmp dword ptr [ecx+4] 1 +
mov ecx [ecx+4] +
push esi  +
mov edx [ecx+8] +
sub esp 18h +
push esi  +
mov ecx dword_4A2068 +
sub esp 28h +
sub esp 10h +
mov eax dword_4A2068 +
push ecx  +
push ecx  +
mov eax dword_4A2068 +
sub esp 0F4h +
sub esp 18h +
push ecx  +
push edi  +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
cmp dword ptr [ebx] 0 +
jz loc_459839  +
test esi esi +
jnz loc_459823  +
call sub_45AB5E  +
push esi  +
mov ecx offset dword_4A2084 +
lea edi [eax+1] +
push edi  +
call sub_45868C  +
mov esi eax +
test esi esi +
jz loc_459840  +
jmp loc_459826  +
mov edi [ebp+arg_4] +
lea eax [edi-1] +
mov ecx ebx +
add eax esi +
push eax  +
push esi  +
call sub_4597C7  +
mov byte ptr [eax] 0 +
jmp loc_459840  +
test esi esi +
jz loc_459840  +
mov byte ptr [esi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
mov ecx [ecx+4] +
push ebx  +
push dword ptr [ecx+8]  +
sub esp 10h +
mov eax [ebp+arg_4] +
mov eax dword_4A2068 +
sub esp 7Ch +
sub esp 94h +
mov eax dword_4A2068 +
sub esp 10h +
mov eax dword_4A2068 +
push ecx  +
mov edx dword_4A2068 +
push ebx  +
push esi  +
push edi  +
mov esi 4000h +
xor ecx ecx +
cmp byte ptr [edx] 5Fh +
jnz loc_45A24A  +
inc edx  +
mov ecx esi +
mov dword_4A2068 edx +
mov al [edx] +
cmp al 41h +
jl loc_45A258  +
cmp al 5Ah +
jle loc_45A2E2  +
cmp al 24h +
jnz loc_45A5A4  +
inc edx  +
mov [ebp+var_1] 0 +
mov dword_4A2068 edx +
movsx eax byte ptr [edx] +
cmp eax 42h +
jg loc_45A46A  +
jz loc_45A45F  +
test eax eax +
jz loc_45A454  +
cmp eax 24h +
jnz loc_45A42C  +
cmp byte ptr [edx+1] 50h +
jnz loc_45A295  +
inc edx  +
inc edx  +
mov dword_4A2068 edx +
movsx eax byte ptr [edx] +
cmp eax 4Ah +
jg loc_45A2BE  +
jz loc_45A3F5  +
sub eax 0 +
jz loc_45A3EB  +
sub eax 46h +
jz loc_45A2D6  +
dec eax  +
sub eax 1 +
jmp loc_45A2D4  +
cmp eax 4Ch +
jl loc_45A33D  +
cmp eax 4Dh +
jle loc_45A2D6  +
cmp eax 4Fh +
jle loc_45A3F5  +
cmp eax 51h +
jnz loc_45A33D  +
inc edx  +
mov dword_4A2068 edx +
jmp loc_45A23A  +
movsx ebx byte ptr [edx] +
mov eax 8000h +
sub ebx 41h +
or ecx eax +
inc edx  +
mov dword_4A2068 edx +
test bl 1 +
jz loc_45A303  +
or ecx 2000h +
jmp loc_45A309  +
and ecx 0FFFFDFFFh +
cmp ebx 18h +
jge loc_45A6F9  +
mov esi 0FFFFEFFFh +
mov edi 800h +
test ecx eax +
jz loc_45A326  +
and ecx esi +
or ecx edi +
jmp loc_45A32C  +
and ecx 0FFFF9FFFh +
mov edx ebx +
and edx 18h +
jz loc_45A378  +
cmp edx 8 +
jz loc_45A35B  +
cmp edx 10h +
jz loc_45A347  +
mov eax 0FFFFh +
jmp loc_45A6FB  +
test ecx eax +
jz loc_45A353  +
and ecx 0FFFFFF3Fh +
jmp loc_45A38B  +
and ecx 0FFFFE7FFh +
jmp loc_45A38B  +
test ecx eax +
jz loc_45A36A  +
and ecx 0FFFFFFBFh +
or ecx 80h +
jmp loc_45A38B  +
and ecx 0FFFFF7FFh +
or ecx 1000h +
jmp loc_45A38B  +
test ecx eax +
jz loc_45A387  +
and ecx 0FFFFFF7Fh +
or ecx 40h +
jmp loc_45A38B  +
and ecx esi +
or ecx edi +
and ebx 6 +
sub ebx 0 +
jz loc_45A6F9  +
dec ebx  +
sub ebx 1 +
jz loc_45A3CB  +
dec ebx  +
sub ebx 1 +
jz loc_45A3BA  +
dec ebx  +
sub ebx 1 +
jnz loc_45A33D  +
and ecx 0FFFFFCFFh +
or ecx 400h +
jmp loc_45A6F9  +
and ecx 0FFFFF9FFh +
or ecx 100h +
jmp loc_45A6F9  +
test ecx eax +
jz loc_45A3E0  +
and ecx 0FFFFFAFFh +
or ecx 200h +
jmp loc_45A6F9  +
and ecx 0FFFF9FFFh +
jmp loc_45A6F9  +
mov eax 0FFFEh +
jmp loc_45A6FB  +
inc edx  +
mov dword_4A2068 edx +
mov al [edx] +
cmp al 30h +
jl loc_45A422  +
cmp al 39h +
jg loc_45A422  +
movsx eax al +
add edx 0FFFFFFD1h +
add eax edx +
mov dword_4A2068 eax +
call sub_45A228  +
or eax 10000h +
jmp loc_45A6FB  +
mov ecx 0FFFFh +
jmp loc_45A598  +
cmp eax 2Fh +
jle loc_45A33D  +
cmp eax 35h +
jle loc_45A4AD  +
cmp eax 41h +
jnz loc_45A33D  +
and ecx 0FFFFF4FFh +
or ecx 9000h +
jmp loc_45A598  +
mov ecx 0FFFEh +
dec edx  +
jmp loc_45A598  +
or ecx 9800h +
jmp loc_45A598  +
sub eax 43h +
jz loc_45A592  +
sub eax 1 +
jz loc_45A584  +
sub eax 1 +
jz loc_45A576  +
sub eax 0Dh +
jnz loc_45A33D  +
inc edx  +
mov [ebp+var_1] 1 +
mov dword_4A2068 edx +
mov bl [edx] +
cmp bl 30h +
jl loc_45A565  +
cmp bl 35h +
jg loc_45A565  +
movsx ebx byte ptr [edx] +
mov eax 8000h +
or ecx eax +
sub ebx 30h +
mov esi 0FFFFEFFFh +
mov edi 800h +
test ecx eax +
jz loc_45A4CE  +
and ecx esi +
or ecx edi +
jmp loc_45A4D4  +
and ecx 0FFFF9FFFh +
cmp [ebp+var_1] 0 +
jz loc_45A4E8  +
and ecx 0FFFFFEFFh +
or ecx 600h +
jmp loc_45A4F4  +
and ecx 0FFFFFDFFh +
or ecx 500h +
test bl 1 +
jz loc_45A501  +
or ecx 2000h +
jmp loc_45A507  +
and ecx 0FFFFDFFFh +
and ebx 6 +
sub ebx 0 +
jz loc_45A550  +
dec ebx  +
sub ebx 1 +
jz loc_45A533  +
dec ebx  +
sub ebx 1 +
jnz loc_45A33D  +
test ecx eax +
jz loc_45A52B  +
and ecx 0FFFFFF3Fh +
jmp loc_45A598  +
and ecx 0FFFFE7FFh +
jmp loc_45A598  +
test ecx eax +
jz loc_45A542  +
and ecx 0FFFFFFBFh +
or ecx 80h +
jmp loc_45A598  +
and ecx 0FFFFF7FFh +
or ecx 1000h +
jmp loc_45A598  +
test ecx eax +
jz loc_45A55F  +
and ecx 0FFFFFF7Fh +
or ecx 40h +
jmp loc_45A598  +
and ecx esi +
or ecx edi +
jmp loc_45A598  +
xor eax eax +
test bl bl +
setz al  +
add eax 0FFFEh +
jmp loc_45A6FB  +
and ecx 0FFFFF6FFh +
or ecx 9200h +
jmp loc_45A598  +
and ecx 0FFFFF5FFh +
or ecx 9100h +
jmp loc_45A598  +
or ecx 7C00h +
inc edx  +
mov dword_4A2068 edx +
jmp loc_45A6F9  +
mov al [edx] +
cmp al 30h +
jl loc_45A6DA  +
cmp al 38h +
jg loc_45A6DA  +
movsx eax al +
inc edx  +
add eax 0FFFFFFD0h +
mov dword_4A2068 edx +
and ecx 0FFFF7FFFh +
cmp eax 8 +
ja loc_45A33D  +
jmp ds:off_45A704[eax*4]  +
mov eax 8000h +
test ecx eax +
jz loc_45A5F0  +
and ecx 0FFFFFAFFh +
or ecx 200h +
jmp loc_45A5F6  +
and ecx 0FFFF9FFFh +
test ecx eax +
jz loc_45A608  +
and ecx 0FFFFFF7Fh +
or ecx 40h +
jmp loc_45A6F9  +
and ecx 0FFFFEFFFh +
or ecx 800h +
jmp loc_45A6F9  +
mov eax 8000h +
test ecx eax +
jz loc_45A630  +
and ecx 0FFFFFAFFh +
or ecx 200h +
jmp loc_45A636  +
and ecx 0FFFF9FFFh +
test ecx eax +
jz loc_45A648  +
and ecx 0FFFFFFBFh +
or ecx 80h +
jmp loc_45A6F9  +
and ecx 0FFFFF7FFh +
or ecx 1000h +
jmp loc_45A6F9  +
mov eax 8000h +
test ecx eax +
jz loc_45A670  +
and ecx 0FFFFFAFFh +
or ecx 200h +
jmp loc_45A676  +
and ecx 0FFFF9FFFh +
test ecx eax +
jz loc_45A682  +
and ecx 0FFFFFF3Fh +
jmp loc_45A6F9  +
and ecx 0FFFFE7FFh +
jmp loc_45A6F9  +
and ecx 0FFFFDFFFh +
or ecx esi +
jmp loc_45A6F9  +
and ecx 0FFFFE3FFh +
or ecx 6000h +
jmp loc_45A6F9  +
and ecx 0FFFFBFFFh +
or ecx 2000h +
jmp loc_45A6F9  +
and ecx 0FFFFEBFFh +
or ecx 6800h +
jmp loc_45A6F9  +
and ecx 0FFFFF3FFh +
or ecx 7000h +
jmp loc_45A6F9  +
and ecx 0FFFFFBFFh +
or ecx 7800h +
jmp loc_45A6F9  +
cmp al 39h +
jnz loc_45A6EC  +
inc edx  +
mov ecx 0FFFDh +
mov dword_4A2068 edx +
jmp loc_45A6F9  +
xor ecx ecx +
test al al +
setnz cl  +
add ecx 0FFFEh +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax dword_4A2068 +
push ecx  +
mov ecx [ebp+arg_4] +
sub esp 3Ch +
test edi edi +
mov ecx [ecx+4] +
push ecx  +
mov eax dword_4A20C8 +
mov eax [ebp+arg_8] +
call sub_450A10  +
pop ecx  +
mov eax dword_49E070 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
xor eax eax +
ror eax cl +
xor eax dword_49E070 +
mov dword_4A20CC eax +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_45AE25  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_44FE3E  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_45AD50  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov edi offset stru_4A20D0 +
imul eax [ebp+arg_0] +
test esi esi +
imul eax [ebp+arg_0] +
add eax offset stru_4A20D0 +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_45AF68  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_45AF70  +
push large dword ptr fs:0  +
mov eax dword_49E070 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_45B027  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_45AFFA  +
cmp esi [esp+18h+arg_4] +
jbe loc_45B027  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_45B025  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_45B065  +
mov eax [ebx+esi*4+8] +
call sub_45B084  +
jmp loc_45AFDE  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_49E110 +
mov ebx offset unk_49E110 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_45B115  +
push [ebp+arg_0]  +
call sub_4509A6  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_453150  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_453150  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_45B21C  +
test edi edi +
jnz loc_45B21C  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_45B21C  +
push [ebp+arg_0]  +
call sub_4509A6  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_45D3D9  +
test al al +
jnz loc_45BFF1  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_45C0C7  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
or eax 0FFFFFFFFh +
jmp loc_45C0DD  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_45C0A5  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_45C0B8  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_45BE56  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_45BFFD  +
cmp eax 7 +
ja loc_45C00D  +
jmp ds:off_45C0E0[eax*4]  +
mov ecx esi +
call sub_45C2AA  +
jmp loc_45C09D  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_45C0A5  +
mov ecx esi +
call sub_45C230  +
jmp loc_45C09D  +
mov ecx esi +
call sub_45CB50  +
jmp loc_45C09D  +
mov [esi+28h] ebx +
jmp loc_45C0A5  +
mov ecx esi +
call sub_45C38E  +
jmp loc_45C09D  +
mov ecx esi +
call sub_45C3DF  +
jmp loc_45C09D  +
mov ecx esi +
call sub_45C6C4  +
test al al +
jz loc_45C00D  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_45C020  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_45D3F4  +
test al al +
jz loc_45C00D  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_45C015  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_45D3D9  +
test al al +
jnz loc_45C119  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_45C1F4  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
or eax 0FFFFFFFFh +
jmp loc_45C20A  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_45C1CE  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_45C1E5  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_45BE8B  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_45C125  +
cmp eax 7 +
ja loc_45C135  +
jmp ds:off_45C210[eax*4]  +
mov ecx esi +
call sub_45C2C9  +
jmp loc_45C1C6  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_45C1CE  +
mov ecx esi +
call sub_45C26D  +
jmp loc_45C1C6  +
mov ecx esi +
call sub_45CB7B  +
jmp loc_45C1C6  +
mov [esi+28h] ebx +
jmp loc_45C1CE  +
mov ecx esi +
call sub_45C3B6  +
jmp loc_45C1C6  +
mov ecx esi +
call sub_45C548  +
jmp loc_45C1C6  +
mov ecx esi +
call sub_45C8F3  +
test al al +
jz loc_45C135  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_45C148  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_45D3F4  +
test al al +
jz loc_45C135  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_45C13D  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
movzx eax word ptr [ecx+32h] +
call sub_45C2E8  +
call sub_45C312  +
mov edi edi +
lea edx [ecx+18h] +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov al [ecx+31h] +
movzx eax word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_45CBCD  +
jmp ds:off_45CBD3[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_45CBBD  +
push 8  +
jmp loc_45CBBD  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_450A10  +
pop ecx  +
retn   +
***
pop ecx  +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4A20F0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
call sub_464C80  +
call sub_464C80  +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_4614C9  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
add dword ptr [ecx] 0FFFFFFFEh +
mov ax [ebp+arg_0] +
mov ecx [ecx] +
test ax ax +
jz loc_45E36E  +
cmp [ecx] ax +
jz loc_45E36E  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop ebp  +
retn 4  +
***
push esi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_45EE1D  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
fldz   +
jmp loc_45EEEE  +
push ebx  +
push esi  +
mov ebx 0FFFFh +
push ebx  +
push 133Fh  +
call sub_468310  +
fld  [ebp+arg_0] +
mov esi eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+arg_0+6] +
mov eax 7FF0h +
and ecx eax +
cmp cx ax +
jnz loc_45EE8E  +
or dword ptr [edi] 0FFFFFFFFh +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_467B62  +
pop ecx  +
pop ecx  +
sub eax 1 +
jz loc_45EE80  +
sub eax 1 +
jz loc_45EE80  +
sub eax 1 +
jz loc_45EE80  +
fld  [ebp+arg_0] +
fld  ds:dbl_47FB20 +
push esi  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 17h  +
push 8  +
jmp loc_45EEC4  +
push ebx  +
push esi  +
call sub_468310  +
fld  [ebp+arg_0] +
pop ecx  +
pop ecx  +
jmp loc_45EEEC  +
fldz   +
fucomp  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_45EED1  +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_4683A9  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_45EECE  +
and dword ptr [edi] 0 +
fld  ds:dbl_47FB28 +
push esi  +
sub esp 10h +
fstp  qword ptr [esp+8] +
fld  [ebp+arg_0] +
fstp  [esp+28h+var_28] +
push 17h  +
push 0  +
call sub_467BF4  +
add esp 1Ch +
jmp loc_45EEEC  +
fld  [ebp+arg_0] +
push edi  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_467A5F  +
push ebx  +
push esi  +
fstp  [ebp+var_8] +
call sub_468310  +
fld  [ebp+var_8] +
add esp 14h +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push edi  +
lea edi [ebp+var_10] +
stos   +
push 1  +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
call sub_45EFCB  +
pop ecx  +
pop ecx  +
pop edi  +
cmp eax 1 +
jz loc_45F076  +
or eax 0FFFFFFFFh +
mov edx eax +
jmp loc_45F07C  +
mov edx [ebp+var_C] +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_45F088  +
mov [ecx] eax +
mov [ecx+4] edx +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
call sub_450A10  +
test esi esi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
call sub_45F4B8  +
add esp 0Ch +
test eax eax +
jnz loc_45F56E  +
lea eax [esi-1] +
jmp loc_45F575  +
mov eax esi +
jg loc_45F575  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+0Ch] +
push ebx  +
movzx eax dx +
push esi  +
push edi  +
cmp eax 5Ah +
jle loc_45FB57  +
cmp eax 6Eh +
jg loc_45F8CD  +
jz loc_45F8BD  +
cmp eax 65h +
jle loc_45F68C  +
sub eax 67h +
jz loc_45F643  +
sub eax 1 +
jnz loc_45F5BE  +
push 62h  +
pop edx  +
push edx  +
pop eax  +
jmp loc_45F591  +
***
dec eax  +
sub eax 1 +
jz loc_45F60E  +
sub eax 3 +
jnz loc_45F887  +
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 0Bh +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
lea eax [ecx+1] +
push eax  +
call sub_460074  +
add esp 14h +
jmp loc_460041  +
mov eax [ebp+10h] +
mov ecx [eax+1Ch] +
test ecx ecx +
js loc_45F877  +
cmp ecx 16Dh +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 3  +
jmp loc_45F5FD  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_45F877  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_45F877  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_45F54D  +
add esp 0Ch +
add eax 76Ch +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
push edx  +
jmp loc_45F601  +
***
jz loc_45F88E  +
sub eax 61h +
jz loc_45F856  +
sub eax 1 +
jz loc_45F82A  +
sub eax 1 +
jz loc_45F6ED  +
sub eax 1 +
jnz loc_45F887  +
mov eax [ebp+10h] +
cmp dword ptr [eax+0Ch] 1 +
jl loc_45F877  +
cmp dword ptr [eax+0Ch] 1Fh +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx cx cl +
movzx ecx cx +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+0Ch]  +
jmp loc_45F601  +
***
mov ebx [ebp+1Ch] +
mov ecx [ebp+20h] +
cmp ebx offset off_4809B0 +
jnz loc_45F7DC  +
test cl cl +
jnz loc_45F7DC  +
mov edi [ebp+18h] +
xor esi esi +
push esi  +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 61h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jnz loc_45F737  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
jmp loc_45F887  +
push edi  +
push ebx  +
push offset asc_487394  +
call sub_46017D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 62h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_487394  +
call sub_46017D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 65h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_487394  +
call sub_46017D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 54h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_487394  +
call sub_46017D  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jnz loc_460041  +
jmp loc_45F727  +
***
push ebx  +
push dword ptr [ebp+18h]  +
xor eax eax +
test cl cl +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_4601AE  +
add esp 18h +
test al al +
jz loc_45F727  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_487394  +
call sub_46017D  +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push dword ptr [ebp+8]  +
call sub_4601AE  +
add esp 24h +
jmp loc_45F7CF  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 0Bh +
jg loc_45F877  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0ECh]  +
call sub_46017D  +
add esp 0Ch +
jmp loc_460041  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 6 +
jg loc_45F877  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0B4h]  +
jmp loc_45F849  +
***
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
xor al al +
jmp loc_460043  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jl loc_45F877  +
cmp ecx 1Fh +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 20h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push ecx  +
jmp loc_45F601  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_47FB44  +
jmp loc_45F849  +
***
cmp eax 77h +
jg loc_45FA38  +
jz loc_45F8F2  +
sub eax 70h +
jz loc_45F9FF  +
dec eax  +
sub eax 1 +
jz loc_45F941  +
dec eax  +
sub eax 1 +
jz loc_45F931  +
sub eax 1 +
jnz loc_45F887  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 6 +
jg loc_45F877  +
test ecx ecx +
jnz loc_45F916  +
cmp dx 75h +
jnz loc_45F916  +
push 7  +
pop ecx  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 1  +
jmp loc_45F8B7  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_47FB48  +
jmp loc_45F849  +
***
mov esi [ebp+1Ch] +
push dword ptr [ebp+20h]  +
push esi  +
cmp esi offset off_4809B0 +
jnz loc_45F9E4  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 49h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_48F918  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_48F918  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 53h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push edi  +
push ebx  +
push offset asc_487394  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 70h  +
jmp loc_45F7C4  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 58h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
jmp loc_45F7CF  +
***
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_45F877  +
cmp eax 17h +
jg loc_45F877  +
cmp eax 0Bh +
mov eax [ebp+1Ch] +
jg loc_45FA26  +
mov eax [eax+14Ch] +
jmp loc_45FA2C  +
mov eax [eax+150h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push eax  +
jmp loc_45F849  +
***
sub eax 78h +
jz loc_45FB32  +
sub eax 1 +
jz loc_45FAF0  +
sub eax 1 +
jnz loc_45F887  +
call sub_468E09  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call sub_468460  +
pop ecx  +
test eax eax +
jnz loc_45F877  +
mov eax [ebp+10h] +
cmp [eax+20h] esi +
jz loc_45FA97  +
lea eax [ebp-8] +
mov [ebp-8] esi +
push eax  +
call sub_468434  +
pop ecx  +
test eax eax +
jnz loc_45F877  +
mov ecx [ebp-4] +
add ecx [ebp-8] +
mov [ebp-4] ecx +
jmp loc_45FA9A  +
mov ecx [ebp-4] +
mov eax ecx +
cdq   +
xor eax edx +
sub eax edx +
cdq   +
push 3Ch  +
pop esi  +
idiv  esi +
cdq   +
idiv  esi +
test ecx ecx +
mov ecx offset asc_48F5E4 +
mov edi edx +
mov esi eax +
js loc_45FABC  +
mov ecx offset asc_48F5D8 +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push ecx  +
call sub_46017D  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
call sub_460074  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push edi  +
call sub_460074  +
add esp 34h +
jmp loc_460041  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_45F877  +
cmp ecx 1FA3h +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_45F680  +
***
push dword ptr [ebp+1Ch]  +
xor eax eax +
push dword ptr [ebp+18h]  +
cmp [ebp+20h] al +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_4601AE  +
add esp 18h +
jmp loc_45F7CF  +
***
jz loc_45FFD8  +
cmp eax 4Dh +
jg loc_45FE01  +
jz loc_45FDEB  +
cmp eax 44h +
jg loc_45FCB8  +
jz loc_45FC4B  +
sub eax 25h +
jz loc_45FC3B  +
sub eax 1Ch +
jz loc_45FC0F  +
sub eax 1 +
jz loc_45FBE3  +
sub eax 1 +
jnz loc_45F887  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_45F877  +
cmp ecx 1FA3h +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
cdq   +
push 2  +
push 64h  +
pop ecx  +
idiv  ecx +
jmp loc_45F600  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 0Bh +
jg loc_45F877  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+11Ch]  +
jmp loc_45F849  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 6 +
jg loc_45F877  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0D0h]  +
jmp loc_45F849  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_47FB4C  +
jmp loc_45F849  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
mov ebx offset asc_48F5E0 +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 79h  +
jmp loc_45F7C4  +
***
sub eax 46h +
jz loc_45FD7E  +
sub eax 1 +
jz loc_45FD3C  +
sub eax 1 +
jz loc_45FD15  +
sub eax 1 +
jnz loc_45F887  +
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_45F877  +
cmp eax 17h +
jg loc_45F877  +
push 0Ch  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_45FCF7  +
mov edx ecx +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_45F686  +
***
mov eax [ebp+10h] +
mov ecx [eax+8] +
test ecx ecx +
js loc_45F877  +
cmp ecx 17h +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
jmp loc_45F8A9  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_45F877  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_45F877  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_45F54D  +
add esp 0Ch +
add eax 76Ch +
jmp loc_45F600  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
mov ebx offset asc_48F5D8 +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
jmp loc_45F7C4  +
***
mov eax [ebp+10h] +
mov ecx [eax+4] +
test ecx ecx +
js loc_45F877  +
cmp ecx 3Bh +
jmp loc_45FD26  +
***
push 7  +
sub eax 52h +
pop edi  +
cmp eax edi +
ja loc_45F887  +
jmp ds:off_460054[eax*4]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jz loc_45F727  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_48F918  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Dh  +
jmp loc_45F7C4  +
***
mov eax [ebp+10h] +
mov ecx [eax] +
test ecx ecx +
js loc_45F877  +
cmp ecx 3Ch +
jmp loc_45FD26  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 1Ch +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
mov ebx offset asc_48F918 +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_45F578  +
add esp 28h +
test al al +
jz loc_45F727  +
push esi  +
push edi  +
push ebx  +
call sub_46017D  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 53h  +
jmp loc_45F7C4  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_45F877  +
cmp ecx 6 +
jg loc_45F877  +
cmp dx 57h +
jnz loc_45FF09  +
test ecx ecx +
jnz loc_45FF08  +
push 6  +
pop ecx  +
jmp loc_45FF09  +
dec ecx  +
mov eax [eax+1Ch] +
test eax eax +
js loc_45F877  +
cmp eax 16Dh +
jg loc_45F877  +
xor esi esi +
cmp eax ecx +
jl loc_45FF2F  +
cdq   +
idiv  edi +
mov esi eax +
cmp edx ecx +
jl loc_45FF2F  +
inc esi  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx ax cl +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
jmp loc_45F601  +
***
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+10h] +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_45F46A  +
add esp 0Ch +
jmp loc_45F600  +
***
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
jmp loc_45FB47  +
***
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_45F877  +
cmp ecx 1FA3h +
jg loc_45F877  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 4  +
jmp loc_45F600  +
***
call sub_468E09  +
xor esi esi +
mov [ebp-8] esi +
call sub_468402  +
mov ecx [ebp+10h] +
xor edx edx +
push dword ptr [ebp+8]  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
cmp [ecx+20h] esi +
push 0FFFFFFFFh  +
setnz dl  +
mov eax [eax+edx*4] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp-8] +
push dword ptr [ebx]  +
push eax  +
call sub_4693E4  +
add esp 18h +
test eax eax +
jz loc_46001F  +
cmp eax 16h +
jz loc_46004A  +
cmp eax 22h +
jz loc_46004A  +
cmp eax 50h +
jnz loc_46002E  +
mov eax [edi] +
add eax eax +
add [ebx] eax +
mov [edi] esi +
jmp loc_460041  +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
sub eax ecx +
add [edi] eax +
lea eax ds:0FFFFFFFEh[ecx*2] +
add [ebx] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_45B2E7  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
push [ebp+lpNewFileName]  +
push [ebp+lpExistingFileName]  +
call ds:MoveFileExW  +
test eax eax +
jnz loc_460C53  +
call ds:GetLastError  +
push eax  +
call sub_45DE1B  +
pop ecx  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
call sub_474160  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
retn   +
***
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_46A6F4  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_461B41  +
push [ebp+arg_4]  +
call sub_461ADB  +
pop ecx  +
jmp loc_461B65  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_461B52  +
push edi  +
call sub_461E45  +
pop ecx  +
jmp loc_461B62  +
cmp esi 0FFFFFFE0h +
jbe loc_461B7C  +
call sub_45DE51  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_464172  +
test eax eax +
jz loc_461B57  +
push esi  +
call sub_4641C1  +
pop ecx  +
test eax eax +
jz loc_461B57  +
push esi  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_461B68  +
jmp loc_461B64  +
***
cmp dword_4A3B10 0 +
jz sub_461C34  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_461BD4  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz sub_461C34  +
jmp sub_46A989  +
***
jmp loc_46A970  +
***
lea edx [esp+arg_8] +
mov ecx eax +
fld  st +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jz loc_461E7D  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
test eax eax +
jnz loc_461E7D  +
push esi  +
call sub_45DE51  +
mov esi eax +
call ds:GetLastError  +
push eax  +
call sub_45DDD8  +
pop ecx  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_4A1FB4 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_461F0C  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_461EAC  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_461EBF  +
cmp byte ptr [ecx] 0 +
jz loc_461EBF  +
inc ecx  +
cmp ecx edi +
jnz loc_461EB5  +
sub ecx esi +
cmp ecx edx +
jnz loc_461FA0  +
mov edi eax +
add ecx esi +
sub edi edx +
mov eax edi +
and eax 1Fh +
sub edi eax +
push edi  +
leave   +
add edi ecx +
jmp loc_461EED  +
cmp ecx edi +
jnz near ptr word_461EDE  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_461EFE  +
cmp byte ptr [ecx] 0 +
jz loc_461F02  +
inc ecx  +
cmp ecx eax +
jnz loc_461EF8  +
sub ecx esi +
cmp eax 1 +
jl loc_461F86  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_461F2D  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_461F40  +
cmp byte ptr [ecx] 0 +
jz loc_461F40  +
inc ecx  +
cmp ecx edi +
jnz loc_461F36  +
sub ecx esi +
cmp ecx edx +
jnz loc_461FA0  +
mov edi eax +
add ecx esi +
sub edi edx +
pxor xmm1 xmm1 +
mov eax edi +
and eax 0Fh +
sub edi eax +
add edi ecx +
jmp loc_461F6D  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_461F71  +
add ecx 10h +
cmp ecx edi +
jnz loc_461F5B  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_461F7E  +
cmp byte ptr [ecx] 0 +
jz loc_461F82  +
inc ecx  +
cmp ecx eax +
jnz loc_461F78  +
sub ecx esi +
jmp loc_461FA0  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_461F9E  +
cmp byte ptr [ecx] 0 +
jz loc_461F9E  +
inc ecx  +
cmp ecx eax +
jnz loc_461F94  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_4A1FB4 +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_46207B  +
test cl 1 +
jz loc_461FEB  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_462006  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_462022  +
cmp [edx] di +
jz loc_462022  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_462015  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_462155  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_49E070 +
mov ecx eax +
xor eax dword_4A2248 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_4622E5  +
pop ecx  +
mov dword_4A2248 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4A245C +
mov eax dword_4A2460 +
cmp dword_4A245C 0 +
cmp dword_4A2460 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push edi  +
mov edi dword_4A245C +
test edi edi +
jnz loc_462A5B  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push ebx  +
push esi  +
xor ebx ebx +
jmp loc_462AAC  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
push ebx  +
push ebx  +
call ds:MultiByteToWideChar  +
mov ebx eax +
test ebx ebx +
jz loc_462ABD  +
push 2  +
push ebx  +
call sub_4614C9  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_462AB6  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push dword ptr [edi]  +
xor ebx ebx +
push ebx  +
push ebx  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_462AB6  +
push ebx  +
push esi  +
call sub_46D068  +
push ebx  +
call sub_461E45  +
add esp 0Ch +
add edi 4 +
cmp [edi] ebx +
jnz loc_462A61  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
push esi  +
call sub_461E45  +
pop ecx  +
or eax 0FFFFFFFFh +
jmp loc_462AB2  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_462AEC  +
mov ecx [ebp+8] +
push esi  +
call ds:off_47C2AC  +
call dword ptr [ebp+8]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_462ADB  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp eax dword_4A2468 +
jz loc_462B1B  +
push eax  +
call sub_46299B  +
pop ecx  +
pop ebp  +
retn   +
***
jmp fword ptr [eax+1Dh]  +
***
mov eax dword_4A2464 +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_474160  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_462DED  +
push esi  +
push offset ProcName  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_462DEC  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_47C2AC  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_462DFC  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
retn   +
***
call sub_450A10  +
mov eax [ebp+10h] +
call sub_450A10  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
retn   +
mov edi edi +
call sub_450A10  +
pop ecx  +
call sub_450A10  +
pop ecx  +
call sub_450A10  +
mov eax [ebp+10h] +
call sub_450A10  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_462304  +
mov [esp+4+var_4] offset unk_4A24AC +
call sub_46463D  +
pop ecx  +
mov al 1 +
retn   +
***
call sub_46F65F  +
call sub_46F6E2  +
mov edi edi +
mov edi edi +
call sub_450A10  +
mov eax [ebp+10h] +
call sub_450A10  +
mov eax [ebp+10h] +
call sub_450A10  +
mov eax [ebp+10h] +
call sub_450A10  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_49E254 eax +
mov eax dword_49E254 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_49E070 +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
call sub_450A10  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_450A10  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_45BD3E  +
push [ebp+arg_20]  +
lea eax [ebp+var_C] +
push [ebp+CodePage]  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+arg_10]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_466A56  +
add esp 24h +
cmp [ebp+var_4] 0 +
jz loc_466CBA  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_450A10  +
mov ecx [ebp+10h] +
mov edi edi +
push offset aComparestringe  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
lea ebx unk_4A2720[eax*4] +
mov eax [ebx] +
mov edx dword_49E070 +
or edi 0FFFFFFFFh +
mov ecx edx +
mov esi edx +
and ecx 1Fh +
xor esi eax +
ror esi cl +
cmp esi edi +
jz loc_466FEB  +
test esi esi +
jz loc_466F8A  +
mov eax esi +
jmp loc_466FED  +
mov esi [ebp+arg_8] +
cmp esi [ebp+arg_C] +
jz loc_466FAC  +
push dword ptr [esi]  +
call sub_466FF4  +
pop ecx  +
test eax eax +
jnz loc_466FCD  +
add esi 4 +
cmp esi [ebp+arg_C] +
jnz loc_466F92  +
mov edx dword_49E070 +
xor eax eax +
test eax eax +
jz loc_466FDB  +
push [ebp+lpProcName]  +
push eax  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_466FD5  +
push esi  +
call sub_44FEA3  +
pop ecx  +
xchg eax [ebx] +
jmp loc_466F86  +
mov edx dword_49E070 +
jmp loc_466FAE  +
mov edx dword_49E070 +
mov eax edx +
push 20h  +
and eax 1Fh +
pop ecx  +
sub ecx eax +
ror edi cl +
xor edi edx +
xchg edi [ebx] +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_466F3C  +
mov eax dword_49E070 +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_462304  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
call sub_450A10  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
lea esi [ebp+var_10] +
push 2  +
pop ecx  +
push 20h  +
stos   +
stos   +
mov edi ebx +
movs   +
movs   +
movs   +
mov eax dword_4A2498 +
mov esi [ebp+arg_4] +
mov [ebx+4] eax +
pop edi  +
jmp loc_468ED7  +
add esi ecx +
cmp [esi] di +
jz loc_468ED5  +
movzx eax word ptr [esi] +
xor edx edx +
cmp eax 61h +
jz loc_468F07  +
cmp eax 72h +
jz loc_468EFC  +
cmp eax 77h +
jnz loc_4690CF  +
mov dword ptr [ebx] 301h +
jmp loc_468F0D  +
mov [ebx] edx +
mov dword ptr [ebx+4] 1 +
jmp loc_468F10  +
mov dword ptr [ebx] 109h +
mov [ebx+4] ecx +
add esi ecx +
mov [ebp-3] dl +
xor ch ch +
mov [ebp+var_4] dl +
mov [ebp+var_2] dl +
mov cl 1 +
mov [ebp+var_1] ch +
movzx eax word ptr [esi] +
test ax ax +
jz loc_46900B  +
cmp eax 53h +
jg loc_468FA3  +
jz loc_468F91  +
sub eax edi +
jz loc_468FF4  +
sub eax 0Bh +
jz loc_468F84  +
sub eax 1 +
jz loc_468F7B  +
sub eax 18h +
jz loc_468F73  +
sub eax 0Ah +
jz loc_468F66  +
sub eax 4 +
jnz loc_4690CF  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_468F80  +
or dword ptr [ebx] 10h +
jmp loc_468F9A  +
or dword ptr [ebx] 80h +
mov cl 1 +
jmp loc_468FF4  +
push ebx  +
call sub_46916D  +
jmp loc_468FEE  +
mov ch 1 +
mov [ebp+var_1] ch +
xor cl cl +
jmp loc_468FF7  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_46920B  +
pop ecx  +
jmp loc_468FEE  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_468F80  +
or [ebx] edi +
mov dl 1 +
mov [ebp+var_2] dl +
mov cl dl +
jmp loc_468FF7  +
sub eax 54h +
jz loc_468FE8  +
sub eax 0Eh +
jz loc_468FE0  +
sub eax 1 +
jz loc_468FD4  +
sub eax 0Bh +
jz loc_468FC8  +
sub eax 6 +
jnz loc_4690CF  +
push ebx  +
call sub_469240  +
jmp loc_468FEE  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_4691E9  +
jmp loc_468F8E  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_4691C7  +
jmp loc_468F8E  +
push ebx  +
call sub_4691A7  +
jmp loc_468FEE  +
push ebx  +
call sub_469188  +
mov dl [ebp+var_2] +
pop ecx  +
mov cl al +
mov ch [ebp+var_1] +
xor eax eax +
test cl cl +
setnz al  +
lea esi [esi+eax*2] +
test cl cl +
jnz loc_468F22  +
jmp loc_46900E  +
mov ch [ebp+var_1] +
test ch ch +
jz loc_469015  +
add esi 2 +
cmp [esi] di +
jz loc_469012  +
test ch ch +
jnz loc_469032  +
xor eax eax +
cmp [esi] ax +
jnz loc_4690CF  +
mov byte ptr [ebx+8] 1 +
jmp loc_4690DF  +
push 3  +
push offset aCcs  +
push esi  +
call sub_46111A  +
add esp 0Ch +
test eax eax +
jnz loc_4690CF  +
add esi 6 +
jmp loc_469052  +
add esi 2 +
cmp [esi] di +
jz loc_46904F  +
cmp word ptr [esi] 3Dh +
jnz loc_4690CF  +
add esi 2 +
cmp [esi] di +
jz loc_46905D  +
push 5  +
push offset aUtf8  +
push esi  +
call sub_460F61  +
add esp 0Ch +
test eax eax +
jnz loc_469084  +
add esi 0Ah +
or dword ptr [ebx] 40000h +
jmp loc_4690C5  +
push 8  +
push offset aUtf16leunicode  +
push esi  +
call sub_460F61  +
add esp 0Ch +
test eax eax +
jnz loc_4690A3  +
add esi 10h +
or dword ptr [ebx] 20000h +
jmp loc_4690C5  +
push 7  +
push (offset aUtf16leunicode+10h)  +
push esi  +
call sub_460F61  +
add esp 0Ch +
test eax eax +
jnz loc_4690CF  +
add esi 0Eh +
or dword ptr [ebx] 10000h +
jmp loc_4690C5  +
add esi 2 +
cmp [esi] di +
jz loc_4690C2  +
jmp loc_46901E  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push 3  +
call sub_46A662  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_464BFC  +
call sub_474160  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_46A91D  +
push 3  +
call sub_4612A6  +
pop ecx  +
retn   +
***
mov dword_4A3B10 eax +
xor eax eax +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_481300 +
movlpd xmm2 oword ptr ds:oword_481310 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_483130[eax*4] +
movlpd xmm5 oword ptr ds:oword_483130[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_483540[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_46ACD7  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_481350+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_481300 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_483D50[eax*4] +
mulsd xmm5 ds:qword_483D50[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_484160[eax*4] +
orpd xmm4 oword ptr ds:oword_481310 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_481350+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_481360 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_484970[eax*4] +
mulsd xmm2 ds:qword_484970[eax*4] +
addpd xmm6 oword ptr ds:oword_485180[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_481350+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_46B048  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_46B40A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_481350+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_486190 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_4861A0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_46B18E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4812F0 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4812F0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4861B0[eax] +
movapd xmm6 oword ptr ds:oword_481330 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_481350 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_481340 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_481320 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_46ADE0  +
or eax ecx +
cmp eax 0 +
jz loc_46B105  +
cmp edx 0 +
jge loc_46AE1F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_46AF08  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_46B001  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_481320 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_481380 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_46AE24  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_481300 +
movlpd xmm2 oword ptr ds:oword_481310 +
jmp loc_46AA06  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_46B07D  +
ja loc_46AFEF  +
cmp edx 0 +
ja loc_46AFEF  +
jmp loc_46B07D  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_481300 +
movlpd xmm2 oword ptr ds:oword_481310 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_46AEAA  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_481320 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_483130[eax*4] +
movlpd xmm5 oword ptr ds:oword_483130[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_483540[eax*4] +
mov edx 43E7Fh +
jmp loc_46AA06  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_46AE58  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_46AEF7  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_481310 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_46B15E  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_46AFA9  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_481300 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_46AFEF  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_46AFD3  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_46AFB7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_481320 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_46AFB7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_46AFB0  +
fld  qword ptr ds:oword_481380 +
retn   +
fld  ds:dbl_481378 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_46B0EF  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_46B0EF  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_46B15E  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_46AEAA  +
movlpd xmm1 oword ptr ds:oword_481360+8 +
movlpd xmm0 oword ptr ds:oword_4813A0 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_46B15E  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_46B07D  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_46B15B  +
cmp edx 0BFF00000h +
jnz loc_46B07D  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_481300 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_46B0F6  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_46B15B  +
cmp eax 0 +
jz loc_46B0DB  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_46B0EF  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_46B0EF  +
fldz   +
retn   +
fld  ds:dbl_481370 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_46B15E  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_481310 +
mov edx 1Ah +
cmp eax 0 +
jz loc_46B15E  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_46B15E  +
jb loc_46B14A  +
cmp ecx 0 +
ja loc_46B15E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_4724BE  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_46B1BB  +
cmp eax 40000h +
jnb loc_46B3DA  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_46B1E1  +
cmp eax 0FFFC0200h +
jle loc_46B3B7  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4812F0 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4812F0 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4861B0[eax] +
movapd xmm6 oword ptr ds:oword_481330 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_481350 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_481340 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_46B36D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_46B15E  +
mov edx 19h +
cmp eax 0 +
jz loc_46B15E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_46B15E  +
mov edx 19h +
cmp eax 0 +
jz loc_46B15E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_481390+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_46B15E  +
mov edx 18h +
cmp ecx 0 +
jz loc_46B3F9  +
movlpd xmm0 oword ptr ds:oword_481380+8 +
mulsd xmm0 qword ptr ds:oword_481390 +
jmp loc_46B15E  +
movlpd xmm0 oword ptr ds:oword_481390 +
mulsd xmm0 xmm0 +
jmp loc_46B15E  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_46AB58  +
cmp eax 80000000h +
jb loc_46B45E  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_46B3B7  +
jmp loc_46B3DA  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_46B5DE  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_46B4C4  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_46B4CB  +
fscale   +
or ch ch +
jz loc_46B4D1  +
fchs   +
jmp loc_46B788  +
***
call sub_46B621  +
or eax eax +
jz loc_46B4F3  +
xor ch ch +
cmp eax 2 +
jz loc_46B4E8  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_46B49D  +
***
jmp loc_46B7A8  +
***
jmp loc_46B843  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_4813B0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_46B4F3  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_4813BA +
retn   +
***
or cl cl +
jnz loc_46B58B  +
retn   +
***
fldlg2   +
jmp loc_46B53F  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_46B4F3  +
fyl2x   +
retn   +
***
jmp loc_46B7A8  +
***
call sub_46B621  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_46B568  +
fldz   +
cmp eax 1 +
jnz locret_46B567  +
or ch ch +
jz locret_46B567  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_4813B0 +
cmp eax 1 +
jnz locret_46B567  +
or ch ch +
jz locret_46B567  +
fchs   +
jmp locret_46B567  +
***
fstp  st +
***
jmp loc_46B796  +
***
fstp  st +
jmp loc_46B845  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_46B5B3  +
fstp  st +
fld  ds:tbyte_4813B0 +
or ch ch +
jz locret_46B5B2  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_46B796  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_46B647  +
fld  st +
fmul  ds:dbl_4813E2 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_46B64E  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_46B646  +
mov eax 2 +
jmp locret_46B646  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_46BAE6  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_46B686  +
jmp sub_46B856  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_46B6A7  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_46B6AB  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_48143E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_46B70E  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_46B712  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_48143E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_46B856  +
***
fxch  st(1) +
fstp  st +
retn   +
***
call sub_46B856  +
jmp loc_46B78A  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_46B7A7  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_46B7CC  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_48142E +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_46B7FA  +
mov byte ptr [ebp-90h] 0 +
jmp loc_46B801  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_46B839  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_46B839  +
mov byte ptr [ebp-90h] 0 +
jmp loc_46B840  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_481424 +
or ch ch +
jz loc_46B870  +
fchs   +
or cl cl +
jz locret_46B87C  +
fld  ds:dbl_481436 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_46B883  +
fchs   +
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_4726D6  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_46B8E1  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_46B989  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp word ptr [esp+0] 27Fh +
jz loc_46B999  +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
mov ax [esp-6+arg_0] +
cmp ax 27Fh +
jz loc_46B9C3  +
and ax 20h +
jz loc_46B9C0  +
fstsw  ax +
and ax 20h +
jz loc_46B9C0  +
mov eax 8 +
call sub_46B8A7  +
pop edx  +
retn   +
fldcw  [esp-6+arg_0] +
pop edx  +
retn   +
***
sub esp 8 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_0] +
mov ecx 7FF00000h +
fabs   +
mov eax 0FFF00000h +
cmp dword ptr [ebp+arg_8+4] ecx +
jnz loc_46BB3A  +
cmp dword ptr [ebp+arg_8] 0 +
jnz loc_46BB7A  +
fld1   +
fcom  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_46BB1F  +
fstp  st(1) +
fstp  st +
fld  ds:dbl_4810C8 +
jmp loc_46BC08  +
fcom  st(1) +
fnstsw  ax +
fstp  st(1) +
test ah 41h +
mov eax [ebp+arg_10] +
jnz loc_46BC0B  +
fstp  st +
fldz   +
jmp loc_46BC0B  +
cmp dword ptr [ebp+arg_8+4] eax +
jnz loc_46BB7A  +
cmp dword ptr [ebp+arg_8] 0 +
jnz loc_46BB7A  +
fld1   +
fcom  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_46BB5B  +
fstp  st(1) +
fstp  st +
fldz   +
jmp loc_46BC08  +
fcom  st(1) +
fnstsw  ax +
fstp  st(1) +
test ah 41h +
mov eax [ebp+arg_10] +
jnz loc_46BC0B  +
fstp  st +
fld  ds:dbl_4810C8 +
jmp loc_46BC0B  +
fstp  st +
cmp dword ptr [ebp+arg_0+4] ecx +
jnz loc_46BBAF  +
cmp dword ptr [ebp+arg_0] 0 +
jnz loc_46BC0D  +
fldz   +
fld  [ebp+arg_8] +
fcom  st(1) +
fnstsw  ax +
test ah 41h +
jz loc_46BB10  +
fcomp  st(1) +
fnstsw  ax +
test ah 5 +
mov eax [ebp+arg_10] +
jnp loc_46BC0B  +
fstp  st +
fld1   +
jmp loc_46BC0B  +
cmp dword ptr [ebp+arg_0+4] eax +
jnz loc_46BC0D  +
cmp dword ptr [ebp+arg_0] 0 +
jnz loc_46BC0D  +
fld  [ebp+arg_8] +
push ecx  +
push ecx  +
fstp  [esp+8+var_8] +
call sub_46BA7C  +
fldz   +
fld  [ebp+arg_8] +
pop ecx  +
pop ecx  +
fcom  st(1) +
mov ecx eax +
fnstsw  ax +
test ah 41h +
jnz loc_46BBEC  +
fstp  st(1) +
fstp  st +
fld  ds:dbl_4810C8 +
cmp ecx 1 +
jnz loc_46BC08  +
fchs   +
jmp loc_46BC08  +
fcomp  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_46BC04  +
cmp ecx 1 +
jnz loc_46BC08  +
fstp  st +
fld  ds:dbl_4810D8 +
jmp loc_46BC08  +
fstp  st +
fld1   +
mov eax [ebp+arg_10] +
fstp  qword ptr [eax] +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_46BC23  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte_4A28AC 0 +
call sub_450A10  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_46C98F  +
xor edi edi +
jmp loc_46C9C6  +
push ebx  +
push esi  +
call sub_46C8C1  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax] +
push ebx  +
call sub_461ADB  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_46C9B6  +
push ebx  +
push esi  +
push edi  +
call loc_452BD0  +
add esp 0Ch +
push 0  +
call sub_461E45  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_450A10  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_462B38  +
mov edi eax +
test edi edi +
jz loc_4718A5  +
cmp [ebp+arg_0] 0 +
jz loc_4718A5  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_471863  +
sub esi ecx +
jmp loc_4718A0  +
mov edx [edi] +
mov ecx edx +
lea eax [ecx+1] +
mov [ebp+var_4] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_471878  +
sub ecx [ebp+var_4] +
cmp ecx esi +
jbe loc_47189D  +
cmp byte ptr [edx+esi] 3Dh +
jnz loc_47189D  +
push esi  +
push [ebp+arg_0]  +
push edx  +
call sub_472ECC  +
add esp 0Ch +
test eax eax +
jz loc_4718AD  +
add edi 4 +
cmp dword ptr [edi] 0 +
jnz loc_47186E  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_4718A7  +
***
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4718B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4719BC  +
***
mov edi edi +
call sub_450A10  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
frndint   +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_472887  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_472853  +
jmp loc_472830  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_47C2AC  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_472847  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_472830  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_47287C  +
test eax eax +
jz loc_47287C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_472861  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_472823  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_4728D6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_4728D5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_4728C0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_49E070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ebp+var_104] ecx +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_100] esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_FC] edi +
test ecx ecx +
jnz loc_47293D  +
test edx edx +
jz loc_47293D  +
call sub_45DE51  +
mov dword ptr [eax] 16h +
call sub_45B2BA  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_47291D  +
test esi esi +
jz loc_47291D  +
mov [ebp+var_108] 0 +
cmp edx 2 +
jb loc_472C6A  +
dec edx  +
imul edx edi +
push ebx  +
add edx ecx +
mov [ebp+var_F8] edx +
mov eax edx +
xor edx edx +
sub eax ecx +
div  edi +
lea ebx [eax+1] +
cmp ebx 8 +
ja loc_47298B  +
push esi  +
push edi  +
push [ebp+var_F8]  +
push ecx  +
call sub_472800  +
add esp 10h +
jmp loc_472C42  +
shr ebx 1 +
imul ebx edi +
add ebx ecx +
push ebx  +
push ecx  +
mov ecx esi +
mov [ebp+var_110] ebx +
call ds:off_47C2AC  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4729BB  +
push edi  +
push ebx  +
push [ebp+var_104]  +
call sub_4728A0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push [ebp+var_104]  +
call ds:off_47C2AC  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4729ED  +
push edi  +
push [ebp+var_F8]  +
push [ebp+var_104]  +
call sub_4728A0  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push ebx  +
call ds:off_47C2AC  +
call esi  +
add esp 8 +
test eax eax +
jle loc_472A15  +
push edi  +
push [ebp+var_F8]  +
push ebx  +
call sub_4728A0  +
add esp 0Ch +
mov eax [ebp+var_F8] +
mov edi eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_FC] +
mov [ebp+var_114] eax +
nop   +
cmp ebx esi +
jbe loc_472A6B  +
add esi edx +
mov [ebp+var_10C] esi +
cmp esi ebx +
jnb loc_472A65  +
mov ecx [ebp+var_100] +
push ebx  +
push esi  +
call ds:off_47C2AC  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jle loc_472A34  +
cmp ebx esi +
ja loc_472AA2  +
mov eax [ebp+var_F8] +
mov edi [ebp+var_100] +
add esi edx +
cmp esi eax +
ja loc_472A96  +
push ebx  +
push esi  +
mov ecx edi +
call ds:off_47C2AC  +
call edi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jle loc_472A71  +
mov edi [ebp+var_114] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_100] +
jmp loc_472AB0  +
mov edx [ebp+var_FC] +
sub edi edx +
cmp edi ebx +
jbe loc_472AD5  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_47C2AC  +
call esi  +
add esp 8 +
test eax eax +
jg loc_472AB0  +
mov edx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_114] edi +
cmp edi esi +
jb loc_472B43  +
mov [ebp+var_118] edx +
mov [ebp+var_11C] edi +
cmp esi edi +
jz loc_472B28  +
mov ebx esi +
mov edx edi +
mov esi [ebp+var_118] +
sub ebx edi +
mov al [edx] +
lea edx [edx+1] +
mov cl [ebx+edx-1] +
mov [ebx+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_472B01  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_110] +
mov edx [ebp+var_FC] +
mov eax [ebp+var_F8] +
cmp ebx edi +
jnz loc_472A30  +
mov ebx esi +
mov [ebp+var_110] ebx +
jmp loc_472A30  +
add edi edx +
cmp ebx edi +
jnb loc_472B7B  +
lea esp [esp+0] +
sub edi edx +
cmp edi ebx +
jbe loc_472B7B  +
mov ecx [ebp+var_100] +
push ebx  +
push edi  +
call ds:off_47C2AC  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_472B50  +
cmp ebx edi +
jb loc_472BAA  +
mov esi [ebp+var_100] +
sub edi edx +
cmp edi [ebp+var_104] +
jbe loc_472BA4  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_47C2AC  +
call esi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_472B81  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov eax edi +
mov ebx [ebp+var_104] +
mov ecx edx +
sub ecx esi +
sub eax ebx +
cmp eax ecx +
jl loc_472BFB  +
cmp ebx edi +
jnb loc_472BDE  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] ebx +
mov [ebp+eax*4+var_7C] edi +
inc eax  +
mov [ebp+var_108] eax +
mov edi [ebp+var_FC] +
cmp esi edx +
jnb loc_472C34  +
mov ecx esi +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
jmp loc_472965  +
cmp esi edx +
jnb loc_472C17  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] esi +
mov [ebp+eax*4+var_7C] edx +
inc eax  +
mov [ebp+var_108] eax +
mov ecx [ebp+var_104] +
mov esi [ebp+var_100] +
cmp ecx edi +
jnb loc_472C3C  +
mov edx edi +
mov edi [ebp+var_FC] +
jmp loc_47295F  +
mov esi [ebp+var_100] +
jmp loc_472C42  +
mov edi [ebp+var_FC] +
mov eax [ebp+var_108] +
sub eax 1 +
mov [ebp+var_108] eax +
js loc_472C69  +
mov ecx [ebp+eax*4+var_F4] +
mov edx [ebp+eax*4+var_7C] +
mov [ebp+var_104] ecx +
jmp loc_47295F  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_44FE3E  +
mov esp ebp +
pop ebp  +
retn   +
***
add edx 1 +
bts [esp] eax +
jmp loc_472C94  +
***
call sub_46C610  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_472FBF  +
pop ecx  +
test eax eax +
jz loc_473047  +
xor eax eax +
inc eax  +
jmp loc_473070  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_472FDC  +
pop ecx  +
test eax eax +
jnz loc_473042  +
call sub_46F7DA  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_4A3B10 0 +
jz loc_47310F  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4730B4  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_47310F  +
jmp loc_473898  +
***
cmp dword_4A3B10 0 +
jz loc_4730FB  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4730F0  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_4730FB  +
jmp sub_473880  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_46B978  +
call sub_473118  +
add esp 0Ch +
retn   +
***
jz loc_47316B  +
cmp dword_4A3B10 0 +
xor eax eax +
mov eax hObject +
cmp eax 0FFFFFFFFh +
jz locret_473322  +
cmp eax 0FFFFFFFEh +
jz locret_473322  +
push eax  +
call ds:CloseHandle  +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_45BD3E  +
push [ebp+CodePage]  +
lea eax [ebp+var_C] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+dwCmpFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_47358A  +
add esp 20h +
cmp [ebp+var_4] 0 +
jz loc_473876  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_47389E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_486A20 +
movapd xmm2 oword ptr ds:oword_486A30 +
movapd xmm3 oword ptr ds:oword_486A90 +
movapd xmm4 oword ptr ds:oword_486A40 +
movapd xmm6 oword ptr ds:oword_486A50 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_486F30[eax] +
movapd xmm7 oword ptr ds:oword_486B20[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_4739F6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_486AE0 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_486AF0 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_486B00 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_486A60 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_486A70[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_486B10 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_486AA0 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_473A5B  +
cmp ecx 0FFFFFFFFh +
jz loc_473A76  +
cmp ecx 7FEh +
ja loc_473A8C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_486A20 +
movapd xmm2 oword ptr ds:oword_486A90 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_473A54  +
fld  ds:dbl_486AC8 +
retn   +
mov edx 3E9h +
jmp loc_473AAA  +
movlpd xmm2 oword ptr ds:oword_486A90 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_486AC0 +
mov edx 8 +
jmp loc_473AAA  +
movlpd xmm1 oword ptr ds:oword_486AB0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4738A3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_473AD7  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_4724BE  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_473A9D  +
mov edx 3E9h +
jmp loc_473AAA  +
***
lea esp [esp+0] +
jmp loc_473B10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi 0FFFFh +
push esi  +
push 1B3Fh  +
call sub_468310  +
fld  qword ptr [ebp+8] +
mov ebx eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+0Eh] +
mov eax 7FF0h +
and ecx eax +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
cmp cx ax +
jnz loc_473B7C  +
call sub_467B62  +
dec eax  +
pop ecx  +
pop ecx  +
cmp eax 2 +
ja loc_473B60  +
push esi  +
push ebx  +
call sub_468310  +
fld  qword ptr [ebp+8] +
pop ecx  +
pop ecx  +
jmp loc_473BC3  +
fld  qword ptr [ebp+8] +
fld  ds:dbl_47FB20 +
push ebx  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 8  +
jmp loc_473BBB  +
call sub_4727E1  +
fst  qword ptr [ebp-8] +
fld  qword ptr [ebp+8] +
add esp 8 +
fucom  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_473BA5  +
push esi  +
fstp  st(1) +
push ebx  +
fstp  st +
call sub_468310  +
fld  qword ptr [ebp-8] +
pop ecx  +
pop ecx  +
jmp loc_473BC3  +
test bl 20h +
jnz loc_473B93  +
push ebx  +
sub esp 10h +
fxch  st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 0Ch  +
push 10h  +
call sub_467BF4  +
add esp 1Ch +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp ds:SystemFunction036  +
***
push 0FFFFFFFFh  +
push offset loc_475C10  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_49E070 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 1  +
lea ecx [ebp+var_10] +
call sub_44ECC9  +
mov esi dword_4A28BC +
mov ecx [ebp+arg_0] +
mov dword_4A28BC ecx +
neg ecx  +
sbb ecx ecx +
and ecx offset loc_473BDC +
push ecx  +
call sub_464257  +
pop ecx  +
lea ecx [ebp+var_10] +
call sub_44ED21  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_473C9C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_473C94  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_473C9E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_473C84  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_49C2D0  +
push offset sub_454C00  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_49E070 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_473D70  +
add esp 4 +
test eax eax +
jz loc_473D4F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_473C60  +
add esp 8 +
test eax eax +
jz loc_473D4F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_473D84  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_473D9F  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_473DE1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_473E28  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_473DEF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_473E1D  +
cmp edx [esp+arg_4] +
ja loc_473E1D  +
jb loc_473E26  +
cmp eax [esp+arg_0] +
jbe loc_473E26  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_473E6A  +
cmp cl 20h +
jnb loc_473E60  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_473E8A  +
cmp cl 20h +
jnb loc_473E80  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_473EB4  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_473ED0  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_473EFC  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_473F43  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_473F0A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_473F38  +
cmp edx [esp+arg_4] +
ja loc_473F38  +
jb loc_473F41  +
cmp eax [esp+arg_0] +
jbe loc_473F41  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_473F55  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_473F69  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_473F91  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_473FAD  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_473FC9  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_47400A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_473FD7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_474005  +
cmp edx [esp+arg_4] +
ja loc_474005  +
jb loc_474006  +
cmp eax [esp+arg_0] +
jbe loc_474006  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_474014  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_474040  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_47405B  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_47407A  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_4740C6  +
jmp loc_4740CD  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_474088  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_4740B3  +
cmp edx [esp+arg_4] +
ja loc_4740B3  +
jb loc_4740BB  +
cmp eax [esp+arg_0] +
jbe loc_4740BB  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_4740CD  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
or eax eax +
jnz loc_474101  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_474151  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_47410F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_47413A  +
cmp edx [esp+arg_4] +
ja loc_47413A  +
jb loc_474142  +
cmp eax [esp+arg_0] +
jbe loc_474142  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_44FE3E  +
jmp sub_450A56  +
***
cmp dword_4A1FB4 0 +
call sub_450A10  +
mov edi [ebp+10h] +
test al al +
call sub_450A10  +
call sub_450A10  +
test al al +
jnz locret_4743C4  +
push dword ptr [ebp+18h]  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4742EF  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_4A1FB4 1 +
jb loc_4744DE  +
mov edi [ebp+8] +
ja loc_47445D  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_47443D  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_47440D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_47449E  +
xor eax eax +
test edi 0Fh +
jz loc_474484  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_47449B  +
inc edi  +
test edi 0Fh +
jnz loc_47446F  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_4744D7  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_4744C3  +
bsf edx edi +
add eax edx +
jmp loc_47449B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_474501  +
xor eax eax +
jmp loc_474503  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_4A1FB4 1 +
push ecx  +
jmp $+5  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+Frequency] +
push eax  +
call ds:QueryPerformanceFrequency  +
test eax eax +
jz loc_4747FC  +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
test eax eax +
jz loc_4747FC  +
mov ecx dword ptr [ebp+Frequency] +
mov eax ecx +
mov edx dword ptr [ebp+Frequency+4] +
or eax edx +
jz loc_4747FC  +
mov eax dword ptr [ebp+PerformanceCount] +
mov dword_4A28C8 eax +
mov eax dword ptr [ebp+PerformanceCount+4] +
mov dword_4A28C0 ecx +
mov dword_4A28C4 edx +
jmp loc_47480E  +
or eax 0FFFFFFFFh +
mov dword_4A28C0 eax +
mov dword_4A28C4 eax +
mov dword_4A28C8 eax +
mov dword_4A28CC eax +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx 1 +
movsd xmm5 ds:qword_4916A8 +
jmp loc_47484B  +
mov ecx 2 +
movsd xmm5 ds:qword_4916B0 +
jmp loc_47484B  +
mov ecx 3 +
movsd xmm5 ds:qword_4916A8 +
movd eax xmm0 +
and eax 7FFFFFFFh +
cmp eax 7F800000h +
jnb loc_4749AB  +
cvtss2sd xmm0 xmm0 +
***
sub esp 20h +
fstcw  word ptr [esp+20h+var_20] +
movzx eax word ptr [esp+20h+var_20] +
cmp edx 8 +
jz loc_4749D5  +
test ds:byte_4916CF[edx] al +
jnz loc_4749FD  +
fldcw  ds:word_4916F0 +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_1C] 0 +
movsd [esp+20h+var_18] xmm0 +
movsd [esp+20h+var_10] xmm0 +
mov [esp+20h+var_8] eax +
call sub_467BF4  +
fstp  st +
add esp 20h +
retn   +
***
mov ecx 4 +
movsd xmm5 ds:qword_4916B0 +
jmp loc_474A2C  +
mov ecx 5 +
movsd xmm5 ds:qword_4916A8 +
movdqa xmm1 xmm0 +
psrldq xmm1 4 +
movd eax xmm1 +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jnb loc_4749AB  +
cmp ecx 1 +
jz loc_474863  +
movdqa xmm1 xmm0 +
psllq xmm1 1 +
psrlq xmm1 1 +
movsd xmm2 ds:qword_4916B8 +
comisd xmm1 xmm2 +
jbe loc_474A9D  +
cmp ecx 4 +
jz loc_474A89  +
mov edx 1 +
call sub_4749BD  +
mov edx 10h +
call sub_4749BD  +
jmp loc_474A9D  +
mov edx 10h +
call sub_4749BD  +
mov edx 1 +
call sub_4749BD  +
movsd xmm2 ds:qword_4916C0 +
comisd xmm1 xmm2 +
jnb loc_474AD2  +
xorpd xmm2 xmm2 +
comisd xmm1 xmm2 +
jz loc_4748E9  +
mov edx 2 +
call sub_4749BD  +
mov edx 10h +
call sub_4749BD  +
jmp loc_4748E9  +
movdqa xmm3 xmm0 +
cmp ecx 4 +
jnz loc_474AED  +
movsd xmm2 ds:qword_4916A8 +
comisd xmm3 xmm2 +
jb loc_474AED  +
subpd xmm3 xmm2 +
movdqa xmm4 xmm3 +
psllq xmm4 23h +
psrlq xmm4 23h +
movd eax xmm4 +
or eax eax +
jz loc_474B0D  +
mov edx 10h +
call sub_4749BD  +
comisd xmm0 xmm5 +
jnb loc_4749AB  +
movsd xmm2 ds:qword_4916A0 +
comisd xmm0 xmm2 +
jb loc_4749AB  +
jmp loc_4748E9  +
***
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
addsd xmm0 ds:qword_491670[ecx*8] +
test edx edx +
jz locret_474B66  +
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
shr edx 1Fh +
addsd xmm1 ds:qword_491670[edx*8] +
mulsd xmm1 ds:qword_491678 +
addsd xmm0 xmm1 +
retn   +
***
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
mulsd xmm1 ds:qword_491678 +
addsd xmm0 ds:qword_491670[ecx*8] +
addsd xmm0 xmm1 +
retn   +
***
sub esp 10h +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4756CB  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
jnz loc_4756CB  +
movlpd oword ptr [esp] xmm0 +
movlpd oword ptr [esp+8] xmm1 +
movlpd xmm7 oword ptr ds:oword_491710 +
movlpd xmm2 oword ptr ds:oword_491720 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_483130[eax*4] +
movlpd xmm5 oword ptr ds:oword_483130[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_483540[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_474F17  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_491760+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_491710 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_483D50[eax*4] +
mulsd xmm5 ds:qword_483D50[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_484160[eax*4] +
orpd xmm4 oword ptr ds:oword_491720 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_491760+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_491770 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_484970[eax*4] +
mulsd xmm2 ds:qword_484970[eax*4] +
addpd xmm6 oword ptr ds:oword_485180[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_491760+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_475298  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_475654  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_491760+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_486190 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_4861A0 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_4753F2  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_491700 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_491700 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4861B0[eax] +
movapd xmm6 oword ptr ds:oword_491740 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_491760 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_491750 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
movlpd xmm3 oword ptr ds:oword_491730 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_47501E  +
or eax ecx +
cmp eax 0 +
jz loc_47536B  +
cmp edx 0 +
jge loc_47505A  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_475147  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_475252  +
movlpd xmm1 oword ptr [esp+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_491730 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:unk_491790 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_47505F  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_491710 +
movlpd xmm2 oword ptr ds:oword_491720 +
jmp loc_474C53  +
***
movlpd xmm7 oword ptr [esp] +
movapd xmm4 xmm7 +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_4752D5  +
ja loc_475240  +
cmp edx 0 +
ja loc_475240  +
jmp loc_4752D5  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_491710 +
movlpd xmm2 oword ptr ds:oword_491720 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_4750E5  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_491730 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_483130[eax*4] +
movlpd xmm5 oword ptr ds:oword_483130[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_483540[eax*4] +
mov edx 43E7Fh +
jmp loc_474C53  +
***
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_475093  +
mov edx [esp+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_475131  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_491720 +
movlpd xmm2 oword ptr [esp] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_4753C0  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_4751E6  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm3 oword ptr ds:oword_491710 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_475240  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_47521F  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_4751FE  +
movlpd xmm1 oword ptr [esp+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_491730 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_4751FE  +
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4751F2  +
movlpd xmm0 oword ptr ds:unk_491790 +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_491780+8 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_475350  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm1 oword ptr [esp+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_475350  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_4753C0  +
movlpd xmm2 oword ptr [esp] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_4750E5  +
movlpd xmm1 oword ptr ds:oword_491770+8 +
movlpd xmm0 oword ptr ds:oword_4917A8+8 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_4753C0  +
movlpd xmm4 oword ptr [esp] +
movlpd xmm2 oword ptr [esp+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_4752D5  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_4753B4  +
cmp edx 0BFF00000h +
jnz loc_4752D5  +
movlpd xmm0 oword ptr ds:oword_491720 +
add esp 10h +
retn   +
***
movlpd xmm3 oword ptr ds:oword_491710 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_47535C  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_4753B4  +
cmp eax 0 +
jz loc_475337  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_475350  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_475350  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_491780 +
add esp 10h +
retn   +
***
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_4753C0  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_491720 +
mov edx 1Ah +
cmp eax 0 +
jz loc_4753C0  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_4753C0  +
jb loc_4753B0  +
cmp ecx 0 +
ja loc_4753C0  +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_483130 +
add esp 10h +
retn   +
***
sub esp 18h +
movlpd oword ptr [esp+10h] xmm0 +
mov [esp+0Ch] edx +
mov edx esp +
add edx 10h +
mov [esp+8] edx +
add edx 10h +
mov [esp+4] edx +
sub edx 8 +
mov [esp] edx +
call sub_4724BE  +
movlpd xmm0 oword ptr [esp+10h] +
add esp 28h +
retn   +
***
cmp eax 0 +
jle loc_47541F  +
cmp eax 40000h +
jnb loc_475624  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_475445  +
cmp eax 0FFFC0200h +
jle loc_475601  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_491700 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_491700 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4861B0[eax] +
movapd xmm6 oword ptr ds:oword_491740 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_491760 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+10h] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_491750 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_4755C4  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_4753C0  +
mov edx 19h +
cmp eax 0 +
jz loc_4753C0  +
add esp 10h +
retn   +
***
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_4753C0  +
mov edx 19h +
cmp eax 0 +
jz loc_4753C0  +
add esp 10h +
retn   +
***
movlpd xmm0 oword ptr ds:oword_4917A8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_4753C0  +
***
mov edx 18h +
cmp ecx 0 +
jz loc_475643  +
movlpd xmm0 oword ptr ds:oword_491798 +
mulsd xmm0 qword ptr ds:oword_491798+8 +
jmp loc_4753C0  +
***
movlpd xmm0 oword ptr ds:oword_491798+8 +
mulsd xmm0 xmm0 +
jmp loc_4753C0  +
***
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_474DA5  +
cmp eax 80000000h +
jb loc_47569B  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
add esp 10h +
retn   +
***
movlpd xmm4 oword ptr [esp] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_475601  +
jmp loc_475624  +
***
movq qword ptr [esp] xmm0 +
movq qword ptr [esp+8] xmm1 +
call sub_461C34  +
fstp  qword ptr [esp] +
movq xmm0 qword ptr [esp] +
add esp 10h +
retn   +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ACh] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4966D0 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496704 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496738 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4967C4 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4757C8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-18h] +
jmp sub_401C90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496850 +
jmp sub_452B8E  +
***
lea ecx [ebp+24h] +
lea ecx [ebp-84h] +
jmp sub_403720  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49687C +
jmp sub_452B8E  +
***
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4968B0 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4968E4 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496930 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496964 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496998 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4969D4 +
jmp sub_452B8E  +
***
lea ecx [ebp-74h] +
push eax  +
lea ecx [ebp-38h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-90h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-38h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-90h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-90h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496A10 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496AB8 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496AEC +
jmp sub_452B8E  +
***
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B18 +
jmp sub_452B8E  +
***
lea ecx [ebp+8] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B4C +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B98 +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
jmp loc_405180  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496BBC +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496BE8 +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
jmp loc_405180  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496C14 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496C40 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496C8C +
jmp sub_452B8E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496CB8 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-40h] +
lea ecx [ebp-88h] +
lea ecx [ebp-58h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-24h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-88h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-88h] +
lea ecx [ebp-14h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-88h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-70h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ACh] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496CE8 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496DA0 +
jmp sub_452B8E  +
***
lea ecx [ebp+0Ch] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496DCC +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496DF8 +
jmp sub_452B8E  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496E24 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496E84 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496EDC +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496F34 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496F68 +
jmp sub_452B8E  +
***
lea ecx [ebp+14h] +
lea ecx [ebp+8] +
jmp sub_401B50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496F94 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-28h] +
lea ecx [ebp-88h] +
mov eax [ebp-0A8h] +
push eax  +
push eax  +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-0A4h] +
mov eax [ebp-0A8h] +
and eax 2 +
jz locret_4760BE  +
and dword ptr [ebp-0A8h] 0FFFFFFFDh +
lea ecx [ebp-0A4h] +
jmp sub_401C90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ACh] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496FC8 +
jmp sub_452B8E  +
***
lea ecx [ebp-88h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
push eax  +
lea ecx [ebp-0A4h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-28h] +
lea ecx [ebp-70h] +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497048 +
jmp sub_452B8E  +
***
lea ecx [ebp+0Ch] +
push eax  +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-34h] +
push eax  +
push eax  +
lea ecx [ebp-80h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-64h] +
lea ecx [ebp-80h] +
lea ecx [ebp-80h] +
mov ecx [ebp-68h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4970C0 +
jmp sub_452B8E  +
***
lea ecx [ebp-0D8h] +
lea ecx [ebp-68h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-108h] +
lea ecx [ebp-38h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-50h] +
push eax  +
lea ecx [ebp-74h] +
lea ecx [ebp-50h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-38h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-50h] +
lea ecx [ebp-0BCh] +
lea ecx [ebp-138h] +
lea ecx [ebp-38h] +
push eax  +
push eax  +
mov ecx [ebp-114h] +
lea ecx [ebp-38h] +
lea ecx [ebp-50h] +
lea ecx [ebp-0BCh] +
lea ecx [ebp-38h] +
lea ecx [ebp-38h] +
mov ecx [ebp-114h] +
mov ecx [ebp-114h] +
push eax  +
mov ecx [ebp-114h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-140h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497160 +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
push eax  +
mov ecx [ebp-50h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-6Ch] +
mov ecx [ebp-54h] +
mov ecx [ebp-54h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497280 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
mov eax [ebp-38h] +
push eax  +
mov ecx [ebp-30h] +
mov ecx [ebp-34h] +
mov ecx [ebp-34h] +
jmp sub_401C90  +
***
lea ecx [ebp+24h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-50h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497340 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4973B0 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497408 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-18h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497460 +
jmp sub_452B8E  +
***
mov ecx [ebp-2Ch] +
jmp sub_44ED21  +
***
stc   +
dec dword ptr [ebx-72F7DBACh]  +
inc edx  +
or al 8Bh +
dec edx  +
aam  33h +
enter 53E8h 98h +
std   +
dec dword ptr [ebx-37CC03B6h]  +
call sub_44FE3E  +
mov eax offset unk_4974C0 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B98 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B98 +
jmp sub_452B8E  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-2Ch] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49751C +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497550 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49757C +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4975A8 +
jmp sub_452B8E  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4975D4 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497600 +
jmp sub_452B8E  +
***
lea ecx [ebp-0A4h] +
lea ecx [ebp-88h] +
lea ecx [ebp-70h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
mov ecx [ebp-8Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49762C +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497688 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4976B4 +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-4Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4976E0 +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
mov ecx [ebp-14h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497714 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_496B98 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497758 +
jmp sub_452B8E  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497784 +
jmp sub_452B8E  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4977B0 +
jmp sub_452B8E  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4977E4 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-34h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497810 +
jmp sub_452B8E  +
***
mov ecx [ebp-2Ch] +
mov ecx [ebp-2Ch] +
mov ecx [ebp-2Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-24h] +
lea ecx [ebp-38h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497860 +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4978C8 +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 34h +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4978F4 +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 30h +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497950 +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 24h +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497994 +
jmp sub_452B8E  +
***
push eax  +
push eax  +
mov ecx [ebp-18h] +
lea ecx [ebp-2Ch] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4979E0 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0BCh +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497A24 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497A80 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497AAC +
jmp sub_452B8E  +
***
lea ecx [ebp-64h] +
lea ecx [ebp-50h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-2A8h] +
lea ecx [ebp-160h] +
lea ecx [ebp-160h] +
lea ecx [ebp-28h] +
lea ecx [ebp-1C0h] +
lea ecx [ebp-1C0h] +
lea ecx [ebp-2B4h] +
push eax  +
push eax  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-304h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497AE8 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497BD0 +
jmp sub_452B8E  +
***
push eax  +
mov ecx [ebp-10h] +
jmp sub_40CC50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497C1C +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-4Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497C50 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497C84 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_40C1B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497CB0 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497CDC +
jmp sub_452B8E  +
***
lea ecx [ebp-0A4h] +
lea ecx [ebp-24h] +
lea ecx [ebp-84h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-54h] +
lea ecx [ebp-3Ch] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D08 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
mov ecx [ebp-10h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D90 +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497DC4 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_476F38  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_4037C0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497DF0 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497E1C +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497E48 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497E74 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_40C1B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497EA0 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497ECC +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497EF8 +
jmp sub_452B8E  +
***
lea ecx [ebp+0Ch] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497F24 +
jmp sub_452B8E  +
***
lea ecx [ebp+14h] +
lea ecx [ebp+10h] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497F50 +
jmp sub_452B8E  +
***
lea ecx [ebp+8] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497F84 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
mov ecx [ebp-24h] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497FB0 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-18h] +
mov ecx [ebp-30h] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498028 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
mov ecx [ebp-40h] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4980A8 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
mov ecx [ebp-3Ch] +
jmp sub_410CA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498138 +
jmp sub_452B8E  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
mov ecx [ebp-54h] +
mov ecx [ebp-38h] +
lea ecx [ebp-50h] +
jmp loc_410B50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4981B0 +
jmp sub_452B8E  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-4Ch] +
mov ecx [ebp-50h] +
mov ecx [ebp-3Ch] +
lea ecx [ebp-4Ch] +
jmp loc_410B50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498250 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4982F0 +
jmp sub_452B8E  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-54h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498358 +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-50h] +
jmp loc_405180  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49838C +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4983D0 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4983FC +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-70h] +
lea ecx [ebp-88h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498428 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_477478  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_401C90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49846C +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498498 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_415310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4984C4 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp sub_4163A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498500 +
jmp sub_452B8E  +
***
lea ecx [ebp-30h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49852C +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498558 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_414FC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4985A4 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
lea ecx [ebp-40h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4985E8 +
jmp sub_452B8E  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-54h] +
lea ecx [ebp-44h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49863C +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498690 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4986CC +
jmp sub_452B8E  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498724 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
jmp sub_44ED21  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498758 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
jmp sub_44ED21  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498784 +
jmp sub_452B8E  +
***
push eax  +
mov eax [ebp-14h] +
mov ecx [ebp-18h] +
jmp loc_40A980  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4987B0 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4987F4 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498820 +
jmp sub_452B8E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498878 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
jmp loc_40CEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4988A4 +
jmp sub_452B8E  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4988D0 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498930 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498988 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0C0h +
jmp sub_401B50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4989E0 +
jmp sub_452B8E  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-260h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-264h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498A1C +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498A50 +
jmp sub_452B8E  +
***
lea ecx [ebp-0C0h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C0h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498A7C +
jmp sub_452B8E  +
***
lea ecx [ebp-228h] +
lea ecx [ebp-240h] +
lea ecx [ebp-25Ch] +
lea ecx [ebp-2D4h] +
lea ecx [ebp-2BCh] +
lea ecx [ebp-2A4h] +
lea ecx [ebp-28Ch] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-25Ch] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2D8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498AB0 +
jmp sub_452B8E  +
***
lea ecx [ebp-2028h] +
lea ecx [ebp-2040h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2068h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498B50 +
jmp sub_452B8E  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-58h] +
lea ecx [ebp-0A8h] +
lea ecx [ebp-70h] +
lea ecx [ebp-108h] +
lea ecx [ebp-120h] +
lea ecx [ebp-90h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-0D8h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-3C0h] +
lea ecx [ebp-3A8h] +
lea ecx [ebp-138h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3C4h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498B88 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498C88 +
jmp sub_452B8E  +
***
lea ecx [ebp-1070h] +
lea ecx [ebp-1058h] +
lea ecx [ebp-1040h] +
lea ecx [ebp-1088h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
lea ecx [ebp-1028h] +
jmp sub_4037C0  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498D38 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498DC0 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498E1C +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498E58 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498E94 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498EC8 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498EFC +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498F28 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498F54 +
jmp sub_452B8E  +
***
lea ecx [ebp-234h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-264h] +
lea ecx [ebp-264h] +
lea ecx [ebp-264h] +
lea ecx [ebp-264h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-268h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498F98 +
jmp sub_452B8E  +
***
lea ecx [ebp-24Ch] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-254h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_498FEC +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 68h +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499018 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-4Ch] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499064 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499098 +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
jmp sub_401C90  +
***
mov eax [ebp-10h] +
push eax  +
mov eax [ebp-14h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4990F0 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_478148  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_4037C0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49911C +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_478188  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_401C90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499148 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499174 +
jmp sub_452B8E  +
***
lea ecx [ebp-428h] +
lea ecx [ebp-478h] +
lea ecx [ebp-458h] +
lea ecx [ebp-440h] +
lea ecx [ebp-458h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-490h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4991A0 +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-3Ch] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499200 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-40h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499268 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4992AC +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
jmp sub_401C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4992F8 +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-70h] +
jmp sub_422130  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49933C +
jmp sub_452B8E  +
***
push eax  +
lea ecx [ebp-40h] +
jmp loc_4424B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499380 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
jmp loc_40CEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4993C4 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4993F8 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499450 +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
jmp loc_4424B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49948C +
jmp sub_452B8E  +
***
lea ecx [ebp+0] +
lea ecx [ebp+50h] +
lea ecx [ebp-20h] +
lea ecx [ebp+28h] +
jmp sub_421EA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+84h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4994F0 +
jmp sub_452B8E  +
***
lea ecx [ebp+30h] +
lea ecx [ebp+60h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp+0] +
jmp sub_422130  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+9Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499568 +
jmp sub_452B8E  +
***
lea ecx [ebp+50h] +
lea ecx [ebp+28h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp+0] +
jmp sub_421EA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+84h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4995B0 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-0A0h] +
jmp sub_422130  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499628 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49966C +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4996A0 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
mov ecx [ebp-30h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4996CC +
jmp sub_452B8E  +
***
push eax  +
push eax  +
lea ecx [ebp-78h] +
jmp sub_4231F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499700 +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49975C +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499788 +
jmp sub_452B8E  +
***
lea ecx [ebp+40h] +
lea ecx [ebp+58h] +
lea ecx [ebp+28h] +
jmp sub_4037C0  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-34h] +
lea ecx [ebp-48h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+6Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4997F0 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_478808  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-18h] +
jmp sub_4037C0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49983C +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499868 +
jmp sub_452B8E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4998A4 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4998E0 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
lea ecx [ebp-128h] +
jmp loc_424070  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-138h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49990C +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499938 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49996C +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-80h] +
lea ecx [ebp-98h] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-0C8h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499998 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_4999F4 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
lea ecx [ebp+0Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499A20 +
jmp sub_452B8E  +
***
lea ecx [ebp+8] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499A54 +
jmp sub_452B8E  +
***
lea ecx [ebp-70h] +
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
mov ecx [ebp-78h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499A88 +
jmp sub_452B8E  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-64h] +
lea ecx [ebp-40h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-34h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499AD4 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499B20 +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499B4C +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 20h +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499B78 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499BAC +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499BD8 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499C0C +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499C38 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 48h +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499C64 +
jmp sub_452B8E  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-24h] +
lea ecx [ebp-30h] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499C98 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp loc_40CEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499CE4 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499D10 +
jmp sub_452B8E  +
***
mov ecx [ebp-3Ch] +
add ecx 4 +
jmp loc_40E6C0  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_478E28  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499D68 +
jmp sub_452B8E  +
***
mov eax [ebp-20h] +
and eax 1 +
jz locret_478E68  +
and dword ptr [ebp-20h] 0FFFFFFFEh +
lea ecx [ebp-48h] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499D94 +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499DC0 +
jmp sub_452B8E  +
***
lea ecx [ebp-44h] +
jmp sub_422130  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499DFC +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
jmp sub_421EA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499E28 +
jmp sub_452B8E  +
***
lea ecx [ebp-44h] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499E64 +
jmp sub_452B8E  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-70h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499E90 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
lea ecx [ebp-0ECh] +
lea ecx [ebp-88h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-58h] +
lea ecx [ebp-38h] +
lea ecx [ebp-58h] +
lea ecx [ebp-38h] +
lea ecx [ebp-100h] +
lea ecx [ebp-0D8h] +
lea ecx [ebp-90h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-0C4h] +
lea ecx [ebp-68h] +
lea ecx [ebp-40h] +
lea ecx [ebp-9Ch] +
push eax  +
lea ecx [ebp-58h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-128h] +
lea ecx [ebp-114h] +
lea ecx [ebp-114h] +
lea ecx [ebp-128h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-54h] +
lea ecx [ebp-24h] +
lea ecx [ebp-58h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-12Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499ED0 +
jmp sub_452B8E  +
***
mov eax [ebp-14h] +
and eax 1 +
jz locret_479108  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_499FE8 +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
jmp loc_40E6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A014 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_479178  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A040 +
jmp sub_452B8E  +
***
lea ecx [ebp-54h] +
jmp loc_40E6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A06C +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A098 +
jmp sub_452B8E  +
***
lea ecx [ebp-24h] +
mov eax [ebp-10h] +
and eax 1 +
jz locret_479220  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A0CC +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
lea ecx [ebp-24h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A100 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-64h] +
lea ecx [ebp-50h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A134 +
jmp sub_452B8E  +
***
lea ecx [ebp-20h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A180 +
jmp sub_452B8E  +
***
lea ecx [ebp-60h] +
jmp sub_426650  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A1AC +
jmp sub_452B8E  +
***
lea ecx [ebp-48h] +
jmp sub_40D990  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A1D8 +
jmp sub_452B8E  +
***
lea ecx [ebp+50h] +
lea ecx [ebp+58h] +
lea ecx [ebp+3Ch] +
lea ecx [ebp+50h] +
lea ecx [ebp+3Ch] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
and eax 40h +
jz locret_47941D  +
and dword ptr [ebp+64h] 0FFFFFFBFh +
lea ecx [ebp+28h] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A208 +
jmp sub_452B8E  +
***
lea ecx [ebp-74h] +
lea ecx [ebp+0] +
lea ecx [ebp+14h] +
lea ecx [ebp+28h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A290 +
jmp sub_452B8E  +
***
lea ecx [ebp-8Ch] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A2D4 +
jmp sub_452B8E  +
***
mov ecx [ebp-60h] +
mov ecx [ebp-60h] +
mov ecx [ebp-60h] +
lea ecx [ebp-54h] +
lea ecx [ebp-3Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A310 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp loc_436260  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A35C +
jmp sub_452B8E  +
***
lea ecx [ebp-0C8h] +
jmp loc_40F1C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D0h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A388 +
jmp sub_452B8E  +
***
lea ecx [ebp+10h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A3B4 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A3E0 +
jmp sub_452B8E  +
***
push eax  +
mov ecx [ebp-10h] +
jmp sub_40C1B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A40C +
jmp sub_452B8E  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A440 +
jmp sub_452B8E  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-28h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A46C +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
jmp loc_421590  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A4A0 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
jmp loc_4215C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A4DC +
jmp sub_452B8E  +
***
lea ecx [ebp+50h] +
lea ecx [ebp+28h] +
lea ecx [ebp+10h] +
lea ecx [ebp+50h] +
lea ecx [ebp+28h] +
lea ecx [ebp-44h] +
lea ecx [ebp-50h] +
lea ecx [ebp-18h] +
lea ecx [ebp+10h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp+54h] +
lea ecx [ebp+3Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-64h] +
lea ecx [ebp+10h] +
lea ecx [ebp+3Ch] +
lea ecx [ebp+54h] +
lea ecx [ebp+10h] +
lea ecx [ebp+3Ch] +
lea ecx [ebp+54h] +
lea ecx [ebp+54h] +
lea ecx [ebp+54h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+74h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A508 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-0FCh] +
lea ecx [ebp-144h] +
lea ecx [ebp-0E8h] +
lea ecx [ebp-0B4h] +
lea ecx [ebp-0C8h] +
lea ecx [ebp-28h] +
lea ecx [ebp-54h] +
lea ecx [ebp-94h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-68h] +
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-68h] +
lea ecx [ebp-50h] +
lea ecx [ebp-50h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-3Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-148h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A600 +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
jmp loc_421590  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A6E0 +
jmp sub_452B8E  +
***
lea ecx [ebp-90h] +
lea ecx [ebp-30h] +
lea ecx [ebp+0] +
lea ecx [ebp+54h] +
lea ecx [ebp+54h] +
lea ecx [ebp-44h] +
mov eax [ebp-1Ch] +
lea ecx [ebp+50h] +
lea ecx [ebp+28h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+74h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A720 +
jmp sub_452B8E  +
***
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
mov eax [ebp+64h] +
and eax 10000h +
jz locret_479B05  +
and dword ptr [ebp+64h] 0FFFEFFFFh +
lea ecx [ebp-5Ch] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A790 +
jmp sub_452B8E  +
***
lea ecx [ebp-0ACh] +
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-80h] +
lea ecx [ebp-98h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0B4h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A828 +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A87C +
jmp sub_452B8E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A8B0 +
jmp sub_452B8E  +
***
push eax  +
mov ecx [ebp-18h] +
mov ecx [ebp-18h] +
add ecx 38h +
jmp loc_44AD20  +
***
mov ecx [ebp-58h] +
mov ecx [ebp-58h] +
lea ecx [ebp-50h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A938 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A98C +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A9C0 +
jmp sub_452B8E  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-1Ch] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49A9EC +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AA20 +
jmp sub_452B8E  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 4Ch +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AA6C +
jmp sub_452B8E  +
***
lea ecx [ebp-60h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-54h] +
lea ecx [ebp-3Ch] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AAC0 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-80h] +
lea ecx [ebp-98h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AB04 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-5Ch] +
jmp loc_40C540  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AB50 +
jmp sub_452B8E  +
***
lea ecx [ebp-90h] +
lea ecx [ebp-30h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-94h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AB84 +
jmp sub_452B8E  +
***
lea ecx [ebp-8Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
mov ecx [ebp-94h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-98h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49ABB8 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-10h] +
jmp loc_43EDA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AC0C +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AC50 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AC8C +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49ACB8 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-34h] +
lea ecx [ebp-40h] +
jmp loc_40C650  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49ACEC +
jmp sub_452B8E  +
***
push eax  +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AD30 +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AD64 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AD90 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_497D5C +
jmp sub_452B8E  +
***
lea ecx [ebp-2Ch] +
mov ecx [ebp-34h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49ADBC +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
jmp sub_4037C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49ADF0 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
push eax  +
call sub_44FE8C  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AE1C +
jmp sub_452B8E  +
***
lea ecx [ebp-0D0h] +
jmp loc_4436B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D8h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AE78 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AEA4 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AEE0 +
jmp sub_452B8E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_47A338  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AF14 +
jmp sub_452B8E  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-6Ch] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AF40 +
jmp sub_452B8E  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
lea ecx [ebp-80h] +
lea ecx [ebp-48h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AF74 +
jmp sub_452B8E  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-38h] +
push 14h  +
lea eax [ebp-4Ch] +
push eax  +
call sub_474275  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-4] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AFB8 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
mov ecx [ebp-10h] +
mov eax [ebp+8] +
mov ecx [ebp-10h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49AFF4 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B038 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B090 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B0E8 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B140 +
jmp sub_452B8E  +
***
mov eax [ebp-14h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B198 +
jmp sub_452B8E  +
***
mov eax [ebp-14h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B1F8 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
mov ecx [ebp-18h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B258 +
jmp sub_452B8E  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-18h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B2C0 +
jmp sub_452B8E  +
***
lea ecx [ebp-1Ch] +
jmp loc_44A1A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B35C +
jmp sub_452B8E  +
***
mov eax [ebp-18h] +
mov eax [ebp-18h] +
mov eax [ebp-18h] +
lea ecx [ebp-30h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-84h] +
lea ecx [ebp-48h] +
lea ecx [ebp-30h] +
lea ecx [ebp-98h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-9Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B388 +
jmp sub_452B8E  +
***
mov eax [ebp-18h] +
lea ecx [ebp-30h] +
lea ecx [ebp-44h] +
lea ecx [ebp-58h] +
lea ecx [ebp-6Ch] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B400 +
jmp sub_452B8E  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-30h] +
lea ecx [ebp-70h] +
lea ecx [ebp-70h] +
lea ecx [ebp-98h] +
lea ecx [ebp-70h] +
lea ecx [ebp-48h] +
mov eax [ebp-18h] +
mov eax [ebp-18h] +
lea ecx [ebp-30h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-84h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-30h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C4h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B450 +
jmp sub_452B8E  +
***
push eax  +
mov eax [ebp-10h] +
and eax 1 +
jz locret_47A7E7  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
lea ecx [ebp-28h] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B4F8 +
jmp sub_452B8E  +
***
mov eax [ebp-14h] +
and eax 1 +
jz locret_47A828  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
lea ecx [ebp-3Ch] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B534 +
jmp sub_452B8E  +
***
lea ecx [ebp+54h] +
lea ecx [ebp+2Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp+0] +
lea ecx [ebp+14h] +
lea ecx [ebp+40h] +
lea ecx [ebp+14h] +
lea ecx [ebp+58h] +
lea ecx [ebp+40h] +
lea ecx [ebp+58h] +
lea ecx [ebp+14h] +
lea ecx [ebp+58h] +
lea ecx [ebp+1Ch] +
jmp loc_40C670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx+78h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B560 +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 44h +
jmp loc_40CEE0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B5F0 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-54h] +
lea ecx [ebp-40h] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-68h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_44FE3E  +
mov ecx [edx-8] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B634 +
jmp sub_452B8E  +
***
mov eax [ebp-18h] +
mov eax [ebp-18h] +
mov eax [ebp-18h] +
and eax 4 +
jz locret_47A9CA  +
and dword ptr [ebp-18h] 0FFFFFFFBh +
lea ecx [ebp-78h] +
jmp sub_40C800  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-80h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B680 +
jmp sub_452B8E  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-88h] +
lea ecx [ebp-74h] +
lea ecx [ebp-60h] +
lea ecx [ebp-38h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-38h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0A4h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B6C0 +
jmp sub_452B8E  +
***
lea ecx [ebp-60h] +
mov eax [ebp-14h] +
mov eax [ebp-14h] +
mov eax [ebp-14h] +
lea ecx [ebp-48h] +
lea ecx [ebp-48h] +
lea ecx [ebp-48h] +
lea ecx [ebp-30h] +
lea ecx [ebp-74h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-88h] +
lea ecx [ebp-88h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-0F8h] +
jmp sub_449540  +
***
lea ecx [ebp-64h] +
lea ecx [ebp-50h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-28h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B7D8 +
jmp sub_452B8E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-68h] +
lea ecx [ebp-54h] +
lea ecx [ebp-54h] +
lea ecx [ebp-68h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B81C +
jmp sub_452B8E  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B870 +
jmp sub_452B8E  +
***
lea ecx [ebp-0C8h] +
lea ecx [ebp-30h] +
lea ecx [ebp-60h] +
lea ecx [ebp-0DCh] +
lea ecx [ebp-44h] +
lea ecx [ebp-30h] +
jmp sub_40C800  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0E4h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B8AC +
jmp sub_452B8E  +
***
mov ecx [ebp-10h] +
jmp loc_44AF50  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B908 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B934 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49B9C0 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49BA18 +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49BAA4 +
jmp sub_452B8E  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-68h] +
lea ecx [ebp-38h] +
jmp sub_40A6C0  +
***
lea ecx [ebp-10h] +
jmp sub_44ED21  +
***
lea ecx [ebp-14h] +
jmp sub_44ED21  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49BB9C +
jmp sub_452B8E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_44FE3E  +
mov eax offset unk_49BD60 +
jmp sub_452B8E  +
***
jmp loc_4055A0  +
***
jmp nullsub_1  +
***
mov ecx dword_4A3A84 +
test ecx ecx +
jz loc_47ADE0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A3A84 0 +
retn   +
***
push ecx  +
mov eax dword ptr qword_4A3AA8 +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_418540  +
mov eax dword ptr qword_4A3AA8 +
push ecx  +
call nullsub_2  +
push ecx  +
call nullsub_2  +
push ecx  +
call nullsub_2  +
push eax  +
call sub_44FE87  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [eax] +
push eax  +
mov dword_4A3140 ecx +
call sub_44FE87  +
mov eax dword_4A3140 +
add esp 4 +
test eax eax +
jnz loc_47AE50  +
retn   +
***
cmp dword_4A3160 10h +
jb loc_47AEA2  +
push esi  +
mov esi dword_4A314C +
mov ecx offset dword_4A314C +
push offset dword_4A314C  +
call nullsub_2  +
mov eax dword_4A3160 +
mov ecx offset dword_4A314C +
inc eax  +
push eax  +
push esi  +
call loc_402500  +
pop esi  +
mov dword_4A3160 0Fh +
mov dword_4A315C 0 +
mov byte ptr dword_4A314C 0 +
retn   +
***
cmp dword_4A3178 10h +
jb loc_47AEF2  +
push esi  +
mov esi dword_4A3164 +
mov ecx offset dword_4A3164 +
push offset dword_4A3164  +
call nullsub_2  +
mov eax dword_4A3178 +
mov ecx offset dword_4A3164 +
inc eax  +
push eax  +
push esi  +
call loc_402500  +
pop esi  +
mov dword_4A3178 0Fh +
mov dword_4A3174 0 +
mov byte ptr dword_4A3164 0 +
retn   +
***
mov ecx dword_4A317C +
test ecx ecx +
jz loc_47AF20  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A317C 0 +
retn   +
***
jmp nullsub_1  +
***
jmp nullsub_1  +
***
mov ecx dword_4A3AE4 +
test ecx ecx +
jz loc_47AF60  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A3AE4 0 +
retn   +
***
mov ecx dword_4A3ADC +
test ecx ecx +
jz loc_47AF80  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A3ADC 0 +
retn   +
***
mov ecx dword_4A3AD4 +
test ecx ecx +
jz loc_47AFA0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A3AD4 0 +
retn   +
***
push esi  +
mov esi dword_4A3AEC +
test esi esi +
jz loc_47AFD0  +
push 0  +
push dword ptr [esi]  +
call ds:CryptReleaseContext  +
push 4  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov dword_4A3AEC 0 +
pop esi  +
retn   +
***
mov ecx dword_4A3AFC +
test ecx ecx +
jz loc_47AFF0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4A3AFC 0 +
retn   +
***
push esi  +
mov esi dword_4A3AF4 +
test esi esi +
jz loc_47B04E  +
cmp dword ptr [esi] 0 +
jz loc_47B043  +
call nullsub_1  +
sub esp 8 +
call nullsub_4  +
mov ecx [esi] +
mov eax [esi+8] +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_4024A0  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
push 0Ch  +
push esi  +
call sub_44FE8C  +
add esp 8 +
mov dword_4A3AF4 0 +
pop esi  +
retn   +
***
mov ecx offset unk_4A1AA4 +
jmp loc_44EDE2  +
***
mov ecx offset unk_4A1A9C +
jmp sub_40A990  +
***
mov ecx offset unk_4A1B29 +
jmp loc_44F5ED  +
***
mov ecx offset unk_4A1FC0 +
jmp loc_450D43  +
***
