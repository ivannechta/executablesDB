mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2C0h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_2BC] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_2AC] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_2A0] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_2B4] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_2A8] eax +
mov eax [ebp+arg_20] +
push ebx  +
push esi  +
mov esi [ebp+arg_18] +
mov [ebp+var_2B0] eax +
mov eax [ebp+arg_24] +
push edi  +
mov edi [ebp+arg_1C] +
mov [ebp+var_2B8] eax +
mov eax [ebp+arg_28] +
push 14h  +
mov [ebp+var_2C0] eax +
mov [ebp+var_2A4] esi +
mov [ebp+var_29C] edi +
pop ecx  +
lea eax [ebp+var_18] +
xor ebx ebx +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100160F  +
push 0Ah  +
push 1A9h  +
call sub_1008890  +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_100767E  +
cmp esi ebx +
jz loc_1001C6C  +
cmp edi ebx +
jz loc_1001C6C  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100763B  +
push 8  +
xor esi esi +
push edi  +
lea eax [ebp+var_248] +
inc esi  +
push eax  +
mov [ebp+var_290] esi +
mov [ebp+var_278] offset dword_1001294 +
mov [ebp+var_274] ebx +
mov [ebp+var_270] ebx +
mov [ebp+var_280] esi +
mov [ebp+var_27C] ebx +
mov [ebp+var_288] 100C0h +
mov [ebp+var_284] ebx +
mov [ebp+var_26C] ebx +
mov [ebp+var_268] ebx +
mov [ebp+var_264] ebx +
mov [ebp+var_260] ebx +
mov [ebp+var_25C] ebx +
mov [ebp+var_258] ebx +
mov [ebp+var_254] ebx +
mov [ebp+var_250] ebx +
call sub_100763B  +
push 8  +
push edi  +
lea eax [ebp+var_1F8] +
push eax  +
mov [ebp+var_240] esi +
mov [ebp+var_228] offset dword_1001290 +
mov [ebp+var_224] ebx +
mov [ebp+var_220] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_22C] ebx +
mov [ebp+var_238] 100C0h +
mov [ebp+var_234] ebx +
mov [ebp+var_21C] ebx +
mov [ebp+var_218] ebx +
mov [ebp+var_214] ebx +
mov [ebp+var_210] ebx +
mov [ebp+var_20C] ebx +
mov [ebp+var_208] ebx +
mov [ebp+var_204] ebx +
mov [ebp+var_200] ebx +
call sub_100763B  +
push 8  +
push edi  +
lea eax [ebp+var_1A8] +
push eax  +
mov [ebp+var_1F0] esi +
mov [ebp+var_1D8] offset dword_100128C +
mov [ebp+var_1D4] ebx +
mov [ebp+var_1D0] ebx +
mov [ebp+var_1E0] esi +
mov [ebp+var_1DC] ebx +
mov [ebp+var_1E8] 10010h +
mov [ebp+var_1E4] ebx +
mov [ebp+var_1CC] ebx +
mov [ebp+var_1C8] ebx +
mov [ebp+var_1C4] ebx +
mov [ebp+var_1C0] ebx +
mov [ebp+var_1BC] ebx +
mov [ebp+var_1B8] ebx +
mov [ebp+var_1B4] ebx +
mov [ebp+var_1B0] ebx +
call sub_100763B  +
mov eax [ebp+var_2A4] +
mov [ebp+var_1A0] 0Ah +
mov [ebp+var_188] offset dword_1001288 +
mov [ebp+var_184] ebx +
mov [ebp+var_180] ebx +
mov [ebp+var_190] esi +
mov [ebp+var_18C] ebx +
mov [ebp+var_198] 20000h +
mov [ebp+var_194] ebx +
mov [ebp+var_17C] eax +
push 8  +
push edi  +
lea eax [ebp+var_158] +
push eax  +
mov [ebp+var_178] 0FEh +
mov [ebp+var_174] ebx +
mov [ebp+var_170] ebx +
mov [ebp+var_16C] ebx +
mov [ebp+var_168] ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] ebx +
call sub_100763B  +
push 8  +
push edi  +
lea eax [ebp+var_108] +
push eax  +
mov [ebp+var_150] esi +
mov [ebp+var_138] offset dword_1001284 +
mov [ebp+var_134] ebx +
mov [ebp+var_130] ebx +
mov [ebp+var_140] esi +
mov [ebp+var_13C] ebx +
mov [ebp+var_148] 100C0h +
mov [ebp+var_144] ebx +
mov [ebp+var_12C] ebx +
mov [ebp+var_128] ebx +
mov [ebp+var_124] ebx +
mov [ebp+var_120] ebx +
mov [ebp+var_11C] ebx +
mov [ebp+var_118] ebx +
mov [ebp+var_114] ebx +
mov [ebp+var_110] ebx +
call sub_100763B  +
mov eax [ebp+var_2B0] +
push 8  +
mov [ebp+var_DC] eax +
push edi  +
lea eax [ebp+var_B8] +
push eax  +
mov [ebp+var_100] 0Ah +
mov [ebp+var_E8] offset dword_1001280 +
mov [ebp+var_E4] ebx +
mov [ebp+var_E0] ebx +
mov [ebp+var_F0] esi +
mov [ebp+var_EC] ebx +
mov [ebp+var_F8] ebx +
mov [ebp+var_F4] ebx +
mov [ebp+var_D8] 0FEh +
mov [ebp+var_D4] ebx +
mov [ebp+var_D0] ebx +
mov [ebp+var_CC] ebx +
mov [ebp+var_C8] ebx +
mov [ebp+var_C4] ebx +
mov [ebp+var_C0] ebx +
call sub_100763B  +
mov eax [ebp+var_2B8] +
push 8  +
mov [ebp+var_8C] eax +
push edi  +
lea eax [ebp+var_68] +
push eax  +
mov [ebp+var_B0] 0Ah +
mov [ebp+var_98] offset dword_100127C +
mov [ebp+var_94] ebx +
mov [ebp+var_90] ebx +
mov [ebp+var_A0] esi +
mov [ebp+var_9C] ebx +
mov [ebp+var_A8] ebx +
mov [ebp+var_A4] ebx +
mov [ebp+var_88] 0FEh +
mov [ebp+var_84] ebx +
mov [ebp+var_80] ebx +
mov [ebp+var_7C] ebx +
mov [ebp+var_78] ebx +
mov [ebp+var_74] ebx +
mov [ebp+var_70] ebx +
call sub_100763B  +
mov [ebp+var_60] esi +
mov [ebp+var_48] offset dword_1001278 +
mov [ebp+var_44] ebx +
lea eax [ebp+var_18] +
mov [ebp+var_40] eax +
mov eax [ebp+var_2C0] +
push ebx  +
mov [ebp+var_3C] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 8  +
push 0FFFFFFFFh  +
push [ebp+var_2BC]  +
mov [ebp+var_50] esi +
push [ebp+arg_0]  +
mov [ebp+var_4C] ebx +
mov [ebp+var_58] 0C2h +
mov [ebp+var_54] ebx +
mov [ebp+var_38] 0Ah +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_20] ebx +
call sub_1009819  +
test eax eax +
jnz loc_1001A4B  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_10069C0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1001CB6  +
mov ecx [ebp+var_26C] +
mov eax [ebp+var_2AC] +
mov edx [ebp+var_2A0] +
mov edi [ebp+var_2B4] +
mov [eax] ecx +
mov ecx [ebp+var_21C] +
mov [edx] ecx +
mov ecx [ebp+var_1CC] +
mov edx [ebp+var_2A8] +
mov [edi] ecx +
mov ecx [ebp+var_12C] +
mov [edx] ecx +
mov ecx [ebp+var_2A4] +
cmp [ecx] esi +
jnz loc_1001AA3  +
cmp [ebp+arg_0] 2 +
jbe loc_1001C2D  +
push 12Eh  +
call sub_1008890  +
jmp loc_1001A37  +
cmp [eax] ebx +
jz loc_1001B46  +
mov eax [ebp+var_2A0] +
cmp [eax] ebx +
jnz loc_1001AE3  +
push 1FCh  +
call sub_1006EF2  +
mov ecx [ebp+var_2A0] +
mov [ecx] eax +
cmp eax ebx +
jnz loc_1001AE3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1001CB6  +
cmp [edi] ebx +
jnz loc_1001AFF  +
mov eax [ebp+var_29C] +
push 1FCh  +
mov [eax] esi +
call sub_1006EF2  +
mov [edi] eax +
cmp eax ebx +
jz loc_1001ACB  +
cmp [ebp+var_1CC] ebx +
jnz loc_1001B1D  +
push dword ptr [edi]  +
call sub_1006F9B  +
push eax  +
push offset String2  +
push dword ptr [edi]  +
call sub_100767E  +
jmp loc_1001B46  +
push ebx  +
push esi  +
push offset String2  +
push dword ptr [edi]  +
call sub_1006D59  +
test eax eax +
jnz loc_1001B46  +
push 1FCh  +
push edi  +
call sub_100735F  +
test eax eax +
jz loc_1001ACB  +
mov eax [ebp+var_29C] +
mov [eax] esi +
cmp [ebp+var_4C] ebx +
jz loc_1001B5D  +
cmp [ebp+var_EC] ebx +
jnz loc_1001B5D  +
push 1A8h  +
jmp loc_1001A9C  +
mov eax [ebp+var_2A8] +
push ebx  +
push dword ptr [eax]  +
call sub_1006C82  +
test eax eax +
jnz loc_1001B81  +
cmp [ebp+var_13C] ebx +
jz loc_1001B89  +
push 25Ch  +
jmp loc_1001A9C  +
cmp [ebp+var_13C] ebx +
jnz loc_1001B97  +
mov eax [ebp+var_2A4] +
cmp [eax] ebx +
jz loc_1001A97  +
cmp [ebp+var_22C] ebx +
jz loc_1001BB1  +
cmp [ebp+var_27C] ebx +
jnz loc_1001BCB  +
push 25Fh  +
jmp loc_1001A9C  +
cmp [ebp+var_1DC] ebx +
jz loc_1001BC3  +
push 260h  +
jmp loc_1001A9C  +
cmp [ebp+var_27C] ebx +
jz loc_1001C0B  +
mov eax [ebp+var_2AC] +
push ebx  +
push dword ptr [eax]  +
call sub_1006C82  +
test eax eax +
jnz loc_1001BE7  +
push 261h  +
jmp loc_1001A9C  +
cmp [ebp+var_22C] ebx +
jz loc_1001C0B  +
mov eax [ebp+var_2A0] +
push ebx  +
push dword ptr [eax]  +
call sub_1006C82  +
test eax eax +
jnz loc_1001C0B  +
push 262h  +
jmp loc_1001A9C  +
cmp [ebp+var_1DC] ebx +
jz loc_1001C3C  +
push ebx  +
push esi  +
push offset String2  +
push dword ptr [edi]  +
call sub_1006CA3  +
test eax eax +
jnz loc_1001C34  +
mov eax [ebp+var_29C] +
mov [eax] esi +
mov eax esi +
jmp loc_1001CB8  +
cmp [ebp+var_1DC] ebx +
jnz loc_1001C2D  +
cmp [ebp+var_27C] ebx +
jnz loc_1001C4C  +
cmp [ebp+var_22C] ebx +
jz loc_1001C2D  +
mov eax [ebp+var_29C] +
mov [eax] esi +
push dword ptr [edi]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset dword_100126C  +
push dword ptr [edi]  +
call sub_100767E  +
jmp loc_1001C2D  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006ADA  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 2Ch  +
***
mov edi edi +
push esi  +
push 65h  +
pop esi  +
push esi  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
inc esi  +
cmp esi 0A1h +
jbe loc_1001CD4  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+TokenHandle] 0 +
jnz loc_1001D18  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
xor eax eax +
jmp loc_1001D7C  +
push esi  +
call ds:GetCurrentProcessId  +
push eax  +
push 0  +
push 400h  +
call ds:OpenProcess  +
mov esi eax +
test esi esi +
jnz loc_1001D3A  +
call sub_1006A53  +
jmp loc_1001D56  +
push [ebp+TokenHandle]  +
push 28h  +
push esi  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1001D5A  +
call sub_1006A53  +
push esi  +
call ds:CloseHandle  +
xor eax eax +
jmp loc_1001D7B  +
push esi  +
call ds:CloseHandle  +
test eax eax +
jnz loc_1001D78  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push edi  +
xor edi edi +
cmp [ebp+TokenHandle] edi +
jnz loc_1001DA9  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
xor eax eax +
jmp loc_1001DF4  +
lea eax [ebp+Luid] +
push eax  +
push offset Name  +
push edi  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_1001DA0  +
mov eax [ebp+Luid.LowPart] +
push edi  +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
push edi  +
push 10h  +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+NewState] +
push eax  +
push edi  +
push [ebp+TokenHandle]  +
mov [ebp+NewState.PrivilegeCount] 1 +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
call ds:GetLastError  +
test eax eax +
jnz loc_1001DA0  +
inc eax  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48Ch +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
push 7Ch  +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov dword ptr [ebp+String1] ebx +
call memset  +
push 3FEh  +
lea eax [ebp+var_484] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_488] ebx +
call memset  +
add esp 18h +
mov [ebp+nSize] 40h +
mov ecx 80h +
lea eax [ebp+String1] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001E60  +
mov ecx 402h +
lea eax [ebp+var_488] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001E71  +
push 201h  +
push edi  +
lea eax [ebp+var_488] +
push eax  +
call sub_100767E  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call ds:GetComputerNameW  +
test eax eax +
jnz loc_1001EBB  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
mov eax 0FFh +
jmp loc_1001F04  +
lea eax [ebp+var_488] +
push offset asc_10012D8  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_1001EEA  +
push 1A5h  +
call ds:SetLastError  +
call sub_1006A53  +
push 20001h  +
jmp loc_1001EA6  +
push ebx  +
push 1  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
neg eax  +
sbb eax eax +
neg eax  +
mov [esi] eax +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 8  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1001F4E  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
xor eax eax +
jmp locret_1001FF6  +
push 0  +
push [ebp+lpString]  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
mov eax [ebp+var_4] +
cmp dword ptr [eax] 0 +
jnz loc_1001F93  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
jmp loc_1001F47  +
push dword ptr [eax]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
call sub_100767E  +
mov eax [ebp+var_4] +
and dword ptr [eax+4] 0 +
mov eax Mem +
test eax eax +
jnz loc_1001FC4  +
mov eax [ebp+var_4] +
mov Mem eax +
jmp loc_1001FEE  +
mov ecx dword_100C024 +
test ecx ecx +
jnz loc_1001FD6  +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
jmp loc_1001FBA  +
mov eax [ecx+4] +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov ecx dword_100C024 +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov dword_100C024 eax +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax Mem +
push edi  +
xor edi edi +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_1002034  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
xor eax eax +
jmp loc_10020F3  +
push esi  +
push edi  +
push dword ptr [eax]  +
call sub_1006C82  +
push lpFileName  +
lea esi [eax+eax+14h] +
call sub_1006F9B  +
cmp eax esi +
pop esi  +
jnb loc_100207A  +
mov eax Mem +
push edi  +
push dword ptr [eax]  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
push lpFileName  +
call sub_100735F  +
test eax eax +
jz loc_1002014  +
cmp lpFileName edi +
jz loc_1002014  +
mov eax Mem +
push lpFileName  +
cmp [eax+4] edi +
jnz loc_10020BC  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
mov eax Mem +
push dword ptr [eax]  +
push lpFileName  +
call sub_100767E  +
push Mem  +
mov dword_100C024 edi +
call sub_10072E4  +
push offset Mem  +
jmp loc_10020EB  +
mov eax [ebp+var_4] +
mov eax [eax+4] +
mov Mem eax +
call sub_1006F9B  +
shr eax 1 +
push eax  +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
push lpFileName  +
call sub_100767E  +
push [ebp+var_4]  +
call sub_10072E4  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
xor eax eax +
inc eax  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push esi  +
xor esi esi +
mov [ebp+hMem] esi +
mov [ebp+TokenHandle] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_10] esi +
mov [ebp+var_4] esi +
mov [ebp+dwBytes] esi +
cmp [ebp+lpFileName] esi +
jnz loc_100213D  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
xor eax eax +
jmp loc_1002427  +
lea eax [ebp+TokenHandle] +
push eax  +
call sub_1001CF9  +
test eax eax +
jnz loc_1002151  +
call sub_1006A53  +
jmp loc_1002136  +
push ebx  +
mov ebx ds:GetTokenInformation +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push esi  +
xor edi edi +
inc edi  +
push edi  +
push [ebp+TokenHandle]  +
call ebx  +
cmp [ebp+dwBytes] esi +
jnz loc_1002185  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1002348  +
push [ebp+dwBytes]  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_10021A9  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
jmp loc_1002348  +
lea ecx [ebp+dwBytes] +
push ecx  +
push [ebp+dwBytes]  +
push eax  +
push edi  +
push [ebp+TokenHandle]  +
call ebx  +
test eax eax +
jz loc_1002327  +
push edi  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jnz loc_10021F3  +
call sub_1006A53  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
jmp loc_10023ED  +
push esi  +
mov ebx 2000000h +
push ebx  +
push 3  +
push esi  +
mov esi ds:CreateFileW +
push edi  +
mov edi 20000h +
push edi  +
push [ebp+lpFileName]  +
call esi  +
mov [ebp+var_14] eax +
cmp eax 0FFFFFFFFh +
jz loc_1002271  +
lea ecx [ebp+hMem] +
push ecx  +
xor ecx ecx +
push ecx  +
lea edx [ebp+pDacl] +
push edx  +
push ecx  +
push ecx  +
push 4  +
push 1  +
push eax  +
call ds:GetSecurityInfo  +
test eax eax +
jnz loc_1002247  +
push eax  +
push [ebp+pDacl]  +
lea eax [ebp+pSecurityDescriptor] +
push 1  +
push eax  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_1002278  +
call sub_1006A53  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
push [ebp+var_14]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+TokenHandle]  +
jmp loc_10023DC  +
mov [ebp+var_1C] 1 +
mov eax [ebp+var_4] +
push 0  +
push dword ptr [eax]  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call ds:SetSecurityDescriptorOwner  +
test eax eax +
jnz loc_100229B  +
call sub_1006A53  +
lea eax [ebp+var_4] +
push eax  +
jmp loc_100237D  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
push 1  +
push [ebp+lpFileName]  +
call ds:SetFileSecurityW  +
cmp eax 1 +
jz loc_10023F1  +
push [ebp+TokenHandle]  +
call sub_1001D85  +
test eax eax +
jz loc_10022DB  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
push 1  +
push [ebp+lpFileName]  +
call ds:SetFileSecurityW  +
test eax eax +
jnz loc_10023F1  +
call sub_1006A53  +
cmp [ebp+var_1C] 1 +
jnz loc_1002356  +
push 0  +
push ebx  +
push 3  +
push 0  +
push 1  +
push edi  +
push [ebp+lpFileName]  +
call esi  +
mov [ebp+var_14] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1002356  +
mov esi ds:GetLastError +
call esi  +
cmp eax 43h +
jz loc_1002337  +
call esi  +
cmp eax 35h +
jz loc_1002337  +
call esi  +
cmp eax 7Bh +
jz loc_1002337  +
call esi  +
cmp eax 20h +
jnz loc_1002327  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
push 20h  +
jmp loc_1002342  +
call sub_1006A53  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
jmp loc_1002348  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
push 7Bh  +
call ds:SetLastError  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
jmp loc_10023ED  +
call ds:GetLastError  +
cmp eax 20h +
jz loc_10023B4  +
cmp eax 35h +
jz loc_100239E  +
cmp eax 43h +
jz loc_100239E  +
cmp eax 7Bh +
jz loc_100239E  +
mov esi 514h +
cmp eax esi +
lea eax [ebp+var_4] +
push eax  +
jz loc_100238D  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
jmp loc_10023CE  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
push esi  +
jmp loc_10023C8  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
push 43h  +
jmp loc_10023C8  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
push 20h  +
call ds:SetLastError  +
push [ebp+TokenHandle]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+var_14]  +
call esi  +
cmp [ebp+hMem] 0 +
jz loc_10023ED  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
jmp loc_1002425  +
cmp [ebp+hMem] 0 +
jz loc_1002400  +
push [ebp+hMem]  +
call ds:LocalFree  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_10] +
push eax  +
call sub_10072E4  +
push [ebp+TokenHandle]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+var_14]  +
call esi  +
xor eax eax +
inc eax  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_C] 1 +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+lpFileName] eax +
mov [ebp+ReferencedDomainName] ebx +
mov [ebp+cbReferencedDomainName] ebx +
mov [ebp+Sid] ebx +
mov [ebp+dwBytes] ebx +
mov [ebp+pSecurityDescriptor] ebx +
mov [ebp+nLengthNeeded] ebx +
mov [ebp+var_20] ebx +
mov [ebp+pAcl] ebx +
mov [ebp+pDacl] ebx +
mov [ebp+pSid] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
jnz loc_10024A5  +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call ds:AllocateAndInitializeSid  +
mov esi ds:LookupAccountNameW +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
push [ebp+ReferencedDomainName]  +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
push edi  +
push ebx  +
mov [ebp+Sid] ebx +
mov [ebp+dwBytes] ebx +
call esi  +
test eax eax +
jnz loc_10024E0  +
call ds:GetLastError  +
cmp eax 7Ah +
jz loc_10024E0  +
call sub_1006A53  +
xor eax eax +
jmp loc_10027FE  +
push [ebp+dwBytes]  +
call sub_1006EF2  +
mov [ebp+Sid] eax +
cmp eax ebx +
jnz loc_1002504  +
call sub_1006A53  +
cmp [ebp+pSid] ebx +
jz loc_10024D9  +
push [ebp+pSid]  +
call ds:FreeSid  +
jmp loc_10024D9  +
mov eax [ebp+cbReferencedDomainName] +
add eax eax +
push eax  +
call sub_1006EF2  +
mov [ebp+ReferencedDomainName] eax +
cmp eax ebx +
jnz loc_1002526  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
jmp loc_10024F4  +
lea ecx [ebp+peUse] +
push ecx  +
lea ecx [ebp+cbReferencedDomainName] +
push ecx  +
push eax  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+Sid]  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_1002551  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
lea eax [ebp+ReferencedDomainName] +
jmp loc_100251E  +
mov esi ds:GetFileSecurityW +
lea eax [ebp+nLengthNeeded] +
push eax  +
push ebx  +
push [ebp+pSecurityDescriptor]  +
push 4  +
push [ebp+lpFileName]  +
call esi  +
cmp [ebp+nLengthNeeded] ebx +
jz loc_100257A  +
push [ebp+nLengthNeeded]  +
call sub_1006EF2  +
mov [ebp+pSecurityDescriptor] eax +
cmp eax ebx +
jz loc_100253E  +
lea eax [ebp+nLengthNeeded] +
push eax  +
push [ebp+nLengthNeeded]  +
push [ebp+pSecurityDescriptor]  +
push 4  +
push [ebp+lpFileName]  +
call esi  +
test eax eax +
jnz loc_10025AE  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+pSecurityDescriptor] +
jmp loc_100251E  +
push [ebp+nLengthNeeded]  +
call sub_1006EF2  +
mov [ebp+var_20] eax +
cmp eax ebx +
jz loc_100258F  +
push 1  +
push eax  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jnz loc_10025F2  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_20] +
jmp loc_100251E  +
lea eax [ebp+bDaclDefaulted] +
push eax  +
lea eax [ebp+pAcl] +
push eax  +
lea eax [ebp+bDaclPresent] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_10025CA  +
mov [ebp+pAclInformation] ebx +
mov [ebp+var_44] ebx +
mov [ebp+var_48] 8 +
cmp [ebp+bDaclPresent] ebx +
jz loc_1002637  +
cmp [ebp+pAcl] ebx +
jz loc_1002637  +
push 2  +
push 0Ch  +
lea eax [ebp+pAclInformation] +
push eax  +
push [ebp+pAcl]  +
call ds:GetAclInformation  +
test eax eax +
jz loc_10025CA  +
cmp [ebp+arg_C] 1 +
mov edi ds:GetLengthSid +
jnz loc_1002666  +
push [ebp+pSid]  +
call edi  +
add eax 8 +
push eax  +
call sub_1006EF2  +
mov esi eax +
cmp esi ebx +
jz loc_10025CA  +
push [ebp+pSid]  +
call edi  +
push eax  +
push [ebp+pSid]  +
jmp loc_10026B1  +
push [ebp+Sid]  +
call edi  +
add eax 8 +
push eax  +
call sub_1006EF2  +
mov esi eax +
cmp esi ebx +
jnz loc_10026A8  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_20] +
push eax  +
call sub_10072E4  +
jmp loc_10024D9  +
push [ebp+Sid]  +
call edi  +
push eax  +
push [ebp+Sid]  +
lea eax [esi+8] +
push eax  +
call memcpy  +
add esp 0Ch +
cmp [ebp+arg_C] 1 +
mov dword ptr [esi+4] 1F01FFh +
mov [esi] bl +
jnz loc_10026D1  +
push [ebp+pSid]  +
jmp loc_10026D4  +
push [ebp+Sid]  +
call edi  +
add eax 8 +
cmp [ebp+arg_C] 1 +
movzx eax ax +
mov [esi+2] ax +
mov byte ptr [esi+1] 9 +
jnz loc_10026EF  +
push [ebp+pSid]  +
jmp loc_10026F2  +
push [ebp+Sid]  +
call edi  +
mov ecx [ebp+var_48] +
lea edi [eax+ecx+6Ch] +
push edi  +
call sub_1006EF2  +
mov [ebp+pDacl] eax +
cmp eax ebx +
jz loc_10025CA  +
push 2  +
push edi  +
push eax  +
call ds:InitializeAcl  +
test eax eax +
jnz loc_100274B  +
call sub_1006A53  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_20] +
push eax  +
call sub_10072E4  +
lea eax [ebp+pDacl] +
jmp loc_100251E  +
movzx eax word ptr [esi+2] +
mov edi ds:AddAce +
push eax  +
push esi  +
push 0FFFFFFFFh  +
push 2  +
push [ebp+pDacl]  +
call edi  +
test eax eax +
jz loc_100271A  +
movzx eax word ptr [esi+2] +
push eax  +
mov byte ptr [esi+1] 2 +
mov eax [ebp+pDacl] +
movzx ecx byte ptr [eax] +
push esi  +
push 0FFFFFFFFh  +
push ecx  +
push eax  +
call edi  +
test eax eax +
jz loc_100271A  +
push ebx  +
push [ebp+pDacl]  +
push 1  +
push [ebp+var_20]  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jz loc_100271A  +
push [ebp+var_20]  +
push 4  +
push [ebp+lpFileName]  +
call ds:SetFileSecurityW  +
test eax eax +
jz loc_100271A  +
cmp [ebp+Sid] ebx +
jz loc_10027B5  +
lea eax [ebp+Sid] +
push eax  +
call sub_10072E4  +
cmp [ebp+ReferencedDomainName] ebx +
jz loc_10027C3  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
call sub_10072E4  +
cmp [ebp+pSecurityDescriptor] ebx +
jz loc_10027D1  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call sub_10072E4  +
cmp [ebp+var_20] ebx +
jz loc_10027DF  +
lea eax [ebp+var_20] +
push eax  +
call sub_10072E4  +
cmp [ebp+pDacl] ebx +
jz loc_10027ED  +
lea eax [ebp+pDacl] +
push eax  +
call sub_10072E4  +
cmp [ebp+pSid] ebx +
jz loc_10027FB  +
push [ebp+pSid]  +
call ds:FreeSid  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 810h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+FileSystemFlags] ebx +
mov [ebp+lpRootPathName] ebx +
mov [ebp+lpMem] ebx +
mov ecx 800h +
lea eax [ebp+FileSystemNameBuffer] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002851  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1002899  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 8  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012DC  +
push [ebp+lpMem]  +
call sub_10076C1  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpRootPathName] eax +
cmp eax ebx +
jnz loc_1002910  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
jmp loc_1002885  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
push eax  +
push [ebp+lpRootPathName]  +
push [ebp+lpMem]  +
call ds:GetVolumePathNameW  +
test eax eax +
jnz loc_1002997  +
mov esi ds:GetLastError +
call esi  +
cmp eax 43h +
jz loc_1002955  +
call esi  +
cmp eax 35h +
jz loc_1002955  +
call esi  +
cmp eax 7Bh +
jz loc_1002955  +
push 10001h  +
jmp loc_1002967  +
push 2  +
call ds:SetLastError  +
call sub_1006A53  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+lpRootPathName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
mov eax ebx +
jmp loc_1002888  +
push 400h  +
lea eax [ebp+FileSystemNameBuffer] +
push eax  +
lea eax [ebp+FileSystemFlags] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+lpRootPathName]  +
call ds:GetVolumeInformationW  +
test eax eax +
jnz loc_10029CD  +
call ds:GetLastError  +
cmp eax 90h +
jz loc_1002978  +
jmp loc_100294E  +
test byte ptr [ebp+FileSystemFlags] 8 +
jz loc_1002978  +
mov dword ptr [edi] 1 +
jmp loc_1002978  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor ebx ebx +
push ebx  +
push esi  +
mov [ebp+var_4] ebx +
xor edi edi +
call sub_1006C82  +
lea eax [eax+eax+2] +
push eax  +
call sub_1006EF2  +
xor edx edx +
mov [ebp+var_4] eax +
cmp eax edx +
jnz loc_1002A28  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
xor eax eax +
inc eax  +
jmp loc_1002A7E  +
cmp [esi] dx +
jz loc_1002A5B  +
movzx ecx word ptr [esi+edi*2] +
cmp cx 2Ah +
jnz loc_1002A4C  +
cmp cx dx +
jz loc_1002A47  +
inc edi  +
movzx ecx word ptr [esi+edi*2] +
cmp cx 2Ah +
jz loc_1002A37  +
push 2Ah  +
pop ecx  +
jmp loc_1002A4D  +
inc edi  +
mov [eax+ebx*2] cx +
mov eax [ebp+var_4] +
inc ebx  +
cmp [esi+edi*2] dx +
jnz loc_1002A2D  +
push edx  +
xor ecx ecx +
push esi  +
mov [eax+ebx*2] cx +
call sub_1006C82  +
inc eax  +
push eax  +
push [ebp+var_4]  +
push esi  +
call sub_100767E  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002AA0  +
cmp ecx 7FFFFFFFh +
jbe loc_1002AA5  +
mov eax 80070057h +
test eax eax +
jl loc_1002AE2  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002AD2  +
cmp eax esi +
ja loc_1002AD2  +
jnz loc_1002ADD  +
jmp loc_1002AD7  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+lpFileName] esi +
mov [ebp+hMem] edi +
mov [ebp+pSid] edi +
mov [ebp+pIdentifierAuthority.Value] 0 +
mov [ebp+pIdentifierAuthority.Value+1] 0 +
mov [ebp+pIdentifierAuthority.Value+2] 0 +
mov [ebp+pIdentifierAuthority.Value+3] 0 +
mov [ebp+pIdentifierAuthority.Value+4] 0 +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
mov [ebp+TokenHandle] edi +
mov [ebp+var_24] edi +
cmp esi edi +
jnz loc_1002B44  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1006A53  +
xor eax eax +
jmp loc_1002D80  +
lea eax [ebp+pSid] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_1002B38  +
lea eax [ebp+TokenHandle] +
push eax  +
call sub_1001CF9  +
test eax eax +
jnz loc_1002B87  +
call sub_1006A53  +
cmp [ebp+pSid] edi +
jz loc_1002B3D  +
push [ebp+pSid]  +
call ds:FreeSid  +
jmp loc_1002B3D  +
push 1  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jnz loc_1002BCF  +
call sub_1006A53  +
cmp [ebp+pSid] edi +
jz loc_1002BAA  +
push [ebp+pSid]  +
call ds:FreeSid  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
test eax eax +
jnz loc_1002B3D  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1002B3D  +
push ebx  +
push edi  +
mov ebx 2000000h +
push ebx  +
push 3  +
push edi  +
push 1  +
mov edi 20000h +
push edi  +
push esi  +
mov esi ds:CreateFileW +
call esi  +
mov [ebp+var_1C] eax +
cmp eax 0FFFFFFFFh +
jz loc_1002C7B  +
lea ecx [ebp+hMem] +
push ecx  +
xor ecx ecx +
push ecx  +
lea edx [ebp+pDacl] +
push edx  +
push ecx  +
push ecx  +
push 4  +
push 1  +
push eax  +
call ds:GetSecurityInfo  +
test eax eax +
jz loc_1002C64  +
call sub_1006A53  +
cmp [ebp+pSid] 0 +
jz loc_1002C27  +
push [ebp+pSid]  +
call ds:FreeSid  +
push [ebp+var_1C]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jnz loc_1002C4E  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp [ebp+hMem] 0 +
jz loc_1002C5D  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
jmp loc_1002D7F  +
push 0  +
push [ebp+pDacl]  +
lea eax [ebp+pSecurityDescriptor] +
push 1  +
push eax  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jnz loc_1002C82  +
jmp loc_1002C13  +
mov [ebp+var_24] 1 +
push 0  +
push [ebp+pSid]  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
call ds:SetSecurityDescriptorOwner  +
test eax eax +
jz loc_1002C13  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
push 1  +
push [ebp+lpFileName]  +
call ds:SetFileSecurityW  +
cmp eax 1 +
jz loc_1002D37  +
push [ebp+TokenHandle]  +
call sub_1001D85  +
test eax eax +
jz loc_1002CD5  +
lea eax [ebp+pSecurityDescriptor] +
push eax  +
push 1  +
push [ebp+lpFileName]  +
call ds:SetFileSecurityW  +
test eax eax +
jnz loc_1002D37  +
call sub_1006A53  +
cmp [ebp+var_24] 1 +
jnz loc_1002C18  +
push 0  +
push ebx  +
push 3  +
push 0  +
push 1  +
push edi  +
push [ebp+lpFileName]  +
call esi  +
mov [ebp+var_1C] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1002C18  +
call sub_1006A53  +
cmp [ebp+pSid] 0 +
jz loc_1002D0E  +
push [ebp+pSid]  +
call ds:FreeSid  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
test eax eax +
jnz loc_1002C5D  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1002C5D  +
cmp [ebp+pSid] 0 +
jz loc_1002D46  +
push [ebp+pSid]  +
call ds:FreeSid  +
push [ebp+var_1C]  +
mov esi ds:CloseHandle +
call esi  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jnz loc_1002D6D  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp [ebp+hMem] 0 +
jz loc_1002D7C  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10063F5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0AA0h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_A9C] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov [ebp+var_AA0] eax +
mov eax [ebp+arg_1C] +
xor ebx ebx +
push esi  +
mov esi [ebp+lpString] +
mov [ebp+hFindFile] eax +
push edi  +
mov dword ptr [ebp+var_A94] esi +
mov [ebp+lpMem] ebx +
mov dword ptr [ebp+var_A84] ebx +
mov [ebp+var_A88] ebx +
mov [ebp+var_A90] ebx +
mov ecx 238h +
lea eax [ebp+FileName] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002DF6  +
mov ecx 5F4h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002E07  +
cmp [ebp+arg_4] ebx +
jnz loc_1002EA7  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+28h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1002E3B  +
call sub_1006A53  +
jmp loc_10036A7  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+224h] +
push eax  +
call sub_1006EF2  +
mov dword ptr [ebp+var_A84] eax +
cmp eax ebx +
jnz loc_1002E69  +
call sub_1006A53  +
lea eax [ebp+lpMem] +
jmp loc_10036A1  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+420h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_A88] eax +
cmp eax ebx +
jnz loc_1002F38  +
call sub_1006A53  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_A84] +
jmp loc_10036A1  +
cmp [ebp+arg_4] 1 +
jnz loc_1002F38  +
mov edi ds:GetCurrentDirectoryW +
push ebx  +
push ebx  +
call edi  +
cmp eax ebx +
jz loc_1002E31  +
lea esi [eax+14h] +
lea eax [esi+esi] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1002E31  +
push eax  +
push esi  +
call edi  +
test eax eax +
jz loc_1002E59  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
lea eax [eax+eax+224h] +
push eax  +
call sub_1006EF2  +
mov dword ptr [ebp+var_A84] eax +
cmp eax ebx +
jz loc_1002E59  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
lea eax [eax+eax+420h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_A88] eax +
cmp eax ebx +
jnz loc_1002F52  +
jmp loc_1002E8B  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_100767E  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
test eax eax +
jz loc_1002FA2  +
cmp [ebp+arg_18] ebx +
jnz loc_1002FA2  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
mov ecx eax +
mov eax [ebp+lpMem] +
cmp word ptr [eax+ecx*2-2] 5Ch +
push eax  +
jz loc_1002F93  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset a_  +
jmp loc_1002FD4  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset a__0  +
jmp loc_1002FD4  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push [ebp+lpMem]  +
call sub_10076C1  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+hFindFile]  +
push [ebp+lpMem]  +
call sub_10076C1  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpMem]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_100367E  +
push 11Ch  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_100767E  +
push ebx  +
push 1  +
mov esi offset a__1 +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_100318E  +
push ebx  +
push 1  +
push offset a__  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_100318E  +
mov eax [ebp+var_A9C] +
inc dword ptr [eax]  +
cmp [ebp+arg_4] ebx +
jnz loc_10030C1  +
cmp [ebp+arg_C] ebx +
jnz loc_10030FA  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [ebp+var_A94]  +
push offset aSS  +
push dword ptr [ebp+var_A84]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push dword ptr [ebp+var_A84]  +
call sub_1002A8A  +
add esp 14h +
cmp eax ebx +
jge loc_10030E7  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1003683  +
cmp [ebp+arg_4] 1 +
jnz loc_10030FA  +
push dword ptr [ebp+var_A84]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [ebp+var_A84]  +
call sub_100767E  +
cmp [ebp+arg_10] 1 +
push dword ptr [ebp+var_A84]  +
jnz loc_1003125  +
call sub_1002AE9  +
jmp loc_100312A  +
mov edi dword ptr [ebp+var_A94] +
push ebx  +
push edi  +
call sub_1006C82  +
cmp word ptr [edi+eax*2-2] 5Ch +
lea eax [ebp+FileName] +
push eax  +
push edi  +
jz loc_1003075  +
push offset aSS_0  +
jmp loc_100307A  +
call sub_10020FB  +
cmp eax ebx +
jnz loc_1003360  +
mov edi ds:GetLastError +
call edi  +
cmp eax 514h +
jnz loc_1003266  +
push dword ptr [ebp+var_A84]  +
push 196h  +
call sub_1008890  +
push eax  +
push [ebp+var_A88]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A88]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_100309A  +
mov eax ds:_iob +
push [ebp+var_A88]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
cmp eax 1 +
jnz loc_1003607  +
mov edi ds:SetLastError +
push 11Ch  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_100767E  +
push ebx  +
push 1  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_10035EB  +
push ebx  +
push 1  +
push offset a__  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_10035EB  +
mov eax [ebp+var_A9C] +
inc dword ptr [eax]  +
cmp [ebp+arg_4] ebx +
jnz loc_10033AE  +
cmp [ebp+arg_C] ebx +
jnz loc_10033D9  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [ebp+var_A94]  +
push offset aSS  +
push dword ptr [ebp+var_A84]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push dword ptr [ebp+var_A84]  +
call sub_1002A8A  +
add esp 14h +
cmp eax ebx +
jl loc_100361D  +
cmp [ebp+arg_10] 1 +
push dword ptr [ebp+var_A84]  +
jnz loc_1003409  +
call sub_1002AE9  +
jmp loc_100340E  +
call edi  +
cmp eax 20h +
jnz loc_100327D  +
push dword ptr [ebp+var_A84]  +
push 1A2h  +
jmp loc_1003150  +
push ebx  +
push dword ptr [ebp+var_A84]  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_A90] eax +
cmp eax ebx +
jz loc_100367E  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
push 2FAh  +
call sub_10069C0  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100767E  +
lea eax [ebp+String] +
push esi  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
push dword ptr [ebp+var_A84]  +
push offset a_S  +
push [ebp+var_A90]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A90]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_100309A  +
mov eax ds:_iob +
push [ebp+var_A90]  +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_A90] +
push eax  +
call sub_10072E4  +
jmp loc_100318E  +
cmp [ebp+arg_10] 1 +
jnz loc_1003376  +
push dword ptr [ebp+var_A84]  +
push 191h  +
jmp loc_1003150  +
push [ebp+var_AA0]  +
push dword ptr [ebp+var_A84]  +
push 193h  +
call sub_1008890  +
push eax  +
push [ebp+var_A88]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A88]  +
call sub_1002A8A  +
add esp 14h +
jmp loc_1003172  +
cmp [ebp+arg_4] 1 +
jnz loc_10033D9  +
push dword ptr [ebp+var_A84]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp+FileName] +
push eax  +
push dword ptr [ebp+var_A84]  +
call sub_100767E  +
jmp loc_100324C  +
push ebx  +
push dword ptr [ebp+var_A94]  +
call sub_1006C82  +
mov ecx dword ptr [ebp+var_A94] +
cmp word ptr [ecx+eax*2-2] 5Ch +
lea eax [ebp+FileName] +
push eax  +
push ecx  +
jz loc_1003223  +
push offset aSS_0  +
jmp loc_1003228  +
call sub_10020FB  +
cmp eax ebx +
jnz loc_100358A  +
call ds:GetLastError  +
cmp eax 514h +
jnz loc_1003455  +
push dword ptr [ebp+var_A84]  +
push 196h  +
call sub_1008890  +
push eax  +
push [ebp+var_A88]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A88]  +
call sub_1002A8A  +
add esp 10h +
jmp loc_10035D3  +
call ds:GetLastError  +
cmp eax 20h +
jnz loc_100346D  +
push dword ptr [ebp+var_A84]  +
push 1A2h  +
jmp loc_100342E  +
call ds:GetLastError  +
cmp eax 43h +
jz loc_100348E  +
call ds:GetLastError  +
cmp eax 35h +
jz loc_100348E  +
call ds:GetLastError  +
cmp eax 7Bh +
jnz loc_1003497  +
push 2  +
call edi  +
call sub_1006A53  +
push ebx  +
push dword ptr [ebp+var_A84]  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_A90] eax +
cmp eax ebx +
jz loc_100367E  +
mov eax ds:_iob +
push offset asc_10012E4  +
add eax 20h +
push eax  +
call sub_1007704  +
push 138Ch  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1007704  +
push 2FAh  +
call sub_10069C0  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100767E  +
lea eax [ebp+String] +
push esi  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
push dword ptr [ebp+var_A84]  +
push offset a_S  +
push [ebp+var_A90]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A90]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_100361D  +
mov eax ds:_iob +
push [ebp+var_A90]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_A90] +
push eax  +
call sub_10072E4  +
jmp loc_10035EB  +
cmp [ebp+arg_10] 1 +
jnz loc_10035A0  +
push dword ptr [ebp+var_A84]  +
push 191h  +
jmp loc_100342E  +
push [ebp+var_AA0]  +
push dword ptr [ebp+var_A84]  +
push 193h  +
call sub_1008890  +
push eax  +
push [ebp+var_A88]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_A88]  +
call sub_1002A8A  +
add esp 14h +
cmp eax ebx +
jl loc_100361D  +
mov eax ds:_iob +
push [ebp+var_A88]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
cmp eax 1 +
jz loc_10031B0  +
mov eax [ebp+var_A9C] +
cmp [eax] ebx +
jnz loc_1003641  +
cmp [ebp+arg_18] ebx +
jnz loc_1003628  +
push 265h  +
jmp loc_100362D  +
movzx eax ax +
push eax  +
call edi  +
jmp loc_10030A4  +
push 1A7h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
cmp [ebp+hFindFile] ebx +
jz loc_1003655  +
push [ebp+hFindFile]  +
call ds:FindClose  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_A84] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_A88] +
push eax  +
call sub_10072E4  +
xor eax eax +
inc eax  +
jmp loc_10036A9  +
call sub_1006A53  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_A84] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_A88] +
push eax  +
call sub_10072E4  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48Ch +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+lpString] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_47C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_48C] eax +
mov eax [ebp+arg_10] +
push ebx  +
xor ebx ebx +
mov [ebp+var_480] eax +
mov eax [ebp+arg_14] +
push esi  +
mov [ebp+var_474] eax +
push edi  +
mov [ebp+NumberOfBytesRead] ebx +
mov [ebp+dwMode] ebx +
mov [ebp+Buffer] ebx +
mov [ebp+var_45C] ebx +
mov [ebp+var_478] ebx +
mov [ebp+var_464] ebx +
mov [ebp+var_470] ebx +
mov [ebp+var_484] ebx +
mov [ebp+lpMem] ebx +
mov ecx 1FCh +
lea eax [ebp+String1] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003747  +
mov ecx 250h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003758  +
lea eax [ebp+String] +
push eax  +
push lpFileName  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_1003A12  +
mov edi offset a__1 +
test dword ptr [ebp+String] 10h +
jz loc_10039A1  +
lea eax [ebp-424h] +
push edi  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10039A1  +
lea eax [ebp-424h] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10039A1  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov esi eax +
push ebx  +
lea eax [ebp-424h] +
push eax  +
call sub_1006C82  +
push lpFileName  +
lea eax [esi+eax+0Ah] +
lea esi [eax+eax] +
call sub_1006F9B  +
cmp eax esi +
jnb loc_1003819  +
push esi  +
push offset lpFileName  +
call sub_100735F  +
test eax eax +
jz loc_10039C1  +
cmp lpFileName ebx +
jz loc_10039C1  +
push lpFileName  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push lpFileName  +
call sub_100767E  +
mov eax lpFileName +
cmp eax ebx +
jz loc_1003875  +
push ebx  +
push eax  +
call sub_1006C82  +
mov ecx eax +
mov eax lpFileName +
cmp word ptr [eax+ecx*2-2] 5Ch +
jz loc_1003875  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push lpFileName  +
call sub_10076C1  +
mov eax lpFileName +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-424h] +
push eax  +
push lpFileName  +
call sub_10076C1  +
lea eax [ebp+var_464] +
push eax  +
push lpFileName  +
call sub_1002814  +
test eax eax +
jnz loc_10038B2  +
cmp [ebp+var_464] ebx +
jz loc_10039A1  +
push ebx  +
lea eax [ebp-424h] +
push eax  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_10039C1  +
push ebx  +
push edi  +
push [ebp+var_480]  +
call sub_100760E  +
test eax eax +
jz loc_1003936  +
push ebx  +
push edi  +
lea eax [ebp-424h] +
push eax  +
call sub_100760E  +
test eax eax +
jnz loc_1003936  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-424h] +
push eax  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+lpMem]  +
call sub_10076C1  +
jmp loc_1003956  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-424h] +
push eax  +
push [ebp+lpMem]  +
call sub_100767E  +
cmp [ebp+arg_C] ebx +
jz loc_1003977  +
cmp [ebp+arg_C] 1 +
jnz loc_1003986  +
push [ebp+lpMem]  +
push [ebp+var_480]  +
call sub_1006FE8  +
cmp eax 1 +
jnz loc_1003986  +
push lpFileName  +
call sub_10020FB  +
test eax eax +
jz loc_1003995  +
push lpFileName  +
call sub_1001F1A  +
test eax eax +
jz loc_10039F0  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+String] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1003785  +
jmp loc_1003F8A  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp [ebp+hFindFile] ebx +
jz loc_10039E8  +
push [ebp+hFindFile]  +
call ds:FindClose  +
xor eax eax +
inc eax  +
jmp loc_1003FA0  +
cmp [ebp+hFindFile] ebx +
jz loc_1003A04  +
push [ebp+hFindFile]  +
call ds:FindClose  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
jmp loc_10039E8  +
push ebx  +
push [ebp+var_474]  +
call sub_1006C82  +
xor edi edi +
inc edi  +
test eax eax +
jnz loc_1003D09  +
mov eax [ebp+var_47C] +
cmp [eax] ebx +
jnz loc_1003CF7  +
mov esi [ebp+lpString] +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_45C] eax +
cmp eax ebx +
jnz loc_1003A79  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_10039E8  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_464] eax +
cmp eax ebx +
jnz loc_1003AA5  +
lea eax [ebp+var_45C] +
push eax  +
call sub_10072E4  +
jmp loc_1003A5B  +
push esi  +
push 199h  +
call sub_1008890  +
push eax  +
push [ebp+var_45C]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_45C]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jge loc_1003AFE  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+var_45C] +
jmp loc_1003A0A  +
push esi  +
push 19Eh  +
call sub_1008890  +
push eax  +
push [ebp+var_464]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_464]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_1003AD1  +
cmp [ebp+var_470] ebx +
jnz loc_1003B69  +
mov eax ds:_iob +
add eax 20h +
cmp [ebp+var_478] ebx +
jnz loc_1003B4A  +
push [ebp+var_45C]  +
jmp loc_1003B4F  +
push offset asc_1001340  +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push [ebp+var_464]  +
add eax 20h +
push eax  +
call sub_1007704  +
inc [ebp+var_478]  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1003CDD  +
lea eax [ebp+dwMode] +
push eax  +
push esi  +
call ds:GetConsoleMode  +
cmp eax edi +
jnz loc_1003BBF  +
and [ebp+dwMode] 0FFFFFFF9h +
push [ebp+dwMode]  +
push esi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1003CDD  +
push esi  +
call ds:FlushConsoleInputBuffer  +
test eax eax +
jz loc_1003CDD  +
push ebx  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:ReadFile  +
test eax eax +
jz loc_1003CDD  +
cmp esi 0Fh +
jz loc_1003BEE  +
cmp esi 3 +
jz loc_1003BEE  +
mov [ebp+var_484] edi +
movzx eax word ptr [ebp+Buffer] +
push eax  +
push offset aC  +
lea eax [ebp+String1] +
push 0FEh  +
push eax  +
call sub_1002A8A  +
add esp 10h +
test eax eax +
jl loc_1003CF0  +
cmp [ebp+var_484] edi +
jnz loc_1003C4F  +
cmp [ebp+String1] 0Ah +
jz loc_1003CD5  +
cmp [ebp+String1] 0Dh +
jz loc_1003CD5  +
cmp [ebp+String1] 9 +
jz loc_1003CD5  +
mov [ebp+var_470] ebx +
lea eax [ebp+String1] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
cmp [ebp+NumberOfBytesRead] ebx +
jz loc_1003CC7  +
push ebx  +
push edi  +
push 19Ah  +
call sub_1008890  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_1003CC7  +
push ebx  +
push edi  +
push 19Bh  +
call sub_1008890  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
test eax eax +
jz loc_1003CC7  +
push ebx  +
push edi  +
push 19Ch  +
call sub_1008890  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
test eax eax +
jnz loc_1003B2A  +
lea eax [ebp+var_45C] +
push eax  +
call sub_10072E4  +
jmp loc_1003D2A  +
mov [ebp+var_470] edi +
jmp loc_1003C64  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
mov eax edi +
jmp loc_1003FA0  +
push 0FEh  +
push 19Ah  +
call sub_1008890  +
push eax  +
jmp loc_1003D14  +
push 0FEh  +
push [ebp+var_474]  +
lea eax [ebp+String1] +
push eax  +
call sub_100767E  +
mov [ebp+NumberOfBytesRead] 2 +
cmp [ebp+NumberOfBytesRead] ebx +
jz loc_1003F20  +
push ebx  +
push edi  +
push 19Ah  +
call sub_1008890  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
test eax eax +
jnz loc_1003F20  +
push [ebp+arg_18]  +
mov eax [ebp+var_47C] +
push [ebp+var_48C]  +
mov [eax] edi +
push 0F0FFFFFFh  +
push [ebp+lpString]  +
call sub_1002431  +
cmp eax edi +
jnz loc_1003F03  +
lea eax [ebp+String] +
push eax  +
push lpFileName  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_1003F8A  +
mov edi ds:_wcsicmp +
test dword ptr [ebp+String] 10h +
jz loc_1003EE3  +
lea eax [ebp-424h] +
push offset a__1  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003EE3  +
lea eax [ebp-424h] +
push offset a__  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003EE3  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov esi eax +
push ebx  +
lea eax [ebp-424h] +
push eax  +
call sub_1006C82  +
push lpFileName  +
lea esi [esi+eax+0Ah] +
call sub_1006F9B  +
lea ecx [esi+esi] +
cmp eax ecx +
jnb loc_1003E59  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov esi eax +
push ebx  +
lea eax [ebp-424h] +
push eax  +
call sub_1006C82  +
add esi eax +
lea eax [esi+esi+14h] +
push eax  +
push offset lpFileName  +
call sub_100735F  +
test eax eax +
jz loc_10039C1  +
cmp lpFileName ebx +
jz loc_10039C1  +
push lpFileName  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push lpFileName  +
call sub_100767E  +
mov eax lpFileName +
cmp eax ebx +
jz loc_1003EB5  +
push ebx  +
push eax  +
call sub_1006C82  +
mov ecx eax +
mov eax lpFileName +
cmp word ptr [eax+ecx*2-2] 5Ch +
jz loc_1003EB5  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push lpFileName  +
call sub_10076C1  +
mov eax lpFileName +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-424h] +
push eax  +
push lpFileName  +
call sub_10076C1  +
push lpFileName  +
call sub_1001F1A  +
test eax eax +
jz loc_10039D4  +
lea eax [ebp+String] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1003DA8  +
jmp loc_1003F8A  +
mov eax ds:_iob +
push offset asc_10012E4  +
add eax 40h +
push eax  +
call sub_1007704  +
push 20001h  +
jmp loc_1003CE2  +
push ebx  +
push [ebp+var_474]  +
call sub_1006C82  +
test eax eax +
jnz loc_1003F92  +
cmp [ebp+NumberOfBytesRead] ebx +
jz loc_1003F77  +
push ebx  +
push edi  +
push 19Ch  +
call sub_1008890  +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_1006CA3  +
test eax eax +
jnz loc_1003F77  +
mov eax ds:_iob +
push offset asc_10012E4  +
add eax 20h +
push eax  +
call sub_1007704  +
push 0FFFFFFFFh  +
call ds:FindClose  +
mov eax 3E8h +
jmp loc_1003FA0  +
mov eax ds:_iob +
push offset asc_10012E4  +
add eax 20h +
push eax  +
call sub_1007704  +
cmp [ebp+hFindFile] ebx +
jz loc_1003F9E  +
push [ebp+hFindFile]  +
call ds:FindClose  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 868h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_864] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_85C] eax +
mov eax [ebp+arg_14] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lpString] +
mov [ebp+var_868] eax +
mov [ebp+var_860] ebx +
mov [ebp+var_84C] ebx +
mov [ebp+var_850] ebx +
mov [ebp+var_854] ebx +
mov [ebp+lpMem] ebx +
mov ecx 5F4h +
lea eax [ebp+var_5F8] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004016  +
push ebx  +
push esi  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_850] eax +
cmp eax ebx +
jnz loc_1004051  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
xor eax eax +
jmp loc_10047A1  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+var_850]  +
call sub_100767E  +
push esi  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push esi  +
call sub_10076C1  +
push esi  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset a__0  +
push esi  +
call sub_10076C1  +
mov ecx 250h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004099  +
push edi  +
lea eax [ebp+String] +
push eax  +
push esi  +
call ds:FindFirstFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1004892  +
test dword ptr [ebp+String] 10h +
jz loc_10040FD  +
lea eax [ebp-81Ch] +
push offset a__1  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10046EE  +
lea eax [ebp-81Ch] +
push offset a__  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10046EE  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
mov esi eax +
push ebx  +
lea eax [ebp-81Ch] +
push eax  +
call sub_1006C82  +
push lpFileName  +
lea esi [esi+eax+0Ah] +
call sub_1006F9B  +
lea ecx [esi+esi] +
cmp eax ecx +
jnb loc_100416E  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
mov esi eax +
push ebx  +
lea eax [ebp-81Ch] +
push eax  +
call sub_1006C82  +
add esi eax +
lea eax [esi+esi+14h] +
push eax  +
push offset lpFileName  +
call sub_100735F  +
test eax eax +
jz loc_1004745  +
cmp lpFileName ebx +
jz loc_1004774  +
push lpFileName  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_850]  +
push lpFileName  +
call sub_100767E  +
mov eax lpFileName +
cmp eax ebx +
jz loc_10041CA  +
push ebx  +
push eax  +
call sub_1006C82  +
mov ecx eax +
mov eax lpFileName +
cmp word ptr [eax+ecx*2-2] 5Ch +
jz loc_10041CA  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push lpFileName  +
call sub_10076C1  +
mov eax lpFileName +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-81Ch] +
push eax  +
push lpFileName  +
call sub_10076C1  +
push ebx  +
lea eax [ebp-81Ch] +
push eax  +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_10047B1  +
push ebx  +
mov esi offset a__1 +
push esi  +
push [ebp+var_85C]  +
call sub_100760E  +
test eax eax +
jz loc_100426E  +
push ebx  +
push esi  +
lea eax [ebp-81Ch] +
push eax  +
call sub_100760E  +
test eax eax +
jnz loc_100426E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-81Ch] +
push eax  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_10076C1  +
jmp loc_100428E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
lea eax [ebp-81Ch] +
push eax  +
push [ebp+lpMem]  +
call sub_100767E  +
cmp [ebp+arg_C] ebx +
jz loc_10042B7  +
cmp [ebp+arg_C] 1 +
jnz loc_10046E2  +
push [ebp+lpMem]  +
push [ebp+var_85C]  +
call sub_1006FE8  +
cmp eax 1 +
jnz loc_10046E2  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
mov eax [ebp+var_868] +
mov [eax] ebx +
lea eax [ebp+var_860] +
push eax  +
push lpFileName  +
call sub_1002814  +
test eax eax +
jnz loc_1004368  +
cmp [ebp+var_860] ebx +
jnz loc_1004368  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_854] eax +
cmp eax ebx +
jz loc_10043C4  +
push lpFileName  +
push 1AAh  +
call sub_1008890  +
push eax  +
push [ebp+var_854]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_854]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_10047EF  +
mov eax ds:_iob +
push [ebp+var_854]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_854] +
jmp loc_10046E8  +
cmp [ebp+arg_4] 1 +
push lpFileName  +
jnz loc_100437B  +
call sub_1002AE9  +
jmp loc_1004380  +
call sub_10020FB  +
cmp eax ebx +
jnz loc_10045F9  +
call ds:GetLastError  +
cmp eax 514h +
jnz loc_1004467  +
push ebx  +
push lpFileName  +
cmp [ebp+var_84C] ebx +
jnz loc_10043E2  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_84C] eax +
cmp eax ebx +
jnz loc_1004435  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1004874  +
call sub_1006C82  +
push [ebp+var_84C]  +
mov esi eax +
add esi 108h +
call sub_1006F9B  +
lea ecx [esi+esi] +
cmp eax ecx +
jnb loc_1004435  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
lea eax [ebp+var_84C] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_10047D4  +
cmp [ebp+var_84C] ebx +
jz loc_10047D4  +
push lpFileName  +
push 196h  +
call sub_1008890  +
push eax  +
push [ebp+var_84C]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_84C]  +
call sub_1002A8A  +
add esp 10h +
jmp loc_10046C6  +
call ds:GetLastError  +
push ebx  +
push lpFileName  +
cmp eax 20h +
jnz loc_100450A  +
cmp [ebp+var_84C] ebx +
jnz loc_10044A7  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_84C] eax +
cmp eax ebx +
jz loc_10043C4  +
jmp loc_10044FA  +
call sub_1006C82  +
push [ebp+var_84C]  +
mov esi eax +
add esi 108h +
call sub_1006F9B  +
lea ecx [esi+esi] +
cmp eax ecx +
jnb loc_10044FA  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
lea eax [ebp+var_84C] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_10047D4  +
cmp [ebp+var_84C] ebx +
jz loc_10047D4  +
push lpFileName  +
push 1A2h  +
jmp loc_1004440  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_854] eax +
cmp eax ebx +
mov eax ds:_iob +
jz loc_100485A  +
push offset asc_10012E4  +
add eax 20h +
push eax  +
call sub_1007704  +
push 138Ch  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1007704  +
push 2FAh  +
call sub_10069C0  +
push eax  +
lea eax [ebp+var_5F8] +
push eax  +
call sub_100767E  +
lea eax [ebp+var_5F8] +
push esi  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_5F8] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
push lpFileName  +
push offset a_S  +
push [ebp+var_854]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_854]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_10047EF  +
mov eax ds:_iob +
push [ebp+var_854]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_854] +
push eax  +
call sub_10072E4  +
jmp loc_10046E2  +
push ebx  +
push lpFileName  +
cmp [ebp+var_84C] ebx +
jnz loc_100462A  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_84C] eax +
cmp eax ebx +
jz loc_10043C4  +
jmp loc_100467D  +
call sub_1006C82  +
push [ebp+var_84C]  +
mov esi eax +
add esi 108h +
call sub_1006F9B  +
lea ecx [esi+esi] +
cmp eax ecx +
jnb loc_100467D  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
lea eax [eax+eax+210h] +
push eax  +
lea eax [ebp+var_84C] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_1004819  +
cmp [ebp+var_84C] ebx +
jz loc_1004819  +
cmp [ebp+arg_4] 1 +
jnz loc_1004693  +
push lpFileName  +
push 191h  +
jmp loc_1004440  +
push [ebp+var_864]  +
push lpFileName  +
push 193h  +
call sub_1008890  +
push eax  +
push [ebp+var_84C]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_84C]  +
call sub_1002A8A  +
add esp 14h +
cmp eax ebx +
jl loc_1004846  +
mov eax ds:_iob +
push [ebp+var_84C]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+String] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_10040B9  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_1004892  +
call sub_1006A53  +
call sub_10069C0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
cmp edi ebx +
jz loc_1004737  +
push edi  +
call ds:FindClose  +
lea eax [ebp+var_84C] +
push eax  +
call sub_10072E4  +
jmp loc_1004792  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp edi ebx +
jz loc_1004763  +
push edi  +
call ds:FindClose  +
lea eax [ebp+var_850] +
push eax  +
call sub_10072E4  +
jmp loc_100488B  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp edi ebx +
jz loc_1004792  +
push edi  +
call ds:FindClose  +
lea eax [ebp+var_850] +
push eax  +
call sub_10072E4  +
mov eax ebx +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 18h  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp edi ebx +
jz loc_10047CF  +
push edi  +
call ds:FindClose  +
xor ebx ebx +
inc ebx  +
jmp loc_1004792  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1004868  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+var_854] +
jmp loc_100486E  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_850] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_84C] +
jmp loc_100487A  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+var_84C] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_850] +
push eax  +
call sub_10072E4  +
cmp edi ebx +
jz loc_100488B  +
push edi  +
call ds:FindClose  +
xor eax eax +
jmp loc_10047A0  +
cmp edi ebx +
jz loc_100489D  +
push edi  +
call ds:FindClose  +
lea eax [ebp+var_84C] +
push eax  +
mov dword_100C024 ebx +
call sub_10072E4  +
jmp loc_10047CF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
cmp [ebp+arg_8] 1 +
push edi  +
mov [ebp+var_4] ebx +
push ebx  +
jnz loc_100493B  +
mov edi ds:GetCurrentDirectoryW +
push ebx  +
call edi  +
mov esi eax +
cmp esi ebx +
jnz loc_10048FA  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
lea eax [esi+esi+28h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_1004912  +
push 20001h  +
jmp loc_10048E2  +
push eax  +
add esi 0Ah +
push esi  +
call edi  +
test eax eax +
jnz loc_1004968  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
jmp loc_10048F0  +
push [ebp+lpString]  +
call sub_1006C82  +
lea eax [eax+eax+28h] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100490B  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push [ebp+var_4]  +
call sub_100767E  +
xor esi esi +
inc esi  +
cmp [ebp+arg_4] esi +
jnz loc_1004996  +
push ebx  +
push [ebp+arg_C]  +
call sub_1006C82  +
test eax eax +
jz loc_1004996  +
push 133h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
push [ebp+arg_10]  +
push [ebp+var_4]  +
call sub_1002814  +
cmp eax esi +
jnz loc_10049B5  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
mov eax esi +
jmp loc_10048F3  +
xor esi esi +
jmp loc_10049A5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
mov esi 1FCh +
push esi  +
mov [ebp+var_8] ebx +
mov [ebp+lpString] ebx +
call sub_1006EF2  +
mov lpFileName eax +
cmp eax ebx +
jnz loc_1004A03  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
xor eax eax +
jmp loc_1004B7D  +
push esi  +
call sub_1006EF2  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_1004A35  +
push 266h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
push offset lpFileName  +
call sub_10072E4  +
jmp loc_10049FC  +
push edi  +
cmp Mem ebx +
jz loc_1004B41  +
mov esi 3E8h +
call sub_1001FFF  +
test eax eax +
jz loc_1004B46  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
push [ebp+lpString]  +
lea edi [eax+eax+14h] +
call sub_1006F9B  +
cmp eax edi +
jnb loc_1004A8B  +
push edi  +
lea eax [ebp+lpString] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_1004B54  +
cmp [ebp+lpString] ebx +
jz loc_1004B54  +
push [ebp+lpString]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push lpFileName  +
push [ebp+lpString]  +
call sub_100767E  +
push ebx  +
push lpFileName  +
call sub_1006C82  +
mov ecx eax +
mov eax lpFileName +
cmp word ptr [eax+ecx*2-2] 5Ch +
jz loc_1004ADD  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push lpFileName  +
call sub_10076C1  +
mov eax lpFileName +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset a__0  +
push lpFileName  +
call sub_10076C1  +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [ebp+lpString]  +
call sub_10036BF  +
cmp eax 1 +
jz loc_1004B83  +
cmp eax esi +
jz loc_1004B85  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+lpString]  +
call sub_1003FB6  +
test eax eax +
jz loc_1004B83  +
cmp Mem ebx +
jnz loc_1004A47  +
xor esi esi +
inc esi  +
jmp loc_1004B85  +
mov esi offset lpFileName +
push esi  +
call sub_10072E4  +
push esi  +
jmp loc_1004B75  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+lpString] +
push eax  +
call sub_10072E4  +
push offset lpFileName  +
call sub_10072E4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
xor esi esi +
push offset lpFileName  +
call sub_10072E4  +
lea eax [ebp+lpString] +
push eax  +
call sub_10072E4  +
mov eax esi +
jmp loc_1004B7C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
inc esi  +
push edi  +
mov edi [ebp+arg_18] +
mov dword ptr [ebp+var_8] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_C] esi +
cmp [ebp+arg_4] ebx +
jnz loc_1004C94  +
push [ebp+lpString]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_1004C16  +
call ds:GetLastError  +
cmp eax 20h +
jnz loc_1004BFA  +
push 197h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1004C0D  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
test al 10h +
jz loc_1004BDF  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
lea eax [eax+eax+100h] +
push eax  +
call sub_1006EF2  +
mov dword ptr [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1004C3E  +
push 20001h  +
jmp loc_1004BFF  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push dword ptr [ebp+var_8]  +
call sub_100767E  +
cmp [ebp+arg_10] ebx +
jnz loc_1004E3B  +
cmp [ebp+arg_14] ebx +
jnz loc_1004E3B  +
cmp edi ebx +
jnz loc_1004E3B  +
push ebx  +
push dword ptr [ebp+var_8]  +
call sub_1006C82  +
lea eax [eax+eax+3F8h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1004CDA  +
lea eax [ebp+var_8] +
push eax  +
call sub_10072E4  +
jmp loc_1004C37  +
push 308h  +
call sub_1006EF2  +
mov dword ptr [ebp+var_8] eax +
cmp eax ebx +
jz loc_1004C37  +
push eax  +
push 0FEh  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jnz loc_1004E3B  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+var_8] +
push eax  +
call sub_10072E4  +
jmp loc_1004C0D  +
push dword ptr [ebp+var_8]  +
cmp [ebp+arg_8] esi +
jnz loc_1004CE9  +
call sub_1002AE9  +
jmp loc_1004CEE  +
call sub_10020FB  +
cmp eax ebx +
jnz loc_1004DEC  +
mov edi ds:GetLastError +
call edi  +
cmp eax 514h +
jnz loc_1004D76  +
push dword ptr [ebp+var_8]  +
push 19Dh  +
call sub_1008890  +
push eax  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jge loc_1004D5D  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
jmp loc_1004CCC  +
mov eax ds:_iob +
push [ebp+lpMem]  +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+lpMem] +
jmp loc_1004CCF  +
call edi  +
cmp eax 20h +
jnz loc_1004DB8  +
push dword ptr [ebp+var_8]  +
push 1A1h  +
call sub_1008890  +
push eax  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_1004D2D  +
push [ebp+lpMem]  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1004D4F  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_10069C0  +
push eax  +
jmp loc_1004DA8  +
cmp [ebp+arg_8] esi +
jnz loc_1004E8F  +
push dword ptr [ebp+var_8]  +
push 191h  +
call sub_1008890  +
push eax  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_1004D2D  +
mov eax ds:_iob +
push [ebp+lpMem]  +
add eax 20h +
push eax  +
call sub_1007704  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
push dword ptr [ebp+var_8]  +
call sub_1001F1A  +
cmp eax esi +
jnz loc_1004CCC  +
push [ebp+arg_20]  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_1C]  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_10049BE  +
cmp eax esi +
jz loc_1004E70  +
cmp eax 3E8h +
jnz loc_1004CCC  +
cmp [ebp+var_C] esi +
jnz loc_1004EE7  +
cmp [ebp+arg_4] esi +
jz loc_1004E84  +
cmp [ebp+arg_10] esi +
jz loc_1004E84  +
cmp [ebp+arg_14] esi +
jnz loc_1004EBB  +
cmp edi ebx +
jnz loc_1004EBB  +
push 265h  +
jmp loc_1004ED3  +
push [ebp+arg_C]  +
push dword ptr [ebp+var_8]  +
push 193h  +
call sub_1008890  +
push eax  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
call sub_1002A8A  +
add esp 14h +
jmp loc_1004E19  +
cmp [ebp+arg_4] esi +
jz loc_1004ECA  +
cmp [ebp+arg_10] esi +
jz loc_1004ECA  +
cmp [ebp+arg_14] esi +
jnz loc_1004EE7  +
cmp edi esi +
jnz loc_1004EE7  +
push 1A7h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1007704  +
xor esi esi +
jmp loc_1004CCC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C98h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push ebx  +
mov [ebp+var_C84] ebx +
mov [ebp+var_C88] ebx +
mov [ebp+var_C50] ebx +
mov [ebp+var_C78] ebx +
mov [ebp+var_C64] ebx +
mov [ebp+var_C68] ebx +
mov [ebp+var_C90] ebx +
mov [ebp+var_C74] ebx +
mov [ebp+var_C6C] ebx +
mov [ebp+var_C70] ebx +
mov [ebp+var_C80] ebx +
mov [ebp+var_C60] ebx +
mov [ebp+lpUserName] ebx +
mov [ebp+lpPassword] ebx +
mov [ebp+var_C38] ebx +
mov [ebp+lpString] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+lpString1] ebx +
mov [ebp+var_C44] ebx +
mov [ebp+FilePart] ebx +
mov dword ptr [ebp+lpBuffer] ebx +
mov [ebp+var_C54] ebx +
mov [ebp+nSize] 3FDh +
mov [ebp+var_C7C] 2 +
mov [ebp+var_C94] ebx +
call ds:SetThreadUILanguage  +
push ebx  +
xor esi esi +
push ebx  +
inc esi  +
push esi  +
push ebx  +
call ds:HeapSetInformation  +
mov ecx 3F8h +
lea eax [ebp+var_C34] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004FCD  +
mov ecx 7FAh +
lea eax [ebp+NameBuffer] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004FDE  +
push 28h  +
pop ecx  +
lea eax [ebp+var_40] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004FEA  +
push 14h  +
pop ecx  +
lea eax [ebp+var_18] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004FF6  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_C6C] +
push eax  +
lea eax [ebp+var_C90] +
push eax  +
lea eax [ebp+var_C88] +
push eax  +
lea eax [ebp+var_C84] +
push eax  +
lea eax [ebp+lpString1] +
push eax  +
lea eax [ebp+lpPassword] +
push eax  +
lea eax [ebp+lpUserName] +
push eax  +
lea eax [ebp+var_C38] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_1001595  +
test eax eax +
jnz loc_100508D  +
mov ebx esi +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
call sub_100756B  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn   +
cmp [ebp+var_C84] esi +
jnz loc_100509C  +
call sub_1001CCE  +
jmp loc_1005047  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+NameBuffer] +
push eax  +
push 2  +
call GetUserNameExW  +
test al al +
jnz loc_10050CD  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1005045  +
lea eax [ebp+var_C74] +
push eax  +
lea eax [ebp+NameBuffer] +
push eax  +
call sub_1001DFE  +
cmp eax 0FFh +
jz loc_1005045  +
cmp [ebp+var_C6C] esi +
jnz loc_100511A  +
call sub_1009B80  +
test eax eax +
jnz loc_100511A  +
push 12Fh  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1005045  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
push 5Ch  +
cmp eax 3 +
mov eax [ebp+lpString1] +
pop edi  +
jbe loc_1005150  +
cmp word ptr [eax+2] 3Ah +
jnz loc_1005150  +
mov ecx edi +
cmp cx [eax+4] +
jnz loc_1005150  +
cmp cx [eax+6] +
jnz loc_1005150  +
push 25Eh  +
jmp loc_1005101  +
push ebx  +
push eax  +
call sub_1006C82  +
test eax eax +
jz loc_100516F  +
push ebx  +
push esi  +
push 3Fh  +
push [ebp+lpString1]  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jnz loc_1005149  +
push [ebp+var_C38]  +
call sub_1009C0A  +
test eax eax +
mov eax [ebp+var_C38] +
jz loc_1005187  +
add eax 4 +
push eax  +
call sub_100A07C  +
push [ebp+lpString1]  +
mov [ebp+var_C74] eax +
call sub_1009C0A  +
cmp eax esi +
jnz loc_10051A8  +
mov [ebp+var_C70] esi +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_C44] eax +
cmp eax ebx +
jz loc_1005045  +
cmp [ebp+var_C74] ebx +
jnz loc_100559D  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
cmp eax esi +
jnz loc_100525D  +
push ebx  +
push esi  +
push offset String2  +
push [ebp+lpString1]  +
call sub_1006CA3  +
test eax eax +
jnz loc_100525D  +
push 12Dh  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
mov ebx esi +
jmp loc_1005077  +
push [ebp+var_C88]  +
push [ebp+lpPassword]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpUserName]  +
push [ebp+var_C38]  +
call sub_100A470  +
test eax eax +
jnz loc_1005309  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_10069C0  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpPassword] +
jmp loc_1005244  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_1005334  +
cmp eax 50010001h +
jz loc_100532C  +
cmp eax 0A0010001h +
jz loc_1005334  +
mov [ebp+var_C50] esi +
jmp loc_100534D  +
mov [ebp+var_C50] ebx +
jmp loc_100534D  +
mov eax ds:_iob +
push 10004h  +
add eax 40h +
push eax  +
mov [ebp+var_C50] ebx +
call sub_10088A8  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10072E4  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
push ebx  +
push [ebp+var_C38]  +
mov edi eax +
call sub_1006C82  +
add edi eax +
lea eax [edi+edi+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_10053C9  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp [ebp+var_C50] esi +
jnz loc_10053B2  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
jmp loc_1005238  +
push [ebp+var_C38]  +
call sub_1009C0A  +
push [ebp+lpMem]  +
test eax eax +
jnz loc_1005417  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012DC  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_C38]  +
push [ebp+lpMem]  +
call sub_10076C1  +
jmp loc_1005430  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_C38]  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push offset asc_10012D8  +
push [ebp+lpMem]  +
call sub_10076C1  +
push [ebp+lpString1]  +
call sub_1009C0A  +
test eax eax +
jnz loc_10054CC  +
push [ebp+var_C44]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString1]  +
push [ebp+var_C44]  +
call sub_100767E  +
mov eax [ebp+lpString1] +
cmp word ptr [eax+2] 3Ah +
jnz loc_1005490  +
push 24h  +
pop ecx  +
mov [eax+2] cx +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString1]  +
push [ebp+lpMem]  +
call sub_10076C1  +
mov eax [ebp+lpString1] +
cmp word ptr [eax+2] 24h +
jnz loc_1005864  +
push 3Ah  +
pop ecx  +
mov [eax+2] cx +
jmp loc_1005864  +
push 3Ah  +
push [ebp+lpString1]  +
call ds:wcsrchr  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jz loc_1005579  +
dec edi  +
dec edi  +
jz loc_1005864  +
push [ebp+var_C44]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+var_C44]  +
call sub_100767E  +
mov eax [ebp+var_C44] +
cmp word ptr [eax+2] 3Ah +
jnz loc_100551C  +
push 24h  +
pop ecx  +
mov [eax+2] cx +
push offset asc_1001394  +
push [ebp+lpString1]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
push [ebp+lpMem]  +
mov edi eax +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
mov eax [ebp+var_C44] +
add eax 2 +
push eax  +
push [ebp+lpMem]  +
call sub_10076C1  +
mov eax [ebp+var_C44] +
jmp loc_10054B5  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString1]  +
push [ebp+lpMem]  +
call sub_100767E  +
jmp loc_1005864  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10072E4  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_10055E4  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_10053B2  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
cmp eax 2 +
mov eax [ebp+lpString1] +
jnz loc_1005670  +
cmp [eax] di +
jnz loc_1005670  +
movzx ecx word ptr [eax+2] +
cmp cx di +
jz loc_100560F  +
cmp cx 3Ah +
jnz loc_1005670  +
push 25Eh  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_100756B  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
mov eax esi +
jmp loc_100507E  +
push ebx  +
push eax  +
call sub_1006C82  +
cmp eax 2 +
jbe loc_1005723  +
mov eax [ebp+lpString1] +
mov ecx edi +
cmp cx [eax] +
jnz loc_1005729  +
cmp di [eax+2] +
jnz loc_1005729  +
mov ax [eax+4] +
mov [ebp+var_40] ax +
xor eax eax +
mov [ebp-3Eh] ax +
lea eax [ebp+var_40] +
push offset a?_@?  +
push eax  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100560F  +
mov eax [ebp+lpString1] +
push ebx  +
push offset asc_10012DC  +
add eax 4 +
push eax  +
call sub_100760E  +
test eax eax +
jz loc_1005723  +
push 25Eh  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
jmp loc_1005244  +
mov eax [ebp+lpString1] +
push ebx  +
push eax  +
call sub_1006C82  +
cmp eax esi +
jz loc_1005745  +
push ebx  +
push [ebp+lpString1]  +
call sub_1006C82  +
cmp eax 2 +
jnz loc_1005751  +
mov eax [ebp+lpString1] +
cmp word ptr [eax] 3Ah +
jz loc_10056DB  +
cmp [ebp+var_C70] esi +
jnz loc_1005815  +
push 3Ah  +
push [ebp+lpString1]  +
call ds:wcsrchr  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jz loc_1005815  +
dec edi  +
dec edi  +
jz loc_1005834  +
push [ebp+var_C44]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+var_C44]  +
call sub_100767E  +
mov eax [ebp+var_C44] +
cmp word ptr [eax+2] 3Ah +
jnz loc_10057AD  +
push 24h  +
pop ecx  +
mov [eax+2] cx +
push offset asc_1001394  +
push [ebp+lpString1]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
push [ebp+lpMem]  +
mov edi eax +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+lpMem]  +
call sub_100767E  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
mov eax [ebp+var_C44] +
add eax 2 +
push eax  +
push [ebp+lpMem]  +
call sub_10076C1  +
mov eax [ebp+var_C44] +
cmp word ptr [eax+2] 24h +
jnz loc_1005834  +
push 3Ah  +
pop ecx  +
mov [eax+2] cx +
jmp loc_1005834  +
push [ebp+lpMem]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpString1]  +
push [ebp+lpMem]  +
call sub_100767E  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
cmp eax 2 +
jbe loc_1005864  +
mov eax [ebp+lpMem] +
add eax 4 +
push offset asc_1001394  +
push eax  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10056DB  +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
cmp eax 2 +
jb loc_1005B38  +
push 5Ch  +
push [ebp+lpMem]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_10059A6  +
lea edi [eax+2] +
movzx ecx word ptr [edi] +
cmp cx bx +
jz loc_10059A6  +
cmp cx 2Ah +
jnz loc_1005923  +
movzx ecx word ptr [eax+4] +
cmp cx bx +
jz loc_1005996  +
mov edx [ebp+var_C7C] +
movzx ecx cx +
cmp cx 2Ah +
jnz loc_1005949  +
inc edx  +
movzx ecx word ptr [eax+edx*2] +
cmp cx bx +
jnz loc_10058BC  +
jmp loc_1005996  +
cmp [ebp+var_C50] esi +
jnz loc_10058E8  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString] +
jmp loc_1005250  +
push ebx  +
push esi  +
push 2Ah  +
push edi  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jz loc_1005B38  +
push ebx  +
push esi  +
push 3Fh  +
push edi  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jnz loc_1005B38  +
push ebx  +
push edi  +
mov [ebp+var_C60] esi +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_100538C  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_100767E  +
push [ebp+lpString]  +
call sub_10029E3  +
cmp eax esi +
jz loc_10058D5  +
xor eax eax +
mov [edi] ax +
mov [ebp+var_C78] esi +
jmp loc_1005B38  +
mov edx [ebp+lpMem] +
movzx eax word ptr [edx] +
xor ecx ecx +
cmp ax bx +
jz loc_1005B32  +
movzx eax ax +
cmp ax 2Ah +
jnz loc_10059D2  +
inc ecx  +
movzx eax word ptr [edx+ecx*2] +
cmp ax bx +
jnz loc_10059BD  +
jmp loc_1005B32  +
push 3Ah  +
push edx  +
mov [ebp+var_C7C] 2 +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_1005AAB  +
lea edi [eax+2] +
movzx ecx word ptr [edi] +
cmp cx bx +
jz loc_1005A28  +
cmp cx 2Ah +
jnz loc_1005A28  +
movzx ecx word ptr [eax+4] +
cmp cx bx +
jz loc_1005A9B  +
mov edx [ebp+var_C7C] +
movzx ecx cx +
cmp cx 2Ah +
jnz loc_1005A4E  +
inc edx  +
movzx ecx word ptr [eax+edx*2] +
cmp cx bx +
jnz loc_1005A16  +
jmp loc_1005A9B  +
push ebx  +
push esi  +
push 2Ah  +
push edi  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jz loc_1005B38  +
push ebx  +
push esi  +
push 3Fh  +
push edi  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jnz loc_1005B38  +
push ebx  +
push edi  +
mov [ebp+var_C60] esi +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_100538C  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_100767E  +
push [ebp+lpString]  +
call sub_10029E3  +
cmp eax esi +
jz loc_10058D5  +
xor eax eax +
mov [edi] ax +
mov [ebp+var_C68] esi +
jmp loc_1005B38  +
push ebx  +
push esi  +
push 2Ah  +
push [ebp+lpMem]  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jz loc_1005B38  +
mov eax [ebp+lpMem] +
push ebx  +
push esi  +
push 3Fh  +
add eax 2 +
push eax  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jnz loc_1005B38  +
mov eax [ebp+lpMem] +
push ebx  +
add eax 2 +
push eax  +
mov [ebp+var_C60] esi +
call sub_1006C82  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1006EF2  +
mov [ebp+lpString] eax +
cmp eax ebx +
jz loc_100538C  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push [ebp+lpString]  +
call sub_100767E  +
push [ebp+lpString]  +
call sub_10029E3  +
cmp eax esi +
jz loc_10058D5  +
mov [ebp+var_C64] esi +
push ebx  +
push [ebp+lpMem]  +
call sub_1006C82  +
cmp eax esi +
jnz loc_1005B64  +
push ebx  +
push esi  +
push offset String2  +
push [ebp+lpMem]  +
call sub_1006CA3  +
test eax eax +
jnz loc_1005B64  +
mov [ebp+var_C64] esi +
cmp [ebp+var_C74] esi +
jnz loc_1005BFA  +
cmp [ebp+var_C64] ebx +
jnz loc_1005C02  +
push offset a?  +
push [ebp+lpMem]  +
call ds:wcspbrk  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005C0E  +
push 25Eh  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
cmp [ebp+var_C50] esi +
jnz loc_1005BBF  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
jmp loc_1005912  +
cmp [ebp+var_C64] ebx +
jz loc_1005C0E  +
cmp [ebp+var_C68] esi +
jnz loc_1005D34  +
lea eax [ebp+FilePart] +
push eax  +
push dword ptr [ebp+lpBuffer]  +
push ebx  +
push [ebp+lpMem]  +
call ds:GetFullPathNameW  +
mov [ebp+var_C70] eax +
cmp eax ebx +
jnz loc_1005C4A  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1005BAC  +
mov edi [ebp+var_C70] +
add edi 0Ah +
lea eax [edi+edi] +
push eax  +
call sub_1006EF2  +
mov dword ptr [ebp+lpBuffer] eax +
cmp eax ebx +
jnz loc_1005C6D  +
push 20001h  +
jmp loc_1005C37  +
lea ecx [ebp+FilePart] +
push ecx  +
push eax  +
push edi  +
push [ebp+lpMem]  +
call ds:GetFullPathNameW  +
test eax eax +
jnz loc_1005CF3  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_10088A8  +
cmp [ebp+var_C50] esi +
jnz loc_1005CAC  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpBuffer] +
jmp loc_1005912  +
mov eax [ebp+var_C70] +
lea eax [eax+eax+1FCh] +
push eax  +
call sub_1006EF2  +
mov [ebp+var_C54] eax +
cmp eax ebx +
jnz loc_1005D1A  +
push 20001h  +
jmp loc_1005C8B  +
push eax  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push dword ptr [ebp+lpBuffer]  +
push [ebp+var_C54]  +
call sub_100767E  +
mov edi [ebp+var_C64] +
lea eax [ebp+var_C80] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
push [ebp+var_C74]  +
push [ebp+var_C54]  +
call sub_10048B9  +
cmp eax esi +
jnz loc_1005DC3  +
cmp [ebp+var_C50] esi +
jnz loc_1005D70  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C54] +
jmp loc_1005912  +
cmp [ebp+var_C80] ebx +
jnz loc_1005DDB  +
push 1A4h  +
call sub_1008890  +
push eax  +
jmp loc_1005F13  +
cmp [ebp+var_C90] esi +
jnz loc_1005E50  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+lpString]  +
lea eax [ebp+NameBuffer] +
push [ebp+var_C60]  +
push [ebp+var_C68]  +
push [ebp+var_C78]  +
push eax  +
push [ebp+var_C6C]  +
push edi  +
push [ebp+var_C54]  +
call sub_1004BA1  +
cmp eax esi +
jnz loc_1005FD3  +
cmp [ebp+var_C50] esi +
jnz loc_1005E33  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C54] +
push eax  +
call sub_10072E4  +
jmp loc_1005BBF  +
cmp edi esi +
jz loc_100607E  +
cmp [ebp+var_C78] esi +
jz loc_100607E  +
cmp [ebp+var_C68] esi +
jz loc_100607E  +
push [ebp+var_C54]  +
cmp [ebp+var_C6C] esi +
jnz loc_1005E85  +
call sub_1002AE9  +
jmp loc_1005E8A  +
call sub_10020FB  +
cmp eax ebx +
jnz loc_1005F7E  +
mov edi ds:GetLastError +
call edi  +
cmp eax 514h +
jnz loc_1005EF9  +
push dword ptr [ebp+lpBuffer]  +
push 19Dh  +
call sub_1008890  +
push eax  +
push [ebp+var_C54]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_C54]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jge loc_1005F0D  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_1006A53  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_10088A8  +
jmp loc_1005D5D  +
call edi  +
cmp eax 20h +
jnz loc_1005F26  +
push dword ptr [ebp+lpBuffer]  +
push 1A1h  +
jmp loc_1005EAC  +
push [ebp+var_C54]  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1005D5D  +
call edi  +
cmp eax 43h +
jz loc_1005F3B  +
call edi  +
cmp eax 35h +
jz loc_1005F3B  +
call edi  +
cmp eax 7Bh +
jnz loc_1005F48  +
push 2  +
call ds:SetLastError  +
call sub_1006A53  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_10069C0  +
jmp loc_1005DD5  +
cmp [ebp+var_C6C] esi +
jnz loc_1006045  +
push dword ptr [ebp+lpBuffer]  +
push 191h  +
call sub_1008890  +
push eax  +
push [ebp+var_C54]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_C54]  +
call sub_1002A8A  +
add esp 10h +
cmp eax ebx +
jl loc_1005ED2  +
mov eax ds:_iob +
push [ebp+var_C54]  +
add eax 20h +
push eax  +
call sub_1007704  +
cmp [ebp+var_C50] esi +
jnz loc_1005FE6  +
push [ebp+var_C38]  +
call sub_100A298  +
lea eax [ebp+var_C38] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C44] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpBuffer] +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_C54] +
push eax  +
call sub_10072E4  +
lea eax [ebp+lpString] +
jmp loc_1005071  +
lea eax [ebp+NameBuffer] +
push eax  +
push dword ptr [ebp+lpBuffer]  +
push 193h  +
call sub_1008890  +
push eax  +
push [ebp+var_C54]  +
call sub_1006F9B  +
shr eax 1 +
push eax  +
push [ebp+var_C54]  +
call sub_1002A8A  +
add esp 14h +
jmp loc_1005FB7  +
push [ebp+lpString]  +
lea eax [ebp+NameBuffer] +
push [ebp+var_C60]  +
push eax  +
push [ebp+var_C6C]  +
lea eax [ebp+var_C94] +
push [ebp+var_C68]  +
push eax  +
push edi  +
push [ebp+var_C54]  +
call sub_1002D95  +
test eax eax +
jnz loc_1005FD3  +
call ds:GetLastError  +
cmp eax 5 +
jz loc_100612F  +
cmp eax 35h +
jz loc_10060D2  +
cmp eax 43h +
jz loc_10060D2  +
cmp eax 7Bh +
jnz loc_10060DF  +
push 2  +
call ds:SetLastError  +
call sub_1006A53  +
cmp [ebp+var_C60] ebx +
jnz loc_100611A  +
push 1389h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
mov eax ds:_iob +
push offset String  +
add eax 40h +
push eax  +
call sub_1007704  +
call sub_10069C0  +
jmp loc_1006139  +
push 1A7h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 20h +
jmp loc_1006142  +
push 198h  +
call sub_1008890  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1007704  +
jmp loc_1005E20  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100616E  +
test eax eax +
jnz loc_1006173  +
mov ecx [esi] +
test ecx ecx +
jz loc_100616B  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100615F  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100C050 +
push offset dword_100C040  +
push dword_100C04C  +
mov dword_100C040 eax +
push offset dword_100C030  +
push offset dword_100C034  +
push offset dword_100C02C  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100C03C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10061FB  +
cmp eax esi +
jnz loc_10061EE  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10061FE  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10061D5  +
xor esi esi +
inc esi  +
mov eax dword_100C4A0 +
cmp eax esi +
jnz loc_1006211  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_100624C  +
mov eax dword_100C4A0 +
test eax eax +
jnz loc_1006246  +
mov dword_100C4A0 esi +
push offset dword_100124C  +
push offset dword_1001240  +
call sub_1006152  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100624C  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1006316  +
mov dword_100C048 esi +
mov eax dword_100C4A0 +
cmp eax esi +
jnz loc_1006270  +
push offset dword_100123C  +
push offset dword_1001234  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100C4A0 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100627D  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100C4A8 ebx +
jz loc_100629E  +
push offset dword_100C4A8  +
call sub_1006519  +
pop ecx  +
test eax eax +
jz loc_100629E  +
push ebx  +
push 2  +
push ebx  +
call dword_100C4A8  +
push dword_100C030  +
push dword_100C034  +
push dword_100C02C  +
call sub_1004EF3  +
add esp 0Ch +
mov dword_100C044 eax +
cmp dword_100C038 ebx +
jnz loc_10062FC  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100C044 eax +
xor ebx ebx +
cmp dword_100C038 ebx +
jnz loc_10062FC  +
push eax  +
call ds:_exit  +
cmp dword_100C048 ebx +
jnz loc_100630A  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100C044 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1006333  +
xor eax eax +
jmp loc_1006380  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100632F  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100636D  +
cmp ecx 20Bh +
jnz loc_100632F  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100632F  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_100637B  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100632F  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100C038 eax +
call sub_10066B2  +
push eax  +
call ds:__set_app_type  +
or dword_100C498 0FFFFFFFFh +
or dword_100C49C 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100C058 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100C054 +
mov [eax] ecx +
call sub_1006644  +
cmp dword_100C010 0 +
jnz loc_10063D9  +
push offset sub_1006644  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100662C  +
xor eax eax +
retn   +
***
call sub_10066F1  +
jmp sub_10061B3  +
***
cmp ecx dword_100C000 +
jnz loc_1006400  +
retn 0  +
jmp loc_1006787  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100645E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100645E  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1006458  +
cmp eax 19930521h +
jz loc_1006458  +
cmp eax 19930522h +
jz loc_1006458  +
cmp eax 1994000h +
jnz loc_100645E  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1006420+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10064A6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10064A2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100650D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1006505  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100650F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10064F5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1006490  +
pop ecx  +
test eax eax +
jz loc_1006576  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10064D0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1006576  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100657F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10063F5  +
push offset dword_100C000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10066A5  +
cmp ecx 0FFFFFFFFh +
jz loc_10066A5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100669E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100669E  +
cmp edx 10000000h +
jnb loc_100669E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100669E  +
jmp loc_1006699  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10066E7  +
push eax  +
call sub_100664C  +
test eax eax +
jz loc_10066E7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10066DC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10066E7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100C000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1006723  +
test eax ebx +
jz loc_1006723  +
not eax  +
mov dword_100C004 eax +
jmp loc_100677E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100676A  +
test dword_100C000 ebx +
jnz loc_100676F  +
mov esi 0BB40E64Fh +
mov dword_100C000 esi +
not esi  +
mov dword_100C004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100C160 eax +
mov dword_100C15C ecx +
mov dword_100C158 edx +
mov dword_100C154 ebx +
mov dword_100C150 esi +
mov dword_100C14C edi +
mov word_100C178 ss +
mov word_100C16C cs +
mov word_100C148 ds +
mov word_100C144 es +
mov word_100C140 fs +
mov word_100C13C gs +
pushf   +
pop dword_100C170  +
mov eax [ebp+0] +
mov dword_100C164 eax +
mov eax [ebp+4] +
mov dword_100C168 eax +
lea eax [ebp+8] +
mov dword_100C174 eax +
mov eax [ebp-320h] +
mov dword_100C0B0 10001h +
mov eax dword_100C168 +
mov dword_100C06C eax +
mov dword_100C060 0C0000409h +
mov dword_100C064 1 +
mov eax dword_100C000 +
mov [ebp-328h] eax +
mov eax dword_100C004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_100C380 edi +
jnz loc_10068B2  +
push dword_100C388  +
call sub_100A6C2  +
test eax eax +
jnz loc_10068AE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006946  +
push 42Bh  +
jmp loc_1006940  +
mov eax edi +
pop edi  +
retn   +
cmp dword_100C388 0 +
jnz loc_1006896  +
call sub_100A6E3  +
push eax  +
mov dword_100C388 eax +
call sub_100A6C2  +
test eax eax +
jz loc_1006934  +
push 0  +
push offset dword_10013A8  +
push dword_100C388  +
call sub_100AA05  +
test eax eax +
jnz loc_1006934  +
push 3  +
push dword_100C388  +
call sub_100ABD0  +
cmp eax edi +
jnz loc_1006934  +
push 3  +
push dword_100C388  +
call sub_100ABD0  +
cmp eax 2 +
jnz loc_1006934  +
push 3  +
push dword_100C388  +
call sub_100ABD0  +
cmp eax 3 +
jnz loc_1006934  +
push 0  +
mov dword_100C380 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1006946  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_100C380 0 +
push esi  +
jz loc_10069B4  +
push 3  +
push dword_100C388  +
call sub_100AD2B  +
cmp eax [ebp+arg_0] +
jbe loc_10069B4  +
push [ebp+arg_0]  +
push 3  +
push dword_100C388  +
call sub_100AFC2  +
test eax eax +
jz loc_10069B4  +
push [ebp+arg_0]  +
push 3  +
push dword_100C388  +
call sub_100ADC7  +
mov esi eax +
test esi esi +
jz loc_10069B4  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10069B4  +
mov eax [esi+0Ch] +
jmp loc_10069B6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_100C388 +
test eax eax +
jz loc_10069E1  +
push eax  +
call sub_100A6C2  +
test eax eax +
jz loc_10069E1  +
push 0  +
push dword_100C388  +
call sub_100AD98  +
retn   +
mov eax offset dword_10013A8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1006A15  +
call esi  +
test eax eax +
jnz loc_1006A11  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006A48  +
call sub_1006879  +
test eax eax +
jz loc_1006A11  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_100C388  +
call sub_100AE80  +
test eax eax +
jnz loc_1006A3E  +
call esi  +
test eax eax +
jnz loc_1006A11  +
push 8  +
jmp loc_1006A0B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1006879  +
test eax eax +
jz loc_1006AD2  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1006AAC  +
cmp [ebp+hMem] edi +
jz loc_1006AC4  +
push [ebp+hMem]  +
call sub_10069EC  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1006AD0  +
cmp [ebp+hMem] edi +
jz loc_1006AC4  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1006AC4  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1006ACE  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1006A53  +
test eax eax +
jz loc_1006AFC  +
call sub_10069C0  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1007704  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_100C014 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_100C018 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_100C38C +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_10063F5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1006BDA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006BD6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006C57  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1006C4B  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1006C4B  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1006C53  +
sub edi 0 +
jz loc_1006C27  +
dec edi  +
jz loc_1006C23  +
dec edi  +
jnz loc_1006C53  +
push 0FFFFFFF4h  +
jmp loc_1006C29  +
push 0FFFFFFF5h  +
jmp loc_1006C29  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1006C53  +
cmp eax 0FFFFFFFFh +
jz loc_1006C53  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1006C55  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1006C70  +
xor eax eax +
jmp loc_1006C79  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1006C91  +
xor eax eax +
jmp loc_1006C9A  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1006CE1  +
cmp [ebp+lpString2] 0 +
jz loc_1006CE1  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1006CC7  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1006CF5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006CF3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1006D3C  +
cmp [ebp+lpString2] 0 +
jz loc_1006D3C  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1006D22  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1006D50  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D4E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1006DAB  +
cmp [ebp+lpString2] 0 +
jz loc_1006DAB  +
mov eax [ebp+arg_C] +
xor edx edx +
cmp [ebp+arg_8] 1 +
setz dl  +
test eax eax +
jnz loc_1006D7D  +
or eax 0FFFFFFFFh +
cmp dword_100C014 5 +
push 7Fh  +
pop ecx  +
jnz loc_1006D97  +
cmp dword_100C018 0 +
jnz loc_1006D97  +
mov ecx 409h +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push edx  +
push ecx  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1006DBF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006DBD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_1006E8C  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1006E8C  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1006DF7  +
cmp [eax] edi +
jnz loc_1006E8C  +
mov eax [eax] +
cmp eax edi +
jz loc_1006E05  +
cmp eax 1 +
jbe loc_1006E73  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1006E1C  +
cmp esi edi +
jz loc_1006E1C  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1006E32  +
push edi  +
push [ebp+lpString]  +
call sub_1006C61  +
cmp eax esi +
jle loc_1006E32  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1006E85  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006E5A  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_1006E9E  +
cmp esi edi +
jz loc_1006E9E  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_1006E9E  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1006EA0  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1006E80  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006E9E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1006EC5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006EE7  +
push 57h  +
jmp loc_1006EE1  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1006EE7  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1006EE9  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1006F18  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006F8C  +
push 57h  +
call ds:SetLastError  +
jmp loc_1006F8C  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1006F8C  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1006F8E  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1006F73  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1006F73  +
push 570h  +
call ds:SetLastError  +
call sub_1006A53  +
jmp loc_1006F85  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006F85  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1006FBD  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006FB8  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1006FDF  +
push [ebp+lpMem]  +
call sub_1006EAC  +
test eax eax +
jz loc_1006FB8  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1006FB8  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
movzx ebx word ptr [edi] +
test ebx ebx +
jz loc_1007062  +
cmp ebx 2Ah +
jz loc_1007045  +
mov eax [ebp+arg_4] +
cmp ebx 3Fh +
jz loc_100703B  +
movzx eax word ptr [eax] +
mov esi ds:toupper +
push eax  +
call esi  +
push ebx  +
mov [ebp+arg_0] eax +
call esi  +
pop ecx  +
pop ecx  +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jnz loc_1007041  +
mov eax [ebp+arg_4] +
add eax 2 +
push eax  +
add edi 2 +
push edi  +
call sub_1006FE8  +
test eax eax +
jz loc_1007041  +
xor eax eax +
inc eax  +
jmp loc_100706D  +
cmp word ptr [eax] 0 +
jnz loc_1007025  +
xor eax eax +
jmp loc_100706D  +
mov esi [ebp+arg_4] +
add edi 2 +
push esi  +
push edi  +
call sub_1006FE8  +
test eax eax +
jnz loc_1007036  +
mov ax [esi] +
inc esi  +
inc esi  +
test ax ax +
jnz loc_100704B  +
jmp loc_1007041  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp [ecx] ax +
setz al  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10070A9  +
cmp [ebp+arg_4] eax +
jz loc_10070A5  +
mov dl [ebx] +
test dl dl +
jz loc_10070A5  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100708D  +
test esi esi +
jnz loc_10070B0  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10070BC  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10070FD  +
cmp [ebp+arg_4] eax +
jz loc_10070F9  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_10070F9  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10070DC  +
test esi esi +
jnz loc_1007105  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007113  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1007148  +
cmp eax esi +
ja loc_1007148  +
jz loc_100714D  +
jmp loc_1007155  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100715E  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1007186  +
call ds:GetLastError  +
test eax eax +
jnz loc_10071C9  +
push 57h  +
jmp loc_10071C3  +
push 0  +
push esi  +
call sub_1006C82  +
test eax eax +
jz loc_10071BE  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10071BE  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10071AE  +
call ds:StrChrIW  +
jmp loc_10071B4  +
call ds:StrChrW  +
test eax eax +
jz loc_10071BE  +
sub eax esi +
sar eax 1 +
jmp loc_10071CC  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_100723B  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_100723B  +
push esi  +
push edi  +
call sub_1006C82  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_1007234  +
push esi  +
push ebx  +
call sub_1006C82  +
test eax eax +
jz loc_1007234  +
push esi  +
push ebx  +
call sub_1006C82  +
cmp [ebp+arg_C] eax +
jnb loc_1007234  +
cmp [ebp+arg_0] esi +
jbe loc_1007234  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jnz loc_1007250  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1007218  +
push 490h  +
jmp loc_1007247  +
call ds:GetLastError  +
test eax eax +
jnz loc_100724D  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_10072C3  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_10072C3  +
push 0  +
push edi  +
call sub_1006C82  +
push 0  +
push ebx  +
mov esi eax +
call sub_1006C82  +
test eax eax +
jz loc_10072B6  +
test esi esi +
jz loc_10072B6  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_10072B6  +
sub esi ecx +
cmp esi eax +
jb loc_10072B6  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_10072AC  +
call ds:StrStrIW  +
jmp loc_10072B2  +
call ds:StrStrW  +
test eax eax +
jnz loc_10072BD  +
push 490h  +
jmp loc_10072CF  +
sub eax edi +
sar eax 1 +
jmp loc_10072D8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10072D5  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1007307  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007303  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007355  +
cmp dword ptr [esi] 0 +
jnz loc_1007311  +
xor eax eax +
inc eax  +
jmp loc_1007355  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1007335  +
push dword ptr [esi]  +
call sub_1006F9B  +
cmp eax 0FFFFFFFFh +
jnz loc_1007339  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007354  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_1007424  +
mov eax [esi] +
cmp eax edi +
jz loc_1007424  +
cmp [ebp+dwBytes] edi +
jnz loc_1007392  +
push esi  +
call sub_10072E4  +
jmp loc_1007438  +
push eax  +
call sub_1006EAC  +
test eax eax +
jnz loc_10073A3  +
mov [esi] edi +
jmp loc_1007436  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_1007436  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_10073E1  +
call ds:GetLastError  +
test eax eax +
jnz loc_10073D8  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1007436  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_1007438  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_10073C6  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_10073C6  +
push 570h  +
call ds:SetLastError  +
call sub_1006A53  +
jmp loc_10073D8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007436  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100745B  +
cmp edx 7FFFFFFFh +
jbe loc_1007460  +
mov eax 80070057h +
test eax eax +
jl loc_1007476  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1007079  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1007495  +
cmp edx 7FFFFFFFh +
jbe loc_100749A  +
mov eax 80070057h +
test eax eax +
jl loc_10074B0  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10070C8  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_10074D2  +
cmp edx ebx +
jbe loc_10074D7  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100750E  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10074FB  +
cmp [eax] cx +
jz loc_10074F7  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10074ED  +
cmp esi ecx +
jnz loc_1007504  +
mov [ebp+arg_4] 80070057h +
jmp loc_1007508  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_1007510  +
xor ecx ecx +
test eax eax +
jl loc_1007524  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_10070C8  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1007544  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1007549  +
mov eax 80070057h +
test eax eax +
jl loc_1007562  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100711F  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_100C388  +
call sub_100A6C2  +
cmp eax 1 +
jnz loc_10075F5  +
push edi  +
push 3  +
push dword_100C388  +
call sub_100AD2B  +
mov edi eax +
test edi edi +
jz loc_10075EA  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_100C388  +
call sub_100AFC2  +
cmp eax 10000h +
jnz loc_10075E3  +
push esi  +
push 3  +
push dword_100C388  +
call sub_100ADC7  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10075E3  +
add eax 0Ch +
push eax  +
call sub_10072E4  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
push esi  +
push 3  +
push dword_100C388  +
call sub_100ACF4  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1007599  +
pop esi  +
push offset dword_100C388  +
call sub_100A758  +
pop edi  +
cmp dword_100C384 1 +
jnz loc_1007604  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_100725C  +
cmp eax 0FFFFFFFFh +
jnz loc_100762E  +
xor eax eax +
jmp loc_1007631  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100766E  +
cmp [ebp+arg_4] 0 +
jz loc_100766E  +
cmp [ebp+arg_8] 0 +
jle loc_100766E  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1007445  +
test eax eax +
jge loc_1007674  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1007670  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10076B1  +
cmp [ebp+arg_4] 0 +
jz loc_10076B1  +
cmp [ebp+arg_8] 0 +
jle loc_10076B1  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100747F  +
test eax eax +
jge loc_10076B7  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10076B3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10076F4  +
cmp [ebp+arg_4] 0 +
jz loc_10076F4  +
cmp [ebp+arg_8] 0 +
jle loc_10076F4  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10074B9  +
test eax eax +
jge loc_10076FA  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10076F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1007949  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_1007949  +
push [ebp+hConsoleOutput]  +
call sub_1006BB3  +
cmp eax 1 +
jnz loc_1007836  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100774D  +
push 0FFFFFFF5h  +
jmp loc_100775D  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100781E  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1006C82  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1007791  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_10077F6  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100781A  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1006C82  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_10077F6  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_10077C8  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_10077FE  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_10077FE  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_10077B8  +
xor eax eax +
inc eax  +
jmp loc_100795D  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1006ADA  +
call sub_100756B  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1007804  +
call ds:GetLastError  +
test eax eax +
jnz loc_100795B  +
push 42Bh  +
jmp loc_1007955  +
push edi  +
push ebx  +
call sub_1006C82  +
push 100h  +
push edi  +
mov esi offset unk_100C398 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_10077F6  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1007876  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_10078D3  +
cmp eax ebx +
jbe loc_10078E1  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_10078B3  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_10078B6  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_100787F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10078D3  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1007807  +
cmp eax [ebp+cchWideChar] +
jnb loc_10078E9  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_10078D3  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_1007861  +
jmp loc_10077F6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100795B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov dword ptr [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_10079C8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10079C1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007BC3  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_1007B80  +
cmp edi 0Fh +
jz loc_10079F8  +
cmp edi 3 +
jz loc_10079F8  +
cmp edi 0FFFFFFFFh +
jz loc_10079F8  +
mov [ebp+var_40] 1 +
jmp loc_1007A14  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1007B80  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_1007A86  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1007B80  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_1007B84  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_1006DC8  +
movzx eax [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_1007A9E  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1007B74  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1007B84  +
cmp ax 8 +
jnz loc_1007B2C  +
cmp [ebp+var_28] 0 +
jz loc_1007A32  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1002A8A  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1002A8A  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1002A8A  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_1007A32  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_1007B44  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_10013B8  +
jmp loc_1007B68  +
cmp ax 0Ah +
jz loc_1007A32  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_1007A32  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1007BC2  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001340  +
lea eax [ebp+var_18] +
push eax  +
call sub_100767E  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10063F5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1007BF0  +
cmp [ebp+arg_8] 0 +
jnz loc_1007BF0  +
xor eax eax +
jmp loc_1007D44  +
call sub_1006879  +
test eax eax +
jz loc_1007BE9  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_100C388  +
call sub_100AD2B  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1007C3D  +
push esi  +
push dword_100C388  +
call sub_100AD5F  +
test eax eax +
jz loc_1007D08  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100AC4B  +
cmp eax 0FFFFFFFFh +
jz loc_1007D08  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100AFC2  +
mov edi offset aBuffer +
test eax eax +
jz loc_1007C8B  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100ADC7  +
mov esi eax +
test esi esi +
jz loc_1007D08  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1007D08  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1007CCA  +
mov edi [ebp+arg_8] +
jmp loc_1007CD5  +
push 10h  +
call sub_1006EF2  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1007D08  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100763B  +
push esi  +
push ebx  +
push 3  +
push dword_100C388  +
call sub_100AF29  +
test eax eax +
jnz loc_1007C6A  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10072E4  +
jmp loc_1007D08  +
push 0  +
push ebx  +
call sub_1006C82  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1007CEB  +
cmp edi 100h +
jbe loc_1007D02  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1007D02  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1007D0C  +
call sub_1006EF2  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1007D08  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1007D17  +
xor eax eax +
jmp loc_1007D41  +
lea eax [esi+0Ch] +
push eax  +
call sub_100735F  +
jmp loc_1007CFB  +
test ebx ebx +
jz loc_1007D27  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_100767E  +
jmp loc_1007D3E  +
cmp [ebp+arg_C] 1 +
jnz loc_1007D3E  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_10013BC +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1007E4A  +
push eax  +
push ebx  +
call sub_1006C82  +
test eax eax +
jz loc_1007E4A  +
cmp [ebp+lpStart] 0 +
jz loc_1007DA9  +
push 0  +
push [ebp+lpStart]  +
call sub_1006C82  +
test eax eax +
jnz loc_1007DAF  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1007DBE  +
cmp edi 1 +
jnz loc_1007DE0  +
cmp word ptr [ebx] 0 +
jz loc_1007DDD  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1007DDD  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1007DC4  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1007DEA  +
cmp edi 2 +
jnz loc_1007E2C  +
cmp edi 2 +
jnz loc_1007DF1  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1007E2C  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1007E12  +
cmp [ebp+var_14] 0 +
jnz loc_1007E16  +
mov [ebp+var_14] esi +
jmp loc_1007E16  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1007DF9  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1007E2C  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1007E46  +
push 0  +
push [ebp+var_18]  +
call sub_1006C82  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_100767E  +
mov eax ebx +
jmp loc_1007E4F  +
mov eax offset dword_10013A8 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1007E88  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007E84  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007EEF  +
cmp [ebp+arg_0] esi +
jnz loc_1007E9A  +
push [ebp+arg_4]  +
call sub_10069EC  +
xor eax eax +
inc eax  +
jmp loc_1007EEF  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1007BD8  +
mov edi eax +
test edi edi +
jz loc_1007EDA  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_100752F  +
cmp eax 8007007Ah +
jz loc_1007E9B  +
test eax eax +
jge loc_1007EE8  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007EEE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007ED6  +
push 8  +
jmp loc_1007ED0  +
push edi  +
call sub_10069EC  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1007BD8  +
mov ebx eax +
test ebx ebx +
jnz loc_1007F1F  +
push 8  +
pop eax  +
jmp loc_1007F61  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1007BD8  +
mov esi eax +
test esi esi +
jz loc_1007F1A  +
push esi  +
call sub_1006F9B  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_1006F9B  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_1007F61  +
push ebx  +
call sub_10069EC  +
test eax eax +
jz loc_1007F1A  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1007F97  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007F8D  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_10013A8 +
jmp loc_10080A4  +
call sub_1006879  +
test eax eax +
jz loc_1007F8D  +
push esi  +
push 1  +
push dword_100C388  +
call sub_100AD2B  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1007FF4  +
push 1  +
push dword_100C388  +
call sub_100AD5F  +
cmp eax ebx +
jz loc_1007FD8  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100AC4B  +
cmp eax 0FFFFFFFFh +
jnz loc_1007FF4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007FEA  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10013A8 +
jmp loc_10080A3  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1007BD8  +
mov edi eax +
cmp edi ebx +
jz loc_1008068  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_100804B  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_100807A  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_100807A  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1007FFA  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_100C388  +
call sub_100AF63  +
test eax eax +
jnz loc_1008081  +
call ds:GetLastError  +
test eax eax +
jnz loc_100807A  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_10013A8 +
jmp loc_10080A2  +
cmp [ebp+lpString] ebx +
jz loc_1008092  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_100C388  +
call sub_100ADFE  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1008253  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
test eax eax +
jz loc_1008253  +
call sub_1006879  +
test eax eax +
jz loc_1008265  +
call sub_1006879  +
test eax eax +
jz loc_100820D  +
push 3  +
pop esi  +
push esi  +
push dword_100C388  +
call sub_100AD2B  +
mov edi eax +
cmp edi ebx +
ja loc_1008130  +
push esi  +
push dword_100C388  +
call sub_100AD5F  +
cmp eax ebx +
jz loc_100820D  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AC4B  +
cmp eax 0FFFFFFFFh +
jz loc_100820D  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100AFC2  +
mov edi offset aBuffer +
test eax eax +
jz loc_10081A8  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100ADC7  +
mov esi eax +
cmp esi ebx +
jz loc_100820D  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100820D  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1008194  +
cmp edi 100h +
jbe loc_10081F5  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10081F5  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10081E5  +
call sub_1006EF2  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10081F0  +
push 10h  +
call sub_1006EF2  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100820D  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100763B  +
push esi  +
push ebx  +
push 3  +
push dword_100C388  +
call sub_100AF29  +
test eax eax +
jnz loc_100815D  +
lea eax [ebp+var_8] +
push eax  +
call sub_10072E4  +
jmp loc_100820D  +
lea eax [esi+0Ch] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_100820D  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100820D  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100767E  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100821B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008265  +
push 8  +
jmp loc_100825F  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1008253  +
cmp [ebp+var_4] ebx +
jz loc_100824E  +
push ebx  +
push [ebp+var_4]  +
call sub_1006C82  +
test eax eax +
jnz loc_1008253  +
fld  qword ptr [ebp-0Ch] +
jmp loc_1008267  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008265  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_10080AE  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100845C  +
cmp [ebp+lpString] ebx +
jz loc_100845C  +
call sub_1006879  +
test eax eax +
jz loc_100846E  +
call sub_1006879  +
test eax eax +
jz loc_10083F2  +
push 3  +
pop esi  +
push esi  +
push dword_100C388  +
call sub_100AD2B  +
mov edi eax +
cmp edi ebx +
ja loc_1008315  +
push esi  +
push dword_100C388  +
call sub_100AD5F  +
cmp eax ebx +
jz loc_10083F2  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AC4B  +
cmp eax 0FFFFFFFFh +
jz loc_10083F2  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100AFC2  +
mov edi offset aBuffer +
test eax eax +
jz loc_100838D  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100ADC7  +
mov esi eax +
cmp esi ebx +
jz loc_10083F2  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10083F2  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1008379  +
cmp edi 100h +
jbe loc_10083DA  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10083DA  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10083CA  +
call sub_1006EF2  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10083D5  +
push 10h  +
call sub_1006EF2  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10083F2  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100763B  +
push esi  +
push ebx  +
push 3  +
push dword_100C388  +
call sub_100AF29  +
test eax eax +
jnz loc_1008342  +
lea eax [ebp+var_8] +
push eax  +
call sub_10072E4  +
jmp loc_10083F2  +
lea eax [esi+0Ch] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_10083F2  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10083F2  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100767E  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1008400  +
call ds:GetLastError  +
test eax eax +
jnz loc_100846E  +
push 8  +
jmp loc_1008468  +
push 3  +
push ebx  +
push esi  +
call sub_1007D4D  +
push ebx  +
push esi  +
call sub_1006C82  +
test eax eax +
jz loc_100845C  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_1008434  +
call ds:wcstol  +
jmp loc_100843A  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100845C  +
cmp [ebp+var_4] ebx +
jz loc_1008458  +
push ebx  +
push [ebp+var_4]  +
call sub_1006C82  +
test eax eax +
jnz loc_100845C  +
mov eax esi +
jmp loc_1008470  +
call ds:GetLastError  +
test eax eax +
jnz loc_100846E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100863F  +
cmp [ebp+lpString] ebx +
jz loc_100863F  +
call sub_1006879  +
test eax eax +
jz loc_10085CB  +
push 3  +
pop esi  +
push esi  +
push dword_100C388  +
call sub_100AD2B  +
mov edi eax +
cmp edi ebx +
ja loc_10084EE  +
push esi  +
push dword_100C388  +
call sub_100AD5F  +
cmp eax ebx +
jz loc_10085CB  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100AC4B  +
cmp eax 0FFFFFFFFh +
jz loc_10085CB  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100AFC2  +
mov edi offset aBuffer +
test eax eax +
jz loc_1008566  +
push ebx  +
push esi  +
push dword_100C388  +
call sub_100ADC7  +
mov esi eax +
cmp esi ebx +
jz loc_10085CB  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_10085CB  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1008552  +
cmp edi 100h +
jbe loc_10085B3  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_10085B3  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_10085A3  +
call sub_1006EF2  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_10085AE  +
push 10h  +
call sub_1006EF2  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_10085CB  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100763B  +
push esi  +
push ebx  +
push 3  +
push dword_100C388  +
call sub_100AF29  +
test eax eax +
jnz loc_100851B  +
lea eax [ebp+var_8] +
push eax  +
call sub_10072E4  +
jmp loc_10085CB  +
lea eax [esi+0Ch] +
push eax  +
call sub_100735F  +
test eax eax +
jz loc_10085CB  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_10085CB  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100767E  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10085D9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008651  +
push 8  +
jmp loc_100864B  +
push 3  +
push ebx  +
push esi  +
call sub_1007D4D  +
push ebx  +
push esi  +
call sub_1006C82  +
test eax eax +
jz loc_1008651  +
cmp [ebp+arg_8] ebx +
jnz loc_10085F8  +
cmp word ptr [esi] 2Dh +
jz loc_1008651  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_1008618  +
call ds:wcstol  +
jmp loc_100861E  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1008651  +
cmp [ebp+var_4] ebx +
jz loc_100863A  +
push ebx  +
push [ebp+var_4]  +
call sub_1006C82  +
test eax eax +
jnz loc_1008651  +
xor eax eax +
inc eax  +
jmp loc_1008653  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008651  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_100871D  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_100871D  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1006C82  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1007BD8  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_10086AE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100872F  +
push 8  +
jmp loc_1008729  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1006C82  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1007BD8  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100869C  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1002A8A  +
add esp 10h +
test eax eax +
jge loc_10086ED  +
movzx eax ax +
push eax  +
jmp loc_1008729  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1002A8A  +
add esp 10h +
test eax eax +
jl loc_10086E7  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100725C  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_1008731  +
call ds:GetLastError  +
test eax eax +
jnz loc_100872F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_1008844  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_1008844  +
cmp [ebp+arg_4] ebx +
jnz loc_100876F  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1007704  +
jmp loc_1008858  +
cmp [ebp+arg_8] ebx +
jnz loc_1008804  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1007BD8  +
mov edi eax +
test edi edi +
jz loc_10087F1  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_10087E1  +
call ds:GetLastError  +
test eax eax +
jz loc_10087FF  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1008856  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100877C  +
push edi  +
jmp loc_1008762  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008856  +
push 8  +
jmp loc_1008850  +
xor eax eax +
inc eax  +
jmp loc_1008858  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1007BD8  +
mov edi eax +
test edi edi +
jz loc_10087F1  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_100752F  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1008804  +
test eax eax +
jge loc_10087EB  +
movzx eax ax +
push eax  +
jmp loc_1008850  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008856  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100C394  +
mov eax dword_100C394 +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1007F6A  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_1008861  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1008924  +
test [ebp+arg_4] 0F0000h +
jz loc_1008924  +
test [ebp+arg_4] 10000h +
jz loc_10088CC  +
call sub_1006A53  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_10088DE  +
push 1389h  +
jmp loc_10088FD  +
test al 4 +
jz loc_10088E9  +
push 138Ah  +
jmp loc_10088FD  +
test al 2 +
jz loc_10088F4  +
push 138Ch  +
jmp loc_10088FD  +
test al 8 +
jz loc_1008913  +
push 138Bh  +
call sub_1008890  +
push eax  +
push offset aS_1  +
push ebx  +
push ebx  +
push esi  +
call sub_100873D  +
add esp 14h +
call sub_10069C0  +
push eax  +
push esi  +
call sub_1007704  +
mov eax ebx +
pop ebx  +
jmp loc_1008938  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008936  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1008970  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008968  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1008968  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_10013D8  +
call sub_100716B  +
cmp eax 0FFFFFFFFh +
jz loc_1008968  +
xor eax eax +
inc eax  +
jmp loc_100896A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_10089BE  +
movzx eax ds:byte_10089CD[eax] +
jmp ds:off_10089C5[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_10089C0  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_1008A61  +
cmp [ebp+arg_4] ebx +
jnz loc_1008A61  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_100716B  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1008A1B  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1006C82  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1007BD8  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_1008A3E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008A6F  +
push 8  +
jmp loc_1008A6D  +
lea ecx [esi+1] +
push ecx  +
push offset asc_1001398  +
push eax  +
call sub_100767E  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_10076C1  +
mov eax [ebp+arg_4] +
jmp loc_1008A71  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008A6F  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_1008AB6  +
cmp ecx edi +
jnz loc_1008AB6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008AAF  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1008D19  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1008AA1  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1008D15  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1008D1F  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1006CFE  +
test eax eax +
jnz loc_1008BD1  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_1008BD1  +
cmp [edi+4] ebx +
jnz loc_1008BD1  +
cmp [edi+8] ebx +
jnz loc_1008BD1  +
cmp [edi+0Ch] ebx +
jnz loc_1008BD1  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1008B4C  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_1008BD1  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008BD1  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_1008B61  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_1008BD1  +
mov edx eax +
or edx ecx +
jz loc_1008B72  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_1008BD1  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1008B87  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_1008BD1  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_1008B93  +
xor eax eax +
or ebx eax +
jnz loc_1008BD1  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_1008BD1  +
jmp ds:off_1008D41[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_1008BEA  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_1008BD1  +
cmp [edi-10h] ecx +
jnz loc_1008BD1  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1008C09  +
cmp eax 2 +
jnb loc_1008C09  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008BE3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008D18  +
mov eax [edi-10h] +
test eax eax +
jz loc_1008BD1  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1008C09  +
push dword ptr [eax]  +
call sub_100A6C2  +
test eax eax +
jz loc_1008BD1  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1008C19  +
cmp [edi-14h] ecx +
jz loc_1008BD1  +
xor eax eax +
or ebx eax +
jnz loc_1008CFF  +
cmp dword ptr [edi-24h] 1 +
jnz loc_1008BD1  +
and esi 20h +
or esi eax +
jnz loc_1008BD1  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1008CFF  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_1008BD1  +
jmp loc_1008CFF  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1008D37  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_1008BD1  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_1008BD1  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_1008BD1  +
mov edx [edi-10h] +
test edx edx +
jz loc_1008BD1  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1008CA7  +
push dword ptr [edx]  +
call sub_100A6C2  +
test eax eax +
jz loc_1008BD1  +
jmp loc_1008CFF  +
cmp dword ptr [edi-24h] 1 +
ja loc_1008BD1  +
and esi 20h +
xor eax eax +
jmp loc_1008CF7  +
cmp dword ptr [edi-8] 0 +
jz loc_1008BD1  +
cmp dword ptr [edi-4] 0 +
jnz loc_1008CFF  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1008CFF  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_1008BD1  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_1008BD1  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_1008BD1  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1008AD0  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008BE3  +
push 42Bh  +
jmp loc_1008BDD  +
push 78h  +
jmp loc_1008BDD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1008DB4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008DA8  +
push 57h  +
call ebx  +
call sub_1006A53  +
xor eax eax +
jmp loc_1009318  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1009302  +
cmp eax edi +
jz loc_1009302  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1008E53  +
cmp [ebp+lpString2] 0 +
jnz loc_1008E53  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1008E53  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1008E31  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008E31  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1008890  +
push eax  +
push 2  +
call sub_1007E65  +
add esp 10h +
jmp loc_1008E47  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008E42  +
push 42Bh  +
call ebx  +
call sub_1006A53  +
push 800401E4h  +
call ebx  +
jmp loc_1009315  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1008E6B  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1008E76  +
jmp loc_1009302  +
cmp dword ptr [esi+24h] 0 +
jz loc_1008E7C  +
cmp ecx 9 +
jz loc_1008E7C  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1009302  +
jmp ds:off_100931E[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1008EEA  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1008EEA  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1007BD8  +
test eax eax +
jnz loc_1008ECA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009310  +
push 8  +
call ds:SetLastError  +
jmp loc_1009310  +
push 3  +
push offset asc_10013BC  +
push eax  +
call sub_1007D4D  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_1009310  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1008F65  +
test ebx ebx +
jz loc_10092FD  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_100865F  +
test eax eax +
jnz loc_1008F65  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1008F3C  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008F3C  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1008890  +
push eax  +
push 3  +
call sub_1007E65  +
add esp 14h +
jmp loc_1008F55  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1008890  +
push eax  +
push 2  +
call sub_1007E65  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1009315  +
test ebx ebx +
jz loc_10092FD  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1008FBE  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1008FBE  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1008FA4  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1008FA4  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1008F45  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1008890  +
push eax  +
push 1  +
call sub_1007E65  +
add esp 0Ch +
jmp loc_1008F55  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_100900E  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1008FF1  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100B085  +
cmp eax 0FFFFFFFFh +
jnz loc_10092FD  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100AA05  +
cmp eax 0FFFFFFFFh +
jnz loc_10092FD  +
jmp loc_1008EAF  +
cmp [ebp+var_C] ecx +
jz loc_100904D  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_100904D  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100903E  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100903E  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1008F45  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1008FAC  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1009077  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1006EF2  +
test eax eax +
jz loc_1008EAF  +
mov [esi+2Ch] eax +
jmp loc_100907D  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_100767E  +
jmp loc_10092FD  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_10092FD  +
push 0  +
push ebx  +
call sub_1006C82  +
test eax eax +
jz loc_1009156  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_100847C  +
test eax eax +
jz loc_1009156  +
push 0Ah  +
push ebx  +
call sub_1008296  +
cmp [ebp+var_C] 1 +
jnz loc_10090D8  +
mov dword ptr [ebp+String2] eax +
jmp loc_10090DB  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1009140  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1009119  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1009106  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100AFF9  +
jmp loc_1009110  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100B01C  +
cmp eax 0FFFFFFFFh +
jnz loc_10092FD  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1009131  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100AA7C  +
jmp loc_1009000  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100AAD1  +
jmp loc_1009000  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_100914F  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_10092FD  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1009168  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_10091BC  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100918A  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100918A  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1008F45  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1008FAC  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_10092FD  +
push ebx  +
call sub_1008273  +
test eax eax +
jnz loc_10091F5  +
and edi 10h +
or edi eax +
jz loc_10091C6  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_10091C6  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1009317  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10091E8  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10091E8  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1008F45  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1008FAC  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1009206  +
call sub_10080AE  +
fstp  [ebp+var_18] +
jmp loc_100920E  +
call sub_10080AE  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1009284  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1009255  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100923E  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100B03F  +
jmp loc_100924C  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100B062  +
cmp eax 0FFFFFFFFh +
jnz loc_10092FD  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1009271  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100AB26  +
jmp loc_1009000  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100AB7B  +
jmp loc_1009000  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1009294  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_10092FD  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_10092FD  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1009317  +
cmp [ebp+lpString2] 0 +
jz loc_10092F4  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_10092D5  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10092D5  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1008F45  +
call ds:GetLastError  +
test eax eax +
jnz loc_10092EA  +
push 42Bh  +
call ds:SetLastError  +
call sub_1006A53  +
jmp loc_1008F55  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1009317  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009310  +
push 57h  +
call ebx  +
call sub_1006A53  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100940C  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100940C  +
cmp [ebp+arg_8] edi +
jz loc_100940C  +
push [ebp+arg_8]  +
call sub_1008942  +
test eax eax +
jnz loc_1009391  +
push 490h  +
jmp loc_1009418  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1009387  +
add esi 20h +
jmp loc_10093A0  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_10093ED  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_10093B8  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_10093DD  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_10093DD  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_100865F  +
cmp eax 1 +
jz loc_1009407  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100939E  +
jmp loc_1009387  +
call ds:GetLastError  +
test eax eax +
jnz loc_10093FE  +
push 42Bh  +
call ebx  +
call sub_1006A53  +
xor eax eax +
jmp loc_100941D  +
mov eax [ebp+arg_4] +
jmp loc_100941D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100941A  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1009501  +
cmp [ebp+arg_4] edi +
jz loc_1009501  +
cmp [ebp+lpString] edi +
jz loc_1009501  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1009501  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_100716B  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1009512  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1007BD8  +
mov [esi] eax +
test eax eax +
jnz loc_10094B8  +
call ds:GetLastError  +
test eax eax +
jnz loc_100950F  +
push 8  +
call ds:SetLastError  +
jmp loc_100950F  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1007BD8  +
mov [esi+4] eax +
test eax eax +
jz loc_10094A4  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_100767E  +
test edi edi +
jz loc_10094F2  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_100767E  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100934B  +
jmp loc_1009512  +
call ds:GetLastError  +
test eax eax +
jnz loc_100950F  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100959D  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100959D  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_10069C0  +
test eax eax +
jnz loc_100954E  +
push 7  +
call sub_100694F  +
jmp loc_100955A  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1007BD8  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100959D  +
test ebx ebx +
jbe loc_1009587  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_1009581  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_1009581  +
push esi  +
call sub_10072E4  +
add esi 50h +
dec ebx  +
jnz loc_1009568  +
push [ebp+arg_0]  +
call sub_10069EC  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100959F  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1007BD8  +
mov ebx eax +
cmp ebx edi +
jz loc_100962E  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1009640  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_10095D7  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_1009647  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1009640  +
call esi  +
test eax eax +
jnz loc_1009640  +
push 57h  +
jmp loc_100963A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009640  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100980D  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1006EF2  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1009640  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1009674  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10072E4  +
jmp loc_1009640  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1009669  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1007BD8  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1009669  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1002A8A  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_10096EB  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_10096A9  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1009669  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1006C82  +
cmp eax 4 +
ja loc_1009723  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10072E4  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009640  +
push 42Bh  +
jmp loc_100963A  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100725C  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100975D  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_10013A4 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_10097AD  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1007BD8  +
mov esi eax +
cmp esi edi +
jnz loc_1009794  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10072E4  +
jmp loc_100962E  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_1  +
push [ebp+dwLen]  +
push esi  +
call sub_1002A8A  +
add esp 14h +
jmp loc_10097CD  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_10097BB  +
push 7  +
call sub_100694F  +
jmp loc_10097C7  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1007BD8  +
mov esi eax +
cmp esi edi +
jz loc_1009786  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1007BD8  +
mov esi eax +
cmp esi edi +
jz loc_1009786  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1008890  +
push eax  +
push 50h  +
push esi  +
call sub_1002A8A  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_10072E4  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100988F  +
cmp [ebp+arg_4] ebx +
jz loc_100988F  +
cmp [ebp+arg_C] ebx +
jz loc_100988F  +
cmp [ebp+dwErrCode] ebx +
jz loc_100988F  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100988F  +
call sub_1006B05  +
test eax eax +
jnz loc_100986F  +
push 157Fh  +
call sub_1008890  +
push eax  +
call sub_10069EC  +
push 47Eh  +
call edi  +
jmp loc_1009898  +
call sub_1006879  +
test eax eax +
jz loc_1009893  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_10098B7  +
cmp eax [ebp+arg_C] +
jl loc_10098A1  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009893  +
push 57h  +
call edi  +
call sub_1006A53  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10089DC  +
mov esi eax +
cmp esi ebx +
jz loc_1009893  +
push esi  +
call sub_10095AA  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1009893  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_1008A7D  +
test eax eax +
jz loc_1009893  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_1009A19  +
jmp loc_10098EE  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1009907  +
mov edi [ecx+4] +
jmp loc_1009909  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100934B  +
cmp eax 0FFFFFFFFh +
jnz loc_100994E  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1009429  +
cmp eax 0FFFFFFFFh +
jnz loc_1009941  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_1009A56  +
mov edi ebx +
xor ebx ebx +
jmp loc_1009947  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1009A89  +
test edi edi +
jz loc_10099A9  +
cmp [ebp+arg_8] 2 +
jnz loc_10099A9  +
push dword ptr [esi+8]  +
call sub_100899D  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_10099A4  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100934B  +
cmp eax 0FFFFFFFFh +
jnz loc_100999B  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1009429  +
cmp eax 0FFFFFFFFh +
jz loc_10099A9  +
mov [ebp+arg_8] 1 +
jmp loc_10099A7  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1008D6E  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_1009B02  +
mov eax [esi+18h] +
test eax eax +
jz loc_10099E4  +
cmp eax [esi+1Ch] +
jz loc_1009AA7  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_10099FD  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_10098EB  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_1009A4B  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_1009A4B  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_1009AEC  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_1009A42  +
cmp [ecx+1Ch] ebx +
jz loc_1009B12  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1009A23  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_100989A  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1008890  +
push eax  +
push esi  +
call sub_1007E65  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100951E  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1009898  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009893  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1009893  +
test ebx ebx +
jz loc_1009AD4  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009AD4  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1008890  +
push eax  +
push 3  +
call sub_1007E65  +
add esp 14h +
jmp loc_1009A6E  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1008890  +
push eax  +
push 2  +
jmp loc_1009A66  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009AFD  +
push 42Bh  +
call edi  +
call sub_1006A53  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100951E  +
jmp loc_1009898  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_1009B2C  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_1009AEC  +
mov edi [ecx+24h] +
jmp loc_1009B44  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_1009B42  +
push ebx  +
push eax  +
call sub_10089DC  +
mov edi eax +
test edi edi +
jnz loc_1009B48  +
jmp loc_1009AFD  +
mov edi ecx +
test edi edi +
jz loc_1009B5E  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009B5E  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_1009ADF  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1008890  +
push eax  +
push 1  +
call sub_1007E65  +
add esp 0Ch +
jmp loc_1009A6E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pSid] ebx +
mov [ebp+var_14] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
call ds:AllocateAndInitializeSid  +
mov esi eax +
cmp esi 1 +
jnz loc_1009BF5  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
cmp eax esi +
jnz loc_1009BEA  +
cmp [ebp+var_14] esi +
jz loc_1009BEC  +
xor esi esi +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_1009C2B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009C27  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1009C50  +
push 0  +
push [ebp+lpString1]  +
call sub_1006C82  +
cmp eax 2 +
jbe loc_1009C27  +
push 2  +
push 1  +
push offset asc_10012DC  +
push [ebp+lpString1]  +
call sub_1006CA3  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_1009CEA  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009CEA  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1007BD8  +
cmp eax esi +
jnz loc_1009C99  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009CF5  +
push 8  +
jmp loc_1009CEF  +
mov esi ds:wcstok +
mov edi offset a__1 +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1009CEA  +
push 0  +
push 0Ah  +
push ebx  +
call sub_100847C  +
test eax eax +
jz loc_1009CF5  +
push 0Ah  +
push ebx  +
call sub_1008296  +
cmp eax 0FFh +
ja loc_1009CF5  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1009CB0  +
cmp [ebp+var_4] 4 +
jnz loc_1009CEA  +
inc eax  +
jmp loc_1009CF7  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1009E87  +
cmp ebx esi +
jz loc_1009E87  +
mov eax [ebx] +
cmp eax esi +
jz loc_1009D80  +
cmp eax 2 +
jb loc_1009E87  +
cmp edx esi +
jz loc_1009E87  +
cmp dword_100C384 esi +
jnz loc_1009DB4  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1009DAA  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1009E93  +
mov dword_100C384 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_1009E99  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1009E21  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1009E27  +
cmp eax 2AFCh +
jnz loc_1009E1E  +
cmp [ebp+var_848] di +
jnz loc_1009E27  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1009DE1  +
jmp loc_1009E73  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1009E44  +
mov eax esi +
push offset a__1  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_1006C82  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_1009E60  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1009E73  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_100767E  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_1009E9B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009E99  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_1009F05  +
push esi  +
push edi  +
call sub_1006C82  +
test eax eax +
jz loc_1009F05  +
push edi  +
call sub_1009C0A  +
push edi  +
test eax eax +
jnz loc_1009F0D  +
push offset aS_2  +
push 1  +
call sub_1007E65  +
add esp 0Ch +
test eax eax +
jnz loc_1009F14  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009F00  +
push 8  +
call ds:SetLastError  +
call sub_1006A53  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_10069EC  +
jmp loc_1009EEA  +
call sub_10069C0  +
cmp eax esi +
jnz loc_1009F26  +
push 0Dh  +
call sub_100694F  +
jmp loc_1009F30  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1007BD8  +
cmp eax esi +
jz loc_1009EEE  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1009F05  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_1009F5F  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1009F07  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_100A06E  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A06E  +
push esi  +
call sub_1009C0A  +
cmp eax 1 +
jnz loc_1009FA4  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1009FDF  +
push offset aIpc  +
push esi  +
push offset aSS_2  +
push 2  +
call sub_1007E65  +
add esp 10h +
test eax eax +
jnz loc_100A00C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009FD7  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_100A070  +
test bl 20h +
jz loc_1009FEB  +
push offset aAdmin  +
jmp loc_1009FB1  +
test bl 40h +
jz loc_1009FFA  +
cmp [ebp+arg_4] edi +
jz loc_1009FFA  +
push [ebp+arg_4]  +
jmp loc_1009FB1  +
push esi  +
push offset aS_2  +
push 1  +
call sub_1007E65  +
add esp 0Ch +
jmp loc_1009FC1  +
call sub_10069C0  +
cmp eax edi +
jnz loc_100A01E  +
push 12h  +
call sub_100694F  +
jmp loc_100A028  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1007BD8  +
cmp eax edi +
jz loc_1009FC5  +
test ebx 10000000h +
jz loc_100A03B  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_100A061  +
cmp esi 4B8h +
jz loc_100A05A  +
call sub_1006A53  +
jmp loc_100A06A  +
call sub_1007EF7  +
jmp loc_100A06A  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_100A070  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_100A1D4  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A1D4  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_100A0D1  +
xor eax eax +
jmp loc_100A1D7  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1007BD8  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_100A0F5  +
call ebx  +
test eax eax +
jnz loc_100A0CA  +
push 8  +
call ds:SetLastError  +
jmp loc_100A0CA  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_100A0CA  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1006CA3  +
test eax eax +
jz loc_100A1D4  +
push [ebp+lpString]  +
call sub_1009C59  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_100A190  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_1009D03  +
test eax eax +
jz loc_100A0CA  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1007BD8  +
mov esi eax +
cmp esi edi +
jz loc_100A0CA  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_1009D03  +
test eax eax +
jz loc_100A0CA  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1006CA3  +
test eax eax +
jnz loc_100A17C  +
mov eax ebx +
jmp loc_100A1D7  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1006CA3  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100A1D7  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_100A0CA  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1007BD8  +
mov ebx eax +
cmp ebx edi +
jz loc_100A0CA  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_100A0CA  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_100A184  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_100C000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_100A27F  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A27F  +
push ebx  +
call sub_1009C59  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_100A261  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_1009D03  +
test eax eax +
jnz loc_100A23D  +
xor eax eax +
jmp loc_100A282  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1007BD8  +
cmp eax esi +
jz loc_100A239  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_1009D03  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100A282  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_10071D6  +
cmp eax 0FFFFFFFFh +
jz loc_100A27B  +
push 35h  +
call ds:SetLastError  +
jmp loc_100A239  +
mov eax edi +
jmp loc_100A282  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10063F5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_1009F6E  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_100A410  +
push esi  +
call sub_100A07C  +
cmp eax 1 +
jz loc_100A410  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_1009C0A  +
cmp eax 1 +
jnz loc_100A2EF  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_100A1E3  +
test eax eax +
jnz loc_100A30B  +
call sub_1006A53  +
call ds:GetLastError  +
jmp loc_100A444  +
cmp [ebp+lpString] ebx +
jz loc_100A334  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A334  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_2  +
push 2  +
call sub_1007E65  +
add esp 10h +
jmp loc_100A346  +
push dword ptr [ebp+arg_0]  +
push offset aS_2  +
push 1  +
call sub_1007E65  +
add esp 0Ch +
test eax eax +
jnz loc_100A369  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A35C  +
push 8  +
call ds:SetLastError  +
call sub_1006A53  +
push 8  +
pop eax  +
jmp loc_100A444  +
call sub_10069C0  +
cmp eax ebx +
jnz loc_100A37B  +
push 12h  +
call sub_100694F  +
jmp loc_100A385  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1007BD8  +
mov edx eax +
cmp edx ebx +
jz loc_100A34A  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_100A3D6  +
cmp esi 4B8h +
jz loc_100A3CF  +
push esi  +
call ds:SetLastError  +
call sub_1006A53  +
jmp loc_100A43E  +
call sub_1007EF7  +
jmp loc_100A43E  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_1009EB1  +
push eax  +
call sub_1006B9B  +
test eax eax +
jnz loc_100A43E  +
push dword ptr [ebp+arg_0]  +
call sub_100A298  +
push 1580h  +
call sub_1008890  +
push eax  +
call sub_10069EC  +
mov esi 4B8h +
jmp loc_100A43E  +
cmp [ebp+lpUserName] ebx +
jz loc_100A442  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A442  +
push 157Eh  +
call sub_1008890  +
push eax  +
call sub_10069EC  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_100A444  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_100A2B5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_100A5FA  +
push 0  +
push edi  +
call sub_1006C82  +
test eax eax +
jz loc_100A5FA  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_100A4D9  +
cmp [ebp+lpUserName] 0 +
jz loc_100A4BF  +
cmp [ebp+nSize] 2 +
jb loc_100A4BF  +
cmp [ebp+lpPassword] 0 +
jz loc_100A4BF  +
cmp [ebp+arg_10] 2 +
jnb loc_100A4D9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A4CD  +
push 57h  +
call ebx  +
call sub_1006A53  +
xor eax eax +
jmp loc_100A5FD  +
push edi  +
mov [ebp+var_4] edi +
call sub_1009C0A  +
cmp eax esi +
jnz loc_100A4EC  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_100A51D  +
cmp [ebp+lpPassword] 0 +
jz loc_100A51D  +
push 0  +
push esi  +
push offset String2  +
push [ebp+lpPassword]  +
call sub_1006CA3  +
test eax eax +
jnz loc_100A51D  +
push [ebp+var_4]  +
call sub_100A1E3  +
test eax eax +
jnz loc_100A611  +
jmp loc_100A4CD  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_100A1E3  +
test eax eax +
jz loc_100A4CD  +
cmp [ebp+lpUserName] 0 +
jz loc_100A562  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100A562  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_100A44F  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_100A571  +
mov [ebp+var_8] esi +
jmp loc_100A571  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_100A44F  +
mov edi eax +
cmp edi 55h +
jnz loc_100A581  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_100A5FD  +
test edi edi +
jnz loc_100A58D  +
cmp [ebp+var_8] esi +
jz loc_100A576  +
push edi  +
jmp loc_100A57B  +
mov eax 4C3h +
cmp edi eax +
ja loc_100A5BA  +
jz loc_100A5B7  +
cmp edi 34h +
jz loc_100A6A9  +
cmp edi 56h +
jz loc_100A604  +
cmp edi 4BEh +
jz loc_100A6A9  +
jmp loc_100A4CD  +
push eax  +
jmp loc_100A57B  +
cmp edi 4CFh +
jb loc_100A4CD  +
cmp edi 4D1h +
jbe loc_100A6A9  +
cmp edi 52Eh +
jz loc_100A604  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_100A4CD  +
push 157Eh  +
call sub_1008890  +
push eax  +
call sub_10069EC  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_100A4D2  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_100A634  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_100A4CD  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_1008890  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100873D  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_1007969  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_100A44F  +
mov edi eax +
test edi edi +
jz loc_100A57D  +
cmp edi 34h +
jz loc_100A6A9  +
cmp edi 4BEh +
jz loc_100A6A9  +
mov eax 4C3h +
cmp edi eax +
jz loc_100A5B7  +
cmp edi 4CEh +
jbe loc_100A4CD  +
cmp edi 4D1h +
ja loc_100A5DA  +
push 4C6h  +
call ebx  +
call sub_1006A53  +
push edi  +
call ebx  +
jmp loc_100A4D2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100A6D8  +
cmp dword ptr [eax] 9 +
jnz loc_100A6D8  +
xor eax eax +
inc eax  +
jmp loc_100A6DA  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100A6F3  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100A6C2  +
test eax eax +
jz loc_100A74E  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100A742  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_100A84F  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10072E4  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100A726  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100A6C2  +
test eax eax +
jz loc_100A779  +
push ecx  +
call sub_100A708  +
push esi  +
call sub_10072E4  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100A6C2  +
test eax eax +
jz loc_100A798  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100A6C2  +
test eax eax +
jnz loc_100A7B7  +
xor eax eax +
jmp loc_100A7DC  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100A7B3  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100A7D2  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_100A7CA  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_100A7DB  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100A6C2  +
test eax eax +
jnz loc_100A7FD  +
or eax 0FFFFFFFFh +
jmp loc_100A845  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100A7F8  +
push 14h  +
call sub_1006EF2  +
test eax eax +
jz loc_100A7F8  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100A838  +
mov [esi+8] eax +
jmp loc_100A83E  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100A8C3  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_100A88E  +
jz loc_100A8AA  +
cmp eax 20000h +
jz loc_100A8AA  +
cmp eax 30000h +
jz loc_100A8AA  +
cmp eax 40000h +
jz loc_100A8AA  +
cmp eax 50000h +
jz loc_100A8AA  +
cmp eax 60000h +
jz loc_100A8AA  +
jmp loc_100A8C3  +
cmp eax 80000h +
jz loc_100A8B5  +
cmp eax 90000h +
jz loc_100A8AA  +
cmp eax 0A0000h +
jz loc_100A8AA  +
cmp eax 0B0000h +
jnz loc_100A8C3  +
add edx 0Ch +
push edx  +
call sub_10072E4  +
jmp loc_100A8C3  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100A758  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100A6C2  +
test eax eax +
jnz loc_100A8E7  +
or eax 0FFFFFFFFh +
jmp loc_100A9F6  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_100A9F1  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_100A9E1  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100A975  +
jz loc_100A963  +
cmp eax 20000h +
jz loc_100A947  +
cmp eax 30000h +
jz loc_100A9D8  +
cmp eax 40000h +
jz loc_100A9D8  +
cmp eax 60000h +
jnz loc_100A9E1  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100A96A  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1006CA3  +
test eax eax +
jz loc_100A9FB  +
mov edx [ebp+arg_0] +
jmp loc_100A9E1  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100A9E1  +
mov eax edx +
jmp loc_100A9F4  +
cmp eax 90000h +
jz loc_100A9D8  +
cmp eax 0A0000h +
jz loc_100A99B  +
cmp eax 0B0000h +
jnz loc_100A9E1  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100A9E1  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100A9DF  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100A9E1  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100A9E1  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100A9E1  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100A9E1  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100A9E1  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100A9DF  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100A971  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100A8FD  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100A9F4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A6C2  +
test eax eax +
jnz loc_100AA20  +
or eax 0FFFFFFFFh +
jmp locret_100AA73  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100AA33  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AA6E  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_100767E  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz loc_100AA71  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A6C2  +
test eax eax +
jz loc_100AAC5  +
push 4  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AAC5  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz locret_100AAC8  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A6C2  +
test eax eax +
jz loc_100AB1A  +
push 4  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AB1A  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz locret_100AB1D  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A6C2  +
test eax eax +
jz loc_100AB6F  +
push 4  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100AB6F  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz locret_100AB72  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100A6C2  +
test eax eax +
jz loc_100ABC4  +
push 8  +
call sub_1006EF2  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100ABC4  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz locret_100ABC7  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100A6C2  +
test eax eax +
jz loc_100AC3E  +
call sub_100A6E3  +
push eax  +
mov [ebp+var_4] eax +
call sub_100A6C2  +
test eax eax +
jz loc_100AC3E  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100AC18  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jz loc_100AC18  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100AC02  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100AC35  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jnz loc_100AC41  +
lea eax [ebp+var_4] +
push eax  +
call sub_100A758  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100A6C2  +
test eax eax +
jnz loc_100AC61  +
or eax 0FFFFFFFFh +
jmp loc_100AC85  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_100AC82  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100A7E5  +
cmp eax 0FFFFFFFFh +
jz loc_100AC82  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100AC69  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100A7A1  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100ACEA  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100ACC7  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100ACCD  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_100ACD5  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_100A84F  +
lea eax [ebp+var_4] +
push eax  +
call sub_10072E4  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AD20  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AD20  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AC8E  +
jmp loc_100AD22  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AD54  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AD54  +
push dword ptr [eax+0Ch]  +
call sub_100A783  +
jmp loc_100AD56  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jnz loc_100AD79  +
xor eax eax +
jmp loc_100AD8F  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100AD8C  +
cmp ecx 80000h +
jnz loc_100AD75  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jnz loc_100ADB2  +
xor eax eax +
jmp loc_100ADBE  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100ADAE  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100ADF3  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100ADF3  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AD5F  +
jmp loc_100ADF5  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AE2A  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AE2A  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AD98  +
jmp loc_100AE2C  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100AE46  +
xor eax eax +
jmp loc_100AE76  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AE42  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100AE69  +
test ecx ecx +
jz loc_100AE6D  +
jmp loc_100AE42  +
test ecx ecx +
jnz loc_100AE70  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
mov esi eax +
cmp esi edi +
jnz loc_100AE9F  +
xor eax eax +
jmp loc_100AF1E  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100AEB0  +
cmp eax edi +
jnz loc_100AF05  +
cmp [ebp+arg_C] edi +
jnz loc_100AEC1  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_100AEE5  +
lea edi [eax+eax] +
push edi  +
call sub_1006EF2  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100AF05  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100AF0C  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100AF0C  +
lea edi [esi+0Ch] +
push edi  +
call sub_10072E4  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1006EF2  +
mov [edi] eax +
test eax eax +
jnz loc_100AF09  +
xor eax eax +
jmp loc_100AF1D  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100767E  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AF58  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AF58  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AE35  +
jmp loc_100AF5A  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AF95  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AF95  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AE80  +
jmp loc_100AF97  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AFB9  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100A7A1  +
test eax eax +
jz loc_100AFEE  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100AFEE  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100AFA0  +
jmp loc_100AFF0  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100A8CC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100A8CC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100A8CC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100A8CC  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100A8CC  +
pop ebp  +
retn 10h  +
***
retf   +
***
