mov edi edi +
cmp ecx dword_101D044 +
jnz loc_101A137  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push offset SubKey  +
push 80000001h  +
xor edi edi +
call ds:RegOpenKeyW  +
test eax eax +
jz loc_100477D  +
mov eax edi +
pop edi  +
leave   +
retn   +
***
push offset dword_101D060  +
push dword_105D4C0  +
mov dword_101D060 eax +
push offset unk_105D128  +
push offset unk_105D12C  +
push offset unk_105D124  +
call ds:__getmainargs  +
add esp 14h +
mov dword_101D05C eax +
retn   +
***
push offset loc_1019FCE  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101D044 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_100541A  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1001815  +
test dword_101D044 ebx +
jz loc_1001815  +
mov dword_101D044 esi +
not esi  +
mov dword_101D048 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_1001802  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_210] 0 +
and [ebp+var_214] 0 +
push ebx  +
push esi  +
push edi  +
call ds:GetCommandLineW  +
mov edi ds:CharNextW +
mov esi eax +
movzx eax word ptr [esi] +
cmp ax 22h +
jz loc_100328D  +
cmp ax 20h +
jbe loc_1001873  +
push esi  +
call edi  +
mov esi eax +
cmp word ptr [esi] 20h +
ja loc_1001868  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1001888  +
cmp ax 20h +
ja loc_1001888  +
push esi  +
call edi  +
mov esi eax +
jmp loc_1001873  +
mov ebx ds:_wcsnicmp +
cmp word ptr [esi] 20h +
jz loc_1001F20  +
movzx eax word ptr [esi] +
cmp ax 2Fh +
jz loc_10018A7  +
cmp ax 2Dh +
jnz loc_10018FB  +
push esi  +
call edi  +
mov esi eax +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100188E  +
cmp ax 20h +
jz loc_100188E  +
movzx eax ax +
cmp eax 61h +
jle loc_1004811  +
sub eax 65h +
jz loc_1004846  +
sub eax 7 +
jz loc_100489C  +
dec eax  +
jz loc_10032B6  +
sub eax 5 +
jz loc_100489C  +
dec eax  +
jnz loc_10029CA  +
mov [ebp+var_210] 1 +
jmp loc_10018A7  +
xor ebx ebx +
cmp [ebp+arg_0] 1 +
jz loc_10047FE  +
cmp [ebp+var_214] ebx +
jnz loc_1004864  +
cmp [esi] bx +
jz loc_10032AF  +
push esi  +
call sub_100269E  +
cmp [ebp+arg_0] 1 +
mov edi eax +
jz loc_1004855  +
cmp edi ebx +
jz loc_100196E  +
mov esi 104h +
push esi  +
lea eax [ebp+szLongPath] +
push eax  +
push edi  +
call ds:GetLongPathNameW  +
cmp eax ebx +
jz loc_1001954  +
cmp eax esi +
jnb loc_1001954  +
lea edi [ebp+szLongPath] +
push ebx  +
push edi  +
push [ebp+var_210]  +
push ebx  +
call sub_10023B8  +
push ebx  +
call sub_100269E  +
mov edi eax +
cmp edi ebx +
jnz loc_1001937  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_10019A8  +
test eax eax +
jnz loc_10019A8  +
mov ecx [esi] +
test ecx ecx +
jz loc_10019A3  +
call ecx  +
add esi 4 +
jmp loc_1001992  +
pop esi  +
pop ebp  +
retn   +
***
call sub_1001792  +
push 58h  +
push offset dword_1001AC8  +
call sub_1001E84  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov [ebp-4] ebx +
lea eax [ebp-68h] +
push eax  +
call ds:GetStartupInfoA  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov dword ptr [ebp-4] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset unk_105D11C +
push 0  +
push esi  +
push edi  +
call ds:__imp_InterlockedCompareExchange  +
test eax eax +
jnz loc_1001B27  +
xor esi esi +
inc esi  +
mov eax dword_101D08C +
cmp eax esi +
jz loc_1001B45  +
mov eax dword_101D08C +
test eax eax +
jnz loc_10032CB  +
mov dword_101D08C esi +
push offset dword_1001AC0  +
push offset dword_1001AB4  +
call sub_1001987  +
pop ecx  +
pop ecx  +
test eax eax +
jnz near ptr loc_1001BE5+2  +
mov eax dword_101D08C +
cmp eax esi +
jnz loc_1001A61  +
push offset dword_1001AB0  +
push offset dword_1001AA8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_101D08C 2 +
test ebx ebx +
jnz loc_1001A6D  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_105D4D0 0 +
jnz loc_1001B52  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp-20h] esi +
mov al [esi] +
cmp al 20h +
jbe loc_1001AF0  +
cmp al 22h +
jz loc_10032D6  +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jnz loc_1001B8B  +
inc esi  +
jmp loc_1001A81  +
***
test al al +
jz loc_1001AFA  +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_1001A8A  +
mov al [esi] +
test al al +
jz loc_1001B0A  +
cmp al 20h +
ja loc_1001B0A  +
inc esi  +
mov [ebp-20h] esi +
jmp loc_1001AFA  +
***
test byte ptr [ebp-3Ch] 1 +
jnz loc_10032C2  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push offset __ImageBase  +
call sub_1001585  +
jmp loc_1001B76  +
cmp eax esi +
jnz loc_1001B35  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_1001A04  +
***
push 3E8h  +
call ds:Sleep  +
jmp loc_10019EF  +
***
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1001A3D  +
***
push offset dword_105D4D0  +
call sub_101A0A4  +
pop ecx  +
test eax eax +
jz loc_1001A7A  +
push 0  +
push 2  +
push 0  +
call dword_105D4D0  +
jmp loc_1001A7A  +
***
mov dword_105D194 eax +
cmp dword_101D058 0 +
jnz loc_1001BDF  +
push eax  +
call ds:exit  +
***
inc esi  +
mov [ebp-20h] esi +
jmp loc_1001AA5  +
***
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
***
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_105D194 eax +
cmp dword_101D058 0 +
jnz loc_1001BC3  +
push eax  +
call ds:_exit  +
***
cmp dword_105DBCC 0 +
jnz loc_1001BD2  +
call ds:_cexit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax dword_105D194 +
adc esi [ebx] +
rol byte ptr [eax-3Dh] 8Bh +
call near ptr 0FFFC61B2h  +
mov ecx [ebp-10h] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jnb loc_1001C2E  +
sub eax 1000h +
test [eax] eax +
jmp loc_1001C21  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
***
inc dword ptr [ebx+5D4BC3Dh]  +
add [eax] eax +
jz loc_10053E9  +
call sub_1001DBB  +
xor eax eax +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1001E01  +
push eax  +
call sub_1001E0B  +
test eax eax +
jz loc_1001E01  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100540B  +
push 2  +
pop eax  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
pop ebp  +
retn   +
***
call sub_1001E84  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1001E5A  +
cmp ecx 0FFFFFFFFh +
jz loc_1001E5A  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1001E53  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1001E53  +
cmp edx 10000000h +
jnb loc_1001E53  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_1005401  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_1001BF9  +
retn 4  +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_101D044 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
push esi  +
call edi  +
mov esi eax +
jmp loc_100188E  +
***
cmp [ebp+var_4] edi +
jz loc_1001F34  +
push [ebp+var_4]  +
call esi  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_101D050 +
test eax eax +
jnz loc_1005283  +
pop ebp  +
retn 4  +
***
cmp word ptr [ebp+var_4] 3Bh +
jz loc_1004BE3  +
test esi esi +
jnz loc_1001FB9  +
dec cchWideChar  +
and [ebp+var_8] 0 +
jmp loc_1001FC6  +
cmp [ebp+var_8] eax +
jnz loc_1001FCC  +
jmp loc_1001FCE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
lea eax [ebp+var_4] +
inc ebx  +
push eax  +
xor esi esi +
xor edi edi +
mov [ebp+var_8] ebx +
call sub_1002090  +
test eax eax +
jz loc_1001FCC  +
push [ebp+var_4]  +
call sub_100270F  +
test eax eax +
jnz loc_1001FB9  +
push [ebp+var_4]  +
call sub_1001FE0  +
test eax eax +
jz loc_1001F55  +
xor esi esi +
mov edi ebx +
lea eax [ebp+var_4] +
push eax  +
call sub_1002090  +
test eax eax +
jnz loc_1001F9D  +
xor eax eax +
cmp edi eax +
jz loc_1001F70  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0Ah +
jz loc_1001FF9  +
cmp [ebp+arg_0] 0Dh +
jz loc_1001FF9  +
xor eax eax +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1001FF5  +
***
cmp dword_101D040 1 +
push 0  +
lea eax [ebp+cchMultiByte] +
push eax  +
jnz loc_1004A90  +
push 10000h  +
push offset WideCharStr  +
push hFile  +
call ds:ReadFile  +
test eax eax +
jz loc_1004A81  +
mov eax [ebp+cchMultiByte] +
cdq   +
sub eax edx +
sar eax 1 +
mov ecx dword_105D110 +
and cchWideChar 0 +
mov dword_105D10C eax +
mov eax [ebp+cchMultiByte] +
add dword_105D114 eax +
test ecx ecx +
jz loc_1002064  +
mov eax dword_105D114 +
xor edx edx +
div  ecx +
cmp eax 64h +
jbe loc_1002067  +
push 64h  +
pop eax  +
cmp dword_105D118 eax +
jz loc_10020A9  +
push eax  +
mov dword_105D118 eax +
call sub_1001F3F  +
jmp loc_10020A9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax cchWideChar +
push esi  +
push edi  +
cmp eax dword_105D10C +
jz loc_1001FFE  +
mov eax cchWideChar +
cmp eax dword_105D10C +
jge loc_10020D3  +
mov ax WideCharStr[eax*2] +
mov ecx [ebp+arg_0] +
mov [ecx] ax +
inc cchWideChar  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn 4  +
xor eax eax +
jmp loc_10020CD  +
***
cmp [ebp+var_4] edi +
jnz loc_1004DD0  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_100284B  +
jmp loc_100214C  +
call sub_100D73F  +
jmp loc_100214C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
call sub_1002928  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002090  +
mov esi ds:RegCloseKey +
test eax eax +
jz loc_1001F2A  +
movzx eax word ptr [ebp+var_8] +
cmp eax 22h +
jz loc_100215C  +
cmp eax 3Bh +
jz loc_10020EE  +
cmp eax 40h +
jz loc_1004DDD  +
cmp eax 5Bh +
jz loc_10020D7  +
push [ebp+var_8]  +
call sub_1001FE0  +
test eax eax +
jz loc_10020EE  +
call sub_1002928  +
lea eax [ebp+var_8] +
push eax  +
call sub_1002090  +
jmp loc_100211C  +
cmp [ebp+var_4] edi +
jz loc_10020EE  +
push [ebp+var_4]  +
call sub_1002170  +
jmp loc_100214C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax 200h +
push eax  +
push 40h  +
mov [ebp+var_4] eax +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz locret_10021B0  +
lea eax [ebp+hMem] +
push eax  +
call sub_100233E  +
test eax eax +
jz loc_10021B4  +
push [ebp+hMem]  +
push [ebp+arg_0]  +
call sub_10021C0  +
push [ebp+hMem]  +
call ds:LocalFree  +
leave   +
retn 4  +
call sub_100D73F  +
jmp loc_10021A7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+hKey] eax +
mov eax [ebp+arg_4] +
xor edi edi +
inc edi  +
xor ebx ebx +
mov [ebp+lpWideCharStr] eax +
mov [ebp+var_108] edi +
mov [ebp+var_10C] ebx +
call sub_1002928  +
push 3Dh  +
call sub_1002309  +
test eax eax +
jz loc_10022FD  +
call sub_1002928  +
mov esi 100h +
push esi  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+lpData] eax +
cmp eax ebx +
jz loc_1004BEA  +
push 22h  +
call sub_1002309  +
test eax eax +
jnz loc_1004BF9  +
push 64h  +
call sub_1002309  +
test eax eax +
jz loc_1004C55  +
mov esi (offset aDword+2) +
movzx eax word ptr [esi] +
push eax  +
call sub_1002309  +
inc esi  +
inc esi  +
test eax eax +
jz loc_1004C33  +
cmp [esi] bx +
jnz loc_1002253  +
cmp [ebp+var_108] ebx +
jz loc_10022D8  +
call sub_1002928  +
push [ebp+lpData]  +
call sub_1002956  +
test eax eax +
jz loc_1004C44  +
call sub_1001F7C  +
test eax eax +
jz loc_1004C44  +
push 4  +
pop edi  +
mov esi edi +
cmp [ebp+var_108] ebx +
jz loc_10022D8  +
cmp dword_101D064 500h +
jb loc_1004D65  +
push esi  +
push [ebp+lpData]  +
push edi  +
push ebx  +
push [ebp+lpWideCharStr]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_1004DC1  +
push [ebp+lpData]  +
call ds:LocalFree  +
cmp [ebp+var_10C] ebx +
jnz loc_10022FD  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
call sub_100D73F  +
jmp loc_10022EC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
xor esi esi +
call sub_1002090  +
test eax eax +
jz loc_100232A  +
mov ax [ebp+arg_0] +
cmp ax word ptr [ebp+var_4] +
jnz loc_1002331  +
inc esi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
dec cchWideChar  +
jmp loc_100232A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+4] +
mov esi [edi] +
push 2  +
pop ebx  +
mov [ebp+var_8] eax +
mov [ebp+var_4] ebx +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_10023AF  +
mov eax [ebp+var_8] +
cmp [ebp+var_4] eax +
jnb loc_1004B2D  +
mov ecx [ebp+arg_0] +
movzx eax cx +
cmp eax 22h +
jz loc_100239A  +
cmp eax 5Ch +
jz loc_1004B5A  +
push ecx  +
call sub_1001FE0  +
test eax eax +
jnz loc_10023AF  +
mov [esi] cx +
add esi ebx +
add [ebp+var_4] ebx +
jmp loc_1002359  +
xor eax eax +
mov [esi] ax +
mov eax [ebp+var_4] +
mov [edi+4] eax +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor eax eax +
jmp loc_10023A8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi [ebp+arg_8] +
cmp [ebp+arg_4] eax +
jz loc_10052AB  +
mov dword_101D050 eax +
cmp [ebp+arg_4] eax +
jz loc_10052DA  +
push ebx  +
push edi  +
push esi  +
call sub_1002427  +
cmp dword_101D050 0 +
jnz loc_1005309  +
cmp [ebp+arg_4] 0 +
jz loc_1005323  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+hWnd] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov [ebp+lpFileName] eax +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
mov [ebp+var_408] eax +
xor eax eax +
push 206h  +
mov [ebp+FileName] ax +
xor ebx ebx +
lea eax [ebp-20Ah] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
mov esi 104h +
push esi  +
push ebx  +
push [ebp+lpFileName]  +
mov edi 80h +
push ebx  +
mov dword_101D068 edi +
call ds:SearchPathW  +
cmp eax ebx +
jz loc_100268E  +
cmp eax esi +
ja loc_100268E  +
push ebx  +
push edi  +
push 3  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push 80000000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax 0FFFFFFFFh +
jz loc_100268E  +
push ebx  +
push eax  +
call ds:GetFileSize  +
push 64h  +
pop ecx  +
xor edx edx +
div  ecx +
push ebx  +
mov dword_105D114 ebx +
mov dword_105D10C ebx +
mov dword_105D118 ebx +
mov dword_105D110 eax +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
push hFile  +
call ds:ReadFile  +
test eax eax +
jz loc_1004DF4  +
mov eax 0FEFFh +
cmp word ptr [ebp+Buffer] ax +
jnz loc_1004E03  +
mov dword_101D040 esi +
mov cchWideChar ebx +
call sub_1002928  +
mov edi offset aRegedit +
mov dword_101D064 ebx +
mov esi offset aWindowsRegistr +
movzx eax word ptr [esi] +
push eax  +
call sub_1002309  +
test eax eax +
jz loc_1002579  +
push esi  +
call ds:CharNextW  +
mov esi eax +
cmp [esi] bx +
jnz loc_100255E  +
xor eax eax +
cmp ax [esi] +
jnz loc_1004E3C  +
call sub_1002928  +
xor eax eax +
push 2Eh  +
mov [ebp+var_402] ax +
call sub_1002309  +
mov esi ds:StrToIntW +
test eax eax +
jz loc_1002640  +
xor edi edi +
lea eax [ebp-404h] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_1004E2D  +
push dword ptr [ebp-404h]  +
call ds:IsCharAlphaNumericW  +
test eax eax +
jz loc_1004E2D  +
lea eax [ebp-404h] +
push eax  +
call esi  +
mov ecx dword_101D064 +
shl ecx 4 +
add ecx eax +
inc edi  +
mov dword_101D064 ecx +
cmp edi 2 +
jb loc_10025A9  +
cmp ecx 500h +
jnz loc_1004E1E  +
call sub_1002928  +
push [ebp+var_408]  +
call sub_10020FA  +
mov eax hFile +
pop edi  +
pop esi  +
cmp eax ebx +
pop ebx  +
jz loc_1002620  +
push eax  +
call ds:CloseHandle  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 0Ch  +
lea eax [ebp-404h] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_1004E2D  +
push dword ptr [ebp-404h]  +
call ds:IsCharAlphaNumericW  +
test eax eax +
jz loc_1004E2D  +
lea eax [ebp-404h] +
push eax  +
call esi  +
mov ecx dword_101D064 +
shl ecx 4 +
add ecx eax +
push 2Eh  +
mov dword_101D064 ecx +
call sub_1002309  +
jmp loc_100259F  +
call ds:__imp_GetLastError  +
jmp loc_1004F41  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10026AF  +
mov eax dword_101D04C +
cmp word ptr [eax] 20h +
jz loc_10026E5  +
movzx ecx word ptr [eax] +
push edi  +
test cx cx +
jnz loc_10026CC  +
xor edi edi +
mov dword_101D04C eax +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
push esi  +
push 22h  +
pop esi  +
cmp cx si +
jz loc_100498D  +
push 20h  +
pop esi  +
mov edi eax +
cmp [eax] si +
jnz loc_10026E9  +
jmp loc_1002700  +
inc eax  +
inc eax  +
jmp loc_10026AF  +
cmp word ptr [eax] 0 +
jz loc_10026FB  +
push eax  +
call ds:CharNextW  +
cmp [eax] si +
jnz loc_10026E9  +
cmp [eax] si +
jnz loc_1002707  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
pop esi  +
jmp loc_10026C0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 20h +
jz loc_1002728  +
cmp [ebp+arg_0] 9 +
jz loc_1002728  +
xor eax eax +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1002724  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push 5Ch  +
push [ebp+lpString2]  +
call ds:StrChrW  +
mov esi eax +
test esi esi +
jz loc_1002758  +
movzx eax word ptr [esi] +
mov [ebp+var_4] eax +
xor eax eax +
mov [esi] ax +
inc esi  +
inc esi  +
push [ebp+lpString2]  +
call ds:CharUpperW  +
push [ebp+lpString2]  +
push [ebp+arg_0]  +
call sub_10027CC  +
test eax eax +
jz loc_1002F9E  +
mov ecx [ebp+arg_C] +
sub ecx 0 +
mov edi 3F3h +
jz loc_1004A6D  +
dec ecx  +
jnz loc_1004A4C  +
cmp eax 80000002h +
jz loc_1002F91  +
cmp eax 80000003h +
jz loc_1002F91  +
push [ebp+phkResult]  +
push esi  +
push eax  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_10027B3  +
xor edi edi +
test esi esi +
jz loc_10027BF  +
mov ax word ptr [ebp+var_4] +
mov [esi-2] ax +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+lpString2] +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_20C] ebx +
mov [ebp+var_208] esi +
cmp eax esi +
jnz loc_10049BB  +
mov edi offset off_1001C38 +
push ebx  +
push dword ptr [edi]  +
call ds:lstrcmpW  +
test eax eax +
jz loc_1002835  +
add edi 0Ch +
inc esi  +
cmp edi offset aHkey_dyn_data +
jl loc_1002805  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_208] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
imul esi esi +
mov eax ds:dword_1001C3C[esi] +
mov [ebp+var_208] eax +
jmp loc_100281E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1730h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_1730] eax +
lea eax [ebp+var_1728] +
push eax  +
mov [ebp+var_172C] 1 +
xor edi edi +
or esi 0FFFFFFFFh +
call sub_1002090  +
test eax eax +
jz loc_100290E  +
cmp word ptr [ebp+var_1728] 2Dh +
jz loc_1004AC5  +
mov ecx [ebp+var_1728] +
push ecx  +
call sub_1001FE0  +
test eax eax +
jnz loc_10028DB  +
cmp cx 5Dh +
jz loc_100291F  +
mov [ebp+edi*2+String2] cx +
inc edi  +
cmp edi 0B90h +
jz loc_1004AE8  +
lea eax [ebp+var_1728] +
push eax  +
call sub_1002090  +
test eax eax +
jnz loc_10028A0  +
cmp esi 0FFFFFFFFh +
jz loc_100290E  +
push [ebp+var_172C]  +
xor eax eax +
mov [ebp+esi*2+String2] ax +
lea eax [ebp+String2] +
push eax  +
push ebx  +
push [ebp+var_1730]  +
call sub_1002732  +
cmp eax 3F3h +
jz loc_1004B1E  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
mov esi edi +
jmp loc_10028B6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002090  +
test eax eax +
jz locret_100294F  +
push [ebp+var_4]  +
call sub_100270F  +
test eax eax +
jnz loc_100292E  +
dec cchWideChar  +
leave   +
retn   +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
lea eax [ebp-1] +
push eax  +
call sub_1002995  +
test eax eax +
jz loc_100297E  +
movzx eax [ebp+var_1] +
shl esi 4 +
add esi eax +
inc edi  +
cmp edi 8 +
jnz loc_1002962  +
mov eax [ebp+arg_0] +
mov [eax] esi +
xor eax eax +
test edi edi +
pop edi  +
setnz al  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_10029C6  +
mov eax [ebp+var_4] +
lea ecx [eax-30h] +
cmp cx 9 +
ja loc_1004BB8  +
sub al 30h +
mov ecx [ebp+arg_0] +
mov [ecx] al +
xor eax eax +
inc eax  +
leave   +
retn 4  +
xor eax eax +
jmp locret_10029C2  +
***
dec eax  +
dec eax  +
jnz loc_10018A7  +
jmp loc_1004820  +
***
push edi  +
push edi  +
push edi  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jz loc_1001600  +
cmp dword_105D4D4 edi +
jnz loc_1002AB2  +
lea eax [ebp+Msg] +
push eax  +
push ebx  +
push hWnd  +
call ds:TranslateAcceleratorW  +
test eax eax +
jnz loc_1002A84  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_1002A84  +
***
jz loc_1002AEB  +
mov eax edi +
dec eax  +
jz loc_100335F  +
dec eax  +
jz loc_1002DE9  +
sub eax 3 +
jz loc_1003F31  +
dec eax  +
jnz loc_1002AFB  +
cmp [ebp+10h] eax +
jz loc_1002AF7  +
push dword_101D09C  +
call ds:SetFocus  +
xor eax eax +
jmp loc_1002B59  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp loc_1002B59  +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7Bh +
ja loc_1002B5E  +
jz loc_1004484  +
cmp edi 7 +
jbe loc_1002AC8  +
cmp edi 0Fh +
jz loc_1003180  +
cmp edi 15h +
jz loc_1004436  +
cmp edi 1Ah +
jz loc_100442E  +
cmp edi 4Eh +
jnz loc_1002AFB  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1002BD5  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov eax 11Fh +
cmp edi eax +
ja loc_1003F0F  +
jz loc_10044F1  +
mov eax edi +
sub eax 111h +
jz loc_10044D5  +
dec eax  +
dec eax  +
jz loc_1003F4D  +
sub eax 3 +
jz loc_10044BD  +
dec eax  +
jnz loc_1002AFB  +
jmp loc_10044A1  +
***
dec eax  +
jnz loc_1002C17  +
mov ecx [ebp+arg_8] +
mov eax [ecx+8] +
cmp eax 0FFFFFF50h +
jz loc_1003C43  +
cmp eax 0FFFFFF51h +
jz loc_1003C35  +
cmp eax 0FFFFFFF9h +
jz loc_1003C2E  +
add eax 4 +
cmp eax 1 +
ja loc_1002C17  +
jmp loc_10040E8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
dec eax  +
jnz loc_1002B9B  +
mov ecx [ebp+arg_8] +
mov eax [ecx+8] +
cmp eax 0FFFFFE34h +
jz loc_1003C5F  +
cmp eax 0FFFFFE35h +
jz loc_1003C51  +
cmp eax 0FFFFFE3Ah +
jz loc_1003C20  +
cmp eax 0FFFFFE3Dh +
jz loc_1002C1D  +
cmp eax 0FFFFFFF9h +
jz loc_1003C6D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
push ecx  +
push [ebp+hWnd]  +
call sub_1002C2D  +
jmp loc_1002C17  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_101D0AC +
sub eax 0 +
push esi  +
push 1  +
pop esi  +
jz loc_1002DD1  +
dec eax  +
jz loc_100476E  +
dec eax  +
jnz loc_1002C56  +
push [ebp+hWnd]  +
call sub_1003AD2  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 42Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+hWnd] +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_428] eax +
xor ecx ecx +
lea eax [ebp+var_404] +
mov [edi] cx +
mov [ebp+lParam] 5 +
mov [ebp+var_41C] eax +
mov [ebp+var_418] 200h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push ebx  +
call esi  +
cmp [ebp+var_408] 0 +
jnz loc_1002D32  +
cmp word ptr [edi] 0 +
jnz loc_1004533  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+arg_C]  +
push edi  +
call sub_1002D3F  +
cmp [ebp+var_408] 0 +
jnz loc_1004560  +
push [ebp+var_428]  +
push 3  +
push 110Ah  +
push ebx  +
call esi  +
mov [ebp+var_428] eax +
test eax eax +
jnz loc_1002CB2  +
mov eax [ebp+arg_10] +
and eax 3 +
cmp al 3 +
jnz loc_1004573  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_408] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 14h  +
test byte ptr [ebp+arg_10] 1 +
jnz loc_1002CCC  +
jmp loc_1002D1B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1002D6F  +
cmp edx 7FFFFFFFh +
ja loc_1002D6F  +
test eax eax +
jl loc_1002D6B  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1002D7B  +
pop ebp  +
retn 0Ch  +
mov eax 80070057h +
jmp loc_1002D55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1002DC7  +
cmp [ebp+arg_4] eax +
jz loc_1002DAC  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1002DAC  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1002D8F  +
test esi esi +
jz loc_1002DC7  +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_100406D  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
jmp loc_1002DB0  +
***
push 0  +
push esi  +
push esi  +
push [ebp+hWnd]  +
call ds:SetTimer  +
mov dword_101D0AC esi +
jmp loc_1002C56  +
***
push dword ptr [ebp+8]  +
call sub_1002DFB  +
jmp loc_1002AF7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicros  +
push 80000001h  +
call ds:RegCreateKeyW  +
mov esi ds:SendMessageW +
xor ebx ebx +
test eax eax +
jnz loc_1002F4C  +
lea eax [ebp+Data] +
push eax  +
push edi  +
mov dword ptr [ebp+Data] 2Ch +
call ds:GetWindowPlacement  +
mov eax dword_101D0A0 +
push ebx  +
push ebx  +
mov [ebp+var_820] eax +
mov eax dword_101D094 +
mov edi 101Dh +
push edi  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
push ebx  +
push 1  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+var_81C] eax +
call esi  +
push ebx  +
push 2  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+var_818] eax +
call esi  +
mov edi ds:RegSetValueExW +
mov [ebp+var_814] eax +
xor eax eax +
cmp dword_101D0B0 ebx +
push 40h  +
setnz al  +
mov [ebp+var_810] eax +
lea eax [ebp+Data] +
push eax  +
push 3  +
push ebx  +
push offset ValueName  +
push [ebp+hKey]  +
call edi  +
push 4  +
push offset Data  +
push 4  +
push ebx  +
push offset aFindflags  +
push [ebp+hKey]  +
call edi  +
mov eax dword_101D090 +
push 3  +
push 400h  +
lea ecx [ebp+String] +
push ecx  +
push ebx  +
push 9  +
push 110Ah  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
push eax  +
push [ebp+hWnd]  +
call sub_1002C60  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+String] +
push eax  +
push 1  +
push ebx  +
push offset aLastkey  +
push [ebp+hKey]  +
call edi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push ebx  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
mov eax phkResult +
cmp eax ebx +
jnz loc_10040DC  +
mov eax himl +
cmp eax ebx +
jz loc_1002F79  +
push eax  +
call ds:ImageList_Destroy  +
push ebx  +
call ds:PostQuitMessage  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
test esi esi +
jnz loc_10027A2  +
jmp loc_1004A66  +
mov edi 3F2h +
jmp loc_10027B3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push offset szFormat  +
call ds:RegisterClipboardFormatW  +
xor esi esi +
mov uFormat eax +
mov eax dword_101D054 +
push 7F01h  +
push esi  +
mov [ebp+WndClass.style] 8 +
mov [ebp+WndClass.lpfnWndProc] offset loc_1006F89 +
mov [ebp+WndClass.cbClsExtra] esi +
mov [ebp+WndClass.cbWndExtra] esi +
mov [ebp+WndClass.hInstance] eax +
mov [ebp+WndClass.hIcon] esi +
call ds:LoadCursorW  +
mov [ebp+WndClass.hCursor] eax +
lea eax [ebp+WndClass] +
push eax  +
mov [ebp+WndClass.hbrBackground] esi +
mov [ebp+WndClass.lpszMenuName] esi +
mov [ebp+WndClass.lpszClassName] offset aHex +
call ds:RegisterClassW  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop esi  +
mov eax ecx +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetSystemMetrics +
push 0  +
push 32h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
movzx eax [ebp+arg_4] +
push 1  +
push eax  +
push dword_101D054  +
call ds:LoadImageW  +
mov esi eax +
test esi esi +
jz loc_1003091  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+himl]  +
call ds:ImageList_ReplaceIcon  +
push esi  +
call ds:DestroyIcon  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ds:GetSysColor +
push 0Eh  +
call esi  +
push 0Dh  +
mov dword_101D07C eax +
call esi  +
push 8  +
mov dword_101D070 eax +
call esi  +
push 5  +
mov dword_101D078 eax +
call esi  +
push eax  +
push himl  +
mov lParam eax +
call ds:ImageList_SetBkColor  +
push lParam  +
push 0  +
push 1001h  +
push dword_101D094  +
call ds:SendMessageW  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 103Ch +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_1010] 0 +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi [ebp+arg_0] +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
mov [ebp+lpString2] edi +
call esi  +
push 3  +
mov ebx 400h +
push ebx  +
lea ecx [ebp+String1] +
push ecx  +
push eax  +
push dword_101D090  +
mov [ebp+lParam] eax +
call sub_1002C60  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_1004119  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
cmp dword_101D0E4 0 +
jz loc_1002AFB  +
jmp loc_100444F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 2Ch  +
lea eax [ebp+var_30.style] +
push 0  +
push eax  +
call memset  +
mov eax dword_101D054 +
add esp 0Ch +
push 64h  +
push eax  +
mov [ebp+var_30.cbSize] 30h +
mov [ebp+var_30.style] 4008h +
mov [ebp+var_30.lpfnWndProc] offset loc_1002B12 +
mov [ebp+var_30.hInstance] eax +
call ds:LoadIconW  +
push 64h  +
push dword_101D054  +
mov [ebp+var_30.hIcon] eax +
call ds:LoadCursorW  +
push 10h  +
mov [ebp+var_30.hCursor] eax +
pop eax  +
push 0  +
push eax  +
push eax  +
push 1  +
push 64h  +
push dword_101D054  +
mov [ebp+var_30.hbrBackground] eax +
mov [ebp+var_30.lpszMenuName] 67h +
mov [ebp+var_30.lpszClassName] offset ClassName +
call ds:LoadImageW  +
mov [ebp+var_30.hIconSm] eax +
lea eax [ebp+var_30] +
push eax  +
call ds:RegisterClassExW  +
movzx eax ax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx dword_101D090 +
mov [ebp+var_208] eax +
mov eax [ebp+arg_4] +
test byte ptr [eax+0Ch] 2 +
push esi  +
mov esi [eax+3Ch] +
push edi  +
jz loc_100327A  +
test byte ptr [eax+40h] 40h +
jnz loc_100327A  +
mov edi ds:SendMessageW +
push esi  +
push 4  +
push 110Ah  +
push ebx  +
call edi  +
test eax eax +
jz loc_100457D  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
push esi  +
call edi  +
mov esi eax +
movzx eax word ptr [esi] +
test ax ax +
jz loc_10032A0  +
cmp ax 22h +
jnz loc_100328D  +
cmp word ptr [esi] 22h +
jz loc_1001881  +
jmp loc_1001873  +
xor eax eax +
jmp loc_1001971  +
and hWnd 0 +
jmp loc_10018A7  +
***
movzx eax word ptr [ebp-38h] +
jmp loc_1001B17  +
***
mov dword_105DBCC esi +
jmp loc_1001A3D  +
***
xor ecx ecx +
cmp [ebp-1Ch] ecx +
setz cl  +
mov [ebp-1Ch] ecx +
jmp loc_1001A92  +
***
cmp ebx eax +
jz loc_1003355  +
cmp esi eax +
jz loc_1003355  +
mov edx [ebx] +
mov ecx edx +
shr ecx 1 +
cmp ecx eax +
jle loc_1003306  +
lea ecx [esi+ecx*2] +
cmp [ecx-2] ax +
jz loc_1003355  +
jmp loc_1004994  +
jz loc_100499E  +
jmp loc_1003355  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpcbData] +
push esi  +
mov esi [ebp+lpData] +
push edi  +
mov edi [ebp+lpType] +
push ebx  +
push esi  +
push edi  +
push [ebp+lpReserved]  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov [ebp+lpcbData] eax +
xor eax eax +
cmp [ebp+lpcbData] eax +
jnz loc_1003355  +
cmp edi eax +
jz loc_1003355  +
mov edi [edi] +
cmp edi 1 +
jz loc_10032E6  +
cmp edi 2 +
jz loc_10032E6  +
cmp edi 7 +
jz loc_10032E6  +
mov eax [ebp+lpcbData] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+8]  +
call sub_100337B  +
neg eax  +
sbb eax eax +
neg eax  +
dec eax  +
jmp loc_1002B59  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A98h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov eax [eax] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 14h  +
mov [ebp+hWnd] esi +
mov [ebp+var_A28] edi +
mov [ebp+var_A24] edi +
mov [ebp+dwExStyle] 200h +
mov [ebp+var_A18] eax +
call sub_1003915  +
pop ecx  +
mov lpString eax +
cmp eax edi +
jz loc_10038A0  +
push 1Bh  +
call sub_1003915  +
pop ecx  +
mov dword_101D0B8 eax +
cmp eax edi +
jz loc_10038A0  +
push 16h  +
call sub_1003915  +
pop ecx  +
mov dword_101D0BC eax +
cmp eax edi +
jz loc_10038A0  +
push 19h  +
call sub_1003915  +
pop ecx  +
mov dword_101D0C0 eax +
cmp eax edi +
jz loc_10038A0  +
push 1Ah  +
call sub_1003915  +
pop ecx  +
mov dword_101D0C4 eax +
cmp eax edi +
jz loc_10038A0  +
push 15h  +
call sub_1003915  +
pop ecx  +
mov lpNewItem eax +
cmp eax edi +
jz loc_10038A0  +
push 17h  +
call sub_1003915  +
pop ecx  +
mov dword_101D0CC eax +
cmp eax edi +
jz loc_10038A0  +
push 18h  +
call sub_1003915  +
pop ecx  +
mov dword_101D0D0 eax +
cmp eax edi +
jz loc_10038A0  +
lea eax [ebp+var_A24] +
push eax  +
call ds:GetProcessDefaultLayout  +
test eax eax +
jz loc_1003484  +
test byte ptr [ebp+var_A24] 1 +
jnz loc_10043AA  +
push ebx  +
push edi  +
push dword_101D054  +
mov ebx ds:CreateWindowExW +
push 1  +
push esi  +
push edi  +
push edi  +
push edi  +
push edi  +
push 5001003Fh  +
push edi  +
push offset aSystreeview32  +
push [ebp+dwExStyle]  +
call ebx  +
mov dword_101D090 eax +
cmp eax edi +
jz loc_10038A4  +
push edi  +
push offset aExplorer  +
push eax  +
call ds:SetWindowTheme  +
mov esi ds:SendMessageW +
push 4  +
push 4  +
push 112Ch  +
push dword_101D090  +
call esi  +
push edi  +
push dword_101D054  +
push 2  +
push [ebp+hWnd]  +
push edi  +
push edi  +
push edi  +
push edi  +
push 52018A41h  +
push edi  +
push offset aSyslistview32  +
push [ebp+dwExStyle]  +
call ebx  +
mov dword_101D094 eax +
cmp eax edi +
jz loc_10038A4  +
mov ecx 4000h +
push ecx  +
push ecx  +
push 1036h  +
push eax  +
call esi  +
push 3  +
push [ebp+hWnd]  +
push edi  +
push 40000110h  +
call ds:CreateStatusWindowW  +
mov dword_101D098 eax +
cmp eax edi +
jz loc_10038A4  +
mov ecx [ebp+var_A18] +
mov ecx [ecx+3Ch] +
and cl 1 +
movzx ecx cl +
neg ecx  +
sbb ecx ecx +
and ecx 5 +
push ecx  +
push eax  +
mov dword_101D0B0 ecx +
call ds:ShowWindow  +
push [ebp+hWnd]  +
call sub_1003993  +
test eax eax +
jz loc_10038A4  +
call sub_100309B  +
push 44h  +
lea eax [ebp+lParam] +
push edi  +
push eax  +
call memset  +
push 13h  +
mov [ebp+lParam] 0FFFF0000h +
mov [ebp+var_A94] 0FFFF0002h +
mov [ebp+var_A90] 67h +
mov [ebp+var_A78] edi +
mov [ebp+var_A74] edi +
mov [ebp+var_A70] 1 +
mov [ebp+var_A6C] edi +
call sub_1003915  +
add esp 10h +
mov [ebp+hMem] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 1132h  +
push dword_101D090  +
call esi  +
push [ebp+hMem]  +
mov ebx ds:LocalFree +
mov [ebp+lParam] eax +
call ebx  +
mov [ebp+var_A78] 2 +
mov [ebp+var_A74] 3 +
mov [ebp+hMenu] edi +
mov [ebp+dwExStyle] edi +
cmp [ebp+hMenu] 5 +
jz loc_1003679  +
mov eax [ebp+dwExStyle] +
mov ecx ds:off_1001C38[eax] +
mov eax ds:dword_1001C3C[eax] +
push 100h  +
mov [ebp+hMem] ecx +
lea ecx [ebp+Name] +
push ecx  +
push edi  +
push eax  +
mov [ebp+var_A6C] eax +
call ds:RegEnumKeyW  +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_A70] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 1132h  +
push dword_101D090  +
call esi  +
add [ebp+dwExStyle] 0Ch +
inc [ebp+hMenu]  +
cmp [ebp+dwExStyle] 48h +
jb loc_100361E  +
push [ebp+lParam]  +
push 2  +
push 1102h  +
push dword_101D090  +
call esi  +
push [ebp+lParam]  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
mov eax dword_101D090 +
mov dword_101D09C eax +
mov eax [ebp+var_A18] +
mov dword_101D0AC edi +
mov ecx [eax+2Ch] +
mov dword_101D0A0 ecx +
mov [ebp+var_A54] 6 +
mov eax [eax+30h] +
push 11h  +
mov [ebp+var_A4C] eax +
call sub_1003915  +
pop ecx  +
mov [ebp+var_A48] eax +
lea eax [ebp+var_A54] +
push eax  +
push edi  +
push 1061h  +
push dword_101D094  +
call esi  +
push [ebp+var_A48]  +
call ebx  +
mov eax [ebp+var_A18] +
mov eax [eax+34h] +
push 1Fh  +
mov [ebp+var_A4C] eax +
call sub_1003915  +
pop ecx  +
mov [ebp+var_A48] eax +
lea eax [ebp+var_A54] +
push eax  +
push 1  +
push 1061h  +
push dword_101D094  +
call esi  +
push [ebp+var_A48]  +
call ebx  +
mov eax [ebp+var_A18] +
mov eax [eax+38h] +
push 12h  +
mov [ebp+var_A4C] eax +
call sub_1003915  +
pop ecx  +
mov [ebp+var_A48] eax +
lea eax [ebp+var_A54] +
push eax  +
push 2  +
push 1061h  +
push dword_101D094  +
call esi  +
push [ebp+var_A48]  +
call ebx  +
push 54h  +
push edi  +
push offset dword_105D140  +
call memset  +
add esp 0Ch +
push [ebp+hWnd]  +
call ds:GetMenu  +
push 3Fh  +
mov hMenu eax +
call ds:GetSystemMetrics  +
xor ebx ebx +
inc ebx  +
and eax ebx +
mov dword_101D0E0 eax +
jz loc_10043B9  +
push edi  +
push 9  +
push 110Ah  +
push dword_101D090  +
call esi  +
mov dword_101D0E8 eax +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicros  +
push 80000001h  +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_100388D  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push offset aLastkey  +
push [ebp+hKey]  +
mov [ebp+cbData] 800h +
call sub_1003313  +
test eax eax +
jnz loc_100384A  +
cmp [ebp+Type] ebx +
jnz loc_100384A  +
cmp [ebp+cbData] edi +
jbe loc_100384A  +
push ebx  +
lea eax [ebp+Data] +
push eax  +
call sub_10030F5  +
push 4  +
pop esi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+var_A28] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push offset aMultistrings  +
push [ebp+hKey]  +
mov [ebp+cbData] esi +
call sub_1003313  +
test eax eax +
jz loc_10043FF  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
xor eax eax +
jmp loc_1003890  +
xor eax eax +
jmp loc_100388F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+arg_4] +
push 100h  +
mov [ebp+Arguments] eax +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push dword_101D054  +
call ds:LoadStringW  +
lea eax [ebp+Arguments] +
push eax  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+Source] +
push eax  +
push 500h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_1004982  +
mov ecx [ebp+var_4] +
mov eax dword ptr [ebp+Buffer] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 21h  +
pop esi  +
push 0FFFFFFECh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
test eax 400000h +
jnz loc_10040F7  +
push 1  +
push 6  +
push esi  +
mov esi ds:GetSystemMetrics +
push 31h  +
call esi  +
push eax  +
push 31h  +
call esi  +
push eax  +
call ds:ImageList_Create  +
mov esi eax +
test esi esi +
jz loc_1003A47  +
push edi  +
push 0Fh  +
push esi  +
call sub_1003A51  +
push 0Eh  +
push esi  +
call sub_1003A51  +
push 3  +
push esi  +
call sub_1003A51  +
push 4  +
push esi  +
call sub_1003A51  +
push 0CDh  +
push esi  +
call sub_100304D  +
push 0CEh  +
push esi  +
call sub_100304D  +
mov edi ds:SendMessageW +
push esi  +
push 0  +
push 1109h  +
push dword_101D090  +
call edi  +
push esi  +
push 1  +
push 1003h  +
push dword_101D094  +
call edi  +
mov eax himl +
pop edi  +
test eax eax +
jnz loc_1004101  +
xor eax eax +
mov himl esi +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 214h  +
lea eax [ebp+hIcon] +
push 0  +
push eax  +
mov [ebp+var_21C] 218h +
call memset  +
add esp 0Ch +
lea eax [ebp+var_21C] +
push eax  +
push 101h  +
push [ebp+arg_4]  +
call ds:SHGetStockIconInfo  +
test eax eax +
jl loc_1003ABE  +
push [ebp+hIcon]  +
push 0FFFFFFFFh  +
push esi  +
call ds:ImageList_ReplaceIcon  +
push [ebp+hIcon]  +
call ds:DestroyIcon  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 47Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi dword_101D090 +
push 0  +
push 9  +
push 110Ah  +
push edi  +
mov [ebp+hwnd] eax +
call esi  +
cmp dword_101D0AC 2 +
mov ebx eax +
mov [ebp+var_414] ebx +
jnz loc_10045F3  +
mov eax phkResult +
test eax eax +
jnz loc_1004698  +
call sub_1003F69  +
push ebx  +
push 3  +
push 110Ah  +
push edi  +
call esi  +
test eax eax +
jnz loc_10046AB  +
push [ebp+hwnd]  +
call sub_1003B66  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2A4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx dword_101D094 +
push esi  +
push edi  +
xor esi esi +
push 1  +
mov [ebp+var_22C] eax +
mov [ebp+hMem] esi +
mov [ebp+var_218] esi +
call sub_1003BEF  +
mov edi ds:SendMessageW +
push esi  +
push esi  +
push 0Bh  +
push ebx  +
call edi  +
push esi  +
push esi  +
push 1009h  +
push ebx  +
call edi  +
cmp phkResult esi +
jnz loc_1004FE4  +
push esi  +
push 1  +
push 0Bh  +
push ebx  +
call edi  +
push esi  +
call sub_1003BEF  +
mov ecx [ebp+var_4] +
mov eax [ebp+hMem] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+bShow]  +
call ds:ShowCursor  +
xor eax eax +
cmp [ebp+bShow] eax +
setnz al  +
lea eax [eax+eax+7F00h] +
push eax  +
push 0  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
pop ebp  +
retn 4  +
***
push ecx  +
push [ebp+hWnd]  +
call sub_1003228  +
jmp loc_1002C19  +
mov eax dword_101D094 +
jmp loc_1003C72  +
push ecx  +
push [ebp+hWnd]  +
call sub_100FB37  +
jmp loc_1002C19  +
push ecx  +
push [ebp+hWnd]  +
call sub_100FB8E  +
jmp loc_1002C19  +
push ecx  +
push [ebp+hWnd]  +
call sub_100B0E1  +
jmp loc_1002C19  +
push ecx  +
push [ebp+hWnd]  +
call sub_100B8AA  +
jmp loc_1002C19  +
mov eax dword_101D090 +
mov dword_101D09C eax +
jmp loc_1002C17  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+hWnd]  +
call ds:IsIconic  +
test eax eax +
jnz locret_1003D2C  +
push ebx  +
xor ebx ebx +
cmp [ebp+hWinPosInfo] ebx +
jnz loc_1003CB2  +
push ebx  +
push ebx  +
push 5  +
push dword_101D098  +
call ds:SendMessageW  +
push 2  +
call ds:BeginDeferWindowPos  +
mov [ebp+hWinPosInfo] eax +
cmp eax ebx +
jz loc_1003D2B  +
push esi  +
push edi  +
push offset Info  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWnd]  +
call ds:GetEffectiveClientRect  +
mov esi [ebp+rc.bottom] +
sub esi [ebp+rc.top] +
mov edi ds:DeferWindowPos +
push 14h  +
push esi  +
push dword_101D0A0  +
push ebx  +
push ebx  +
push ebx  +
push dword_101D090  +
push [ebp+hWinPosInfo]  +
call edi  +
push 20h  +
call ds:GetSystemMetrics  +
mov ecx [ebp+rc.right] +
add eax dword_101D0A0 +
sub ecx [ebp+rc.left] +
push 14h  +
push esi  +
sub ecx eax +
push ecx  +
push ebx  +
push eax  +
push ebx  +
push dword_101D094  +
push [ebp+hWinPosInfo]  +
call edi  +
push [ebp+hWinPosInfo]  +
call ds:EndDeferWindowPos  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
dec eax  +
jz loc_1001600  +
mov eax hWnd +
cmp eax edi +
jnz loc_100491A  +
call sub_1003197  +
test eax eax +
jz loc_1001600  +
call sub_1002FAD  +
test eax eax +
jz loc_1001600  +
push 64h  +
push dword_101D054  +
call ds:LoadAcceleratorsW  +
mov ebx eax +
cmp ebx edi +
jz loc_1001600  +
call sub_1003DB8  +
mov hWnd eax +
cmp eax edi +
jz loc_1001600  +
push edi  +
push edi  +
call ds:RegisterApplicationRestart  +
mov esi ds:GetMessageW +
jmp loc_1002A84  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push ebx  +
push edi  +
push 10h  +
xor edi edi +
call sub_1003915  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_1003E33  +
push esi  +
lea eax [ebp+wndpl] +
push eax  +
call sub_1003E49  +
mov esi eax +
lea eax [ebp+wndpl] +
push eax  +
push dword_101D054  +
mov eax 80000000h +
push edi  +
push edi  +
push eax  +
push eax  +
push eax  +
push eax  +
push 2CF0000h  +
push ebx  +
push offset ClassName  +
push 110h  +
call ds:CreateWindowExW  +
test esi esi +
mov edi eax +
pop esi  +
jz loc_1003E39  +
cmp [ebp+wndpl.showCmd] 2 +
mov [ebp+wndpl.length] 2Ch +
jz loc_100410D  +
lea eax [ebp+wndpl] +
push eax  +
push edi  +
call ds:SetWindowPlacement  +
push ebx  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn   +
push 0Ah  +
push edi  +
call ds:ShowWindow  +
jmp loc_1003E2C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
xor edi edi +
inc edi  +
push edi  +
xor ebx ebx +
push ebx  +
push offset aSoftwareMicros  +
push 80000001h  +
mov [ebp+var_C] ebx +
call ds:RegOpenKeyExW  +
mov esi [ebp+arg_0] +
test eax eax +
jnz sub_100408C  +
lea eax [ebp+cbData] +
push eax  +
push offset Data  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aFindflags  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call sub_1003313  +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset ValueName  +
push [ebp+hKey]  +
mov [ebp+cbData] 40h +
call sub_1003313  +
test eax eax +
jnz loc_1003ED0  +
cmp [ebp+Type] 3 +
jnz loc_1003ED0  +
cmp [ebp+cbData] 40h +
jnz loc_1003ED0  +
mov [ebp+var_C] edi +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [ebp+var_C] ebx +
jz sub_100408C  +
push 0Bh  +
call ds:GetSystemMetrics  +
cmp [esi+30h] eax +
jl loc_1004074  +
cmp [esi+38h] eax +
jl loc_100407C  +
cmp [esi+2Ch] eax +
jl loc_1004084  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax edi +
sub eax 201h +
jz loc_1004514  +
sub eax 32h +
jz loc_1004504  +
sub eax 1CEh +
jz loc_1003F5A  +
jmp loc_1002AFB  +
***
push 0  +
push dword ptr [ebp+8]  +
call sub_1003C81  +
jmp loc_1002AF7  +
***
test eax eax +
jnz loc_1002AF7  +
jmp loc_1002AFB  +
***
push dword ptr [ebp+8]  +
call sub_100BE1B  +
jmp loc_1002AF7  +
***
call sub_1003F69  +
jmp loc_1002AF7  +
***
mov edi edi +
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_1003FE3  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_1001C0D  +
***
mov [ecx] edi +
jmp loc_1002DC0  +
***
call ds:GetDC  +
mov ebx eax +
push 58h  +
push ebx  +
call ds:GetDeviceCaps  +
push ebx  +
push 0  +
mov edi eax +
call ds:ReleaseDC  +
mov eax edi +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
mov [esi+2Ch] eax +
mov eax edi +
imul eax eax +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
imul edi edi +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov [esi+38h] edi +
jmp loc_1003F05  +
***
push eax  +
call ds:RegCloseKey  +
jmp loc_1002F69  +
***
push 0  +
push [ebp+hWnd]  +
call sub_1010CB3  +
jmp loc_1002C17  +
***
mov esi 2021h +
jmp loc_10039B2  +
push eax  +
call ds:ImageList_Destroy  +
jmp loc_1003A3E  +
***
mov [ebp+wndpl.showCmd] 0Ah +
jmp loc_1003E21  +
***
push [ebp+lParam]  +
call sub_10086ED  +
cmp [ebp+arg_4] 0 +
mov ecx dword_101D0E8 +
jz loc_100413A  +
cmp eax ecx +
jz loc_100413A  +
mov [ebp+lParam] ecx +
push 3  +
push ebx  +
lea eax [ebp+String1] +
push eax  +
push ecx  +
push dword_101D090  +
call sub_1002C60  +
cmp [ebp+lParam] 0 +
mov edi ds:lstrlenW +
jz loc_10041C1  +
mov eax [ebp+lParam] +
cmp eax dword_101D0E8 +
jz loc_10041C1  +
push eax  +
push 3  +
push 110Ah  +
push dword_101D090  +
call esi  +
test eax eax +
jz loc_10041C1  +
push 3  +
push ebx  +
lea ecx [ebp+String1] +
push ecx  +
push eax  +
push dword_101D090  +
mov [ebp+lParam] eax +
call sub_1002C60  +
lea eax [ebp+String1] +
push eax  +
call edi  +
push eax  +
push [ebp+lpString2]  +
lea eax [ebp+String1] +
push eax  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_100415F  +
push [ebp+lParam]  +
push 0  +
push 1114h  +
push dword_101D090  +
call esi  +
push [ebp+lParam]  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
push [ebp+lpString2]  +
lea eax [ebp+var_1004] +
push ebx  +
push eax  +
call sub_1002D3F  +
lea eax [ebp+var_1004] +
push eax  +
mov [ebp+lpString2] eax +
call edi  +
mov ebx eax +
lea eax [ebp+String1] +
push eax  +
call edi  +
cmp ebx eax +
jl loc_1004276  +
push 5Ch  +
push [ebp+lpString2]  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
mov [ebp+var_1014] ebx +
test ebx ebx +
jz loc_100425C  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+String1] +
push eax  +
call edi  +
lea eax [ebp+eax*2+var_1004] +
cmp ebx eax +
ja loc_100425C  +
add ebx 2 +
mov [ebp+lpString2] ebx +
jmp loc_1004266  +
mov [ebp+var_1010] 1 +
cmp [ebp+var_1010] 0 +
jz loc_100421C  +
and [ebp+var_1010] 0 +
push [ebp+lParam]  +
push 4  +
push 110Ah  +
push dword_101D090  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_100316F  +
push ebx  +
push 1  +
push 110Ah  +
push dword_101D090  +
call esi  +
push 0Ah  +
pop ecx  +
mov [ebp+lParam] eax +
xor eax eax +
lea edi [ebp+var_103C] +
stos   +
lea eax [ebp+String1] +
mov [ebp+var_102C] eax +
lea eax [ebp+var_103C] +
push eax  +
xor edi edi +
push edi  +
push 113Eh  +
push dword_101D090  +
mov [ebp+var_1038] ebx +
mov [ebp+var_103C] 1 +
mov [ebp+var_1028] 400h +
call esi  +
push [ebp+lpString2]  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_1004373  +
push ebx  +
push 2  +
push 1102h  +
push dword_101D090  +
call esi  +
push ebx  +
push 4  +
push 110Ah  +
push dword_101D090  +
call esi  +
mov [ebp+lParam] eax +
cmp [ebp+var_1010] edi +
jnz loc_1004386  +
mov eax [ebp+var_1014] +
cmp eax edi +
jz loc_1004386  +
add eax 2 +
push 5Ch  +
push eax  +
mov [ebp+lpString2] eax +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+var_1014] eax +
cmp eax edi +
jnz loc_100436E  +
mov [ebp+var_1010] 1 +
jmp loc_1004373  +
xor ecx ecx +
mov [eax] cx +
mov ebx [ebp+lParam] +
cmp ebx edi +
jz loc_100316F  +
jmp loc_1004295  +
push ebx  +
push edi  +
push 1114h  +
push dword_101D090  +
call esi  +
push ebx  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
jmp loc_100316F  +
***
mov [ebp+dwExStyle] 2200h +
jmp loc_1003484  +
push edi  +
push hMenu  +
call ds:GetSubMenu  +
mov ebx ds:DeleteMenu +
push edi  +
push 291h  +
push eax  +
mov [ebp+hMenu] eax +
call ebx  +
push edi  +
push 300h  +
push [ebp+hMenu]  +
call ebx  +
push edi  +
push 2A1h  +
push [ebp+hMenu]  +
call ebx  +
xor ebx ebx +
inc ebx  +
jmp loc_10037C5  +
cmp [ebp+Type] esi +
jnz loc_1003881  +
cmp [ebp+cbData] edi +
jbe loc_1003881  +
cmp [ebp+var_A28] edi +
jz loc_1003881  +
mov dword_105D664 ebx +
jmp loc_1003881  +
***
push dword ptr [ebp+8]  +
call sub_1003993  +
call sub_100309B  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
push dword ptr [ebp+8]  +
call sub_100C976  +
jmp loc_1003F31  +
***
push esi  +
mov esi ds:SendMessageW +
push 0  +
push 1  +
push 0Bh  +
push dword_101D090  +
call esi  +
push dword_101D090  +
call ds:UpdateWindow  +
push 0  +
push 0  +
push 0Bh  +
push dword_101D090  +
call esi  +
pop esi  +
jmp loc_1002AFB  +
***
mov eax [ebp+14h] +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1007FC3  +
jmp loc_1003F40  +
***
mov eax [ebp+14h] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_100A3D3  +
jmp loc_1002AF7  +
***
mov ecx hMenu +
xor eax eax +
cmp ecx [ebp+10h] +
setz al  +
mov dword_101D0DC eax +
jmp loc_1002AF7  +
***
mov eax [ebp+10h] +
shr eax 10h +
push eax  +
push dword ptr [ebp+14h]  +
movzx eax word ptr [ebp+10h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1009FF7  +
jmp loc_1002AF7  +
***
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1008631  +
jmp loc_1002AF7  +
***
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_101174D  +
jmp loc_1002AF7  +
***
mov eax [ebp+14h] +
push dword ptr [ebp+10h]  +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push 0  +
push dword ptr [ebp+8]  +
call sub_1009CC1  +
jmp loc_1002AF7  +
***
push offset dword_1005430  +
push 200h  +
lea eax [ebp+var_404] +
push eax  +
call sub_101278A  +
push edi  +
push 200h  +
lea eax [ebp+var_404] +
push eax  +
call sub_101278A  +
jmp loc_1002CD6  +
mov eax [ebp+arg_10] +
and eax 3 +
cmp al 3 +
jz loc_1002CF3  +
jmp loc_1002D1B  +
xor eax eax +
mov [edi] ax +
jmp loc_1002D1B  +
***
push 1  +
call sub_1003BEF  +
push esi  +
push ebx  +
call sub_100B4CD  +
test eax eax +
jnz loc_10045E7  +
lea eax [ebp+var_204] +
mov [ebp+var_220] eax +
lea eax [ebp+var_230] +
push eax  +
push 0  +
push 113Eh  +
push ebx  +
mov [ebp+var_230] 1 +
mov [ebp+var_22C] esi +
mov [ebp+var_21C] 100h +
call edi  +
lea eax [ebp+var_204] +
push eax  +
push 10h  +
push 60h  +
push 61h  +
push [ebp+var_208]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
push 0  +
call sub_1003BEF  +
jmp loc_100327A  +
***
lea eax [ebp+rcSrc2] +
push eax  +
push 1  +
push 1104h  +
push edi  +
mov [ebp+rcSrc2.left] ebx +
call esi  +
lea eax [ebp+rcSrc1] +
push eax  +
push edi  +
call ds:GetClientRect  +
lea eax [ebp+rcSrc2] +
push eax  +
lea eax [ebp+rcSrc1] +
push eax  +
lea eax [ebp+rcFrom] +
push eax  +
call ds:IntersectRect  +
mov ebx ds:MapWindowPoints +
push 2  +
lea eax [ebp+rcFrom] +
push eax  +
push [ebp+hwnd]  +
push edi  +
call ebx  +
lea eax [ebp+rcTo] +
push eax  +
push dword_101D094  +
call ds:GetWindowRect  +
push 2  +
lea eax [ebp+rcTo] +
push eax  +
push [ebp+hwnd]  +
push 0  +
call ebx  +
lea eax [ebp+rcTo] +
push eax  +
lea eax [ebp+rcFrom] +
push eax  +
push 1  +
push [ebp+hwnd]  +
call ds:DrawAnimatedRects  +
mov ebx [ebp+var_414] +
jmp loc_1003B20  +
push eax  +
call ds:RegCloseKey  +
and phkResult 0 +
jmp loc_1003B2D  +
push 0  +
push 100h  +
lea eax [ebp+SubKey] +
push eax  +
push ebx  +
push edi  +
call sub_1002C60  +
push offset phkResult  +
push 2000000h  +
push 0  +
lea ecx [ebp+SubKey] +
push ecx  +
push eax  +
call ds:RegOpenKeyExW  +
xor ecx ecx +
cmp eax ecx +
jz loc_1003B45  +
push ecx  +
push 104h  +
lea edx [ebp+Buffer] +
push edx  +
push ecx  +
push eax  +
push ecx  +
push 1000h  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_100470A  +
mov [ebp+Buffer] ax +
lea eax [ebp+SubKey] +
mov [ebp+var_45C] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push edi  +
mov [ebp+lParam] 1 +
mov [ebp+var_468] ebx +
mov [ebp+var_458] 100h +
call esi  +
lea eax [ebp+Buffer] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
push 10h  +
push 60h  +
push 62h  +
push [ebp+hwnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 1Ch +
jmp loc_1003B45  +
***
push esi  +
push [ebp+hWnd]  +
call ds:KillTimer  +
jmp loc_1002DD1  +
***
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push offset aDisableregistr  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call sub_1003313  +
test eax eax +
jnz loc_10047C3  +
cmp [ebp+Type] 4 +
jnz loc_10047C3  +
cmp [ebp+cbData] 4 +
jnz loc_10047C3  +
mov eax dword ptr [ebp+Data] +
sub eax edi +
jz loc_10047C3  +
dec eax  +
jz loc_10047C0  +
dec eax  +
jnz loc_10047C3  +
push 2  +
pop edi  +
jmp loc_10047C3  +
xor edi edi +
inc edi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_10016A6  +
***
cmp [ebp+var_210] ebx +
jz loc_100485D  +
cmp [esi] bx +
jnz loc_1001907  +
jmp loc_100485D  +
jz loc_100483C  +
sub eax 41h +
jz loc_100483C  +
sub eax 4 +
jmp loc_10018C9  +
push 0Bh  +
push offset aUnregserver  +
push esi  +
call ebx  +
add esp 0Ch +
test eax eax +
jnz loc_10018A7  +
push offset aUnregexe  +
jmp loc_10048B2  +
mov dword_101D0EC 4 +
mov [ebp+var_214] 1 +
jmp loc_10018A7  +
cmp edi ebx +
jnz loc_1001932  +
call sub_100C84F  +
jmp loc_10048B7  +
push esi  +
call sub_100269E  +
push ebx  +
mov esi eax +
call sub_100269E  +
cmp [ebp+arg_0] 1 +
mov edi eax +
jnz loc_1004882  +
cmp esi ebx +
jz loc_100485D  +
cmp edi ebx +
jz loc_100485D  +
push ebx  +
call sub_100269E  +
test eax eax +
jnz loc_10048B7  +
push edi  +
push esi  +
push [ebp+var_210]  +
push ebx  +
call sub_10110E5  +
jmp loc_10048B7  +
push 9  +
push offset aRegserver  +
push esi  +
call ebx  +
add esp 0Ch +
test eax eax +
jnz loc_10048B7  +
push offset aRegexe  +
call sub_100C86B  +
push 2  +
pop eax  +
jmp loc_1001971  +
***
call sub_100C84F  +
jmp loc_1001600  +
push eax  +
call ds:IsIconic  +
test eax eax +
jz loc_1004938  +
push 9  +
push hWnd  +
call ds:ShowWindow  +
jmp loc_1001600  +
push hWnd  +
mov esi ds:BringWindowToTop +
call esi  +
push hWnd  +
call ds:GetLastActivePopup  +
mov ebx eax +
cmp ebx hWnd +
jz loc_100495F  +
push ebx  +
call esi  +
push ebx  +
call ds:SetForegroundWindow  +
jmp loc_1001600  +
push edi  +
push 288h  +
push 111h  +
push eax  +
call ds:PostMessageW  +
jmp loc_1001600  +
***
and dword ptr [ebp+Buffer] eax +
jmp loc_100397C  +
***
inc eax  +
inc eax  +
jmp loc_10026DC  +
***
xor eax eax +
mov [ecx] ax +
jmp loc_1003355  +
cmp edx 1 +
jnz loc_10049B1  +
mov [esi+1] al +
mov [esi+2] al +
mov [esi+3] al +
jmp loc_1003355  +
xor eax eax +
mov [esi] ax +
jmp loc_1003355  +
***
mov esi ds:SendMessageW +
push eax  +
push 4  +
mov ebx 110Ah +
push ebx  +
push dword_101D090  +
call esi  +
mov edi eax +
lea eax [ebp+String1] +
mov [ebp+lParam] 5 +
mov [ebp+var_224] eax +
mov [ebp+var_220] 100h +
jmp loc_1004A31  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push dword_101D090  +
call esi  +
push [ebp+var_20C]  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpW  +
test eax eax +
jz loc_1004A41  +
push edi  +
push 1  +
push ebx  +
push dword_101D090  +
call esi  +
mov edi eax +
mov [ebp+var_230] edi +
test edi edi +
jz loc_100281E  +
jmp loc_10049F6  +
mov eax [ebp+hKey] +
jmp loc_100283E  +
***
dec ecx  +
jnz loc_10027B3  +
push esi  +
push eax  +
call sub_100CB08  +
mov eax [ebp+phkResult] +
xor edi edi +
and [eax] edi +
jmp loc_10027B3  +
xor edi edi +
jmp loc_10027BF  +
push [ebp+phkResult]  +
push 9  +
push 0  +
push esi  +
push eax  +
call ds:RegOpenKeyExW  +
jmp loc_10027AD  +
***
mov dword_101D068 82h +
jmp loc_10020D3  +
mov edi 10000h +
push edi  +
mov esi offset MultiByteStr +
push esi  +
push hFile  +
call ds:ReadFile  +
test eax eax +
jz loc_1004A81  +
push edi  +
push offset WideCharStr  +
push [ebp+cchMultiByte]  +
push esi  +
push 1  +
push 3  +
call ds:MultiByteToWideChar  +
jmp loc_1002037  +
***
lea eax [ebp+var_1728] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100290E  +
mov [ebp+var_172C] 2 +
jmp loc_10028A0  +
cmp word ptr [ebp+var_1728] 5Dh +
jnz loc_1004AF5  +
or esi 0FFFFFFFFh +
push [ebp+var_1728]  +
call sub_1001FE0  +
test eax eax +
jnz loc_10028DB  +
lea eax [ebp+var_1728] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_10028DB  +
jmp loc_1004AE8  +
mov dword_101D068 83h +
jmp loc_100290E  +
***
push 2  +
lea ebx [eax+100h] +
push ebx  +
push dword ptr [edi]  +
call ds:LocalReAlloc  +
test eax eax +
jz loc_10023AF  +
mov ecx [ebp+var_8] +
push 2  +
mov [ebp+var_8] ebx +
mov [edi] eax +
lea esi [eax+ecx-2] +
pop ebx  +
jmp loc_1002372  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_10023AF  +
movzx eax word ptr [ebp+arg_0] +
cmp eax 22h +
jz loc_1004BAD  +
cmp eax 5Ch +
jz loc_1004BA9  +
cmp eax 6Eh +
jz loc_1004B98  +
cmp eax 72h +
jnz loc_10023AF  +
cmp dword_105D664 0 +
jz loc_10023AF  +
push 0Dh  +
jmp loc_1004BAF  +
cmp dword_105D664 0 +
jz loc_10023AF  +
push 0Ah  +
jmp loc_1004BAF  +
push 5Ch  +
jmp loc_1004BAF  +
push 22h  +
pop eax  +
mov [esi] ax +
jmp loc_1002393  +
***
lea ecx [eax-61h] +
cmp cx 5 +
ja loc_1004BC8  +
sub al 57h +
jmp loc_10029BA  +
lea ecx [eax-41h] +
cmp cx 5 +
ja loc_1004BD8  +
sub al 37h +
jmp loc_10029BA  +
dec cchWideChar  +
jmp loc_10029C6  +
***
mov esi ebx +
jmp loc_1001FB9  +
***
mov dword_101D068 84h +
jmp loc_10022EC  +
mov eax [ebp+lpData] +
mov [ebp+var_118] eax +
lea eax [ebp+var_118] +
push eax  +
mov [ebp+var_114] esi +
call sub_100233E  +
test eax eax +
jz loc_1004C28  +
call sub_1001F7C  +
test eax eax +
jnz loc_1004D4E  +
mov [ebp+var_10C] edi +
jmp loc_1004D48  +
mov [ebp+var_108] ebx +
mov [ebp+var_10C] edi +
jmp loc_1002266  +
mov [ebp+var_108] ebx +
mov [ebp+var_10C] edi +
jmp loc_1002298  +
push 2Dh  +
call sub_1002309  +
test eax eax +
jz loc_1004C8B  +
call sub_1001F7C  +
test eax eax +
jnz loc_1004C74  +
mov [ebp+var_10C] edi +
jmp loc_10022D8  +
push [ebp+lpWideCharStr]  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
jmp loc_10022D8  +
mov esi offset aHex_0 +
movzx eax word ptr [esi] +
push eax  +
call sub_1002309  +
inc esi  +
inc esi  +
test eax eax +
jnz loc_1004CAB  +
mov [ebp+var_108] ebx +
mov [ebp+var_10C] edi +
cmp [esi] bx +
jnz loc_1004C90  +
cmp [ebp+var_108] ebx +
jz loc_10022D8  +
push 28h  +
call sub_1002309  +
test eax eax +
jz loc_1004DB9  +
lea eax [ebp+var_114] +
push eax  +
call sub_1002956  +
test eax eax +
jz loc_1004CE6  +
push 29h  +
call sub_1002309  +
test eax eax +
jnz loc_1004CF2  +
mov [ebp+var_108] ebx +
mov [ebp+var_10C] edi +
mov edi [ebp+var_114] +
cmp [ebp+var_108] ebx +
jz loc_10022D8  +
mov eax [ebp+lpData] +
push 3Ah  +
mov [ebp+var_118] eax +
mov [ebp+var_114] 100h +
call sub_1002309  +
test eax eax +
jz loc_1004D3E  +
lea eax [ebp+var_118] +
push eax  +
call sub_100DBAA  +
test eax eax +
jz loc_1004D3E  +
call sub_1001F7C  +
test eax eax +
jnz loc_1004D4E  +
mov [ebp+var_10C] 1 +
mov [ebp+var_108] ebx +
mov eax [ebp+var_118] +
mov esi [ebp+var_114] +
mov [ebp+lpData] eax +
jmp loc_100229D  +
cmp edi 2 +
jz loc_1004D73  +
cmp edi 7 +
jnz loc_10022B5  +
push ebx  +
push ebx  +
push 100h  +
lea eax [ebp+ValueName] +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
mov [ebp+ValueName] bl +
push ebx  +
push 3  +
call ds:WideCharToMultiByte  +
push esi  +
push [ebp+lpData]  +
lea eax [ebp+ValueName] +
push edi  +
push ebx  +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExA  +
jmp loc_10022D0  +
push 3  +
pop edi  +
jmp loc_1004CF8  +
mov dword_101D068 84h +
jmp loc_10022D8  +
***
push [ebp+var_4]  +
call esi  +
mov [ebp+var_4] edi +
jmp loc_10020E0  +
cmp [ebp+var_4] edi +
jz loc_10020EE  +
push edi  +
push [ebp+var_4]  +
call sub_10021C0  +
jmp loc_100214C  +
***
mov dword_101D068 82h +
jmp loc_100260D  +
push esi  +
push ebx  +
push 0FFFFFFFEh  +
push hFile  +
mov dword_101D040 ebx +
call ds:SetFilePointer  +
jmp loc_1002543  +
mov dword_101D068 86h +
jmp loc_100260D  +
mov dword_101D068 85h +
jmp loc_100260D  +
movzx eax word ptr [edi] +
push eax  +
call sub_1002309  +
test eax eax +
jz loc_1004E57  +
push edi  +
call ds:CharNextW  +
mov edi eax +
cmp [edi] bx +
jnz loc_1004E3C  +
cmp [edi] bx +
jnz loc_1004EBE  +
push 34h  +
call sub_1002309  +
mov esi eax +
call sub_1002928  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100260D  +
push [ebp+lpFileName]  +
call sub_1001FE0  +
test eax eax +
jz loc_100260D  +
push [ebp+var_408]  +
cmp esi ebx +
jz loc_1004EAA  +
mov dword_101D064 400h +
jmp loc_1002608  +
mov dword_101D064 310h +
call sub_100D7DE  +
jmp loc_100260D  +
cmp [ebp+hWnd] ebx +
jnz loc_1004ED5  +
mov dword_101D068 7Bh +
jmp loc_100260D  +
cmp [ebp+var_408] ebx +
jz loc_1004F03  +
push ebx  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push eax  +
call sub_10086ED  +
cmp [ebp+var_408] eax +
jnz loc_1004E2D  +
cmp dword_105E028 ebx +
jz loc_1004F2B  +
push 1  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
push dword_105E028  +
call ds:DestroyWindow  +
mov dword_105E028 ebx +
push [ebp+lpFileName]  +
push [ebp+hWnd]  +
call sub_100D4D8  +
jmp loc_100260D  +
push eax  +
push offset aRegeditCreatef  +
lea eax [ebp+OutputString] +
push 0FAh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+OutputString] +
push eax  +
call ds:OutputDebugStringW  +
mov hFile ebx +
mov dword_101D068 81h +
jmp loc_100260D  +
***
push 0FFFFFFF0h  +
lea eax [ebp+ValueName] +
push ebx  +
mov [ebp+var_268] 3 +
mov [ebp+var_254] eax +
mov [ebp+var_260] esi +
call ds:GetWindowLongW  +
or eax 10h +
push eax  +
push 0FFFFFFF0h  +
push ebx  +
call ds:SetWindowLongW  +
mov [ebp+dwNewLong] eax +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push esi  +
push phkResult  +
mov [ebp+var_224] esi +
mov [ebp+cbData] esi +
mov [ebp+cbValueName] 100h +
call ds:RegEnumValueW  +
mov [ebp+dwIndex] 1 +
jmp loc_10051F0  +
cmp dword ptr [ebp+Type] 1 +
jz loc_100508B  +
cmp dword ptr [ebp+Type] 2 +
jz loc_100508B  +
cmp dword ptr [ebp+Type] 7 +
jz loc_100508B  +
xor eax eax +
jmp loc_100508E  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_1005161  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
test eax eax +
jz loc_10050E9  +
mov [ebp+var_220] 65h +
mov [ebp+var_218] 1 +
jmp loc_1005153  +
cmp [ebp+cbValueName] esi +
jnz loc_10050FB  +
mov [ebp+var_224] 1 +
cmp dword ptr [ebp+Type] 1 +
jz loc_1005120  +
cmp dword ptr [ebp+Type] 2 +
jz loc_1005120  +
cmp dword ptr [ebp+Type] 7 +
mov [ebp+var_24C] 5 +
jnz loc_100512A  +
mov [ebp+var_24C] 4 +
lea eax [ebp+var_268] +
push eax  +
push esi  +
push 104Dh  +
push ebx  +
call edi  +
push dword ptr [ebp+Type]  +
push [ebp+cbData]  +
push [ebp+hMem]  +
push eax  +
push ebx  +
call sub_1010222  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_1005175  +
mov [ebp+var_218] 1 +
mov [ebp+var_220] 66h +
cmp [ebp+var_218] esi +
jz loc_10051AA  +
lea eax [ebp+ValueName] +
push eax  +
movzx eax word ptr [ebp+var_220] +
push 10h  +
push 64h  +
push eax  +
push [ebp+var_22C]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov [ebp+var_218] esi +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbData] esi +
push phkResult  +
mov [ebp+cbValueName] 100h +
call ds:RegEnumValueW  +
inc [ebp+dwIndex]  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_100506C  +
push [ebp+dwNewLong]  +
push 0FFFFFFF0h  +
push ebx  +
call ds:SetWindowLongW  +
mov eax lpString +
mov [ebp+var_254] eax +
lea eax [ebp+var_268] +
push eax  +
mov [ebp+var_264] esi +
mov [ebp+var_24C] 4 +
push esi  +
cmp [ebp+var_224] esi +
jz loc_100524C  +
push 104Ch  +
push ebx  +
mov [ebp+var_268] 1 +
call edi  +
jmp loc_100525F  +
push 104Dh  +
push ebx  +
call edi  +
push 1  +
push esi  +
push esi  +
push esi  +
push ebx  +
call sub_1010222  +
xor eax eax +
inc eax  +
mov [ebp+var_294] eax +
mov [ebp+var_298] eax +
lea eax [ebp+var_2A4] +
push eax  +
push esi  +
push 102Bh  +
push ebx  +
call edi  +
jmp loc_1003BC5  +
***
push 0  +
push [ebp+wParam]  +
push 402h  +
push 65h  +
push eax  +
call ds:SendDlgItemMessageW  +
push dword_101D050  +
call sub_100C9B0  +
test eax eax +
jz loc_1001F51  +
jmp loc_1005296  +
***
cmp esi eax +
jz loc_10023E4  +
push edi  +
push offset DialogFunc  +
push esi  +
push 6Eh  +
push dword_101D054  +
call ds:CreateDialogParamW  +
mov dword_101D050 eax +
test eax eax +
jz loc_10052DA  +
push 0  +
push esi  +
call ds:EnableWindow  +
test esi esi +
jnz loc_10023F2  +
push edi  +
push 34h  +
push 10h  +
push 130h  +
push esi  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
cmp eax 6 +
jz loc_10023F2  +
jmp loc_1002411  +
push 1  +
push esi  +
call ds:EnableWindow  +
push dword_101D050  +
call ds:DestroyWindow  +
jmp loc_1002407  +
cmp dword_101D068 7Fh +
jz loc_1002411  +
push 101h  +
lea eax [ebp+var_208] +
push eax  +
push ebx  +
mov [ebp+var_20C] 10h +
call sub_100B314  +
mov eax dword_101D068 +
sub eax 80h +
jz loc_1005375  +
sub eax 3 +
jz loc_1005362  +
sub eax 4 +
jnz loc_1005397  +
cmp word ptr [ebp+var_208] 0 +
jnz loc_1005397  +
add dword_101D068 64h +
jmp loc_1005397  +
test esi esi +
jz loc_1005383  +
cmp word ptr [ebp+var_208] 0 +
jnz loc_100538D  +
mov dword_101D068 0E4h +
mov [ebp+var_20C] 40h +
lea eax [ebp+var_208] +
push eax  +
movzx eax word ptr dword_101D068 +
push edi  +
push [ebp+var_20C]  +
push 10h  +
push eax  +
push esi  +
push dword_101D054  +
call sub_100CA02  +
add esp 1Ch +
jmp loc_1002411  +
***
push (offset dword_1001788+2)  +
call ds:__setusermatherr  +
pop ecx  +
jmp loc_1001DAA  +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
***
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1001E53  +
***
cmp ax 3 +
jnz loc_1001E01  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_10017BB  +
not eax  +
mov dword_101D048 eax +
jmp loc_1001811  +
***
retn   +
***
pop edi  +
xchg eax esi +
call dword ptr [esi]  +
rcl byte ptr [ecx] 1 +
xchg eax ecx +
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+hWnd] +
push edi  +
mov edi [ebp+hWndTo] +
push esi  +
push 8  +
push edi  +
call ds:SetWindowLongW  +
push dword ptr [esi]  +
push 3E8h  +
push edi  +
call ds:SetDlgItemTextW  +
push dword ptr [esi+4]  +
push dword ptr [esi+8]  +
mov esi 3E9h +
push 401h  +
push esi  +
push edi  +
call ds:SendDlgItemMessageW  +
lea eax [ebp+X] +
push eax  +
push esi  +
push edi  +
call ds:GetDlgItem  +
mov edi ds:GetWindowRect +
push eax  +
call edi  +
mov esi ds:GetSystemMetrics +
push 2Dh  +
call esi  +
mov ebx eax +
push 2  +
add ebx ebx +
call esi  +
mov esi [ebp+X] +
sub esi [ebp-8] +
mov ecx eax +
mov eax dword_105E2C0 +
imul eax eax +
add ecx ebx +
add eax ecx +
add eax dword_105E2D8 +
add esi eax +
lea eax [ebp+X] +
push eax  +
push [ebp+hWndTo]  +
call edi  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
xor ebx ebx +
push ebx  +
push eax  +
mov eax [ebp-8] +
sub eax [ebp+X] +
add eax esi +
push eax  +
push dword ptr [ebp-0Ch]  +
push [ebp+X]  +
push [ebp+hWndTo]  +
call ds:MoveWindow  +
push ds:dword_1005C38[ebx]  +
push [ebp+hWndTo]  +
call ds:GetDlgItem  +
lea ecx [ebp+X] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call edi  +
test byte ptr ds:dword_1005C3C[ebx] 1 +
jz loc_1005BF8  +
push 2  +
lea eax [ebp+X] +
push eax  +
push [ebp+hWndTo]  +
push 0  +
call ds:MapWindowPoints  +
add [ebp+X] esi +
jmp loc_1005BFB  +
add [ebp-8] esi +
push ds:dword_1005C3C[ebx]  +
mov eax [ebp-4] +
sub eax [ebp-0Ch] +
push eax  +
mov eax [ebp-8] +
sub eax [ebp+X] +
push eax  +
push dword ptr [ebp-0Ch]  +
push [ebp+X]  +
push 0  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
add ebx 8 +
cmp ebx 20h +
jb loc_1005BC0  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
push edi  +
push [ebp+hWnd]  +
xor esi esi +
mov dword_105E2A8 esi +
mov dword_105E2A0 esi +
mov dword_105E2B0 esi +
mov dword_105E2B4 esi +
call ds:GetDC  +
mov edi eax +
push 5Ah  +
push edi  +
call ds:GetDeviceCaps  +
imul eax eax +
push 48h  +
cdq   +
pop ecx  +
idiv  ecx +
push offset stru_105D4D8  +
mov stru_105D4D8.lfHeight eax +
call ds:CreateFontIndirectW  +
mov dword_105E2B8 eax +
cmp eax esi +
jz loc_1005D20  +
mov esi ds:SelectObject +
push ebx  +
push eax  +
push edi  +
call esi  +
mov ebx eax +
lea eax [ebp+var_3C] +
push eax  +
push edi  +
call ds:GetTextMetricsW  +
push ebx  +
push edi  +
call esi  +
mov eax dword_105E2B4 +
mov ecx [ebp+var_3C.tmHeight] +
cdq   +
idiv  ecx +
mov nHeight ecx +
pop ebx  +
mov dword_105E2C4 eax +
mov eax [ebp+var_3C.tmMaxCharWidth] +
mov esi eax +
mov dword_105E2C0 eax +
imul eax eax +
imul esi esi +
cdq   +
sub eax edx +
mov ecx eax +
mov eax esi +
cdq   +
sub eax edx +
sar ecx 1 +
sar eax 1 +
add eax ecx +
lea eax [eax+esi*8] +
mov dword_105E2D4 esi +
mov dword_105E2D0 ecx +
mov dword_105E2D8 eax +
xor esi esi +
push edi  +
push [ebp+hWnd]  +
call ds:ReleaseDC  +
cmp dword_105E2B8 esi +
jnz loc_1005D36  +
xor eax eax +
jmp loc_1005D48  +
push [ebp+lParam]  +
push esi  +
push 81h  +
push [ebp+hWnd]  +
call ds:DefWindowProcW  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_105E2A8 +
add eax 8 +
cdq   +
push 7  +
and [ebp+var_1C.nMin] 0 +
pop ecx  +
and edx ecx +
add eax edx +
sar eax 3 +
dec eax  +
mov dword_105E2C8 eax +
mov [ebp+var_1C.nMax] eax +
mov eax dword_105E2C4 +
mov [ebp+var_1C.nPage] eax +
mov eax dword_105E2CC +
push 1  +
mov [ebp+var_1C.nPos] eax +
lea eax [ebp+var_1C] +
push eax  +
push 1  +
push [ebp+arg_0]  +
mov [ebp+var_1C.cbSize] 1Ch +
mov [ebp+var_1C.fMask] ecx +
call ds:SetScrollInfo  +
leave   +
retn 4  +
***
test byte ptr dword_105E2A0 1 +
jz locret_1005DC5  +
and dword_105E2A0 0FFFFFFFEh +
call ds:DestroyCaret  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr dword_105E2A0 2 +
jz loc_1005DF3  +
push 1  +
push [ebp+hWnd]  +
call ds:KillTimer  +
call ds:ReleaseCapture  +
and dword_105E2A0 0FFFFFFFDh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
test eax eax +
jge loc_1005E0F  +
or ebx 0FFFFFFFFh +
jmp loc_1005E29  +
cmp eax dword_105E2B4 +
jl loc_1005E20  +
mov ebx dword_105E2C4 +
inc ebx  +
jmp loc_1005E29  +
cdq   +
idiv  nHeight +
mov ebx eax +
add ebx dword_105E2CC +
mov eax dword_105E2C8 +
cmp ebx eax +
jl loc_1005E4F  +
mov edi dword_105E2A8 +
and edi 80000007h +
mov ebx eax +
jns loc_1005E58  +
dec edi  +
or edi 0FFFFFFF8h +
inc edi  +
jmp loc_1005E58  +
test ebx ebx +
jge loc_1005E55  +
xor ebx ebx +
push 8  +
pop edi  +
mov edx dword_105E2D0 +
cmp [ebp+arg_0] edx +
jge loc_1005E66  +
mov [ebp+arg_0] edx +
mov ecx dword_105E2C0 +
push esi  +
mov esi dword_105E2D4 +
lea eax [ecx+esi*8] +
add eax edx +
cmp [ebp+arg_0] eax +
jge loc_1005E8E  +
mov eax [ebp+arg_0] +
sub eax edx +
cdq   +
idiv  esi +
and dword_105E2A0 0FFFFFFFBh +
jmp loc_1005EA8  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
sub eax dword_105E2D8 +
add eax [ebp+arg_0] +
cdq   +
idiv  ecx +
or dword_105E2A0 4 +
and dword_105E2A0 0FFFFFFEFh +
cmp eax edi +
pop esi  +
jl loc_1005EC6  +
push 8  +
pop eax  +
cmp edi eax +
jnz loc_1005EC4  +
or dword_105E2A0 10h +
jmp loc_1005EC6  +
mov eax edi +
pop edi  +
lea eax [eax+ebx*8] +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax dword_105E2DC +
push esi  +
push edi  +
mov edi eax +
and edi 80000007h +
jns loc_1005EEA  +
dec edi  +
or edi 0FFFFFFF8h +
inc edi  +
cdq   +
and edx 7 +
add eax edx +
mov dl byte ptr dword_105E2A0 +
mov esi eax +
mov eax nHeight +
sar esi 3 +
sub esi dword_105E2CC +
imul esi eax +
test dl 10h +
jz loc_1005F13  +
push 8  +
pop edi  +
sub esi eax +
test dl 4 +
jz loc_1005F29  +
mov ecx dword_105E2C0 +
imul ecx edi +
add ecx dword_105E2D8 +
jmp loc_1005F4C  +
mov ecx dword_105E2D4 +
imul ecx edi +
add ecx dword_105E2D0 +
test dl 8 +
jz loc_1005F4C  +
mov eax dword_105E2C0 +
imul eax eax +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
push esi  +
push ecx  +
call ds:SetCaretPos  +
pop edi  +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov cl byte ptr dword_105E2A0 +
test cl 1 +
jz loc_1005FE3  +
mov eax dword_105E2DC +
cdq   +
and edx 7 +
push esi  +
add eax edx +
mov esi eax +
sar esi 3 +
push edi  +
test cl 10h +
jz loc_1005F86  +
dec esi  +
mov eax dword_105E2CC +
mov ecx dword_105E2C4 +
lea ecx [ecx+eax-1] +
cmp esi ecx +
jle loc_1005F9D  +
mov edi ecx +
jmp loc_1005FA8  +
cmp esi eax +
jge loc_1005FA5  +
mov edi eax +
jmp loc_1005FA8  +
or edi 0FFFFFFFFh +
cmp edi 0FFFFFFFFh +
jz loc_1005FDB  +
push 2  +
xor eax eax +
mov ecx edi +
push eax  +
sub ecx esi +
imul ecx nHeight +
push eax  +
push eax  +
push eax  +
push ecx  +
push eax  +
push [ebp+hWnd]  +
call ds:ScrollWindowEx  +
push [ebp+hWnd]  +
sub esi edi +
add dword_105E2CC esi +
call sub_1005D53  +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_1005ED4  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx dword_105E2E4 +
mov eax dword_105E2A8 +
and dword_105E2A0 0FFFFFFEFh +
sub esp 10h +
cmp edx eax +
push esi  +
mov esi dword_105E2E0 +
jl loc_1006016  +
mov edx eax +
cmp esi edx +
jnz loc_100604B  +
cmp [ebp+arg_4] 2Eh +
jz loc_100603B  +
test byte ptr dword_105E2A0 8 +
jnz loc_100603B  +
cmp [ebp+arg_4] 8 +
jnz loc_10060D0  +
dec esi  +
jns loc_100604B  +
jmp loc_10060D0  +
and dword_105E2A0 0FFFFFFF7h +
inc edx  +
cmp edx eax +
jg loc_10060D0  +
mov ecx hMem +
push edi  +
mov edi edx +
sub eax edx +
add ecx esi +
push eax  +
sub edi esi +
lea eax [edi+ecx] +
push eax  +
push ecx  +
call ds:memmove  +
sub dword_105E2A8 edi +
add esp 0Ch +
push [ebp+hWnd]  +
mov dword_105E2DC esi +
mov dword_105E2E0 esi +
mov dword_105E2E4 esi +
call sub_1005D53  +
push [ebp+hWnd]  +
call sub_1005F5E  +
mov eax dword_105E2B0 +
mov [ebp+Rect.right] eax +
mov eax esi +
cdq   +
and [ebp+Rect.left] 0 +
and edx 7 +
add eax edx +
sar eax 3 +
sub eax dword_105E2CC +
push 0  +
imul eax nHeight +
mov [ebp+Rect.top] eax +
mov eax dword_105E2B4 +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:InvalidateRect  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_105E2E0 +
push esi  +
mov esi dword_105E2E4 +
push edi  +
xor edi edi +
sub esi eax +
jz loc_1006160  +
mov ecx hMem +
push [ebp+hWndNewOwner]  +
add ecx eax +
mov [ebp+var_4] ecx +
call ds:OpenClipboard  +
test eax eax +
jz loc_1006160  +
push ebx  +
lea eax [esi+7] +
push eax  +
push 2002h  +
call ds:GlobalAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1006159  +
push ebx  +
call ds:GlobalLock  +
push esi  +
push [ebp+var_4]  +
mov edi eax +
lea eax [edi+4] +
push eax  +
call memcpy  +
add esp 0Ch +
push ebx  +
mov [edi] esi +
call ds:GlobalUnlock  +
call ds:EmptyClipboard  +
push ebx  +
push uFormat  +
call ds:SetClipboardData  +
xor edi edi +
inc edi  +
call ds:CloseClipboard  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
test byte ptr dword_105E2A0 8 +
jz loc_100618F  +
and dword_105E2A0 0FFFFFFF7h +
inc dword_105E2DC  +
push [ebp+hWnd]  +
call ds:OpenClipboard  +
test eax eax +
jz loc_1006297  +
push uFormat  +
call ds:GetClipboardData  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_1006291  +
push ebx  +
push eax  +
call ds:GlobalLock  +
mov ebx eax +
test ebx ebx +
jz loc_1006287  +
mov ecx [ebx] +
mov eax dword_105E2A8 +
push esi  +
push edi  +
xor edi edi +
inc edi  +
lea edx [ecx+eax] +
cmp edx dword_105E2AC +
mov [ebp+var_4] edi +
jle loc_1006227  +
and [ebp+var_4] 0 +
lea edx [ebp+uBytes] +
push edx  +
push ecx  +
push eax  +
call sub_100E39F  +
test eax eax +
jl loc_100629E  +
mov esi [ebp+uBytes] +
push 2  +
push esi  +
push hMem  +
call ds:LocalReAlloc  +
test eax eax +
jz loc_100629E  +
mov hMem eax +
mov eax dword_105E2A8 +
mov dword_105E2AC esi +
mov [ebp+var_4] edi +
mov ecx dword_105E2E0 +
cmp ecx dword_105E2E4 +
jz loc_1006244  +
push 8  +
push [ebp+hWnd]  +
call sub_1005FEF  +
mov eax dword_105E2A8 +
mov ecx dword_105E2DC +
mov edx hMem +
mov esi [ebx] +
sub eax ecx +
push eax  +
lea edi [edx+ecx] +
lea eax [esi+edi] +
push edi  +
push eax  +
call ds:memmove  +
push esi  +
add ebx 4 +
push ebx  +
push edi  +
call memcpy  +
add dword_105E2A8 esi +
add dword_105E2DC esi +
add esp 18h +
push [ebp+hWnd]  +
call sub_1005D53  +
pop edi  +
pop esi  +
push [ebp+hMem]  +
call ds:GlobalUnlock  +
pop ebx  +
call ds:CloseClipboard  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
push 0  +
push 10h  +
push 70h  +
push 76h  +
push [ebp+hWnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
jmp loc_1006285  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10062D4  +
cmp ecx 7FFFFFFFh +
jbe loc_10062D9  +
mov eax 80070057h +
test eax eax +
jl loc_1006316  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1006306  +
cmp eax esi +
ja loc_1006306  +
jz loc_100630B  +
jmp loc_1006311  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 110h +
push esi  +
jz loc_1006373  +
dec eax  +
jnz loc_100636F  +
movzx esi word ptr [ebp+10h] +
lea eax [esi-1] +
cmp eax 1 +
ja loc_100636F  +
push 8  +
push dword ptr [ebp+8]  +
call ds:GetWindowLongW  +
mov ecx dword_105E2A8 +
mov [eax+8] ecx +
mov ecx hMem +
push esi  +
push dword ptr [ebp+8]  +
mov [eax+4] ecx +
and hMem 0 +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_1006381  +
xor eax eax +
jmp loc_1006381  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1005B11  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov dword_105E2B0 eax +
mov eax [ebp+arg_C] +
mov dword_105E2B4 eax +
cdq   +
idiv  nHeight +
push [ebp+arg_0]  +
mov dword_105E2C4 eax +
call sub_1005D53  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax dword_105E2CC +
sub esp 1Ch +
push esi  +
push edi  +
xor edi edi +
cmp ecx edi +
jz loc_1006403  +
cmp ecx 1 +
jz loc_1006400  +
cmp ecx 2 +
jz loc_10063F8  +
cmp ecx 3 +
jz loc_10063F0  +
jbe loc_1006404  +
cmp ecx 5 +
ja loc_1006404  +
mov eax [ebp+arg_C] +
jmp loc_1006404  +
add eax dword_105E2C4 +
jmp loc_1006404  +
sub eax dword_105E2C4 +
jmp loc_1006404  +
inc eax  +
jmp loc_1006404  +
dec eax  +
push 1  +
mov [ebp+var_1C.nPos] eax +
lea eax [ebp+var_1C] +
push eax  +
push 1  +
push [ebp+hWnd]  +
mov [ebp+var_1C.cbSize] 1Ch +
mov [ebp+var_1C.fMask] 4 +
call ds:SetScrollInfo  +
mov esi eax +
mov eax dword_105E2CC +
cmp eax esi +
jz loc_100645D  +
cmp esi edi +
jl loc_100645D  +
push 2  +
push edi  +
sub eax esi +
imul eax nHeight +
push edi  +
push edi  +
push edi  +
push eax  +
push edi  +
push [ebp+hWnd]  +
call ds:ScrollWindowEx  +
push [ebp+hWnd]  +
mov dword_105E2CC esi +
call sub_1005ED4  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_105E2B8 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_14] edi +
mov [ebp+var_54] esi +
test eax eax +
jz loc_100649C  +
push eax  +
push edi  +
call ds:SelectObject  +
mov [ebp+var_58] eax +
push ebx  +
push lParam  +
push edi  +
call ds:SetBkColor  +
push dword_101D078  +
push edi  +
call ds:SetTextColor  +
mov eax [esi+4] +
mov ecx nHeight +
cdq   +
idiv  ecx +
mov esi dword_105E2CC +
mov edi ecx +
push 8  +
imul edi eax +
lea ebx [esi+eax] +
mov [ebp+var_1C] eax +
mov eax [ebp+var_54] +
mov eax [eax+0Ch] +
cdq   +
idiv  ecx +
shl ebx 3 +
mov [ebp+var_20] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_34] ebx +
pop edx  +
mov [ebp+var_30] eax +
mov eax dword_105E2C8 +
sub eax esi +
cmp [ebp+var_30] eax +
jl loc_1006514  +
mov [ebp+var_30] eax +
mov eax dword_105E2A8 +
and eax 80000007h +
jns loc_100650F  +
dec eax  +
or eax 0FFFFFFF8h +
inc eax  +
mov [ebp+var_38] eax +
jmp loc_1006519  +
mov [ebp+var_38] edx +
mov eax edx +
mov esi [ebp+var_30] +
mov [ebp+var_4C] edx +
xor edx edx +
cmp [ebp+var_1C] esi +
mov esi ds:ExtTextOutW +
mov [ebp+var_18] edx +
jle loc_100653D  +
jmp loc_1006734  +
mov ecx nHeight +
mov eax [ebp+var_38] +
mov edx [ebp+var_30] +
cmp [ebp+var_1C] edx +
jnz loc_1006548  +
mov [ebp+var_4C] eax +
mov eax dword_105E2C0 +
and [ebp+var_2C] 0 +
mov [ebp+var_28] edi +
add edi ecx +
mov ecx dword_105E2D0 +
cdq   +
push ebx  +
mov [ebp+var_20] edi +
sub eax edx +
mov edi eax +
push offset a04x  +
lea eax [ebp+var_10] +
push 5  +
sar edi 1 +
push eax  +
mov [ebp+var_24] ecx +
add edi ecx +
call sub_10062BE  +
add esp 10h +
push 0  +
push 4  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push 2  +
push [ebp+var_28]  +
push 0  +
push [ebp+var_14]  +
call esi  +
mov eax [ebp+var_3C] +
mov [ebp+var_44] eax +
add eax nHeight +
mov [ebp+var_3C] eax +
mov eax dword_105E2D8 +
mov [ebp+var_40] eax +
mov eax [ebp+var_4C] +
test eax eax +
jle loc_10066B2  +
mov [ebp+var_50] eax +
cmp ebx dword_105E2E0 +
jl loc_1006618  +
cmp ebx dword_105E2E4 +
jl loc_10065ED  +
cmp [ebp+var_18] 0 +
jz loc_1006618  +
push lParam  +
and [ebp+var_18] 0 +
push [ebp+var_14]  +
call ds:SetBkColor  +
push dword_101D078  +
jmp loc_100660F  +
cmp [ebp+var_18] 0 +
jnz loc_1006618  +
push dword_101D070  +
mov [ebp+var_18] 1 +
push [ebp+var_14]  +
call ds:SetBkColor  +
push dword_101D07C  +
push [ebp+var_14]  +
call ds:SetTextColor  +
mov eax hMem +
mov bl [eax+ebx] +
mov eax [ebp+var_24] +
mov [ebp+var_2C] eax +
add eax dword_105E2D4 +
mov [ebp+var_24] eax +
movzx eax bl +
push eax  +
push offset a02x  +
mov [ebp+var_5C] eax +
lea eax [ebp+var_10] +
push 5  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0  +
push 2  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push 2  +
push [ebp+var_28]  +
push edi  +
push [ebp+var_14]  +
call esi  +
mov eax [ebp+var_40] +
add edi dword_105E2D4 +
mov [ebp+var_48] eax +
add eax dword_105E2C0 +
and bl 7Fh +
mov [ebp+var_40] eax +
cmp bl 20h +
jb loc_1006683  +
mov ax word ptr [ebp+var_5C] +
jmp loc_1006686  +
push 2Eh  +
pop eax  +
push 0  +
push 1  +
mov [ebp+var_10] ax +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_48] +
push eax  +
push 2  +
push [ebp+var_44]  +
push [ebp+var_48]  +
push [ebp+var_14]  +
call esi  +
inc [ebp+var_34]  +
dec [ebp+var_50]  +
mov ebx [ebp+var_34] +
jnz loc_10065BC  +
cmp [ebp+var_18] 0 +
jz loc_10066DA  +
push lParam  +
and [ebp+var_18] 0 +
push [ebp+var_14]  +
call ds:SetBkColor  +
push dword_101D078  +
push [ebp+var_14]  +
call ds:SetTextColor  +
mov eax [ebp+var_24] +
mov ecx dword_105E2D8 +
mov [ebp+var_24] ecx +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
lea ecx [ebp+var_2C] +
push ecx  +
push 2  +
push [ebp+var_28]  +
mov [ebp+var_2C] eax +
push eax  +
push [ebp+var_14]  +
call esi  +
mov eax [ebp+var_40] +
mov ecx dword_105E2B0 +
mov [ebp+var_40] ecx +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
lea ecx [ebp+var_48] +
push ecx  +
push 2  +
push [ebp+var_44]  +
mov [ebp+var_48] eax +
push eax  +
push [ebp+var_14]  +
call esi  +
inc [ebp+var_1C]  +
mov eax [ebp+var_1C] +
cmp eax [ebp+var_30] +
mov edi [ebp+var_20] +
jle loc_1006534  +
xor edx edx +
mov eax [ebp+var_54] +
mov eax [eax+0Ch] +
cmp edi eax +
pop ebx  +
jge loc_1006763  +
mov ecx dword_105E2B0 +
push edx  +
push edx  +
push edx  +
mov [ebp+var_20] eax +
lea eax [ebp+var_2C] +
push eax  +
push 2  +
push edi  +
push edx  +
push [ebp+var_14]  +
mov [ebp+var_2C] edx +
mov [ebp+var_24] ecx +
mov [ebp+var_28] edi +
call esi  +
xor edx edx +
pop edi  +
pop esi  +
cmp dword_105E2B8 edx +
jz loc_1006779  +
push [ebp+var_58]  +
push [ebp+var_14]  +
call ds:SelectObject  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push nHeight  +
or dword_105E2A0 1 +
push 0  +
push 0  +
push [ebp+hWnd]  +
call ds:CreateCaret  +
push [ebp+hWnd]  +
call sub_1005ED4  +
pop ebp  +
jmp ds:ShowCaret  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+uBytes] +
movzx ecx bx +
mov eax ecx +
sub eax 3 +
push esi  +
jz loc_10069CF  +
sub eax 5 +
jz loc_1006962  +
sub eax 0Eh +
jz loc_100696E  +
dec eax  +
dec eax  +
jz loc_1006956  +
test byte ptr dword_105E2A0 4 +
jz loc_1006829  +
cmp bx 20h +
jnb loc_100684F  +
push 0  +
call ds:MessageBeep  +
jmp loc_10069D7  +
push ecx  +
call ds:CharLowerW  +
cbw   +
movzx eax ax +
lea ecx [eax-30h] +
cmp cx 9 +
ja loc_1006842  +
sub al 30h +
jmp loc_100684D  +
lea ecx [eax-61h] +
cmp cx 5 +
ja loc_100681C  +
sub al 57h +
mov bl al +
test byte ptr dword_105E2A0 8 +
jnz loc_100691E  +
mov eax dword_105E2E0 +
cmp eax dword_105E2E4 +
jz loc_1006873  +
push 0  +
push [ebp+hWndNewOwner]  +
call sub_1005FEF  +
mov eax dword_105E2A8 +
cmp eax dword_105E2AC +
jl loc_10068B9  +
lea ecx [ebp+uBytes] +
push ecx  +
push 100h  +
push eax  +
call sub_100E39F  +
test eax eax +
jl loc_10068F4  +
mov esi [ebp+uBytes] +
push 2  +
push esi  +
push hMem  +
call ds:LocalReAlloc  +
test eax eax +
jz loc_10068F4  +
mov hMem eax +
mov eax dword_105E2A8 +
mov dword_105E2AC esi +
mov ecx dword_105E2DC +
mov edx hMem +
sub eax ecx +
push eax  +
lea esi [edx+ecx] +
lea eax [esi+1] +
push esi  +
push eax  +
call ds:memmove  +
add esp 0Ch +
push [ebp+hWndNewOwner]  +
inc dword_105E2A8  +
call sub_1005D53  +
test byte ptr dword_105E2A0 4 +
jz loc_1006912  +
mov [esi] bl +
jmp loc_1006934  +
push 0  +
push 10h  +
push 70h  +
push 76h  +
push [ebp+hWndNewOwner]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
jmp loc_10069D7  +
or dword_105E2A0 8 +
shl bl 4 +
jmp loc_10068F0  +
mov eax dword_105E2DC +
mov ecx hMem +
and dword_105E2A0 0FFFFFFF7h +
add eax ecx +
or [eax] bl +
test byte ptr dword_105E2A0 8 +
mov eax dword_105E2DC +
mov esi eax +
jnz loc_1006980  +
inc eax  +
mov dword_105E2DC eax +
mov dword_105E2E0 eax +
mov dword_105E2E4 eax +
jmp loc_1006980  +
push [ebp+hWndNewOwner]  +
call sub_10060DA  +
test eax eax +
jz loc_10069D7  +
push 8  +
push [ebp+hWndNewOwner]  +
call sub_1005FEF  +
jmp loc_10069D7  +
push [ebp+hWndNewOwner]  +
mov esi dword_105E2DC +
call sub_100616D  +
test eax eax +
jz loc_10069D7  +
push [ebp+hWndNewOwner]  +
and dword_105E2A0 0FFFFFFEFh +
call sub_1005F5E  +
mov eax dword_105E2B0 +
mov [ebp+Rect.right] eax +
mov eax esi +
cdq   +
and [ebp+Rect.left] 0 +
and edx 7 +
add eax edx +
sar eax 3 +
sub eax dword_105E2CC +
push 0  +
imul eax nHeight +
mov [ebp+Rect.top] eax +
mov eax dword_105E2B4 +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWndNewOwner]  +
call ds:InvalidateRect  +
jmp loc_10069D7  +
push [ebp+hWndNewOwner]  +
call sub_10060DA  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and dword_105E2A0 0FFFFFFF7h +
mov eax dword_105E2E0 +
mov ecx dword_105E2E4 +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi eax +
mov ebx ecx +
cmp [ebp+arg_8] edi +
jz loc_1006A31  +
cmp dword_105E2DC ecx +
jnz loc_1006A1D  +
mov ecx [ebp+arg_4] +
mov dword_105E2E4 ecx +
jmp loc_1006A25  +
mov eax [ebp+arg_4] +
mov dword_105E2E0 eax +
cmp eax ecx +
jle loc_1006A41  +
mov edx eax +
mov eax ecx +
mov ecx edx +
jmp loc_1006A36  +
mov ecx [ebp+arg_4] +
mov eax ecx +
mov dword_105E2E4 ecx +
mov dword_105E2E0 eax +
cmp eax esi +
mov edx [ebp+arg_4] +
mov dword_105E2DC edx +
jle loc_1006A56  +
mov [ebp+var_1C] esi +
mov [ebp+var_14] eax +
jmp loc_1006A5E  +
jge loc_1006A61  +
mov [ebp+var_1C] eax +
mov [ebp+var_14] esi +
xor edi edi +
inc edi  +
cmp ecx ebx +
jle loc_1006A74  +
mov edx edi +
shl edx 4 +
mov [ebp+edx+var_1C] ebx +
mov [ebp+edx+var_14] ecx +
jmp loc_1006A83  +
jge loc_1006A84  +
mov edx edi +
shl edx 4 +
mov [ebp+edx+var_1C] ecx +
mov [ebp+edx+var_14] ebx +
inc edi  +
xor edx edx +
cmp esi ebx +
setz dl  +
test edx edx +
jz loc_1006A98  +
xor edi edi +
mov [ebp+var_1C] eax +
mov [ebp+var_14] ecx +
inc edi  +
cmp eax ecx +
jnz loc_1006AAB  +
xor edi edi +
test edx edx +
jnz loc_1006AAB  +
mov [ebp+var_1C] esi +
mov [ebp+var_14] ebx +
inc edi  +
jmp loc_1006AB3  +
test edi edi +
jz loc_1006B51  +
push [ebp+hWnd]  +
call ds:HideCaret  +
push [ebp+hWnd]  +
call ds:GetDC  +
mov ebx eax +
test edi edi +
jle loc_1006B3E  +
mov [ebp+arg_4] edi +
mov edi dword_105E2B4 +
lea esi [ebp+var_14] +
mov eax [esi-8] +
cdq   +
and edx 7 +
add eax edx +
mov ecx eax +
mov eax [esi] +
cdq   +
and edx 7 +
add eax edx +
sar ecx 3 +
sub ecx dword_105E2CC +
sar eax 3 +
sub eax dword_105E2CC +
imul ecx nHeight +
inc eax  +
imul eax nHeight +
cmp ecx edi +
mov [esi-8] ecx +
mov [esi] eax +
jge loc_1006B36  +
test eax eax +
jl loc_1006B36  +
test ecx ecx +
jge loc_1006B20  +
and dword ptr [esi-8] 0 +
cmp eax edi +
jle loc_1006B26  +
mov [esi] edi +
lea eax [esi-0Ch] +
push eax  +
push ebx  +
call sub_1006468  +
mov edi dword_105E2B4 +
add esi 10h +
dec [ebp+arg_4]  +
jnz loc_1006AD7  +
push ebx  +
push [ebp+hWnd]  +
call ds:ReleaseDC  +
push [ebp+hWnd]  +
call ds:ShowCaret  +
push [ebp+hWnd]  +
call sub_1005F5E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
inc ebx  +
test byte ptr dword_105E2A0 bl +
jnz loc_1006B80  +
push [ebp+hWnd]  +
call ds:SetFocus  +
push 6Ch  +
push dword_101D054  +
call ds:LoadMenuW  +
mov [ebp+hMenu] eax +
test eax eax +
jz loc_1006C72  +
push esi  +
push edi  +
push 0  +
push eax  +
call ds:GetSubMenu  +
mov esi ds:EnableMenuItem +
mov edi eax +
mov eax dword_105E2E0 +
cmp eax dword_105E2E4 +
jnz loc_1006BCB  +
push ebx  +
push 3  +
push edi  +
call esi  +
push ebx  +
push 18h  +
push edi  +
call esi  +
push ebx  +
push 2Eh  +
push edi  +
call esi  +
push uFormat  +
call ds:IsClipboardFormatAvailable  +
test eax eax +
jnz loc_1006BE1  +
push ebx  +
push 16h  +
push edi  +
call esi  +
cmp dword_105E2E0 0 +
jnz loc_1006C00  +
mov eax dword_105E2E4 +
cmp eax dword_105E2A8 +
jnz loc_1006C00  +
push ebx  +
push 400h  +
push edi  +
call esi  +
mov ebx [ebp+hWnd] +
push 0  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 102h  +
push edi  +
call ds:TrackPopupMenuEx  +
push [ebp+hMenu]  +
mov esi eax +
call ds:DestroyMenu  +
mov eax esi +
sub eax 3 +
jz loc_1006C67  +
sub eax 13h +
jz loc_1006C67  +
dec eax  +
dec eax  +
jz loc_1006C67  +
sub eax 16h +
jz loc_1006C67  +
sub eax 3D2h +
jnz loc_1006C70  +
mov eax dword_105E2A8 +
xor esi esi +
push ebx  +
mov dword_105E2E0 esi +
mov dword_105E2E4 eax +
mov dword_105E2DC eax +
call sub_1005ED4  +
push esi  +
push esi  +
push ebx  +
call ds:InvalidateRect  +
jmp loc_1006C70  +
push 0  +
push esi  +
push ebx  +
call sub_10067D8  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+hWnd] +
lea eax [ebp+Paint] +
push eax  +
push esi  +
call ds:BeginPaint  +
lea eax [ebp-3Ch] +
push eax  +
push [ebp+Paint]  +
call sub_1006468  +
lea eax [ebp+Paint] +
push eax  +
push esi  +
call ds:EndPaint  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_1006CF2  +
mov ecx dword_105E2DC +
mov eax dword_105E2A8 +
inc ecx  +
cmp ecx eax +
jle loc_1006CE5  +
mov ecx eax +
push 1  +
push ecx  +
push [ebp+hWnd]  +
call sub_10069E2  +
jmp loc_1006D50  +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_8] +
push esi  +
push edi  +
call sub_1005DFC  +
mov ecx [ebp+arg_10] +
mov ebx [ebp+hWnd] +
and ecx 4 +
push ecx  +
push eax  +
push ebx  +
call sub_10069E2  +
test byte ptr dword_105E2A0 1 +
jnz loc_1006D23  +
push ebx  +
call ds:SetFocus  +
push ebx  +
call ds:SetCapture  +
or dword_105E2A0 2 +
push 0  +
push 190h  +
push 1  +
push ebx  +
mov dword_105E2E8 edi +
mov dword_105E2EC esi +
call ds:SetTimer  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr dword_105E2A0 2 +
jz loc_1006DBD  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
push esi  +
push edi  +
call sub_1005DFC  +
push 1  +
push eax  +
push [ebp+hWnd]  +
call sub_10069E2  +
mov dword_105E2E8 edi +
mov dword_105E2EC esi +
test esi esi +
jge loc_1006D95  +
neg esi  +
jmp loc_1006D9B  +
sub esi dword_105E2B4 +
shl esi 4 +
mov eax 190h +
sub eax esi +
cmp eax 64h +
pop edi  +
pop esi  +
jge loc_1006DAF  +
push 64h  +
pop eax  +
push 0  +
push eax  +
push 1  +
push [ebp+hWnd]  +
call ds:SetTimer  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetKeyState +
push edi  +
push 11h  +
call esi  +
xor ebx ebx +
test ax ax +
push 10h  +
setl bl  +
call esi  +
mov edi [ebp+arg_4] +
mov esi dword_105E2DC +
xor ecx ecx +
test ax ax +
setl cl  +
mov [ebp+var_4] ecx +
cmp edi 26h +
ja loc_1006EDB  +
jz loc_1006EC3  +
cmp edi 21h +
jb loc_1006F7D  +
cmp edi 22h +
jbe loc_1006E8F  +
cmp edi 23h +
jz loc_1006E5B  +
cmp edi 24h +
jz loc_1006E36  +
cmp edi 25h +
jnz loc_1006F7D  +
and dword_105E2A0 0FFFFFFEFh +
dec esi  +
jmp loc_1006ECE  +
test ebx ebx +
jz loc_1006E3E  +
xor esi esi +
jmp loc_1006E4F  +
test byte ptr dword_105E2A0 10h +
jz loc_1006E4C  +
sub esi 8 +
jmp loc_1006E4F  +
and esi 0FFFFFFF8h +
and dword_105E2A0 0FFFFFFEFh +
jmp loc_1006F71  +
test ebx ebx +
jnz loc_1006F4F  +
test byte ptr dword_105E2A0 10h +
jnz loc_1006F7D  +
mov eax dword_105E2A8 +
and esi 0FFFFFFF8h +
add esi 8 +
cmp esi eax +
jg loc_1006F6F  +
or dword_105E2A0 10h +
jmp loc_1006F71  +
mov eax dword_105E2CC +
imul eax eax +
add esi eax +
xor eax eax +
cmp edi 21h +
setnz al  +
push 0  +
inc eax  +
inc eax  +
push eax  +
push 0  +
push [ebp+hWnd]  +
call sub_10063BD  +
mov eax dword_105E2CC +
lea esi [esi+eax*8] +
cmp edi 21h +
jnz loc_1006F66  +
jmp loc_1006ECE  +
test ebx ebx +
jnz loc_1006F7D  +
sub esi 8 +
test esi esi +
jge loc_1006F71  +
jmp loc_1006F7D  +
sub edi 27h +
jz loc_1006F5E  +
dec edi  +
jz loc_1006F2C  +
sub edi 5 +
jz loc_1006F0C  +
dec edi  +
jnz loc_1006F7D  +
test ebx ebx +
jnz loc_1006F7D  +
test ecx ecx +
jz loc_1006F00  +
push ebx  +
push 18h  +
jmp loc_1006F22  +
push 2Eh  +
push [ebp+hWnd]  +
call sub_1005FEF  +
jmp loc_1006F7D  +
xor eax eax +
cmp ecx eax +
jz loc_1006F1B  +
cmp ebx eax +
jnz loc_1006F7D  +
push eax  +
push 16h  +
jmp loc_1006F22  +
cmp ebx eax +
jz loc_1006F7D  +
push eax  +
push 3  +
push [ebp+hWnd]  +
call sub_10067D8  +
jmp loc_1006F7D  +
test ebx ebx +
jnz loc_1006F7D  +
add esi 8 +
mov eax esi +
cdq   +
and edx 7 +
add eax edx +
sar eax 3 +
cmp eax dword_105E2C8 +
jle loc_1006F66  +
test byte ptr dword_105E2A0 10h +
jz loc_1006F7D  +
and dword_105E2A0 0FFFFFFEFh +
mov esi dword_105E2A8 +
jmp loc_1006F71  +
and dword_105E2A0 0FFFFFFEFh +
inc esi  +
mov eax dword_105E2A8 +
cmp esi eax +
jle loc_1006F71  +
mov esi eax +
push [ebp+var_4]  +
push esi  +
push [ebp+hWnd]  +
call sub_10069E2  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax 100h +
cmp ecx eax +
ja loc_1007088  +
jz loc_100706A  +
cmp ecx 14h +
ja loc_100700E  +
jz loc_1007006  +
mov eax ecx +
sub eax 5 +
jz loc_1006FE9  +
dec eax  +
dec eax  +
jz loc_1006FDC  +
dec eax  +
jz loc_1006FCF  +
sub eax 7 +
jnz loc_1007145  +
push dword ptr [ebp+8]  +
call sub_1006C7C  +
jmp loc_10071B8  +
push dword ptr [ebp+8]  +
call sub_1005DAF  +
jmp loc_10071B8  +
push dword ptr [ebp+8]  +
call sub_10067A5  +
jmp loc_10071B8  +
mov eax [ebp+14h] +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_100638B  +
jmp loc_10071B8  +
xor eax eax +
inc eax  +
jmp loc_10071BA  +
mov eax ecx +
sub eax 7Bh +
jz loc_1007051  +
sub eax 6 +
jz loc_1007041  +
dec eax  +
jz loc_1007030  +
sub eax 5 +
jnz loc_1007145  +
mov eax 81h +
jmp loc_10071BA  +
push dword_105E2B8  +
call ds:DeleteObject  +
jmp loc_10071B8  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+8]  +
call sub_1005C5D  +
jmp loc_10071BA  +
mov eax [ebp+14h] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1006B65  +
jmp loc_10071B8  +
mov eax [ebp+14h] +
shr eax 10h +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push 1  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1006DC6  +
jmp loc_10071B8  +
mov eax 201h +
cmp ecx eax +
ja loc_1007132  +
jz loc_1007113  +
mov eax ecx +
sub eax 102h +
jz loc_10070FE  +
sub eax 11h +
jz loc_10070EE  +
dec eax  +
dec eax  +
jz loc_10070D1  +
sub eax 0EBh +
jnz loc_1007145  +
mov eax [ebp+14h] +
push dword ptr [ebp+10h]  +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1006D59  +
jmp loc_10071B8  +
mov eax [ebp+10h] +
shr eax 10h +
cwde   +
push eax  +
movzx eax word ptr [ebp+10h] +
push eax  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+8]  +
call sub_10063BD  +
jmp loc_10071B8  +
push 0  +
push dword_105E2EC  +
push dword_105E2E8  +
jmp loc_10070C4  +
***
movsx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_10067D8  +
jmp loc_10071B8  +
mov eax [ebp+14h] +
push dword ptr [ebp+10h]  +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push 0  +
push dword ptr [ebp+8]  +
call sub_1006CC8  +
jmp loc_10071B8  +
mov eax ecx +
sub eax 202h +
jz loc_10071A0  +
dec eax  +
jz loc_100718C  +
sub eax 1FEh +
jz loc_1007157  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ecx  +
push dword ptr [ebp+8]  +
call ds:DefWindowProcW  +
jmp loc_10071BA  +
mov eax [ebp+14h] +
push dword ptr [ebp+8]  +
mov hMem eax +
mov eax [ebp+10h] +
mov dword_105E2A8 eax +
mov dword_105E2AC eax +
xor eax eax +
mov dword_105E2DC eax +
mov dword_105E2E0 eax +
mov dword_105E2E4 eax +
mov dword_105E2CC eax +
call sub_1005D53  +
jmp loc_10071B8  +
mov eax [ebp+14h] +
push dword ptr [ebp+10h]  +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push 1  +
jmp loc_1007125  +
***
mov eax [ebp+14h] +
push dword ptr [ebp+10h]  +
shr eax 10h +
cwde   +
push eax  +
movsx eax word ptr [ebp+14h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_1005DCD  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_101D090 +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov ebx 110Ah +
xor edi edi +
push ebx  +
inc edi  +
push eax  +
mov dword_101D0EC edi +
mov [ebp+hWnd] eax +
call esi  +
push edi  +
push 128h  +
mov edi offset String +
push edi  +
push eax  +
push [ebp+hWnd]  +
mov [ebp+lParam] eax +
call sub_1002C60  +
push edi  +
push 502h  +
push [ebp+hDlg]  +
call ds:SetDlgItemTextW  +
push [ebp+lParam]  +
push 3  +
push ebx  +
push [ebp+hWnd]  +
call esi  +
neg eax  +
sbb eax eax +
mov ecx 500h +
neg eax  +
add eax ecx +
push eax  +
push 501h  +
push ecx  +
push [ebp+hDlg]  +
call ds:CheckRadioButton  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+hDlg] +
push 500h  +
push edi  +
call ds:IsDlgButtonChecked  +
mov dword_105E038 eax +
test eax eax +
jnz loc_100732E  +
push 128h  +
mov esi offset String +
push esi  +
push 502h  +
push edi  +
call ds:GetDlgItemTextW  +
cmp String 0 +
jnz loc_10072AF  +
mov dword_105E038 1 +
jmp loc_100732E  +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push 0  +
push esi  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
call sub_10086ED  +
push eax  +
call sub_1002732  +
test eax eax +
jz loc_1007322  +
cmp [ebp+arg_4] 0 +
jz loc_10072ED  +
push edi  +
call ds:GetParent  +
mov edi eax +
push 100h  +
lea eax [ebp+String] +
push eax  +
push edi  +
call ds:GetWindowTextW  +
push 10h  +
lea eax [ebp+String] +
push eax  +
push 94h  +
push edi  +
push dword_101D054  +
call sub_100CA02  +
xor eax eax +
add esp 14h +
inc eax  +
jmp loc_1007330  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+hWnd] +
mov eax [ecx+8] +
sub esp 20h +
cmp eax 0FFFFFDA1h +
jz loc_100743F  +
cmp eax 0FFFFFDA2h +
jz loc_100742D  +
cmp eax 0FFFFFDA7h +
jnz loc_100744A  +
push ebx  +
push esi  +
mov esi [ebp+hDlg] +
push edi  +
mov edi ds:GetWindowRect +
lea eax [ebp+Points] +
push eax  +
push esi  +
call edi  +
mov ebx ds:MapWindowPoints +
push 2  +
lea eax [ebp+Points] +
push eax  +
push esi  +
push 0  +
call ebx  +
push 503h  +
push esi  +
call ds:GetDlgItem  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call edi  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push esi  +
push 0  +
call ebx  +
mov esi [ebp+Points.x] +
sub esi [ebp+Rect.left] +
mov eax [ebp+Rect.right] +
mov ecx [ebp+Rect.bottom] +
sub ecx [ebp+Rect.top] +
sub esi eax +
sub eax [ebp+Rect.left] +
add esi [ebp-18h] +
push 6  +
push ecx  +
add eax esi +
push eax  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
push 502h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
lea ecx [ebp+Rect] +
push ecx  +
push eax  +
mov [ebp+hWnd] eax +
call edi  +
push 2  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hDlg]  +
xor edi edi +
push edi  +
call ebx  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push 6  +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
add eax esi +
push eax  +
push edi  +
push edi  +
push edi  +
push [ebp+hWnd]  +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
pop ebx  +
jmp loc_100744A  +
push 1  +
push [ebp+hDlg]  +
call sub_100724F  +
neg eax  +
sbb eax eax +
neg eax  +
jmp locret_100744C  +
mov eax [ecx+0Ch] +
mov eax [eax+18h] +
mov dword_101D0EC eax +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
dec eax  +
jz loc_10074C1  +
mov ecx 500h +
sub eax ecx +
jz loc_10074A8  +
dec eax  +
jnz loc_10074BD  +
cmp [ebp+arg_8] 100h +
jz loc_100748F  +
cmp [ebp+arg_8] 300h +
jnz loc_10074BD  +
lea eax [ecx+1] +
push eax  +
push eax  +
push ecx  +
push [ebp+hDlg]  +
call ds:CheckRadioButton  +
jmp loc_10074BD  +
push 0FFFFFFFFh  +
push 0  +
push 0B1h  +
push 502h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
jmp loc_10074BD  +
push 502h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:SetFocus  +
xor eax eax +
jmp loc_10074D1  +
push 0  +
push [ebp+hDlg]  +
call sub_100724F  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 4Eh +
jz loc_100751B  +
sub eax 0C2h +
jz loc_100750B  +
dec eax  +
jz loc_10074F5  +
xor eax eax +
jmp loc_1007538  +
mov eax [ebp+arg_8] +
shr eax 10h +
push eax  +
movzx eax word ptr [ebp+arg_8] +
push eax  +
push [ebp+hDlg]  +
call sub_1007455  +
jmp loc_1007538  +
push [ebp+hWnd]  +
push [ebp+arg_8]  +
push [ebp+hDlg]  +
call sub_10071C3  +
jmp loc_1007538  +
push [ebp+hWnd]  +
push [ebp+arg_8]  +
push [ebp+hDlg]  +
call sub_1007345  +
push eax  +
push 0  +
push [ebp+hDlg]  +
call ds:SetWindowLongW  +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
xor ebx ebx +
xor edi edi +
mov [ebp+var_48] ecx +
cmp ecx ebx +
jnz loc_100756D  +
xor eax eax +
jmp loc_1007684  +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_44] ebx +
mov [ebp+var_50] ebx +
lea ecx [ebp+var_18] +
cmp esi 4 +
jz loc_1007582  +
lea ecx [ebp+var_3C] +
mov [ebp+lpString] ecx +
xor ecx ecx +
cmp esi 4 +
setnz cl  +
lea ecx ds:0Ah[ecx*8] +
push ecx  +
push [ebp+lpString]  +
push [ebp+nIDDlgItem]  +
push eax  +
call ds:GetDlgItemTextW  +
mov edx eax +
mov [ebp+var_4C] edx +
cmp esi 4 +
jnz loc_100760D  +
lea eax [edx-1] +
cmp eax 7 +
ja loc_1007681  +
xor ecx ecx +
test edx edx +
jbe loc_1007603  +
mov eax [ebp+lpString] +
movzx eax word ptr [eax+ecx*2] +
cmp ax 30h +
jb loc_10075D9  +
cmp ax 39h +
ja loc_10075D9  +
movzx eax ax +
sub eax 30h +
jmp loc_10075F3  +
cmp ax 61h +
jb loc_10075ED  +
cmp ax 66h +
ja loc_10075ED  +
movzx eax ax +
sub eax 57h +
jmp loc_10075F3  +
movzx eax ax +
sub eax 37h +
mov esi [ebp+var_44] +
shl esi 4 +
add esi eax +
inc ecx  +
mov [ebp+var_44] esi +
cmp ecx edx +
jb loc_10075BE  +
mov eax [ebp+var_44] +
mov ecx [ebp+var_48] +
mov [ecx] eax +
jmp loc_100767E  +
cmp esi 0Bh +
jnz loc_1007681  +
lea eax [edx-1] +
cmp eax 0Fh +
ja loc_1007681  +
xor edi edi +
test edx edx +
jbe loc_1007673  +
mov eax [ebp+lpString] +
movzx eax word ptr [eax+edi*2] +
cmp ax 30h +
jb loc_100763B  +
cmp ax 39h +
ja loc_100763B  +
movzx esi ax +
sub esi 30h +
jmp loc_1007655  +
cmp ax 61h +
jb loc_100764F  +
cmp ax 66h +
ja loc_100764F  +
movzx esi ax +
sub esi 57h +
jmp loc_1007655  +
movzx esi ax +
sub esi 37h +
push 0  +
push 10h  +
push [ebp+var_50]  +
push ebx  +
call sub_1003FCA  +
xor ecx ecx +
add eax esi +
adc edx ecx +
inc edi  +
mov ebx eax +
mov [ebp+var_50] edx +
cmp edi [ebp+var_4C] +
jb loc_1007620  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_50] +
mov [eax] ebx +
mov [eax+4] ecx +
xor edi edi +
inc edi  +
mov eax edi +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_10076AA  +
xor eax eax +
jmp loc_10076F1  +
mov eax [ebp+arg_0] +
and dword ptr [esi] 0 +
cmp ax 20h +
jb loc_10076EE  +
lea ecx [eax-30h] +
cmp cx 9 +
jbe loc_10076EE  +
cmp dword_105E02C 3EAh +
jnz loc_10076E0  +
cmp ax 41h +
jb loc_10076D7  +
cmp ax 46h +
jbe loc_10076EE  +
add eax 0FFFFFF9Fh +
cmp ax 5 +
jbe loc_10076EE  +
push 0  +
call ds:MessageBeep  +
mov dword ptr [esi] 1 +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
cmp dword ptr [ebx+8] 4 +
mov [ebp+Translated] 1 +
jnb loc_100771E  +
xor eax eax +
jmp loc_10077C5  +
cmp dword_105E02C 3EAh +
push esi  +
push edi  +
mov esi 3E9h +
jnz loc_1007748  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
push esi  +
push [ebp+hDlg]  +
call sub_1007541  +
mov edi [ebp+var_8] +
mov [ebp+Translated] eax +
jmp loc_100775A  +
push 0  +
lea eax [ebp+Translated] +
push eax  +
push esi  +
push [ebp+hDlg]  +
call ds:GetDlgItemInt  +
mov edi eax +
cmp [ebp+Translated] 0 +
jnz loc_1007785  +
push esi  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:GetWindowTextLengthW  +
test eax eax +
jnz loc_100777E  +
xor edi edi +
mov [ebp+Translated] 1 +
xor esi esi +
cmp [ebp+Translated] esi +
jz loc_100778C  +
mov eax [ebx+4] +
mov [eax] edi +
jmp loc_10077C0  +
push esi  +
call ds:MessageBeep  +
push esi  +
push 124h  +
push 6Eh  +
push 77h  +
push [ebp+hDlg]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
cmp eax 6 +
jnz loc_10077C0  +
mov eax [ebx+4] +
or dword ptr [eax] 0FFFFFFFFh +
mov [ebp+Translated] 1 +
mov eax [ebp+Translated] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 102h +
jnz loc_10077FC  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
call sub_1007699  +
test eax eax +
jz loc_10077FC  +
cmp dword ptr [ebp-4] 0 +
jz loc_10077FC  +
xor eax eax +
jmp locret_1007814  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword_105E030  +
call ds:CallWindowProcW  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
inc esi  +
cmp dword ptr [ecx+8] 8 +
mov [ebp+hDlg] eax +
mov [ebp+var_48] ecx +
mov [ebp+var_34] esi +
jnb loc_100784F  +
xor eax eax +
jmp loc_1007974  +
cmp dword_105E02C 3EAh +
push ebx  +
push edi  +
jnz loc_100787B  +
lea ecx [ebp+var_3C] +
push ecx  +
push 0Bh  +
push 3E9h  +
push eax  +
call sub_1007541  +
mov ebx [ebp+var_38] +
mov [ebp+var_34] eax +
xor edi edi +
jmp loc_10078FD  +
push 16h  +
lea ecx [ebp+String] +
push ecx  +
push 3E9h  +
push eax  +
call ds:GetDlgItemTextW  +
test eax eax +
jbe loc_1007925  +
xor ebx ebx +
lea eax [ebp+String] +
mov [ebp+var_34] esi +
mov [ebp+var_3C] ebx +
mov [ebp+var_40] eax +
jmp loc_10078A8  +
mov eax [ebp+var_40] +
cmp word ptr [eax] 0 +
jz loc_1007928  +
push eax  +
call ds:atoi  +
pop ecx  +
push 0  +
push 0Ah  +
cdq   +
push ebx  +
push [ebp+var_3C]  +
mov edi eax +
mov esi edx +
call sub_1003FCA  +
add edi eax +
adc esi edx +
cmp esi ebx +
jb loc_10078F0  +
ja loc_10078D7  +
cmp edi [ebp+var_3C] +
jb loc_10078F0  +
cmp esi 0FFFFFFFFh +
ja loc_10078F0  +
jb loc_10078E3  +
cmp edi 0FFFFFFFFh +
ja loc_10078F0  +
add [ebp+var_40] 2 +
mov [ebp+var_3C] edi +
mov ebx esi +
jz loc_1007928  +
jmp loc_10078A5  +
xor edi edi +
xor esi esi +
xor ebx ebx +
mov [ebp+var_3C] edi +
mov [ebp+var_34] edi +
inc esi  +
cmp [ebp+var_34] edi +
jnz loc_1007928  +
push 3E9h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:GetWindowTextLengthW  +
test eax eax +
jnz loc_1007938  +
mov [ebp+var_3C] edi +
xor ebx ebx +
mov [ebp+var_34] esi +
jmp loc_1007928  +
mov ebx [ebp+var_38] +
mov eax [ebp+var_48] +
mov eax [eax+4] +
mov ecx [ebp+var_3C] +
mov [eax] ecx +
mov [eax+4] ebx +
jmp loc_100796F  +
push edi  +
call ds:MessageBeep  +
push edi  +
push 124h  +
push 6Eh  +
push 78h  +
push [ebp+hDlg]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
cmp eax 6 +
jnz loc_100796F  +
mov eax [ebp+var_48] +
mov eax [eax+4] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
mov [ebp+var_34] esi +
mov eax [ebp+var_34] +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_10] 4 +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
jz loc_1007A00  +
cmp [ebp+arg_10] 5 +
jz loc_1007A00  +
cmp [ebp+arg_10] 0Bh +
jz loc_10079BC  +
xor eax eax +
jmp loc_1007A77  +
xor ecx ecx +
cmp [ebp+arg_C] 3EBh +
lea esi [ebp+var_48] +
setz cl  +
cmp [ebp+arg_C] 3EAh +
lea ecx ds:10h[ecx*4] +
mov edi ecx +
mov ecx offset a16i64x +
jz loc_10079E7  +
mov ecx offset a20i64u +
mov eax [eax+4] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
lea eax [ebp+var_48] +
push ecx  +
push 16h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1007A3C  +
xor ecx ecx +
cmp [ebp+arg_C] 3EBh +
lea esi [ebp+var_1C] +
setz cl  +
cmp [ebp+arg_C] 3EAh +
lea ecx [ecx+ecx+8] +
mov edi ecx +
mov ecx offset a8x +
jz loc_1007A28  +
mov ecx offset a10u +
mov eax [eax+4] +
push dword ptr [eax]  +
lea eax [ebp+var_1C] +
push ecx  +
push 0Ch  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0  +
push edi  +
push 0C5h  +
push [ebp+nIDDlgItem]  +
push ebx  +
call ds:SendDlgItemMessageW  +
jmp loc_1007A66  +
movzx eax word ptr [esi+edi*2] +
cmp ax 20h +
jz loc_1007A60  +
cmp ax 9 +
jnz loc_1007A66  +
xor eax eax +
mov [esi+edi*2] ax +
dec edi  +
jns loc_1007A50  +
push esi  +
push [ebp+nIDDlgItem]  +
push ebx  +
call ds:SetDlgItemTextW  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push 4  +
push eax  +
push [ebp+arg_4]  +
mov dword_105E02C eax +
push 3E9h  +
push [ebp+arg_0]  +
call sub_1007988  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push 0Bh  +
push eax  +
push [ebp+arg_4]  +
mov dword_105E02C eax +
push 3E9h  +
push [ebp+arg_0]  +
call sub_1007988  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+hWnd] +
push esi  +
mov esi ds:SetWindowLongW +
push edi  +
mov edi [ebp+dwNewLong] +
push edi  +
push 8  +
push ebx  +
call esi  +
push offset loc_10077CF  +
push 0FFFFFFFCh  +
push 3E9h  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
call esi  +
mov dword_105E030 eax +
push dword ptr [edi]  +
push 3E8h  +
push ebx  +
call ds:SetDlgItemTextW  +
mov esi 3EAh +
push esi  +
push 3EBh  +
push esi  +
push ebx  +
call ds:CheckRadioButton  +
push esi  +
push edi  +
push ebx  +
call sub_1007ACD  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+hWnd] +
push esi  +
mov esi ds:SetWindowLongW +
push edi  +
mov edi [ebp+dwNewLong] +
push edi  +
push 8  +
push ebx  +
call esi  +
push offset loc_10077CF  +
push 0FFFFFFFCh  +
push 3E9h  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
call esi  +
mov dword_105E030 eax +
push dword ptr [edi]  +
push 3E8h  +
push ebx  +
call ds:SetDlgItemTextW  +
mov esi 3EAh +
push esi  +
push 3EBh  +
push esi  +
push ebx  +
call ds:CheckRadioButton  +
push esi  +
push edi  +
push ebx  +
call sub_1007AF6  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+hWnd] +
push 8  +
push edi  +
call ds:GetWindowLongW  +
mov ebx eax +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_1007C84  +
dec eax  +
jz loc_1007C1F  +
xor eax eax +
jmp loc_1007C90  +
push esi  +
movzx esi word ptr [ebp+arg_8] +
cmp esi 1 +
jz loc_1007C6B  +
cmp esi 2 +
jz loc_1007C76  +
cmp esi 3E9h +
jz loc_1007C7E  +
lea eax [esi-3EAh] +
cmp eax 1 +
ja loc_1007C7E  +
push ebx  +
push edi  +
call sub_10076FB  +
test eax eax +
jz loc_1007C56  +
push esi  +
push ebx  +
push edi  +
call sub_1007ACD  +
jmp loc_1007C7E  +
mov eax 3EBh +
push eax  +
push eax  +
push 3EAh  +
push edi  +
call ds:CheckRadioButton  +
jmp loc_1007C7E  +
push ebx  +
push edi  +
call sub_10076FB  +
test eax eax +
jz loc_1007C7E  +
push esi  +
push edi  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_1007C90  +
push [ebp+dwNewLong]  +
push [ebp+arg_8]  +
push edi  +
call sub_1007B1F  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+8] +
push 8  +
push edi  +
call ds:GetWindowLongW  +
mov ebx eax +
mov eax [ebp+0Ch] +
sub eax 110h +
jz loc_1007D26  +
dec eax  +
jz loc_1007CC1  +
xor eax eax +
jmp loc_1007D32  +
push esi  +
movzx esi word ptr [ebp+10h] +
cmp esi 1 +
jz loc_1007D0D  +
cmp esi 2 +
jz loc_1007D18  +
cmp esi 3E9h +
jz loc_1007D20  +
lea eax [esi-3EAh] +
cmp eax 1 +
ja loc_1007D20  +
push ebx  +
push edi  +
call sub_100781D  +
test eax eax +
jz loc_1007CF8  +
push esi  +
push ebx  +
push edi  +
call sub_1007AF6  +
jmp loc_1007D20  +
mov eax 3EBh +
push eax  +
push eax  +
push 3EAh  +
push edi  +
call ds:CheckRadioButton  +
jmp loc_1007D20  +
push ebx  +
push edi  +
call sub_100781D  +
test eax eax +
jz loc_1007D20  +
push esi  +
push edi  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_1007D32  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push edi  +
call sub_1007B8C  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1007D58  +
cmp [esi] ax +
jz loc_1007D54  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1007D4A  +
test edx edx +
jnz loc_1007D5D  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1007D6E  +
test eax eax +
jl loc_1007D6B  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp ecx eax +
jz loc_1007D8F  +
push esi  +
mov esi [ecx] +
cmp esi [ebp+arg_0] +
pop esi  +
jb loc_1007D8F  +
mov eax 80070057h +
jmp loc_1007DA8  +
test [ebp+arg_4] 100h +
jz loc_1007DA8  +
cmp [edx] eax +
jnz loc_1007DA8  +
mov dword ptr [edx] offset dword_10054C0 +
cmp ecx eax +
jz loc_1007DA8  +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_1007DC4  +
cmp edx [ebp+arg_4] +
jbe loc_1007DC9  +
mov eax 80070057h +
test eax eax +
jl loc_1007DD7  +
mov eax [ebp+arg_0] +
call sub_1007D3D  +
jmp loc_1007DDA  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
cmp ax 5Ch +
jnz loc_1007DFA  +
xor eax eax +
jmp loc_1007E16  +
push 103h  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007E13  +
cmp word ptr [esi+2] 3Ah +
jz loc_1007DF6  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_1007E6D  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
movzx ecx word ptr [esi] +
inc esi  +
lea eax [ecx-41h] +
inc esi  +
cmp eax 19h +
ja loc_1007E43  +
add ecx 20h +
movzx eax word ptr [edx] +
inc edx  +
lea edi [eax-41h] +
inc edx  +
cmp edi 19h +
ja loc_1007E53  +
add eax 20h +
dec [ebp+arg_8]  +
jz loc_1007E60  +
test ecx ecx +
jz loc_1007E60  +
cmp ecx eax +
jz loc_1007E33  +
xor edx edx +
cmp ecx eax +
setz dl  +
pop edi  +
pop esi  +
mov eax edx +
jmp loc_1007E70  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
jmp loc_1007E8B  +
dec eax  +
dec eax  +
cmp word ptr [eax] 5Ch +
jz loc_1007E92  +
cmp [ebp+arg_0] eax +
jb loc_1007E83  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp ax 30h +
jb loc_1007EAF  +
cmp ax 39h +
jbe loc_1007EC4  +
cmp ax 41h +
jb loc_1007EBB  +
cmp ax 46h +
jbe loc_1007EC4  +
add eax 0FFFFFF9Fh +
cmp ax 5 +
ja loc_1007EC9  +
xor eax eax +
inc eax  +
jmp loc_1007ECB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi offset a00000000000000 +
xor ebx ebx +
sub edi esi +
movzx ecx word ptr [esi] +
movzx eax word ptr [edi+esi] +
cmp cx ax +
jz loc_1007F04  +
cmp ax 30h +
jnz loc_1007F16  +
push ecx  +
call sub_1007E9B  +
test eax eax +
jz loc_1007F16  +
inc ebx  +
inc esi  +
inc esi  +
cmp ebx 26h +
jb loc_1007EE8  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_1007F0F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 0Ah  +
push offset a?Volume  +
push esi  +
call sub_1007E20  +
test eax eax +
jz loc_1007F9F  +
add esi 14h +
push esi  +
call sub_1007ED4  +
test eax eax +
jz loc_1007F9F  +
xor eax eax +
inc eax  +
jmp loc_1007FA1  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
inc ecx  +
cmp [ebp+arg_8] 0FFFFFFFFh +
push esi  +
mov esi ecx +
jnz loc_1007FDA  +
cmp [ebp+arg_C] 0FFFFFFFFh +
jz loc_1007FDC  +
xor ecx ecx +
mov eax [ebp+arg_4] +
cmp eax dword_101D090 +
jnz loc_1007FF0  +
push ecx  +
push eax  +
call sub_100C65C  +
jmp loc_1008003  +
cmp eax dword_101D094 +
jnz loc_1008001  +
push ecx  +
push eax  +
call sub_1010D5D  +
jmp loc_1008003  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
sub eax 110h +
push esi  +
jz loc_10080A6  +
dec eax  +
jz loc_100802D  +
xor eax eax +
jmp loc_10080E1  +
mov ecx [ebp+10h] +
movzx esi cx +
mov eax esi +
dec eax  +
jz loc_1008081  +
dec eax  +
jz loc_100809A  +
sub eax 4A4h +
jnz loc_10080DE  +
shr ecx 10h +
mov eax 300h +
cmp cx ax +
jnz loc_10080DE  +
push 0  +
push 0  +
push 0Eh  +
push dword ptr [ebp+14h]  +
call ds:SendMessageW  +
neg eax  +
sbb eax eax +
neg eax  +
push eax  +
push 1  +
push dword ptr [ebp+8]  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_10080DE  +
push 200h  +
push dword_105D660  +
push 4A6h  +
push dword ptr [ebp+8]  +
call ds:GetDlgItemTextW  +
push esi  +
push dword ptr [ebp+8]  +
call ds:EndDialog  +
jmp loc_10080DE  +
push edi  +
mov edi [ebp+14h] +
push 0  +
push 200h  +
push 0C5h  +
mov esi 4A6h +
push esi  +
push dword ptr [ebp+8]  +
mov dword_105D660 edi +
call ds:SendDlgItemMessageW  +
push edi  +
push esi  +
push dword ptr [ebp+8]  +
call ds:GetDlgItem  +
push eax  +
call ds:SetWindowTextW  +
pop edi  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 81Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+hDlg] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
sub eax 110h +
mov [ebp+var_818] ecx +
mov [ebp+hKey] edi +
jz loc_1008222  +
dec eax  +
jz loc_100812C  +
xor eax eax +
jmp loc_10082DC  +
movzx eax [ebp+arg_8] +
dec eax  +
jz loc_100813F  +
dec eax  +
jnz loc_10082D9  +
jmp loc_100820C  +
push 4A7h  +
push ecx  +
call ds:GetDlgItem  +
mov esi ds:SendMessageW +
push edi  +
push edi  +
push 190h  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
test eax eax +
jle loc_100820C  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_100820C  +
push edi  +
push edi  +
mov ebx 18Bh +
push ebx  +
push [ebp+hWnd]  +
mov [ebp+wParam] edi +
call esi  +
test eax eax +
jle loc_1008200  +
push edi  +
push [ebp+wParam]  +
push 187h  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jz loc_10081E7  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
push 189h  +
push [ebp+hWnd]  +
call esi  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
inc [ebp+wParam]  +
push edi  +
push edi  +
push ebx  +
push [ebp+hWnd]  +
call esi  +
cmp [ebp+wParam] eax +
jl loc_10081A2  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
movzx eax [ebp+arg_8] +
push eax  +
push [ebp+var_818]  +
call ds:EndDialog  +
jmp loc_10082D9  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_10082D9  +
mov esi ds:RegEnumValueW +
push edi  +
push edi  +
lea eax [ebp+var_81C] +
push eax  +
push edi  +
lea eax [ebp+var_814] +
push eax  +
lea eax [ebp+lParam] +
push eax  +
mov ebx 400h +
mov [ebp+wParam] 1 +
push edi  +
jmp loc_10082BB  +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 180h  +
push 4A7h  +
push [ebp+var_818]  +
call ds:GetDlgItem  +
push eax  +
call ds:SendMessageW  +
mov eax [ebp+wParam] +
inc [ebp+wParam]  +
push edi  +
push edi  +
lea ecx [ebp+var_81C] +
push ecx  +
push edi  +
lea ecx [ebp+var_814] +
push ecx  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push [ebp+hKey]  +
mov [ebp+var_814] ebx +
call esi  +
test eax eax +
jz loc_1008271  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push offset sub_10080EB  +
push [ebp+hWndParent]  +
push 71h  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1050h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hWnd] +
push edi  +
push eax  +
mov [ebp+var_101C] eax +
call ds:GetMenu  +
xor edi edi +
cmp eax edi +
jz loc_100859F  +
push ebx  +
push [ebp+nPos]  +
push eax  +
call ds:GetSubMenu  +
mov ebx eax +
mov [ebp+var_1010] ebx +
cmp ebx edi +
jz loc_100859E  +
push esi  +
push 30h  +
pop esi  +
push esi  +
lea eax [ebp+var_1050] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_1050] +
push eax  +
push edi  +
push 500h  +
push ebx  +
mov [ebp+var_1050.cbSize] esi +
mov [ebp+var_1050.fMask] 1 +
mov [ebp+var_1050.fState] 3 +
call ds:SetMenuItemInfoW  +
push 400h  +
push 2  +
push ebx  +
call ds:DeleteMenu  +
test eax eax +
jnz loc_10083AA  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_1008591  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push edi  +
push [ebp+hKey]  +
mov [ebp+dwIndex] edi +
mov [ebp+cbValueName] 400h +
mov [ebp+cbData] 800h +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_1008585  +
mov ebx ds:InsertMenuItemW +
cmp [ebp+dwIndex] edi +
jnz loc_10084BA  +
push esi  +
lea eax [ebp+var_1050] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_1050] +
push eax  +
push edi  +
push 500h  +
push [ebp+var_1010]  +
mov [ebp+var_1050.cbSize] esi +
mov [ebp+var_1050.fMask] 1 +
mov [ebp+var_1050.fState] edi +
call ds:SetMenuItemInfoW  +
push esi  +
lea eax [ebp+var_1050] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_1050] +
push eax  +
push 2  +
push 0FFFFFFFFh  +
push [ebp+var_1010]  +
mov [ebp+var_1050.cbSize] esi +
mov [ebp+var_1050.fMask] 10h +
mov [ebp+var_1050.fType] 800h +
call ebx  +
push esi  +
lea eax [ebp+var_1050] +
push edi  +
push eax  +
call memset  +
mov eax [ebp+dwIndex] +
add eax 502h +
mov [ebp+var_1050.wID] eax +
lea eax [ebp+ValueName] +
add esp 0Ch +
push eax  +
mov [ebp+var_1050.cbSize] esi +
mov [ebp+var_1050.fMask] 13h +
mov [ebp+var_1050.fType] edi +
mov [ebp+var_1050.dwTypeData] eax +
mov [ebp+var_1050.fState] edi +
call ds:lstrlenW  +
mov [ebp+var_1050.cch] eax +
lea eax [ebp+var_1050] +
push eax  +
mov eax [ebp+dwIndex] +
push edi  +
add eax 502h +
push eax  +
push [ebp+var_1010]  +
call ebx  +
inc [ebp+dwIndex]  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 400h +
push [ebp+hKey]  +
mov [ebp+cbData] 800h +
call ds:RegEnumValueW  +
test eax eax +
jz loc_1008434  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push [ebp+var_101C]  +
call ds:DrawMenuBar  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
mov ebx [ebp+hMenu] +
mov esi ds:EnableMenuItem +
xor eax eax +
cmp phkResult eax +
setz al  +
mov edi eax +
push edi  +
push 297h  +
push ebx  +
call esi  +
push edi  +
push 298h  +
push ebx  +
call esi  +
push edi  +
push 299h  +
push ebx  +
call esi  +
push edi  +
push 2A2h  +
push ebx  +
call esi  +
push edi  +
push 2A4h  +
push ebx  +
call esi  +
push edi  +
push 2A5h  +
push ebx  +
call esi  +
push edi  +
push 2B0h  +
push ebx  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax ebx +
shr eax 10h +
and eax 2010h +
cmp ax 10h +
jnz loc_10086AB  +
cmp [ebp+lParam] 0 +
jz loc_10086AB  +
push esi  +
push edi  +
push 30h  +
pop esi  +
push esi  +
lea eax [ebp+wParam] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+wParam] +
push eax  +
movzx edi bx +
push 1  +
push edi  +
push [ebp+lParam]  +
mov [ebp+wParam] esi +
mov esi ds:GetMenuItemInfoW +
mov dword ptr [ebp-2Ch] 2 +
call esi  +
cmp bx 3 +
jnz loc_1008696  +
push 3  +
push [ebp+hWnd]  +
call sub_1008318  +
lea eax [ebp+wParam] +
push eax  +
push 1  +
push edi  +
push [ebp+lParam]  +
call esi  +
pop edi  +
pop esi  +
test eax eax +
jz loc_10086AB  +
mov ebx [ebp-20h] +
push offset wIDs  +
push dword_101D098  +
push dword_101D054  +
push hMenu  +
push [ebp+lParam]  +
push ebx  +
push 11Fh  +
call ds:MenuHelp  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lParam] +
push esi  +
push eax  +
push 3  +
push 110Ah  +
push dword_101D090  +
mov esi eax +
call ds:SendMessageW  +
test eax eax +
jnz loc_10086F6  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_208] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+lParam] +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi 110Ah +
push ebx  +
push 3  +
push edi  +
push dword_101D090  +
mov [ebp+var_20C] ebx +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_1008771  +
push ebx  +
push 3  +
push edi  +
push dword_101D090  +
call esi  +
test eax eax +
jnz loc_1008749  +
push 100h  +
lea eax [ebp+var_204] +
push eax  +
push [ebp+var_20C]  +
call sub_100B314  +
xor esi esi +
mov edi offset off_1001C38 +
mov ecx [edi] +
lea eax [ebp+var_204] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10087BD  +
test dx dx +
jz loc_10087B9  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10087BD  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1008797  +
xor eax eax +
jmp loc_10087C2  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10087DA  +
add edi 0Ch +
inc esi  +
cmp edi offset aHkey_dyn_data +
jl loc_100878F  +
mov eax [ebp+var_208] +
jmp loc_10087E3  +
imul esi esi +
mov eax ds:dword_1001C40[esi] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 5Ch  +
mov [ebp+var_438] eax +
pop eax  +
push 8  +
pop ecx  +
mov word ptr [ebp+var_28] ax +
mov word ptr [ebp+var_28+2] ax +
xor eax eax +
push 0  +
lea edi [ebp+Buffer] +
stos   +
push 9  +
mov edi 110Ah +
push edi  +
push dword_101D090  +
lea eax [ebp+var_22C] +
mov [ebp+var_440] eax +
call esi  +
push eax  +
push 3  +
push edi  +
push dword_101D090  +
mov [ebp+var_434] eax +
call esi  +
push [ebp+var_434]  +
mov [ebp+lParam] eax +
call sub_10086ED  +
mov ebx eax +
push 101h  +
lea eax [ebp+var_22C] +
push eax  +
push [ebp+var_434]  +
call sub_100B314  +
xor eax eax +
cmp ebx dword_101D0E8 +
setnz al  +
mov [ebp+var_444] eax +
test eax eax +
jz loc_10088B2  +
push 10h  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
call sub_100B314  +
jmp loc_10088CD  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
cmp [ebp+lParam] ebx +
jnz loc_10088DF  +
xor esi esi +
mov [ebp+var_440] esi +
jmp loc_100891D  +
push [ebp+lParam]  +
push 3  +
push edi  +
push dword_101D090  +
call esi  +
cmp eax ebx +
jnz loc_10088F8  +
xor esi esi +
jmp loc_100891D  +
push 0  +
push 101h  +
lea eax [ebp+var_430] +
push eax  +
push [ebp+lParam]  +
push dword_101D090  +
call sub_1002C60  +
lea esi [ebp+var_430] +
push [ebp+var_434]  +
call sub_100871C  +
lea ecx [ebp+var_44C] +
push ecx  +
push [ebp+var_438]  +
push 0  +
push eax  +
push [ebp+var_444]  +
lea eax [ebp+var_22C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push esi  +
push [ebp+var_440]  +
call sub_1012F91  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jnz loc_100897B  +
push [ebp+var_44C]  +
push [ebp+var_438]  +
call ds:EditSecurity  +
push dword_101D090  +
call sub_1003AD2  +
jmp loc_100899D  +
push 0  +
push 10h  +
push 1B58h  +
push 1B8Ch  +
push [ebp+var_438]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_10119AA  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_1008AC4  +
test [ebp+arg_14] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_10089F6  +
cmp [ebp+arg_8] eax +
jnz loc_10089F6  +
mov [ebp+arg_8] offset dword_10054C0 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_1008A11  +
mov esi 80070057h +
cmp ecx eax +
jz loc_1008A7D  +
xor eax eax +
mov [edi] ax +
jmp loc_1008A7D  +
cmp ecx eax +
jnz loc_1008A32  +
mov edx [ebp+arg_8] +
cmp [edx] ax +
jz loc_1008AAE  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1008A7D  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ecx +
mov ecx edi +
call sub_1002D7B  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1008A7A  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_1008AAE  +
cmp ebx 1 +
jbe loc_1008AAE  +
push [ebp+arg_0]  +
lea ecx [ebx+ebx] +
call sub_100E371  +
jmp loc_1008AAE  +
mov ecx [ebp+arg_4] +
test [ebp+arg_14] 1C00h +
jz loc_1008AA2  +
test ecx ecx +
jz loc_1008AA2  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1015C65  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_1008AAE  +
cmp esi 8007007Ah +
jnz loc_1008AC3  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1008ABA  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1008AC3  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_18]  +
mov edi [ebp+arg_4] +
mov edx 7FFFFFFFh +
push edx  +
push esi  +
mov ecx edi +
call sub_10119AA  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_1008C0A  +
push ebx  +
push [ebp+arg_18]  +
mov ebx edi +
push edx  +
lea ecx [ebp+arg_C] +
lea edx [ebp+arg_8] +
mov [ebp+var_4] esi +
mov [ebp+arg_4] ebx +
call sub_1007D74  +
xor ecx ecx +
cmp eax ecx +
mov [ebp+arg_0] eax +
jl loc_1008BAF  +
test [ebp+arg_18] 0FFFFE000h +
jz loc_1008B3F  +
mov [ebp+arg_0] 80070057h +
cmp edi ecx +
jz loc_1008BBE  +
xor eax eax +
mov [esi] ax +
jmp loc_1008BBE  +
cmp edi ecx +
jnz loc_1008B66  +
cmp [ebp+arg_C] ecx +
jz loc_1008BB8  +
mov eax [ebp+arg_8] +
cmp [eax] cx +
jz loc_1008BB8  +
cmp esi ecx +
jnz loc_1008B5D  +
mov [ebp+arg_0] 80070057h +
jmp loc_1008BBE  +
mov [ebp+arg_0] 8007007Ah +
jmp loc_1008BB8  +
push [ebp+arg_C]  +
lea eax [ebp+arg_4] +
mov [ebp+arg_4] ecx +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
mov ecx esi +
call sub_1002D7B  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_4] +
sub ebx eax +
cmp [ebp+arg_0] 0 +
lea edx [esi+eax*2] +
mov [ebp+var_4] edx +
mov [ebp+arg_4] ebx +
jl loc_1008BBE  +
test [ebp+arg_18] 200h +
jz loc_1008BB8  +
cmp ebx 1 +
jbe loc_1008BB8  +
mov eax [ebp+arg_18] +
lea ecx [ebx+ebx] +
push edx  +
call sub_100E371  +
jmp loc_1008BB8  +
cmp edi ecx +
jz loc_1008BB8  +
xor eax eax +
mov [esi] ax +
cmp [ebp+arg_0] 0 +
jge loc_1008BF4  +
test [ebp+arg_18] 1C00h +
jz loc_1008BE5  +
test edi edi +
jz loc_1008BE5  +
push [ebp+arg_18]  +
lea eax [ebp+var_4] +
push eax  +
lea eax [edi+edi] +
push eax  +
lea ebx [ebp+arg_4] +
xor ecx ecx +
mov edi esi +
call sub_1015C65  +
mov ebx [ebp+arg_4] +
cmp [ebp+arg_0] 0 +
jge loc_1008BF4  +
cmp [ebp+arg_0] 8007007Ah +
jnz loc_1008C09  +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1008C00  +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_1008C09  +
mov [eax] ebx +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
cmp edi ebx +
jz loc_1008C2B  +
mov [edi] ebx +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 5Ch +
jnz loc_1008C73  +
cmp word ptr [esi+2] 5Ch +
jnz loc_1008C73  +
cmp word ptr [esi+4] 3Fh +
jz loc_1008C50  +
push esi  +
call sub_1007F73  +
test eax eax +
jnz loc_1008C73  +
push 2  +
jmp loc_1008C66  +
push 5  +
push offset aUnc  +
lea eax [esi+6] +
push eax  +
call sub_1007E20  +
test eax eax +
jz loc_1008C73  +
push 8  +
xor ebx ebx +
inc ebx  +
pop eax  +
test edi edi +
jz loc_1008C73  +
lea eax [esi+eax*2] +
mov [edi] eax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1008D6D  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1008D6D  +
mov edi ds:iswctype +
mov ebx 103h +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008CDD  +
push 3  +
push offset asc_1008D78  +
lea eax [esi+2] +
push eax  +
call sub_1007E20  +
test eax eax +
jz loc_1008CDD  +
xor eax eax +
inc eax  +
jmp loc_1008D6F  +
cmp word ptr [esi] 5Ch +
jnz loc_1008CEA  +
cmp word ptr [esi+2] 0 +
jz loc_1008CD5  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_1008C18  +
test eax eax +
jz loc_1008D1E  +
mov ecx [ebp+arg_0] +
xor edx edx +
jmp loc_1008D14  +
cmp ax 5Ch +
jnz loc_1008D12  +
inc edx  +
cmp edx 1 +
jg loc_1008D6D  +
cmp word ptr [ecx+2] 0 +
jz loc_1008D6D  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jz loc_1008CD5  +
jmp loc_1008CFF  +
push 4  +
push offset a?  +
push esi  +
call sub_1007E20  +
test eax eax +
jz loc_1008D51  +
movzx eax word ptr [esi+8] +
push ebx  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008D51  +
push 3  +
push offset asc_1008D78  +
lea eax [esi+0Ah] +
push eax  +
call sub_1007E20  +
test eax eax +
jnz loc_1008CD5  +
push esi  +
call sub_1007F73  +
test eax eax +
jz loc_1008D6D  +
cmp word ptr [esi+60h] 5Ch +
jnz loc_1008D6D  +
cmp word ptr [esi+62h] 0 +
jz loc_1008CD5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1008D92  +
and dword ptr [eax] 0 +
push ebx  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jz loc_1008D9D  +
and dword ptr [ebx] 0 +
mov edx [ebp+arg_0] +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1008DA6  +
mov ecx [ebp+arg_4] +
sub eax esi +
sar eax 1 +
pop esi  +
cmp eax ecx +
jb loc_1008DC3  +
mov eax 8007007Ah +
jmp loc_1008E0F  +
sub ecx eax +
lea edx [edx+eax*2] +
mov [ebp+arg_C] edx +
mov [ebp+arg_0] ecx +
test eax eax +
jz loc_1008DF6  +
push 5Ch  +
pop eax  +
cmp ax [edx-2] +
jz loc_1008DF6  +
push 0  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push offset dword_1005430  +
push ecx  +
push edx  +
call sub_10089B0  +
mov edx [ebp+arg_C] +
jmp loc_1008DF9  +
xor eax eax +
inc eax  +
test eax eax +
jl loc_1008E0F  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1008E06  +
mov [ecx] edx +
test ebx ebx +
jz loc_1008E0F  +
mov ecx [ebp+arg_0] +
mov [ebx] ecx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1008E28  +
and dword ptr [eax] 0 +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1008E32  +
and dword ptr [eax] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1008E3D  +
mov ebx [ebp+arg_4] +
sub eax edx +
sar eax 1 +
mov esi eax +
cmp esi ebx +
jb loc_1008E5B  +
mov eax 80070057h +
jmp loc_1008E9A  +
mov [ebp+arg_0] 1 +
test esi esi +
jbe loc_1008E85  +
cmp word ptr [edi+esi*2-2] 5Ch +
jnz loc_1008E80  +
push edi  +
dec esi  +
call sub_1008C8D  +
test eax eax +
jnz loc_1008E80  +
and [ebp+arg_0] eax +
mov [edi+esi*2] ax +
lea edi [edi+esi*2] +
sub ebx esi +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1008E8E  +
mov [eax] edi +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1008E97  +
mov [eax] ebx +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1008E19  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_1008FCB  +
cmp word ptr [esi] 0 +
jz loc_1008FCB  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1008FCB  +
and dword ptr [eax] 0 +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_1008C18  +
test eax eax +
jz loc_1008F65  +
mov esi ds:wcschr +
push ebx  +
mov ebx [ebp+arg_0] +
push 5Ch  +
push ebx  +
call esi  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1008F4D  +
lea ebx [edi+2] +
push 5Ch  +
push ebx  +
call esi  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1008F35  +
cmp esi ebx +
jz loc_1008F28  +
inc esi  +
inc esi  +
pop ebx  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor eax eax +
jmp loc_1008FD0  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1008F3A  +
sub eax edx +
sar eax 1 +
lea esi [edi+eax*2] +
jmp loc_1008F28  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1008F52  +
sub eax edx +
sar eax 1 +
lea esi [ebx+eax*2] +
jmp loc_1008F28  +
push 5Ch  +
pop edi  +
cmp [esi] di +
jnz loc_1008F79  +
lea eax [esi+2] +
cmp [eax] di +
jz loc_1008F79  +
mov esi eax +
jmp loc_1008F29  +
push esi  +
call sub_1007F73  +
test eax eax +
jz loc_1008F88  +
add esi 60h +
jmp loc_1008FBB  +
push 4  +
push offset a?  +
push esi  +
call sub_1007E20  +
test eax eax +
jz loc_1008F9C  +
add esi 8 +
movzx eax word ptr [esi] +
push 103h  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008FCB  +
cmp word ptr [esi+2] 3Ah +
jnz loc_1008FCB  +
add esi 4 +
cmp [esi] di +
jnz loc_1008F29  +
inc esi  +
inc esi  +
jmp loc_1008F29  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_100904E  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_100904E  +
cmp ebx 8000h +
ja loc_100904E  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_1008EC3  +
mov esi eax +
test esi esi +
jl loc_100903D  +
mov eax [ebp+arg_0] +
lea ecx [edi+ebx*2] +
cmp eax ecx +
jb loc_1009018  +
mov esi 80070057h +
test esi esi +
jl loc_100903D  +
cmp word ptr [eax] 0 +
push ebx  +
push edi  +
jnz loc_100902D  +
call sub_1008EA6  +
mov esi eax +
jmp loc_1009039  +
xor ecx ecx +
mov [eax] cx +
call sub_1008EA6  +
xor esi esi +
test esi esi +
jge loc_1009049  +
push offset dword_10054C0  +
push ebx  +
push edi  +
call sub_1002D3F  +
mov eax esi +
pop esi  +
jmp loc_1009053  +
mov eax 80070057h +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push offset dword_10054C0  +
push esi  +
xor edi edi +
push ebx  +
mov [ebp+var_10] edi +
call sub_1002D3F  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_10094C5  +
cmp esi 8000h +
jbe loc_100909D  +
mov eax 80070057h +
jmp loc_10094C5  +
mov eax 104h +
cmp esi eax +
ja loc_10090AA  +
and [ebp+arg_C] 0FFFFFFFEh +
mov ecx [ebp+arg_C] +
and ecx 1 +
mov [ebp+var_C] ecx +
jnz loc_10090BE  +
cmp esi eax +
jbe loc_10090BE  +
mov esi eax +
mov [ebp+arg_4] esi +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_8] esi +
call sub_1008C18  +
mov [ebp+var_18] eax +
cmp eax edi +
jz loc_1009104  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
cmp [ebp+var_C] edi +
jz loc_10090FD  +
mov [ebp+var_10] 6 +
push offset a?Unc  +
push esi  +
push ebx  +
call sub_10089B0  +
mov edi [ebp+var_14] +
jmp loc_1009198  +
push offset asc_10094DC  +
jmp loc_10090EE  +
mov edi [ebp+arg_8] +
push 4  +
mov esi offset a? +
push esi  +
push edi  +
mov [ebp+arg_C] ebx +
call sub_1007E20  +
mov [ebp+var_14] eax +
push 103h  +
test eax eax +
jz loc_100914F  +
mov ebx edi +
add ebx 8 +
movzx eax word ptr [ebx] +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009146  +
mov eax edi +
cmp word ptr [eax+0Ah] 3Ah +
jnz loc_1009146  +
mov edi ebx +
jmp loc_100914A  +
and [ebp+var_14] 0 +
mov ebx [ebp+arg_0] +
jmp loc_1009171  +
mov eax edi +
movzx eax word ptr [eax] +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009171  +
mov eax edi +
cmp word ptr [eax+2] 3Ah +
jnz loc_1009171  +
mov [ebp+var_14] 1 +
cmp [ebp+var_C] 0 +
jz loc_10091DE  +
cmp [ebp+var_14] 0 +
jz loc_100919B  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push esi  +
push [ebp+arg_4]  +
mov [ebp+var_10] 4 +
push ebx  +
call sub_10089B0  +
mov [ebp+var_4] eax +
cmp [ebp+var_C] 0 +
jz loc_10091DE  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_10091DE  +
add eax 104h +
cmp [ebp+arg_4] eax +
ja loc_10091DE  +
mov eax 104h +
cmp [ebp+arg_4] eax +
jbe loc_10091BF  +
mov [ebp+arg_4] eax +
mov eax [ebp+arg_4] +
mov edi [ebp+arg_8] +
and [ebp+var_10] 0 +
push offset dword_10054C0  +
push eax  +
push ebx  +
mov [ebp+var_8] eax +
mov [ebp+arg_C] ebx +
call sub_1002D3F  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jl loc_1009393  +
cmp word ptr [edi] 0 +
jz loc_100938D  +
push 5Ch  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+arg_8] eax +
test eax eax +
jz loc_100920C  +
mov esi eax +
sub esi edi +
sar esi 1 +
jmp loc_1009221  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1009211  +
sub eax edx +
sar eax 1 +
mov esi eax +
cmp esi 100h +
jbe loc_1009233  +
cmp [ebp+var_C] 0 +
jz loc_1009381  +
cmp esi 8000h +
jnb loc_1009381  +
cmp esi 1 +
jnz loc_1009295  +
cmp word ptr [edi] 2Eh +
jnz loc_100930C  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_100925D  +
lea edi [eax+2] +
jmp loc_1009376  +
inc edi  +
inc edi  +
cmp [ebp+arg_C] ebx +
jbe loc_1009376  +
push ebx  +
call sub_1008C8D  +
test eax eax +
jnz loc_1009376  +
sub [ebp+arg_C] 2 +
inc [ebp+var_8]  +
push offset dword_10054C0  +
push [ebp+var_8]  +
push [ebp+arg_C]  +
call sub_1002D3F  +
mov [ebp+var_4] eax +
jmp loc_1009376  +
cmp esi 2 +
jnz loc_1009301  +
cmp word ptr [edi] 2Eh +
jnz loc_100930C  +
cmp word ptr [edi+2] 2Eh +
jnz loc_100930C  +
cmp [ebp+arg_C] ebx +
jbe loc_10092F1  +
push ebx  +
call sub_1008C8D  +
test eax eax +
jnz loc_10092F1  +
mov eax [ebp+arg_C] +
add eax 0FFFFFFFEh +
push eax  +
push ebx  +
call sub_1007E79  +
mov [ebp+arg_C] eax +
test eax eax +
mov eax [ebp+arg_4] +
jz loc_10092D8  +
mov ecx [ebp+arg_C] +
sub ecx ebx +
sar ecx 1 +
sub eax ecx +
jmp loc_10092DB  +
mov [ebp+arg_C] ebx +
push offset dword_10054C0  +
push eax  +
push [ebp+arg_C]  +
mov [ebp+var_8] eax +
call sub_1002D3F  +
mov [ebp+var_4] eax +
jmp loc_10092FC  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_1009255  +
add edi 4 +
jmp loc_1009376  +
test esi esi +
jnz loc_100930C  +
cmp word ptr [edi] 5Ch +
jnz loc_100930C  +
inc esi  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push esi  +
push edi  +
push [ebp+var_8]  +
push [ebp+arg_C]  +
call sub_1008AD1  +
mov [ebp+var_4] eax +
cmp eax 8007007Ah +
jnz loc_1009373  +
cmp esi 1 +
jnz loc_1009373  +
cmp word ptr [edi] 5Ch +
jnz loc_1009373  +
movzx eax word ptr [edi+2] +
xor ecx ecx +
cmp ax cx +
jz loc_100938A  +
cmp ax 2Eh +
jnz loc_100934F  +
cmp [edi+4] cx +
jz loc_100938A  +
cmp [ebp+var_8] 1 +
jnz loc_1009373  +
cmp ax 2Eh +
jnz loc_1009373  +
cmp [edi+4] ax +
jnz loc_1009373  +
mov edx [ebp+arg_C] +
xor eax eax +
add [ebp+arg_C] 2 +
mov [edx] ax +
mov [ebp+var_8] ecx +
mov [ebp+var_4] ecx +
lea edi [edi+esi*2] +
cmp [ebp+var_4] 0 +
jl loc_100938D  +
jmp loc_10091E8  +
mov [ebp+var_4] 800700CEh +
jmp loc_1009393  +
mov [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jge loc_10093DF  +
push offset dword_10054C0  +
push [ebp+arg_4]  +
push ebx  +
call sub_1002D3F  +
mov eax [ebp+var_4] +
cmp eax 8007007Ah +
jnz loc_10094C5  +
cmp [ebp+var_C] 0 +
jnz loc_10093C8  +
cmp [ebp+arg_4] 104h +
jz loc_10093D5  +
cmp [ebp+var_C] 0 +
jz loc_10094C5  +
cmp [ebp+arg_4] 8000h +
jnz loc_10094C5  +
mov eax 800700CEh +
jmp loc_10094C5  +
mov ecx [ebp+arg_C] +
cmp ecx ebx +
jbe loc_100940F  +
dec ecx  +
dec ecx  +
cmp word ptr [ecx] 2Eh +
jnz loc_100940F  +
cmp ecx ebx +
jz loc_100940A  +
lea eax [ecx-2] +
cmp word ptr [eax] 2Ah +
jz loc_100940F  +
xor edx edx +
mov [ecx] dx +
cmp word ptr [eax] 2Eh +
mov ecx eax +
jnz loc_100940F  +
jmp loc_10093EE  +
xor eax eax +
mov [ecx] ax +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1009414  +
sub eax edx +
sar eax 1 +
lea esi [ebx+eax*2] +
lea eax [ebx+0Eh] +
cmp esi eax +
jb loc_1009445  +
push 7  +
push offset aData  +
sub esi 0Eh +
push esi  +
call sub_1007E20  +
test eax eax +
jz loc_1009445  +
xor eax eax +
mov [esi] ax +
mov eax [ebp+var_10] +
xor esi esi +
cmp eax esi +
jz loc_100948C  +
lea eax [ebx+eax*2] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1009454  +
sub eax edx +
sar eax 1 +
cmp eax 104h +
jnb loc_100948C  +
cmp [ebp+var_18] esi +
jz loc_100947F  +
lea eax [ebx+10h] +
push eax  +
mov eax [ebp+arg_4] +
add eax 0FFFFFFFEh +
push eax  +
lea eax [ebx+4] +
push eax  +
jmp loc_1009487  +
lea eax [ebx+8] +
push eax  +
push [ebp+arg_4]  +
push ebx  +
call sub_1002D3F  +
cmp [ebp+arg_4] 1 +
jbe loc_10094A3  +
cmp [ebx] si +
jnz loc_10094A3  +
push 5Ch  +
pop eax  +
mov [ebx] ax +
xor eax eax +
mov [ebx+2] ax +
cmp [ebp+arg_4] 3 +
jbe loc_10094C3  +
cmp word ptr [ebx+2] 3Ah +
jnz loc_10094C3  +
cmp [ebx+4] si +
jnz loc_10094C3  +
push 5Ch  +
pop eax  +
mov [ebx+4] ax +
xor eax eax +
mov [ebx+6] ax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_C] +
mov [ebp+var_220] ecx +
mov [ebp+var_214] eax +
mov [ebp+var_218] edi +
mov [ebp+var_21C] ebx +
mov [ebp+hMem] ebx +
cmp ecx ebx +
jz loc_1009730  +
cmp [ebp+arg_4] ebx +
jz loc_1009730  +
mov edx 8000h +
cmp [ebp+arg_4] edx +
ja loc_1009730  +
push esi  +
cmp eax ebx +
jnz loc_100959D  +
cmp edi ebx +
jnz loc_10095CE  +
mov esi 80070057h +
push offset dword_10054C0  +
push [ebp+arg_4]  +
push [ebp+var_220]  +
call sub_1002D3F  +
lea eax [ebp+var_20C] +
cmp [ebp+hMem] eax +
jz loc_1009595  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
jmp loc_1009735  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10095A0  +
sub eax esi +
sar eax 1 +
mov [ebp+var_21C] eax +
cmp eax edx +
jb loc_10095BF  +
mov esi 800700CEh +
jmp loc_1009568  +
test eax eax +
jz loc_10095CA  +
inc eax  +
mov [ebp+var_21C] eax +
test edi edi +
jz loc_10095EC  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10095D3  +
sub eax esi +
sar eax 1 +
mov ebx eax +
cmp ebx edx +
jnb loc_10095B8  +
test ebx ebx +
jz loc_10095EC  +
inc ebx  +
mov eax [ebp+var_21C] +
lea edi [ebx+eax] +
mov eax 104h +
cmp edi eax +
jbe loc_100961E  +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_1009635  +
mov esi 8007000Eh +
jmp loc_1009568  +
xor ecx ecx +
mov word ptr [ebp+var_20C] cx +
lea ecx [ebp+var_20C] +
mov [ebp+hMem] ecx +
mov edi eax +
cmp [ebp+var_21C] 0 +
jz loc_10096F2  +
test ebx ebx +
jnz loc_1009651  +
push [ebp+var_214]  +
jmp loc_10096FC  +
mov ebx [ebp+var_218] +
push ebx  +
call sub_1007DE4  +
test eax eax +
jz loc_10096B0  +
push [ebp+var_214]  +
push edi  +
push [ebp+hMem]  +
call sub_1002D3F  +
mov esi eax +
test esi esi +
jl loc_1009568  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_214] +
push eax  +
push edi  +
push [ebp+hMem]  +
call sub_1008D83  +
mov esi eax +
test esi esi +
jl loc_1009568  +
push ebx  +
push [ebp+var_218]  +
push [ebp+var_214]  +
jmp loc_1009703  +
cmp word ptr [ebx] 5Ch +
jnz loc_10096EF  +
add ebx 2 +
cmp word ptr [ebx] 5Ch +
jz loc_10096E9  +
push [ebp+var_214]  +
push edi  +
push [ebp+hMem]  +
call sub_1002D3F  +
mov esi eax +
test esi esi +
jl loc_1009568  +
push edi  +
push [ebp+hMem]  +
call sub_1008FDB  +
jmp loc_1009673  +
mov ebx [ebp+var_218] +
push ebx  +
jmp loc_10096FC  +
test ebx ebx +
jz loc_1009712  +
push [ebp+var_218]  +
push edi  +
push [ebp+hMem]  +
call sub_1002D3F  +
mov esi eax +
test esi esi +
jl loc_1009568  +
push [ebp+arg_10]  +
push [ebp+hMem]  +
push [ebp+arg_4]  +
push [ebp+var_220]  +
call sub_100905E  +
mov esi eax +
jmp loc_100957B  +
mov eax 80070057h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_100977E  +
push 0  +
push esi  +
call sub_1008C18  +
test eax eax +
jnz loc_100977E  +
push 4  +
push offset a?  +
push esi  +
call sub_1007E20  +
test eax eax +
jz loc_1009778  +
jmp loc_100977E  +
inc esi  +
inc esi  +
cmp word ptr [esi] 5Ch +
jz loc_1009776  +
push [ebp+arg_C]  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10094FB  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
mov [ebp+var_1010] edi +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_100991C  +
push esi  +
push 3  +
mov esi 400h +
push esi  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push eax  +
push dword_101D090  +
call sub_1002C60  +
lea eax [ebp+Data] +
mov [ebp+var_100C] eax +
push 5Ch  +
push [ebp+var_100C]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009837  +
inc eax  +
inc eax  +
mov [ebp+var_100C] eax +
jnz loc_1009819  +
push ebx  +
push [ebp+var_100C]  +
lea eax [ebp+ValueName] +
push esi  +
push eax  +
call sub_1002D3F  +
lea eax [ebp+ValueName] +
push eax  +
mov ebx offset loc_100800F +
push ebx  +
push edi  +
mov edi ds:DialogBoxParamW +
jmp loc_10098CD  +
xor eax eax +
cmp [ebp+ValueName] ax +
jz loc_10098AC  +
push eax  +
push eax  +
lea ecx [ebp+Type] +
push ecx  +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call sub_1003313  +
test eax eax +
jnz loc_10098DE  +
push 10h  +
push 0ACh  +
push 0ABh  +
push [ebp+var_1010]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
push [ebp+var_100C]  +
lea eax [ebp+ValueName] +
push esi  +
push eax  +
call sub_1002D3F  +
lea eax [ebp+ValueName] +
push eax  +
push ebx  +
push [ebp+var_1010]  +
push 70h  +
push dword_101D054  +
call edi  +
cmp eax 1 +
jnz loc_100990E  +
jmp loc_1009861  +
lea eax [ebp+Data] +
push eax  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 1  +
push 0  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1818h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
xor eax eax +
xor edi edi +
cmp ax Buffer +
jnz loc_1009999  +
push 104h  +
mov esi offset Buffer +
push esi  +
push 22h  +
push dword_101D054  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1009980  +
mov Buffer ax +
jmp loc_1009B37  +
push esi  +
call ds:lstrlenW  +
mov dword_105D870 eax +
cmp Buffer di +
jz loc_1009B37  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_1009B37  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+First] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push edi  +
push [ebp+hKey]  +
mov esi 400h +
mov [ebp+cbValueName] esi +
mov [ebp+cbData] 800h +
mov [ebp+dwIndex] 1 +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_1009B2B  +
push ebx  +
cmp [ebp+Type] 1 +
jnz loc_1009B2A  +
cmp [ebp+cbData] edi +
jbe loc_1009B2A  +
push 5Ch  +
lea eax [ebp+First] +
push eax  +
call ds:StrChrIW  +
mov ebx eax +
push offset Buffer  +
lea eax [ebp+First] +
push eax  +
call ds:StrStrIW  +
cmp eax edi +
jz loc_1009AD5  +
lea ecx [ebp+First] +
cmp eax ecx +
jnz loc_1009AD5  +
cmp ebx edi +
jz loc_1009AD5  +
mov ecx dword_105D870 +
lea eax [eax+ecx*2] +
cmp eax ebx +
jnz loc_1009AD5  +
push esi  +
lea eax [ebp+Data] +
push eax  +
push 13h  +
push dword_101D054  +
call ds:LoadStringW  +
push edi  +
push edi  +
push esi  +
lea eax [ebp+Data] +
push eax  +
call sub_1008D83  +
add ebx 2 +
push ebx  +
push esi  +
lea eax [ebp+Data] +
push eax  +
call sub_101278A  +
lea eax [ebp+Data] +
push eax  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 1  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov eax [ebp+dwIndex] +
inc [ebp+dwIndex]  +
lea ecx [ebp+cbData] +
push ecx  +
lea ecx [ebp+First] +
push ecx  +
lea ecx [ebp+Type] +
push ecx  +
push edi  +
lea ecx [ebp+cbValueName] +
push ecx  +
lea ecx [ebp+ValueName] +
push ecx  +
push eax  +
push [ebp+hKey]  +
mov [ebp+cbValueName] esi +
mov [ebp+cbData] 800h +
call ds:RegEnumValueW  +
test eax eax +
jz loc_1009A11  +
pop ebx  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
call sub_1009930  +
lea eax [ebp+hKey] +
push eax  +
push offset aSoftwareMicr_0  +
push 80000001h  +
call ds:RegOpenKeyW  +
test eax eax +
jnz loc_1009C00  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
mov eax [ebp+arg_4] +
add eax 0FFFFFAFEh +
push eax  +
push [ebp+hKey]  +
mov [ebp+cbValueName] 400h +
mov [ebp+cbData] 800h +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_1009BF4  +
cmp [ebp+Type] 1 +
jnz loc_1009BF4  +
cmp [ebp+cbData] eax +
jbe loc_1009BF4  +
push 1  +
lea eax [ebp+Data] +
push eax  +
call sub_10030F5  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx dword_101D090 +
xor eax eax +
inc eax  +
push esi  +
mov [ebp+uEnable] eax +
mov [ebp+var_10] eax +
cmp dword_101D09C ebx +
jnz loc_1009C96  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov edi 110Ah +
push edi  +
push ebx  +
call esi  +
push eax  +
mov [ebp+lParam] eax +
call sub_100871C  +
cmp eax 2 +
jz loc_1009C5B  +
cmp eax 3 +
jnz loc_1009C95  +
push [ebp+lParam]  +
push 3  +
push edi  +
push ebx  +
call esi  +
push [ebp+lParam]  +
mov [ebp+var_4] eax +
call sub_10086ED  +
mov [ebp+lParam] eax +
cmp [ebp+var_4] eax +
jnz loc_1009C7D  +
and [ebp+uEnable] 0 +
jmp loc_1009C95  +
cmp [ebp+var_4] 0 +
jz loc_1009C95  +
push [ebp+var_4]  +
push 3  +
push edi  +
push ebx  +
call esi  +
cmp eax [ebp+lParam] +
jnz loc_1009C95  +
and [ebp+var_10] 0 +
pop edi  +
push [ebp+uEnable]  +
mov esi ds:EnableMenuItem +
push 2A8h  +
push [ebp+hMenu]  +
call esi  +
push [ebp+var_10]  +
push 2A9h  +
push [ebp+hMenu]  +
call esi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push edi  +
mov edi [ebp+hWnd] +
push edi  +
call ds:IsIconic  +
test eax eax +
jnz loc_1009F46  +
push ebx  +
push esi  +
push 0FFFFFFF0h  +
push edi  +
call ds:GetWindowLongW  +
mov [ebp+dwNewLong] eax +
and eax 0FDFFFFFFh +
push eax  +
push 0FFFFFFF0h  +
push edi  +
call ds:SetWindowLongW  +
push offset Info  +
lea eax [ebp+rc] +
push eax  +
push edi  +
call ds:GetEffectiveClientRect  +
mov esi ds:GetSystemMetrics +
push 0Bh  +
call esi  +
add [ebp+rc.left] eax +
sub [ebp+rc.right] eax +
push 20h  +
call esi  +
push 2Eh  +
mov [ebp+var_8] eax +
call esi  +
mov esi [ebp+rc.bottom] +
mov ebx eax +
lea eax [ebx+ebx] +
sub esi eax +
sub esi [ebp+rc.top] +
push edi  +
call ds:GetDC  +
mov [ebp+hDC] eax +
call sub_100C8EB  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_1009D54  +
push eax  +
push [ebp+hDC]  +
call ds:SelectObject  +
mov [ebp+var_14] eax +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_8] +
push 5A0049h  +
cdq   +
push esi  +
push [ebp+var_8]  +
sub eax edx +
sar eax 1 +
push ebx  +
sub ecx eax +
push ecx  +
push [ebp+hDC]  +
mov [ebp+var_C] eax +
call ds:PatBlt  +
push edi  +
call ds:SetCapture  +
jmp loc_1009ECA  +
mov eax [ebp+Msg.message] +
mov ecx 100h +
cmp eax ecx +
jz loc_1009DB4  +
cmp eax 104h +
jz loc_1009DB4  +
cmp eax 200h +
jb loc_1009DA5  +
cmp eax 20Eh +
jbe loc_1009DB4  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_1009ECA  +
cmp eax 202h +
jz loc_1009EE1  +
cmp eax 201h +
jz loc_1009EE1  +
cmp eax 204h +
jz loc_1009EE1  +
cmp eax ecx +
jnz loc_1009E34  +
mov eax [ebp+Msg.wParam] +
cmp eax 25h +
jnz loc_1009DEE  +
sub [ebp+Msg.pt.x] 2 +
mov [ebp+Msg.message] 200h +
jmp loc_1009E12  +
cmp eax 27h +
jnz loc_1009E00  +
add [ebp+Msg.pt.x] 2 +
mov [ebp+Msg.message] 200h +
jmp loc_1009E12  +
cmp eax 0Dh +
jz loc_1009EE1  +
cmp eax 1Bh +
jz loc_1009EE1  +
mov eax [ebp+rc.right] +
cmp [ebp+Msg.pt.x] eax +
jg loc_1009E22  +
mov eax [ebp+rc.left] +
cmp [ebp+Msg.pt.x] eax +
jge loc_1009E25  +
mov [ebp+Msg.pt.x] eax +
push [ebp+Msg.pt.y]  +
push [ebp+Msg.pt.x]  +
call ds:SetCursorPos  +
mov eax [ebp+Msg.message] +
cmp eax 200h +
jnz loc_1009ECA  +
lea eax [ebp+Msg.pt] +
push eax  +
push edi  +
call ds:ScreenToClient  +
mov edi [ebp+Msg.pt.x] +
cmp edi [ebp+rc.right] +
jle loc_1009E57  +
mov edi [ebp+rc.right] +
jmp loc_1009E5F  +
cmp edi [ebp+rc.left] +
jge loc_1009E62  +
mov edi [ebp+rc.left] +
mov [ebp+Msg.pt.x] edi +
mov eax [ebp+arg_8] +
cmp eax edi +
jge loc_1009E6E  +
mov [ebp+arg_8] eax +
jmp loc_1009E73  +
mov [ebp+arg_8] edi +
mov edi eax +
mov eax [ebp+var_C] +
sub [ebp+arg_8] eax +
mov ecx [ebp+arg_8] +
sub edi eax +
mov eax [ebp+var_8] +
add eax ecx +
cmp edi eax +
lea ecx [esi+ebx] +
push ecx  +
jge loc_1009E90  +
push eax  +
push ebx  +
push edi  +
jmp loc_1009E93  +
push edi  +
push ebx  +
push eax  +
push [ebp+hDC]  +
call ds:ExcludeClipRect  +
sub edi [ebp+arg_8] +
push 5A0049h  +
add edi [ebp+var_8] +
push esi  +
push edi  +
push ebx  +
push [ebp+arg_8]  +
push [ebp+hDC]  +
call ds:PatBlt  +
push 0  +
push [ebp+hDC]  +
call ds:SelectClipRgn  +
mov eax [ebp+Msg.pt.x] +
mov edi [ebp+hWnd] +
mov [ebp+arg_8] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
lea eax [ebp+Msg] +
push eax  +
call ds:GetMessageW  +
test eax eax +
jnz loc_1009D84  +
call ds:ReleaseCapture  +
mov edi [ebp+arg_8] +
sub edi [ebp+var_C] +
push 5A0049h  +
push esi  +
push [ebp+var_8]  +
push ebx  +
push edi  +
push [ebp+hDC]  +
call ds:PatBlt  +
cmp [ebp+var_10] 0 +
pop esi  +
pop ebx  +
jz loc_1009F1C  +
push [ebp+var_14]  +
push [ebp+hDC]  +
call ds:SelectObject  +
push eax  +
call ds:DeleteObject  +
push [ebp+hDC]  +
push [ebp+hWnd]  +
call ds:ReleaseDC  +
push [ebp+dwNewLong]  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call ds:SetWindowLongW  +
push 1  +
push [ebp+hWnd]  +
mov dword_101D0A0 edi +
call sub_1003C81  +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and [ebp+rc.left] 0 +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+rc.top] +
stos   +
stos   +
stos   +
push offset Info  +
lea eax [ebp+rc] +
push eax  +
push [ebp+hWnd]  +
call ds:GetEffectiveClientRect  +
push 20h  +
call ds:GetSystemMetrics  +
cdq   +
sub eax edx +
mov esi eax +
mov eax [ebp+rc.bottom] +
sub eax [ebp+rc.top] +
sar esi 1 +
add esi dword_101D0A0 +
cdq   +
sub eax edx +
mov edi eax +
lea eax [ebp+X] +
push eax  +
push [ebp+hWnd]  +
sar edi 1 +
mov [ebp+X] esi +
mov [ebp-4] edi +
call ds:ClientToScreen  +
push dword ptr [ebp-4]  +
push [ebp+X]  +
call ds:SetCursorPos  +
push 64h  +
push dword_101D054  +
call ds:LoadCursorW  +
push eax  +
call ds:SetCursor  +
mov ebx ds:ShowCursor +
push 1  +
call ebx  +
push 0  +
push edi  +
push esi  +
push 0  +
push [ebp+hWnd]  +
call sub_1009CC1  +
push 0  +
call ebx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
lea eax [esi-380h] +
xor ebx ebx +
push edi  +
mov edi [ebp+hWnd] +
cmp eax 7Fh +
ja loc_100A040  +
mov eax dword_101D09C +
cmp eax dword_101D090 +
jnz loc_100A039  +
push ebx  +
push esi  +
push edi  +
call sub_100C548  +
jmp loc_100A040  +
push esi  +
push edi  +
call sub_1010CED  +
mov eax 29Fh +
cmp esi eax +
jg loc_100A183  +
jz loc_100A17D  +
lea eax [esi-280h] +
cmp eax 1Eh +
ja loc_100A285  +
movzx eax ds:byte_100A2F9[eax] +
jmp ds:off_100A2BD[eax*4]  +
push edi  +
call sub_1011890  +
jmp loc_100A2AC  +
push edi  +
call sub_10115B0  +
jmp loc_100A2AC  +
push edi  +
call sub_100CEAA  +
jmp loc_100A2AC  +
push edi  +
call sub_100F411  +
jmp loc_100A2AC  +
push ebx  +
push ebx  +
push 10h  +
push edi  +
call ds:PostMessageW  +
jmp loc_100A2AC  +
push 1  +
push edi  +
call sub_100A859  +
jmp loc_100A2AC  +
push ebx  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push eax  +
push edi  +
call sub_100B5F4  +
jmp loc_100A2AC  +
push 1  +
push edi  +
call sub_101059B  +
jmp loc_100A2AC  +
push 3  +
jmp loc_100A0DB  +
mov eax dword_101D0B0 +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFBh +
add eax 5 +
push eax  +
push dword_101D098  +
mov dword_101D0B0 eax +
call ds:ShowWindow  +
push ebx  +
push edi  +
call sub_1003C81  +
jmp loc_100A2AC  +
push edi  +
call sub_1009F50  +
jmp loc_100A2AC  +
push edi  +
call sub_100BE3D  +
jmp loc_100A2AC  +
push 10h  +
call sub_1003915  +
pop ecx  +
push 64h  +
push dword_101D054  +
mov esi eax +
call ds:LoadIconW  +
push eax  +
push offset szOtherStuff  +
push esi  +
push edi  +
call ds:ShellAboutW  +
push esi  +
call ds:LocalFree  +
jmp loc_100A2AC  +
mov eax dword_101D090 +
cmp dword_101D09C eax +
jnz loc_100A171  +
mov eax dword_101D094 +
push eax  +
call ds:SetFocus  +
jmp loc_100A2AC  +
push ebx  +
jmp loc_100A0AE  +
mov eax 2B0h +
cmp esi eax +
jg loc_100A272  +
jz loc_100A26B  +
lea eax [esi-2A0h] +
cmp eax 9 +
ja loc_100A285  +
jmp ds:off_100A319[eax*4]  +
push edi  +
call sub_1011467  +
jmp loc_100A2AC  +
push edi  +
call sub_1010FD2  +
jmp loc_100A2AC  +
push 4  +
jmp loc_100A0DB  +
push 7  +
jmp loc_100A0DB  +
push 2  +
jmp loc_100A0DB  +
push edi  +
call sub_101000D  +
jmp loc_100A2AC  +
mov esi 104h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetWindowsDirectoryW  +
test eax eax +
jz loc_100A2AC  +
push ebx  +
push offset aHelp  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_100974A  +
test eax eax +
jl loc_100A2AC  +
push ebx  +
push offset aRegedit32_chmH  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_100974A  +
test eax eax +
jl loc_100A2AC  +
push ebx  +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
call ds:GetDesktopWindow  +
push eax  +
call sub_101A3C9  +
jmp loc_100A2AC  +
push ebx  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push eax  +
push edi  +
call sub_100BD6D  +
jmp loc_100A2AC  +
push edi  +
call sub_10087F9  +
jmp loc_100A2AC  +
push 0Bh  +
jmp loc_100A0DB  +
mov eax esi +
sub eax 300h +
jz loc_100A2A6  +
sub eax 200h +
jz loc_100A29E  +
dec eax  +
jz loc_100A296  +
cmp esi 501h +
jle loc_100A2AC  +
push esi  +
push edi  +
call sub_1009B4A  +
jmp loc_100A2AC  +
push edi  +
call sub_100979A  +
jmp loc_100A2AC  +
push edi  +
call sub_10082F2  +
jmp loc_100A2AC  +
push edi  +
call sub_100D480  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx dword_101D090 +
push esi  +
xor esi esi +
mov [ebp+var_4] ebx +
cmp [ebp+lParam] esi +
jnz loc_100A602  +
cmp dword_101D0DC esi +
jz loc_100A602  +
mov eax [ebp+arg_8] +
sub eax esi +
push edi  +
jz loc_100A5C5  +
dec eax  +
jz loc_100A499  +
dec eax  +
jz loc_100A462  +
dec eax  +
jnz loc_100A601  +
mov edi ds:SendMessageW +
push esi  +
push 9  +
mov esi 110Ah +
push esi  +
push ebx  +
call edi  +
push eax  +
mov [ebp+lParam] eax +
call sub_10086ED  +
push 0  +
push 0  +
push esi  +
push ebx  +
mov [ebp+arg_8] eax +
call edi  +
cmp [ebp+arg_8] eax +
jnz loc_100A454  +
push 0  +
push 0  +
push esi  +
push ebx  +
call edi  +
cmp [ebp+lParam] eax +
jz loc_100A454  +
xor eax eax +
jmp loc_100A457  +
xor eax eax +
inc eax  +
push eax  +
push 501h  +
jmp loc_100A5F8  +
mov eax dword_101D0B0 +
neg eax  +
sbb eax eax +
and eax 8 +
push eax  +
push 29Ch  +
push [ebp+hMenu]  +
call ds:CheckMenuItem  +
mov ecx dword_101D09C +
xor eax eax +
cmp ecx dword_101D090 +
setz al  +
push eax  +
push 2A7h  +
jmp loc_100A5F8  +
mov edi ds:SendMessageW +
push esi  +
push 9  +
mov esi 110Ah +
push esi  +
push ebx  +
call edi  +
push eax  +
push 3  +
push esi  +
push ebx  +
mov [ebp+lParam] eax +
call edi  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push 2A6h  +
push [ebp+hMenu]  +
call ds:EnableMenuItem  +
cmp dword_101D09C ebx +
jnz loc_100A539  +
push 0  +
push [ebp+hMenu]  +
call ds:GetMenuItemID  +
cmp eax 390h +
jnz loc_100A50D  +
lea ebx [eax+70h] +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call ds:DeleteMenu  +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call ds:DeleteMenu  +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call ds:DeleteMenu  +
mov ebx [ebp+var_4] +
push [ebp+lParam]  +
push [ebp+hMenu]  +
call sub_100B45C  +
push [ebp+lParam]  +
push 3  +
push esi  +
push ebx  +
call edi  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push 2A3h  +
push [ebp+hMenu]  +
call ds:EnableMenuItem  +
xor eax eax +
jmp loc_100A5B3  +
xor esi esi +
push esi  +
push [ebp+hMenu]  +
call ds:GetMenuItemID  +
cmp eax 390h +
jz loc_100A596  +
push esi  +
push esi  +
push 0C00h  +
push esi  +
push [ebp+hMenu]  +
mov esi ds:InsertMenuW +
call esi  +
push lpNewItem  +
mov ebx 400h +
push 395h  +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call esi  +
push dword_101D0C4  +
push 390h  +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call esi  +
push ebx  +
push 0  +
push [ebp+hMenu]  +
call ds:SetMenuDefaultItem  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword_101D094  +
call edi  +
push eax  +
push [ebp+hMenu]  +
call sub_100FD7A  +
push 2  +
pop eax  +
push eax  +
push [ebp+hMenu]  +
call ds:GetSubMenu  +
push eax  +
call sub_10085B3  +
jmp loc_100A601  +
push [ebp+hMenu]  +
call sub_1009C13  +
cmp dword_101D0E0 esi +
jz loc_100A601  +
mov edi ds:SendMessageW +
push esi  +
push esi  +
mov esi 110Ah +
push esi  +
push ebx  +
call edi  +
push eax  +
push 1  +
push esi  +
push ebx  +
call edi  +
neg eax  +
sbb eax eax +
inc eax  +
push eax  +
push 300h  +
push [ebp+hMenu]  +
call ds:EnableMenuItem  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr Data 1 +
push offset String2  +
push [ebp+lpString1]  +
jz loc_100A630  +
call ds:lstrcmpiW  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_100A63C  +
call ds:StrStrIW  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push 100h  +
push 0C5h  +
mov esi 47Eh +
push esi  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
push offset String2  +
push esi  +
push [ebp+hDlg]  +
call ds:SetDlgItemTextW  +
mov dword_105E024 edi +
mov eax Data +
test ds:dword_10054D4[edi] eax +
jz loc_100A6AD  +
mov esi ds:dword_10054D0[edi] +
push 1  +
push esi  +
push [ebp+hDlg]  +
call ds:CheckDlgButton  +
add esi 0FFFFFB80h +
cmp esi 2 +
ja loc_100A6AD  +
inc dword_105E024  +
add edi 8 +
cmp edi 20h +
jb loc_100A67D  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+nIDButton] +
lea eax [edi-480h] +
xor esi esi +
cmp eax 2 +
ja loc_100A701  +
cmp [ebp+arg_C] esi +
jnz loc_100A7B4  +
push edi  +
push [ebp+hDlg]  +
call ds:IsDlgButtonChecked  +
test eax eax +
jz loc_100A6F9  +
inc dword_105E024  +
jmp loc_100A725  +
dec dword_105E024  +
jmp loc_100A725  +
mov eax edi +
dec eax  +
jz loc_100A75F  +
dec eax  +
jz loc_100A7AA  +
sub eax 47Ch +
jnz loc_100A7B4  +
cmp [ebp+arg_C] 300h +
jnz loc_100A7B4  +
cmp dword_105E024 esi +
jbe loc_100A748  +
push esi  +
push esi  +
push 0Eh  +
push 47Eh  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
test eax eax +
jz loc_100A748  +
xor eax eax +
inc eax  +
jmp loc_100A74A  +
xor eax eax +
push eax  +
push 1  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_100A7B4  +
push 100h  +
push offset String2  +
push 47Eh  +
push [ebp+hDlg]  +
call ds:GetDlgItemTextW  +
xor esi esi +
push ds:dword_10054D0[esi]  +
push [ebp+hDlg]  +
call ds:IsDlgButtonChecked  +
test eax eax +
mov eax ds:dword_10054D4[esi] +
jz loc_100A79A  +
or Data eax +
jmp loc_100A7A2  +
not eax  +
and Data eax +
add esi 8 +
cmp esi 20h +
jb loc_100A779  +
push edi  +
push [ebp+hDlg]  +
call ds:EndDialog  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_105E020 0 +
jz loc_100A7D9  +
push [ebp+hDlg]  +
call sub_100C9B0  +
test eax eax +
jnz loc_100A7C4  +
mov eax dword_105E020 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 10h +
jz loc_100A802  +
sub eax 100h +
jz loc_100A809  +
dec eax  +
jz loc_100A802  +
xor eax eax +
jmp loc_100A80C  +
and dword_105E020 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_100A842  +
dec eax  +
jnz loc_100A83E  +
mov eax [ebp+arg_8] +
shr eax 10h +
push eax  +
push [ebp+arg_C]  +
movzx eax word ptr [ebp+arg_8] +
push eax  +
push [ebp+hDlg]  +
call sub_100A6C3  +
xor eax eax +
jmp loc_100A850  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+hDlg]  +
call sub_100A645  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6FCh +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hWndParent] +
push ebx  +
xor ebx ebx +
mov [ebp+hWnd] eax +
mov [ebp+var_630] ebx +
mov [ebp+var_638] ebx +
mov [ebp+var_62C] ebx +
mov [ebp+hDlg] ebx +
cmp [ebp+arg_4] ebx +
jnz loc_100A8A0  +
cmp String2 bx +
jnz loc_100A8BE  +
push ebx  +
push offset sub_100A815  +
push eax  +
push 6Ah  +
push dword_101D054  +
call ds:DialogBoxParamW  +
cmp eax 1 +
jnz loc_100B0CD  +
push esi  +
push edi  +
push 1  +
call sub_1003BEF  +
test byte ptr Data 0Ch +
mov esi ds:SendMessageW +
jz loc_100AA79  +
push 1  +
push 0FFFFFFFFh  +
mov edi 100Ch +
push edi  +
push dword_101D094  +
call esi  +
lea ecx [ebp+ValueName] +
push ebx  +
mov [ebp+var_6A4] eax +
mov [ebp+var_6A0] ebx +
mov [ebp+lParam] 1 +
mov [ebp+var_694] ecx +
mov [ebp+var_690] 100h +
push eax  +
jmp loc_100AA61  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 104Bh  +
push dword_101D094  +
call esi  +
test byte ptr Data 4 +
jz loc_100A951  +
lea eax [ebp+ValueName] +
push eax  +
call sub_100A60D  +
test eax eax +
jnz loc_100AFBE  +
test byte ptr Data 8 +
jz loc_100AA5A  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
test eax eax +
jnz loc_100AA5A  +
mov eax [ebp+Type] +
cmp eax 1 +
jz loc_100A9A1  +
cmp eax 2 +
jz loc_100A9A1  +
cmp eax 7 +
jnz loc_100AA5A  +
mov ecx [ebp+cbData] +
push 2  +
pop eax  +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+lpString1] eax +
cmp eax ebx +
jz loc_100AB90  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpString1]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
mov [ebp+dwIndex] ebx +
call sub_1003313  +
test eax eax +
jnz loc_100AA42  +
cmp [ebp+Type] 7 +
jnz loc_100AA31  +
mov eax [ebp+lpString1] +
mov [ebp+var_640] eax +
mov eax [ebp+cbData] +
mov [ebp+var_63C] eax +
lea eax [ebp+var_644] +
push eax  +
call sub_100FE4B  +
test eax eax +
jz loc_100AA31  +
mov eax [ebp+var_640] +
mov [ebp+lpString1] eax +
push [ebp+lpString1]  +
call sub_100A60D  +
mov [ebp+dwIndex] eax +
push [ebp+lpString1]  +
call ds:LocalFree  +
cmp [ebp+dwIndex] ebx +
jnz loc_100AFBE  +
push ebx  +
push [ebp+var_6A4]  +
push edi  +
push dword_101D094  +
call esi  +
mov [ebp+var_6A4] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100A91F  +
push ebx  +
push offset sub_100A7E7  +
push [ebp+hWnd]  +
xor edi edi +
push 6Dh  +
push dword_101D054  +
inc edi  +
mov dword_105E020 edi +
call ds:CreateDialogParamW  +
mov [ebp+hDlg] eax +
cmp eax ebx +
jz loc_100AAC5  +
push ebx  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
push ebx  +
push ebx  +
push 0Bh  +
push dword_101D090  +
mov dword_101D0E4 edi +
call esi  +
push ebx  +
push 9  +
xor eax eax +
mov edi 110Ah +
push edi  +
push dword_101D090  +
mov [ebp+String1] ax +
lea eax [ebp+SubKey] +
mov [ebp+lpString1] ebx +
mov [ebp+var_628] ebx +
mov [ebp+var_66C] 49h +
mov [ebp+var_65C] eax +
mov [ebp+var_658] 100h +
call esi  +
mov [ebp+var_668] eax +
lea eax [ebp+var_66C] +
push eax  +
push ebx  +
push 113Eh  +
push dword_101D090  +
call esi  +
push [ebp+hDlg]  +
call sub_100A7BF  +
test eax eax +
jz loc_100B032  +
cmp [ebp+var_64C] ebx +
jz loc_100ABE9  +
push [ebp+var_668]  +
push 4  +
push edi  +
push dword_101D090  +
call esi  +
cmp eax ebx +
jnz loc_100ABFE  +
push [ebp+var_668]  +
push dword_101D090  +
call sub_100B4CD  +
test eax eax +
jz loc_100ABE9  +
push [ebp+var_668]  +
push 4  +
push edi  +
push dword_101D090  +
call esi  +
cmp eax ebx +
jz loc_100ABE9  +
inc [ebp+lpString1]  +
jmp loc_100ABFE  +
mov [ebp+var_630] 1 +
mov [ebp+dwIndex] 132h +
jmp loc_100B032  +
push [ebp+var_668]  +
push 3  +
push edi  +
push dword_101D090  +
call esi  +
mov [ebp+var_668] eax +
cmp eax ebx +
jz loc_100B028  +
cmp [ebp+lpString1] ebx +
jz loc_100ABE9  +
dec [ebp+lpString1]  +
push eax  +
push 8001h  +
push 1102h  +
push dword_101D090  +
call esi  +
push [ebp+var_668]  +
push 1  +
push edi  +
push dword_101D090  +
call esi  +
cmp eax ebx +
jz loc_100ABA9  +
mov [ebp+var_668] eax +
lea eax [ebp+var_66C] +
push eax  +
push ebx  +
push 113Eh  +
push dword_101D090  +
call esi  +
test byte ptr Data 2 +
jz loc_100AC36  +
lea eax [ebp+SubKey] +
push eax  +
call sub_100A60D  +
test eax eax +
jnz loc_100AF2F  +
test byte ptr Data 0Ch +
jz loc_100AEDE  +
push ebx  +
push 100h  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+var_668]  +
push dword_101D090  +
call sub_1002C60  +
cmp eax ebx +
jz loc_100AEDE  +
lea ecx [ebp+hKey] +
push ecx  +
push 1  +
push ebx  +
lea ecx [ebp+SubKey] +
push ecx  +
push eax  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100AEDE  +
mov eax Data +
and eax 0Dh +
cmp al 5 +
jnz loc_100ACD6  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset String2  +
push [ebp+hKey]  +
call sub_1003313  +
test eax eax +
jnz loc_100AECA  +
push offset String2  +
push 100h  +
lea eax [ebp+String1] +
push eax  +
call sub_1002D3F  +
mov [ebp+var_628] 1 +
jmp loc_100AECA  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
mov [ebp+dwIndex] ebx +
push ebx  +
jmp loc_100AEAC  +
inc [ebp+dwIndex]  +
test byte ptr Data 8 +
jz loc_100AD4A  +
cmp [ebp+Type] 1 +
jz loc_100AD2E  +
cmp [ebp+Type] 2 +
jz loc_100AD2E  +
cmp [ebp+Type] 7 +
jz loc_100AD2E  +
xor eax eax +
jmp loc_100AD31  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+lpData] eax +
jmp loc_100AD50  +
mov [ebp+lpData] ebx +
cmp [ebp+lpData] ebx +
jnz loc_100AD65  +
test byte ptr Data 8 +
jnz loc_100AB90  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call sub_1003313  +
test eax eax +
jnz loc_100AE74  +
cmp [ebp+lpData] ebx +
jz loc_100ADD9  +
cmp [ebp+Type] 7 +
jnz loc_100ADD9  +
mov eax [ebp+lpData] +
mov [ebp+var_640] eax +
mov eax [ebp+cbData] +
mov [ebp+var_63C] eax +
lea eax [ebp+var_644] +
push eax  +
call sub_100FE4B  +
test eax eax +
jz loc_100ADD9  +
mov eax [ebp+var_640] +
mov [ebp+lpData] eax +
test byte ptr Data 4 +
jz loc_100ADF2  +
lea eax [ebp+ValueName] +
push eax  +
call sub_100A60D  +
test eax eax +
jnz loc_100AE25  +
test byte ptr Data 8 +
jz loc_100AE74  +
cmp [ebp+Type] 1 +
jz loc_100AE16  +
cmp [ebp+Type] 2 +
jz loc_100AE16  +
cmp [ebp+Type] 7 +
jnz loc_100AE74  +
push [ebp+lpData]  +
call sub_100A60D  +
test eax eax +
jz loc_100AE74  +
lea eax [ebp+ValueName] +
push eax  +
lea eax [ebp+String1] +
cmp [ebp+var_628] ebx +
jz loc_100AE5F  +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jle loc_100AE74  +
lea eax [ebp+ValueName] +
push eax  +
push 100h  +
lea eax [ebp+String1] +
push eax  +
call sub_1002D3F  +
jmp loc_100AE74  +
push 100h  +
push eax  +
call sub_1002D3F  +
mov [ebp+var_628] 1 +
cmp [ebp+lpData] ebx +
jz loc_100AE88  +
push [ebp+lpData]  +
call ds:LocalFree  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
mov [ebp+cbValueName] 100h +
call ds:RegEnumValueW  +
test eax eax +
jz loc_100AD00  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
cmp [ebp+var_628] ebx +
jnz loc_100AF2F  +
push [ebp+hDlg]  +
call sub_100A7BF  +
test eax eax +
jnz loc_100AB39  +
cmp [ebp+lpString1] ebx +
jz loc_100B032  +
mov eax [ebp+var_668] +
push eax  +
push 3  +
push edi  +
push dword_101D090  +
call esi  +
dec [ebp+lpString1]  +
jnz loc_100AF03  +
push eax  +
push 8001h  +
push 1102h  +
push dword_101D090  +
call esi  +
jmp loc_100B032  +
push [ebp+var_668]  +
push ebx  +
push 1114h  +
push dword_101D090  +
call esi  +
push [ebp+var_668]  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
cmp [ebp+var_628] ebx +
jnz loc_100AF70  +
mov eax dword_101D090 +
mov [ebp+var_62C] eax +
jmp loc_100B032  +
push [ebp+hWnd]  +
call sub_100BE1B  +
cmp [ebp+String1] bx +
jnz loc_100AF8C  +
mov [ebp+var_6A4] ebx +
jmp loc_100AFBE  +
lea eax [ebp+String1] +
mov [ebp+var_6BC] eax +
lea eax [ebp+var_6C0] +
push eax  +
push 0FFFFFFFFh  +
push 1053h  +
push dword_101D094  +
mov [ebp+var_6C0] 2 +
call esi  +
mov [ebp+var_6A4] eax +
lea eax [ebp+var_6FC] +
push eax  +
push 0FFFFFFFFh  +
mov edi 102Bh +
push edi  +
push dword_101D094  +
mov [ebp+var_6EC] 3 +
mov [ebp+var_6F0] ebx +
call esi  +
push 3  +
pop eax  +
mov [ebp+var_6EC] eax +
mov [ebp+var_6F0] eax +
lea eax [ebp+var_6FC] +
push eax  +
push [ebp+var_6A4]  +
push edi  +
push dword_101D094  +
call esi  +
push ebx  +
push [ebp+var_6A4]  +
push 1013h  +
push dword_101D094  +
call esi  +
mov eax dword_101D094 +
jmp loc_100AF65  +
mov [ebp+var_638] 1 +
push ebx  +
call sub_1003BEF  +
cmp [ebp+hDlg] ebx +
jz loc_100B06D  +
push ebx  +
push 1  +
push 0Bh  +
push dword_101D090  +
mov dword_101D0E4 ebx +
call esi  +
push 1  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
push [ebp+hDlg]  +
call ds:DestroyWindow  +
pop edi  +
pop esi  +
cmp [ebp+var_62C] ebx +
jz loc_100B083  +
push [ebp+var_62C]  +
call ds:SetFocus  +
cmp [ebp+var_630] ebx +
jz loc_100B0AB  +
movzx eax word ptr [ebp+dwIndex] +
push 10h  +
push 10h  +
push eax  +
push [ebp+hWnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
cmp [ebp+var_638] ebx +
jz loc_100B0CD  +
push 40h  +
push 10h  +
push 29h  +
push [ebp+hWnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
xor eax eax +
cmp dword_101D0D4 eax +
jnz loc_100B0EE  +
inc eax  +
jmp locret_100B0F8  +
mov dword_105D4D4 1 +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push dword ptr [ebp+0Ch]  +
call ds:lstrcmpiW  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx dword_101D090 +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 4  +
pop eax  +
push [ebp+arg_4]  +
mov [ebp+lParam] eax +
push eax  +
mov edi 110Ah +
jmp loc_100B15E  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push ebx  +
call esi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push [ebp+var_24]  +
push 1  +
push edi  +
push ebx  +
call esi  +
mov [ebp+var_24] eax +
test eax eax +
jnz loc_100B142  +
push [ebp+arg_4]  +
push 0  +
push 1101h  +
push ebx  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax [ebp+arg_4] +
mov [ebp+lParam] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_2C] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_18] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 1132h  +
push [ebp+hWnd]  +
mov [ebp+var_3C] 67h +
mov [ebp+var_24] 2 +
mov [ebp+var_20] 3 +
call ds:SendMessageW  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 9  +
xor esi esi +
push esi  +
push [ebp+hKey]  +
push [ebp+cSubKeys]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100B223  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cSubKeys] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jnz loc_100B21A  +
cmp [ebp+cSubKeys] esi +
jbe loc_100B21A  +
inc esi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
mov dword_101D0D4 1 +
push 0  +
push 1141h  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
and dword_101D0D4 0 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_100B2AE  +
mov esi ds:SendMessageW +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push [ebp+hWnd]  +
mov [ebp+var_24] edi +
mov [ebp+lParam] 4 +
call esi  +
cmp [ebp+var_4] 0 +
jnz loc_100B2AE  +
push edi  +
push 3  +
push 110Ah  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jz loc_100B2AE  +
xor eax eax +
inc eax  +
jmp loc_100B2B0  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_0] +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov [ebp+var_28] 4 +
mov edi 113Eh +
jmp loc_100B2EE  +
push [ebp+lParam]  +
push 3  +
push 110Ah  +
push dword_101D090  +
call esi  +
mov [ebp+lParam] eax +
lea eax [ebp+var_28] +
push eax  +
push 0  +
push edi  +
push dword_101D090  +
call esi  +
cmp [ebp+var_4] 0 +
jz loc_100B2DC  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_4] +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+arg_0] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_14] eax +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push dword_101D090  +
mov [ebp+lParam] 1 +
mov [ebp+var_24] ecx +
call ds:SendMessageW  +
mov eax [ebp+var_18] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push dword_101D0CC  +
push [ebp+arg_8]  +
push [ebp+lpSubKey]  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+phkResult] +
push eax  +
push 0  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax 2 +
jz loc_100B3A4  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
inc esi  +
cmp esi 64h +
jb loc_100B367  +
cmp esi 64h +
jnz loc_100B3C9  +
push [ebp+lpSubKey]  +
push 10h  +
push 0A0h  +
push 0A3h  +
push [ebp+arg_0]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
xor eax eax +
cmp esi 64h +
setnz al  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 408h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
push 200h  +
lea eax [ebp+lpSubKey] +
push eax  +
xor edi edi +
push 0  +
inc edi  +
call sub_100B35D  +
test eax eax +
jz loc_100B445  +
lea eax [ebp+hKey] +
push eax  +
lea eax [ebp+lpSubKey] +
push eax  +
push esi  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_100B445  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
lea eax [ebp+lpSubKey] +
push eax  +
push esi  +
xor edi edi +
call ds:RegDeleteKeyW  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_4]  +
push dword_101D090  +
call sub_100B261  +
mov edi ds:EnableMenuItem +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
push esi  +
push 391h  +
push [ebp+hMenu]  +
call edi  +
push esi  +
push 392h  +
push [ebp+hMenu]  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push dword_101D090  +
call sub_100B261  +
test eax eax +
jz loc_100B4C4  +
push [ebp+lParam]  +
push dword_101D090  +
call sub_100B22F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+hWnd] +
push edi  +
mov edi [ebp+lParam] +
push edi  +
push 3  +
push 110Ah  +
push ebx  +
mov [ebp+var_210] edi +
call ds:SendMessageW  +
test eax eax +
jnz loc_100B509  +
inc eax  +
jmp loc_100B5DF  +
push esi  +
xor esi esi +
push esi  +
push 100h  +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push ebx  +
call sub_1002C60  +
lea ecx [ebp+cSubKeys] +
push ecx  +
push 8  +
push esi  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_100B543  +
xor eax eax +
jmp loc_100B5DE  +
lea eax [ebp+hKey] +
push eax  +
call ds:lstrlenW  +
mov edi 0FFh +
sub edi eax +
push edi  +
lea eax [ebp+hKey] +
push eax  +
mov [ebp+var_20C] esi +
push esi  +
mov esi ds:RegEnumKeyW +
jmp loc_100B5AF  +
inc [ebp+var_20C]  +
push 0  +
lea eax [ebp+hKey] +
push eax  +
push [ebp+cSubKeys]  +
call sub_100B1DA  +
push eax  +
lea eax [ebp+hKey] +
push eax  +
push 0FFFF0001h  +
push [ebp+var_210]  +
push ebx  +
call sub_100B182  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push [ebp+var_20C]  +
push [ebp+cSubKeys]  +
call esi  +
test eax eax +
jz loc_100B56E  +
push [ebp+cSubKeys]  +
call ds:RegCloseKey  +
push [ebp+var_210]  +
push 0  +
push 1113h  +
push ebx  +
call ds:SendMessageW  +
xor eax eax +
inc eax  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 444h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push esi  +
mov [ebp+var_414] eax +
mov ebx 200h +
push ebx  +
lea eax [ebp+lpSubKey] +
push eax  +
push edi  +
push dword_101D090  +
mov [ebp+var_408] esi +
call sub_1002C60  +
mov [ebp+hKey] eax +
lea eax [ebp+lpSubKey] +
push eax  +
call ds:lstrlenW  +
mov [ebp+var_418] eax +
lea eax [ebp+phkResult] +
push eax  +
push 4  +
push esi  +
lea eax [ebp+lpSubKey] +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
mov [ebp+hKey] eax +
mov [ebp+var_440] edi +
cmp eax esi +
jnz loc_100B80E  +
lea eax [ebp+lParam] +
push eax  +
push esi  +
mov esi ds:SendMessageW +
push 113Eh  +
push dword_101D090  +
mov [ebp+lParam] 48h +
call esi  +
and [ebp+hKey] 0 +
cmp [ebp+var_424] 0 +
jnz loc_100B6C5  +
mov [ebp+hKey] 1 +
jmp loc_100B6DE  +
test [ebp+var_43C] 20h +
jnz loc_100B6DE  +
push edi  +
push 2  +
push 1102h  +
push dword_101D090  +
call esi  +
push [ebp+phkResult]  +
lea eax [ebp+lpSubKey] +
push ebx  +
push eax  +
push [ebp+var_414]  +
call sub_100B35D  +
mov ebx ds:RegCloseKey +
test eax eax +
jz loc_100B7F8  +
lea eax [ebp+lpSubKey] +
push eax  +
call ds:lstrlenW  +
mov ecx [ebp+var_418] +
lea eax [eax+ecx+1] +
cmp eax 100h +
jnb loc_100B7EC  +
lea eax [ebp+var_41C] +
push eax  +
lea eax [ebp+lpSubKey] +
push eax  +
push [ebp+phkResult]  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_100B7E0  +
push [ebp+var_41C]  +
call ebx  +
xor eax eax +
cmp [ebp+hKey] eax +
jz loc_100B7A6  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 113Fh  +
push dword_101D090  +
mov [ebp+lParam] 40h +
mov [ebp+var_424] 1 +
call esi  +
push edi  +
push 2  +
push 1102h  +
push dword_101D090  +
call esi  +
push edi  +
push 4  +
push 110Ah  +
push dword_101D090  +
call esi  +
jmp loc_100B7C0  +
push eax  +
push eax  +
lea eax [ebp+lpSubKey] +
push eax  +
push 0FFFF0002h  +
push edi  +
push dword_101D090  +
call sub_100B182  +
mov edi eax +
push edi  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
push edi  +
push dword_101D090  +
call sub_100B22F  +
jmp loc_100B802  +
mov [ebp+var_408] 0A2h +
jmp loc_100B802  +
mov [ebp+var_408] 43h +
jmp loc_100B802  +
mov [ebp+var_408] 0A3h +
push [ebp+phkResult]  +
call ebx  +
xor esi esi +
jmp loc_100B862  +
lea eax [ebp+lpSubKey] +
mov [ebp+var_434] eax +
lea eax [ebp+lParam] +
push eax  +
push esi  +
push 113Eh  +
push dword_101D090  +
mov [ebp+lParam] 1 +
mov [ebp+var_430] ebx +
call ds:SendMessageW  +
cmp [ebp+hKey] 5 +
jnz loc_100B858  +
mov [ebp+var_408] 0A4h +
jmp loc_100B86A  +
mov [ebp+var_408] 0A1h +
cmp [ebp+var_408] esi +
jz loc_100B894  +
lea eax [ebp+lpSubKey] +
push eax  +
movzx eax word ptr [ebp+var_408] +
push 10h  +
push 0A0h  +
push eax  +
push [ebp+var_414]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 660h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
mov [ebp+var_62C] eax +
push esi  +
lea eax [ebp+var_634] +
push eax  +
mov [ebp+cbClass] esi +
mov [ebp+var_60C] esi +
call ds:RtlInitUnicodeString  +
mov eax dword_101D090 +
mov dword_105D4D4 esi +
mov [ebp+hWnd] eax +
cmp [edi+1Ch] esi +
jnz loc_100B906  +
xor eax eax +
jmp loc_100BD30  +
push ebx  +
push esi  +
push 200h  +
lea ecx [ebp+SubKey] +
push ecx  +
push dword ptr [edi+10h]  +
push eax  +
call sub_1002C60  +
mov ebx ds:lstrlenW +
mov [ebp+hKey] eax +
lea eax [ebp+SubKey] +
push eax  +
call ebx  +
cmp eax 100h +
jl loc_100B941  +
push 43h  +
pop ebx  +
jmp loc_100BCC8  +
push dword ptr [edi+10h]  +
call sub_10086ED  +
xor ecx ecx +
cmp eax dword_101D0E8 +
setnz cl  +
mov [ebp+var_620] ecx +
cmp ecx esi +
jz loc_100B97B  +
push 1  +
push offset aSesecuritypriv  +
call sub_100CC01  +
mov [ebp+var_60C] eax +
cmp eax esi +
jz loc_100B97B  +
mov eax offset __ImageBase +
jmp loc_100B97D  +
xor eax eax +
lea ecx [ebp+handle] +
push ecx  +
or eax 2000000h +
push eax  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_100B9AA  +
push 42h  +
pop ebx  +
jmp loc_100BCB5  +
lea eax [ebp+SubKey] +
push eax  +
push 100h  +
lea eax [ebp+String] +
push eax  +
call sub_1002D3F  +
push 5Ch  +
push esi  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
cmp eax esi +
jz loc_100B9DA  +
inc eax  +
inc eax  +
jmp loc_100B9E0  +
lea eax [ebp+String] +
xor ecx ecx +
mov [ebp+lpStart] eax +
mov [eax] cx +
lea eax [ebp+String] +
push eax  +
call ebx  +
push dword ptr [edi+1Ch]  +
mov [ebp+var_638] eax +
call ebx  +
mov ecx [ebp+var_638] +
add ecx eax +
mov eax 100h +
cmp ecx eax +
jl loc_100BA17  +
push 43h  +
jmp loc_100BCA8  +
mov ecx [ebp+lpStart] +
push dword ptr [edi+1Ch]  +
lea edx [ebp+String] +
sub ecx edx +
sar ecx 1 +
sub eax ecx +
push eax  +
push [ebp+lpStart]  +
call sub_1002D3F  +
push 5Ch  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100BA51  +
push 45h  +
jmp loc_100BCA8  +
cmp [ebp+String] si +
jnz loc_100BA61  +
push 46h  +
jmp loc_100BCA8  +
lea eax [ebp+var_610] +
push eax  +
push 1  +
push esi  +
lea eax [ebp+String] +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100BA95  +
push [ebp+var_610]  +
call ds:RegCloseKey  +
push 44h  +
jmp loc_100BCA8  +
cmp [ebp+var_620] esi +
jnz loc_100BAE6  +
push dword ptr [edi+1Ch]  +
lea eax [ebp+var_634] +
push eax  +
call ds:RtlCreateUnicodeString  +
test al al +
jz loc_100BCA6  +
push dword ptr [edi+1Ch]  +
push esi  +
push [ebp+handle]  +
call ds:RegRenameKey  +
test eax eax +
lea eax [ebp+var_634] +
push eax  +
jz loc_100BADB  +
call ds:RtlFreeUnicodeString  +
jmp loc_100BCA6  +
call ds:RtlFreeUnicodeString  +
jmp loc_100BC10  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbClass] +
push eax  +
push esi  +
push [ebp+handle]  +
call ds:RegQueryInfoKeyW  +
cmp eax 0EAh +
jnz loc_100BB4E  +
mov eax [ebp+cbClass] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
cmp ebx esi +
jz loc_100BB50  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbClass] +
push eax  +
push ebx  +
push [ebp+handle]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jz loc_100BB50  +
push ebx  +
call ds:LocalFree  +
jmp loc_100BCA6  +
mov ebx esi +
push [ebp+handle]  +
call sub_100B3DB  +
mov ecx [ebp+var_60C] +
push esi  +
neg ecx  +
sbb ecx ecx +
lea edx [ebp+var_610] +
push edx  +
push esi  +
and ecx offset __ImageBase +
or ecx 20C0000h +
push ecx  +
push eax  +
push ebx  +
push esi  +
lea eax [ebp+String] +
push eax  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
mov [ebp+var_61C] eax +
cmp ebx esi +
jz loc_100BBA2  +
push ebx  +
call ds:LocalFree  +
cmp [ebp+var_61C] esi +
jnz loc_100BCA6  +
xor eax eax +
cmp [ebp+var_60C] esi +
setnz al  +
push eax  +
push [ebp+var_610]  +
push [ebp+handle]  +
call sub_100CC81  +
test eax eax +
jz loc_100BC9A  +
xor eax eax +
cmp [ebp+var_60C] esi +
setnz al  +
push eax  +
push [ebp+var_610]  +
push [ebp+handle]  +
call sub_100CD3F  +
test eax eax +
jz loc_100BC9A  +
push [ebp+handle]  +
call ds:RegCloseKey  +
mov eax [ebp+var_610] +
mov [ebp+handle] eax +
push esi  +
push 9  +
push 110Ah  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
cmp eax [edi+10h] +
jnz loc_100BC55  +
push phkResult  +
call ds:RegCloseKey  +
mov eax [ebp+handle] +
push esi  +
push esi  +
push 401h  +
push [ebp+var_62C]  +
mov phkResult eax +
call ds:PostMessageW  +
jmp loc_100BC61  +
push [ebp+handle]  +
call ds:RegCloseKey  +
cmp [ebp+var_620] esi +
jz loc_100BC92  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call sub_100CB08  +
test eax eax +
jnz loc_100BCA6  +
cmp [ebp+var_60C] esi +
jz loc_100BC92  +
push esi  +
push offset aSesecuritypriv  +
call sub_100CC01  +
xor eax eax +
inc eax  +
jmp loc_100BD2F  +
push [ebp+var_610]  +
call ds:RegCloseKey  +
push 42h  +
pop ebx  +
push [ebp+handle]  +
call ds:RegCloseKey  +
cmp [ebp+var_60C] esi +
jz loc_100BCC8  +
push esi  +
push offset aSesecuritypriv  +
call sub_100CC01  +
mov eax [edi+10h] +
mov [ebp+var_65C] eax +
lea eax [ebp+SubKey] +
mov [ebp+var_650] eax +
lea eax [ebp+lParam] +
push eax  +
push esi  +
push 113Eh  +
push [ebp+hWnd]  +
mov [ebp+lParam] 1 +
mov [ebp+var_64C] 200h +
call ds:SendMessageW  +
lea eax [ebp+SubKey] +
push eax  +
push 10h  +
movzx eax bx +
push 40h  +
push eax  +
push [ebp+var_62C]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 1  +
push 200h  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
push dword_101D090  +
call sub_1002C60  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
push edi  +
lea esi [eax+eax+2] +
call ds:OpenClipboard  +
test eax eax +
jz loc_100BE06  +
push esi  +
push 2002h  +
call ds:GlobalAlloc  +
mov edi eax +
test edi edi +
jz loc_100BE00  +
push edi  +
call ds:GlobalLock  +
push esi  +
lea ecx [ebp+String] +
push ecx  +
push eax  +
call memcpy  +
add esp 0Ch +
push edi  +
call ds:GlobalUnlock  +
call ds:EmptyClipboard  +
push edi  +
push 0Dh  +
call ds:SetClipboardData  +
call ds:CloseClipboard  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+hWnd]  +
call ds:KillTimer  +
and dword_101D0AC 0 +
pop ebp  +
jmp sub_1003AD2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 278h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_224] eax +
call ds:GetProcessHeap  +
push eax  +
push 10h  +
call ds:COMCTL32_340  +
xor ebx ebx +
mov [ebp+var_214] eax +
cmp eax ebx +
jz loc_100C35B  +
push esi  +
mov esi dword_101D090 +
push edi  +
push 1  +
mov [ebp+hWnd] esi +
call sub_1003BEF  +
push ebx  +
push ebx  +
push 0Bh  +
push esi  +
mov esi ds:SendMessageW +
call esi  +
push ebx  +
push 9  +
mov edi 110Ah +
push edi  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_250] eax +
lea eax [ebp+String1] +
push ebx  +
mov [ebp+var_278] 1 +
mov [ebp+var_268] eax +
mov [ebp+var_264] 100h +
mov [ebp+lParam] 48h +
mov [ebp+var_240] ebx +
push ebx  +
push edi  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_248] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
push ebx  +
push 100h  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_248]  +
push [ebp+hWnd]  +
call sub_1002C60  +
test [ebp+var_244] 20h +
mov [ebp+cSubKeys] eax +
jz loc_100C289  +
cmp eax ebx +
jz loc_100C27C  +
lea ecx [ebp+hKey] +
push ecx  +
push 8  +
push ebx  +
lea ecx [ebp+String1] +
push ecx  +
push eax  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100C27C  +
push [ebp+var_248]  +
push ebx  +
push 1113h  +
push [ebp+hWnd]  +
call esi  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrlenW  +
mov ecx 0FFh +
sub ecx eax +
push ecx  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+cbName] ecx +
mov [ebp+dwIndex] ebx +
push ebx  +
jmp loc_100BFED  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+lpString2] +
push eax  +
mov [ebp+lpString2] ebx +
call ds:COMCTL32_236  +
push [ebp+lpString2]  +
push [ebp+dwIndex]  +
push [ebp+var_214]  +
call ds:COMCTL32_334  +
push [ebp+cbName]  +
inc [ebp+dwIndex]  +
lea eax [ebp+String1] +
push eax  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
call ds:RegEnumKeyW  +
test eax eax +
jz loc_100BFA2  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push ebx  +
push offset loc_100B100  +
push [ebp+var_214]  +
call ds:COMCTL32_338  +
cmp [ebp+dwIndex] ebx +
jnz loc_100C052  +
push [ebp+var_214]  +
call ds:COMCTL32_337  +
push [ebp+var_248]  +
push 8001h  +
push 1102h  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_22C] ebx +
jmp loc_100C2BD  +
push [ebp+var_248]  +
dec [ebp+dwIndex]  +
mov eax [ebp+var_214] +
mov eax [eax+4] +
mov ecx [ebp+dwIndex] +
mov eax [eax+ecx*4] +
push 4  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+lpString2] eax +
call esi  +
mov [ebp+var_274] eax +
cmp eax ebx +
jz loc_100C0A0  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
cmp [ebp+dwIndex] ebx +
jl loc_100C22D  +
cmp [ebp+var_274] ebx +
jz loc_100C1C2  +
push [ebp+lpString2]  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrcmpiW  +
cmp eax ebx +
jnz loc_100C101  +
push [ebp+var_274]  +
push 1  +
push edi  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_274] eax +
cmp eax ebx +
jz loc_100C132  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
jmp loc_100C132  +
jle loc_100C169  +
push ebx  +
push [ebp+lpString2]  +
push [ebp+cSubKeys]  +
call sub_100B1DA  +
push eax  +
push [ebp+lpString2]  +
push 0FFFF0003h  +
push [ebp+var_248]  +
push [ebp+hWnd]  +
call sub_100B182  +
push ebx  +
lea eax [ebp+lpString2] +
push eax  +
call ds:COMCTL32_236  +
dec [ebp+dwIndex]  +
js loc_100C22D  +
mov eax [ebp+var_214] +
mov eax [eax+4] +
mov ecx [ebp+dwIndex] +
mov eax [eax+ecx*4] +
mov [ebp+lpString2] eax +
jmp loc_100C0AC  +
push [ebp+var_274]  +
push 1  +
push edi  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_274]  +
mov [ebp+cbName] eax +
push ebx  +
push 1101h  +
push [ebp+hWnd]  +
call esi  +
mov eax [ebp+cbName] +
mov [ebp+var_274] eax +
cmp eax ebx +
jz loc_100C0AC  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
jmp loc_100C0AC  +
cmp [ebp+dwIndex] ebx +
jl loc_100C22D  +
push ebx  +
push [ebp+lpString2]  +
jmp loc_100C1ED  +
mov eax [ebp+var_214] +
mov eax [eax+4] +
mov ecx [ebp+dwIndex] +
mov eax [eax+ecx*4] +
push ebx  +
mov [ebp+lpString2] eax +
push eax  +
push [ebp+cSubKeys]  +
call sub_100B1DA  +
push eax  +
push [ebp+lpString2]  +
push 0FFFF0003h  +
push [ebp+var_248]  +
push [ebp+hWnd]  +
call sub_100B182  +
push ebx  +
lea eax [ebp+lpString2] +
push eax  +
call ds:COMCTL32_236  +
dec [ebp+dwIndex]  +
js loc_100C270  +
jmp loc_100C1D3  +
cmp [ebp+var_274] ebx +
jz loc_100C270  +
push [ebp+var_274]  +
push 1  +
push edi  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_274]  +
mov [ebp+cbName] eax +
push ebx  +
push 1101h  +
push [ebp+hWnd]  +
call esi  +
mov eax [ebp+cbName] +
mov [ebp+var_274] eax +
cmp eax ebx +
jnz loc_100C235  +
push [ebp+var_214]  +
call ds:COMCTL32_337  +
push [ebp+var_248]  +
push 4  +
jmp loc_100BEE6  +
cmp eax ebx +
jz loc_100C2D2  +
push [ebp+var_248]  +
push 8001h  +
push 1102h  +
push [ebp+hWnd]  +
call esi  +
lea eax [ebp+String1] +
push eax  +
push [ebp+cSubKeys]  +
call sub_100B1DA  +
mov [ebp+var_22C] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 113Fh  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_248]  +
jmp loc_100C2F6  +
push [ebp+var_248]  +
push 3  +
push edi  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_248] eax +
cmp eax ebx +
jz loc_100C30B  +
push eax  +
push 1  +
push edi  +
push [ebp+hWnd]  +
call esi  +
cmp eax ebx +
jnz loc_100BEEF  +
jmp loc_100C2DA  +
push [ebp+var_214]  +
call ds:COMCTL32_329  +
push ebx  +
push 1  +
push 0Bh  +
push [ebp+hWnd]  +
call esi  +
push ebx  +
push 9  +
push edi  +
push [ebp+hWnd]  +
call esi  +
pop edi  +
pop esi  +
cmp eax [ebp+var_250] +
jnz loc_100C349  +
push [ebp+var_224]  +
call sub_1003B66  +
test eax eax +
jz loc_100C355  +
push ebx  +
push [ebp+var_224]  +
call sub_1002C2D  +
push ebx  +
call sub_1003BEF  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx dword_101D090 +
push esi  +
mov esi [ebp+arg_0] +
push eax  +
push ebx  +
mov [ebp+var_208] esi +
mov [ebp+lParam] eax +
call sub_100B261  +
test eax eax +
jz loc_100C533  +
push 34h  +
push 31h  +
push 30h  +
push esi  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
cmp eax 6 +
jnz loc_100C533  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov edi 110Ah +
push edi  +
push ebx  +
call esi  +
cmp [ebp+lParam] eax +
jnz loc_100C3FE  +
mov eax phkResult +
test eax eax +
jz loc_100C3FE  +
push eax  +
call ds:RegCloseKey  +
and phkResult 0 +
push 0  +
push 100h  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+lParam]  +
push ebx  +
call sub_1002C60  +
lea ecx [ebp+SubKey] +
push ecx  +
push eax  +
call sub_100CB08  +
test eax eax +
jnz loc_100C4C9  +
push eax  +
push eax  +
push 0Bh  +
push ebx  +
call esi  +
push [ebp+lParam]  +
push 3  +
push edi  +
push ebx  +
call esi  +
push [ebp+lParam]  +
mov [ebp+var_208] eax +
push 0  +
push 1101h  +
push ebx  +
call esi  +
push [ebp+var_208]  +
push 4  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_100C4A4  +
mov eax [ebp+var_208] +
lea ecx [ebp+var_234] +
push ecx  +
mov [ebp+var_230] eax +
xor eax eax +
push eax  +
push 113Fh  +
push ebx  +
mov [ebp+var_234] 48h +
mov [ebp+var_214] eax +
mov [ebp+var_22C] eax +
mov [ebp+var_228] 60h +
call esi  +
push 0  +
push 9  +
push edi  +
push ebx  +
call esi  +
push eax  +
push 0  +
push 1114h  +
push ebx  +
call esi  +
push 0  +
push 1  +
push 0Bh  +
push ebx  +
call esi  +
push ebx  +
call ds:UpdateWindow  +
jmp loc_100C532  +
mov eax [ebp+lParam] +
mov [ebp+var_230] eax +
lea eax [ebp+SubKey] +
mov [ebp+var_224] eax +
lea eax [ebp+var_234] +
push eax  +
push 0  +
push 113Eh  +
push ebx  +
mov [ebp+var_234] 1 +
mov [ebp+var_220] 100h +
call esi  +
lea eax [ebp+SubKey] +
push eax  +
push 10h  +
push 50h  +
push 52h  +
push [ebp+var_208]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
push [ebp+var_208]  +
call sub_100BE3D  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+lParam] +
push ebx  +
mov ebx dword_101D090 +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi 110Ah +
test edx edx +
jnz loc_100C575  +
push 0  +
push 9  +
push edi  +
push ebx  +
call esi  +
mov [ebp+lParam] eax +
mov edx eax +
mov ecx [ebp+arg_4] +
mov eax 380h +
cmp ecx eax +
jg loc_100C620  +
jz loc_100C614  +
mov eax 297h +
cmp ecx eax +
jz loc_100C609  +
jle loc_100C5EF  +
cmp ecx 299h +
jle loc_100C5CA  +
cmp ecx 2A3h +
jz loc_100C5BC  +
cmp ecx 300h +
jnz loc_100C5EF  +
push edx  +
push [ebp+hWnd]  +
call sub_100B11A  +
jmp loc_100C650  +
push edx  +
push [ebp+hWnd]  +
call sub_100BD6D  +
jmp loc_100C650  +
push 0  +
push 9  +
push edi  +
push ebx  +
call esi  +
cmp [ebp+lParam] eax +
jz loc_100C5EC  +
push [ebp+lParam]  +
push 9  +
push 110Bh  +
push ebx  +
call esi  +
push [ebp+hWnd]  +
call sub_100BE1B  +
mov ecx [ebp+arg_4] +
lea eax [ecx-280h] +
cmp eax 7Fh +
ja loc_100C650  +
push 0  +
push 0  +
push ecx  +
push [ebp+hWnd]  +
call sub_1009FF7  +
jmp loc_100C650  +
push edx  +
push [ebp+hWnd]  +
call sub_100B5F4  +
jmp loc_100C650  +
push 1  +
push [ebp+hWnd]  +
call sub_100C65C  +
jmp loc_100C650  +
mov eax ecx +
sub eax 391h +
jz loc_100C647  +
dec eax  +
jz loc_100C63C  +
dec eax  +
jnz loc_100C5EF  +
push edx  +
push 3  +
push 1102h  +
push ebx  +
call esi  +
jmp loc_100C650  +
push edx  +
push [ebp+hWnd]  +
call sub_100B49F  +
jmp loc_100C650  +
push edx  +
push [ebp+hWnd]  +
call sub_100C36F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor eax eax +
mov [ebp+lParam] ebx +
lea edi [ebp+var_1C] +
stos   +
stos   +
stos   +
mov edi dword_101D090 +
mov [ebp+hWnd] edi +
cmp [ebp+hMenu] ebx +
jz loc_100C6D7  +
mov esi ds:SendMessageW +
push ebx  +
push 9  +
push 110Ah  +
push edi  +
call esi  +
push eax  +
push ebx  +
push 1114h  +
push edi  +
mov [ebp+var_54] eax +
call esi  +
mov eax [ebp+var_54] +
mov [ebp+lParam] eax +
lea eax [ebp+lParam] +
push eax  +
push 1  +
push 1104h  +
push edi  +
mov [ebp+Point] ebx +
mov [ebp-0Ch] ebx +
call esi  +
test eax eax +
jz loc_100C6CA  +
mov eax [ebp+var_18] +
mov [ebp+Point] eax +
mov eax [ebp+var_1C] +
mov [ebp-0Ch] eax +
lea eax [ebp+Point] +
push eax  +
push edi  +
call ds:ClientToScreen  +
jmp loc_100C711  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp-0Ch] eax +
mov [ebp+var_2C] eax +
lea eax [ebp+var_30] +
push eax  +
push edi  +
mov [ebp+Point] ecx +
mov [ebp+var_30] ecx +
call ds:ScreenToClient  +
mov esi ds:SendMessageW +
lea eax [ebp+var_30] +
push eax  +
push ebx  +
push 1111h  +
push edi  +
call esi  +
mov [ebp+var_54] eax +
cmp [ebp+var_54] ebx +
jz loc_100C843  +
push [ebp+var_54]  +
push 9  +
push 110Bh  +
push dword_101D090  +
call esi  +
push [ebp+var_54]  +
push 3  +
push 110Ah  +
push edi  +
call esi  +
mov edi eax +
neg edi  +
sbb edi edi +
and edi 0FFFFFFFDh +
add edi 6Bh +
movzx eax di +
push eax  +
push dword_101D054  +
call ds:LoadMenuW  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_100C843  +
push ebx  +
push eax  +
call ds:GetSubMenu  +
mov [ebp+hMenu] eax +
lea eax [ebp+var_58] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+hWnd]  +
mov [ebp+var_58] 48h +
call esi  +
test [ebp+var_50] 20h +
jz loc_100C79E  +
push dword_101D0C0  +
mov eax 393h +
push eax  +
push ebx  +
push eax  +
push [ebp+hMenu]  +
call ds:ModifyMenuW  +
cmp edi 6Bh +
jnz loc_100C7E5  +
cmp dword_101D0E0 ebx +
jz loc_100C7C7  +
push [ebp+var_54]  +
push 2  +
push 110Ah  +
push [ebp+hWnd]  +
call esi  +
test eax eax +
jnz loc_100C805  +
push 1  +
push 300h  +
jmp loc_100C7FC  +
mov esi ds:DeleteMenu +
push ebx  +
push 300h  +
push [ebp+hMenu]  +
call esi  +
push ebx  +
push 2A1h  +
push [ebp+hMenu]  +
call esi  +
jmp loc_100C805  +
push [ebp+var_54]  +
push [ebp+hMenu]  +
call sub_100B45C  +
cmp [ebp+var_38] ebx +
jnz loc_100C805  +
push 1  +
push 393h  +
push [ebp+hMenu]  +
call ds:EnableMenuItem  +
push ebx  +
push 393h  +
push [ebp+hMenu]  +
call ds:SetMenuDefaultItem  +
push ebx  +
push [ebp+arg_0]  +
push dword ptr [ebp-0Ch]  +
push [ebp+Point]  +
push 102h  +
push [ebp+hMenu]  +
call ds:TrackPopupMenuEx  +
push [ebp+var_8]  +
mov esi eax +
call ds:DestroyMenu  +
push [ebp+var_54]  +
push esi  +
push [ebp+arg_0]  +
call sub_100C548  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push 28h  +
push 0  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
push dword_101D054  +
call RegInstallW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+dwRevision] +
push esi  +
mov esi dword ptr [ebp+pControl] +
mov [esi] eax +
lea eax [ebp+dwRevision] +
push eax  +
lea eax [ebp+pControl] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorControl  +
test eax eax +
jz loc_100C8DF  +
test dword ptr [ebp+pControl] 1000h +
jz loc_100C8BD  +
or dword ptr [esi] 80000000h +
jmp loc_100C8C3  +
or dword ptr [esi] 20000000h +
test dword ptr [ebp+pControl] 2000h +
jz loc_100C8D4  +
or dword ptr [esi] 40000000h +
jmp loc_100C8DA  +
or dword ptr [esi] 10000000h +
xor eax eax +
inc eax  +
jmp loc_100C8E1  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx 5555h +
mov eax ecx +
mov word ptr [ebp+var_14] ax +
mov eax 0AAAAh +
mov edx eax +
mov word ptr [ebp+var_14+2] dx +
mov edx ecx +
mov [ebp+var_10] dx +
mov edx eax +
push esi  +
mov [ebp+var_E] dx +
mov edx ecx +
push edi  +
mov [ebp+var_C] dx +
mov edx eax +
mov [ebp+var_6] ax +
lea eax [ebp+var_14] +
push eax  +
push 1  +
push 1  +
push 8  +
push 8  +
mov [ebp+var_A] dx +
mov [ebp+var_8] cx +
call ds:CreateBitmap  +
mov esi eax +
test esi esi +
jz loc_100C95F  +
push esi  +
call ds:CreatePatternBrush  +
push esi  +
mov edi eax +
call ds:DeleteObject  +
jmp loc_100C961  +
xor edi edi +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetWindow +
push edi  +
push 5  +
push [ebp+arg_0]  +
jmp loc_100C99D  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push edi  +
call ds:SendMessageW  +
push 2  +
push edi  +
call esi  +
mov edi eax +
test edi edi +
jnz loc_100C98A  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
push 1  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
mov edi eax +
test edi edi +
jz loc_100C9F6  +
lea eax [ebp+Msg] +
push eax  +
push [ebp+hDlg]  +
call ds:IsDialogMessageW  +
test eax eax +
jnz loc_100C9F6  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
mov eax edi +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4B4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+hInstance] +
push ebx  +
mov ebx ds:LoadStringW +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_C] +
mov [ebp+var_4B4] ecx +
mov ecx edi +
shr ecx 10h +
mov [ebp+var_4AC] eax +
test cx cx +
jnz loc_100CA58  +
push 50h  +
lea ecx [ebp+Buffer] +
push ecx  +
movzx ecx di +
push ecx  +
push eax  +
call ebx  +
lea edi [ebp+Buffer] +
mov eax esi +
shr eax 10h +
test ax ax +
jnz loc_100CA80  +
push 200h  +
lea eax [ebp+Source] +
push eax  +
movzx eax si +
push eax  +
push [ebp+var_4AC]  +
call ebx  +
lea esi [ebp+Source] +
lea eax [ebp+arg_14] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
xor ebx ebx +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
push ebx  +
push esi  +
push 500h  +
call ds:FormatMessageW  +
mov [ebp+Arguments] ebx +
cmp eax ebx +
jz loc_100CAF1  +
cmp [ebp+hMem] ebx +
jz loc_100CAF1  +
mov eax [ebp+arg_10] +
or eax 10000h +
push eax  +
push edi  +
push [ebp+hMem]  +
push [ebp+var_4B4]  +
push [ebp+var_4AC]  +
call ds:ShellMessageBoxW  +
add esp 14h +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_100CAF4  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
and [ebp+cbClass] 0 +
lea eax [ebp+phkResult] +
push eax  +
push 9  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_100CB3D  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegDeleteKeyW  +
jmp locret_100CBF8  +
push esi  +
lea eax [ebp+ftLastWriteTime] +
push eax  +
lea eax [ebp+cbSecurityDescriptor] +
push eax  +
lea eax [ebp+cbMaxValueLen] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
lea eax [ebp+cbMaxClassLen] +
push eax  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push 0  +
lea eax [ebp+cbClass] +
push eax  +
push 0  +
push [ebp+phkResult]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jz loc_100CB8E  +
cmp eax 0EAh +
jz loc_100CB8E  +
cmp eax 7Ah +
jz loc_100CB8E  +
mov esi eax +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov eax esi +
jmp loc_100CBF7  +
mov eax [ebp+cbMaxSubKeyLen] +
lea eax [eax+eax+2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jnz loc_100CBA9  +
push 8  +
pop esi  +
jmp loc_100CB81  +
push edi  +
xor edi edi +
mov eax [ebp+cbMaxSubKeyLen] +
inc eax  +
push eax  +
push esi  +
push edi  +
push [ebp+phkResult]  +
call ds:RegEnumKeyW  +
test eax eax +
jnz loc_100CBCD  +
push esi  +
push [ebp+phkResult]  +
call sub_100CB08  +
test eax eax +
jz loc_100CBCE  +
inc edi  +
cmp eax 103h +
jz loc_100CBDA  +
cmp edi [ebp+cSubKeys] +
jb loc_100CBAC  +
push esi  +
call ds:LocalFree  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegDeleteKeyW  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
xor edi edi +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_100CC75  +
lea eax [ebp+Luid] +
push eax  +
push [ebp+lpName]  +
push edi  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_100CC6C  +
mov eax [ebp+Luid.LowPart] +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
mov eax [ebp+arg_4] +
neg eax  +
push edi  +
sbb eax eax +
push edi  +
and eax 2 +
push 10h  +
mov [ebp+NewState.Privileges.Attributes] eax +
lea eax [ebp+NewState] +
push eax  +
push edi  +
push [ebp+hObject]  +
mov [ebp+NewState.PrivilegeCount] 1 +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_100CC6C  +
inc edi  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax edi +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 1  +
mov edi offset aSerestoreprivi +
push edi  +
mov [ebp+ppsidOowner] ebx +
mov [ebp+ppsidGroup] ebx +
mov [ebp+ppDacl] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
call sub_100CC01  +
xor ecx ecx +
cmp eax ebx +
mov [ebp+var_1C] eax +
mov eax dword ptr [ebp+pControl] +
setnz cl  +
mov edx eax +
neg edx  +
sbb edx edx +
and edx 8 +
or ecx edx +
or ecx 6 +
mov esi ecx +
neg eax  +
lea ecx [ebp+pSecurityDescriptor] +
push ecx  +
sbb eax eax +
lea ecx [ebp+var_C] +
and eax ecx +
push eax  +
lea eax [ebp+ppDacl] +
push eax  +
lea eax [ebp+ppsidGroup] +
push eax  +
lea eax [ebp+ppsidOowner] +
push eax  +
push esi  +
push 4  +
push [ebp+handle]  +
mov dword ptr [ebp+pControl] esi +
call ds:GetSecurityInfo  +
test eax eax +
jnz loc_100CD24  +
lea eax [ebp+pControl] +
push eax  +
push [ebp+pSecurityDescriptor]  +
push esi  +
call sub_100C889  +
test eax eax +
jz loc_100CD1B  +
push [ebp+pSecurityDescriptor]  +
push dword ptr [ebp+pControl]  +
push [ebp+hKey]  +
call ds:RegSetKeySecurity  +
mov [ebp+var_8] 1 +
push [ebp+pSecurityDescriptor]  +
call ds:LocalFree  +
cmp [ebp+var_1C] ebx +
jz loc_100CD30  +
push ebx  +
push edi  +
call sub_100CC01  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov edi ds:RegEnumValueW +
xor ebx ebx +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
mov esi offset word_105DE20 +
push esi  +
push ebx  +
push [ebp+hKey]  +
mov [ebp+var_C] 1 +
mov [ebp+dwIndex] ebx +
mov [ebp+cbValueName] 100h +
call edi  +
test eax eax +
jnz loc_100CE1F  +
inc [ebp+dwIndex]  +
cmp [ebp+Type] 1 +
jz loc_100CD9E  +
cmp [ebp+Type] 2 +
jz loc_100CD9E  +
cmp [ebp+Type] 7 +
jz loc_100CD9E  +
xor eax eax +
jmp loc_100CDA1  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jz loc_100CDF1  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push esi  +
push [ebp+hKey]  +
call sub_1003313  +
test eax eax +
jnz loc_100CDE3  +
push [ebp+cbData]  +
push [ebp+hMem]  +
push [ebp+Type]  +
push ebx  +
push esi  +
push [ebp+arg_4]  +
call ds:RegSetValueExW  +
jmp loc_100CDE6  +
mov [ebp+var_C] ebx +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_100CDF4  +
mov [ebp+var_C] ebx +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
push esi  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 100h +
push [ebp+hKey]  +
call edi  +
test eax eax +
jz loc_100CD85  +
cmp [ebp+var_C] ebx +
jz loc_100CE9B  +
mov edi ds:RegCloseKey +
mov [ebp+dwIndex] ebx +
mov esi offset Name +
push 100h  +
push esi  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
call ds:RegEnumKeyW  +
inc [ebp+dwIndex]  +
test eax eax +
jnz loc_100CE9B  +
lea eax [ebp+handle] +
push eax  +
push 9  +
push ebx  +
push esi  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100CE96  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call ds:RegCreateKeyW  +
test eax eax +
jnz loc_100CE91  +
push dword ptr [ebp+pControl]  +
push [ebp+var_18]  +
push [ebp+handle]  +
call sub_100CC81  +
push dword ptr [ebp+pControl]  +
mov [ebp+var_C] eax +
push [ebp+var_18]  +
push [ebp+handle]  +
call sub_100CD3F  +
push [ebp+var_18]  +
call edi  +
push [ebp+handle]  +
call edi  +
cmp [ebp+var_C] ebx +
jnz loc_100CE2D  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6B8h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push 104h  +
lea ecx [ebp+MachineName] +
push ecx  +
push eax  +
mov [ebp+var_644] eax +
call sub_101312B  +
test eax eax +
jl loc_100D1B8  +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
call sub_1003BEF  +
cmp word ptr [ebp+MachineName] 5Ch +
jnz loc_100CF06  +
cmp word ptr [ebp+MachineName+2] 5Ch +
lea eax [ebp+var_228] +
jz loc_100CF0C  +
lea eax [ebp+MachineName] +
push esi  +
push edi  +
push eax  +
mov [ebp+lpString1] eax +
call ds:CharLowerW  +
push ebx  +
push [ebp+lpString1]  +
call ds:CharUpperBuffW  +
lea eax [ebp+nSize] +
push eax  +
lea eax [ebp+String2] +
push eax  +
mov [ebp+nSize] 10h +
call ds:GetComputerNameW  +
test eax eax +
jz loc_100CF6A  +
lea eax [ebp+String2] +
push eax  +
push [ebp+lpString1]  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_100CF6A  +
mov [ebp+hWnd] 99h +
jmp loc_100D18B  +
mov eax dword_101D090 +
mov esi ds:SendMessageW +
push 0  +
push 0  +
mov edi 110Ah +
push edi  +
push eax  +
mov [ebp+hWnd] eax +
mov [ebp+lParam] 15h +
call esi  +
lea ecx [ebp+var_434] +
mov [ebp+var_6B4] eax +
mov [ebp+var_6A8] ecx +
mov [ebp+var_6A4] 104h +
jmp loc_100CFE5  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 113Eh  +
push [ebp+hWnd]  +
call esi  +
lea eax [ebp+var_434] +
push eax  +
push [ebp+lpString1]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_100D037  +
jl loc_100D000  +
mov eax [ebp+var_6B4] +
push eax  +
push ebx  +
push edi  +
push [ebp+hWnd]  +
mov [ebp+var_640] eax +
call esi  +
mov [ebp+var_6B4] eax +
test eax eax +
jnz loc_100CFB0  +
lea eax [ebp+phkResult] +
push eax  +
push 80000002h  +
lea eax [ebp+MachineName] +
push eax  +
call ds:RegConnectRegistryW  +
xor ecx ecx +
cmp eax ecx +
jz loc_100D051  +
cmp eax 5 +
setz cl  +
lea ecx [ecx+ecx+9Ah] +
mov [ebp+hWnd] ecx +
jmp loc_100D18B  +
push [ebp+var_6B4]  +
push 9  +
push 110Bh  +
push [ebp+hWnd]  +
call esi  +
jmp loc_100D1B5  +
mov eax [ebp+var_640] +
mov edi dword_101D090 +
mov [ebp+var_68C] eax +
mov eax [ebp+lpString1] +
mov [ebp+var_678] eax +
lea eax [ebp+var_690] +
push eax  +
push ecx  +
push 1132h  +
push edi  +
mov [ebp+hWnd] ecx +
mov [ebp+var_690] 0FFFF0000h +
mov [ebp+var_688] 67h +
mov [ebp+var_670] ebx +
mov [ebp+var_66C] ebx +
mov [ebp+var_668] ebx +
mov [ebp+hKey] ecx +
call esi  +
and [ebp+lpString1] 0 +
mov [ebp+var_690] eax +
mov [ebp+var_670] 2 +
mov [ebp+var_66C] 3 +
mov eax [ebp+lpString1] +
imul eax eax +
cmp [ebp+lpString1] 2 +
mov ecx ds:off_1001C38[eax] +
mov [ebp+var_678] ecx +
jnz loc_100D1C6  +
mov eax [ebp+phkResult] +
mov [ebp+hKey] eax +
push 100h  +
lea eax [ebp+Name] +
push eax  +
push 0  +
push [ebp+hKey]  +
call ds:RegEnumKeyW  +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp+var_668] eax +
lea eax [ebp+var_690] +
push eax  +
push 0  +
push 1132h  +
push edi  +
call esi  +
inc [ebp+lpString1]  +
cmp [ebp+lpString1] 6 +
jb loc_100D0D2  +
push [ebp+var_690]  +
push 2  +
push 1102h  +
push edi  +
call esi  +
push [ebp+var_690]  +
xor ebx ebx +
push ebx  +
push 1114h  +
push edi  +
call esi  +
push ebx  +
call sub_1003BEF  +
push [ebp+var_690]  +
push 9  +
push 110Bh  +
push edi  +
call esi  +
push edi  +
call ds:SetFocus  +
cmp [ebp+hWnd] ebx +
jz loc_100D1B5  +
lea eax [ebp+MachineName] +
push eax  +
movzx eax word ptr [ebp+hWnd] +
push 10h  +
push 98h  +
push eax  +
push [ebp+var_644]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 4  +
cmp [ebp+lpString1] ebx +
jz loc_100D136  +
cmp [ebp+lpString1] 5 +
jz loc_100D136  +
cmp [ebp+lpString1] 4 +
jz loc_100D136  +
cmp [ebp+lpString1] 0 +
jz loc_100D136  +
lea ecx [ebp+hKey] +
push ecx  +
push ds:dword_1001C3C[eax]  +
lea eax [ebp+MachineName] +
push eax  +
call ds:RegConnectRegistryW  +
test eax eax +
jz loc_100D100  +
mov [ebp+hWnd] 9Bh +
jmp loc_100D136  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2F0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hDlg] +
push ebx  +
push esi  +
push edi  +
push 497h  +
push eax  +
call ds:GetDlgItem  +
push himl  +
mov esi ds:SendMessageW +
xor ebx ebx +
inc ebx  +
push ebx  +
push 1003h  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
and [ebp+var_2B0] 0 +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
mov [ebp+lParam] 3 +
call ds:GetClientRect  +
push 2Dh  +
call ds:GetSystemMetrics  +
mov edi [ebp+Rect.right] +
add eax eax +
push 2  +
sub edi eax +
call ds:GetSystemMetrics  +
sub edi eax +
lea eax [ebp+lParam] +
push eax  +
mov [ebp+var_2AC] edi +
xor edi edi +
push edi  +
push 1061h  +
push [ebp+hWnd]  +
call esi  +
push edi  +
push edi  +
lea eax [ebp+var_20C] +
mov [ebp+var_274] edi +
mov [ebp+var_270] edi +
mov [ebp+var_264] eax +
mov eax dword_101D090 +
mov edi 110Ah +
push edi  +
push eax  +
mov [ebp+var_278] 7 +
mov [ebp+var_25C] ebx +
mov [ebp+var_214] eax +
mov [ebp+var_23C] ebx +
call esi  +
push eax  +
push ebx  +
push edi  +
push [ebp+var_214]  +
call esi  +
lea ecx [ebp+var_20C] +
mov [ebp+var_238] eax +
mov [ebp+var_22C] ecx +
mov [ebp+var_228] 104h +
mov [ebp+var_258] eax +
lea eax [ebp+var_23C] +
push eax  +
push 0  +
push 113Eh  +
push [ebp+var_214]  +
call esi  +
lea eax [ebp+var_278] +
push eax  +
push 0  +
push 104Dh  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_238]  +
inc [ebp+var_274]  +
push ebx  +
push edi  +
push [ebp+var_214]  +
call esi  +
mov [ebp+var_238] eax +
test eax eax +
jnz loc_100D33C  +
lea eax [ebp+var_2F0] +
push eax  +
push 0  +
push 102Bh  +
push [ebp+hWnd]  +
mov [ebp+var_2E0] ebx +
mov [ebp+var_2E4] ebx +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
or [ebp+var_38] 0FFFFFFFFh +
and [ebp+var_34] 0 +
push ebx  +
push esi  +
push edi  +
push 497h  +
push [ebp+hDlg]  +
mov [ebp+lParam] 4 +
call ds:GetDlgItem  +
mov esi ds:SendMessageW +
mov ebx eax +
mov edi 100Ch +
jmp loc_100D418  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Bh  +
push ebx  +
call esi  +
push [ebp+var_1C]  +
push [ebp+hDlg]  +
call sub_100B11A  +
push 2  +
push [ebp+var_38]  +
push edi  +
push ebx  +
call esi  +
mov [ebp+var_38] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100D3FF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_100D46F  +
dec eax  +
jz loc_100D44B  +
xor eax eax +
jmp loc_100D477  +
movzx eax [ebp+arg_8] +
dec eax  +
jz loc_100D457  +
dec eax  +
jnz loc_100D46A  +
jmp loc_100D45F  +
push [ebp+hDlg]  +
call sub_100D3C8  +
push 0  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_100D477  +
push [ebp+hDlg]  +
call sub_100D22F  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push offset sub_100D435  +
push [ebp+hWndParent]  +
push 6Bh  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100D4C4  +
mov eax [ebp+arg_0] +
jb loc_100D4BB  +
cmp eax 0FFFFFFFFh +
ja loc_100D4C4  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100D4CF  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push 100h  +
lea ecx [ebp+var_204] +
push ecx  +
push eax  +
call sub_100B314  +
lea eax [ebp+var_204] +
push eax  +
push 24h  +
push 38h  +
push 37h  +
push esi  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
cmp eax 6 +
jnz loc_100D5A5  +
push 1  +
mov esi offset aSerestoreprivi +
push esi  +
call sub_100CC01  +
push 8  +
push edi  +
push phkResult  +
call ds:RegRestoreKeyW  +
test eax eax +
jz loc_100D59B  +
dec eax  +
dec eax  +
jz loc_100D591  +
sub eax 4 +
jz loc_100D585  +
sub eax 51Ch +
jz loc_100D579  +
mov dword_101D068 85h +
jmp loc_100D59B  +
mov dword_101D068 7Eh +
jmp loc_100D59B  +
mov dword_101D068 7Dh +
jmp loc_100D59B  +
mov dword_101D068 87h +
push 0  +
push esi  +
call sub_100CC01  +
jmp loc_100D5AF  +
mov dword_101D068 7Fh +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push ebx  +
push 9  +
push 110Ah  +
push dword_101D090  +
mov [ebp+phkResult] ebx +
call ds:SendMessageW  +
mov dword_101D068 88h +
cmp [ebp+lpString2] ebx +
jz loc_100D617  +
push ebx  +
push [ebp+lpString2]  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
call sub_10086ED  +
push eax  +
call sub_1002732  +
test eax eax +
jz loc_100D617  +
mov dword_101D068 89h +
jmp loc_100D677  +
push esi  +
push edi  +
push 1  +
mov edi offset aSebackupprivil +
push edi  +
call sub_100CC01  +
push [ebp+lpFileName]  +
mov esi ds:DeleteFileW +
call esi  +
push ebx  +
push [ebp+lpFileName]  +
push [ebp+phkResult]  +
call ds:RegSaveKeyW  +
cmp eax ebx +
jz loc_100D66E  +
cmp eax 6 +
jz loc_100D65F  +
xor ecx ecx +
cmp eax 522h +
setz cl  +
add ecx 8Dh +
mov dword_101D068 ecx +
jmp loc_100D669  +
mov dword_101D068 8Fh +
push [ebp+lpFileName]  +
call esi  +
push ebx  +
push edi  +
call sub_100CC01  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax cchWideChar +
push ebx  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_100D730  +
cmp dword_101D0EC 4 +
jnz loc_100D6FD  +
push esi  +
push edi  +
push edi  +
push 20000h  +
mov esi offset MultiByteStr +
push esi  +
push eax  +
push offset WideCharStr  +
push edi  +
push 3  +
call ds:WideCharToMultiByte  +
push edi  +
mov ebx eax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
push esi  +
push hFile  +
call ds:WriteFile  +
pop esi  +
test eax eax +
jz loc_100D726  +
cmp ebx [ebp+NumberOfBytesWritten] +
jmp loc_100D724  +
push edi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
add eax eax +
push eax  +
push offset WideCharStr  +
push hFile  +
call ds:WriteFile  +
test eax eax +
jz loc_100D726  +
mov eax cchWideChar +
add eax eax +
cmp eax [ebp+NumberOfBytesWritten] +
jz loc_100D730  +
mov dword_101D068 8Dh +
mov cchWideChar edi +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
jmp loc_100D753  +
push [ebp+var_4]  +
call sub_1001FE0  +
test eax eax +
jnz loc_100D76E  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100D76E  +
jmp loc_100D747  +
push [ebp+var_4]  +
call sub_1001FE0  +
test eax eax +
jz loc_100D77D  +
lea eax [ebp+var_4] +
push eax  +
call sub_1002090  +
test eax eax +
jnz loc_100D762  +
leave   +
retn   +
dec cchWideChar  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov si [ebp+arg_0] +
cmp si 0Ah +
jz loc_100D7A2  +
inc dword_105D108  +
jmp loc_100D7B0  +
push 0Dh  +
call sub_100D78A  +
and dword_105D108 0 +
mov eax cchWideChar +
mov WideCharStr[eax*2] si +
inc cchWideChar  +
cmp cchWideChar 10000h +
pop esi  +
jnz loc_100D7D5  +
call sub_100D6A5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push offset aHkey_classes_r  +
push eax  +
call sub_10027CC  +
lea ecx [ebp+hKey] +
push ecx  +
push 2  +
push 0  +
push 0  +
push eax  +
mov [ebp+hKey] eax +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100DA4A  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100DA30  +
push ebx  +
push esi  +
push edi  +
dec cchWideChar  +
push 5Ch  +
call sub_1002309  +
test eax eax +
jz loc_100D852  +
mov esi offset a_classes +
jmp loc_100D861  +
cmp word ptr ds:aHkey_classes_r 0 +
mov esi offset aHkey_classes_r +
jz loc_100D87A  +
movzx eax word ptr [esi] +
push eax  +
call sub_1002309  +
inc esi  +
inc esi  +
test eax eax +
jz loc_100DA14  +
cmp word ptr [esi] 0 +
jnz loc_100D861  +
push 5Ch  +
call sub_1002309  +
mov edi eax +
test edi edi +
jz loc_100DA14  +
xor esi esi +
jmp loc_100D8B6  +
mov ecx [ebp+var_208] +
cmp cx 20h +
jz loc_100D8CA  +
push ecx  +
call sub_1001FE0  +
test eax eax +
jnz loc_100D8CA  +
cmp esi 0FFh +
jnb loc_100D8C8  +
mov [ebp+esi*2+SubKey] cx +
inc esi  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100D8CA  +
jmp loc_100D88F  +
xor edi edi +
test edi edi +
jz loc_100DA14  +
xor eax eax +
mov edi 100h +
mov [ebp+uBytes] edi +
mov [ebp+esi*2+SubKey] ax +
call sub_1002928  +
push 3Dh  +
call sub_1002309  +
test eax eax +
jz loc_100D8FE  +
push 20h  +
call sub_1002309  +
push edi  +
push 40h  +
xor ebx ebx +
call ds:LocalAlloc  +
mov esi eax +
xor eax eax +
test esi esi +
setnz al  +
mov edi eax +
jmp loc_100D991  +
test edi edi +
jz loc_100D9FB  +
push [ebp+var_208]  +
call sub_1001FE0  +
test eax eax +
jnz loc_100D9A8  +
mov eax [ebp+uBytes] +
lea ecx [eax-1] +
cmp ebx ecx +
jb loc_100D985  +
and [ebp+uBytes] 0 +
lea ecx [ebp+uBytes] +
push ecx  +
push 100h  +
push eax  +
call sub_100E39F  +
test eax eax +
jl loc_100D9A6  +
push 2  +
push [ebp+uBytes]  +
push esi  +
call ds:LocalReAlloc  +
xor ecx ecx +
test eax eax +
setnz cl  +
mov edi ecx +
test edi edi +
jz loc_100D9FB  +
mov esi eax +
mov eax [ebp+uBytes] +
mov [ebp+uBytes] eax +
mov ax word ptr [ebp+var_208] +
mov [esi+ebx*2] ax +
inc ebx  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002090  +
test eax eax +
jz loc_100D9A8  +
jmp loc_100D916  +
xor edi edi +
test edi edi +
jz loc_100D9FB  +
lea eax [ebp+cbData] +
push eax  +
push 2  +
pop ecx  +
mov eax ebx +
mul  ecx +
push edx  +
push eax  +
call sub_100D4A6  +
test eax eax +
jl loc_100D9F7  +
push [ebp+cbData]  +
xor eax eax +
push esi  +
mov [esi+ebx*2] ax +
push 1  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueW  +
test eax eax +
jz loc_100DA05  +
mov dword_101D068 84h +
jmp loc_100DA05  +
xor edi edi +
jmp loc_100DA05  +
mov dword_101D068 132h +
test esi esi +
jz loc_100DA10  +
push esi  +
call ds:LocalFree  +
test edi edi +
jnz loc_100DA19  +
call sub_100D73F  +
lea eax [ebp+var_208] +
push eax  +
call sub_1002090  +
test eax eax +
jnz loc_100D83A  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+hKey]  +
call ds:RegFlushKey  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_100DA54  +
mov dword_101D068 83h +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1002995  +
test eax eax +
jz loc_100DAB0  +
lea eax [ebp+arg_0+3] +
push eax  +
call sub_1002995  +
test eax eax +
jz loc_100DAAB  +
mov al [esi] +
shl al 4 +
or al byte ptr [ebp+arg_0+3] +
mov [esi] al +
xor eax eax +
inc eax  +
jmp loc_100DAB2  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_100DAD2  +
movzx eax ax +
push eax  +
call sub_100D78A  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100DAC7  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 22h  +
call sub_100D78A  +
mov edi [ebp+arg_0] +
jmp loc_100DB1D  +
inc edi  +
movzx eax si +
inc edi  +
cmp eax 0Ah +
jz loc_100DB46  +
cmp eax 0Dh +
jz loc_100DB32  +
cmp eax 22h +
jz loc_100DB10  +
cmp eax 5Ch +
jnz loc_100DB17  +
push 5Ch  +
call sub_100D78A  +
push esi  +
call sub_100D78A  +
movzx esi word ptr [edi] +
test si si +
jnz loc_100DAF7  +
push 22h  +
call sub_100D78A  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp dword_105D664 0 +
jz loc_100DB17  +
push 5Ch  +
call sub_100D78A  +
push 72h  +
jmp loc_100DB18  +
cmp dword_105D664 0 +
jz loc_100DB17  +
push 5Ch  +
call sub_100D78A  +
push 6Eh  +
jmp loc_100DB18  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push 1Ch  +
pop esi  +
mov eax [ebp+arg_0] +
mov ecx esi +
shr eax cl +
and eax 0Fh +
movzx eax ds:word_1005520[eax*2] +
test edx edx +
jnz loc_100DB87  +
cmp ax 30h +
jz loc_100DB90  +
push eax  +
call sub_100D78A  +
xor edx edx +
inc edx  +
sub esi 4 +
jns loc_100DB6B  +
pop esi  +
test edx edx +
jnz loc_100DBA1  +
push 30h  +
call sub_100D78A  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx [esi] +
push edi  +
mov edi [esi+4] +
mov [ebp+var_8] 1 +
cmp [ebp+var_4] edi +
jb loc_100DBEC  +
lea eax [edi+100h] +
push 2  +
push eax  +
push dword ptr [esi]  +
mov [ebp+arg_0] eax +
call ds:LocalReAlloc  +
test eax eax +
jz loc_100DC2A  +
lea ebx [eax+edi] +
mov edi [ebp+arg_0] +
mov [esi] eax +
call sub_1002928  +
push 5Ch  +
call sub_1002309  +
test eax eax +
jz loc_100DC05  +
call sub_1001F7C  +
test eax eax +
jz loc_100DC2A  +
call sub_1002928  +
push ebx  +
call sub_100DA81  +
inc ebx  +
test eax eax +
jz loc_100DC2E  +
inc [ebp+var_4]  +
call sub_1002928  +
push 2Ch  +
call sub_1002309  +
test eax eax +
jz loc_100DC2E  +
jmp loc_100DBC7  +
and [ebp+var_8] 0 +
mov eax [ebp+var_4] +
pop edi  +
mov [esi+4] eax +
mov eax [ebp+var_8] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_101D0EC 4 +
push ebx  +
mov ebx [ebp+arg_4] +
jnz loc_100DC62  +
cmp ebx 2 +
jz loc_100DC5F  +
cmp ebx 7 +
jnz loc_100DC62  +
shr [ebp+arg_8] 1 +
push offset aHex_0  +
call sub_100DABC  +
cmp ebx 3 +
jz loc_100DC87  +
push 28h  +
call sub_100D78A  +
push 0  +
push ebx  +
call sub_100DB5F  +
push 29h  +
call sub_100D78A  +
push 3Ah  +
call sub_100D78A  +
xor eax eax +
inc eax  +
cmp [ebp+arg_8] 0 +
jz loc_100DD0B  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
dec [ebp+arg_8]  +
cmp dword_105D108 4Bh +
jle loc_100DCB9  +
test eax eax +
jnz loc_100DCC4  +
push offset asc_100DD10  +
call sub_100DABC  +
xor eax eax +
inc eax  +
test eax eax +
jnz loc_100DCC4  +
push 2Ch  +
call sub_100D78A  +
mov al [edi] +
inc edi  +
cmp dword_101D0EC 4 +
jnz loc_100DCDB  +
cmp ebx 2 +
jz loc_100DCDA  +
cmp ebx 7 +
jnz loc_100DCDB  +
inc edi  +
movzx esi al +
mov eax esi +
shr eax 4 +
movzx eax ds:word_1005520[eax*2] +
push eax  +
call sub_100D78A  +
and esi 0Fh +
movzx eax ds:word_1005520[esi*2] +
push eax  +
call sub_100D78A  +
xor eax eax +
cmp [ebp+arg_8] eax +
jnz loc_100DC9C  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call sub_1004000  +
push 5Bh  +
call sub_100D78A  +
push dword ptr [ebp+0Ch]  +
call sub_100DABC  +
push offset asc_100DF6C  +
call sub_100DABC  +
xor esi esi +
mov [ebp-20h] esi +
mov ebx offset word_105DE20 +
mov dword ptr [ebp-2Ch] 100h +
mov eax [ebp-20h] +
inc dword ptr [ebp-20h]  +
lea ecx [ebp-28h] +
push ecx  +
push esi  +
lea ecx [ebp-24h] +
push ecx  +
push esi  +
lea ecx [ebp-2Ch] +
push ecx  +
push ebx  +
push eax  +
push dword ptr [ebp+8]  +
call ds:RegEnumValueW  +
mov edi eax +
cmp edi esi +
jz loc_100DE8E  +
push 0Ah  +
call sub_100D78A  +
cmp edi 103h +
jz loc_100DD99  +
mov dword_101D068 8Ch +
push dword ptr [ebp+0Ch]  +
call ds:lstrlenW  +
mov ebx eax +
lea edi [ebx+100h] +
mov [ebp-4] esi +
lea eax [edi+edi] +
call sub_1004057  +
mov [ebp-18h] esp +
mov esi esp +
mov [ebp-34h] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
push dword ptr [ebp+0Ch]  +
push edi  +
push esi  +
call sub_1002D3F  +
lea esi [esi+ebx*2] +
push 5Ch  +
pop eax  +
mov [esi] ax +
inc esi  +
inc esi  +
xor eax eax +
mov [esi] ax +
mov dword ptr [ebp-20h] 1 +
mov ebx 0FFh +
push ebx  +
push esi  +
push eax  +
mov edi ds:RegEnumKeyW +
jmp loc_100DE43  +
lea eax [ebp-30h] +
push eax  +
push 9  +
push 0  +
push esi  +
push dword ptr [ebp+8]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100DE30  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-30h]  +
call sub_100DD21  +
push dword ptr [ebp-30h]  +
call ds:RegCloseKey  +
cmp dword_101D068 8Dh +
jnz loc_100DE3A  +
jmp loc_100DF61  +
mov dword_101D068 8Bh +
mov eax [ebp-20h] +
inc dword ptr [ebp-20h]  +
push ebx  +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call edi  +
test eax eax +
jz loc_100DDF5  +
cmp eax 103h +
jz loc_100DF61  +
mov dword_101D068 8Ch +
jmp loc_100DF61  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C00000FDh +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
call _resetstkoflw  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_100DF61  +
cmp dword ptr [ebp-24h] 1 +
jz loc_100DEA4  +
cmp dword ptr [ebp-24h] 2 +
jz loc_100DEA4  +
cmp dword ptr [ebp-24h] 7 +
jz loc_100DEA4  +
xor eax eax +
jmp loc_100DEA7  +
push 2  +
pop eax  +
mov ecx [ebp-28h] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
cmp edi esi +
jz loc_100DF47  +
lea eax [ebp-28h] +
push eax  +
push edi  +
lea eax [ebp-24h] +
push eax  +
push esi  +
push ebx  +
push dword ptr [ebp+8]  +
call sub_1003313  +
test eax eax +
jz loc_100DEE2  +
mov dword_101D068 8Dh +
jmp loc_100DF3E  +
cmp [ebp-2Ch] esi +
jz loc_100DEEF  +
push ebx  +
call sub_100DAE4  +
jmp loc_100DEF6  +
push 40h  +
call sub_100D78A  +
push 3Dh  +
call sub_100D78A  +
mov eax [ebp-24h] +
dec eax  +
jz loc_100DF31  +
sub eax 3 +
jnz loc_100DF23  +
cmp dword ptr [ebp-28h] 4 +
jnz loc_100DF23  +
push offset aDword  +
call sub_100DABC  +
push 1  +
push dword ptr [edi]  +
call sub_100DB5F  +
jmp loc_100DF37  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-24h]  +
push edi  +
call sub_100DC43  +
jmp loc_100DF37  +
push edi  +
call sub_100DAE4  +
push 0Ah  +
call sub_100D78A  +
push edi  +
call ds:LocalFree  +
jmp loc_100DF51  +
mov dword_101D068 8Dh +
cmp dword_101D068 8Dh +
jnz loc_100DD50  +
lea esp [ebp-44h] +
call sub_1004048  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
push esi  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
mov [ebp+lParam] eax +
mov dword_101D068 88h +
cmp ebx esi +
jz loc_100E009  +
push esi  +
push ebx  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
call sub_10086ED  +
push eax  +
call sub_1002732  +
test eax eax +
jz loc_100E009  +
mov dword_101D068 89h +
jmp loc_100E135  +
push esi  +
push 80h  +
push 2  +
push esi  +
push esi  +
push 40000000h  +
push edi  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax 0FFFFFFFFh +
jz loc_100E11B  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push 2  +
push offset dword_100E148  +
push eax  +
mov cchWideChar esi +
mov dword_105D108 esi +
call ds:WriteFile  +
push offset aWindowsRegistr  +
call sub_100DABC  +
push (offset a23456789abcdef+1Ch)  +
call sub_100DABC  +
push offset a5_00  +
call sub_100DABC  +
push offset asc_100E15C  +
call sub_100DABC  +
cmp ebx esi +
jz loc_100E09C  +
push ebx  +
push 128h  +
lea eax [ebp+String2] +
push eax  +
call sub_1002D3F  +
lea eax [ebp+String2] +
push eax  +
push [ebp+phkResult]  +
jmp loc_100E103  +
push [ebp+lParam]  +
call sub_10086ED  +
push offset aHkey_local_mac  +
mov [ebp+lParam] eax +
mov edi 128h +
push edi  +
lea eax [ebp+String2] +
push eax  +
call sub_1002D3F  +
lea eax [ebp+String2] +
push eax  +
push eax  +
push [ebp+lParam]  +
call sub_10027CC  +
push eax  +
call sub_100DD21  +
push offset aHkey_users  +
push edi  +
lea eax [ebp+String2] +
push eax  +
call sub_1002D3F  +
lea eax [ebp+String2] +
push eax  +
push eax  +
push [ebp+lParam]  +
call sub_10027CC  +
push eax  +
call sub_100DD21  +
call sub_100D6A5  +
push hFile  +
call ds:CloseHandle  +
jmp loc_100E125  +
mov dword_101D068 8Ah +
cmp ebx esi +
jz loc_100E135  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
push edi  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
mov dword_101D068 88h +
cmp esi edi +
jz loc_100E1D1  +
push edi  +
push esi  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
call sub_10086ED  +
push eax  +
call sub_1002732  +
test eax eax +
jz loc_100E1D1  +
mov dword_101D068 89h +
jmp loc_100E2A2  +
push edi  +
push 80h  +
push 2  +
push edi  +
push edi  +
push 40000000h  +
push ebx  +
call ds:CreateFileW  +
mov hFile eax +
cmp eax 0FFFFFFFFh +
jz loc_100E288  +
push offset aRegedit4  +
mov cchWideChar edi +
mov dword_105D108 edi +
call sub_100DABC  +
lea eax [ebp+var_254] +
cmp esi edi +
jz loc_100E230  +
push esi  +
push 128h  +
push eax  +
call sub_1002D3F  +
lea eax [ebp+var_254] +
push eax  +
push [ebp+phkResult]  +
jmp loc_100E270  +
push offset aHkey_local_mac  +
mov ebx 128h +
push ebx  +
push eax  +
call sub_1002D3F  +
lea eax [ebp+var_254] +
push eax  +
push 80000002h  +
call sub_100DD21  +
push offset aHkey_users  +
push ebx  +
lea eax [ebp+var_254] +
push eax  +
call sub_1002D3F  +
lea eax [ebp+var_254] +
push eax  +
push 80000003h  +
call sub_100DD21  +
call sub_100D6A5  +
push hFile  +
call ds:CloseHandle  +
jmp loc_100E292  +
mov dword_101D068 8Ah +
cmp esi edi +
jz loc_100E2A2  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_100E2E1  +
cmp ecx [ebp+arg_0] +
jbe loc_100E2E6  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_100E314  +
cmp [ebp+arg_0] eax +
jnz loc_100E308  +
cmp ecx eax +
jnz loc_100E30D  +
cmp ecx [ebp+arg_4] +
jbe loc_100E31C  +
mov eax 80070057h +
jmp loc_100E31C  +
push [ebp+arg_4]  +
call sub_100E2D1  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100E34E  +
cmp eax esi +
ja loc_100E34E  +
jnz loc_100E35B  +
jmp loc_100E353  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100E364  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp ecx 2 +
jbe loc_100E394  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_100E3B9  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100E3C4  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_100E42C +
xor eax eax +
cmps   +
jz loc_100E403  +
mov esi [ebp+arg_4] +
push 4  +
pop ecx  +
mov edi offset nullsub_1 +
xor eax eax +
cmps   +
jz loc_100E403  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov eax 80004002h +
jmp loc_100E413  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10074DA  +
mov ecx [ebp+1Ch] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
sub ecx 90h +
jz loc_100E492  +
dec ecx  +
dec ecx  +
jnz loc_100E497  +
mov eax 0D5h +
pop ebp  +
retn 4  +
***
mov edi edi +
cmp dword_105DBE0 0 +
jz loc_100E4BA  +
push dword_105DBE8  +
call sub_100C9B0  +
test eax eax +
jnz loc_100E4A2  +
mov eax dword_105DBE0 +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 10h +
jz loc_100E4E2  +
sub eax 100h +
jz loc_100E4E9  +
dec eax  +
jz loc_100E4E2  +
xor eax eax +
jmp loc_100E4EC  +
and dword_105DBE0 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_100E556  +
jmp ds:off_100E55F[eax*4]  +
mov eax 1F40h +
jmp loc_100E55B  +
mov eax 1F41h +
jmp loc_100E55B  +
mov eax 1F42h +
jmp loc_100E55B  +
mov eax 1F43h +
jmp loc_100E55B  +
mov eax 1F44h +
jmp loc_100E55B  +
mov eax 1F46h +
jmp loc_100E55B  +
mov eax 1F47h +
jmp loc_100E55B  +
mov eax 1F48h +
jmp loc_100E55B  +
mov eax 1F49h +
jmp loc_100E55B  +
mov eax 1F4Ah +
jmp loc_100E55B  +
mov eax 1F4Bh +
jmp loc_100E55B  +
mov eax 1F4Ch +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_105DC10 +
push esi  +
push edi  +
xor edi edi +
inc edi  +
cmp dword_105DC14 eax +
jnz loc_100E632  +
lea ecx [ebp+var_4] +
push ecx  +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
xor edi edi +
call sub_100D4A6  +
test eax eax +
jl loc_100E64C  +
lea eax [ebp+uBytes] +
push eax  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_100D4A6  +
test eax eax +
jl loc_100E64C  +
push [ebp+uBytes]  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
test esi esi +
jz loc_100E64C  +
push [ebp+var_4]  +
push dword_105DC0C  +
push esi  +
call memcpy  +
add esp 0Ch +
push dword_105DC0C  +
call ds:LocalFree  +
mov eax dword_105DC10 +
push 2  +
pop ecx  +
mul  ecx +
push offset dword_105DC10  +
push edx  +
push eax  +
mov dword_105DC0C esi +
call sub_100D4A6  +
test eax eax +
jl loc_100E64C  +
inc edi  +
mov edx dword_105DC14 +
mov ax [ebp+arg_0] +
mov ecx dword_105DC0C +
mov [ecx+edx*2] ax +
inc dword_105DC14  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_100E2EF  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_100E769  +
test [ebp+arg_10] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+var_8] edi +
mov [ebp+var_4] ebx +
jz loc_100E6A0  +
cmp [ebp+arg_14] eax +
jnz loc_100E6A0  +
mov [ebp+arg_14] offset dword_10054C0 +
xor esi esi +
test [ebp+arg_10] 0FFFFE000h +
jz loc_100E6BB  +
mov esi 80070057h +
cmp ecx eax +
jz loc_100E722  +
xor eax eax +
mov [edi] ax +
jmp loc_100E722  +
cmp ecx eax +
jnz loc_100E6DC  +
mov edx [ebp+arg_14] +
cmp [edx] ax +
jz loc_100E753  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_100E722  +
mov [ebp+var_8] eax +
lea eax [ebp+arg_18] +
push eax  +
push [ebp+arg_14]  +
lea eax [ebp+var_8] +
push eax  +
mov eax ecx +
call sub_100E325  +
mov esi eax +
mov eax [ebp+var_8] +
sub ebx eax +
lea edx [edi+eax*2] +
mov [ebp+var_8] edx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_100E71F  +
mov eax [ebp+arg_10] +
test eax 200h +
jz loc_100E753  +
cmp ebx 1 +
jbe loc_100E753  +
lea ecx [ebx+ebx] +
push edx  +
call sub_100E371  +
jmp loc_100E753  +
mov ecx [ebp+arg_4] +
test [ebp+arg_10] 1C00h +
jz loc_100E747  +
test ecx ecx +
jz loc_100E747  +
push [ebp+arg_10]  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1015C65  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_100E753  +
cmp esi 8007007Ah +
jnz loc_100E768  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_100E75F  +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_100E768  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_105DBE0 0 +
jz loc_100E79E  +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100E79D  +
movzx eax ax +
push eax  +
call sub_100E594  +
inc esi  +
inc esi  +
test eax eax +
jnz loc_100E786  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+uID]  +
call sub_1003915  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_100E7DA  +
push esi  +
call sub_100E774  +
push esi  +
call ds:LocalFree  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1FAAh  +
call sub_100E7B8  +
push [ebp+arg_0]  +
call sub_100E4F5  +
push eax  +
call sub_100E7B8  +
call sub_100E7A7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ECh +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_A8] ebx +
cmp [ebp+arg_4] esi +
jz loc_100ED69  +
cmp ebx esi +
jz loc_100ED69  +
push edi  +
call sub_100E7A7  +
mov ecx [ebp+arg_4] +
mov edi ds:iswprint +
shr ecx 4 +
xor eax eax +
mov [ebp+var_B0] eax +
mov [ebp+var_EC] ecx +
cmp ecx esi +
jbe loc_100EBF0  +
movzx ax byte ptr [ebx+esi+0Fh] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E888  +
movzx eax byte ptr [ebx+esi+0Fh] +
mov [ebp+var_AC] eax +
jmp loc_100E892  +
mov [ebp+var_AC] 2Eh +
movzx ax byte ptr [ebx+esi+0Eh] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E8B0  +
movzx eax byte ptr [ebx+esi+0Eh] +
mov [ebp+var_E8] eax +
jmp loc_100E8BA  +
mov [ebp+var_E8] 2Eh +
movzx ax byte ptr [ebx+esi+0Dh] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E8D8  +
movzx eax byte ptr [ebx+esi+0Dh] +
mov [ebp+var_DC] eax +
jmp loc_100E8E2  +
mov [ebp+var_DC] 2Eh +
movzx ax byte ptr [ebx+esi+0Ch] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E900  +
movzx eax byte ptr [ebx+esi+0Ch] +
mov [ebp+var_E4] eax +
jmp loc_100E90A  +
mov [ebp+var_E4] 2Eh +
movzx ax byte ptr [ebx+esi+0Bh] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E928  +
movzx eax byte ptr [ebx+esi+0Bh] +
mov [ebp+var_C0] eax +
jmp loc_100E932  +
mov [ebp+var_C0] 2Eh +
movzx ax byte ptr [ebx+esi+0Ah] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E950  +
movzx eax byte ptr [ebx+esi+0Ah] +
mov [ebp+var_D8] eax +
jmp loc_100E95A  +
mov [ebp+var_D8] 2Eh +
movzx ax byte ptr [ebx+esi+9] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E978  +
movzx eax byte ptr [ebx+esi+9] +
mov [ebp+var_C8] eax +
jmp loc_100E982  +
mov [ebp+var_C8] 2Eh +
movzx ax byte ptr [ebx+esi+8] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E9A0  +
movzx eax byte ptr [ebx+esi+8] +
mov [ebp+var_B8] eax +
jmp loc_100E9AA  +
mov [ebp+var_B8] 2Eh +
movzx ax byte ptr [ebx+esi+7] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E9C8  +
movzx eax byte ptr [ebx+esi+7] +
mov [ebp+var_D0] eax +
jmp loc_100E9D2  +
mov [ebp+var_D0] 2Eh +
movzx ax byte ptr [ebx+esi+6] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100E9F0  +
movzx eax byte ptr [ebx+esi+6] +
mov [ebp+var_E0] eax +
jmp loc_100E9FA  +
mov [ebp+var_E0] 2Eh +
movzx ax byte ptr [ebx+esi+5] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100EA18  +
movzx eax byte ptr [ebx+esi+5] +
mov [ebp+var_BC] eax +
jmp loc_100EA22  +
mov [ebp+var_BC] 2Eh +
movzx ax byte ptr [ebx+esi+4] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100EA40  +
movzx eax byte ptr [ebx+esi+4] +
mov [ebp+var_C4] eax +
jmp loc_100EA4A  +
mov [ebp+var_C4] 2Eh +
movzx ax byte ptr [ebx+esi+3] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100EA68  +
movzx eax byte ptr [ebx+esi+3] +
mov [ebp+var_CC] eax +
jmp loc_100EA72  +
mov [ebp+var_CC] 2Eh +
movzx ax byte ptr [ebx+esi+2] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100EA90  +
movzx eax byte ptr [ebx+esi+2] +
mov [ebp+var_D4] eax +
jmp loc_100EA9A  +
mov [ebp+var_D4] 2Eh +
lea ebx [ebx+esi+1] +
movzx ax byte ptr [ebx] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100EAB8  +
movzx eax byte ptr [ebx] +
mov [ebp+var_B4] eax +
jmp loc_100EAC2  +
mov [ebp+var_B4] 2Eh +
mov eax [ebp+var_A8] +
movzx ax byte ptr [eax+esi] +
movzx eax ax +
push eax  +
call edi  +
test eax eax +
mov eax [ebp+var_A8] +
pop ecx  +
jz loc_100EAE4  +
movzx ecx byte ptr [eax+esi] +
jmp loc_100EAE7  +
push 2Eh  +
pop ecx  +
push [ebp+var_AC]  +
push [ebp+var_E8]  +
push [ebp+var_DC]  +
push [ebp+var_E4]  +
push [ebp+var_C0]  +
push [ebp+var_D8]  +
push [ebp+var_C8]  +
push [ebp+var_B8]  +
push [ebp+var_D0]  +
push [ebp+var_E0]  +
push [ebp+var_BC]  +
push [ebp+var_C4]  +
push [ebp+var_CC]  +
push [ebp+var_D4]  +
push [ebp+var_B4]  +
push ecx  +
movzx ecx byte ptr [eax+esi+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+esi+9] +
push ecx  +
movzx ecx byte ptr [eax+esi+8] +
push ecx  +
movzx ecx byte ptr [eax+esi+7] +
push ecx  +
movzx ecx byte ptr [eax+esi+6] +
push ecx  +
movzx ecx byte ptr [eax+esi+5] +
push ecx  +
movzx ecx byte ptr [eax+esi+4] +
push ecx  +
movzx ecx byte ptr [eax+esi+3] +
push ecx  +
movzx ecx byte ptr [eax+esi+2] +
movzx eax byte ptr [eax+esi] +
push ecx  +
movzx ecx byte ptr [ebx] +
push ecx  +
push eax  +
push esi  +
push offset a08x02x02x02x02  +
lea eax [ebp+var_A4] +
push 50h  +
push eax  +
call sub_10062BE  +
add esp 90h +
lea eax [ebp+var_A4] +
push eax  +
call sub_100E774  +
call sub_100E7A7  +
mov eax [ebp+var_B0] +
mov ebx [ebp+var_A8] +
inc eax  +
mov ecx eax +
shl ecx 4 +
mov [ebp+var_B0] eax +
mov esi ecx +
cmp eax [ebp+var_EC] +
jb loc_100E86A  +
test byte ptr [ebp+arg_4] 0Fh +
jz loc_100ED68  +
and [ebp+var_B4] 0 +
push 50h  +
lea ecx [ebp+var_A4] +
shl eax 4 +
mov [ebp+var_A8] ecx +
pop ecx  +
push eax  +
push offset a08x  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push ecx  +
lea eax [ebp+var_A4] +
push eax  +
mov [ebp+var_AC] ecx +
call sub_100E659  +
add esp 1Ch +
mov eax esi +
mov [ebp+var_B0] eax +
cmp esi [ebp+arg_4] +
jnb loc_100ECC8  +
movzx eax byte ptr [ebx+eax] +
push eax  +
push offset a02x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_100E659  +
mov eax [ebp+var_B0] +
and eax 7 +
add esp 1Ch +
cmp al 7 +
jnz loc_100ECB7  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push offset asc_1005554  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_10089B0  +
mov [ebp+var_B4] 2 +
inc [ebp+var_B0]  +
mov eax [ebp+var_B0] +
cmp eax [ebp+arg_4] +
jb loc_100EC4C  +
mov ecx [ebp+var_B4] +
and eax 0Fh +
imul eax eax +
lea eax [eax+ecx+0Dh] +
cmp eax 40h +
jb loc_100ECE0  +
push 40h  +
pop eax  +
push 20h  +
push 40h  +
pop ecx  +
sub ecx eax +
push ecx  +
push offset aC  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_100E659  +
add esp 20h +
jmp loc_100ED57  +
movzx ax byte ptr [ebx+esi] +
movzx eax ax +
push eax  +
call edi  +
pop ecx  +
test eax eax +
jz loc_100ED29  +
movzx eax byte ptr [ebx+esi] +
jmp loc_100ED2C  +
push 2Eh  +
pop eax  +
push eax  +
push offset aC_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_100E659  +
add esp 1Ch +
inc esi  +
cmp esi [ebp+arg_4] +
jb loc_100ED13  +
lea eax [ebp+var_A4] +
push eax  +
call sub_100E774  +
pop edi  +
call sub_100E7A7  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_0] +
jz loc_100EDC0  +
test eax eax +
jz loc_100EDC0  +
push dword ptr [eax]  +
lea eax [ebp+var_2C] +
push offset asc_1005670  +
push 14h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+var_2C] +
push eax  +
call sub_100E774  +
call sub_100E7A7  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_105DBE0 0 +
jz loc_100EE1F  +
push esi  +
mov esi [ebp+arg_4] +
shr esi 1 +
dec esi  +
push edi  +
dec esi  +
xor edi edi +
test esi esi +
jle loc_100EE1D  +
mov eax [ebp+arg_0] +
movzx eax word ptr [eax+edi*2] +
test ax ax +
jnz loc_100EE12  +
call sub_100E7A7  +
push 1FAFh  +
call sub_100E7B8  +
jmp loc_100EE18  +
push eax  +
call sub_100E594  +
inc edi  +
cmp edi esi +
jl loc_100EDF5  +
pop edi  +
pop esi  +
call sub_100E7A7  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1FACh  +
call sub_100E7B8  +
mov eax [ebp+arg_8] +
test eax eax +
jbe loc_100EE90  +
cmp eax 2 +
jbe loc_100EE81  +
cmp eax 4 +
jz loc_100EE74  +
cmp eax 7 +
jz loc_100EE67  +
jbe loc_100EE90  +
cmp eax 0Ah +
ja loc_100EE90  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1015C55  +
jmp loc_100EE9B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100EDD8  +
jmp loc_100EE9B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100ED83  +
jmp loc_100EE9B  +
push [ebp+arg_0]  +
call sub_100E774  +
call sub_100E7A7  +
jmp loc_100EE9B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E80F  +
call sub_100E7A7  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push 1FA6h  +
mov [ebp+cbClass] 100h +
call sub_100E7B8  +
mov eax [ebp+cbClass] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
xor esi esi +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_100EF85  +
push edi  +
push esi  +
mov edi ds:RegQueryInfoKeyW +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea ecx [ebp+cbClass] +
push ecx  +
push eax  +
push [ebp+hKey]  +
call edi  +
mov [ebp+var_C] eax +
cmp eax 0EAh +
jnz loc_100EF5D  +
lea eax [ebp+uBytes] +
push eax  +
push 1  +
push [ebp+cbClass]  +
call sub_100E39F  +
test eax eax +
jl loc_100EF5D  +
push ebx  +
mov ebx [ebp+uBytes] +
lea eax [ebp+uBytes] +
push eax  +
push 2  +
pop ecx  +
mov eax ebx +
mul  ecx +
push edx  +
push eax  +
call sub_100D4A6  +
test eax eax +
jl loc_100EF5C  +
push 2  +
push [ebp+uBytes]  +
push [ebp+hMem]  +
call ds:LocalReAlloc  +
cmp eax esi +
jz loc_100EF5C  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea ecx [ebp+cbClass] +
push ecx  +
push eax  +
push [ebp+hKey]  +
mov [ebp+cbClass] ebx +
mov [ebp+hMem] eax +
call edi  +
mov [ebp+var_C] eax +
pop ebx  +
pop edi  +
cmp [ebp+cbClass] esi +
jz loc_100EF72  +
cmp [ebp+var_C] esi +
jnz loc_100EF72  +
push [ebp+hMem]  +
call sub_100E774  +
jmp loc_100EF7C  +
push 1FAEh  +
call sub_100E7B8  +
push [ebp+hMem]  +
call ds:LocalFree  +
call sub_100E7A7  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ECh +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push 1FA7h  +
call sub_100E7B8  +
xor esi esi +
lea eax [ebp+FileTime] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push edi  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jnz loc_100F05F  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_100F05F  +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_100F05F  +
push 32h  +
lea eax [ebp+DateStr] +
push eax  +
push esi  +
lea eax [ebp+Time] +
push eax  +
push 1  +
mov edi 400h +
push edi  +
call ds:GetDateFormatW  +
push 32h  +
lea eax [ebp+TimeStr] +
push eax  +
push esi  +
lea eax [ebp+Time] +
push eax  +
push 2  +
push edi  +
call ds:GetTimeFormatW  +
lea eax [ebp+DateStr] +
push eax  +
call sub_100E774  +
push offset asc_100F074  +
call sub_100E774  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_100E774  +
call sub_100E7A7  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov [ebp+hKey] eax +
mov [ebp+dwIndex] ebx +
cmp dword_105DBE0 ebx +
jz loc_100F201  +
push esi  +
mov esi offset word_105DE20 +
push edi  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
push esi  +
push [ebp+dwIndex]  +
mov edi 100h +
push [ebp+hKey]  +
mov [ebp+cbValueName] edi +
call ds:RegEnumValueW  +
inc [ebp+dwIndex]  +
test eax eax +
jnz loc_100F1FF  +
push 1FA8h  +
call sub_100E7B8  +
mov eax [ebp+dwIndex] +
dec eax  +
push eax  +
push offset aD  +
lea eax [ebp+var_204] +
push edi  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+var_204] +
push eax  +
call sub_100E774  +
call sub_100E7A7  +
push 1FA9h  +
call sub_100E7B8  +
cmp [ebp+cbValueName] ebx +
jz loc_100F150  +
push esi  +
call sub_100E774  +
jmp loc_100F15A  +
push 1FADh  +
call sub_100E7B8  +
call sub_100E7A7  +
push [ebp+Type]  +
call sub_100E7E4  +
cmp [ebp+Type] 1 +
jz loc_100F189  +
cmp [ebp+Type] 2 +
jz loc_100F189  +
cmp [ebp+Type] 7 +
jz loc_100F189  +
xor eax eax +
jmp loc_100F18C  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_100F1F5  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push esi  +
push [ebp+hKey]  +
call sub_1003313  +
test eax eax +
jnz loc_100F1D7  +
push [ebp+Type]  +
push [ebp+cbData]  +
push edi  +
call sub_100EE2D  +
jmp loc_100F1E1  +
mov dword_105DBE4 92h +
push edi  +
call ds:LocalFree  +
cmp dword_105DBE0 ebx +
jz loc_100F1FF  +
jmp loc_100F0BB  +
mov dword_105DBE4 90h +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1FA5h  +
call sub_100E7B8  +
push [ebp+arg_4]  +
call sub_100E774  +
call sub_100E7A7  +
push [ebp+hKey]  +
call sub_100EEA9  +
push [ebp+hKey]  +
call sub_100EF94  +
pop ebp  +
retn 8  +
***
call sub_1004000  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100F215  +
push dword ptr [ebp+8]  +
call sub_100F081  +
xor ebx ebx +
cmp dword_105DBE4 ebx +
jnz loc_100F336  +
mov [ebp-20h] ebx +
push dword ptr [ebp+0Ch]  +
call ds:lstrlenW  +
mov esi eax +
lea edi [esi+100h] +
mov [ebp-4] ebx +
lea eax [edi+edi] +
call sub_1004057  +
mov [ebp-18h] esp +
mov ebx esp +
mov [ebp-28h] ebx +
mov dword ptr [ebp-4] 0FFFFFFFEh +
push dword ptr [ebp+0Ch]  +
push edi  +
push ebx  +
call sub_1002D3F  +
lea esi [ebx+esi*2] +
push 5Ch  +
pop eax  +
mov [esi] ax +
inc esi  +
inc esi  +
xor eax eax +
mov [esi] ax +
call sub_100E7A7  +
xor edi edi +
jmp loc_100F309  +
mov eax [ebp-20h] +
inc dword ptr [ebp-20h]  +
push 0FFh  +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call ds:RegEnumKeyW  +
test eax eax +
jnz loc_100F336  +
lea eax [ebp-24h] +
push eax  +
push 9  +
push edi  +
push esi  +
push dword ptr [ebp+8]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_100F309  +
push ebx  +
push dword ptr [ebp-24h]  +
call sub_100F24A  +
push dword ptr [ebp-24h]  +
call ds:RegCloseKey  +
cmp dword_105DBE0 edi +
jz loc_100F336  +
jmp loc_100F2C8  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C00000FDh +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
call _resetstkoflw  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
lea esp [ebp-38h] +
call sub_1004048  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push esi  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
cmp dword_105E038 esi +
jz loc_100F3DC  +
push ebx  +
push edi  +
push eax  +
call sub_10086ED  +
push ds:off_1001C50  +
mov edi 128h +
push edi  +
mov esi offset String +
push esi  +
mov ebx eax +
call sub_1002D3F  +
push esi  +
push esi  +
push ebx  +
call sub_10027CC  +
push eax  +
call sub_100F24A  +
push ds:off_1001C5C  +
push edi  +
push esi  +
call sub_1002D3F  +
push esi  +
push esi  +
push ebx  +
call sub_10027CC  +
push eax  +
call sub_100F24A  +
pop edi  +
pop ebx  +
jmp loc_100F409  +
push esi  +
mov esi offset String +
push esi  +
lea ecx [ebp+phkResult] +
push ecx  +
push eax  +
call sub_10086ED  +
push eax  +
call sub_1002732  +
test eax eax +
jnz loc_100F409  +
push esi  +
push [ebp+phkResult]  +
call sub_100F24A  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C8h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov edi dword_105D148 +
push 54h  +
xor ebx ebx +
mov [ebp+hWnd] eax +
mov eax dword_105D14C +
push ebx  +
mov esi offset dword_105D140 +
push esi  +
mov dword_105DC1C offset off_105D534 +
mov [ebp+var_64] eax +
call memset  +
mov eax [ebp+hWnd] +
or dword_105D18C 0FFFFFFFFh +
mov dword_105D144 eax +
mov eax [ebp+var_64] +
add esp 0Ch +
mov dword_105D14C eax +
mov eax dword_101D054 +
mov dword_105D148 edi +
push 6Ch  +
mov dword_105D178 eax +
pop eax  +
xor edi edi +
inc edi  +
push esi  +
mov dword_105D140 54h +
mov dword_105D150 ebx +
mov dword_105D154 4108h +
mov dword_105D158 ebx +
mov dword_105D15C ebx +
mov dword_105D174 edi +
mov dword_105D180 offset dword_105DC1C +
mov dword_105D17C eax +
mov dword_105E034 eax +
call ds:PrintDlgExW  +
test eax eax +
jl loc_100F8BE  +
cmp dword_105D190 edi +
jnz loc_100F8BE  +
push dword_105D14C  +
mov dword_105DBE4 90h +
call ds:GlobalLock  +
mov [ebp+var_64] eax +
cmp eax ebx +
jz loc_100F89C  +
mov esi ds:GetDeviceCaps +
push 6Fh  +
push dword_105D150  +
call esi  +
push 6Eh  +
push dword_105D150  +
mov [ebp+nNumber] eax +
call esi  +
push 70h  +
push dword_105D150  +
mov edi eax +
call esi  +
push 71h  +
push dword_105D150  +
mov [ebp+var_6C] eax +
call esi  +
push 58h  +
push dword_105D150  +
mov [ebp+var_74] eax +
mov dword_105DBF0 ebx +
mov dword_105DBEC ebx +
call esi  +
push eax  +
push 5A0h  +
push edi  +
mov edi ds:MulDiv +
call edi  +
push 5Ah  +
push dword_105D150  +
mov dword_105DBF4 eax +
call esi  +
push eax  +
push 5A0h  +
push [ebp+nNumber]  +
call edi  +
mov ecx dword_105DBF4 +
mov dword_105DBF8 eax +
push 4000h  +
add ecx 0FFFFFBC8h +
add eax 0FFFFFD30h +
push 40h  +
mov dword_105DBFC 438h +
mov dword_105DC00 2D0h +
mov dword_105DC04 ecx +
mov dword_105DC08 eax +
call ds:LocalAlloc  +
mov dword_105DC0C eax +
cmp eax ebx +
jz loc_100F87E  +
push ebx  +
push offset sub_100E4C7  +
push [ebp+hWnd]  +
mov dword_105DC10 2000h +
push 69h  +
push dword_101D054  +
mov dword_105DC14 ebx +
call ds:CreateDialogParamW  +
mov dword_105DBE8 eax +
cmp eax ebx +
jz loc_100F872  +
push ebx  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
push offset sub_100E4A0  +
push dword_105D150  +
mov dword_105DBE4 ebx +
mov dword_105DBE0 1 +
mov dword_105DC18 offset dword_100F914 +
call ds:SetAbortProc  +
push 10h  +
mov [ebp+hMem] 14h +
call sub_1003915  +
mov [ebp-84h] eax +
mov eax [ebp+var_64] +
pop ecx  +
movzx ecx word ptr [eax+4] +
lea eax [eax+ecx*2] +
mov [ebp-80h] eax +
lea eax [ebp+hMem] +
push eax  +
push dword_105D150  +
mov [ebp-7Ch] ebx +
mov [ebp-78h] ebx +
mov dword_105DBE4 ebx +
call ds:StartDocW  +
test eax eax +
jg loc_100F69F  +
call ds:__imp_GetLastError  +
cmp eax 3Fh +
jz loc_100F84F  +
mov dword_105DBE4 91h +
jmp loc_100F84F  +
call sub_100F369  +
mov eax dword_105DBE4 +
cmp eax ebx +
jz loc_100F6C6  +
push 10h  +
movzx eax ax +
push 10h  +
push eax  +
push [ebp+hWnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
push offset LibFileName  +
call ds:LoadLibraryW  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 64h  +
push 64h  +
push ebx  +
push ebx  +
push 4  +
push ebx  +
push offset aRichedit50w  +
push ebx  +
mov [ebp+hLibModule] eax +
call ds:CreateWindowExW  +
push dword_105DC0C  +
mov esi ds:SendMessageW +
push ebx  +
push 0Ch  +
push eax  +
mov [ebp+var_64] eax +
call esi  +
push offset aSystem  +
push 20h  +
lea eax [ebp+var_46] +
push eax  +
mov [ebp+lParam] 5Ch +
mov [ebp+var_5C] 20000001h +
mov [ebp+var_58] ebx +
mov [ebp+var_47] 31h +
call sub_1002D3F  +
lea eax [ebp+lParam] +
push eax  +
push 4  +
push 444h  +
push [ebp+var_64]  +
call esi  +
mov eax dword_105D150 +
mov [ebp+var_B8] eax +
mov [ebp+var_B4] eax +
mov esi offset dword_105DBFC +
lea edi [ebp+var_B0] +
movs   +
movs   +
movs   +
movs   +
mov esi offset dword_105DBEC +
lea edi [ebp+var_A0] +
movs   +
movs   +
movs   +
movs   +
or [ebp+var_8C] 0FFFFFFFFh +
cmp dword_105DC14 ebx +
mov [ebp+var_90] ebx +
mov esi 439h +
jle loc_100F7FB  +
mov edi [ebp+var_74] +
mov ecx [ebp+var_6C] +
neg edi  +
neg ecx  +
mov [ebp+var_6C] ecx +
jmp loc_100F794  +
mov eax dword_105D150 +
push eax  +
call ds:StartPage  +
push ebx  +
push edi  +
push [ebp+var_6C]  +
push dword_105D150  +
call ds:SetViewportOrgEx  +
lea eax [ebp+var_B8] +
push eax  +
push 1  +
push esi  +
push [ebp+var_64]  +
call ds:SendMessageW  +
push offset dword_105DBFC  +
push ebx  +
push 433h  +
push [ebp+var_64]  +
mov [ebp+var_90] eax +
call ds:SendMessageW  +
push dword_105D150  +
call ds:EndPage  +
cmp dword_105DBE0 ebx +
jz loc_100F7FB  +
mov eax [ebp+var_90] +
cmp eax dword_105DC14 +
jl loc_100F78F  +
push ebx  +
push ebx  +
push esi  +
push [ebp+var_64]  +
call ds:SendMessageW  +
cmp dword_105DBE4 ebx +
jnz loc_100F831  +
cmp dword_105DBE0 ebx +
jz loc_100F831  +
push dword_105D150  +
call ds:EndDoc  +
test eax eax +
jg loc_100F83D  +
mov dword_105DBE4 91h +
push dword_105D150  +
call ds:AbortDoc  +
push [ebp+var_64]  +
call ds:DestroyWindow  +
push [ebp+hLibModule]  +
call ds:__imp_FreeLibrary  +
push dword ptr [ebp-84h]  +
call ds:LocalFree  +
push 1  +
push [ebp+hWnd]  +
call ds:EnableWindow  +
push dword_105DBE8  +
call ds:DestroyWindow  +
push dword_105DC0C  +
call ds:LocalFree  +
push dword_105D150  +
call ds:DeleteDC  +
push dword_105D14C  +
mov dword_105D150 ebx +
call ds:GlobalUnlock  +
mov eax dword_105DBE4 +
cmp eax ebx +
jz loc_100F8BE  +
push 10h  +
movzx eax ax +
push 10h  +
push eax  +
push [ebp+hWnd]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 4000h  +
push 40h  +
call ds:LocalAlloc  +
xor esi esi +
mov dword_105DC0C eax +
cmp eax esi +
jz loc_100F9DE  +
mov ecx 0FEFFh +
mov [eax] cx +
xor eax eax +
inc eax  +
push edi  +
mov dword_105DC10 2000h +
mov dword_105DC14 eax +
mov dword_105DBE0 eax +
mov dword_105DBE4 esi +
mov dword_105DC18 offset asc_100F9F0 +
call sub_100F369  +
push esi  +
push 80h  +
push 2  +
push esi  +
push esi  +
push 40000000h  +
push [ebp+NumberOfBytesWritten]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_100F9C7  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
mov eax dword_105DC14 +
add eax eax +
push eax  +
push dword_105DC0C  +
mov [ebp+NumberOfBytesWritten] esi +
push edi  +
call ds:WriteFile  +
test eax eax +
jnz loc_100F9BE  +
mov dword_105DBE4 8Dh +
push edi  +
call ds:CloseHandle  +
jmp loc_100F9D1  +
mov dword_105DBE4 8Ah +
push dword_105DC0C  +
call ds:LocalFree  +
pop edi  +
push dword_105DBE4  +
call sub_100E47C  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+hDlg] +
push esi  +
push edi  +
push 0  +
push 0  +
push 0C5h  +
mov esi 3E9h +
push esi  +
push ebx  +
call ds:SendDlgItemMessageW  +
mov edi [ebp+dwNewLong] +
push edi  +
push 8  +
push ebx  +
call ds:SetWindowLongW  +
mov eax [edi] +
test eax eax +
jz loc_100FA38  +
cmp word ptr [eax] 0 +
jz loc_100FA38  +
push eax  +
jmp loc_100FA3E  +
push lpString  +
push 3E8h  +
push ebx  +
call ds:SetDlgItemTextW  +
push dword ptr [edi+4]  +
push esi  +
push ebx  +
call ds:SetDlgItemTextW  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_100FB20  +
dec eax  +
jz loc_100FA81  +
xor eax eax +
jmp loc_100FB2E  +
movzx eax word ptr [ebp+nResult] +
mov [ebp+nResult] eax +
dec eax  +
jz loc_100FA94  +
dec eax  +
jnz loc_100FB1B  +
jmp loc_100FB0F  +
push ebx  +
push esi  +
push edi  +
push 8  +
push [ebp+hDlg]  +
call ds:GetWindowLongW  +
push 0  +
push 0  +
push 0Eh  +
mov ebx 3E9h +
push ebx  +
push [ebp+hDlg]  +
mov esi eax +
call ds:SendDlgItemMessageW  +
lea edi [eax+eax+4] +
cmp edi [esi+8] +
jbe loc_100FAF6  +
push 2  +
push edi  +
push dword ptr [esi+4]  +
call ds:LocalReAlloc  +
test eax eax +
jnz loc_100FAF3  +
push eax  +
push 10h  +
push 70h  +
push 76h  +
push [ebp+hDlg]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov [ebp+nResult] 2 +
jmp loc_100FAF6  +
mov [esi+4] eax +
lea eax [edi-2] +
mov [esi+8] eax +
shr eax 1 +
push eax  +
push dword ptr [esi+4]  +
push ebx  +
push [ebp+hDlg]  +
call ds:GetDlgItemTextW  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+nResult]  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_100FB2E  +
push [ebp+dwNewLong]  +
push [ebp+nResult]  +
push [ebp+hDlg]  +
call sub_100F9FB  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
xor edi edi +
inc edi  +
xor ebx ebx +
mov [ebp+var_4] edi +
cmp dword_101D0D4 ebx +
jz loc_100FB80  +
mov eax [ebp+arg_4] +
push esi  +
mov esi ds:SendMessageW +
push ebx  +
push ebx  +
push 1018h  +
push dword ptr [eax]  +
call esi  +
cmp eax ebx +
jz loc_100FB7F  +
push ebx  +
push 0FFh  +
push 0C5h  +
push eax  +
mov dword_105D4D4 edi +
call esi  +
mov [ebp+var_4] ebx +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor ebx ebx +
xor edi edi +
inc ebx  +
mov dword_105D4D4 edi +
mov [ebp+var_21C] eax +
mov [ebp+var_208] ebx +
cmp [esi+20h] edi +
jz loc_100FD5E  +
lea eax [ebp+ValueName] +
mov [ebp+var_244] eax +
lea eax [ebp+lParam] +
push eax  +
push dword ptr [esi+10h]  +
mov [ebp+var_250] edi +
push 1073h  +
push dword_101D094  +
mov [ebp+var_240] 100h +
call ds:SendMessageW  +
mov eax [esi+20h] +
cmp [eax] di +
jnz loc_100FC20  +
mov [ebp+var_210] 4Bh +
mov [ebp+var_208] edi +
jmp loc_100FD37  +
lea ecx [ebp+Type] +
push ecx  +
push edi  +
push ecx  +
push edi  +
push eax  +
push phkResult  +
call sub_1003313  +
mov [ebp+var_208] edi +
cmp eax 2 +
jz loc_100FC50  +
mov [ebp+var_210] 4Ah +
jmp loc_100FD37  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+dwType] +
push eax  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
cmp [ebp+dwType] ebx +
jz loc_100FC90  +
cmp [ebp+dwType] 2 +
jz loc_100FC90  +
cmp [ebp+dwType] 7 +
jz loc_100FC90  +
xor eax eax +
jmp loc_100FC93  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
cmp ebx edi +
jz loc_100FD25  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+dwType] +
push eax  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
mov [ebp+var_210] 49h +
call sub_1003313  +
test eax eax +
jnz loc_100FD1C  +
push [ebp+cbData]  +
push ebx  +
push [ebp+dwType]  +
push edi  +
push dword ptr [esi+20h]  +
push phkResult  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_100FD1C  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call ds:RegDeleteValueW  +
test eax eax +
jnz loc_100FD1C  +
mov [ebp+var_208] 1 +
push ebx  +
call ds:LocalFree  +
jmp loc_100FD2F  +
mov [ebp+var_210] 76h +
cmp [ebp+var_208] edi +
jnz loc_100FD5E  +
lea eax [ebp+ValueName] +
push eax  +
movzx eax word ptr [ebp+var_210] +
push 10h  +
push 48h  +
push eax  +
push [ebp+var_21C]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov ecx [ebp+var_4] +
mov eax [ebp+var_208] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push 0  +
push 0  +
push 1032h  +
push dword_101D094  +
call ds:SendMessageW  +
mov esi ds:EnableMenuItem +
xor ecx ecx +
cmp eax 1 +
setnz cl  +
mov [ebp+var_4] eax +
mov edi ecx +
push edi  +
push 390h  +
push [ebp+hMenu]  +
call esi  +
cmp [ebp+arg_4] 0 +
jnz loc_100FDBE  +
xor edi edi +
inc edi  +
push edi  +
push 392h  +
push [ebp+hMenu]  +
call esi  +
xor eax eax +
cmp eax [ebp+var_4] +
sbb eax eax +
inc eax  +
push eax  +
push 391h  +
push [ebp+hMenu]  +
call esi  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi [ebp+hWnd] +
mov dword_101D0D4 1 +
cmp edi dword_101D09C +
jz loc_100FE2C  +
and [ebp+var_30] 0 +
lea eax [ebp+lParam] +
push eax  +
push 0FFFFFFFFh  +
push 102Bh  +
push edi  +
mov [ebp+var_2C] 3 +
call esi  +
push edi  +
call ds:SetFocus  +
push 0  +
push [ebp+wParam]  +
push 1076h  +
push edi  +
call esi  +
and dword_101D0D4 0 +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi+8] +
xor eax eax +
mov esi ecx +
inc eax  +
shr esi 1 +
cmp esi eax +
mov [ebp+var_4] eax +
jle loc_100FEDA  +
lea eax [esi-2] +
xor edx edx +
push ebx  +
mov ebx [edi+4] +
test eax eax +
jl loc_100FE7F  +
cmp word ptr [ebx+eax*2] 0 +
jnz loc_100FE7C  +
inc edx  +
dec eax  +
jns loc_100FE74  +
lea eax [ecx+edx*2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
xor ecx ecx +
cmp eax ecx +
jz loc_100FED6  +
lea edx [esi-1] +
xor esi esi +
mov [ebp+arg_0] edx +
test edx edx +
jle loc_100FEBC  +
movzx edx word ptr [ebx+esi*2] +
test dx dx +
jnz loc_100FEB1  +
push 0Dh  +
pop edx  +
mov [eax+ecx*2] dx +
push 0Ah  +
inc ecx  +
pop edx  +
mov [eax+ecx*2] dx +
inc ecx  +
inc esi  +
cmp esi [ebp+arg_0] +
jl loc_100FE9D  +
add ecx ecx +
xor edx edx +
mov [ecx+eax] dx +
add ecx 2 +
push ebx  +
mov [edi+4] eax +
mov [edi+8] ecx +
call ds:LocalFree  +
jmp loc_100FED9  +
mov [ebp+var_4] ecx +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov ecx [ebx+8] +
mov eax [ebx+4] +
shr ecx 1 +
cmp ecx 1 +
jle loc_100FF4D  +
push esi  +
xor edx edx +
cmp ecx 3 +
push edi  +
jl loc_100FF18  +
cmp word ptr [eax+ecx*2-6] 0Dh +
jnz loc_100FF18  +
xor esi esi +
mov [eax+ecx*2-6] si +
dec ecx  +
dec ecx  +
xor edi edi +
test ecx ecx +
jle loc_100FF3C  +
movzx esi word ptr [eax+edi*2] +
cmp si 0Dh +
jnz loc_100FF32  +
xor esi esi +
mov [eax+edx*2] si +
inc edx  +
inc edi  +
jmp loc_100FF37  +
mov [eax+edx*2] si +
inc edx  +
inc edi  +
cmp edi ecx +
jl loc_100FF1E  +
lea ecx [edx+edx] +
xor edx edx +
mov [ecx+eax] dx +
add ecx 2 +
pop edi  +
mov [ebx+8] ecx +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
mov ecx [ebx+8] +
mov eax [ebx+4] +
shr ecx 1 +
cmp ecx 1 +
jle loc_100FFDC  +
push esi  +
xor esi esi +
push edi  +
dec ecx  +
xor edi edi +
test ecx ecx +
jle loc_100FF9B  +
movzx edx word ptr [eax+edi*2] +
test dx dx +
jnz loc_100FF91  +
cmp [eax+edi*2+2] dx +
jz loc_100FF96  +
test dx dx +
jnz loc_100FF91  +
test edi edi +
jz loc_100FF96  +
mov [eax+esi*2] dx +
inc esi  +
inc edi  +
cmp edi ecx +
jl loc_100FF78  +
xor edx edx +
mov [eax+esi*2] dx +
inc esi  +
cmp esi 1 +
jle loc_100FFD4  +
sub ecx esi +
mov [eax+esi*2] dx +
inc esi  +
test ecx ecx +
jz loc_100FFD4  +
xor eax eax +
cmp ecx 1 +
push edx  +
setnz al  +
push 10h  +
push 6Fh  +
add eax 74h +
push eax  +
push [ebp+arg_0]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
lea eax [esi+esi] +
pop edi  +
mov [ebx+8] eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor ecx ecx +
mov [ebp+var_4] ecx +
lea eax [ebp+arg_3] +
mov dl [eax] +
mov byte ptr [ebp+ecx+var_4] dl +
inc ecx  +
dec eax  +
cmp ecx 4 +
jl loc_100FFF4  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_210] 0 +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword_101D094  +
mov [ebp+hWndParent] eax +
call esi  +
and [ebp+var_250] 0 +
mov edi eax +
lea eax [ebp+ValueName] +
mov [ebp+var_244] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 1073h  +
push dword_101D094  +
mov [ebp+var_240] 100h +
call esi  +
xor esi esi +
cmp edi esi +
jnz loc_101008E  +
xor eax eax +
mov word ptr [ebp+ValueName] ax +
lea eax [ebp+ValueName] +
mov [ebp+var_21C] eax +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
cmp eax esi +
jz loc_10100D6  +
cmp eax 2 +
jnz loc_10100CE  +
cmp word ptr [ebp+ValueName] si +
jz loc_10100D6  +
push 72h  +
pop esi  +
jmp loc_10101A3  +
xor edi edi +
inc edi  +
cmp [ebp+Type] edi +
jz loc_10100F7  +
cmp [ebp+Type] 2 +
jz loc_10100F7  +
cmp [ebp+Type] 7 +
jz loc_10100F7  +
xor eax eax +
jmp loc_10100FA  +
push 2  +
pop eax  +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_1010191  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
cmp eax 2 +
jnz loc_1010156  +
cmp word ptr [ebp+ValueName] si +
jnz loc_101017A  +
mov ecx [ebp+hMem] +
xor eax eax +
mov [ebp+Type] edi +
mov [ecx] ax +
cmp eax esi +
jnz loc_101017A  +
push [ebp+Type]  +
lea eax [ebp+var_21C] +
push eax  +
push [ebp+hWndParent]  +
call sub_1018815  +
mov esi [ebp+hWndParent] +
jmp loc_1010183  +
push 72h  +
pop esi  +
mov [ebp+var_210] edi +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_101019A  +
push 76h  +
pop esi  +
mov [ebp+var_210] edi +
cmp [ebp+var_210] 0 +
jz loc_10101C6  +
lea eax [ebp+ValueName] +
push eax  +
push 10h  +
movzx eax si +
push 70h  +
push eax  +
push [ebp+hWndParent]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi dword_101D094 +
push 0  +
push 0  +
push 1032h  +
push edi  +
call esi  +
cmp eax 1 +
jnz loc_1010218  +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push edi  +
call esi  +
test eax eax +
jz loc_1010218  +
push eax  +
push dword_101D094  +
call sub_100FDE7  +
pop edi  +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_1D4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov [ebp+hWnd] eax +
test esi esi +
jnz loc_101025C  +
mov edi dword_101D0B8 +
jmp loc_101048B  +
mov ebx dword ptr [ebp+arg_10] +
cmp ebx 1 +
jz loc_101044B  +
cmp ebx 2 +
jz loc_101044B  +
cmp ebx 4 +
jz loc_1010417  +
cmp ebx 5 +
jz loc_1010417  +
cmp ebx 0Bh +
jnz loc_10102B9  +
cmp [ebp+arg_C] 8 +
jnz loc_10102A0  +
push dword ptr [esi+4]  +
mov eax [esi] +
push eax  +
push 20h  +
call sub_1003915  +
add esp 0Ch +
jmp loc_10102A8  +
push 21h  +
call sub_1003915  +
pop ecx  +
mov edi eax +
mov [ebp+var_1D4] 1 +
jmp loc_1010493  +
cmp ebx 7 +
jnz loc_1010388  +
push 188h  +
lea eax [ebp+var_1C8] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
cmp word ptr [esi] 0 +
lea eax [ebp+var_1C8] +
mov [ebp+var_1CC] 0C1h +
mov [ebp+var_1D0] eax +
jz loc_101037A  +
cmp [ebp+var_1CC] 0 +
jle loc_1010368  +
push esi  +
call ds:lstrlenW  +
push esi  +
push [ebp+var_1CC]  +
mov edi eax +
push [ebp+var_1D0]  +
call sub_1002D3F  +
sub [ebp+var_1CC] edi +
lea ebx [edi+edi] +
add [ebp+var_1D0] ebx +
cmp [ebp+var_1CC] 0 +
jle loc_1010357  +
push (offset a23456789abcdef+1Ch)  +
push [ebp+var_1CC]  +
push [ebp+var_1D0]  +
call sub_1002D3F  +
add [ebp+var_1D0] 2 +
dec [ebp+var_1CC]  +
lea esi [esi+ebx+2] +
cmp word ptr [esi] 0 +
jnz loc_10102F8  +
cmp [ebp+var_1CC] 0 +
jge loc_101037A  +
push offset a___  +
push 4  +
lea eax [ebp+var_48] +
push eax  +
call sub_1002D3F  +
mov ebx dword ptr [ebp+arg_10] +
lea edi [ebp+var_1C8] +
jmp loc_1010493  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jnz loc_101039A  +
mov edi dword_101D0BC +
jmp loc_101048B  +
push 40h  +
pop edi  +
mov [ebp+var_1CC] 0C4h +
cmp ebx edi +
jnb loc_10103AD  +
mov edi ebx +
lea eax [ebp+var_1C8] +
mov [ebp+var_1D0] eax +
jmp loc_10103EA  +
movzx eax byte ptr [esi] +
push eax  +
push offset a02x_1  +
push 0  +
lea eax [ebp+var_1CC] +
push eax  +
lea eax [ebp+var_1D0] +
push eax  +
push [ebp+var_1CC]  +
dec edi  +
push [ebp+var_1D0]  +
call sub_100E659  +
add esp 1Ch +
inc esi  +
test edi edi +
jnz loc_10103BB  +
mov eax [ebp+var_1D0] +
dec eax  +
dec eax  +
xor ecx ecx +
mov [eax] cx +
cmp ebx 40h +
jbe loc_1010485  +
push offset a___  +
push [ebp+var_1CC]  +
push eax  +
call sub_1002D3F  +
jmp loc_1010485  +
cmp [ebp+arg_C] 4 +
jnz loc_1010435  +
mov eax [esi] +
cmp ebx 5 +
jnz loc_101042A  +
push eax  +
call sub_100FFE6  +
push eax  +
push 1Dh  +
call sub_1003915  +
pop ecx  +
jmp loc_101043C  +
push 1Eh  +
call sub_1003915  +
mov edi eax +
pop ecx  +
mov [ebp+var_1D4] 1 +
jmp loc_101048B  +
push esi  +
push offset a_192s  +
mov esi 0C4h +
lea eax [ebp+var_1C8] +
push esi  +
push eax  +
call sub_10062BE  +
mov eax [ebp+arg_C] +
and eax 0FFFFFFFEh +
add esp 10h +
cmp eax 182h +
jbe loc_1010485  +
push offset a___  +
push esi  +
lea eax [ebp+var_1C8] +
push eax  +
call sub_101278A  +
lea edi [ebp+var_1C8] +
mov ebx dword ptr [ebp+arg_10] +
cmp ebx 0Bh +
ja loc_10104A9  +
mov eax ds:off_101055C[ebx*4] +
mov [ebp+var_2C] eax +
mov [ebp+var_38] 1 +
lea eax [ebp+var_40] +
jmp loc_10104D6  +
push ebx  +
push offset a0xX  +
lea eax [ebp+var_34] +
push 18h  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_34] +
mov [ebp+var_200] eax +
add esp 10h +
mov [ebp+var_20C] 1 +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov esi 1074h +
push esi  +
push [ebp+hWnd]  +
call ds:SendMessageW  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_20C] 2 +
push esi  +
push [ebp+hWnd]  +
mov [ebp+var_200] edi +
call ds:SendMessageW  +
cmp [ebp+var_1D4] 0 +
jz loc_1010523  +
push edi  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 258h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_218] eax +
cmp phkResult edi +
jz loc_1010778  +
push ebx  +
mov dword ptr [ebp+var_214] 1 +
push esi  +
push dword ptr [ebp+var_214]  +
lea eax [ebp+ValueName] +
push dword_101D0D0  +
push 100h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+Type] +
push eax  +
push edi  +
push eax  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
mov ebx [ebp+arg_4] +
push 3  +
pop esi  +
test eax eax +
jnz loc_101065F  +
inc dword ptr [ebp+var_214]  +
cmp dword ptr [ebp+var_214] 64h +
jb loc_10105D4  +
cmp dword ptr [ebp+var_214] 64h +
jnz loc_10106E1  +
mov eax 0AAh +
push 10h  +
movzx eax ax +
push 0A8h  +
push eax  +
push [ebp+var_218]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
jmp loc_1010776  +
cmp ebx edi +
jbe loc_10106B0  +
push 2  +
pop ecx  +
cmp ebx ecx +
jbe loc_10106A4  +
cmp ebx esi +
jz loc_101069C  +
push 4  +
pop eax  +
cmp ebx eax +
jz loc_1010691  +
cmp ebx 7 +
jz loc_10106A4  +
cmp ebx 0Bh +
jnz loc_10106B0  +
mov [ebp+Data] edi +
mov [ebp+var_8] edi +
mov [ebp+cbData] 8 +
jmp loc_10106B0  +
mov [ebp+Data] edi +
mov [ebp+cbData] eax +
jmp loc_10106B0  +
mov [ebp+cbData] edi +
jmp loc_10106B0  +
xor eax eax +
mov word ptr [ebp+Data] ax +
mov [ebp+cbData] ecx +
push [ebp+cbData]  +
lea eax [ebp+Data] +
push eax  +
push ebx  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_1010629  +
mov eax 0A9h +
jmp loc_101063B  +
push edi  +
push edi  +
push 1004h  +
push dword_101D094  +
mov [ebp+lParam] esi +
mov esi ds:SendMessageW +
lea eax [ebp+ValueName] +
mov [ebp+var_244] eax +
call esi  +
mov [ebp+var_254] eax +
mov [ebp+var_250] edi +
cmp ebx 1 +
jz loc_101072D  +
cmp ebx 2 +
jz loc_101072D  +
mov [ebp+var_23C] 5 +
cmp ebx 7 +
jnz loc_1010737  +
mov [ebp+var_23C] 4 +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 104Dh  +
push dword_101D094  +
call esi  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1010776  +
push ebx  +
push [ebp+cbData]  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push dword_101D094  +
call sub_1010222  +
push esi  +
push dword_101D094  +
call sub_100FDE7  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 25Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 2  +
pop ebx  +
push ebx  +
push 0FFFFFFFFh  +
push 100Ch  +
push dword_101D094  +
xor edi edi +
mov [ebp+hWndParent] eax +
mov [ebp+var_21C] edi +
call esi  +
lea ecx [ebp+ValueName] +
mov [ebp+var_248] ecx +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
push 1073h  +
push dword_101D094  +
mov [ebp+wParam] eax +
mov [ebp+var_254] edi +
mov [ebp+var_244] 100h +
call esi  +
cmp [ebp+wParam] edi +
jnz loc_1010816  +
xor eax eax +
mov word ptr [ebp+ValueName] ax +
lea eax [ebp+ValueName] +
mov [ebp+dwInitParam] eax +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call sub_1003313  +
xor esi esi +
inc esi  +
cmp eax ebx +
jnz loc_1010860  +
cmp word ptr [ebp+ValueName] di +
jnz loc_1010AF4  +
mov dword ptr [ebp+Type] esi +
xor eax eax +
cmp eax edi +
jnz loc_1010AF4  +
cmp dword ptr [ebp+Type] esi +
jz loc_1010885  +
cmp dword ptr [ebp+Type] ebx +
jz loc_1010885  +
cmp dword ptr [ebp+Type] 7 +
jz loc_1010885  +
xor eax eax +
jmp loc_1010887  +
mov eax ebx +
mov ecx [ebp+cbData] +
add eax ecx +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_1010AE8  +
push 67h  +
pop esi  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
mov edi offset loc_100631D +
call sub_1003313  +
cmp eax ebx +
jnz loc_10108F9  +
xor eax eax +
cmp word ptr [ebp+ValueName] ax +
jnz loc_1010AC4  +
mov edx [ebp+hMem] +
xor ecx ecx +
mov dword ptr [ebp+Type] 1 +
mov [edx] cx +
test eax eax +
jnz loc_1010AC4  +
cmp [ebp+arg_4] eax +
jnz loc_101095B  +
mov eax dword ptr [ebp+Type] +
cmp eax 7 +
ja loc_1010A59  +
jz loc_1010A41  +
test eax eax +
jbe loc_101095B  +
cmp eax ebx +
jbe loc_1010A34  +
cmp eax 4 +
jz loc_1010A22  +
cmp eax 5 +
jnz loc_101095B  +
cmp [ebp+cbData] 4 +
jnz loc_101095B  +
mov eax [ebp+hMem] +
push dword ptr [eax]  +
call sub_100FFE6  +
mov ecx [ebp+hMem] +
mov [ecx] eax +
push 6Fh  +
pop esi  +
mov edi offset sub_1007BF9 +
lea eax [ebp+dwInitParam] +
push eax  +
push edi  +
push [ebp+hWndParent]  +
movzx eax si +
push eax  +
push dword_101D054  +
call ds:DialogBoxParamW  +
xor esi esi +
inc esi  +
cmp eax esi +
jnz loc_1010AD8  +
cmp dword ptr [ebp+Type] 7 +
jnz loc_10109B1  +
cmp [ebp+arg_4] 0 +
jnz loc_10109DE  +
lea eax [ebp+dwInitParam] +
push eax  +
call sub_100FEE8  +
lea eax [ebp+dwInitParam] +
push eax  +
push [ebp+hWndParent]  +
call sub_100FF57  +
cmp dword ptr [ebp+Type] 5 +
jnz loc_10109DE  +
cmp [ebp+arg_4] 0 +
jnz loc_10109DE  +
cmp [ebp+cbData] 4 +
jnz loc_10109DE  +
mov eax [ebp+hMem] +
push dword ptr [eax]  +
call sub_100FFE6  +
mov ecx [ebp+hMem] +
mov [ecx] eax +
push [ebp+cbData]  +
lea eax [ebp+ValueName] +
push [ebp+hMem]  +
push dword ptr [ebp+Type]  +
push 0  +
push eax  +
push phkResult  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_1010A9F  +
mov [ebp+wParam] 73h +
mov [ebp+var_21C] esi +
jmp loc_1010AD8  +
cmp [ebp+cbData] 4 +
jz loc_1010953  +
jmp loc_101095B  +
push 66h  +
pop esi  +
mov edi offset sub_100FA64 +
jmp loc_101095B  +
lea eax [ebp+dwInitParam] +
push eax  +
call sub_100FE4B  +
test eax eax +
jz loc_101095B  +
push 72h  +
jmp loc_1010A36  +
cmp eax 8 +
jb loc_101095B  +
cmp eax 0Ah +
jbe loc_1010A8A  +
cmp eax 0Bh +
jnz loc_101095B  +
cmp [ebp+cbData] 8 +
jnz loc_101095B  +
push 75h  +
pop esi  +
mov edi offset loc_1007C9B +
jmp loc_101095B  +
lea ecx [ebp+dwInitParam] +
push ecx  +
push eax  +
push [ebp+hWndParent]  +
call sub_1018C24  +
jmp loc_1010AD8  +
push dword ptr [ebp+Type]  +
push [ebp+cbData]  +
push [ebp+hMem]  +
push [ebp+wParam]  +
push dword_101D094  +
call sub_1010222  +
jmp loc_1010AD8  +
mov [ebp+wParam] 72h +
mov [ebp+var_21C] 1 +
push [ebp+hMem]  +
call ds:LocalFree  +
xor edi edi +
jmp loc_1010B04  +
mov [ebp+wParam] 76h +
jmp loc_1010AFE  +
mov [ebp+wParam] 72h +
mov [ebp+var_21C] esi +
cmp [ebp+var_21C] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1010B36  +
lea eax [ebp+ValueName] +
push eax  +
movzx eax word ptr [ebp+wParam] +
push 10h  +
push 70h  +
push eax  +
push [ebp+hWndParent]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
mov edi dword_101D094 +
xor ebx ebx +
push ebx  +
push ebx  +
push 1032h  +
push edi  +
mov [ebp+var_20C] eax +
call esi  +
dec eax  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 34h +
push 34h  +
movzx eax ax +
push 33h  +
push eax  +
push [ebp+var_20C]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
cmp eax 6 +
jnz loc_1010C9D  +
push ebx  +
push ebx  +
push 0Bh  +
push edi  +
call esi  +
or [ebp+var_208] 0FFFFFFFFh +
push 2  +
mov [ebp+var_210] ebx +
push 0FFFFFFFFh  +
jmp loc_1010C5E  +
test ebx ebx +
jz loc_1010C02  +
and [ebp+var_244] 0 +
lea eax [ebp+ValueName] +
mov [ebp+var_238] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1073h  +
push edi  +
mov [ebp+var_234] 100h +
call esi  +
jmp loc_1010C0B  +
xor eax eax +
mov [ebp+ValueName] ax +
lea eax [ebp+ValueName] +
push eax  +
push phkResult  +
call ds:RegDeleteValueW  +
test eax eax +
jnz loc_1010C46  +
cmp ebx eax +
jz loc_1010C32  +
push eax  +
push ebx  +
push 1008h  +
push edi  +
call esi  +
jmp loc_1010C56  +
push 1  +
push eax  +
push eax  +
push eax  +
push edi  +
call sub_1010222  +
and [ebp+var_208] 0 +
jmp loc_1010C56  +
mov [ebp+var_210] 1 +
mov [ebp+var_208] ebx +
push 2  +
push [ebp+var_208]  +
push 100Ch  +
push edi  +
call esi  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_1010BCF  +
push 0  +
push 1  +
push 0Bh  +
push edi  +
call esi  +
cmp [ebp+var_210] 0 +
jz loc_1010C9D  +
push 10h  +
push 58h  +
push 59h  +
push [ebp+var_20C]  +
push dword_101D054  +
call sub_100CA02  +
add esp 14h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push 1032h  +
push dword_101D094  +
call ds:SendMessageW  +
test eax eax +
jbe loc_1010CDE  +
cmp eax 1 +
jz loc_1010CE2  +
push 0  +
call ds:MessageBeep  +
pop ebp  +
retn 8  +
pop ebp  +
jmp loc_101078C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
lea ecx [eax-280h] +
cmp ecx 7Fh +
ja loc_1010D0F  +
push 0  +
push 0  +
push eax  +
push [ebp+arg_0]  +
call sub_1009FF7  +
jmp loc_1010D54  +
sub eax 380h +
jz loc_1010D4A  +
sub eax 10h +
jz loc_1010D3E  +
dec eax  +
jz loc_1010D34  +
dec eax  +
jz loc_1010D2A  +
sub eax 3 +
jnz loc_1010D54  +
push 1  +
jmp loc_1010D40  +
push [ebp+arg_0]  +
call sub_10101DB  +
jmp loc_1010D54  +
push [ebp+arg_0]  +
call sub_1010B49  +
jmp loc_1010D54  +
push 0  +
push [ebp+arg_0]  +
call sub_1010CB3  +
jmp loc_1010D54  +
push 1  +
push [ebp+arg_0]  +
call sub_1010D5D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 294h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_214] eax +
xor eax eax +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+lParam] ebx +
lea edi [ebp+var_22C] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_240] ebx +
lea edi [ebp+var_23C] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_220.cy] +
mov [ebp+var_220._cx] ebx +
stos   +
mov edi dword_101D094 +
cmp [ebp+arg_4] ebx +
jz loc_1010ED1  +
mov esi ds:SendMessageW +
push 2  +
push 0FFFFFFFFh  +
push 100Ch  +
push edi  +
mov [ebp+Point] ebx +
mov [ebp-20Ch] ebx +
call esi  +
mov [ebp+wParam] eax +
cmp eax 0FFFFFFFFh +
jz loc_1010EC1  +
push ebx  +
push eax  +
push 1013h  +
push edi  +
call esi  +
lea eax [ebp+lParam] +
push eax  +
push [ebp+wParam]  +
mov [ebp+lParam] ebx +
push 100Eh  +
push edi  +
call esi  +
lea eax [ebp+var_240] +
push eax  +
push ebx  +
push 1207h  +
push ebx  +
push ebx  +
push 101Fh  +
push edi  +
call esi  +
push eax  +
call esi  +
lea eax [ebp+String] +
mov [ebp+var_280] eax +
lea eax [ebp+var_294] +
push eax  +
push [ebp+wParam]  +
mov [ebp+var_28C] ebx +
push 1073h  +
push edi  +
mov [ebp+var_27C] 100h +
call esi  +
push edi  +
call ds:GetDC  +
mov esi eax +
lea eax [ebp+var_220] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
push eax  +
lea eax [ebp+String] +
push eax  +
push esi  +
call ds:GetTextExtentPoint32W  +
push esi  +
push edi  +
call ds:ReleaseDC  +
mov ecx [ebp+var_220._cx] +
mov eax [ebp+lParam] +
add eax ecx +
mov ecx [ebp+var_238] +
cmp eax ecx +
mov [ebp+Point] eax +
jle loc_1010EB5  +
mov [ebp+Point] ecx +
mov eax [ebp+var_22C] +
mov [ebp-20Ch] eax +
lea eax [ebp+Point] +
push eax  +
push edi  +
call ds:ClientToScreen  +
jmp loc_1010F1E  +
call ds:GetMessagePos  +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp-20Ch] eax +
mov [ebp+var_254] eax +
lea eax [ebp+var_258] +
push eax  +
push edi  +
mov [ebp+Point] ecx +
mov [ebp+var_258] ecx +
call ds:ScreenToClient  +
lea eax [ebp+var_258] +
push eax  +
push ebx  +
push 1012h  +
push edi  +
call ds:SendMessageW  +
mov [ebp+wParam] eax +
xor eax eax +
cmp [ebp+wParam] 0FFFFFFFFh +
setz al  +
add eax 69h +
push eax  +
push dword_101D054  +
call ds:LoadMenuW  +
mov edi eax +
cmp edi ebx +
jz loc_1010FBC  +
mov esi ds:GetSubMenu +
push ebx  +
push edi  +
call esi  +
cmp [ebp+wParam] 0FFFFFFFFh +
mov [ebp+hMenu] eax +
jz loc_1010F79  +
push [ebp+wParam]  +
push edi  +
call sub_100FD7A  +
push ebx  +
push 390h  +
push [ebp+hMenu]  +
call ds:SetMenuDefaultItem  +
jmp loc_1010F83  +
push ebx  +
push eax  +
call esi  +
push eax  +
call sub_10085B3  +
push ebx  +
push [ebp+var_214]  +
push dword ptr [ebp-20Ch]  +
push [ebp+Point]  +
push 102h  +
push [ebp+hMenu]  +
call ds:TrackPopupMenuEx  +
push edi  +
mov esi eax +
call ds:DestroyMenu  +
push esi  +
push [ebp+var_214]  +
call sub_1010CED  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push 34h  +
push 36h  +
push 35h  +
push eax  +
push dword_101D054  +
mov [ebp+var_208] eax +
call sub_100CA02  +
add esp 14h +
cmp eax 6 +
jnz loc_10110D2  +
push esi  +
push edi  +
push 0  +
push 9  +
push 110Ah  +
push dword_101D090  +
call ds:SendMessageW  +
push 1  +
mov esi offset aSerestoreprivi +
push esi  +
mov edi eax +
call sub_100CC01  +
push phkResult  +
call ds:RegCloseKey  +
push 100h  +
lea eax [ebp+var_204] +
push eax  +
push edi  +
call sub_100B314  +
push eax  +
push edi  +
call sub_100B2BB  +
push eax  +
call ds:RegUnLoadKeyW  +
test eax eax +
jnz loc_1011077  +
push [ebp+var_208]  +
and phkResult eax +
call sub_100BE3D  +
jmp loc_10110C8  +
mov ecx 0B9h +
cmp eax 5 +
jz loc_101108B  +
cmp eax 522h +
jnz loc_1011090  +
dec ecx  +
jmp loc_1011090  +
mov ecx 0BBh +
lea eax [ebp+var_204] +
push eax  +
push 10h  +
movzx eax cx +
push 0BAh  +
push eax  +
push [ebp+var_208]  +
push dword_101D054  +
call sub_100CA02  +
and phkResult 0 +
add esp 18h +
push [ebp+var_208]  +
call sub_1003AD2  +
push 0  +
push esi  +
call sub_100CC01  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_10110FB  +
push esi  +
push 10h  +
push 10h  +
push 2Bh  +
jmp loc_1011144  +
mov eax dword_101D0EC +
push [ebp+arg_C]  +
dec eax  +
dec eax  +
push esi  +
jz loc_1011123  +
dec eax  +
jz loc_101111C  +
dec eax  +
jz loc_1011115  +
call sub_100DF99  +
jmp loc_1011128  +
call sub_100E167  +
jmp loc_1011128  +
call sub_100F91D  +
jmp loc_1011128  +
call sub_100D5C4  +
mov eax dword_101D068 +
cmp eax 88h +
jz loc_1011155  +
cmp eax 0E4h +
jz loc_1011155  +
push esi  +
push 10h  +
movzx eax ax +
push 10h  +
push eax  +
push [ebp+arg_0]  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push ebx  +
push esi  +
push [ebp+uID]  +
xor esi esi +
mov [ebp+hMem] esi +
call sub_1003915  +
cmp [ebp+arg_C] 134h +
pop ecx  +
mov [ebp+uID] eax +
jz loc_101118F  +
push [ebp+arg_C]  +
call sub_1003915  +
pop ecx  +
mov [ebp+hMem] eax +
push [ebp+arg_8]  +
call sub_1003915  +
mov ebx eax +
pop ecx  +
cmp ebx esi +
jz loc_10111BC  +
cmp [ebx] si +
jz loc_10111BC  +
cmp word ptr [eax] 23h +
jnz loc_10111B0  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
push eax  +
call ds:CharNextW  +
cmp [eax] si +
jnz loc_10111A3  +
mov esi [ebp+arg_10] +
push edi  +
push 58h  +
pop edi  +
xor eax eax +
push edi  +
push eax  +
mov [esi] ax +
lea eax [ebp+var_5C] +
push eax  +
call memset  +
mov eax [ebp+arg_0] +
mov [ebp+var_5C.hwndOwner] eax +
mov eax dword_101D054 +
mov [ebp+var_5C.lStructSize] edi +
mov edi [ebp+uID] +
mov [ebp+var_5C.hInstance] eax +
mov eax [ebp+arg_14] +
add esp 0Ch +
cmp [ebp+arg_18] 0 +
mov [ebp+var_5C.lpstrFilter] ebx +
mov [ebp+var_5C.lpstrFile] esi +
mov [ebp+var_5C.nMaxFile] eax +
mov [ebp+var_5C.lpstrTitle] edi +
jz loc_1011212  +
lea eax [ebp+var_5C] +
push eax  +
mov [ebp+var_5C.Flags] 81004h +
call ds:GetOpenFileNameW  +
jmp loc_101123B  +
mov eax [ebp+hMem] +
push 64h  +
mov [ebp+var_5C.lpstrDefExt] eax +
pop eax  +
mov [ebp+var_5C.lpTemplateName] eax +
mov dword_105E034 eax +
lea eax [ebp+var_5C] +
push eax  +
mov [ebp+var_5C.Flags] 88866h +
mov [ebp+var_5C.lpfnHook] offset sub_10074DA +
call ds:GetSaveFileNameW  +
mov esi ds:LocalFree +
mov [ebp+arg_C] eax +
test edi edi +
jz loc_101124B  +
push edi  +
call esi  +
cmp [ebp+hMem] 0 +
pop edi  +
jz loc_1011257  +
push [ebp+hMem]  +
call esi  +
test ebx ebx +
jz loc_101125E  +
push ebx  +
call esi  +
mov eax [ebp+arg_C] +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 110h +
jz loc_101127E  +
xor eax eax +
jmp loc_101128F  +
push [ebp+lpString]  +
push 64h  +
push [ebp+hDlg]  +
call ds:SetDlgItemTextW  +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2F0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hDlg] +
push ebx  +
push esi  +
push edi  +
push 66h  +
push eax  +
call ds:GetDlgItem  +
push himl  +
mov esi ds:SendMessageW +
push 1  +
push 1003h  +
push eax  +
mov [ebp+hWnd] eax +
call esi  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
xor ebx ebx +
mov [ebp+lParam] 3 +
mov [ebp+var_2B0] ebx +
call ds:GetClientRect  +
push 2Dh  +
call ds:GetSystemMetrics  +
mov edi [ebp+Rect.right] +
add eax eax +
push 2  +
sub edi eax +
call ds:GetSystemMetrics  +
sub edi eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 1061h  +
push [ebp+hWnd]  +
mov [ebp+var_2AC] edi +
call esi  +
push ebx  +
lea eax [ebp+var_20C] +
push ebx  +
mov [ebp+var_264] eax +
mov eax dword_101D090 +
mov edi 110Ah +
push edi  +
push eax  +
mov [ebp+var_278] 7 +
mov [ebp+var_274] ebx +
mov [ebp+var_270] ebx +
mov [ebp+var_25C] ebx +
mov [ebp+var_214] eax +
mov [ebp+var_23C] 1 +
call esi  +
mov [ebp+var_238] eax +
mov [ebp+var_258] eax +
lea eax [ebp+var_23C] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+var_214]  +
lea ecx [ebp+var_20C] +
mov [ebp+var_22C] ecx +
mov [ebp+var_228] 104h +
call esi  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
push 104Dh  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_238]  +
xor eax eax +
inc eax  +
mov [ebp+var_25C] eax +
push eax  +
jmp loc_1011412  +
mov [ebp+var_258] eax +
lea eax [ebp+var_23C] +
push eax  +
push ebx  +
push 113Eh  +
push [ebp+var_214]  +
call esi  +
lea eax [ebp+var_278] +
push eax  +
push ebx  +
push 104Dh  +
push [ebp+hWnd]  +
call esi  +
push [ebp+var_238]  +
push 1  +
inc [ebp+var_274]  +
push edi  +
push [ebp+var_214]  +
call esi  +
mov [ebp+var_238] eax +
cmp eax ebx +
jnz loc_10113DA  +
lea eax [ebp+var_2F0] +
push eax  +
push ebx  +
push 102Bh  +
push [ebp+hWnd]  +
xor edi edi +
inc edi  +
mov [ebp+var_2E0] edi +
mov [ebp+var_2E4] edi +
call esi  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push 104h  +
lea eax [ebp+File] +
push eax  +
push 134h  +
push 0B4h  +
push 0B5h  +
push ebx  +
call sub_101115F  +
test eax eax +
jz loc_101159B  +
and [ebp+dwInitParam] 0 +
push edi  +
xor eax eax +
lea edi [ebp+hMem] +
stos   +
push esi  +
stos   +
call sub_1003BEF  +
push 64h  +
pop eax  +
push eax  +
push 40h  +
mov [ebp+var_210] eax +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
pop edi  +
test eax eax +
jz loc_1011594  +
mov byte ptr [eax] 0 +
lea eax [ebp+dwInitParam] +
push eax  +
push offset sub_100FA64  +
push ebx  +
push 68h  +
push dword_101D054  +
call ds:DialogBoxParamW  +
cmp eax esi +
jnz loc_1011588  +
push esi  +
mov esi offset aSerestoreprivi +
push esi  +
call sub_100CC01  +
lea eax [ebp+File] +
push eax  +
push [ebp+hMem]  +
push phkResult  +
call ds:RegLoadKeyW  +
test eax eax +
jnz loc_101153A  +
push ebx  +
call sub_100BE3D  +
jmp loc_1011580  +
mov ecx 0B7h +
cmp eax 5 +
jz loc_101155A  +
cmp eax 20h +
jz loc_1011553  +
cmp eax 522h +
jnz loc_101155F  +
dec ecx  +
jmp loc_101155F  +
mov ecx 0BCh +
jmp loc_101155F  +
mov ecx 0BDh +
lea eax [ebp+File] +
push eax  +
push 10h  +
movzx eax cx +
push 0B5h  +
push eax  +
push ebx  +
push dword_101D054  +
call sub_100CA02  +
add esp 18h +
push 0  +
push esi  +
call sub_100CC01  +
push [ebp+hMem]  +
call ds:LocalFree  +
push 0  +
call sub_1003BEF  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 12Fh  +
push 131h  +
push 12Dh  +
push esi  +
call sub_101115F  +
test eax eax +
jz loc_101161E  +
push 1  +
call sub_1003BEF  +
mov eax dword_105E038 +
neg eax  +
sbb eax eax +
not eax  +
and eax offset String +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
push esi  +
call sub_10110E5  +
push 0  +
call sub_1003BEF  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
or [ebp+var_3C] 0FFFFFFFFh +
and [ebp+var_38] 0 +
push esi  +
push edi  +
push 66h  +
push [ebp+hDlg]  +
mov [ebp+lParam] 4 +
call ds:GetDlgItem  +
mov esi ds:SendMessageW +
push 2  +
push [ebp+var_3C]  +
mov edi 100Ch +
push edi  +
mov [ebp+hWnd] eax +
push eax  +
jmp loc_10116AC  +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 104Bh  +
push [ebp+hWnd]  +
call esi  +
push 1  +
call sub_1003BEF  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
push 0  +
push [ebp+hDlg]  +
call sub_10023B8  +
push [ebp+hDlg]  +
call sub_100BE3D  +
push 0  +
call sub_1003BEF  +
push 2  +
push [ebp+var_3C]  +
push edi  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_3C] eax +
cmp eax 0FFFFFFFFh +
jnz loc_101166D  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_1011707  +
dec eax  +
jz loc_10116D7  +
xor eax eax +
jmp loc_101171D  +
movzx eax [ebp+arg_8] +
dec eax  +
jz loc_10116E3  +
dec eax  +
jnz loc_1011702  +
jmp loc_10116F7  +
push 8  +
push [ebp+hDlg]  +
call ds:GetWindowLongW  +
push eax  +
push [ebp+hDlg]  +
call sub_1011632  +
push 0  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_101171D  +
push [ebp+dwNewLong]  +
push 8  +
push [ebp+hDlg]  +
call ds:SetWindowLongW  +
push [ebp+hDlg]  +
call sub_1011298  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwInitParam]  +
push offset sub_10116C1  +
push [ebp+hWndParent]  +
push 73h  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ds:SendMessageW +
push edi  +
push 0  +
push 9  +
mov edi 110Ah +
push edi  +
push dword_101D090  +
mov [ebp+hWndParent] eax +
mov [ebp+var_218] ebx +
call esi  +
push eax  +
push 8  +
push 110Bh  +
push dword_101D090  +
mov [ebp+lParam] eax +
call esi  +
push 1  +
call sub_1003BEF  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
mov ebx ds:DragQueryFileW +
call ebx  +
and [ebp+var_210] 0 +
mov [ebp+var_21C] eax +
test eax eax +
jbe loc_101184B  +
push 104h  +
lea eax [ebp+dwInitParam] +
push eax  +
push [ebp+var_210]  +
push [ebp+var_218]  +
call ebx  +
push 0  +
push 0  +
push edi  +
push dword_101D090  +
call esi  +
push eax  +
push 1  +
push edi  +
push dword_101D090  +
call esi  +
test eax eax +
jz loc_1011817  +
lea eax [ebp+dwInitParam] +
push eax  +
push [ebp+hWndParent]  +
call sub_1011726  +
jmp loc_1011837  +
push [ebp+lParam]  +
call sub_10086ED  +
push eax  +
lea eax [ebp+dwInitParam] +
push eax  +
push 0  +
push [ebp+hWndParent]  +
call sub_10023B8  +
inc [ebp+var_210]  +
mov eax [ebp+var_210] +
cmp eax [ebp+var_21C] +
jb loc_10117CC  +
push [ebp+var_218]  +
call ds:DragFinish  +
push 0  +
push 8  +
push 110Bh  +
push dword_101D090  +
call esi  +
push [ebp+hWndParent]  +
call sub_100BE3D  +
push 0  +
call sub_1003BEF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push 1  +
push 104h  +
lea ecx [ebp+dwInitParam] +
push ecx  +
push 12Fh  +
push 12Eh  +
push 12Ch  +
push eax  +
mov [ebp+hWndParent] eax +
call sub_101115F  +
test eax eax +
jz loc_1011943  +
push ebx  +
push esi  +
mov esi ds:SendMessageW +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
mov edi 110Ah +
push edi  +
push dword_101D090  +
call esi  +
push eax  +
push 1  +
push edi  +
push dword_101D090  +
call esi  +
test eax eax +
jz loc_1011914  +
lea eax [ebp+dwInitParam] +
push eax  +
push [ebp+hWndParent]  +
call sub_1011726  +
jmp loc_1011940  +
push 1  +
call sub_1003BEF  +
push ebx  +
lea eax [ebp+dwInitParam] +
push eax  +
push ebx  +
push [ebp+hWndParent]  +
call sub_10023B8  +
push [ebp+hWndParent]  +
call sub_100BE3D  +
push ebx  +
call sub_1003BEF  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jle loc_101196C  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005880 +
mov dword ptr [esi+4] offset off_1005870 +
mov dword ptr [esi+8] offset off_1005860 +
jz loc_101199E  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_10119C5  +
cmp [ebp+arg_0] eax +
jnz loc_10119C9  +
cmp ecx eax +
jz loc_10119C9  +
jmp loc_10119CE  +
cmp ecx eax +
jz loc_10119CE  +
cmp ecx [ebp+arg_4] +
jbe loc_10119D3  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+30h] +
mov dword ptr [esi] offset off_10058CC +
mov dword ptr [esi+4] offset off_10058BC +
mov dword ptr [esi+8] offset off_10058AC +
test eax eax +
jz loc_1011A03  +
push eax  +
call ds:LocalFree  +
cmp dword ptr [esi+20h] 0 +
jz loc_1011A17  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_1011A17  +
push eax  +
call ds:RegCloseKey  +
push dword ptr [esi+40h]  +
call ds:AuthzFreeResourceManager  +
mov dword ptr [esi] offset off_1005880 +
mov dword ptr [esi+4] offset off_1005870 +
mov dword ptr [esi+8] offset off_1005860 +
pop esi  +
retn   +
***
mov eax [ecx+24h] +
push edi  +
xor edi edi +
cmp [ecx+20h] edi +
jnz loc_1011A83  +
sub eax edi +
jz loc_1011A7A  +
dec eax  +
jz loc_1011A71  +
dec eax  +
jz loc_1011A68  +
dec eax  +
jz loc_1011A5F  +
dec eax  +
jnz loc_1011AC8  +
mov dword ptr [ecx+2Ch] 80000005h +
jmp loc_1011AC8  +
mov dword ptr [ecx+2Ch] 80000003h +
jmp loc_1011AC8  +
mov dword ptr [ecx+2Ch] 80000002h +
jmp loc_1011AC8  +
mov dword ptr [ecx+2Ch] 80000001h +
jmp loc_1011AC8  +
mov dword ptr [ecx+2Ch] 80000000h +
jmp loc_1011AC8  +
cmp eax edi +
jl loc_1011A9E  +
cmp eax 1 +
jle loc_1011A9B  +
cmp eax 2 +
jz loc_1011AD5  +
cmp eax 3 +
jz loc_1011ACC  +
cmp eax 4 +
jnz loc_1011A9E  +
mov [ecx+2Ch] edi +
push esi  +
lea esi [ecx+2Ch] +
mov eax [esi] +
cmp eax edi +
jz loc_1011AC7  +
push esi  +
push eax  +
push dword ptr [ecx+18h]  +
call ds:RegConnectRegistryW  +
cmp eax edi +
jz loc_1011AC7  +
mov [esi] edi +
jle loc_1011AC5  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
pop esi  +
mov eax edi +
pop edi  +
retn   +
mov dword ptr [ecx+2Ch] 80000003h +
jmp loc_1011A9E  +
mov dword ptr [ecx+2Ch] 80000002h +
jmp loc_1011A9E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jnz loc_1011AF7  +
mov eax 80070057h +
jmp loc_1011B1A  +
push edi  +
mov edi [ebp+8] +
mov eax [edi+34h] +
push 0  +
mov [esi] eax +
call ds:GetModuleHandleW  +
mov [esi+4] eax +
mov eax [edi+18h] +
mov [esi+8] eax +
mov eax [edi+1Ch] +
mov [esi+0Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+14h] +
test edx edx +
jz loc_1011B54  +
mov ecx [ebp+18h] +
test ecx ecx +
jz loc_1011B54  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_1011B54  +
mov dword ptr [edx] offset unk_105D550 +
mov dword ptr [ecx] 0Ch +
mov dword ptr [eax] 0Ah +
xor eax eax +
jmp loc_1011B59  +
mov eax 80070057h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jz loc_1011B89  +
cmp dword ptr [ebp+14h] 0 +
jz loc_1011B89  +
and byte ptr [eax] 0FEh +
push offset unk_105D648  +
push dword ptr [ebp+14h]  +
call ds:MapGenericMask  +
xor eax eax +
jmp loc_1011B8E  +
mov eax 80070057h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_1011BBA  +
mov eax [ebp+10h] +
test eax eax +
jz loc_1011BBA  +
mov dword ptr [ecx] offset unk_105D610 +
mov dword ptr [eax] 3 +
xor eax eax +
jmp loc_1011BBF  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
dec eax  +
jz loc_1011BE5  +
sub eax 400h +
jnz loc_1011BEC  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax+3Ch] ecx +
jmp loc_1011BEC  +
mov eax [ebp+8] +
and dword ptr [eax+3Ch] 0 +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+14h] esi +
jz loc_1011C0B  +
mov eax 80004001h +
jmp loc_1011C47  +
cmp [ebp+10h] esi +
jnz loc_1011C17  +
mov eax 80070057h +
jmp loc_1011C47  +
mov ecx [ebp+8] +
mov ecx [ecx+30h] +
mov eax 8007000Eh +
cmp ecx esi +
jz loc_1011C47  +
push dword ptr [ebp+10h]  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword ptr [ebp+0Ch]  +
push 4  +
push ecx  +
call ds:GetNamedSecurityInfoW  +
cmp eax esi +
jle loc_1011C47  +
and eax 0FFFFh +
or eax 80070000h +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+pGroup] +
push 1  +
push esi  +
call ds:InitializeSecurityDescriptor  +
push 0  +
push [ebp+bGroupDefaulted]  +
push 1  +
push esi  +
call ds:SetSecurityDescriptorDacl  +
push 0  +
push [ebp+bGroupDefaulted]  +
push 1  +
push esi  +
call ds:SetSecurityDescriptorSacl  +
test [ebp+arg_0] 100h +
jz loc_1011CCC  +
lea eax [ebp+bGroupDefaulted] +
push eax  +
lea eax [ebp+pGroup] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorOwner  +
test eax eax +
jz loc_1011CAA  +
push [ebp+bGroupDefaulted]  +
push [ebp+pGroup]  +
push esi  +
call ds:SetSecurityDescriptorOwner  +
lea eax [ebp+bGroupDefaulted] +
push eax  +
lea eax [ebp+pGroup] +
push eax  +
push [ebp+pSecurityDescriptor]  +
call ds:GetSecurityDescriptorGroup  +
test eax eax +
jz loc_1011CCC  +
push [ebp+bGroupDefaulted]  +
push [ebp+pGroup]  +
push esi  +
call ds:SetSecurityDescriptorGroup  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_4] 8 +
mov eax [ebp+arg_0] +
jz loc_1011CEB  +
or eax offset __ImageBase +
test [ebp+arg_4] 4 +
jz loc_1011CF6  +
or eax 40000h +
test [ebp+arg_4] 1 +
jz loc_1011D01  +
or eax 80000h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
and dword ptr [eax] 0 +
test ecx 100h +
jz loc_1011D27  +
mov edx ecx +
and edx 3 +
mov [eax] edx +
test ecx 4000h +
jz loc_1011D36  +
mov edx ecx +
and edx 4 +
or [eax] edx +
test ecx 8000h +
jz loc_1011D43  +
and ecx 8 +
or [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
test al 4 +
jz loc_1011D6A  +
test [ebp+arg_4] 1000h +
jz loc_1011D6A  +
or eax 80000000h +
jmp loc_1011D6F  +
or eax 20000000h +
mov [ecx] eax +
test al 8 +
jz loc_1011D85  +
test [ebp+arg_4] 2000h +
jz loc_1011D85  +
or eax 40000000h +
jmp loc_1011D8A  +
or eax 10000000h +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+bSaclDefaulted] +
push edi  +
lea eax [ebp+dwRevision] +
push eax  +
xor edi edi +
lea eax [ebp+pControl] +
push eax  +
push esi  +
mov dword ptr [ebp+pControl] edi +
mov [ebp+psidOowner] edi +
mov [ebp+psidGroup] edi +
mov [ebp+pDacl] edi +
mov [ebp+pSacl] edi +
call ds:GetSecurityDescriptorControl  +
test eax eax +
jz loc_1011EA0  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+psidOowner] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorOwner  +
test eax eax +
jz loc_1011EA0  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+psidGroup] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorGroup  +
test eax eax +
jz loc_1011EA0  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_1011EA0  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+pSacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorSacl  +
test eax eax +
jz loc_1011EA0  +
push dword ptr [ebp+pControl]  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
mov ecx esi +
call sub_1011D4C  +
mov eax [ebp+arg_8] +
test al 4 +
jz loc_1011E4E  +
cmp [esi+10h] edi +
jnz loc_1011E4E  +
or eax 80000000h +
jmp loc_1011E53  +
or eax 20000000h +
test al 8 +
jz loc_1011E63  +
cmp [esi+10h] edi +
jnz loc_1011E63  +
or eax 40000000h +
jmp loc_1011E68  +
or eax 10000000h +
push [ebp+pSacl]  +
push [ebp+pDacl]  +
push [ebp+psidGroup]  +
push [ebp+psidOowner]  +
push eax  +
push 4  +
cmp [esi+10h] edi +
jnz loc_1011E87  +
push dword ptr [esi+2Ch]  +
call ds:SetSecurityInfo  +
jmp loc_1011E90  +
push [ebp+pObjectName]  +
call ds:SetNamedSecurityInfoW  +
cmp eax edi +
jle loc_1011EAC  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1011EAC  +
call ds:__imp_GetLastError  +
push eax  +
call sub_1011956  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+bSaclDefaulted] +
push edi  +
lea eax [ebp+dwRevision] +
push eax  +
xor edi edi +
lea eax [ebp+pControl] +
push eax  +
push esi  +
mov dword ptr [ebp+pControl] edi +
mov [ebp+psidOowner] edi +
mov [ebp+psidGroup] edi +
mov [ebp+pDacl] edi +
mov [ebp+pSacl] edi +
call ds:GetSecurityDescriptorControl  +
test eax eax +
jz loc_1011F79  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+psidOowner] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorOwner  +
test eax eax +
jz loc_1011F79  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+psidGroup] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorGroup  +
test eax eax +
jz loc_1011F79  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_1011F79  +
lea eax [ebp+bSaclDefaulted] +
push eax  +
lea eax [ebp+pSacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push esi  +
call ds:GetSecurityDescriptorSacl  +
test eax eax +
jz loc_1011F79  +
push dword ptr [ebp+pControl]  +
mov ecx [ebp+arg_0] +
lea eax [ebp+SecurityInfo] +
push eax  +
call sub_1011D4C  +
push [ebp+pSacl]  +
push [ebp+pDacl]  +
push [ebp+psidGroup]  +
push [ebp+psidOowner]  +
push [ebp+SecurityInfo]  +
push 4  +
push [ebp+handle]  +
call ds:SetSecurityInfo  +
cmp eax edi +
jle loc_1011F85  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1011F85  +
call ds:__imp_GetLastError  +
push eax  +
call sub_1011956  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 248h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+pSecurityDescriptor] +
xor ebx ebx +
mov [ebp+var_228] ecx +
mov [ebp+hKey] eax +
mov [ebp+var_244] edi +
cmp [ebp+arg_10] bl +
jnz loc_10120CF  +
lea eax [ebp+dwRevision] +
push eax  +
lea eax [ebp+pControl] +
push eax  +
push edi  +
mov [ebp+pControl] ebx +
mov [ebp+psidOowner] ebx +
mov [ebp+psidGroup] ebx +
mov [ebp+pDacl] ebx +
mov [ebp+pSacl] ebx +
call ds:GetSecurityDescriptorControl  +
test eax eax +
jz loc_10120C9  +
lea eax [ebp+dwIndex] +
push eax  +
lea eax [ebp+psidOowner] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorOwner  +
test eax eax +
jz loc_10120C9  +
lea eax [ebp+dwIndex] +
push eax  +
lea eax [ebp+psidGroup] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorGroup  +
test eax eax +
jz loc_10120C9  +
lea eax [ebp+dwIndex] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_10120C9  +
lea eax [ebp+dwIndex] +
push eax  +
lea eax [ebp+pSacl] +
push eax  +
lea eax [ebp+bSaclPresent] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorSacl  +
test eax eax +
jz loc_10120C9  +
push [ebp+pControl]  +
mov ecx [ebp+var_228] +
lea eax [ebp+SecurityInfo] +
push eax  +
call sub_1011D4C  +
push [ebp+pSacl]  +
push [ebp+pDacl]  +
push [ebp+psidGroup]  +
push [ebp+psidOowner]  +
push [ebp+SecurityInfo]  +
push 4  +
push [ebp+hKey]  +
call ds:SetSecurityInfo  +
test eax eax +
jz loc_10120CF  +
mov dword ptr [esi] 1 +
push ebx  +
push ebx  +
mov edi ds:RegQueryInfoKeyW +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
mov [ebp+cSubKeys] ebx +
mov [ebp+cbMaxSubKeyLen] ebx +
call edi  +
cmp eax ebx +
jz loc_1012178  +
cmp eax 5 +
jnz loc_1012136  +
mov ecx [ebp+var_228] +
lea eax [ebp+phkResult] +
push eax  +
push [ebp+SecurityInfo]  +
push 20001h  +
call sub_1011CD8  +
push eax  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_1012141  +
mov dword ptr [esi] 1 +
jmp loc_1012293  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+phkResult]  +
call edi  +
push [ebp+phkResult]  +
test eax eax +
jz loc_1012172  +
call ds:RegCloseKey  +
jmp loc_1012136  +
call ds:RegCloseKey  +
cmp [ebp+cSubKeys] ebx +
jz loc_1012293  +
mov edi [ebp+hKey] +
push 104h  +
lea eax [ebp+SubKey] +
push eax  +
push ebx  +
push edi  +
call ds:RegEnumKeyW  +
cmp eax ebx +
jz loc_10121C3  +
cmp eax 5 +
jnz loc_1012136  +
lea eax [ebp+phkResult] +
push eax  +
push 8  +
push ebx  +
push ebx  +
push edi  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1012136  +
jmp loc_10121C9  +
mov [ebp+phkResult] edi +
mov [ebp+dwIndex] ebx +
cmp [ebp+cSubKeys] ebx +
jbe loc_101227E  +
push 104h  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+dwIndex]  +
push [ebp+phkResult]  +
call ds:RegEnumKeyW  +
test eax eax +
jz loc_1012205  +
mov dword ptr [esi] 1 +
jmp loc_1012266  +
mov ecx [ebp+var_228] +
lea eax [ebp+pControl] +
push eax  +
push [ebp+SecurityInfo]  +
push 2000000h  +
call sub_1011CD8  +
push eax  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+phkResult]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10121FD  +
mov ecx [ebp+var_228] +
push ebx  +
push esi  +
push [ebp+var_244]  +
push [ebp+SecurityInfo]  +
push [ebp+pControl]  +
call sub_1011F94  +
mov edi eax +
cmp edi ebx +
jnz loc_10122A6  +
push [ebp+pControl]  +
call ds:RegCloseKey  +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cSubKeys] +
jb loc_10121DB  +
mov eax [ebp+phkResult] +
cmp eax [ebp+hKey] +
jz loc_1012293  +
push eax  +
call ds:RegCloseKey  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 14h  +
mov eax [ebp+phkResult] +
cmp eax [ebp+hKey] +
jz loc_10122BB  +
push eax  +
call ds:RegCloseKey  +
push [ebp+pControl]  +
call ds:RegCloseKey  +
mov eax edi +
jmp loc_1012295  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 420h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+lpSystemName] +
push esi  +
mov esi [ebp+Sid] +
mov eax 104h +
mov [ebp+cbName] eax +
mov [ebp+cbReferencedDomainName] eax +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push esi  +
push ecx  +
call ds:LookupAccountSidW  +
test eax eax +
jz loc_101233A  +
cmp [ebp+peUse] 5 +
jnz loc_101233A  +
xor eax eax +
inc eax  +
jmp loc_1012356  +
push esi  +
call ds:GetSidSubAuthorityCount  +
cmp byte ptr [eax] 1 +
jb loc_1012354  +
push 0  +
push esi  +
call ds:GetSidSubAuthority  +
cmp dword ptr [eax] 20h +
jz loc_1012335  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi [eax+3Ch] +
xor esi esi +
mov [ebp-4] esi +
mov ebx 0DEADh +
cmp edi esi +
jnz loc_1012391  +
xor eax eax +
inc eax  +
jmp loc_10124A0  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+14h]  +
call sub_10122D0  +
lea ecx [ebp-4] +
push ecx  +
push esi  +
mov ecx 0BEEFh +
push ecx  +
push ebx  +
push esi  +
neg eax  +
push edi  +
push dword ptr [ebp+10h]  +
sbb eax eax +
and eax 2 +
push eax  +
call ds:AuthzInitializeContextFromSid  +
test eax eax +
jnz loc_10123D0  +
call ds:__imp_GetLastError  +
push eax  +
call sub_1011956  +
jmp loc_10124A0  +
mov edi ds:LocalAlloc +
xor eax eax +
inc eax  +
push 4  +
push 40h  +
mov dword ptr [ebp-20h] offset unk_105D658 +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-28h] 2000000h +
mov [ebp-24h] esi +
mov [ebp-18h] esi +
mov [ebp-10h] esi +
mov [ebp-8] esi +
mov [ebp-14h] eax +
mov [ebp-0Ch] esi +
call edi  +
mov [ebp-10h] eax +
cmp eax esi +
jnz loc_1012413  +
mov eax 8007000Eh +
jmp loc_10124A0  +
mov eax [ebp-14h] +
shl eax 2 +
push eax  +
push 40h  +
call edi  +
mov [ebp-8] eax +
cmp eax esi +
jnz loc_1012430  +
push dword ptr [ebp-10h]  +
call ds:LocalFree  +
jmp loc_1012409  +
***
push esi  +
lea eax [ebp-14h] +
push eax  +
push esi  +
push esi  +
push dword ptr [ebp+18h]  +
lea eax [ebp-28h] +
push esi  +
push eax  +
push dword ptr [ebp-4]  +
push esi  +
call ds:AuthzAccessCheck  +
test eax eax +
jnz loc_1012473  +
push dword ptr [ebp-10h]  +
mov edi ds:LocalFree +
call edi  +
push dword ptr [ebp-8]  +
call edi  +
call ds:__imp_GetLastError  +
cmp eax esi +
jle loc_10124A0  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10124A0  +
cmp [ebp-4] esi +
jz loc_1012481  +
push dword ptr [ebp-4]  +
call ds:AuthzFreeContext  +
mov eax [ebp+1Ch] +
mov ecx [ebp-20h] +
mov edx [ebp-10h] +
mov [eax] ecx +
mov eax [ebp-1Ch] +
mov ecx [ebp+20h] +
mov [ecx] eax +
mov ecx [ebp+24h] +
mov [ecx] edx +
mov ecx [ebp+28h] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+0Ch]  +
mov eax [eax+0Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+0Ch]  +
mov eax [ecx+0Ch] +
jnz loc_10124DC  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+28h]  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push offset off_1012504  +
push dword ptr [ebp+8]  +
call QISearch  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_1014] 0 +
push ebx  +
mov ebx [ebp+hInstance] +
push esi  +
mov esi ds:LoadStringW +
push edi  +
mov [ebp+var_1010] eax +
mov edi 401h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push ebx  +
call esi  +
test eax eax +
jz loc_10125B6  +
cmp [ebp+arg_C] 0 +
jz loc_1012593  +
push edi  +
lea eax [ebp+var_100C] +
push eax  +
push [ebp+arg_C]  +
push ebx  +
call esi  +
test eax eax +
lea eax [ebp+var_100C] +
jnz loc_1012599  +
mov eax [ebp+var_1014] +
push 40h  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+var_1010]  +
push ebx  +
call ds:ShellMessageBoxW  +
xor eax eax +
add esp 14h +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10124E5  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10124E5  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10124C3  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10124C3  +
***
sub dword ptr [esp+4] 4 +
jmp loc_10124AC  +
***
sub dword ptr [esp+4] 8 +
jmp loc_10124AC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10119DC  +
test byte ptr [ebp+8] 1 +
jz loc_1012640  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_10119AA  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_101277D  +
test [ebp+arg_14] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_1012692  +
cmp [ebp+arg_8] eax +
jnz loc_1012692  +
mov [ebp+arg_8] offset dword_10054C0 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_10126B4  +
mov esi 80070057h +
cmp ecx eax +
jz loc_1012736  +
xor eax eax +
mov [edi] ax +
jmp loc_1012736  +
cmp ecx eax +
jnz loc_10126D5  +
mov edx [ebp+arg_8] +
cmp [edx] ax +
jz loc_1012767  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1012736  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ecx +
mov ecx edi +
call sub_1002D7B  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1012733  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_1012767  +
cmp ebx 1 +
jbe loc_1012767  +
lea ecx [ebx+ebx] +
cmp ecx 2 +
jbe loc_1012767  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_1012767  +
mov ecx [ebp+arg_4] +
test [ebp+arg_14] 1C00h +
jz loc_101275B  +
test ecx ecx +
jz loc_101275B  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1015C65  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_1012767  +
cmp esi 8007007Ah +
jnz loc_101277C  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1012773  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_101277C  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_1007DB1  +
test eax eax +
jl loc_10127C0  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1002D7B  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
xor esi esi +
push 2  +
pop edi  +
cmp [ebx+20h] esi +
jz loc_10127F7  +
mov eax [ebx+18h] +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_10127E6  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
mov eax [ebx+24h] +
mov eax off_105D634[eax*4] +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_1012804  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax+1] +
mov eax [ebx+14h] +
test eax eax +
jz loc_1012832  +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_1012820  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax+1] +
mov eax [ebx+10h] +
test eax eax +
jz loc_101284E  +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_101283C  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax+1] +
inc esi  +
lea eax [esi+esi] +
push eax  +
push 40h  +
mov edi 8007000Eh +
call ds:LocalAlloc  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1012918  +
cmp dword ptr [ebx+20h] 0 +
jz loc_1012899  +
push dword ptr [ebx+18h]  +
push esi  +
push eax  +
call sub_1002D3F  +
mov edi eax +
test edi edi +
jl loc_1012918  +
push offset dword_1005430  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
mov eax [ebx+24h] +
push off_105D634[eax*4]  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
push offset dword_1005430  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
mov eax [ebx+14h] +
test eax eax +
jz loc_10128ED  +
push eax  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
push offset dword_1005430  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
mov eax [ebx+10h] +
test eax eax +
jz loc_1012918  +
push eax  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
test edi edi +
jl loc_1012918  +
push offset dword_1005430  +
push esi  +
push [ebp+var_4]  +
call sub_101278A  +
mov edi eax +
mov eax [ebp+var_4] +
mov [ebx+30h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+14h] +
xor esi esi +
mov [ebp+var_4] edi +
test eax eax +
jz loc_1012955  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012944  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
mov eax [edi+10h] +
test eax eax +
jz loc_1012971  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101295F  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax+1] +
xor ebx ebx +
test esi esi +
jbe loc_10129CC  +
inc esi  +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_10129CC  +
mov eax [edi+14h] +
mov edi offset dword_1005430 +
test eax eax +
jz loc_10129AE  +
push eax  +
push esi  +
push ebx  +
call sub_1002D3F  +
test eax eax +
jl loc_10129CC  +
push edi  +
push esi  +
push ebx  +
call sub_101278A  +
test eax eax +
jl loc_10129CC  +
mov eax [ebp+var_4] +
mov eax [eax+10h] +
test eax eax +
jz loc_10129CC  +
push eax  +
push esi  +
push ebx  +
call sub_101278A  +
test eax eax +
jl loc_10129CC  +
push edi  +
push esi  +
push ebx  +
call sub_101278A  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [eax] edi +
cmp [esi+10h] edi +
jnz loc_10129F7  +
mov eax [esi+2Ch] +
mov ecx [ebp+phkResult] +
mov [ecx] eax +
jmp loc_1012A3E  +
push ebx  +
mov edi 8007000Eh +
call sub_101292A  +
mov ebx eax +
test ebx ebx +
jz loc_1012A3D  +
push [ebp+phkResult]  +
push [ebp+samDesired]  +
push 0  +
push ebx  +
push dword ptr [esi+2Ch]  +
call ds:RegOpenKeyExW  +
test eax eax +
jle loc_1012A28  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx [ebp+arg_8] +
mov edi eax +
xor eax eax +
test edi edi +
setnl al  +
push ebx  +
mov [ecx] eax +
call ds:LocalFree  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
sub esp 0Ch +
cmp dword ptr [eax+8] 0 +
push ebx  +
jz loc_1012BA4  +
mov ebx [ebp+10h] +
test ebx ebx +
jz loc_1012BA4  +
cmp dword ptr [ebp+14h] 0 +
jz loc_1012BA4  +
push esi  +
mov esi [eax+28h] +
movzx eax word ptr [ebx+4] +
push edi  +
mov edi ds:LocalAlloc +
shl eax 3 +
push eax  +
push 40h  +
call edi  +
xor ecx ecx +
mov [ebp-0Ch] eax +
cmp eax ecx +
jnz loc_1012AA2  +
mov dword ptr [ebp+8] 8007000Eh +
jmp loc_1012B9D  +
push eax  +
push offset unk_105D648  +
push ecx  +
push ebx  +
push ecx  +
push ecx  +
push 1  +
push dword ptr [ebp+0Ch]  +
push 4  +
push esi  +
call ds:GetInheritanceSourceW  +
test eax eax +
jle loc_1012AC8  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+8] eax +
test eax eax +
jl loc_1012B94  +
movzx eax word ptr [ebx+4] +
mov esi eax +
shl esi 3 +
test eax eax +
jbe loc_1012B10  +
mov edx [ebp-0Ch] +
add edx 4 +
mov [ebp+10h] eax +
mov eax [edx] +
test eax eax +
jz loc_1012B08  +
lea ecx [eax+2] +
mov [ebp+0Ch] ecx +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012AF5  +
sub eax [ebp+0Ch] +
sar eax 1 +
lea esi [esi+eax*2+2] +
add edx 8 +
dec dword ptr [ebp+10h]  +
jnz loc_1012AE9  +
push esi  +
push 40h  +
call edi  +
mov edi eax +
test edi edi +
jnz loc_1012B24  +
mov dword ptr [ebp+8] 8007000Eh +
jmp loc_1012B94  +
movzx eax word ptr [ebx+4] +
and dword ptr [ebp-4] 0 +
lea ecx [edi+eax*8] +
mov [ebp+10h] ecx +
sub ecx edi +
sar ecx 1 +
shr esi 1 +
sub esi ecx +
mov [ebp+0Ch] esi +
test eax eax +
jbe loc_1012B8F  +
mov eax [ebp-0Ch] +
mov [ebp-8] edi +
sub [ebp-8] eax +
lea esi [eax+4] +
mov eax [esi-4] +
mov ecx [ebp-4] +
mov [edi+ecx*8] eax +
cmp dword ptr [esi] 0 +
jz loc_1012B80  +
mov eax [ebp+10h] +
mov ecx [ebp-8] +
push 0  +
mov [ecx+esi] eax +
lea ecx [ebp+0Ch] +
push ecx  +
lea ecx [ebp+10h] +
push ecx  +
push dword ptr [esi]  +
push dword ptr [ebp+0Ch]  +
push eax  +
call sub_101264C  +
add dword ptr [ebp+10h] 2 +
dec dword ptr [ebp+0Ch]  +
movzx eax word ptr [ebx+4] +
inc dword ptr [ebp-4]  +
add esi 8 +
cmp [ebp-4] eax +
jb loc_1012B4D  +
mov eax [ebp+14h] +
mov [eax] edi +
push dword ptr [ebp-0Ch]  +
call ds:LocalFree  +
mov eax [ebp+8] +
pop edi  +
pop esi  +
jmp loc_1012BA9  +
mov eax 8000FFFFh +
pop ebx  +
leave   +
retn 10h  +
***
mov eax ecx +
xor ecx ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] offset off_10058CC +
mov dword ptr [eax+4] offset off_10058BC +
mov dword ptr [eax+8] offset off_10058AC +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
mov [eax+18h] ecx +
mov [eax+1Ch] ecx +
mov [eax+20h] ecx +
mov [eax+24h] ecx +
mov [eax+28h] ecx +
mov [eax+30h] ecx +
mov [eax+38h] ecx +
mov [eax+3Ch] ecx +
mov [eax+40h] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp [ebp+arg_4] edi +
jz loc_1012C11  +
cmp [ebp+arg_0] edi +
jnz loc_1012C11  +
mov eax 80070057h +
jmp loc_1012C89  +
push ebx  +
cmp [ebp+arg_8] edi +
jz loc_1012C83  +
cmp [ebp+arg_1C] edi +
jz loc_1012C83  +
mov ebx [ebp+arg_C] +
cmp ebx edi +
jz loc_1012C83  +
lea eax [esi+40h] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push 1  +
call ds:AuthzInitializeResourceManager  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_1C] +
mov [esi+10h] eax +
mov eax [ebp+arg_4] +
mov [esi+14h] eax +
mov eax [ebp+arg_8] +
mov [esi+18h] eax +
mov eax [ebp+arg_10] +
mov [esi+20h] eax +
mov eax [ebp+arg_14] +
mov [esi+24h] eax +
mov eax [ebp+arg_18] +
mov [esi+28h] eax +
neg eax  +
sbb eax eax +
and eax 48h +
mov [esi+38h] ecx +
or eax 2C917h +
mov ecx esi +
mov [esi+1Ch] ebx +
mov [esi+34h] eax +
call sub_1011A3B  +
cmp eax edi +
jl loc_1012C88  +
mov ecx esi +
call sub_10127CB  +
jmp loc_1012C88  +
mov eax 80070057h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_220] eax +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
push [ebp+samDesired]  +
xor esi esi +
mov [ebp+phkResult] esi +
call sub_10129D8  +
mov ebx eax +
cmp ebx esi +
jl loc_1012D5C  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push esi  +
push esi  +
push esi  +
push [ebp+phkResult]  +
mov [ebp+cSubKeys] esi +
mov [ebp+cbMaxSubKeyLen] esi +
call ds:RegQueryInfoKeyW  +
push eax  +
call sub_1011956  +
mov ebx eax +
cmp ebx esi +
jl loc_1012D42  +
cmp [ebp+cSubKeys] esi +
jz loc_1012D3E  +
push 104h  +
lea eax [ebp+Name] +
push eax  +
push esi  +
push [ebp+phkResult]  +
call ds:RegEnumKeyW  +
push eax  +
call sub_1011956  +
mov ebx eax +
cmp ebx esi +
jge loc_1012D5C  +
cmp ebx 80070005h +
jz loc_1012D5C  +
cmp [edi] esi +
jz loc_1012D62  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
jmp loc_1012D62  +
mov esi [ebp+phkResult] +
mov eax [ebp+var_220] +
mov ecx [ebp+var_4] +
pop edi  +
mov [eax] esi +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_C] +
push esi  +
push edi  +
push [ebp+samDesired]  +
mov [ebp+var_4] ecx +
call sub_1012C94  +
mov ebx 80070005h +
mov [ebp+arg_10] eax +
cmp eax ebx +
jnz loc_1012E05  +
mov eax [edi] +
test eax eax +
jz loc_1012E05  +
push [ebp+bSaclDefaulted]  +
push [ebp+SecurityInfo]  +
push eax  +
push [ebp+var_4]  +
call sub_1011EB7  +
cmp dword ptr [esi] 0 +
mov [ebp+arg_10] eax +
jz loc_1012DCF  +
push dword ptr [edi]  +
call ds:RegCloseKey  +
xor eax eax +
cmp [ebp+arg_10] eax +
mov [edi] eax +
mov [esi] eax +
jl loc_1012E05  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
push [ebp+samDesired]  +
call sub_1012C94  +
mov [ebp+arg_10] eax +
cmp eax ebx +
jnz loc_1012E05  +
mov eax [edi] +
xor ebx ebx +
cmp eax ebx +
jz loc_1012E05  +
cmp [esi] ebx +
jz loc_1012E01  +
push eax  +
call ds:RegCloseKey  +
mov [edi] ebx +
mov [esi] ebx +
mov eax [ebp+arg_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
cmp [ebp+10h] ebx +
jz loc_1012F82  +
push dword ptr [ebp+10h]  +
call ds:IsValidSecurityDescriptor  +
test eax eax +
jz loc_1012F82  +
push esi  +
push edi  +
xor eax eax +
mov [ebp-18h] bl +
lea edi [ebp-17h] +
stos   +
stos   +
push 2  +
stos   +
push 8  +
lea eax [ebp-18h] +
push eax  +
mov [ebp-8] ebx +
mov [ebp-10h] ebx +
mov [ebp-4] ebx +
call ds:InitializeAcl  +
xor eax eax +
mov [ebp-2Ch] bl +
mov esi [ebp+8] +
lea edi [ebp-2Bh] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+0Ch] +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push edi  +
call sub_1011C51  +
cmp eax ebx +
mov [ebp+8] eax +
jl loc_1012F7B  +
lea eax [ebp-4] +
push eax  +
push edi  +
mov ecx esi +
call sub_1011D0A  +
cmp [ebp-4] ebx +
jz loc_1012EC6  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-8] +
push eax  +
push edi  +
push 2000000h  +
mov ecx esi +
call sub_1011CD8  +
push eax  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push edi  +
call sub_1012D82  +
mov [ebp+8] eax +
cmp [ebp+8] ebx +
jl loc_1012F7B  +
cmp [ebp-4] ebx +
jz loc_1012F47  +
push 1  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-2Ch] +
push eax  +
push dword ptr [ebp-4]  +
mov ecx esi +
push dword ptr [ebp-8]  +
mov [ebp-0Ch] ebx +
call sub_1011F94  +
push dword ptr [ebp-8]  +
mov [ebp+8] eax +
call ds:RegFlushKey  +
cmp [ebp-0Ch] ebx +
jz loc_1012F47  +
test byte ptr [ebp-4] 1 +
jz loc_1012F1D  +
mov eax [esi+3Ch] +
mov edi eax +
cmp eax ebx +
jnz loc_1012F11  +
mov edi [esi+38h] +
push 1B58h  +
push 1BA1h  +
jmp loc_1012F39  +
test byte ptr [ebp-4] 0Ch +
jz loc_1012F47  +
mov eax [esi+3Ch] +
mov edi eax +
cmp eax ebx +
jnz loc_1012F2F  +
mov edi [esi+38h] +
push 1B58h  +
push 1BA0h  +
push ebx  +
call ds:GetModuleHandleW  +
push eax  +
push edi  +
call sub_1012529  +
cmp [ebp+8] ebx +
jl loc_1012F68  +
and dword ptr [ebp+0Ch] 0FFFF3EFFh +
jz loc_1012F68  +
push dword ptr [ebp+10h]  +
mov eax [esi+30h] +
push dword ptr [ebp+0Ch]  +
push eax  +
push esi  +
call sub_1011D95  +
mov [ebp+8] eax +
cmp [ebp-10h] ebx +
jz loc_1012F7B  +
cmp [ebp-8] ebx +
jz loc_1012F7B  +
push dword ptr [ebp-8]  +
call ds:RegCloseKey  +
mov eax [ebp+8] +
pop edi  +
pop esi  +
jmp loc_1012F87  +
mov eax 80070057h +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_20] +
test ebx ebx +
jnz loc_1012FA5  +
mov eax 80070057h +
jmp loc_1012FFF  +
push esi  +
push edi  +
push 44h  +
mov edi 8007000Eh +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1012FC3  +
mov ecx eax +
call sub_1012BB3  +
mov esi eax +
jmp loc_1012FC5  +
xor esi esi +
test esi esi +
jz loc_1012FF9  +
push [ebp+arg_1C]  +
mov ecx esi +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1012BF5  +
mov edi eax +
test edi edi +
jge loc_1012FF9  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+28h]  +
xor esi esi +
mov eax edi +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push edi  +
push 9  +
pop ecx  +
xor eax eax +
push 6  +
lea edi [ebp+var_40] +
stos   +
pop ecx  +
lea edi [ebp+var_18] +
stos   +
and [ebp+var_18] eax +
lea eax [ebp+var_44] +
lea edx [ebp+var_1C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edx  +
push eax  +
mov [ebp+var_44] 28h +
mov [ebp+var_40] 3FCh +
mov [ebp+var_38] 800h +
mov [ebp+var_2C] 80000008h +
mov [ebp+var_1C] 1Ch +
mov [ebp+var_14] 1 +
call dword ptr [ecx+0Ch]  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and dword ptr [ebp+var_C.anonymous_0] 0 +
and [ebp+var_C.pUnkForRelease] 0 +
push esi  +
xor esi esi +
inc esi  +
push offset aCfstr_dsop_ds_  +
mov [ebp+var_C.tymed] esi +
call ds:RegisterClipboardFormatW  +
and [ebp+var_1C] 0 +
or [ebp+var_14] 0FFFFFFFFh +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_20] +
mov word ptr [ebp+var_20] ax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edx  +
push eax  +
mov [ebp+var_18] esi +
mov [ebp+var_10] esi +
call dword ptr [ecx+0Ch]  +
pop esi  +
test eax eax +
jl locret_10130E6  +
push dword ptr [ebp+var_C.anonymous_0]  +
call ds:GlobalLock  +
test eax eax +
jz loc_10130DC  +
push dword ptr [eax+8]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1002D3F  +
push dword ptr [ebp+var_C.anonymous_0]  +
call ds:GlobalUnlock  +
lea eax [ebp+var_C] +
push eax  +
call ds:ReleaseStgMedium  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 2  +
push 0  +
call ds:CoInitializeEx  +
mov esi eax +
test esi esi +
jl loc_10131BA  +
and [ebp+ppv] 0 +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_10131B4  +
push [ebp+ppv]  +
call sub_1013009  +
mov esi eax +
test esi esi +
jl loc_10131AB  +
mov eax [ebp+ppv] +
and [ebp+var_8] 0 +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_10131A6  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
call sub_101306E  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor esi esi +
jmp loc_10131AB  +
mov esi 80004005h +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_101322E  +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop ebp  +
retn   +
***
mov ax [ecx+0Ah] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1013255  +
mov edx [ecx+14h] +
mov [eax] edx +
mov eax [ecx+18h] +
jmp loc_1013257  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov ax [ecx+0Ch] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push dword ptr [eax+8]  +
call sub_100E774  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi offset dword_1005928 +
push esi  +
xor ebx ebx +
push 1FAFh  +
inc ebx  +
call sub_1018CD4  +
push esi  +
push 1FD6h  +
mov dword_105DAF0 eax +
call sub_1018CD4  +
push esi  +
push 1FD7h  +
mov dword_105DAD4 eax +
call sub_1018CD4  +
push esi  +
push 1FD8h  +
mov dword_105DAA4 eax +
call sub_1018CD4  +
push esi  +
push 1FD9h  +
mov dword_105DAE8 eax +
call sub_1018CD4  +
push esi  +
push 1FDAh  +
mov dword_105DAD8 eax +
call sub_1018CD4  +
push esi  +
push 1FDBh  +
mov dword_105DA80 eax +
call sub_1018CD4  +
push esi  +
push 1FE0h  +
mov dword_105DA7C eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1FE1h  +
mov dword_105DA94 eax +
call sub_1018CD4  +
push esi  +
push 1FE2h  +
mov dword_105DAD0 eax +
call sub_1018CD4  +
push esi  +
push 1FE3h  +
mov dword_105DAA0 eax +
call sub_1018CD4  +
push esi  +
push 1FE4h  +
mov dword_105DA88 eax +
call sub_1018CD4  +
push esi  +
push 1FE5h  +
mov dword_105DAE4 eax +
call sub_1018CD4  +
push esi  +
push 1FE6h  +
mov dword_105DABC eax +
call sub_1018CD4  +
push esi  +
push 1FE7h  +
mov dword_105DA84 eax +
call sub_1018CD4  +
push esi  +
push 1FE8h  +
mov dword_105DAB0 eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1FE9h  +
mov dword_105DAB8 eax +
call sub_1018CD4  +
push esi  +
push 1FEAh  +
mov dword_105DACC eax +
call sub_1018CD4  +
push esi  +
mov dword_105DA8C eax +
push 1FEBh  +
call sub_1018CD4  +
push esi  +
push 1FECh  +
mov dword_105DAEC eax +
call sub_1018CD4  +
push esi  +
push 1FF4h  +
mov dword_105DA9C eax +
call sub_1018CD4  +
push esi  +
push 1FF5h  +
mov dword_105DAC8 eax +
call sub_1018CD4  +
push esi  +
push 1FF6h  +
mov dword_105DAF8 eax +
call sub_1018CD4  +
push esi  +
push 1FF7h  +
mov dword_105DAA8 eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1FF9h  +
mov dword_105DAE0 eax +
call sub_1018CD4  +
push esi  +
push 1FF8h  +
mov dword_105DAFC eax +
call sub_1018CD4  +
push esi  +
push 1FFAh  +
mov dword_105DA90 eax +
call sub_1018CD4  +
push esi  +
push 1FFBh  +
mov dword_105DA98 eax +
call sub_1018CD4  +
push esi  +
push 1FFCh  +
mov dword_105DADC eax +
call sub_1018CD4  +
push esi  +
push 1FFDh  +
mov dword_105DAC4 eax +
call sub_1018CD4  +
push esi  +
push 1FFEh  +
mov dword_105DAC0 eax +
call sub_1018CD4  +
push esi  +
push 1FFFh  +
mov dword_105DAAC eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 2000h  +
mov dword_105DAB4 eax +
call sub_1018CD4  +
pop ecx  +
pop ecx  +
mov ecx dword_105DAD4 +
xor esi esi +
mov dword_105DAF4 eax +
cmp ecx esi +
jz loc_10135F9  +
cmp dword_105DAA4 esi +
jz loc_10135F4  +
cmp dword_105DAE8 esi +
jz loc_10135F4  +
cmp dword_105DAD8 esi +
jz loc_10135F4  +
cmp dword_105DA80 esi +
jz loc_10135F4  +
cmp dword_105DA7C esi +
jz loc_10135F4  +
cmp dword_105DA94 esi +
jz loc_10135F4  +
cmp dword_105DAD0 esi +
jz loc_10135F4  +
cmp dword_105DAA0 esi +
jz loc_10135F4  +
cmp dword_105DA88 esi +
jz loc_10135F4  +
cmp dword_105DAE4 esi +
jz loc_10135F4  +
cmp dword_105DABC esi +
jz loc_10135F4  +
cmp dword_105DA84 esi +
jz loc_10135F4  +
cmp dword_105DAB0 esi +
jz loc_10135F4  +
cmp dword_105DAB8 esi +
jz loc_10135F4  +
cmp dword_105DACC esi +
jz loc_10135F4  +
cmp dword_105DA8C esi +
jz loc_10135F4  +
cmp dword_105DAEC esi +
jz loc_10135F4  +
cmp dword_105DA9C esi +
jz loc_10135F4  +
cmp dword_105DAC8 esi +
jz loc_10135F4  +
cmp dword_105DAF8 esi +
jz loc_10135F4  +
cmp dword_105DAA8 esi +
jz loc_10135F4  +
cmp dword_105DAE0 esi +
jz loc_10135F4  +
cmp dword_105DAFC esi +
jz loc_10135F4  +
cmp dword_105DA90 esi +
jz loc_10135F4  +
cmp dword_105DA98 esi +
jz loc_10135F4  +
cmp dword_105DADC esi +
jz loc_10135F4  +
cmp dword_105DAC4 esi +
jz loc_10135F4  +
cmp dword_105DAC0 esi +
jz loc_10135F4  +
cmp dword_105DAAC esi +
jz loc_10135F4  +
cmp dword_105DAB4 esi +
jz loc_10135F4  +
cmp eax esi +
jnz loc_101388C  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAA4 +
mov dword_105DAD4 esi +
cmp ecx esi +
jz loc_101360E  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAE8 +
mov dword_105DAA4 esi +
cmp ecx esi +
jz loc_1013623  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAD8 +
mov dword_105DAE8 esi +
cmp ecx esi +
jz loc_1013638  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA80 +
mov dword_105DAD8 esi +
cmp ecx esi +
jz loc_101364D  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA7C +
mov dword_105DA80 esi +
cmp ecx esi +
jz loc_1013662  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA94 +
mov dword_105DA7C esi +
cmp ecx esi +
jz loc_1013677  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAD0 +
mov dword_105DA94 esi +
cmp ecx esi +
jz loc_101368C  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAA0 +
mov dword_105DAD0 esi +
cmp ecx esi +
jz loc_10136A1  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA88 +
mov dword_105DAA0 esi +
cmp ecx esi +
jz loc_10136B6  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAE4 +
mov dword_105DA88 esi +
cmp ecx esi +
jz loc_10136CB  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DABC +
mov dword_105DAE4 esi +
cmp ecx esi +
jz loc_10136E0  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA84 +
mov dword_105DABC esi +
cmp ecx esi +
jz loc_10136F5  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAB0 +
mov dword_105DA84 esi +
cmp ecx esi +
jz loc_101370A  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAB8 +
mov dword_105DAB0 esi +
cmp ecx esi +
jz loc_101371F  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DACC +
mov dword_105DAB8 esi +
cmp ecx esi +
jz loc_1013734  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA8C +
mov dword_105DACC esi +
cmp ecx esi +
jz loc_1013749  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAEC +
mov dword_105DA8C esi +
cmp ecx esi +
jz loc_101375E  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA9C +
mov dword_105DAEC esi +
cmp ecx esi +
jz loc_1013773  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAC8 +
mov dword_105DA9C esi +
cmp ecx esi +
jz loc_1013788  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAF8 +
mov dword_105DAC8 esi +
cmp ecx esi +
jz loc_101379D  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAA8 +
mov dword_105DAF8 esi +
cmp ecx esi +
jz loc_10137B2  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAE0 +
mov dword_105DAA8 esi +
cmp ecx esi +
jz loc_10137C7  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAFC +
mov dword_105DAE0 esi +
cmp ecx esi +
jz loc_10137DC  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA90 +
mov dword_105DAFC esi +
cmp ecx esi +
jz loc_10137F1  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DA98 +
mov dword_105DA90 esi +
cmp ecx esi +
jz loc_1013806  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DADC +
mov dword_105DA98 esi +
cmp ecx esi +
jz loc_101381B  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAC4 +
mov dword_105DADC esi +
cmp ecx esi +
jz loc_1013830  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAC0 +
mov dword_105DAC4 esi +
cmp ecx esi +
jz loc_1013845  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAAC +
mov dword_105DAC0 esi +
cmp ecx esi +
jz loc_101385A  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAB4 +
mov dword_105DAAC esi +
cmp ecx esi +
jz loc_101386F  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov ecx dword_105DAF4 +
mov dword_105DAB4 esi +
cmp ecx esi +
jz loc_1013884  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax]  +
mov dword_105DAF4 esi +
xor bl bl +
pop esi  +
movzx eax bl +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
xor ebx ebx +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1013AFB  +
push dword_105DA84  +
lea ecx [ebp+var_74] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1013AFB  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call esi  +
test al al +
jz loc_1013AFB  +
push dword_105DABC  +
lea ecx [ebp+var_8C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1013AFB  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_1013AFB  +
push dword_105DAB0  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1013AFB  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_A4] +
call esi  +
test al al +
jz loc_1013AFB  +
push dword_105DAA0  +
lea ecx [ebp+var_A4] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1013AFB  +
push dword ptr [edi+14h]  +
mov ebx offset aD +
push ebx  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1013AFB  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_74] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_74] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013AFB  +
call sub_100E7A7  +
push dword ptr [edi+10h]  +
lea eax [ebp+var_2C] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1013AFB  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_8C] +
call ebx  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013AFB  +
call sub_100E7A7  +
push dword ptr [edi+0Ch]  +
lea eax [ebp+var_2C] +
push offset a0x08x  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1013AFB  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_5C] +
call ebx  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013AFB  +
call sub_100E7A7  +
movzx eax word ptr [edi+0Ah] +
xor ecx ecx +
test ax ax +
setnz cl  +
push offset dword_1005928  +
add ecx 1D60h +
push ecx  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1013AFB  +
push esi  +
lea ecx [ebp+var_A4] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_A4] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013AFB  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1013B22  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_1013D1C  +
push dword_105DA88  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_1013D1C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1013D1C  +
push dword_105DAE4  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1013D1C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call esi  +
test al al +
jz loc_1013D1C  +
push dword_105DAA0  +
lea ecx [ebp+var_8C] +
call ebx  +
test al al +
jz loc_1013D1C  +
mov eax [edi+14h] +
push dword ptr [edi+10h]  +
test eax eax +
jz loc_1013C20  +
push eax  +
push offset a0x08x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1013C33  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1013D1C  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call ebx  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013D1C  +
call sub_100E7A7  +
push dword ptr [edi+18h]  +
lea eax [ebp+var_2C] +
push offset asc_1005670  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1013D1C  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
lea eax [ebp+var_44] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013D1C  +
call sub_100E7A7  +
movzx eax word ptr [edi+0Ah] +
xor ecx ecx +
test ax ax +
setnz cl  +
push offset dword_1005928  +
add ecx 1D74h +
push ecx  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1013D1C  +
push esi  +
lea ecx [ebp+var_8C] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013D1C  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1013D3B  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_1013F37  +
push dword_105DA88  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_1013F37  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1013F37  +
push dword_105DAE4  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1013F37  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call esi  +
test al al +
jz loc_1013F37  +
push dword_105DAA0  +
lea ecx [ebp+var_8C] +
call ebx  +
test al al +
jz loc_1013F37  +
mov eax [edi+14h] +
push dword ptr [edi+10h]  +
test eax eax +
jz loc_1013E39  +
push eax  +
push offset a0x08x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1013E4C  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1013F37  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call ebx  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013F37  +
call sub_100E7A7  +
push dword ptr [edi+1Ch]  +
lea eax [ebp+var_2C] +
push dword ptr [edi+18h]  +
push offset aI64x  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1013F37  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
lea eax [ebp+var_44] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013F37  +
call sub_100E7A7  +
test byte ptr [edi+0Ah] 3 +
push 0  +
pop eax  +
setnz al  +
push offset dword_1005928  +
lea eax [eax+eax+1D6Ah] +
push eax  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1013F37  +
push esi  +
lea ecx [ebp+var_8C] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1013F37  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1013F56  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_10140A2  +
push dword_105DAB8  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_10140A2  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_10140A2  +
push dword_105DACC  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_10140A2  +
push dword ptr [edi+0Ch]  +
mov ebx offset aD +
push ebx  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_10140A2  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10140A2  +
call sub_100E7A7  +
push dword ptr [edi+10h]  +
lea eax [ebp+var_2C] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_10140A2  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_44] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_44] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10140A2  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10140B9  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
lea ecx [ebp+var_78] +
call esi  +
lea ecx [ebp+var_48] +
call esi  +
lea ecx [ebp+var_90] +
call esi  +
lea ecx [ebp+var_60] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
xor edi edi +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_78] +
call esi  +
test al al +
jz loc_1014286  +
push dword_105DA8C  +
lea ecx [ebp+var_78] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1014286  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_48] +
call esi  +
test al al +
jz loc_1014286  +
push dword_105DAEC  +
lea ecx [ebp+var_48] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1014286  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_90] +
call esi  +
test al al +
jz loc_1014286  +
push dword_105DA9C  +
lea ecx [ebp+var_90] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1014286  +
push dword ptr [ebx+0Ch]  +
mov edi offset a0x08x +
push edi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_60] +
call esi  +
test al al +
jz loc_1014286  +
lea eax [ebp+var_60] +
push eax  +
lea ecx [ebp+var_78] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_78] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014286  +
call sub_100E7A7  +
push dword ptr [ebx+10h]  +
lea eax [ebp+var_2C] +
push edi  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_60] +
call esi  +
test al al +
jz loc_1014286  +
lea eax [ebp+var_60] +
push eax  +
lea ecx [ebp+var_48] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_48] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014286  +
call sub_100E7A7  +
lea eax [ebp+var_30] +
push eax  +
mov ecx ebx +
call sub_101323F  +
mov esi eax +
test esi esi +
jz loc_1014264  +
cmp [ebp+var_30] 0 +
jz loc_1014264  +
lea eax [ebp+var_90] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014286  +
push esi  +
push [ebp+var_30]  +
call sub_100E80F  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_60] +
call esi  +
lea ecx [ebp+var_90] +
call esi  +
lea ecx [ebp+var_48] +
call esi  +
lea ecx [ebp+var_78] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10142A5  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_60] +
call esi  +
lea ecx [ebp+var_90] +
call esi  +
lea ecx [ebp+var_48] +
call esi  +
lea ecx [ebp+var_78] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_1014487  +
push dword_105DAC0  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_1014487  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1014487  +
push dword_105DAAC  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014487  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call esi  +
test al al +
jz loc_1014487  +
push dword_105DAA0  +
lea ecx [ebp+var_8C] +
call ebx  +
test al al +
jz loc_1014487  +
movzx eax word ptr [edi+0Ch] +
xor ecx ecx +
test ax ax +
setnz cl  +
push offset dword_1005928  +
add ecx 1D60h +
push ecx  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1014487  +
push esi  +
lea ecx [ebp+var_8C] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014487  +
call sub_100E7A7  +
push dword ptr [edi+10h]  +
mov ebx offset asc_1005670 +
push ebx  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1014487  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014487  +
call sub_100E7A7  +
push dword ptr [edi+14h]  +
lea eax [ebp+var_2C] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1014487  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_44] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_44] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014487  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10144A6  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0BCh +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_8C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_BC] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call esi  +
test al al +
jz loc_10147E7  +
push dword_105DADC  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_8C] +
call ebx  +
test al al +
jz loc_10147E7  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_10147E7  +
push dword_105DAC4  +
lea ecx [ebp+var_74] +
call ebx  +
test al al +
jz loc_10147E7  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_10147E7  +
push dword_105DAE4  +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_10147E7  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_BC] +
call esi  +
test al al +
jz loc_10147E7  +
push dword_105DA98  +
lea ecx [ebp+var_BC] +
call ebx  +
test al al +
jz loc_10147E7  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_A4] +
call esi  +
test al al +
jz loc_10147E7  +
push dword_105DAA0  +
lea ecx [ebp+var_A4] +
call ebx  +
test al al +
jz loc_10147E7  +
movzx eax word ptr [edi+0Ch] +
xor ecx ecx +
test ax ax +
setnz cl  +
push offset dword_1005928  +
add ecx 1D74h +
push ecx  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_10147E7  +
push esi  +
lea ecx [ebp+var_A4] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_A4] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10147E7  +
call sub_100E7A7  +
push dword ptr [edi+10h]  +
mov esi offset asc_1005670 +
push esi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov ebx ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_10147E7  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10147E7  +
call sub_100E7A7  +
push dword ptr [edi+14h]  +
lea eax [ebp+var_2C] +
push esi  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_10147E7  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_BC] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_BC] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10147E7  +
call sub_100E7A7  +
mov eax [edi+1Ch] +
push dword ptr [edi+18h]  +
mov esi offset a0x08x08x +
test eax eax +
jz loc_1014709  +
push eax  +
push esi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_101471C  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_10147E7  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_8C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10147E7  +
call sub_100E7A7  +
mov eax [edi+24h] +
push dword ptr [edi+20h]  +
test eax eax +
jz loc_1014774  +
push eax  +
push esi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1014787  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_10147E7  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_74] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_74] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10147E7  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_BC] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1014816  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_BC] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0BCh +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ds:??0DSTRING@@QAE@XZ +
lea ecx [ebp+var_8C] +
call edi  +
lea ecx [ebp+var_74] +
call edi  +
lea ecx [ebp+var_5C] +
call edi  +
lea ecx [ebp+var_BC] +
call edi  +
lea ecx [ebp+var_A4] +
call edi  +
lea ecx [ebp+var_44] +
call edi  +
mov edi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_8C] +
call edi  +
test al al +
jz loc_1014B5C  +
push dword_105DADC  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_8C] +
call ebx  +
test al al +
jz loc_1014B5C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_74] +
call edi  +
test al al +
jz loc_1014B5C  +
push dword_105DAC4  +
lea ecx [ebp+var_74] +
call ebx  +
test al al +
jz loc_1014B5C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call edi  +
test al al +
jz loc_1014B5C  +
push dword_105DAE4  +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_1014B5C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_BC] +
call edi  +
test al al +
jz loc_1014B5C  +
push dword_105DA98  +
lea ecx [ebp+var_BC] +
call ebx  +
test al al +
jz loc_1014B5C  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_A4] +
call edi  +
test al al +
jz loc_1014B5C  +
push dword_105DAA0  +
lea ecx [ebp+var_A4] +
call ebx  +
test al al +
jz loc_1014B5C  +
test byte ptr [esi+0Ch] 3 +
push 0  +
pop eax  +
setnz al  +
push offset dword_1005928  +
lea eax [eax+eax+1D6Ah] +
push eax  +
call sub_1018CD4  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1014B5C  +
push edi  +
lea ecx [ebp+var_A4] +
call ebx  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
lea eax [ebp+var_A4] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014B5C  +
call sub_100E7A7  +
push dword ptr [esi+14h]  +
mov edi offset aI64x +
push dword ptr [esi+10h]  +
lea eax [ebp+var_2C] +
push edi  +
push 13h  +
push eax  +
call sub_10062BE  +
mov ebx ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 14h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014B5C  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014B5C  +
call sub_100E7A7  +
push dword ptr [esi+1Ch]  +
lea eax [ebp+var_2C] +
push dword ptr [esi+18h]  +
push edi  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014B5C  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_BC] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_BC] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014B5C  +
call sub_100E7A7  +
mov eax [esi+1Ch] +
push dword ptr [esi+18h]  +
mov edi offset a0x08x08x +
test eax eax +
jz loc_1014A7E  +
push eax  +
push edi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1014A91  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014B5C  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_8C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_8C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014B5C  +
call sub_100E7A7  +
mov eax [esi+24h] +
push dword ptr [esi+20h]  +
test eax eax +
jz loc_1014AE9  +
push eax  +
push edi  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1014AFC  +
push offset a0x08x  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014B5C  +
lea eax [ebp+var_44] +
push eax  +
lea ecx [ebp+var_74] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_74] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014B5C  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_BC] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1014B8B  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_A4] +
call esi  +
lea ecx [ebp+var_BC] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_8C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 74h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_74] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_5C] +
call esi  +
test al al +
jz loc_1014CD3  +
push dword_105DAB4  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_5C] +
call ebx  +
test al al +
jz loc_1014CD3  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_44] +
call esi  +
test al al +
jz loc_1014CD3  +
push dword_105DAF4  +
lea ecx [ebp+var_44] +
call ebx  +
test al al +
jz loc_1014CD3  +
push dword ptr [edi+10h]  +
mov ebx offset asc_1005670 +
push ebx  +
lea eax [ebp+var_2C] +
push 13h  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1014CD3  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_5C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_5C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014CD3  +
call sub_100E7A7  +
push dword ptr [edi+14h]  +
lea eax [ebp+var_2C] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+var_74] +
call esi  +
test al al +
jz loc_1014CD3  +
lea eax [ebp+var_74] +
push eax  +
lea ecx [ebp+var_44] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_44] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014CD3  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1014CEA  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_74] +
call esi  +
lea ecx [ebp+var_44] +
call esi  +
lea ecx [ebp+var_5C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 7Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_4C] +
call esi  +
test al al +
jz loc_1014F25  +
push dword_105DAA4  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_4C] +
call ebx  +
test al al +
jz loc_1014F25  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_1014F25  +
push dword_105DA94  +
lea ecx [ebp+var_34] +
call ebx  +
test al al +
jz loc_1014F25  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_64] +
call esi  +
test al al +
jz loc_1014F25  +
push dword_105DAD0  +
lea ecx [ebp+var_64] +
call ebx  +
test al al +
jz loc_1014F25  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_7C] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_1014F25  +
lea eax [ebp+var_7C] +
push eax  +
lea ecx [ebp+var_4C] +
call ebx  +
lea eax [ebp+var_4C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014F25  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_1014E1A  +
mov eax 1D8Bh +
jmp loc_1014E66  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test al al +
jz loc_1014E2C  +
mov eax 1D89h +
jmp loc_1014E66  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test al al +
jz loc_1014E3E  +
mov eax 1D8Ah +
jmp loc_1014E66  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
test al al +
jz loc_1014E50  +
mov eax 1D88h +
jmp loc_1014E66  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 16h +
add eax 1D76h +
mov ebx offset dword_1005928 +
push ebx  +
push eax  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1014F25  +
push esi  +
lea ecx [ebp+var_34] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_34] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014F25  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+24h]  +
test al al +
jz loc_1014EB8  +
mov eax 1D9Ch +
jmp loc_1014EDD  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+28h]  +
test al al +
jz loc_1014ECA  +
mov eax 1D9Dh +
jmp loc_1014EDD  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+2Ch]  +
movzx eax al +
neg eax  +
sbb eax eax +
add eax 1D9Fh +
push ebx  +
push eax  +
call sub_1018CD4  +
pop ecx  +
mov esi eax +
pop ecx  +
lea ecx [ebp+var_64] +
test esi esi +
jz loc_1014F28  +
push esi  +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_64] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1014F25  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_1014F52  +
push edi  +
call sub_1013F70  +
test eax eax +
jnz loc_1014F9E  +
lea ecx [ebp+var_64] +
mov esi ds:??1DSTRING@@UAE@XZ +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test al al +
jz loc_1014F65  +
push edi  +
call sub_1013897  +
jmp loc_1014F21  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test al al +
jz loc_1014F78  +
push edi  +
call sub_1013D51  +
jmp loc_1014F21  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
test al al +
jz loc_1014F8B  +
push edi  +
call sub_1013B38  +
jmp loc_1014F21  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
test al al +
jz loc_1014F9E  +
push edi  +
call sub_10140CF  +
jmp loc_1014F21  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1014F41  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 94h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_94] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
xor ebx ebx +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_94] +
call esi  +
test al al +
jz loc_1015280  +
push dword_105DA90  +
lea ecx [ebp+var_94] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1015280  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_4C] +
call esi  +
test al al +
jz loc_1015280  +
push dword_105DA94  +
lea ecx [ebp+var_4C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1015280  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_7C] +
call esi  +
test al al +
jz loc_1015280  +
push dword_105DAFC  +
lea ecx [ebp+var_7C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_1015280  +
push 0FFFFFFFFh  +
push ebx  +
push dword_105DAF0  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_1015280  +
push dword_105DAD0  +
mov esi ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_1015280  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_64] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_1015280  +
lea eax [ebp+var_64] +
push eax  +
lea ecx [ebp+var_94] +
call esi  +
lea eax [ebp+var_94] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015280  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
test al al +
jz loc_101512F  +
mov eax 1D8Bh +
jmp loc_1015169  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test al al +
jz loc_1015141  +
mov eax 1D89h +
jmp loc_1015169  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_1015153  +
mov eax 1D8Ah +
jmp loc_1015169  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 12h +
add eax 1D76h +
mov ebx offset dword_1005928 +
push ebx  +
push eax  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1015280  +
push esi  +
lea ecx [ebp+var_4C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_4C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015280  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
movzx eax al +
push eax  +
push offset a0x08x  +
lea eax [ebp+var_1C] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_64] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
lea ecx [ebp+var_7C] +
test al al +
jz loc_1015283  +
lea eax [ebp+var_64] +
push eax  +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_7C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015280  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+2Ch]  +
test al al +
jz loc_1015213  +
mov eax 1D9Ch +
jmp loc_1015238  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+30h]  +
test al al +
jz loc_1015225  +
mov eax 1D9Dh +
jmp loc_1015238  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+34h]  +
movzx eax al +
neg eax  +
sbb eax eax +
add eax 1D9Fh +
push ebx  +
push eax  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1015280  +
push esi  +
lea ecx [ebp+var_34] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_34] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015280  +
call sub_100E7A7  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
test al al +
jz loc_10152B5  +
push edi  +
call sub_1014BA1  +
test eax eax +
jnz loc_10152EE  +
lea ecx [ebp+var_7C] +
mov esi ds:??1DSTRING@@UAE@XZ +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_94] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
test al al +
jz loc_10152C8  +
push edi  +
call sub_10142BB  +
jmp loc_101527C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_10152DB  +
push edi  +
call sub_101482C  +
jmp loc_101527C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
test al al +
jz loc_10152EE  +
push edi  +
call sub_10144BC  +
jmp loc_101527C  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_94] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10152A4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
lea ecx [ebp+var_94] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_AC] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
xor edi edi +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_94] +
call esi  +
test al al +
jz loc_10156B8  +
push dword_105DAD4  +
lea ecx [ebp+var_94] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10156B8  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_AC] +
call esi  +
test al al +
jz loc_10156B8  +
push dword_105DAE8  +
lea ecx [ebp+var_AC] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10156B8  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_64] +
call esi  +
test al al +
jz loc_10156B8  +
push dword_105DAD8  +
lea ecx [ebp+var_64] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10156B8  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_7C] +
call esi  +
test al al +
jz loc_10156B8  +
push dword_105DA80  +
lea ecx [ebp+var_7C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10156B8  +
push 0FFFFFFFFh  +
push edi  +
push dword_105DAF0  +
lea ecx [ebp+var_4C] +
call esi  +
test al al +
jz loc_10156B8  +
push dword_105DA7C  +
lea ecx [ebp+var_4C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
test al al +
jz loc_10156B8  +
cmp [ebp+arg_8] 0 +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
mov edi offset aD +
jz loc_10154B3  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push edi  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_10156B8  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_94] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_94] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10156B8  +
call sub_100E7A7  +
mov eax [ebx+8] +
cmp eax 0Bh +
ja loc_101551B  +
jmp ds:off_10156F5[eax*4]  +
mov eax 1D4Ch +
jmp loc_1015520  +
mov eax 1D4Dh +
jmp loc_1015520  +
mov eax 1D4Eh +
jmp loc_1015520  +
mov eax 1D4Fh +
jmp loc_1015520  +
mov eax 1D50h +
jmp loc_1015520  +
mov eax 1D51h +
jmp loc_1015520  +
mov eax 1D52h +
jmp loc_1015520  +
mov eax 1D53h +
jmp loc_1015520  +
mov eax 1D54h +
jmp loc_1015520  +
mov eax 1D55h +
jmp loc_1015520  +
mov eax 1D56h +
jmp loc_1015520  +
mov eax 1D57h +
jmp loc_1015520  +
mov eax 1D76h +
push offset dword_1005928  +
push eax  +
call sub_1018CD4  +
pop ecx  +
pop ecx  +
mov [ebp+var_B0] eax +
test eax eax +
jz loc_10156B8  +
push eax  +
lea ecx [ebp+var_AC] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
mov ecx [ebp+var_B0] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp+var_AC] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10156B8  +
call sub_100E7A7  +
push dword ptr [ebx+0Ch]  +
lea eax [ebp+var_1C] +
push edi  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_10156B8  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_64] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_64] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10156B8  +
call sub_100E7A7  +
movzx eax word ptr [ebx+10h] +
push eax  +
push edi  +
lea eax [ebp+var_1C] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_10156B8  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_7C] +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_7C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10156B8  +
call sub_100E7A7  +
movzx eax word ptr [ebx+12h] +
push eax  +
push edi  +
lea eax [ebp+var_1C] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
test al al +
jz loc_10156BB  +
lea eax [ebp+var_34] +
push eax  +
call ds:?Strcat@WSTRING@@QAEEPBV1@@Z  +
lea eax [ebp+var_4C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_10156B8  +
call sub_100E7A7  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_10156B8  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_10156B8  +
xor edi edi +
jmp loc_1015669  +
push edi  +
push eax  +
call sub_1014D00  +
test eax eax +
jz loc_10156B0  +
inc edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_101565D  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_AC] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_94] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_10156E4  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea ecx [ebp+var_4C] +
mov esi ds:??1DSTRING@@UAE@XZ +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_AC] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_94] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4Ch +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ds:??0DSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_34] +
call ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z  +
test al al +
jz loc_1015820  +
push dword_105DAE0  +
mov esi ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_1015820  +
push dword ptr [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_4C] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
test al al +
jz loc_1015820  +
lea eax [ebp+var_4C] +
push eax  +
lea ecx [ebp+var_34] +
call esi  +
lea eax [ebp+var_34] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015820  +
call sub_100E7A7  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_1015820  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_1015820  +
xor edi edi +
jmp loc_10157EB  +
push edi  +
push eax  +
call sub_1014FCA  +
test eax eax +
jz loc_1015818  +
inc edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_10157DF  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
call sub_100E7A7  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
xor eax eax +
inc eax  +
jmp loc_1015832  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
lea ecx [ebp+var_C] +
call sub_1018E7A  +
call sub_100E7A7  +
cmp [ebp+arg_4] 0 +
jz loc_10158B3  +
cmp [ebp+arg_0] 0 +
jz loc_10158B3  +
push [ebp+arg_4]  +
lea ecx [ebp+var_C] +
push [ebp+arg_0]  +
call sub_1018D95  +
test al al +
jz loc_10158B3  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_10158B3  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_10158B3  +
xor edi edi +
jmp loc_10158A0  +
push 1  +
push edi  +
push eax  +
call sub_101531F  +
test eax eax +
jz loc_10158AB  +
inc edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_1015892  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea ecx [ebp+var_C] +
call sub_1018EA0  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_A0] +
call sub_1019D9F  +
mov esi ds:??0DSTRING@@QAE@XZ +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_7C] +
call esi  +
call sub_100E7A7  +
cmp [ebp+arg_4] 0 +
jz loc_1015B60  +
test edi edi +
jz loc_1015B60  +
push [ebp+arg_4]  +
lea ecx [ebp+var_A0] +
push edi  +
call sub_1019C99  +
test al al +
jz loc_1015B60  +
mov esi ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_4C] +
call esi  +
test al al +
jz loc_1015B60  +
push dword_105DAC8  +
mov ebx ds:?Strcat@WSTRING@@QAEEPBV1@@Z +
lea ecx [ebp+var_4C] +
call ebx  +
test al al +
jz loc_1015B60  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_34] +
call esi  +
test al al +
jz loc_1015B60  +
push dword_105DAF8  +
lea ecx [ebp+var_34] +
call ebx  +
test al al +
jz loc_1015B60  +
push 0FFFFFFFFh  +
push 0  +
push dword_105DAF0  +
lea ecx [ebp+var_7C] +
call esi  +
test al al +
jz loc_1015B60  +
push dword_105DAA8  +
lea ecx [ebp+var_7C] +
call ebx  +
test al al +
jz loc_1015B60  +
mov eax [ebp+var_98] +
cmp eax 0Bh +
ja loc_1015A24  +
jmp ds:off_1015B98[eax*4]  +
mov eax 1D4Ch +
jmp loc_1015A29  +
mov eax 1D4Dh +
jmp loc_1015A29  +
mov eax 1D4Eh +
jmp loc_1015A29  +
mov eax 1D4Fh +
jmp loc_1015A29  +
mov eax 1D50h +
jmp loc_1015A29  +
mov eax 1D51h +
jmp loc_1015A29  +
mov eax 1D52h +
jmp loc_1015A29  +
mov eax 1D53h +
jmp loc_1015A29  +
mov eax 1D54h +
jmp loc_1015A29  +
mov eax 1D55h +
jmp loc_1015A29  +
mov eax 1D56h +
jmp loc_1015A29  +
mov eax 1D57h +
jmp loc_1015A29  +
mov eax 1D76h +
push offset dword_1005928  +
push eax  +
call sub_1018CD4  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1015B60  +
push esi  +
lea ecx [ebp+var_4C] +
call ebx  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea eax [ebp+var_4C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015B60  +
call sub_100E7A7  +
push dword ptr [ebp+var_94]  +
mov edi offset aD +
push edi  +
lea eax [ebp+var_1C] +
push 0Bh  +
push eax  +
call sub_10062BE  +
mov esi ds:?Initialize@WSTRING@@QAEEPBGK@Z +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_64] +
call esi  +
test al al +
jz loc_1015B60  +
lea eax [ebp+var_64] +
push eax  +
lea ecx [ebp+var_34] +
call ebx  +
lea eax [ebp+var_34] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015B60  +
call sub_100E7A7  +
push dword ptr [ebp+var_90]  +
lea eax [ebp+var_1C] +
push edi  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
push 0FFFFFFFFh  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_7C] +
test al al +
jz loc_1015B63  +
lea eax [ebp+var_64] +
push eax  +
call ebx  +
lea eax [ebp+var_7C] +
push eax  +
call sub_101326A  +
test eax eax +
jz loc_1015B60  +
call sub_100E7A7  +
mov ecx [ebp+var_80] +
test ecx ecx +
jz loc_1015B60  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_1015B60  +
xor edi edi +
jmp loc_1015B1B  +
push edi  +
push eax  +
call sub_101572A  +
test eax eax +
jz loc_1015B58  +
inc edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_1015B0F  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_7C] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_A0] +
call sub_1019DC8  +
xor eax eax +
inc eax  +
jmp loc_1015B87  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
lea ecx [ebp+var_7C] +
mov esi ds:??1DSTRING@@UAE@XZ +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_4C] +
call esi  +
lea ecx [ebp+var_64] +
call esi  +
lea ecx [ebp+var_A0] +
call sub_1019DC8  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp dword_105DB00 0 +
jnz loc_1015BEC  +
call sub_1013286  +
mov dword_105DB00 eax +
test eax eax +
jz locret_1015C4C  +
mov eax [ebp+arg_8] +
sub eax 8 +
jz loc_1015C41  +
dec eax  +
jz loc_1015C0E  +
dec eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
jz loc_1015C07  +
call sub_100E80F  +
jmp locret_1015C4C  +
call sub_10158C6  +
jmp locret_1015C4C  +
lea ecx [ebp+var_18] +
call sub_1019357  +
push 0  +
push [ebp+arg_4]  +
lea ecx [ebp+var_18] +
push [ebp+arg_0]  +
call sub_1019085  +
test al al +
jz loc_1015C37  +
push 0  +
push 0  +
lea eax [ebp+var_18] +
push eax  +
call sub_101531F  +
lea ecx [ebp+var_18] +
call sub_1019380  +
jmp locret_1015C4C  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1015847  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1015BCD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_1015C8F  +
test [ebp+arg_8] 1000h +
jz loc_1015C8F  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_1015CD7  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_1015CBF  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_1015CD7  +
test esi esi +
jbe loc_1015CF0  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_1015CF0  +
test [ebp+arg_8] 800h +
jz loc_1015CF0  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset dword_1005928 +
push esi  +
push 1D4Ch  +
call sub_1018CD4  +
push esi  +
push 1D4Dh  +
mov dword_105DB08 eax +
call sub_1018CD4  +
push esi  +
push 1D4Eh  +
mov dword_105DB68 eax +
call sub_1018CD4  +
push esi  +
push 1D4Fh  +
mov dword_105DB18 eax +
call sub_1018CD4  +
push esi  +
push 1D50h  +
mov dword_105DB4C eax +
call sub_1018CD4  +
push esi  +
push 1D51h  +
mov dword_105DB2C eax +
call sub_1018CD4  +
push esi  +
push 1D52h  +
mov dword_105DB28 eax +
call sub_1018CD4  +
push esi  +
push 1D53h  +
mov dword_105DB38 eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1D54h  +
mov dword_105DB60 eax +
call sub_1018CD4  +
push esi  +
push 1D55h  +
mov dword_105DB30 eax +
call sub_1018CD4  +
push esi  +
push 1D56h  +
mov dword_105DB5C eax +
call sub_1018CD4  +
push esi  +
push 1D57h  +
mov dword_105DB04 eax +
call sub_1018CD4  +
push esi  +
push 1D76h  +
mov dword_105DB44 eax +
call sub_1018CD4  +
push esi  +
push 1D88h  +
mov dword_105DB48 eax +
call sub_1018CD4  +
push esi  +
push 1D89h  +
mov dword_105DB50 eax +
call sub_1018CD4  +
push esi  +
push 1D8Ah  +
mov dword_105DB0C eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1D8Bh  +
mov dword_105DB20 eax +
call sub_1018CD4  +
push esi  +
push 1D60h  +
mov dword_105DB40 eax +
call sub_1018CD4  +
push esi  +
push 1D61h  +
mov dword_105DB6C eax +
call sub_1018CD4  +
mov dword_105DB34 eax +
push esi  +
push 1D6Ah  +
call sub_1018CD4  +
push esi  +
push 1D6Bh  +
mov dword_105DB58 eax +
call sub_1018CD4  +
push esi  +
push 1D6Ch  +
mov dword_105DB14 eax +
call sub_1018CD4  +
push esi  +
push 1D74h  +
mov dword_105DB64 eax +
call sub_1018CD4  +
push esi  +
push 1D75h  +
mov dword_105DB10 eax +
call sub_1018CD4  +
add esp 40h +
push esi  +
push 1D9Ch  +
mov dword_105DB54 eax +
call sub_1018CD4  +
push esi  +
push 1D9Dh  +
mov dword_105DB24 eax +
call sub_1018CD4  +
push esi  +
push 1D9Eh  +
mov dword_105DB3C eax +
call sub_1018CD4  +
push esi  +
push 1D9Fh  +
mov dword_105DB70 eax +
call sub_1018CD4  +
mov ecx dword_105DB08 +
xor esi esi +
xor edi edi +
add esp 20h +
inc esi  +
mov dword_105DB1C eax +
cmp ecx edi +
jz loc_1015FF1  +
cmp dword_105DB68 edi +
jz loc_1015FEC  +
cmp dword_105DB18 edi +
jz loc_1015FEC  +
cmp dword_105DB4C edi +
jz loc_1015FEC  +
cmp dword_105DB2C edi +
jz loc_1015FEC  +
cmp dword_105DB28 edi +
jz loc_1015FEC  +
cmp dword_105DB38 edi +
jz loc_1015FEC  +
cmp dword_105DB60 edi +
jz loc_1015FEC  +
cmp dword_105DB30 edi +
jz loc_1015FEC  +
cmp dword_105DB5C edi +
jz loc_1015FEC  +
cmp dword_105DB04 edi +
jz loc_1015FEC  +
cmp dword_105DB44 edi +
jz loc_1015FEC  +
cmp dword_105DB48 edi +
jz loc_1015FEC  +
cmp dword_105DB50 edi +
jz loc_1015FEC  +
cmp dword_105DB0C edi +
jz loc_1015FEC  +
cmp dword_105DB20 edi +
jz loc_1015FEC  +
cmp dword_105DB40 edi +
jz loc_1015FEC  +
cmp dword_105DB6C edi +
jz loc_1015FEC  +
cmp dword_105DB34 edi +
jz loc_1015FEC  +
cmp dword_105DB58 edi +
jz loc_1015FEC  +
cmp dword_105DB14 edi +
jz loc_1015FEC  +
cmp dword_105DB64 edi +
jz loc_1015FEC  +
cmp dword_105DB10 edi +
jz loc_1015FEC  +
cmp dword_105DB54 edi +
jz loc_1015FEC  +
cmp dword_105DB24 edi +
jz loc_1015FEC  +
cmp dword_105DB3C edi +
jz loc_1015FEC  +
cmp dword_105DB70 edi +
jz loc_1015FEC  +
cmp eax edi +
jz loc_1015FEC  +
xor eax eax +
inc eax  +
jmp loc_1016230  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB68 +
mov dword_105DB08 edi +
cmp ecx edi +
jz loc_1016006  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB18 +
mov dword_105DB68 edi +
cmp ecx edi +
jz loc_101601B  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB4C +
mov dword_105DB18 edi +
cmp ecx edi +
jz loc_1016030  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB2C +
mov dword_105DB4C edi +
cmp ecx edi +
jz loc_1016045  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB28 +
mov dword_105DB2C edi +
cmp ecx edi +
jz loc_101605A  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB38 +
mov dword_105DB28 edi +
cmp ecx edi +
jz loc_101606F  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB60 +
mov dword_105DB38 edi +
cmp ecx edi +
jz loc_1016084  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB30 +
mov dword_105DB60 edi +
cmp ecx edi +
jz loc_1016099  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB5C +
mov dword_105DB30 edi +
cmp ecx edi +
jz loc_10160AE  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB04 +
mov dword_105DB5C edi +
cmp ecx edi +
jz loc_10160C3  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB44 +
mov dword_105DB04 edi +
cmp ecx edi +
jz loc_10160D8  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB48 +
mov dword_105DB44 edi +
cmp ecx edi +
jz loc_10160ED  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB50 +
mov dword_105DB48 edi +
cmp ecx edi +
jz loc_1016102  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB0C +
mov dword_105DB50 edi +
cmp ecx edi +
jz loc_1016117  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB20 +
mov dword_105DB0C edi +
cmp ecx edi +
jz loc_101612C  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB40 +
mov dword_105DB20 edi +
cmp ecx edi +
jz loc_1016141  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB6C +
mov dword_105DB40 edi +
cmp ecx edi +
jz loc_1016156  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB34 +
mov dword_105DB6C edi +
cmp ecx edi +
jz loc_101616B  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB58 +
mov dword_105DB34 edi +
cmp ecx edi +
jz loc_1016180  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB14 +
mov dword_105DB58 edi +
cmp ecx edi +
jz loc_1016195  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB64 +
mov dword_105DB14 edi +
cmp ecx edi +
jz loc_10161AA  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB10 +
mov dword_105DB64 edi +
cmp ecx edi +
jz loc_10161BF  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB54 +
mov dword_105DB10 edi +
cmp ecx edi +
jz loc_10161D4  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB24 +
mov dword_105DB54 edi +
cmp ecx edi +
jz loc_10161E9  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB3C +
mov dword_105DB24 edi +
cmp ecx edi +
jz loc_10161FE  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB70 +
mov dword_105DB3C edi +
cmp ecx edi +
jz loc_1016213  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov ecx dword_105DB1C +
mov dword_105DB70 edi +
cmp ecx edi +
jz loc_1016228  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
mov dword_105DB1C edi +
xor eax eax +
pop edi  +
mov dword_105DB74 eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SendDlgItemMessageW +
push 0  +
push 0  +
push 188h  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_101627D  +
push 0  +
push eax  +
push 199h  +
push [ebp+nIDDlgItem]  +
push [ebp+hDlg]  +
call esi  +
test eax eax +
jz loc_101627D  +
cmp eax 0FFFFFFFFh +
jz loc_101627D  +
mov eax [eax+8] +
jmp loc_101627F  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1016306  +
mov eax [esi] +
push ebx  +
push edi  +
mov ecx esi +
call dword ptr [eax+24h]  +
mov edi ds:GetDlgItem +
movzx eax al +
push eax  +
push 51Eh  +
push [ebp+hDlg]  +
call edi  +
mov ebx ds:EnableWindow +
push eax  +
call ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
movzx eax al +
push eax  +
push 520h  +
push [ebp+hDlg]  +
call edi  +
push eax  +
call ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
movzx eax al +
push eax  +
push 521h  +
push [ebp+hDlg]  +
call edi  +
push eax  +
call ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
movzx eax al +
push eax  +
push 51Fh  +
push [ebp+hDlg]  +
call edi  +
push eax  +
call ebx  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_101635D  +
mov eax [esi] +
push ebx  +
push edi  +
mov ecx esi +
call dword ptr [eax+24h]  +
mov edi ds:GetDlgItem +
movzx eax al +
push eax  +
push 7D1h  +
push [ebp+hDlg]  +
call edi  +
mov ebx ds:EnableWindow +
push eax  +
call ebx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
movzx eax al +
push eax  +
push 7D2h  +
push [ebp+hDlg]  +
call edi  +
push eax  +
call ebx  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_10119AA  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_1016477  +
test [ebp+arg_10] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+var_8] edi +
mov [ebp+var_4] ebx +
jz loc_10163AE  +
cmp [ebp+arg_14] eax +
jnz loc_10163AE  +
mov [ebp+arg_14] offset dword_10054C0 +
xor esi esi +
test [ebp+arg_10] 0FFFFE000h +
jz loc_10163C9  +
mov esi 80070057h +
cmp ecx eax +
jz loc_1016430  +
xor eax eax +
mov [edi] ax +
jmp loc_1016430  +
cmp ecx eax +
jnz loc_10163EA  +
mov edx [ebp+arg_14] +
cmp [edx] ax +
jz loc_1016461  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1016430  +
mov [ebp+var_8] eax +
lea eax [ebp+arg_18] +
push eax  +
push [ebp+arg_14]  +
lea eax [ebp+var_8] +
push eax  +
mov eax ecx +
call sub_100E325  +
mov esi eax +
mov eax [ebp+var_8] +
sub ebx eax +
lea edx [edi+eax*2] +
mov [ebp+var_8] edx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_101642D  +
mov eax [ebp+arg_10] +
test eax 200h +
jz loc_1016461  +
cmp ebx 1 +
jbe loc_1016461  +
lea ecx [ebx+ebx] +
push edx  +
call sub_100E371  +
jmp loc_1016461  +
mov ecx [ebp+arg_4] +
test [ebp+arg_10] 1C00h +
jz loc_1016455  +
test ecx ecx +
jz loc_1016455  +
push [ebp+arg_10]  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1015C65  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_1016461  +
cmp esi 8007007Ah +
jnz loc_1016476  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_101646D  +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1016476  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
sub eax 110h +
mov ecx [ebp+8] +
push esi  +
mov esi [ebp+14h] +
mov [ebp-30h] ecx +
jz loc_10164CA  +
dec eax  +
jnz loc_10164C3  +
movzx eax word ptr [ebp+10h] +
dec eax  +
cmp eax 1 +
ja loc_10164C3  +
push 1  +
push ecx  +
call ds:EndDialog  +
jmp loc_1016641  +
xor eax eax +
jmp loc_1016644  +
test esi esi +
jnz loc_10164D1  +
push esi  +
jmp loc_10164B7  +
***
movzx eax word ptr [esi+0Ch] +
test ax ax +
jnz loc_10164E1  +
mov eax dword_105DB10 +
jmp loc_10164EF  +
test al 1 +
mov eax dword_105DB54 +
jnz loc_10164EF  +
mov eax dword_105DB48 +
push ebx  +
push edi  +
push dword ptr [eax+8]  +
mov edi ds:SendDlgItemMessageW +
push 0  +
push 0Ch  +
push 6A5h  +
push ecx  +
call edi  +
push dword ptr [esi+10h]  +
mov ebx offset asc_1005670 +
push ebx  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 6A7h  +
push dword ptr [ebp-30h]  +
call edi  +
push dword ptr [esi+14h]  +
lea eax [ebp-2Ch] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 6AAh  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi+1Ch] +
push dword ptr [esi+18h]  +
mov ebx offset a0x08x08x +
test eax eax +
jz loc_1016574  +
push eax  +
push ebx  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_1016587  +
push offset a0x08x  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 6A8h  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi+24h] +
push dword ptr [esi+20h]  +
test eax eax +
jz loc_10165B5  +
push eax  +
push ebx  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_10165C8  +
push offset a0x08x  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 6A9h  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
test al al +
jz loc_10165EC  +
mov eax dword_105DB24 +
jmp loc_1016625  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
test al al +
jz loc_10165FE  +
mov eax dword_105DB3C +
jmp loc_1016625  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
test al al +
jz loc_1016610  +
mov eax dword_105DB70 +
jmp loc_1016625  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+38h]  +
test al al +
mov eax dword_105DB1C +
jnz loc_1016625  +
mov eax dword_105DB48 +
push dword ptr [eax+8]  +
push 0  +
push 0Ch  +
push 7D0h  +
push dword ptr [ebp-30h]  +
call edi  +
push esi  +
push dword ptr [ebp-30h]  +
call sub_1016310  +
pop edi  +
pop ebx  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
sub eax 110h +
mov ecx [ebp+8] +
push esi  +
mov esi [ebp+14h] +
mov [ebp-30h] ecx +
jz loc_10166A0  +
dec eax  +
jnz loc_1016699  +
movzx eax word ptr [ebp+10h] +
dec eax  +
cmp eax 1 +
ja loc_1016699  +
push 1  +
push ecx  +
call ds:EndDialog  +
jmp loc_1016827  +
xor eax eax +
jmp loc_101682A  +
test esi esi +
jnz loc_10166A7  +
push esi  +
jmp loc_101668D  +
***
movzx eax word ptr [esi+0Ch] +
test al 3 +
jnz loc_10166B6  +
mov eax dword_105DB58 +
jmp loc_10166CF  +
test al 1 +
jz loc_10166C1  +
mov eax dword_105DB14 +
jmp loc_10166CF  +
test al 2 +
mov eax dword_105DB64 +
jnz loc_10166CF  +
mov eax dword_105DB48 +
push ebx  +
push edi  +
push dword ptr [eax+8]  +
mov edi ds:SendDlgItemMessageW +
push 0  +
push 0Ch  +
push 642h  +
push ecx  +
call edi  +
push dword ptr [esi+14h]  +
mov ebx offset asc_1005670 +
push dword ptr [esi+10h]  +
lea eax [ebp-2Ch] +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 643h  +
push dword ptr [ebp-30h]  +
call edi  +
push dword ptr [esi+1Ch]  +
lea eax [ebp-2Ch] +
push dword ptr [esi+18h]  +
push ebx  +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 646h  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi+24h] +
push dword ptr [esi+20h]  +
mov ebx offset a0x08x08x +
test eax eax +
jz loc_101675A  +
push eax  +
push ebx  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_101676D  +
push offset a0x08x  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 644h  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi+2Ch] +
push dword ptr [esi+28h]  +
test eax eax +
jz loc_101679B  +
push eax  +
push ebx  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_10167AE  +
push offset a0x08x  +
lea eax [ebp-2Ch] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-2Ch] +
push eax  +
push 0  +
push 0Ch  +
push 645h  +
push dword ptr [ebp-30h]  +
call edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
test al al +
jz loc_10167D2  +
mov eax dword_105DB24 +
jmp loc_101680B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
test al al +
jz loc_10167E4  +
mov eax dword_105DB3C +
jmp loc_101680B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
test al al +
jz loc_10167F6  +
mov eax dword_105DB70 +
jmp loc_101680B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+38h]  +
test al al +
mov eax dword_105DB1C +
jnz loc_101680B  +
mov eax dword_105DB48 +
push dword ptr [eax+8]  +
push 0  +
push 0Ch  +
push 7D0h  +
push dword ptr [ebp-30h]  +
call edi  +
push esi  +
push dword ptr [ebp-30h]  +
call sub_1016310  +
pop edi  +
pop ebx  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
sub eax 110h +
mov ecx [ebp+8] +
push edi  +
mov edi [ebp+14h] +
mov [ebp-20h] ecx +
jz loc_1016886  +
dec eax  +
jnz loc_101687F  +
movzx eax word ptr [ebp+10h] +
dec eax  +
cmp eax 1 +
ja loc_101687F  +
push 1  +
push ecx  +
call ds:EndDialog  +
jmp loc_1016976  +
xor eax eax +
jmp loc_1016979  +
test edi edi +
jnz loc_101688D  +
push edi  +
jmp loc_1016873  +
***
movzx eax word ptr [edi+0Ch] +
test ax ax +
jnz loc_101689D  +
mov eax dword_105DB6C +
jmp loc_10168AB  +
test al 1 +
mov eax dword_105DB34 +
jnz loc_10168AB  +
mov eax dword_105DB48 +
push ebx  +
push esi  +
push dword ptr [eax+8]  +
mov esi ds:SendDlgItemMessageW +
push 0  +
push 0Ch  +
push 709h  +
push ecx  +
call esi  +
push dword ptr [edi+10h]  +
mov ebx offset asc_1005670 +
push ebx  +
lea eax [ebp-1Ch] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-1Ch] +
push eax  +
push 0  +
push 0Ch  +
push 70Bh  +
push dword ptr [ebp-20h]  +
call esi  +
push dword ptr [edi+14h]  +
lea eax [ebp-1Ch] +
push ebx  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-1Ch] +
push eax  +
push 0  +
push 0Ch  +
push 70Ch  +
push dword ptr [ebp-20h]  +
call esi  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+2Ch]  +
test al al +
jz loc_1016921  +
mov eax dword_105DB24 +
jmp loc_101695A  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+30h]  +
test al al +
jz loc_1016933  +
mov eax dword_105DB3C +
jmp loc_101695A  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+34h]  +
test al al +
jz loc_1016945  +
mov eax dword_105DB70 +
jmp loc_101695A  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+38h]  +
test al al +
mov eax dword_105DB1C +
jnz loc_101695A  +
mov eax dword_105DB48 +
push dword ptr [eax+8]  +
push 0  +
push 0Ch  +
push 7D0h  +
push dword ptr [ebp-20h]  +
call esi  +
push edi  +
push dword ptr [ebp-20h]  +
call sub_1016310  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
sub eax 110h +
push esi  +
mov esi [ebp+14h] +
push edi  +
mov edi [ebp+8] +
mov [ebp-20h] edi +
jz loc_10169D6  +
dec eax  +
jnz loc_10169CF  +
movzx eax word ptr [ebp+10h] +
dec eax  +
cmp eax 1 +
ja loc_10169CF  +
push 1  +
push edi  +
call ds:EndDialog  +
jmp loc_1016A95  +
xor eax eax +
jmp loc_1016A98  +
test esi esi +
jnz loc_10169DD  +
push esi  +
jmp loc_10169C3  +
***
push ebx  +
push dword ptr [esi+10h]  +
mov ebx offset asc_1005670 +
push ebx  +
lea eax [ebp-1Ch] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-1Ch] +
push eax  +
push 0  +
push 0Ch  +
push 76Eh  +
push edi  +
mov edi ds:SendDlgItemMessageW +
call edi  +
push dword ptr [esi+14h]  +
lea eax [ebp-1Ch] +
push ebx  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp-1Ch] +
push eax  +
push 0  +
push 0Ch  +
push 76Fh  +
push dword ptr [ebp-20h]  +
call edi  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
pop ebx  +
test al al +
jz loc_1016A42  +
mov eax dword_105DB24 +
jmp loc_1016A7B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+30h]  +
test al al +
jz loc_1016A54  +
mov eax dword_105DB3C +
jmp loc_1016A7B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
test al al +
jz loc_1016A66  +
mov eax dword_105DB70 +
jmp loc_1016A7B  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+38h]  +
test al al +
mov eax dword_105DB1C +
jnz loc_1016A7B  +
mov eax dword_105DB48 +
push dword ptr [eax+8]  +
push 0  +
push 0Ch  +
push 7D0h  +
push dword ptr [ebp-20h]  +
call edi  +
push esi  +
push dword ptr [ebp-20h]  +
call sub_1016310  +
xor eax eax +
inc eax  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hDlg] eax +
xor eax eax +
mov [ebp+var_A8] edi +
cmp edi eax +
jz loc_101701C  +
cmp [ebp+arg_8] eax +
jz loc_101701C  +
mov ecx [ebp+arg_8] +
push ebx  +
shr ecx 4 +
push esi  +
xor esi esi +
mov [ebp+var_AC] eax +
mov [ebp+var_F0] ecx +
cmp ecx eax +
jbe loc_1016EAA  +
movzx ax byte ptr [edi+esi+0Fh] +
mov ebx ds:iswprint +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016B2A  +
movzx eax byte ptr [edi+esi+0Fh] +
mov [ebp+var_CC] eax +
jmp loc_1016B34  +
mov [ebp+var_CC] 2Eh +
movzx ax byte ptr [edi+esi+0Eh] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016B52  +
movzx eax byte ptr [edi+esi+0Eh] +
mov [ebp+var_D8] eax +
jmp loc_1016B5C  +
mov [ebp+var_D8] 2Eh +
movzx ax byte ptr [edi+esi+0Dh] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016B7A  +
movzx eax byte ptr [edi+esi+0Dh] +
mov [ebp+var_E8] eax +
jmp loc_1016B84  +
mov [ebp+var_E8] 2Eh +
movzx ax byte ptr [edi+esi+0Ch] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016BA2  +
movzx eax byte ptr [edi+esi+0Ch] +
mov [ebp+var_BC] eax +
jmp loc_1016BAC  +
mov [ebp+var_BC] 2Eh +
movzx ax byte ptr [edi+esi+0Bh] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016BCA  +
movzx eax byte ptr [edi+esi+0Bh] +
mov [ebp+var_E4] eax +
jmp loc_1016BD4  +
mov [ebp+var_E4] 2Eh +
movzx ax byte ptr [edi+esi+0Ah] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016BF2  +
movzx eax byte ptr [edi+esi+0Ah] +
mov [ebp+var_C4] eax +
jmp loc_1016BFC  +
mov [ebp+var_C4] 2Eh +
movzx ax byte ptr [edi+esi+9] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016C1A  +
movzx eax byte ptr [edi+esi+9] +
mov [ebp+var_DC] eax +
jmp loc_1016C24  +
mov [ebp+var_DC] 2Eh +
movzx ax byte ptr [edi+esi+8] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016C42  +
movzx eax byte ptr [edi+esi+8] +
mov [ebp+var_B4] eax +
jmp loc_1016C4C  +
mov [ebp+var_B4] 2Eh +
movzx ax byte ptr [edi+esi+7] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016C6A  +
movzx eax byte ptr [edi+esi+7] +
mov [ebp+var_EC] eax +
jmp loc_1016C74  +
mov [ebp+var_EC] 2Eh +
movzx ax byte ptr [edi+esi+6] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016C92  +
movzx eax byte ptr [edi+esi+6] +
mov [ebp+var_D4] eax +
jmp loc_1016C9C  +
mov [ebp+var_D4] 2Eh +
movzx ax byte ptr [edi+esi+5] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016CBA  +
movzx eax byte ptr [edi+esi+5] +
mov [ebp+var_B8] eax +
jmp loc_1016CC4  +
mov [ebp+var_B8] 2Eh +
movzx ax byte ptr [edi+esi+4] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016CE2  +
movzx eax byte ptr [edi+esi+4] +
mov [ebp+var_C0] eax +
jmp loc_1016CEC  +
mov [ebp+var_C0] 2Eh +
movzx ax byte ptr [edi+esi+3] +
movzx eax ax +
push eax  +
call ebx  +
pop ecx  +
test eax eax +
jz loc_1016D0A  +
movzx eax byte ptr [edi+esi+3] +
mov [ebp+var_C8] eax +
jmp loc_1016D14  +
mov [ebp+var_C8] 2Eh +
lea ebx [edi+esi+2] +
movzx ax byte ptr [ebx] +
movzx eax ax +
push eax  +
call ds:iswprint  +
pop ecx  +
test eax eax +
jz loc_1016D36  +
movzx eax byte ptr [ebx] +
mov [ebp+var_D0] eax +
jmp loc_1016D40  +
mov [ebp+var_D0] 2Eh +
lea edi [edi+esi+1] +
movzx ax byte ptr [edi] +
movzx eax ax +
push eax  +
call ds:iswprint  +
pop ecx  +
test eax eax +
jz loc_1016D62  +
movzx eax byte ptr [edi] +
mov [ebp+var_B0] eax +
jmp loc_1016D6C  +
mov [ebp+var_B0] 2Eh +
mov eax [ebp+var_A8] +
movzx ax byte ptr [eax+esi] +
movzx eax ax +
push eax  +
call ds:iswprint  +
test eax eax +
mov eax [ebp+var_A8] +
pop ecx  +
jz loc_1016D92  +
movzx ecx byte ptr [eax+esi] +
jmp loc_1016D95  +
push 2Eh  +
pop ecx  +
push [ebp+var_CC]  +
push [ebp+var_D8]  +
push [ebp+var_E8]  +
push [ebp+var_BC]  +
push [ebp+var_E4]  +
push [ebp+var_C4]  +
push [ebp+var_DC]  +
push [ebp+var_B4]  +
push [ebp+var_EC]  +
push [ebp+var_D4]  +
push [ebp+var_B8]  +
push [ebp+var_C0]  +
push [ebp+var_C8]  +
push [ebp+var_D0]  +
push [ebp+var_B0]  +
push ecx  +
movzx ecx byte ptr [eax+esi+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+esi+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+esi+9] +
push ecx  +
movzx ecx byte ptr [eax+esi+8] +
push ecx  +
movzx ecx byte ptr [eax+esi+7] +
push ecx  +
movzx ecx byte ptr [eax+esi+6] +
push ecx  +
movzx ecx byte ptr [eax+esi+5] +
push ecx  +
movzx ecx byte ptr [eax+esi+4] +
push ecx  +
movzx ecx byte ptr [eax+esi+3] +
movzx eax byte ptr [eax+esi] +
push ecx  +
movzx ecx byte ptr [ebx] +
push ecx  +
movzx ecx byte ptr [edi] +
push ecx  +
push eax  +
push esi  +
push offset a08x02x02x02x02  +
lea eax [ebp+lParam] +
push 50h  +
push eax  +
call sub_10062BE  +
add esp 90h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
mov eax [ebp+var_AC] +
mov edi [ebp+var_A8] +
inc eax  +
mov ecx eax +
shl ecx 4 +
mov [ebp+var_AC] eax +
mov esi ecx +
cmp eax [ebp+var_F0] +
jb loc_1016B06  +
test byte ptr [ebp+arg_8] 0Fh +
jz loc_101701A  +
and [ebp+var_B0] 0 +
push 50h  +
lea ecx [ebp+lParam] +
shl eax 4 +
mov [ebp+var_A8] ecx +
pop ecx  +
push eax  +
push offset a08x  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push ecx  +
lea eax [ebp+lParam] +
push eax  +
mov [ebp+var_AC] ecx +
call sub_1016367  +
add esp 1Ch +
mov ebx esi +
cmp esi [ebp+arg_8] +
jnb loc_1016F6D  +
movzx eax byte ptr [edi+ebx] +
push eax  +
push offset a02x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
mov eax ebx +
and eax 7 +
add esp 1Ch +
cmp al 7 +
jnz loc_1016F67  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push offset asc_1005554  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_101264C  +
mov [ebp+var_B0] 2 +
inc ebx  +
cmp ebx [ebp+arg_8] +
jb loc_1016F00  +
movzx ecx word ptr [ebp+var_B0] +
push 20h  +
push 11h  +
pop eax  +
and ebx 0Fh +
sub eax ebx +
imul eax eax +
sub eax ecx +
push eax  +
push offset aC  +
xor ebx ebx +
push ebx  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 20h +
jmp loc_1016FF7  +
movzx ax byte ptr [edi+esi] +
movzx eax ax +
push eax  +
call ds:iswprint  +
pop ecx  +
test eax eax +
jz loc_1016FCA  +
movzx eax byte ptr [edi+esi] +
jmp loc_1016FCD  +
push 2Eh  +
pop eax  +
push eax  +
push offset aC_0  +
push ebx  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
inc esi  +
cmp esi [ebp+arg_8] +
jb loc_1016FB0  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hDlg] eax +
test edi edi +
jz loc_10171B5  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_10171B5  +
push ebx  +
push esi  +
shr eax 4 +
xor esi esi +
test eax eax +
jbe loc_10170DD  +
mov ebx eax +
movzx eax word ptr [edi+esi+0Eh] +
push eax  +
movzx eax word ptr [edi+esi+0Ch] +
push eax  +
movzx eax word ptr [edi+esi+0Ah] +
push eax  +
movzx eax word ptr [edi+esi+8] +
push eax  +
movzx eax word ptr [edi+esi+6] +
push eax  +
movzx eax word ptr [edi+esi+4] +
push eax  +
movzx eax word ptr [edi+esi+2] +
push eax  +
movzx eax word ptr [edi+esi] +
push eax  +
push esi  +
push offset a08x04x04x04x04  +
lea eax [ebp+lParam] +
push 50h  +
push eax  +
call sub_10062BE  +
add esp 30h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
add esi 10h +
dec ebx  +
jnz loc_1017072  +
mov ebx [ebp+arg_8] +
test bl 0Fh +
jz loc_10171B3  +
push 50h  +
lea eax [ebp+lParam] +
mov [ebp+var_A8] eax +
pop eax  +
push esi  +
push offset a08x  +
push 0  +
lea ecx [ebp+var_AC] +
push ecx  +
lea ecx [ebp+var_A8] +
push ecx  +
push eax  +
mov [ebp+var_AC] eax +
lea eax [ebp+lParam] +
shr ebx 1 +
push eax  +
and ebx 7 +
call sub_1016367  +
add esp 1Ch +
test ebx ebx +
jbe loc_1017160  +
movzx eax word ptr [edi+esi] +
push eax  +
push offset a04x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
inc esi  +
inc esi  +
dec ebx  +
jnz loc_101712D  +
test byte ptr [ebp+arg_8] 1 +
jz loc_1017194  +
movzx eax byte ptr [edi+esi] +
push eax  +
push offset a02x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hDlg] eax +
test edi edi +
jz loc_10173DA  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_10173DA  +
push ebx  +
mov ebx ds:SendDlgItemMessageW +
push esi  +
shr eax 4 +
xor esi esi +
test eax eax +
jbe loc_10172C3  +
mov [ebp+var_A8] eax +
push dword ptr [edi+esi+0Ch]  +
lea eax [ebp+lParam] +
push dword ptr [edi+esi+8]  +
push dword ptr [edi+esi+4]  +
push dword ptr [edi+esi]  +
push esi  +
push offset a08x08x08x08x08  +
push 50h  +
push eax  +
call sub_10062BE  +
add esp 20h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ebx  +
add esi 10h +
dec [ebp+var_A8]  +
jnz loc_1017277  +
test byte ptr [ebp+arg_8] 0Fh +
jz loc_10173D8  +
push 50h  +
lea eax [ebp+lParam] +
mov [ebp+var_A8] eax +
pop eax  +
push esi  +
push offset a08x  +
push 0  +
lea ecx [ebp+var_AC] +
push ecx  +
lea ecx [ebp+var_A8] +
push ecx  +
push eax  +
mov [ebp+var_AC] eax +
lea eax [ebp+lParam] +
push eax  +
call sub_1016367  +
mov eax [ebp+arg_8] +
shr eax 2 +
add esp 1Ch +
and eax 3 +
jbe loc_1017350  +
mov [ebp+var_B0] eax +
push dword ptr [edi+esi]  +
lea eax [ebp+var_AC] +
push offset a08x_0  +
push 0  +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
add esi 4 +
dec [ebp+var_B0]  +
jnz loc_1017319  +
mov eax [ebp+arg_8] +
and al 3 +
cmp al 2 +
jb loc_1017389  +
movzx eax word ptr [edi+esi] +
push eax  +
push offset a04x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
inc esi  +
inc esi  +
test byte ptr [ebp+arg_8] 1 +
jz loc_10173BD  +
movzx eax byte ptr [edi+esi] +
push eax  +
push offset a02x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ebx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hDlg] eax +
test edi edi +
jz loc_1017607  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1017607  +
push ebx  +
push esi  +
shr eax 4 +
xor esi esi +
push 50h  +
pop ebx  +
test eax eax +
jbe loc_10174BF  +
mov [ebp+var_A8] eax +
push dword ptr [edi+esi+0Ch]  +
lea eax [ebp+lParam] +
push dword ptr [edi+esi+8]  +
push dword ptr [edi+esi+4]  +
push dword ptr [edi+esi]  +
push esi  +
push offset a08x16i64x16i64  +
push ebx  +
push eax  +
call sub_10062BE  +
add esp 20h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
add esi 10h +
dec [ebp+var_A8]  +
jnz loc_1017470  +
test byte ptr [ebp+arg_8] 0Fh +
jz loc_1017605  +
push esi  +
push offset a08x  +
lea eax [ebp+lParam] +
mov [ebp+var_A8] eax +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
lea eax [ebp+lParam] +
push ebx  +
push eax  +
mov [ebp+var_AC] ebx +
call sub_1016367  +
mov eax [ebp+arg_8] +
shr eax 3 +
add esp 1Ch +
and eax 1 +
jbe loc_1017544  +
mov ebx eax +
push dword ptr [edi+esi+4]  +
lea eax [ebp+var_AC] +
push dword ptr [edi+esi]  +
push offset a16i64x_0  +
push 0  +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 20h +
add esi 8 +
dec ebx  +
jnz loc_101750E  +
test byte ptr [ebp+arg_8] 4 +
jbe loc_1017579  +
push dword ptr [edi+esi]  +
lea eax [ebp+var_AC] +
push offset a08x_0  +
push 0  +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
add esi 4 +
mov eax [ebp+arg_8] +
and al 3 +
cmp al 2 +
jb loc_10175B2  +
movzx eax word ptr [edi+esi] +
push eax  +
push offset a04x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
inc esi  +
inc esi  +
test byte ptr [ebp+arg_8] 1 +
jz loc_10175E6  +
movzx eax byte ptr [edi+esi] +
push eax  +
push offset a02x_0  +
push 0  +
lea eax [ebp+var_AC] +
push eax  +
lea eax [ebp+var_A8] +
push eax  +
push [ebp+var_AC]  +
push [ebp+var_A8]  +
call sub_1016367  +
add esp 1Ch +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 180h  +
push 7E6h  +
push [ebp+hDlg]  +
call ds:SendDlgItemMessageW  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100160D  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpTemplateName] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
test al al +
jz loc_101767F  +
mov eax offset loc_1016482 +
mov ecx 6A4h +
jmp loc_10176C9  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_1017696  +
mov eax offset loc_1016658 +
mov ecx 641h +
jmp loc_10176C9  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
test al al +
jz loc_10176AD  +
mov eax offset loc_101683E +
mov ecx 708h +
jmp loc_10176C9  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test al al +
jz loc_10176C4  +
mov eax offset loc_101698D +
mov ecx 76Ch +
jmp loc_10176C9  +
mov ecx [ebp+lpTemplateName] +
xor eax eax +
test eax eax +
jz loc_10176DF  +
push esi  +
push eax  +
push [ebp+hWndParent]  +
push ecx  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
sub eax 110h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_C] +
mov [ebp+hDlg] ebx +
jz loc_10177A0  +
dec eax  +
jnz loc_1017791  +
mov edx [ebp+arg_8] +
movzx ecx dx +
test ecx ecx +
jle loc_1017791  +
cmp ecx 2 +
jle loc_1017798  +
mov eax 5DEh +
cmp ecx eax +
jz loc_1017756  +
cmp ecx 5E2h +
jnz loc_1017791  +
push eax  +
push ebx  +
call sub_101623D  +
test eax eax +
jz loc_1017B32  +
push eax  +
push ebx  +
call sub_101765F  +
jmp loc_1017B32  +
shr edx 10h +
dec edx  +
jz loc_101777C  +
dec edx  +
jnz loc_1017791  +
mov esi 5E2h +
push esi  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
push esi  +
push 111h  +
push ebx  +
call ds:SendMessageW  +
jmp loc_1017791  +
push 1  +
push 5E2h  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
xor eax eax +
jmp loc_1017B35  +
push 1  +
push ebx  +
jmp loc_1017B2C  +
xor ecx ecx +
mov [ebp+var_D8] ecx +
mov [ebp+var_D4] ecx +
mov [ebp+var_D0] ecx +
mov [ebp+var_CC] ecx +
mov [ebp+var_C8] ecx +
mov [ebp+var_C4] ecx +
mov [ebp+var_C0] ecx +
mov [ebp+var_BC] ecx +
mov [ebp+var_B8] ecx +
mov [ebp+var_B4] ecx +
mov [ebp+var_B0] ecx +
mov [ebp+var_AC] ecx +
mov [ebp+var_A8] ecx +
mov [ebp+var_A4] ecx +
mov [ebp+var_A0] ecx +
mov [ebp+var_9C] ecx +
cmp edi ecx +
jnz loc_1017809  +
push ecx  +
jmp loc_101779A  +
mov eax [edi+8] +
cmp eax 0Bh +
ja loc_101786C  +
jmp ds:off_1017B46[eax*4]  +
mov eax dword_105DB08 +
jmp loc_1017871  +
mov eax dword_105DB68 +
jmp loc_1017871  +
mov eax dword_105DB18 +
jmp loc_1017871  +
mov eax dword_105DB4C +
jmp loc_1017871  +
mov eax dword_105DB2C +
jmp loc_1017871  +
mov eax dword_105DB28 +
jmp loc_1017871  +
mov eax dword_105DB38 +
jmp loc_1017871  +
mov eax dword_105DB60 +
jmp loc_1017871  +
mov eax dword_105DB30 +
jmp loc_1017871  +
mov eax dword_105DB5C +
jmp loc_1017871  +
mov eax dword_105DB04 +
jmp loc_1017871  +
mov eax dword_105DB44 +
jmp loc_1017871  +
mov eax dword_105DB48 +
mov eax [eax+8] +
mov esi ds:SendDlgItemMessageW +
push eax  +
push ecx  +
push 0Ch  +
push 5DFh  +
push ebx  +
call esi  +
push dword ptr [edi+0Ch]  +
mov ebx offset aD +
push ebx  +
lea eax [ebp+lParam] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+lParam] +
push eax  +
push 0  +
push 0Ch  +
push 5E0h  +
push [ebp+hDlg]  +
call esi  +
push dword ptr [edi+10h]  +
lea eax [ebp+var_7C] +
push ebx  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+var_7C] +
push eax  +
push 0  +
push 0Ch  +
push 5E1h  +
push [ebp+hDlg]  +
call esi  +
mov edi [edi+20h] +
test edi edi +
jz loc_1017B27  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov esi eax +
mov [ebp+var_8C] esi +
test esi esi +
jz loc_1017B27  +
mov eax [esi] +
and dword ptr [ebp+var_94] 0 +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_1017AF6  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_1017B1F  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+14h]  +
mov edi eax +
mov [ebp+var_98] edi +
test edi edi +
jz loc_1017B1F  +
inc dword ptr [ebp+var_94]  +
push dword ptr [ebp+var_94]  +
lea eax [ebp+var_4C] +
push ebx  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
and dword ptr [ebp+var_88] 0 +
jmp loc_1017ACC  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
test al al +
jz loc_1017965  +
cmp dword ptr [ebp+var_88] 0 +
jnz loc_1017972  +
inc dword ptr [ebp+var_88]  +
and dword ptr [ebp+var_90] 0 +
push dword ptr [ebp+var_88]  +
inc dword ptr [ebp+var_90]  +
push ebx  +
lea eax [ebp+var_34] +
push 0Bh  +
push eax  +
call sub_10062BE  +
push dword ptr [ebp+var_90]  +
lea eax [ebp+var_1C] +
push ebx  +
push 0Bh  +
push eax  +
call sub_10062BE  +
mov eax [esi] +
add esp 20h +
mov ecx esi +
call dword ptr [eax+14h]  +
test al al +
jz loc_10179B1  +
mov eax dword_105DB50 +
jmp loc_10179EA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
test al al +
jz loc_10179C3  +
mov eax dword_105DB0C +
jmp loc_10179EA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_10179D5  +
mov eax dword_105DB20 +
jmp loc_10179EA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test al al +
mov eax dword_105DB40 +
jnz loc_10179EA  +
mov eax dword_105DB48 +
mov ecx [eax+8] +
mov edx [eax+0Ch] +
lea eax [ebp+var_4C] +
lea edi [eax+2] +
mov [ebp+var_D8] eax +
mov [ebp+var_84] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1017A02  +
sub eax [ebp+var_84] +
and [ebp+var_D0] 0 +
sar eax 1 +
and [ebp+var_C0] 0 +
mov [ebp+var_D4] eax +
lea eax [ebp+var_34] +
lea edi [eax+2] +
mov [ebp+var_C8] eax +
mov [ebp+var_84] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1017A3A  +
sub eax [ebp+var_84] +
sar eax 1 +
and [ebp+var_B0] 0 +
mov [ebp+var_C4] eax +
lea eax [ebp+var_1C] +
lea edi [eax+2] +
mov [ebp+var_B8] eax +
mov [ebp+var_84] edi +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_1017A6B  +
sub eax [ebp+var_84] +
and [ebp+var_A0] 0 +
sar eax 1 +
mov [ebp+var_B4] eax +
lea eax [ebp+var_D8] +
mov [ebp+var_E0] eax +
lea eax [ebp+var_E4] +
push eax  +
push 5DEh  +
push [ebp+hDlg]  +
mov [ebp+var_A8] ecx +
mov [ebp+var_A4] edx +
mov [ebp+var_E4] 4 +
mov [ebp+var_DC] esi +
call ClbAddData  +
mov edi [ebp+var_98] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov esi eax +
test esi esi +
jnz loc_1017951  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
mov ecx [ebp+var_8C] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov esi [ebp+var_8C] +
test eax eax +
jnz loc_1017908  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
push 0  +
push 5E2h  +
push [ebp+hDlg]  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_1017B32  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
push 0  +
push [ebp+hDlg]  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 60h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
sub ecx 110h +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+hDlg] +
mov [ebp+var_58] edi +
jz loc_1017CBD  +
dec ecx  +
jnz loc_1017BE8  +
movzx eax word ptr [ebp+arg_8] +
xor ebx ebx +
cmp eax ebx +
jle loc_1017BE8  +
cmp eax 2 +
jle loc_1017CAF  +
mov esi 7E6h +
cmp eax esi +
jle loc_1017BE8  +
cmp eax 7E9h +
jle loc_1017BD5  +
cmp eax 7EBh +
jnz loc_1017BE8  +
mov ecx [ebp+arg_8] +
shr ecx 10h +
test cx cx +
jnz loc_1017BE8  +
cmp dword_105DB88 eax +
jnz loc_1017BEF  +
xor eax eax +
jmp loc_1017D5A  +
push ebx  +
push ebx  +
push 18Eh  +
push esi  +
push edi  +
mov edi ds:SendDlgItemMessageW +
call edi  +
push ebx  +
push ebx  +
push 188h  +
push esi  +
push [ebp+var_58]  +
mov [ebp+wParam] eax +
call edi  +
push ebx  +
push ebx  +
push 184h  +
push esi  +
push [ebp+var_58]  +
mov [ebp+var_5C] eax +
call edi  +
push dword_105DB84  +
mov ebx 7E7h +
push dword_105DB80  +
mov eax ebx +
push [ebp+var_58]  +
cmp word ptr [ebp+arg_8] ax +
jnz loc_1017C43  +
call sub_1016AAD  +
jmp loc_1017C69  +
mov ebx 7E8h +
mov eax ebx +
cmp word ptr [ebp+arg_8] ax +
jnz loc_1017C57  +
call sub_1017030  +
jmp loc_1017C69  +
mov ebx 7E9h +
mov eax ebx +
cmp word ptr [ebp+arg_8] ax +
jnz loc_1017C71  +
call sub_101722B  +
mov dword_105DB88 ebx +
jmp loc_1017C80  +
call sub_1017427  +
mov dword_105DB88 7EBh +
push 0  +
push [ebp+wParam]  +
push 197h  +
push esi  +
push [ebp+var_58]  +
call edi  +
cmp [ebp+var_5C] 0FFFFFFFFh +
jz loc_1017D57  +
push 0  +
push [ebp+var_5C]  +
push 186h  +
push esi  +
push [ebp+var_58]  +
call edi  +
jmp loc_1017D57  +
push 1  +
push edi  +
call ds:EndDialog  +
jmp loc_1017D57  +
xor ebx ebx +
cmp eax ebx +
jnz loc_1017CC6  +
push ebx  +
jmp loc_1017CB1  +
mov ecx [eax] +
mov esi ds:SendDlgItemMessageW +
mov dword_105DB80 ecx +
mov ecx [eax+4] +
mov dword_105DB84 ecx +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov dword_105DB7C ecx +
mov dword_105DB78 eax +
cmp ecx ebx +
jz loc_1017D1A  +
push 28h  +
lea ecx [ebp+lParam] +
push ecx  +
push eax  +
call sub_100E4F5  +
push eax  +
push dword_101D054  +
call ds:LoadStringW  +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 0Ch  +
push 7EAh  +
push edi  +
call esi  +
push ebx  +
push 0Bh  +
call ds:GetStockObject  +
push eax  +
push 30h  +
push 7E6h  +
push edi  +
call esi  +
push ebx  +
push 1  +
push 0F1h  +
mov ebx 7E7h +
push ebx  +
push edi  +
call esi  +
push dword_105DB84  +
push dword_105DB80  +
push edi  +
call sub_1016AAD  +
mov dword_105DB88 ebx +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwInitParam]  +
push offset sub_10176E9  +
push [ebp+hWndParent]  +
push 5DDh  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_10] +
mov [ebp+var_4] ecx +
mov [ebp+dwInitParam] eax +
mov eax [ebp+arg_8] +
lea ecx [ebp+dwInitParam] +
push ecx  +
mov [ebp+var_C] eax +
mov eax [ebp+arg_C] +
xor ecx ecx +
test eax eax +
setnz cl  +
push offset sub_1017B7B  +
push [ebp+hWndParent]  +
mov [ebp+var_8] eax +
add ecx 7E4h +
push ecx  +
push dword_101D054  +
call ds:DialogBoxParamW  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1B4h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
sub eax 39h +
push ebx  +
mov ebx [ebp+hDlg] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [ebp+var_160] ebx +
jz loc_101876F  +
sub eax 0D7h +
jz loc_10180F4  +
dec eax  +
jnz loc_10180D6  +
mov eax [ebp+arg_8] +
movzx ecx ax +
mov edx 51Ah +
cmp ecx edx +
mov [ebp+nIDDlgItem] ecx +
jg loc_1018034  +
jz loc_1017F8B  +
xor edi edi +
cmp ecx edi +
jle loc_10180D6  +
cmp ecx 2 +
jle loc_1017F84  +
lea esi [edx-66h] +
cmp ecx esi +
jz loc_1017F4E  +
cmp ecx 518h +
jnz loc_10180D6  +
shr eax 10h +
dec eax  +
jz loc_1017E9C  +
dec eax  +
jnz loc_10180D6  +
push esi  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
push esi  +
push 111h  +
push ebx  +
call ds:SendMessageW  +
jmp loc_1018168  +
push edi  +
or ebx 0FFFFFFFFh +
push ebx  +
mov esi 186h +
push esi  +
push 51Ah  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Bh  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Ch  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Dh  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push [ebp+nIDDlgItem]  +
push [ebp+var_160]  +
call sub_101623D  +
mov esi eax +
mov dword_105DB8C esi +
cmp esi edi +
jz loc_1018016  +
push esi  +
push [ebp+var_160]  +
call sub_1016289  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test al al +
jz loc_1018016  +
lea eax [ebp+nIDDlgItem] +
push eax  +
mov ecx esi +
call sub_101323F  +
test eax eax +
jz loc_1018016  +
xor edi edi +
inc edi  +
jmp loc_1018016  +
mov ecx dword_105DB8C +
cmp ecx edi +
jz loc_1018168  +
lea eax [ebp+nIDDlgItem] +
push eax  +
call sub_101323F  +
cmp eax edi +
jz loc_1018168  +
push edi  +
push edi  +
push eax  +
push [ebp+nIDDlgItem]  +
push ebx  +
call sub_1017D9A  +
jmp loc_1018168  +
push 1  +
jmp loc_1018161  +
shr eax 10h +
dec eax  +
jnz loc_10180D6  +
xor edi edi +
push edi  +
or ebx 0FFFFFFFFh +
push ebx  +
mov esi 186h +
push esi  +
push 51Bh  +
push [ebp+var_160]  +
mov dword_105DB8C edi +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Ch  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Dh  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 518h  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push [ebp+nIDDlgItem]  +
push [ebp+var_160]  +
call sub_101623D  +
cmp eax edi +
jz loc_1018016  +
push eax  +
push [ebp+var_160]  +
call sub_1016289  +
push edi  +
push 4B4h  +
push [ebp+var_160]  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_1018168  +
sub ecx 51Bh +
jz loc_10180D0  +
dec ecx  +
jz loc_1018099  +
dec ecx  +
jnz loc_10180D6  +
shr eax 10h +
dec eax  +
jnz loc_10180D6  +
xor edi edi +
push edi  +
or ebx 0FFFFFFFFh +
push ebx  +
mov esi 186h +
push esi  +
push 51Ah  +
push [ebp+var_160]  +
mov dword_105DB8C edi +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Bh  +
push [ebp+var_160]  +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Ch  +
jmp loc_1017FD5  +
shr eax 10h +
dec eax  +
jnz loc_10180D6  +
xor edi edi +
push edi  +
or ebx 0FFFFFFFFh +
push ebx  +
mov esi 186h +
push esi  +
push 51Ah  +
push [ebp+var_160]  +
mov dword_105DB8C edi +
call ds:SendDlgItemMessageW  +
push edi  +
push ebx  +
push esi  +
push 51Bh  +
jmp loc_1017FC1  +
shr eax 10h +
dec eax  +
jz loc_10180DD  +
xor eax eax +
jmp loc_10187AD  +
xor edi edi +
push edi  +
or ebx 0FFFFFFFFh +
push ebx  +
mov esi 186h +
push esi  +
push 51Ah  +
jmp loc_1017FA7  +
xor edi edi +
mov [ebp+var_1B0] edi +
mov [ebp+var_1AC] edi +
mov [ebp+var_1A8] edi +
mov [ebp+var_1A4] edi +
mov [ebp+var_1A0] edi +
mov [ebp+var_19C] edi +
mov [ebp+var_198] edi +
mov [ebp+var_194] edi +
mov [ebp+var_190] edi +
mov [ebp+var_18C] edi +
mov [ebp+var_188] edi +
mov [ebp+var_184] edi +
mov [ebp+var_180] edi +
mov [ebp+var_17C] edi +
mov [ebp+var_178] edi +
mov [ebp+var_174] edi +
mov dword_105DB8C edi +
cmp esi edi +
jnz loc_1018170  +
push edi  +
push ebx  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_10187AD  +
mov eax [esi+8] +
cmp eax 0Bh +
ja loc_10181D3  +
jmp ds:off_10187BE[eax*4]  +
mov eax dword_105DB08 +
jmp loc_10181D8  +
mov eax dword_105DB68 +
jmp loc_10181D8  +
mov eax dword_105DB18 +
jmp loc_10181D8  +
mov eax dword_105DB4C +
jmp loc_10181D8  +
mov eax dword_105DB2C +
jmp loc_10181D8  +
mov eax dword_105DB28 +
jmp loc_10181D8  +
mov eax dword_105DB38 +
jmp loc_10181D8  +
mov eax dword_105DB60 +
jmp loc_10181D8  +
mov eax dword_105DB30 +
jmp loc_10181D8  +
mov eax dword_105DB5C +
jmp loc_10181D8  +
mov eax dword_105DB04 +
jmp loc_10181D8  +
mov eax dword_105DB44 +
jmp loc_10181D8  +
mov eax dword_105DB48 +
mov eax [eax+8] +
push eax  +
push edi  +
push 0Ch  +
push 517h  +
push ebx  +
mov ebx ds:SendDlgItemMessageW +
call ebx  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+lParam] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 0Ch  +
push 514h  +
push [ebp+var_160]  +
call ebx  +
movzx eax word ptr [esi+10h] +
push eax  +
push offset aD  +
lea eax [ebp+lParam] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 0Ch  +
push 515h  +
push [ebp+var_160]  +
call ebx  +
movzx eax word ptr [esi+12h] +
push eax  +
push offset aD  +
lea eax [ebp+lParam] +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 10h +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 0Ch  +
push 516h  +
push [ebp+var_160]  +
call ebx  +
mov esi [esi+14h] +
cmp esi edi +
jz loc_1018763  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov [ebp+nIDDlgItem] eax +
cmp eax edi +
jz loc_1018763  +
lea ecx [ebp+var_1B0] +
mov [ebp+var_16C] ecx +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov esi eax +
cmp esi edi +
jz loc_1018752  +
push 2  +
pop ebx  +
mov [ebp+var_168] esi +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
test al al +
jz loc_10183A1  +
mov eax [esi+14h] +
push dword ptr [esi+10h]  +
cmp eax edi +
jz loc_10182E7  +
push eax  +
push offset a0x08x08x  +
lea eax [ebp+var_134] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_10182FD  +
push offset a0x08x  +
lea eax [ebp+var_134] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push dword ptr [esi+18h]  +
lea eax [ebp+var_F4] +
push offset asc_1005670  +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_134] +
add esp 10h +
mov [ebp+var_1B0] eax +
mov [ebp+var_1A8] edi +
lea ecx [eax+2] +
mov dx [eax] +
add eax ebx +
cmp dx di +
jnz loc_101832B  +
sub eax ecx +
sar eax 1 +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_F4] +
mov [ebp+var_1A0] eax +
mov [ebp+var_198] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018354  +
sub eax edx +
sar eax 1 +
mov [ebp+var_19C] eax +
mov eax dword_105DB10 +
cmp [esi+0Ah] di +
jz loc_1018378  +
mov eax dword_105DB54 +
mov ecx [eax+8] +
mov [ebp+var_190] ecx +
mov [ebp+var_188] edi +
mov eax [eax+0Ch] +
mov [ebp+var_18C] eax +
lea eax [ebp+var_170] +
push eax  +
push 51Dh  +
jmp loc_1018728  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
test al al +
jz loc_10184A7  +
push dword ptr [esi+14h]  +
lea eax [ebp+var_C4] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
push dword ptr [esi+10h]  +
lea eax [ebp+var_7C] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+var_34] +
push offset a0x08x  +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_C4] +
add esp 30h +
mov [ebp+var_1B0] eax +
lea ecx [eax+2] +
mov dx [eax] +
add eax ebx +
cmp dx di +
jnz loc_10183FE  +
sub eax ecx +
sar eax 1 +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_7C] +
mov [ebp+var_1A8] edi +
mov [ebp+var_1A0] eax +
mov [ebp+var_198] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_101842A  +
sub eax edx +
sar eax 1 +
mov [ebp+var_19C] eax +
lea eax [ebp+var_34] +
mov [ebp+var_190] eax +
mov [ebp+var_188] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018450  +
sub eax edx +
sar eax 1 +
mov [ebp+var_18C] eax +
test byte ptr [esi+0Ah] 1 +
mov eax dword_105DB34 +
jnz loc_1018474  +
mov eax dword_105DB6C +
mov ecx [eax+8] +
mov [ebp+var_180] ecx +
mov [ebp+var_178] edi +
mov eax [eax+0Ch] +
mov [ebp+var_17C] eax +
lea eax [ebp+var_170] +
push eax  +
mov [ebp+var_170] 4 +
push 51Bh  +
jmp loc_1018732  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
test al al +
jz loc_101859D  +
mov eax [esi+14h] +
push dword ptr [esi+10h]  +
cmp eax edi +
jz loc_10184D9  +
push eax  +
push offset a08x08x  +
lea eax [ebp+var_15C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 14h +
jmp loc_10184EF  +
push offset a08x_1  +
lea eax [ebp+var_15C] +
push 13h  +
push eax  +
call sub_10062BE  +
add esp 10h +
push dword ptr [esi+1Ch]  +
lea eax [ebp+var_4C] +
push dword ptr [esi+18h]  +
push offset aI64x  +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_15C] +
add esp 14h +
mov [ebp+var_1B0] eax +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018517  +
sub eax edx +
sar eax 1 +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_4C] +
mov [ebp+var_1A8] edi +
mov [ebp+var_1A0] eax +
mov [ebp+var_198] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018543  +
sub eax edx +
sar eax 1 +
mov [ebp+var_19C] eax +
movzx eax word ptr [esi+0Ah] +
test al 3 +
jnz loc_1018566  +
mov eax dword_105DB58 +
jmp loc_1018574  +
test al 1 +
mov eax dword_105DB14 +
jnz loc_1018574  +
mov eax dword_105DB64 +
mov ecx [eax+8] +
mov [ebp+var_190] ecx +
mov [ebp+var_188] edi +
mov eax [eax+0Ch] +
mov [ebp+var_18C] eax +
lea eax [ebp+var_170] +
push eax  +
push 51Ch  +
jmp loc_1018728  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
test al al +
jz loc_101863E  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+var_64] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
push dword ptr [esi+10h]  +
lea eax [ebp+var_DC] +
push offset aD  +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_64] +
add esp 20h +
mov [ebp+var_1B0] eax +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_10185E4  +
sub eax edx +
sar eax 1 +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_DC] +
mov [ebp+var_1A8] edi +
mov [ebp+var_1A0] eax +
mov [ebp+var_198] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018613  +
sub eax edx +
sar eax 1 +
mov [ebp+var_19C] eax +
lea eax [ebp+var_170] +
push eax  +
mov [ebp+var_170] ebx +
push 51Ah  +
jmp loc_1018732  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test al al +
jz loc_101873D  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+var_10C] +
push offset a0x08x  +
push 0Bh  +
push eax  +
call sub_10062BE  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+var_94] +
push offset a0x08x  +
push 0Bh  +
push eax  +
call sub_10062BE  +
add esp 20h +
lea eax [ebp+var_1B4] +
push eax  +
mov ecx esi +
call sub_101323F  +
push eax  +
push offset asc_1005670  +
lea eax [ebp+var_AC] +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_10C] +
add esp 10h +
mov [ebp+var_1B0] eax +
lea ecx [eax+2] +
mov dx [eax] +
add eax ebx +
cmp dx di +
jnz loc_10186B0  +
sub eax ecx +
sar eax 1 +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_94] +
mov [ebp+var_1A8] edi +
mov [ebp+var_1A0] eax +
mov [ebp+var_198] edi +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_10186DF  +
sub eax edx +
sar eax 1 +
mov [ebp+var_19C] eax +
lea eax [ebp+var_AC] +
mov [ebp+var_190] eax +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
cmp cx di +
jnz loc_1018702  +
sub eax edx +
sar eax 1 +
mov [ebp+var_18C] eax +
lea eax [ebp+var_170] +
push eax  +
mov [ebp+var_188] edi +
push 518h  +
mov [ebp+var_170] 3 +
push [ebp+var_160]  +
call ClbAddData  +
mov ecx [ebp+nIDDlgItem] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov esi eax +
cmp esi edi +
jnz loc_10182AF  +
mov ecx [ebp+nIDDlgItem] +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_1018168  +
push edi  +
push [ebp+var_160]  +
jmp loc_1018162  +
mov eax [esi+10h] +
mov ecx [eax+8] +
mov eax [esi+18h] +
mov esi [esi+4] +
sub esi 51Ah +
mov edx [eax+8] +
jz loc_101879F  +
dec esi  +
jz loc_101878F  +
dec esi  +
jz loc_101878F  +
dec esi  +
jnz loc_10187A7  +
mov eax [ecx+14h] +
sub eax [edx+14h] +
jnz loc_10187AD  +
mov eax [ecx+10h] +
sub eax [edx+10h] +
jmp loc_10187AD  +
mov eax [ecx+0Ch] +
sub eax [edx+0Ch] +
jmp loc_1018795  +
mov eax [ebp+var_1B4] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 1  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push [ebp+hWndParent]  +
call sub_1017D9A  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwInitParam]  +
push offset sub_1017DE9  +
push [ebp+hWndParent]  +
push 519h  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
sub ecx 39h +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+hDlg] +
push esi  +
push edi  +
mov [ebp+var_20] ebx +
jz loc_1018A97  +
sub ecx 0D7h +
jz loc_101891A  +
dec ecx  +
jnz loc_10188DA  +
mov ecx [ebp+arg_8] +
movzx eax cx +
test eax eax +
jle loc_10188DA  +
cmp eax 2 +
jle loc_1018913  +
mov esi 4B3h +
cmp eax esi +
jz loc_10188F4  +
cmp eax 4B5h +
jnz loc_10188DA  +
shr ecx 10h +
dec ecx  +
jz loc_10188E1  +
dec ecx  +
jnz loc_10188DA  +
push esi  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
push esi  +
push 111h  +
push ebx  +
call ds:SendMessageW  +
xor eax eax +
jmp loc_1018AE8  +
push 1  +
push esi  +
push ebx  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_10188DA  +
push 4B5h  +
push ebx  +
call sub_101623D  +
test eax eax +
jz loc_1018A92  +
push eax  +
push ebx  +
call sub_1018839  +
jmp loc_1018A92  +
push 1  +
jmp loc_1018A8B  +
or [ebp+var_48] 0FFFFFFFFh +
xor edi edi +
lea ecx [ebp+var_1C] +
mov [ebp+var_44] ecx +
mov [ebp+var_40] edi +
mov [ebp+var_3C] edi +
mov [ebp+var_38] edi +
mov [ebp+var_34] edi +
mov [ebp+var_30] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_28] edi +
mov [ebp+var_4C] 0Eh +
cmp eax edi +
jz loc_1018A8A  +
mov eax [eax+8] +
cmp eax edi +
jz loc_1018A8A  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+14h]  +
mov esi eax +
mov [ebp+var_24] esi +
cmp esi edi +
jz loc_1018A8A  +
lea eax [ebp+var_4C] +
push eax  +
push 4B5h  +
push ebx  +
call ClbSetColumnWidths  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov ebx eax +
cmp ebx edi +
jz loc_1018A6A  +
mov eax [ebx+8] +
cmp eax 0Bh +
ja loc_10189EC  +
jmp ds:off_1018AF9[eax*4]  +
mov eax dword_105DB08 +
jmp loc_10189F1  +
mov eax dword_105DB68 +
jmp loc_10189F1  +
mov eax dword_105DB18 +
jmp loc_10189F1  +
mov eax dword_105DB4C +
jmp loc_10189F1  +
mov eax dword_105DB2C +
jmp loc_10189F1  +
mov eax dword_105DB28 +
jmp loc_10189F1  +
mov eax dword_105DB38 +
jmp loc_10189F1  +
mov eax dword_105DB60 +
jmp loc_10189F1  +
mov eax dword_105DB30 +
jmp loc_10189F1  +
mov eax dword_105DB5C +
jmp loc_10189F1  +
mov eax dword_105DB04 +
jmp loc_10189F1  +
mov eax dword_105DB44 +
jmp loc_10189F1  +
mov eax dword_105DB48 +
push dword ptr [ebx+0Ch]  +
mov esi [eax+8] +
mov edi [eax+0Ch] +
push offset aD  +
lea eax [ebp+var_1C] +
push 0Bh  +
push eax  +
call sub_10062BE  +
lea eax [ebp+var_1C] +
add esp 10h +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1018A13  +
and [ebp+var_3C] 0 +
and [ebp+var_2C] 0 +
sub eax ecx +
sar eax 1 +
mov [ebp+var_40] eax +
lea eax [ebp+var_44] +
mov [ebp+var_54] eax +
lea eax [ebp+var_58] +
push eax  +
push 4B5h  +
push [ebp+var_20]  +
mov [ebp+var_34] esi +
mov [ebp+var_30] edi +
mov [ebp+var_58] 2 +
mov [ebp+var_50] ebx +
call ClbAddData  +
mov ecx [ebp+var_24] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ebx eax +
test ebx ebx +
jnz loc_1018989  +
mov esi [ebp+var_24] +
xor edi edi +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
push edi  +
push 4B3h  +
push [ebp+var_20]  +
call ds:GetDlgItem  +
push eax  +
call ds:EnableWindow  +
jmp loc_1018A92  +
push edi  +
push ebx  +
call ds:EndDialog  +
xor eax eax +
inc eax  +
jmp loc_1018AE8  +
mov ecx [eax+10h] +
mov edx [eax+18h] +
mov eax [ecx+8] +
mov esi [edx+8] +
mov eax [eax+0Ch] +
sub eax [esi+0Ch] +
jnz loc_1018AE8  +
mov eax [edx+4] +
mov edx [eax+10h] +
mov eax [ecx+4] +
mov eax [eax+10h] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_1018AE3  +
test cx cx +
jz loc_10188DA  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_1018AE3  +
add eax 4 +
add edx 4 +
test cx cx +
jz loc_10188DA  +
jmp loc_1018AB7  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwInitParam]  +
push offset sub_1018863  +
push [ebp+hWndParent]  +
push 74h  +
push dword_101D054  +
call ds:DialogBoxParamW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
sub esp 24h +
cmp dword_105DB74 0 +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi [eax+8] +
jnz loc_1018B83  +
call sub_1015CFC  +
cmp dword_105DB74 0 +
jz loc_1018C19  +
mov eax [ebp+arg_4] +
sub eax 8 +
jz loc_1018BEF  +
dec eax  +
jz loc_1018BC1  +
dec eax  +
jnz loc_1018C19  +
lea ecx [ebp+dwInitParam] +
call sub_1019D9F  +
push edi  +
push esi  +
lea ecx [ebp+dwInitParam] +
call sub_1019C99  +
test al al +
jz loc_1018BB7  +
lea eax [ebp+dwInitParam] +
push eax  +
push [ebp+hWndParent]  +
call sub_1017D70  +
lea ecx [ebp+dwInitParam] +
call sub_1019DC8  +
jmp loc_1018C19  +
lea ecx [ebp+var_18] +
call sub_1019357  +
push 0  +
push edi  +
push esi  +
lea ecx [ebp+var_18] +
call sub_1019085  +
test al al +
jz loc_1018BE5  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+hWndParent]  +
call sub_1018839  +
lea ecx [ebp+var_18] +
call sub_1019380  +
jmp loc_1018C19  +
lea ecx [ebp+var_C] +
call sub_1018E7A  +
push edi  +
push esi  +
lea ecx [ebp+var_C] +
call sub_1018D95  +
test al al +
jz loc_1018C11  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+hWndParent]  +
call sub_1018B2E  +
lea ecx [ebp+var_C] +
call sub_1018EA0  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1018B55  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1808h +
call sub_1001C0D  +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+Arguments] eax +
mov esi 400h +
push esi  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
push dword_101D054  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1018C85  +
call ds:__imp_GetLastError  +
xor al al +
jmp loc_1018CBF  +
lea eax [ebp+Arguments] +
push eax  +
push 800h  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+Source] +
push eax  +
push esi  +
call ds:FormatMessageW  +
test eax eax +
jz loc_1018C7B  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
mov ecx edi +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 18h  +
call sub_10131E9  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_1018CF8  +
mov ecx esi +
call ds:??0DSTRING@@QAE@XZ  +
mov dword ptr [esi] offset off_1018D24 +
jmp loc_1018CFA  +
xor esi esi +
test esi esi +
jz loc_1018D1C  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+uID]  +
push esi  +
call sub_1018C34  +
test al al +
jnz loc_1018D1C  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1DSTRING@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1018D5C  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_1018D8A  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_1018D86  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+var_C] ecx +
test eax eax +
jnz loc_1018DAF  +
xor al al +
jmp loc_1018E70  +
push esi  +
push edi  +
mov edi [eax] +
add eax 4 +
push 18h  +
mov [ebp+var_8] edi +
mov [ebp+arg_0] eax +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1018DD4  +
mov ecx eax +
call ds:??0ARRAY@@QAE@XZ  +
mov esi eax +
jmp loc_1018DD6  +
xor esi esi +
test esi esi +
jz loc_1018E6C  +
push 19h  +
push 32h  +
mov ecx esi +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1018E64  +
mov ebx [ebp+arg_4] +
and [ebp+arg_4] 0 +
add ebx 0FFFFFFFCh +
test edi edi +
jbe loc_1018E47  +
push 18h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1018E13  +
mov ecx eax +
call sub_1019357  +
mov edi eax +
jmp loc_1018E15  +
xor edi edi +
test edi edi +
jz loc_1018E5D  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_1019085  +
test al al +
jz loc_1018E51  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+8]  +
mov eax [ebp+var_4] +
add [ebp+arg_0] eax +
sub ebx eax +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_8] +
jb loc_1018DFC  +
mov eax [ebp+var_C] +
mov [eax+8] esi +
mov al 1 +
jmp loc_1018E6E  +
test edi edi +
jz loc_1018E5D  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005978 +
mov eax dword_105DB90 +
and dword ptr [esi+8] 0 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005978 +
call sub_1018D68  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1018EA0  +
test byte ptr [ebp+8] 1 +
jz loc_1018ED8  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax] +
mov [ecx+10h] edx +
mov eax [eax+4] +
mov [ecx+14h] eax +
mov eax [ebp+arg_4] +
mov [ecx+18h] eax +
mov al [ebp+arg_8] +
mov [ecx+9] al +
mov ax [ebp+arg_C] +
mov [ecx+0Ah] ax +
mov byte ptr [ecx+8] 1 +
mov al 1 +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_4] +
mov [ecx+10h] eax +
mov eax [ebp+arg_8] +
mov [ecx+14h] eax +
mov al [ebp+arg_C] +
mov [ecx+9] al +
mov ax [ebp+arg_10] +
mov [ecx+0Ah] ax +
mov byte ptr [ecx+8] 2 +
mov al 1 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax] +
mov [ecx+10h] edx +
mov eax [eax+4] +
mov [ecx+14h] eax +
mov eax [ebp+arg_4] +
mov [ecx+18h] eax +
mov eax [ebp+arg_8] +
mov [ecx+1Ch] eax +
mov al [ebp+arg_C] +
mov [ecx+9] al +
mov ax [ebp+arg_10] +
mov [ecx+0Ah] ax +
mov byte ptr [ecx+8] 3 +
mov al 1 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+0Ch] eax +
mov eax [ebp+arg_4] +
mov [ecx+10h] eax +
mov eax [ebp+arg_8] +
mov [ecx+14h] eax +
mov al [ebp+arg_C] +
mov [ecx+9] al +
mov ax [ebp+arg_10] +
mov [ecx+0Ah] ax +
mov byte ptr [ecx+8] 4 +
mov al 1 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_C] 0 +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_8] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_4] +
mov [esi+10h] eax +
mov [esi+18h] ecx +
jz loc_101900D  +
mov eax large fs:18h +
mov eax [eax+30h] +
push ecx  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov [esi+14h] eax +
test eax eax +
jnz loc_1018FFE  +
xor al al +
jmp loc_1019021  +
push dword ptr [esi+18h]  +
push [ebp+arg_C]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov al [ebp+arg_10] +
mov [esi+9] al +
mov ax [ebp+arg_14] +
mov [esi+0Ah] ax +
mov byte ptr [esi+8] 5 +
mov al 1 +
pop esi  +
pop ebp  +
retn 18h  +
***
xor eax eax +
xor edx edx +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+10h] dx +
mov [ecx+12h] dx +
mov [ecx+14h] eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+14h] +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
xor eax eax +
mov [esi+10h] ax +
mov [esi+12h] ax +
test ecx ecx +
jz loc_101907A  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_1019076  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+14h] 0 +
and dword ptr [esi+14h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [ebp+var_14] esi +
test ebx ebx +
jnz loc_10190A2  +
xor al al +
jmp loc_1019342  +
push edi  +
push 18h  +
mov [ebp+var_4] ebx +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_10190BE  +
mov ecx eax +
call ds:??0ARRAY@@QAE@XZ  +
mov edi eax +
jmp loc_10190C0  +
xor edi edi +
test edi edi +
jz loc_101933F  +
push 19h  +
push 32h  +
mov ecx edi +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1019337  +
mov eax [ebx] +
and [ebp+var_8] 0 +
mov [esi+8] eax +
mov eax [ebx+4] +
mov [esi+0Ch] eax +
mov ax [ebx+8] +
mov [esi+10h] ax +
mov ax [ebx+0Ah] +
mov [esi+12h] ax +
mov eax [ebp+var_4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
cmp [eax+0Ch] ebx +
jbe loc_10192E1  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
lea ecx [ecx+edx-10h] +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_8] +
lea esi [ecx+eax+12h] +
lea eax [esi-2] +
cmp eax [ebp+var_18] +
ja loc_101930F  +
movzx eax byte ptr [esi-2] +
dec eax  +
jz loc_1019280  +
dec eax  +
jz loc_101922E  +
dec eax  +
jz loc_1019152  +
dec eax  +
jz loc_10191BD  +
dec eax  +
jz loc_1019170  +
dec eax  +
dec eax  +
jnz loc_10192CB  +
push 20h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_10191FD  +
mov ecx eax +
call sub_1019516  +
mov ebx eax +
jmp loc_10191FF  +
mov eax [esi+2] +
push 1Ch  +
mov [ebp+var_10] eax +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_101918E  +
mov ecx eax +
call sub_101959D  +
mov [ebp+var_C] eax +
jmp loc_1019192  +
and [ebp+var_C] 0 +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019330  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-1] +
push eax  +
lea eax [esi+0Eh] +
push eax  +
push dword ptr [esi+2]  +
push dword ptr [esi+0Ah]  +
push dword ptr [esi+6]  +
call sub_1018FBE  +
jmp loc_101926C  +
push 18h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_10191D5  +
mov ecx eax +
call sub_1019571  +
mov [ebp+var_C] eax +
jmp loc_10191D9  +
and [ebp+var_C] 0 +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019330  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-1] +
push eax  +
push dword ptr [esi+0Ah]  +
push dword ptr [esi+6]  +
push dword ptr [esi+2]  +
call sub_1018F8A  +
jmp loc_101926C  +
xor ebx ebx +
test ebx ebx +
jz loc_1019330  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-1] +
push eax  +
push 0  +
lea eax [esi-2] +
push eax  +
call ds:RtlCmDecodeMemIoResource  +
push edx  +
push eax  +
lea eax [esi+2] +
push eax  +
mov ecx ebx +
call sub_1018F4E  +
jmp loc_10192B8  +
push 18h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019246  +
mov ecx eax +
call sub_10194EA  +
mov [ebp+var_C] eax +
jmp loc_101924A  +
and [ebp+var_C] 0 +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019330  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-1] +
push eax  +
push dword ptr [esi+6]  +
push dword ptr [esi+2]  +
push dword ptr [esi+0Ah]  +
call sub_1018F1A  +
test al al +
jz loc_1019323  +
push [ebp+var_C]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
jmp loc_10192CB  +
push 20h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019297  +
mov ecx eax +
call sub_10194BE  +
mov ebx eax +
jmp loc_1019299  +
xor ebx ebx +
test ebx ebx +
jz loc_1019330  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-1] +
push eax  +
push dword ptr [esi+0Ah]  +
lea eax [esi+2] +
push eax  +
mov ecx ebx +
call sub_1018EE4  +
test al al +
jz loc_1019348  +
mov eax [edi] +
push ebx  +
mov ecx edi +
call dword ptr [eax+8]  +
mov ebx [ebp+var_C] +
mov eax [ebp+var_4] +
inc ebx  +
add esi 10h +
mov [ebp+var_C] ebx +
cmp ebx [eax+0Ch] +
jb loc_1019123  +
mov esi [ebp+var_14] +
add [ebp+var_8] 20h +
shl ebx 4 +
add ebx [ebp+var_10] +
cmp [ebp+var_8] 20h +
lea eax [eax+ebx+10h] +
mov [esi+14h] edi +
mov [ebp+var_4] eax +
jb loc_10190FB  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_101930B  +
sub eax [ebp+arg_0] +
mov [ecx] eax +
mov al 1 +
jmp loc_1019341  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_101931B  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+var_14] +
mov [eax+14h] edi +
jmp loc_101930B  +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019330  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
test ebx ebx +
jz loc_1019330  +
mov eax [ebx] +
mov ecx ebx +
jmp loc_101932C  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005980 +
mov eax dword_105DB94 +
mov ecx esi +
mov [esi+4] eax +
call sub_101902B  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005980 +
call sub_1019046  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1019380  +
test byte ptr [ebp+8] 1 +
jz loc_10193B8  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1005988 +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov al [ecx+9] +
retn   +
***
cmp byte ptr [ecx+8] 1 +
setz al  +
retn   +
***
cmp byte ptr [ecx+8] 2 +
setz al  +
retn   +
***
cmp byte ptr [ecx+8] 3 +
setz al  +
retn   +
***
cmp byte ptr [ecx+8] 4 +
setz al  +
retn   +
***
cmp byte ptr [ecx+8] 5 +
setz al  +
retn   +
***
cmp byte ptr [ecx+9] 0 +
setz al  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+14h] +
and dword ptr [esi+18h] 0 +
mov dword ptr [esi] offset off_10059F0 +
test eax eax +
jz loc_101945B  +
push eax  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
and dword ptr [esi+14h] 0 +
mov ecx esi +
pop esi  +
jmp sub_10193C4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005988 +
mov eax dword_105DBA8 +
mov [esi+4] eax +
xor eax eax +
mov [esi+0Ah] ax +
mov byte ptr [esi+8] 0 +
mov byte ptr [esi+9] 0 +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10193C4  +
test byte ptr [ebp+8] 1 +
jz loc_10194B2  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019468  +
mov dword ptr [esi] offset off_10059BC +
mov eax dword_105DBA0 +
mov [esi+4] eax +
xor eax eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019468  +
mov dword ptr [esi] offset off_10059BC +
mov eax dword_105DB98 +
mov [esi+4] eax +
xor eax eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019468  +
mov dword ptr [esi] offset off_10059BC +
mov eax dword_105DBA4 +
mov [esi+4] eax +
xor eax eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10059BC +
call sub_10193C4  +
test byte ptr [ebp+8] 1 +
jz loc_1019565  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019468  +
mov dword ptr [esi] offset off_10059BC +
mov eax dword_105DB9C +
mov [esi+4] eax +
xor eax eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1019468  +
mov dword ptr [esi] offset off_10059F0 +
mov eax dword_105DBAC +
mov [esi+4] eax +
xor eax eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101942C  +
test byte ptr [ebp+8] 1 +
jz loc_10195E6  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_1005A24 +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov al [ecx+8] +
retn   +
***
mov al [ecx+0Ah] +
retn   +
***
cmp byte ptr [ecx+9] 1 +
setz al  +
retn   +
***
cmp byte ptr [ecx+9] 2 +
setz al  +
retn   +
***
cmp byte ptr [ecx+9] 3 +
setz al  +
retn   +
***
cmp byte ptr [ecx+9] 4 +
setz al  +
retn   +
***
mov al [ecx+8] +
and al 1 +
dec al  +
neg al  +
sbb al al +
inc al  +
retn   +
***
mov al [ecx+8] +
and al 8 +
cmp al 8 +
setz al  +
retn   +
***
cmp byte ptr [ecx+0Ah] 0 +
setz al  +
retn   +
***
cmp byte ptr [ecx+0Ah] 1 +
setz al  +
retn   +
***
cmp byte ptr [ecx+0Ah] 2 +
setz al  +
retn   +
***
cmp byte ptr [ecx+0Ah] 3 +
setz al  +
retn   +
***
xor eax eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
mov [ecx+24h] eax +
mov [ecx+28h] eax +
mov [ecx+2Ch] eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005A24 +
mov eax dword_105DBB8 +
mov [esi+4] eax +
xor al al +
mov [esi+8] al +
mov [esi+9] al +
mov [esi+0Ah] al +
xor eax eax +
mov [esi+0Ch] ax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10195F2  +
test byte ptr [ebp+8] 1 +
jz loc_101970D  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10196C0  +
mov dword ptr [esi] offset off_1005A60 +
mov eax dword_105DBB4 +
mov [esi+4] eax +
xor eax eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov [esi+24h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10196C0  +
mov dword ptr [esi] offset off_1005A60 +
mov eax dword_105DBBC +
and dword ptr [esi+10h] 0 +
and dword ptr [esi+14h] 0 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10196C0  +
mov dword ptr [esi] offset off_1005A60 +
mov eax dword_105DBB0 +
mov ecx esi +
mov [esi+4] eax +
call sub_10196A0  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005A60 +
call sub_10195F2  +
test byte ptr [ebp+8] 1 +
jz loc_10197BF  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_10196C0  +
mov dword ptr [esi] offset off_1005A60 +
mov eax dword_105DBC0 +
and dword ptr [esi+10h] 0 +
and dword ptr [esi+14h] 0 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+10h] eax +
mov eax [ebp+arg_4] +
mov [ecx+14h] eax +
mov eax [ebp+arg_8] +
mov edx [eax] +
mov [ecx+18h] edx +
mov eax [eax+4] +
mov [ecx+1Ch] eax +
mov eax [ebp+arg_C] +
mov edx [eax] +
mov [ecx+20h] edx +
mov eax [eax+4] +
mov [ecx+24h] eax +
mov al [ebp+arg_10] +
mov [ecx+8] al +
mov al [ebp+arg_14] +
mov [ecx+0Ah] al +
mov ax [ebp+arg_18] +
mov [ecx+0Ch] ax +
mov byte ptr [ecx+9] 1 +
mov al 1 +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+10h] eax +
mov eax [ebp+arg_4] +
mov [ecx+14h] eax +
mov al [ebp+arg_8] +
mov [ecx+8] al +
mov al [ebp+arg_C] +
mov [ecx+0Ah] al +
mov ax [ebp+arg_10] +
mov [ecx+0Ch] ax +
mov byte ptr [ecx+9] 2 +
mov al 1 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+10h] eax +
mov eax [ebp+arg_4] +
mov [ecx+14h] eax +
mov eax [ebp+arg_8] +
mov [ecx+18h] eax +
mov eax [ebp+arg_C] +
mov [ecx+1Ch] eax +
mov eax [ebp+arg_10] +
mov edx [eax] +
mov [ecx+20h] edx +
mov eax [eax+4] +
mov [ecx+24h] eax +
mov eax [ebp+arg_14] +
mov edx [eax] +
mov [ecx+28h] edx +
mov eax [eax+4] +
mov [ecx+2Ch] eax +
mov al [ebp+arg_18] +
mov [ecx+8] al +
mov al [ebp+arg_1C] +
mov [ecx+0Ah] al +
mov ax [ebp+arg_20] +
mov [ecx+0Ch] ax +
mov byte ptr [ecx+9] 3 +
mov al 1 +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+10h] eax +
mov eax [ebp+arg_4] +
mov [ecx+14h] eax +
mov al [ebp+arg_8] +
mov [ecx+8] al +
mov al [ebp+arg_C] +
mov [ecx+0Ah] al +
mov ax [ebp+arg_10] +
mov [ecx+0Ch] ax +
mov byte ptr [ecx+9] 4 +
mov al 1 +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
xor eax eax +
mov [esi+8] ax +
mov [esi+0Ah] ax +
test ecx ecx +
jz loc_1019934  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_1019930  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+0Ch] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_18] ecx +
test esi esi +
jnz loc_1019959  +
xor al al +
jmp loc_1019BC8  +
push ebx  +
push edi  +
mov ebx esi +
push 18h  +
mov [ebp+var_8] ebx +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019978  +
mov ecx eax +
call ds:??0ARRAY@@QAE@XZ  +
mov edi eax +
jmp loc_101997A  +
xor edi edi +
test edi edi +
jz loc_1019BC4  +
push 19h  +
push 32h  +
mov ecx edi +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1019BBC  +
mov cx [esi] +
mov eax [ebp+var_18] +
and [ebp+var_14] 0 +
mov [eax+8] cx +
mov cx [esi+2] +
mov [eax+0Ah] cx +
xor ecx ecx +
and [ebp+var_10] ecx +
cmp [ebx+4] ecx +
jbe loc_1019B69  +
mov eax [ebp+arg_4] +
lea eax [esi+eax-20h] +
mov [ebp+var_1C] eax +
lea esi [ebx+0Ch] +
lea eax [esi-4] +
lea ecx [esi-4] +
mov [ebp+var_4] ecx +
cmp eax [ebp+var_1C] +
ja loc_1019B94  +
movzx eax byte ptr [esi-3] +
dec eax  +
jz loc_1019AF5  +
dec eax  +
jz loc_1019AB5  +
dec eax  +
jz loc_10199FA  +
dec eax  +
jz loc_1019A5C  +
sub eax 3 +
jnz loc_1019B4E  +
xor ebx ebx +
push ebx  +
push ebx  +
lea eax [ebp+var_2C] +
push eax  +
push ecx  +
call ds:RtlIoDecodeMemIoResource  +
push 30h  +
mov [ebp+var_24] eax +
mov [ebp+var_20] edx +
call sub_10131E9  +
pop ecx  +
cmp eax ebx +
jz loc_1019A24  +
mov ecx eax +
call sub_1019777  +
mov ebx eax +
test ebx ebx +
jz loc_1019BB5  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-2] +
push eax  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
push eax  +
lea eax [esi+14h] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
push [ebp+var_28]  +
mov ecx ebx +
push [ebp+var_2C]  +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_1019878  +
jmp loc_1019B3B  +
push 18h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019A74  +
mov ecx eax +
call sub_10197CB  +
mov [ebp+var_C] eax +
jmp loc_1019A78  +
and [ebp+var_C] 0 +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019BB5  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-2] +
push eax  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_10198D4  +
test al al +
jz loc_1019BA8  +
push [ebp+var_C]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
jmp loc_1019B4E  +
push 18h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019ACC  +
mov ecx eax +
call sub_101974E  +
mov ebx eax +
jmp loc_1019ACE  +
xor ebx ebx +
test ebx ebx +
jz loc_1019BB5  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-2] +
push eax  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
push eax  +
push dword ptr [esi+8]  +
mov ecx ebx +
push dword ptr [esi+4]  +
call sub_1019844  +
jmp loc_1019B3B  +
push 28h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019B0C  +
mov ecx eax +
call sub_1019719  +
mov ebx eax +
jmp loc_1019B0E  +
xor ebx ebx +
test ebx ebx +
jz loc_1019BB5  +
movzx eax word ptr [esi] +
push eax  +
movzx eax byte ptr [esi-2] +
push eax  +
mov eax [ebp+var_4] +
movzx eax byte ptr [eax] +
push eax  +
lea eax [esi+14h] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
push dword ptr [esi+8]  +
mov ecx ebx +
push dword ptr [esi+4]  +
call sub_10197F4  +
test al al +
jz loc_1019BCD  +
mov eax [edi] +
push ebx  +
mov ecx edi +
call dword ptr [eax+8]  +
mov ebx [ebp+var_8] +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
add esi 20h +
cmp eax [ebx+4] +
jb loc_10199C7  +
mov ecx [ebp+var_4] +
mov esi [ebp+arg_0] +
mov eax [ebp+var_18] +
mov [eax+0Ch] edi +
test ecx ecx +
jz loc_1019B78  +
add ecx 20h +
mov [ebp+var_8] ecx +
mov ebx ecx +
inc [ebp+var_14]  +
cmp [ebp+var_14] 1 +
jb loc_10199AC  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1019B90  +
sub ebx esi +
mov [eax] ebx +
mov al 1 +
jmp loc_1019BC6  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1019BA0  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+var_18] +
mov [eax+0Ch] edi +
jmp loc_1019B90  +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_1019BB5  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
xor al al +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
test ebx ebx +
jz loc_1019BB5  +
mov eax [ebx] +
mov ecx ebx +
jmp loc_1019BB1  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005A9C +
mov eax dword_105DBC4 +
mov [esi+4] eax +
xor eax eax +
and [esi+0Ch] eax +
mov [esi+8] ax +
mov [esi+0Ah] ax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005A9C +
call sub_1019908  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1019C0B  +
test byte ptr [ebp+8] 1 +
jz loc_1019C43  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
mov [ecx+8] eax +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_1019C8E  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_1019C8A  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+20h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_1019CB6  +
xor al al +
jmp loc_1019D94  +
mov eax [edi+1Ch] +
mov [ebp+var_8] eax +
push esi  +
lea eax [edi+20h] +
push 18h  +
mov [ebp+arg_0] eax +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019CDB  +
mov ecx eax +
call ds:??0ARRAY@@QAE@XZ  +
mov esi eax +
jmp loc_1019CDD  +
xor esi esi +
test esi esi +
jz loc_1019D91  +
push 19h  +
push 32h  +
mov ecx esi +
call ds:?Initialize@ARRAY@@QAEEKK@Z  +
test al al +
jz loc_1019D89  +
mov eax [ebp+arg_4] +
and [ebp+var_4] 0 +
add eax 0FFFFFFE0h +
cmp [ebp+var_8] 0 +
mov [ebp+arg_4] eax +
jbe loc_1019D5D  +
push 10h  +
call sub_10131E9  +
pop ecx  +
test eax eax +
jz loc_1019D23  +
mov ecx eax +
call sub_1019BDC  +
mov ebx eax +
jmp loc_1019D25  +
xor ebx ebx +
test ebx ebx +
jz loc_1019D82  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_4]  +
mov ecx ebx +
push [ebp+arg_0]  +
call sub_101993F  +
test al al +
jz loc_1019D76  +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
mov eax [ebp+var_C] +
add [ebp+arg_0] eax +
sub [ebp+arg_4] eax +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jb loc_1019D0C  +
mov ebx [ebp+var_10] +
mov [ebx+20h] esi +
mov eax [edi+4] +
mov [ebx+8] eax +
mov eax [edi+8] +
mov [ebx+0Ch] eax +
mov eax [edi+0Ch] +
mov [ebx+10h] eax +
mov al 1 +
jmp loc_1019D93  +
test ebx ebx +
jz loc_1019D82  +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor al al +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0OBJECT@@IAE@XZ  +
mov dword ptr [esi] offset off_1005AA4 +
mov eax dword_105DBC8 +
mov ecx esi +
mov [esi+4] eax +
call sub_1019C4F  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1005AA4 +
call sub_1019C6C  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1019DC8  +
test byte ptr [ebp+8] 1 +
jz loc_1019E00  +
push esi  +
call sub_101320C  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+hModule] +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [eax+4] +
push esi  +
mov esi [eax+8] +
push edi  +
mov edi [ebp+arg_4] +
sub edi [eax+0Ch] +
mov eax [eax+10h] +
mov ecx offset __ImageBase +
sub edi ecx +
sar edi 2 +
add esi ecx +
mov edx [esi] +
lea eax __ImageBase[eax+edi*4] +
add ebx ecx +
mov ecx [eax] +
mov [ebp+hModule] edx +
lea eax (__ImageBase+2)[ecx] +
test ecx ecx +
jns loc_1019E56  +
movzx eax cx +
mov [ebp+lpProcName] eax +
test edx edx +
jnz loc_1019ED5  +
push edx  +
push edx  +
push ebx  +
call LoadLibraryExA  +
mov edi eax +
mov [ebp+hModule] edi +
test edi edi +
jz loc_1019EB3  +
push 0  +
push edi  +
push esi  +
call InterlockedCompareExchange  +
mov esi eax +
test esi esi +
jnz loc_1019EA8  +
push 8  +
pop ecx  +
lea edi [ebp+var_28] +
stos   +
mov eax [ebp+hModule] +
mov [ebp+var_14] eax +
mov eax ds:dword_1019F38 +
mov [ebp+var_2C] 24h +
mov [ebp+var_20] ebx +
test eax eax +
jz loc_1019ED5  +
lea ecx [ebp+var_2C] +
push ecx  +
push 5  +
call eax  +
jmp loc_1019ED5  +
push edi  +
call FreeLibrary  +
mov [ebp+hModule] esi +
jmp loc_1019ED5  +
call GetLastError  +
cmp eax 7Eh +
jz loc_1019EC4  +
cmp eax 0C1h +
jnz loc_1019F17  +
push 0  +
push 0FFFFFFFFh  +
push esi  +
call InterlockedCompareExchange  +
test eax eax +
jz loc_1019EDB  +
mov [ebp+hModule] eax +
cmp [ebp+hModule] 0FFFFFFFFh +
jnz loc_1019EE4  +
mov [ebp+var_4] 1 +
jmp loc_1019F17  +
cmp [ebp+hModule] 0 +
jz loc_1019F17  +
push [ebp+lpProcName]  +
push [ebp+hModule]  +
call GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_1019F0C  +
call GetLastError  +
cmp eax 7Fh +
jz loc_1019F0C  +
cmp eax 0B6h +
jnz loc_1019F13  +
mov [ebp+var_4] 1 +
test esi esi +
jnz loc_1019F22  +
push [ebp+lpProcName]  +
push ebx  +
call DelayLoadFailureHook  +
mov esi eax +
cmp [ebp+var_4] 0 +
jz loc_1019F2D  +
mov eax [ebp+arg_4] +
mov [eax] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100160D  +
push offset dword_101D044  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
jmp ds:_purecall  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101A00B  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101A00B  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101A005  +
cmp eax 19930521h +
jz loc_101A005  +
cmp eax 19930522h +
jz loc_101A005  +
cmp eax 1994000h +
jnz loc_101A00B  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101A037  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101A033  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101A098  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101A090  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101A09A  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101A080  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_1001E84  +
and dword ptr [ebp-4] 0 +
mov esi offset __ImageBase +
push esi  +
call sub_101A021  +
pop ecx  +
test eax eax +
jz loc_101A101  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_101A05B  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101A101  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_101A10A  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_1001BF9  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_105D2A0 eax +
mov dword_105D29C ecx +
mov dword_105D298 edx +
mov dword_105D294 ebx +
mov dword_105D290 esi +
mov dword_105D28C edi +
mov word_105D2B8 ss +
mov word_105D2AC cs +
mov word_105D288 ds +
mov word_105D284 es +
mov word_105D280 fs +
mov word_105D27C gs +
pushf   +
pop dword_105D2B0  +
mov eax [ebp+0] +
mov dword_105D2A4 eax +
mov eax [ebp+4] +
mov dword_105D2A8 eax +
lea eax [ebp+8] +
mov dword_105D2B4 eax +
mov eax [ebp-320h] +
mov dword_105D1F0 10001h +
mov eax dword_105D2A8 +
mov dword_105D1AC eax +
mov dword_105D1A0 0C0000409h +
mov dword_105D1A4 1 +
mov eax dword_101D044 +
mov [ebp-328h] eax +
mov eax dword_101D048 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101A24D  +
cmp ecx 7FFFFFFFh +
jbe loc_101A252  +
mov eax 80070057h +
test eax eax +
jl loc_101A296  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_101A289  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_101A284  +
mov cl [edx+eax] +
test cl cl +
jz loc_101A284  +
mov [eax] cl +
inc eax  +
dec esi  +
jnz loc_101A270  +
pop edi  +
test esi esi +
jnz loc_101A28F  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov [ebp+lpDst] eax +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
push offset aClsidAdb880a6D  +
push 80000000h  +
call ds:RegOpenKeyExA  +
test eax eax +
jnz loc_101A374  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Src] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push esi  +
push [ebp+hKey]  +
mov edi 104h +
mov [ebp+cbData] edi +
mov [ebp+Type] 1 +
call ds:RegQueryValueExA  +
test eax eax +
jnz loc_101A363  +
cmp [ebp+Type] 2 +
mov [ebp+var_5] al +
lea eax [ebp+Src] +
jnz loc_101A34D  +
push edi  +
push [ebp+lpDst]  +
push eax  +
call ds:ExpandEnvironmentStringsA  +
dec eax  +
lea ecx [edi-1] +
cmp ecx eax +
sbb esi esi +
inc esi  +
jmp loc_101A363  +
push eax  +
push edi  +
push [ebp+lpDst]  +
call sub_101A237  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov esi ecx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax esi +
pop edi  +
jmp loc_101A376  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100160D  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_101D044 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_105DBD8 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test ecx ecx +
jnz loc_101A448  +
cmp dword_105DBD4 ecx +
jnz loc_101A448  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_101A29F  +
mov esi ds:LoadLibraryA +
test eax eax +
jz loc_101A41D  +
lea eax [ebp+LibFileName] +
push eax  +
call esi  +
mov dword_105DBD8 eax +
mov ecx dword_105DBD8 +
test ecx ecx +
jnz loc_101A448  +
push offset aHhctrl_ocx  +
call esi  +
mov ecx eax +
mov dword_105DBD8 ecx +
test ecx ecx +
jnz loc_101A448  +
mov dword_105DBD4 1 +
xor eax eax +
jmp loc_101A46D  +
mov eax dword_105DBD0 +
test eax eax +
jnz loc_101A463  +
push 0Fh  +
push ecx  +
call ds:__imp_GetProcAddress  +
mov dword_105DBD0 eax +
test eax eax +
jz loc_101A43A  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
push edi  +
call eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100160D  +
leave   +
retn 10h  +
***
add [eax-6F6F6F70h] dl +
jmp ds:?Compare@OBJECT@@UBEJPBV1@@Z  +
***
jmp ds:?Resize@DSTRING@@UAEEK@Z  +
***
jmp ds:?NewBuf@DSTRING@@UAEEK@Z  +
***
jmp ds:?SPrintf@DSTRING@@UAAEPBGZZ  +
***
jmp ds:?SPrintfAppend@DSTRING@@UAAEPBGZZ  +
***
mov eax offset __imp_RegInstallW +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset ADVPACK_dll_import_table  +
call sub_1019E0C  +
pop edx  +
pop ecx  +
jmp eax  +
***
push 800001C3h  +
retn   +
***
pushf   +
retn   +
***
mov eax 0D00001C3h +
retn   +
***
retf   +
***
retf   +
***
