mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
cmp word ptr [edi] 7Eh +
push 2  +
mov esi edi +
pop ebx  +
jnz loc_100163F  +
push 0  +
push edi  +
call sub_1005BD2  +
cmp eax ebx +
jbe loc_100163F  +
cmp word ptr [edi] 0 +
jz loc_100162A  +
add esi ebx +
cmp word ptr [esi] 0 +
jnz loc_1001622  +
sub esi ebx +
cmp word ptr [esi] 7Eh +
jnz loc_100163F  +
push 25h  +
pop eax  +
mov [esi] ax +
mov [edi] ax +
mov eax ebx +
jmp loc_1001678  +
push 0  +
push esi  +
call sub_1005BD2  +
xor ecx ecx +
inc ecx  +
cmp eax ebx +
jbe loc_1001676  +
jmp loc_100166E  +
cmp ax 25h +
jnz loc_100166C  +
cmp [ebp+var_4] 0 +
jnz loc_100163B  +
add esi ebx +
mov [ebp+var_4] ecx +
jz loc_1001676  +
add esi ebx +
jz loc_1001676  +
cmp [esi] ax +
jz loc_100163B  +
add esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1001650  +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi 7D0h +
push esi  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1006596  +
inc esi  +
cmp esi 83Ch +
jbe loc_100168C  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
and [ebp+var_214] 0 +
and [ebp+var_210] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov [ebp+lpString] eax +
mov eax [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_20C] eax +
mov [ebp+var_218] ebx +
mov edx edi +
mov esi edi +
mov ecx 1FCh +
lea eax [ebp+var_200] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1001704  +
movzx ecx word ptr [edi] +
test cx cx +
jz loc_100172C  +
movzx eax cx +
cmp ax 5Ch +
jnz loc_1001722  +
inc [ebp+var_210]  +
inc edx  +
inc edx  +
movzx eax word ptr [edx] +
test ax ax +
jnz loc_1001716  +
mov [ebp+var_208] edi +
cmp cx 5Ch +
jz loc_1001756  +
movzx eax cx +
test ax ax +
jz loc_1001756  +
add [ebp+var_208] 2 +
mov eax [ebp+var_208] +
movzx eax word ptr [eax] +
cmp ax 5Ch +
jnz loc_100173B  +
mov eax [ebp+var_208] +
sub eax edi +
sar eax 1 +
cmp eax 1F4h +
jg loc_100178D  +
lea ebx [eax+eax] +
push ebx  +
push edi  +
push [ebp+lpString]  +
call ds:memmove  +
mov ecx [ebp+lpString] +
add esp 0Ch +
xor eax eax +
mov [ebx+ecx] ax +
mov ebx [ebp+var_218] +
cmp [ebp+lpString] 0 +
jz loc_10017D4  +
push 0  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10017D4  +
push 1F7h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 10h  +
push 0FEh  +
push [ebp+lpString]  +
lea eax [ebp+var_200] +
push eax  +
call sub_1006510  +
xor edx edx +
cmp [edi] dx +
jz loc_10017F9  +
inc esi  +
inc esi  +
cmp [esi] dx +
jnz loc_10017F2  +
push 5Ch  +
pop ecx  +
jmp loc_1001804  +
cmp esi edi +
jbe loc_100180C  +
mov esi eax +
lea eax [esi-2] +
cmp [eax] cx +
jnz loc_10017FE  +
lea eax [esi-2] +
cmp [eax] cx +
jnz loc_100182A  +
cmp esi edi +
jbe loc_100182A  +
jmp loc_1001822  +
lea eax [esi-2] +
cmp [eax] cx +
jnz loc_1001828  +
mov esi eax +
cmp esi edi +
ja loc_100181A  +
inc esi  +
inc esi  +
push edx  +
push esi  +
call sub_1005BD2  +
cmp eax 1F4h +
jge loc_100185A  +
lea edi [eax+eax] +
push edi  +
push esi  +
push [ebp+var_20C]  +
call ds:memmove  +
mov ecx [ebp+var_20C] +
add esp 0Ch +
xor eax eax +
mov [edi+ecx] ax +
jmp loc_1001879  +
mov edi [ebp+var_20C] +
push 3E8h  +
push esi  +
push edi  +
call ds:memmove  +
add esp 0Ch +
xor eax eax +
mov [edi+3E6h] ax +
cmp [ebp+var_210] 2 +
jl loc_1001915  +
test esi esi +
jz loc_1001898  +
push 0  +
push esi  +
call sub_1005BD2  +
mov [ebp+var_214] eax +
mov edi [ebp+var_208] +
push 0  +
push edi  +
call sub_1005BD2  +
mov ecx [ebp+var_214] +
add eax ecx +
lea eax ds:14h[eax*4] +
push eax  +
call sub_1005E42  +
mov [ebx] eax +
test eax eax +
jnz loc_10018D9  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
jmp loc_10017C0  +
sub esi edi +
dec esi  +
dec esi  +
push eax  +
sar esi 1 +
call sub_1005EEB  +
shr eax 1 +
cmp eax esi +
jbe loc_100193B  +
add esi esi +
push esi  +
add edi 2 +
push edi  +
push dword ptr [ebx]  +
call ds:memmove  +
add esp 0Ch +
push dword ptr [ebx]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
mov eax [ebx] +
push 0  +
add eax esi +
push eax  +
call sub_1006510  +
jmp loc_100193B  +
cmp [ebp+lpString] 0 +
jz loc_100193B  +
push 0  +
push [ebp+lpString]  +
call sub_1005BD2  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1005E42  +
mov [ebx] eax +
test eax eax +
jz loc_10018C1  +
push 1F4h  +
lea eax [ebp+var_200] +
push eax  +
push [ebp+lpString]  +
call sub_1006510  +
xor eax eax +
cmp [ebp+lpString] eax +
jz loc_10017C0  +
cmp [ebx] eax +
jz loc_10017C0  +
cmp [ebp+var_20C] eax +
jz loc_10017C0  +
jmp loc_10017C3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 408h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov eax [ebp+arg_4] +
mov [ebp+var_3FC] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_3CC] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_3F8] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_3E8] eax +
mov eax [ebp+arg_14] +
mov [ebp+var_3D0] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_404] eax +
mov eax [ebp+arg_1C] +
mov [ebp+var_3DC] eax +
mov eax [ebp+arg_20] +
mov [ebp+var_400] eax +
mov eax [ebp+arg_24] +
mov [ebp+var_3E4] eax +
mov eax [ebp+arg_28] +
mov [ebp+lpString] eax +
mov eax [ebp+arg_2C] +
mov [ebp+var_3D4] eax +
mov eax [ebp+arg_30] +
mov [ebp+var_3D8] eax +
mov eax [ebp+arg_34] +
mov [ebp+var_3EC] eax +
mov eax [ebp+arg_38] +
mov [ebp+var_3F0] eax +
mov eax [ebp+arg_3C] +
xor edi edi +
xor esi esi +
inc edi  +
mov [ebp+var_408] eax +
mov [ebp+var_3C8] esi +
mov [ebp+var_3F4] edi +
call sub_10077F5  +
mov [ebp+var_3C8] eax +
cmp eax esi +
jnz loc_1001A63  +
push 8  +
call ds:SetLastError  +
call sub_10059A3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
mov eax edi +
jmp loc_100281C  +
push ebx  +
push 8  +
mov ebx offset aParser2 +
push ebx  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_10064CD  +
mov eax [ebp+var_3CC] +
push 8  +
mov [ebp+var_398] eax +
push ebx  +
lea eax [ebp+var_374] +
push eax  +
mov [ebp+var_3BC] 0Ah +
mov [ebp+var_3A4] offset dword_1001274 +
mov [ebp+var_3A0] esi +
mov [ebp+var_39C] esi +
mov [ebp+var_3AC] edi +
mov [ebp+var_3A8] esi +
mov [ebp+var_3B4] 20000h +
mov [ebp+var_3B0] esi +
mov [ebp+var_394] 0FEh +
mov [ebp+var_390] esi +
mov [ebp+var_38C] esi +
mov [ebp+var_388] esi +
mov [ebp+var_384] esi +
mov [ebp+var_380] esi +
mov [ebp+var_37C] esi +
call sub_10064CD  +
push 8  +
push ebx  +
lea eax [ebp+var_324] +
push eax  +
mov [ebp+var_36C] edi +
mov [ebp+var_354] offset dword_1001270 +
mov [ebp+var_350] esi +
mov [ebp+var_34C] esi +
mov [ebp+var_35C] edi +
mov [ebp+var_358] esi +
mov [ebp+var_364] 100C0h +
mov [ebp+var_360] esi +
mov [ebp+var_348] esi +
mov [ebp+var_344] esi +
mov [ebp+var_340] esi +
mov [ebp+var_33C] esi +
mov [ebp+var_338] esi +
mov [ebp+var_334] esi +
mov [ebp+var_330] esi +
mov [ebp+var_32C] esi +
call sub_10064CD  +
push 8  +
push ebx  +
lea eax [ebp+var_2D4] +
push eax  +
mov [ebp+var_31C] edi +
mov [ebp+var_304] offset dword_100126C +
mov [ebp+var_300] esi +
mov [ebp+var_2FC] esi +
mov [ebp+var_30C] edi +
mov [ebp+var_308] esi +
mov [ebp+var_314] 100C0h +
mov [ebp+var_310] esi +
mov [ebp+var_2F8] esi +
mov [ebp+var_2F4] esi +
mov [ebp+var_2F0] esi +
mov [ebp+var_2EC] esi +
mov [ebp+var_2E8] esi +
mov [ebp+var_2E4] esi +
mov [ebp+var_2E0] esi +
mov [ebp+var_2DC] esi +
call sub_10064CD  +
mov [ebp+var_2CC] edi +
mov [ebp+var_2B4] offset dword_1001268 +
mov [ebp+var_2B0] esi +
mov [ebp+var_2AC] esi +
mov [ebp+var_2BC] edi +
mov [ebp+var_2B8] esi +
mov [ebp+var_2C4] 10010h +
mov [ebp+var_2C0] esi +
mov [ebp+var_2A8] esi +
mov [ebp+var_2A4] esi +
push 8  +
push ebx  +
lea eax [ebp+var_284] +
push eax  +
mov [ebp+var_2A0] esi +
mov [ebp+var_29C] esi +
mov [ebp+var_298] esi +
mov [ebp+var_294] esi +
mov [ebp+var_290] esi +
mov [ebp+var_28C] esi +
call sub_10064CD  +
mov eax [ebp+var_404] +
push 8  +
mov [ebp+var_258] eax +
push ebx  +
lea eax [ebp+var_234] +
push eax  +
mov [ebp+var_27C] 0Ah +
mov [ebp+var_264] offset dword_1001264 +
mov [ebp+var_260] esi +
mov [ebp+var_25C] esi +
mov [ebp+var_26C] edi +
mov [ebp+var_268] esi +
mov [ebp+var_274] esi +
mov [ebp+var_270] esi +
mov [ebp+var_254] 0FEh +
mov [ebp+var_250] esi +
mov [ebp+var_24C] esi +
mov [ebp+var_248] esi +
mov [ebp+var_244] esi +
mov [ebp+var_240] esi +
mov [ebp+var_23C] esi +
call sub_10064CD  +
mov eax off_100B000 +
push 8  +
mov [ebp+var_214] eax +
push ebx  +
lea eax [ebp+var_194] +
push eax  +
mov [ebp+var_22C] edi +
mov [ebp+var_210] esi +
mov [ebp+var_20C] esi +
mov [ebp+var_21C] edi +
mov [ebp+var_218] esi +
mov [ebp+var_224] 10080h +
mov [ebp+var_220] esi +
mov [ebp+var_208] esi +
mov [ebp+var_204] esi +
mov [ebp+var_200] esi +
mov [ebp+var_1FC] esi +
mov [ebp+var_1F8] esi +
mov [ebp+var_1F4] esi +
mov [ebp+var_1F0] esi +
mov [ebp+var_1EC] esi +
call sub_10064CD  +
lea eax [ebp+var_3C8] +
push 8  +
mov [ebp+var_168] eax +
push ebx  +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_18C] edi +
mov [ebp+var_174] offset dword_1001260 +
mov [ebp+var_170] esi +
mov [ebp+var_16C] esi +
mov [ebp+var_17C] 2 +
mov [ebp+var_178] esi +
mov [ebp+var_184] 40001h +
mov [ebp+var_180] esi +
mov [ebp+var_164] esi +
mov [ebp+var_160] esi +
mov [ebp+var_15C] esi +
mov [ebp+var_158] esi +
mov [ebp+var_154] esi +
mov [ebp+var_150] esi +
mov [ebp+var_14C] esi +
call sub_10064CD  +
mov [ebp+var_1DC] edi +
mov [ebp+var_1C4] offset dword_100125C +
mov [ebp+var_1C0] esi +
mov [ebp+var_1BC] esi +
mov eax [ebp+lpString] +
push 8  +
mov [ebp+var_1B8] eax +
push ebx  +
lea eax [ebp+var_144] +
push eax  +
mov [ebp+var_1CC] edi +
mov [ebp+var_1C8] esi +
mov [ebp+var_1D4] 40h +
mov [ebp+var_1D0] esi +
mov [ebp+var_1B4] 0FEh +
mov [ebp+var_1B0] esi +
mov [ebp+var_1AC] esi +
mov [ebp+var_1A8] esi +
mov [ebp+var_1A4] esi +
mov [ebp+var_1A0] esi +
mov [ebp+var_19C] esi +
call sub_10064CD  +
mov eax [ebp+var_3D4] +
push 8  +
mov [ebp+var_118] eax +
push ebx  +
lea eax [ebp+var_F4] +
push eax  +
mov [ebp+var_13C] edi +
mov [ebp+var_124] offset dword_1001258 +
mov [ebp+var_120] esi +
mov [ebp+var_11C] esi +
mov [ebp+var_12C] edi +
mov [ebp+var_128] esi +
mov [ebp+var_134] 40h +
mov [ebp+var_130] esi +
mov [ebp+var_114] 0FEh +
mov [ebp+var_110] esi +
mov [ebp+var_10C] esi +
mov [ebp+var_108] esi +
mov [ebp+var_104] esi +
mov [ebp+var_100] esi +
mov [ebp+var_FC] esi +
call sub_10064CD  +
mov eax [ebp+var_3D8] +
push 8  +
mov [ebp+var_C8] eax +
push ebx  +
lea eax [ebp+var_A4] +
push eax  +
mov [ebp+var_EC] edi +
mov [ebp+var_D4] offset word_1001254 +
mov [ebp+var_D0] esi +
mov [ebp+var_CC] esi +
mov [ebp+var_DC] edi +
mov [ebp+var_D8] esi +
mov [ebp+var_E4] 40h +
mov [ebp+var_E0] esi +
mov [ebp+var_C4] 0FEh +
mov [ebp+var_C0] esi +
mov [ebp+var_BC] esi +
mov [ebp+var_B8] esi +
mov [ebp+var_B4] esi +
mov [ebp+var_B0] esi +
mov [ebp+var_AC] esi +
call sub_10064CD  +
mov eax [ebp+var_3EC] +
push 8  +
mov [ebp+var_9C] 0Ah +
mov [ebp+var_84] offset dword_1001250 +
mov [ebp+var_80] esi +
mov [ebp+var_7C] esi +
mov [ebp+var_8C] edi +
mov [ebp+var_88] esi +
mov [ebp+var_94] esi +
mov [ebp+var_90] esi +
mov [ebp+var_78] eax +
mov [ebp+var_74] 0FEh +
mov [ebp+var_70] esi +
mov [ebp+var_6C] esi +
mov [ebp+var_68] esi +
mov [ebp+var_64] esi +
mov [ebp+var_60] esi +
mov [ebp+var_5C] esi +
push ebx  +
lea eax [ebp+var_54] +
push eax  +
call sub_10064CD  +
mov eax [ebp+var_408] +
mov [ebp+var_4C] edi +
mov [ebp+var_34] offset dword_100124C +
mov [ebp+var_30] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_3C] edi +
mov [ebp+var_38] esi +
mov [ebp+var_44] esi +
mov [ebp+var_40] esi +
mov [ebp+var_28] eax +
mov [ebp+var_24] 0FEh +
mov [ebp+var_20] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_18] esi +
mov [ebp+var_14] esi +
mov [ebp+var_10] esi +
mov [ebp+var_C] esi +
cmp [ebp+arg_0] edi +
jz loc_10027B9  +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
push 0Ch  +
push 0FFFFFFFFh  +
push [ebp+var_3FC]  +
push [ebp+arg_0]  +
call sub_1009092  +
test eax eax +
jnz loc_100205A  +
push 1389h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
mov eax ds:_iob +
push offset pszTrimChars  +
add eax 40h +
push eax  +
call sub_1006596  +
call sub_1005910  +
jmp loc_10027C3  +
mov ecx [ebp+var_348] +
mov eax [ebp+var_3F8] +
mov edx [ebp+var_3E8] +
mov [eax] ecx +
mov ecx [ebp+var_2F8] +
mov [edx] ecx +
mov ecx [ebp+var_3D0] +
mov edx [ebp+var_2A8] +
mov [ecx] edx +
mov ecx [ebp+var_208] +
mov edx [ebp+var_3DC] +
mov [edx] ecx +
cmp [eax] esi +
jz loc_1002142  +
mov eax [ebp+var_3E8] +
mov ebx 1FCh +
cmp [eax] esi +
jnz loc_10020BB  +
push ebx  +
call sub_1005E42  +
mov ecx [ebp+var_3E8] +
mov [ecx] eax +
cmp eax esi +
jz loc_100212B  +
mov eax [ebp+var_3D0] +
cmp [eax] esi +
jnz loc_10020DF  +
mov eax [ebp+var_3E4] +
push ebx  +
mov [eax] edi +
call sub_1005E42  +
mov ecx [ebp+var_3D0] +
mov [ecx] eax +
cmp eax esi +
jz loc_100212B  +
cmp [ebp+var_2A8] esi +
jnz loc_1002103  +
mov ebx [ebp+var_3D0] +
push dword ptr [ebx]  +
call sub_1005EEB  +
push eax  +
push offset String2  +
push dword ptr [ebx]  +
call sub_1006510  +
jmp loc_1002142  +
mov eax [ebp+var_3D0] +
push esi  +
push edi  +
push offset String2  +
push dword ptr [eax]  +
call sub_1005CA9  +
test eax eax +
jnz loc_1002142  +
push ebx  +
push [ebp+var_3D0]  +
call sub_100621E  +
test eax eax +
jnz loc_100213A  +
call sub_10059A3  +
push 20001h  +
jmp loc_1002498  +
mov eax [ebp+var_3E4] +
mov [eax] edi +
mov eax [ebp+var_3DC] +
mov eax [eax] +
mov ebx offset pszTrimChars +
cmp eax esi +
jz loc_100216D  +
push esi  +
push eax  +
call sub_1005BD2  +
test eax eax +
jz loc_100216D  +
mov eax [ebp+var_3DC] +
push ebx  +
push dword ptr [eax]  +
call ds:StrTrimW  +
mov eax [ebp+var_3CC] +
cmp [eax] edi +
jnz loc_1002182  +
cmp [ebp+arg_0] 2 +
jle loc_100218C  +
jmp loc_10027B9  +
cmp [ebp+arg_0] 2 +
jz loc_10027B9  +
cmp [ebp+var_218] esi +
jz loc_10021E1  +
mov eax [ebp+var_3DC] +
mov eax [eax] +
cmp eax esi +
jz loc_1002617  +
push esi  +
push eax  +
call sub_1005BD2  +
test eax eax +
jnz loc_10021E1  +
push 1389h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
mov eax ds:_iob +
push ebx  +
add eax 40h +
push eax  +
call sub_1006596  +
push 224h  +
jmp loc_10027BE  +
mov ebx [ebp+lpString] +
push esi  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_1002206  +
cmp [ebp+var_D8] edi +
jnz loc_1002206  +
cmp [ebp+var_128] edi +
jz loc_10027B9  +
push esi  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_1002233  +
cmp [ebp+var_128] edi +
jnz loc_1002233  +
push esi  +
push [ebp+var_3D4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002233  +
push 225h  +
jmp loc_10027BE  +
push esi  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_1002260  +
cmp [ebp+var_D8] edi +
jnz loc_1002260  +
push esi  +
push [ebp+var_3D8]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002260  +
push 226h  +
jmp loc_10027BE  +
push esi  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_1002299  +
push esi  +
push [ebp+var_3D8]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002299  +
push esi  +
push [ebp+var_3D4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002299  +
mov eax [ebp+var_3EC] +
cmp [eax] esi +
jz loc_10027B9  +
cmp [ebp+var_38] edi +
jnz loc_10022AA  +
cmp [ebp+var_1C8] esi +
jz loc_10027B9  +
cmp [ebp+var_218] edi +
jnz loc_10022BE  +
cmp [ebp+var_1C8] edi +
jz loc_10027B9  +
push [ebp+var_3C8]  +
call sub_1007895  +
mov [ebp+var_3CC] eax +
cmp eax esi +
jnz loc_1002319  +
cmp [ebp+var_358] edi +
jnz loc_10022EF  +
cmp [ebp+var_1C8] esi +
jnz loc_10022EF  +
cmp [ebp+var_218] esi +
jz loc_10027B9  +
cmp [ebp+var_218] edi +
jz loc_100230F  +
cmp [ebp+var_1C8] edi +
jnz loc_10024D6  +
cmp [ebp+var_88] esi +
jnz loc_10024FB  +
push 21Ch  +
jmp loc_10027BE  +
jbe loc_10023C0  +
push esi  +
push esi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1005E42  +
mov ebx [ebp+var_400] +
mov [ebx] eax +
cmp eax esi +
jz loc_1002493  +
push esi  +
push esi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
add eax 0Ah +
push eax  +
push esi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
push dword ptr [ebx]  +
call sub_1006510  +
push esi  +
push dword ptr [ebx]  +
call sub_1005BD2  +
test eax eax +
jnz loc_100238D  +
push 21Bh  +
jmp loc_10027BE  +
push esi  +
push dword ptr [ebx]  +
call sub_1005BD2  +
cmp eax 0FEh +
jbe loc_10023A6  +
push 223h  +
jmp loc_10027BE  +
push 3Dh  +
push dword ptr [ebx]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10023C0  +
push 228h  +
jmp loc_10027BE  +
cmp [ebp+var_3CC] 2 +
jnz loc_10024D6  +
cmp [ebp+var_218] esi +
jnz loc_10024D6  +
cmp [ebp+var_88] esi +
jnz loc_10024D6  +
cmp [ebp+var_128] esi +
jnz loc_10024D6  +
push esi  +
push edi  +
push [ebp+var_3C8]  +
cmp [ebp+var_1C8] esi +
jz loc_1002471  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
add eax 14h +
add eax eax +
push eax  +
call sub_1005E42  +
mov ebx [ebp+var_3F0] +
mov [ebx] eax +
cmp eax esi +
jz loc_1002493  +
push esi  +
push edi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
add eax 14h +
push eax  +
push edi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
push dword ptr [ebx]  +
call sub_1006510  +
push offset pszTrimChars  +
push dword ptr [ebx]  +
call ds:StrTrimW  +
push esi  +
push dword ptr [ebx]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10024D6  +
push 25Eh  +
jmp loc_10027BE  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
add eax 14h +
add eax eax +
push eax  +
call sub_1005E42  +
mov ebx [ebp+var_3F0] +
mov [ebx] eax +
cmp eax esi +
jnz loc_10024AB  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
jmp loc_10027D2  +
push esi  +
push edi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
call sub_1005BD2  +
add eax 14h +
push eax  +
push edi  +
push [ebp+var_3C8]  +
call sub_1007EAA  +
push eax  +
push dword ptr [ebx]  +
call sub_1006510  +
cmp [ebp+var_1C8] esi +
jnz loc_10024F3  +
cmp [ebp+var_218] esi +
jnz loc_1002533  +
cmp [ebp+var_3CC] edi +
jnz loc_1002533  +
jmp loc_10027B9  +
cmp [ebp+var_1C8] edi +
jnz loc_1002533  +
cmp [ebp+var_88] edi +
jnz loc_1002533  +
cmp [ebp+var_3CC] esi +
jnz loc_10027B9  +
cmp [ebp+var_268] esi +
jnz loc_10027B9  +
cmp [ebp+var_128] edi +
jz loc_10027B9  +
cmp [ebp+var_D8] edi +
jz loc_10027B9  +
mov ebx [ebp+var_3D0] +
cmp [ebp+var_2B8] esi +
jz loc_1002565  +
push esi  +
push edi  +
push offset String2  +
push dword ptr [ebx]  +
call sub_1005BF3  +
test eax eax +
jnz loc_100255D  +
mov eax [ebp+var_3E4] +
mov [eax] edi +
jmp loc_1002593  +
cmp [ebp+var_2B8] esi +
jnz loc_1002593  +
cmp [ebp+var_358] esi +
jnz loc_1002575  +
cmp [ebp+var_308] esi +
jz loc_10025DB  +
mov eax [ebp+var_3E4] +
mov [eax] edi +
push dword ptr [ebx]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push offset dword_1001240  +
push dword ptr [ebx]  +
call sub_1006510  +
cmp [ebp+var_358] esi +
jz loc_10025B7  +
mov eax [ebp+var_3F8] +
push esi  +
push dword ptr [eax]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10025B7  +
push 212h  +
jmp loc_10027BE  +
cmp [ebp+var_308] esi +
jz loc_10025DB  +
mov eax [ebp+var_3E8] +
push esi  +
push dword ptr [eax]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10025DB  +
push 213h  +
jmp loc_10027BE  +
push esi  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10025FD  +
cmp [ebp+var_1C8] esi +
jz loc_10025FD  +
push 214h  +
jmp loc_10027BE  +
mov ebx [ebp+var_3DC] +
push esi  +
push dword ptr [ebx]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002621  +
cmp [ebp+var_218] esi +
jz loc_1002621  +
push 220h  +
jmp loc_10027BE  +
push esi  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1002667  +
push esi  +
push [ebp+var_3D8]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10027B9  +
push esi  +
push [ebp+var_3D4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10027B9  +
mov eax [ebp+var_3EC] +
cmp [eax] edi +
jz loc_10027B9  +
push esi  +
push [ebp+var_3D4]  +
call sub_1005BD2  +
test eax eax +
jz loc_1002684  +
cmp [ebp+var_3CC] 2 +
jz loc_10027B9  +
push esi  +
push dword ptr [ebx]  +
call sub_1005BD2  +
test eax eax +
jz loc_100269D  +
cmp [ebp+var_3CC] 2 +
jz loc_10027B9  +
push esi  +
push [ebp+var_3D8]  +
call sub_1005BD2  +
test eax eax +
jz loc_1002727  +
cmp [ebp+var_3CC] 2 +
jb loc_10027B9  +
mov eax [ebp+var_3D8] +
xor ebx ebx +
xor ecx ecx +
movzx edx word ptr [eax] +
cmp dx 2Ch +
jz loc_10026E0  +
cmp dx si +
jz loc_10026E0  +
inc ebx  +
inc eax  +
inc eax  +
inc ecx  +
cmp ecx 0FEh +
jl loc_10026C4  +
jmp loc_10026E8  +
cmp ebx esi +
jz loc_100277C  +
mov edx 0FEh +
cmp ecx edx +
jge loc_100277C  +
cmp [eax] si +
jz loc_10026FD  +
inc eax  +
inc eax  +
inc ecx  +
cmp ecx edx +
jge loc_100277C  +
cmp [eax] si +
jz loc_100277C  +
inc ecx  +
cmp ecx edx +
jge loc_100277C  +
cmp [eax+2] si +
jnz loc_1002727  +
mov eax [ebp+var_3F0] +
push esi  +
push dword ptr [eax]  +
call sub_1005BD2  +
test eax eax +
jz loc_10027B9  +
push esi  +
push [ebp+var_3D4]  +
call sub_1005BD2  +
test eax eax +
jz loc_1002783  +
mov eax [ebp+var_3D4] +
xor ecx ecx +
mov ebx 0FEh +
movzx edx word ptr [eax] +
cmp dx 2Ch +
jz loc_100275F  +
cmp dx si +
jz loc_100275F  +
inc eax  +
inc eax  +
inc ecx  +
cmp ecx ebx +
mov [ebp+var_3F4] esi +
jl loc_1002744  +
cmp ecx ebx +
jge loc_100277C  +
cmp [eax] si +
jz loc_100276B  +
inc eax  +
inc eax  +
inc ecx  +
cmp ecx ebx +
jge loc_100277C  +
cmp [eax] si +
jz loc_100277C  +
cmp [ebp+var_3F4] edi +
jnz loc_1002783  +
push 21Dh  +
jmp loc_10027BE  +
cmp [ebp+var_308] esi +
jz loc_100279A  +
cmp [ebp+var_358] esi +
jnz loc_10027A9  +
push 217h  +
jmp loc_10027BE  +
cmp [ebp+var_2B8] esi +
jz loc_10027A9  +
push 218h  +
jmp loc_10027BE  +
cmp [ebp+var_128] edi +
jnz loc_10027E2  +
cmp [ebp+var_1C8] esi +
jnz loc_10027E2  +
push 1F5h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
lea eax [ebp+var_3C8] +
push eax  +
call sub_100786A  +
mov eax edi +
jmp loc_100281B  +
cmp [ebp+var_D8] edi +
jnz loc_100280D  +
cmp [ebp+var_1C8] esi +
jnz loc_100280D  +
push 1F5h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
mov esi edi +
lea eax [ebp+var_3C8] +
push eax  +
call sub_100786A  +
mov eax esi +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1005311  +
leave   +
retn 40h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1 +
jnz loc_1002844  +
push [ebp+lpString]  +
call sub_1009A87  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002863  +
cmp ecx 7FFFFFFFh +
jbe loc_1002868  +
mov eax 80070057h +
test eax eax +
jl loc_10028A5  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002895  +
cmp eax esi +
ja loc_1002895  +
jnz loc_10028A0  +
jmp loc_100289A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+lpMem] +
xor ebx ebx +
push esi  +
mov [ebp+var_8] ebx +
mov [ebp+lpString1] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
call sub_1005EEB  +
add eax 0Ah +
push eax  +
call sub_1005E42  +
mov [ebp+lpString1] eax +
cmp eax ebx +
jnz loc_10028F7  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
xor eax eax +
jmp loc_1002B92  +
mov eax esi +
cmp [esi] bx +
jz loc_1002905  +
inc eax  +
inc eax  +
cmp [eax] bx +
jnz loc_10028FE  +
cmp [ebp+arg_14] ebx +
jz loc_100291D  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1006596  +
cmp [ebp+arg_1C] 1 +
push edi  +
mov edi ds:memchr +
mov [ebp+var_C] esi +
jnz loc_1002B63  +
mov eax [ebp+arg_28] +
cmp dword ptr [eax] 1 +
jnz loc_1002B63  +
mov eax esi +
cmp [eax] bx +
jz loc_1002B63  +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_2C] +
cmp [ecx] eax +
jz loc_1002B63  +
jmp loc_1002962  +
cmp [esi] bx +
jz loc_1002987  +
inc esi  +
inc esi  +
mov [ebp+var_C] esi +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
add eax eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpString]  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_1002958  +
jmp loc_1002987  +
cmp [esi] bx +
jz loc_10029A3  +
inc esi  +
inc esi  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
add eax eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpString]  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_1002980  +
movzx eax word ptr [esi] +
mov ecx [ebp+var_C] +
cmp ax [ecx] +
jnz loc_10029B7  +
cmp ax bx +
jz loc_1002B86  +
inc [ebp+var_14]  +
cmp ax bx +
jnz loc_1002948  +
jmp loc_1002B63  +
cmp [esi] bx +
jz loc_10029F3  +
inc esi  +
inc esi  +
mov [ebp+var_C] esi +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
add eax eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpString]  +
call edi  +
add esp 0Ch +
test eax eax +
jnz loc_10029C4  +
jmp loc_10029F3  +
cmp [esi] bx +
jz loc_1002A0F  +
inc esi  +
inc esi  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
add eax eax +
push eax  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpString]  +
call edi  +
add esp 0Ch +
test eax eax +
jz loc_10029EC  +
movzx eax word ptr [esi] +
mov ecx [ebp+var_C] +
cmp ax [ecx] +
jnz loc_1002A23  +
cmp ax bx +
jz loc_1002B86  +
push [ebp+lpString1]  +
call sub_1005EEB  +
push [ebp+lpString1]  +
mov eax esi +
sub eax [ebp+var_C] +
sar eax 1 +
mov [ebp+var_14] eax +
call sub_1005EEB  +
mov ecx eax +
mov eax [ebp+var_14] +
shr ecx 1 +
cmp ecx eax +
jbe loc_1002A69  +
add eax eax +
push eax  +
push [ebp+var_C]  +
mov [ebp+var_14] eax +
push [ebp+lpString1]  +
call ds:memmove  +
mov ecx [ebp+lpString1] +
mov edx [ebp+var_14] +
add esp 0Ch +
xor eax eax +
mov [edx+ecx] ax +
cmp [ebp+arg_14] ebx +
jz loc_1002AD5  +
push ebx  +
push [ebp+lpString1]  +
call sub_1005BD2  +
lea eax [eax+eax+3F8h] +
push eax  +
call sub_1005E42  +
mov [ebp+var_10] eax +
cmp eax ebx +
jz loc_1002B73  +
push [ebp+lpString1]  +
mov ecx [ebp+arg_20] +
push [ebp+var_8]  +
push dword ptr [ecx]  +
push offset aLdLdS  +
push eax  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+var_10]  +
call sub_100284D  +
add esp 18h +
cmp eax ebx +
jl loc_1002B98  +
mov eax ds:_iob +
push [ebp+var_10]  +
add eax 20h +
push eax  +
call sub_1006596  +
lea eax [ebp+var_10] +
push eax  +
call sub_10061A3  +
cmp [ebp+arg_1C] 1 +
jnz loc_1002B1A  +
mov eax [ebp+arg_28] +
cmp [eax] ebx +
jnz loc_1002B1A  +
push ebx  +
push 1  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_1005BF3  +
test eax eax +
jnz loc_1002B1A  +
cmp [ebp+arg_30] ebx +
jnz loc_1002BC5  +
mov eax [ebp+arg_20] +
mov ecx [ebp+arg_2C] +
mov [eax] ebx +
mov eax [ebp+var_8] +
mov [ecx] eax +
mov ecx [ebp+arg_24] +
xor eax eax +
inc eax  +
mov [ecx] eax +
mov ecx [ebp+arg_28] +
mov [ebp+var_8] ebx +
mov [ecx] eax +
mov eax [ebp+arg_20] +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov eax [eax] +
mov [ebp+var_14] ecx +
cmp eax ecx +
jnz loc_1002B47  +
mov ecx [ebp+arg_8] +
mov edx [ebp+var_8] +
cmp edx [ecx] +
jnz loc_1002B47  +
cmp [ebp+arg_1C] 1 +
jnz loc_1002B47  +
mov ecx [ebp+arg_24] +
cmp dword ptr [ecx] 1 +
jz loc_1002C26  +
cmp eax [ebp+var_14] +
jnz loc_1002B60  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
cmp ecx [eax] +
jnz loc_1002B60  +
cmp [ebp+arg_18] 1 +
jz loc_1002C3D  +
inc [ebp+var_8]  +
cmp [esi] bx +
jnz loc_10029CE  +
xor esi esi +
jmp loc_1002C64  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 38h  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_10059A3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
lea eax [ebp+var_10] +
push eax  +
call sub_10061A3  +
jmp loc_1002B86  +
mov edx [ebp+arg_20] +
mov eax [edx] +
mov ecx [ebp+arg_4] +
add [ecx] eax +
mov eax [ebp+arg_8] +
mov esi [ebp+var_8] +
add [eax] esi +
or dword ptr [edx] 0FFFFFFFFh +
mov edx [eax] +
mov esi [ebp+arg_2C] +
mov [esi] edx +
mov esi [ebp+arg_28] +
xor edx edx +
inc edx  +
mov [eax] ebx +
mov [esi] edx +
mov esi [ebp+arg_24] +
mov [esi] edx +
cmp [ecx] ebx +
jl loc_1002B86  +
cmp [eax] ebx +
jl loc_1002B86  +
push ebx  +
push ebx  +
push [ebp+arg_34]  +
call ds:fseek  +
add esp 0Ch +
test eax eax +
jz loc_1002B6C  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
jmp loc_1002B8F  +
mov esi [ebp+lpMem] +
push esi  +
call sub_1005EEB  +
mov ecx esi +
cmp eax ebx +
jz loc_1002C52  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002C35  +
jmp loc_1002C52  +
mov esi [ebp+lpMem] +
push esi  +
call sub_1005EEB  +
mov ecx esi +
cmp eax ebx +
jz loc_1002C52  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002C4C  +
push esi  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+lpString1]  +
push esi  +
call sub_1006510  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
mov eax esi +
jmp loc_1002B91  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5F8h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword ptr [ebp+arg_4] +
mov edx 5F4h +
lea eax [ebp+var_5F8] +
mov byte ptr [eax] 0 +
inc eax  +
dec edx  +
jnz loc_1002C9C  +
mov eax [ebp+arg_0] +
mov edx 1393h +
cmp eax edx +
jg loc_1002D9B  +
jz loc_1002D91  +
cmp eax 6 +
jg loc_1002D36  +
jz loc_1002D2C  +
cmp eax 80040150h +
jz loc_1002D22  +
cmp eax 80040151h +
jz loc_1002D18  +
cmp eax 80040152h +
jz loc_1002D0E  +
test eax eax +
jz loc_1002E90  +
cmp eax 2 +
jz loc_1002D04  +
cmp eax 3 +
jz loc_1002CFA  +
cmp eax 5 +
jnz loc_1002E77  +
push 1F8h  +
jmp loc_1002E7C  +
push 1F7h  +
jmp loc_1002E7C  +
push 1F6h  +
jmp loc_1002E7C  +
push 201h  +
jmp loc_1002E7C  +
push 200h  +
jmp loc_1002E7C  +
push 1FFh  +
jmp loc_1002E7C  +
push 1F9h  +
jmp loc_1002E7C  +
sub eax 8 +
jz loc_1002D87  +
dec eax  +
dec eax  +
jz loc_1002D7D  +
dec eax  +
dec eax  +
jz loc_1002D73  +
dec eax  +
jz loc_1002D69  +
dec eax  +
dec eax  +
jz loc_1002D5F  +
sub eax 1383h +
jnz loc_1002E77  +
push 202h  +
jmp loc_1002E7C  +
push 1FEh  +
jmp loc_1002E7C  +
push 1FDh  +
jmp loc_1002E7C  +
push 1FCh  +
jmp loc_1002E7C  +
push 1FBh  +
jmp loc_1002E7C  +
push 1FAh  +
jmp loc_1002E7C  +
push 203h  +
jmp loc_1002E7C  +
add eax 0FFFFEC6Ch +
cmp eax 1Eh +
ja loc_1002E77  +
movzx eax ds:byte_1002EDD[eax] +
jmp ds:off_1002EA1[eax*4]  +
push ecx  +
push 204h  +
call sub_1007722  +
push eax  +
lea eax [ebp+var_5F8] +
push 2FAh  +
push eax  +
call sub_100284D  +
add esp 10h +
test eax eax +
jge loc_1002E05  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_10059A3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
xor eax eax +
inc eax  +
jmp loc_1002E92  +
lea eax [ebp+var_5F8] +
jmp loc_1002E81  +
push 205h  +
jmp loc_1002E7C  +
push 206h  +
jmp loc_1002E7C  +
push ecx  +
push 207h  +
jmp loc_1002DBD  +
push ecx  +
push 208h  +
jmp loc_1002DBD  +
push 209h  +
jmp loc_1002E7C  +
push ecx  +
push 21Eh  +
jmp loc_1002DBD  +
push ecx  +
push 20Ah  +
jmp loc_1002DBD  +
push ecx  +
push 20Bh  +
jmp loc_1002DBD  +
push 20Ch  +
jmp loc_1002E7C  +
push 20Dh  +
jmp loc_1002E7C  +
push 20Eh  +
jmp loc_1002E7C  +
push 20Fh  +
jmp loc_1002E7C  +
push ecx  +
push 210h  +
jmp loc_1002DBD  +
push 211h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1005311  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
push esi  +
push [ebp+lpString]  +
mov [ebp+phkResult] esi +
mov [ebp+hKey] esi +
mov [ebp+lpMem] esi +
call sub_1005BD2  +
test eax eax +
jz loc_1002F83  +
push esi  +
push [ebp+lpString]  +
call sub_1005BD2  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1005E42  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_1002F57  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
xor eax eax +
inc eax  +
jmp loc_100319F  +
push eax  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push offset asc_100133C  +
push [ebp+lpMem]  +
call sub_1006510  +
push [ebp+lpMem]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push [ebp+lpMem]  +
call sub_1006553  +
mov eax [ebp+arg_10] +
sub eax esi +
push edi  +
jz loc_1003094  +
dec eax  +
jz loc_1002FA2  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
xor eax eax +
jmp loc_100319E  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
push [ebp+lpMem]  +
call ds:RegConnectRegistryW  +
cmp eax esi +
jz loc_1002FC4  +
push esi  +
push eax  +
call sub_1002C79  +
jmp loc_100315C  +
lea eax [ebp+phkResult] +
push eax  +
push 20006h  +
push esi  +
push offset SubKey  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
push esi  +
cmp eax esi +
jnz loc_100306B  +
push [ebp+lpData]  +
call sub_1005BD2  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
cmp eax esi +
jz loc_1003048  +
push [ebp+lpValueName]  +
push eax  +
call sub_1002C79  +
push [ebp+hKey]  +
mov edi ds:RegCloseKey +
call edi  +
mov esi 10001h +
test eax eax +
jz loc_1003035  +
mov eax ds:_iob +
push esi  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+phkResult]  +
call edi  +
test eax eax +
jz loc_100315C  +
push esi  +
jmp loc_100314E  +
mov edi ds:RegCloseKey +
cmp [ebp+phkResult] esi +
jz loc_1003058  +
push [ebp+phkResult]  +
call edi  +
cmp [ebp+hKey] esi +
jz loc_100315F  +
push [ebp+hKey]  +
call edi  +
jmp loc_100315F  +
push eax  +
call sub_1002C79  +
mov edi ds:RegCloseKey +
cmp [ebp+phkResult] esi +
jz loc_1003081  +
push [ebp+phkResult]  +
call edi  +
cmp [ebp+hKey] esi +
jz loc_100315C  +
push [ebp+hKey]  +
call edi  +
jmp loc_100315C  +
lea eax [ebp+hKey] +
push eax  +
push 80000001h  +
push [ebp+lpMem]  +
call ds:RegConnectRegistryW  +
cmp eax esi +
jz loc_10030B6  +
push esi  +
push eax  +
call sub_1002C79  +
jmp loc_1003192  +
lea eax [ebp+phkResult] +
push eax  +
push 20006h  +
push esi  +
push offset aEnvironment  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
push esi  +
cmp eax esi +
jnz loc_100316C  +
push [ebp+lpData]  +
call sub_1005BD2  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
cmp eax esi +
jz loc_1003131  +
push esi  +
push eax  +
call sub_1002C79  +
push [ebp+hKey]  +
mov edi ds:RegCloseKey +
call edi  +
mov esi 10001h +
test eax eax +
jz loc_1003125  +
mov eax ds:_iob +
push esi  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+phkResult]  +
call edi  +
test eax eax +
jz loc_1003192  +
push esi  +
jmp loc_1003184  +
push [ebp+hKey]  +
mov edi ds:RegCloseKey +
call edi  +
test eax eax +
jnz loc_100317F  +
push [ebp+phkResult]  +
call edi  +
test eax eax +
jz loc_100315F  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
xor esi esi +
inc esi  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
mov eax esi +
jmp loc_100319E  +
push eax  +
call sub_1002C79  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
test eax eax +
jz loc_1003192  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 838h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+lpSubKey] eax +
mov eax [ebp+arg_8] +
mov [ebp+lpString2] eax +
mov eax [ebp+arg_14] +
mov [ebp+lpString] eax +
mov eax [ebp+arg_18] +
push ebx  +
xor ebx ebx +
mov [ebp+var_838] eax +
mov eax [ebp+arg_1C] +
push esi  +
mov esi [ebp+lpString1] +
push edi  +
mov edi [ebp+arg_C] +
mov [ebp+var_830] eax +
mov [ebp+var_82C] ebx +
mov [ebp+phkResult] ebx +
mov [ebp+cbData] ebx +
mov [ebp+Type] ebx +
mov [ebp+hKey] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_818] ebx +
mov ecx 802h +
lea eax [ebp+var_808] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100322B  +
push ebx  +
push 1  +
push offset aHkey_local_mac  +
push esi  +
call sub_1005BF3  +
test eax eax +
jz loc_1003255  +
push ebx  +
push 1  +
push offset aHklm  +
push esi  +
call sub_1005BF3  +
test eax eax +
jnz loc_100325F  +
mov [ebp+var_82C] 1 +
push ebx  +
push 1  +
push offset aHkey_current_u  +
push esi  +
call sub_1005BF3  +
test eax eax +
jz loc_1003283  +
push ebx  +
push 1  +
push offset aHkcu  +
push esi  +
call sub_1005BF3  +
test eax eax +
jnz loc_100328D  +
mov [ebp+var_82C] 2 +
mov esi [ebp+lpString] +
push ebx  +
push esi  +
call sub_1005BD2  +
test eax eax +
jz loc_100332D  +
push ebx  +
push esi  +
call sub_1005BD2  +
lea eax [eax+eax+14h] +
push eax  +
call sub_1005E42  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_10032D5  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
jmp loc_1003A90  +
push esi  +
call sub_10093F9  +
push [ebp+lpMem]  +
test eax eax +
jnz loc_1003319  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push offset asc_100133C  +
push [ebp+lpMem]  +
call sub_1006510  +
push [ebp+lpMem]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1006553  +
jmp loc_100332D  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpMem]  +
call sub_1006510  +
push ebx  +
push [ebp+lpString2]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1003343  +
mov [ebp+lpString2] ebx +
mov eax [ebp+var_82C] +
sub eax ebx +
jz loc_1003A85  +
dec eax  +
jz loc_10037E2  +
dec eax  +
jnz loc_100378A  +
lea eax [ebp+hKey] +
push eax  +
push 80000001h  +
push [ebp+lpMem]  +
call ds:RegConnectRegistryW  +
cmp eax ebx +
jz loc_1003393  +
push ebx  +
push eax  +
call sub_1002C79  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
jmp loc_1003A90  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jnz loc_10037A3  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpString2]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_10035C6  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
test eax eax +
jz loc_1003410  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push ebx  +
push [ebp+lpString2]  +
call sub_1005BD2  +
push ebx  +
push [ebp+lpSubKey]  +
mov esi eax +
call sub_1005BD2  +
lea esi [esi+eax+64h] +
lea eax [esi+esi] +
push eax  +
call sub_1005E42  +
mov [ebp+var_818] eax +
cmp eax ebx +
jnz loc_100346F  +
mov eax ds:_iob +
mov esi 10001h +
push esi  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
test eax eax +
jz loc_1003A90  +
push esi  +
jmp loc_10032C2  +
cmp [ebp+lpSubKey] ebx +
jz loc_10034AD  +
push ebx  +
push [ebp+lpSubKey]  +
call sub_1005BD2  +
test eax eax +
jz loc_10034AD  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+var_818]  +
call sub_1006510  +
push esi  +
push [ebp+lpString2]  +
push [ebp+var_818]  +
call sub_1006553  +
jmp loc_10034ED  +
push ebx  +
push 1  +
push [ebp+lpString2]  +
push offset aHkcu  +
call sub_1005BF3  +
test eax eax +
jz loc_10034ED  +
push ebx  +
push 1  +
push [ebp+lpString2]  +
push offset aHkey_current_u  +
call sub_1005BF3  +
test eax eax +
jz loc_10034ED  +
push esi  +
push [ebp+lpString2]  +
push [ebp+var_818]  +
call sub_1006510  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push [ebp+var_818]  +
mov esi offset dword_1001240 +
push [ebp+hKey]  +
mov [ebp+lpString2] esi +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jnz loc_100360E  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push esi  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_10035BA  +
cmp eax 0A1h +
jz loc_1003552  +
cmp eax 2 +
jz loc_1003552  +
push ebx  +
push eax  +
call sub_1002C79  +
jmp loc_100356B  +
push 1F7h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push [ebp+hKey]  +
mov esi ds:RegCloseKey +
call esi  +
test eax eax +
jz loc_1003590  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+phkResult]  +
call esi  +
test eax eax +
jz loc_10035AF  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
lea eax [ebp+var_818] +
jmp loc_1003388  +
lea eax [ebp+var_818] +
push eax  +
call sub_10061A3  +
mov eax [ebp+cbData] +
cmp eax 0FEh +
jbe loc_100364B  +
add eax eax +
push eax  +
push edi  +
call sub_100621E  +
test eax eax +
jnz loc_100364B  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+hKey]  +
mov esi ds:RegCloseKey +
call esi  +
push [ebp+phkResult]  +
call esi  +
jmp loc_1003A90  +
cmp eax 0A1h +
jz loc_1003621  +
cmp eax 2 +
jz loc_1003621  +
push 1F6h  +
jmp loc_1003626  +
push 1F7h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_1003598  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpString2]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_10036DF  +
cmp eax 0A1h +
jz loc_1003687  +
cmp eax 2 +
jz loc_1003687  +
push ebx  +
push eax  +
call sub_1002C79  +
jmp loc_10036A0  +
push 1F7h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push [ebp+hKey]  +
mov esi ds:RegCloseKey +
call esi  +
test eax eax +
jz loc_10036C5  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+phkResult]  +
call esi  +
test eax eax +
jz loc_1003A90  +
push 10001h  +
jmp loc_10032C2  +
push ebx  +
push dword ptr [edi]  +
call sub_1005BD2  +
mov esi eax +
cmp esi 400h +
jbe loc_1003731  +
push 401h  +
push dword ptr [edi]  +
lea eax [ebp+var_808] +
push eax  +
call sub_1006510  +
mov ecx [ebp+cbData] +
mov eax [edi] +
cmp ecx ebx +
jz loc_1003716  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003710  +
push esi  +
lea eax [ebp+var_808] +
push eax  +
push dword ptr [edi]  +
call sub_1006510  +
mov eax [ebp+var_830] +
mov dword ptr [eax] 1 +
cmp [ebp+Type] 4 +
jnz loc_1003755  +
mov eax [edi] +
jmp loc_1003A5E  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_10059A3  +
jmp loc_10032BD  +
push [ebp+hKey]  +
mov esi ds:RegCloseKey +
call esi  +
test eax eax +
jz loc_100377A  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+phkResult]  +
call esi  +
test eax eax +
jnz loc_10036D5  +
mov eax [ebp+cbData] +
mov ecx [ebp+var_838] +
mov [ecx] eax +
mov eax [ebp+Type] +
jmp loc_1003A93  +
cmp eax 0A1h +
jz loc_10037B8  +
cmp eax 2 +
jz loc_10037B8  +
push ebx  +
push eax  +
call sub_1002C79  +
jmp loc_10037D1  +
push 1F7h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_10036CD  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
push [ebp+lpMem]  +
call ds:RegConnectRegistryW  +
cmp eax ebx +
jnz loc_100337B  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jnz loc_10037A3  +
mov eax [ebp+arg_10] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpString2]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
test eax eax +
jz loc_10039AC  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
test eax eax +
jz loc_1003888  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push ebx  +
push [ebp+lpString2]  +
call sub_1005BD2  +
push ebx  +
push [ebp+lpSubKey]  +
mov esi eax +
call sub_1005BD2  +
lea esi [esi+eax+64h] +
lea eax [esi+esi] +
push eax  +
call sub_1005E42  +
mov [ebp+var_818] eax +
cmp eax ebx +
jz loc_1003441  +
cmp [ebp+lpSubKey] ebx +
jz loc_100390C  +
push ebx  +
push [ebp+lpSubKey]  +
call sub_1005BD2  +
test eax eax +
jz loc_100390C  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+var_818]  +
call sub_1006510  +
push esi  +
push offset asc_100134C  +
push [ebp+var_818]  +
call sub_1006553  +
push esi  +
push [ebp+lpString2]  +
push [ebp+var_818]  +
call sub_1006553  +
jmp loc_100394C  +
push ebx  +
push 1  +
push [ebp+lpString2]  +
push offset aHklm  +
call sub_1005BF3  +
test eax eax +
jz loc_100394C  +
push ebx  +
push 1  +
push [ebp+lpString2]  +
push offset aHkey_local_mac  +
call sub_1005BF3  +
test eax eax +
jz loc_100394C  +
push esi  +
push [ebp+lpString2]  +
push [ebp+var_818]  +
call sub_1006510  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push [ebp+var_818]  +
mov esi offset dword_1001240 +
push [ebp+hKey]  +
mov [ebp+lpString2] esi +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jnz loc_100360E  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push esi  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jnz loc_100353D  +
lea eax [ebp+var_818] +
push eax  +
call sub_10061A3  +
mov eax [ebp+cbData] +
cmp eax 0FEh +
jbe loc_10039CA  +
add eax eax +
push eax  +
push edi  +
call sub_100621E  +
test eax eax +
jz loc_10035E0  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpString2]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jnz loc_1003672  +
push ebx  +
push dword ptr [edi]  +
call sub_1005BD2  +
mov esi eax +
cmp esi 400h +
jbe loc_1003A47  +
push 401h  +
push dword ptr [edi]  +
lea eax [ebp+var_808] +
push eax  +
call sub_1006510  +
mov ecx [ebp+cbData] +
mov eax [edi] +
cmp ecx ebx +
jz loc_1003A2C  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003A26  +
push esi  +
lea eax [ebp+var_808] +
push eax  +
push dword ptr [edi]  +
call sub_1006510  +
mov eax [ebp+var_830] +
mov dword ptr [eax] 1 +
cmp [ebp+Type] 4 +
jnz loc_1003755  +
mov eax [edi] +
cmp eax ebx +
jz loc_1003755  +
push dword ptr [eax]  +
push offset aU  +
push eax  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push dword ptr [edi]  +
call sub_100284D  +
add esp 10h +
cmp eax ebx +
jl loc_1003741  +
jmp loc_1003755  +
push ebx  +
push 13B0h  +
call sub_1002C79  +
push 63h  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+lpString] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
add ebx 0FEh +
lea eax [ebx+ebx] +
push eax  +
call sub_1005E42  +
mov [ebp+lpString] eax +
test eax eax +
jnz loc_1003AE8  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
xor eax eax +
inc eax  +
jmp loc_1003CCA  +
mov eax [ebp+arg_0] +
mov eax [eax] +
dec eax  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [esi] +
jz loc_1003C34  +
dec eax  +
jz loc_1003C34  +
dec eax  +
dec eax  +
jz loc_1003BE5  +
sub eax 3 +
jz loc_1003B70  +
push 0  +
push 13B1h  +
call sub_1002C79  +
jmp loc_1003CA7  +
push 0  +
push edi  +
call sub_1005BD2  +
test eax eax +
jz loc_1003B74  +
cmp [ebp+lpString] 0 +
jz loc_1003B4C  +
push 0  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1003B4C  +
push ebx  +
push edi  +
push [ebp+lpString]  +
call sub_1006510  +
jmp loc_1003B64  +
push ebx  +
push offset asc_10013C0  +
push [ebp+lpString]  +
call sub_1006553  +
push ebx  +
push edi  +
push [ebp+lpString]  +
call sub_1006553  +
push 0  +
push edi  +
call sub_1005BD2  +
lea edi [edi+eax*2+2] +
test edi edi +
jnz loc_1003B20  +
lea eax [ebx+ebx] +
push eax  +
push esi  +
call sub_100621E  +
test eax eax +
jnz loc_1003B8C  +
push 10001h  +
jmp loc_1003C99  +
push 0  +
push [ebp+lpString]  +
call sub_1005BD2  +
cmp eax 400h +
jbe loc_1003BB7  +
push 401h  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1006510  +
mov eax [ebp+arg_C] +
mov dword ptr [eax] 1 +
jmp loc_1003BCC  +
push [ebp+arg_8]  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1006510  +
mov eax [ebp+arg_C] +
cmp dword ptr [eax] 1 +
jnz loc_1003BE5  +
push 221h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push 25Ah  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1006596  +
push dword ptr [esi]  +
push offset aS_  +
push ebx  +
push [ebp+lpString]  +
call sub_100284D  +
add esp 10h +
test eax eax +
jl loc_1003C85  +
mov eax ds:_iob +
push [ebp+lpString]  +
add eax 20h +
push eax  +
call sub_1006596  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 1 +
jmp loc_1003CBD  +
mov eax [ebp+arg_C] +
cmp dword ptr [eax] 1 +
jnz loc_1003C55  +
push 221h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push 25Ah  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1006596  +
push dword ptr [esi]  +
push offset aS_  +
push ebx  +
push [ebp+lpString]  +
call sub_100284D  +
add esp 10h +
test eax eax +
jge loc_1003CAC  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_10059A3  +
push 20001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
xor eax eax +
inc eax  +
jmp loc_1003CC8  +
mov eax ds:_iob +
push [ebp+lpString]  +
add eax 20h +
push eax  +
call sub_1006596  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2724h +
call __alloca_probe  +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+var_2720] eax +
mov eax [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
and [ebp+lpString] ebx +
mov [ebp+var_2724] eax +
mov [ebp+var_271C] edi +
mov ecx 2710h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003D1E  +
mov esi edi +
cmp [edi] bx +
jnz loc_1003D3E  +
push ecx  +
push 1396h  +
call sub_1002C79  +
xor eax eax +
inc eax  +
jmp loc_1003F54  +
movzx eax word ptr [esi] +
cmp ax 2Ch +
jnz loc_1003D54  +
inc esi  +
inc esi  +
test ebx ebx +
jnz loc_1003E47  +
inc ebx  +
jmp loc_1003D75  +
cmp ax 2Dh +
jz loc_1003D73  +
cmp ax 2Bh +
jz loc_1003D73  +
push 4  +
push eax  +
call ds:iswctype  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003E47  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1003D3E  +
movzx eax word ptr [edi] +
mov esi edi +
cmp ax 2Ch +
jz loc_1003D99  +
movzx eax ax +
test ax ax +
jz loc_1003D99  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
cmp ax 2Ch +
jnz loc_1003D89  +
mov eax esi +
sub eax edi +
sar eax 1 +
add eax eax +
push eax  +
lea eax [ebp+String] +
push edi  +
push eax  +
call memcpy  +
mov ebx ds:_wtoi +
lea eax [ebp+String] +
push eax  +
call ebx  +
add esp 10h +
test eax eax +
jnz loc_1003DCF  +
cmp [ebp+String] 30h +
jnz loc_1003E47  +
cmp [ebp+String] 30h +
lea eax [ebp+String] +
jnz loc_1003DF0  +
lea ecx [eax+2] +
cmp word ptr [ecx] 0 +
jz loc_1003DF0  +
mov eax ecx +
cmp word ptr [eax] 30h +
jz loc_1003DDF  +
mov edi 1388h +
push edi  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1006510  +
push 0  +
lea eax [ebp+String] +
push eax  +
call sub_1005BD2  +
cmp eax 1 +
jbe loc_1003E52  +
push 0  +
lea eax [ebp-2712h] +
push eax  +
call sub_1005BD2  +
cmp eax 7 +
jbe loc_1003E52  +
push 25Fh  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
jmp loc_1003D36  +
push edi  +
push 1397h  +
jmp loc_1003D31  +
push 0Ah  +
lea eax [ebp+lpString] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:wcstol  +
mov ecx [ebp+var_2720] +
add esp 0Ch +
push 0  +
push [ebp+lpString]  +
mov [ecx] eax +
call sub_1005BD2  +
test eax eax +
jz loc_1003E8C  +
push [ebp+var_271C]  +
jmp loc_1003E48  +
push 0  +
push esi  +
call sub_1005BD2  +
add eax eax +
push eax  +
add esi 2 +
lea eax [ebp+String] +
push esi  +
push eax  +
call memcpy  +
lea eax [ebp+String] +
xor esi esi +
push eax  +
mov [ebp+lpString] esi +
call ebx  +
add esp 10h +
test eax eax +
jnz loc_1003EC9  +
cmp [ebp+String] 30h +
jnz loc_1003E84  +
cmp [ebp+String] 30h +
lea eax [ebp+String] +
jnz loc_1003EE9  +
lea ecx [eax+2] +
cmp [ecx] si +
jz loc_1003EE9  +
mov eax ecx +
cmp word ptr [eax] 30h +
jz loc_1003ED9  +
push edi  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1006510  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_1005BD2  +
cmp eax 1 +
jbe loc_1003F1F  +
push esi  +
lea eax [ebp-2712h] +
push eax  +
call sub_1005BD2  +
cmp eax 7 +
ja loc_1003E29  +
push 0Ah  +
lea eax [ebp+lpString] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:wcstol  +
mov ecx [ebp+var_2724] +
add esp 0Ch +
push esi  +
push [ebp+lpString]  +
mov [ecx] eax +
call sub_1005BD2  +
test eax eax +
jnz loc_1003E84  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 18DCh +
call __alloca_probe  +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
or eax 0FFFFFFFFh +
xor edi edi +
inc edi  +
push ebx  +
mov [ebp+lpString2] ebx +
mov [ebp+var_187C] ebx +
mov [ebp+lpString1] ebx +
mov [ebp+lpUserName] ebx +
mov [ebp+lpPassword] ebx +
mov [ebp+lpString] ebx +
mov [ebp+lpValueName] ebx +
mov [ebp+var_1874] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+lpData] ebx +
mov [ebp+var_18A4] ebx +
mov [ebp+var_18BC] ebx +
mov [ebp+var_18C8] ebx +
mov [ebp+var_18B4] ebx +
mov [ebp+var_1864] edi +
mov [ebp+var_18AC] ebx +
mov [ebp+var_18C0] ebx +
mov [ebp+var_18D0] ebx +
mov [ebp+var_18A8] ebx +
mov [ebp+var_18B0] ebx +
mov [ebp+var_18A0] ebx +
mov [ebp+var_1888] eax +
mov [ebp+var_188C] eax +
mov [ebp+var_1878] ebx +
mov [ebp+var_1898] ebx +
mov [ebp+var_1880] eax +
mov [ebp+var_1890] eax +
mov [ebp+var_1884] ebx +
mov [ebp+var_18C4] ebx +
call ds:SetThreadUILanguage  +
push ebx  +
push ebx  +
push edi  +
push ebx  +
call ds:HeapSetInformation  +
mov ecx 3E8h +
mov edx ecx +
lea eax [ebp+var_1464] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_100405D  +
lea eax [ebp+var_184C] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004069  +
mov ecx 21Ah +
lea eax [ebp+var_41C] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100407A  +
mov edx 1FCh +
mov ecx edx +
lea eax [ebp+String1] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100408D  +
mov ecx edx +
lea eax [ebp+var_A60] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100409B  +
mov ecx edx +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10040A9  +
mov ecx edx +
lea eax [ebp+var_E58] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10040B7  +
mov edi 224h +
mov ecx edi +
lea eax [ebp+var_107C] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10040CA  +
mov ecx 448h +
lea eax [ebp+FileName] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10040DB  +
lea eax [ebp+var_A60] +
push eax  +
lea eax [ebp+lpString2] +
push eax  +
lea eax [ebp+var_18C0] +
push eax  +
lea eax [ebp+var_E58] +
push eax  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+var_18AC] +
push eax  +
lea eax [ebp+lpValueName] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
lea eax [ebp+var_18D0] +
push eax  +
lea eax [ebp+lpPassword] +
push eax  +
lea eax [ebp+lpUserName] +
push eax  +
lea eax [ebp+lpString1] +
push eax  +
lea eax [ebp+var_18A8] +
push eax  +
push esi  +
push [ebp+arg_0]  +
call sub_100197E  +
cmp eax 1 +
jnz loc_10041B2  +
xor ebx ebx +
inc ebx  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10061A3  +
call sub_100642A  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn   +
xor esi esi +
inc esi  +
cmp [ebp+var_18A8] esi +
jnz loc_10041C4  +
call sub_1001684  +
jmp loc_1004154  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005BD2  +
test eax eax +
jz loc_10041DB  +
mov [ebp+var_1880] esi +
push ebx  +
lea eax [ebp+var_E58] +
push eax  +
call sub_1005BD2  +
test eax eax +
jz loc_10041F2  +
mov [ebp+var_1890] esi +
cmp [ebp+var_18C0] esi +
jnz loc_1004200  +
mov [ebp+var_1878] esi +
cmp [ebp+var_18D0] esi +
jnz loc_100420E  +
mov [ebp+var_1898] esi +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jz loc_100422A  +
mov [ebp+var_1870] 2 +
jmp loc_1004271  +
push ebx  +
lea eax [ebp+String1] +
push eax  +
call sub_1005BD2  +
test eax eax +
jz loc_100431D  +
cmp [ebp+String1] 5Ch +
mov [ebp+var_1870] 3 +
jnz loc_1004271  +
cmp word ptr [ebp-1FEh] 5Ch +
jnz loc_1004271  +
push edi  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006510  +
push [ebp+lpString1]  +
call sub_10093F9  +
test eax eax +
mov eax [ebp+lpString1] +
jz loc_1004289  +
add eax 4 +
push eax  +
call sub_100986B  +
push ebx  +
push [ebp+lpString1]  +
mov [ebp+var_189C] eax +
call sub_1005BD2  +
test eax eax +
jz loc_1004378  +
cmp [ebp+var_189C] ebx +
jnz loc_1004378  +
push [ebp+var_18AC]  +
push [ebp+lpPassword]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+lpUserName]  +
push [ebp+lpString1]  +
call sub_1009C5F  +
test eax eax +
jnz loc_1004328  +
call sub_10059A3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+lpString1]  +
push esi  +
call sub_1002831  +
mov ebx esi +
jmp loc_1004154  +
mov [ebp+var_1870] esi +
jmp loc_1004271  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_1004353  +
cmp eax 50010001h +
jz loc_100434B  +
cmp eax 0A0010001h +
jz loc_1004353  +
mov [ebp+var_1864] esi +
jmp loc_100436C  +
mov [ebp+var_1864] ebx +
jmp loc_100436C  +
mov eax ds:_iob +
push 10004h  +
add eax 40h +
push eax  +
mov [ebp+var_1864] ebx +
call sub_100773A  +
lea eax [ebp+lpPassword] +
push eax  +
call sub_10061A3  +
cmp [ebp+var_189C] esi +
jnz loc_10043A9  +
push ebx  +
push [ebp+lpUserName]  +
call sub_1005BD2  +
test eax eax +
jz loc_10043A9  +
push 25Ch  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
mov eax [ebp+var_1870] +
dec eax  +
jz loc_1004E5B  +
dec eax  +
jz loc_1004C93  +
dec eax  +
jnz loc_1004FA5  +
mov ecx 21Ah +
lea eax [ebp+var_41C] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10043CF  +
mov esi 10Dh +
push esi  +
push offset asc_10013E4  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1006510  +
cmp [ebp+var_1878] ebx +
jz loc_1004405  +
mov eax 98967Fh +
mov [ebp+var_1888] eax +
mov [ebp+var_188C] eax +
push ebx  +
lea eax [ebp+String1] +
push eax  +
call sub_1005BD2  +
test eax eax +
jnz loc_1004426  +
push ebx  +
push 13A7h  +
call sub_1002C79  +
jmp loc_1004E8F  +
cmp [ebp+var_1880] 0FFFFFFFFh +
jz loc_100445A  +
cmp [ebp+var_1878] ebx +
jnz loc_100445A  +
lea eax [ebp+var_188C] +
push eax  +
lea eax [ebp+var_1888] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1003CD4  +
cmp eax 1 +
jz loc_1004E8F  +
cmp [ebp+var_1890] 0FFFFFFFFh +
jz loc_100448E  +
cmp [ebp+var_1878] ebx +
jnz loc_100448E  +
lea eax [ebp+var_188C] +
push eax  +
lea eax [ebp+var_1888] +
push eax  +
lea eax [ebp+var_E58] +
push eax  +
call sub_1003CD4  +
cmp eax 1 +
jz loc_1004E8F  +
push ebx  +
lea eax [ebp+var_A60] +
push eax  +
call sub_1005BD2  +
test eax eax +
jbe loc_10044EF  +
push ebx  +
lea eax [ebp+var_A60] +
push eax  +
call sub_1005BD2  +
mov edi eax +
push ebx  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1005BD2  +
add edi eax +
lea eax [ebp+var_A60] +
cmp edi 10h +
jb loc_10044D3  +
push eax  +
push 139Ch  +
jmp loc_100441C  +
push esi  +
push eax  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1006553  +
push esi  +
push ebx  +
lea eax [ebp+var_41C] +
push eax  +
call sub_1006553  +
push 112h  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+var_107C] +
push eax  +
call sub_1006510  +
mov esi offset asc_10013E0 +
lea eax [ebp+var_107C] +
push esi  +
push eax  +
call ds:wcstok  +
mov edi eax +
pop ecx  +
pop ecx  +
cmp edi ebx +
jnz loc_1004533  +
lea eax [ebp+String1] +
push eax  +
push 13A6h  +
jmp loc_100441C  +
push ebx  +
push [ebp+lpString1]  +
call sub_1005BD2  +
test eax eax +
jz loc_1004653  +
cmp [ebp+var_189C] ebx +
jnz loc_1004653  +
lea eax [ebp+String1] +
push esi  +
push eax  +
call ds:wcsstr  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi ebx +
jz loc_10045F1  +
push 1  +
push 24h  +
push esi  +
call ds:_wcsnset  +
add esp 0Ch +
lea eax [ebp+String1] +
push eax  +
call sub_10093F9  +
test eax eax +
push 224h  +
lea eax [ebp+FileName] +
jnz loc_10045E2  +
push offset asc_100133C  +
push eax  +
call sub_1006510  +
push 224h  +
push [ebp+lpString1]  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
push 224h  +
push offset asc_100134C  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
push 224h  +
push edi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
jmp loc_10045E9  +
push edi  +
push eax  +
call sub_1006510  +
push 224h  +
push esi  +
jmp loc_1004645  +
lea eax [ebp+String1] +
push eax  +
call sub_10093F9  +
test eax eax +
jnz loc_1004653  +
mov esi 224h +
push esi  +
push offset asc_100133C  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006510  +
push esi  +
push [ebp+lpString1]  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
push esi  +
push offset asc_100134C  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
push esi  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006553  +
jmp loc_100466B  +
push 224h  +
lea eax [ebp+String1] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1006510  +
lea eax [ebp+FileName] +
push offset word_1001254  +
push eax  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [ebp+var_1870] eax +
cmp eax ebx +
jz loc_1004522  +
push ebx  +
push 80h  +
push 3  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push 20000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100471E  +
push 10001h  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10061A3  +
mov ebx edi +
jmp loc_100419C  +
push ebx  +
push [ebp+hObject]  +
call ds:GetFileSize  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_10046B7  +
lea eax [esi+esi+14h] +
push eax  +
call sub_1005E42  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1004750  +
push 20001h  +
jmp loc_10046BC  +
mov edx [ebp+var_1888] +
cmp edx ebx +
mov ecx [ebp+var_188C] +
mov dword ptr [ebp+var_18D8] edx +
mov [ebp+var_18D4] ecx +
jl loc_1004770  +
cmp ecx ebx +
jge loc_1004776  +
mov [ebp+var_18A0] edi +
cmp [ebp+var_1880] edi +
jnz loc_10047A4  +
cmp [ebp+var_18A0] edi +
jnz loc_10047A4  +
push 227h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
jmp loc_10046CA  +
push [ebp+var_1870]  +
cmp esi ebx +
jz loc_1004855  +
lea edi [esi+1] +
mov esi ds:fgetws +
push edi  +
push eax  +
jmp loc_1004843  +
push [ebp+var_1870]  +
lea eax [ebp+var_18B4] +
push [ebp+var_18A0]  +
push eax  +
lea eax [ebp+var_18BC] +
push eax  +
lea eax [ebp+var_18C4] +
push eax  +
lea eax [ebp+var_1884] +
push eax  +
push [ebp+var_1890]  +
lea eax [ebp+var_41C] +
push [ebp+var_1880]  +
push [ebp+var_1878]  +
push [ebp+lpString2]  +
push eax  +
lea eax [ebp+var_188C] +
push eax  +
lea eax [ebp+var_1888] +
push eax  +
push [ebp+lpMem]  +
call sub_10028AC  +
mov [ebp+var_18A4] eax +
cmp eax ebx +
jnz loc_10048EB  +
push [ebp+var_1870]  +
inc [ebp+var_1884]  +
push edi  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_10047C2  +
jmp loc_10048EB  +
mov esi ds:fgetws +
push 9  +
push eax  +
jmp loc_10048DE  +
push [ebp+var_1870]  +
lea eax [ebp+var_18B4] +
push [ebp+var_18A0]  +
push eax  +
lea eax [ebp+var_18BC] +
push eax  +
lea eax [ebp+var_18C4] +
push eax  +
lea eax [ebp+var_1884] +
push eax  +
push [ebp+var_1890]  +
lea eax [ebp+var_41C] +
push [ebp+var_1880]  +
push [ebp+var_1878]  +
push [ebp+lpString2]  +
push eax  +
lea eax [ebp+var_188C] +
push eax  +
lea eax [ebp+var_1888] +
push eax  +
push [ebp+lpMem]  +
call sub_10028AC  +
mov [ebp+var_18A4] eax +
cmp eax ebx +
jnz loc_10048EB  +
push [ebp+var_1870]  +
inc [ebp+var_1884]  +
push 9  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_1004860  +
push [ebp+var_1870]  +
call ds:fclose  +
pop ecx  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov esi [ebp+var_18A4] +
cmp esi ebx +
jnz loc_1004B40  +
call ds:GetLastError  +
cmp eax 3E7h +
jnz loc_100493B  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpMem] +
jmp loc_1004F8B  +
cmp [ebp+var_1878] ebx +
jz loc_10049D9  +
mov eax ds:_iob +
push offset String  +
add eax 20h +
push eax  +
call sub_1006596  +
push ebx  +
push ebx  +
call sub_1002C79  +
cmp [ebp+lpMem] ebx +
jz loc_1004975  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
cmp [ebp+lpString] ebx +
jz loc_1004989  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
cmp [ebp+lpValueName] ebx +
jz loc_10049B1  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
cmp [ebp+lpValueName] ebx +
jz loc_10049B1  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
jmp loc_1004196  +
cmp [ebp+lpString2] ebx +
jz loc_1004A58  +
push [ebp+lpString2]  +
call sub_1005EEB  +
mov ecx [ebp+lpString2] +
cmp eax ebx +
jz loc_10049FC  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_10049F6  +
push [ebp+var_18D4]  +
push dword ptr [ebp+var_18D8]  +
push offset aLdLd  +
push [ebp+lpString2]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push [ebp+lpString2]  +
call sub_100284D  +
add esp 14h +
cmp eax ebx +
jge loc_1004ACA  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call sub_10059A3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
jmp loc_100491F  +
push 3F8h  +
call sub_1005E42  +
mov [ebp+lpString2] eax +
cmp eax ebx +
jnz loc_1004AB3  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
jmp loc_1004EBE  +
push [ebp+var_18D4]  +
push dword ptr [ebp+var_18D8]  +
push offset aLdLd  +
push eax  +
jmp loc_1004A13  +
xor ebx ebx +
inc ebx  +
cmp [ebp+var_1890] ebx +
jnz loc_1004AE2  +
push [ebp+lpString2]  +
push 1394h  +
jmp loc_1004AF5  +
cmp [ebp+var_1880] ebx +
jnz loc_1004AFA  +
push [ebp+lpString2]  +
push 139Ah  +
call sub_1002C79  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
jmp loc_10049C2  +
push 80Ch  +
call sub_1005E42  +
mov [ebp+lpData] eax +
cmp eax ebx +
jz loc_1004A40  +
push ebx  +
push esi  +
call sub_1005BD2  +
cmp eax 400h +
jbe loc_1004C2D  +
push 401h  +
push esi  +
push [ebp+lpData]  +
call sub_1006510  +
push 221h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
push 25Ah  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1006596  +
mov eax ds:_iob +
push [ebp+lpData]  +
add eax 20h +
push eax  +
call sub_1006596  +
mov eax ds:_iob +
push offset a_  +
add eax 20h +
push eax  +
call sub_1006596  +
push [ebp+lpString1]  +
call sub_10093F9  +
test eax eax +
mov eax [ebp+lpString1] +
jz loc_1004BEC  +
add eax 4 +
push [ebp+var_1898]  +
push eax  +
push 1  +
push [ebp+lpData]  +
push [ebp+lpValueName]  +
call sub_1002F01  +
cmp eax 1 +
jnz loc_1004C4C  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
jmp loc_1004F85  +
push [ebp+lpData]  +
call sub_1005EEB  +
shr eax 1 +
push eax  +
push esi  +
push [ebp+lpData]  +
call sub_1006510  +
jmp loc_1004B94  +
lea eax [ebp+lpData] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
jmp loc_1004F9C  +
mov edi 1FCh +
push edi  +
call sub_1005E42  +
mov [ebp+var_1874] eax +
cmp eax ebx +
jnz loc_1004D1B  +
mov eax ds:_iob +
push 20001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+var_1874] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10061A3  +
mov ebx esi +
jmp loc_100419C  +
lea eax [ebp+var_1464] +
push eax  +
lea eax [ebp+var_187C] +
push eax  +
lea eax [ebp+var_184C] +
push eax  +
push [ebp+lpString]  +
call sub_10016B1  +
cmp eax esi +
jnz loc_1004D8B  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+var_1874] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+var_187C] +
jmp loc_1004CF6  +
cmp [ebp+var_187C] ebx +
jnz loc_1004DAC  +
push 21Ah  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
lea eax [ebp+var_18B0] +
push eax  +
lea eax [ebp+var_18C8] +
push eax  +
push [ebp+lpString1]  +
lea eax [ebp+var_1874] +
push edi  +
push eax  +
lea eax [ebp+var_1464] +
push eax  +
push [ebp+var_187C]  +
lea eax [ebp+var_184C] +
push eax  +
call sub_10031A9  +
mov [ebp+dwType] eax +
cmp eax 63h +
jz loc_1004D3F  +
lea eax [ebp+var_18B0] +
push eax  +
push [ebp+var_18C8]  +
lea eax [ebp+var_1874] +
push eax  +
lea eax [ebp+dwType] +
push eax  +
call sub_1003AA9  +
cmp eax esi +
jz loc_1004D3F  +
push [ebp+lpString1]  +
call sub_10093F9  +
test eax eax +
mov eax [ebp+lpString1] +
jz loc_1004E30  +
add eax 4 +
push [ebp+var_1898]  +
push eax  +
push [ebp+dwType]  +
push [ebp+var_1874]  +
push [ebp+lpValueName]  +
call sub_1002F01  +
cmp eax esi +
jnz loc_1004FA5  +
jmp loc_1004D3F  +
push [ebp+lpString2]  +
call sub_10015F5  +
push 80Ch  +
mov esi eax +
call sub_1005E42  +
mov [ebp+lpData] eax +
cmp eax ebx +
jnz loc_1004EE4  +
mov eax ds:_iob +
push 10001h  +
add eax 40h +
push eax  +
call sub_100773A  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10061A3  +
xor ebx ebx +
inc ebx  +
jmp loc_100419C  +
push ebx  +
push [ebp+lpString2]  +
call sub_1005BD2  +
cmp eax 400h +
jbe loc_1004F28  +
push 401h  +
push [ebp+lpString2]  +
push [ebp+lpData]  +
call sub_1006510  +
push 222h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call sub_1006596  +
jmp loc_1004F3E  +
push 406h  +
push [ebp+lpString2]  +
push [ebp+lpData]  +
call sub_1006510  +
push [ebp+lpString1]  +
call sub_10093F9  +
test eax eax +
mov eax [ebp+lpString1] +
jz loc_1004F56  +
add eax 4 +
push [ebp+var_1898]  +
push eax  +
push esi  +
push [ebp+lpData]  +
push [ebp+lpValueName]  +
call sub_1002F01  +
cmp eax 1 +
jnz loc_1004F96  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+lpData] +
push eax  +
call sub_10061A3  +
jmp loc_1004EA0  +
lea eax [ebp+lpData] +
push eax  +
call sub_10061A3  +
xor esi esi +
inc esi  +
cmp [ebp+var_189C] esi +
jz loc_1004FBD  +
push ebx  +
push [ebp+lpString1]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1004FDE  +
lea eax [ebp+dwResult] +
push eax  +
push 1388h  +
push 2  +
push offset aEnvironment  +
push ebx  +
push 1Ah  +
push 0FFFFh  +
call ds:SendMessageTimeoutW  +
push 259h  +
call sub_1007722  +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_1006596  +
push [ebp+lpString1]  +
push [ebp+var_1864]  +
call sub_1002831  +
lea eax [ebp+var_1874] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpMem] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpValueName] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString2] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpString1] +
push eax  +
call sub_10061A3  +
lea eax [ebp+lpUserName] +
push eax  +
call sub_10061A3  +
call sub_100642A  +
push ebx  +
call ds:exit  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100508A  +
test eax eax +
jnz loc_100508F  +
mov ecx [esi] +
test ecx ecx +
jz loc_1005087  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100507B  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100B058 +
push offset dword_100B048  +
push dword_100B054  +
mov dword_100B048 eax +
push offset dword_100B038  +
push offset dword_100B03C  +
push offset dword_100B034  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100B044 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1005117  +
cmp eax esi +
jnz loc_100510A  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_100511A  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10050F1  +
xor esi esi +
inc esi  +
mov eax dword_100B4A8 +
cmp eax esi +
jnz loc_100512D  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1005168  +
mov eax dword_100B4A8 +
test eax eax +
jnz loc_1005162  +
mov dword_100B4A8 esi +
push offset dword_1001210  +
push offset dword_1001204  +
call sub_100506E  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005168  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1005232  +
mov dword_100B050 esi +
mov eax dword_100B4A8 +
cmp eax esi +
jnz loc_100518C  +
push offset dword_1001200  +
push offset dword_10011F8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100B4A8 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1005199  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100B4B0 ebx +
jz loc_10051BA  +
push offset dword_100B4B0  +
call sub_1005469  +
pop ecx  +
test eax eax +
jz loc_10051BA  +
push ebx  +
push 2  +
push ebx  +
call dword_100B4B0  +
push dword_100B038  +
push dword_100B03C  +
push dword_100B034  +
call sub_1003F6A  +
add esp 0Ch +
mov dword_100B04C eax +
cmp dword_100B040 ebx +
jnz loc_1005218  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100B04C eax +
xor ebx ebx +
cmp dword_100B040 ebx +
jnz loc_1005218  +
push eax  +
call ds:_exit  +
cmp dword_100B050 ebx +
jnz loc_1005226  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100B04C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100524F  +
xor eax eax +
jmp loc_100529C  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100524B  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1005289  +
cmp ecx 20Bh +
jnz loc_100524B  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100524B  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1005297  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100524B  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100B040 eax +
call sub_1005602  +
push eax  +
call ds:__set_app_type  +
or dword_100B4A0 0FFFFFFFFh +
or dword_100B4A4 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100B060 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100B05C +
mov [eax] ecx +
call sub_1005594  +
cmp dword_100B018 0 +
jnz loc_10052F5  +
push offset sub_1005594  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100557C  +
xor eax eax +
retn   +
***
call sub_1005641  +
jmp sub_10050CF  +
***
cmp ecx dword_100B004 +
jnz loc_100531C  +
retn 0  +
jmp loc_10056D7  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10053A8  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10053A8  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10053A2  +
cmp eax 19930521h +
jz loc_10053A2  +
cmp eax 19930522h +
jz loc_10053A2  +
cmp eax 1994000h +
jnz loc_10053A8  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1005368+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10053F6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10053F2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100545D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1005455  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100545F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1005445  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10053E0  +
pop ecx  +
test eax eax +
jz loc_10054C6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1005420  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10054C6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10054CF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1005311  +
push offset dword_100B004  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10055F5  +
cmp ecx 0FFFFFFFFh +
jz loc_10055F5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10055EE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10055EE  +
cmp edx 10000000h +
jnb loc_10055EE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10055EE  +
jmp loc_10055E9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1005637  +
push eax  +
call sub_100559C  +
test eax eax +
jz loc_1005637  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100562C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1005637  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100B004 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1005673  +
test eax ebx +
jz loc_1005673  +
not eax  +
mov dword_100B008 eax +
jmp loc_10056CE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10056BA  +
test dword_100B004 ebx +
jnz loc_10056BF  +
mov esi 0BB40E64Fh +
mov dword_100B004 esi +
not esi  +
mov dword_100B008 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100B168 eax +
mov dword_100B164 ecx +
mov dword_100B160 edx +
mov dword_100B15C ebx +
mov dword_100B158 esi +
mov dword_100B154 edi +
mov word_100B180 ss +
mov word_100B174 cs +
mov word_100B150 ds +
mov word_100B14C es +
mov word_100B148 fs +
mov word_100B144 gs +
pushf   +
pop dword_100B178  +
mov eax [ebp+0] +
mov dword_100B16C eax +
mov eax [ebp+4] +
mov dword_100B170 eax +
lea eax [ebp+8] +
mov dword_100B17C eax +
mov eax [ebp-320h] +
mov dword_100B0B8 10001h +
mov eax dword_100B170 +
mov dword_100B074 eax +
mov dword_100B068 0C0000409h +
mov dword_100B06C 1 +
mov eax dword_100B004 +
mov [ebp-328h] eax +
mov eax dword_100B008 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_100B388 edi +
jnz loc_1005802  +
push dword_100B390  +
call sub_10077D4  +
test eax eax +
jnz loc_10057FE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005896  +
push 42Bh  +
jmp loc_1005890  +
mov eax edi +
pop edi  +
retn   +
cmp dword_100B390 0 +
jnz loc_10057E6  +
call sub_10077F5  +
push eax  +
mov dword_100B390 eax +
call sub_10077D4  +
test eax eax +
jz loc_1005884  +
push 0  +
push offset dword_1001400  +
push dword_100B390  +
call sub_1007B17  +
test eax eax +
jnz loc_1005884  +
push 3  +
push dword_100B390  +
call sub_1007CE2  +
cmp eax edi +
jnz loc_1005884  +
push 3  +
push dword_100B390  +
call sub_1007CE2  +
cmp eax 2 +
jnz loc_1005884  +
push 3  +
push dword_100B390  +
call sub_1007CE2  +
cmp eax 3 +
jnz loc_1005884  +
push 0  +
mov dword_100B388 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1005896  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_100B388 0 +
push esi  +
jz loc_1005904  +
push 3  +
push dword_100B390  +
call sub_1007E3D  +
cmp eax [ebp+arg_0] +
jbe loc_1005904  +
push [ebp+arg_0]  +
push 3  +
push dword_100B390  +
call sub_10080D4  +
test eax eax +
jz loc_1005904  +
push [ebp+arg_0]  +
push 3  +
push dword_100B390  +
call sub_1007ED9  +
mov esi eax +
test esi esi +
jz loc_1005904  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1005904  +
mov eax [esi+0Ch] +
jmp loc_1005906  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_100B390 +
test eax eax +
jz loc_1005931  +
push eax  +
call sub_10077D4  +
test eax eax +
jz loc_1005931  +
push 0  +
push dword_100B390  +
call sub_1007EAA  +
retn   +
mov eax offset dword_1001400 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1005965  +
call esi  +
test eax eax +
jnz loc_1005961  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005998  +
call sub_10057C9  +
test eax eax +
jz loc_1005961  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_100B390  +
call sub_1007F92  +
test eax eax +
jnz loc_100598E  +
call esi  +
test eax eax +
jnz loc_1005961  +
push 8  +
jmp loc_100595B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_10057C9  +
test eax eax +
jz loc_1005A22  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_10059FC  +
cmp [ebp+hMem] edi +
jz loc_1005A14  +
push [ebp+hMem]  +
call sub_100593C  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1005A20  +
cmp [ebp+hMem] edi +
jz loc_1005A14  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1005A14  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1005A1E  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10059A3  +
test eax eax +
jz loc_1005A4C  +
call sub_1005910  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_1006596  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_100B01C +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_100B020 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_100B394 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1005311  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1005B2A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005B26  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005BA7  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1005B9B  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1005B9B  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1005BA3  +
sub edi 0 +
jz loc_1005B77  +
dec edi  +
jz loc_1005B73  +
dec edi  +
jnz loc_1005BA3  +
push 0FFFFFFF4h  +
jmp loc_1005B79  +
push 0FFFFFFF5h  +
jmp loc_1005B79  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1005BA3  +
cmp eax 0FFFFFFFFh +
jz loc_1005BA3  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1005BA5  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1005BC0  +
xor eax eax +
jmp loc_1005BC9  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1005BE1  +
xor eax eax +
jmp loc_1005BEA  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1005C31  +
cmp [ebp+lpString2] 0 +
jz loc_1005C31  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1005C17  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1005C45  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005C43  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1005C8C  +
cmp [ebp+lpString2] 0 +
jz loc_1005C8C  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1005C72  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1005CA0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005C9E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1005CFB  +
cmp [ebp+lpString2] 0 +
jz loc_1005CFB  +
mov eax [ebp+arg_C] +
xor edx edx +
cmp [ebp+arg_8] 1 +
setz dl  +
test eax eax +
jnz loc_1005CCD  +
or eax 0FFFFFFFFh +
cmp dword_100B01C 5 +
push 7Fh  +
pop ecx  +
jnz loc_1005CE7  +
cmp dword_100B020 0 +
jnz loc_1005CE7  +
mov ecx 409h +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push edx  +
push ecx  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1005D0F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005D0D  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_1005DDC  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1005DDC  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1005D47  +
cmp [eax] edi +
jnz loc_1005DDC  +
mov eax [eax] +
cmp eax edi +
jz loc_1005D55  +
cmp eax 1 +
jbe loc_1005DC3  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1005D6C  +
cmp esi edi +
jz loc_1005D6C  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1005D82  +
push edi  +
push [ebp+lpString]  +
call sub_1005BB1  +
cmp eax esi +
jle loc_1005D82  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1005DD5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005DAA  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_1005DEE  +
cmp esi edi +
jz loc_1005DEE  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_1005DEE  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1005DF0  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1005DD0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005DEE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1005E15  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005E37  +
push 57h  +
jmp loc_1005E31  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1005E37  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1005E39  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1005E68  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005EDC  +
push 57h  +
call ds:SetLastError  +
jmp loc_1005EDC  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1005EDC  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1005EDE  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1005EC3  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1005EC3  +
push 570h  +
call ds:SetLastError  +
call sub_10059A3  +
jmp loc_1005ED5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005ED5  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1005F0D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005F08  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1005F2F  +
push [ebp+lpMem]  +
call sub_1005DFC  +
test eax eax +
jz loc_1005F08  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1005F08  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1005F68  +
cmp [ebp+arg_4] eax +
jz loc_1005F64  +
mov dl [ebx] +
test dl dl +
jz loc_1005F64  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1005F4C  +
test esi esi +
jnz loc_1005F6F  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1005F7B  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1005FBC  +
cmp [ebp+arg_4] eax +
jz loc_1005FB8  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1005FB8  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1005F9B  +
test esi esi +
jnz loc_1005FC4  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1005FD2  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1006007  +
cmp eax esi +
ja loc_1006007  +
jz loc_100600C  +
jmp loc_1006014  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100601D  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1006045  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006088  +
push 57h  +
jmp loc_1006082  +
push 0  +
push esi  +
call sub_1005BD2  +
test eax eax +
jz loc_100607D  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_100607D  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_100606D  +
call ds:StrChrIW  +
jmp loc_1006073  +
call ds:StrChrW  +
test eax eax +
jz loc_100607D  +
sub eax esi +
sar eax 1 +
jmp loc_100608B  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_10060FA  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_10060FA  +
push esi  +
push edi  +
call sub_1005BD2  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_10060F3  +
push esi  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_10060F3  +
push esi  +
push ebx  +
call sub_1005BD2  +
cmp [ebp+arg_C] eax +
jnb loc_10060F3  +
cmp [ebp+arg_0] esi +
jbe loc_10060F3  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_100602A  +
cmp eax 0FFFFFFFFh +
jnz loc_100610F  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_10060D7  +
push 490h  +
jmp loc_1006106  +
call ds:GetLastError  +
test eax eax +
jnz loc_100610C  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1006182  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1006182  +
push 0  +
push edi  +
call sub_1005BD2  +
push 0  +
push ebx  +
mov esi eax +
call sub_1005BD2  +
test eax eax +
jz loc_1006175  +
test esi esi +
jz loc_1006175  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1006175  +
sub esi ecx +
cmp esi eax +
jb loc_1006175  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_100616B  +
call ds:StrStrIW  +
jmp loc_1006171  +
call ds:StrStrW  +
test eax eax +
jnz loc_100617C  +
push 490h  +
jmp loc_100618E  +
sub eax edi +
sar eax 1 +
jmp loc_1006197  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006194  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10061C6  +
call ds:GetLastError  +
test eax eax +
jnz loc_10061C2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006214  +
cmp dword ptr [esi] 0 +
jnz loc_10061D0  +
xor eax eax +
inc eax  +
jmp loc_1006214  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_10061F4  +
push dword ptr [esi]  +
call sub_1005EEB  +
cmp eax 0FFFFFFFFh +
jnz loc_10061F8  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006213  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_10062E3  +
mov eax [esi] +
cmp eax edi +
jz loc_10062E3  +
cmp [ebp+dwBytes] edi +
jnz loc_1006251  +
push esi  +
call sub_10061A3  +
jmp loc_10062F7  +
push eax  +
call sub_1005DFC  +
test eax eax +
jnz loc_1006262  +
mov [esi] edi +
jmp loc_10062F5  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10062F5  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_10062A0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006297  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10062F5  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10062F7  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1006285  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1006285  +
push 570h  +
call ds:SetLastError  +
call sub_10059A3  +
jmp loc_1006297  +
call ds:GetLastError  +
test eax eax +
jnz loc_10062F5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100631A  +
cmp edx 7FFFFFFFh +
jbe loc_100631F  +
mov eax 80070057h +
test eax eax +
jl loc_1006335  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1005F38  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1006354  +
cmp edx 7FFFFFFFh +
jbe loc_1006359  +
mov eax 80070057h +
test eax eax +
jl loc_100636F  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1005F87  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1006391  +
cmp edx ebx +
jbe loc_1006396  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10063CD  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10063BA  +
cmp [eax] cx +
jz loc_10063B6  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10063AC  +
cmp esi ecx +
jnz loc_10063C3  +
mov [ebp+arg_4] 80070057h +
jmp loc_10063C7  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_10063CF  +
xor ecx ecx +
test eax eax +
jl loc_10063E3  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1005F87  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1006403  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1006408  +
mov eax 80070057h +
test eax eax +
jl loc_1006421  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1005FDE  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_100B390  +
call sub_10077D4  +
cmp eax 1 +
jnz loc_10064B4  +
push edi  +
push 3  +
push dword_100B390  +
call sub_1007E3D  +
mov edi eax +
test edi edi +
jz loc_10064A9  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_100B390  +
call sub_10080D4  +
cmp eax 10000h +
jnz loc_10064A2  +
push esi  +
push 3  +
push dword_100B390  +
call sub_1007ED9  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_10064A2  +
add eax 0Ch +
push eax  +
call sub_10061A3  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
push esi  +
push 3  +
push dword_100B390  +
call sub_1007E06  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1006458  +
pop esi  +
push offset dword_100B390  +
call sub_100786A  +
pop edi  +
cmp dword_100B38C 1 +
jnz loc_10064C3  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1006500  +
cmp [ebp+arg_4] 0 +
jz loc_1006500  +
cmp [ebp+arg_8] 0 +
jle loc_1006500  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1006304  +
test eax eax +
jge loc_1006506  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1006502  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1006543  +
cmp [ebp+arg_4] 0 +
jz loc_1006543  +
cmp [ebp+arg_8] 0 +
jle loc_1006543  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100633E  +
test eax eax +
jge loc_1006549  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1006545  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1006586  +
cmp [ebp+arg_4] 0 +
jz loc_1006586  +
cmp [ebp+arg_8] 0 +
jle loc_1006586  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1006378  +
test eax eax +
jge loc_100658C  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1006588  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_10067DB  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_10067DB  +
push [ebp+hConsoleOutput]  +
call sub_1005B03  +
cmp eax 1 +
jnz loc_10066C8  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_10065DF  +
push 0FFFFFFF5h  +
jmp loc_10065EF  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_10066B0  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1005BD2  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_1006623  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1006688  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_10066AC  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1005BD2  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1006688  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_100665A  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1006690  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1006690  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_100664A  +
xor eax eax +
inc eax  +
jmp loc_10067EF  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1005A2A  +
call sub_100642A  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_1006696  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067ED  +
push 42Bh  +
jmp loc_10067E7  +
push edi  +
push ebx  +
call sub_1005BD2  +
push 100h  +
push edi  +
mov esi offset unk_100B3A0 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1006688  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_1006708  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1006765  +
cmp eax ebx +
jbe loc_1006773  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_1006745  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1006748  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_1006711  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006765  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1006699  +
cmp eax [ebp+cchWideChar] +
jnb loc_100677B  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_1006765  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_10066F3  +
jmp loc_1006688  +
call ds:GetLastError  +
test eax eax +
jnz loc_10067ED  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov dword ptr [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_100685A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006853  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006A55  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_1006A12  +
cmp edi 0Fh +
jz loc_100688A  +
cmp edi 3 +
jz loc_100688A  +
cmp edi 0FFFFFFFFh +
jz loc_100688A  +
mov [ebp+var_40] 1 +
jmp loc_10068A6  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_1006A12  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_1006918  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_1006A12  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_1006A16  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_1005D18  +
movzx eax [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_1006930  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_1006A06  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_1006A16  +
cmp ax 8 +
jnz loc_10069BE  +
cmp [ebp+var_28] 0 +
jz loc_10068C4  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100284D  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100284D  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100284D  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_10068C4  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_10069D6  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_1001418  +
jmp loc_10069FA  +
cmp ax 0Ah +
jz loc_10068C4  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset String2  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_10068C4  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_1006A54  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001410  +
lea eax [ebp+var_18] +
push eax  +
call sub_1006510  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1005311  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1006A82  +
cmp [ebp+arg_8] 0 +
jnz loc_1006A82  +
xor eax eax +
jmp loc_1006BD6  +
call sub_10057C9  +
test eax eax +
jz loc_1006A7B  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_100B390  +
call sub_1007E3D  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1006ACF  +
push esi  +
push dword_100B390  +
call sub_1007E71  +
test eax eax +
jz loc_1006B9A  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1007D5D  +
cmp eax 0FFFFFFFFh +
jz loc_1006B9A  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_10080D4  +
mov edi offset aBuffer +
test eax eax +
jz loc_1006B1D  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_1007ED9  +
mov esi eax +
test esi esi +
jz loc_1006B9A  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006B9A  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1006B5C  +
mov edi [ebp+arg_8] +
jmp loc_1006B67  +
push 10h  +
call sub_1005E42  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1006B9A  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_10064CD  +
push esi  +
push ebx  +
push 3  +
push dword_100B390  +
call sub_100803B  +
test eax eax +
jnz loc_1006AFC  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10061A3  +
jmp loc_1006B9A  +
push 0  +
push ebx  +
call sub_1005BD2  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1006B7D  +
cmp edi 100h +
jbe loc_1006B94  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1006B94  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1006B9E  +
call sub_1005E42  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1006B9A  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1006BA9  +
xor eax eax +
jmp loc_1006BD3  +
lea eax [esi+0Ch] +
push eax  +
call sub_100621E  +
jmp loc_1006B8D  +
test ebx ebx +
jz loc_1006BB9  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_1006510  +
jmp loc_1006BD0  +
cmp [ebp+arg_C] 1 +
jnz loc_1006BD0  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1001424 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1006CDC  +
push eax  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_1006CDC  +
cmp [ebp+lpStart] 0 +
jz loc_1006C3B  +
push 0  +
push [ebp+lpStart]  +
call sub_1005BD2  +
test eax eax +
jnz loc_1006C41  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1006C50  +
cmp edi 1 +
jnz loc_1006C72  +
cmp word ptr [ebx] 0 +
jz loc_1006C6F  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1006C6F  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1006C56  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1006C7C  +
cmp edi 2 +
jnz loc_1006CBE  +
cmp edi 2 +
jnz loc_1006C83  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1006CBE  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1006CA4  +
cmp [ebp+var_14] 0 +
jnz loc_1006CA8  +
mov [ebp+var_14] esi +
jmp loc_1006CA8  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1006C8B  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1006CBE  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1006CD8  +
push 0  +
push [ebp+var_18]  +
call sub_1005BD2  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_1006510  +
mov eax ebx +
jmp loc_1006CE1  +
mov eax offset dword_1001400 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1006D1A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D16  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006D81  +
cmp [ebp+arg_0] esi +
jnz loc_1006D2C  +
push [ebp+arg_4]  +
call sub_100593C  +
xor eax eax +
inc eax  +
jmp loc_1006D81  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_1006A6A  +
mov edi eax +
test edi edi +
jz loc_1006D6C  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10063EE  +
cmp eax 8007007Ah +
jz loc_1006D2D  +
test eax eax +
jge loc_1006D7A  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006D80  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D68  +
push 8  +
jmp loc_1006D62  +
push edi  +
call sub_100593C  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_1006A6A  +
mov ebx eax +
test ebx ebx +
jnz loc_1006DB1  +
push 8  +
pop eax  +
jmp loc_1006DF3  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_1006A6A  +
mov esi eax +
test esi esi +
jz loc_1006DAC  +
push esi  +
call sub_1005EEB  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_1005EEB  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_1006DF3  +
push ebx  +
call sub_100593C  +
test eax eax +
jz loc_1006DAC  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1006E29  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006E1F  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001400 +
jmp loc_1006F36  +
call sub_10057C9  +
test eax eax +
jz loc_1006E1F  +
push esi  +
push 1  +
push dword_100B390  +
call sub_1007E3D  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1006E86  +
push 1  +
push dword_100B390  +
call sub_1007E71  +
cmp eax ebx +
jz loc_1006E6A  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1007D5D  +
cmp eax 0FFFFFFFFh +
jnz loc_1006E86  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006E7C  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001400 +
jmp loc_1006F35  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_1006A6A  +
mov edi eax +
cmp edi ebx +
jz loc_1006EFA  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1006EDD  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1006F0C  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1006F0C  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1006E8C  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_100B390  +
call sub_1008075  +
test eax eax +
jnz loc_1006F13  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006F0C  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001400 +
jmp loc_1006F34  +
cmp [ebp+lpString] ebx +
jz loc_1006F24  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_100B390  +
call sub_1007F10  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_10070E5  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
test eax eax +
jz loc_10070E5  +
call sub_10057C9  +
test eax eax +
jz loc_10070F7  +
call sub_10057C9  +
test eax eax +
jz loc_100709F  +
push 3  +
pop esi  +
push esi  +
push dword_100B390  +
call sub_1007E3D  +
mov edi eax +
cmp edi ebx +
ja loc_1006FC2  +
push esi  +
push dword_100B390  +
call sub_1007E71  +
cmp eax ebx +
jz loc_100709F  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1007D5D  +
cmp eax 0FFFFFFFFh +
jz loc_100709F  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_10080D4  +
mov edi offset aBuffer +
test eax eax +
jz loc_100703A  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_1007ED9  +
mov esi eax +
cmp esi ebx +
jz loc_100709F  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100709F  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1007026  +
cmp edi 100h +
jbe loc_1007087  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1007087  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1007077  +
call sub_1005E42  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1007082  +
push 10h  +
call sub_1005E42  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100709F  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10064CD  +
push esi  +
push ebx  +
push 3  +
push dword_100B390  +
call sub_100803B  +
test eax eax +
jnz loc_1006FEF  +
lea eax [ebp+var_8] +
push eax  +
call sub_10061A3  +
jmp loc_100709F  +
lea eax [esi+0Ch] +
push eax  +
call sub_100621E  +
test eax eax +
jz loc_100709F  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100709F  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1006510  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_10070AD  +
call ds:GetLastError  +
test eax eax +
jnz loc_10070F7  +
push 8  +
jmp loc_10070F1  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10070E5  +
cmp [ebp+var_4] ebx +
jz loc_10070E0  +
push ebx  +
push [ebp+var_4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10070E5  +
fld  qword ptr [ebp-0Ch] +
jmp loc_10070F9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10070F7  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1006F40  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10072EE  +
cmp [ebp+lpString] ebx +
jz loc_10072EE  +
call sub_10057C9  +
test eax eax +
jz loc_1007300  +
call sub_10057C9  +
test eax eax +
jz loc_1007284  +
push 3  +
pop esi  +
push esi  +
push dword_100B390  +
call sub_1007E3D  +
mov edi eax +
cmp edi ebx +
ja loc_10071A7  +
push esi  +
push dword_100B390  +
call sub_1007E71  +
cmp eax ebx +
jz loc_1007284  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1007D5D  +
cmp eax 0FFFFFFFFh +
jz loc_1007284  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_10080D4  +
mov edi offset aBuffer +
test eax eax +
jz loc_100721F  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_1007ED9  +
mov esi eax +
cmp esi ebx +
jz loc_1007284  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1007284  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100720B  +
cmp edi 100h +
jbe loc_100726C  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100726C  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100725C  +
call sub_1005E42  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1007267  +
push 10h  +
call sub_1005E42  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1007284  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10064CD  +
push esi  +
push ebx  +
push 3  +
push dword_100B390  +
call sub_100803B  +
test eax eax +
jnz loc_10071D4  +
lea eax [ebp+var_8] +
push eax  +
call sub_10061A3  +
jmp loc_1007284  +
lea eax [esi+0Ch] +
push eax  +
call sub_100621E  +
test eax eax +
jz loc_1007284  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1007284  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1006510  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1007292  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007300  +
push 8  +
jmp loc_10072FA  +
push 3  +
push ebx  +
push esi  +
call sub_1006BDF  +
push ebx  +
push esi  +
call sub_1005BD2  +
test eax eax +
jz loc_10072EE  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10072C6  +
call ds:wcstol  +
jmp loc_10072CC  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10072EE  +
cmp [ebp+var_4] ebx +
jz loc_10072EA  +
push ebx  +
push [ebp+var_4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10072EE  +
mov eax esi +
jmp loc_1007302  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007300  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10074D1  +
cmp [ebp+lpString] ebx +
jz loc_10074D1  +
call sub_10057C9  +
test eax eax +
jz loc_100745D  +
push 3  +
pop esi  +
push esi  +
push dword_100B390  +
call sub_1007E3D  +
mov edi eax +
cmp edi ebx +
ja loc_1007380  +
push esi  +
push dword_100B390  +
call sub_1007E71  +
cmp eax ebx +
jz loc_100745D  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1007D5D  +
cmp eax 0FFFFFFFFh +
jz loc_100745D  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_10080D4  +
mov edi offset aBuffer +
test eax eax +
jz loc_10073F8  +
push ebx  +
push esi  +
push dword_100B390  +
call sub_1007ED9  +
mov esi eax +
cmp esi ebx +
jz loc_100745D  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100745D  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10073E4  +
cmp edi 100h +
jbe loc_1007445  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1007445  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1007435  +
call sub_1005E42  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1007440  +
push 10h  +
call sub_1005E42  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100745D  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10064CD  +
push esi  +
push ebx  +
push 3  +
push dword_100B390  +
call sub_100803B  +
test eax eax +
jnz loc_10073AD  +
lea eax [ebp+var_8] +
push eax  +
call sub_10061A3  +
jmp loc_100745D  +
lea eax [esi+0Ch] +
push eax  +
call sub_100621E  +
test eax eax +
jz loc_100745D  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100745D  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1006510  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100746B  +
call ds:GetLastError  +
test eax eax +
jnz loc_10074E3  +
push 8  +
jmp loc_10074DD  +
push 3  +
push ebx  +
push esi  +
call sub_1006BDF  +
push ebx  +
push esi  +
call sub_1005BD2  +
test eax eax +
jz loc_10074E3  +
cmp [ebp+arg_8] ebx +
jnz loc_100748A  +
cmp word ptr [esi] 2Dh +
jz loc_10074E3  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10074AA  +
call ds:wcstol  +
jmp loc_10074B0  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10074E3  +
cmp [ebp+var_4] ebx +
jz loc_10074CC  +
push ebx  +
push [ebp+var_4]  +
call sub_1005BD2  +
test eax eax +
jnz loc_10074E3  +
xor eax eax +
inc eax  +
jmp loc_10074E5  +
call ds:GetLastError  +
test eax eax +
jnz loc_10074E3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10075AF  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10075AF  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1005BD2  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_1006A6A  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1007540  +
call ds:GetLastError  +
test eax eax +
jnz loc_10075C1  +
push 8  +
jmp loc_10075BB  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1005BD2  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_1006A6A  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100752E  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_100284D  +
add esp 10h +
test eax eax +
jge loc_100757F  +
movzx eax ax +
push eax  +
jmp loc_10075BB  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_100284D  +
add esp 10h +
test eax eax +
jl loc_1007579  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100611B  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10075C3  +
call ds:GetLastError  +
test eax eax +
jnz loc_10075C1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_10076D6  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_10076D6  +
cmp [ebp+arg_4] ebx +
jnz loc_1007601  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_1006596  +
jmp loc_10076EA  +
cmp [ebp+arg_8] ebx +
jnz loc_1007696  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_1006A6A  +
mov edi eax +
test edi edi +
jz loc_1007683  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1007673  +
call ds:GetLastError  +
test eax eax +
jz loc_1007691  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_10076E8  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100760E  +
push edi  +
jmp loc_10075F4  +
call ds:GetLastError  +
test eax eax +
jnz loc_10076E8  +
push 8  +
jmp loc_10076E2  +
xor eax eax +
inc eax  +
jmp loc_10076EA  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_1006A6A  +
mov edi eax +
test edi edi +
jz loc_1007683  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_10063EE  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_1007696  +
test eax eax +
jge loc_100767D  +
movzx eax ax +
push eax  +
jmp loc_10076E2  +
call ds:GetLastError  +
test eax eax +
jnz loc_10076E8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100B39C  +
mov eax dword_100B39C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1006DFC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_10076F3  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10077B6  +
test [ebp+arg_4] 0F0000h +
jz loc_10077B6  +
test [ebp+arg_4] 10000h +
jz loc_100775E  +
call sub_10059A3  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_1007770  +
push 1389h  +
jmp loc_100778F  +
test al 4 +
jz loc_100777B  +
push 138Ah  +
jmp loc_100778F  +
test al 2 +
jz loc_1007786  +
push 138Ch  +
jmp loc_100778F  +
test al 8 +
jz loc_10077A5  +
push 138Bh  +
call sub_1007722  +
push eax  +
push offset aS_1  +
push ebx  +
push ebx  +
push esi  +
call sub_10075CF  +
add esp 14h +
call sub_1005910  +
push eax  +
push esi  +
call sub_1006596  +
mov eax ebx +
pop ebx  +
jmp loc_10077CA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10077C8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10077EA  +
cmp dword ptr [eax] 9 +
jnz loc_10077EA  +
xor eax eax +
inc eax  +
jmp loc_10077EC  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_1007805  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10077D4  +
test eax eax +
jz loc_1007860  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1007854  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1007961  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10061A3  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_1007838  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_10077D4  +
test eax eax +
jz loc_100788B  +
push ecx  +
call sub_100781A  +
push esi  +
call sub_10061A3  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10077D4  +
test eax eax +
jz loc_10078AA  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_10077D4  +
test eax eax +
jnz loc_10078C9  +
xor eax eax +
jmp loc_10078EE  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_10078C5  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_10078E4  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_10078DC  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_10078ED  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10077D4  +
test eax eax +
jnz loc_100790F  +
or eax 0FFFFFFFFh +
jmp loc_1007957  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100790A  +
push 14h  +
call sub_1005E42  +
test eax eax +
jz loc_100790A  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100794A  +
mov [esi+8] eax +
jmp loc_1007950  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_10079D5  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_10079A0  +
jz loc_10079BC  +
cmp eax 20000h +
jz loc_10079BC  +
cmp eax 30000h +
jz loc_10079BC  +
cmp eax 40000h +
jz loc_10079BC  +
cmp eax 50000h +
jz loc_10079BC  +
cmp eax 60000h +
jz loc_10079BC  +
jmp loc_10079D5  +
cmp eax 80000h +
jz loc_10079C7  +
cmp eax 90000h +
jz loc_10079BC  +
cmp eax 0A0000h +
jz loc_10079BC  +
cmp eax 0B0000h +
jnz loc_10079D5  +
add edx 0Ch +
push edx  +
call sub_10061A3  +
jmp loc_10079D5  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100786A  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_10077D4  +
test eax eax +
jnz loc_10079F9  +
or eax 0FFFFFFFFh +
jmp loc_1007B08  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1007B03  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1007AF3  +
mov ecx 70000h +
cmp eax ecx +
ja loc_1007A87  +
jz loc_1007A75  +
cmp eax 20000h +
jz loc_1007A59  +
cmp eax 30000h +
jz loc_1007AEA  +
cmp eax 40000h +
jz loc_1007AEA  +
cmp eax 60000h +
jnz loc_1007AF3  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_1007A7C  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1005BF3  +
test eax eax +
jz loc_1007B0D  +
mov edx [ebp+arg_0] +
jmp loc_1007AF3  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1007AF3  +
mov eax edx +
jmp loc_1007B06  +
cmp eax 90000h +
jz loc_1007AEA  +
cmp eax 0A0000h +
jz loc_1007AAD  +
cmp eax 0B0000h +
jnz loc_1007AF3  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1007AF3  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1007AF1  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1007AF3  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1007AF3  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1007AF3  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1007AF3  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1007AF3  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1007AF1  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_1007A83  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_1007A0F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1007B06  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10077D4  +
test eax eax +
jnz loc_1007B32  +
or eax 0FFFFFFFFh +
jmp locret_1007B85  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1007B45  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1005E42  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007B80  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_1006510  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz loc_1007B83  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10077D4  +
test eax eax +
jz loc_1007BD7  +
push 4  +
call sub_1005E42  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007BD7  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz locret_1007BDA  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10077D4  +
test eax eax +
jz loc_1007C2C  +
push 4  +
call sub_1005E42  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007C2C  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz locret_1007C2F  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10077D4  +
test eax eax +
jz loc_1007C81  +
push 4  +
call sub_1005E42  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007C81  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz locret_1007C84  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_10077D4  +
test eax eax +
jz loc_1007CD6  +
push 8  +
call sub_1005E42  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007CD6  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz locret_1007CD9  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10077D4  +
test eax eax +
jz loc_1007D50  +
call sub_10077F5  +
push eax  +
mov [ebp+var_4] eax +
call sub_10077D4  +
test eax eax +
jz loc_1007D50  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1007D2A  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jz loc_1007D2A  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1007D14  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1007D47  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jnz loc_1007D53  +
lea eax [ebp+var_4] +
push eax  +
call sub_100786A  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_10077D4  +
test eax eax +
jnz loc_1007D73  +
or eax 0FFFFFFFFh +
jmp loc_1007D97  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1007D94  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_10078F7  +
cmp eax 0FFFFFFFFh +
jz loc_1007D94  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1007D7B  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_10078B3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1007DFC  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1007DD9  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_1007DDF  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1007DE7  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1007961  +
lea eax [ebp+var_4] +
push eax  +
call sub_10061A3  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1007E32  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007E32  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007DA0  +
jmp loc_1007E34  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1007E66  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007E66  +
push dword ptr [eax+0Ch]  +
call sub_1007895  +
jmp loc_1007E68  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jnz loc_1007E8B  +
xor eax eax +
jmp loc_1007EA1  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_1007E9E  +
cmp ecx 80000h +
jnz loc_1007E87  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jnz loc_1007EC4  +
xor eax eax +
jmp loc_1007ED0  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1007EC0  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1007F05  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007F05  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007E71  +
jmp loc_1007F07  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1007F3C  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1007F3C  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007EAA  +
jmp loc_1007F3E  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1007F58  +
xor eax eax +
jmp loc_1007F88  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1007F54  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1007F7B  +
test ecx ecx +
jz loc_1007F7F  +
jmp loc_1007F54  +
test ecx ecx +
jnz loc_1007F82  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
mov esi eax +
cmp esi edi +
jnz loc_1007FB1  +
xor eax eax +
jmp loc_1008030  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_1007FC2  +
cmp eax edi +
jnz loc_1008017  +
cmp [ebp+arg_C] edi +
jnz loc_1007FD3  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_1007FF7  +
lea edi [eax+eax] +
push edi  +
call sub_1005E42  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1008017  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100801E  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100801E  +
lea edi [esi+0Ch] +
push edi  +
call sub_10061A3  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1005E42  +
mov [edi] eax +
test eax eax +
jnz loc_100801B  +
xor eax eax +
jmp loc_100802F  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_1006510  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_100806A  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100806A  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007F47  +
jmp loc_100806C  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_10080A7  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10080A7  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1007F92  +
jmp loc_10080A9  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_10080CB  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10078B3  +
test eax eax +
jz loc_1008100  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008100  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_10080B2  +
jmp loc_1008102  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_10079DE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_10079DE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_10079DE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_10079DE  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_10079DE  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_10081E9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10081E1  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_10081E1  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001440  +
call sub_100602A  +
cmp eax 0FFFFFFFFh +
jz loc_10081E1  +
xor eax eax +
inc eax  +
jmp loc_10081E3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_1008237  +
movzx eax ds:byte_1008246[eax] +
jmp ds:off_100823E[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_1008239  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_10082DA  +
cmp [ebp+arg_4] ebx +
jnz loc_10082DA  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_100602A  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1008294  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1005BD2  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_1006A6A  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_10082B7  +
call ds:GetLastError  +
test eax eax +
jnz loc_10082E8  +
push 8  +
jmp loc_10082E6  +
lea ecx [esi+1] +
push ecx  +
push offset asc_10013F0  +
push eax  +
call sub_1006510  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_1006553  +
mov eax [ebp+arg_4] +
jmp loc_10082EA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10082E8  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_100832F  +
cmp ecx edi +
jnz loc_100832F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008328  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1008592  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100831A  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_100858E  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1008598  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1005C4E  +
test eax eax +
jnz loc_100844A  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_100844A  +
cmp [edi+4] ebx +
jnz loc_100844A  +
cmp [edi+8] ebx +
jnz loc_100844A  +
cmp [edi+0Ch] ebx +
jnz loc_100844A  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_10083C5  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_100844A  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_100844A  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_10083DA  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_100844A  +
mov edx eax +
or edx ecx +
jz loc_10083EB  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_100844A  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1008400  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_100844A  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_100840C  +
xor eax eax +
or ebx eax +
jnz loc_100844A  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_100844A  +
jmp ds:off_10085BA[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_1008463  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100844A  +
cmp [edi-10h] ecx +
jnz loc_100844A  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1008482  +
cmp eax 2 +
jnb loc_1008482  +
call ds:GetLastError  +
test eax eax +
jnz loc_100845C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008591  +
mov eax [edi-10h] +
test eax eax +
jz loc_100844A  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1008482  +
push dword ptr [eax]  +
call sub_10077D4  +
test eax eax +
jz loc_100844A  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1008492  +
cmp [edi-14h] ecx +
jz loc_100844A  +
xor eax eax +
or ebx eax +
jnz loc_1008578  +
cmp dword ptr [edi-24h] 1 +
jnz loc_100844A  +
and esi 20h +
or esi eax +
jnz loc_100844A  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_1008578  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_100844A  +
jmp loc_1008578  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_10085B0  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_100844A  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_100844A  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_100844A  +
mov edx [edi-10h] +
test edx edx +
jz loc_100844A  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_1008520  +
push dword ptr [edx]  +
call sub_10077D4  +
test eax eax +
jz loc_100844A  +
jmp loc_1008578  +
cmp dword ptr [edi-24h] 1 +
ja loc_100844A  +
and esi 20h +
xor eax eax +
jmp loc_1008570  +
cmp dword ptr [edi-8] 0 +
jz loc_100844A  +
cmp dword ptr [edi-4] 0 +
jnz loc_1008578  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_1008578  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_100844A  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_100844A  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_100844A  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_1008349  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_100845C  +
push 42Bh  +
jmp loc_1008456  +
push 78h  +
jmp loc_1008456  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_100862D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008621  +
push 57h  +
call ebx  +
call sub_10059A3  +
xor eax eax +
jmp loc_1008B91  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1008B7B  +
cmp eax edi +
jz loc_1008B7B  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_10086CC  +
cmp [ebp+lpString2] 0 +
jnz loc_10086CC  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_10086CC  +
cmp dword ptr [ebp+lpString] edx +
jz loc_10086AA  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10086AA  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1007722  +
push eax  +
push 2  +
call sub_1006CF7  +
add esp 10h +
jmp loc_10086C0  +
call ds:GetLastError  +
test eax eax +
jnz loc_10086BB  +
push 42Bh  +
call ebx  +
call sub_10059A3  +
push 800401E4h  +
call ebx  +
jmp loc_1008B8E  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_10086E4  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_10086EF  +
jmp loc_1008B7B  +
cmp dword ptr [esi+24h] 0 +
jz loc_10086F5  +
cmp ecx 9 +
jz loc_10086F5  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1008B7B  +
jmp ds:off_1008B97[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1008763  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1008763  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_1006A6A  +
test eax eax +
jnz loc_1008743  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B89  +
push 8  +
call ds:SetLastError  +
jmp loc_1008B89  +
push 3  +
push offset asc_1001424  +
push eax  +
call sub_1006BDF  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B89  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_10087DE  +
test ebx ebx +
jz loc_1008B76  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10074F1  +
test eax eax +
jnz loc_10087DE  +
cmp dword ptr [ebp+lpString] eax +
jz loc_10087B5  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10087B5  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1007722  +
push eax  +
push 3  +
call sub_1006CF7  +
add esp 14h +
jmp loc_10087CE  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1007722  +
push eax  +
push 2  +
call sub_1006CF7  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1008B8E  +
test ebx ebx +
jz loc_1008B76  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1008837  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1008837  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100881D  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100881D  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_10087BE  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1007722  +
push eax  +
push 1  +
call sub_1006CF7  +
add esp 0Ch +
jmp loc_10087CE  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1008887  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_100886A  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1008197  +
cmp eax 0FFFFFFFFh +
jnz loc_1008B76  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1007B17  +
cmp eax 0FFFFFFFFh +
jnz loc_1008B76  +
jmp loc_1008728  +
cmp [ebp+var_C] ecx +
jz loc_10088C6  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_10088C6  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_10088B7  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_10088B7  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_10087BE  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1008825  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_10088F0  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1005E42  +
test eax eax +
jz loc_1008728  +
mov [esi+2Ch] eax +
jmp loc_10088F6  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_1006510  +
jmp loc_1008B76  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1008B76  +
push 0  +
push ebx  +
call sub_1005BD2  +
test eax eax +
jz loc_10089CF  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_100730E  +
test eax eax +
jz loc_10089CF  +
push 0Ah  +
push ebx  +
call sub_1007128  +
cmp [ebp+var_C] 1 +
jnz loc_1008951  +
mov dword ptr [ebp+String2] eax +
jmp loc_1008954  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_10089B9  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1008992  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100897F  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100810B  +
jmp loc_1008989  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100812E  +
cmp eax 0FFFFFFFFh +
jnz loc_1008B76  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_10089AA  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1007B8E  +
jmp loc_1008879  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1007BE3  +
jmp loc_1008879  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_10089C8  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1008B76  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_10089E1  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1008A35  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1008A03  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008A03  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_10087BE  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1008825  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1008B76  +
push ebx  +
call sub_1007105  +
test eax eax +
jnz loc_1008A6E  +
and edi 10h +
or edi eax +
jz loc_1008A3F  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1008A3F  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1008B90  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1008A61  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008A61  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_10087BE  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1008825  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1008A7F  +
call sub_1006F40  +
fstp  [ebp+var_18] +
jmp loc_1008A87  +
call sub_1006F40  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1008AFD  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1008ACE  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1008AB7  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1008151  +
jmp loc_1008AC5  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1008174  +
cmp eax 0FFFFFFFFh +
jnz loc_1008B76  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1008AEA  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1007C38  +
jmp loc_1008879  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1007C8D  +
jmp loc_1008879  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1008B0D  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_1008B76  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1008B76  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1008B90  +
cmp [ebp+lpString2] 0 +
jz loc_1008B6D  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1008B4E  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008B4E  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_10087BE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B63  +
push 42Bh  +
call ds:SetLastError  +
call sub_10059A3  +
jmp loc_10087CE  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1008B90  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008B89  +
push 57h  +
call ebx  +
call sub_10059A3  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1008C85  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1008C85  +
cmp [ebp+arg_8] edi +
jz loc_1008C85  +
push [ebp+arg_8]  +
call sub_10081BB  +
test eax eax +
jnz loc_1008C0A  +
push 490h  +
jmp loc_1008C91  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1008C00  +
add esi 20h +
jmp loc_1008C19  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_1008C66  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_1008C31  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1008C56  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1008C56  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10074F1  +
cmp eax 1 +
jz loc_1008C80  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_1008C17  +
jmp loc_1008C00  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008C77  +
push 42Bh  +
call ebx  +
call sub_10059A3  +
xor eax eax +
jmp loc_1008C96  +
mov eax [ebp+arg_4] +
jmp loc_1008C96  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008C93  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1008D7A  +
cmp [ebp+arg_4] edi +
jz loc_1008D7A  +
cmp [ebp+lpString] edi +
jz loc_1008D7A  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1008D7A  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_100602A  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1008D8B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_1006A6A  +
mov [esi] eax +
test eax eax +
jnz loc_1008D31  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008D88  +
push 8  +
call ds:SetLastError  +
jmp loc_1008D88  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_1006A6A  +
mov [esi+4] eax +
test eax eax +
jz loc_1008D1D  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_1006510  +
test edi edi +
jz loc_1008D6B  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_1006510  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1008BC4  +
jmp loc_1008D8B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008D88  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_1008E16  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_1008E16  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1005910  +
test eax eax +
jnz loc_1008DC7  +
push 7  +
call sub_100589F  +
jmp loc_1008DD3  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_1006A6A  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1008E16  +
test ebx ebx +
jbe loc_1008E00  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_1008DFA  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_1008DFA  +
push esi  +
call sub_10061A3  +
add esi 50h +
dec ebx  +
jnz loc_1008DE1  +
push [ebp+arg_0]  +
call sub_100593C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_1008E18  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_1006A6A  +
mov ebx eax +
cmp ebx edi +
jz loc_1008EA7  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1008EB9  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_1008E50  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_1008EC0  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1008EB9  +
call esi  +
test eax eax +
jnz loc_1008EB9  +
push 57h  +
jmp loc_1008EB3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008EB9  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1009086  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1005E42  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1008EB9  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1008EED  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10061A3  +
jmp loc_1008EB9  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1008EE2  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_1006A6A  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1008EE2  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_100284D  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_1008F64  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_1008F22  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1008EE2  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1005BD2  +
cmp eax 4 +
ja loc_1008F9C  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10061A3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008EB9  +
push 42Bh  +
jmp loc_1008EB3  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100611B  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_1008FD6  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_10013FC +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_1009026  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_1006A6A  +
mov esi eax +
cmp esi edi +
jnz loc_100900D  +
lea eax [ebp+pBlock] +
push eax  +
call sub_10061A3  +
jmp loc_1008EA7  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_100284D  +
add esp 14h +
jmp loc_1009046  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_1009034  +
push 7  +
call sub_100589F  +
jmp loc_1009040  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_1006A6A  +
mov esi eax +
cmp esi edi +
jz loc_1008FFF  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_1006A6A  +
mov esi eax +
cmp esi edi +
jz loc_1008FFF  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1007722  +
push eax  +
push 50h  +
push esi  +
call sub_100284D  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_10061A3  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_1009108  +
cmp [ebp+arg_4] ebx +
jz loc_1009108  +
cmp [ebp+arg_C] ebx +
jz loc_1009108  +
cmp [ebp+dwErrCode] ebx +
jz loc_1009108  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_1009108  +
call sub_1005A55  +
test eax eax +
jnz loc_10090E8  +
push 157Fh  +
call sub_1007722  +
push eax  +
call sub_100593C  +
push 47Eh  +
call edi  +
jmp loc_1009111  +
call sub_10057C9  +
test eax eax +
jz loc_100910C  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_1009130  +
cmp eax [ebp+arg_C] +
jl loc_100911A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100910C  +
push 57h  +
call edi  +
call sub_10059A3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_1008255  +
mov esi eax +
cmp esi ebx +
jz loc_100910C  +
push esi  +
call sub_1008E23  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_100910C  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_10082F6  +
test eax eax +
jz loc_100910C  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_1009292  +
jmp loc_1009167  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1009180  +
mov edi [ecx+4] +
jmp loc_1009182  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008BC4  +
cmp eax 0FFFFFFFFh +
jnz loc_10091C7  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008CA2  +
cmp eax 0FFFFFFFFh +
jnz loc_10091BA  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_10092CF  +
mov edi ebx +
xor ebx ebx +
jmp loc_10091C0  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1009302  +
test edi edi +
jz loc_1009222  +
cmp [ebp+arg_8] 2 +
jnz loc_1009222  +
push dword ptr [esi+8]  +
call sub_1008216  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_100921D  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008BC4  +
cmp eax 0FFFFFFFFh +
jnz loc_1009214  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008CA2  +
cmp eax 0FFFFFFFFh +
jz loc_1009222  +
mov [ebp+arg_8] 1 +
jmp loc_1009220  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_10085E7  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_100937B  +
mov eax [esi+18h] +
test eax eax +
jz loc_100925D  +
cmp eax [esi+1Ch] +
jz loc_1009320  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_1009276  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_1009164  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_10092C4  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_10092C4  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_1009365  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_10092BB  +
cmp [ecx+1Ch] ebx +
jz loc_100938B  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_100929C  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_1009113  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1007722  +
push eax  +
push esi  +
call sub_1006CF7  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008D97  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1009111  +
call ds:GetLastError  +
test eax eax +
jnz loc_100910C  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_100910C  +
test ebx ebx +
jz loc_100934D  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100934D  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1007722  +
push eax  +
push 3  +
call sub_1006CF7  +
add esp 14h +
jmp loc_10092E7  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1007722  +
push eax  +
push 2  +
jmp loc_10092DF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009376  +
push 42Bh  +
call edi  +
call sub_10059A3  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008D97  +
jmp loc_1009111  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_10093A5  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_1009365  +
mov edi [ecx+24h] +
jmp loc_10093BD  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_10093BB  +
push ebx  +
push eax  +
call sub_1008255  +
mov edi eax +
test edi edi +
jnz loc_10093C1  +
jmp loc_1009376  +
mov edi ecx +
test edi edi +
jz loc_10093D7  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_10093D7  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_1009358  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1007722  +
push eax  +
push 1  +
call sub_1006CF7  +
add esp 0Ch +
jmp loc_10092E7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_100941A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009416  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100943F  +
push 0  +
push [ebp+lpString1]  +
call sub_1005BD2  +
cmp eax 2 +
jbe loc_1009416  +
push 2  +
push 1  +
push offset asc_100133C  +
push [ebp+lpString1]  +
call sub_1005BF3  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_10094D9  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10094D9  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_1006A6A  +
cmp eax esi +
jnz loc_1009488  +
call ds:GetLastError  +
test eax eax +
jnz loc_10094E4  +
push 8  +
jmp loc_10094DE  +
mov esi ds:wcstok +
mov edi offset a__0 +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_10094D9  +
push 0  +
push 0Ah  +
push ebx  +
call sub_100730E  +
test eax eax +
jz loc_10094E4  +
push 0Ah  +
push ebx  +
call sub_1007128  +
cmp eax 0FFh +
ja loc_10094E4  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_100949F  +
cmp [ebp+var_4] 4 +
jnz loc_10094D9  +
inc eax  +
jmp loc_10094E6  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1009676  +
cmp ebx esi +
jz loc_1009676  +
mov eax [ebx] +
cmp eax esi +
jz loc_100956F  +
cmp eax 2 +
jb loc_1009676  +
cmp edx esi +
jz loc_1009676  +
cmp dword_100B38C esi +
jnz loc_10095A3  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1009599  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1009682  +
mov dword_100B38C 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_1009688  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1009610  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1009616  +
cmp eax 2AFCh +
jnz loc_100960D  +
cmp [ebp+var_848] di +
jnz loc_1009616  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_10095D0  +
jmp loc_1009662  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1009633  +
mov eax esi +
push offset a__0  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_1005BD2  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_100964F  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1009662  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_1006510  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_100968A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009688  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_10096F4  +
push esi  +
push edi  +
call sub_1005BD2  +
test eax eax +
jz loc_10096F4  +
push edi  +
call sub_10093F9  +
push edi  +
test eax eax +
jnz loc_10096FC  +
push offset aS_2  +
push 1  +
call sub_1006CF7  +
add esp 0Ch +
test eax eax +
jnz loc_1009703  +
call ds:GetLastError  +
test eax eax +
jnz loc_10096EF  +
push 8  +
call ds:SetLastError  +
call sub_10059A3  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_100593C  +
jmp loc_10096D9  +
call sub_1005910  +
cmp eax esi +
jnz loc_1009715  +
push 0Dh  +
call sub_100589F  +
jmp loc_100971F  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_1006A6A  +
cmp eax esi +
jz loc_10096DD  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_10096F4  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_100974E  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_10096F6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_100985D  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100985D  +
push esi  +
call sub_10093F9  +
cmp eax 1 +
jnz loc_1009793  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_10097CE  +
push offset aIpc  +
push esi  +
push offset aSS_0  +
push 2  +
call sub_1006CF7  +
add esp 10h +
test eax eax +
jnz loc_10097FB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10097C6  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_100985F  +
test bl 20h +
jz loc_10097DA  +
push offset aAdmin  +
jmp loc_10097A0  +
test bl 40h +
jz loc_10097E9  +
cmp [ebp+arg_4] edi +
jz loc_10097E9  +
push [ebp+arg_4]  +
jmp loc_10097A0  +
push esi  +
push offset aS_2  +
push 1  +
call sub_1006CF7  +
add esp 0Ch +
jmp loc_10097B0  +
call sub_1005910  +
cmp eax edi +
jnz loc_100980D  +
push 12h  +
call sub_100589F  +
jmp loc_1009817  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_1006A6A  +
cmp eax edi +
jz loc_10097B4  +
test ebx 10000000h +
jz loc_100982A  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_1009850  +
cmp esi 4B8h +
jz loc_1009849  +
call sub_10059A3  +
jmp loc_1009859  +
call sub_1006D89  +
jmp loc_1009859  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_100985F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_10099C3  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10099C3  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_10098C0  +
xor eax eax +
jmp loc_10099C6  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1006A6A  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_10098E4  +
call ebx  +
test eax eax +
jnz loc_10098B9  +
push 8  +
call ds:SetLastError  +
jmp loc_10098B9  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_10098B9  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1005BF3  +
test eax eax +
jz loc_10099C3  +
push [ebp+lpString]  +
call sub_1009448  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_100997F  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_10094F2  +
test eax eax +
jz loc_10098B9  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_1006A6A  +
mov esi eax +
cmp esi edi +
jz loc_10098B9  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_10094F2  +
test eax eax +
jz loc_10098B9  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1005BF3  +
test eax eax +
jnz loc_100996B  +
mov eax ebx +
jmp loc_10099C6  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1005BF3  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_10099C6  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_10098B9  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_1006A6A  +
mov ebx eax +
cmp ebx edi +
jz loc_10098B9  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_10098B9  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_1009973  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_100B004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_1009A6E  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009A6E  +
push ebx  +
call sub_1009448  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_1009A50  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_10094F2  +
test eax eax +
jnz loc_1009A2C  +
xor eax eax +
jmp loc_1009A71  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_1006A6A  +
cmp eax esi +
jz loc_1009A28  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_10094F2  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1009A71  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1006095  +
cmp eax 0FFFFFFFFh +
jz loc_1009A6A  +
push 35h  +
call ds:SetLastError  +
jmp loc_1009A28  +
mov eax edi +
jmp loc_1009A71  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1005311  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_100975D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1009BFF  +
push esi  +
call sub_100986B  +
cmp eax 1 +
jz loc_1009BFF  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_10093F9  +
cmp eax 1 +
jnz loc_1009ADE  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_10099D2  +
test eax eax +
jnz loc_1009AFA  +
call sub_10059A3  +
call ds:GetLastError  +
jmp loc_1009C33  +
cmp [ebp+lpString] ebx +
jz loc_1009B23  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009B23  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_0  +
push 2  +
call sub_1006CF7  +
add esp 10h +
jmp loc_1009B35  +
push dword ptr [ebp+arg_0]  +
push offset aS_2  +
push 1  +
call sub_1006CF7  +
add esp 0Ch +
test eax eax +
jnz loc_1009B58  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009B4B  +
push 8  +
call ds:SetLastError  +
call sub_10059A3  +
push 8  +
pop eax  +
jmp loc_1009C33  +
call sub_1005910  +
cmp eax ebx +
jnz loc_1009B6A  +
push 12h  +
call sub_100589F  +
jmp loc_1009B74  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_1006A6A  +
mov edx eax +
cmp edx ebx +
jz loc_1009B39  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_1009BC5  +
cmp esi 4B8h +
jz loc_1009BBE  +
push esi  +
call ds:SetLastError  +
call sub_10059A3  +
jmp loc_1009C2D  +
call sub_1006D89  +
jmp loc_1009C2D  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_10096A0  +
push eax  +
call sub_1005AEB  +
test eax eax +
jnz loc_1009C2D  +
push dword ptr [ebp+arg_0]  +
call sub_1009A87  +
push 1580h  +
call sub_1007722  +
push eax  +
call sub_100593C  +
mov esi 4B8h +
jmp loc_1009C2D  +
cmp [ebp+lpUserName] ebx +
jz loc_1009C31  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009C31  +
push 157Eh  +
call sub_1007722  +
push eax  +
call sub_100593C  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_1009C33  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_1009AA4  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1009DE9  +
push 0  +
push edi  +
call sub_1005BD2  +
test eax eax +
jz loc_1009DE9  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_1009CC8  +
cmp [ebp+lpUserName] 0 +
jz loc_1009CAE  +
cmp [ebp+nSize] 2 +
jb loc_1009CAE  +
cmp [ebp+lpPassword] 0 +
jz loc_1009CAE  +
cmp [ebp+arg_10] 2 +
jnb loc_1009CC8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009CBC  +
push 57h  +
call ebx  +
call sub_10059A3  +
xor eax eax +
jmp loc_1009DEC  +
push edi  +
mov [ebp+var_4] edi +
call sub_10093F9  +
cmp eax esi +
jnz loc_1009CDB  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_1009D0C  +
cmp [ebp+lpPassword] 0 +
jz loc_1009D0C  +
push 0  +
push esi  +
push offset String2  +
push [ebp+lpPassword]  +
call sub_1005BF3  +
test eax eax +
jnz loc_1009D0C  +
push [ebp+var_4]  +
call sub_10099D2  +
test eax eax +
jnz loc_1009E00  +
jmp loc_1009CBC  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_10099D2  +
test eax eax +
jz loc_1009CBC  +
cmp [ebp+lpUserName] 0 +
jz loc_1009D51  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009D51  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_1009C3E  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_1009D60  +
mov [ebp+var_8] esi +
jmp loc_1009D60  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_1009C3E  +
mov edi eax +
cmp edi 55h +
jnz loc_1009D70  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_1009DEC  +
test edi edi +
jnz loc_1009D7C  +
cmp [ebp+var_8] esi +
jz loc_1009D65  +
push edi  +
jmp loc_1009D6A  +
mov eax 4C3h +
cmp edi eax +
ja loc_1009DA9  +
jz loc_1009DA6  +
cmp edi 34h +
jz loc_1009E98  +
cmp edi 56h +
jz loc_1009DF3  +
cmp edi 4BEh +
jz loc_1009E98  +
jmp loc_1009CBC  +
push eax  +
jmp loc_1009D6A  +
cmp edi 4CFh +
jb loc_1009CBC  +
cmp edi 4D1h +
jbe loc_1009E98  +
cmp edi 52Eh +
jz loc_1009DF3  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_1009CBC  +
push 157Eh  +
call sub_1007722  +
push eax  +
call sub_100593C  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_1009CC1  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_1009E23  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_1009CBC  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_1007722  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_10075CF  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_10067FB  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_1009C3E  +
mov edi eax +
test edi edi +
jz loc_1009D6C  +
cmp edi 34h +
jz loc_1009E98  +
cmp edi 4BEh +
jz loc_1009E98  +
mov eax 4C3h +
cmp edi eax +
jz loc_1009DA6  +
cmp edi 4CEh +
jbe loc_1009CBC  +
cmp edi 4D1h +
ja loc_1009DC9  +
push 4C6h  +
call ebx  +
call sub_10059A3  +
push edi  +
call ebx  +
jmp loc_1009CC1  +
***
retf   +
***
