sub eax 6C004300h +
add [ebp+0] ah +
popa   +
add [edx+0] dh +
dec ecx  +
add [ebx+0] ah +
outs   +
add [esi+0] ch +
inc ebx  +
add [ecx+0] ah +
arpl [eax] ax +
push 6500h  +
add ds:65005200h ch +
***
add [ebp+0] ch +
outs   +
add [esi+0] dh +
add gs:[edx+0] al +
popa   +
add [ebx+0] dh +
add gs:[ebx+0] dl +
add gs:[eax+eax+74h] dh +
add [ecx+0] ch +
outs   +
add [edi+0] ah +
jnb $+2  +
sub eax 61004200h +
add [ebx+0] dh +
add gs:[ebx+0] dl +
add gs:[eax+eax+74h] dh +
add [ecx+0] ch +
outs   +
add [edi+0] ah +
jnb $+2  +
sub eax 73005500h +
add [ebp+0] ah +
jb $+2  +
dec ecx  +
add [ebx+0] ah +
outs   +
add [esi+0] ch +
inc ebx  +
add [edi+0] ch +
outs   +
add [esi+0] ah +
imul eax [eax] +
add gs:[eax+eax+61h] ch +
add [ecx+0] bh +
add gs:[eax+eax+0] ah +
sub eax 73005500h +
sub eax 73005500h +
add [ebp+0] ah +
jb $+2  +
inc ebx  +
add [edi+0] ch +
outs   +
add [esi+0] ah +
imul eax [eax] +
***
sub eax 68005300h +
add [edi+0] ch +
ja $+2  +
push ecx  +
add [eax+eax+49h] cl +
add [ebx+0] ah +
outs   +
add [esi+0] ch +
sub eax 70006100h +
add [eax+0] dh +
ins  dx +
add [ecx+0] bh +
sub eax 65007200h +
add [ecx+0] ch +
outs   +
add [ebx+0] dh +
jz $+2  +
popa   +
add [eax+eax+6Ch] ch +
sub eax 68007300h +
add [edi+0] ch +
ja $+2  +
retf 0  +
***
retn   +
***
retn 0  +
***
retf   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101F710  +
cmp [esi] ax +
jz loc_101F70C  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101F702  +
test edx edx +
jnz loc_101F715  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101F726  +
test eax eax +
jl loc_101F723  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_101F73C  +
cmp ecx [ebp+arg_0] +
jbe loc_101F741  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_101F76F  +
cmp [ebp+arg_0] eax +
jnz loc_101F763  +
cmp ecx eax +
jnz loc_101F768  +
cmp ecx [ebp+arg_4] +
jbe loc_101F777  +
mov eax 80070057h +
jmp loc_101F777  +
push [ebp+arg_4]  +
call sub_101F72C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp ecx 2 +
jbe loc_101F7A3  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_101F7D8  +
test [ebp+arg_8] 1000h +
jz loc_101F7D8  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_101F820  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_101F808  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_101F820  +
test esi esi +
jbe loc_101F839  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_101F839  +
test [ebp+arg_8] 800h +
jz loc_101F839  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jle loc_101F85B  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_102837C +
test eax eax +
jnz loc_101F921  +
push 11Ch  +
push eax  +
lea eax [ebp+VersionInformation] +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_101F913  +
cmp [ebp+VersionInformation.dwPlatformId] 2 +
jnz loc_101F909  +
cmp [ebp+VersionInformation.dwMajorVersion] 6 +
jnb loc_101F909  +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push hModule  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_101F913  +
push 0  +
push 8  +
lea eax [ebp+Filename] +
push eax  +
call sub_1025656  +
mov dword_102837C eax +
cmp eax hModule +
jnz loc_101F913  +
push eax  +
call sub_1025505  +
jmp loc_101F913  +
mov eax hModule +
mov dword_102837C eax +
mov eax dword_102837C +
test eax eax +
jnz loc_101F921  +
mov eax hModule +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn   +
***
mov eax dword_102837C +
test eax eax +
jz locret_101F950  +
cmp eax hModule +
jz loc_101F949  +
push eax  +
call sub_1025505  +
and dword_102837C 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+tstrFilename] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_101F9E2  +
push offset pMore  +
lea eax [ebp+tstrFilename] +
push eax  +
call ds:__imp_PathAppendW  +
test eax eax +
jz loc_101F9E2  +
push 1  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
lea eax [ebp+tstrFilename] +
push eax  +
call sub_1024759  +
mov ecx [ebp+hMem] +
mov eax 60000h +
cmp ecx 50000h +
jb loc_101F9D2  +
cmp ecx 50032h +
jnb loc_101F9DA  +
push 2  +
jmp loc_101F9E4  +
cmp ecx 50032h +
jb loc_101F9E2  +
cmp ecx eax +
jnb loc_101F9E2  +
push 3  +
jmp loc_101F9E4  +
push 4  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop eax  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_101FA65  +
push offset aMydocs_dll  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:__imp_PathAppendW  +
test eax eax +
jz loc_101FA65  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_101FA64  +
push offset ProcName  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_101FA5D  +
call eax  +
push esi  +
call ds:FreeLibrary  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
xor eax eax +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpFilename] +
push edi  +
push [ebp+nSize]  +
xor eax eax +
push esi  +
mov [esi] ax +
push dword_1028378  +
call ds:GetModuleFileNameW  +
mov edi eax +
test edi edi +
jz loc_101FAA4  +
push esi  +
call ds:PathRemoveFileSpecW  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
xor eax eax +
test edx edx +
jz loc_101FB06  +
mov ecx [ebp+arg_4] +
push esi  +
movzx esi word ptr [edx] +
push edi  +
lea edi [edx+ecx*2] +
lea ecx [edx+2] +
cmp ecx edi +
jnb loc_101FB04  +
push ebx  +
movzx ebx word ptr [ecx] +
test bx bx +
jnz loc_101FADF  +
test si si +
jz loc_101FAEA  +
inc ecx  +
inc ecx  +
movzx esi bx +
cmp ecx edi +
jb loc_101FAD2  +
jmp loc_101FB03  +
mov esi [ebp+arg_8] +
xor eax eax +
inc eax  +
test esi esi +
jz loc_101FAF6  +
mov [esi] ecx +
mov esi [ebp+arg_C] +
test esi esi +
jz loc_101FB03  +
sub ecx edx +
sar ecx 1 +
mov [esi] ecx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi ds:RegCreateKeyExW +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
xor esi esi +
push esi  +
push 4  +
pop ebx  +
push ebx  +
push esi  +
push esi  +
push esi  +
push offset SubKey  +
push 80000001h  +
call edi  +
mov [ebp+var_C] eax +
cmp eax esi +
jnz loc_101FBB0  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
push esi  +
push 3  +
push esi  +
push esi  +
push esi  +
push offset aShellfolder  +
push [ebp+hKey]  +
call edi  +
mov [ebp+var_C] eax +
cmp eax esi +
jnz loc_101FBA7  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
mov edi offset ValueName +
push edi  +
push [ebp+phkResult]  +
mov dword ptr [ebp+Data] esi +
mov [ebp+cbData] ebx +
call ds:RegQueryValueExW  +
or dword ptr [ebp+Data] 100000h +
push ebx  +
lea eax [ebp+Data] +
push eax  +
push ebx  +
push esi  +
push edi  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
push [ebp+phkResult]  +
mov [ebp+var_C] eax +
call ds:RegCloseKey  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push [ebp+var_C]  +
call sub_101F845  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push esi  +
push 20006h  +
push esi  +
push esi  +
push esi  +
push offset aSoftwareMicr_6  +
push 80000001h  +
call ds:RegCreateKeyExW  +
mov edi eax +
cmp edi esi +
jnz loc_101FC0F  +
push esi  +
push [ebp+hKey]  +
push offset aSoftwareMicr_7  +
push 80000002h  +
call ds:SHCopyKeyW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp [esi] ebx +
jz loc_101FC76  +
cmp [ebp+lpStr2] ebx +
jz loc_101FC76  +
push edi  +
push [ebp+lpStr2]  +
call ds:lstrlenW  +
mov edi eax +
cmp edi ebx +
jz loc_101FC75  +
push edi  +
push [ebp+lpStr2]  +
push dword ptr [esi]  +
call ds:StrCmpNIW  +
test eax eax +
jnz loc_101FC75  +
mov eax [esi] +
lea eax [eax+edi*2] +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_101FC62  +
cmp cx 20h +
jnz loc_101FC75  +
cmp cx 20h +
jnz loc_101FC70  +
inc eax  +
inc eax  +
cmp word ptr [eax] 20h +
jz loc_101FC68  +
xor ebx ebx +
mov [esi] eax +
inc ebx  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpName] +
push 104h  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
call ds:GetEnvironmentVariableW  +
test eax eax +
jz loc_101FCB7  +
xor eax eax +
inc eax  +
jmp loc_101FCBF  +
call ds:GetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 4  +
***
cmp eax 1 +
jz loc_101FCE4  +
xor eax eax +
retn   +
push offset aInstaller_shad  +
call sub_101FC83  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
call sub_101FCD2  +
test eax eax +
jnz loc_101FD0B  +
push eax  +
push eax  +
push eax  +
call sub_10223B7  +
xor eax eax +
retn   +
***
call sub_101FCD2  +
test eax eax +
jnz loc_101FD25  +
push eax  +
push eax  +
push 1  +
call sub_10223B7  +
xor eax eax +
retn   +
***
push 1  +
call sub_10223B7  +
xor eax eax +
retn   +
***
call sub_1022684  +
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
call sub_10213D6  +
xor eax eax +
retn   +
***
call sub_1023A8C  +
xor eax eax +
retn   +
***
call sub_1022652  +
xor eax eax +
retn   +
***
call ds:GetVersion  +
test eax eax +
jns loc_101FD90  +
xor eax eax +
retn   +
movzx eax al +
retn   +
***
call sub_101FD83  +
cmp eax 6 +
jb locret_101FDCC  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
test eax eax +
jz locret_101FDCC  +
push offset aHeapsetinforma  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz locret_101FDCC  +
push 0  +
push 0  +
push 1  +
push 0  +
call eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_101FDE8  +
cmp edx 7FFFFFFFh +
jbe loc_101FDED  +
mov eax 80070057h +
test eax eax +
jl loc_101FE03  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1020A69  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_14] +
mov edx [ebp+arg_4] +
mov [ebp+var_8] eax +
and [ebp+var_8] 100h +
push esi  +
push edi  +
jz loc_101FEE5  +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
mov ecx edx +
call sub_101F74A  +
test eax eax +
jl loc_101FE48  +
test edx edx +
jnz loc_101FF00  +
and [ebp+var_4] 0 +
mov esi eax +
test eax eax +
jl loc_101FEDD  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov edi [ebp+arg_4] +
push ebx  +
sub edi eax +
xor esi esi +
lea ebx [ecx+eax*2] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] edi +
cmp [ebp+var_8] esi +
jz loc_101FE7E  +
cmp [ebp+arg_8] esi +
jnz loc_101FE7E  +
mov [ebp+arg_8] offset Data +
test [ebp+arg_14] 0FFFFE000h +
jz loc_101FF10  +
mov esi 80070057h +
test [ebp+arg_14] 1C00h +
jz loc_101FEBE  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_101FEBE  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_4] +
add eax eax +
push eax  +
lea ebx [ebp+var_10] +
call sub_101F7AE  +
mov ebx [ebp+var_C] +
mov edi [ebp+var_10] +
test esi esi +
jge loc_101FECA  +
cmp esi 8007007Ah +
jnz loc_101FEDC  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_101FED3  +
mov [eax] ebx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_101FEDC  +
mov [eax] edi +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
xor eax eax +
test edx edx +
jz loc_101FEF3  +
cmp edx 7FFFFFFFh +
jbe loc_101FEF8  +
mov eax 80070057h +
test eax eax +
jl loc_101FE48  +
mov eax [ebp+arg_0] +
lea edi [ebp+var_4] +
call sub_101F6F5  +
jmp loc_101FE4C  +
cmp edi 1 +
ja loc_101FF31  +
mov eax [ebp+arg_8] +
cmp [eax] si +
jz loc_101FECA  +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_101FE90  +
push 7FFFFFFEh  +
lea eax [ebp+var_10] +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
mov ecx ebx +
mov [ebp+var_10] esi +
call sub_1020A69  +
mov esi eax +
mov eax [ebp+var_10] +
sub edi eax +
lea ebx [ebx+eax*2] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] edi +
test esi esi +
jl loc_101FE90  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_101FECA  +
cmp edi 1 +
jbe loc_101FECA  +
lea ecx [edi+edi] +
push ebx  +
call sub_101F780  +
jmp loc_101FECA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101FFA1  +
cmp ecx 7FFFFFFFh +
jbe loc_101FFA6  +
mov eax 80070057h +
test eax eax +
jl loc_101FFE3  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101FFD3  +
cmp eax esi +
ja loc_101FFD3  +
jnz loc_101FFDE  +
jmp loc_101FFD8  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A30h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_10] +
mov [ebp+hWnd] eax +
mov eax dword_102837C +
push esi  +
push edi  +
test eax eax +
jnz loc_102001C  +
call sub_101F864  +
mov edi ds:LoadStringW +
mov esi 208h +
push esi  +
lea ecx [ebp+Text] +
push ecx  +
push [ebp+uID]  +
push eax  +
call edi  +
test eax eax +
jnz loc_1020040  +
mov [ebp+Text] ax +
test ebx ebx +
jz loc_1020070  +
push ebx  +
lea eax [ebp+Text] +
push eax  +
lea eax [ebp+var_A2C] +
push esi  +
push eax  +
call sub_101FF8B  +
add esp 10h +
lea eax [ebp+var_A2C] +
push eax  +
push esi  +
lea eax [ebp+Text] +
push eax  +
call sub_101FDD2  +
mov eax dword_102837C +
test eax eax +
jnz loc_102007E  +
call sub_101F864  +
push 104h  +
lea ecx [ebp+Caption] +
push ecx  +
push [ebp+arg_8]  +
push eax  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jnz loc_102009E  +
mov [ebp+Caption] ax +
push [ebp+uType]  +
lea eax [ebp+Caption] +
push eax  +
lea eax [ebp+Text] +
push eax  +
push [ebp+hWnd]  +
call ds:MessageBoxW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 630h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
push 214h  +
mov [ebp+var_630] eax +
lea eax [ebp+var_628] +
push edi  +
push eax  +
mov [ebp+var_62C] edi +
call memset  +
add esp 0Ch +
mov esi 104h +
push esi  +
lea eax [ebp+Filename] +
push eax  +
call sub_101FA78  +
test eax eax +
jz loc_1020200  +
lea eax [ebp+Filename] +
push eax  +
push esi  +
cmp [ebp+arg_C] edi +
jz loc_10201C2  +
lea eax [ebp+var_620] +
push eax  +
call sub_101FDD2  +
push ebx  +
lea eax [ebp+Filename] +
push eax  +
call ds:__imp_PathAppendW  +
test eax eax +
jz loc_10201A7  +
lea eax [ebp+Filename] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_10201A7  +
lea eax [ebp+Filename] +
mov [ebp+var_628] eax +
mov eax [ebp+var_630] +
mov [ebp+var_624] eax +
mov eax [ebp+arg_8] +
neg eax  +
sbb eax eax +
and eax 0FFFFFFE0h +
add eax 40h +
or eax 4 +
mov [ebp+var_418] eax +
push edi  +
lea eax [ebp+var_62C] +
push eax  +
push edi  +
call ExecuteCabW  +
jmp loc_1020200  +
test [ebp+arg_10] 4 +
jnz loc_1020200  +
lea eax [ebp+Filename] +
push eax  +
push 40h  +
push 0Ch  +
push 0Bh  +
push edi  +
call sub_101FFEA  +
jmp loc_1020200  +
lea eax [ebp+var_414] +
push eax  +
call sub_101FDD2  +
push ebx  +
lea eax [ebp+var_414] +
push eax  +
call ds:__imp_PathAppendW  +
test eax eax +
jz loc_1020200  +
push edi  +
push dword ptr [ebp+arg_10]  +
lea eax [ebp+Filename] +
push edi  +
push edi  +
push eax  +
push [ebp+var_630]  +
lea eax [ebp+var_414] +
push eax  +
push edi  +
call RunSetupCommandW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 630h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi ds:RegOpenKeyExW +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
mov ebx offset aSoftwareMicros +
push ebx  +
push 80000002h  +
call edi  +
test eax eax +
jnz loc_10203CA  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push esi  +
push offset aIeComplist  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_10203BE  +
mov eax 104h +
push ebx  +
push eax  +
mov [ebp+cbValueName] eax +
lea eax [ebp+szDir] +
push eax  +
mov [ebp+dwIndex] esi +
call sub_101FDD2  +
lea eax [ebp+szDir] +
push eax  +
call ds:PathAddBackslashW  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push esi  +
push [ebp+phkResult]  +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_10203B2  +
mov ebx offset aN +
lea eax [ebp+var_620] +
push eax  +
push 2001Fh  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_102031F  +
push ebx  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push ebx  +
push 1  +
push esi  +
push offset aBackupregistry  +
push [ebp+var_620]  +
call ds:RegSetValueExW  +
push [ebp+var_620]  +
call ds:RegCloseKey  +
lea eax [ebp+ValueName] +
push eax  +
lea eax [ebp+szDir] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
call ds:PathCombineW  +
test eax eax +
jz loc_1020376  +
lea eax [ebp+var_620] +
push eax  +
push 2001Fh  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push 80000001h  +
call edi  +
test eax eax +
jnz loc_1020376  +
push [ebp+var_620]  +
push esi  +
push esi  +
call RegRestoreAllW  +
push [ebp+var_620]  +
call ds:RegCloseKey  +
inc [ebp+dwIndex]  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+dwIndex]  +
mov [ebp+cbValueName] 104h +
push [ebp+phkResult]  +
call ds:RegEnumValueW  +
test eax eax +
jz loc_10202D2  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
jz loc_1020458  +
cmp [ebp+lpString] 0 +
jz loc_1020458  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1020458  +
mov eax [esi] +
test eax eax +
jz loc_1020458  +
cmp eax 7FFFFFFFh +
ja loc_1020458  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
call sub_101FAB1  +
test eax eax +
jz loc_1020458  +
mov eax [esi] +
mov edi [ebp+arg_0] +
push 200h  +
push 0  +
push 0  +
push [ebp+lpString]  +
sub eax edi +
push eax  +
push [ebp+arg_4]  +
call sub_101FE0C  +
test eax eax +
jl loc_102045D  +
push [ebp+lpString]  +
call ds:lstrlenW  +
lea eax [edi+eax+2] +
cmp eax [esi] +
jbe loc_1020452  +
mov eax 8007007Ah +
jmp loc_102045D  +
mov [esi] eax +
xor eax eax +
jmp loc_102045D  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2C4h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 5  +
pop ecx  +
mov esi offset aStartPage +
lea edi [ebp+ValueName] +
movs   +
movs   +
push 16h  +
pop ecx  +
mov esi offset aHttpGo_microso +
lea edi [ebp+Data] +
movs   +
movs   +
push 0Bh  +
pop ecx  +
mov esi offset aSecondaryStart +
lea edi [ebp+var_48] +
movs   +
xor edi edi +
mov dword ptr [ebp+String] edi +
cmp [ebp+arg_0] edi +
jz loc_1020741  +
lea eax [ebp+hKey] +
push eax  +
push 0F003Fh  +
push edi  +
push offset aSoftwareMicr_8  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1020712  +
push 204h  +
lea eax [ebp+var_2A8] +
push edi  +
push eax  +
mov dword ptr [ebp+First] edi +
call memset  +
mov esi ds:RegQueryValueExW +
add esp 0Ch +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+First] +
push eax  +
push edi  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
mov [ebp+cbData] 208h +
call esi  +
mov [ebp+lpData] eax +
cmp eax edi +
jnz loc_1020546  +
cmp [ebp+cbData] edi +
jnz loc_1020546  +
mov [ebp+lpData] 2 +
push ebx  +
lea eax [ebp+First] +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_10205B0  +
mov ebx ds:StrStrIW +
push offset Srch  +
lea eax [ebp+First] +
push eax  +
call ebx  +
test eax eax +
jz loc_1020582  +
push offset aFile  +
lea eax [ebp+First] +
push eax  +
call ebx  +
test eax eax +
jnz loc_10205B0  +
mov ebx ds:StrCmpICW +
push offset aHttpHome_micro  +
lea eax [ebp+First] +
push eax  +
call ebx  +
test eax eax +
jz loc_10205B0  +
push offset aHttpHome_mic_0  +
lea eax [ebp+First] +
push eax  +
call ebx  +
test eax eax +
jz loc_10205B0  +
xor ebx ebx +
jmp loc_10205B3  +
xor ebx ebx +
inc ebx  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_10206DD  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_10206DD  +
cmp ebx edi +
jnz loc_10205E8  +
cmp [ebp+lpData] edi +
jz loc_1020705  +
mov ebx ds:RegSetValueExW +
push 5Ah  +
lea eax [ebp+Data] +
push eax  +
push 1  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ebx  +
lea eax [ebp+var_2BC] +
push eax  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+hKey]  +
call esi  +
cmp eax edi +
jnz loc_10206C3  +
mov esi [ebp+var_2BC] +
cmp esi edi +
jz loc_10206C3  +
add esi 4 +
shr esi 1 +
inc esi  +
inc esi  +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+lpData] eax +
cmp eax edi +
jz loc_10206C3  +
lea ecx [ebp+var_2BC] +
push ecx  +
push eax  +
push edi  +
push edi  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_2C4] +
push eax  +
push [ebp+lpData]  +
mov [ebp+var_2C4] esi +
call sub_10203DE  +
test eax eax +
jl loc_10206B5  +
mov eax [ebp+var_2C4] +
add eax eax +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+var_48] +
push 7  +
push edi  +
push eax  +
push [ebp+hKey]  +
call ebx  +
push [ebp+lpData]  +
call ??3@YAXPAX@Z  +
pop ecx  +
jmp loc_1020705  +
push 4  +
lea eax [ebp+String] +
push eax  +
push 7  +
push edi  +
lea eax [ebp+var_48] +
push eax  +
push [ebp+hKey]  +
call ebx  +
jmp loc_1020705  +
cmp ebx edi +
jnz loc_10206E9  +
cmp [ebp+lpData] edi +
jz loc_1020705  +
push 5Ah  +
lea eax [ebp+Data] +
push eax  +
push 1  +
push edi  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop ebx  +
cmp [ebp+arg_4] edi +
jnz loc_1020741  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov esi eax +
cmp esi edi +
jz loc_1020741  +
push offset aSetfirsthomepa  +
push esi  +
call ds:GetProcAddress  +
cmp eax edi +
jz loc_102073A  +
call eax  +
push esi  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+hKey] +
xor ebx ebx +
push edi  +
xor edi edi +
inc ebx  +
mov dword ptr [ebp+Data] edi +
mov [ebp+var_8] edi +
cmp esi edi +
jz loc_10207C5  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push offset aSoftwareMicr_0  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10207C5  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push edi  +
push edi  +
push offset aInstallmode  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10207BC  +
test [ebp+Data] bl +
jz loc_10207BC  +
mov [ebp+var_8] ebx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
call sub_1024CA9  +
test eax eax +
jnz loc_10207EA  +
mov eax offset aBackupcryptoke +
cmp esi edi +
jnz loc_10207DC  +
mov eax offset aDelcryptokeys +
push [ebp+arg_C]  +
push esi  +
push esi  +
push eax  +
push [ebp+arg_4]  +
call sub_10200CE  +
push [ebp+arg_C]  +
push ebx  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_10200CE  +
cmp esi edi +
jz loc_102080F  +
push 0Dh  +
push ebx  +
push esi  +
push offset aSoundinstall_n  +
push [ebp+arg_4]  +
call sub_10200CE  +
push [ebp+var_8]  +
push esi  +
call sub_1020468  +
cmp esi edi +
pop edi  +
pop esi  +
pop ebx  +
jnz locret_1020824  +
call sub_1020216  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_1020871  +
call sub_101FBC2  +
call sub_101F9F6  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_102086B  +
call iertutil_37  +
call iertutil_33  +
call ds:SHELL32_526  +
mov eax offset aDefaultinstall +
mov edi eax +
cmp [ebp+arg_0] ebx +
jz loc_1020929  +
call sub_101F956  +
lea eax [ebp+pvData] +
push eax  +
call ds:_time64  +
pop ecx  +
push 2  +
push 8  +
lea eax [ebp+pvData] +
push eax  +
push 0Bh  +
push offset pwzValue  +
push offset pwzSubKey  +
call ds:SHRegSetUSValueW  +
push 114h  +
lea eax [ebp+VersionInformation] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation] 114h +
call ds:GetVersionExW  +
test eax eax +
jz loc_102091D  +
mov eax [ebp-114h] +
cmp eax 6 +
ja loc_1020918  +
jnz loc_10208F7  +
cmp dword ptr [ebp-110h] 1 +
jnb loc_1020918  +
cmp eax 6 +
jb loc_1020903  +
mov edi offset aDefaultinsta_0 +
jmp loc_102091D  +
cmp eax 5 +
jnz loc_102091D  +
cmp dword ptr [ebp-110h] 2 +
jnz loc_102091D  +
mov edi offset aDefaultinsta_1 +
jmp loc_102091D  +
mov edi offset aDefaultinsta_2 +
push ebx  +
push edi  +
push offset aIeuinit_inf  +
push [ebp+arg_0]  +
jmp loc_1020931  +
push ebx  +
push eax  +
push offset aIeuinit_inf  +
push ebx  +
call sub_1020756  +
cmp [ebp+arg_0] ebx +
pop edi  +
pop ebx  +
jz loc_1020942  +
call sub_101FB0F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 4  +
***
xor eax eax +
retn   +
***
jmp sub_1020955  +
***
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
push 0  +
call ds:GetModuleHandleW  +
mov dword_1028378 eax +
mov hModule eax +
call sub_101FD99  +
xor edi edi +
push edi  +
call ds:OleInitialize  +
test eax eax +
jl loc_1020A48  +
push 8001h  +
call ds:SetErrorMode  +
push esi  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_101FDD2  +
lea eax [ebp+var_20C] +
mov [ebp+lpString] eax +
cmp [ebp+lpString] 0 +
jz loc_1020A40  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jle loc_1020A40  +
xor esi esi +
push lpStr2[esi*8]  +
lea eax [ebp+lpString] +
push eax  +
call sub_101FC1A  +
test eax eax +
jnz loc_1020A29  +
inc esi  +
cmp esi 0Bh +
jb loc_1020A0A  +
jmp loc_1020A32  +
call off_1028004[esi*8]  +
mov edi eax +
cmp esi 0Bh +
jb loc_1020A3C  +
mov edi 80070057h +
test edi edi +
jge loc_10209EF  +
call ds:OleUninitialize  +
jmp loc_1020A4D  +
mov edi 80004005h +
call sub_101F932  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1020A9E  +
cmp [ebp+arg_4] eax +
jz loc_1020A9A  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1020A9A  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1020A7D  +
test esi esi +
jnz loc_1020AA6  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1020AB4  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
push 1Fh  +
pop eax  +
mov [edi] ax +
lea eax [edi+8] +
push eax  +
push [ebp+arg_0]  +
call ds:SHStrDupW  +
mov ecx eax +
test ecx ecx +
jge loc_1020AE8  +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
mov eax ecx +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jb loc_1020B0D  +
sub eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1020B18  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1020B33  +
pop ebp  +
jmp ds:CoTaskMemFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_1020B7D  +
cmp [ebp+var_6] 3 +
jz loc_1020B78  +
cmp [ebp+var_6] 2 +
jnz loc_1020B7D  +
xor eax eax +
inc eax  +
jmp loc_1020B7F  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+pcbData] +
push esi  +
push edi  +
test eax eax +
jz loc_1020BA2  +
mov esi [eax] +
jmp loc_1020BA4  +
xor esi esi +
mov edi [ebp+pvData] +
push eax  +
push edi  +
lea eax [ebp+pcbData] +
push eax  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call ds:SHGetValueW  +
test eax eax +
jnz loc_1020BD9  +
cmp [ebp+pcbData] 1 +
jnz loc_1020BD9  +
test edi edi +
jz loc_1020BDE  +
test esi esi +
jz loc_1020BDE  +
shr esi 1 +
xor ecx ecx +
mov [edi+esi*2-2] cx +
jmp loc_1020BDE  +
mov eax 3F2h +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+dwItem1] +
push eax  +
push [ebp+dwItem1]  +
push 0  +
call ds:SHGetSpecialFolderLocation  +
test eax eax +
jl loc_1020C1B  +
push 0  +
push [ebp+dwItem1]  +
push 0  +
push 1000h  +
call ds:SHChangeNotify  +
push [ebp+dwItem1]  +
call sub_1020B21  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_C] 0 +
push ebx  +
push esi  +
mov esi ds:SHGetValueW +
push edi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset pszValue  +
mov ebx offset pszSubKey +
push ebx  +
mov edi 80000002h +
push edi  +
mov [ebp+pcbData] 4 +
call esi  +
test eax eax +
jnz loc_1020C66  +
cmp [ebp+pvData] eax +
jnz loc_1020C89  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
push offset aUpgradeinprogr  +
push ebx  +
push edi  +
mov [ebp+pcbData] 4 +
call esi  +
test eax eax +
jnz loc_1020C90  +
cmp [ebp+pvData] eax +
jz loc_1020C90  +
mov [ebp+var_C] 1 +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
or eax 3 +
cmp [ebp+arg_4] esi +
jz loc_1020CDE  +
lea ebx [ebp+pcbData] +
push ebx  +
lea ebx [ebp+hkey] +
push ebx  +
push esi  +
push eax  +
push esi  +
push esi  +
push esi  +
push edx  +
push ecx  +
call ds:RegCreateKeyExW  +
jmp loc_1020CEF  +
lea ebx [ebp+hkey] +
push ebx  +
push eax  +
push esi  +
push edx  +
push ecx  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jnz loc_1020D6F  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push esi  +
push esi  +
push [ebp+hkey]  +
mov [ebp+pcbData] 208h +
call sub_1020B90  +
cmp [ebp+arg_4] esi +
jz loc_1020D33  +
cmp [ebp+arg_8] esi +
jnz loc_1020D26  +
cmp eax esi +
jz loc_1020D63  +
push edi  +
call ds:lstrlenW  +
add eax eax +
push eax  +
push edi  +
jmp loc_1020D54  +
cmp [ebp+arg_8] esi +
jnz loc_1020D4E  +
cmp eax esi +
jnz loc_1020D63  +
lea eax [ebp+pvData] +
push eax  +
push edi  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_1020D63  +
push esi  +
push offset Data  +
push 1  +
push esi  +
push [ebp+hkey]  +
call ds:RegSetValueW  +
push [ebp+hkey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push ds:off_101E010  +
call sub_10260BD  +
mov eax [ebp+var_4] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpSubKey] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
lea ecx [ebp+hKey] +
push ecx  +
push 1  +
xor esi esi +
push esi  +
push eax  +
push 80000002h  +
mov [ebp+phkResult] eax +
call ds:RegOpenKeyExW  +
mov edi eax +
cmp edi esi +
jnz loc_1020E76  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push ebx  +
push [ebp+hKey]  +
mov [ebp+cbData] 80h +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
cmp edi esi +
jnz loc_1020E76  +
push esi  +
lea eax [ebp+phkResult] +
push eax  +
push esi  +
push 2  +
push esi  +
push esi  +
push esi  +
push [ebp+phkResult]  +
push 80000001h  +
call ds:RegCreateKeyExW  +
mov edi eax +
cmp edi esi +
jnz loc_1020E6A  +
push [ebp+cbData]  +
lea eax [ebp+Data] +
push eax  +
push 1  +
push esi  +
push ebx  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
mov edi eax +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_1020EB5  +
push offset aLocale  +
push [ebp+lpSubKey]  +
call sub_1020DA7  +
push offset aVersion  +
push [ebp+lpSubKey]  +
call sub_1020DA7  +
jmp loc_1020EC3  +
push [ebp+lpSubKey]  +
push 80000001h  +
call ds:RegDeleteKeyW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
mov esi [ebp+ppv] +
jnz loc_1020EE1  +
push esi  +
call sub_1022A27  +
push 25h  +
call ds:IsOS  +
test eax eax +
jnz loc_1020F0C  +
push esi  +
call ds:GetFileAttributesW  +
cmp [ebp+arg_8] 0 +
jz loc_1020EFF  +
and eax 0FFFFFFF9h +
jmp loc_1020F02  +
or eax 6 +
push eax  +
push esi  +
call ds:SetFileAttributesW  +
jmp loc_1020F47  +
cmp [ebp+arg_8] 0 +
jz loc_1020F27  +
push [ebp+pszValue]  +
push offset aSoftwareMicr_1  +
push 80000002h  +
call ds:SHDeleteValueW  +
jmp loc_1020F47  +
push esi  +
call ds:lstrlenW  +
add eax eax +
push eax  +
push esi  +
push 1  +
push [ebp+pszValue]  +
push offset aSoftwareMicr_1  +
push 80000002h  +
call ds:__imp_SHSetValueW  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 104h  +
lea eax [ebp+ppv] +
push eax  +
call sub_1024FDC  +
test al al +
jz loc_1020F8F  +
push [ebp+arg_4]  +
lea eax [ebp+ppv] +
push eax  +
push esi  +
call sub_1020ECC  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpszFile] +
push esi  +
mov esi [ebp+lpszDir] +
push edi  +
push eax  +
push esi  +
lea eax [ebp+ppv] +
push eax  +
call ds:PathCombineW  +
lea eax [ebp+ppv] +
push eax  +
call sub_1022A27  +
mov edi eax +
push 80h  +
lea eax [ebp+ppv] +
push eax  +
call ds:SetFileAttributesW  +
lea eax [ebp+ppv] +
push eax  +
call ds:DeleteFileW  +
push 29h  +
call ds:IsOS  +
test eax eax +
jz loc_1021018  +
push 0  +
push esi  +
push 5  +
push 1000h  +
call ds:SHChangeNotify  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+ppshf]  +
xor edi edi +
call ds:InternalExtractIconListW  +
mov esi eax +
test esi esi +
jz loc_102107C  +
lea eax [ebp+ppshf] +
push eax  +
call ds:SHGetDesktopFolder  +
test eax eax +
jl loc_1021075  +
mov eax [ebp+ppshf] +
mov ecx [eax] +
push esi  +
push [ebp+arg_4]  +
push 10000000h  +
push eax  +
call dword ptr [ecx+1Ch]  +
test eax eax +
jnz loc_102106C  +
inc edi  +
mov eax [ebp+ppshf] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push esi  +
call ds:SHELL32_155  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 45Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
lea eax [ebp+PathName] +
push eax  +
push 104h  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jz loc_102110F  +
push ebx  +
mov ebx ds:SetCurrentDirectoryW +
push esi  +
call ebx  +
test eax eax +
jz loc_1021105  +
lea eax [ebp+szFile] +
push eax  +
push edi  +
call ds:FindFirstFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1021105  +
lea eax [ebp-430h] +
push eax  +
push esi  +
call sub_1020FA3  +
lea eax [ebp+szFile] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_10210DF  +
push edi  +
call ds:FindClose  +
lea eax [ebp+PathName] +
push eax  +
call ebx  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ds:SHGetSpecialFolderPathW +
push edi  +
push 0  +
push 10h  +
lea eax [ebp+pszPath] +
push eax  +
push 0  +
call esi  +
mov edi ds:LoadStringW +
mov ebx 104h +
test eax eax +
jz loc_10211B5  +
push offset a_871c538042a01  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1021089  +
mov eax dword_102837C +
test eax eax +
jnz loc_102117F  +
call sub_101F864  +
push ebx  +
lea ecx [ebp+pMore] +
push ecx  +
push 10h  +
push eax  +
call edi  +
test eax eax +
jz loc_10211B5  +
lea eax [ebp+pMore] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call ds:__imp_PathAppendW  +
push offset a_871c538042a01  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1021089  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pMore] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push offset aDesktopshortcu  +
push offset aSoftwareMic_10  +
push 80000002h  +
mov [ebp+pcbData] 208h +
call ds:SHGetValueW  +
test eax eax +
jz loc_102120C  +
mov eax dword_102837C +
test eax eax +
jnz loc_10211FB  +
call sub_101F864  +
push ebx  +
lea ecx [ebp+pMore] +
push ecx  +
push 11h  +
push eax  +
call edi  +
test eax eax +
jz loc_1021244  +
push 0  +
push 2  +
lea eax [ebp+pszPath] +
push eax  +
push 0  +
call esi  +
test eax eax +
jz loc_1021244  +
lea eax [ebp+pMore] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call ds:__imp_PathAppendW  +
push offset a_871c538042a01  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1021089  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
xor esi esi +
push esi  +
push 2  +
push esi  +
push esi  +
push esi  +
push offset aSoftwareMic_11  +
push 80000001h  +
mov edi 80004005h +
call ds:RegCreateKeyExW  +
test eax eax +
jnz loc_10212B1  +
push 40h  +
push offset aIe4uinitUseric  +
push 1  +
push esi  +
push offset aIe4uinit  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
test eax eax +
jnz loc_10212A8  +
xor edi edi +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareMic_12  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz locret_1021329  +
push esi  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push offset aIeframe_dll  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_1021328  +
push offset aDllinstall  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_1021321  +
cmp [ebp+arg_0] 0 +
mov ecx offset aForceassoc +
jnz loc_102131C  +
mov ecx offset Data +
push ecx  +
push 1  +
call eax  +
push esi  +
call ds:FreeLibrary  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push 4  +
pop esi  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
lea eax [ebp+pdwType] +
push eax  +
push offset aHavecreatedqui  +
push offset aSoftwareMicr_2  +
xor ebx ebx +
push 80000001h  +
mov [ebp+pdwType] esi +
mov [ebp+pcbData] esi +
mov [ebp+pvData] ebx +
call ds:SHGetValueW  +
test eax eax +
jnz loc_102137B  +
cmp [ebp+pdwType] esi +
jnz loc_102137B  +
cmp [ebp+pvData] ebx +
jz loc_102137B  +
mov bl 1 +
pop esi  +
mov al bl +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
xor bl bl +
call ds:GetShellWindow  +
test eax eax +
jz loc_1021397  +
inc bl  +
mov al bl +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
call sub_1021386  +
test al al +
jz loc_10213CA  +
push [ebp+dwMilliseconds]  +
call ds:Sleep  +
push ebx  +
push ebx  +
push ebx  +
push 8000000h  +
call ds:SHChangeNotify  +
mov bl 1 +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetTickCount +
push edi  +
call esi  +
mov ebx eax +
mov edi 3E8h +
jmp loc_1021417  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call esi  +
push eax  +
call sub_1020AF4  +
test eax eax +
jl loc_102140C  +
cmp [ebp+var_4] 493E0h +
ja loc_1021421  +
jmp loc_1021410  +
call esi  +
mov ebx eax +
push edi  +
call ds:Sleep  +
push edi  +
call sub_10213A0  +
test al al +
jz loc_10213F0  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
push 3  +
push ds:off_101E010  +
call sub_10260F3  +
cmp [ebp+arg_4] 0 +
jnz loc_1021456  +
push esi  +
push 3  +
push ds:off_101E864  +
call sub_10260F3  +
push esi  +
push 3  +
push ds:off_101D268  +
call sub_10260F3  +
xor eax eax +
test esi esi +
setz al  +
push eax  +
push 3  +
push ds:off_101C574  +
call sub_10260F3  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
lea eax [ebp-0Ch] +
push eax  +
lea eax [ebp-4] +
push eax  +
xor esi esi +
push esi  +
push 2  +
push esi  +
push esi  +
push esi  +
push offset aSoftwareMicr_2  +
push 80000001h  +
call ds:RegCreateKeyExW  +
test eax eax +
jnz loc_10214D7  +
push 4  +
lea eax [ebp-8] +
push eax  +
push 4  +
push esi  +
push offset aHavecreatedqui  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-8] 1 +
call ds:RegSetValueExW  +
push dword ptr [ebp-4]  +
call ds:RegCloseKey  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_10214F8  +
cmp edx esi +
jbe loc_10214FD  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_1021515  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101F6F5  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_1021517  +
xor ecx ecx +
test eax eax +
jl loc_102152E  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_1020A69  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_220] eax +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_218] eax +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
xor edi edi +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
test eax eax +
jl loc_10217FC  +
cmp dword ptr [ebp+arg_18] edi +
jz loc_10215C6  +
push dword ptr [ebp+arg_18]  +
lea eax [ebp+Buffer] +
push offset a@WindirSystem3  +
push 104h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+ppv] +
mov ecx [eax] +
add esp 10h +
lea edx [ebp+Buffer] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset aHomedriveHomep  +
push eax  +
call dword ptr [ecx+24h]  +
push 29h  +
call ds:IsOS  +
test eax eax +
jz loc_10216A3  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+var_210] +
push edx  +
push offset dword_1002450  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
cmp ebx edi +
jl loc_10216A2  +
cmp esi edi +
mov edi ds:PropVariantClear +
jz loc_1021647  +
lea eax [ebp+pvar] +
push eax  +
push esi  +
call sub_1020AC0  +
test eax eax +
jl loc_1021694  +
mov eax [ebp+var_210] +
mov ecx [eax] +
lea edx [ebp+pvar] +
push edx  +
push offset dword_100293C  +
push eax  +
call dword ptr [ecx+18h]  +
mov ebx eax +
lea eax [ebp+pvar] +
push eax  +
call edi  +
test ebx ebx +
jl loc_1021694  +
push 0Bh  +
pop eax  +
mov [ebp+pvar.vt] ax +
mov eax [ebp+arg_10] +
neg eax  +
sbb eax eax +
lea edx [ebp+pvar] +
push edx  +
mov word ptr [ebp+pvar.anonymous_0] ax +
mov eax [ebp+var_210] +
mov ecx [eax] +
push offset dword_1002950  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_102168B  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
lea eax [ebp+pvar] +
push eax  +
call edi  +
mov eax [ebp+var_210] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor edi edi +
pop ebx  +
mov eax [ebp+ppv] +
push [ebp+var_220]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
test eax eax +
jl loc_10217F0  +
cmp [ebp+var_21C] edi +
jz loc_10216DF  +
mov eax [ebp+ppv] +
push [ebp+var_21C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
test eax eax +
jl loc_10217F0  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_220] +
push edx  +
push offset dword_100292C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_10217F0  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push 1  +
push [ebp+var_218]  +
push eax  +
call dword ptr [ecx+18h]  +
test eax eax +
jl loc_10217E4  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_102173F  +
push [ebp+uID]  +
push offset aWindirSystem32  +
push [ebp+var_218]  +
call ds:SHSetLocalizedName  +
jmp loc_10217E4  +
push edi  +
push edi  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
push [ebp+var_218]  +
mov [ebp+var_210] edi +
call ds:SHParseDisplayName  +
test eax eax +
jl loc_10217E4  +
lea eax [ebp+var_21C] +
push eax  +
lea eax [ebp+var_218] +
push eax  +
push offset dword_1002400  +
push [ebp+var_210]  +
mov [ebp+var_21C] edi +
call ds:SHBindToParent  +
test eax eax +
jl loc_10217D8  +
mov eax dword_102837C +
cmp eax edi +
jnz loc_102179A  +
call sub_101F864  +
push 104h  +
lea ecx [ebp+Buffer] +
push ecx  +
push [ebp+uID]  +
push eax  +
call ds:LoadStringW  +
mov eax [ebp+var_218] +
mov ecx [eax] +
push edi  +
push edi  +
lea edx [ebp+Buffer] +
push edx  +
push [ebp+var_21C]  +
push edi  +
push eax  +
call dword ptr [ecx+30h]  +
mov eax [ebp+var_218] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+var_210]  +
call ds:SHELL32_155  +
mov eax [ebp+var_220] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1A94h +
call __alloca_probe  +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+lpszLongPath] +
push esi  +
push edi  +
mov edi ds:GetShortPathNameW +
mov [ebp+lpszDir] eax +
mov esi 104h +
push esi  +
lea eax [ebp+psz1] +
push eax  +
push ebx  +
mov [ebp+var_1A94] ebx +
call edi  +
test eax eax +
jz loc_102185D  +
cmp eax esi +
jb loc_10218B4  +
xor eax eax +
push ebx  +
mov [ebp+psz1] ax +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_101FDD2  +
test eax eax +
jl loc_10218B4  +
lea eax [ebp+FileName] +
push eax  +
call ds:PathRemoveFileSpecW  +
push esi  +
lea eax [ebp+psz1] +
push eax  +
push ebx  +
call edi  +
test eax eax +
jz loc_10218B4  +
cmp eax esi +
jnb loc_10218B4  +
push ebx  +
call ds:PathFindFileNameW  +
push eax  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+psz1] +
push eax  +
call ds:PathCombineW  +
lea eax [ebp+PathName] +
push eax  +
push esi  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jz loc_1021C5B  +
push [ebp+lpszDir]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jz loc_1021C4E  +
lea eax [ebp+szFile] +
push eax  +
push offset FileName  +
call ds:FindFirstFileW  +
xor edi edi +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_1021B57  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
test eax eax +
jl loc_1021B4B  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1A88] +
push edx  +
push offset dword_100292C  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1021B3F  +
mov eax [ebp+var_1A88] +
mov ecx [eax] +
push edi  +
lea edx [ebp-1A48h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1021B18  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push edi  +
push esi  +
lea edx [ebp+FileName] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_1021A2C  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
call ds:StrCmpIW  +
test eax eax +
jz loc_10219B3  +
cmp [ebp+psz1] di +
jz loc_1021A2C  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+psz1] +
push eax  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_1021A2C  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 800h  +
lea edx [ebp+pszPath] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
test eax eax +
jl loc_1021A2C  +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRemoveBlanksW  +
cmp [ebp+pszPath] di +
jz loc_1021A15  +
push offset aNohome  +
lea eax [ebp+pszPath] +
push eax  +
call ds:StrCmpICW  +
test eax eax +
jz loc_1021A15  +
push offset aExtoff  +
lea eax [ebp+pszPath] +
push eax  +
call ds:StrCmpICW  +
test eax eax +
jnz loc_1021B18  +
lea eax [ebp-1A48h] +
push eax  +
push [ebp+lpszDir]  +
call sub_1020FA3  +
jmp loc_1021B18  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1A80] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jl loc_1021B18  +
push [ebp+var_1A80]  +
push offset ppshf  +
call sub_102102F  +
test eax eax +
jz loc_1021A6D  +
lea eax [ebp-1A48h] +
push eax  +
push [ebp+lpszDir]  +
call sub_1020FA3  +
push [ebp+var_1A80]  +
push offset stru_1001F88  +
call sub_102102F  +
test eax eax +
jz loc_1021B0C  +
lea eax [ebp+hkey] +
push eax  +
push 20019h  +
push edi  +
push offset aSoftwareClient  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1021B0C  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push edi  +
push edi  +
push [ebp+hkey]  +
mov [ebp+pcbData] 208h +
call sub_1020B90  +
test eax eax +
jnz loc_1021B00  +
cmp ax word ptr [ebp+pvData] +
jz loc_1021AEE  +
lea eax [ebp+pvData] +
push eax  +
push offset psz1  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_1021B00  +
lea eax [ebp-1A48h] +
push eax  +
push [ebp+lpszDir]  +
call sub_1020FA3  +
push [ebp+hkey]  +
call ds:RegCloseKey  +
push [ebp+var_1A80]  +
call ds:SHELL32_155  +
lea eax [ebp+szFile] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1021942  +
mov eax [ebp+var_1A88] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+hFindFile]  +
call ds:FindClose  +
cmp [ebp+arg_8] 1 +
jnz loc_1021C4E  +
push [ebp+lpszDir]  +
lea eax [ebp+FileName] +
push esi  +
push eax  +
call sub_101FDD2  +
push offset asc_10024F0  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_10214DF  +
test eax eax +
jl loc_1021C4E  +
push edi  +
push edi  +
push 1  +
lea eax [ebp+szFile] +
push eax  +
push edi  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileExW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1021C4E  +
mov ebx ds:lstrcmpW +
push offset String2  +
lea eax [ebp-1A48h] +
push eax  +
call ebx  +
test eax eax +
jz loc_1021C31  +
push offset a__  +
lea eax [ebp-1A48h] +
push eax  +
call ebx  +
test eax eax +
jz loc_1021C31  +
push [ebp+lpszDir]  +
lea eax [ebp+FileName] +
push esi  +
push eax  +
call sub_101FDD2  +
push offset SubBlock  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_10214DF  +
test eax eax +
jl loc_1021C31  +
lea eax [ebp-1A48h] +
push eax  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_10214DF  +
test eax eax +
jl loc_1021C31  +
push 1  +
push [ebp+var_1A94]  +
lea eax [ebp+FileName] +
push eax  +
call sub_1021811  +
lea eax [ebp+szFile] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1021BB8  +
push edi  +
call ds:FindClose  +
lea eax [ebp+PathName] +
push eax  +
call ds:SetCurrentDirectoryW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 824h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
push 25h  +
mov [ebp+szFile] ax +
call ds:IsOS  +
xor ebx ebx +
mov esi 104h +
test eax eax +
jnz loc_1021CE1  +
call ds:GetSystemDefaultUILanguage  +
mov ecx 409h +
cmp ax cx +
jz loc_1021CE1  +
mov eax dword_102837C +
cmp eax ebx +
jnz loc_1021CC6  +
call sub_101F864  +
push esi  +
lea ecx [ebp+szFile] +
push ecx  +
mov ecx [ebp+arg_4] +
shl ecx 5 +
push ds:dword_1001C88[ecx]  +
push eax  +
call ds:LoadStringW  +
cmp [ebp+szFile] bx +
jnz loc_1021D03  +
mov eax [ebp+arg_4] +
shl eax 5 +
push ds:off_1001C84[eax]  +
lea eax [ebp+szFile] +
push esi  +
push eax  +
call sub_101FDD2  +
push offset pszExt  +
lea eax [ebp+szFile] +
push eax  +
call ds:PathAddExtensionW  +
lea eax [ebp+szFile] +
push eax  +
push edi  +
lea eax [ebp+szDest] +
push eax  +
call ds:PathCombineW  +
mov edi ds:PathRemoveFileSpecW +
cmp [ebp+arg_8] ebx +
jz loc_1021D60  +
lea eax [ebp+szDest] +
push eax  +
push esi  +
lea eax [ebp+pszPath] +
push eax  +
call sub_101FDD2  +
lea eax [ebp+pszPath] +
push eax  +
call edi  +
lea eax [ebp+pszPath] +
push eax  +
push ebx  +
call ds:SHELL32_165  +
push esi  +
lea eax [ebp+szLongPath] +
push eax  +
call sub_1024FDC  +
cmp [ebp+arg_8] ebx +
jz loc_1021DBB  +
mov eax [ebp+arg_4] +
shl eax 5 +
cmp ds:dword_1001C94[eax] ebx +
jnz loc_1021DF2  +
xor ecx ecx +
cmp [ebp+arg_4] 3 +
jnz loc_1021D8D  +
mov ecx offset aExtoff_0 +
push ds:dword_1001C90[eax]  +
push ds:dword_1001C8C[eax]  +
push ds:dword_1001C9C[eax]  +
push ds:off_1001C98[eax]  +
lea eax [ebp+szDest] +
push eax  +
push ecx  +
lea eax [ebp+szLongPath] +
push eax  +
call sub_1021539  +
jmp loc_1021DF2  +
lea eax [ebp+szDest] +
push eax  +
push esi  +
lea eax [ebp+pszPath] +
push eax  +
call sub_101FDD2  +
lea eax [ebp+pszPath] +
push eax  +
call edi  +
test eax eax +
jz loc_1021DF2  +
push [ebp+arg_C]  +
lea eax [ebp+szLongPath] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1021811  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword ptr [ebp+arg_0] +
and [ebp+pvData] 0 +
push esi  +
push edi  +
push eax  +
push offset aSoftwareMic_13  +
lea eax [ebp+pszSubKey] +
push 104h  +
push eax  +
call sub_101FF8B  +
add esp 10h +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push 0  +
mov edi offset aAttributes_0 +
push edi  +
lea eax [ebp+pszSubKey] +
push eax  +
mov esi 80000001h +
push esi  +
mov [ebp+pcbData] 4 +
call ds:SHGetValueW  +
mov eax [ebp+pvData] +
and eax [ebp+arg_4] +
push 4  +
or eax [ebp+arg_8] +
mov [ebp+pvData] eax +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push edi  +
lea eax [ebp+pszSubKey] +
push eax  +
push esi  +
call ds:__imp_SHSetValueW  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
cmp [ebp+arg_8] edi +
jbe loc_1021F0A  +
push 0  +
push dword ptr [esi+edi*4]  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_1021F04  +
push [ebp+arg_C]  +
lea eax [ebp+szPath] +
push 0  +
push [ebp+arg_0]  +
push eax  +
call sub_1021C71  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_1021ED8  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 61Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor edi edi +
push edi  +
push [ebp+nFolder]  +
lea eax [ebp+szDir] +
push eax  +
push edi  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_1022034  +
push ebx  +
push esi  +
mov esi ds:PathCombineW +
push offset szFile  +
lea eax [ebp+szDir] +
push eax  +
lea eax [ebp+szDest] +
push eax  +
call esi  +
push edi  +
push edi  +
push 2  +
lea eax [ebp+szDest] +
push eax  +
call sub_1021C71  +
mov eax dword_102837C +
cmp eax edi +
jnz loc_1021F8C  +
call sub_101F864  +
mov edi ds:LoadStringW +
push 104h  +
lea ecx [ebp+szFile] +
push ecx  +
push 2DBh  +
push eax  +
call edi  +
mov ebx ds:PathRemoveExtensionW +
lea eax [ebp+szFile] +
push eax  +
call ebx  +
lea eax [ebp+szFile] +
push eax  +
lea eax [ebp+szDir] +
push eax  +
lea eax [ebp+szDest] +
push eax  +
call esi  +
push 0  +
push 0  +
push 2  +
lea eax [ebp+szDest] +
push eax  +
call sub_1021C71  +
mov eax dword_102837C +
test eax eax +
jnz loc_1021FEC  +
call sub_101F864  +
push 104h  +
lea ecx [ebp+szFile] +
push ecx  +
push 2DDh  +
push eax  +
call edi  +
lea eax [ebp+szFile] +
push eax  +
call ebx  +
lea eax [ebp+szFile] +
push eax  +
lea eax [ebp+szDir] +
push eax  +
lea eax [ebp+szDest] +
push eax  +
call esi  +
push 0  +
push 0  +
push 2  +
lea eax [ebp+szDest] +
push eax  +
call sub_1021C71  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1023EAD  +
leave   +
retn 4  +
***
push 17h  +
call sub_1021F1F  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_102207A  +
push 0  +
push 0FFEFFFFFh  +
push offset a871c538042a010  +
call sub_1021E08  +
jmp loc_10220AD  +
call sub_1021124  +
push 100000h  +
push 0FFFFFFFFh  +
push offset a871c538042a010  +
call sub_1021E08  +
push 25h  +
call ds:IsOS  +
test eax eax +
jnz loc_10220AD  +
cmp [ebp+arg_4] al +
jnz loc_10220A8  +
call sub_1023A8C  +
jmp loc_10220AD  +
call sub_1021258  +
push 0  +
call sub_1020BE9  +
push 10h  +
call sub_1020BE9  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0 +
jl loc_1022154  +
push [ebp+fCreate]  +
lea eax [ebp+PathName] +
push 1Ah  +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_1022154  +
mov eax dword_102837C +
test eax eax +
jnz loc_1022105  +
call sub_101F864  +
push 104h  +
lea ecx [ebp+pMore] +
push ecx  +
push 2DAh  +
push eax  +
call ds:LoadStringW  +
lea eax [ebp+pMore] +
push eax  +
lea eax [ebp+PathName] +
push eax  +
call ds:__imp_PathAppendW  +
push 0  +
lea eax [ebp+PathName] +
push eax  +
call ds:CreateDirectoryW  +
push 0  +
push [ebp+fCreate]  +
lea eax [ebp+PathName] +
push [ebp+arg_0]  +
push eax  +
call sub_1021C71  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi [ebp+fCreate] +
jl loc_10221AE  +
push esi  +
push 2  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_10221AE  +
push 1  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+szPath] +
push eax  +
call sub_1021C71  +
cmp [ebp+arg_4] 0 +
jl loc_10221D6  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_10221CD  +
test esi esi +
jz loc_10221CD  +
call sub_1021332  +
test al al +
jz loc_10221D6  +
push esi  +
push [ebp+arg_4]  +
call sub_10220C4  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 260h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi 104h +
push edi  +
lea eax [ebp+CommandLine] +
push eax  +
xor esi esi +
push esi  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_1022293  +
push offset aCleariconcache  +
push edi  +
lea eax [ebp+CommandLine] +
push eax  +
call sub_10214DF  +
test eax eax +
jl loc_1022293  +
push 44h  +
pop edi  +
push edi  +
lea eax [ebp+StartupInfo] +
push esi  +
push eax  +
call memset  +
mov [ebp+StartupInfo.cb] edi +
xor eax eax +
lea edi [ebp+hObject] +
stos   +
stos   +
add esp 0Ch +
stos   +
stos   +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+CommandLine] +
push eax  +
push esi  +
call ds:CreateProcessW  +
test eax eax +
jz loc_1022293  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-218h]  +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push 2  +
pop ebx  +
push ebx  +
push 0  +
call ds:CoInitializeEx  +
test eax eax +
jl loc_10223A3  +
push esi  +
call sub_1020D84  +
push [ebp+arg_0]  +
mov esi eax +
push esi  +
call sub_102205C  +
push esi  +
push ebx  +
lea eax [ebp+szPath] +
push eax  +
push 0  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_1022307  +
push 1  +
push esi  +
push 3  +
lea eax [ebp+szPath] +
push eax  +
call sub_1021C71  +
push esi  +
push 1  +
push 0  +
call sub_1022167  +
test esi esi +
jnz loc_1022378  +
push esi  +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
push ebx  +
mov [ebp+var_214] 10h +
mov [ebp+var_210] 19h +
call sub_1021EB7  +
push 17h  +
pop esi  +
push 1  +
push ebx  +
lea eax [ebp+var_214] +
push eax  +
push ebx  +
mov [ebp+var_214] esi +
mov [ebp+var_210] 6 +
call sub_1021EB7  +
push 1  +
push 1  +
lea eax [ebp+var_210] +
push eax  +
push 4  +
mov [ebp+var_210] esi +
call sub_1021EB7  +
call sub_1022048  +
push offset aSoftwareClie_0  +
push 0  +
push 1Ah  +
push 0FFFFh  +
call ds:PostMessageW  +
push 0  +
call sub_10213A0  +
pop esi  +
test al al +
jnz loc_102239D  +
call sub_10221EA  +
call ds:CoUninitialize  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push 2  +
xor ebx ebx +
push ebx  +
call ds:CoInitializeEx  +
test eax eax +
jl loc_102263E  +
cmp [ebp+arg_0] ebx +
jnz loc_10223F2  +
call sub_1020B3C  +
test eax eax +
jnz loc_1022638  +
push esi  +
push edi  +
push [ebp+arg_8]  +
mov [ebp+var_20D] bl +
push [ebp+arg_0]  +
call sub_102142B  +
cmp [ebp+arg_0] ebx +
jz loc_1022433  +
push [ebp+arg_4]  +
call sub_10212BC  +
push [ebp+arg_4]  +
mov esi offset aSoftwareClient +
push 1  +
push ebx  +
mov edi offset psz1 +
mov edx esi +
mov ecx 80000002h +
call sub_1020C9D  +
jmp loc_1022521  +
lea eax [ebp+hkey] +
push eax  +
push 3  +
push ebx  +
mov esi offset aSoftwareClient +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10224B2  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push ebx  +
push ebx  +
push [ebp+hkey]  +
mov [ebp+pcbData] 208h +
call sub_1020B90  +
test eax eax +
jnz loc_10224A6  +
lea eax [ebp+pvData] +
push eax  +
push offset psz1  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_10224A6  +
push ebx  +
push offset Data  +
push 1  +
push ebx  +
push [ebp+hkey]  +
call ds:RegSetValueW  +
push [ebp+hkey]  +
call ds:RegCloseKey  +
push ebx  +
push 1  +
lea eax [ebp+pcbData] +
push eax  +
push 2  +
mov [ebp+pcbData] 19h +
call sub_1021EB7  +
push 17h  +
pop edi  +
push 1  +
push 2  +
lea eax [ebp+var_21C] +
push eax  +
push 2  +
mov [ebp+var_21C] edi +
mov [ebp+pcbData] 6 +
call sub_1021EB7  +
push 1  +
push 1  +
lea eax [ebp+pcbData] +
push eax  +
push 4  +
mov [ebp+pcbData] edi +
call sub_1021EB7  +
push edi  +
call sub_1021F1F  +
push offset ppshf  +
call sub_1022A27  +
mov [ebp+var_20D] 1 +
call sub_1020C24  +
test eax eax +
jnz loc_1022600  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_10225CC  +
cmp [ebp+arg_0] ebx +
jz loc_1022550  +
call sub_1023AFD  +
test al al +
jnz loc_10225E5  +
lea eax [ebp+hkey] +
push eax  +
push 3  +
push ebx  +
push esi  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10225E5  +
lea eax [ebp+pcbData] +
push eax  +
lea eax [ebp+pvData] +
push eax  +
push ebx  +
push ebx  +
push [ebp+hkey]  +
mov [ebp+pcbData] 208h +
call sub_1020B90  +
test eax eax +
jnz loc_10225BE  +
lea eax [ebp+pvData] +
push eax  +
push offset psz1  +
call ds:StrCmpIW  +
test eax eax +
jnz loc_10225BE  +
push ebx  +
push offset Data  +
push 1  +
push ebx  +
push [ebp+hkey]  +
call ds:RegSetValueW  +
push [ebp+hkey]  +
call ds:RegCloseKey  +
jmp loc_10225E5  +
cmp [ebp+arg_0] ebx +
jnz loc_10225E5  +
push ebx  +
push ebx  +
push ebx  +
mov edi offset psz1 +
mov edx esi +
mov ecx 80000001h +
call sub_1020C9D  +
push ebx  +
call sub_10222A6  +
push [ebp+arg_0]  +
push offset aSoftwareMic_14  +
call sub_1020E8E  +
push ebx  +
call sub_1020BE9  +
jmp loc_1022613  +
push offset aSoftwareClie_0  +
push ebx  +
push 1Ah  +
push 0FFFFh  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
cmp [ebp+var_20D] bl +
jz loc_102262B  +
push ebx  +
push ebx  +
push ebx  +
push 8000000h  +
call ds:SHChangeNotify  +
push [ebp+arg_0]  +
push offset aIexplore_exe_0  +
call sub_1020F51  +
call ds:CoUninitialize  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
test eax eax +
jz locret_102267E  +
call sub_1020D84  +
test eax eax +
jz locret_102267E  +
call sub_1021332  +
test al al +
jnz locret_102267E  +
push 1  +
push 1  +
call sub_10220C4  +
jmp loc_1021483  +
retn   +
***
call sub_102618B  +
push eax  +
call sub_10223B7  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1048h +
call __alloca_probe  +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+hMenu] +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_1014] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov [ebp+var_1018] esi +
mov [ebp+var_1010] eax +
call ds:GetMenuItemCount  +
mov ecx [ebp+arg_C] +
and dword ptr [esi] 0 +
cmp ecx eax +
mov [ebp+var_100C] eax +
mov [ebp+var_1008] ecx +
jge loc_1022832  +
mov esi ds:GetMenuItemInfoW +
push edi  +
mov edi 400h +
push 2Ch  +
lea eax [ebp+var_1048.fMask] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_1048] +
push eax  +
push edi  +
push [ebp+var_1008]  +
mov [ebp+var_1048.cbSize] 30h +
push ebx  +
mov [ebp+var_1048.fMask] 12h +
call esi  +
test eax eax +
jz loc_1022806  +
mov eax 800h +
test [ebp+var_1048.fType] eax +
jnz loc_1022806  +
mov ecx [ebp+var_1048.wID] +
test ecx 0FFFF0000h +
jnz loc_1022806  +
cmp ecx [ebp+arg_8] +
jb loc_1022806  +
mov [ebp+var_1048.cch] eax +
lea eax [ebp+var_1048] +
push eax  +
push edi  +
push [ebp+var_1008]  +
xor ecx ecx +
mov word ptr [ebp+var_1004] cx +
lea ecx [ebp+var_1004] +
push ebx  +
mov [ebp+var_1048.cbSize] 30h +
mov [ebp+var_1048.fMask] 40h +
mov [ebp+var_1048.dwTypeData] ecx +
call esi  +
test eax eax +
jz loc_10227C5  +
push offset aA4756f804ae74a  +
lea eax [ebp+var_1004] +
push eax  +
call ds:StrCmpICW  +
test eax eax +
jz loc_1022806  +
mov eax [ebp+var_1014] +
mov ecx [eax] +
push 200h  +
lea edx [ebp+var_1004] +
push edx  +
mov edx [ebp+var_1048.wID] +
sub edx [ebp+arg_8] +
push 0  +
push 4  +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jl loc_1022806  +
push [ebp+var_1010]  +
lea eax [ebp+var_1004] +
push eax  +
call ds:StrCmpICW  +
test eax eax +
jz loc_1022820  +
inc [ebp+var_1008]  +
mov eax [ebp+var_1008] +
cmp eax [ebp+var_100C] +
jl loc_10226FF  +
jmp loc_1022831  +
mov eax [ebp+var_1048.wID] +
sub eax [ebp+arg_8] +
mov ecx [ebp+var_1018] +
mov [ecx] eax +
pop edi  +
mov eax [ebp+var_100C] +
pop esi  +
pop ebx  +
cmp [ebp+var_1008] eax +
jnz loc_1022849  +
or [ebp+var_1008] 0FFFFFFFFh +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1008] +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi offset aUnpin +
lea edi [ebp+var_10] +
movs   +
movs   +
movs   +
mov [ebp+var_18] eax +
mov byte ptr [eax] 0 +
call ds:CreatePopupMenu  +
mov ecx [ebx] +
xor esi esi +
push esi  +
push 7FFFh  +
push 1  +
push esi  +
push eax  +
push ebx  +
mov [ebp+hMenu] eax +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi esi +
jl loc_1022904  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push esi  +
push 1  +
push ebx  +
push [ebp+hMenu]  +
call sub_1022699  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1022900  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_40] +
stos   +
movzx eax word ptr [ebp+var_1C] +
lea ecx [ebp+var_40] +
push ecx  +
mov [ebp+var_34] eax +
mov eax [ebx] +
push ebx  +
mov [ebp+var_40] 24h +
mov [ebp+var_3C] 400h +
call dword ptr [eax+10h]  +
mov edi eax +
test edi edi +
jl loc_10228FF  +
mov eax [ebp+var_18] +
mov byte ptr [eax] 1 +
inc esi  +
test esi esi +
jge loc_10228AF  +
push [ebp+hMenu]  +
call ds:DestroyMenu  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push 25h  +
mov edi 80004005h +
call ds:IsOS  +
test eax eax +
jz loc_1022978  +
push offset aShell32_dll  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_102297D  +
push offset aShcreateitemfr  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_102296F  +
push [ebp+arg_4]  +
push offset dword_100260C  +
push 0  +
push [ebp+arg_0]  +
call eax  +
mov edi eax +
push esi  +
call ds:FreeLibrary  +
jmp loc_102297D  +
mov edi 80004001h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
mov [edi] bl +
mov [ebp+arg_4] ebx +
call ds:SHParseDisplayName  +
mov esi eax +
cmp esi ebx +
jl loc_1022A19  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset dword_1002400  +
push [ebp+arg_4]  +
mov [ebp+arg_0] ebx +
call ds:SHBindToParent  +
mov esi eax +
cmp esi ebx +
jl loc_1022A10  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push ebx  +
push offset dword_1002650  +
lea edx [ebp+arg_0] +
push edx  +
push 1  +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jl loc_1022A07  +
push edi  +
push [ebp+var_4]  +
call sub_1022862  +
mov esi eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push [ebp+arg_4]  +
call ds:SHELL32_155  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push 25h  +
call ds:IsOS  +
test eax eax +
jz loc_1022A8D  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+ppv]  +
call sub_1022925  +
mov esi eax +
test esi esi +
jl loc_1022AA5  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002660  +
push 1  +
push 0  +
push offset stru_1002984  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_1022A82  +
mov eax [ebp+ppv] +
push [ebp+var_8]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1022AA5  +
mov byte ptr [ebp+var_1] 0 +
lea eax [ebp+var_1] +
push eax  +
push [ebp+ppv]  +
call sub_102298A  +
cmp byte ptr [ebp+var_1] 0 +
mov esi eax +
jnz loc_1022A91  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
mov [esi+4] ax +
xor eax eax +
mov [esi+6] ax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] 1 +
mov [esi+8] eax +
call ds:GetTickCount  +
and dword ptr [esi+10h] 0 +
mov [esi+0Ch] eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
lea eax [ebp+pInputs] +
push eax  +
push 0  +
push 11h  +
call sub_1022AB1  +
lea eax [ebp+var_54] +
push eax  +
push 0  +
push 1Bh  +
call sub_1022AB1  +
lea eax [ebp+var_38] +
push eax  +
push 2  +
push 1Bh  +
call sub_1022AB1  +
lea eax [ebp+var_1C] +
push eax  +
push 2  +
push 11h  +
call sub_1022AB1  +
push 1Ch  +
lea eax [ebp+pInputs] +
push eax  +
push 4  +
call ds:SendInput  +
cmp eax 4 +
jnz loc_1022B3E  +
xor eax eax +
leave   +
retn   +
test eax eax +
jnz loc_1022B49  +
call sub_1024E1A  +
leave   +
retn   +
cmp eax 2 +
sbb eax eax +
and eax 800703F2h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov [esi] edi +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] eax +
call ds:GetTickCount  +
mov [esi+18h] edi +
pop edi  +
mov [esi+14h] eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+Point] +
push eax  +
call ds:GetCursorPos  +
test eax eax +
jz loc_1022BBE  +
mov eax [ebp+arg_0] +
mov edx [eax] +
sub edx [ebp+Point.x] +
mov ecx [ebp+arg_4] +
mov [ecx+4] edx +
mov eax [eax+4] +
sub eax [ebp+Point.y] +
mov [ecx+8] eax +
xor eax eax +
jmp locret_1022BC3  +
call sub_1024E1A  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi ds:SystemParametersInfoW +
push edi  +
xor ebx ebx +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push ebx  +
push 3  +
call esi  +
test eax eax +
jz loc_1022C4C  +
xor eax eax +
mov [ebp+var_C] ebx +
lea edi [ebp+var_8] +
stos   +
push ebx  +
stos   +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
push 4  +
call esi  +
test eax eax +
jz loc_1022C39  +
lea eax [ebp+pInputs] +
push eax  +
push 1  +
call sub_1022B5A  +
lea eax [ebp+pInputs] +
push eax  +
push [ebp+arg_0]  +
call sub_1022B8E  +
mov edi eax +
cmp edi ebx +
jl loc_1022C40  +
push 1Ch  +
lea eax [ebp+pInputs] +
push eax  +
push 1  +
call ds:SendInput  +
cmp eax 1 +
jnz loc_1022C39  +
xor edi edi +
jmp loc_1022C40  +
call sub_1024E1A  +
mov edi eax +
push ebx  +
lea eax [ebp+pvParam] +
push eax  +
push ebx  +
push 4  +
call esi  +
jmp loc_1022C53  +
call sub_1024E1A  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
lea eax [ebp+pInputs] +
push eax  +
push 8  +
call sub_1022B5A  +
lea eax [ebp+var_1C] +
push eax  +
push 10h  +
call sub_1022B5A  +
push 1Ch  +
lea eax [ebp+pInputs] +
push eax  +
push 2  +
call ds:SendInput  +
cmp eax 2 +
jnz loc_1022C96  +
xor eax eax +
leave   +
retn   +
test eax eax +
jnz loc_1022CA1  +
call sub_1024E1A  +
leave   +
retn   +
mov eax 80070014h +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp ppacc 0 +
jnz locret_1022CF1  +
push edi  +
xor eax eax +
mov word ptr [ebp+pvarChild.anonymous_0] ax +
lea edi [ebp+pvarChild.anonymous_0+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+pvarChild] +
push eax  +
push offset ppacc  +
push [ebp+dwChildId]  +
push [ebp+dwId]  +
push [ebp+hwnd]  +
call AccessibleObjectFromEvent  +
pop edi  +
test eax eax +
jl locret_1022CF1  +
push 0  +
call ds:PostQuitMessage  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 5 +
jz loc_1022D17  +
dec eax  +
dec eax  +
jz loc_1022D17  +
sub eax 7FFBh +
jz loc_1022D23  +
sub eax 4 +
jnz loc_1022D1F  +
push 0  +
call ds:PostQuitMessage  +
pop ebp  +
retn 1Ch  +
push [ebp+dwChildId]  +
push [ebp+dwId]  +
push [ebp+hwnd]  +
call sub_1022CAD  +
jmp loc_1022D1F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
xor eax eax +
push eax  +
push eax  +
push offset pfnWinEventProc  +
push eax  +
push [ebp+eventMax]  +
push [ebp+eventMax]  +
call ds:SetWinEventHook  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FF8FA69h +
add eax 80070597h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push 0BB8h  +
push ebx  +
push ebx  +
mov ppacc ebx +
call ds:SetTimer  +
mov esi ds:GetMessageW +
mov edi eax +
mov [ebp+var_1] bl +
jmp loc_1022DC4  +
cmp [ebp+Msg.hwnd] ebx +
jnz loc_1022DBA  +
cmp [ebp+Msg.message] 113h +
jnz loc_1022DBA  +
push ebx  +
mov [ebp+var_1] 1 +
call ds:PostQuitMessage  +
jmp loc_1022DC4  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jnz loc_1022D9F  +
push edi  +
push ebx  +
call ds:KillTimer  +
cmp [ebp+var_1] bl +
jnz loc_1022E02  +
mov edx [ebp+arg_0] +
xor eax eax +
cmp edx ebx +
jz loc_1022E1C  +
mov ecx ppacc +
cmp ecx ebx +
jz loc_1022DFB  +
mov [edx] ecx +
mov ppacc ebx +
jmp loc_1022E1C  +
mov eax 80004002h +
jmp loc_1022E1C  +
mov eax ppacc +
cmp eax ebx +
jz loc_1022E17  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ppacc ebx +
mov eax 80070102h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+hWinEventHook] +
lea eax [ebp+hWinEventHook] +
push eax  +
push 8002h  +
mov byte ptr [edi] 0 +
call sub_1022D38  +
mov esi eax +
test esi esi +
jl loc_1022E6A  +
call sub_1022AEB  +
mov esi eax +
test esi esi +
jl loc_1022E61  +
push [ebp+arg_0]  +
mov byte ptr [edi] 1 +
call sub_1022D71  +
mov esi eax +
push [ebp+hWinEventHook]  +
call ds:UnhookWinEvent  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+hWinEventHook] +
push eax  +
push 7  +
call sub_1022D38  +
mov esi eax +
test esi esi +
jl loc_1022EAC  +
call sub_1022AEB  +
mov esi eax +
test esi esi +
jl loc_1022EA3  +
push 0  +
call sub_1022D71  +
mov esi eax +
push [ebp+hWinEventHook]  +
call ds:UnhookWinEvent  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edx [ebp+arg_0] +
push edx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
test eax eax +
jnz loc_1022F26  +
mov ecx [ebp+arg_0] +
cmp [ebp+arg_0] eax +
jnz loc_1022EE8  +
mov ecx offset Data +
mov eax [ebp+arg_8] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1022F11  +
test dx dx +
jz loc_1022F0D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1022F11  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1022EEB  +
xor eax eax +
jmp loc_1022F16  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
push [ebp+arg_0]  +
test eax eax +
setz bl  +
call ds:SysFreeString  +
jmp loc_1022F28  +
xor bl bl +
pop edi  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor eax eax +
mov word ptr [ebp+var_10] ax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
test eax eax +
jnz loc_1022F76  +
mov eax [ebp+arg_8] +
cmp eax [ebp+var_8] +
setz al  +
jmp loc_1022F78  +
xor al al +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_C] 0 +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
jnz loc_1022F9E  +
call sub_1022EB6  +
jmp loc_1022FA3  +
call sub_1022F36  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+Point] +
push eax  +
call ds:GetCursorPos  +
mov eax [ebp+hWinEventHook] +
mov ecx [eax+8] +
sar ecx 1 +
add ecx [eax] +
mov [ebp+var_8] ecx +
mov ecx [eax+0Ch] +
sar ecx 1 +
add ecx [eax+4] +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_4] ecx +
call sub_1022BCC  +
mov esi eax +
test esi esi +
jl loc_1023018  +
lea eax [ebp+hWinEventHook] +
push eax  +
push 8002h  +
call sub_1022D38  +
mov esi eax +
test esi esi +
jl loc_1023018  +
call sub_1022C61  +
mov esi eax +
test esi esi +
jl loc_102300F  +
push [ebp+arg_4]  +
call sub_1022D71  +
mov esi eax +
push [ebp+hWinEventHook]  +
call ds:UnhookWinEvent  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
push esi  +
lea eax [ebp+hWinEventHook] +
push eax  +
push 5  +
call sub_1022D38  +
mov esi eax +
test esi esi +
jl loc_1023093  +
lea eax [ebp+pInputs] +
push eax  +
push 0  +
push 1Bh  +
call sub_1022AB1  +
lea eax [ebp+var_20] +
push eax  +
push 2  +
push 1Bh  +
call sub_1022AB1  +
push 1Ch  +
lea eax [ebp+pInputs] +
push eax  +
push 2  +
call ds:SendInput  +
cmp eax 2 +
jz loc_1023081  +
test eax eax +
jnz loc_1023078  +
call sub_1024E1A  +
mov esi eax +
jmp loc_102307D  +
mov esi 800703F2h +
test esi esi +
jl loc_102308A  +
push 0  +
call sub_1022D71  +
mov esi eax +
push [ebp+hWinEventHook]  +
call ds:UnhookWinEvent  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+nBufferMax] +
push esi  +
push [ebp+lpBuffer]  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
test eax eax +
jle loc_10230C3  +
dec esi  +
cmp eax esi +
jnb loc_10230CA  +
xor eax eax +
jmp loc_10230CF  +
call sub_1024E1A  +
jmp loc_10230CF  +
mov eax 8007007Ah +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
push 0  +
push 8  +
push offset aIeframe_dll  +
call sub_1025656  +
mov ebx eax +
test ebx ebx +
jz loc_102313C  +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
push 2801h  +
push ebx  +
call sub_102309D  +
mov edi eax +
test edi edi +
jl loc_1023134  +
push esi  +
push [ebp+lpBuffer]  +
mov esi ds:SHStripMneumonicW +
call esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 2806h  +
push ebx  +
call sub_102309D  +
mov edi eax +
test edi edi +
jl loc_1023133  +
push [ebp+arg_8]  +
call esi  +
pop esi  +
push ebx  +
call sub_1025505  +
jmp loc_1023143  +
call sub_1024E1A  +
mov edi eax +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push 0  +
push offset aSoftwareMicr_3  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10231A9  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset aBinary  +
push eax  +
push [ebp+hKey]  +
call sub_1024EFA  +
mov esi eax +
test esi esi +
jl loc_102319E  +
push [ebp+arg_C]  +
push offset aResourceid  +
push 0  +
push [ebp+hKey]  +
call sub_1024E33  +
mov esi eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_10231B7  +
jle loc_10231B5  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 80000002h  +
call sub_1023150  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 80000001h  +
call sub_1023150  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+hkey] +
push eax  +
xor edi edi +
push edi  +
push 2  +
push edi  +
push edi  +
push edi  +
push offset aSoftwareMicr_3  +
push 80000001h  +
call ds:RegCreateKeyExW  +
cmp eax edi +
jnz loc_102328C  +
push [ebp+pvData]  +
push offset aResourceid  +
push edi  +
push [ebp+hkey]  +
call sub_1024E70  +
mov esi eax +
cmp esi edi +
jl loc_1023281  +
push [ebp+lpData]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push 1  +
push edi  +
push offset aBinary  +
push [ebp+hkey]  +
call ds:RegSetValueExW  +
cmp eax edi +
jnz loc_1023273  +
xor esi esi +
jmp loc_1023281  +
jle loc_102327F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push [ebp+hkey]  +
call ds:RegCloseKey  +
jmp loc_102329A  +
jle loc_1023298  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
call ds:SHDeleteKeyW  +
test eax eax +
jnz loc_10232BC  +
retn   +
jle locret_10232C8  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10231C3  +
mov esi eax +
test esi esi +
jge loc_1023316  +
push 2021h  +
push offset aExplorer_exe  +
call sub_1023205  +
mov esi eax +
test esi esi +
jl loc_1023316  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10231E4  +
mov esi eax +
test esi esi +
jl loc_1023316  +
call sub_10232A7  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+uID] +
push eax  +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
call sub_10232CE  +
mov esi eax +
test esi esi +
jl loc_102339E  +
push ebx  +
push 0  +
push 8  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1025656  +
mov ebx eax +
test ebx ebx +
jz loc_1023396  +
push [ebp+nBufferMax]  +
push edi  +
push [ebp+uID]  +
push ebx  +
call sub_102309D  +
mov esi eax +
test esi esi +
jl loc_102338E  +
push edi  +
call ds:SHStripMneumonicW  +
push ebx  +
call sub_1025505  +
jmp loc_102339D  +
call sub_1024E1A  +
mov esi eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1028390 +
xor al al +
push esi  +
mov esi [ebp+arg_0] +
test ecx ecx +
jz loc_10233F0  +
cmp esi ecx +
jz loc_10233F0  +
mov edx dword_102838C +
test edx edx +
jz loc_10233E6  +
push edi  +
mov edi esi +
sub edi ecx +
cmp edx edi +
pop edi  +
jz loc_10233F0  +
inc al  +
jmp loc_10233F0  +
mov edx esi +
sub edx ecx +
mov dword_102838C edx +
mov dword_1028390 esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov eax [ebx] +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push ebx  +
mov [ebp+var_4] 80070491h +
movs   +
call dword ptr [eax+24h]  +
test eax eax +
jnz loc_10234B9  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_4] +
push edx  +
push offset dword_1002714  +
push eax  +
call dword ptr [ecx]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_10234AE  +
xor eax eax +
lea edi [ebp+var_14+2] +
stos   +
stos   +
stos   +
push 3  +
stos   +
and [ebp+var_C] 0 +
pop eax  +
push [ebp+arg_C]  +
mov word ptr [ebp+var_14] ax +
push [ebp+arg_8]  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+arg_4]  +
call sub_1022F83  +
test al al +
jnz loc_1023498  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1023668  +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10234AE  +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_4] +
mov edi [ebp+arg_14] +
and [ebp+var_4] 0 +
mov [eax] ecx +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10234E3  +
push [ebp+arg_C]  +
mov esi [ebp+arg_4] +
push [ebp+arg_8]  +
push esi  +
push ebx  +
call sub_1022F83  +
test al al +
jz loc_10234E3  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
mov eax [ebp+arg_10] +
mov edi [ebp+arg_14] +
and [ebp+var_4] 0 +
mov [eax] ebx +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
mov [ebp+var_4] 80070491h +
call dword ptr [eax+20h]  +
test eax eax +
jl loc_1023558  +
push esi  +
push edi  +
xor eax eax +
lea edi [ebp+var_14+2] +
stos   +
stos   +
stos   +
xor esi esi +
stos   +
push 3  +
inc esi  +
cmp [ebp+arg_0] esi +
pop eax  +
mov word ptr [ebp+var_14] ax +
jl loc_1023556  +
cmp [ebp+var_4] 0 +
jge loc_1023556  +
push [ebp+arg_10]  +
lea eax [ebp+var_14] +
push [ebp+arg_C]  +
mov [ebp+var_C] esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push ebx  +
call sub_1023400  +
inc esi  +
cmp esi [ebp+arg_0] +
mov [ebp+var_4] eax +
jle loc_102352E  +
pop edi  +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea edi [ebp+pvarg.anonymous_0+2] +
stos   +
stos   +
stos   +
stos   +
mov edi [ebp+arg_4] +
mov eax [edi] +
push edi  +
mov esi 80070491h +
call dword ptr [eax+14h]  +
mov ebx [ebp+arg_10] +
jmp loc_1023594  +
mov edi [ebp+arg_4] +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+pvarg] +
push ecx  +
push 1  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_102365A  +
push 3  +
pop eax  +
cmp ax word ptr [ebp+pvarg.anonymous_0] +
jnz loc_10235CF  +
push [ebp+arg_14]  +
lea eax [ebp+pvarg] +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_1023400  +
mov esi eax +
jmp loc_1023648  +
push 9  +
pop eax  +
cmp ax word ptr [ebp+pvarg.anonymous_0] +
jnz loc_1023648  +
mov eax dword ptr [ebp+pvarg.anonymous_0+8] +
mov ecx [eax] +
lea edx [ebp+arg_10] +
push edx  +
push offset dword_1002714  +
push eax  +
call dword ptr [ecx]  +
test eax eax +
jl loc_1023648  +
xor eax eax +
lea edi [ebp+var_24+2] +
stos   +
stos   +
stos   +
push 3  +
stos   +
and [ebp+var_1C] 0 +
pop eax  +
push [ebp+arg_C]  +
mov word ptr [ebp+var_24] ax +
push [ebp+arg_8]  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+arg_10]  +
call sub_1022F83  +
test al al +
jnz loc_1023637  +
push [ebp+arg_14]  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
call sub_1023668  +
mov esi eax +
mov eax [ebp+arg_10] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_1023648  +
mov eax [ebp+arg_10] +
mov edi [ebp+arg_14] +
mov [ebx] eax +
lea esi [ebp+var_24] +
movs   +
movs   +
movs   +
movs   +
xor esi esi +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
test esi esi +
jl loc_1023591  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push offset dword_1002724  +
push esi  +
call dword ptr [eax]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
test eax eax +
jl loc_10236A5  +
push [ebp+arg_0]  +
push esi  +
call sub_1023565  +
mov esi eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10236AD  +
push esi  +
call sub_10234F2  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1023668  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1023668  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1023322  +
mov esi eax +
test esi esi +
jl loc_10237BA  +
xor eax eax +
mov word ptr [ebp+var_11C] ax +
lea edi [ebp+var_11C+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_11C] +
push eax  +
lea eax [ebp+var_108] +
push eax  +
lea eax [ebp+var_104] +
push eax  +
push ebx  +
call sub_10236B9  +
mov esi eax +
test esi esi +
jl loc_10237BA  +
lea eax [ebp+hWinEventHook] +
push eax  +
push 5  +
call sub_1022D38  +
mov esi eax +
test esi esi +
jl loc_10237AE  +
mov eax dword ptr [ebp+var_108] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_11C] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+64h]  +
mov esi eax +
test esi esi +
jl loc_10237A2  +
push 0  +
call sub_1022D71  +
push [ebp+hWinEventHook]  +
call ds:UnhookWinEvent  +
mov eax dword ptr [ebp+var_108] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push edi  +
xor eax eax +
mov word ptr [ebp+var_10] ax +
lea edi [ebp+var_10+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10236B9  +
mov esi eax +
test esi esi +
jl loc_102380C  +
mov eax dword ptr [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+hWinEventHook] +
push eax  +
push [ebp+hWinEventHook]  +
call sub_1022FAC  +
mov esi eax +
test esi esi +
jl loc_102386B  +
push edi  +
push dword ptr [ebp+arg_0]  +
mov edi [ebp+hWinEventHook] +
push edi  +
call sub_10237D2  +
mov esi eax +
test esi esi +
jl loc_102385F  +
push dword ptr [ebp+arg_4]  +
push edi  +
call sub_10237D2  +
mov esi eax +
test esi esi +
jl loc_102385F  +
push edi  +
call sub_10236FB  +
mov esi eax +
test esi esi +
jge loc_1023864  +
call sub_1023024  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
lea edx [ebp+arg_0] +
push edx  +
push offset dword_1002724  +
push eax  +
xor bl bl +
call dword ptr [ecx]  +
test eax eax +
jl loc_102389F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push eax  +
inc bl  +
call dword ptr [ecx+8]  +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor eax eax +
mov word ptr [ebp+var_228] ax +
lea edi [ebp+var_228+2] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_228] +
push eax  +
lea eax [ebp+var_208] +
push eax  +
push 0Bh  +
push ecx  +
call sub_10236DA  +
mov [ebp+var_214] eax +
test eax eax +
jl loc_1023A70  +
push dword ptr [ebp+var_208]  +
call sub_1023877  +
test al al +
jnz loc_1023A70  +
mov eax 80h +
push eax  +
lea ecx [ebp+var_104] +
push ecx  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call sub_10230D9  +
mov [ebp+var_214] eax +
test eax eax +
jl loc_1023A64  +
mov eax dword ptr [ebp+var_208] +
mov ecx [eax] +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+20h]  +
mov [ebp+var_214] eax +
test eax eax +
jnz loc_1023A64  +
push 3  +
pop eax  +
mov word ptr [ebp+var_228] ax +
xor eax eax +
inc eax  +
cmp [ebp+var_20C] eax +
mov [ebp+var_210] eax +
jl loc_1023A64  +
sub esp 10h +
mov edi esp +
mov [ebp+var_220] eax +
mov eax dword ptr [ebp+var_208] +
mov ecx [eax] +
lea esi [ebp+var_228] +
movs   +
lea edx [ebp+var_22C] +
push edx  +
movs   +
lea edx [ebp+var_230] +
push edx  +
lea edx [ebp+var_234] +
push edx  +
movs   +
lea edx [ebp+hWinEventHook] +
push edx  +
push eax  +
movs   +
call dword ptr [ecx+58h]  +
test eax eax +
jnz loc_1023A4B  +
push [ebp+var_234]  +
call sub_10233B5  +
test al al +
jnz loc_1023A64  +
lea eax [ebp+hWinEventHook] +
push eax  +
lea eax [ebp+var_104] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
call sub_1023819  +
test eax eax +
jl loc_1023A4B  +
mov eax [ebp+var_20C] +
mov [ebp+var_220] eax +
xor ebx ebx +
jmp loc_1023A19  +
push [ebp+var_218]  +
call ds:SysFreeString  +
push 0Ah  +
call ds:Sleep  +
inc ebx  +
cmp ebx 0Ah +
jnb loc_1023A3F  +
mov eax dword ptr [ebp+var_208] +
mov ecx [eax] +
lea edx [ebp+var_218] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_228] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+28h]  +
test eax eax +
jz loc_10239FF  +
dec [ebp+var_210]  +
dec [ebp+var_20C]  +
mov eax [ebp+var_210] +
inc eax  +
cmp eax [ebp+var_20C] +
mov [ebp+var_210] eax +
jle loc_1023979  +
mov eax dword ptr [ebp+var_208] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_214] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 2  +
push 0  +
call ds:CoInitializeEx  +
mov edi eax +
test edi edi +
jl loc_1023AF3  +
push esi  +
mov esi ds:BlockInput +
push 1  +
call esi  +
mov [ebp+var_C] eax +
lea eax [ebp-1] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_1022E28  +
mov edi eax +
test edi edi +
jl loc_1023AD7  +
push ebx  +
mov ebx [ebp+var_8] +
push ebx  +
call sub_10238AB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
pop ebx  +
cmp [ebp+var_1] 0 +
jz loc_1023AE2  +
call sub_1022E77  +
cmp [ebp+var_C] 0 +
jz loc_1023AEC  +
push 0  +
call esi  +
call ds:CoUninitialize  +
pop esi  +
mov eax edi +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_1002758  +
push 1  +
xor ebx ebx +
push ebx  +
push offset stru_1002994  +
mov [ebp+var_1] 1 +
mov [ebp+ppv] ebx +
call ds:CoCreateInstance  +
test eax eax +
jl loc_1023B65  +
mov eax [ebp+ppv] +
lea edx [ebp+pv] +
push edx  +
push 2  +
push 2  +
push offset aStartmenuinter  +
mov [ebp+pv] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jl loc_1023B5B  +
mov eax [ebp+pv] +
cmp [eax] bx +
jnz loc_1023B52  +
mov [ebp+var_1] bl +
push eax  +
call ds:CoTaskMemFree  +
jmp loc_1023B65  +
cmp eax 80070483h +
jnz loc_1023B65  +
mov [ebp+var_1] bl +
mov eax [ebp+ppv] +
cmp eax ebx +
pop ebx  +
jz loc_1023B73  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov al [ebp+var_1] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1023B99  +
test eax eax +
jnz loc_1023B9E  +
mov ecx [esi] +
test ecx ecx +
jz loc_1023B96  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1023B8A  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10283B8 +
push offset dword_10283A8  +
push dword_10283B4  +
mov dword_10283A8 eax +
push offset unk_1028398  +
push offset unk_102839C  +
push offset unk_1028394  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_10283A4 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1023C41  +
cmp eax esi +
jnz loc_1023C34  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1023C44  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1023C1B  +
xor esi esi +
inc esi  +
mov eax dword_1028704 +
cmp eax esi +
jnz loc_1023C57  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1023C86  +
mov eax dword_1028704 +
test eax eax +
jnz loc_1023C80  +
mov dword_1028704 esi +
push offset dword_10012D4  +
push offset dword_10012C8  +
call sub_1023B7D  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1023C86  +
jmp loc_1023DAA  +
mov dword_10283B0 esi +
mov eax dword_1028704 +
cmp eax esi +
jnz loc_1023CAA  +
push offset dword_10012C4  +
push offset dword_10012BC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1028704 2 +
cmp [ebp+var_20] ebx +
jnz loc_1023CB7  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1028710 ebx +
jz loc_1023CD8  +
push offset dword_1028710  +
call sub_10242E9  +
pop ecx  +
test eax eax +
jz loc_1023CD8  +
push ebx  +
push 2  +
push ebx  +
call dword_1028710  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_1023DAA  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1023CFD  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_1023D12  +
cmp cx 20h +
ja loc_1023D12  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1023CFD  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1023D1E  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_1023D21  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_10283AC eax +
cmp dword_10283A0 ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_1023D53  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1023CE7  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_10283AC eax +
xor ebx ebx +
cmp dword_10283A0 ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_10283B0 ebx +
jnz loc_1023D95  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10283AC +
jmp loc_1023DB6  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1023DD3  +
xor eax eax +
jmp loc_1023E20  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1023DCF  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1023E0D  +
cmp ecx 20Bh +
jnz loc_1023DCF  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1023DCF  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1023E1B  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1023DCF  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_10283A0 eax +
call sub_1024482  +
push eax  +
call ds:__set_app_type  +
or dword_10286FC 0FFFFFFFFh +
or dword_1028700 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10283C0 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10283BC +
mov [eax] ecx +
call sub_1024414  +
cmp dword_1028068 0 +
jnz loc_1023E79  +
push offset sub_1024414  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10243FC  +
xor eax eax +
retn   +
***
call sub_10244C1  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1028058 +
jnz loc_1023EB8  +
retn 0  +
jmp loc_1024557  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push edi  +
mov ebp [ecx] +
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ecx  +
push [esp+8+arg_4]  +
call __local_unwind4  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebx+8] +
xor esi [eax] +
push edi  +
mov eax [esi] +
mov [ebp+var_1] 0 +
mov [ebp+var_C] 1 +
lea edi [ebx+10h] +
cmp eax 0FFFFFFFEh +
jz loc_10240A6  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+arg_8] +
test byte ptr [eax+4] 66h +
jnz loc_10241D3  +
lea ecx [ebp+var_18] +
mov [ebx-4] ecx +
mov ebx [ebx+0Ch] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_14] eax +
cmp ebx 0FFFFFFFEh +
jz loc_1024138  +
jmp loc_10240E0  +
lea edx [ebx+ebx*2] +
mov ecx [esi+edx*4+14h] +
lea eax [esi+edx*4+10h] +
mov [ebp+var_10] eax +
mov eax [eax] +
mov [ebp+var_8] eax +
test ecx ecx +
jz loc_102410B  +
mov edx edi +
call @_EH4_CallFilterFunc@8  +
mov [ebp+var_1] 1 +
test eax eax +
jl loc_1024142  +
jg loc_102414B  +
mov eax [ebp+var_8] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_10240E0  +
cmp [ebp+var_1] 0 +
jz loc_1024138  +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_102412A  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov [ebp+var_C] 0 +
jmp loc_1024118  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_102417F  +
cmp dword_102870C 0 +
jz loc_102417F  +
push offset dword_102870C  +
call sub_10242E9  +
add esp 4 +
test eax eax +
jz loc_102417F  +
mov ecx [ebp+arg_8] +
push 1  +
push ecx  +
call dword_102870C  +
add esp 8 +
mov ecx [ebp+arg_C] +
call @_EH4_GlobalUnwind@4  +
mov eax [ebp+arg_C] +
cmp [eax+0Ch] ebx +
jz loc_10241A0  +
mov edx [ebp+arg_0] +
push edx  +
push edi  +
mov edx ebx +
mov ecx eax +
call @_EH4_LocalUnwind@16  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_8] +
mov [eax+0Ch] ecx +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_10241B8  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call [ebp+arg_4]  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call [ebp+arg_4]  +
mov eax [ebp+var_10] +
mov ecx [eax+8] +
mov edx edi +
call @_EH4_TransferToHandler@8  +
mov edx 0FFFFFFFEh +
cmp [ebx+0Ch] edx +
jz loc_1024138  +
mov ecx [ebp+arg_0] +
push ecx  +
push edi  +
mov ecx ebx +
call @_EH4_LocalUnwind@16  +
jmp loc_1024118  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1024234  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1024234  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_102422E  +
cmp eax 19930521h +
jz loc_102422E  +
cmp eax 19930522h +
jz loc_102422E  +
cmp eax 1994000h +
jnz loc_1024234  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10241F4+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1024276  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1024272  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10242DD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10242D5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10242DF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10242C5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1024260  +
pop ecx  +
test eax eax +
jz loc_1024346  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10242A0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1024346  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_102434F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1023EAD  +
push offset dword_1028058  +
call sub_1024070  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1024475  +
cmp ecx 0FFFFFFFFh +
jz loc_1024475  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_102446E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_102446E  +
cmp edx 10000000h +
jnb loc_102446E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_102446E  +
jmp loc_1024469  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10244B7  +
push eax  +
call sub_102441C  +
test eax eax +
jz loc_10244B7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10244AC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10244B7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1028058 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10244F3  +
test eax ebx +
jz loc_10244F3  +
not eax  +
mov dword_102805C eax +
jmp loc_102454E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_102453A  +
test dword_1028058 ebx +
jnz loc_102453F  +
mov esi 0BB40E64Fh +
mov dword_1028058 esi +
not esi  +
mov dword_102805C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10284C8 eax +
mov dword_10284C4 ecx +
mov dword_10284C0 edx +
mov dword_10284BC ebx +
mov dword_10284B8 esi +
mov dword_10284B4 edi +
mov word_10284E0 ss +
mov word_10284D4 cs +
mov word_10284B0 ds +
mov word_10284AC es +
mov word_10284A8 fs +
mov word_10284A4 gs +
pushf   +
pop dword_10284D8  +
mov eax [ebp+0] +
mov dword_10284CC eax +
mov eax [ebp+4] +
mov dword_10284D0 eax +
lea eax [ebp+8] +
mov dword_10284DC eax +
mov eax [ebp-320h] +
mov dword_1028418 10001h +
mov eax dword_10284D0 +
mov dword_10283D4 eax +
mov dword_10283C8 0C0000409h +
mov dword_10283CC 1 +
mov eax dword_1028058 +
mov [ebp-328h] eax +
mov eax dword_102805C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push esi  +
mov eax [esp+14h] +
or eax eax +
jnz loc_1024671  +
mov ecx [esp+10h] +
mov eax [esp+0Ch] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+8] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  dword ptr [esp+10h] +
mov ecx eax +
mov eax esi +
mul  dword ptr [esp+10h] +
add edx ecx +
jmp loc_10246B8  +
mov ecx eax +
mov ebx [esp+10h] +
mov edx [esp+0Ch] +
mov eax [esp+8] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_102467F  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+14h] +
mov ecx eax +
mov eax [esp+10h] +
mul  esi +
add edx ecx +
jb loc_10246AD  +
cmp edx [esp+0Ch] +
ja loc_10246AD  +
jb loc_10246B6  +
cmp eax [esp+8] +
jbe loc_10246B6  +
dec esi  +
sub eax [esp+10h] +
sbb edx [esp+14h] +
xor ebx ebx +
sub eax [esp+8] +
sbb edx [esp+0Ch] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov ebx offset unk_1028070 +
retn   +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_1024739  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+puLen] +
and dword ptr [esi] 0 +
push edi  +
mov edi [ebp+hMem] +
and dword ptr [edi] 0 +
lea eax [ebp+dwHandle] +
push eax  +
push [ebp+lptstrFilename]  +
call GetFileVersionInfoSizeW  +
mov ebx eax +
test ebx ebx +
jz loc_102480A  +
push ebx  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_102480A  +
push eax  +
push ebx  +
push [ebp+dwHandle]  +
push [ebp+lptstrFilename]  +
call GetFileVersionInfoW  +
test eax eax +
jz loc_1024801  +
xor ebx ebx +
lea eax [ebp+puLen] +
push eax  +
cmp [ebp+arg_C] ebx +
jz loc_10247D9  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+hMem]  +
call VerQueryValueW  +
test eax eax +
jz loc_1024801  +
cmp [ebp+puLen] ebx +
jz loc_1024801  +
mov eax [ebp+lpBuffer] +
mov ecx [eax+8] +
mov [edi] ecx +
mov eax [eax+0Ch] +
jmp loc_10247FF  +
lea eax [ebp+var_C] +
push eax  +
push offset aVarfileinfoTra  +
push [ebp+hMem]  +
call VerQueryValueW  +
test eax eax +
jz loc_1024801  +
cmp [ebp+puLen] ebx +
jz loc_1024801  +
mov eax [ebp+var_C] +
movzx ecx word ptr [eax] +
mov [edi] ecx +
movzx eax word ptr [eax+2] +
mov [esi] eax +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 1  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+hMem]  +
call sub_1024759  +
mov eax [ebp+hMem] +
cmp eax [ebp+arg_4] +
ja loc_1024844  +
jnz loc_1024840  +
mov eax [ebp+puLen] +
cmp eax [ebp+arg_8] +
jnb loc_1024844  +
xor eax eax +
jmp locret_1024847  +
xor eax eax +
inc eax  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 254h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
push esi  +
or esi 0FFFFFFFFh +
test eax eax +
jz loc_102489B  +
cmp word ptr [eax] 0 +
jz loc_102489B  +
lea ecx [ebp+FindFileData] +
push ecx  +
push eax  +
call ds:FindFirstFileW  +
cmp eax esi +
jz loc_102489B  +
mov esi [ebp+FindFileData.nFileSizeLow] +
sub esi [ebp+FindFileData.nFileSizeHigh] +
push eax  +
call ds:FindClose  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
push offset aSoftwareMicr_4  +
push 80000002h  +
mov [ebp+lpszDir] ebx +
mov [ebp+var_210] esi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10249EB  +
push edi  +
push 4  +
pop edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
mov esi offset aIe6bak_dat +
push esi  +
push [ebp+hKey]  +
mov [ebp+cbData] edi +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10249DE  +
push esi  +
push ebx  +
mov ebx ds:PathCombineW +
lea eax [ebp+FileName] +
push eax  +
call ebx  +
cmp [ebp+Type] edi +
jnz loc_10249DE  +
lea eax [ebp+FileName] +
push eax  +
call sub_1024850  +
xor ecx ecx +
cmp dword ptr [ebp+Data] eax +
setz cl  +
mov [ebp+var_210] ecx +
test ecx ecx +
jz loc_10249DE  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
mov esi offset aIe6bak_ini +
push esi  +
push [ebp+hKey]  +
mov [ebp+cbData] edi +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10249DE  +
push esi  +
push [ebp+lpszDir]  +
lea eax [ebp+FileName] +
push eax  +
call ebx  +
cmp [ebp+Type] edi +
jnz loc_10249DE  +
lea eax [ebp+FileName] +
push eax  +
call sub_1024850  +
xor ecx ecx +
cmp dword ptr [ebp+Data] eax +
setz cl  +
mov [ebp+var_210] ecx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_210] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp dword_1028370 0FFFFFFFFh +
jnz loc_1024A78  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push 0  +
push offset aSystemCurrentc  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1024A78  +
and dword_1028370 eax +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset aCsdversion  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1024A6F  +
mov eax 600h +
cmp word ptr [ebp+Data] ax +
sbb eax eax +
inc eax  +
mov dword_1028370 eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax dword_1028370 +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1024A9A  +
cmp ecx 7FFFFFFFh +
jbe loc_1024A9F  +
mov eax 80070057h +
test eax eax +
jl loc_1024AEA  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1024ADA  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1024AD5  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1024AD5  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1024ABD  +
pop edi  +
test esi esi +
jnz loc_1024AE1  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
mov word ptr [ebp+Data] ax +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareMicr_4  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1024B8D  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aUninstalldir  +
push [ebp+hKey]  +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1024B81  +
test esi esi +
jz loc_1024B81  +
lea eax [ebp+Data] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1024A84  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp word ptr [ebp+Data] ax +
pop esi  +
setnz al  +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+lpKeyName] eax +
mov edi 104h +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
xor esi esi +
call sub_1024AF3  +
test eax eax +
jz loc_1024C92  +
lea eax [ebp+pszPath] +
push eax  +
call sub_10248B1  +
test eax eax +
jz loc_1024C92  +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1024AF3  +
test eax eax +
jz loc_1024C92  +
push ebx  +
push offset aIe6bak_ini  +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
call sub_1024D75  +
lea eax [ebp+pszPath] +
push eax  +
call ds:GetFileAttributesW  +
mov ebx ds:SetFileAttributesW +
mov [ebp+dwFileAttributes] eax +
push 80h  +
lea eax [ebp+pszPath] +
push eax  +
call ebx  +
lea eax [ebp+pszPath] +
push eax  +
push edi  +
lea eax [ebp+ReturnedString] +
push eax  +
push offset Data  +
push [ebp+lpKeyName]  +
push offset AppName  +
call ds:GetPrivateProfileStringW  +
mov esi eax +
neg esi  +
sbb esi esi +
neg esi  +
cmp [ebp+dwFileAttributes] 0FFFFFFFFh +
jz loc_1024C91  +
push [ebp+dwFileAttributes]  +
lea eax [ebp+pszPath] +
push eax  +
call ebx  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 320h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_1028374 2 +
jnz loc_1024D5F  +
and dword_1028374 0 +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call ds:GetVersionExW  +
cmp [ebp+VersionInformation.dwPlatformId] 2 +
jnz loc_1024D5F  +
push esi  +
mov esi 104h +
push esi  +
lea eax [ebp+hMem] +
push eax  +
call ds:GetSystemDirectoryW  +
push offset aCrypt32_dll  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
call sub_1024D75  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
pop esi  +
jnb loc_1024D55  +
call sub_1024A06  +
test eax eax +
jnz loc_1024D55  +
push 7550005h  +
push 50083h  +
lea eax [ebp+hMem] +
push eax  +
call sub_1024816  +
test eax eax +
jz loc_1024D5F  +
lea eax [ebp+hMem] +
push eax  +
call sub_1024BAD  +
test eax eax +
jnz loc_1024D5F  +
mov dword_1028374 1 +
mov ecx [ebp+var_4] +
mov eax dword_1028374 +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+pMore]  +
push [ebp+pszPath]  +
call ds:__imp_PathAppendW  +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
pop ebp  +
retn 0Ch  +
***
call ds:GetLastError  +
test eax eax +
jnz locret_1024E14  +
inc eax  +
retn   +
***
call sub_1024E09  +
test eax eax +
jle locret_1024E2D  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
mov [ebp+var_4] 4 +
push 0  +
push 10h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHRegGetValueW  +
test eax eax +
jle locret_1024E67  +
and eax 0FFFFh +
or eax 80070000h +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
lea eax [ebp+pvData] +
push eax  +
push 4  +
push [ebp+pszValue]  +
push [ebp+pszSubKey]  +
push [ebp+hkey]  +
call SHSetValueW  +
push eax  +
call sub_101F845  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+arg_10] +
cmp esi 7FFFFFFFh +
ja loc_1024ECF  +
lea eax [esi+esi] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
push edi  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SHRegGetValueW  +
jmp loc_1024ED4  +
mov eax 216h +
test eax eax +
jz loc_1024EE1  +
test esi esi +
jbe loc_1024EE1  +
xor ecx ecx +
mov [edi] cx +
pop edi  +
pop esi  +
test eax eax +
jle loc_1024EF1  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push 2  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1024E9A  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
lea eax [ebp+var_234] +
xor ebx ebx +
push eax  +
mov [ebp+var_20D] bl +
call ds:GetNativeSystemInfo  +
cmp word ptr [ebp+var_234] bx +
jnz loc_1024F62  +
cmp edi 2Ah +
jnz loc_1024F62  +
push 26h  +
pop edi  +
push ebx  +
push edi  +
lea eax [ebp+pszPath] +
push eax  +
push ebx  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_1024FC0  +
push offset aInternetExpl_0  +
lea eax [ebp+pszPath] +
push eax  +
call PathAppendW  +
test eax eax +
jz loc_1024FC0  +
cmp [ebp+arg_C] bl +
jz loc_1024FA5  +
push offset aIexplore_exe_1  +
lea eax [ebp+pszPath] +
push eax  +
call PathAppendW  +
test eax eax +
jz loc_1024FC0  +
lea eax [ebp+pszPath] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_101FDD2  +
test eax eax +
jl loc_1024FC0  +
mov [ebp+var_20D] 1 +
mov ecx [ebp+var_4] +
mov al [ebp+var_20D] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push 26h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1024F1E  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call _vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1025039  +
cmp eax esi +
ja loc_1025039  +
jz loc_102503E  +
jmp loc_1025046  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102504F  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+wLanguage]  +
push 1  +
push offset Type  +
push [ebp+hModule]  +
call ds:FindResourceExW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+hModule]  +
call sub_102505C  +
test eax eax +
jz loc_102509A  +
push eax  +
push [ebp+hModule]  +
call ds:LoadResource  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hModule] 0 +
push esi  +
jz loc_10250F8  +
cmp [ebp+arg_4] 0 +
jz loc_10250F8  +
push [ebp+hModule]  +
call sub_102507D  +
push [ebp+arg_4]  +
mov esi eax +
call sub_102507D  +
test esi esi +
jz loc_10250F0  +
test eax eax +
jz loc_10250F0  +
mov ecx 0FECDFECDh +
cmp [esi] ecx +
jnz loc_10250F8  +
cmp [eax] ecx +
jnz loc_10250F8  +
push edi  +
push 4  +
lea edi [eax+1Ch] +
add esi 1Ch +
pop ecx  +
xor eax eax +
cmps   +
pop edi  +
jnz loc_10250F8  +
inc eax  +
jmp loc_10250FA  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpLibFileName] esi +
jnz loc_1025117  +
xor eax eax +
jmp loc_1025185  +
cmp [ebp+arg_4] esi +
jz loc_1025172  +
push esi  +
push esi  +
push 3  +
push esi  +
push 5  +
push 80000000h  +
push [ebp+lpLibFileName]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1025113  +
push esi  +
push esi  +
push esi  +
push 8  +
push esi  +
push edi  +
call ds:CreateFileMappingW  +
push edi  +
mov edi ds:CloseHandle +
mov ebx eax +
call edi  +
cmp ebx esi +
jz loc_1025113  +
push esi  +
push esi  +
push esi  +
push 1  +
push ebx  +
call ds:MapViewOfFile  +
push ebx  +
mov [ebp+lpLibFileName] eax +
call edi  +
mov eax [ebp+lpLibFileName] +
cmp eax esi +
jz loc_1025113  +
or eax 1 +
jmp loc_1025185  +
xor eax eax +
cmp [ebp+arg_8] esi +
setnz al  +
push eax  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor edi edi +
cmp dword_10286E8 edi +
jnz loc_10252AD  +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov esi ds:GetVersionExW +
push eax  +
call esi  +
test eax eax +
jnz loc_10251F8  +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call esi  +
mov eax [ebp+VersionInformation.dwPlatformId] +
dec eax  +
mov dword_10286E8 edi +
pop esi  +
jz loc_1025280  +
dec eax  +
jnz loc_10252AD  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jnz loc_102526D  +
mov eax [ebp+VersionInformation.dwMinorVersion] +
sub eax edi +
jz loc_1025261  +
dec eax  +
jz loc_102524E  +
dec eax  +
jz loc_1025234  +
mov dword_10286E8 14h +
jmp loc_10252AD  +
cmp [ebp+var_C] 1 +
jb loc_1025245  +
mov dword_10286E8 10h +
or dword_10286E8 4 +
jmp loc_10252AD  +
cmp [ebp+var_C] 2 +
jb loc_1025245  +
mov dword_10286E8 8 +
jmp loc_1025245  +
mov dword_10286E8 4 +
jmp loc_10252AD  +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
ja loc_10252BF  +
mov dword_10286E8 2 +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
jnz loc_10252AD  +
cmp [ebp+VersionInformation.dwMinorVersion] edi +
jz loc_10252A3  +
cmp [ebp+VersionInformation.dwMinorVersion] 0Ah +
jz loc_10252A3  +
cmp [ebp+VersionInformation.dwMinorVersion] 5Ah +
jnz loc_10252AD  +
mov dword_10286E8 1 +
mov ecx [ebp+var_4] +
mov eax dword_10286E8 +
xor ecx ebp +
pop edi  +
call sub_1023EAD  +
leave   +
retn   +
mov dword_10286E8 20h +
jmp loc_10252AD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 20h  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
push 404h  +
mov esi 0C04h +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_1025324  +
push 3  +
lea eax [ebp+LCData] +
push offset word_1002EE0  +
push eax  +
call wcsncmp  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFFFF800h +
add esi 0C04h +
mov ecx [ebp+var_4] +
mov ax si +
xor ecx ebp +
pop esi  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp ax word_10286EC +
jnz loc_10253D4  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor esi esi +
push esi  +
push offset aSoftwareMic_15  +
push 80000002h  +
mov [ebp+cbData] 6 +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_10253D3  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset aLocale_0  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
cmp edi esi +
pop edi  +
jnz loc_10253D3  +
push 3  +
push ds:off_1002C60[esi*8]  +
lea eax [ebp+Data] +
push eax  +
call _wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_10253C5  +
inc esi  +
cmp esi 1Ch +
jb loc_10253A4  +
jmp loc_10253D3  +
mov ax ds:word_1002C64[esi*8] +
mov word_10286EC ax +
pop esi  +
mov ecx [ebp+var_4] +
mov ax word_10286EC +
xor ecx ebp +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_10254A9  +
cmp [ebp+arg_0] ebx +
jz loc_10254A9  +
cmp [ebp+arg_4] ebx +
jz loc_10254A9  +
push esi  +
movzx eax word ptr [edi] +
lea ecx [eax-61h] +
cmp cx 19h +
ja loc_1025425  +
movzx eax ax +
sub eax 61h +
jmp loc_1025434  +
lea ecx [eax-41h] +
cmp cx 19h +
ja loc_102545E  +
movzx eax ax +
sub eax 41h +
cmp eax 1Ah +
jnb loc_102545E  +
mov esi ds:dword_1002DA8[eax*4] +
test esi esi +
jz loc_102545E  +
jmp loc_1025456  +
push eax  +
push edi  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1025469  +
add esi 8 +
mov eax [esi] +
cmp word ptr [eax] 0 +
jnz loc_1025446  +
mov edi [ebp+arg_0] +
inc ebx  +
cmp ebx 2 +
jl loc_1025411  +
jmp loc_10254A8  +
mov esi [esi+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1025471  +
sub eax edx +
sar eax 1 +
cmp eax 55h +
jnb loc_10254A8  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1025489  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call memcpy  +
add esp 0Ch +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test esi esi +
jz loc_10254FA  +
cmp [ebp+arg_4] 0 +
jz loc_10254FA  +
push 2  +
push 55h  +
push esi  +
push [ebp+arg_0]  +
call sub_1025F48  +
test eax eax +
jz loc_10254FA  +
push 2  +
push 55h  +
push [ebp+arg_4]  +
push esi  +
call sub_1025FEE  +
test edi edi +
jz loc_10254F5  +
xor eax eax +
push edi  +
push [ebp+arg_4]  +
mov [edi] ax +
mov eax esi +
call sub_10253EB  +
xor eax eax +
inc eax  +
jmp loc_10254FC  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:FreeLibrary  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_102552B  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1025530  +
mov eax 80070057h +
test eax eax +
jl loc_1025549  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1025011  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1025573  +
xor eax eax +
jmp loc_10255DE  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+LibFileName] +
push 104h  +
push eax  +
xor ebx ebx +
call sub_1025516  +
test eax eax +
jl loc_10255DB  +
push esi  +
call sub_1025191  +
mov esi eax +
and esi 26h +
call sub_1025191  +
and eax 38h +
push esi  +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1025104  +
mov ebx eax +
pop esi  +
test ebx ebx +
jz loc_10255DB  +
push ebx  +
push edi  +
call sub_10250A3  +
test eax eax +
jnz loc_10255DB  +
push ebx  +
test bl 1 +
jz loc_10255D3  +
call ds:UnmapViewOfFile  +
jmp loc_10255D9  +
call ds:FreeLibrary  +
xor ebx ebx +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_1023EAD  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test eax eax +
jz loc_102564B  +
test ecx ecx +
jz loc_102564B  +
cmp dword ptr [ebp+arg_0] 0 +
push eax  +
jz loc_102562F  +
test edx edx +
jz loc_102561C  +
push edx  +
push dword ptr [ebp+arg_0]  +
push offset aSSS_mui  +
push ecx  +
call sub_1025552  +
add esp 14h +
jmp loc_102564D  +
push dword ptr [ebp+arg_0]  +
push offset aSS_mui  +
push ecx  +
call sub_1025552  +
add esp 10h +
jmp loc_102564D  +
test edx edx +
jz loc_102563B  +
push edx  +
push offset a_SS_mui  +
jmp loc_1025624  +
push offset a_S_mui  +
push ecx  +
call sub_1025552  +
add esp 0Ch +
jmp loc_102564D  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_1028058 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+lpLibFileName] esi +
mov [ebp+FilePart] ebx +
cmp esi ebx +
jnz loc_1025689  +
xor eax eax +
jmp loc_1025DE2  +
test [ebp+arg_4] 0FFFFFFE3h +
jnz loc_1025682  +
push edi  +
mov edi dword ptr [ebp+wLanguage] +
cmp di bx +
jnz loc_10256A5  +
test byte ptr [ebp+arg_4] 10h +
jnz loc_1025D0F  +
call sub_1025191  +
mov dword_10286F0 eax +
movzx eax al +
and eax 20h +
or eax 2 +
push eax  +
push 0  +
push esi  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
test eax eax +
jz loc_1025D0F  +
test byte ptr dword_10286F0 20h +
jnz loc_1025DE1  +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
push 104h  +
push 0  +
push esi  +
push 0  +
call ds:SearchPathW  +
test eax eax +
jz loc_1025D03  +
mov eax [ebp+FilePart] +
test eax eax +
jnz loc_1025721  +
and dword ptr [ebp+var_41C] ebx +
lea eax [ebp+LibFileName] +
mov [ebp+FilePart] eax +
jmp loc_1025733  +
lea ecx [ebp+LibFileName] +
mov dword ptr [ebp+var_41C] ecx +
xor ecx ecx +
mov [eax-2] cx +
push 0  +
push [ebp+hModule]  +
call sub_102505C  +
test eax eax +
jz loc_1025CEB  +
test di di +
jnz loc_1025CC3  +
mov al byte ptr dword_10286F0 +
test al 4 +
jz loc_1025AD2  +
call ds:GetUserDefaultUILanguage  +
movzx eax ax +
mov ecx 404h +
mov [ebp+var_420] eax +
cmp ax cx +
jnz loc_1025785  +
call sub_10252D0  +
movzx eax ax +
mov [ebp+var_420] eax +
mov eax [ebp+arg_4] +
and eax 8 +
mov [ebp+var_424] eax +
cmp [ebp+var_424] 0 +
jz loc_102585B  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_1025D4F  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
cmp word ptr [ebp+var_208] ax +
jz loc_102583A  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jnz loc_1025A06  +
mov [ebp+var_420] 404h +
jmp loc_1025791  +
movzx eax word ptr [ebp+var_420] +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_102590D  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_1025E5D  +
movzx eax ax +
test ax ax +
jz loc_102590D  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jz loc_102584C  +
call ds:GetSystemDefaultUILanguage  +
movzx esi ax +
mov [ebp+var_424] esi +
cmp si word ptr [ebp+var_420] +
jz loc_10259EA  +
movzx eax si +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
lea eax [ebp+var_15C] +
push eax  +
push esi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_10259E4  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_1025E5D  +
movzx eax ax +
test ax ax +
jz loc_10259E4  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov esi [ebp+var_424] +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jz loc_1025C9B  +
cmp ax si +
jmp loc_1025C73  +
call ds:GetSystemDefaultUILanguage  +
movzx eax ax +
mov [ebp+var_424] eax +
cmp ax word ptr [ebp+var_420] +
jz loc_1025AB9  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_1025CEB  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
cmp word ptr [ebp+var_208] ax +
jz loc_1025AB9  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jz loc_1025C9B  +
jmp loc_1025B90  +
test al 3 +
jz loc_1025CEB  +
call sub_1025339  +
test byte ptr [ebp+arg_4] 8 +
movzx eax ax +
mov [ebp+var_424] eax +
jz loc_1025BB9  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_1025CEB  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
cmp word ptr [ebp+var_208] ax +
jz loc_1025B89  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_424] +
jz loc_1025C9B  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10254B4  +
mov edx esi +
jmp loc_1025C7A  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_424]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jz loc_1025C67  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_1025E5D  +
movzx eax ax +
test ax ax +
jz loc_1025C67  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101FF8B  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
mov eax 409h +
cmp ax word ptr [ebp+var_424] +
jz loc_1025C9B  +
mov edx offset aMui0409 +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
xor edx edx +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jnz loc_1025D53  +
jmp loc_1025D4F  +
test byte ptr dword_10286F0 7 +
jz loc_1025CEB  +
test byte ptr [ebp+arg_4] 8 +
jz loc_1025D16  +
lea eax [ebp+var_15C] +
push eax  +
push edi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_10254B4  +
test eax eax +
jnz loc_1025D30  +
test byte ptr [ebp+arg_4] 10h +
jz loc_1025D63  +
push dword ptr [ebp+wLanguage]  +
push [ebp+hModule]  +
call sub_102505C  +
test eax eax +
jnz loc_1025D63  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
xor eax eax +
jmp loc_1025DE1  +
movzx eax di +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101FF8B  +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_B0] +
call sub_10255F0  +
mov ebx eax +
test ebx ebx +
jz loc_1025CEB  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
mov eax ebx +
jmp loc_1025DE1  +
test byte ptr [ebp+hModule] 1 +
jz loc_1025DDB  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
call sub_1025191  +
test al 38h +
jz loc_1025DB8  +
push [ebp+FilePart]  +
lea eax [ebp+LibFileName] +
push dword ptr [ebp+var_41C]  +
push offset aSS  +
push 104h  +
push eax  +
call sub_101FF8B  +
add esp 14h +
push 0  +
push 1  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1025104  +
jmp loc_1025DD5  +
call sub_1025191  +
push 0  +
and eax 26h +
pop eax  +
setnz al  +
push eax  +
push 0  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
mov eax [ebp+hModule] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1023EAD  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax word ptr [eax] +
movzx ecx word ptr [ecx] +
cmp cx ax +
jnz loc_1025E11  +
xor eax eax +
pop ebp  +
retn   +
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 68h +
jnz loc_1025E52  +
cmp word ptr [eax] 7Fh +
jz loc_1025E52  +
xor eax eax +
inc eax  +
jmp loc_1025E54  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1025EB2  +
test [ebp+arg_4] 0FFFFFFFDh +
jnz loc_1025EB2  +
push offset sub_1025E1E  +
push 8  +
push 163h  +
push offset off_1004FD0  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
test eax eax +
jz loc_1025EB2  +
mov ecx [eax+4] +
imul ecx ecx +
add ecx offset dword_1003F20 +
test byte ptr [ebp+arg_4] 2 +
jnz loc_1025EAD  +
push ecx  +
call sub_1025E39  +
test eax eax +
jnz loc_1025EB2  +
mov ax [ecx] +
jmp loc_1025EBC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
mov edx 80070057h +
test ecx ecx +
jz loc_1025EE0  +
cmp ecx 7FFFFFFFh +
jbe loc_1025EE2  +
mov eax edx +
test eax eax +
jl loc_1025F3F  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 7FFFFFFEh +
jbe loc_1025EFE  +
mov eax edx +
mov edx [ebp+arg_0] +
xor ecx ecx +
mov [edx] cx +
jmp loc_1025F3E  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1025F2E  +
mov edx [ebp+arg_8] +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1025F2A  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1025F2A  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1025F12  +
test esi esi +
jnz loc_1025F35  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
push edi  +
jl loc_1025FD9  +
cmp [ebp+arg_4] 0 +
jnz loc_1025F65  +
cmp [ebp+arg_8] 0 +
jnz loc_1025FD9  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_1025FD9  +
push offset sub_1025DF7  +
push 0Ch  +
push 164h  +
lea eax [ebp+arg_0] +
push offset dword_1003F20  +
push eax  +
call bsearch  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_1025FD9  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_1025FA1  +
push ecx  +
call sub_1025E39  +
test eax eax +
jnz loc_1025FD9  +
mov edi [ecx+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1025FA9  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] 0 +
lea esi [eax+1] +
jz loc_1025FD5  +
push esi  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1025EC5  +
test eax eax +
jge loc_1025FD5  +
push 7Ah  +
jmp loc_1025FDB  +
mov eax esi +
jmp loc_1025FE3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_102609C  +
cmp [ebp+arg_8] edi +
jle loc_1026011  +
cmp [ebp+arg_4] edi +
jz loc_102609C  +
cmp [ebp+arg_8] edi +
jl loc_102609C  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_102609C  +
push offset sub_1025E1E  +
push 8  +
push 163h  +
push offset off_1004FD0  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
cmp eax edi +
jz loc_102609C  +
mov ecx [eax+4] +
imul ecx ecx +
mov edx offset dword_1003F20 +
add ecx edx +
test byte ptr [ebp+arg_C] 2 +
jnz loc_102605D  +
push ecx  +
call sub_1025E39  +
test eax eax +
jnz loc_102609C  +
mov eax [ecx+8] +
imul eax eax +
add eax edx +
mov eax [eax+4] +
mov ecx eax +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
cmp si di +
jnz loc_102606D  +
sub ecx edx +
sar ecx 1 +
lea esi [ecx+1] +
cmp [ebp+arg_4] edi +
jz loc_1026098  +
push esi  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1025EC5  +
test eax eax +
jge loc_1026098  +
push 7Ah  +
jmp loc_102609E  +
mov eax esi +
jmp loc_10260A6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
push 0  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 1  +
push 0  +
push [ebp+arg_0]  +
call iertutil_650  +
test eax eax +
jl locret_10260EA  +
mov edx [ebp+arg_4] +
xor ecx ecx +
cmp [ebp+var_4] ecx +
setnz cl  +
mov [edx] ecx +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_8] eax +
push 4  +
setnz al  +
mov [ebp+arg_8] eax +
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call iertutil_654  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
cmp dword_10286F4 esi +
jnz loc_1026177  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push esi  +
push offset aSoftwareClie_1  +
push 80000002h  +
mov [ebp+hKey] esi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1026177  +
push esi  +
push esi  +
push esi  +
push esi  +
push offset aShowiconscomma  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
xor ecx ecx +
test eax eax +
setnz cl  +
inc ecx  +
mov dword_10286F4 ecx +
call ds:RegCloseKey  +
xor eax eax +
cmp dword_10286F4 1 +
pop esi  +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
cmp dword_10286F8 esi +
jnz loc_102620C  +
call sub_102611F  +
test eax eax +
jz loc_1026202  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push esi  +
push offset aSoftwareClie_1  +
push 80000002h  +
mov [ebp+hKey] esi +
mov dword ptr [ebp+Data] esi +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_102620C  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset aIconsvisible  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_10261F7  +
cmp dword ptr [ebp+Data] esi +
setz al  +
inc eax  +
mov dword_10286F8 eax +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_102620C  +
mov dword_10286F8 2 +
xor eax eax +
cmp dword_10286F8 1 +
pop esi  +
setz al  +
leave   +
retn   +
***
retn   +
***
retn 5300h  +
***
