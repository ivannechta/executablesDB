mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
pop ebp  +
retn   +
***
mov eax dword_100435C +
push offset dword_1004014  +
push dword_1004358  +
mov dword_1004014 eax +
push offset dword_100402C  +
push offset dword_1004030  +
push offset dword_1004028  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1004010 eax +
retn   +
***
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1004000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jnz loc_10021C1  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1001269  +
test dword_1004000 ebx +
jz loc_1001269  +
mov dword_1004000 esi +
not esi  +
mov dword_1004004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
mov esi 0BB40E64Fh +
jmp loc_1001256  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp esi [ebp+arg_4] +
jnb loc_1001296  +
test eax eax +
jnz loc_1001296  +
mov ecx [esi] +
test ecx ecx +
jz loc_1001291  +
call ecx  +
add esi 4 +
jmp loc_1001280  +
pop esi  +
pop ebp  +
retn   +
***
call sub_10011E6  +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
and [edx] ah +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+10h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ds:??0PROGRAM@@IAE@XZ  +
lea ecx [esi+90h] +
mov dword ptr [esi] offset off_10019D0 +
call ds:??0DSTRING@@QAE@XZ  +
lea ecx [esi+0A8h] +
call ds:??0MULTIPLE_PATH_ARGUMENT@@QAE@XZ  +
lea ecx [esi+100h] +
call ds:??0STREAM_MESSAGE@@QAE@XZ  +
mov eax dword_1004008 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
jmp ds:?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 170h +
push 0  +
push 0  +
push 1  +
push 0  +
call ds:HeapSetInformation  +
push 4  +
call sub_1001165  +
pop ecx  +
test eax eax +
jz loc_1001A79  +
mov ecx eax +
call ds:??0CLASS_DESCRIPTOR@@QAE@XZ  +
mov dword_1004008 eax +
test eax eax +
jz loc_1001A4A  +
mov ecx eax +
call ds:?Initialize@CLASS_DESCRIPTOR@@QAEEXZ  +
lea ecx [ebp+var_170] +
call sub_100198C  +
lea ecx [ebp+var_170] +
call sub_100148B  +
test al al +
jz loc_1001A6F  +
lea ecx [ebp+var_170] +
call sub_1001A82  +
push [ebp+var_8]  +
call ds:exit  +
xor eax eax +
jmp loc_1001A39  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
lea ecx [ebp+var_24] +
mov [ebp+var_8] ebx +
call ds:??0DSTRING@@QAE@XZ  +
mov [ebp+var_1] bl +
cmp [esi+0DCh] ebx +
jnz loc_1001EAF  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
push eax  +
mov ecx esi +
call sub_1001AD8  +
cmp [esi+8Ah] bl +
jz loc_1001E95  +
lea ecx [ebp+var_24] +
call ds:??1DSTRING@@UAE@XZ  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
mov edi ds:??0DSTRING@@QAE@XZ +
mov esi ecx +
lea ecx [ebp+var_48] +
call edi  +
lea ecx [ebp+var_30] +
call edi  +
mov eax [esi+9Ch] +
mov [ebp+cchCount2] eax +
mov eax [esi+98h] +
xor ebx ebx +
lea ecx [ebp+var_30] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+lpString1] eax +
call ds:?Initialize@WSTRING@@QAEEXZ  +
test al al +
jz loc_1001E53  +
call ds:?SetConsoleConversions@WSTRING@@SGXXZ  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test al al +
jnz loc_1001C09  +
push ebx  +
lea eax [ebp+var_30] +
push eax  +
mov ecx edi +
call ds:?ReadLine@STREAM@@QAEEPAVWSTRING@@E@Z  +
test al al +
jz loc_1001E83  +
mov eax [ebp+var_24] +
cmp eax ebx +
jnz loc_1001B66  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test al al +
jnz loc_1001C00  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_28] +
inc [ebp+var_10]  +
mov [ebp+var_14] ecx +
mov [ebp+var_1] 0 +
cmp [ebp+cchCount2] ebx +
jz loc_1001BD1  +
cmp eax [ebp+cchCount2] +
jb loc_1001BD1  +
cmp byte ptr [esi+88h] 0 +
jnz loc_1001B89  +
xor ebx ebx +
inc ebx  +
sub eax [ebp+cchCount2] +
lea edi [ecx+eax*2] +
cmp edi ecx +
jb loc_1001BCC  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
cmp [ebp+var_1] 0 +
jnz loc_1001BCC  +
push [ebp+cchCount2]  +
push edi  +
push [ebp+cchCount2]  +
push [ebp+lpString1]  +
push ebx  +
push 400h  +
call ds:CompareStringW  +
cmp eax 2 +
jz loc_1001DF7  +
dec edi  +
dec edi  +
cmp edi [ebp+var_14] +
jnb loc_1001BA0  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov al [esi+89h] +
test al al +
jz loc_1001E00  +
cmp [ebp+var_1] 0 +
jnz loc_1001E0A  +
test al al +
jz loc_1001E00  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
test al al +
jz loc_1001B38  +
cmp [ebp+var_C] ebx +
jnz loc_1001DE1  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_30] +
call esi  +
lea ecx [ebp+var_48] +
call esi  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
cmp dword_1004354 0 +
jz loc_100219A  +
call sub_1001CD2  +
xor eax eax +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1001D1E  +
push eax  +
call sub_1001D28  +
test eax eax +
jz loc_1001D1E  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jz loc_10021BC  +
cmp ax 3 +
jnz loc_1001D1E  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
pop ebp  +
retn   +
***
call sub_1001D9C  +
xor eax eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1001D77  +
cmp ecx 0FFFFFFFFh +
jz loc_1001D77  +
and [ebp-4] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1001D70  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1001D70  +
cmp edx 10000000h +
jnb loc_1001D70  +
lea eax [edx+ecx] +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 4550h +
jnz loc_10021B2  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_1001472  +
retn 4  +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_1004000 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov [esi+168h] ebx +
jmp loc_1001C09  +
***
jmp ds:?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ  +
***
mov [ebp+var_1] 1 +
jmp loc_1001BC5  +
cmp [ebp+var_1] 0 +
jnz loc_1001BF1  +
inc [ebp+var_C]  +
cmp byte ptr [esi+8Ah] 0 +
jz loc_1001BF1  +
push 0FFFFFFFFh  +
push [ebp+var_14]  +
lea ecx [ebp+var_48] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
cmp byte ptr [esi+8Bh] 0 +
mov eax [esi] +
lea ecx [ebp+var_48] +
push ecx  +
jnz loc_1001E69  +
push offset byte_1001E50  +
push ebx  +
push 2EEAh  +
push esi  +
call dword ptr [eax+8]  +
add esp 14h +
jmp loc_1001BF1  +
***
mov eax [esi] +
push 1  +
push 2EECh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push 2  +
call ds:exit  +
push [ebp+var_10]  +
push offset loc_1001E90  +
push ebx  +
push 2EEBh  +
push esi  +
call dword ptr [eax+8]  +
add esp 18h +
jmp loc_1001BF1  +
mov eax [esi] +
push 1  +
push 2EEDh  +
jmp loc_1001E5C  +
***
and eax 572564h +
***
mov ecx [esi] +
push eax  +
push offset byte_1002060  +
push ebx  +
push 2EE7h  +
push esi  +
call dword ptr [ecx+8]  +
add esp 14h +
jmp loc_1001AC6  +
mov ecx [esi+0D8h] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+14h]  +
mov edx [eax] +
mov ecx eax +
mov [ebp+var_C] eax +
call dword ptr [edx+10h]  +
mov edi eax +
cmp edi ebx +
jnz loc_1001ED2  +
jmp loc_1002046  +
xor ebx ebx +
push 0FFFFFFFFh  +
push ebx  +
lea eax [edi+210h] +
push eax  +
lea ecx [ebp+var_24] +
call ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z  +
push [ebp+var_1C]  +
call ds:_wcsupr  +
pop ecx  +
push ebx  +
push edi  +
call ds:?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z  +
mov ebx eax +
test ebx ebx +
jz loc_1001F36  +
mov ecx edi +
call ds:?IsDrive@PATH@@QBEEXZ  +
lea ecx [ebp+var_24] +
push ecx  +
push offset byte_1001E50  +
test al al +
mov eax [esi] +
push 1  +
jz loc_1001F1D  +
push 2EE6h  +
jmp loc_1001F22  +
push 0BD4h  +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebx] +
add esp 14h +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
jmp loc_1002011  +
lea eax [ebp+var_2] +
push eax  +
movzx eax byte ptr [esi+8Ch] +
push eax  +
push edi  +
call ds:?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z  +
mov ebx eax +
test ebx ebx +
jz loc_1001FC3  +
push 100000h  +
push 0  +
mov ecx ebx +
call ds:?QueryStream@FSN_FILE@@QAEPAVFILE_STREAM@@W4STREAMACCESS@@K@Z  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_1001FC3  +
cmp byte ptr [esi+8Ah] 0 +
jz loc_1001F87  +
mov eax [esi] +
lea ecx [ebp+var_24] +
push ecx  +
push offset byte_1001E50  +
push 0  +
push 2EE9h  +
push esi  +
call dword ptr [eax+8]  +
add esp 14h +
push [ebp+var_8]  +
mov ecx esi +
call sub_1001AD8  +
cmp byte ptr [esi+8Ah] 0 +
jnz loc_1001FB4  +
mov ecx [esi] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset dword_1002058  +
push 0  +
push 2EE8h  +
push esi  +
call dword ptr [ecx+8]  +
add esp 18h +
mov eax [ebx] +
push 1  +
mov ecx ebx +
call dword ptr [eax]  +
mov ecx [ebp+var_8] +
mov eax [ecx] +
jmp loc_1002009  +
push edi  +
mov ecx esi +
call sub_10022CB  +
test al al +
jz loc_1002024  +
cmp [ebp+var_2] 0 +
jz loc_1001FDB  +
mov [ebp+var_1] 1 +
jmp loc_1001FF4  +
mov eax [esi] +
lea ecx [ebp+var_24] +
push ecx  +
push offset byte_1001E50  +
push 1  +
push 2EE6h  +
push esi  +
call dword ptr [eax+8]  +
add esp 14h +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1002001  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test ebx ebx +
jz loc_100200D  +
mov eax [ebx] +
mov ecx ebx +
push 1  +
call dword ptr [eax]  +
and [ebp+var_8] 0 +
mov ecx [ebp+var_C] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov edi eax +
test edi edi +
jz loc_1002032  +
jmp loc_1001ED0  +
mov eax [esi] +
push 1  +
push 2EE3h  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
cmp [ebp+var_1] 0 +
jz loc_1002046  +
mov eax [esi] +
push 1  +
push 2EEEh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
lea ecx [ebp+var_24] +
call ds:??1DSTRING@@UAE@XZ  +
pop edi  +
jmp loc_1001ACF  +
***
mov esi ds:??1STRING_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_5C] +
call esi  +
lea ecx [ebp+var_8C] +
call sub_1001970  +
lea ecx [ebp+var_14C] +
call sub_1001970  +
lea ecx [ebp+var_BC] +
call sub_1001970  +
lea ecx [ebp+var_17C] +
call sub_1001970  +
lea ecx [ebp+var_EC] +
call sub_1001970  +
lea ecx [ebp+var_11C] +
call sub_1001970  +
lea ecx [ebp+var_1DC] +
call sub_1001970  +
lea ecx [ebp+var_1AC] +
call sub_1001970  +
lea ecx [ebp+var_208] +
call esi  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_18] +
call esi  +
lea ecx [ebp+var_30] +
call esi  +
lea ecx [ebp+var_304] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
xor al al +
jmp loc_1001907  +
mov eax [esi] +
push edi  +
push 2EE1h  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push 2  +
call ds:exit  +
mov eax [esi] +
push edi  +
push 2EECh  +
jmp loc_10020F9  +
mov eax [esi] +
push 1  +
push 2EE3h  +
jmp loc_10020F9  +
cmp [ebp+var_60] 0 +
mov eax [esi] +
push 1  +
mov ecx esi +
jz loc_100212E  +
push 2EE2h  +
jmp loc_10020FB  +
push 2EE3h  +
jmp loc_10020FB  +
movzx ecx byte ptr [esi+0E1h] +
neg ecx  +
sbb ecx ecx +
lea eax [esi+0E4h] +
and ecx eax +
push ecx  +
push 1  +
push 2  +
push 2EE6h  +
mov ecx esi +
call sub_1002289  +
mov eax [esi] +
push 1  +
push 2EE2h  +
jmp loc_10020F9  +
mov eax [esi] +
push edi  +
push 2EE4h  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push edi  +
jmp loc_1002100  +
***
push (offset dword_10011DC+2)  +
call ds:__setusermatherr  +
pop ecx  +
jmp loc_1001CC1  +
***
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
***
xor eax eax +
mov [ebp-1Ch] eax +
jmp loc_1001D70  +
***
push 2  +
pop eax  +
pop ebp  +
retn   +
***
test eax ebx +
jz loc_100120F  +
not eax  +
mov dword_1004004 eax +
jmp loc_1001265  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100224B  +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop ebp  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+100h] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
lea ecx [esi+0A8h] +
call ds:??1MULTIPLE_PATH_ARGUMENT@@UAE@XZ  +
lea ecx [esi+90h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp ds:??1PROGRAM@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10022BC  +
cmp [ebp+arg_C] 0 +
mov eax [ecx] +
jz loc_10022B3  +
push [ebp+arg_C]  +
push offset byte_1001E50  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push ecx  +
call dword ptr [eax+8]  +
add esp 14h +
jmp loc_10022BC  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call dword ptr [eax+0Ch]  +
push [ebp+arg_4]  +
call ds:exit  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx+21Ch] +
test eax eax +
jbe loc_10022F0  +
mov eax [ecx+218h] +
movzx eax word ptr [eax] +
cmp ax 22h +
jnz loc_10022F0  +
xor al al +
jmp loc_10022F2  +
mov al 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1002252  +
test byte ptr [ebp+8] 1 +
jz loc_1002315  +
push esi  +
call sub_1002229  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100235E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100235E  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1002358  +
cmp eax 19930521h +
jz loc_1002358  +
cmp eax 19930522h +
jz loc_1002358  +
cmp eax 1994000h +
jnz loc_100235E  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_100238A  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002386  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10023EB  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10023E3  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10023ED  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10023D3  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_1001D9C  +
and dword ptr [ebp-4] 0 +
mov esi 1000000h +
push esi  +
call sub_1002374  +
pop ecx  +
test eax eax +
jz loc_1002454  +
mov eax [ebp+8] +
sub eax esi +
push eax  +
push esi  +
call sub_10023AE  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002454  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_100245D  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor eax eax +
call sub_1001472  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset loc_10024BE  +
push offset dword_1004000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
cmp ecx dword_1004000 +
jnz loc_10024D2  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1004138 eax +
mov dword_1004134 ecx +
mov dword_1004130 edx +
mov dword_100412C ebx +
mov dword_1004128 esi +
mov dword_1004124 edi +
mov word_1004150 ss +
mov word_1004144 cs +
mov word_1004120 ds +
mov word_100411C es +
mov word_1004118 fs +
mov word_1004114 gs +
pushf   +
pop dword_1004148  +
mov eax [ebp+0] +
mov dword_100413C eax +
mov eax [ebp+4] +
mov dword_1004140 eax +
lea eax [ebp+8] +
mov dword_100414C eax +
mov eax [ebp-320h] +
mov dword_1004088 10001h +
mov eax dword_1004140 +
mov dword_1004044 eax +
mov dword_1004038 0C0000409h +
mov dword_100403C 1 +
mov eax dword_1004000 +
mov [ebp-328h] eax +
mov eax dword_1004004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset off_10025B0  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
jmp ds:?Compare@OBJECT@@UBEJPBV1@@Z  +
***
jmp ds:?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z  +
***
jmp ds:?Fatal@PROGRAM@@UBAXKKPADZZ  +
***
jmp ds:?Fatal@PROGRAM@@UBEXXZ  +
***
jmp ds:?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
jmp ds:?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ  +
***
jmp ds:?Usage@PROGRAM@@UBEXXZ  +
***
jmp ds:?ValidateVersion@PROGRAM@@UBEXKK@Z  +
***
