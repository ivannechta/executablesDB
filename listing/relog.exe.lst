mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1001830  +
cmp [esi] ax +
jz loc_100182C  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1001822  +
test edx edx +
jnz loc_1001835  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1001846  +
test eax eax +
jl loc_1001843  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1001881  +
cmp [ebp+arg_4] eax +
jz loc_100187D  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100187D  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1001860  +
test esi esi +
jnz loc_1001889  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1001897  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10018CC  +
cmp eax esi +
ja loc_10018CC  +
jz loc_10018D1  +
jmp loc_10018D9  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10018E2  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+NumberOfCharsWritten] +
mov eax ebx +
cmp ebx 2000h +
jb loc_100190B  +
mov eax 2000h +
push 0  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push esi  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_1001933  +
mov eax [ebp+NumberOfCharsWritten] +
sub ebx eax +
lea esi [esi+eax*2] +
jnz loc_10018FC  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
xor eax eax +
jmp loc_100192D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_100194C  +
xor eax eax +
jmp loc_100197A  +
mov ax word_1009000 +
push esi  +
xor esi esi +
xor edx edx +
cmp si ax +
jnb loc_1001977  +
movzx ecx word ptr [ecx] +
movzx eax ax +
cmp cx ax +
jz loc_100197E  +
movzx eax word_1009002[edx*2] +
inc edx  +
movzx esi ax +
cmp edx esi +
jl loc_1001962  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1001979  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jnz loc_10019CB  +
push ebx  +
call sub_100193C  +
test eax eax +
jz loc_10019AF  +
inc ebx  +
inc ebx  +
jmp loc_10019CB  +
mov eax [esi+1Ch] +
test al 8 +
jz loc_10019C0  +
xor eax eax +
cmp [esi+30h] edi +
setz al  +
jmp loc_1001A18  +
test al 20h +
jnz loc_10019CB  +
test eax 100000h +
jz loc_1001A16  +
cmp word ptr [ebx] 2Dh +
jnz loc_10019DA  +
inc ebx  +
mov [ebp+var_4] 1 +
inc ebx  +
mov eax [esi+0Ch] +
cmp eax edi +
mov edi ds:_wcsicmp +
jz loc_10019F1  +
push eax  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001A02  +
mov eax [esi+10h] +
test eax eax +
jz loc_1001A16  +
push eax  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1001A16  +
test dword ptr [esi+1Ch] 10000h +
jz loc_1001A11  +
mov eax [ebp+var_4] +
mov [esi+34h] eax +
xor eax eax +
inc eax  +
jmp loc_1001A18  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+18h] +
dec eax  +
jz loc_1001A3B  +
dec eax  +
dec eax  +
jz loc_1001A3B  +
xor eax eax +
inc eax  +
jmp loc_1001A3D  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_1001A55  +
inc eax  +
jmp loc_1001A5F  +
xor ecx ecx +
cmp [eax] cx +
setz cl  +
mov eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_0] +
cmp eax 9 +
jl loc_1001A8A  +
cmp eax 0Ah +
jle loc_1001A85  +
cmp eax 0Dh +
jz loc_1001A85  +
cmp eax 20h +
jnz loc_1001A8A  +
xor eax eax +
inc eax  +
jmp loc_1001A8C  +
xor eax eax +
pop ebp  +
retn 4  +
***
call ds:GetConsoleOutputCP  +
cmp eax 3A4h +
jz loc_1001ABA  +
cmp eax 3A8h +
jz loc_1001ABA  +
cmp eax 3B4h +
jbe loc_1001AB7  +
cmp eax 3B6h +
jbe loc_1001ABA  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
***
call __SEH_prolog4  +
and [ebp+var_1C] 0 +
and [ebp+ms_exc.disabled] 0 +
mov eax [ebp+arg_0] +
shl eax 6 +
mov eax dword_1009040[eax] +
cmp eax 2 +
jz loc_1001AF2  +
cmp eax 5 +
jz loc_1001AF2  +
cmp eax 7 +
jnz loc_1001B06  +
mov [ebp+var_1C] 1 +
jmp loc_1001B06  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp-1Ch] 0 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1001AC3  +
test eax eax +
jz loc_1001B6A  +
shl esi 6 +
test dword_1009044[esi] 80000000h +
jz loc_1001B59  +
mov eax dword_1009048[esi] +
test eax eax +
jz loc_1001B59  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
and dword_1009044[esi] 7FFFFFFFh +
and dword_1009048[esi] 0 +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1001BDA  +
mov eax ecx +
push esi  +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1001B88  +
sub eax esi +
sar eax 1 +
lea eax [ecx+eax*2-2] +
pop esi  +
jmp loc_1001BBA  +
movzx edx word ptr [eax] +
cmp dx 20h +
jz loc_1001BB8  +
cmp dx 0Dh +
jz loc_1001BB8  +
cmp dx 0Ah +
jz loc_1001BB8  +
cmp dx 9 +
jnz loc_1001BBE  +
dec eax  +
dec eax  +
cmp eax ecx +
jnb loc_1001B9D  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
cmp cx 20h +
jz loc_1001BD5  +
cmp cx 0Ah +
jz loc_1001BD5  +
cmp cx 9 +
jnz loc_1001BDA  +
xor ecx ecx +
mov [eax] cx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
xor esi esi +
push 0FFFFFFF5h  +
mov [ebp+hKey] esi +
mov dword ptr [ebp+Data] esi +
call ds:GetStdHandle  +
cmp eax 0FFFFFFFFh +
jz loc_1001D99  +
cmp eax esi +
jz loc_1001D99  +
push eax  +
mov hConsoleOutput eax +
call ds:GetFileType  +
mov dword ptr [ebp+Data] eax +
test al 2 +
jnz loc_1001C37  +
xor eax eax +
mov word_1009450 ax +
mov word_1009448 ax +
mov word_1009440 ax +
pop esi  +
leave   +
retn   +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push hConsoleOutput  +
call ds:GetConsoleScreenBufferInfo  +
mov ax [ebp+ConsoleScreenBufferInfo.wAttributes] +
mov word_1009450 ax +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Right] +
sub eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Left] +
mov word_1009448 ax +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Bottom] +
sub eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Top] +
mov word_1009440 ax +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push esi  +
push offset SubKey  +
push 80000001h  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jnz loc_1001D19  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
mov [ebp+cbData] 4 +
call ds:RegQueryValueExW  +
cmp eax esi +
jnz loc_1001D19  +
mov edx dword ptr [ebp+Data] +
mov ecx 0FFh +
cmp edx ecx +
jnz loc_1001CEA  +
mov ecx dword ptr [ebp+ConsoleScreenBufferInfo.wAttributes] +
mov edx ecx +
or edx 8 +
mov ax cx +
and ecx 0F0h +
mov word ptr dword_1009458 dx +
mov edx ecx +
or edx 0Ch +
or ecx 8 +
mov word ptr dword_1009454 dx +
mov word ptr dword_100945C cx +
jmp loc_1001D2E  +
push edi  +
mov edi edx +
shr edi 8 +
and edi ecx +
mov word ptr dword_1009454 di +
mov edi edx +
shr edi 10h +
movzx eax dl +
and edi ecx +
shr edx 18h +
and edx ecx +
mov word ptr dword_1009458 di +
mov word ptr dword_100945C dx +
pop edi  +
jmp loc_1001D2E  +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.wAttributes] +
mov word ptr dword_1009454 ax +
mov word ptr dword_1009458 ax +
mov word ptr dword_100945C ax +
mov ecx dword_100945C +
shr cl 4 +
xor cl byte ptr dword_100945C +
mov word_1009460 ax +
test cl 0Fh +
jnz loc_1001D4E  +
mov word ptr dword_100945C ax +
mov ecx dword_1009458 +
shr cl 4 +
xor cl byte ptr dword_1009458 +
test cl 0Fh +
jnz loc_1001D68  +
mov word ptr dword_1009458 ax +
mov ecx dword_1009454 +
shr cl 4 +
xor cl byte ptr dword_1009454 +
test cl 0Fh +
jnz loc_1001D82  +
mov word ptr dword_1009454 ax +
cmp [ebp+hKey] esi +
jz loc_1001C34  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_1001C34  +
call ds:GetLastError  +
push eax  +
call ds:exit  +
***
call __SEH_prolog4  +
xor edi edi +
mov [ebp+var_1C] edi +
mov esi [ebp+var_1C] +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jz loc_1001E39  +
mov dword_1009058[esi] edi +
mov [ebp+ms_exc.disabled] edi +
push [ebp+var_1C]  +
call sub_1001AC3  +
test eax eax +
jz loc_1001DE9  +
push [ebp+var_1C]  +
call sub_1001B1D  +
mov eax dword_1009034[esi] +
cmp eax edi +
jz loc_1001E02  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov esi dword_1009038[esi] +
cmp esi edi +
jz loc_1001E1B  +
push esi  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1001E34  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor edi edi +
inc [ebp+var_1C]  +
jmp loc_1001DBD  +
xor ecx ecx +
mov ax word_1009450 +
cmp cx ax +
jz loc_1001E56  +
movzx eax ax +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
call __SEH_epilog4  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax-20h] +
cmp cx 5Eh +
ja loc_1001E79  +
xor eax eax +
jmp loc_1001FBE  +
lea ecx [eax-3000h] +
cmp cx 36h +
ja loc_1001E8D  +
xor eax eax +
inc eax  +
jmp loc_1001FBE  +
lea ecx [eax-3041h] +
cmp cx 53h +
jbe loc_1001E85  +
lea ecx [eax-30A1h] +
cmp cx 5Dh +
jbe loc_1001E85  +
lea ecx [eax-3105h] +
cmp cx 27h +
jbe loc_1001E85  +
lea ecx [eax-3131h] +
cmp cx 5Dh +
jbe loc_1001E85  +
lea ecx [eax-3200h] +
mov edx 0FFh +
cmp cx dx +
jbe loc_1001E85  +
lea ecx [eax-3300h] +
dec edx  +
cmp cx dx +
jbe loc_1001E85  +
lea ecx [eax+5400h] +
mov edx 2BA3h +
cmp cx dx +
jbe loc_1001E85  +
lea ecx [eax+2000h] +
mov edx 18FFh +
cmp cx dx +
jbe loc_1001E85  +
lea ecx [eax+0FFh] +
cmp cx 5Dh +
jbe loc_1001E85  +
lea ecx [eax+9Fh] +
cmp cx 3Eh +
jbe loc_1001E72  +
mov ecx 0FFA0h +
cmp cx ax +
ja loc_1001F2B  +
add ecx 1Eh +
cmp ax cx +
jbe loc_1001E72  +
mov ecx 0FFC2h +
cmp cx ax +
ja loc_1001F41  +
add ecx 5 +
cmp ax cx +
jbe loc_1001E72  +
mov ecx 0FFCAh +
cmp cx ax +
ja loc_1001F57  +
add ecx 5 +
cmp ax cx +
jbe loc_1001E72  +
mov ecx 0FFD2h +
cmp cx ax +
ja loc_1001F6D  +
add ecx 5 +
cmp ax cx +
jbe loc_1001E72  +
lea ecx [eax+26h] +
cmp cx 2 +
jbe loc_1001E72  +
lea ecx [eax+20h] +
cmp cx 6 +
jbe loc_1001E85  +
lea ecx [eax-4E00h] +
mov edx 51A5h +
cmp cx dx +
jbe loc_1001E85  +
lea ecx [eax+700h] +
mov edx 12Dh +
cmp cx dx +
jbe loc_1001E85  +
add eax 1D0h +
mov cx 1Fh +
cmp cx ax +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100203B  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001FDE  +
push ebx  +
sub eax edx +
push edi  +
mov edi [ebp+arg_4] +
sar eax 1 +
mov ebx eax +
test edi edi +
jz loc_1002000  +
call sub_1001A95  +
test eax eax +
jnz loc_1002031  +
mov [ebp+var_4] ebx +
test edi edi +
jz loc_100200C  +
mov eax [ebp+var_4] +
mov [edi] eax +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1002015  +
mov [eax] ebx +
xor eax eax +
pop edi  +
inc eax  +
pop ebx  +
jmp loc_100203D  +
push eax  +
call sub_1001E61  +
test eax eax +
jz loc_100202C  +
add [ebp+var_4] 2 +
jmp loc_100202F  +
inc [ebp+var_4]  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100201C  +
jmp loc_1002003  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [eax] ebx +
movzx esi word ptr [edi] +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp si bx +
jz loc_10020C8  +
inc [ebp+var_8]  +
push esi  +
call sub_1001E61  +
test eax eax +
jz loc_1002087  +
add [ebp+var_4] 2 +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_4] +
jnb loc_10020A6  +
mov ebx [ebp+var_8] +
jmp loc_10020A6  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_4] +
jnb loc_10020A6  +
push esi  +
call sub_1001A68  +
test eax eax +
jz loc_10020A6  +
mov ebx [ebp+var_8] +
dec ebx  +
cmp si 0Ah +
jz loc_10020BA  +
mov eax [ebp+arg_4] +
cmp [ebp+var_4] eax +
ja loc_10020C4  +
inc edi  +
inc edi  +
movzx esi word ptr [edi] +
test si si +
jnz loc_1002069  +
jmp loc_10020C8  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
xor eax eax +
inc eax  +
jmp loc_10020CA  +
test ebx ebx +
jnz loc_10020BA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax 80h +
or dword_1009184 eax +
or dword_1009344 eax +
or dword_1009144 eax +
or dword_1009104 eax +
mov dword_100916C 320h +
mov dword_100932C 321h +
mov dword_100912C 322h +
mov dword_10090EC 323h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_10021A4  +
mov esi ds:_wcsicmp +
push offset aTsv  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002147  +
push 2  +
jmp loc_10021A1  +
push offset aCsv  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002163  +
inc eax  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
push offset aSql  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002175  +
push 7  +
jmp loc_10021A1  +
push offset aBin  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100219F  +
push offset aEtl  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100219F  +
push offset aBlg  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10021A4  +
push 8  +
pop eax  +
jmp loc_1002156  +
mov eax 0F0000002h +
jmp loc_100215D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push [ebp+arg_0]  +
call PdhEnumMachinesHW  +
test eax eax +
jz loc_10021DA  +
cmp eax 800007D2h +
jz loc_10021DA  +
cmp eax 0C0000BC2h +
jnz locret_100220C  +
mov eax [ebp+var_4] +
add eax eax +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
test eax eax +
jz loc_1002207  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push [ebp+arg_0]  +
call PdhEnumMachinesHW  +
jmp locret_100220C  +
mov eax 0C0000BBBh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+lpMem] edi +
mov [ebp+dwBytes] edi +
mov [ebp+var_4] edi +
mov [ebp+var_14] edi +
mov [ebp+var_C] edi +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
cmp [ebp+arg_8] edi +
jz loc_1002434  +
mov ebx [ebp+arg_C] +
cmp ebx edi +
jz loc_1002434  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1002250  +
sub eax edx +
sar eax 1 +
cmp eax 3 +
jbe loc_1002271  +
cmp word ptr [ebx+2] 5Ch +
jnz loc_1002271  +
mov [ebp+var_1C] 1 +
mov esi ds:GetProcessHeap +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+lpMem]  +
push ebx  +
call PdhParseCounterPathW  +
cmp eax 800007D2h +
jnz loc_10022B7  +
cmp [ebp+lpMem] edi +
jz loc_100229E  +
push [ebp+lpMem]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
inc [ebp+dwBytes]  +
push [ebp+dwBytes]  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_1002277  +
jmp loc_10022BE  +
mov eax [ebp+lpMem] +
cmp eax edi +
jnz loc_10022C6  +
push 0Eh  +
pop eax  +
jmp loc_1002436  +
cmp [ebp+var_1C] edi +
jz loc_10022CF  +
mov eax [eax] +
jmp loc_10022D2  +
mov eax [ebp+arg_10] +
mov [ebp+arg_C] eax +
cmp eax edi +
jz loc_1002417  +
mov eax [ebp+arg_C] +
mov ebx [ebp+lpMem] +
mov [ebx] eax +
push edi  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+var_4]  +
push ebx  +
call PdhMakeCounterPathW  +
cmp eax 800007D2h +
jnz loc_1002326  +
cmp [ebp+var_4] edi +
jz loc_100230C  +
push [ebp+var_4]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
add eax eax +
push eax  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_10022E5  +
cmp [ebp+arg_0] edi +
jz loc_10023BA  +
cmp [ebp+var_4] edi +
jz loc_10023CF  +
mov ebx [ebp+var_C] +
push edi  +
lea eax [ebp+var_18] +
push eax  +
push ebx  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
call PdhExpandWildCardPathHW  +
cmp eax 800007D2h +
jnz loc_100237E  +
cmp ebx edi +
jz loc_1002362  +
push ebx  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
add eax eax +
push eax  +
push edi  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_C] eax +
cmp eax edi +
jnz loc_1002338  +
jmp loc_10023CF  +
cmp eax edi +
jnz loc_10023CF  +
cmp ebx edi +
jz loc_10023CF  +
mov eax [ebp+var_C] +
cmp [eax] di +
jz loc_10023CF  +
lea eax [ebp+var_20] +
push eax  +
push edi  +
push ebx  +
push [ebp+arg_8]  +
call PdhAddCounterW  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10023A1  +
sub eax edx +
sar eax 1 +
lea ebx [ebx+eax*2+2] +
cmp [ebx] di +
jnz loc_100238E  +
jmp loc_10023CF  +
cmp [ebp+var_4] edi +
jz loc_10023CF  +
lea eax [ebp+var_20] +
push eax  +
push edi  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
call PdhAddCounterW  +
cmp [ebp+var_1C] edi +
jnz loc_1002405  +
mov ebx [ebp+arg_C] +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10023DC  +
sub eax edx +
sar eax 1 +
lea eax [ebx+eax*2+2] +
xor ecx ecx +
mov [ebp+arg_C] eax +
cmp cx [eax] +
jnz loc_10023FD  +
mov [ebp+arg_C] edi +
mov eax edi +
cmp eax edi +
jnz loc_10022DD  +
cmp [ebp+var_4] edi +
jz loc_1002417  +
push [ebp+var_4]  +
push edi  +
call esi  +
push eax  +
call ds:HeapFree  +
push [ebp+lpMem]  +
push edi  +
call esi  +
mov ebx ds:HeapFree +
push eax  +
call ebx  +
cmp [ebp+var_C] edi +
jz loc_1002434  +
push [ebp+var_C]  +
push edi  +
call esi  +
push eax  +
call ebx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi off_1009108 +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
push [ebp+arg_4]  +
xor edi edi +
mov [ebp+lpMem] edi +
call sub_10021B0  +
cmp esi edi +
jz loc_1002495  +
jmp loc_1002490  +
push [ebp+lpMem]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1002215  +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_100247E  +
sub eax ecx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp [esi] di +
jnz loc_1002467  +
cmp [ebp+lpMem] edi +
jz loc_10024AB  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 810h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and [ebp+lpMem] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push offset aR  +
push off_1009148  +
mov [ebp+var_810] eax +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [ebp+var_80C] eax +
test eax eax +
jnz loc_100250E  +
call ds:GetLastError  +
mov eax 0C0000BD1h +
jmp loc_10025C4  +
push esi  +
push edi  +
lea eax [ebp+lpMem] +
push eax  +
push ebx  +
call sub_10021B0  +
mov esi ds:fgetws +
mov edi 400h +
jmp loc_100257E  +
cmp [ebp+var_804] 3Bh +
jz loc_100257E  +
cmp [ebp+var_804] 23h +
jz loc_100257E  +
lea eax [ebp+var_804] +
push eax  +
call sub_1001B76  +
lea eax [ebp+var_804] +
push offset asc_1001264  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100257E  +
push [ebp+lpMem]  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_810]  +
push ebx  +
push [ebp+arg_0]  +
call sub_1002215  +
push [ebp+var_80C]  +
lea eax [ebp+var_804] +
push edi  +
push eax  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_100252A  +
push [ebp+var_80C]  +
call ds:fclose  +
cmp [ebp+lpMem] 0 +
pop ecx  +
pop edi  +
pop esi  +
jz loc_10025C2  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1002621  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1002621  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1002611  +
test dx dx +
jz loc_100260D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1002611  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_10025EB  +
xor eax eax +
jmp loc_1002616  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor ecx ecx +
test eax eax +
setz cl  +
mov eax ecx +
jmp loc_1002623  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1002642  +
cmp edx 7FFFFFFFh +
jbe loc_1002647  +
mov eax 80070057h +
test eax eax +
jl loc_100265D  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100184C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_100267D  +
cmp edx 7FFFFFFFh +
jbe loc_1002682  +
mov eax 80070057h +
test eax eax +
jl loc_1002698  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100184C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_10026BC  +
cmp edx 7FFFFFFFh +
jbe loc_10026BE  +
mov eax ecx +
test eax eax +
jl loc_10026E7  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_10026D7  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_10026E7  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_100184C  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_1002709  +
cmp edx esi +
jbe loc_100270E  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_1002726  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_1001815  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_1002728  +
xor ecx ecx +
test eax eax +
jl loc_100273F  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_100184C  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100275F  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1002764  +
mov eax 80070057h +
test eax eax +
jl loc_100277E  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10018A3  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_100279C  +
cmp ecx 7FFFFFFFh +
jbe loc_10027A1  +
mov eax 80070057h +
test eax eax +
jl loc_10027BA  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax ecx +
push 0  +
call sub_10018A3  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_10027E3  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_10027E3  +
call sub_1001815  +
jmp loc_10027E8  +
mov eax 80070057h +
test eax eax +
jge loc_10027F3  +
test edi edi +
jz loc_10027F3  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
shr edx 1 +
test eax eax +
jz loc_1002826  +
cmp edx 7FFFFFFFh +
ja loc_1002826  +
push edi  +
lea edi [ebp+arg_4] +
call sub_1001815  +
pop edi  +
jmp loc_100282B  +
mov eax 80070057h +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1002842  +
test eax eax +
jl loc_100283F  +
mov edx [ebp+arg_4] +
add edx edx +
mov [ecx] edx +
jmp loc_1002842  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 0Ch  +
***
call __SEH_prolog4  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov esi eax +
mov [ebp+hFile] esi +
cmp esi 0FFFFFFFFh +
jz loc_1002995  +
xor ebx ebx +
cmp esi ebx +
jz loc_1002995  +
xor eax eax +
cmp ax word_1009450 +
jz loc_1002891  +
push [ebp+NumberOfCharsWritten]  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
mov [ebp+ms_exc.disabled] ebx +
mov [ebp+NumberOfCharsWritten] ebx +
lea eax [ebp+Arguments] +
push eax  +
push 1000h  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push ebx  +
push ebx  +
push [ebp+lpSource]  +
push 500h  +
call ds:FormatMessageW  +
mov edi eax +
mov [ebp+var_1C] edi +
cmp [ebp+NumberOfCharsWritten] ebx +
jz loc_1002955  +
push esi  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jnz loc_10028DF  +
push edi  +
push [ebp+NumberOfCharsWritten]  +
push esi  +
call sub_10018EF  +
jmp loc_1002935  +
lea eax [edi+edi+2] +
push eax  +
push ebx  +
mov edi ds:GetProcessHeap +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_1002935  +
push esi  +
push [ebp+NumberOfCharsWritten]  +
call ds:CharToOemW  +
test eax eax +
jz loc_1002926  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
cmp cl bl +
jnz loc_100290D  +
sub eax edx +
push ebx  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
push esi  +
push [ebp+hFile]  +
call ds:WriteFile  +
cmp esi ebx +
jz loc_1002935  +
push esi  +
push ebx  +
call edi  +
push eax  +
call ds:HeapFree  +
push ebx  +
lea eax [ebp+lpSource] +
push eax  +
push [ebp+NumberOfCharsWritten]  +
call sub_1001FC7  +
test eax eax +
jz loc_100294C  +
mov eax [ebp+lpSource] +
mov [ebp+var_1C] eax +
push [ebp+NumberOfCharsWritten]  +
call ds:LocalFree  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor ecx ecx +
mov ax word_1009450 +
cmp cx ax +
jz loc_1002979  +
movzx eax ax +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
mov eax [ebp+var_1C] +
jmp loc_1002997  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
call sub_1001DAC  +
push 8000FFFFh  +
call ds:exit  +
xor eax eax +
call __SEH_epilog4  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+lpSource]  +
push [ebp+NumberOfCharsWritten]  +
call sub_100284B  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
xor esi esi +
call sub_1001A46  +
mov ebx ds:GetProcessHeap +
test eax eax +
jnz loc_1002A29  +
lea eax [ebp+var_8] +
push eax  +
push 400h  +
push [ebp+arg_0]  +
call sub_10027C1  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_1002A62  +
mov eax [ebp+var_8] +
add eax 2 +
lea edi [eax+eax] +
mov ecx edi +
shr ecx 1 +
cmp ecx eax +
jnz loc_1002A4C  +
push edi  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1002A4C  +
push edi  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
push [ebp+arg_0]  +
push edi  +
jmp loc_1002A43  +
push 4  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1002A64  +
push offset dword_1001214  +
push 4  +
push esi  +
call sub_1002666  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_1002A64  +
test esi esi +
jz loc_1002A62  +
push esi  +
push 0  +
call ebx  +
push eax  +
call ds:HeapFree  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
call __SEH_prolog4  +
and [ebp+var_1C] 0 +
and [ebp+ms_exc.disabled] 0 +
push [ebp+arg_0]  +
call sub_1001AC3  +
test eax eax +
jz loc_1002AF3  +
mov esi [ebp+arg_0] +
shl esi 6 +
mov edi 80000000h +
test dword_1009044[esi] edi +
jz loc_1002AAD  +
push [ebp+arg_0]  +
call sub_1001B1D  +
push [ebp+arg_4]  +
call sub_10029BF  +
mov dword_1009048[esi] eax +
test eax eax +
jnz loc_1002AC8  +
mov [ebp+var_1C] 0Eh +
jmp loc_1002AFA  +
or dword_1009044[esi] edi +
mov eax dword_1009044[esi] +
and eax 0FEFFFFFFh +
mov dword_1009044[esi] eax +
and eax 0FFFDFFFFh +
mov dword_1009044[esi] eax +
jmp loc_1002AFA  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_1C] 57h +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_1C] +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+lpMem] +
mov [ebp+var_4] 57h +
test edi edi +
jnz loc_1002B34  +
mov eax [ebp+arg_4] +
and [eax] edi +
and [ebp+var_4] edi +
jmp loc_1002BEC  +
push edi  +
call sub_10029BF  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1002B4D  +
mov [ebp+var_4] 0Eh +
jmp loc_1002BD4  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002B50  +
sub eax edx +
push ebx  +
sar eax 1 +
push esi  +
mov esi eax +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call ds:wcstod  +
call _ftol2  +
mov ebx eax +
push ebx  +
push offset aLu  +
inc esi  +
push esi  +
push [ebp+lpMem]  +
call sub_100274A  +
add esp 18h +
test eax eax +
jl loc_1002BD2  +
cmp word ptr [edi] 30h +
mov eax [ebp+var_8] +
mov edx edi +
jnz loc_1002BAE  +
mov ecx eax +
sub ecx edi +
mov esi ecx +
and esi 0FFFFFFFEh +
cmp esi 2 +
jle loc_1002BAE  +
inc edx  +
inc edx  +
dec ecx  +
dec ecx  +
cmp word ptr [edx] 30h +
jz loc_1002B9A  +
sub eax edx +
sar eax 1 +
push eax  +
push edx  +
push [ebp+lpMem]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1002BD2  +
cmp ebx [ebp+arg_8] +
ja loc_1002BD2  +
mov eax [ebp+arg_4] +
and [ebp+var_4] 0 +
mov [eax] ebx +
pop esi  +
pop ebx  +
cmp [ebp+lpMem] 0 +
jz loc_1002BEC  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1164h +
call __alloca_probe  +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ds:LoadStringW +
push edi  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
push 1FBh  +
xor edi edi +
push edi  +
call esi  +
lea ecx [eax-1] +
cmp ecx 1 +
ja loc_1002C49  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 2  +
push offset word_1009020  +
call sub_10026A1  +
push 10h  +
lea eax [ebp+Buffer] +
push eax  +
push 1FCh  +
push edi  +
call esi  +
lea ecx [eax-1] +
cmp ecx 0Fh +
ja loc_1002C76  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 10h  +
push offset word_1009000  +
call sub_10026A1  +
push 4  +
lea eax [ebp+Buffer] +
push eax  +
push 1FDh  +
push edi  +
call esi  +
lea ecx [eax-1] +
cmp ecx 3 +
ja loc_1002CA3  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 4  +
push offset word_1009464  +
call sub_10026A1  +
cmp dword_1009040 6 +
mov [ebp+var_1164] edi +
jz loc_100314C  +
mov [ebp+var_1158] edi +
mov [ebp+var_115C] offset dword_1009040 +
mov edi 400h +
push ebx  +
push edi  +
lea eax [ebp+var_1154] +
push eax  +
mov eax [ebp+var_1158] +
push dword_1009028[eax]  +
push 0  +
call ds:LoadStringW  +
mov ebx ds:wcstok +
lea eax [ebp+var_1154] +
push offset word_1009020  +
push eax  +
call ebx  +
push offset word_1009020  +
push 0  +
mov esi eax +
call ebx  +
push offset word_1009020  +
push 0  +
mov [ebp+var_1160] eax +
call ebx  +
push offset word_1009020  +
push 0  +
mov ebx eax +
call ds:wcstok  +
add esp 20h +
push esi  +
call sub_1001A46  +
test eax eax +
jnz loc_1002D6B  +
mov ecx offset asc_100132C +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1002D5F  +
test dx dx +
jz loc_1002D5B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1002D5F  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1002D39  +
xor eax eax +
jmp loc_1002D64  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1002D6B  +
push esi  +
jmp loc_1002D6D  +
push 0  +
call sub_10029BF  +
mov ecx [ebp+var_1158] +
push [ebp+var_1160]  +
mov dword_1009034[ecx] eax +
call sub_1001A46  +
mov esi offset asc_100132C +
test eax eax +
jnz loc_1002DD1  +
mov eax [ebp+var_1160] +
mov ecx esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1002DC0  +
test dx dx +
jz loc_1002DBC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1002DC0  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1002D9A  +
xor eax eax +
jmp loc_1002DC5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1002DD1  +
push [ebp+var_1160]  +
jmp loc_1002DD3  +
push 0  +
call sub_10029BF  +
mov ecx [ebp+var_1158] +
mov dword_1009038[ecx] eax +
mov eax ecx +
mov eax dword_1009044[eax] +
test eax 4000h +
jz loc_1002F60  +
mov ebx ds:GetLocaleInfoW +
push 50h  +
lea eax [ebp+LCData] +
push eax  +
push 1Fh  +
push edi  +
call ebx  +
push 50h  +
lea eax [ebp+var_B4] +
push eax  +
push 1003h  +
push edi  +
call ebx  +
push 4  +
lea eax [ebp+var_14] +
push eax  +
push 28h  +
push edi  +
call ebx  +
test eax eax +
jnz loc_1002E2F  +
mov word ptr [ebp+var_14] ax +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 29h  +
push edi  +
call ebx  +
test eax eax +
jnz loc_1002E42  +
mov word ptr [ebp+var_C] ax +
lea eax [ebp+var_B4] +
push offset asc_1001270  +
push eax  +
call ds:wcstok  +
pop ecx  +
lea eax [ebp+var_14] +
pop ecx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002E5C  +
sub eax edx +
sar eax 1 +
jz loc_1002EC5  +
lea eax [ebp+var_C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002E72  +
sub eax edx +
sar eax 1 +
jz loc_1002EC5  +
mov ebx [ebp+var_1158] +
test byte ptr dword_1009044[ebx] 4 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_B4] +
push eax  +
lea eax [ebp+LCData] +
push eax  +
lea eax [ebp+Buffer] +
jz loc_1002EB4  +
push offset aSSSS  +
jmp loc_1002EB9  +
push offset aSSSS_0  +
push edi  +
push eax  +
call sub_100274A  +
add esp 1Ch +
jmp loc_1002EFE  +
mov ebx [ebp+var_1158] +
test byte ptr dword_1009044[ebx] 4 +
lea eax [ebp+var_B4] +
push eax  +
lea eax [ebp+LCData] +
push eax  +
lea eax [ebp+Buffer] +
jz loc_1002EEF  +
push offset aSS  +
jmp loc_1002EF4  +
push offset aSS_0  +
push edi  +
push eax  +
call sub_100274A  +
add esp 14h +
lea eax [ebp+Buffer] +
push eax  +
call sub_1001A46  +
test eax eax +
jnz loc_1002F4E  +
mov ecx esi +
lea eax [ebp+Buffer] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1002F3C  +
test dx dx +
jz loc_1002F38  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1002F3C  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1002F16  +
xor eax eax +
jmp loc_1002F41  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1002F4E  +
lea eax [ebp+Buffer] +
push eax  +
jmp loc_1002F50  +
push 0  +
call sub_10029BF  +
mov dword_100903C[ebx] eax +
jmp loc_1003121  +
test eax 1000h +
jz loc_1002F84  +
push edi  +
lea eax [ebp+var_1154] +
push eax  +
push 1F7h  +
push 0  +
call ds:LoadStringW  +
lea ebx [ebp+var_1154] +
jmp loc_1002FC4  +
test eax 2000h +
jz loc_1002F9A  +
push edi  +
lea eax [ebp+var_1154] +
push eax  +
push 1F8h  +
jmp loc_1002F74  +
test eax 8000h +
jz loc_1002FBC  +
push edi  +
lea eax [ebp+var_1154] +
push eax  +
push 1F9h  +
push 0  +
call ds:LoadStringW  +
lea ebx [ebp+var_1154] +
test ebx ebx +
jz loc_10030D6  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1002FC9  +
sub eax edx +
sar eax 1 +
jz loc_10030D6  +
mov ecx esi +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1003007  +
test dx dx +
jz loc_1003003  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1003007  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1002FE1  +
xor eax eax +
jmp loc_100300C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10030D6  +
mov eax [ebp+var_1158] +
mov eax dword_1009044[eax] +
mov ecx [ebp+var_115C] +
test al 4 +
jz loc_1003047  +
cmp dword ptr [ecx] 5 +
jnz loc_100303F  +
test eax 200h +
jnz loc_100303F  +
push ebx  +
push ebx  +
push offset aSS___  +
jmp loc_100305A  +
push ebx  +
push offset aS  +
jmp loc_1003072  +
cmp dword ptr [ecx] 5 +
jnz loc_100306C  +
test eax 200h +
jnz loc_100306C  +
push ebx  +
push ebx  +
push offset aSS____0  +
lea eax [ebp+Buffer] +
push edi  +
push eax  +
call sub_100274A  +
add esp 14h +
jmp loc_1003082  +
push ebx  +
push offset aS_0  +
lea eax [ebp+Buffer] +
push edi  +
push eax  +
call sub_100274A  +
add esp 10h +
lea eax [ebp+Buffer] +
push eax  +
call sub_1001A46  +
test eax eax +
jnz loc_10030D2  +
mov ecx esi +
lea eax [ebp+Buffer] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10030C0  +
test dx dx +
jz loc_10030BC  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10030C0  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_100309A  +
xor eax eax +
jmp loc_10030C5  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10030D2  +
lea eax [ebp+Buffer] +
push eax  +
jmp loc_1003110  +
push 0  +
jmp loc_1003110  +
xor ebx ebx +
push ebx  +
call sub_1001A46  +
test eax eax +
jnz loc_100310F  +
mov ecx esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100310A  +
cmp dx bx +
jz loc_1003106  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100310A  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_10030E4  +
xor eax eax +
jmp loc_100310F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
push ebx  +
call sub_10029BF  +
mov ecx [ebp+var_1158] +
mov dword_100903C[ecx] eax +
inc [ebp+var_1164]  +
mov eax [ebp+var_1164] +
shl eax 6 +
mov [ebp+var_1158] eax +
lea eax dword_1009040[eax] +
cmp dword ptr [eax] 6 +
mov [ebp+var_115C] eax +
jnz loc_1002CCC  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push [ebp+arg_4]  +
mov edi [ebx] +
xor esi esi +
mov [ebp+var_4] esi +
call sub_1001A46  +
test eax eax +
jnz loc_1003276  +
test edi edi +
jz loc_10031C3  +
cmp [edi] si +
jz loc_10031C3  +
lea eax [ebp+arg_0] +
push eax  +
push 400h  +
push edi  +
call sub_10027C1  +
test eax eax +
jl loc_1003278  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add eax eax +
mov ecx eax +
shr ecx 1 +
add edi eax +
cmp ecx [ebp+arg_0] +
jnz loc_100320F  +
add eax esi +
cmp eax esi +
jb loc_100320F  +
cmp word ptr [edi] 0 +
mov esi eax +
jnz loc_100318B  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFDh  +
push [ebp+arg_4]  +
call sub_10027FD  +
test eax eax +
jl loc_1003278  +
add [ebp+var_4] 2 +
lea eax [esi+4] +
cmp eax 4 +
jb loc_100320F  +
mov ecx [ebp+var_4] +
add ecx eax +
mov [ebp+arg_0] ecx +
cmp ecx eax +
jb loc_100320F  +
push ecx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_1003216  +
push 0Eh  +
pop eax  +
jmp loc_1003278  +
mov eax 216h +
jmp loc_1003278  +
push [ebp+arg_0]  +
push 0  +
push edi  +
call memset  +
add esp 0Ch +
test esi esi +
jz loc_100324F  +
push esi  +
push dword ptr [ebx]  +
push edi  +
call memcpy  +
push [ebp+var_4]  +
lea eax [edi+esi] +
push [ebp+arg_4]  +
push eax  +
call memcpy  +
push esi  +
push 0  +
push dword ptr [ebx]  +
call memset  +
add esp 24h +
jmp loc_100325E  +
push [ebp+var_4]  +
push [ebp+arg_4]  +
push edi  +
call memcpy  +
add esp 0Ch +
mov eax [ebx] +
test eax eax +
jz loc_1003274  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebx] edi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 808h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
mov esi 400h +
push esi  +
lea eax [ebp+Source] +
push eax  +
push [ebp+dwMessageId]  +
push 0  +
call ds:LoadStringW  +
test eax eax +
jle loc_10032D8  +
push [ebp+Arguments]  +
lea eax [ebp+Source] +
push eax  +
push [ebp+NumberOfCharsWritten]  +
call sub_100284B  +
mov esi eax +
jmp loc_1003312  +
lea eax [ebp+Arguments] +
push eax  +
push esi  +
lea eax [ebp+Source] +
push eax  +
push esi  +
push [ebp+dwMessageId]  +
push 0  +
call ds:GetModuleHandleW  +
push eax  +
push 800h  +
call ds:FormatMessageW  +
mov esi eax +
lea eax [ebp+Source] +
push eax  +
push [ebp+NumberOfCharsWritten]  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp [ebp+arg_0] eax +
jge loc_1003351  +
sub eax [ebp+arg_0] +
push esi  +
mov esi eax +
movzx eax word_1009460 +
push offset asc_1001270  +
push eax  +
call sub_10029A4  +
dec esi  +
pop ecx  +
pop ecx  +
jnz loc_1003339  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80Ch +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov ecx eax +
and ecx 80000001h +
jns loc_1003381  +
dec ecx  +
or ecx 0FFFFFFFEh +
inc ecx  +
sub eax ecx +
cmp eax [ebp+arg_8] +
mov [ebp+arg_C] eax +
jg loc_1003392  +
mov [ebp+arg_C] 4Fh +
push ebx  +
push esi  +
push edi  +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
xor ebx ebx +
push ebx  +
call ds:LoadStringW  +
mov esi ds:wcstok +
mov [ebp+var_808] eax +
mov edi offset word_1009020 +
lea eax [ebp+Buffer] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_80C] eax +
cmp [ebp+arg_10] ebx +
jz loc_10033EA  +
push edi  +
push ebx  +
call esi  +
push edi  +
push ebx  +
call esi  +
push edi  +
push ebx  +
call esi  +
add esp 18h +
mov [ebp+var_80C] eax +
mov esi [ebp+arg_8] +
cmp [ebp+arg_4] esi +
jge loc_1003402  +
push esi  +
push [ebp+arg_4]  +
call sub_1003326  +
mov eax [ebp+arg_C] +
sub eax esi +
jmp loc_1003408  +
mov eax [ebp+arg_C] +
sub eax [ebp+arg_4] +
cmp [ebp+var_808] ebx +
jle loc_10034E1  +
mov ecx [ebp+var_80C] +
cmp ecx ebx +
jz loc_10034E1  +
lea esi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
cmp dx bx +
jnz loc_1003425  +
sub ecx esi +
sar ecx 1 +
jz loc_10034E1  +
mov esi [ebp+var_80C] +
cmp [esi] bx +
jz loc_10034DD  +
lea ecx [ebp+var_808] +
push ecx  +
push eax  +
push esi  +
call sub_1002047  +
push esi  +
test eax eax +
jz loc_10034BB  +
mov eax [ebp+var_808] +
lea edi [esi+eax*2] +
movzx ebx word ptr [edi] +
xor eax eax +
mov [edi] ax +
movzx eax word_1009460 +
push eax  +
call sub_10029A4  +
pop ecx  +
mov esi edi +
mov [edi] bx +
movzx eax word ptr [esi] +
pop ecx  +
push eax  +
call sub_1001A68  +
test eax eax +
jz loc_100348F  +
inc esi  +
inc esi  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
push [ebp+arg_8]  +
push 0  +
call sub_1003326  +
mov eax [ebp+arg_C] +
sub eax [ebp+arg_8] +
cmp word ptr [esi] 0 +
jnz loc_1003448  +
jmp loc_10034DD  +
movzx eax word_1009460 +
push eax  +
call sub_10029A4  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
add esp 10h +
xor eax eax +
jmp loc_10034E4  +
push 2  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1014h +
call __alloca_probe  +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 400h  +
lea eax [ebp+Filename] +
xor esi esi +
push eax  +
push esi  +
mov [ebp+var_1014] esi +
mov [ebp+var_100C] esi +
call ds:GetModuleFileNameW  +
push offset aMicrosoftO  +
mov [ebp+puLen] eax +
mov edi 200h +
push edi  +
lea eax [ebp+Arguments] +
push eax  +
call sub_100262C  +
cmp [ebp+puLen] esi +
jbe loc_10036B0  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+Filename] +
push eax  +
push 2  +
call GetFileVersionInfoSizeExW  +
mov [ebp+puLen] eax +
cmp eax esi +
jbe loc_10036B0  +
push ebx  +
push eax  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx esi +
jz loc_10036AF  +
push ebx  +
push [ebp+puLen]  +
lea eax [ebp+Filename] +
push esi  +
push eax  +
push 2  +
call GetFileVersionInfoExW  +
test eax eax +
jz loc_10036A0  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push ebx  +
mov [ebp+lpBuffer] esi +
call VerQueryValueW  +
mov eax [ebp+lpBuffer] +
cmp eax esi +
jz loc_1003668  +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push offset aProductversion  +
push ecx  +
push eax  +
mov esi offset aStringfileinfo +
push esi  +
lea eax [ebp+SubBlock] +
push edi  +
push eax  +
call sub_100274A  +
add esp 18h +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+var_1014] +
push eax  +
lea eax [ebp+SubBlock] +
push eax  +
push ebx  +
call VerQueryValueW  +
mov eax [ebp+lpBuffer] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push offset aOriginalfilena  +
push ecx  +
push eax  +
push esi  +
lea eax [ebp+SubBlock] +
push edi  +
push eax  +
call sub_100274A  +
add esp 18h +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+var_100C] +
push eax  +
lea eax [ebp+SubBlock] +
push eax  +
push ebx  +
call VerQueryValueW  +
xor esi esi +
cmp [ebp+var_100C] esi +
jz loc_10036A0  +
cmp [ebp+var_1014] esi +
jz loc_10036A0  +
push [ebp+var_1014]  +
lea eax [ebp+Arguments] +
push [ebp+var_100C]  +
push eax  +
movzx eax word_1009460 +
push offset Source  +
push eax  +
call sub_10029A4  +
add esp 14h +
push ebx  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_8] 2 +
ja loc_10036DB  +
mov ecx [ebp+arg_4] +
mov [ecx] ax +
jmp loc_10037CC  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [edi] ax +
xor eax eax +
shl esi 6 +
mov [edi+2] ax +
mov ebx dword_1009044[esi] +
test bl 20h +
jnz loc_1003717  +
test ebx 100000h +
jnz loc_1003717  +
push dword_1009038[esi]  +
call sub_1001A46  +
test eax eax +
jnz loc_1003717  +
and [ebp+arg_4] eax +
jmp loc_100371E  +
mov [ebp+arg_4] 1 +
test bl 8 +
jz loc_1003737  +
push dword_100903C[esi]  +
push [ebp+arg_8]  +
push edi  +
call sub_100262C  +
jmp loc_10037C9  +
test ebx 100020h +
jnz loc_1003747  +
mov ax word_1009000 +
jmp loc_100375B  +
push offset word_1009464  +
call sub_1001A46  +
test eax eax +
jnz loc_100375E  +
mov ax word_1009464 +
mov [edi] ax +
test dword_1009044[esi] 10000h +
mov eax offset asc_100142C +
jnz loc_1003774  +
mov eax offset dword_1001214 +
push eax  +
push [ebp+arg_8]  +
push edi  +
call sub_10026F0  +
cmp [ebp+arg_4] 0 +
jz loc_100378C  +
mov eax dword_1009034[esi] +
jmp loc_1003792  +
mov eax dword_1009038[esi] +
push eax  +
push [ebp+arg_8]  +
push edi  +
call sub_10026F0  +
lea eax dword_1009028[esi] +
push eax  +
call sub_1001A24  +
test eax eax +
jz loc_10037C9  +
push offset asc_1001270  +
push [ebp+arg_8]  +
push edi  +
call sub_10026F0  +
push dword_100903C[esi]  +
push [ebp+arg_8]  +
push edi  +
call sub_10026F0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 828h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp dword_1009040 6 +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_811+1] eax +
mov [ebp+var_824] eax +
mov [ebp+var_81C] eax +
mov [ebp+var_808] eax +
jz loc_1003C69  +
xor edi edi +
mov [ebp+var_818] offset dword_1009040 +
mov [ebp+var_820] 40h +
mov bl byte_1009032[edi] +
test bl bl +
jz loc_1003893  +
mov esi dword_1009040 +
xor edx edx +
xor ecx ecx +
cmp esi 6 +
jz loc_1003893  +
xor eax eax +
test byte_1009032[eax] bl +
jz loc_1003855  +
cmp dword_1009058[eax] edx +
jnz loc_1003893  +
inc ecx  +
mov eax ecx +
shl eax 6 +
cmp dword_1009040[eax] 6 +
jnz loc_1003845  +
cmp esi 6 +
jz loc_1003893  +
xor eax eax +
test byte_1009032[eax] bl +
jz loc_1003884  +
lea ecx dword_1009044[eax] +
mov eax [ecx] +
test al 20h +
jnz loc_1003884  +
or eax 2 +
mov [ecx] eax +
inc edx  +
mov eax edx +
shl eax 6 +
cmp dword_1009040[eax] 6 +
jnz loc_100386B  +
cmp dword_1009058[edi] 0 +
jz loc_1003C3E  +
test dword_1009044[edi] 400000h +
jz loc_1003926  +
movzx edx word ptr dword_1009060[edi] +
xor ecx ecx +
cmp dword_1009040 6 +
jz loc_10038ED  +
xor eax eax +
cmp dword_1009058[eax] 0 +
jz loc_10038DE  +
cmp dx word ptr dword_1009060[eax] +
jnz loc_10038DE  +
test dword_1009044[eax] 100000h +
jnz loc_1003926  +
inc ecx  +
mov eax ecx +
shl eax 6 +
cmp dword_1009040[eax] 6 +
jnz loc_10038C0  +
xor esi esi +
cmp dword_1009040 6 +
jz loc_1003926  +
xor eax eax +
cmp dx word ptr dword_1009060[eax] +
jnz loc_1003917  +
lea ecx dword_1009044[eax] +
mov eax [ecx] +
test eax 100000h +
jz loc_1003917  +
or eax 2 +
mov [ecx] eax +
inc esi  +
mov eax esi +
shl eax 6 +
cmp dword_1009040[eax] 6 +
jnz loc_10038FA  +
cmp dword_1009058[edi] 0 +
jz loc_1003C3E  +
lea eax byte_1009030[edi] +
cmp dword ptr [eax] 0 +
jz loc_1003B1B  +
mov cl [eax] +
mov al byte ptr unk_1009031[edi] +
mov bl byte_1009033[edi] +
mov esi [ebp+var_820] +
mov [ebp+var_812] al +
mov eax [ebp+var_808] +
and bl 0Fh +
inc eax  +
cmp dword_1009040[esi] 6 +
mov byte ptr [ebp+var_811] cl +
mov [ebp+var_80C] eax +
jz loc_1003B1B  +
jmp loc_1003987  +
mov cl byte ptr [ebp+var_811] +
mov eax dword ptr byte_1009030[esi] +
test eax eax +
jz loc_1003AFF  +
mov dl byte ptr unk_1009031[esi] +
shr eax 1Ch +
and al 0Fh +
mov [ebp+var_814] dl +
mov [ebp+var_813] al +
test cl cl +
jz loc_1003A1C  +
test byte_1009030[esi] cl +
jz loc_1003A1C  +
cmp dword_1009058[esi] 0 +
jz loc_1003A1C  +
push 200h  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_808]  +
call sub_10036C3  +
push 200h  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_80C]  +
call sub_10036C3  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_404] +
push eax  +
movzx eax word ptr dword_1009454 +
push 22Fh  +
push eax  +
call sub_1003284  +
add esp 10h +
mov [ebp+var_811+1] 0A0h +
mov al [ebp+var_812] +
test al al +
jz loc_1003A92  +
test [ebp+var_814] al +
jz loc_1003A92  +
cmp dword_1009058[esi] 0 +
jnz loc_1003A92  +
push 200h  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_808]  +
call sub_10036C3  +
push 200h  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_80C]  +
call sub_10036C3  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_404] +
push eax  +
movzx eax word ptr dword_1009454 +
push 22Ah  +
push eax  +
call sub_1003284  +
add esp 10h +
mov [ebp+var_811+1] 0A0h +
test bl bl +
jz loc_1003AFF  +
test [ebp+var_813] bl +
jz loc_1003AFF  +
cmp dword_1009058[esi] 0 +
jz loc_1003AFF  +
mov esi 200h +
push esi  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_808]  +
call sub_10036C3  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_80C]  +
call sub_10036C3  +
lea eax [ebp+var_804] +
push eax  +
lea eax [ebp+var_404] +
push eax  +
movzx eax word ptr dword_1009454 +
push 22Fh  +
push eax  +
call sub_1003284  +
add esp 10h +
mov [ebp+var_811+1] 0A0h +
inc [ebp+var_80C]  +
mov esi [ebp+var_80C] +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1003981  +
cmp dword_1009058[edi] 0 +
jz loc_1003C3E  +
test dword_1009044[edi] 800h +
jz loc_1003C3E  +
mov eax [ebp+var_818] +
mov eax [eax] +
and [ebp+var_80C] 0 +
dec eax  +
dec eax  +
jz loc_1003B5F  +
sub eax 3 +
jz loc_1003B5F  +
mov [ebp+var_811+1] 57h +
jmp loc_1003C3E  +
mov esi dword_1009048[edi] +
test esi esi +
jz loc_1003C3E  +
test dword_1009044[edi] 2000000h +
jnz loc_1003C3E  +
push dword_100903C[edi]  +
call sub_10029BF  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_1003BE9  +
mov ebx ds:wcstok +
push offset asc_1001434  +
push eax  +
call ebx  +
cmp [ebp+var_80C] 0 +
pop ecx  +
pop ecx  +
jnz loc_1003BD4  +
test eax eax +
jz loc_1003BD4  +
push esi  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003BCA  +
push offset asc_1001434  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
jmp loc_1003BAB  +
mov [ebp+var_80C] 1 +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor ebx ebx +
cmp [ebp+var_80C] ebx +
jnz loc_1003C07  +
or dword_1009044[edi] 2000000h +
mov [ebp+var_811+1] 0A0h +
mov eax [ebp+var_818] +
cmp dword ptr [eax] 5 +
jnz loc_1003C34  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1003C17  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov [ebp+var_80C] ebx +
cmp [esi] bx +
jnz loc_1003C36  +
xor esi esi +
cmp esi ebx +
jnz loc_1003B6D  +
inc [ebp+var_808]  +
mov edi [ebp+var_808] +
add [ebp+var_820] 40h +
shl edi 6 +
lea eax dword_1009040[edi] +
cmp dword ptr [eax] 6 +
mov [ebp+var_818] eax +
jnz loc_100382A  +
xor esi esi +
cmp dword_1009040 6 +
mov [ebp+var_808] esi +
jz loc_1003D76  +
mov ebx 0A0h +
mov edi 200h +
mov eax dword_1009044[esi] +
test al 20h +
jz loc_1003CAB  +
cmp dword_1009058[esi] 0 +
jz loc_1003CA1  +
inc [ebp+var_81C]  +
mov [ebp+var_824] 1 +
test al 2 +
jz loc_1003CED  +
cmp dword_1009058[esi] 0 +
jnz loc_1003CED  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_808]  +
call sub_10036C3  +
lea eax [ebp+var_404] +
push eax  +
movzx eax word ptr dword_1009454 +
push 22Bh  +
push eax  +
call sub_1003284  +
add esp 0Ch +
mov [ebp+var_811+1] ebx +
test dword_1009044[esi] 2000000h +
jz loc_1003D2E  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
push [ebp+var_808]  +
call sub_10036C3  +
lea eax [ebp+var_404] +
push eax  +
movzx eax word ptr dword_1009454 +
push 227h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
mov [ebp+var_811+1] ebx +
inc [ebp+var_808]  +
mov esi [ebp+var_808] +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1003C88  +
cmp [ebp+var_824] 0 +
jz loc_1003D76  +
cmp [ebp+var_81C] 0 +
jnz loc_1003D76  +
movzx eax word ptr dword_1009454 +
push 22Ch  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
mov [ebp+var_811+1] ebx +
mov ecx [ebp+var_4] +
mov eax [ebp+var_811+1] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor esi esi +
push 0FFFFFFF6h  +
mov [ebp+var_10] ebx +
mov dword ptr [ebp+WideCharStr] ebx +
mov [ebp+var_20] esi +
mov [ebp+var_18] ebx +
mov [ebp+dwMode] ebx +
call ds:GetStdHandle  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi 0FFFFFFFFh +
jz loc_10040A0  +
cmp edi ebx +
jz loc_10040A0  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
mov eax [ebp+dwMode] +
and eax 0FFFFFFF9h +
push eax  +
push edi  +
call ds:SetConsoleMode  +
cmp [ebp+arg_4] 2 +
jb loc_1004073  +
mov edi [ebp+arg_10] +
cmp edi ebx +
jz loc_1004073  +
cmp [ebp+arg_C] ebx +
jz loc_1003E38  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+arg_4]  +
push dword ptr [ebp+Arguments]  +
call sub_10027C1  +
mov esi [ebp+var_20] +
mov [ebp+var_10] eax +
cmp esi ebx +
jz loc_1003E30  +
push dword ptr [ebp+Arguments]  +
movzx eax word_1009460 +
push offset a1S  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
lea eax [ebp+Buffer.Event] +
mov [ebp+var_18] eax +
mov [edi] ebx +
xor ebx ebx +
inc ebx  +
push [ebp+hConsoleHandle]  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jz loc_1003EC0  +
mov edi ds:ReadFile +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push ebx  +
lea eax [ebp-1] +
push eax  +
push [ebp+hConsoleHandle]  +
call edi  +
test eax eax +
jz loc_1004041  +
cmp [ebp+NumberOfCharsRead] 0 +
jnz loc_1003E7E  +
mov dword ptr [ebp+WideCharStr] 0Ah +
jmp loc_1003F76  +
push ebx  +
lea eax [ebp+WideCharStr] +
push eax  +
push ebx  +
lea eax [ebp-1] +
push eax  +
push 0  +
call ds:_getmbcp  +
push eax  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_1003E9E  +
and dword ptr [ebp+WideCharStr] eax +
push 0Dh  +
pop eax  +
cmp ax [ebp+WideCharStr] +
jnz loc_1003F76  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push ebx  +
lea eax [ebp-1] +
push eax  +
push [ebp+hConsoleHandle]  +
call edi  +
jmp loc_1003F76  +
cmp [ebp+arg_C] 0 +
jz loc_1003F62  +
xor eax eax +
lea edi [ebp+Buffer] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push ebx  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleInputW  +
mov eax ebx +
cmp ax [ebp+Buffer.EventType] +
jnz loc_1003E3B  +
mov eax [ebp+var_18] +
cmp [eax] ebx +
jnz loc_1003E3B  +
mov ecx eax +
mov al [ecx+0Ah] +
test al al +
jz loc_1003F10  +
cbw   +
movzx eax ax +
mov dword ptr [ebp+WideCharStr] eax +
jmp loc_1003F76  +
movzx eax word ptr [ecx+6] +
xor ecx ecx +
cmp cx ax +
jz loc_1003E3B  +
movzx eax ax +
cmp eax 10h +
jl loc_1003F30  +
cmp eax 11h +
jle loc_1003E3B  +
test esi esi +
jbe loc_1003F49  +
push 8  +
push 8  +
push offset aCC  +
call ds:wprintf  +
add esp 0Ch +
dec esi  +
jnz loc_1003F34  +
mov eax [ebp+arg_10] +
mov ecx dword ptr [ebp+Arguments] +
mov [eax] ebx +
mov eax [ebp+var_18] +
mov ax [eax+6] +
mov [ecx+esi*2] ax +
inc esi  +
jmp loc_100407A  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push ebx  +
lea eax [ebp+WideCharStr] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
mov ecx dword ptr [ebp+WideCharStr] +
movzx eax cx +
sub eax 3 +
jz loc_100405A  +
sub eax 5 +
jz loc_1003FF9  +
dec eax  +
dec eax  +
jz loc_100402B  +
sub eax 3 +
jz loc_100402B  +
sub eax 0Eh +
jz loc_1003FD7  +
mov eax [ebp+arg_4] +
dec eax  +
cmp esi eax +
jnb loc_1003E3B  +
mov eax dword ptr [ebp+Arguments] +
mov [eax+esi*2] cx +
inc esi  +
cmp [ebp+arg_8] 0 +
jz loc_1003E3B  +
movzx eax [ebp+WideCharStr] +
push eax  +
movzx eax word_1009460 +
push offset a1C  +
push eax  +
call sub_10029A4  +
jmp loc_1004023  +
test esi esi +
jbe loc_1003E3B  +
push 8  +
push 8  +
push offset aCC  +
call ds:wprintf  +
add esp 0Ch +
dec esi  +
jnz loc_1003FDF  +
jmp loc_1003E3B  +
test esi esi +
jbe loc_1003E3B  +
mov ecx dword ptr [ebp+Arguments] +
xor eax eax +
mov [ecx+esi*2] ax +
dec esi  +
cmp [ebp+arg_8] eax +
jz loc_1003E3B  +
push 8  +
push 8  +
push offset aCC  +
call ds:wprintf  +
add esp 0Ch +
jmp loc_1003E3B  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
jmp loc_100407A  +
call ds:GetLastError  +
test eax eax +
jle loc_1004055  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_10] eax +
jmp loc_100407A  +
call sub_1001DAC  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
push 0  +
call ds:exit  +
mov [ebp+var_10] 80070057h +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
cmp esi [ebp+arg_4] +
jb loc_1004092  +
mov eax 8007007Ah +
jmp loc_10040B4  +
mov ecx dword ptr [ebp+Arguments] +
xor eax eax +
mov [ecx+esi*2] ax +
mov eax [ebp+var_10] +
jmp loc_10040B4  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_10040B4  +
and eax 0FFFFh +
or eax 80070000h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A6Ch +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_A68] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx] +
mov [ebp+var_A6C] ebx +
test esi esi +
jz loc_1004292  +
push edi  +
mov edi 100h +
jmp loc_10040FF  +
mov ebx [ebp+var_A6C] +
cmp word ptr [esi] 0 +
jz loc_100426F  +
push edi  +
lea eax [ebp+var_614] +
push eax  +
push edi  +
lea eax [ebp+var_814] +
push eax  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call _wsplitpath_s  +
add esp 24h +
lea eax [ebp+FindFileData] +
push eax  +
push esi  +
call ds:FindFirstFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_100421B  +
mov ecx offset a_ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100417A  +
test dx dx +
jz loc_1004176  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100417A  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1004154  +
xor eax eax +
jmp loc_100417F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10041FB  +
mov ecx offset a__ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10041B4  +
test dx dx +
jz loc_10041B0  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10041B4  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_100418E  +
xor eax eax +
jmp loc_10041B9  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_10041FB  +
push offset dword_1001214  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_414] +
push 104h  +
push eax  +
call _wmakepath_s  +
add esp 18h +
lea eax [ebp+var_414] +
push eax  +
lea eax [ebp+var_A68] +
push eax  +
call sub_100315F  +
lea eax [ebp+FindFileData] +
push eax  +
push ebx  +
call ds:FindNextFileW  +
cmp eax 1 +
jz loc_1004149  +
push ebx  +
call ds:FindClose  +
jmp loc_1004244  +
mov ebx ds:wcschr +
push 2Ah  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004244  +
push 3Fh  +
push esi  +
call ebx  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004244  +
push esi  +
lea eax [ebp+var_A68] +
push eax  +
call sub_100315F  +
cmp [ebp+arg_4] 0 +
jz loc_1004269  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100424F  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
test esi esi +
jnz loc_10040F9  +
mov ebx [ebp+var_A6C] +
mov esi [ebp+var_A68] +
pop edi  +
test esi esi +
jz loc_1004292  +
mov eax [ebx] +
test eax eax +
jz loc_1004290  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebx] esi +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_10029BF  +
push [ebp+lpMem]  +
mov [ebp+arg_0] eax +
call sub_10029BF  +
mov edi ds:HeapFree +
mov ebx ds:GetProcessHeap +
mov [ebp+lpMem] eax +
cmp [ebp+arg_0] esi +
jz loc_100430C  +
cmp eax esi +
jz loc_100431C  +
push [ebp+arg_0]  +
mov esi ds:_wcslwr +
call esi  +
push [ebp+lpMem]  +
call esi  +
push [ebp+lpMem]  +
push [ebp+arg_0]  +
call ds:wcsstr  +
add esp 10h +
test eax eax +
jz loc_100430C  +
mov [ebp+var_4] 1 +
xor esi esi +
cmp [ebp+lpMem] esi +
jz loc_100431C  +
push [ebp+lpMem]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+arg_0] esi +
jz loc_100432A  +
push [ebp+arg_0]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 87Ch +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_860] eax +
xor eax eax +
mov esi offset aPm +
lea edi [ebp+Mem] +
movs   +
movs   +
lea edi [ebp+var_46] +
stos   +
stos   +
stos   +
xor eax eax +
mov esi offset aAm +
lea edi [ebp+var_38] +
movs   +
movs   +
mov ecx [ebp+arg_4] +
lea edi [ebp+var_32] +
stos   +
stos   +
stos   +
xor eax eax +
mov dword ptr [ebp+var_14] 2Fh +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
xor eax eax +
mov dword ptr [ebp+var_24] 3Ah +
lea edi [ebp+var_20] +
stos   +
stos   +
and [ebp+var_86C] 0 +
stos   +
xor eax eax +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
mov edi ds:GetLocaleInfoW +
mov esi 400h +
push esi  +
lea eax [ebp+LCData] +
push eax  +
push 21h  +
push esi  +
mov [ebp+lpSystemTime] ecx +
call edi  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jle loc_10043E9  +
lea eax [ebp+LCData] +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_86C] eax +
push 9  +
lea eax [ebp+LCData] +
push eax  +
push 28h  +
push esi  +
call edi  +
cmp eax ebx +
jle loc_100440D  +
lea eax [ebp+LCData] +
push eax  +
push 9  +
lea eax [ebp+var_38] +
push eax  +
call sub_100262C  +
push 9  +
lea eax [ebp+LCData] +
push eax  +
push 29h  +
push esi  +
call edi  +
cmp eax ebx +
jle loc_1004431  +
lea eax [ebp+LCData] +
push eax  +
push 9  +
lea eax [ebp+Mem] +
push eax  +
call sub_100262C  +
push 8  +
lea eax [ebp+LCData] +
push eax  +
push 1Eh  +
push esi  +
call edi  +
cmp eax ebx +
jle loc_1004455  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
lea eax [ebp+var_24] +
push eax  +
call sub_100262C  +
push 8  +
lea eax [ebp+LCData] +
push eax  +
push 1Dh  +
push esi  +
call edi  +
cmp eax ebx +
jle loc_1004479  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
lea eax [ebp+var_14] +
push eax  +
call sub_100262C  +
push [ebp+var_860]  +
lea eax [ebp+LCData] +
push esi  +
push eax  +
call sub_100262C  +
mov esi ds:wcstok +
mov [ebp+var_854] eax +
mov edi offset asc_1001474 +
lea eax [ebp+LCData] +
push edi  +
push eax  +
call esi  +
push edi  +
xor edi edi +
push edi  +
mov ebx eax +
call esi  +
add esp 10h +
mov [ebp+var_860] eax +
jmp loc_1004840  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov [ebp+lpMem] edi +
test eax eax +
jz loc_10045F8  +
mov eax [ebp+var_86C] +
sub eax edi +
jz loc_1004522  +
dec eax  +
jz loc_100450D  +
dec eax  +
jnz loc_10045A1  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call esi  +
mov [ebp+lpMem] eax +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call esi  +
mov ebx eax +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call esi  +
mov edi eax +
jmp loc_1004542  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call esi  +
mov edi eax +
lea eax [ebp+var_14] +
push eax  +
push 0  +
call esi  +
mov ebx eax +
jmp loc_1004534  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call esi  +
mov ebx eax +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call esi  +
mov edi eax +
lea eax [ebp+var_14] +
push eax  +
push 0  +
call esi  +
mov [ebp+lpMem] eax +
add esp 18h +
test ebx ebx +
jz loc_1004573  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push ebx  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004573  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+2] ax +
test edi edi +
jz loc_10045A1  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push edi  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_10045A1  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+6] ax +
cmp [ebp+lpMem] 0 +
jz loc_1004832  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+lpMem]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
cmp [ebp+var_850] 64h +
jnb loc_10045E3  +
add [ebp+var_850] 7D0h +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx] ax +
jmp loc_1004832  +
lea eax [ebp+Mem] +
push eax  +
push ebx  +
mov [ebp+var_864] edi +
call sub_10042A9  +
mov [ebp+var_870] eax +
lea eax [ebp+var_38] +
push eax  +
push ebx  +
call sub_10042A9  +
mov [ebp+var_874] eax +
lea eax [ebp+var_24] +
push eax  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_868] eax +
test eax eax +
jz loc_100464B  +
lea eax [ebp+var_24] +
push eax  +
xor edi edi +
push 0  +
inc edi  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+lpMem] eax +
mov ebx offset a0 +
jmp loc_1004656  +
mov ebx offset a0 +
mov [ebp+var_868] ebx +
cmp [ebp+lpMem] 0 +
jz loc_1004672  +
lea eax [ebp+var_24] +
push eax  +
push 0  +
inc edi  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_864] eax +
jmp loc_1004678  +
mov [ebp+lpMem] ebx +
cmp [ebp+var_864] 0 +
jz loc_1004684  +
inc edi  +
jmp loc_100468A  +
mov [ebp+var_864] ebx +
cmp [ebp+arg_8] 0 +
jz loc_1004693  +
push 3  +
pop edi  +
dec edi  +
jz loc_100478A  +
dec edi  +
jz loc_1004746  +
dec edi  +
jnz loc_10047BD  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+var_868]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+8] ax +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+lpMem]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+0Ah] ax +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+var_864]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+0Ch] ax +
jmp loc_10047C6  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+var_868]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+0Ah] ax +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+lpMem]  +
jmp loc_100471D  +
push 0FFFFFFFFh  +
lea eax [ebp+var_850] +
push eax  +
push [ebp+var_868]  +
call sub_1002B11  +
mov [ebp+var_854] eax +
test eax eax +
jnz loc_1004832  +
mov ax word ptr [ebp+var_850] +
mov ecx [ebp+lpSystemTime] +
mov [ecx+0Ch] ax +
cmp [ebp+var_854] 0 +
jnz loc_1004832  +
cmp [ebp+var_870] 0 +
jz loc_1004803  +
mov ecx [ebp+lpSystemTime] +
movzx eax word ptr [ecx+8] +
cmp ax 0Ch +
jnb loc_10047E8  +
add eax 0Ch +
mov [ecx+8] ax +
jmp loc_1004803  +
jbe loc_1004803  +
lea eax [ebp+Mem] +
push eax  +
movzx eax word ptr dword_1009454 +
push 237h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
cmp [ebp+var_874] 0 +
jz loc_1004832  +
mov eax [ebp+lpSystemTime] +
cmp word ptr [eax+8] 0Ch +
jbe loc_1004832  +
lea eax [ebp+var_38] +
push eax  +
movzx eax word ptr dword_1009454 +
push 237h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
mov ebx [ebp+var_860] +
xor edi edi +
mov [ebp+var_860] edi +
cmp ebx edi +
jnz loc_10044BD  +
cmp [ebp+arg_8] edi +
jz loc_1004878  +
cmp [ebp+var_854] edi +
jnz loc_1004878  +
lea eax [ebp+FileTime] +
push eax  +
push [ebp+lpSystemTime]  +
call ds:SystemTimeToFileTime  +
test eax eax +
jnz loc_1004878  +
call ds:GetLastError  +
mov [ebp+var_854] eax +
mov ecx [ebp+var_4] +
mov eax [ebp+var_854] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn 0Ch  +
***
call __SEH_prolog4  +
xor edi edi +
mov [ebp+hMem] edi +
mov [ebp+hLibModule] edi +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
mov esi [ebp+arg_0] +
cmp esi edi +
jnz loc_10048BD  +
call ds:GetLastError  +
mov esi eax +
cmp [ebp+lpLibFileName] edi +
jz loc_10048CE  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
mov eax [ebp+hLibModule] +
neg eax  +
sbb eax eax +
and eax 0FFFFF800h +
add eax 1100h +
mov [ebp+ms_exc.disabled] edi +
lea ecx [ebp+Arguments] +
push ecx  +
mov ecx 400h +
push ecx  +
lea edx [ebp+hMem] +
push edx  +
push ecx  +
push esi  +
push [ebp+hLibModule]  +
push eax  +
call ds:FormatMessageW  +
movzx eax word ptr dword_1009454 +
cmp dword_1009024 edi +
jl loc_100491C  +
push esi  +
push 23Fh  +
push eax  +
call sub_1003284  +
add esp 0Ch +
jmp loc_1004929  +
push 22Eh  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
movzx eax word ptr dword_1009454 +
cmp [ebp+hMem] edi +
jnz loc_1004944  +
push 22Dh  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
jmp loc_1004955  +
push [ebp+hMem]  +
push offset a1S_0  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004982  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp+ms_exc.old_esp] +
push 22Dh  +
movzx eax word ptr dword_1009454 +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor edi edi +
cmp [ebp+hLibModule] edi +
jz loc_1004990  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
push [ebp+hMem]  +
call ds:LocalFree  +
call __SEH_epilog4  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 82Ch +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov [ebp+var_14] 2Fh +
mov ebx ds:GetLocaleInfoW +
mov esi [ebp+arg_4] +
and [ebp+var_82C] 0 +
and [ebp+var_828] 0 +
lea edi [ebp+var_10] +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+var_24] 3Ah +
lea edi [ebp+var_20] +
stos   +
stos   +
stos   +
mov edi 400h +
push edi  +
lea eax [ebp+LCData] +
push eax  +
push 21h  +
push edi  +
call ebx  +
test eax eax +
jle loc_1004A1B  +
lea eax [ebp+LCData] +
push eax  +
call ds:_wtoi  +
pop ecx  +
mov [ebp+var_82C] eax +
push 8  +
lea eax [ebp+LCData] +
push eax  +
push 1Eh  +
push edi  +
call ebx  +
test eax eax +
jle loc_1004A3F  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
lea eax [ebp+var_24] +
push eax  +
call sub_100262C  +
push 8  +
lea eax [ebp+LCData] +
push eax  +
push 1Dh  +
push edi  +
call ebx  +
test eax eax +
jle loc_1004A63  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
lea eax [ebp+var_14] +
push eax  +
call sub_100262C  +
movzx eax word ptr [esi+2] +
mov edi [ebp+NumberOfCharsWritten] +
test ax ax +
jz loc_1004AD3  +
mov ecx [ebp+var_82C] +
sub ecx 0 +
jz loc_1004AAA  +
dec ecx  +
jz loc_1004A95  +
dec ecx  +
jnz loc_1004AD3  +
movzx ecx word ptr [esi+6] +
push ecx  +
movzx eax ax +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
mov eax ecx +
push eax  +
movzx eax word ptr [esi] +
jmp loc_1004ABE  +
movzx ecx word ptr [esi] +
push ecx  +
movzx eax ax +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
mov eax ecx +
push eax  +
movzx eax word ptr [esi+6] +
jmp loc_1004ABE  +
movzx ecx word ptr [esi] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
movzx ecx word ptr [esi+6] +
push ecx  +
lea ecx [ebp+var_14] +
push ecx  +
movzx eax ax +
push eax  +
push offset a1D2S3D4S5D  +
push edi  +
call sub_10029A4  +
add esp 1Ch +
mov [ebp+var_828] eax +
movzx eax word ptr [esi+0Ch] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
movzx eax word ptr [esi+0Ah] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
movzx eax word ptr [esi+8] +
push eax  +
push offset a1D2S302d4S502d  +
push edi  +
call sub_10029A4  +
mov ecx [ebp+var_4] +
add eax [ebp+var_828] +
add esp 1Ch +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax word_1009460 +
push [ebp+arg_0]  +
push eax  +
call sub_10049A4  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
fld  [ebp+arg_4] +
push ecx  +
fmul  ds:dbl_1001528 +
push ecx  +
lea eax [ebp+Arguments] +
fstp  [esp+2Ch+var_2C] +
push offset a1_2f  +
push 10h  +
push eax  +
call sub_100274A  +
push offset asc_1001510  +
call ds:wprintf  +
lea eax [ebp+Arguments] +
push eax  +
movzx eax word_1009460 +
push offset a1S  +
push eax  +
call sub_10029A4  +
mov ecx [ebp+var_4] +
xor ecx ebp +
add esp 24h +
call sub_100741C  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+rguid] +
push eax  +
call ds:UuidCreate  +
mov edi eax +
mov esi 80h +
test edi edi +
jz loc_1004BD4  +
cmp edi 720h +
jnz loc_1004BEF  +
push esi  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+rguid] +
push eax  +
call ds:StringFromGUID2  +
xor edi edi +
test eax eax +
jnz loc_1004C01  +
push offset aD41c99eaC3034d  +
push esi  +
lea eax [ebp+sz] +
push eax  +
call sub_100262C  +
push ebx  +
push [ebp+nBufferLength]  +
call ds:GetTempPathW  +
test eax eax +
jnz loc_1004C17  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jnz loc_1004C2B  +
lea eax [ebp+sz] +
push eax  +
push [ebp+nBufferLength]  +
push ebx  +
call sub_10026F0  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
push esi  +
xor esi esi +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push [ebp+arg_0]  +
mov dword ptr [ebp+Arguments] esi +
mov [ebp+var_34] esi +
mov [ebp+var_20] esi +
call PdhEnumMachinesHW  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_1004C80  +
cmp eax 800007D2h +
jz loc_1004C80  +
cmp eax 0C0000BC2h +
jnz loc_100510D  +
mov eax [ebp+var_20] +
push ebx  +
mov ebx ds:GetProcessHeap +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_1C] eax +
cmp eax esi +
jnz loc_1004CAA  +
mov [ebp+var_4] 0C0000BBBh +
jmp loc_100510C  +
push edi  +
lea eax [ebp+var_20] +
push eax  +
push [ebp+var_1C]  +
push [ebp+arg_0]  +
call PdhEnumMachinesHW  +
mov edi ds:HeapFree +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_10050F4  +
cmp [ebp+var_20] esi +
jz loc_100510B  +
mov eax [ebp+var_1C] +
mov [ebp+var_C] eax +
mov eax [ebp+var_C] +
cmp [eax] si +
jz loc_10050F4  +
push esi  +
push 190h  +
lea eax [ebp+var_44] +
push eax  +
push esi  +
push [ebp+var_C]  +
mov [ebp+var_44] esi +
push [ebp+arg_0]  +
call PdhEnumObjectsHW  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_1004D18  +
cmp eax 800007D2h +
jz loc_1004D18  +
cmp eax 0C0000BC2h +
jnz loc_10050CB  +
mov eax [ebp+var_44] +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_40] eax +
cmp eax esi +
jz loc_100513B  +
push esi  +
push 190h  +
lea eax [ebp+var_44] +
push eax  +
push [ebp+var_40]  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call PdhEnumObjectsHW  +
mov [ebp+var_4] eax +
mov eax [ebp+var_40] +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
cmp [eax] si +
jz loc_10050C2  +
push esi  +
push 190h  +
lea eax [ebp+var_24] +
push eax  +
push esi  +
lea eax [ebp+var_28] +
push eax  +
push esi  +
push [ebp+var_18]  +
mov [ebp+var_10] esi +
push [ebp+var_C]  +
mov [ebp+var_14] esi +
push [ebp+arg_0]  +
mov [ebp+var_28] esi +
mov [ebp+var_24] esi +
call PdhEnumObjectItemsHW  +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_1004DA3  +
cmp eax 800007D2h +
jz loc_1004DA3  +
cmp eax 0C0000BC2h +
jnz loc_1005099  +
mov eax [ebp+var_28] +
cmp eax esi +
jbe loc_1004DBA  +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_10] eax +
mov eax [ebp+var_24] +
cmp eax esi +
jbe loc_1004DD1  +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_14] eax +
cmp [ebp+var_10] esi +
jnz loc_1004DDF  +
cmp [ebp+var_28] esi +
ja loc_1005140  +
cmp [ebp+var_14] esi +
jnz loc_1004DED  +
cmp [ebp+var_24] esi +
ja loc_1005140  +
push esi  +
push 190h  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+var_14]  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
push [ebp+var_C]  +
push [ebp+arg_0]  +
call PdhEnumObjectItemsHW  +
mov [ebp+var_4] eax +
cmp eax esi +
jnz loc_100507D  +
mov eax [ebp+var_10] +
mov [ebp+var_3C] eax +
cmp eax esi +
jz loc_100508B  +
mov eax [ebp+var_3C] +
cmp [eax] si +
jz loc_100507D  +
xor eax eax +
push 6  +
pop ecx  +
lea edi [ebp+var_64] +
stos   +
mov eax [ebp+var_C] +
mov [ebp+var_64] eax +
mov eax [ebp+var_18] +
mov [ebp+var_60] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_50] eax +
mov eax [ebp+var_14] +
mov edi eax +
cmp eax esi +
jz loc_1004F88  +
cmp [eax] si +
jz loc_1004F88  +
mov [ebp+var_48] esi +
mov [ebp+var_2C] esi +
mov eax [ebp+var_34] +
push edi  +
push [ebp+var_48]  +
mov [ebp+var_30] eax +
mov [ebp+var_5C] edi +
call sub_10025D8  +
test eax eax +
jnz loc_1004E8B  +
or [ebp+var_54] 0FFFFFFFFh +
mov [ebp+var_2C] esi +
jmp loc_1004E94  +
inc [ebp+var_2C]  +
mov eax [ebp+var_2C] +
mov [ebp+var_54] eax +
push esi  +
lea eax [ebp+var_30] +
push eax  +
push dword ptr [ebp+Arguments]  +
lea eax [ebp+var_64] +
push eax  +
call PdhMakeCounterPathW  +
mov [ebp+var_4] eax +
cmp eax 0C0000BC2h +
jz loc_1004EB6  +
cmp eax 800007D2h +
jnz loc_1004EF9  +
cmp dword ptr [ebp+Arguments] esi +
jz loc_1004EC8  +
push dword ptr [ebp+Arguments]  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_30] +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov dword ptr [ebp+Arguments] eax +
cmp eax esi +
jz loc_1004EF9  +
mov eax [ebp+var_30] +
mov [ebp+var_34] eax +
push esi  +
lea eax [ebp+var_30] +
push eax  +
push dword ptr [ebp+Arguments]  +
lea eax [ebp+var_64] +
push eax  +
call PdhMakeCounterPathW  +
mov [ebp+var_4] eax +
mov eax edi +
mov [ebp+var_48] edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1004F01  +
push dword ptr [ebp+Arguments]  +
sub eax edx +
push [ebp+arg_0]  +
sar eax 1 +
lea edi [edi+eax*2+2] +
call PdhValidatePathExW  +
test eax eax +
jnz loc_1004F7A  +
cmp dword_1009348 esi +
jz loc_1004F57  +
push dword ptr [ebp+Arguments]  +
cmp [ebp+arg_8] esi +
jz loc_1004F42  +
push offset aS_1  +
push [ebp+arg_8]  +
call ds:fwprintf  +
jmp loc_1004F54  +
movzx eax word_1009460 +
push offset a1S_0  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
cmp dword_1009118 esi +
jnz loc_1004F7A  +
cmp dword_1009258 esi +
jz loc_1004F7A  +
lea eax [ebp+var_4C] +
push eax  +
push esi  +
push dword ptr [ebp+Arguments]  +
push [ebp+arg_4]  +
call PdhAddCounterW  +
mov [ebp+var_4] eax +
cmp [edi] si +
jnz loc_1004E6C  +
jmp loc_1005052  +
mov eax [ebp+var_34] +
mov edi dword ptr [ebp+Arguments] +
mov [ebp+var_38] eax +
push esi  +
lea eax [ebp+var_38] +
push eax  +
push edi  +
lea eax [ebp+var_64] +
push eax  +
call PdhMakeCounterPathW  +
mov [ebp+var_4] eax +
cmp eax 0C0000BC2h +
jz loc_1004FB1  +
cmp eax 800007D2h +
jnz loc_1004FF1  +
cmp edi esi +
jz loc_1004FC0  +
push edi  +
push esi  +
call ebx  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_38] +
add eax eax +
push eax  +
push esi  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
mov dword ptr [ebp+Arguments] edi +
cmp edi esi +
jz loc_1004FF1  +
mov eax [ebp+var_38] +
mov [ebp+var_34] eax +
push esi  +
lea eax [ebp+var_38] +
push eax  +
push edi  +
lea eax [ebp+var_64] +
push eax  +
call PdhMakeCounterPathW  +
mov [ebp+var_4] eax +
push edi  +
push [ebp+arg_0]  +
call PdhValidatePathExW  +
test eax eax +
jnz loc_1005052  +
cmp dword_1009348 esi +
jz loc_1005031  +
push edi  +
cmp [ebp+arg_8] esi +
jz loc_100501C  +
push offset aS_1  +
push [ebp+arg_8]  +
call ds:fwprintf  +
jmp loc_100502E  +
movzx eax word_1009460 +
push offset a1S_0  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
cmp dword_1009118 esi +
jnz loc_1005052  +
cmp dword_1009258 esi +
jz loc_1005052  +
lea eax [ebp+var_4C] +
push eax  +
push esi  +
push edi  +
push [ebp+arg_4]  +
call PdhAddCounterW  +
mov [ebp+var_4] eax +
mov ecx [ebp+var_3C] +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_100505A  +
sub eax edi +
mov edi ds:HeapFree +
sar eax 1 +
lea eax [ecx+eax*2+2] +
mov [ebp+var_3C] eax +
cmp eax esi +
jnz loc_1004E28  +
cmp [ebp+var_10] esi +
jz loc_100508B  +
push [ebp+var_10]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+var_14] esi +
jz loc_1005099  +
push [ebp+var_14]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov ecx [ebp+var_18] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_48] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_10050A4  +
sub eax [ebp+var_48] +
sar eax 1 +
lea eax [ecx+eax*2+2] +
mov [ebp+var_18] eax +
cmp eax esi +
jnz loc_1004D54  +
push [ebp+var_40]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov ecx [ebp+var_C] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_48] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_10050D6  +
sub eax [ebp+var_48] +
sar eax 1 +
lea eax [ecx+eax*2+2] +
mov [ebp+var_C] eax +
cmp eax esi +
jnz loc_1004CDA  +
push [ebp+var_1C]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp dword ptr [ebp+Arguments] esi +
jz loc_100510B  +
push dword ptr [ebp+Arguments]  +
push esi  +
call ebx  +
push eax  +
call edi  +
pop edi  +
pop ebx  +
cmp [ebp+arg_8] esi +
jnz loc_1005133  +
cmp [ebp+var_4] esi +
jnz loc_1005133  +
cmp dword_1009348 esi +
jz loc_1005133  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 0Ch  +
push [ebp+var_1C]  +
jmp loc_1005168  +
push [ebp+var_1C]  +
push esi  +
call ebx  +
push eax  +
call edi  +
push [ebp+var_40]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+var_10] esi +
jz loc_1005160  +
push [ebp+var_10]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+var_14] esi +
jz loc_100516E  +
push [ebp+var_14]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov [ebp+var_4] 0C0000BBBh +
jmp loc_10050FD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_1001AC3  +
test eax eax +
jz loc_10051C7  +
push ebx  +
shl esi 6 +
mov ebx 80000000h +
test dword_1009044[esi] ebx +
jnz loc_10051B1  +
push edi  +
lea edi dword_1009048[esi] +
push dword ptr [edi]  +
call sub_10029BF  +
mov [edi] eax +
pop edi  +
push [ebp+arg_4]  +
lea eax dword_1009048[esi] +
push eax  +
call sub_100315F  +
or dword_1009044[esi] ebx +
pop ebx  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 101Ch +
call __alloca_probe  +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
and dword ptr [edi] 0 +
push 800h  +
lea eax [ebp+var_1004] +
push 0  +
push eax  +
mov [ebp+var_1018] edi +
call memset  +
add esp 0Ch +
test esi esi +
jz loc_100554B  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005220  +
sub eax edx +
sar eax 1 +
jz loc_100554B  +
push offset aR  +
push esi  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [ebp+var_1010] eax +
test eax eax +
jz loc_100554B  +
push eax  +
lea eax [ebp+var_804] +
push 400h  +
push eax  +
call ds:fgetws  +
add esp 0Ch +
test eax eax +
jz loc_100553E  +
push ebx  +
xor ebx ebx +
inc ebx  +
jmp loc_100527A  +
mov edi [ebp+var_1018] +
cmp [ebp+var_804] 3Bh +
jz loc_1005516  +
cmp [ebp+var_804] 23h +
jz loc_1005516  +
lea eax [ebp+var_804] +
push eax  +
call sub_1001B76  +
lea eax [ebp+var_804] +
push eax  +
call sub_1001A46  +
test eax eax +
jnz loc_1005516  +
push 5  +
lea eax [ebp+var_804] +
push offset a?xml  +
push eax  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_100553B  +
cmp [ebp+var_804] 5Bh +
jz loc_100530B  +
lea eax [ebp+var_804] +
push offset asc_10015A0  +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100530B  +
lea eax [ebp+var_804] +
push offset asc_1001330  +
push eax  +
call ds:wcstok  +
jmp loc_1005340  +
mov esi ds:wcstok +
lea eax [ebp+var_804] +
push offset asc_1001594  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100534A  +
push eax  +
push 400h  +
lea eax [ebp+var_1004] +
push eax  +
call sub_100262C  +
push offset asc_1001588  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+lpMem] eax +
jmp loc_1005359  +
xor eax eax +
and [ebp+lpMem] eax +
mov word ptr [ebp+var_1004] ax +
xor edi edi +
cmp dword_1009040 6 +
mov [ebp+var_100C] edi +
jz loc_10053D0  +
mov esi offset dword_1009048 +
cmp [ebp+var_100C] 0 +
jnz loc_1005516  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
lea eax [esi-20h] +
push eax  +
call sub_1001988  +
test eax eax +
jz loc_10053B9  +
mov eax [esi-8] +
dec eax  +
jz loc_100539D  +
dec eax  +
dec eax  +
jnz loc_10053B9  +
jmp loc_10053A6  +
xor eax eax +
cmp [esi] eax +
setz al  +
mov [esi] eax +
mov eax [esi+1Ch] +
mov [ebp+var_100C] ebx +
mov [esi+10h] ebx +
test eax eax +
jz loc_10053B9  +
push edi  +
call eax  +
add esi 40h +
inc edi  +
cmp dword ptr [esi-8] 6 +
jnz loc_100536F  +
cmp [ebp+var_100C] 0 +
jnz loc_1005516  +
cmp [ebp+lpMem] 0 +
jz loc_1005516  +
lea eax [ebp+var_1004] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10053E6  +
sub eax edx +
sar eax 1 +
jz loc_1005516  +
xor edi edi +
cmp dword_1009040 6 +
jz loc_1005516  +
mov esi offset dword_1009048 +
cmp [ebp+var_100C] 0 +
jnz loc_1005516  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
lea eax [esi-20h] +
push eax  +
call sub_1001988  +
test eax eax +
jz loc_1005508  +
mov ecx [esi+10h] +
mov [ebp+var_100C] ebx +
test ecx ecx +
jz loc_100544B  +
cmp dword ptr [esi-8] 5 +
jnz loc_1005508  +
mov eax [esi-8] +
test eax eax +
jz loc_10054CD  +
cmp eax 2 +
jz loc_10054AB  +
cmp eax 4 +
jz loc_10054CD  +
cmp eax 5 +
jz loc_1005483  +
lea ecx [eax-8] +
cmp ecx ebx +
ja loc_10054FB  +
xor ecx ecx +
cmp eax 9 +
setz cl  +
push ecx  +
push esi  +
push [ebp+lpMem]  +
call sub_1004339  +
jmp loc_10054FB  +
test ecx ecx +
jnz loc_1005489  +
and [esi] ecx +
test dword ptr [esi-4] 400h +
jz loc_100549D  +
push [ebp+lpMem]  +
call sub_1001B76  +
push [ebp+lpMem]  +
push edi  +
call sub_100517C  +
jmp loc_10054FB  +
test dword ptr [esi-4] 400h +
jz loc_10054BF  +
push [ebp+lpMem]  +
call sub_1001B76  +
push [ebp+lpMem]  +
push edi  +
call sub_1002A72  +
jmp loc_10054FB  +
push 7FFFFFFFh  +
lea eax [ebp+var_1014] +
push eax  +
push [ebp+lpMem]  +
call sub_1002B11  +
test eax eax +
jnz loc_10054FB  +
cmp dword ptr [esi-8] 4 +
mov eax [ebp+var_1014] +
mov [esi] eax +
jnz loc_10054FB  +
mov dword_1009024 eax +
mov eax [esi+1Ch] +
mov [esi+10h] ebx +
test eax eax +
jz loc_1005508  +
push edi  +
call eax  +
add esi 40h +
inc edi  +
cmp dword ptr [esi-8] 6 +
jnz loc_100540E  +
push [ebp+var_1010]  +
lea eax [ebp+var_804] +
push 400h  +
push eax  +
call ds:fgetws  +
add esp 0Ch +
test eax eax +
jnz loc_1005274  +
jmp loc_100553D  +
mov [edi] ebx +
pop ebx  +
push [ebp+var_1010]  +
call ds:fclose  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
movzx eax word_1009460 +
push esi  +
push 235h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
push 23h  +
pop esi  +
movzx eax word_1009460 +
push offset asc_10015DC  +
push eax  +
call sub_10029A4  +
dec esi  +
pop ecx  +
pop ecx  +
jnz loc_100557F  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
xor ecx ecx +
cmp dword_1009040 6 +
mov [ebp+var_4] ecx +
jz loc_1005659  +
push ebx  +
mov esi offset dword_1009040 +
push edi  +
test byte ptr dword_1009044[ecx] 10h +
jz loc_10055D5  +
cmp dword_1009058[ecx] 0 +
jz loc_100563F  +
mov ebx dword_1009038[ecx] +
test ebx ebx +
jz loc_10055F9  +
mov eax ebx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10055E4  +
sub eax edi +
sar eax 1 +
jz loc_10055F9  +
xor edx edx +
inc edx  +
jmp loc_10055FB  +
xor edx edx +
mov eax [esi] +
test eax eax +
jl loc_100563F  +
cmp eax 2 +
jle loc_1005618  +
cmp eax 3 +
jle loc_100563F  +
cmp eax 5 +
jle loc_1005618  +
add eax 0FFFFFFF8h +
cmp eax 1 +
ja loc_100563F  +
mov eax ebx +
test edx edx +
jnz loc_1005623  +
mov eax offset dword_1001214 +
push eax  +
push dword_1009034[ecx]  +
movzx eax word_1009460 +
push offset a120s220s  +
push eax  +
call sub_10029A4  +
add esp 10h +
inc [ebp+var_4]  +
mov ecx [ebp+var_4] +
shl ecx 6 +
lea esi dword_1009040[ecx] +
cmp dword ptr [esi] 6 +
jnz loc_10055C3  +
pop edi  +
pop ebx  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80Ch +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor eax eax +
push 7FEh  +
mov word ptr [ebp+Arguments] ax +
xor ebx ebx +
lea eax [ebp-802h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push 400h  +
lea eax [ebp+Arguments] +
push eax  +
push 23Ch  +
push ebx  +
call ds:LoadStringW  +
cmp dword_1009040 6 +
mov [ebp+var_808] ebx +
jz loc_1005898  +
push esi  +
push edi  +
mov esi offset dword_1009040 +
xor edi edi +
mov eax dword_1009058[edi] +
cmp eax ebx +
jnz loc_10056F6  +
cmp dword_1009024 1 +
jl loc_1005878  +
cmp dword ptr [esi] 3 +
jz loc_1005878  +
test byte ptr dword_1009044[edi] 10h +
jz loc_1005710  +
cmp eax ebx +
jz loc_1005878  +
push dword_1009034[edi]  +
movzx eax word ptr dword_1009454 +
push offset a116s  +
push eax  +
call sub_10029A4  +
mov esi [esi] +
add esp 0Ch +
cmp esi 9 +
ja loc_1005840  +
jmp ds:off_10058B9[esi*4]  +
push dword_1009048[edi]  +
push offset a120lu  +
jmp loc_1005830  +
mov eax offset aTrue +
cmp dword_1009048[edi] ebx +
jnz loc_100575F  +
mov eax offset aFalse +
push eax  +
jmp loc_100582B  +
mov esi dword_1009048[edi] +
push esi  +
call sub_1001A46  +
test eax eax +
jz loc_10057C9  +
push offset asc_10015DC  +
jmp loc_100582B  +
movzx eax word ptr dword_1009454 +
push esi  +
cmp esi dword_1009048[edi] +
jnz loc_100579F  +
push offset a120s  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
jmp loc_10057B2  +
push offset asc_1001270  +
push offset a119s220s  +
push eax  +
call sub_10029A4  +
add esp 10h +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_10057B7  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp [esi] bx +
jnz loc_100577F  +
jmp loc_1005840  +
lea eax dword_1009048[edi] +
push eax  +
movzx eax word ptr dword_1009454 +
push eax  +
call sub_10049A4  +
push 14h  +
pop esi  +
cmp eax esi +
jge loc_1005840  +
sub esi eax +
movzx eax word ptr dword_1009454 +
push offset asc_1001270  +
push eax  +
call sub_10029A4  +
dec esi  +
pop ecx  +
pop ecx  +
jnz loc_10057ED  +
jmp loc_1005840  +
mov edx dword_1009048[edi] +
cmp edx ebx +
jz loc_1005825  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1005815  +
sub eax esi +
sar eax 1 +
jnz loc_100582A  +
mov edx offset asc_10015DC +
push edx  +
push offset a120s  +
movzx eax word ptr dword_1009454 +
push eax  +
call sub_10029A4  +
add esp 0Ch +
cmp dword_1009058[edi] ebx +
jnz loc_1005864  +
lea eax [ebp+Arguments] +
push eax  +
movzx eax word ptr dword_1009454 +
push offset a1S_1  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
movzx eax word ptr dword_1009454 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
inc [ebp+var_808]  +
mov edi [ebp+var_808] +
shl edi 6 +
lea esi dword_1009040[edi] +
cmp dword ptr [esi] 6 +
jnz loc_10056DF  +
pop edi  +
pop esi  +
movzx eax word ptr dword_1009454 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_1009040 +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_28] edi +
mov [ebp+var_C] edi +
mov [ebp+var_24] edi +
mov [ebp+var_30] edi +
mov [ebp+var_20] edi +
mov [ebp+var_18] edi +
mov [ebp+var_10] 1 +
mov [ebp+var_14] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_1] 0 +
mov [ebp+var_1C] edi +
mov [ebp+var_8] edi +
cmp eax 6 +
jz loc_10059C9  +
xor ecx ecx +
mov ebx dword ptr byte_1009030[ecx] +
test ebx 0FF0000h +
jz loc_1005951  +
test byte ptr dword_1009044[ecx] 20h +
jnz loc_1005951  +
inc [ebp+var_20]  +
cmp dword_1009058[ecx] edi +
jz loc_1005951  +
inc [ebp+var_18]  +
mov edx dword_1009044[ecx] +
mov esi edx +
and esi 20h +
jz loc_1005967  +
mov [ebp+var_28] 1 +
xor edi edi +
cmp dword_1009058[ecx] edi +
jz loc_10059A7  +
cmp esi edi +
jnz loc_100598A  +
test edx 100000h +
jnz loc_100598A  +
cmp eax 3 +
jz loc_10059A7  +
cmp eax 4 +
jz loc_10059A7  +
inc [ebp+var_24]  +
jmp loc_10059A7  +
movzx eax word ptr dword_1009060[ecx] +
inc [ebp+var_C]  +
or [ebp+var_2C] eax +
cmp ebx edi +
jz loc_10059A7  +
mov cl byte_1009033[ecx] +
and cl 0Fh +
mov [ebp+var_1] cl +
inc [ebp+var_8]  +
mov ecx [ebp+var_8] +
shl ecx 6 +
mov eax dword_1009040[ecx] +
cmp eax 6 +
jnz loc_100592C  +
cmp [ebp+var_24] edi +
jnz loc_10059D0  +
cmp [ebp+var_C] edi +
jnz loc_10059D0  +
mov [ebp+var_14] 1 +
call sub_10034FA  +
cmp [ebp+var_14] edi +
jz loc_1005A07  +
movsx eax word_1009448 +
push edi  +
push eax  +
push edi  +
push edi  +
push 1F4h  +
call sub_100335A  +
test eax eax +
jnz loc_1005A07  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
movzx eax word_1009460 +
push 236h  +
push eax  +
call sub_1003284  +
push dword_100944C  +
movzx eax word_1009460 +
mov edi offset a1S_2 +
push edi  +
push eax  +
call sub_10029A4  +
add esp 14h +
cmp [ebp+var_28] 0 +
mov [ebp+var_8] eax +
jz loc_1005AA9  +
xor ebx ebx +
cmp [ebp+var_14] ebx +
jnz loc_1005A92  +
xor esi esi +
cmp dword_1009040 6 +
jz loc_1005A92  +
xor eax eax +
test byte ptr dword_1009044[eax] 20h +
jz loc_1005A7F  +
cmp dword_1009058[eax] 0 +
jz loc_1005A7F  +
push dword_1009034[eax]  +
movzx eax word_1009460 +
push edi  +
push eax  +
call sub_10029A4  +
add [ebp+var_8] eax +
add esp 0Ch +
inc ebx  +
inc esi  +
mov eax esi +
shl eax 6 +
cmp dword_1009040[eax] 6 +
jnz loc_1005A52  +
test ebx ebx +
jnz loc_1005AA9  +
movzx eax word_1009460 +
push 230h  +
push eax  +
call sub_1003284  +
add [ebp+var_8] eax +
pop ecx  +
pop ecx  +
cmp [ebp+var_20] 1 +
jle loc_1005ACC  +
cmp [ebp+var_18] 0 +
jnz loc_1005ACC  +
movzx eax word_1009460 +
push offset asc_1001730  +
push eax  +
call sub_10029A4  +
add [ebp+var_8] eax +
pop ecx  +
pop ecx  +
and [ebp+var_C] 0 +
xor edi edi +
cmp dword_1009040 6 +
jz loc_1005C4A  +
xor esi esi +
cmp [ebp+var_C] 0 +
jnz loc_1005B19  +
test byte ptr dword_1009044[esi] 30h +
jnz loc_1005C37  +
test dword ptr byte_1009030[esi] 0FF0000h +
jz loc_1005C37  +
cmp [ebp+var_18] 0 +
jle loc_1005B36  +
cmp dword_1009058[esi] 0 +
jz loc_1005C37  +
jmp loc_1005B36  +
test byte ptr dword_1009044[esi] 31h +
jnz loc_1005C37  +
test dword ptr byte_1009030[esi] 0FF0000h +
jnz loc_1005C37  +
xor eax eax +
cmp [ebp+var_10] eax +
jnz loc_1005B5E  +
cmp [ebp+var_20] eax +
jz loc_1005B5E  +
cmp [ebp+var_18] eax +
jnz loc_1005B5E  +
movzx eax word_1009460 +
push offset asc_1001728  +
push eax  +
call sub_10029A4  +
add [ebp+var_8] eax +
pop ecx  +
pop ecx  +
mov ebx dword_1009044[esi] +
and [ebp+var_10] 0 +
test bl 8 +
jz loc_1005B8A  +
push dword_100903C[esi]  +
movzx eax word_1009460 +
push offset a1S_2  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
jmp loc_1005BF0  +
lea eax dword_1009028[esi] +
push eax  +
call sub_1001A24  +
mov edx offset asc_1001270 +
test eax eax +
jnz loc_1005BA4  +
mov edx offset dword_1001214 +
mov ecx offset asc_100142C +
test ebx 10000h +
jnz loc_1005BB6  +
mov ecx offset dword_1001214 +
movzx eax word_1009464 +
test bl 20h +
jnz loc_1005BC9  +
movzx eax word_1009000 +
push dword_100903C[esi]  +
movzx eax ax +
push edx  +
push dword_1009038[esi]  +
push ecx  +
push eax  +
movzx eax word_1009460 +
push offset a1C2S3S4S5S  +
push eax  +
call sub_10029A4  +
add esp 1Ch +
add [ebp+var_8] eax +
movsx eax word_1009448 +
sub eax 0Fh +
cmp [ebp+var_8] eax +
jle loc_1005C37  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
push 20h  +
pop esi  +
movzx eax word_1009460 +
push offset asc_1001270  +
push eax  +
call sub_10029A4  +
dec esi  +
pop ecx  +
pop ecx  +
jnz loc_1005C19  +
mov [ebp+var_8] 21h +
inc edi  +
mov esi edi +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1005AE1  +
xor edi edi +
cmp [ebp+var_C] edi +
jnz loc_1005C70  +
cmp [ebp+var_20] 1 +
jle loc_1005C70  +
cmp [ebp+var_18] edi +
jnz loc_1005C70  +
movzx eax word_1009460 +
push offset asc_10016E8  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
inc [ebp+var_C]  +
cmp [ebp+var_C] 2 +
jl loc_1005AD0  +
movzx eax word_1009460 +
push 232h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
cmp [ebp+var_28] edi +
jz loc_1005DBD  +
cmp dword_1009040 6 +
mov [ebp+var_10] 1 +
mov [ebp+var_8] edi +
jz loc_1005DBD  +
xor esi esi +
mov eax dword_1009044[esi] +
test al 10h +
jz loc_1005CC9  +
cmp dword_1009058[esi] edi +
jz loc_1005D8E  +
test al 20h +
jz loc_1005D8E  +
cmp [ebp+var_14] edi +
jnz loc_1005CE2  +
cmp dword_1009058[esi] edi +
jz loc_1005D8E  +
cmp [ebp+var_10] edi +
jz loc_1005CFE  +
movzx eax word_1009460 +
push 231h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
mov [ebp+var_10] edi +
mov edx dword_1009038[esi] +
cmp edx edi +
jz loc_1005D1D  +
mov eax edx +
lea ebx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1005D0D  +
sub eax ebx +
sar eax 1 +
jnz loc_1005D23  +
mov edx dword_1009034[esi] +
test dword_1009044[esi] 110h +
movzx eax word ptr dword_100945C +
jnz loc_1005D3D  +
movzx eax word_1009460 +
push dword_100903C[esi]  +
push edx  +
push offset word_1009464  +
push offset a1S2S3S_0  +
push eax  +
call sub_10029A4  +
mov edi eax +
add esp 14h +
cmp edi 20h +
jle loc_1005D74  +
movzx eax word_1009460 +
push offset asc_1001270  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
add edi eax +
movsx eax word_1009448 +
push 1  +
push eax  +
push 20h  +
push edi  +
push dword_1009028[esi]  +
call sub_100335A  +
xor edi edi +
inc [ebp+var_8]  +
mov esi [ebp+var_8] +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1005CB3  +
cmp [ebp+var_10] edi +
jnz loc_1005DBD  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
mov [ebp+var_C] edi +
and [ebp+var_8] 0 +
cmp dword_1009040 6 +
mov [ebp+var_10] 1 +
jz loc_1006000  +
xor esi esi +
mov [ebp+var_20] offset dword_1009040 +
cmp [ebp+var_C] 0 +
mov eax dword_1009044[esi] +
jnz loc_1005EA0  +
test al 8 +
jz loc_1005FE5  +
test eax 100020h +
jnz loc_1005FE5  +
cmp [ebp+var_14] 0 +
jnz loc_1005E16  +
mov ecx [ebp+var_20] +
cmp dword ptr [ecx] 3 +
jz loc_1005FE5  +
test al 10h +
jz loc_1005E27  +
cmp dword_1009058[esi] 0 +
jz loc_1005FE5  +
cmp [ebp+var_14] 0 +
jnz loc_1005E54  +
cmp dword_1009058[esi] 0 +
jnz loc_1005E54  +
mov eax dword_1009060[esi] +
and eax [ebp+var_2C] +
test eax 0FFFFh +
jz loc_1005FE5  +
cmp [ebp+var_24] 1 +
jge loc_1005FE5  +
mov eax dword ptr byte_1009030[esi] +
shr eax 1Ch +
and al [ebp+var_1] +
test al 0Fh +
jnz loc_1005FE5  +
xor edi edi +
cmp [ebp+var_10] edi +
jz loc_1005ECB  +
mov eax [ebp+var_C] +
sub eax edi +
jz loc_1005EAD  +
dec eax  +
jnz loc_1005EC8  +
mov eax offset asc_1001330 +
cmp [ebp+var_30] edi +
jnz loc_1005E88  +
mov eax offset dword_1001214 +
push eax  +
movzx eax word_1009460 +
push 234h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
jmp loc_1005EC8  +
test al 8 +
jnz loc_1005FE5  +
jmp loc_1005DF9  +
movzx eax word_1009460 +
push 233h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
mov [ebp+var_30] 1 +
mov [ebp+var_10] edi +
mov ebx dword_1009038[esi] +
cmp ebx edi +
jz loc_1005EEF  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1005EDA  +
sub eax edx +
sar eax 1 +
jz loc_1005EEF  +
xor edi edi +
inc edi  +
jmp loc_1005EF1  +
xor edi edi +
mov eax dword_1009044[esi] +
test al 8 +
jz loc_1005F26  +
test eax 110h +
movzx eax word ptr dword_100945C +
jnz loc_1005F10  +
movzx eax word_1009460 +
push dword_100903C[esi]  +
push offset a1S_3  +
push eax  +
call sub_10029A4  +
add esp 0Ch +
jmp loc_1005F76  +
mov edx ebx +
test edi edi +
jnz loc_1005F32  +
mov edx dword_1009034[esi] +
mov ecx offset asc_100142C +
test eax 10000h +
jnz loc_1005F43  +
mov ecx offset dword_1001214 +
test eax 110h +
movzx eax word ptr dword_100945C +
jnz loc_1005F58  +
movzx eax word_1009460 +
push dword_100903C[esi]  +
push edx  +
push ecx  +
movzx ecx word_1009000 +
push ecx  +
push offset a1C2S3S4S  +
push eax  +
call sub_10029A4  +
add esp 18h +
mov ebx eax +
cmp ebx 20h +
jle loc_1005F93  +
movzx eax word_1009460 +
push offset asc_1001670  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
add ebx eax +
test dword_1009044[esi] 10000h +
jz loc_1005FBA  +
cmp [ebp+var_1C] 0 +
jnz loc_1005FBA  +
test edi edi +
jz loc_1005FB1  +
mov eax dword_1009038[esi] +
jmp loc_1005FB7  +
mov eax dword_1009034[esi] +
mov [ebp+var_1C] eax +
movsx eax word_1009448 +
push 1  +
push eax  +
push 20h  +
push ebx  +
push dword_1009028[esi]  +
call sub_100335A  +
cmp [ebp+var_14] 0 +
jnz loc_1005FE5  +
mov eax [ebp+var_20] +
cmp dword ptr [eax] 7 +
jnz loc_1005FE5  +
call sub_1005560  +
inc [ebp+var_8]  +
mov esi [ebp+var_8] +
shl esi 6 +
lea eax dword_1009040[esi] +
cmp dword ptr [eax] 6 +
mov [ebp+var_20] eax +
jnz loc_1005DE1  +
inc [ebp+var_C]  +
cmp [ebp+var_C] 2 +
jl loc_1005DC0  +
cmp [ebp+var_1C] 0 +
jz loc_100602E  +
push [ebp+var_1C]  +
movzx eax word_1009460 +
push [ebp+var_1C]  +
push 23Dh  +
push eax  +
call sub_1003284  +
add esp 10h +
cmp [ebp+var_14] 0 +
jz loc_1006048  +
movzx eax word_1009460 +
push 23Eh  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
xor edi edi +
inc edi  +
xor ebx ebx +
cmp dword_1009040 6 +
jz loc_10060BD  +
xor esi esi +
xor eax eax +
cmp [ebp+var_14] eax +
jnz loc_1006067  +
cmp dword_1009058[esi] eax +
jmp loc_1006076  +
cmp [ebp+var_28] eax +
jz loc_1006078  +
test dword_1009044[esi] 100020h +
jz loc_10060AE  +
test byte ptr dword_1009044[esi] 80h +
jz loc_10060AE  +
cmp edi eax +
jz loc_100609B  +
movzx eax word_1009460 +
push 242h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
xor edi edi +
push 0  +
push 50h  +
push 2  +
push 0  +
push dword_100902C[esi]  +
call sub_100335A  +
inc ebx  +
mov esi ebx +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1006058  +
call sub_1001DAC  +
push 0  +
call ds:exit  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [ebp+Arguments]  +
call sub_1003D90  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 824h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+lpFileName] +
xor esi esi +
push esi  +
push 80h  +
push 3  +
push esi  +
push 3  +
push 80000000h  +
push edi  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_1006134  +
call ds:GetLastError  +
mov esi eax +
jmp loc_100613B  +
push eax  +
call ds:CloseHandle  +
test [ebp+arg_4] 1 +
jz loc_10061DB  +
cmp esi 2 +
jnz loc_1006151  +
xor esi esi +
jmp loc_10061DB  +
push 3  +
pop eax  +
cmp esi eax +
jz loc_10061DD  +
test [ebp+arg_4] 4 +
jz loc_10061DB  +
xor eax eax +
push 7FEh  +
push eax  +
mov [ebp+Arguments] ax +
lea eax [ebp-822h] +
push eax  +
call memset  +
movzx eax word_1009460 +
push edi  +
push 239h  +
push eax  +
call sub_1003284  +
add esp 18h +
push 1  +
push 400h  +
lea eax [ebp+Arguments] +
push eax  +
call sub_10060D0  +
push 10h  +
lea eax [ebp+Mem] +
push eax  +
push 200h  +
push 0  +
call ds:LoadStringW  +
lea eax [ebp+Mem] +
push eax  +
lea eax [ebp+Arguments] +
push eax  +
call sub_10042A9  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFFFFF49h +
add esi 0B7h +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_1004894  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 828h +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+var_814] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push esi  +
mov [ebp+var_81C] esi +
mov [ebp+var_818] esi +
call ds:SetThreadUILanguage  +
call sub_10020D6  +
call sub_1002BF9  +
call sub_1001BE3  +
mov eax [edi] +
add edi 4 +
dec [ebp+arg_0]  +
cmp [ebp+arg_0] esi +
mov dword_100944C eax +
jle loc_100664C  +
and [ebp+var_820] 0 +
and [ebp+var_808] 0 +
cmp dword_1009040 6 +
jz loc_10065D2  +
mov esi offset dword_1009044 +
cmp [ebp+var_820] 0 +
jnz loc_10065F9  +
push 0  +
push dword ptr [edi]  +
lea ebx [esi+4] +
lea eax [ebx-20h] +
push eax  +
call sub_1001988  +
test eax eax +
jz loc_10065B6  +
cmp dword ptr [ebx+10h] 0 +
jz loc_10062D7  +
push dword ptr [edi]  +
movzx eax word ptr dword_1009454 +
push dword ptr [ebx-14h]  +
push 226h  +
push eax  +
call sub_1003284  +
add esp 10h +
mov [ebp+var_818] 1 +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_10062EF  +
mov eax [esi] +
test al 20h +
jnz loc_10062EF  +
test eax 100000h +
jz loc_10062F5  +
add edi 4 +
dec [ebp+arg_0]  +
xor eax eax +
inc eax  +
cmp dword ptr [esi-4] 9 +
mov [ebp+var_820] eax +
mov [ebx+10h] eax +
ja loc_10065B6  +
mov eax [esi-4] +
jmp ds:off_10067C8[eax*4]  +
xor eax eax +
inc eax  +
mov [ebx] eax +
mov [ebp+var_81C] eax +
jmp loc_10065B6  +
mov eax [ebx] +
or dword ptr [esi] 4 +
mov dword_1009024 eax +
cmp [ebp+arg_0] 0 +
jle loc_10065A3  +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_10065A3  +
push 7FFFFFFFh  +
lea eax [ebp+var_828] +
push eax  +
push dword ptr [edi]  +
call sub_1002B11  +
test eax eax +
jnz loc_1006369  +
mov eax [ebp+var_828] +
mov [ebx] eax +
jmp loc_100636F  +
or dword ptr [esi] 2000000h +
cmp dword ptr [esi-4] 4 +
jnz loc_1006468  +
mov eax [ebx] +
mov dword_1009024 eax +
jmp loc_1006468  +
xor eax eax +
cmp [ebx] eax +
setz al  +
mov [ebx] eax +
jmp loc_10065B6  +
cmp [ebp+arg_0] 0 +
jle loc_100640F  +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_100640F  +
and dword ptr [esi] 0FFFDFFFFh +
push dword ptr [edi]  +
push [ebp+var_808]  +
call sub_1002A72  +
cmp dword ptr [ebx] 0 +
jnz loc_10063FE  +
push 8007000Eh  +
call sub_10061F2  +
call sub_1001DAC  +
push 0Eh  +
call ds:exit  +
mov ebx [edi] +
push ebx  +
call sub_100193C  +
test eax eax +
jnz loc_10065B6  +
test dword ptr [esi] 400h +
jz loc_10063F1  +
push ebx  +
call sub_1001B76  +
push dword ptr [edi]  +
push [ebp+var_808]  +
call sub_100517C  +
add edi 4 +
dec [ebp+arg_0]  +
cmp [ebp+arg_0] 0 +
jg loc_10063D3  +
jmp loc_10065B6  +
mov eax [esi] +
test al 4 +
jnz loc_100641F  +
cmp dword ptr [ebx+14h] 0 +
jz loc_10065AF  +
or eax 1000000h +
jmp loc_10065B4  +
mov eax [ebp+var_808] +
mov [ebp+var_814] eax +
cmp [ebp+arg_0] 0 +
jle loc_1006473  +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_1006473  +
test dword ptr [esi] 400h +
jz loc_1006455  +
push dword ptr [edi]  +
call sub_1001B76  +
and dword ptr [esi] 0FFFDFFFFh +
push dword ptr [edi]  +
push [ebp+var_808]  +
call sub_1002A72  +
add edi 4 +
dec [ebp+arg_0]  +
jmp loc_10065B6  +
mov eax [esi] +
test al 4 +
jnz loc_100641F  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_100641F  +
test eax 10000h +
jmp loc_10065AD  +
cmp [ebp+arg_0] 0 +
jle loc_10065A3  +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_10065A3  +
and [ebp+lpMem] eax +
mov eax [edi] +
add edi 4 +
dec [ebp+arg_0]  +
cmp dword ptr [esi-4] 9 +
mov dword ptr [ebp+var_810] eax +
jnz loc_1006563  +
cmp [ebp+arg_0] 0 +
jle loc_1006563  +
push dword ptr [edi]  +
call sub_100193C  +
test eax eax +
jnz loc_1006563  +
mov eax dword ptr [ebp+var_810] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10064E2  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax [edi] +
lea edx [eax+2] +
mov [ebp+lpMem] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10064FD  +
sub eax [ebp+lpMem] +
sar eax 1 +
add eax ecx +
lea eax [eax+eax+4] +
push eax  +
push 0  +
mov [ebp+var_824] eax +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_100655D  +
push dword ptr [edi]  +
push dword ptr [ebp+var_810]  +
push offset aSS_1  +
push [ebp+var_824]  +
push eax  +
call sub_1002785  +
mov eax [ebp+lpMem] +
add esp 14h +
mov dword ptr [ebp+var_810] eax +
add edi 4 +
dec [ebp+arg_0]  +
xor eax eax +
cmp dword ptr [esi-4] 9 +
setz al  +
push eax  +
push ebx  +
push dword ptr [ebp+var_810]  +
call sub_1004339  +
test eax eax +
jz loc_1006583  +
or dword ptr [esi] 2000000h +
cmp [ebp+lpMem] 0 +
jz loc_10065B6  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_10065B6  +
mov eax [esi] +
test al 4 +
jnz loc_10065B6  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_10065B6  +
or eax 2000000h +
mov [esi] eax +
inc [ebp+var_808]  +
add esi 40h +
cmp dword ptr [esi-4] 6 +
jnz loc_1006288  +
cmp [ebp+var_820] 0 +
jnz loc_10065F9  +
push dword ptr [edi]  +
movzx eax word ptr dword_1009454 +
push 228h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
add edi 4 +
dec [ebp+arg_0]  +
mov [ebp+var_818] 1 +
cmp [ebp+arg_0] 0 +
jg loc_1006268  +
cmp [ebp+var_814] 0 +
jl loc_100664C  +
mov esi [ebp+var_814] +
shl esi 6 +
cmp dword_1009040[esi] 7 +
jnz loc_100664C  +
cmp dword_1009058[esi] 0 +
jz loc_100664C  +
lea eax [ebp+var_824] +
push eax  +
push dword_1009048[esi]  +
call sub_10051D3  +
cmp [ebp+var_824] 0 +
jz loc_100664C  +
or dword_1009044[esi] 800000h +
xor edi edi +
cmp dword_1009040 6 +
mov [ebp+var_808] edi +
jz loc_100676C  +
xor esi esi +
mov ebx 20000h +
cmp [ebp+var_81C] edi +
jnz loc_100668A  +
cmp dword_1009058[esi] edi +
jz loc_100668A  +
mov eax dword_1009064[esi] +
cmp eax edi +
jz loc_100668A  +
push [ebp+var_808]  +
call eax  +
mov eax dword_1009044[esi] +
test eax ebx +
jnz loc_10066B8  +
mov ecx dword_1009040[esi] +
cmp ecx 2 +
jz loc_10066A9  +
cmp ecx 5 +
jz loc_10066A9  +
cmp ecx 7 +
jnz loc_10066FE  +
cmp dword_1009058[esi] edi +
jz loc_10066B8  +
test eax 1000000h +
jz loc_10066FE  +
and eax 0FEFFFFFFh +
mov dword_1009044[esi] eax +
test eax ebx +
jz loc_10066FE  +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push dword_1009048[esi]  +
push edi  +
call ds:LoadStringW  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+var_808]  +
call sub_1002A72  +
cmp dword_1009048[esi] edi +
jz loc_10063BC  +
test byte ptr dword_1009044[esi] 40h +
jz loc_1006750  +
cmp dword_1009058[esi] edi +
jnz loc_100672D  +
lea edi dword_1009048[esi] +
push dword ptr [edi]  +
push [ebp+var_808]  +
call sub_1002A72  +
cmp dword ptr [edi] 0 +
jz loc_10063BC  +
xor edi edi +
or dword_1009044[esi] 80000000h +
xor eax eax +
cmp dword_1009040[esi] 5 +
setz al  +
push eax  +
lea eax dword_1009048[esi] +
push eax  +
call sub_10040C0  +
inc [ebp+var_808]  +
mov esi [ebp+var_808] +
shl esi 6 +
cmp dword_1009040[esi] 6 +
jnz loc_1006668  +
cmp [ebp+var_81C] edi +
jz loc_1006779  +
call sub_10058E6  +
cmp dword_1009024 edi +
jl loc_1006786  +
call sub_1005675  +
call sub_10037D5  +
test eax eax +
jnz loc_100679A  +
cmp [ebp+var_818] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10067BA  +
movzx eax word ptr dword_1009454 +
push 238h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
call sub_1001DAC  +
push 0Bh  +
jmp loc_10063CD  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100741C  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10A8h +
call __alloca_probe  +
mov eax dword_1009428 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor eax eax +
xor edi edi +
push 7FEh  +
mov [ebp+FileName] ax +
lea eax [ebp-1012h] +
push edi  +
push eax  +
mov [ebp+var_101C] edi +
mov [ebp+var_1038] edi +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push edi  +
call ds:HeapSetInformation  +
push esi  +
push [ebp+arg_0]  +
call sub_100620C  +
push 40h  +
lea eax [ebp+var_10A8] +
push edi  +
push eax  +
mov [ebp+Arguments] edi +
mov [ebp+var_1028] edi +
call memset  +
add esp 0Ch +
mov [ebp+var_1040] ebx +
mov [ebp+var_103C] 18h +
mov [ebp+var_102C] edi +
mov [ebp+var_C] edi +
mov [ebp+var_1034] edi +
cmp off_10091C8 edi +
jnz loc_10068AA  +
mov [ebp+var_1018] 0Eh +
jmp loc_100702E  +
cmp dword_10090C8 edi +
jz loc_10068FA  +
cmp dword_10093C8 edi +
jnz loc_10068FA  +
push lpNewFileName  +
mov [ebp+var_1034] ebx +
push 6  +
call sub_100517C  +
mov [ebp+var_1018] eax +
cmp eax edi +
jnz loc_1006FF3  +
push 400h  +
lea eax [ebp+FileName] +
push eax  +
call sub_1004B99  +
mov [ebp+var_1018] eax +
cmp eax edi +
jnz loc_1006FF3  +
lea eax [ebp+var_1024] +
push eax  +
push off_1009188  +
call sub_1002121  +
mov [ebp+var_1018] eax +
cmp eax edi +
jnz loc_1006FF3  +
movzx eax word_1009460 +
mov esi off_10091C8 +
push 2BCh  +
push eax  +
call sub_1003284  +
movzx eax word_1009460 +
push 2BFh  +
push eax  +
call sub_1003284  +
add esp 10h +
jmp loc_10069EA  +
cmp [esi] di +
jz loc_10069F2  +
lea eax [ebp+var_1038] +
push eax  +
push esi  +
call PdhGetLogFileTypeW  +
inc [ebp+var_C]  +
mov [ebp+var_101C] eax +
cmp eax edi +
jz loc_1006975  +
mov [ebp+var_1038] edi +
mov eax [ebp+var_1038] +
dec eax  +
push esi  +
jz loc_10069BE  +
dec eax  +
jz loc_10069B7  +
dec eax  +
jz loc_10069B0  +
sub eax 3 +
jz loc_10069A9  +
dec eax  +
dec eax  +
movzx eax word_1009460 +
jz loc_100699C  +
push 2C8h  +
jmp loc_10069CA  +
inc [ebp+var_102C]  +
push 2C6h  +
jmp loc_10069CA  +
push 2C7h  +
jmp loc_10069C3  +
push 2C3h  +
jmp loc_10069C3  +
push 2C5h  +
jmp loc_10069C3  +
push 2C4h  +
movzx eax word_1009460 +
push eax  +
call sub_1003284  +
mov eax esi +
add esp 0Ch +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10069D8  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp esi edi +
jnz loc_100694C  +
movzx eax word_1009460 +
push offset asc_1001330  +
push eax  +
call sub_10029A4  +
mov eax [ebp+var_C] +
cmp eax 1 +
pop ecx  +
pop ecx  +
jle loc_1006A25  +
cmp eax [ebp+var_102C] +
jle loc_1006A25  +
mov [ebp+var_1018] 0F0000001h +
jmp loc_1006FF3  +
push off_10091C8  +
lea eax [ebp+Arguments] +
push eax  +
call PdhBindInputDataSourceW  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
lea eax [ebp+var_1028] +
push eax  +
push edi  +
push [ebp+Arguments]  +
call PdhOpenQueryH  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
lea eax [ebp+var_103C] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
lea eax [ebp+var_1040] +
push eax  +
push [ebp+Arguments]  +
call PdhGetDataSourceTimeRangeH  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
mov ebx ds:FileTimeToSystemTime +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ebx  +
movzx eax word_1009460 +
push 2C0h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
lea eax [ebp+SystemTime] +
push eax  +
call sub_1004B14  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+var_1060] +
push eax  +
call ebx  +
movzx eax word_1009460 +
push 2C1h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
lea eax [ebp+SystemTime] +
push eax  +
call sub_1004B14  +
push [ebp+var_1058]  +
movzx eax word_1009460 +
push 2C2h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
cmp dword_1009358 edi +
jnz loc_1006CFA  +
cmp dword_1009258 edi +
jz loc_1006FF3  +
cmp dword_1009118 edi +
jnz loc_1006B65  +
cmp dword_1009158 edi +
jnz loc_1006B8E  +
push edi  +
push [ebp+var_1028]  +
push [ebp+Arguments]  +
call sub_1004C46  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
cmp dword_1009118 edi +
jz loc_1006B86  +
push [ebp+var_1028]  +
push [ebp+Arguments]  +
push 1  +
call sub_1002442  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
cmp dword_1009158 edi +
jz loc_1006BAF  +
push [ebp+var_1028]  +
push [ebp+Arguments]  +
push 1  +
call sub_10024B8  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
mov esi ds:SystemTimeToFileTime +
cmp dword_1009298 edi +
jz loc_1006C0B  +
lea eax [ebp+var_1030] +
push eax  +
push offset SystemTime  +
call esi  +
mov eax [ebp+var_102C] +
cmp eax [ebp+var_105C] +
mov ecx [ebp+var_1030] +
mov [ebp+var_1098] ecx +
mov [ebp+var_1094] eax +
jl loc_1006BFF  +
jg loc_1006BF5  +
cmp ecx [ebp+var_1060] +
jb loc_1006BFF  +
mov [ebp+var_1018] 0F0000003h +
cmp [ebp+var_1018] edi +
jnz loc_1006FF3  +
cmp dword_10092D8 edi +
jz loc_1006C61  +
lea eax [ebp+var_1030] +
push eax  +
push offset stru_10092C8  +
call esi  +
mov eax [ebp+var_102C] +
cmp eax [ebp+FileTime.dwHighDateTime] +
mov ecx [ebp+var_1030] +
mov [ebp+var_1090] ecx +
mov [ebp+var_108C] eax +
jg loc_1006C55  +
jl loc_1006C4B  +
cmp ecx [ebp+FileTime.dwLowDateTime] +
ja loc_1006C55  +
mov [ebp+var_1018] 0F0000003h +
cmp [ebp+var_1018] edi +
jnz loc_1006FF3  +
cmp dword_1009258 edi +
jz loc_1006FF3  +
cmp dword_1009358 edi +
jnz loc_1006FF3  +
mov eax [ebp+var_1024] +
mov [ebp+var_10A4] eax +
mov esi 100h +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
push esi  +
lea eax [ebp+var_814] +
push eax  +
push esi  +
lea eax [ebp+var_614] +
push eax  +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push lpNewFileName  +
call _wsplitpath_s  +
lea eax [ebp+var_20C] +
add esp 24h +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1006CBF  +
sub eax edx +
sar eax 1 +
jnz loc_1006D9B  +
mov eax [ebp+var_10A4] +
dec eax  +
jz loc_1006D89  +
dec eax  +
jz loc_1006D82  +
sub eax 6 +
jnz loc_1006D9B  +
push offset aBlg_0  +
jmp loc_1006D8E  +
xor esi esi +
cmp dword_1009258 edi +
jz loc_1006D55  +
xor eax eax +
cmp dword_1009388 edi +
setz al  +
lea eax ds:1[eax*4] +
push eax  +
push lpNewFileName  +
call sub_10060F2  +
mov [ebp+var_1018] eax +
cmp eax edi +
jnz loc_1006FF3  +
push offset aW  +
push lpNewFileName  +
call ds:_wfopen  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jnz loc_1006D55  +
call ds:GetLastError  +
mov [ebp+var_1018] eax +
push esi  +
push [ebp+var_1028]  +
push [ebp+Arguments]  +
call sub_1004C46  +
mov [ebp+var_101C] eax +
cmp esi edi +
jz loc_1006B5D  +
push esi  +
call ds:fclose  +
pop ecx  +
jmp loc_1006B5D  +
push offset aTsv_0  +
jmp loc_1006D8E  +
push offset aCsv_0  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100262C  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_814] +
push eax  +
lea eax [ebp+var_614] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_414] +
push 104h  +
push eax  +
call _wmakepath_s  +
add esp 18h +
cmp [ebp+var_1024] 7 +
jz loc_1006E09  +
cmp dword_10090D8 edi +
jz loc_1006DDC  +
push edi  +
jmp loc_1006DEF  +
xor eax eax +
cmp dword_1009388 edi +
setz al  +
lea eax ds:1[eax*4] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
call sub_10060F2  +
mov [ebp+var_1018] eax +
cmp eax edi +
jnz loc_1006FF3  +
mov [ebp+var_10A0] 20002h +
cmp dword_10090C8 edi +
jz loc_1006E7B  +
cmp dword_10093C8 edi +
jz loc_1006E7B  +
cmp [ebp+var_1024] 7 +
jz loc_1006E7B  +
cmp [ebp+var_1024] 8 +
jz loc_1006E44  +
mov [ebp+var_1018] 0F0000004h +
jmp loc_1006FF3  +
lea eax [ebp+var_1024] +
push eax  +
push lpNewFileName  +
call PdhGetLogFileTypeW  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
cmp [ebp+var_1024] 8 +
jnz loc_100703E  +
or [ebp+var_10A0] 8000000h +
lea eax [ebp+FileName] +
cmp [ebp+var_1034] edi +
jnz loc_1006E8F  +
lea eax [ebp+var_414] +
fldz   +
push ecx  +
push ecx  +
fstp  qword ptr [esp+0] +
mov [ebp+var_10A8] eax +
mov eax dword_1009208 +
push edi  +
mov [ebp+var_1078] offset sub_1004B32 +
mov [ebp+var_1088] eax +
call sub_1004B32  +
lea eax [ebp+var_10A8] +
push eax  +
push [ebp+Arguments]  +
call PdhRelogW  +
mov [ebp+var_101C] eax +
cmp eax edi +
jnz loc_1006FF3  +
fld1   +
push ecx  +
push ecx  +
fstp  qword ptr [esp+0] +
push edi  +
call sub_1004B32  +
movzx eax word_1009460 +
push offset asc_1001764  +
push eax  +
call sub_10029A4  +
pop ecx  +
pop ecx  +
cmp [ebp+var_1034] edi +
jz loc_1006F4B  +
push edi  +
push lpNewFileName  +
lea eax [ebp+FileName] +
push eax  +
call ds:CopyFileW  +
mov esi eax +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
cmp esi edi +
jnz loc_1006F33  +
call ds:GetLastError  +
mov [ebp+var_1018] eax +
cmp [ebp+var_1018] edi +
jnz loc_1006FF3  +
lea eax [ebp+var_414] +
mov [ebp+var_10A8] eax +
movzx eax word_1009460 +
push 2BDh  +
push eax  +
call sub_1003284  +
push [ebp+var_10A8]  +
movzx eax word_1009460 +
push 2BEh  +
push eax  +
call sub_1003284  +
add esp 14h +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+var_1098] +
push eax  +
call ebx  +
movzx eax word_1009460 +
push 2C0h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
lea eax [ebp+SystemTime] +
push eax  +
call sub_1004B14  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+var_1090] +
push eax  +
call ebx  +
movzx eax word_1009460 +
push 2C1h  +
push eax  +
call sub_1003284  +
pop ecx  +
pop ecx  +
lea eax [ebp+SystemTime] +
push eax  +
call sub_1004B14  +
push [ebp+var_1088]  +
movzx eax word_1009460 +
push 2C2h  +
push eax  +
call sub_1003284  +
add esp 0Ch +
cmp [ebp+Arguments] edi +
jz loc_1007008  +
push 1  +
push [ebp+Arguments]  +
call PdhCloseLog  +
mov eax [ebp+var_1018] +
cmp eax edi +
jz loc_100707C  +
cmp eax 0F0000001h +
jz loc_1007075  +
cmp eax 0F0000002h +
jz loc_1007058  +
cmp eax 0F0000003h +
jz loc_100704A  +
cmp eax 0F0000004h +
jz loc_1007058  +
push [ebp+var_1018]  +
call sub_10061F2  +
jmp loc_10070D1  +
mov [ebp+var_101C] 0C0000BCAh +
jmp loc_1006FF3  +
push 2CBh  +
movzx eax word ptr dword_1009454 +
jmp loc_1007092  +
push off_1009188  +
movzx eax word ptr dword_1009454 +
push 2CAh  +
push eax  +
call sub_1003284  +
add esp 0Ch +
jmp loc_10070D1  +
push 2C9h  +
jmp loc_100704F  +
mov esi [ebp+var_101C] +
cmp esi edi +
jnz loc_100709A  +
movzx eax word_1009460 +
push 23Bh  +
push eax  +
call sub_1003284  +
jmp loc_10070CF  +
cmp esi 0C0000BE0h +
jl loc_10070BE  +
cmp esi 0C0000BE7h +
jg loc_10070BE  +
movzx eax word ptr dword_1009454 +
push 2CCh  +
push eax  +
call sub_1003284  +
jmp loc_10070C9  +
push offset LibFileName  +
push esi  +
call sub_1004894  +
mov [ebp+var_1018] esi +
pop ecx  +
pop ecx  +
call sub_1001DAC  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1018] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100741C  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100710C  +
test eax eax +
jnz loc_1007111  +
mov ecx [esi] +
test ecx ecx +
jz loc_1007109  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10070FD  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1009490 +
push offset dword_1009480  +
push dword_100948C  +
mov dword_1009480 eax +
push offset dword_1009470  +
push offset dword_1009474  +
push offset dword_100946C  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100947C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1007199  +
cmp eax esi +
jnz loc_100718C  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_100719C  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1007173  +
xor esi esi +
inc esi  +
mov eax dword_10097C4 +
cmp eax esi +
jnz loc_10071AF  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10071EA  +
mov eax dword_10097C4 +
test eax eax +
jnz loc_10071E4  +
mov dword_10097C4 esi +
push offset dword_10011E8  +
push offset dword_10011DC  +
call sub_10070F0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10071EA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10072B4  +
mov dword_1009488 esi +
mov eax dword_10097C4 +
cmp eax esi +
jnz loc_100720E  +
push offset dword_10011D8  +
push offset dword_10011D0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10097C4 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100721B  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10097CC ebx +
jz loc_100723C  +
push offset dword_10097CC  +
call sub_10075A9  +
pop ecx  +
test eax eax +
jz loc_100723C  +
push ebx  +
push 2  +
push ebx  +
call dword_10097CC  +
push dword_1009470  +
push dword_1009474  +
push dword_100946C  +
call sub_10067F5  +
add esp 0Ch +
mov dword_1009484 eax +
cmp dword_1009478 ebx +
jnz loc_100729A  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1009484 eax +
xor ebx ebx +
cmp dword_1009478 ebx +
jnz loc_100729A  +
push eax  +
call ds:_exit  +
cmp dword_1009488 ebx +
jnz loc_10072A8  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1009484 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10072D1  +
xor eax eax +
jmp loc_100731E  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10072CD  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100730B  +
cmp ecx 20Bh +
jnz loc_10072CD  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10072CD  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1007319  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10072CD  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1009478 eax +
call sub_10076B7  +
push eax  +
call ds:__set_app_type  +
or dword_10097BC 0FFFFFFFFh +
or dword_10097C0 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1009498 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1009494 +
mov [eax] ecx +
call sub_1007649  +
cmp dword_1009438 0 +
jnz loc_1007377  +
push offset sub_1007649  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1007631  +
xor eax eax +
retn   +
***
call sub_10076F6  +
jmp sub_1007151  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100741C  +
push offset dword_1009428  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
cmp ecx dword_1009428 +
jnz loc_1007427  +
retn 0  +
jmp loc_1007797  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10074F0  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10074F0  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10074EA  +
cmp eax 19930521h +
jz loc_10074EA  +
cmp eax 19930522h +
jz loc_10074EA  +
cmp eax 1994000h +
jnz loc_10074F0  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10074B0+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1007536  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1007532  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100759D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1007595  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100759F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1007585  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1007520  +
pop ecx  +
test eax eax +
jz loc_1007606  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1007560  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007606  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100760F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10076AA  +
cmp ecx 0FFFFFFFFh +
jz loc_10076AA  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10076A3  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10076A3  +
cmp edx 10000000h +
jnb loc_10076A3  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10076A3  +
jmp loc_100769E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10076EC  +
push eax  +
call sub_1007651  +
test eax eax +
jz loc_10076EC  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10076E1  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10076EC  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1009428 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1007728  +
test eax ebx +
jz loc_1007728  +
not eax  +
mov dword_100942C eax +
jmp loc_1007783  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100776F  +
test dword_1009428 ebx +
jnz loc_1007774  +
mov esi 0BB40E64Fh +
mov dword_1009428 esi +
not esi  +
mov dword_100942C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10095A0 eax +
mov dword_100959C ecx +
mov dword_1009598 edx +
mov dword_1009594 ebx +
mov dword_1009590 esi +
mov dword_100958C edi +
mov word_10095B8 ss +
mov word_10095AC cs +
mov word_1009588 ds +
mov word_1009584 es +
mov word_1009580 fs +
mov word_100957C gs +
pushf   +
pop dword_10095B0  +
mov eax [ebp+0] +
mov dword_10095A4 eax +
mov eax [ebp+4] +
mov dword_10095A8 eax +
lea eax [ebp+8] +
mov dword_10095B4 eax +
mov eax [ebp-320h] +
mov dword_10094F0 10001h +
mov eax dword_10095A8 +
mov dword_10094AC eax +
mov dword_10094A0 0C0000409h +
mov dword_10094A4 1 +
mov eax dword_1009428 +
mov [ebp-328h] eax +
mov eax dword_100942C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
retf   +
***
