mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+8] +
cmp eax [ebx+4] +
jnz loc_100319A  +
xor al al +
jmp loc_100320E  +
mov ecx [ebx] +
push edi  +
mov edi [ecx+eax*4] +
movzx eax word ptr [edi] +
push 2Fh  +
pop ecx  +
cmp cx ax +
jz loc_10031B7  +
push 2Dh  +
pop ecx  +
cmp cx ax +
jz loc_10031B7  +
xor al al +
jmp loc_100320D  +
inc edi  +
push esi  +
xor esi esi +
inc edi  +
cmp [ebp+arg_8] esi +
jz loc_10031D7  +
push 3Ah  +
push edi  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_10031F1  +
xor eax eax +
mov [esi] ax +
push edi  +
push [ebp+arg_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10031F5  +
test esi esi +
jz loc_10031F1  +
push 3Ah  +
pop eax  +
mov [esi] ax +
xor al al +
jmp loc_100320C  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1003207  +
push 3Ah  +
pop ecx  +
mov [esi] cx +
add esi 2 +
mov [eax] esi +
inc dword ptr [ebx+8]  +
mov al 1 +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx [esi+8] +
push edi  +
mov byte ptr [ebp+arg_0+3] 0 +
mov edi ebx +
cmp ebx [esi+4] +
jnb loc_1003255  +
push [ebp+arg_8]  +
mov [esi+8] edi +
push [ebp+arg_4]  +
push esi  +
call sub_1003185  +
test al al +
jnz loc_100324C  +
inc edi  +
cmp edi [esi+4] +
jb loc_1003231  +
jmp loc_1003255  +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov byte ptr [ebp+arg_0+3] 1 +
mov al byte ptr [ebp+arg_0+3] +
pop edi  +
mov [esi+8] ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
mov edx [ebp+arg_4] +
cmp edx ecx +
jb loc_10032A1  +
cmp edx [eax+4] +
jnb loc_10032A1  +
cmp edx ecx +
jbe loc_100329E  +
push esi  +
push edi  +
mov ecx [eax] +
lea ecx [ecx+edx*4] +
mov edi [ecx-4] +
mov esi [ecx] +
mov [ecx] edi +
mov ecx [eax] +
mov [ecx+edx*4-4] esi +
dec edx  +
cmp edx [eax+8] +
ja loc_1003284  +
pop edi  +
pop esi  +
inc dword ptr [eax+8]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_10032FA  +
push edi  +
push 57Fh  +
call sub_100C967  +
mov edi ds:wprintf +
jmp loc_10032E2  +
mov eax [esi+8] +
mov ecx [esi] +
push dword ptr [ecx+eax*4]  +
push offset aS  +
call edi  +
inc dword ptr [esi+8]  +
pop ecx  +
pop ecx  +
mov eax [esi+4] +
cmp eax [esi+8] +
jnz loc_10032CE  +
push offset word_10012AC  +
call edi  +
pop ecx  +
mov eax 80070057h +
pop edi  +
jmp loc_10032FC  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:iswspace +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
movzx esi word ptr [edi] +
add edi 2 +
jmp loc_100332F  +
movzx esi word ptr [edi] +
inc edi  +
inc edi  +
push esi  +
call ebx  +
pop ecx  +
test eax eax +
jnz loc_100332A  +
cmp si 2Dh +
jnz loc_1003343  +
or [ebp+arg_C] 2 +
jmp loc_1003349  +
cmp si 2Bh +
jnz loc_100334E  +
movzx esi word ptr [edi] +
inc edi  +
inc edi  +
mov eax [ebp+arg_8] +
test eax eax +
jl loc_1003519  +
cmp eax 1 +
jz loc_1003519  +
cmp eax 24h +
jg loc_1003519  +
push 10h  +
pop ecx  +
test eax eax +
jnz loc_100339C  +
cmp si 30h +
jz loc_1003381  +
mov [ebp+arg_8] 0Ah +
jmp loc_10033BD  +
movzx eax word ptr [edi] +
cmp ax 78h +
jz loc_1003399  +
cmp ax 58h +
jz loc_1003399  +
mov [ebp+arg_8] 8 +
jmp loc_10033BD  +
mov [ebp+arg_8] ecx +
cmp [ebp+arg_8] ecx +
jnz loc_10033BD  +
cmp si 30h +
jnz loc_10033BD  +
movzx eax word ptr [edi] +
cmp ax 78h +
jz loc_10033B6  +
cmp ax 58h +
jnz loc_10033BD  +
inc edi  +
inc edi  +
movzx esi word ptr [edi] +
inc edi  +
inc edi  +
mov eax [ebp+arg_8] +
cdq   +
push edx  +
push eax  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov [ebp+var_20] eax +
mov [ebp+var_1C] edx +
call __aulldvrm  +
mov [ebp+var_18] ecx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] eax +
mov [ebp+var_C] edx +
push esi  +
call ds:iswdigit  +
pop ecx  +
test eax eax +
jz loc_10033F2  +
movzx eax si +
sub eax 30h +
jmp loc_100340E  +
push esi  +
call ds:iswalpha  +
pop ecx  +
test eax eax +
jz loc_1003478  +
movzx eax si +
push eax  +
call ds:CharUpperW  +
movzx eax ax +
sub eax 37h +
cdq   +
mov ebx eax +
mov esi edx +
xor eax eax +
cmp esi eax +
ja loc_1003478  +
jb loc_1003420  +
cmp ebx [ebp+arg_8] +
jnb loc_1003478  +
mov eax [ebp+var_4] +
or [ebp+arg_C] 8 +
cmp eax [ebp+var_C] +
jb loc_1003455  +
ja loc_1003436  +
mov ecx [ebp+var_8] +
cmp ecx [ebp+var_10] +
jb loc_1003455  +
mov ecx [ebp+var_10] +
cmp [ebp+var_8] ecx +
jnz loc_100344F  +
cmp eax [ebp+var_C] +
jnz loc_100344F  +
cmp esi [ebp+var_14] +
jb loc_1003455  +
ja loc_100344F  +
cmp ebx [ebp+var_18] +
jbe loc_1003455  +
or [ebp+arg_C] 4 +
jmp loc_100346E  +
push eax  +
push [ebp+var_8]  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call __allmul  +
add eax ebx +
adc edx esi +
mov [ebp+var_8] eax +
mov [ebp+var_4] edx +
movzx esi word ptr [edi] +
inc edi  +
inc edi  +
jmp loc_10033DE  +
mov ebx [ebp+arg_C] +
mov esi [ebp+arg_4] +
dec edi  +
dec edi  +
test bl 8 +
jnz loc_1003496  +
test esi esi +
jz loc_100348C  +
mov edi [ebp+arg_0] +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
jmp loc_10034F3  +
mov ecx 7FFFFFFFh +
mov edx 80000000h +
test bl 4 +
jnz loc_10034CF  +
test bl 1 +
jnz loc_10034F3  +
mov eax ebx +
and eax 2 +
jz loc_10034BE  +
cmp [ebp+var_4] edx +
ja loc_10034CF  +
jb loc_10034BE  +
cmp [ebp+var_8] 0 +
ja loc_10034CF  +
test eax eax +
jnz loc_10034F3  +
cmp [ebp+var_4] ecx +
jb loc_10034F3  +
ja loc_10034CF  +
cmp [ebp+var_8] 0FFFFFFFFh +
jbe loc_10034F3  +
test bl 1 +
jz loc_10034DE  +
or [ebp+var_8] 0FFFFFFFFh +
or [ebp+var_4] 0FFFFFFFFh +
jmp loc_10034F3  +
test bl 2 +
jz loc_10034EC  +
and [ebp+var_8] 0 +
mov [ebp+var_4] edx +
jmp loc_10034F3  +
or [ebp+var_8] 0FFFFFFFFh +
mov [ebp+var_4] ecx +
test esi esi +
jz loc_10034F9  +
mov [esi] edi +
test bl 2 +
jz loc_1003511  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
neg eax  +
adc ecx 0 +
neg ecx  +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
mov eax [ebp+var_8] +
mov edx [ebp+var_4] +
jmp loc_1003529  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1003525  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
xor edx edx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1003306  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpWideCharStr] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100355E  +
sub eax ecx +
sar eax 1 +
push eax  +
push [ebp+lpWideCharStr]  +
push [ebp+hConsoleHandle]  +
call sub_100C817  +
pop ebp  +
retn 8  +
***
mov eax ecx +
mov edx ecx +
shl edx 10h +
and eax 0FF00h +
or eax edx +
mov edx ecx +
and edx 0FF0000h +
shr ecx 10h +
or edx ecx +
shl eax 8 +
shr edx 8 +
or eax edx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi esi +
shrd ecx edi +
shr edi 10h +
mov edx esi +
and edx 0FF0000h +
or edx edi +
xor eax eax +
or eax ecx +
shrd eax edx +
xor edi edi +
or eax edi +
mov ebx esi +
shr edx 10h +
mov ecx 0FF00h +
and ebx ecx +
or edx ebx +
movzx ebx byte ptr [ebp+arg_4] +
shrd eax edx +
or eax edi +
mov edi [ebp+arg_0] +
and edi ecx +
shr edx 10h +
or edx ebx +
mov ebx [ebp+arg_0] +
shld esi ebx +
xor ecx ecx +
or ecx esi +
mov esi [ebp+arg_0] +
shl ebx 10h +
or edi ebx +
shld ecx edi +
shl edi 10h +
and esi 0FF0000h +
or edi esi +
xor ebx ebx +
or ecx ebx +
shld ecx edi +
mov esi ecx +
mov ecx [ebp+arg_0] +
shl edi 10h +
and ecx 0FF000000h +
or edi ecx +
or esi ebx +
shld esi edi +
shrd eax edx +
shl edi 8 +
or eax edi +
shr edx 8 +
pop edi  +
or edx esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hMem] 0 +
cmp dword ptr [ebp+arg_4] 0 +
jnz loc_100366A  +
mov eax 0BB9h +
jmp loc_1003676  +
cmp dword ptr [ebp+arg_4] 1 +
mov eax 0BBBh +
jz loc_1003676  +
dec eax  +
lea ecx [ebp+hMem] +
push ecx  +
push eax  +
call sub_100CB63  +
test eax eax +
jl loc_1003697  +
push [ebp+hMem]  +
push dword ptr [ebp+arg_4]  +
push 9C5h  +
call sub_100CAAA  +
add esp 0Ch +
cmp [ebp+hMem] 0 +
jz locret_10036A6  +
push [ebp+hMem]  +
call ds:LocalFree  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 9F8h  +
call sub_100C8E3  +
cmp [ebp+arg_4] 0 +
jz loc_10036CB  +
push 0AF0h  +
jmp loc_10036D0  +
push 0AF1h  +
call sub_100C8E3  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hMem] 0 +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_10036F7  +
mov eax 0BBDh +
jmp loc_100370D  +
cmp esi 1 +
jnz loc_1003703  +
mov eax 0BC0h +
jmp loc_100370D  +
cmp esi 10h +
sbb eax eax +
add eax 0BC2h +
lea ecx [ebp+hMem] +
push ecx  +
push eax  +
call sub_100CB63  +
test eax eax +
jl loc_100372C  +
push [ebp+hMem]  +
push esi  +
push 9C6h  +
call sub_100CAAA  +
add esp 0Ch +
cmp [ebp+hMem] 0 +
pop esi  +
jz locret_100373C  +
push [ebp+hMem]  +
call ds:LocalFree  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+arg_4] +
lea eax [esi+1Fh] +
cmp eax 1Dh +
ja loc_10037CA  +
xor eax eax +
mov ecx esi +
inc eax  +
neg ecx  +
shl eax cl +
mov edx offset dword_10012D8 +
mov dword ptr [ebp+arg_4] eax +
fild  dword ptr [ebp+arg_4] +
fld1   +
fld  st +
fdivrp st(2) st +
fcom  st(1) +
fnstsw  ax +
test ah 41h +
jnz loc_10037AC  +
fld  ds:dbl_10012D0 +
mov edx offset aMs +
fmul st(2) st +
fxch  st(2) +
fcom  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_10037B0  +
fmul st st(2) +
mov edx offset aCs +
fcom  st(1) +
fnstsw  ax +
fstp  st(1) +
test ah 5 +
jp loc_10037B2  +
fmulp st(1) st +
mov edx offset aNs +
jmp loc_10037B4  +
fstp  st +
jmp loc_10037B4  +
fstp  st(1) +
fstp  st(1) +
push edx  +
push ecx  +
push ecx  +
fstp  [esp+10h+var_10] +
push esi  +
push 9C7h  +
call sub_100CAAA  +
add esp 14h +
jmp loc_10037E3  +
test esi esi +
jnz loc_10037D6  +
push esi  +
push 9D6h  +
jmp loc_10037DC  +
push esi  +
push 0BBEh  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_100C98F  +
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:LoadStringW +
mov esi 80h +
push esi  +
push offset Buffer  +
push 0B22h  +
push hInstance  +
call edi  +
test eax eax +
jz loc_100389D  +
cmp eax esi +
jnb loc_100387F  +
push esi  +
push offset word_1010198  +
push 0B23h  +
push hInstance  +
call edi  +
test eax eax +
jz loc_100389D  +
cmp eax esi +
jnb loc_100387F  +
push esi  +
push offset word_1010298  +
push 0B24h  +
push hInstance  +
call edi  +
test eax eax +
jz loc_100389D  +
cmp eax esi +
jnb loc_100387F  +
push esi  +
push offset word_1010398  +
push 0B25h  +
push hInstance  +
call edi  +
test eax eax +
jz loc_100389D  +
cmp eax esi +
jb loc_1003886  +
mov eax 8000FFFFh +
jmp loc_10038C1  +
push esi  +
push offset word_1010498  +
push 0B26h  +
push hInstance  +
call edi  +
test eax eax +
jnz loc_10038B3  +
call ds:GetLastError  +
test eax eax +
jle loc_10038C1  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10038C1  +
cmp eax esi +
sbb eax eax +
and eax 7FFF0001h +
add eax 8000FFFFh +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
xor eax eax +
cmp byte ptr [ebp+bDaclPresent] bl +
push esi  +
setz al  +
push ebx  +
push 8000080h  +
mov [ebp+hMem] ebx +
mov [ebp+pDacl] ebx +
lea eax [eax+eax+2] +
push eax  +
push ebx  +
push 3  +
push 80000000h  +
push [ebp+pObjectName]  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_100391C  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1003918  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1003977  +
push eax  +
call ds:CloseHandle  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push 1  +
push offset aDAGrgwLs  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jz loc_1003904  +
lea eax [ebp+bDaclDefaulted] +
push eax  +
lea eax [ebp+pDacl] +
push eax  +
lea eax [ebp+bDaclPresent] +
push eax  +
push [ebp+hMem]  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_1003904  +
cmp [ebp+bDaclPresent] ebx +
jz loc_1003975  +
cmp [ebp+pDacl] ebx +
jz loc_1003975  +
push ebx  +
push [ebp+pDacl]  +
push ebx  +
push ebx  +
push 4  +
push 1  +
push [ebp+pObjectName]  +
call ds:SetNamedSecurityInfoW  +
test eax eax +
jnz loc_1003904  +
xor esi esi +
cmp [ebp+hMem] ebx +
jz loc_1003985  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
push 1  +
push offset DatabaseName  +
push [ebp+hSCObject]  +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
test eax eax +
jnz loc_10039CC  +
call ds:GetLastError  +
test eax eax +
jg loc_10039C0  +
mov esi eax +
jmp loc_1003A35  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10039BC  +
push ebx  +
push edi  +
push 4  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov ebx eax +
test ebx ebx +
jnz loc_10039FA  +
call ds:GetLastError  +
test eax eax +
jle loc_10039F6  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1003A21  +
lea eax [ebp+var_4] +
push eax  +
push 24h  +
lea eax [ebp+var_28] +
push eax  +
push 0  +
push ebx  +
call ds:QueryServiceStatusEx  +
test eax eax +
jz loc_10039E2  +
mov esi [ebp+var_24] +
sub esi 4 +
neg esi  +
sbb esi esi +
and esi 80070426h +
mov edi ds:CloseServiceHandle +
test ebx ebx +
jz loc_1003A2E  +
push ebx  +
call edi  +
push [ebp+hSCObject]  +
call edi  +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FCh +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+var_C4] +
mov [ebp+lpBuffer] eax +
lea eax [ebp+var_D4] +
mov [ebp+var_F0] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_CC] +
mov [ebp+var_E8] eax +
push esi  +
lea eax [ebp+var_C8] +
push edi  +
xor edi edi +
mov [ebp+var_E0] eax +
lea eax [ebp+var_D0] +
mov [ebp+var_C4] edi +
mov [ebp+var_D4] edi +
mov [ebp+var_CC] edi +
mov [ebp+var_C8] edi +
mov [ebp+var_D0] edi +
mov [ebp+hMem] edi +
mov dword ptr [ebp+Buffer] edi +
mov [ebp+var_B1] 0 +
mov [ebp+var_B2] 0 +
mov [ebp+dwMessageId] 1F4Fh +
mov [ebp+var_F4] 1F50h +
mov [ebp+var_EC] 1F51h +
mov [ebp+var_E4] 1F52h +
mov [ebp+var_DC] 1F53h +
mov [ebp+var_D8] eax +
mov esi 800h +
push [ebp+edi*8+lpBuffer]  +
push [ebp+edi*8+dwMessageId]  +
push esi  +
call sub_100C9F1  +
add esp 0Ch +
test eax eax +
jz loc_1003B77  +
inc edi  +
cmp edi 5 +
jb loc_1003B09  +
push ebx  +
call sub_10032AA  +
mov edi eax +
test edi edi +
jl loc_1003C33  +
lea eax [ebp+TimeZoneInformation] +
push eax  +
call ds:GetTimeZoneInformation  +
sub eax 0 +
jz loc_1003BA2  +
dec eax  +
jz loc_1003B9A  +
dec eax  +
jz loc_1003B92  +
call ds:GetLastError  +
test eax eax +
jle loc_1003B66  +
and eax 0FFFFh +
or eax 80070000h +
push 6A8h  +
mov edi eax +
call sub_100C967  +
jmp loc_1003C33  +
call ds:GetLastError  +
test eax eax +
jle loc_1003B8B  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_1003C33  +
mov eax [ebp+var_CC] +
jmp loc_1003BA8  +
mov eax [ebp+var_C8] +
jmp loc_1003BA8  +
mov eax [ebp+var_D0] +
mov dword ptr [ebp+var_B8] eax +
mov ax [ebp+TimeZoneInformation.StandardDate.wMonth] +
xor ecx ecx +
mov ebx 1F4Eh +
lea edi [ebx-1] +
cmp cx ax +
jnz loc_1003CD5  +
mov eax [ebp+var_C4] +
mov dword ptr [ebp+Buffer] eax +
mov [ebp+var_B1] 1 +
mov cx [ebp+TimeZoneInformation.DaylightDate.wMonth] +
xor eax eax +
cmp ax cx +
jnz loc_1003D30  +
mov eax [ebp+var_C4] +
mov [ebp+hMem] eax +
mov [ebp+var_B2] 1 +
push [ebp+hMem]  +
lea eax [ebp+TimeZoneInformation.DaylightName] +
push [ebp+TimeZoneInformation.DaylightBias]  +
push eax  +
push dword ptr [ebp+Buffer]  +
lea eax [ebp+TimeZoneInformation.StandardName] +
push [ebp+TimeZoneInformation.StandardBias]  +
push eax  +
push [ebp+TimeZoneInformation.Bias]  +
push dword ptr [ebp+var_B8]  +
push 1F4Ch  +
push esi  +
call sub_100C98F  +
add esp 28h +
xor edi edi +
mov ebx ds:LocalFree +
xor esi esi +
mov eax [ebp+esi*8+lpBuffer] +
cmp dword ptr [eax] 0 +
jz loc_1003C4B  +
push dword ptr [eax]  +
call ebx  +
inc esi  +
cmp esi 5 +
jb loc_1003C3B  +
cmp [ebp+hMem] 0 +
jz loc_1003C6B  +
cmp [ebp+var_B2] 0 +
jnz loc_1003C6B  +
push [ebp+hMem]  +
call ebx  +
cmp dword ptr [ebp+Buffer] 0 +
jz loc_1003C85  +
cmp [ebp+var_B1] 0 +
jnz loc_1003C85  +
push dword ptr [ebp+Buffer]  +
call ebx  +
test edi edi +
jge loc_1003CC2  +
cmp edi 80070057h +
jz loc_1003CC2  +
lea eax [ebp+var_B8] +
push eax  +
push edi  +
call sub_100D212  +
test eax eax +
jl loc_1003CC2  +
push dword ptr [ebp+var_B8]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+var_B8]  +
call ebx  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 4  +
mov ecx dword ptr [ebp+TimeZoneInformation.StandardDate.wDay] +
cmp ax 0Ch +
ja loc_1003D19  +
lea edx [ecx-1] +
cmp dx 4 +
ja loc_1003D19  +
cmp [ebp+TimeZoneInformation.StandardDate.wDayOfWeek] 6 +
ja loc_1003D19  +
movzx edx [ebp+TimeZoneInformation.StandardDate.wDayOfWeek] +
push edx  +
movzx ecx cx +
movzx eax ax +
push ecx  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
push esi  +
call sub_100C9F1  +
add esp 18h +
test eax eax +
jnz loc_1003BD8  +
jmp loc_1003B77  +
movzx edx [ebp+TimeZoneInformation.StandardDate.wDayOfWeek] +
push edx  +
movzx ecx cx +
movzx eax ax +
push ecx  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
jmp loc_1003D03  +
mov eax dword ptr [ebp+TimeZoneInformation.DaylightDate.wDay] +
cmp cx 0Ch +
ja loc_1003D74  +
lea edx [eax-1] +
cmp dx 4 +
ja loc_1003D74  +
cmp [ebp+TimeZoneInformation.DaylightDate.wDayOfWeek] 6 +
ja loc_1003D74  +
movzx edx [ebp+TimeZoneInformation.DaylightDate.wDayOfWeek] +
movzx eax ax +
push edx  +
push eax  +
movzx eax cx +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push ebx  +
push esi  +
call sub_100C9F1  +
add esp 18h +
test eax eax +
jnz loc_1003BFA  +
jmp loc_1003B77  +
movzx edx [ebp+TimeZoneInformation.DaylightDate.wDayOfWeek] +
movzx eax ax +
push edx  +
push eax  +
movzx eax cx +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
jmp loc_1003D5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_1003DA0  +
cmp ecx [ebp+arg_0] +
jbe loc_1003DA5  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call sub_1003D90  +
test eax eax +
jl loc_1003DF6  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1003DDA  +
cmp [eax] bx +
jz loc_1003DD6  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1003DCC  +
test esi esi +
jnz loc_1003DDF  +
mov ebx 80070057h +
test edx edx +
jz loc_1003DF0  +
test ebx ebx +
jl loc_1003DED  +
sub ecx esi +
mov [edx] ecx +
jmp loc_1003DF0  +
and dword ptr [edx] 0 +
pop esi  +
mov eax ebx +
pop ebx  +
jmp loc_1003DF9  +
and dword ptr [edx] 0 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1003E37  +
cmp [ebp+arg_4] eax +
jz loc_1003E33  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1003E33  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1003E16  +
test esi esi +
jnz loc_1003E3F  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1003E4D  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1003E82  +
cmp eax esi +
ja loc_1003E82  +
jz loc_1003E87  +
jmp loc_1003E8F  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1003E98  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_1002F84 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ds:??1exception@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1003EA5  +
test byte ptr [ebp+8] 1 +
jz loc_1003EE9  +
push esi  +
call sub_100BAD7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push dword ptr [ebp+8]  +
call ds:??0exception@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1002F84 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ds:??1exception@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
cmp ax [esi] +
jz loc_1003F9F  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call ds:wcstoul  +
add esp 0Ch +
mov ecx esi +
lea edx [ecx+2] +
push edi  +
mov di [ecx] +
inc ecx  +
inc ecx  +
test di di +
jnz loc_1003F75  +
sub ecx edx +
sar ecx 1 +
lea ecx [esi+ecx*2] +
pop edi  +
cmp ecx [ebp+arg_0] +
jnz loc_1003F9F  +
cmp [ebp+arg_4] eax +
ja loc_1003F9F  +
cmp eax [ebp+arg_8] +
ja loc_1003F9F  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
xor eax eax +
jmp loc_1003FA4  +
mov eax 8007000Dh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1003FC4  +
cmp edx 7FFFFFFFh +
jbe loc_1003FC9  +
mov eax 80070057h +
test eax eax +
jl loc_1003FDF  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1003E02  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_1003FFF  +
cmp edx 7FFFFFFFh +
jbe loc_1004004  +
mov eax 80070057h +
test eax eax +
jl loc_100401A  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1003E02  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea edx [ebp+arg_0] +
call sub_1003DAE  +
test eax eax +
jl loc_1004059  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1003E02  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 7FFFFFFFh +
push edi  +
shr esi 1 +
push ebx  +
lea edx [ebp+arg_4] +
mov ecx esi +
call sub_1003DAE  +
test eax eax +
jl loc_100409E  +
mov eax [ebp+arg_4] +
push edi  +
mov edx esi +
sub edx eax +
lea ecx [ebx+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1003E02  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-28h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-11h] bl +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push offset aComputer  +
mov esi [ebp+8] +
push esi  +
call sub_1003218  +
test al al +
jz loc_10040EA  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aEvent  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1004156  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_1004385  +
push offset Name  +
push ebx  +
push 2  +
call ds:OpenEventW  +
mov [ebp-28h] eax +
cmp eax ebx +
jz loc_100413B  +
push eax  +
call ds:SetEvent  +
test eax eax +
jnz loc_100437F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100414F  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1004381  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aSoft  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1004177  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
xor edi edi +
jmp loc_10041DE  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aUpdate  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1004198  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
push 8  +
jmp loc_10041D8  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aRediscover  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10041B9  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
push 4  +
jmp loc_10041D8  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aForce  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10041DB  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
push 10h  +
pop edi  +
jmp loc_10041DE  +
xor edi edi +
inc edi  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push offset aNowait  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10041FF  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1003267  +
mov byte ptr [ebp-11h] 1 +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_1004385  +
push dword ptr [ebp-1Ch]  +
call sub_1003992  +
mov esi eax +
cmp esi ebx +
jl loc_1004385  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-24h] eax +
cmp eax ebx +
jz loc_100413B  +
push offset ProcName  +
push eax  +
call ds:GetProcAddress  +
mov ebx eax +
test ebx ebx +
jnz loc_1004266  +
call ds:GetLastError  +
test eax eax +
jle loc_100425D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
xor ebx ebx +
jmp loc_1004381  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-2Ch] eax +
xor esi esi +
and [ebp-4] esi +
cmp [ebp-1Ch] esi +
jz loc_100428F  +
push dword ptr [ebp-1Ch]  +
push 708h  +
call sub_100CAAA  +
pop ecx  +
jmp loc_1004299  +
push 713h  +
call sub_100CAAA  +
pop ecx  +
or edi 2 +
push edi  +
xor eax eax +
cmp [ebp-11h] al +
setz al  +
push eax  +
push dword ptr [ebp-1Ch]  +
call ebx  +
test eax eax +
jnz loc_10042B7  +
push 578h  +
jmp loc_10042E5  +
cmp eax 1 +
jnz loc_10042C3  +
push 514h  +
jmp loc_10042E5  +
cmp eax 2 +
jnz loc_10042CF  +
push 515h  +
jmp loc_10042E5  +
cmp eax 3 +
jnz loc_10042DB  +
push 516h  +
jmp loc_10042E5  +
cmp eax 4 +
jnz loc_10042F0  +
push 517h  +
call sub_100C967  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100436F  +
test eax eax +
jle loc_10042FE  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov [ebp-18h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100425F  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-3Ch] +
test eax eax +
jle loc_1004321  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-48h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100436C +
retn   +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-18h] 8007000Eh +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-38h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100436C +
retn   +
mov dword ptr [ebp-18h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100436C +
retn   +
mov esi [ebp-18h] +
push dword ptr [ebp-2Ch]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
xor ebx ebx +
test esi esi +
jl loc_1004385  +
xor esi esi +
cmp esi ebx +
jge loc_10043A8  +
lea eax [ebp-20h] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_10043A8  +
push dword ptr [ebp-20h]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
cmp [ebp-24h] ebx +
jz loc_10043B6  +
push dword ptr [ebp-24h]  +
call ds:FreeLibrary  +
cmp [ebp-28h] ebx +
jz loc_10043C4  +
push dword ptr [ebp-28h]  +
call ds:CloseHandle  +
cmp [ebp-20h] ebx +
jz loc_10043D2  +
push dword ptr [ebp-20h]  +
call ds:LocalFree  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10043F6  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10043FB  +
mov eax 80070057h +
test eax eax +
jl loc_1004414  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1003E59  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
push ebx  +
mov ebx dword ptr [ebp+arg_0] +
push esi  +
push edi  +
lea eax [ebp+var_C] +
push eax  +
xor edi edi +
lea eax [ebp+lpMachineName] +
push eax  +
push offset aComputer  +
push ebx  +
mov [ebp+var_4] 0 +
mov [ebp+var_6] 0 +
mov [ebp+var_5] 0 +
mov [ebp+var_1] 0 +
mov [ebp+var_2] 0 +
mov [ebp+var_3] 0 +
mov [ebp+cbData] edi +
mov [ebp+var_14] edi +
mov [ebp+hMem] edi +
mov [ebp+hKey] edi +
mov [ebp+var_18] edi +
mov [ebp+phkResult] edi +
mov [ebp+var_38] edi +
mov [ebp+hSCObject] edi +
call sub_1003218  +
test al al +
jz loc_100447F  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
jmp loc_1004482  +
mov [ebp+lpMachineName] edi +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push offset aUpdate  +
push ebx  +
call sub_1003218  +
test al al +
jz loc_10044A3  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
mov [ebp+var_6] 1 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aManualpeerlist  +
push ebx  +
call sub_1003218  +
test al al +
jz loc_1004510  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
mov eax [ebp+var_10] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10044C9  +
sub eax edx +
sar eax 1 +
lea esi [eax+eax+2] +
push esi  +
push 40h  +
mov [ebp+cbData] esi +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jnz loc_10044F8  +
mov esi 8007000Eh +
jmp loc_100492B  +
push [ebp+var_10]  +
push esi  +
push eax  +
call sub_1003FE8  +
mov esi eax +
cmp esi edi +
jl loc_100492B  +
mov [ebp+var_4] 1 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aSyncfromflags  +
push ebx  +
call sub_1003218  +
mov edi ds:_wcsicmp +
test al al +
jz loc_10045C7  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
and [ebp+var_14] 0 +
mov esi [ebp+var_10] +
mov [ebp+var_5] 0 +
push 2Ch  +
push esi  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_100455C  +
mov [ebp+var_5] 1 +
jmp loc_1004563  +
xor eax eax +
mov [ebx] ax +
inc ebx  +
inc ebx  +
xor eax eax +
cmp ax [esi] +
jz loc_1004606  +
push esi  +
push offset aManual  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004582  +
or [ebp+var_14] 1 +
jmp loc_10045B8  +
push esi  +
push offset aDomhier  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004596  +
or [ebp+var_14] 2 +
jmp loc_10045B8  +
push esi  +
push offset aAll  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10045AA  +
or [ebp+var_14] 3 +
jmp loc_10045B8  +
push esi  +
push offset aNo  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100462C  +
cmp [ebp+var_5] 0 +
mov esi ebx +
jz loc_1004545  +
mov ebx dword ptr [ebp+arg_0] +
mov [ebp+var_5] 1 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov esi offset aLocalclockdisp +
push esi  +
push ebx  +
call sub_1003218  +
test al al +
jz loc_1004648  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
lea eax [ebp+var_40] +
push eax  +
push 10h  +
push 0  +
push [ebp+var_10]  +
call sub_1003F50  +
test eax eax +
jge loc_1004644  +
push 10h  +
push 0  +
push esi  +
jmp loc_10046E3  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push offset aSyncfromflag_0  +
push 57Bh  +
call sub_100CA2C  +
add esp 10h +
jmp loc_1004745  +
push esi  +
push offset aS_  +
push 5DEh  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_1004745  +
mov [ebp+var_1] 1 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aReliable  +
push ebx  +
call sub_1003218  +
test al al +
jz loc_10046A6  +
push [ebp+var_10]  +
and [ebp+var_24] 0 +
push offset aYes  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100467C  +
mov [ebp+var_24] 5 +
jmp loc_1004699  +
push [ebp+var_10]  +
push offset aNo_0  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004693  +
mov [ebp+var_24] 0Ah +
cmp [ebp+var_24] 0 +
jz loc_10046A6  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
mov [ebp+var_2] 1 +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov edi offset aLargephaseoffs +
push edi  +
push ebx  +
call sub_1003218  +
test al al +
jz loc_1004707  +
push [ebp+var_C]  +
push ebx  +
call sub_1003267  +
lea eax [ebp+var_2C] +
push eax  +
mov esi 1D4C0h +
push esi  +
push 0  +
push [ebp+var_10]  +
call sub_1003F50  +
test eax eax +
jge loc_10046F7  +
push esi  +
push 0  +
push edi  +
push 1F56h  +
push 800h  +
call sub_100C98F  +
add esp 14h +
jmp loc_1004745  +
mov eax [ebp+var_2C] +
imul eax eax +
mov [ebp+var_2C] eax +
mov [ebp+var_3] 1 +
push ebx  +
call sub_10032AA  +
mov esi eax +
test esi esi +
jl loc_100492B  +
cmp [ebp+var_4] 0 +
jnz loc_1004765  +
cmp [ebp+var_5] 0 +
jnz loc_1004765  +
cmp [ebp+var_6] 0 +
jnz loc_100474F  +
cmp [ebp+var_1] 0 +
jnz loc_1004765  +
cmp [ebp+var_2] 0 +
jnz loc_1004765  +
cmp [ebp+var_3] 0 +
jnz loc_1004765  +
push 640h  +
call sub_100C967  +
mov esi 80070057h +
jmp loc_100492B  +
cmp [ebp+var_1] 0 +
jnz loc_1004765  +
cmp [ebp+var_2] 0 +
jnz loc_1004765  +
cmp [ebp+var_3] 0 +
jz loc_10048C1  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
push [ebp+lpMachineName]  +
call ds:RegConnectRegistryW  +
test eax eax +
jz loc_1004786  +
jg loc_100491B  +
jmp loc_1004925  +
cmp [ebp+var_4] 0 +
mov ebx ds:RegOpenKeyW +
mov esi ds:RegSetValueExW +
jnz loc_10047A2  +
cmp [ebp+var_5] 0 +
jz loc_100483A  +
lea eax [ebp+phkResult] +
push eax  +
push offset SubKey  +
push [ebp+hKey]  +
call ebx  +
test eax eax +
jnz loc_100477B  +
cmp [ebp+var_4] al +
jz loc_10047D0  +
push [ebp+cbData]  +
push [ebp+hMem]  +
push 1  +
push eax  +
push offset ValueName  +
push [ebp+phkResult]  +
call esi  +
test eax eax +
jnz loc_100477B  +
cmp [ebp+var_5] 0 +
jz loc_100483A  +
mov eax [ebp+var_14] +
sub eax 0 +
jz loc_1004806  +
dec eax  +
jz loc_10047FF  +
dec eax  +
jz loc_10047F8  +
dec eax  +
jz loc_10047F1  +
mov esi 80004001h +
jmp loc_100492B  +
mov edi offset aAllsync +
jmp loc_100480B  +
mov edi offset aNt5ds +
jmp loc_100480B  +
mov edi offset aNtp +
jmp loc_100480B  +
mov edi offset aNosync +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004810  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push edi  +
push 1  +
push 0  +
push offset aType  +
push [ebp+phkResult]  +
call esi  +
test eax eax +
jnz loc_100477B  +
cmp [ebp+var_1] 0 +
jnz loc_100484C  +
cmp [ebp+var_2] 0 +
jnz loc_100484C  +
cmp [ebp+var_3] 0 +
jz loc_10048C1  +
lea eax [ebp+var_18] +
push eax  +
push offset aSystemCurren_0  +
push [ebp+hKey]  +
call ebx  +
xor ebx ebx +
cmp eax ebx +
jnz loc_100477B  +
push 4  +
pop edi  +
cmp [ebp+var_1] bl +
jz loc_1004885  +
push edi  +
lea eax [ebp+var_40] +
push eax  +
push edi  +
push ebx  +
push offset aLocalclockdi_0  +
push [ebp+var_18]  +
call esi  +
cmp eax ebx +
jnz loc_100477B  +
cmp [ebp+var_2] bl +
jz loc_10048A3  +
push edi  +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
push offset aAnnounceflags  +
push [ebp+var_18]  +
call esi  +
cmp eax ebx +
jnz loc_100477B  +
cmp [ebp+var_3] bl +
jz loc_10048C1  +
push edi  +
lea eax [ebp+var_2C] +
push eax  +
push edi  +
push ebx  +
push offset aLargephaseof_0  +
push [ebp+var_18]  +
call esi  +
cmp eax ebx +
jnz loc_100477B  +
cmp [ebp+var_6] 0 +
jz loc_1004929  +
push 1  +
push offset DatabaseName  +
push [ebp+lpMachineName]  +
call ds:OpenSCManagerW  +
mov [ebp+var_38] eax +
test eax eax +
jnz loc_10048EB  +
call ds:GetLastError  +
test eax eax +
jmp loc_100477B  +
push 40h  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov [ebp+hSCObject] eax +
test eax eax +
jz loc_10048DE  +
lea ecx [ebp+ServiceStatus] +
push ecx  +
push 6  +
push eax  +
call ds:ControlService  +
test eax eax +
jnz loc_1004929  +
call ds:GetLastError  +
test eax eax +
jle loc_1004925  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100492B  +
xor esi esi +
cmp [ebp+hMem] 0 +
mov ebx ds:LocalFree +
jz loc_100493C  +
push [ebp+hMem]  +
call ebx  +
cmp [ebp+var_18] 0 +
mov edi ds:RegCloseKey +
jz loc_100494D  +
push [ebp+var_18]  +
call edi  +
cmp [ebp+phkResult] 0 +
jz loc_1004958  +
push [ebp+phkResult]  +
call edi  +
cmp [ebp+hKey] 0 +
jz loc_1004963  +
push [ebp+hKey]  +
call edi  +
cmp [ebp+hSCObject] 0 +
mov edi ds:CloseServiceHandle +
jz loc_1004974  +
push [ebp+hSCObject]  +
call edi  +
cmp [ebp+var_38] 0 +
jz loc_100497F  +
push [ebp+var_38]  +
call edi  +
test esi esi +
jge loc_10049B7  +
cmp esi 80070057h +
jz loc_10049B5  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_10049C3  +
push dword ptr [ebp+arg_0]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+arg_0]  +
call ebx  +
jmp loc_10049C3  +
test esi esi +
jnz loc_10049C3  +
push 578h  +
call sub_100C967  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10049E6  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10049EB  +
mov eax 80070057h +
test eax eax +
jl loc_1004A05  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1003E59  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 820h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_10] +
mov edx [ebp+arg_18] +
push esi  +
push edi  +
mov esi offset aNull +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
mov [ebp+hConsoleHandle] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_81C] ecx +
mov [ebp+var_818] edx +
movs   +
test eax eax +
jnz loc_1004A55  +
lea eax [ebp+var_14] +
test ecx ecx +
jnz loc_1004A62  +
lea ecx [ebp+var_14] +
mov [ebp+var_81C] ecx +
test edx edx +
jnz loc_1004A6F  +
lea ecx [ebp+var_14] +
mov [ebp+var_818] ecx +
push eax  +
push 400h  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_1003FAE  +
test eax eax +
jl loc_1004BA0  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004A92  +
sub eax edx +
sar eax 1 +
lea esi [ebp+eax*2+WideCharStr] +
mov edi esi +
lea eax [ebp+WideCharStr] +
sub edi eax +
sar edi 1 +
push ebx  +
cmp edi [ebp+arg_C] +
jnb loc_1004AE0  +
lea ebx [ebp+var_14] +
sub ebx esi +
push offset asc_1001620  +
mov eax ebx +
sar eax 1 +
push eax  +
push esi  +
call sub_1003FAE  +
test eax eax +
jl loc_1004B9F  +
inc esi  +
inc esi  +
dec ebx  +
dec ebx  +
inc edi  +
cmp edi [ebp+arg_C] +
jb loc_1004ABE  +
push [ebp+var_81C]  +
lea eax [ebp+var_14] +
sub eax esi +
sar eax 1 +
push eax  +
push esi  +
call sub_1003FAE  +
test eax eax +
jl loc_1004B9F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004B01  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2] +
mov edi esi +
lea eax [ebp+WideCharStr] +
sub edi eax +
sar edi 1 +
cmp edi [ebp+arg_14] +
jnb loc_1004B46  +
lea ebx [ebp+var_14] +
sub ebx esi +
push offset asc_1001620  +
mov eax ebx +
sar eax 1 +
push eax  +
push esi  +
call sub_1003FAE  +
test eax eax +
jl loc_1004B9F  +
inc esi  +
inc esi  +
dec ebx  +
dec ebx  +
inc edi  +
cmp edi [ebp+arg_14] +
jb loc_1004B28  +
push [ebp+var_818]  +
lea eax [ebp+var_14] +
sub eax esi +
sar eax 1 +
push eax  +
push esi  +
call sub_1003FAE  +
test eax eax +
jl loc_1004B9F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004B63  +
sub eax edx +
sar eax 1 +
lea eax [esi+eax*2] +
lea ecx [ebp+var_14] +
sub ecx eax +
push offset word_10012AC  +
sar ecx 1 +
push ecx  +
push eax  +
call sub_1003FAE  +
test eax eax +
jl loc_1004B9F  +
lea eax [ebp+WideCharStr] +
push eax  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+var_A0] +
mov [ebp+lpBuffer] eax +
lea eax [ebp+var_A8] +
mov [ebp+var_100] eax +
lea eax [ebp+var_7C] +
mov [ebp+var_F8] eax +
lea eax [ebp+var_90] +
mov [ebp+var_F0] eax +
lea eax [ebp+var_A4] +
mov [ebp+var_E8] eax +
lea eax [ebp+var_98] +
mov [ebp+var_E0] eax +
lea eax [ebp+var_B4] +
mov [ebp+var_D8] eax +
push ebx  +
lea eax [ebp+var_94] +
mov [ebp+var_D0] eax +
push esi  +
xor esi esi +
lea eax [ebp+var_B0] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_C8] eax +
lea eax [ebp+var_9C] +
mov [ebp+dwIndex] edi +
mov [ebp+var_58] esi +
mov dword ptr [ebp+var_6C] esi +
mov [ebp+cbMaxValueNameLen] esi +
mov [ebp+uBytes] esi +
mov [ebp+cValues] esi +
mov [ebp+Type] esi +
mov [ebp+cbValueName] esi +
mov [ebp+cbData] esi +
mov [ebp+var_64] esi +
mov [ebp+hKey] 80000002h +
mov [ebp+phkResult] esi +
mov [ebp+lpValueName] esi +
mov [ebp+var_44] esi +
mov [ebp+var_78] esi +
mov [ebp+lpMachineName] esi +
mov [ebp+hMem] esi +
mov [ebp+var_74] esi +
mov [ebp+var_A0] esi +
mov [ebp+var_A8] esi +
mov [ebp+var_7C] esi +
mov [ebp+var_90] esi +
mov [ebp+var_A4] esi +
mov [ebp+var_98] esi +
mov [ebp+var_B4] esi +
mov [ebp+var_94] esi +
mov [ebp+var_B0] esi +
mov [ebp+var_9C] esi +
mov [ebp+dwMessageId] 1F43h +
mov [ebp+var_104] 1F44h +
mov [ebp+var_FC] 1F45h +
mov [ebp+var_F4] 1F55h +
mov [ebp+var_EC] 1F46h +
mov [ebp+var_E4] 1F47h +
mov [ebp+var_DC] 1F48h +
mov [ebp+var_D4] 1F49h +
mov [ebp+var_CC] 1F4Ah +
mov [ebp+var_C4] 1F4Bh +
mov [ebp+var_C0] eax +
xor ebx ebx +
push [ebp+ebx*8+lpBuffer]  +
push [ebp+ebx*8+dwMessageId]  +
push 800h  +
call sub_100C9F1  +
add esp 0Ch +
test eax eax +
jz loc_1004D96  +
inc ebx  +
cmp ebx 0Ah +
jb loc_1004D2C  +
push 2Ah  +
pop ebx  +
lea eax [ebp+var_74] +
push eax  +
lea eax [ebp+var_78] +
push eax  +
push offset aSubkey  +
push edi  +
call sub_1003218  +
cmp al 1 +
jnz loc_1004DC7  +
push [ebp+var_74]  +
push edi  +
call sub_1003267  +
mov eax [ebp+var_78] +
cmp eax esi +
jnz loc_1004DB3  +
push 641h  +
call sub_100C967  +
mov dword ptr [ebp+var_6C] 1 +
mov edi 80070057h +
jmp loc_1005273  +
call ds:GetLastError  +
cmp eax esi +
jg loc_1004DA7  +
mov edi eax +
jmp loc_1005273  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1004DA0  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1004DB6  +
sub eax edx +
sar eax 1 +
lea ebx [eax+2Bh] +
lea eax [ebx+ebx] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+lpSubKey] eax +
cmp eax esi +
jz loc_1005332  +
push offset aSystemCurren_1  +
push ebx  +
push eax  +
call sub_1003FAE  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
cmp [ebp+var_78] esi +
jz loc_1004E27  +
push offset asc_10016E4  +
push ebx  +
push [ebp+lpSubKey]  +
call sub_1004023  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
push [ebp+var_78]  +
push ebx  +
push [ebp+lpSubKey]  +
call sub_1004023  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
lea eax [ebp+var_74] +
push eax  +
lea eax [ebp+lpMachineName] +
push eax  +
push offset aComputer  +
push [ebp+dwIndex]  +
call sub_1003218  +
cmp al 1 +
jnz loc_1004E78  +
push [ebp+var_74]  +
push [ebp+dwIndex]  +
call sub_1003267  +
lea eax [ebp+phkResult] +
push eax  +
push 80000002h  +
push [ebp+lpMachineName]  +
call ds:RegConnectRegistryW  +
cmp eax esi +
jz loc_1004E72  +
jg loc_1005317  +
jmp loc_1005321  +
mov eax [ebp+phkResult] +
mov [ebp+hKey] eax +
push [ebp+dwIndex]  +
call sub_10032AA  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
lea eax [ebp+var_64] +
push eax  +
push 1  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jnz loc_1004E67  +
push esi  +
push esi  +
lea eax [ebp+uBytes] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+var_64]  +
call ds:RegQueryInfoKeyW  +
cmp eax esi +
jnz loc_1004E67  +
cmp [ebp+cValues] esi +
jnz loc_1004ED1  +
mov edi 80070103h +
jmp loc_1005265  +
add [ebp+cbMaxValueNameLen] 2 +
mov eax [ebp+cbMaxValueNameLen] +
mov edi ds:LocalAlloc +
add eax eax +
push eax  +
push 40h  +
call edi  +
mov [ebp+lpValueName] eax +
cmp eax esi +
jz loc_1005332  +
push [ebp+uBytes]  +
push 40h  +
call edi  +
mov [ebp+var_44] eax +
cmp eax esi +
jz loc_1005332  +
mov edi [ebp+cbMaxValueNameLen] +
add edi 3 +
push 0FFFFFFF5h  +
mov [ebp+var_BC] edi +
lea ebx [edi+14h] +
call ds:GetStdHandle  +
mov [ebp+hConsoleHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1004F2E  +
call ds:GetLastError  +
cmp eax esi +
jmp loc_1004E67  +
push offset word_10012AC  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
push [ebp+var_7C]  +
push ebx  +
push [ebp+var_A8]  +
push edi  +
push [ebp+var_A0]  +
push esi  +
push [ebp+hConsoleHandle]  +
call sub_1004A0C  +
mov eax [ebp+var_7C] +
xor ebx ebx +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_1004F5D  +
sub eax ecx +
sar eax 1 +
lea eax [eax+edi+17h] +
test eax eax +
jbe loc_1004F9D  +
push offset WideCharStr  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
mov eax [ebp+var_7C] +
inc ebx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1004F87  +
sub eax edx +
sar eax 1 +
lea eax [edi+eax+17h] +
cmp ebx eax +
jb loc_1004F73  +
push offset asc_10016D8  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
mov [ebp+dwIndex] esi +
cmp [ebp+cValues] esi +
jbe loc_1005256  +
mov eax [ebp+cbMaxValueNameLen] +
mov ecx [ebp+uBytes] +
mov edi [ebp+var_44] +
mov [ebp+cbValueName] eax +
add eax eax +
push eax  +
push esi  +
push [ebp+lpValueName]  +
mov [ebp+cbData] ecx +
call memset  +
push [ebp+uBytes]  +
push esi  +
push edi  +
call memset  +
add esp 18h +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push esi  +
lea eax [ebp+cbValueName] +
push eax  +
push [ebp+lpValueName]  +
push [ebp+dwIndex]  +
push [ebp+var_64]  +
call ds:RegEnumValueW  +
cmp eax esi +
jnz loc_1005315  +
mov eax [ebp+cbValueName] +
cmp eax [ebp+cbMaxValueNameLen] +
ja loc_1005328  +
mov eax [ebp+cbData] +
cmp eax [ebp+uBytes] +
ja loc_1005328  +
mov ecx [ebp+Type] +
dec ecx  +
jz loc_100520A  +
dec ecx  +
jz loc_1005202  +
dec ecx  +
jz loc_1005178  +
dec ecx  +
jz loc_100514A  +
sub ecx 3 +
jz loc_100506B  +
mov eax [ebp+var_B0] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_9C] +
jmp loc_1005170  +
xor eax eax +
mov [ebp+var_3C] esi +
mov word ptr [ebp+var_C] ax +
mov word ptr [ebp+var_C+2] ax +
mov [ebp+var_8] ax +
mov ecx edi +
cmp ax [edi] +
jz loc_10050BE  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_1005088  +
mov edx [ebp+var_3C] +
sub eax edi +
sar eax 1 +
lea eax [edx+eax*2+6] +
mov [ebp+var_3C] eax +
mov eax ecx +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di si +
jnz loc_10050A5  +
sub eax edx +
sar eax 1 +
lea ecx [ecx+eax*2+2] +
xor eax eax +
cmp ax [ecx] +
jnz loc_1005083  +
add [ebp+var_3C] 2 +
push [ebp+var_3C]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_1005332  +
mov ebx [ebp+var_44] +
mov [ebp+var_58] 1 +
jmp loc_1005138  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+var_3C]  +
push [ebp+hMem]  +
call sub_1004064  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
push ebx  +
push [ebp+var_3C]  +
push [ebp+hMem]  +
call sub_1004064  +
mov edi eax +
cmp edi esi +
jl loc_1005265  +
push 2Ch  +
pop eax  +
mov word ptr [ebp+var_C] ax +
push 20h  +
pop eax  +
mov word ptr [ebp+var_C+2] ax +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1005126  +
sub eax edx +
sar eax 1 +
lea ebx [ebx+eax*2+2] +
xor eax eax +
cmp ax [ebx] +
jnz loc_10050E4  +
mov eax [ebp+var_B4] +
jmp loc_1005213  +
cmp eax 4 +
jb loc_1005328  +
push 0Ah  +
lea eax [ebp+var_34] +
push eax  +
push dword ptr [edi]  +
call ds:_ltow  +
mov eax [ebp+var_A4] +
mov [ebp+var_3C] eax +
add esp 0Ch +
lea eax [ebp+var_34] +
mov [ebp+hMem] eax +
jmp loc_1005216  +
lea ebx [eax+eax] +
mov eax [ebp+var_90] +
mov [ebp+var_3C] eax +
lea edi [ebx+ebx] +
lea eax [edi+2] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax esi +
jz loc_1005332  +
mov eax [ebp+var_44] +
mov [ebp+var_8C] eax +
mov eax [ebp+hMem] +
lea ecx [edi+eax] +
mov [ebp+var_58] 1 +
mov [ebp+var_68] eax +
cmp eax ecx +
jnb loc_1005216  +
mov [ebp+hKey] edi +
inc ebx  +
mov eax [ebp+var_8C] +
movzx eax byte ptr [eax] +
push eax  +
push offset a02x  +
push ebx  +
push [ebp+var_68]  +
call sub_10049D1  +
mov edi eax +
add esp 10h +
cmp edi esi +
jl loc_1005265  +
add [ebp+var_68] 4 +
sub [ebp+hKey] 4 +
mov ecx [ebp+var_68] +
mov eax [ebp+hKey] +
dec ebx  +
dec ebx  +
inc [ebp+var_8C]  +
add eax ecx +
cmp ecx eax +
jb loc_10051BF  +
jmp loc_1005216  +
mov eax [ebp+var_94] +
jmp loc_1005210  +
mov eax [ebp+var_98] +
mov [ebp+hMem] edi +
mov [ebp+var_3C] eax +
push [ebp+hMem]  +
mov eax [ebp+var_BC] +
lea ecx [eax+14h] +
push ecx  +
push [ebp+var_3C]  +
push eax  +
push [ebp+lpValueName]  +
push esi  +
push [ebp+hConsoleHandle]  +
call sub_1004A0C  +
cmp [ebp+var_58] esi +
jz loc_1005244  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov [ebp+var_58] esi +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
mov [ebp+hMem] esi +
cmp eax [ebp+cValues] +
jb loc_1004FB6  +
push offset word_10012AC  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
xor edi edi +
cmp [ebp+lpSubKey] esi +
jz loc_1005273  +
push [ebp+lpSubKey]  +
call ds:LocalFree  +
xor ebx ebx +
mov eax [ebp+ebx*8+lpBuffer] +
cmp [eax] esi +
jz loc_1005288  +
push dword ptr [eax]  +
call ds:LocalFree  +
inc ebx  +
cmp ebx 0Ah +
jb loc_1005275  +
mov ebx ds:RegCloseKey +
cmp [ebp+var_64] esi +
jz loc_100529E  +
push [ebp+var_64]  +
call ebx  +
cmp [ebp+phkResult] esi +
jz loc_10052A8  +
push [ebp+phkResult]  +
call ebx  +
mov ebx ds:LocalFree +
cmp [ebp+lpValueName] esi +
jz loc_10052B8  +
push [ebp+lpValueName]  +
call ebx  +
cmp [ebp+var_44] esi +
jz loc_10052C2  +
push [ebp+var_44]  +
call ebx  +
cmp [ebp+var_58] esi +
jz loc_10052D1  +
cmp [ebp+hMem] esi +
jz loc_10052D1  +
push [ebp+hMem]  +
call ebx  +
cmp edi esi +
jge loc_1005302  +
cmp dword ptr [ebp+var_6C] esi +
jnz loc_1005302  +
lea eax [ebp+var_6C] +
push eax  +
push edi  +
call sub_100D212  +
test eax eax +
jl loc_1005302  +
push dword ptr [ebp+var_6C]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+var_6C]  +
call ebx  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 4  +
jle loc_1005321  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_1005265  +
mov edi 8000FFFFh +
jmp loc_1005265  +
mov edi 8007000Eh +
jmp loc_1005265  +
***
call __EH_prolog3_catch_GS  +
mov esi [ebp+8] +
xor ebx ebx +
mov [ebp-238h] ebx +
mov [ebp-234h] ebx +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
cmp eax 0FFFFFFFFh +
jz loc_1005596  +
push ebx  +
push offset aEnable  +
push esi  +
call sub_1003185  +
cmp al 1 +
jnz loc_1005849  +
mov [ebp-240h] ebx +
mov [ebp-230h] ebx +
mov [ebp-228h] ebx +
mov [ebp-250h] ebx +
mov [ebp-24Ch] ebx +
mov [ebp-221h] bl +
mov [ebp-248h] bl +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-240h] +
push eax  +
push offset aFile  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1005833  +
push dword ptr [ebp-22Ch]  +
push esi  +
call sub_1003267  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-230h] +
push eax  +
push offset aEntries  +
push esi  +
call sub_1003218  +
test al al +
jz loc_100581D  +
push dword ptr [ebp-22Ch]  +
push esi  +
call sub_1003267  +
push offset a0123456789  +
push dword ptr [ebp-230h]  +
call ds:wcsspn  +
pop ecx  +
pop ecx  +
mov ecx [ebp-230h] +
lea edi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
cmp dx bx +
jnz loc_1005426  +
sub ecx edi +
sar ecx 1 +
cmp eax ecx +
jz loc_100547A  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push dword ptr [ebp-230h]  +
push offset aEntriesS  +
push 57Eh  +
call sub_100CA2C  +
add esp 14h +
mov esi 80070057h +
jmp loc_1005A8B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1005A40  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
push offset aSize  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10057F7  +
push dword ptr [ebp-22Ch]  +
push esi  +
call sub_1003267  +
lea eax [ebp-250h] +
push eax  +
push 0FFFFFFFFh  +
push ebx  +
push dword ptr [ebp-228h]  +
call sub_1003F50  +
cmp eax ebx +
jge loc_10054DF  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push dword ptr [ebp-228h]  +
push offset aSizeS  +
jmp loc_1005452  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
push offset aFlags  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1005547  +
push dword ptr [ebp-22Ch]  +
push esi  +
call sub_1003267  +
lea eax [ebp-24Ch] +
push eax  +
push 2  +
push ebx  +
push dword ptr [ebp-228h]  +
call sub_1003F50  +
cmp eax ebx +
jge loc_1005540  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push dword ptr [ebp-228h]  +
push offset aFlagsS  +
jmp loc_1005452  +
mov byte ptr [ebp-221h] 1 +
lea eax [ebp-22Ch] +
push eax  +
push ebx  +
push offset aTruncate  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1005571  +
push dword ptr [ebp-22Ch]  +
push esi  +
call sub_1003267  +
mov byte ptr [ebp-248h] 1 +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_1005A44  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-234h] eax +
cmp eax ebx +
jnz loc_10055A9  +
call ds:GetLastError  +
cmp eax ebx +
jg loc_1005469  +
jmp loc_1005473  +
push offset aW32timesetconf  +
push dword ptr [ebp-234h]  +
mov esi ds:GetProcAddress +
call esi  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jnz loc_10055CE  +
call ds:GetLastError  +
cmp eax edi +
jmp loc_100559E  +
push offset aW32timelog  +
push dword ptr [ebp-234h]  +
call esi  +
mov [ebp-23Ch] eax +
cmp eax edi +
jz loc_10055C4  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-244h] eax +
mov [ebp-4] edi +
cmp [ebp-240h] edi +
jz loc_100568B  +
push edi  +
lea eax [ebp-21Ch] +
push eax  +
mov esi 104h +
push esi  +
push dword ptr [ebp-240h]  +
call ds:GetFullPathNameW  +
cmp eax edi +
jz loc_100574F  +
cmp eax esi +
jnb loc_100574F  +
push dword ptr [ebp-248h]  +
lea eax [ebp-21Ch] +
push eax  +
call sub_10038C9  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi edi +
jl loc_100576B  +
lea eax [ebp-21Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100565B  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
push 1  +
push 2  +
call ebx  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi edi +
jl loc_100576B  +
cmp [ebp-230h] edi +
jz loc_10056CB  +
mov eax [ebp-230h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100569C  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push dword ptr [ebp-230h]  +
push 1  +
push 3  +
call ebx  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi edi +
jl loc_100576B  +
push 4  +
pop edi  +
push edi  +
lea eax [ebp-250h] +
push eax  +
push edi  +
push edi  +
call ebx  +
mov esi eax +
mov [ebp-220h] esi +
test esi esi +
jl loc_100576B  +
cmp byte ptr [ebp-221h] 0 +
jz loc_100570C  +
push edi  +
lea eax [ebp-24Ch] +
push eax  +
push edi  +
push 5  +
call ebx  +
mov esi eax +
mov [ebp-220h] esi +
test esi esi +
jl loc_100576B  +
push 0  +
call sub_1003992  +
mov [ebp-220h] eax +
test eax eax +
jl loc_100573E  +
push 715h  +
call sub_100CAAA  +
pop ecx  +
push 0  +
call dword ptr [ebp-23Ch]  +
test eax eax +
jnz loc_1005757  +
push 578h  +
call sub_100C967  +
xor esi esi +
mov [ebp-220h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_10057EC  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1005763  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov [ebp-220h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1005A40  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-254h] +
test eax eax +
jle loc_100578C  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-220h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-260h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10057E6 +
retn   +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-220h] 8007000Eh +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-288h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10057E6 +
retn   +
mov dword ptr [ebp-220h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10057E6 +
retn   +
mov esi [ebp-220h] +
push dword ptr [ebp-244h]  +
jmp loc_1005A06  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push offset aSize_0  +
push 57Bh  +
call sub_100CA2C  +
add esp 10h +
jmp loc_100545F  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push offset aEntries_0  +
jmp loc_100580B  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
push offset aFile_0  +
jmp loc_100580B  +
push ebx  +
push offset aDisable  +
push esi  +
call sub_1003185  +
push esi  +
cmp al 1 +
jnz loc_1005A15  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_1005A44  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov edi eax +
mov [ebp-234h] edi +
cmp edi ebx +
jz loc_1005596  +
push offset aW32timedeletec  +
push edi  +
mov esi ds:GetProcAddress +
call esi  +
mov [ebp-228h] eax +
cmp eax ebx +
jz loc_1005596  +
push offset aW32timelog  +
push edi  +
call esi  +
mov [ebp-244h] eax +
cmp eax ebx +
jz loc_1005596  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-23Ch] eax +
push 4  +
pop edi  +
mov [ebp-4] edi +
push 2  +
call dword ptr [ebp-228h]  +
mov esi eax +
mov [ebp-220h] esi +
mov ebx 80070002h +
cmp esi ebx +
jz loc_10058F3  +
test esi esi +
jl loc_100576B  +
push 3  +
call dword ptr [ebp-228h]  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi ebx +
jz loc_100590F  +
test esi esi +
jl loc_100576B  +
push edi  +
call dword ptr [ebp-228h]  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi ebx +
jz loc_100592A  +
test esi esi +
jl loc_100576B  +
push 5  +
call dword ptr [ebp-228h]  +
mov esi eax +
mov [ebp-220h] esi +
cmp esi ebx +
jz loc_1005946  +
test esi esi +
jl loc_100576B  +
xor esi esi +
push esi  +
call sub_1003992  +
mov [ebp-220h] eax +
cmp eax esi +
jl loc_100597C  +
push 717h  +
call sub_100CAAA  +
pop ecx  +
push esi  +
call dword ptr [ebp-244h]  +
cmp eax esi +
jnz loc_1005757  +
push 578h  +
call sub_100C967  +
mov [ebp-220h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1005A00  +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-264h] +
test eax eax +
jle loc_10059A0  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-220h] eax +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-270h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10059FA +
retn   +
mov byte ptr [ebp-4] 7 +
mov dword ptr [ebp-220h] 8007000Eh +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-27Ch] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10059FA +
retn   +
mov dword ptr [ebp-220h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10059FA +
retn   +
mov esi [ebp-220h] +
push dword ptr [ebp-23Ch]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
test esi esi +
pop ecx  +
jl loc_1005A44  +
xor esi esi +
jmp loc_1005A75  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_1005A44  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
pop ecx  +
pop ecx  +
push 57Bh  +
call sub_100C967  +
mov esi 80070057h +
test esi esi +
jge loc_1005A75  +
cmp esi 80070057h +
jz loc_1005A75  +
lea eax [ebp-238h] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_1005A75  +
push dword ptr [ebp-238h]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
xor ebx ebx +
cmp [ebp-234h] ebx +
jz loc_1005A8B  +
push dword ptr [ebp-234h]  +
call ds:FreeLibrary  +
cmp [ebp-238h] ebx +
jz loc_1005A9F  +
push dword ptr [ebp-238h]  +
call ds:LocalFree  +
mov eax esi +
call sub_100BFCF  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_1003EF5  +
push offset dword_100DED8  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+WideCharStr] +
push 400h  +
push eax  +
call sub_10043E1  +
test eax eax +
jl loc_1005B15  +
lea eax [ebp+WideCharStr] +
push eax  +
push esi  +
call sub_1003553  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push dword ptr [ebp+dwMessageId]  +
xor esi esi +
push offset a0x08x  +
push [ebp+uID]  +
mov [ebp+hMem] esi +
call sub_100CA2C  +
add esp 0Ch +
cmp dword ptr [ebp+dwMessageId] esi +
jz loc_1005BA3  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov edi eax +
cmp edi esi +
jz loc_1005BAD  +
push esi  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push dword ptr [ebp+dwMessageId]  +
push edi  +
push 0BFFh  +
call ds:FormatMessageW  +
cmp [ebp+hMem] esi +
jz loc_1005B90  +
push [ebp+hMem]  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_1005B9A  +
push 0C4Fh  +
call sub_100C8E3  +
push edi  +
call ds:FreeLibrary  +
jmp loc_1005BAD  +
push 0C4Eh  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push dword ptr [ebp+dwMessageId]  +
xor esi esi +
push offset a0x08x  +
push [ebp+uID]  +
mov [ebp+hMem] esi +
call sub_100CA2C  +
add esp 0Ch +
cmp dword ptr [ebp+dwMessageId] esi +
jz loc_1005C25  +
push esi  +
push esi  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
push dword ptr [ebp+dwMessageId]  +
push esi  +
push 13FFh  +
call ds:FormatMessageW  +
cmp [ebp+hMem] esi +
jz loc_1005C1E  +
push [ebp+hMem]  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push [ebp+hMem]  +
call ds:LocalFree  +
jmp loc_1005C2F  +
push 0C4Fh  +
jmp loc_1005C2A  +
push 0C4Eh  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+arg_C] +
push ebx  +
xor ebx ebx +
mov dword ptr [ebp+hMem] ebx +
mov [ebp+var_8] ebx +
mov [eax] ebx +
cmp [ebp+FileTime.dwLowDateTime] ebx +
jnz loc_1005C6F  +
cmp [ebp+FileTime.dwHighDateTime] ebx +
jnz loc_1005C6F  +
xor eax eax +
jmp loc_1005DAD  +
push esi  +
push edi  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jnz loc_1005C9E  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1005C97  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1005D77  +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_1005C83  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
mov [ebp+cchDate] eax +
cmp eax ebx +
jz loc_1005C83  +
mov edi ds:LocalAlloc +
add eax eax +
push eax  +
push 40h  +
call edi  +
mov dword ptr [ebp+hMem] eax +
cmp eax ebx +
jnz loc_1005CE9  +
mov esi 8007000Eh +
jmp loc_1005D7B  +
push [ebp+cchDate]  +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
push esi  +
call ds:GetDateFormatW  +
mov [ebp+cchDate] eax +
cmp eax ebx +
jz loc_1005C83  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
push esi  +
call ds:GetTimeFormatW  +
mov [ebp+cchTime] eax +
cmp eax ebx +
jz loc_1005C83  +
add eax eax +
push eax  +
push 40h  +
call edi  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_1005CDF  +
push [ebp+cchTime]  +
push eax  +
push ebx  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
push esi  +
call ds:GetTimeFormatW  +
cmp eax ebx +
jz loc_1005C83  +
mov ecx [ebp+cchDate] +
lea esi [eax+ecx+1] +
lea eax [esi+esi] +
push eax  +
push 40h  +
call edi  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
cmp eax ebx +
jz loc_1005CDF  +
push [ebp+var_8]  +
push dword ptr [ebp+hMem]  +
push offset aSS  +
push esi  +
push eax  +
call sub_10049D1  +
mov esi eax +
add esp 14h +
cmp esi ebx +
jl loc_1005D7B  +
xor esi esi +
cmp esi ebx +
jge loc_1005D8D  +
mov edi [ebp+arg_C] +
mov eax [edi] +
cmp eax ebx +
jz loc_1005D8D  +
push eax  +
call ds:LocalFree  +
mov [edi] ebx +
cmp dword ptr [ebp+hMem] ebx +
jz loc_1005D9B  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_8] ebx +
jz loc_1005DA9  +
push [ebp+var_8]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor esi esi +
push esi  +
push 989680h  +
push eax  +
push edi  +
mov [ebp+hMem] esi +
mov [ebp+var_30] eax +
call __aulldvrm  +
push esi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ebx +
call __aulldvrm  +
push esi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ebx +
call __aulldvrm  +
push esi  +
push 18h  +
push edx  +
push eax  +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ebx +
mov [ebp+arg_4] eax +
mov [ebp+arg_8] edx +
call __aulldvrm  +
mov dword ptr [ebp+var_2C] eax +
lea eax [ebp+hMem] +
push eax  +
push [ebp+var_30]  +
mov [ebp+var_20] ebx +
mov ebx [ebp+arg_C] +
push edi  +
push [ebp+arg_0]  +
mov [ebp+var_24] ecx +
mov [ebp+var_28] edx +
mov [ebx] esi +
call sub_1005C48  +
mov edi eax +
cmp edi esi +
jl loc_1005E7F  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebx] eax +
cmp eax esi +
jnz loc_1005E54  +
mov edi 8007000Eh +
jmp loc_1005E7F  +
push [ebp+hMem]  +
push [ebp+var_C]  +
push [ebp+var_14]  +
push [ebp+var_1C]  +
push [ebp+var_24]  +
push dword ptr [ebp+var_2C]  +
push offset aU02u02u02u_07u  +
push 200h  +
push eax  +
call sub_10049D1  +
mov edi eax +
add esp 24h +
cmp edi esi +
jge loc_1005E8E  +
mov eax [ebx] +
cmp eax esi +
jz loc_1005E8E  +
push eax  +
call ds:LocalFree  +
mov [ebx] esi +
cmp [ebp+hMem] esi +
jz loc_1005E9C  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
push 400h  +
xor esi esi +
push 40h  +
mov [ebx] esi +
call ds:LocalAlloc  +
mov edi eax +
mov [ebx] edi +
cmp edi esi +
jnz loc_1005ED5  +
mov edi 8007000Eh +
jmp loc_1005F30  +
mov eax [ebp+arg_8] +
cmp eax esi +
mov ecx [ebp+arg_4] +
jg loc_1005F03  +
jl loc_1005EE5  +
cmp ecx esi +
jnb loc_1005F03  +
neg ecx  +
push esi  +
adc eax esi +
push 989680h  +
neg eax  +
push eax  +
push ecx  +
call __aulldvrm  +
push ebx  +
push ecx  +
push edx  +
push eax  +
push offset a02i64u_07i64us  +
jmp loc_1005F19  +
push esi  +
push 989680h  +
push eax  +
push ecx  +
call __aulldvrm  +
push ebx  +
push ecx  +
push edx  +
push eax  +
push offset a02i64u_07i64_0  +
push 200h  +
push edi  +
call sub_10049D1  +
mov edi eax +
add esp 1Ch +
cmp edi esi +
jge loc_1005F3F  +
mov ebx [ebp+arg_C] +
mov eax [ebx] +
cmp eax esi +
jz loc_1005F3F  +
push eax  +
call ds:LocalFree  +
mov [ebx] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1005EAA  +
test eax eax +
jl loc_1005F80  +
push dword ptr [ebp+hMem]  +
push offset aS_1  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 0Ch +
cmp dword ptr [ebp+hMem] 0 +
jz locret_1005F8F  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push 400h  +
xor edi edi +
push 40h  +
mov [ebp+hMem] edi +
mov [esi] edi +
call ds:LocalAlloc  +
mov ebx ds:LocalFree +
mov [esi] eax +
cmp eax edi +
jnz loc_1005FCB  +
mov edi 8007000Eh +
jmp loc_100602E  +
cmp [ebp+arg_4] edi +
jnz loc_1005FE5  +
cmp [ebp+arg_8] edi +
jnz loc_1005FE5  +
lea eax [ebp+hMem] +
push eax  +
push 0BBDh  +
call sub_100CB63  +
jmp loc_1005FFE  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_100D30E  +
lea ecx [ebp+hMem] +
push ecx  +
push edx  +
push eax  +
push [ebp+arg_0]  +
call sub_1005DB7  +
mov edi eax +
test edi edi +
jl loc_100602E  +
push [ebp+hMem]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_10035AA  +
push edx  +
push eax  +
push offset a0x016i64xS  +
push 200h  +
push dword ptr [esi]  +
call sub_10049D1  +
mov edi eax +
add esp 18h +
test edi edi +
jge loc_1006032  +
push dword ptr [esi]  +
call ebx  +
cmp [ebp+hMem] 0 +
jz loc_100603D  +
push [ebp+hMem]  +
call ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
and [ebp+hMem] 0 +
push esi  +
push edi  +
call sub_1003581  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
push 400h  +
push 40h  +
mov edi eax +
call ds:LocalAlloc  +
mov [esi] eax +
test eax eax +
jnz loc_1006083  +
mov [ebp+arg_8] 8007000Eh +
jmp loc_10060DA  +
test edi edi +
jnz loc_1006097  +
lea eax [ebp+hMem] +
push eax  +
push 0BBDh  +
call sub_100CB63  +
jmp loc_10060AD  +
push [ebp+arg_4]  +
call sub_100D3F4  +
lea ecx [ebp+hMem] +
push ecx  +
push edx  +
push eax  +
push [ebp+arg_0]  +
call sub_1006626  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_10060DA  +
push [ebp+hMem]  +
movzx eax di +
push eax  +
shr edi 10h +
push edi  +
push offset a0x04x_04xS  +
push 200h  +
push dword ptr [esi]  +
call sub_10049D1  +
add esp 18h +
mov [ebp+arg_8] eax +
test eax eax +
jge loc_10060EA  +
mov eax [esi] +
test eax eax +
jz loc_10060EA  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
cmp [ebp+hMem] 0 +
pop edi  +
pop esi  +
jz loc_10060FB  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+arg_8] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
and [ebp+hMem] 0 +
push esi  +
push edi  +
call sub_1003581  +
mov esi [ebp+arg_8] +
and dword ptr [esi] 0 +
push 400h  +
push 40h  +
mov edi eax +
call ds:LocalAlloc  +
mov [esi] eax +
test eax eax +
jnz loc_100613F  +
mov [ebp+arg_8] 8007000Eh +
jmp loc_1006196  +
test edi edi +
jnz loc_1006153  +
lea eax [ebp+hMem] +
push eax  +
push 0BBDh  +
call sub_100CB63  +
jmp loc_1006169  +
push [ebp+arg_4]  +
call sub_100D460  +
lea ecx [ebp+hMem] +
push ecx  +
push edx  +
push eax  +
push [ebp+arg_0]  +
call sub_1005EAA  +
mov [ebp+arg_8] eax +
test eax eax +
jl loc_1006196  +
push [ebp+hMem]  +
movzx eax di +
push eax  +
shr edi 10h +
push edi  +
push offset a0x04x_04xS  +
push 200h  +
push dword ptr [esi]  +
call sub_10049D1  +
add esp 18h +
mov [ebp+arg_8] eax +
test eax eax +
jge loc_10061A6  +
mov eax [esi] +
test eax eax +
jz loc_10061A6  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
cmp [ebp+hMem] 0 +
pop edi  +
pop esi  +
jz loc_10061B7  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+arg_8] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+arg_4] +
push esi  +
push offset aU  +
push 9E7h  +
call sub_100CA2C  +
add esp 0Ch +
test esi esi +
jnz loc_10061EA  +
push 578h  +
jmp loc_100621F  +
cmp esi 1 +
jnz loc_10061F6  +
push 514h  +
jmp loc_100621F  +
cmp esi 2 +
jnz loc_1006202  +
push 515h  +
jmp loc_100621F  +
cmp esi 3 +
jnz loc_100620E  +
push 516h  +
jmp loc_100621F  +
cmp esi 4 +
jnz loc_100621A  +
push 517h  +
jmp loc_100621F  +
push 0BC2h  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+arg_4]  +
push offset aU  +
push 9E6h  +
call sub_100CA2C  +
add esp 0Ch +
test dword ptr [ebp+arg_4] 200h +
jz loc_1006267  +
push 0C27h  +
jmp loc_1006279  +
test [ebp+arg_4] 40h +
jz loc_1006274  +
push 0C26h  +
jmp loc_1006279  +
push 0C30h  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx dword ptr [ebp+arg_4] +
push esi  +
push edi  +
push ebx  +
push offset aU  +
push 9E4h  +
call sub_100CA2C  +
mov edi [ebp+arg_0] +
add esp 0Ch +
mov esi offset asc_1001620 +
test bl 2 +
jz loc_10062D4  +
push 0C22h  +
call sub_100C8E3  +
push esi  +
push edi  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
test bl 1 +
jz loc_10062EC  +
push 0C21h  +
call sub_100C8E3  +
push esi  +
push edi  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
test bl 4 +
jz loc_1006304  +
push 0C23h  +
call sub_100C8E3  +
push esi  +
push edi  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1006312  +
push 0C30h  +
call sub_100C8E3  +
push offset asc_100188C  +
push edi  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+arg_4] +
push esi  +
push offset aU  +
push 9E5h  +
call sub_100CA2C  +
add esp 0Ch +
test esi esi +
jnz loc_1006352  +
push 0C1Ch  +
jmp loc_1006387  +
cmp esi 1 +
jnz loc_100635E  +
push 0C1Dh  +
jmp loc_1006387  +
cmp esi 2 +
jnz loc_100636A  +
push 0C1Eh  +
jmp loc_1006387  +
cmp esi 3 +
jnz loc_1006376  +
push 0C1Fh  +
jmp loc_1006387  +
cmp esi 4 +
jnz loc_1006382  +
push 0C20h  +
jmp loc_1006387  +
push 0BC2h  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+arg_4] +
push esi  +
push offset aU  +
push 9CEh  +
call sub_100CA2C  +
add esp 0Ch +
test esi esi +
jnz loc_10063CC  +
push 0BC2h  +
jmp loc_1006419  +
cmp esi 1 +
jnz loc_10063D8  +
push 0BC3h  +
jmp loc_1006419  +
cmp esi 2 +
jnz loc_10063E4  +
push 0BC4h  +
jmp loc_1006419  +
cmp esi 3 +
jnz loc_10063F0  +
push 0BC5h  +
jmp loc_1006419  +
cmp esi 4 +
jnz loc_10063FC  +
push 0BC6h  +
jmp loc_1006419  +
cmp esi 5 +
jnz loc_1006408  +
push 0BC7h  +
jmp loc_1006419  +
cmp esi 6 +
jnz loc_1006414  +
push 0BC8h  +
jmp loc_1006419  +
push 0BC9h  +
call sub_100C8E3  +
push offset asc_100188C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hMem] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi-2] +
cmp eax 0Dh +
ja loc_10064B4  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_1006469  +
mov esi 8007000Eh +
jmp loc_100649D  +
xor edx edx +
inc edx  +
mov ecx edi +
shl edx cl +
push edx  +
push offset aDs  +
push 200h  +
push eax  +
call sub_10049D1  +
add esp 10h +
mov esi eax +
test esi esi +
jl loc_100649D  +
push [ebp+hMem]  +
push edi  +
push 9CDh  +
call sub_100CAAA  +
add esp 0Ch +
mov esi eax +
cmp [ebp+hMem] 0 +
jz loc_10064AC  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
lea eax [ebp+hMem] +
push eax  +
test edi edi +
jnz loc_10064C3  +
push 0BBDh  +
jmp loc_10064C8  +
push 0BBEh  +
call sub_100CB63  +
jmp loc_1006484  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov ecx ebx +
mov [ebp+var_18] ebx +
mov [ebp+hMem] edi +
mov dword ptr [ebp+var_14] edi +
call sub_1003581  +
mov esi eax +
cmp esi edi +
jnz loc_100650F  +
lea eax [ebp+hMem] +
push eax  +
push 0BBDh  +
jmp loc_1006581  +
cmp [ebp+arg_8] edi +
jz loc_10065C6  +
cmp [ebp+arg_8] 1 +
jz loc_10065C6  +
cmp [ebp+arg_C] 0 +
jnz loc_1006578  +
lea eax [ebp+var_14] +
push eax  +
push 0BCBh  +
call sub_100CB63  +
test eax eax +
jl loc_100659B  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_100659B  +
movzx ecx byte ptr [ebp+var_18+3] +
push ecx  +
movzx ecx byte ptr [ebp+var_18+2] +
push ecx  +
movzx ecx bh +
push ecx  +
movzx ecx bl +
push ecx  +
push dword ptr [ebp+var_14]  +
push offset aSD_D_D_D  +
push 200h  +
push eax  +
call sub_10049D1  +
add esp 20h +
jmp loc_1006586  +
lea eax [ebp+hMem] +
push eax  +
push 0BCCh  +
call sub_100CB63  +
test eax eax +
jl loc_100659B  +
push [ebp+hMem]  +
push esi  +
push 9CAh  +
call sub_100CAAA  +
add esp 0Ch +
mov esi ds:LocalFree +
cmp [ebp+hMem] edi +
jz loc_10065AB  +
push [ebp+hMem]  +
call esi  +
cmp dword ptr [ebp+var_14] edi +
jz loc_10065B5  +
push dword ptr [ebp+var_14]  +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 10h  +
mov al byte ptr [ebp+var_18+2] +
mov [ebp+var_A] al +
mov al byte ptr [ebp+var_18+3] +
mov [ebp+var_9] al +
lea eax [ebp+var_14] +
push eax  +
push 0BCAh  +
mov [ebp+var_C] bl +
mov [ebp-0Bh] bh +
mov [ebp+var_8] 0 +
call sub_100CB63  +
test eax eax +
jl loc_100659B  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jz loc_100659B  +
lea ecx [ebp+var_C] +
push ecx  +
push dword ptr [ebp+var_14]  +
push offset aSS_0  +
push 200h  +
push eax  +
call sub_10049D1  +
add esp 14h +
jmp loc_1006586  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
and dword ptr [esi] 0 +
push edi  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
mov [esi] edi +
test edi edi +
jnz loc_100664F  +
mov edi 8007000Eh +
jmp loc_1006680  +
push ebx  +
push 0  +
push 989680h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call __aulldvrm  +
push ebx  +
push ecx  +
push edx  +
push eax  +
push offset aI64u_07i64us  +
push 200h  +
push edi  +
call sub_10049D1  +
add esp 1Ch +
mov edi eax +
pop ebx  +
test edi edi +
jge loc_1006690  +
mov eax [esi] +
test eax eax +
jz loc_1006690  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
push 400h  +
xor esi esi +
push 40h  +
mov [ebx] esi +
call ds:LocalAlloc  +
mov edi eax +
mov [ebx] edi +
cmp edi esi +
jnz loc_10066C8  +
mov edi 8007000Eh +
jmp loc_1006737  +
mov eax [ebp+arg_8] +
cmp eax esi +
mov ecx [ebp+arg_4] +
jg loc_100670A  +
jl loc_10066D8  +
cmp ecx esi +
jnb loc_100670A  +
neg ecx  +
push esi  +
adc eax esi +
push 989680h  +
neg eax  +
push eax  +
push ecx  +
call __aulldvrm  +
push ebx  +
push ecx  +
push edx  +
push eax  +
push offset aI64u_07i64us_0  +
push 200h  +
push edi  +
call sub_10049D1  +
mov edi eax +
add esp 1Ch +
cmp edi esi +
jl loc_1006734  +
jmp loc_1006730  +
push esi  +
push 989680h  +
push eax  +
push ecx  +
call __aulldvrm  +
push ebx  +
push ecx  +
push edx  +
push eax  +
push offset aI64u_07i64us  +
push 200h  +
push edi  +
call sub_10049D1  +
add esp 1Ch +
mov edi eax +
cmp edi esi +
jge loc_1006746  +
mov ebx [ebp+arg_C] +
mov eax [ebx] +
cmp eax esi +
jz loc_1006746  +
push eax  +
call ds:LocalFree  +
mov [ebx] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+28h] +
push edi  +
test eax eax +
jnz loc_100676A  +
mov eax offset aNull_0 +
mov edi [ebp+arg_0] +
push eax  +
push offset aPeerS  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi]  +
push offset aUlsizeD  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+4]  +
push offset aUlresolveattem  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push offset aU64timeremaini  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push offset aU64lastsuccess  +
push edi  +
call sub_1005AD3  +
add esp 44h +
push dword ptr [esi+18h]  +
push offset aUllastsyncerro  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+1Ch]  +
push offset aUllastsyncer_0  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+20h]  +
push offset aUlvaliddatacou  +
push edi  +
call sub_1005AD3  +
push dword ptr [esi+24h]  +
push offset aUlauthtypemsgi  +
push edi  +
call sub_1005AD3  +
movzx eax byte ptr [esi+2Ch] +
push eax  +
push offset aUlmodeD  +
push edi  +
call sub_1005AD3  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
push offset aUlstratumD  +
push edi  +
call sub_1005AD3  +
movzx eax byte ptr [esi+2Eh] +
add esp 48h +
push eax  +
push offset aUlreachability  +
push edi  +
call sub_1005AD3  +
movzx eax byte ptr [esi+2Fh] +
push eax  +
push offset aUlpeerpollinte  +
push edi  +
call sub_1005AD3  +
movzx eax byte ptr [esi+30h] +
push eax  +
push offset aUlhostpollinte  +
push edi  +
call sub_1005AD3  +
add esp 24h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push offset aUlsizeDUlerror  +
push [ebp+arg_0]  +
call sub_1005AD3  +
xor ebx ebx +
add esp 18h +
xor edi edi +
cmp [esi+0Ch] ebx +
jbe loc_10068A7  +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
mov eax [esi+10h] +
pop ecx  +
pop ecx  +
add eax ebx +
push eax  +
push [ebp+arg_0]  +
call sub_1006754  +
inc edi  +
add ebx 38h +
cmp edi [esi+0Ch] +
jb loc_1006881  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp+hMem] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+28h] +
push edi  +
test eax eax +
jnz loc_10068CF  +
mov eax offset aNull_0 +
push eax  +
push offset aS_2  +
push 9F7h  +
call sub_100CA2C  +
mov ebx [ebp+arg_0] +
add esp 0Ch +
cmp byte ptr [esi+2Eh] 0 +
setnz al  +
movzx eax al +
push eax  +
push ebx  +
call sub_10036AF  +
mov edi offset word_10012AC +
push edi  +
push ebx  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ebx  +
call sub_1006626  +
test eax eax +
jl loc_1006A3E  +
push dword ptr [ebp+hMem]  +
push 9FAh  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_100693E  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
and dword ptr [ebp+hMem] 0 +
movzx eax byte ptr [esi+2Ch] +
push eax  +
push ebx  +
call sub_10063A5  +
push edi  +
push ebx  +
call sub_1005AD3  +
movzx eax byte ptr [esi+2Dh] +
pop ecx  +
pop ecx  +
push eax  +
push ebx  +
call sub_10036DE  +
push 0A03h  +
call sub_100C8E3  +
movzx eax byte ptr [esi+2Fh] +
push eax  +
push ebx  +
call sub_1006437  +
push 0A04h  +
call sub_100C8E3  +
movzx eax byte ptr [esi+30h] +
push eax  +
push ebx  +
call sub_1006437  +
cmp [ebp+arg_8] 0 +
jz loc_1006A3E  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_1005C48  +
test eax eax +
jl loc_1006A3E  +
push dword ptr [ebp+hMem]  +
push 9FBh  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_10069C7  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
push dword ptr [esi+18h]  +
push 9FCh  +
push ebx  +
call sub_1005BC7  +
push edi  +
push ebx  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push dword ptr [esi+1Ch]  +
push 9FDh  +
push ebx  +
call sub_1005B27  +
push edi  +
push ebx  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push dword ptr [esi+24h]  +
push 9FFh  +
push ebx  +
call sub_1005B27  +
push edi  +
push ebx  +
call sub_1005AD3  +
push dword ptr [esi+4]  +
mov edi offset aD +
push edi  +
push 9F9h  +
call sub_100CA2C  +
push dword ptr [esi+20h]  +
push edi  +
push 9FEh  +
call sub_100CA2C  +
movzx eax byte ptr [esi+2Eh] +
push eax  +
push edi  +
push 0A00h  +
call sub_100CA2C  +
add esp 2Ch +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+0Ch]  +
push offset aD  +
push 9F6h  +
call sub_100CA2C  +
xor ebx ebx +
add esp 0Ch +
xor edi edi +
cmp [esi+0Ch] ebx +
jbe loc_1006A9C  +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
mov eax [esi+10h] +
pop ecx  +
pop ecx  +
push dword ptr [ebp+arg_8]  +
add eax ebx +
push eax  +
push [ebp+arg_0]  +
call sub_10068B3  +
inc edi  +
add ebx 38h +
cmp edi [esi+0Ch] +
jb loc_1006A73  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jbe loc_1006AF7  +
push esi  +
mov esi [ebp+arg_4] +
add esi 8 +
mov eax [esi+4] +
test eax eax +
jz loc_1006ADB  +
push eax  +
push dword ptr [esi]  +
push dword ptr [esi-4]  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
jmp loc_1006AF0  +
push dword ptr [esi]  +
push dword ptr [esi-4]  +
push offset aSS_1  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 10h +
add esi 10h +
dec edi  +
jnz loc_1006ABC  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+4]  +
xor edi edi +
push ebx  +
mov dword ptr [ebp+hMem] edi +
call sub_1003653  +
push dword ptr [esi+8]  +
push ebx  +
call sub_10036DE  +
push dword ptr [esi+30h]  +
push ebx  +
call sub_1003745  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
push ebx  +
call sub_100669D  +
test eax eax +
jl loc_1006D5F  +
push dword ptr [ebp+hMem]  +
push 9C8h  +
call sub_100CAAA  +
mov ebx ds:LocalFree +
pop ecx  +
pop ecx  +
cmp dword ptr [ebp+hMem] edi +
jz loc_1006B6A  +
push dword ptr [ebp+hMem]  +
call ebx  +
mov dword ptr [ebp+hMem] edi +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+28h]  +
push [ebp+arg_0]  +
call sub_1006626  +
test eax eax +
jl loc_1006D5F  +
push dword ptr [ebp+hMem]  +
push 9C9h  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
cmp dword ptr [ebp+hMem] edi +
jz loc_1006BA0  +
push dword ptr [ebp+hMem]  +
call ebx  +
mov dword ptr [ebp+hMem] edi +
mov ecx [esi+44h] +
mov eax [esi+10h] +
shr ecx 2 +
and cl 1 +
movzx ecx cl +
push ecx  +
push dword ptr [esi+8]  +
push eax  +
push [ebp+arg_0]  +
call sub_10064D4  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push [ebp+arg_0]  +
call sub_1005C48  +
test eax eax +
jl loc_1006D5F  +
cmp dword ptr [ebp+hMem] edi +
jnz loc_1006BE9  +
lea eax [ebp+hMem] +
push eax  +
push 0BBDh  +
call sub_100CB63  +
push dword ptr [ebp+hMem]  +
push 9FBh  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
cmp dword ptr [ebp+hMem] edi +
jz loc_1006C05  +
push dword ptr [ebp+hMem]  +
call ebx  +
mov dword ptr [ebp+hMem] edi +
mov eax [esi+34h] +
cmp eax edi +
jnz loc_1006C11  +
mov eax offset aNull_0 +
push eax  +
push 9CCh  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
push dword ptr [esi+0Ch]  +
push [ebp+arg_0]  +
call sub_1006437  +
cmp [ebp+arg_8] 0 +
mov edi offset word_10012AC +
jz loc_1006D3E  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push [ebp+arg_0]  +
call sub_100669D  +
test eax eax +
jl loc_1006D5F  +
push dword ptr [ebp+hMem]  +
push 9E2h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_1006C7B  +
push dword ptr [ebp+hMem]  +
call ebx  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push 0  +
push dword ptr [esi+48h]  +
push [ebp+arg_0]  +
call sub_1006626  +
test eax eax +
jl loc_1006D5F  +
push dword ptr [ebp+hMem]  +
push 9E3h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_1006CB2  +
push dword ptr [ebp+hMem]  +
call ebx  +
and dword ptr [ebp+hMem] 0 +
push dword ptr [esi+40h]  +
push [ebp+arg_0]  +
call sub_100632B  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push dword ptr [esi+44h]  +
push [ebp+arg_0]  +
call sub_1006296  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push dword ptr [esi+4Ch]  +
push [ebp+arg_0]  +
call sub_100623D  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
push dword ptr [esi+50h]  +
push [ebp+arg_0]  +
call sub_10061C3  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+5Ch]  +
push dword ptr [esi+58h]  +
push [ebp+arg_0]  +
call sub_1006626  +
test eax eax +
jl loc_1006D5F  +
push dword ptr [ebp+hMem]  +
push 9E8h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_1006D3E  +
push dword ptr [ebp+hMem]  +
call ebx  +
and dword ptr [ebp+hMem] 0 +
mov eax [esi+60h] +
test eax eax +
jz loc_1006D54  +
push dword ptr [ebp+arg_8]  +
push eax  +
push dword ptr [esi+64h]  +
push [ebp+arg_0]  +
call sub_1006AA8  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_1006D7C  +
mov eax offset aNull_0 +
push eax  +
push offset aS_2  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi offset Buffer +
mov ebx offset aSUS +
jnz loc_1006DB7  +
cmp dword ptr [esi+30h] 0 +
jz loc_1006DDA  +
mov eax [esi+30h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+8]  +
push offset aCrosssitesyncf  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006DE0  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_1006E03  +
mov eax [esi+2Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+4]  +
push offset aAllownonstanda  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006E09  +
cmp dword ptr [esi+34h] 0 +
jz loc_1006E2C  +
mov eax [esi+34h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+0Ch]  +
push offset aResolvepeerbac  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006E32  +
cmp dword ptr [esi+38h] 0 +
jz loc_1006E55  +
mov eax [esi+38h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+10h]  +
push offset aResolvepeerb_0  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006E5B  +
cmp dword ptr [esi+3Ch] 0 +
jz loc_1006E7E  +
mov eax [esi+3Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+14h]  +
push offset aCompatibilityf  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006E84  +
cmp dword ptr [esi+40h] 0 +
jz loc_1006EA7  +
mov eax [esi+40h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+18h]  +
push offset aEventlogflags  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006EAD  +
cmp dword ptr [esi+44h] 0 +
jz loc_1006ED0  +
mov eax [esi+44h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+1Ch]  +
push offset aLargesampleske  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006ED6  +
cmp dword ptr [esi+48h] 0 +
jz loc_1006EF9  +
mov eax [esi+48h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+20h]  +
push offset aSpecialpollint  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006EFF  +
cmp dword ptr [esi+4Ch] 0 +
jz loc_1006F30  +
mov eax [esi+24h] +
test eax eax +
jnz loc_1006F0B  +
mov eax offset aNull_1 +
mov ecx [esi+4Ch] +
shl ecx 8 +
add ecx edi +
push ecx  +
push eax  +
push offset aType  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006F36  +
cmp dword ptr [esi+50h] 0 +
jz loc_1006F61  +
mov eax [esi+28h] +
test eax eax +
jnz loc_1006F42  +
mov eax offset aNull_1 +
mov ecx [esi+50h] +
shl ecx 8 +
add ecx edi +
push ecx  +
push eax  +
push offset ValueName  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
mov eax [esi+54h] +
test eax eax +
jz loc_1006F77  +
push dword ptr [ebp+arg_8]  +
push eax  +
push dword ptr [esi+58h]  +
push [ebp+arg_0]  +
call sub_1006AA8  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov ebx offset Buffer +
mov edi offset aSUS +
jnz loc_1006FA4  +
cmp dword ptr [esi+8] 0 +
jz loc_1006FC7  +
mov eax [esi+8] +
shl eax 8 +
add eax ebx +
push eax  +
push dword ptr [esi+4]  +
push offset aAllownonstanda  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1006FCD  +
cmp dword ptr [esi+10h] 0 +
jz loc_1006FEA  +
mov eax [esi+10h] +
shl eax 8 +
add eax ebx +
push eax  +
push dword ptr [esi+0Ch]  +
push offset aEventlogflags  +
push edi  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
mov eax [esi+14h] +
test eax eax +
jz loc_1007000  +
push dword ptr [ebp+arg_8]  +
push eax  +
push dword ptr [esi+18h]  +
push [ebp+arg_0]  +
call sub_1006AA8  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov ebx offset aSUS +
mov edi offset Buffer +
jnz loc_100702D  +
cmp dword ptr [esi+18h] 0 +
jz loc_1007054  +
mov eax [esi+18h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+10h]  +
push offset dword_1001F30  +
push offset aSSS_0  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100705A  +
cmp dword ptr [esi+14h] 0 +
jz loc_1007081  +
mov eax [esi+14h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+0Ch]  +
push offset aDllname  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007087  +
cmp dword ptr [esi+20h] 0 +
jz loc_10070AA  +
mov eax [esi+20h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+8]  +
push offset aEnabled  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10070B0  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_10070CD  +
mov eax [esi+1Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+4]  +
push offset aInputprovider  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_1007177  +
mov esi [esi+10h] +
push 4  +
mov ecx offset aNtpclient +
mov eax esi +
pop edi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1007109  +
test dx dx +
jz loc_1007105  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1007109  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_10070E5  +
xor eax eax +
jmp loc_100710E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1007124  +
push dword ptr [ebp+arg_8]  +
mov eax [ebx+8] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call sub_1006D96  +
jmp loc_1007168  +
mov ecx offset ValueName +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100714F  +
test dx dx +
jz loc_100714B  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100714F  +
add eax edi +
add ecx edi +
test dx dx +
jnz loc_100712B  +
xor eax eax +
jmp loc_1007154  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1007177  +
push dword ptr [ebp+arg_8]  +
mov eax [ebx+8] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call sub_1006F83  +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0BCFh  +
call sub_100C967  +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
cmp [ebp+arg_8] 0 +
mov esi [ebp+arg_4] +
pop ecx  +
pop ecx  +
mov edi offset Buffer +
mov ebx offset aSUS +
jnz loc_10071BD  +
cmp dword ptr [esi+28h] 0 +
jz loc_10071E0  +
mov eax [esi+28h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+8]  +
push offset aEventlogflags  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10071E6  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_1007209  +
mov eax [esi+2Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+0Ch]  +
push offset aAnnounceflags  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100720F  +
cmp dword ptr [esi+30h] 0 +
jz loc_1007232  +
mov eax [esi+30h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+10h]  +
push offset aTimejumpaudito  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007238  +
cmp dword ptr [esi+34h] 0 +
jz loc_100725B  +
mov eax [esi+34h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+14h]  +
push offset aMinpollinterva  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007261  +
cmp dword ptr [esi+38h] 0 +
jz loc_1007284  +
mov eax [esi+38h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+18h]  +
push offset aMaxpollinterva  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100728A  +
cmp dword ptr [esi+3Ch] 0 +
jz loc_10072AD  +
mov eax [esi+3Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+1Ch]  +
push offset aMaxnegphasecor  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10072B3  +
cmp dword ptr [esi+40h] 0 +
jz loc_10072D6  +
mov eax [esi+40h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+20h]  +
push offset aMaxposphasecor  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10072DC  +
cmp dword ptr [esi+44h] 0 +
jz loc_10072F9  +
mov eax [esi+44h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+24h]  +
push offset aMaxallowedphas  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
cmp [ebp+arg_8] 0 +
pop ecx  +
pop ecx  +
jnz loc_1007314  +
cmp dword ptr [esi+6Ch] 0 +
jz loc_1007337  +
mov eax [esi+6Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+4Ch]  +
push offset aFrequencycorre  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100733D  +
cmp dword ptr [esi+70h] 0 +
jz loc_1007360  +
mov eax [esi+70h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+50h]  +
push offset aPolladjustfact  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007366  +
cmp dword ptr [esi+74h] 0 +
jz loc_1007389  +
mov eax [esi+74h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+54h]  +
push offset aLargephaseof_0  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100738F  +
cmp dword ptr [esi+78h] 0 +
jz loc_10073B2  +
mov eax [esi+78h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+58h]  +
push offset aSpikewatchperi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10073B8  +
cmp dword ptr [esi+7Ch] 0 +
jz loc_10073DB  +
mov eax [esi+7Ch] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+5Ch]  +
push offset aLocalclockdi_0  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10073E4  +
cmp dword ptr [esi+80h] 0 +
jz loc_100740A  +
mov eax [esi+80h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+60h]  +
push offset aHoldperiod  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007413  +
cmp dword ptr [esi+84h] 0 +
jz loc_1007439  +
mov eax [esi+84h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+64h]  +
push offset aPhasecorrectra  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_1007442  +
cmp dword ptr [esi+88h] 0 +
jz loc_1007462  +
mov eax [esi+88h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+68h]  +
push offset aUpdateinterval  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
push offset word_10012AC  +
push [ebp+arg_0]  +
call sub_1005AD3  +
cmp [ebp+arg_8] 0 +
pop ecx  +
pop ecx  +
jnz loc_1007480  +
cmp dword ptr [esi+0A0h] 0 +
jz loc_10074AD  +
mov eax [esi+0A0h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+90h]  +
push offset aFilelogname  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10074B6  +
cmp dword ptr [esi+0A4h] 0 +
jz loc_10074E3  +
mov eax [esi+0A4h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+94h]  +
push offset aFilelogentries  +
push offset aSSS  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_10074EC  +
cmp dword ptr [esi+0A8h] 0 +
jz loc_1007515  +
mov eax [esi+0A8h] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+98h]  +
push offset aFilelogsize  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
cmp [ebp+arg_8] 0 +
jnz loc_100751E  +
cmp dword ptr [esi+0ACh] 0 +
jz loc_1007541  +
mov eax [esi+0ACh] +
shl eax 8 +
add eax edi +
push eax  +
push dword ptr [esi+9Ch]  +
push offset aFilelogflags  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
mov ebx offset word_10012AC +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
mov eax [esi+0B8h] +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100756D  +
push dword ptr [ebp+arg_8]  +
push eax  +
push dword ptr [esi+0BCh]  +
push [ebp+arg_0]  +
call sub_1006AA8  +
push 0BDAh  +
call sub_100C967  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
and [ebp+arg_4] 0 +
lea edi [esi+0B0h] +
cmp dword ptr [edi] 0 +
pop ecx  +
pop ecx  +
jbe loc_10075B2  +
push dword ptr [ebp+arg_8]  +
mov eax [esi+0B4h] +
mov ecx [ebp+arg_4] +
push dword ptr [eax+ecx*4]  +
push [ebp+arg_0]  +
call sub_100700C  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [edi] +
jb loc_1007591  +
push ebx  +
push [ebp+arg_0]  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and dword ptr [ebp+hMem] 0 +
push ebx  +
push esi  +
push 0BCDh  +
call sub_100C967  +
mov esi [ebp+arg_4] +
movzx eax byte ptr [esi] +
mov ebx [ebp+arg_0] +
shr eax 6 +
push eax  +
push ebx  +
call sub_1003653  +
movzx eax byte ptr [esi] +
shr eax 3 +
and eax 7 +
push eax  +
push 9D5h  +
call sub_100CAAA  +
movzx eax byte ptr [esi] +
pop ecx  +
pop ecx  +
and eax 7 +
push eax  +
push ebx  +
call sub_10063A5  +
push offset word_10012AC  +
push ebx  +
call sub_1005AD3  +
movzx eax byte ptr [esi+1] +
pop ecx  +
pop ecx  +
push eax  +
push ebx  +
call sub_10036DE  +
movsx eax byte ptr [esi+2] +
push eax  +
push ebx  +
call sub_1006437  +
movsx eax byte ptr [esi+3] +
push eax  +
push ebx  +
call sub_1003745  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+4]  +
push ebx  +
call sub_1006107  +
test eax eax +
jl loc_10078F3  +
push edi  +
push dword ptr [ebp+hMem]  +
push 9C8h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
mov edi ds:LocalFree +
pop ecx  +
pop ecx  +
jz loc_100767F  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+8]  +
push ebx  +
call sub_100604B  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9C9h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_10076B2  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
mov al [esi] +
and al 38h +
cmp al 20h +
sbb al al +
inc al  +
movzx eax al +
push eax  +
movzx eax byte ptr [esi+1] +
push eax  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_10064D4  +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_1005F98  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9CBh  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_1007704  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push ebx  +
call sub_1005F98  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9CFh  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_100773A  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+24h]  +
push dword ptr [esi+20h]  +
push ebx  +
call sub_1005F98  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9D0h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_1007770  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+28h]  +
push ebx  +
call sub_1005F98  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9D1h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_10077A6  +
push dword ptr [ebp+hMem]  +
call edi  +
and dword ptr [ebp+hMem] 0 +
cmp [ebp+arg_8] 0 +
jnz loc_10077B6  +
cmp [ebp+arg_C] 0 +
jz loc_10078E5  +
push 0BCEh  +
call sub_100C967  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_100D30E  +
push dword ptr [esi+24h]  +
mov [ebp+var_10] eax +
push dword ptr [esi+20h]  +
mov [ebp+var_C] edx +
call sub_100D30E  +
push dword ptr [esi+2Ch]  +
mov edi eax +
push dword ptr [esi+28h]  +
mov ebx edx +
call sub_100D30E  +
push [ebp+arg_C]  +
mov esi eax +
push [ebp+arg_8]  +
mov [ebp+var_14] edx +
call sub_100D37B  +
lea ecx [ebp+hMem] +
push ecx  +
push edx  +
push eax  +
push [ebp+arg_0]  +
call sub_1005F98  +
test eax eax +
jl loc_10078F2  +
push dword ptr [ebp+hMem]  +
push 9D2h  +
call sub_100CAAA  +
cmp dword ptr [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_100782F  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_14] +
mov ecx [ebp+arg_C] +
mov edx esi +
sub edx edi +
sbb eax ebx +
mov dword ptr [ebp+hMem] eax +
mov eax [ebp+arg_8] +
sub eax [ebp+var_10] +
sbb ecx [ebp+var_C] +
sub eax edx +
sbb ecx dword ptr [ebp+hMem] +
mov [ebp+var_8] eax +
push ecx  +
push eax  +
push 9D3h  +
mov dword ptr [ebp+hMem] ecx +
call sub_100CAAA  +
push offset asc_1002164  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
push dword ptr [ebp+hMem]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_1005F4D  +
push offset asc_100215C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
sub esi [ebp+arg_8] +
mov eax [ebp+var_14] +
sbb eax [ebp+arg_C] +
sub edi [ebp+var_10] +
pop ecx  +
sbb ebx [ebp+var_C] +
pop ecx  +
push 0  +
add edi esi +
push 2  +
adc ebx eax +
push ebx  +
push edi  +
call __alldiv  +
mov edi edx +
mov esi eax +
push edi  +
push esi  +
push 9D4h  +
call sub_100CAAA  +
push offset asc_1002164  +
push [ebp+arg_0]  +
call sub_1005AD3  +
add esp 14h +
push edi  +
push esi  +
push [ebp+arg_0]  +
call sub_1005F4D  +
push offset asc_100215C  +
push [ebp+arg_0]  +
call sub_1005AD3  +
mov ebx [ebp+arg_0] +
pop ecx  +
pop ecx  +
push offset word_10012AC  +
push ebx  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetStdHandle +
xor esi esi +
push 0FFFFFFF5h  +
mov dword ptr [ebp+hMem] esi +
call edi  +
mov dword ptr [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100793D  +
call ds:GetLastError  +
cmp eax esi +
jg loc_1007931  +
mov ebx eax +
jmp loc_1007A71  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100792A  +
mov ebx [ebp+arg_0] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx-1] +
cmp eax edx +
jz loc_100796C  +
cmp eax ecx +
jnz loc_1007958  +
push 57Bh  +
jmp loc_100795D  +
push 57Dh  +
call sub_100C967  +
mov ebx 80070057h +
jmp loc_1007A71  +
push esi  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebx] +
push dword ptr [ecx+eax*4]  +
mov [ebp+arg_0] esi +
call sub_1003535  +
mov ecx [ebx] +
mov [ebp+FileTime.dwLowDateTime] eax +
mov eax [ebx+8] +
lea eax [ecx+eax*4] +
mov ecx [ebp+arg_0] +
mov [ebp+FileTime.dwHighDateTime] edx +
cmp ecx [eax] +
jz loc_1007A7A  +
mov ecx [eax] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_10] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx si +
jnz loc_10079A1  +
sub eax [ebp+var_10] +
sar eax 1 +
lea eax [ecx+eax*2] +
cmp [ebp+arg_0] eax +
jnz loc_1007A7A  +
push esi  +
push 989680h  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
call __aulldvrm  +
push esi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_14] ecx +
mov [ebp+var_10] ebx +
call __aulldvrm  +
push esi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_C] ecx +
mov dword ptr [ebp+var_8] ebx +
call __aulldvrm  +
push esi  +
push 18h  +
push edx  +
push eax  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] ebx +
call __aulldvrm  +
push [ebp+var_14]  +
mov [ebp+var_28] ebx +
push [ebp+var_C]  +
mov [ebp+var_28] edx +
push [ebp+var_24]  +
push ecx  +
push eax  +
push 1F42h  +
push 800h  +
call sub_100C98F  +
add esp 1Ch +
push 0FFFFFFF5h  +
call edi  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1007920  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push edi  +
call sub_1005C48  +
mov ebx eax +
cmp ebx esi +
jl loc_1007A63  +
push dword ptr [ebp+hMem]  +
push offset aS_1  +
push edi  +
call sub_1005AD3  +
push offset word_10012AC  +
push edi  +
call sub_1005AD3  +
add esp 14h +
xor ebx ebx +
cmp dword ptr [ebp+hMem] esi +
jz loc_1007A71  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
push 57Eh  +
call sub_100C967  +
mov eax [ebx+8] +
mov ecx [ebx] +
push dword ptr [ecx+eax*4]  +
push offset aS_1  +
push dword ptr [ebp+var_8]  +
call sub_1005AD3  +
push offset word_10012AC  +
push dword ptr [ebp+var_8]  +
call sub_1005AD3  +
add esp 14h +
jmp loc_1007962  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
mov esi ds:GetStdHandle +
push edi  +
xor edi edi +
push 0FFFFFFF5h  +
mov dword ptr [ebp+hMem] edi +
call esi  +
mov dword ptr [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1007AF2  +
call ds:GetLastError  +
cmp eax edi +
jg loc_1007AE6  +
mov ebx eax +
jmp loc_1007C6F  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1007ADF  +
mov ebx [ebp+arg_0] +
mov ecx [ebx+4] +
mov eax [ebx+8] +
lea edx [ecx-1] +
cmp eax edx +
jz loc_1007B21  +
cmp eax ecx +
jnz loc_1007B0D  +
push 57Bh  +
jmp loc_1007B12  +
push 57Dh  +
call sub_100C967  +
mov ebx 80070057h +
jmp loc_1007C6F  +
push edi  +
lea ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebx] +
push dword ptr [ecx+eax*4]  +
mov [ebp+arg_0] edi +
call sub_1003535  +
mov ecx [ebx] +
mov [ebp+var_1C] eax +
mov eax [ebx+8] +
lea ecx [ecx+eax*4] +
mov eax [ebp+arg_0] +
mov [ebp+var_18] edx +
cmp eax [ecx] +
jz loc_1007C2D  +
mov edx [ecx] +
mov ecx edx +
lea eax [ecx+2] +
mov [ebp+FileTime.dwHighDateTime] eax +
mov ax [ecx] +
inc ecx  +
inc ecx  +
cmp ax di +
jnz loc_1007B56  +
sub ecx [ebp+FileTime.dwHighDateTime] +
sar ecx 1 +
lea eax [edx+ecx*2] +
cmp [ebp+arg_0] eax +
jnz loc_1007C2D  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
call sub_100D30E  +
push edi  +
push 989680h  +
push edx  +
push eax  +
mov [ebp+FileTime.dwLowDateTime] eax +
mov [ebp+FileTime.dwHighDateTime] edx +
call __aulldvrm  +
push edi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_1C] ecx +
mov [ebp+var_18] ebx +
call __aulldvrm  +
push edi  +
push 3Ch  +
push edx  +
push eax  +
mov [ebp+var_C] ecx +
mov dword ptr [ebp+var_8] ebx +
call __aulldvrm  +
push edi  +
push 18h  +
push edx  +
push eax  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] ebx +
call __aulldvrm  +
push [ebp+var_1C]  +
mov [ebp+var_28] ebx +
push [ebp+var_C]  +
mov [ebp+var_28] edx +
push [ebp+var_24]  +
push ecx  +
push eax  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push 1F41h  +
push 800h  +
call sub_100C98F  +
add esp 24h +
push 0FFFFFFF5h  +
call esi  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_1007AD5  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push esi  +
call sub_1005C48  +
mov ebx eax +
cmp ebx edi +
jl loc_1007C61  +
push dword ptr [ebp+hMem]  +
push offset aS_1  +
push esi  +
call sub_1005AD3  +
push offset word_10012AC  +
push esi  +
call sub_1005AD3  +
add esp 14h +
xor ebx ebx +
jmp loc_1007C61  +
push 57Eh  +
call sub_100C967  +
mov eax [ebx+8] +
mov ecx [ebx] +
push dword ptr [ecx+eax*4]  +
push offset aS_1  +
push dword ptr [ebp+var_8]  +
call sub_1005AD3  +
push offset word_10012AC  +
push dword ptr [ebp+var_8]  +
call sub_1005AD3  +
add esp 14h +
mov ebx 80070057h +
cmp dword ptr [ebp+hMem] edi +
jz loc_1007C6F  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp+hMem] 0 +
push esi  +
push [ebp+arg_0]  +
call sub_10032AA  +
mov esi eax +
test esi esi +
jl loc_1007D35  +
push edi  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_1007CC4  +
call ds:GetLastError  +
test eax eax +
jle loc_1007CC0  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1007D34  +
lea eax [ebp+FileTime] +
push eax  +
call sub_100D4FA  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push offset a0x016i64x  +
push edi  +
call sub_1005AD3  +
add esp 10h +
cmp [ebp+FileTime.dwLowDateTime] 0 +
jnz loc_1007CFC  +
cmp [ebp+FileTime.dwHighDateTime] 0 +
jnz loc_1007CFC  +
push offset aNoExpirationDa  +
push edi  +
call sub_1005AD3  +
pop ecx  +
pop ecx  +
jmp loc_1007D23  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push edi  +
call sub_1005C48  +
mov esi eax +
test esi esi +
jl loc_1007D25  +
push dword ptr [ebp+hMem]  +
push offset aS_2  +
push edi  +
call sub_1005AD3  +
add esp 0Ch +
xor esi esi +
cmp dword ptr [ebp+hMem] 0 +
jz loc_1007D34  +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 154h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push 0FFFFFFF5h  +
mov dword ptr [ebp+var_11C] ebx +
mov [ebp+var_E2] bl +
mov [ebp+var_E5] bl +
mov dword ptr [ebp+uBytes] ebx +
mov [ebp+var_E3] bl +
mov dword ptr [ebp+var_108] ebx +
mov [ebp+var_E4] bl +
mov [ebp+s] ebx +
mov [ebp+var_10C] ebx +
call ds:GetStdHandle  +
mov [ebp+hConsoleHandle] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1007DC1  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1007DBA  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_10084D3  +
push edi  +
lea eax [ebp+var_F0] +
push eax  +
lea eax [ebp+var_128] +
push eax  +
push offset aComputer  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10084AF  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
lea eax [ebp+var_F0] +
push eax  +
lea eax [ebp+var_EC] +
push eax  +
push offset aPeriod  +
push esi  +
call sub_1003218  +
mov edi ds:wcstoul +
test al al +
jz loc_1007EA4  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
push ebx  +
lea eax [ebp+var_100] +
push eax  +
push dword ptr [ebp+var_EC]  +
mov [ebp+var_100] ebx +
call edi  +
mov ecx dword ptr [ebp+var_EC] +
add esp 0Ch +
mov [ebp+var_114] eax +
cmp [ebp+var_100] ecx +
jz loc_1007E8A  +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_134] edx +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1007E5A  +
sub eax [ebp+var_134] +
sar eax 1 +
lea eax [ecx+eax*2] +
cmp [ebp+var_100] eax +
jnz loc_1007E8A  +
xor eax eax +
inc eax  +
cmp [ebp+var_114] eax +
jnb loc_1007EAE  +
mov [ebp+var_114] eax +
jmp loc_1007EAE  +
push 57Eh  +
call sub_100C967  +
push dword ptr [ebp+var_EC]  +
push offset aPeriodS  +
jmp loc_1008054  +
mov [ebp+var_114] 2 +
lea eax [ebp+var_F0] +
push eax  +
lea eax [ebp+var_EC] +
push eax  +
push offset aSamples  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1007F43  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
push ebx  +
lea eax [ebp+var_100] +
push eax  +
push dword ptr [ebp+var_EC]  +
mov [ebp+var_E3] 1 +
mov [ebp+var_100] ebx +
call edi  +
mov ecx dword ptr [ebp+var_EC] +
add esp 0Ch +
mov dword ptr [ebp+var_108] eax +
cmp [ebp+var_100] ecx +
jz loc_1007F29  +
mov eax ecx +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_1007F10  +
sub eax edi +
sar eax 1 +
lea eax [ecx+eax*2] +
cmp [ebp+var_100] eax +
jz loc_1007F43  +
push 57Eh  +
call sub_100C967  +
push dword ptr [ebp+var_EC]  +
push offset aSamplesS  +
jmp loc_1008054  +
lea eax [ebp+var_F0] +
push eax  +
push ebx  +
push offset aDataonly  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1007F6D  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
mov [ebp+var_E2] 1 +
lea eax [ebp+var_F0] +
push eax  +
push ebx  +
push offset aPacketinfo  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1007F97  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
mov [ebp+var_E5] 1 +
lea eax [ebp+var_F0] +
push eax  +
lea eax [ebp+var_EC] +
push eax  +
push offset aIpprotocol  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1007FE3  +
push [ebp+var_F0]  +
push esi  +
call sub_1003267  +
mov edi ds:_wcsicmp +
push offset a4  +
push dword ptr [ebp+var_EC]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1008020  +
mov dword ptr [ebp+uBytes] 1 +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi ebx +
jl loc_10084D2  +
lea eax [ebp+TimeZoneInformation] +
push eax  +
call ds:GetTimeZoneInformation  +
cmp eax 0FFFFFFFFh +
jnz loc_100806C  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1008019  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_10084D2  +
push offset a6  +
push dword ptr [ebp+var_EC]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100803F  +
mov dword ptr [ebp+uBytes] 2 +
jmp loc_1007FE3  +
push 57Eh  +
call sub_100C967  +
push dword ptr [ebp+var_EC]  +
push offset aS_2  +
push [ebp+hConsoleHandle]  +
call sub_1005AD3  +
add esp 0Ch +
mov esi 80070057h +
jmp loc_10084D2  +
cmp eax 2 +
jnz loc_100807C  +
mov eax [ebp+TimeZoneInformation.DaylightBias] +
mov ecx [ebp+TimeZoneInformation.Bias] +
jmp loc_1008088  +
mov eax [ebp+TimeZoneInformation.Bias] +
mov ecx [ebp+TimeZoneInformation.StandardBias] +
push ebx  +
add eax ecx +
cdq   +
push 23C34600h  +
push edx  +
push eax  +
call __allmul  +
mov [ebp+var_150] eax +
mov [ebp+var_14C] edx +
call sub_100D19E  +
mov esi eax +
cmp esi ebx +
jl loc_10084D2  +
push ebx  +
lea eax [ebp+var_154] +
push eax  +
lea eax [ebp+var_10C] +
push eax  +
lea eax [ebp+s] +
push eax  +
push dword ptr [ebp+uBytes]  +
mov [ebp+var_E4] 1 +
push dword ptr [ebp+var_128]  +
call sub_100CF61  +
mov esi eax +
cmp esi ebx +
jl loc_10084D2  +
lea eax [ebp+hMem] +
push eax  +
mov eax [ebp+var_10C] +
mov [ebp+hMem] ebx +
push dword ptr [eax]  +
push [ebp+s]  +
call sub_100D0F1  +
test eax eax +
jge loc_1008123  +
push dword ptr [ebp+var_128]  +
push 0C65h  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
jmp loc_100813C  +
push [ebp+hMem]  +
push dword ptr [ebp+var_128]  +
push 0C66h  +
call sub_100CAAA  +
add esp 0Ch +
cmp [ebp+hMem] ebx +
jz loc_1008150  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_E3] bl +
jz loc_100816A  +
push dword ptr [ebp+var_108]  +
push 0C63h  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
lea ecx [ebp+FileTime] +
call sub_100D4C0  +
lea eax [ebp+var_11C] +
push eax  +
push [ebp+FileTime.dwHighDateTime]  +
push [ebp+FileTime.dwLowDateTime]  +
push [ebp+hConsoleHandle]  +
call sub_1005C48  +
mov esi eax +
cmp esi ebx +
jl loc_10084BE  +
push dword ptr [ebp+var_11C]  +
push 0C64h  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
jmp loc_10081B3  +
xor ebx ebx +
cmp [ebp+var_E3] bl +
jz loc_10081C7  +
cmp dword ptr [ebp+var_108] ebx +
jbe loc_10084AB  +
lea ecx [ebp+FileTime] +
call sub_100D4C0  +
mov eax [ebp+FileTime.dwLowDateTime] +
sub eax [ebp+var_150] +
mov ecx [ebp+FileTime.dwHighDateTime] +
sbb ecx [ebp+var_14C] +
push ebx  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
push ebx  +
push 3Ch  +
push edx  +
push eax  +
call __aulldvrm  +
push 0  +
push 3Ch  +
push edx  +
push eax  +
mov esi ecx +
mov [ebp+var_134] ebx +
call __aulldvrm  +
push 0  +
push 18h  +
push edx  +
push eax  +
mov edi ecx +
mov [ebp+var_134] ebx +
mov [ebp+FileTime.dwLowDateTime] eax +
mov [ebp+FileTime.dwHighDateTime] edx +
call __aullrem  +
cmp [ebp+var_E2] 0 +
push esi  +
push edi  +
push eax  +
jnz loc_1008246  +
push offset a02u02u02u  +
jmp loc_100824B  +
push offset a02u02u02u_0  +
push [ebp+hConsoleHandle]  +
call sub_1005AD3  +
add esp 14h +
lea eax [ebp+var_140] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
mov eax [ebp+var_10C] +
push 3E8h  +
push dword ptr [eax]  +
push [ebp+s]  +
call sub_100CE29  +
test eax eax +
jge loc_1008298  +
push eax  +
push offset a0x08x_0  +
push 0C58h  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_1008453  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
call sub_100D30E  +
push [ebp+var_10]  +
mov [ebp+var_130] eax +
push [ebp+var_14]  +
mov [ebp+var_12C] edx +
call sub_100D30E  +
push [ebp+var_8]  +
mov [ebp+var_104] eax +
push [ebp+var_C]  +
mov [ebp+var_100] edx +
call sub_100D30E  +
mov edi [ebp+var_140] +
mov ecx [ebp+var_100] +
mov esi eax +
sub eax edi +
mov [ebp+var_148] eax +
mov ebx edx +
mov eax ebx +
sbb eax [ebp+var_13C] +
push 0  +
mov [ebp+var_144] eax +
mov eax [ebp+var_104] +
sub eax [ebp+var_130] +
push 2  +
sbb ecx [ebp+var_12C] +
add eax [ebp+var_148] +
adc ecx [ebp+var_144] +
push ecx  +
push eax  +
call __alldiv  +
sub esi [ebp+var_104] +
mov [ebp+var_FC] eax +
sbb ebx [ebp+var_100] +
sub edi [ebp+var_130] +
mov eax [ebp+var_13C] +
sbb eax [ebp+var_12C] +
sub edi esi +
sbb eax ebx +
cmp [ebp+var_E2] 0 +
mov dword ptr [ebp+uBytes] edx +
mov esi eax +
jnz loc_10083B7  +
mov ebx [ebp+hConsoleHandle] +
push offset aD_0  +
push ebx  +
call sub_1003553  +
push esi  +
push edi  +
push ebx  +
call sub_1005F4D  +
push offset aO  +
push ebx  +
call sub_1003553  +
push dword ptr [ebp+uBytes]  +
push [ebp+var_FC]  +
push ebx  +
call sub_1005F4D  +
push 0  +
mov esi 2710h +
push esi  +
push dword ptr [ebp+uBytes]  +
push [ebp+var_FC]  +
call __alldiv  +
cmp eax esi +
mov [ebp+var_E1] 0 +
jle loc_10083D3  +
mov eax esi +
jmp loc_10083DE  +
push dword ptr [ebp+uBytes]  +
push [ebp+var_FC]  +
push [ebp+hConsoleHandle]  +
call sub_1005F4D  +
jmp loc_1008453  +
mov ecx 0FFFFD8F0h +
cmp eax ecx +
jge loc_10083E5  +
mov eax ecx +
mov [ebp+var_E1] 1 +
add eax 2710h +
mov [ebp+var_134] eax +
fild  [ebp+var_134] +
fmul  ds:dbl_10021C8 +
call _ftol2  +
push offset asc_10021BC  +
push ebx  +
mov edi eax +
call sub_1003553  +
xor esi esi +
cmp esi edi +
jnz loc_100842B  +
cmp [ebp+var_E1] 0 +
jz loc_1008424  +
push offset a@  +
jmp loc_100843C  +
push offset asc_10021B4  +
jmp loc_100843C  +
cmp esi 1Bh +
jnz loc_1008437  +
push offset asc_10021B0  +
jmp loc_100843C  +
push offset asc_1001620  +
push ebx  +
call sub_1003553  +
inc esi  +
cmp esi 37h +
jb loc_1008410  +
push offset asc_10021AC  +
push ebx  +
call sub_1003553  +
push offset word_10012AC  +
push [ebp+hConsoleHandle]  +
call sub_1003553  +
cmp [ebp+var_E5] 0 +
jz loc_1008487  +
push [ebp+var_13C]  +
lea eax [ebp+var_34] +
push [ebp+var_140]  +
push eax  +
push [ebp+hConsoleHandle]  +
call sub_10075C9  +
dec dword ptr [ebp+var_108]  +
jz loc_10081B1  +
mov eax [ebp+var_114] +
imul eax eax +
push eax  +
call ds:Sleep  +
jmp loc_10081B1  +
xor esi esi +
jmp loc_10084BE  +
push 5DCh  +
call sub_100C967  +
mov esi 80070057h +
cmp dword ptr [ebp+var_11C] ebx +
jz loc_10084D2  +
push dword ptr [ebp+var_11C]  +
call ds:LocalFree  +
pop edi  +
cmp [ebp+s] ebx +
jz loc_10084E7  +
push [ebp+s]  +
call ds:LocalFree  +
cmp [ebp+var_10C] ebx +
jz loc_10084FB  +
push [ebp+var_10C]  +
call ds:LocalFree  +
cmp [ebp+var_E4] bl +
jz loc_1008512  +
call sub_100D1EA  +
cmp eax ebx +
jge loc_1008512  +
cmp esi ebx +
jl loc_1008516  +
mov esi eax +
cmp esi ebx +
jge loc_100854B  +
lea eax [ebp+uBytes] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_100854B  +
push dword ptr [ebp+uBytes]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+uBytes]  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 4  +
***
call __EH_prolog3_catch  +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-2Ch] edi +
mov [ebp-18h] edi +
mov [ebp-20h] edi +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov [ebp-30h] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10085AC  +
call ds:GetLastError  +
cmp eax edi +
jg loc_10085A0  +
mov esi eax +
jmp loc_1008B75  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1008599  +
push edi  +
push offset aGnsb  +
mov esi [ebp+8] +
push esi  +
call sub_1003185  +
mov bl 1 +
cmp al bl +
jnz loc_1008749  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push offset aComputer  +
push esi  +
call sub_1003218  +
test al al +
jz loc_10085E5  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1003267  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100871D  +
cmp [ebp-1Ch] edi +
jz loc_100860A  +
push dword ptr [ebp-1Ch]  +
push 709h  +
call sub_100CAAA  +
pop ecx  +
jmp loc_1008614  +
push 714h  +
call sub_100CAAA  +
pop ecx  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-20h] eax +
cmp eax edi +
jz loc_1008639  +
push offset aW32timegetnetl  +
push eax  +
call ds:GetProcAddress  +
mov ebx eax +
cmp ebx edi +
jnz loc_1008654  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100864D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1008715  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp+8] eax +
xor esi esi +
mov [ebp-4] edi +
lea eax [ebp-34h] +
push eax  +
push dword ptr [ebp-1Ch]  +
call ebx  +
cmp eax edi +
jnz loc_100868E  +
push dword ptr [ebp-34h]  +
push offset aBits0x08x  +
push dword ptr [ebp-30h]  +
call sub_1005AD3  +
add esp 0Ch +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100870B  +
jle loc_100869A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov [ebp-14h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008715  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-38h] +
test eax eax +
jle loc_10086BA  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-44h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008708 +
retn   +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-90h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008708 +
retn   +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008708 +
retn   +
mov esi [ebp-14h] +
push dword ptr [ebp+8]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
test esi esi +
jge loc_1008B47  +
lea eax [ebp-18h] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_1008B66  +
push dword ptr [ebp-18h]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_1008B66  +
push edi  +
push offset aVjc  +
push esi  +
call sub_1003185  +
cmp al bl +
jnz loc_1008843  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100871D  +
push 70Ah  +
call sub_100C967  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-20h] eax +
test eax eax +
jnz loc_1008792  +
call ds:GetLastError  +
test eax eax +
jmp loc_1008641  +
push offset aW32timeverifyj  +
push eax  +
call ds:GetProcAddress  +
mov edi eax +
test edi edi +
jz loc_1008785  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp+8] eax +
xor esi esi +
mov dword ptr [ebp-4] 4 +
call edi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100882A  +
mov byte ptr [ebp-4] 6 +
mov eax [ebp-48h] +
test eax eax +
jle loc_10087D9  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-54h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
mov byte ptr [ebp-4] 7 +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0C0h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
mov esi [ebp-14h] +
push dword ptr [ebp+8]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
test esi esi +
jl loc_100871D  +
xor esi esi +
jmp loc_1008715  +
push edi  +
push offset aVuc  +
push esi  +
call sub_1003185  +
cmp al bl +
jnz loc_100891D  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100871D  +
push 70Bh  +
call sub_100C967  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-20h] eax +
test eax eax +
jz loc_1008785  +
push offset aW32timeverifyu  +
push eax  +
call ds:GetProcAddress  +
mov edi eax +
test edi edi +
jz loc_1008785  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp+8] eax +
xor esi esi +
mov dword ptr [ebp-4] 8 +
jmp loc_10087BC  +
mov byte ptr [ebp-4] 0Ah +
mov eax [ebp-58h] +
test eax eax +
jle loc_10088CF  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-64h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
mov byte ptr [ebp-4] 0Bh +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0B4h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008827 +
retn   +
push edi  +
push offset aQps  +
push esi  +
call sub_1003185  +
cmp al bl +
jnz loc_1008B4B  +
mov [ebp+8] edi +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push offset aComputer  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1008954  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1003267  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_1008AAB  +
cmp [ebp-1Ch] edi +
jz loc_1008979  +
push dword ptr [ebp-1Ch]  +
push 710h  +
call sub_100CAAA  +
pop ecx  +
jmp loc_1008983  +
push 716h  +
call sub_100CAAA  +
pop ecx  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov ebx eax +
mov [ebp-20h] ebx +
cmp ebx edi +
jnz loc_10089B3  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10089AC  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1008AAB  +
push offset aW32timequerynt  +
push ebx  +
mov esi ds:GetProcAddress +
call esi  +
mov edi eax +
test edi edi +
jnz loc_10089D3  +
call ds:GetLastError  +
test eax eax +
jg loc_10089A2  +
jmp loc_10089AC  +
push offset aW32timebufferf  +
push ebx  +
call esi  +
mov [ebp-2Ch] eax +
test eax eax +
jz loc_10089C7  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-28h] eax +
xor esi esi +
mov dword ptr [ebp-4] 0Ch +
lea eax [ebp+8] +
push eax  +
push offset aNtpclient  +
push esi  +
push dword ptr [ebp-1Ch]  +
call edi  +
cmp eax esi +
jnz loc_1008A21  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-30h]  +
call sub_1006852  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008AA1  +
jle loc_1008A2D  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov [ebp-14h] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008AAB  +
mov byte ptr [ebp-4] 0Eh +
mov eax [ebp-78h] +
test eax eax +
jle loc_1008A4D  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-84h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008A9E +
retn   +
mov byte ptr [ebp-4] 0Fh +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-9Ch] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008A9E +
retn   +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008A9E +
retn   +
mov esi [ebp-14h] +
push dword ptr [ebp-28h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
cmp dword ptr [ebp+8] 0 +
jz loc_1008715  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-28h] eax +
xor esi esi +
mov dword ptr [ebp-4] 10h +
push dword ptr [ebp+8]  +
call dword ptr [ebp-2Ch]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008B3F  +
mov byte ptr [ebp-4] 12h +
mov eax [ebp-68h] +
test eax eax +
jle loc_1008AEE  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 11h +
lea ecx [ebp-74h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008B3C +
retn   +
mov byte ptr [ebp-4] 13h +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 11h +
lea ecx [ebp-0A8h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008B3C +
retn   +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008B3C +
retn   +
mov esi [ebp-14h] +
push dword ptr [ebp-28h]  +
jmp loc_100870E  +
xor esi esi +
jmp loc_1008B66  +
push esi  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_1008B75  +
push 57Ch  +
call sub_100C8E3  +
mov esi 80070057h +
cmp dword ptr [ebp-20h] 0 +
jz loc_1008B75  +
push dword ptr [ebp-20h]  +
call ds:FreeLibrary  +
cmp dword ptr [ebp-18h] 0 +
jz loc_1008B84  +
push dword ptr [ebp-18h]  +
call ds:LocalFree  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
xor edi edi +
mov [ebp-24h] edi +
mov byte ptr [ebp-20h] 0 +
mov [ebp-2Ch] edi +
mov [ebp-1Ch] edi +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_1008BDB  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1008BD4  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_10093AD  +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push offset aComputer  +
mov esi [ebp+8] +
push esi  +
call sub_1003218  +
test al al +
jz loc_1008BFE  +
push dword ptr [ebp-34h]  +
push esi  +
call sub_1003267  +
lea eax [ebp-34h] +
push eax  +
push edi  +
push offset aVerbose  +
push esi  +
call sub_1003218  +
test al al +
jz loc_1008C1F  +
push dword ptr [ebp-34h]  +
push esi  +
call sub_1003267  +
mov byte ptr [ebp-20h] 1 +
push edi  +
push offset aSource  +
push esi  +
call sub_1003185  +
cmp al 1 +
jnz loc_1008DFC  +
mov [ebp-18h] edi +
mov [ebp+8] edi +
push esi  +
call sub_10032AA  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_1008CF6  +
push dword ptr [ebp-24h]  +
call sub_1003992  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_1008CF6  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-1Ch] eax +
cmp eax edi +
jnz loc_1008C88  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1008C83  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
jmp loc_1008CF6  +
push offset aW32timequeryso  +
push dword ptr [ebp-1Ch]  +
mov esi ds:GetProcAddress +
call esi  +
mov edi eax +
test edi edi +
jnz loc_1008CAA  +
call ds:GetLastError  +
test eax eax +
jg loc_1008C79  +
jmp loc_1008C83  +
push offset aW32timebufferf  +
push dword ptr [ebp-1Ch]  +
call esi  +
mov [ebp-18h] eax +
test eax eax +
jz loc_1008C9E  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-20h] eax +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-24h]  +
call edi  +
test eax eax +
jnz loc_1008D21  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_1006D6B  +
and dword ptr [ebp-14h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-20h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
cmp dword ptr [ebp+8] 0 +
jz loc_1008DC3  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-20h] eax +
mov dword ptr [ebp-4] 4 +
push dword ptr [ebp+8]  +
call dword ptr [ebp-18h]  +
jmp loc_10092B4  +
jle loc_1008D2D  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008CF6  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-58h] +
test eax eax +
jle loc_1008D4B  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-64h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008D64 +
retn   +
jmp loc_1008CEC  +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-8Ch] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008D8A +
retn   +
jmp loc_1008CEC  +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008CEC +
retn   +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0E4h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008DB9 +
retn   +
push dword ptr [ebp-20h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
xor edi edi +
mov esi [ebp-14h] +
cmp esi edi +
jl loc_10093B1  +
xor esi esi +
jmp loc_10093DC  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-0D4h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008DF0 +
retn   +
jmp loc_1008DB9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008DB9 +
retn   +
push edi  +
push offset aStatus  +
push esi  +
call sub_1003185  +
cmp al 1 +
jnz loc_1008FD0  +
mov [ebp+8] edi +
mov [ebp-30h] edi +
push esi  +
call sub_10032AA  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_1008ED9  +
push dword ptr [ebp-24h]  +
call sub_1003992  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_1008ED9  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-1Ch] eax +
cmp eax edi +
jnz loc_1008E65  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1008E60  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
jmp loc_1008ED9  +
push offset aW32timequeryst  +
push dword ptr [ebp-1Ch]  +
mov esi ds:GetProcAddress +
call esi  +
mov edi eax +
test edi edi +
jnz loc_1008E87  +
call ds:GetLastError  +
test eax eax +
jg loc_1008E56  +
jmp loc_1008E60  +
push offset aW32timebufferf  +
push dword ptr [ebp-1Ch]  +
call esi  +
mov [ebp+8] eax +
test eax eax +
jz loc_1008E7B  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 8 +
lea eax [ebp-30h] +
push eax  +
push dword ptr [ebp-24h]  +
call edi  +
test eax eax +
jnz loc_1008F0B  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-30h]  +
push ebx  +
call sub_1006B01  +
and dword ptr [ebp-14h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-18h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
cmp dword ptr [ebp-30h] 0 +
jz loc_1008DC3  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 0Ch +
push dword ptr [ebp-30h]  +
call dword ptr [ebp+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-18h]  +
jmp loc_1008DBC  +
jle loc_1008F17  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008ED9  +
mov byte ptr [ebp-4] 0Ah +
mov eax [ebp-48h] +
test eax eax +
jle loc_1008F35  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-54h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008F4E +
retn   +
jmp loc_1008ECF  +
mov byte ptr [ebp-4] 0Bh +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-0C8h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008F77 +
retn   +
jmp loc_1008ECF  +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008ECF +
retn   +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-104h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008FA6 +
retn   +
jmp loc_1008F03  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-80h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008FC1 +
retn   +
jmp loc_1008F03  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008F03 +
retn   +
push edi  +
push offset aConfiguration  +
push esi  +
call sub_1003185  +
cmp al 1 +
jnz loc_10091AA  +
mov [ebp+8] edi +
mov [ebp-28h] edi +
push esi  +
call sub_10032AA  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_10090BD  +
push dword ptr [ebp-24h]  +
call sub_1003992  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_10090BD  +
call sub_1003804  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_10090BD  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-1Ch] eax +
cmp eax edi +
jnz loc_1009049  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1009044  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
jmp loc_10090BD  +
push offset aW32timequeryco  +
push dword ptr [ebp-1Ch]  +
mov esi ds:GetProcAddress +
call esi  +
mov edi eax +
test edi edi +
jnz loc_100906B  +
call ds:GetLastError  +
test eax eax +
jg loc_100903A  +
jmp loc_1009044  +
push offset aW32timebufferf  +
push dword ptr [ebp-1Ch]  +
call esi  +
mov [ebp+8] eax +
test eax eax +
jz loc_100905F  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 10h +
lea eax [ebp-28h] +
push eax  +
push dword ptr [ebp-24h]  +
call edi  +
test eax eax +
jnz loc_10090E5  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-28h]  +
push ebx  +
call sub_1007183  +
and dword ptr [ebp-14h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-18h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
cmp dword ptr [ebp-28h] 0 +
jz loc_1008DC3  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 14h +
push dword ptr [ebp-28h]  +
jmp loc_1008EFC  +
jle loc_10090F1  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_10090BD  +
mov byte ptr [ebp-4] 12h +
mov eax [ebp-68h] +
test eax eax +
jle loc_100910F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 11h +
lea ecx [ebp-74h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009128 +
retn   +
jmp loc_10090B3  +
mov byte ptr [ebp-4] 13h +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 11h +
lea ecx [ebp-0A4h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100914E +
retn   +
jmp loc_10090B3  +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10090B3 +
retn   +
mov byte ptr [ebp-4] 15h +
lea ecx [ebp-0F4h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100917D +
retn   +
jmp loc_1008F03  +
mov byte ptr [ebp-4] 15h +
lea ecx [ebp-98h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100919B +
retn   +
jmp loc_1008F03  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008F03 +
retn   +
push edi  +
push offset aPeers  +
push esi  +
call sub_1003185  +
push esi  +
cmp al 1 +
jnz loc_1009382  +
mov [ebp+8] edi +
mov [ebp-18h] edi +
call sub_10032AA  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_100928E  +
push dword ptr [ebp-24h]  +
call sub_1003992  +
mov [ebp-14h] eax +
cmp eax edi +
jl loc_100928E  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov [ebp-1Ch] eax +
cmp eax edi +
jnz loc_1009213  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100920E  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
jmp loc_100928E  +
push offset aW32timequerynt  +
push dword ptr [ebp-1Ch]  +
mov esi ds:GetProcAddress +
call esi  +
mov edi eax +
test edi edi +
jnz loc_1009235  +
call ds:GetLastError  +
test eax eax +
jg loc_1009204  +
jmp loc_100920E  +
push offset aW32timebufferf  +
push dword ptr [ebp-1Ch]  +
call esi  +
mov [ebp+8] eax +
test eax eax +
jz loc_1009229  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-28h] eax +
mov dword ptr [ebp-4] 18h +
lea eax [ebp-18h] +
push eax  +
push offset aNtpclient  +
push 0  +
push dword ptr [ebp-24h]  +
call edi  +
test eax eax +
jnz loc_10092BD  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-18h]  +
push ebx  +
call sub_1006A4A  +
and dword ptr [ebp-14h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
push dword ptr [ebp-28h]  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
cmp dword ptr [ebp-18h] 0 +
jz loc_1008DC3  +
push offset loc_100BA41  +
call ds:?_set_se_translator@@YAP6AXIPAU_EXCEPTION_POINTERS@@@ZP6AXI0@Z@Z  +
pop ecx  +
mov [ebp-20h] eax +
mov dword ptr [ebp-4] 1Ch +
push dword ptr [ebp-18h]  +
call dword ptr [ebp+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1008DB9  +
jle loc_10092C9  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_100928E  +
mov byte ptr [ebp-4] 1Ah +
mov eax [ebp-38h] +
test eax eax +
jle loc_10092E7  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 19h +
lea ecx [ebp-44h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009300 +
retn   +
jmp loc_1009284  +
mov byte ptr [ebp-4] 1Bh +
mov dword ptr [ebp-14h] 8007000Eh +
mov byte ptr [ebp-4] 19h +
lea ecx [ebp-0BCh] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009326 +
retn   +
jmp loc_1009284  +
mov dword ptr [ebp-14h] 8000FFFFh +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009284 +
retn   +
mov byte ptr [ebp-4] 1Dh +
lea ecx [ebp-114h] +
call sub_1003F2C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009355 +
retn   +
jmp loc_1008DB9  +
mov byte ptr [ebp-4] 1Dh +
lea ecx [ebp-0B0h] +
call sub_1003EA5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1009373 +
retn   +
jmp loc_1008DB9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1008DB9 +
retn   +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_10093B1  +
push offset asc_1001620  +
push 579h  +
call sub_100CA2C  +
pop ecx  +
pop ecx  +
push 57Bh  +
call sub_100C967  +
mov esi 80070057h +
cmp esi edi +
jge loc_10093EA  +
cmp esi 80070057h +
jz loc_10093DC  +
lea eax [ebp-2Ch] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_10093DC  +
push dword ptr [ebp-2Ch]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
cmp [ebp-1Ch] edi +
jz loc_10093EA  +
push dword ptr [ebp-1Ch]  +
call ds:FreeLibrary  +
cmp [ebp-2Ch] edi +
jz loc_10093F8  +
push dword ptr [ebp-2Ch]  +
call ds:LocalFree  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1009446  +
mov eax [esi] +
push edi  +
mov edi ds:LocalFree +
test eax eax +
jz loc_1009424  +
push eax  +
call edi  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_100942E  +
push eax  +
call edi  +
mov eax [esi+10h] +
test eax eax +
jz loc_1009438  +
push eax  +
call edi  +
mov eax [esi+44h] +
test eax eax +
jz loc_1009442  +
push eax  +
call edi  +
push esi  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
dec eax  +
dec eax  +
jz loc_10094A6  +
sub eax 15h +
jz loc_1009476  +
xor al al +
jmp loc_10094B3  +
lea eax [ebp+var_6C] +
push eax  +
call MD5Init  +
push 10h  +
add esi 8 +
push esi  +
lea eax [ebp+var_6C] +
push eax  +
call MD5Update  +
lea eax [ebp+var_6C] +
push eax  +
call MD5Final  +
mov ecx [ebp+arg_8] +
mov ecx [ecx] +
xor eax eax +
cmp ecx [ebp+var_14] +
setz al  +
jmp loc_10094B3  +
mov eax [ebp+arg_8] +
mov eax [eax] +
sub eax [esi+4] +
neg eax  +
sbb eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
mov edi offset aComputers +
push edi  +
push [ebp+arg_0]  +
lea esi [ebp+var_4] +
call sub_1003218  +
mov ebx ds:LocalAlloc +
jmp loc_100952F  +
push 0Ch  +
push 40h  +
call ebx  +
test eax eax +
jz loc_100958A  +
mov [esi] eax +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov [eax] ecx +
push [ebp+var_8]  +
lea esi [eax+8] +
push [ebp+arg_0]  +
call sub_1003267  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_1003218  +
test al al +
jnz loc_10094F7  +
mov edi offset aDomain +
jmp loc_100955D  +
push 0Ch  +
push 40h  +
call ebx  +
test eax eax +
jz loc_100958A  +
mov [esi] eax +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_14] +
mov [eax] ecx +
push [ebp+var_10]  +
lea esi [eax+8] +
push [ebp+arg_0]  +
call sub_1003267  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_1003218  +
test al al +
jnz loc_100953A  +
xor edi edi +
cmp [ebp+var_4] edi +
jnz loc_10095A0  +
push 0Ch  +
push 40h  +
call ebx  +
cmp eax edi +
jnz loc_1009594  +
mov edi 8007000Eh +
jmp loc_10095BC  +
mov esi [ebp+var_4] +
mov edi 8007000Eh +
jmp loc_10095B8  +
mov [esi] eax +
mov byte ptr [eax+4] 1 +
mov dword ptr [eax] offset dword_1001F30 +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
xor esi esi +
jmp loc_10095B8  +
mov eax esi +
mov esi [esi+8] +
push eax  +
call ds:LocalFree  +
test esi esi +
jnz loc_10095AC  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hMem] +
jmp loc_10095E1  +
mov eax esi +
mov esi [esi+0Ch] +
push eax  +
call ds:LocalFree  +
test esi esi +
jnz loc_10095D5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hMem] +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset aAlert  +
push [ebp+arg_0]  +
xor ebx ebx +
mov [ebp+hMem] ebx +
call sub_1003218  +
test al al +
jz loc_100974A  +
mov edi ds:wcstoul +
mov eax dword ptr [ebp+var_4] +
mov [ebp+var_8] ebx +
mov [ebp+var_54] eax +
mov esi [ebp+var_8] +
lea esi [ebp+esi*4+var_54] +
push 2Ch  +
push dword ptr [esi]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [esi] eax +
cmp eax ebx +
jz loc_1009664  +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+var_8] +
add eax 2 +
inc [ebp+var_8]  +
cmp [ebp+var_8] 0Eh +
mov [esi] eax +
mov [ebp+ecx*4+var_50] eax +
jb loc_1009631  +
mov esi ds:_wcsicmp +
push offset aMaxspread  +
push dword ptr [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10096B2  +
cmp [ebp+var_54] ebx +
jz loc_1009790  +
cmp [ebp+var_50] ebx +
jz loc_1009790  +
cmp [ebp+var_4C] ebx +
jnz loc_1009790  +
push 10h  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_100976D  +
mov eax [ebp+var_10] +
mov [eax] esi +
mov [esi] ebx +
jmp loc_10096FC  +
push offset aMinservers  +
push dword ptr [ebp+var_4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100979F  +
cmp [ebp+var_54] ebx +
jz loc_1009790  +
cmp [ebp+var_50] ebx +
jz loc_1009790  +
cmp [ebp+var_4C] ebx +
jnz loc_1009790  +
push 10h  +
push 40h  +
call ds:LocalAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_100976D  +
mov eax [ebp+var_10] +
mov [eax] esi +
mov dword ptr [esi] 1 +
push ebx  +
push ebx  +
push [ebp+var_54]  +
lea eax [esi+0Ch] +
mov [ebp+var_10] eax +
call edi  +
push ebx  +
push ebx  +
push [ebp+var_50]  +
mov [esi+4] eax +
add esi 8 +
call edi  +
add esp 18h +
mov [esi] eax +
test eax 80000000h +
jz loc_1009774  +
push [ebp+var_14]  +
push [ebp+arg_0]  +
call sub_1003267  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset aAlert  +
push [ebp+arg_0]  +
call sub_1003218  +
test al al +
jnz loc_1009628  +
mov ecx [ebp+hMem] +
mov eax [ebp+arg_4] +
xor esi esi +
mov [eax] ecx +
mov [ebp+hMem] ebx +
cmp [ebp+hMem] ebx +
jz loc_1009764  +
push [ebp+hMem]  +
call sub_10095CA  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov esi 8007000Eh +
jmp loc_1009757  +
push dword ptr [ebp+var_4]  +
push offset aS_  +
push 0E57h  +
call sub_100CA2C  +
add esp 0Ch +
mov esi 80070057h +
jmp loc_1009757  +
push dword ptr [ebp+var_4]  +
push offset aS_  +
push 5DDh  +
jmp loc_1009781  +
push dword ptr [ebp+var_4]  +
push offset aS_3  +
push 0E56h  +
call sub_100CA2C  +
add esp 0Ch +
push 0C59h  +
call sub_100C967  +
jmp loc_1009789  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push esi  +
mov [ebp+uID] 44Dh +
mov [ebp+var_40] 44Eh +
mov [ebp+var_3C] 44Fh +
mov [ebp+var_38] 450h +
mov [ebp+var_34] 451h +
mov [ebp+var_30] 452h +
mov [ebp+var_2C] 453h +
mov [ebp+var_28] 454h +
mov [ebp+var_24] 455h +
mov [ebp+var_20] 456h +
mov [ebp+var_1C] 457h +
mov [ebp+var_18] 458h +
mov [ebp+var_14] 459h +
mov [ebp+var_10] 45Ah +
mov [ebp+var_C] 45Bh +
mov [ebp+var_8] 45Ch +
mov [ebp+var_4] 45Dh +
xor esi esi +
push [ebp+esi*4+uID]  +
call sub_100C8E3  +
inc esi  +
cmp esi 11h +
jb loc_1009847  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_100987C  +
mov eax [ebp+arg_0] +
jb loc_1009873  +
cmp eax 0FFFFFFFFh +
ja loc_100987C  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_1009887  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [esi+14h] +
cmp dword ptr [eax] 0 +
jnz loc_10098CE  +
push 0  +
push eax  +
lea eax [esi+10h] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
call sub_100CF61  +
mov [esi+18h] eax +
test eax eax +
jl loc_100999C  +
lea eax [esi+20h] +
push eax  +
push dword ptr [esi+48h]  +
mov eax [esi+10h] +
push dword ptr [eax]  +
push dword ptr [esi+0Ch]  +
call sub_100CC1E  +
mov [esi+1Ch] eax +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
push dword ptr [esi+48h]  +
mov eax [esi+10h] +
push dword ptr [eax]  +
push dword ptr [esi+0Ch]  +
call sub_100CE29  +
mov [esi+30h] eax +
test eax eax +
jl loc_100999C  +
push ebx  +
push edi  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
call sub_100D30E  +
push [ebp+var_10]  +
mov [ebp+var_3C] eax +
push [ebp+var_14]  +
mov [ebp+var_38] edx +
call sub_100D30E  +
push [ebp+var_8]  +
mov edi eax +
push [ebp+var_C]  +
mov ebx edx +
call sub_100D30E  +
sub eax [ebp+var_44] +
sbb edx [ebp+var_40] +
sub edi [ebp+var_3C] +
sbb ebx [ebp+var_38] +
add edi eax +
mov ecx ebx +
adc ecx edx +
xor ebx ebx +
push ebx  +
push 2  +
push ecx  +
push edi  +
call __alldiv  +
mov [esi+28h] eax +
mov eax [esi+34h] +
mov [esi+2Ch] edx +
cmp eax [ebp+var_28] +
jnz loc_100996A  +
movzx eax byte ptr [ebp+var_34+1] +
cmp [esi+38h] eax +
jz loc_1009998  +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_100997B  +
push eax  +
call ds:LocalFree  +
mov [esi+44h] ebx +
mov eax [ebp+var_28] +
mov [esi+34h] eax +
movzx eax byte ptr [ebp+var_34+1] +
mov [esi+38h] eax +
movzx eax byte ptr [ebp+var_34] +
shr eax 3 +
and eax 7 +
mov [esi+40h] ebx +
mov [esi+3Ch] eax +
pop edi  +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ds:InterlockedIncrement +
jmp loc_10099DF  +
mov eax [esi+4] +
mov ecx [esi+8] +
mov ecx [ecx] +
push dword ptr [ecx+eax*4]  +
call sub_1009890  +
mov eax [esi+8] +
mov eax [eax+0Ch] +
mov ecx [esi+8] +
inc eax  +
mov [ecx+0Ch] eax +
mov eax [esi+8] +
add eax 8 +
push eax  +
call edi  +
dec eax  +
mov [esi+4] eax +
mov eax [esi+8] +
mov ecx [esi+4] +
add eax 4 +
cmp ecx [eax] +
jb loc_10099C2  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+cchWideChar] edi +
cmp eax [ebp+arg_4] +
jb loc_1009A37  +
mov eax 80070057h +
jmp loc_1009B7C  +
push ebx  +
push esi  +
lea esi [edi+eax*4] +
mov eax [esi] +
xor ebx ebx +
cmp [eax+34h] ebx +
jz loc_1009B78  +
cmp dword ptr [eax+38h] 1 +
jbe loc_1009B78  +
cmp [eax+44h] ebx +
jnz loc_1009B78  +
cmp [eax+40h] ebx +
jnz loc_1009B78  +
mov [ebp+var_41C] ebx +
cmp [ebp+arg_4] ebx +
jbe loc_1009ADC  +
mov eax [edi] +
mov [ebp+var_420] ebx +
cmp [eax+14h] ebx +
jbe loc_1009AC8  +
mov [ebp+var_424] ebx +
mov ecx [esi] +
mov eax [edi] +
mov edx [ebp+var_420] +
add ecx 34h +
push ecx  +
mov ecx [eax+10h] +
mov eax [eax+0Ch] +
push dword ptr [ecx+edx*4]  +
add eax [ebp+var_424] +
push eax  +
call sub_1009450  +
test al al +
jnz loc_1009B64  +
inc [ebp+var_420]  +
mov eax [edi] +
mov ecx [ebp+var_420] +
sub [ebp+var_424] 0FFFFFF80h +
cmp ecx [eax+14h] +
jb loc_1009A83  +
inc [ebp+var_41C]  +
mov eax [ebp+var_41C] +
add edi 4 +
cmp eax [ebp+arg_4] +
jb loc_1009A70  +
mov eax [esi] +
cmp [eax+40h] ebx +
jnz loc_1009B78  +
push 2  +
pop ecx  +
push 7Bh  +
mov word ptr [ebp+var_418] cx +
pop ecx  +
push 4  +
push ebx  +
push ebx  +
mov word ptr [ebp+var_418+2] cx +
mov eax [eax+34h] +
mov [ebp+var_414] eax +
push 401h  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 10h  +
lea eax [ebp+var_418] +
push eax  +
call ds:getnameinfo  +
test eax eax +
jnz loc_1009B78  +
mov edi ds:MultiByteToWideChar +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
lea eax [ebp+MultiByteStr] +
push eax  +
push ebx  +
push ebx  +
call edi  +
mov [ebp+cchWideChar] eax +
cmp eax ebx +
jz loc_1009BA5  +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ecx [esi] +
mov [ecx+44h] eax +
mov eax [esi] +
cmp [eax+44h] ebx +
jnz loc_1009B8B  +
mov eax 8007000Eh +
jmp loc_1009B7A  +
mov ecx [ebp+cchWideChar] +
mov edx [ebp+var_41C] +
mov eax [esi] +
mov ecx [ecx+edx*4] +
mov [eax+40h] ecx +
xor eax eax +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100BEE5  +
leave   +
retn 0Ch  +
push [ebp+cchWideChar]  +
push dword ptr [eax+44h]  +
lea eax [ebp+MultiByteStr] +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
push ebx  +
call edi  +
test eax eax +
jnz loc_1009B78  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1009B7A  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_1009B7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
xor edx edx +
jmp loc_1009CC2  +
mov eax [esi] +
cmp eax edx +
jnz loc_1009C90  +
xor eax eax +
xor ecx ecx +
xor edi edi +
mov [ebp+var_C] edx +
mov [ebp+var_8] edx +
mov byte ptr [ebp+arg_8+3] 1 +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] edx +
jbe loc_1009CBF  +
mov ebx [ebp+arg_0] +
mov eax [ebx+eax*4] +
cmp [eax+18h] edx +
jnz loc_1009C5E  +
cmp [eax+1Ch] edx +
jnz loc_1009C5E  +
cmp [eax+30h] edx +
jnz loc_1009C5E  +
cmp byte ptr [ebp+arg_8+3] 0 +
jz loc_1009C2C  +
mov ecx [eax+28h] +
mov edi [eax+2Ch] +
mov ebx ecx +
mov eax edi +
mov [ebp+var_C] ebx +
mov [ebp+var_8] eax +
mov byte ptr [ebp+arg_8+3] 0 +
jmp loc_1009C5E  +
mov edx [ebp+var_8] +
cmp edx [eax+2Ch] +
jl loc_1009C4A  +
jg loc_1009C3E  +
mov edx [eax+28h] +
cmp [ebp+var_C] edx +
jbe loc_1009C4A  +
mov edx [eax+28h] +
mov [ebp+var_C] edx +
mov edx [eax+2Ch] +
mov [ebp+var_8] edx +
cmp edi [eax+2Ch] +
jg loc_1009C5C  +
jl loc_1009C56  +
cmp ecx [eax+28h] +
jnb loc_1009C5C  +
mov ecx [eax+28h] +
mov edi [eax+2Ch] +
xor edx edx +
mov eax [ebp+var_4] +
inc eax  +
mov [ebp+var_4] eax +
cmp eax [ebp+arg_4] +
jb loc_1009BFB  +
cmp byte ptr [ebp+arg_8+3] 0 +
jnz loc_1009CBF  +
sub ecx [ebp+var_C] +
mov eax [esi+4] +
sbb edi [ebp+var_8] +
mov ebx ecx +
mov ecx 989680h +
mul  ecx +
cmp edi edx +
ja loc_1009CD5  +
jb loc_1009C8C  +
cmp ebx eax +
ja loc_1009CD5  +
xor edx edx +
jmp loc_1009CBF  +
cmp eax 1 +
jnz loc_1009CBF  +
xor edi edi +
xor ecx ecx +
cmp [ebp+arg_4] edx +
jbe loc_1009CBA  +
mov eax [ebp+arg_0] +
mov eax [eax+ecx*4] +
cmp [eax+18h] edx +
jnz loc_1009CB4  +
cmp [eax+1Ch] edx +
jnz loc_1009CB4  +
cmp [eax+30h] edx +
jnz loc_1009CB4  +
inc edi  +
inc ecx  +
cmp ecx [ebp+arg_4] +
jb loc_1009C9E  +
cmp edi [esi+4] +
jb loc_1009D21  +
mov esi [esi+0Ch] +
cmp esi edx +
jnz loc_1009BD5  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push 0E5Bh  +
call sub_100C967  +
push 0  +
push 989680h  +
push edi  +
push ebx  +
call __aulldvrm  +
push dword ptr [esi+4]  +
mov edi ds:wprintf +
push ecx  +
push edx  +
push eax  +
push offset aI64u_07usUs  +
mov [ebp+var_8] ebx +
call edi  +
push offset asc_1002580  +
call edi  +
push dword ptr [esi+8]  +
push offset a0x08x_1  +
push 0E5Ah  +
call sub_100CA2C  +
add esp 24h +
jmp loc_1009D58  +
push 0E5Ch  +
call sub_100C967  +
push dword ptr [esi+4]  +
push edi  +
mov edi ds:wprintf +
push offset aUU  +
call edi  +
push offset asc_1002580  +
call edi  +
push dword ptr [esi+8]  +
push offset a0x08x_1  +
push 0E5Ah  +
call sub_100CA2C  +
add esp 1Ch +
mov esi [esi+8] +
jmp loc_1009CCC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_10] esi +
mov [ebp+var_18] esi +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
mov [ebp+hMem] esi +
cmp edi esi +
jz loc_100A035  +
cmp byte ptr [edi+4] 0 +
jz loc_1009EE9  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax] +
jnz loc_1009DAB  +
push 70Ch  +
call sub_100CAAA  +
jmp loc_1009DB7  +
push eax  +
push 70Dh  +
call sub_100CAAA  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push 0  +
push dword ptr [edi]  +
push [ebp+arg_0]  +
call sub_100D99F  +
push offset asc_1002440  +
mov edi eax +
call ds:wprintf  +
pop ecx  +
test edi edi +
jl loc_100A019  +
mov eax [ebp+var_10] +
lea ecx [ebp+uBytes] +
push ecx  +
mov [ebp+var_4] eax +
add eax [ebp+var_18] +
push 4  +
pop ecx  +
mov [ebp+var_10] eax +
mul  ecx +
push edx  +
mov [ebp+hMem] esi +
push eax  +
xor esi esi +
call sub_100985E  +
mov edi eax +
test edi edi +
jl loc_100A05A  +
push [ebp+uBytes]  +
mov ebx ds:LocalAlloc +
push 40h  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_100A02E  +
mov edi [ebp+var_4] +
mov ecx edi +
cmp ecx [ebp+var_10] +
jnb loc_1009E48  +
push 60h  +
push 40h  +
call ebx  +
mov [esi+edi*4] eax +
test eax eax +
jz loc_100A02E  +
inc edi  +
cmp edi [ebp+var_10] +
jb loc_1009E2E  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_1009E78  +
jbe loc_1009E62  +
mov edx [ebp+hMem] +
mov eax esi +
sub edx esi +
mov edi ecx +
mov ebx [edx+eax] +
mov [eax] ebx +
add eax 4 +
dec edi  +
jnz loc_1009E57  +
cmp [ebp+hMem] 0 +
jz loc_1009E78  +
push [ebp+hMem]  +
call ds:LocalFree  +
and [ebp+hMem] 0 +
mov ecx [ebp+var_4] +
xor eax eax +
xor edi edi +
cmp [ebp+var_18] eax +
jbe loc_100A005  +
lea ecx [esi+ecx*4] +
mov ebx [ebp+var_C] +
mov ebx [eax+ebx] +
mov edx [ecx] +
mov [edx] ebx +
mov ebx [ebp+var_C] +
mov ebx [eax+ebx+0Ch] +
mov edx [ecx] +
mov [edx+14h] ebx +
mov ebx [ebp+var_C] +
mov ebx [eax+ebx+4] +
mov edx [ecx] +
mov [edx+0Ch] ebx +
mov ebx [ebp+var_C] +
mov ebx [eax+ebx+8] +
mov edx [ecx] +
mov [edx+10h] ebx +
mov ebx [ebp+var_C] +
mov bl [eax+ebx+10h] +
mov edx [ecx] +
mov [edx+4] bl +
mov ebx [ebp+var_C] +
xor edx edx +
mov [eax+ebx] edx +
mov ebx [ebp+var_C] +
mov [eax+ebx+4] edx +
mov ebx [ebp+var_C] +
mov [eax+ebx+8] edx +
inc edi  +
add ecx 4 +
add eax 14h +
cmp edi [ebp+var_18] +
jb loc_1009E88  +
jmp loc_100A005  +
mov eax [ebp+var_10] +
mov [ebp+var_4] eax +
mov eax [edi] +
xor edi edi +
mov [ebp+hMem] esi +
mov esi ds:wcschr +
inc edi  +
jmp loc_1009F03  +
inc edi  +
add eax 2 +
push 2Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009EFF  +
add edi [ebp+var_4] +
mov ebx ds:LocalAlloc +
mov eax edi +
shl eax 2 +
push eax  +
push 40h  +
mov [ebp+var_10] edi +
call ebx  +
mov esi eax +
test esi esi +
jz loc_100A02E  +
mov eax [ebp+var_4] +
mov [ebp+var_14] eax +
cmp eax edi +
jnb loc_1009F54  +
push 60h  +
push 40h  +
call ebx  +
mov ecx [ebp+var_14] +
mov [esi+ecx*4] eax +
test eax eax +
jz loc_100A02E  +
inc [ebp+var_14]  +
cmp [ebp+var_14] edi +
jb loc_1009F38  +
mov edx [ebp+var_4] +
test edx edx +
jz loc_1009F7C  +
jbe loc_1009F6F  +
mov ecx [ebp+hMem] +
mov eax esi +
sub ecx esi +
mov ebx [eax+ecx] +
mov [eax] ebx +
add eax 4 +
dec edx  +
jnz loc_1009F64  +
push [ebp+hMem]  +
call ds:LocalFree  +
and [ebp+hMem] 0 +
mov eax [ebp+arg_4] +
mov ebx [ebp+var_4] +
mov eax [eax] +
cmp ebx edi +
jmp loc_100A000  +
push 2Ch  +
push [ebp+var_14]  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+var_20] eax +
test eax eax +
jz loc_1009FA1  +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_14] +
push 2Ah  +
pop ecx  +
cmp cx [eax] +
jnz loc_1009FB8  +
mov ecx [esi+ebx*4] +
inc eax  +
inc eax  +
mov byte ptr [ecx+4] 1 +
mov [ebp+var_14] eax +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1009FBB  +
sub eax edx +
sar eax 1 +
lea edi [eax+1] +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ecx [esi+ebx*4] +
mov [ecx] eax +
mov eax [esi+ebx*4] +
cmp dword ptr [eax] 0 +
jz loc_100A02E  +
push [ebp+var_14]  +
push edi  +
push dword ptr [eax]  +
call sub_1003FAE  +
mov edi eax +
test edi edi +
jl loc_100A05A  +
mov eax [ebp+var_20] +
add eax 2 +
inc ebx  +
cmp ebx [ebp+var_10] +
mov [ebp+var_14] eax +
jb loc_1009F88  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
mov [ebp+arg_4] eax +
test eax eax +
jz loc_100A035  +
mov edi eax +
jmp loc_1009D8C  +
push edi  +
push offset a0x08x_  +
push 642h  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_100A05A  +
mov edi 8007000Eh +
jmp loc_100A05A  +
mov ecx [ebp+var_10] +
xor eax eax +
test ecx ecx +
jbe loc_100A04C  +
mov edx [esi+eax*4] +
mov edi [ebp+arg_10] +
inc eax  +
mov [edx+48h] edi +
cmp eax ecx +
jb loc_100A03E  +
mov eax [ebp+arg_C] +
mov [eax] ecx +
mov eax [ebp+arg_8] +
xor edi edi +
mov [eax] esi +
xor esi esi +
xor ebx ebx +
cmp [ebp+hMem] ebx +
jz loc_100A080  +
cmp [ebp+var_4] ebx +
jbe loc_100A077  +
mov eax [ebp+hMem] +
push dword ptr [eax+ebx*4]  +
call sub_1009407  +
inc ebx  +
cmp ebx [ebp+var_4] +
jb loc_100A066  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jz loc_100A0B1  +
mov [ebp+var_14] ebx +
cmp [ebp+var_18] ebx +
jbe loc_100A0A8  +
mov eax [ebp+var_C] +
add eax ebx +
push eax  +
call sub_100D58F  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
add ebx 14h +
cmp eax [ebp+var_18] +
jb loc_100A08F  +
push [ebp+var_C]  +
call ds:LocalFree  +
test esi esi +
jz loc_100A0D1  +
xor ebx ebx +
cmp [ebp+var_10] ebx +
jbe loc_100A0CA  +
push dword ptr [esi+ebx*4]  +
call sub_1009407  +
inc ebx  +
cmp ebx [ebp+var_10] +
jb loc_100A0BC  +
push esi  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+var_64] ebx +
xor eax eax +
lea edi [ebp+var_60] +
stos   +
stos   +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_21] bl +
stos   +
mov [ebp+var_18] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_3C] ebx +
mov [ebp+var_34] ebx +
mov [ebp+lpParameter] ebx +
call sub_100D19E  +
mov edi eax +
cmp edi ebx +
jl loc_100A912  +
lea eax [ebp+var_3C] +
push eax  +
push esi  +
call sub_10094C7  +
mov edi eax +
cmp edi ebx +
jl loc_100A89C  +
lea eax [ebp+var_34] +
push eax  +
push esi  +
call sub_10095EF  +
mov edi eax +
cmp edi ebx +
jl loc_100A89C  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_68] +
push eax  +
push offset aThreads  +
push esi  +
call sub_1003218  +
mov edi ds:wcstoul +
test al al +
jz loc_100A1D2  +
push [ebp+var_20]  +
mov [ebp+var_54] ebx +
push esi  +
call sub_1003267  +
push ebx  +
lea eax [ebp+var_54] +
push eax  +
push [ebp+var_68]  +
call edi  +
mov ecx [ebp+var_54] +
add esp 0Ch +
mov [ebp+var_20] eax +
cmp ecx ebx +
jz loc_100A1B4  +
xor edx edx +
cmp dx [ecx] +
jnz loc_100A1B4  +
cmp eax 1 +
jb loc_100A1A4  +
cmp eax 32h +
jbe loc_100A1D9  +
push eax  +
push offset aU_  +
push 643h  +
jmp loc_100A2B3  +
push 57Eh  +
call sub_100C8E3  +
push [ebp+var_68]  +
push offset aS__0  +
call ds:wprintf  +
pop ecx  +
jmp loc_100A2E0  +
mov [ebp+var_20] 3 +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
push offset aTimeout  +
push esi  +
call sub_1003218  +
test al al +
jz loc_100A20E  +
push [ebp+var_40]  +
push esi  +
call sub_1003267  +
push ebx  +
push ebx  +
push [ebp+var_6C]  +
call edi  +
add esp 0Ch +
imul eax eax +
mov [ebp+var_40] eax +
jmp loc_100A215  +
mov [ebp+var_40] 3E8h +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_50] +
push eax  +
push offset aIpprotocol  +
push esi  +
call sub_1003218  +
test al al +
jz loc_100A252  +
push [ebp+var_44]  +
push esi  +
call sub_1003267  +
mov edi ds:_wcsicmp +
push offset a4  +
push dword ptr [ebp+var_50]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A28D  +
mov [ebp+var_18] 1 +
lea eax [ebp+var_44] +
push eax  +
push ebx  +
push offset aNowarn  +
push esi  +
call sub_1003218  +
test al al +
jz loc_100A273  +
push [ebp+var_44]  +
push esi  +
call sub_1003267  +
mov [ebp+var_21] 1 +
mov eax [esi+4] +
cmp eax [esi+8] +
jz loc_100A2EB  +
push 57Eh  +
call sub_100C8E3  +
mov edi ds:wprintf +
jmp loc_100A2D1  +
push offset a6  +
push dword ptr [ebp+var_50]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100A2A6  +
mov [ebp+var_18] 2 +
jmp loc_100A252  +
push dword ptr [ebp+var_50]  +
push offset aS__0  +
push 57Eh  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_100A2E1  +
mov eax [esi+8] +
mov ecx [esi] +
push dword ptr [ecx+eax*4]  +
push offset aS  +
call edi  +
inc dword ptr [esi+8]  +
pop ecx  +
pop ecx  +
mov eax [esi+4] +
cmp eax [esi+8] +
jnz loc_100A2BD  +
push offset word_10012AC  +
call edi  +
pop ecx  +
mov edi 80070057h +
jmp loc_100A89C  +
push [ebp+var_40]  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_3C]  +
push [ebp+var_18]  +
call sub_1009D65  +
mov edi eax +
cmp edi ebx +
mov ebx [ebp+var_28] +
jl loc_100A87C  +
mov ecx [ebp+var_1C] +
xor eax eax +
test ecx ecx +
jbe loc_100A325  +
mov edx [ebx+eax*4] +
mov esi [ebp+var_18] +
inc eax  +
mov [edx+8] esi +
cmp eax ecx +
jb loc_100A317  +
mov eax [ebp+var_20] +
cmp eax ecx +
jbe loc_100A331  +
mov eax ecx +
mov [ebp+var_20] eax +
mov esi ds:wprintf +
cmp eax 1 +
ja loc_100A3E2  +
xor edi edi +
test ecx ecx +
jbe loc_100A381  +
push offset asc_1002440  +
call esi  +
push [ebp+var_1C]  +
mov eax [ebp+var_28] +
lea ebx [edi+1] +
lea edi [eax+edi*4] +
mov eax [edi] +
push ebx  +
push dword ptr [eax]  +
push offset aSUOfU___  +
push 0E16h  +
call sub_100CA2C  +
add esp 18h +
push dword ptr [edi]  +
call sub_1009890  +
mov edi ebx +
cmp edi [ebp+var_1C] +
jb loc_100A346  +
mov ebx [ebp+var_28] +
and [ebp+var_18] 0 +
cmp [ebp+var_1C] 0 +
jbe loc_100A3B4  +
push offset asc_1002440  +
call esi  +
pop ecx  +
push [ebp+var_18]  +
push [ebp+var_1C]  +
push ebx  +
call sub_1009A06  +
mov edi eax +
test edi edi +
jl loc_100A87C  +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
cmp eax [ebp+var_1C] +
jb loc_100A38B  +
push offset asc_1002440  +
call esi  +
xor eax eax +
pop ecx  +
mov [ebp+var_4C] eax +
cmp [ebp+var_1C] eax +
jbe loc_100A4FD  +
mov ecx [ebx+eax*4] +
cmp byte ptr [ecx+4] 0 +
jnz loc_100A4DF  +
inc eax  +
cmp eax [ebp+var_1C] +
jb loc_100A3CA  +
jmp loc_100A4FD  +
mov ecx [ebp+var_1C] +
imul eax eax +
mov [ebp+var_60] ecx +
mov [ebp+var_64] ebx +
xor edi edi +
push eax  +
mov [ebp+var_5C] edi +
push 40h  +
mov [ebp+var_58] edi +
call ds:LocalAlloc  +
mov [ebp+lpParameter] eax +
cmp eax edi +
jnz loc_100A410  +
mov edi 8007000Eh +
jmp loc_100A87C  +
mov [ebp+var_18] edi +
cmp [ebp+var_20] edi +
jbe loc_100A451  +
mov edi [ebp+lpParameter] +
lea eax [ebp+var_64] +
mov [edi+8] eax +
lea eax [ebp+ThreadId] +
push eax  +
xor eax eax +
push eax  +
push edi  +
push offset StartAddress  +
push eax  +
push eax  +
mov dword ptr [edi+4] 0FFFFFFFFh +
call ds:CreateThread  +
mov [edi] eax +
test eax eax +
jz loc_100A493  +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
add edi 0Ch +
cmp eax [ebp+var_20] +
jb loc_100A41B  +
mov eax [ebp+var_58] +
cmp eax [ebp+var_1C] +
jnb loc_100A37E  +
push offset asc_1002800  +
push 0E16h  +
call sub_100CA2C  +
xor ebx ebx +
pop ecx  +
pop ecx  +
cmp [ebp+var_20] ebx +
jbe loc_100A4BF  +
mov edi [ebp+lpParameter] +
add edi 4 +
cmp ebx 10h +
jnb loc_100A4BF  +
mov eax [edi] +
cmp eax [ebp+var_1C] +
jnb loc_100A4AE  +
inc eax  +
push eax  +
push offset a2u  +
call esi  +
pop ecx  +
jmp loc_100A4B5  +
call ds:GetLastError  +
test eax eax +
jle loc_100A4A7  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_100A87C  +
push offset asc_10027EC  +
call esi  +
inc ebx  +
add edi 0Ch +
pop ecx  +
cmp ebx [ebp+var_20] +
jb loc_100A47B  +
push [ebp+var_1C]  +
push [ebp+var_58]  +
push offset aUOfU  +
call esi  +
add esp 0Ch +
push 0FAh  +
call ds:Sleep  +
jmp loc_100A451  +
mov eax ecx +
mov ecx [eax+28h] +
mov edx [eax+2Ch] +
mov [ebp+var_4C] eax +
xor edi edi +
mov eax [ebx+edi*4] +
add eax 28h +
sub [eax] ecx +
sbb [eax+4] edx +
inc edi  +
cmp edi [ebp+var_1C] +
jb loc_100A4EC  +
xor eax eax +
mov [ebp+var_48] eax +
mov [ebp+var_18] eax +
cmp [ebp+var_1C] eax +
jbe loc_100A83A  +
mov ebx 0C58h +
mov eax [ebp+var_28] +
mov ecx [ebp+var_18] +
lea edi [eax+ecx*4] +
mov eax [edi] +
cmp byte ptr [eax+4] 0 +
mov ecx offset aPdc +
jnz loc_100A52E  +
mov ecx offset dword_1001F30 +
push ecx  +
push dword ptr [eax]  +
push offset aSS_2  +
call esi  +
mov eax [edi] +
add esp 0Ch +
cmp dword ptr [eax+14h] 0 +
jnz loc_100A581  +
cmp dword ptr [eax+18h] 80072AF9h +
push offset asc_10027A0  +
jnz loc_100A567  +
call esi  +
mov [esp+88h+var_88] offset aWsahost_not_fo +
push ebx  +
call sub_100CA2C  +
pop ecx  +
pop ecx  +
jmp loc_100A828  +
call esi  +
mov eax [edi] +
push dword ptr [eax+18h]  +
push offset a0x08x_2  +
push ebx  +
call sub_100CA2C  +
add esp 10h +
jmp loc_100A828  +
and [ebp+hMem] 0 +
lea ecx [ebp+hMem] +
push ecx  +
mov ecx [eax+10h] +
push dword ptr [ecx]  +
push dword ptr [eax+0Ch]  +
call sub_100D0F1  +
test eax eax +
jge loc_100A5B4  +
push offset asc_10027A0  +
call esi  +
mov [esp+88h+var_88] offset asc_1002758 +
push 0C59h  +
call sub_100CA2C  +
jmp loc_100A5BE  +
push [ebp+hMem]  +
push offset aS_4  +
call esi  +
cmp [ebp+hMem] 0 +
pop ecx  +
pop ecx  +
jz loc_100A5CF  +
push [ebp+hMem]  +
call ds:LocalFree  +
push offset aIcmp  +
call esi  +
mov eax [edi] +
pop ecx  +
mov ecx [eax+1Ch] +
test ecx ecx +
jge loc_100A61D  +
cmp ecx 80072B02h +
jnz loc_100A60C  +
push offset aIp_req_timed_o  +
push ebx  +
call sub_100CA2C  +
push 3E8h  +
push offset aUms  +
push 0E13h  +
call sub_100CA2C  +
add esp 14h +
jmp loc_100A633  +
push ecx  +
push offset a0x08x_1  +
push ebx  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_100A633  +
push dword ptr [eax+20h]  +
push offset aUms_0  +
call esi  +
pop ecx  +
pop ecx  +
push 0E14h  +
call sub_100C967  +
push offset aNtp_0  +
call esi  +
mov eax [edi] +
mov eax [eax+30h] +
pop ecx  +
test eax eax +
jge loc_100A6A1  +
cmp eax 80072746h +
jnz loc_100A667  +
push offset aWsaeconnreset  +
push ebx  +
call sub_100CA2C  +
pop ecx  +
pop ecx  +
push 0E11h  +
call sub_100C967  +
jmp loc_100A828  +
cmp eax 800705B4h +
jnz loc_100A68D  +
push offset aError_timeout  +
push ebx  +
call sub_100CA2C  +
mov eax [edi] +
push dword ptr [eax+48h]  +
push 0E12h  +
call sub_100CAAA  +
jmp loc_100A579  +
push eax  +
push offset a0x08x_1  +
push ebx  +
call sub_100CA2C  +
add esp 0Ch +
jmp loc_100A828  +
mov eax [edi] +
mov ecx [eax+28h] +
mov eax [eax+2Ch] +
test eax eax +
jg loc_100A6C3  +
jl loc_100A6B3  +
test ecx ecx +
jnb loc_100A6C3  +
neg ecx  +
adc eax 0 +
neg eax  +
mov [ebp+uID] offset WideCharStr +
jmp loc_100A6CA  +
mov [ebp+uID] offset asc_1002688 +
push 0  +
push 989680h  +
push eax  +
push ecx  +
call __alldvrm  +
push ecx  +
push edx  +
push eax  +
push [ebp+uID]  +
mov [ebp+var_74] ebx +
push offset aSI64u_07us  +
call esi  +
xor ebx ebx +
add esp 14h +
cmp [ebp+var_4C] ebx +
jz loc_100A704  +
mov eax [ebp+var_4C] +
push dword ptr [eax]  +
push 0E17h  +
call sub_100CAAA  +
pop ecx  +
jmp loc_100A70E  +
push 0E18h  +
call sub_100CAAA  +
mov eax [edi] +
cmp dword ptr [eax+34h] 0 +
pop ecx  +
mov ecx 0E59h +
mov [ebp+uID] ecx +
jnz loc_100A724  +
mov [ebp+uID] ecx +
jmp loc_100A78C  +
cmp dword ptr [eax+38h] 1 +
ja loc_100A76F  +
push 27h  +
pop eax  +
mov word ptr [ebp+var_14] ax +
mov eax [edi] +
movzx ax byte ptr [eax+34h] +
mov word ptr [ebp+var_14+2] ax +
mov eax [edi] +
movzx ax byte ptr [eax+35h] +
mov [ebp+var_10] ax +
mov eax [edi] +
movzx ax byte ptr [eax+36h] +
mov [ebp+var_E] ax +
mov eax [edi] +
movzx ax byte ptr [eax+37h] +
mov [ebp+var_C] ax +
push 27h  +
pop eax  +
mov [ebp+var_A] ax +
xor eax eax +
lea ebx [ebp+var_14] +
mov [ebp+var_8] ax +
jmp loc_100A78C  +
mov ecx [eax+40h] +
test ecx ecx +
jz loc_100A77A  +
mov ebx [ecx] +
jmp loc_100A78C  +
mov eax [eax+44h] +
test eax eax +
jz loc_100A785  +
mov ebx eax +
jmp loc_100A78C  +
mov [ebp+uID] 0E58h +
push offset aRefid  +
call esi  +
mov eax [edi] +
cmp dword ptr [eax+40h] 0 +
pop ecx  +
jnz loc_100A7CA  +
cmp dword ptr [eax+44h] 0 +
jnz loc_100A7CA  +
test ebx ebx +
jz loc_100A7B2  +
push ebx  +
push offset aS_1  +
call esi  +
pop ecx  +
pop ecx  +
jmp loc_100A7BA  +
push [ebp+uID]  +
call sub_100C8E3  +
mov eax [edi] +
push dword ptr [eax+34h]  +
push offset a0x08x_3  +
call esi  +
pop ecx  +
pop ecx  +
jmp loc_100A802  +
test ebx ebx +
jz loc_100A7DA  +
push ebx  +
push offset aS_1  +
call esi  +
pop ecx  +
pop ecx  +
jmp loc_100A7E2  +
push [ebp+uID]  +
call sub_100C8E3  +
mov eax [edi] +
movzx ecx byte ptr [eax+37h] +
push ecx  +
movzx ecx byte ptr [eax+36h] +
push ecx  +
movzx ecx byte ptr [eax+35h] +
movzx eax byte ptr [eax+34h] +
push ecx  +
push eax  +
push offset aU_U_U_U  +
call esi  +
add esp 14h +
push offset asc_10025FC  +
call esi  +
mov eax [edi] +
push dword ptr [eax+38h]  +
push offset aD_1  +
push 0E19h  +
call sub_100CA2C  +
add esp 10h +
inc [ebp+var_48]  +
mov ebx 0C58h +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
cmp eax [ebp+var_1C] +
jb loc_100A513  +
mov ebx [ebp+var_28] +
push [ebp+var_34]  +
push [ebp+var_1C]  +
push ebx  +
call sub_1009BC0  +
cmp [ebp+var_48] 0 +
mov edi eax +
jz loc_100A87C  +
cmp [ebp+var_21] 0 +
jnz loc_100A87C  +
push 0DADh  +
call sub_100C8E3  +
push 0DAEh  +
call sub_100C8E3  +
push 0DAFh  +
call sub_100C8E3  +
push 0DB0h  +
call sub_100C8E3  +
test ebx ebx +
jz loc_100A89C  +
xor esi esi +
cmp [ebp+var_1C] esi +
jbe loc_100A895  +
push dword ptr [ebx+esi*4]  +
call sub_1009407  +
inc esi  +
cmp esi [ebp+var_1C] +
jb loc_100A887  +
push ebx  +
call ds:LocalFree  +
mov esi [ebp+var_3C] +
xor ebx ebx +
cmp esi ebx +
jz loc_100A8B8  +
mov eax esi +
mov esi [esi+8] +
push eax  +
call ds:LocalFree  +
cmp esi ebx +
jnz loc_100A8A5  +
mov [ebp+var_3C] esi +
call sub_100D1EA  +
cmp [ebp+var_34] ebx +
jz loc_100A8CA  +
push [ebp+var_34]  +
call sub_10095CA  +
cmp [ebp+lpParameter] ebx +
jz loc_100A90E  +
mov eax [ebp+var_60] +
mov [ebp+var_5C] eax +
mov [ebp+var_18] ebx +
cmp [ebp+var_20] ebx +
jbe loc_100A905  +
mov esi [ebp+lpParameter] +
mov eax [esi] +
cmp eax ebx +
jz loc_100A8F7  +
push 0FFFFFFFFh  +
push eax  +
call ds:WaitForSingleObject  +
push dword ptr [esi]  +
call ds:CloseHandle  +
inc [ebp+var_18]  +
mov eax [ebp+var_18] +
add esi 0Ch +
cmp eax [ebp+var_20] +
jb loc_100A8E0  +
push [ebp+lpParameter]  +
call ds:LocalFree  +
cmp edi ebx +
jz loc_100A925  +
push edi  +
push offset a0x08x_1  +
push 0E15h  +
call sub_100CA2C  +
add esp 0Ch +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push hHandle  +
call ds:WaitForSingleObject  +
mov eax [ebp+10h] +
push hHandle  +
mov dword_10105BC eax +
mov eax [ebp+0Ch] +
mov dword_10105C0 eax +
call ds:SetEvent  +
push 3  +
pop eax  +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
inc eax  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
call [ebp+arg_0]  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jnz loc_100A9CD  +
call ds:GetLastError  +
test eax eax +
jg loc_100A9C1  +
mov esi eax +
jmp loc_100AA10  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100A9BD  +
push offset aDllregisterser  +
push edi  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_100A9F5  +
call ds:GetLastError  +
test eax eax +
jle loc_100A9F1  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100AA09  +
call eax  +
mov esi eax +
test esi esi +
jl loc_100AA09  +
push 70Eh  +
call sub_100C967  +
xor esi esi +
push edi  +
call ds:FreeLibrary  +
test esi esi +
jge loc_100AA40  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_100AA40  +
push dword ptr [ebp+hMem]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
push offset ServiceName  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jnz loc_100AA7E  +
call ds:GetLastError  +
test eax eax +
jg loc_100AA72  +
mov esi eax +
jmp loc_100AAC1  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100AA6E  +
push offset aDllunregisters  +
push edi  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_100AAA6  +
call ds:GetLastError  +
test eax eax +
jle loc_100AAA2  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100AABA  +
call eax  +
mov esi eax +
test esi esi +
jl loc_100AABA  +
push 70Fh  +
call sub_100C967  +
xor esi esi +
push edi  +
call ds:FreeLibrary  +
test esi esi +
jge loc_100AAF1  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_100AAF1  +
push dword ptr [ebp+hMem]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor edi edi +
push edi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+var_4] edi +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
cmp eax edi +
jz loc_100AB41  +
jg loc_100AB35  +
mov [ebp+var_4] eax +
jmp loc_100AC63  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100AB2D  +
push ebx  +
push esi  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+nSize] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push edi  +
mov ebx offset aServicedll +
push ebx  +
push [ebp+hKey]  +
mov [ebp+nSize] edi +
call esi  +
cmp eax edi +
jz loc_100AB79  +
jle loc_100AB71  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
jmp loc_100AC61  +
cmp [ebp+Type] 2 +
jz loc_100AB8B  +
mov [ebp+var_4] 8000FFFFh +
jmp loc_100AC61  +
push [ebp+nSize]  +
mov edi ds:LocalAlloc +
push 40h  +
call edi  +
mov [ebp+hMem] eax +
test eax eax +
jnz loc_100ABAB  +
mov [ebp+var_4] 8007000Eh +
jmp loc_100AC50  +
lea ecx [ebp+nSize] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jz loc_100ABD6  +
jg loc_100ABCA  +
mov [ebp+var_4] eax +
jmp loc_100AC50  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100ABC2  +
mov eax [ebp+nSize] +
mov ebx [ebp+hMem] +
mov esi ds:ExpandEnvironmentStringsW +
xor ecx ecx +
push ecx  +
push ecx  +
shr eax 1 +
push ebx  +
mov [ebx+eax*2-2] cx +
call esi  +
mov [ebp+nSize] eax +
test eax eax +
jnz loc_100AC01  +
call ds:GetLastError  +
test eax eax +
jmp loc_100ABC0  +
add eax eax +
push eax  +
push 40h  +
call edi  +
mov edi eax +
test edi edi +
jnz loc_100AC17  +
mov [ebp+var_4] 8007000Eh +
jmp loc_100AC45  +
push [ebp+nSize]  +
push edi  +
push ebx  +
call esi  +
mov [ebp+nSize] eax +
test eax eax +
jnz loc_100AC3E  +
call ds:GetLastError  +
test eax eax +
jle loc_100AC39  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
jmp loc_100AC45  +
mov eax [ebp+arg_0] +
mov [eax] edi +
xor edi edi +
test edi edi +
jz loc_100AC50  +
push edi  +
call ds:LocalFree  +
cmp [ebp+hMem] 0 +
jz loc_100AC5F  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor edi edi +
pop esi  +
pop ebx  +
cmp [ebp+hKey] edi +
pop edi  +
jz loc_100AC72  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+ServiceStartTable.lpServiceName] offset ServiceName +
mov [ebp+ServiceStartTable.lpServiceProc] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov dword ptr [ebp+hLibModule] ebx +
mov [ebp+hMem] ebx +
call sub_100AAFC  +
mov esi eax +
cmp esi ebx +
jl loc_100AD3D  +
push [ebp+hMem]  +
call ds:LoadLibraryW  +
mov edi eax +
mov dword ptr [ebp+hLibModule] edi +
cmp edi ebx +
jnz loc_100ACDE  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100ACDA  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100AD3D  +
mov esi ds:GetProcAddress +
push offset aW32tmservicema  +
push edi  +
call esi  +
mov [ebp+ServiceStartTable.lpServiceProc] eax +
cmp eax ebx +
jz loc_100ACC6  +
push offset aFnw32tmregiste  +
push edi  +
call esi  +
cmp eax ebx +
jz loc_100ACC6  +
mov ecx ds:RegisterServiceCtrlHandlerExW +
push offset aFnw32tmsetserv  +
push edi  +
mov [eax] ecx +
call esi  +
cmp eax ebx +
jz loc_100ACC6  +
mov ecx ds:SetServiceStatus +
push offset aFnw32tmi_scset  +
push edi  +
mov [eax] ecx +
call esi  +
cmp eax ebx +
jz loc_100ACC6  +
mov dword ptr [eax] offset loc_100A978 +
lea eax [ebp+ServiceStartTable] +
push eax  +
call ds:StartServiceCtrlDispatcherW  +
test eax eax +
jz loc_100ACC6  +
xor esi esi +
mov edi ds:LocalFree +
cmp [ebp+hMem] ebx +
jz loc_100AD4D  +
push [ebp+hMem]  +
call edi  +
cmp dword ptr [ebp+hLibModule] ebx +
jz loc_100AD5B  +
push dword ptr [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp esi ebx +
jge loc_100AD87  +
lea eax [ebp+hLibModule] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_100AD87  +
push dword ptr [ebp+hLibModule]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+hLibModule]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
push esi  +
xor esi esi +
inc esi  +
push edi  +
test eax eax +
jz loc_100ADBB  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100ADAA  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100ADC1  +
sub eax edx +
sar eax 1 +
add esi eax +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
test edi edi +
jz loc_100AE0F  +
mov eax [ebx] +
test eax eax +
jnz loc_100ADEE  +
mov [edi] ax +
jmp loc_100ADF6  +
push eax  +
push esi  +
push edi  +
call sub_1003FAE  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_1004023  +
mov eax [ebx] +
test eax eax +
jz loc_100AE0D  +
push eax  +
call ds:LocalFree  +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
cmp hDlg ebx +
jz loc_100B2AD  +
push esi  +
push edi  +
push offset aType_0  +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+hMem] ebx +
call sub_100AD93  +
mov eax dword_1010598 +
and eax 0FFFFFEFFh +
dec eax  +
mov esi offset aUnknown +
jz loc_100AE95  +
dec eax  +
jz loc_100AE8E  +
sub eax 0Eh +
jz loc_100AE87  +
sub eax 10h +
lea eax [ebp+hMem] +
jz loc_100AE80  +
push esi  +
jmp loc_100AEA0  +
push offset aService_win32_  +
jmp loc_100AEA0  +
push offset aService_win3_0  +
jmp loc_100AE9A  +
push offset aService_file_s  +
jmp loc_100AE9A  +
push offset aService_kernel  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
test dword_1010598 100h +
jz loc_100AEC3  +
push offset aService_intera  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aState  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
mov eax dword_101059C +
dec eax  +
jz loc_100AF21  +
dec eax  +
jz loc_100AF1A  +
dec eax  +
jz loc_100AF13  +
dec eax  +
jz loc_100AF0C  +
dec eax  +
jz loc_100AF05  +
dec eax  +
jz loc_100AEFE  +
dec eax  +
lea eax [ebp+hMem] +
jz loc_100AEF7  +
push esi  +
jmp loc_100AF2C  +
push offset aService_paused  +
jmp loc_100AF2C  +
push offset aService_pause_  +
jmp loc_100AF26  +
push offset aService_contin  +
jmp loc_100AF26  +
push offset aService_runnin  +
jmp loc_100AF26  +
push offset aService_stop_p  +
jmp loc_100AF26  +
push offset aService_start_  +
jmp loc_100AF26  +
push offset aService_stoppe  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aControlsAccept  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
mov esi ds:GetDlgItem +
push ebx  +
push 3F3h  +
push hDlg  +
call esi  +
mov edi ds:EnableWindow +
push eax  +
call edi  +
test byte_10105A0 1 +
mov [ebp+var_205] 1 +
jz loc_100AF8B  +
push offset aService_accept  +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+var_205] bl +
call sub_100AD93  +
push 1  +
jmp loc_100AF8C  +
push ebx  +
push 3EAh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 2 +
jz loc_100AFFF  +
cmp [ebp+var_205] bl +
jz loc_100AFB5  +
mov [ebp+var_205] bl +
jmp loc_100AFC6  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_0  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
mov eax dword_101059C +
cmp eax 6 +
jz loc_100AFEA  +
cmp eax 7 +
jz loc_100AFEA  +
push 1  +
jmp loc_100B000  +
push ebx  +
push 3EBh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push 1  +
jmp loc_100B011  +
push ebx  +
push 3EBh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push ebx  +
push 3ECh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 4 +
jz loc_100B060  +
cmp [ebp+var_205] bl +
jz loc_100B03A  +
mov [ebp+var_205] bl +
jmp loc_100B04B  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_1  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push 1  +
jmp loc_100B061  +
push ebx  +
push 3F6h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 8 +
jz loc_100B0B0  +
cmp [ebp+var_205] bl +
jz loc_100B08A  +
mov [ebp+var_205] bl +
jmp loc_100B09B  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_2  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push 1  +
jmp loc_100B0B1  +
push ebx  +
push 3EEh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 10h +
jz loc_100B136  +
cmp [ebp+var_205] bl +
jz loc_100B0DA  +
mov [ebp+var_205] bl +
jmp loc_100B0EB  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_3  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push 1  +
push 3EFh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push 1  +
push 3F0h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push 1  +
push 3F1h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push 1  +
jmp loc_100B16A  +
push ebx  +
push 3EFh  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push ebx  +
push 3F0h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push ebx  +
push 3F1h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
push ebx  +
push 3F2h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 20h +
jz loc_100B1B9  +
cmp [ebp+var_205] bl +
jz loc_100B193  +
mov [ebp+var_205] bl +
jmp loc_100B1A4  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_4  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push 1  +
jmp loc_100B1BA  +
push ebx  +
push 3F4h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
test byte_10105A0 40h +
jz loc_100B211  +
cmp [ebp+var_205] bl +
jnz loc_100B1EC  +
push offset asc_1002B64  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push offset aService_acce_5  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push 1  +
push 3F5h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
jmp loc_100B23B  +
push ebx  +
push 3F5h  +
push hDlg  +
call esi  +
push eax  +
call edi  +
cmp [ebp+var_205] bl +
jz loc_100B23B  +
push offset aNone  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push dword_10105B0  +
lea eax [ebp+var_204] +
push dword_10105AC  +
push nResult  +
push dword_10105A4  +
push offset aWin32ExitCode0  +
push 100h  +
push eax  +
call sub_10049D1  +
xor eax eax +
mov [ebp+var_6] ax +
add esp 1Ch +
lea eax [ebp+var_204] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
call sub_100AD93  +
push [ebp+hMem]  +
push ebx  +
push 0Ch  +
push 3E9h  +
push hDlg  +
call ds:SendDlgItemMessageW  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 7  +
pop ecx  +
mov edi offset dword_1010598 +
movs   +
call sub_100AE1B  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
cmp hDlg edx +
jnz loc_100B2FF  +
mov hDlg esi +
mov eax [ebp+arg_4] +
sub eax 110h +
jz loc_100B3EB  +
dec eax  +
jnz loc_100B38F  +
movzx ecx [ebp+arg_8] +
mov eax 3F0h +
cmp ecx eax +
jg loc_100B3BC  +
jz loc_100B3B0  +
mov eax ecx +
dec eax  +
dec eax  +
jz loc_100B393  +
sub eax 3E8h +
jz loc_100B37F  +
dec eax  +
jz loc_100B373  +
dec eax  +
jz loc_100B367  +
dec eax  +
jz loc_100B35B  +
dec eax  +
jz loc_100B34F  +
dec eax  +
jnz loc_100B38F  +
push dword_10105BC  +
push edx  +
push edx  +
push 7  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 6  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 4  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 3  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 2  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 1  +
call dword_10105C0  +
xor eax eax +
jmp loc_100B3F3  +
cmp dword_101059C 1 +
mov eax 800704C7h +
jnz loc_100B3A6  +
mov eax nResult +
push eax  +
push esi  +
call ds:EndDialog  +
jmp loc_100B3F0  +
push dword_10105BC  +
push edx  +
push edx  +
push 8  +
jmp loc_100B389  +
sub ecx 3F1h +
jz loc_100B3DF  +
dec ecx  +
jz loc_100B3D3  +
dec ecx  +
jz loc_100B38F  +
dec ecx  +
jz loc_100B38F  +
dec ecx  +
jz loc_100B38F  +
dec ecx  +
jmp loc_100B38F  +
push dword_10105BC  +
push edx  +
push edx  +
push 0Ah  +
jmp loc_100B389  +
push dword_10105BC  +
push edx  +
push edx  +
push 9  +
jmp loc_100B389  +
call sub_100AE1B  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:CreateEventW  +
mov hHandle eax +
cmp eax edi +
jnz loc_100B434  +
call ds:GetLastError  +
cmp eax edi +
jle loc_100B430  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_100B4A2  +
lea eax [ebp+ThreadId] +
push eax  +
push edi  +
push [ebp+lpParameter]  +
push offset sub_100A983  +
push edi  +
push edi  +
call ds:CreateThread  +
mov dword_10105B4 eax +
cmp eax edi +
jz loc_100B41C  +
mov esi ds:WaitForSingleObject +
push 0FFFFFFFFh  +
push hHandle  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_100B499  +
push edi  +
push offset DialogFunc  +
push edi  +
push 65h  +
push edi  +
call ds:GetModuleHandleW  +
push eax  +
call ds:DialogBoxParamW  +
cmp eax 0FFFFFFFFh +
jz loc_100B41C  +
cmp eax edi +
mov ebx eax +
jl loc_100B4A2  +
push edi  +
push dword_10105B4  +
call esi  +
cmp eax 102h +
jnz loc_100B4A0  +
mov ebx 8000FFFFh +
jmp loc_100B4A2  +
xor ebx ebx +
mov eax dword_10105B4 +
mov esi ds:CloseHandle +
cmp eax edi +
jz loc_100B4BA  +
push eax  +
call esi  +
mov dword_10105B4 edi +
mov eax hHandle +
cmp eax edi +
jz loc_100B4CC  +
push eax  +
call esi  +
mov hHandle edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+hMem] +
xor ebx ebx +
and dword ptr [ebp+hMem] ebx +
push eax  +
call sub_100AAFC  +
mov esi eax +
test esi esi +
jl loc_100B576  +
push dword ptr [ebp+hMem]  +
call ds:LoadLibraryW  +
mov ebx eax +
test ebx ebx +
jnz loc_100B51E  +
call ds:GetLastError  +
test eax eax +
jle loc_100B51A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100B576  +
mov esi ds:GetProcAddress +
push offset aW32tmservicema  +
push ebx  +
call esi  +
mov edi eax +
test edi edi +
jz loc_100B506  +
push offset aFnw32tmregiste  +
push ebx  +
call esi  +
test eax eax +
jz loc_100B506  +
push offset aFnw32tmsetserv  +
push ebx  +
mov dword ptr [eax] offset loc_100A93D +
call esi  +
test eax eax +
jz loc_100B506  +
push offset aFnw32tmi_scset  +
push ebx  +
mov dword ptr [eax] offset loc_100B2BF +
call esi  +
test eax eax +
jz loc_100B506  +
push edi  +
mov dword ptr [eax] offset loc_100A978 +
call sub_100B3FD  +
mov esi eax +
test esi esi +
jl loc_100B576  +
xor esi esi +
cmp dword ptr [ebp+hMem] 0 +
mov edi ds:LocalFree +
jz loc_100B587  +
push dword ptr [ebp+hMem]  +
call edi  +
test ebx ebx +
jz loc_100B592  +
push ebx  +
call ds:FreeLibrary  +
test esi esi +
jge loc_100B5BE  +
lea eax [ebp+hMem] +
push eax  +
push esi  +
call sub_100D212  +
test eax eax +
jl loc_100B5BE  +
push dword ptr [ebp+hMem]  +
push offset aS_0  +
push 579h  +
call sub_100CA2C  +
add esp 0Ch +
push dword ptr [ebp+hMem]  +
call edi  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov [ebp+uID] 3E9h +
mov [ebp+var_18] 3EAh +
mov [ebp+var_14] 3EBh +
mov [ebp+var_10] 3ECh +
mov [ebp+var_C] 3EDh +
mov [ebp+var_8] 3EEh +
mov [ebp+var_4] 3EFh +
xor esi esi +
push [ebp+esi*4+uID]  +
call sub_100C8E3  +
inc esi  +
cmp esi 7 +
jb loc_100B606  +
call sub_10097C5  +
call sub_10037ED  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:ExpandEnvironmentStringsW +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
push [ebp+lpSrc]  +
mov [ebp+hMem] ebx +
call esi  +
mov [ebp+nSize] eax +
cmp eax ebx +
jnz loc_100B651  +
mov edi 80004005h +
jmp loc_100B6BE  +
mov edi ds:LocalAlloc +
add eax eax +
push eax  +
push 40h  +
call edi  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_100B64A  +
push [ebp+nSize]  +
push eax  +
push [ebp+lpSrc]  +
call esi  +
test eax eax +
jz loc_100B64A  +
mov esi [ebp+arg_0] +
shl esi 2 +
lea eax [esi+4] +
push eax  +
push 40h  +
call edi  +
mov ebx eax +
test ebx ebx +
jz loc_100B64A  +
mov edx [ebp+arg_0] +
test edx edx +
jle loc_100B69F  +
mov eax [ebp+arg_8] +
mov ecx ebx +
sub eax ebx +
mov edi [eax+ecx] +
mov [ecx] edi +
add ecx 4 +
dec edx  +
jnz loc_100B694  +
and dword ptr [esi+ebx] 0 +
push ebx  +
push [ebp+hMem]  +
push 0  +
call ds:_wspawnv  +
add esp 0Ch +
mov edi 80004005h +
cmp eax 0FFFFFFFFh +
jz loc_100B6BE  +
mov edi eax +
mov esi ds:LocalFree +
push ebx  +
call esi  +
push [ebp+hMem]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+pNumArgs] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
xor ebx ebx +
inc ebx  +
push ebx  +
push edi  +
mov hInstance eax +
mov [ebp+pNumArgs] edi +
mov [ebp+var_4] edi +
call ds:HeapSetInformation  +
call sub_100C7A8  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov ecx [ebp+pNumArgs] +
cmp ecx edi +
mov [ebp+var_8] eax +
jl loc_100B9F9  +
cmp eax edi +
jz loc_100B9F9  +
mov [ebp+var_14] eax +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_10] ecx +
mov [ebp+var_C] ebx +
call ds:GetCurrentProcess  +
push eax  +
call ds:IsWow64Process  +
test eax eax +
jnz loc_100B760  +
mov esi 80004005h +
jmp loc_100B9F9  +
cmp [ebp+var_4] edi +
jz loc_100B77C  +
push [ebp+var_8]  +
push offset Src  +
push [ebp+pNumArgs]  +
call sub_100B627  +
mov esi eax +
jmp loc_100B9F9  +
push edi  +
push offset a?  +
lea eax [ebp+var_14] +
push eax  +
call sub_1003185  +
cmp al bl +
jz loc_100B9F2  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_10] +
jz loc_100B9F2  +
push edi  +
push offset aService  +
lea eax [ebp+var_14] +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B7CF  +
push eax  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
call sub_100AC7E  +
jmp loc_100B9BD  +
push edi  +
push offset aTestservice  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B7FC  +
push eax  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
call sub_100B4DA  +
jmp loc_100B9BD  +
push edi  +
push offset aMonitor  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B81A  +
push eax  +
call sub_100A0DF  +
jmp loc_100B9BD  +
push edi  +
push offset aRegister  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B847  +
push eax  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
call sub_100A99A  +
jmp loc_100B9BD  +
push edi  +
push offset aUnregister  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B874  +
push eax  +
call sub_10032AA  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
call sub_100AA4B  +
jmp loc_100B9BD  +
push edi  +
push offset aSysexpr  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B892  +
push eax  +
call sub_1007C7D  +
jmp loc_100B9BD  +
push edi  +
push offset aNtte  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B8B0  +
push eax  +
call sub_10078FE  +
jmp loc_100B9BD  +
push edi  +
push offset aNtpte  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B8CE  +
push eax  +
call sub_1007AB3  +
jmp loc_100B9BD  +
push edi  +
push offset aResync  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B8EC  +
push eax  +
call sub_10040AA  +
jmp loc_100B9BD  +
push edi  +
push offset aStripchart  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B90A  +
push eax  +
call sub_1007D41  +
jmp loc_100B9BD  +
push edi  +
push offset aConfig  +
push eax  +
call sub_1003185  +
cmp al bl +
jz loc_100B9E7  +
push edi  +
push offset aConfigure  +
lea eax [ebp+var_14] +
push eax  +
call sub_1003185  +
cmp al bl +
jz loc_100B9E7  +
push edi  +
push offset aTestif  +
lea eax [ebp+var_14] +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B953  +
push eax  +
call sub_1008562  +
jmp loc_100B9BD  +
push edi  +
push offset aTz  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B96E  +
push eax  +
call sub_1003A41  +
jmp loc_100B9BD  +
push edi  +
push offset aDumpreg  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B989  +
push eax  +
call sub_1004BB5  +
jmp loc_100B9BD  +
push edi  +
push offset aQuery  +
push eax  +
call sub_1003185  +
cmp al bl +
lea eax [ebp+var_14] +
jnz loc_100B9A4  +
push eax  +
call sub_1008B93  +
jmp loc_100B9BD  +
push edi  +
push offset aDebug  +
push eax  +
call sub_1003185  +
cmp al bl +
jnz loc_100B9C5  +
lea eax [ebp+var_14] +
push eax  +
call sub_1005341  +
mov esi eax +
cmp esi edi +
jl loc_100B9F9  +
jmp loc_100B9F7  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_14] +
push dword ptr [ecx+eax*4]  +
push 1F54h  +
push 800h  +
call sub_100C98F  +
add esp 0Ch +
mov esi 80070057h +
jmp loc_100B9F9  +
lea eax [ebp+var_14] +
push eax  +
call sub_100441D  +
jmp loc_100B9BD  +
call sub_100B5CA  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ds:??0exception@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
mov dword ptr [esi] offset off_1002F78 +
mov [esi+0Ch] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push dword ptr [ebp+8]  +
lea ecx [ebp-10h] +
call sub_100BA07  +
push offset dword_100E488  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z +
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov edi [ebp+8] +
push edi  +
call ds:??0exception@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1002F78 +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1003F2C  +
test byte ptr [ebp+8] 1 +
jz loc_100BAC0  +
push esi  +
call sub_100BAD7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp _free  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100BB03  +
test eax eax +
jnz loc_100BB08  +
mov ecx [esi] +
test ecx ecx +
jz loc_100BB00  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100BAF4  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10105F0 +
push offset dword_10105E0  +
push dword_10105EC  +
mov dword_10105E0 eax +
push offset unk_10105D0  +
push offset unk_10105D4  +
push offset unk_10105CC  +
call ds:__getmainargs  +
add esp 14h +
mov dword_10105DC eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset Destination +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_100BBA8  +
cmp eax esi +
jnz loc_100BB9B  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_100BBAB  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100BB82  +
xor esi esi +
inc esi  +
mov eax dword_1010928 +
cmp eax esi +
jnz loc_100BBBE  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_100BBED  +
mov eax dword_1010928 +
test eax eax +
jnz loc_100BBE7  +
mov dword_1010928 esi +
push offset dword_1001278  +
push offset dword_100126C  +
call sub_100BAE7  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100BBED  +
jmp loc_100BD15  +
mov dword_10105E8 esi +
mov eax dword_1010928 +
cmp eax esi +
jnz loc_100BC11  +
push offset dword_1001268  +
push offset dword_1001260  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1010928 2 +
test ebx ebx +
jnz loc_100BC1D  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1010938 0 +
jz loc_100BC41  +
push offset dword_1010938  +
call sub_100C3D9  +
pop ecx  +
test eax eax +
jz loc_100BC41  +
push 0  +
push 2  +
push 0  +
call dword_1010938  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp+var_20] esi +
mov al [esi] +
cmp al 20h +
ja $LN61  +
test al al +
jz loc_100BC5B  +
cmp [ebp+var_1C] 0 +
jnz $LN61  +
mov al [esi] +
test al al +
jz loc_100BC6B  +
cmp al 20h +
ja loc_100BC6B  +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_100BC5B  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_100BC77  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_100BC7A  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push 1000000h  +
call _WinMain@16  +
mov dword_10105E4 eax +
cmp dword_10105D8 0 +
jnz $LN62  +
push eax  +
call ds:exit  +
cmp al 22h +
jnz loc_100BCAC  +
xor ecx ecx +
cmp [ebp+var_1C] ecx +
setz cl  +
mov [ebp+var_1C] ecx +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jz loc_100BCBF  +
inc esi  +
mov [ebp+var_20] esi +
inc esi  +
jmp loc_100BC48  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_10105E4 eax +
cmp dword_10105D8 0 +
jnz $LN62  +
push eax  +
call ds:_exit  +
cmp dword_10105E8 0 +
jnz loc_100BD00  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10105E4 +
jmp loc_100BD21  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100BD3E  +
xor eax eax +
jmp loc_100BD8B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100BD3A  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100BD78  +
cmp ecx 20Bh +
jnz loc_100BD3A  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100BD3A  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_100BD86  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100BD3A  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_10105D8 eax +
call sub_100C572  +
push eax  +
call ds:__set_app_type  +
or dword_1010930 0FFFFFFFFh +
or dword_1010934 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10105F8 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10105F4 +
mov [eax] ecx +
call sub_100C504  +
cmp dword_1010078 0 +
jnz loc_100BDE4  +
push offset sub_100C504  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100C4EC  +
xor eax eax +
retn   +
***
call sub_100C5B1  +
jmp ___tmainCRTStartup  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_100BE19  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
or eax eax +
jnz loc_100BE71  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_100BEB8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_100BE7F  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_100BEAD  +
cmp edx [esp+arg_4] +
ja loc_100BEAD  +
jb loc_100BEB6  +
cmp eax [esp+arg_0] +
jbe loc_100BEB6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
cmp ecx dword_1010060 +
jnz loc_100BEF0  +
retn 0  +
jmp loc_100C647  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1010060 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1010060 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_1010060 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_100BEE5  +
jmp __EH_epilog3  +
***
jmp ds:?what@exception@@UBEPBDXZ  +
***
jmp ds:??0exception@@QAE@ABV0@@Z  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_100C021  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_100C03D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_100C059  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_100C09A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_100C067  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_100C095  +
cmp edx [esp+arg_4] +
ja loc_100C095  +
jb loc_100C096  +
cmp eax [esp+arg_0] +
jbe loc_100C096  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_100C0A4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100C0CA  +
push esi  +
call sub_100BAD7  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
or eax eax +
jnz loc_100C121  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_100C171  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_100C12F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_100C15A  +
cmp edx [esp+arg_4] +
ja loc_100C15A  +
jb loc_100C162  +
cmp eax [esp+arg_0] +
jbe loc_100C162  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_100C1A2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_100C1E3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_100C1B0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_100C1DE  +
cmp edx [esp+arg_4] +
ja loc_100C1DE  +
jb loc_100C1DF  +
cmp eax [esp+arg_0] +
jbe loc_100C1DF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_100C214  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_100C230  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_100C25C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_100C2A3  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_100C26A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_100C298  +
cmp edx [esp+arg_4] +
ja loc_100C298  +
jb loc_100C2A1  +
cmp eax [esp+arg_0] +
jbe loc_100C2A1  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_100C2B5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_100C2C9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
jmp ds:free  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100C31C  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100C31C  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100C316  +
cmp eax 19930521h +
jz loc_100C316  +
cmp eax 19930522h +
jz loc_100C316  +
cmp eax 1994000h +
jnz loc_100C31C  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_100C2DC+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_100C366  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_100C362  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100C3CD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_100C3C5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100C3CF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_100C3B5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_100C350  +
pop ecx  +
test eax eax +
jz loc_100C436  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_100C390  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100C436  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100C43F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100BEE5  +
push offset dword_1010060  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100C565  +
cmp ecx 0FFFFFFFFh +
jz loc_100C565  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100C55E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100C55E  +
cmp edx 10000000h +
jnb loc_100C55E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100C55E  +
jmp loc_100C559  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_100C5A7  +
push eax  +
call sub_100C50C  +
test eax eax +
jz loc_100C5A7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100C59C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_100C5A7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1010060 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_100C5E3  +
test eax ebx +
jz loc_100C5E3  +
not eax  +
mov dword_1010064 eax +
jmp loc_100C63E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100C62A  +
test dword_1010060 ebx +
jnz loc_100C62F  +
mov esi 0BB40E64Fh +
mov dword_1010060 esi +
not esi  +
mov dword_1010064 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1010700 eax +
mov dword_10106FC ecx +
mov dword_10106F8 edx +
mov dword_10106F4 ebx +
mov dword_10106F0 esi +
mov dword_10106EC edi +
mov word_1010718 ss +
mov word_101070C cs +
mov word_10106E8 ds +
mov word_10106E4 es +
mov word_10106E0 fs +
mov word_10106DC gs +
pushf   +
pop dword_1010710  +
mov eax [ebp+0] +
mov dword_1010704 eax +
mov eax [ebp+4] +
mov dword_1010708 eax +
lea eax [ebp+8] +
mov dword_1010714 eax +
mov eax [ebp-320h] +
mov dword_1010650 10001h +
mov eax dword_1010708 +
mov dword_101060C eax +
mov dword_1010600 0C0000409h +
mov dword_1010604 1 +
mov eax dword_1010060 +
mov [ebp-328h] eax +
mov eax dword_1010064 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1010924 +
push esi  +
push edi  +
xor edi edi +
test eax eax +
jnz loc_100C789  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jnz loc_100C774  +
call ds:GetLastError  +
test eax eax +
jle loc_100C770  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100C790  +
push offset aSetthreaduilan  +
push edi  +
call ds:GetProcAddress  +
mov dword_1010924 eax +
test eax eax +
jz loc_100C75C  +
push [ebp+arg_0]  +
call eax  +
xor esi esi +
test edi edi +
jz loc_100C79B  +
push edi  +
call ds:FreeLibrary  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov hConsoleHandle eax +
cmp eax 0FFFFFFFFh +
jnz loc_100C7CF  +
call ds:GetLastError  +
test eax eax +
jle locret_100C7D1  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+hConsoleHandle] 0FFFFFFFFh +
jz loc_100C80C  +
push [ebp+hConsoleHandle]  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jnz loc_100C80C  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_100C80C  +
xor eax eax +
inc eax  +
jmp locret_100C80E  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+hConsoleHandle]  +
xor esi esi +
xor ebx ebx +
call sub_100C7D7  +
test eax eax +
jz loc_100C871  +
push esi  +
call sub_100C739  +
mov edi eax +
cmp edi esi +
jl loc_100C8D5  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+NumberOfBytesWritten]  +
push [ebp+lpWideCharStr]  +
push [ebp+hConsoleHandle]  +
call ds:WriteConsoleW  +
test eax eax +
jnz loc_100C8BE  +
call ds:GetLastError  +
cmp eax esi +
jg loc_100C865  +
mov edi eax +
jmp loc_100C8D5  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100C861  +
mov eax [ebp+NumberOfBytesWritten] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
cmp ebx esi +
jnz loc_100C88C  +
mov edi 8007000Eh +
jmp loc_100C8CA  +
mov eax [ebp+NumberOfBytesWritten] +
push esi  +
push esi  +
lea ecx [eax+eax] +
push ecx  +
push ebx  +
push eax  +
push [ebp+lpWideCharStr]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfBytesWritten] eax +
cmp eax esi +
jz loc_100C8C2  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleHandle]  +
call ds:WriteFile  +
test eax eax +
jz loc_100C8C2  +
xor edi edi +
jmp loc_100C8CA  +
call ds:GetLastError  +
mov edi eax +
cmp ebx esi +
jz loc_100C8D5  +
push ebx  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 200h +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jnz loc_100C92F  +
call ds:GetLastError  +
test eax eax +
jle loc_100C953  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100C953  +
cmp eax esi +
jb loc_100C93A  +
mov eax 8000FFFFh +
jmp loc_100C953  +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push hConsoleHandle  +
call sub_100C817  +
test eax eax +
jl loc_100C953  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+uID]  +
call sub_100C8E3  +
push offset word_10012AC  +
mov esi eax +
call ds:wprintf  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+arg_8] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
xor esi esi +
push esi  +
lea eax [ebp+lpWideCharStr] +
push eax  +
mov eax [ebp+arg_0] +
push 400h  +
push [ebp+dwMessageId]  +
or eax 100h +
push esi  +
push eax  +
mov [ebp+lpWideCharStr] esi +
call ds:FormatMessageW  +
cmp eax esi +
jz loc_100C9DB  +
cmp [ebp+lpWideCharStr] esi +
jz loc_100C9E9  +
push eax  +
push [ebp+lpWideCharStr]  +
push hConsoleHandle  +
call sub_100C817  +
cmp [ebp+lpWideCharStr] esi +
jz loc_100C9E9  +
push [ebp+lpWideCharStr]  +
call ds:LocalFree  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+arg_C] +
mov [ebp+Arguments] eax +
lea eax [ebp+Arguments] +
push eax  +
mov eax [ebp+arg_0] +
push 0  +
push [ebp+lpBuffer]  +
or eax 100h +
push 400h  +
push [ebp+dwMessageId]  +
push 0  +
push eax  +
call ds:FormatMessageW  +
neg eax  +
sbb eax eax +
neg eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push [ebp+uID]  +
call sub_100C8E3  +
test eax eax +
jl loc_100CA99  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+WideCharStr] +
push 400h  +
push eax  +
call sub_10043E1  +
test eax eax +
jl loc_100CA99  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100CA72  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push hConsoleHandle  +
call sub_100C817  +
test eax eax +
jl loc_100CA99  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100BEE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C04h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 200h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jnz loc_100CAF6  +
call ds:GetLastError  +
test eax eax +
jle loc_100CB51  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100CB51  +
cmp eax esi +
jb loc_100CB01  +
mov eax 8000FFFFh +
jmp loc_100CB51  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 400h  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_10043E1  +
test eax eax +
jl loc_100CB51  +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100CB2A  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push hConsoleHandle  +
call sub_100C817  +
test eax eax +
jl loc_100CB51  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 404h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push edi  +
mov edi 200h +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jnz loc_100CBB6  +
call ds:GetLastError  +
test eax eax +
jle loc_100CBF1  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100CBF1  +
cmp eax edi +
jb loc_100CBC1  +
mov edi 8000FFFFh +
jmp loc_100CBF7  +
push 400h  +
push 40h  +
call ds:LocalAlloc  +
mov [esi] eax +
test eax eax +
jnz loc_100CBDB  +
mov edi 8007000Eh +
jmp loc_100CBF7  +
lea ecx [ebp+Buffer] +
push ecx  +
push offset aS_1  +
push edi  +
push eax  +
call sub_10049D1  +
add esp 10h +
mov edi eax +
test edi edi +
jge loc_100CC07  +
mov eax [esi] +
test eax eax +
jz loc_100CC07  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100BEE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4A4h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 400h +
push esi  +
mov [ebp+var_49C] eax +
xor ebx ebx +
lea eax [ebp+var_40C] +
push ebx  +
push eax  +
mov [ebp+var_C] 61h +
mov byte ptr [ebp-0Bh] 62h +
mov byte ptr [ebp-0Ah] 63h +
mov [ebp+var_9] 64h +
mov [ebp+var_8] 65h +
mov [ebp+var_7] 66h +
mov [ebp+var_6] 67h +
mov [ebp+var_5] 68h +
call memset  +
movzx eax word ptr [edi] +
add esp 0Ch +
dec eax  +
dec eax  +
jz loc_100CDA7  +
sub eax 15h +
jz loc_100CC94  +
mov esi 80070057h +
jmp loc_100CE11  +
call Icmp6CreateFile  +
mov [ebp+var_490] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100CCC1  +
call ds:GetLastError  +
cmp eax ebx +
jg loc_100CCB5  +
mov esi eax +
jmp loc_100CE11  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100CCAE  +
push ebx  +
push 3  +
push 17h  +
call ds:socket  +
mov [ebp+s] eax +
cmp eax 0FFFFFFFFh +
jnz loc_100CCF2  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100CCEB  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100CE06  +
push ebx  +
push ebx  +
lea ecx [ebp+cbBytesReturned] +
push ecx  +
push 80h  +
lea ecx [ebp+vOutBuffer] +
push ecx  +
push [ebp+cbInBuffer]  +
push edi  +
push 0C8000014h  +
push eax  +
call ds:WSAIoctl  +
push [ebp+s]  +
cmp eax 0FFFFFFFFh +
jnz loc_100CD2A  +
call ds:closesocket  +
jmp loc_100CCD7  +
call ds:closesocket  +
push [ebp+arg_8]  +
lea eax [ebp+var_40C] +
push esi  +
push eax  +
lea eax [ebp+var_498] +
push eax  +
push 8  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
lea eax [ebp+vOutBuffer] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+var_490]  +
mov byte ptr [ebp+var_498] 0FFh +
mov byte ptr [ebp+var_498+1] bl +
mov byte ptr [ebp+var_498+2] bl +
mov byte ptr [ebp+var_498+3] bl +
mov [ebp+var_494] ebx +
call Icmp6SendEcho2  +
test eax eax +
jz loc_100CCD7  +
mov esi [ebp+var_3F0] +
cmp esi ebx +
jle loc_100CD9D  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jnz loc_100CE06  +
mov eax [ebp+var_3EC] +
jmp loc_100CDFE  +
call IcmpCreateFile  +
mov [ebp+var_490] eax +
cmp eax 0FFFFFFFFh +
jz loc_100CCA4  +
push [ebp+arg_8]  +
lea ecx [ebp+var_40C] +
push esi  +
push ecx  +
push ebx  +
push 8  +
lea ecx [ebp+var_C] +
push ecx  +
push dword ptr [edi+4]  +
push eax  +
call IcmpSendEcho  +
test eax eax +
jz loc_100CCD7  +
mov esi [ebp+var_408] +
cmp esi ebx +
jle loc_100CDF6  +
and esi 0FFFFh +
or esi 80070000h +
cmp esi ebx +
jnz loc_100CE06  +
mov eax [ebp+var_404] +
mov ecx [ebp+var_49C] +
mov [ecx] eax +
push [ebp+var_490]  +
call IcmpCloseHandle  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100BEE5  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+s] +
movzx eax word ptr [esi] +
push edi  +
push 11h  +
push 2  +
xor ebx ebx +
push eax  +
mov [ebp+hObject] ebx +
call ds:socket  +
or edi 0FFFFFFFFh +
mov [ebp+s] eax +
cmp eax edi +
jnz loc_100CE6F  +
call ds:GetLastError  +
cmp eax ebx +
jg loc_100CE63  +
mov esi eax +
jmp loc_100CF53  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100CE5C  +
push [ebp+namelen]  +
push esi  +
push eax  +
call ds:connect  +
cmp eax edi +
jnz loc_100CE99  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_100CE92  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100CF3C  +
mov esi [ebp+arg_C] +
push 30h  +
push ebx  +
push esi  +
call memset  +
mov al [esi] +
and al 0CBh +
or al 0Bh +
add esp 0Ch +
mov [esi] al +
call sub_100D498  +
push edx  +
push eax  +
call sub_100D37B  +
push ebx  +
push 30h  +
push esi  +
push [ebp+s]  +
mov [esi+28h] eax +
mov [esi+2Ch] edx +
call ds:send  +
cmp eax edi +
jz loc_100CE7E  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:CreateEventW  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_100CE7E  +
push 1  +
push eax  +
push [ebp+s]  +
call ds:WSAEventSelect  +
cmp eax edi +
jz loc_100CE7E  +
push [ebp+dwMilliseconds]  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
cmp eax edi +
jz loc_100CE7E  +
cmp eax 102h +
jnz loc_100CF16  +
mov esi 800705B4h +
jmp loc_100CF3C  +
push ebx  +
push 30h  +
push esi  +
push [ebp+s]  +
call ds:recv  +
mov esi eax +
call sub_100D498  +
mov ecx [ebp+arg_10] +
mov [ecx] eax +
mov [ecx+4] edx +
cmp esi edi +
jz loc_100CE7E  +
xor esi esi +
push [ebp+s]  +
call ds:closesocket  +
cmp [ebp+hObject] ebx +
jz loc_100CF53  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+hMem] ebx +
mov [ebp+var_8] ebx +
cmp [ebp+arg_8] ebx +
jz loc_100D0B6  +
cmp [ebp+arg_C] ebx +
jz loc_100D0B6  +
cmp [ebp+arg_10] ebx +
jz loc_100D0B6  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
mov eax [ebp+uBytes] +
dec eax  +
push 2  +
pop ecx  +
jz loc_100CFB3  +
dec eax  +
jz loc_100CFAA  +
mov [ebp+var_24] ebx +
jmp loc_100CFB6  +
mov [ebp+var_24] 17h +
jmp loc_100CFB6  +
mov [ebp+var_24] ecx +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push offset a123  +
push [ebp+arg_0]  +
mov [ebp+var_20] ecx +
call ds:GetAddrInfoW  +
test eax eax +
jz loc_100CFEE  +
call ds:WSAGetLastError  +
cmp eax ebx +
jle loc_100CFE7  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100D0BB  +
mov eax [ebp+var_8] +
jmp loc_100CFF7  +
mov eax [eax+1Ch] +
inc ebx  +
test eax eax +
jnz loc_100CFF3  +
lea ecx [ebp+uBytes] +
push ecx  +
push eax  +
push 80h  +
push eax  +
push ebx  +
call __allmul  +
push edx  +
push eax  +
call sub_100985E  +
mov esi eax +
test esi esi +
jl loc_100D0BB  +
push [ebp+uBytes]  +
mov edi ds:LocalAlloc +
push 40h  +
call edi  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_100D05C  +
lea eax [ebp+uBytes] +
push eax  +
push 0  +
push 4  +
xor eax eax +
push eax  +
push ebx  +
call __allmul  +
push edx  +
push eax  +
call sub_100985E  +
mov esi eax +
test esi esi +
jl loc_100D0BB  +
push [ebp+uBytes]  +
push 40h  +
call edi  +
mov edi eax +
test edi edi +
jnz loc_100D063  +
mov esi 8007000Eh +
jmp loc_100D0BB  +
and [ebp+uBytes] 0 +
mov esi [ebp+var_8] +
test ebx ebx +
jbe loc_100D09D  +
mov eax [ebp+hMem] +
mov [ebp+arg_0] eax +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
push [ebp+arg_0]  +
call memcpy  +
mov eax [esi+10h] +
mov ecx [ebp+uBytes] +
sub [ebp+arg_0] 0FFFFFF80h +
add esp 0Ch +
inc [ebp+uBytes]  +
mov [edi+ecx*4] eax +
mov esi [esi+1Ch] +
cmp [ebp+uBytes] ebx +
jb loc_100D074  +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov eax [ebp+arg_10] +
xor esi esi +
mov [ebp+hMem] esi +
mov [eax] ebx +
jmp loc_100D0BB  +
mov esi 8000FFFFh +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_100D0C5  +
mov byte ptr [eax] 1 +
cmp [ebp+hMem] 0 +
jz loc_100D0D4  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [ebp+var_8] 0 +
jz loc_100D0E3  +
push [ebp+var_8]  +
call ds:FreeAddrInfoW  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:LocalAlloc +
push edi  +
push 82h  +
push 40h  +
mov [ebp+dwAddressStringLength] 41h +
call esi  +
mov edi ds:WSAAddressToStringW +
mov ebx eax +
lea eax [ebp+dwAddressStringLength] +
push eax  +
push ebx  +
push 0  +
push [ebp+dwAddressLength]  +
push [ebp+lpsaAddress]  +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_100D17C  +
call ds:WSAGetLastError  +
cmp eax 271Eh +
jnz loc_100D16A  +
test ebx ebx +
jz loc_100D144  +
push ebx  +
call ds:LocalFree  +
mov eax [ebp+dwAddressStringLength] +
add eax eax +
push eax  +
push 40h  +
call esi  +
mov ebx eax +
lea eax [ebp+dwAddressStringLength] +
push eax  +
push ebx  +
push 0  +
push [ebp+dwAddressLength]  +
push [ebp+lpsaAddress]  +
call edi  +
cmp eax 0FFFFFFFFh +
jnz loc_100D17C  +
call ds:WSAGetLastError  +
test eax eax +
jle loc_100D178  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_100D185  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
xor ebx ebx +
xor esi esi +
test ebx ebx +
jz loc_100D190  +
push ebx  +
call ds:LocalFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 194h +
mov eax dword_1010060 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_100D1D7  +
jle loc_100D1D9  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100D1D9  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100BEE5  +
leave   +
retn   +
***
call ds:WSACleanup  +
cmp eax 0FFFFFFFFh +
jnz loc_100D20A  +
call ds:GetLastError  +
test eax eax +
jle locret_100D20C  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx [ebp+arg_4] +
mov eax [ebp+dwMessageId] +
push ebx  +
mov ebx ds:FormatMessageW +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
mov [ecx] edi +
lea ecx [ebp+hMem] +
push ecx  +
push edi  +
push eax  +
push edi  +
push 1100h  +
mov [ebp+var_C] edi +
mov [ebp+var_8] eax +
mov [ebp+hMem] edi +
mov [ebp+dwMessageId] edi +
call ebx  +
test eax eax +
jnz loc_100D279  +
mov esi ds:GetLastError +
call esi  +
cmp eax 13Dh +
jnz loc_100D265  +
mov [ebp+var_C] offset dword_1001F30 +
jmp loc_100D2B6  +
call esi  +
cmp eax edi +
jle loc_100D275  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_100D2E6  +
mov ecx [ebp+hMem] +
mov eax ecx +
mov [ebp+var_C] ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_100D284  +
sub eax esi +
push 0Dh  +
sar eax 1 +
pop edx  +
cmp dx [ecx+eax*2-4] +
jnz loc_100D2B6  +
mov eax ecx +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_100D2A1  +
sub eax esi +
sar eax 1 +
xor edx edx +
mov [ecx+eax*2-4] dx +
lea eax [ebp+var_C] +
push eax  +
push edi  +
lea eax [ebp+dwMessageId] +
push eax  +
push edi  +
push edi  +
push offset a10x208x  +
push 2500h  +
call ebx  +
test eax eax +
jnz loc_100D2D9  +
call ds:GetLastError  +
jmp loc_100D267  +
mov eax [ebp+dwMessageId] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+dwMessageId] edi +
xor ebx ebx +
mov esi ds:LocalFree +
cmp [ebp+hMem] edi +
jz loc_100D2F6  +
push [ebp+hMem]  +
call esi  +
cmp [ebp+dwMessageId] edi +
jz loc_100D300  +
push [ebp+dwMessageId]  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10035AA  +
mov ecx edx +
mov [ebp+arg_0] eax +
mov edx 1312Dh +
mul  edx +
add eax 1000000h +
adc edx 0 +
mov esi eax +
mov eax [ebp+arg_0] +
shrd eax ecx +
mov edi edx +
shrd esi edi +
shr ecx 19h +
and eax 0FFFFFF80h +
and ecx 7Fh +
push 0  +
shr edi 19h +
add eax 33094000h +
push 1312Dh  +
adc ecx 119h +
push ecx  +
push eax  +
call __allmul  +
add esi eax +
adc edi edx +
mov edx edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push ebx  +
add eax 21FC000h +
push esi  +
adc ecx 0FEB0C8C4h +
shld ecx eax +
push edi  +
add eax eax +
push 0  +
mov [ebp+arg_0] eax +
shrd eax ecx +
mov esi 1312Dh +
push esi  +
shr ecx 8 +
push ecx  +
push eax  +
call __aulldvrm  +
shld ebx ecx +
mov edi eax +
movzx eax byte ptr [ebp+arg_0] +
shl ecx 8 +
mov [ebp+var_4] edx +
xor edx edx +
or ecx eax +
or ebx edx +
shld ebx ecx +
push edx  +
push esi  +
shl ecx 18h +
push ebx  +
push ecx  +
call __aulldiv  +
xor ecx ecx +
or edx edi +
or eax ecx +
push edx  +
push eax  +
call sub_10035AA  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
xor ecx ecx +
push esi  +
shld ecx eax +
push edi  +
shl eax 10h +
push ecx  +
push eax  +
call sub_10035AA  +
mov ecx edx +
mov [ebp+var_8] eax +
mov edx 1312Dh +
mul  edx +
add eax 1000000h +
adc edx 0 +
mov esi eax +
mov eax [ebp+var_8] +
shrd eax ecx +
push 0  +
mov edi edx +
shr ecx 19h +
push 1312Dh  +
and ecx 7Fh +
shrd esi edi +
and eax 0FFFFFF80h +
push ecx  +
push eax  +
shr edi 19h +
call __allmul  +
add esi eax +
adc edi edx +
mov edx edi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test cl cl +
jns loc_100D489  +
call sub_1003581  +
mov ecx eax +
neg ecx  +
call sub_1003581  +
push eax  +
call sub_100D3F4  +
neg eax  +
adc edx 0 +
neg edx  +
jmp loc_100D48F  +
push ecx  +
call sub_100D3F4  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov ecx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov edx [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor eax eax +
xor esi esi +
or eax ecx +
or edx esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
mov esi ecx +
call ds:GetSystemTimeAsFileTime  +
push 1  +
push 0  +
push 0  +
push [ebp+SystemTimeAsFileTime.dwHighDateTime]  +
call __allmul  +
mov ecx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
xor edi edi +
add eax ecx +
adc edx edi +
pop edi  +
mov [esi] eax +
mov [esi+4] edx +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx ds:7FFE02C8h +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx ds:7FFE02CCh +
mov [eax+4] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi eax +
xor edi edi +
push edi  +
lea eax [ebp+uBytes] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+uBytes]  +
mov [ebp+hMem] edi +
push dword ptr [esi]  +
mov [ebp+var_8] edi +
call sub_100CF61  +
mov ebx eax +
cmp ebx edi +
jl loc_100D567  +
mov eax [ebp+hMem] +
mov [esi+4] eax +
mov eax [ebp+var_8] +
mov [esi+8] eax +
mov eax [ebp+uBytes] +
mov [ebp+hMem] edi +
mov [ebp+var_8] edi +
mov [esi+0Ch] eax +
xor ebx ebx +
mov esi ds:LocalFree +
cmp [ebp+hMem] edi +
jz loc_100D577  +
push [ebp+hMem]  +
call esi  +
cmp [ebp+var_8] edi +
jz loc_100D581  +
push [ebp+var_8]  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ds:LocalFree +
test eax eax +
jz loc_100D5A8  +
push eax  +
call edi  +
mov eax [esi+4] +
test eax eax +
jz loc_100D5B2  +
push eax  +
call edi  +
mov esi [esi+8] +
test esi esi +
jz loc_100D5BC  +
push esi  +
call edi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax [ebp+arg_4] +
push esi  +
mov esi ds:DsGetDcNameW +
push edi  +
xor edi edi +
mov [eax] edi +
mov eax [ebp+arg_8] +
mov [eax] edi +
lea eax [ebp+Buffer] +
push eax  +
push 80000h  +
push edi  +
push edi  +
push [ebp+hMem]  +
mov [ebp+var_14] edi +
push edi  +
mov [ebp+var_C] edi +
mov [ebp+var_1] 1 +
mov [ebp+Buffer] edi +
mov [ebp+var_18] edi +
mov [ebp+var_10] edi +
call esi  +
cmp eax edi +
jz loc_100D64F  +
cmp eax 54Bh +
jz loc_100D629  +
cmp eax edi +
jg loc_100D61D  +
mov esi eax +
jmp loc_100D7BB  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100D616  +
cmp [ebp+Buffer] edi +
jz loc_100D639  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
mov [ebp+Buffer] edi +
lea eax [ebp+Buffer] +
push eax  +
push 10h  +
push edi  +
push edi  +
push [ebp+hMem]  +
push edi  +
call esi  +
cmp eax edi +
jnz loc_100D614  +
mov [ebp+var_1] 0 +
lea eax [ebp+var_18] +
push eax  +
mov eax [ebp+Buffer] +
push edi  +
push dword ptr [eax]  +
call ds:DsBindW  +
cmp eax edi +
jnz loc_100D614  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
xor eax eax +
cmp [ebp+var_1] al +
setnz al  +
lea eax [eax+eax+1] +
push eax  +
mov eax [ebp+Buffer] +
push dword ptr [eax+1Ch]  +
push [ebp+var_18]  +
call ds:DsGetDomainControllerInfoW  +
cmp eax edi +
jnz loc_100D614  +
mov ecx [ebp+var_14] +
cmp ecx edi +
jbe loc_100D6BC  +
xor eax eax +
cmp [ebp+var_1] al +
setz al  +
dec eax  +
and eax 50h +
add eax 1Ch +
mov [ebp+var_20] eax +
mov eax [ebp+var_10] +
add eax 4 +
cmp [eax] edi +
jz loc_100D6B1  +
inc [ebp+var_C]  +
add eax [ebp+var_20] +
dec ecx  +
jnz loc_100D6AA  +
cmp [ebp+var_C] edi +
jnz loc_100D6C6  +
mov esi 80070774h +
jmp loc_100D7BB  +
mov eax [ebp+var_C] +
imul eax eax +
push ebx  +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax edi +
jnz loc_100D6E7  +
mov esi 8007000Eh +
jmp loc_100D791  +
mov [ebp+var_1C] edi +
cmp [ebp+var_14] edi +
jbe loc_100D776  +
mov [ebp+var_24] edi +
lea ebx [eax+11h] +
mov eax [ebp+var_10] +
add edi eax +
mov eax [edi+4] +
test eax eax +
jz loc_100D75D  +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100D708  +
sub eax ecx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebx-11h] eax +
test eax eax +
jz loc_100D78A  +
push dword ptr [edi+4]  +
push esi  +
push eax  +
call sub_1003FAE  +
mov esi eax +
test esi esi +
jl loc_100D78F  +
cmp dword ptr [edi+1Ch] 0 +
setnz al  +
cmp [ebp+var_1] 0 +
mov [ebx-1] al +
jz loc_100D756  +
cmp dword ptr [edi+28h] 0 +
jz loc_100D756  +
mov al 1 +
jmp loc_100D758  +
xor al al +
mov [ebx] al +
add ebx 14h +
inc [ebp+var_1C]  +
mov edi [ebp+var_24] +
add edi [ebp+var_20] +
mov eax [ebp+var_1C] +
mov [ebp+var_24] edi +
cmp eax [ebp+var_14] +
jb loc_100D6F9  +
mov eax [ebp+hMem] +
xor edi edi +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_8] +
mov [ebp+hMem] edi +
mov [ecx] eax +
xor esi esi +
jmp loc_100D791  +
mov esi 8007000Eh +
xor edi edi +
mov ebx [ebp+hMem] +
cmp ebx edi +
jz loc_100D7BA  +
cmp [ebp+var_C] edi +
jbe loc_100D7B1  +
mov eax [ebp+var_C] +
mov [ebp+arg_4] eax +
push ebx  +
call sub_100D58F  +
add ebx 14h +
dec [ebp+arg_4]  +
jnz loc_100D7A3  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop ebx  +
cmp [ebp+var_10] edi +
jz loc_100D7D9  +
push [ebp+var_10]  +
xor eax eax +
cmp [ebp+var_1] al +
push [ebp+var_14]  +
setnz al  +
lea eax [eax+eax+1] +
push eax  +
call ds:DsFreeDomainControllerInfoW  +
cmp [ebp+var_18] edi +
jz loc_100D7E8  +
lea eax [ebp+var_18] +
push eax  +
call ds:DsUnBindW  +
cmp [ebp+Buffer] edi +
jz loc_100D7F5  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+hMem]  +
mov [eax] edi +
mov eax [ebp+arg_8] +
push 18h  +
mov [eax] edi +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push 65h  +
push edi  +
mov [ebp+var_4] edi +
mov [ebp+Buffer] edi +
call NetServerEnum  +
cmp eax edi +
jz loc_100D853  +
jg loc_100D847  +
mov esi eax +
jmp loc_100D977  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100D840  +
mov ecx [ebp+entriesread] +
cmp ecx edi +
jbe loc_100D87C  +
mov eax [ebp+Buffer] +
add eax 8 +
test dword ptr [eax+8] 1000h +
jz loc_100D871  +
cmp dword ptr [eax] 5 +
jb loc_100D871  +
inc [ebp+var_4]  +
add eax 18h +
dec ecx  +
jnz loc_100D860  +
cmp [ebp+var_4] edi +
jnz loc_100D886  +
mov esi 80070774h +
jmp loc_100D977  +
mov eax [ebp+var_4] +
imul eax eax +
push ebx  +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
mov [ebp+hMem] ebx +
cmp ebx edi +
jz loc_100D993  +
mov [ebp+var_C] edi +
mov [ebp+var_10] edi +
cmp [ebp+entriesread] edi +
jbe loc_100D93C  +
mov eax [ebp+Buffer] +
add eax edi +
test dword ptr [eax+10h] 1000h +
jz loc_100D928  +
cmp dword ptr [eax+8] 5 +
jb loc_100D928  +
mov ecx [ebp+var_C] +
cmp ecx [ebp+var_4] +
jnb loc_100D98C  +
mov eax [eax+4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100D8D8  +
sub eax ecx +
sar eax 1 +
lea esi [eax+1] +
lea eax [esi+esi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebx] eax +
test eax eax +
jz loc_100D993  +
mov ecx [ebp+Buffer] +
push dword ptr [edi+ecx+4]  +
push esi  +
push eax  +
call sub_1003FAE  +
mov esi eax +
test esi esi +
jl loc_100D951  +
mov eax [ebp+Buffer] +
mov eax [edi+eax+10h] +
shr eax 3 +
and al 1 +
inc [ebp+var_C]  +
mov [ebx+10h] al +
add ebx 14h +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
add edi 18h +
cmp eax [ebp+entriesread] +
jb loc_100D8B2  +
xor edi edi +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov [ebp+hMem] edi +
mov [ecx] eax +
xor esi esi +
mov edi [ebp+hMem] +
test edi edi +
jz loc_100D974  +
mov ebx [ebp+var_4] +
test ebx ebx +
jbe loc_100D96B  +
push edi  +
call sub_100D58F  +
add edi 14h +
dec ebx  +
jnz loc_100D95F  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor edi edi +
pop ebx  +
cmp [ebp+Buffer] edi +
jz loc_100D984  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
mov esi 8000FFFFh +
jmp loc_100D951  +
mov esi 8007000Eh +
jmp loc_100D951  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
xor esi esi +
mov [eax] esi +
mov eax [ebp+arg_10] +
push edi  +
mov [eax] esi +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+hMem] esi +
call sub_100D5C7  +
mov edi eax +
cmp edi esi +
jge loc_100D9E6  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_4]  +
call sub_100D802  +
test eax eax +
jl loc_100DA89  +
cmp byte ptr [ebp+arg_8] 0 +
mov ebx [ebp+var_8] +
jz loc_100DA6A  +
mov [ebp+arg_8] esi +
cmp ebx esi +
jbe loc_100DA6C  +
mov esi [ebp+hMem] +
lea eax [ebx-1] +
mov [ebp+arg_4] eax +
mov eax ebx +
imul eax eax +
lea edi [eax+esi-10h] +
push [ebp+uBytes]  +
mov eax esi +
call sub_100D51C  +
test eax eax +
jge loc_100DA5D  +
mov eax [ebp+arg_8] +
cmp eax [ebp+arg_4] +
jz loc_100DA50  +
mov ecx [edi-4] +
mov eax [esi] +
mov [esi] ecx +
mov ecx [edi] +
mov [edi-4] eax +
mov eax [esi+4] +
mov [esi+4] ecx +
mov ecx [edi+4] +
mov [edi] eax +
mov eax [esi+8] +
mov [esi+8] ecx +
mov [edi+4] eax +
mov eax [edi+8] +
mov [esi+0Ch] eax +
mov al [edi+0Ch] +
mov [esi+10h] al +
mov al [edi+0Eh] +
mov [esi+12h] al +
dec ebx  +
dec [ebp+arg_4]  +
sub edi 14h +
dec [ebp+arg_8]  +
sub esi 14h +
inc [ebp+arg_8]  +
add esi 14h +
cmp [ebp+arg_8] ebx +
jb loc_100DA08  +
xor esi esi +
cmp ebx esi +
jnz loc_100DA75  +
mov edi 80070774h +
jmp loc_100DA8C  +
mov eax [ebp+hMem] +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
mov eax [ebp+arg_10] +
mov [ebp+hMem] esi +
mov [eax] ebx +
xor edi edi +
jmp loc_100DA8C  +
mov ebx [ebp+var_8] +
mov esi [ebp+hMem] +
test esi esi +
jz loc_100DAAC  +
test ebx ebx +
jbe loc_100DAA3  +
push esi  +
call sub_100D58F  +
add esi 14h +
dec ebx  +
jnz loc_100DA97  +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
jmp ds:??1exception@@UAE@XZ  +
***
cmp bh 0FFh +
jmp fword ptr [ebx+1008Fh]  +
***
