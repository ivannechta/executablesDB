mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_10015F0  +
cmp [esi] ax +
jz loc_10015EC  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_10015E2  +
test edx edx +
jnz loc_10015F5  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1001606  +
test eax eax +
jl loc_1001603  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_100161C  +
cmp ecx [ebp+arg_0] +
jbe loc_1001621  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_100164F  +
cmp [ebp+arg_0] eax +
jnz loc_1001643  +
cmp ecx eax +
jnz loc_1001648  +
cmp ecx [ebp+arg_4] +
jbe loc_1001657  +
mov eax 80070057h +
jmp loc_1001657  +
push [ebp+arg_4]  +
call sub_100160C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1001695  +
cmp [ebp+arg_4] eax +
jz loc_1001691  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1001691  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1001674  +
test esi esi +
jnz loc_100169D  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10016AB  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10016E0  +
cmp eax esi +
ja loc_10016E0  +
jz loc_10016E5  +
jmp loc_10016ED  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10016F6  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp edi 1 +
jnz loc_1001729  +
mov ecx [ebp+arg_0] +
xor eax eax +
mov [ecx] ax +
mov [ebp+var_4] 8007007Ah +
jmp loc_100176D  +
push esi  +
mov esi [ebp+arg_0] +
jmp loc_1001755  +
push ds:_iob  +
call fgetwc  +
movzx eax ax +
pop ecx  +
mov ecx 0FFFFh +
cmp ax cx +
jz loc_100175C  +
cmp ax 0Ah +
jz loc_1001767  +
mov [esi] ax +
inc esi  +
inc esi  +
dec edi  +
inc ebx  +
cmp edi 1 +
ja loc_100172F  +
jmp loc_1001767  +
test ebx ebx +
jnz loc_1001767  +
mov [ebp+var_4] 80070026h +
xor eax eax +
mov [esi] ax +
pop esi  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1001776  +
mov [eax] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_10017AE  +
test [ebp+arg_8] 1000h +
jz loc_10017AE  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_10017F6  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_10017DE  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_10017F6  +
test esi esi +
jbe loc_100180F  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_100180F  +
test [ebp+arg_8] 800h +
jz loc_100180F  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jz loc_100186F  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100186E  +
push edi  +
push esi  +
mov [esi] ax +
call ds:GetSystemWindowsDirectoryW  +
test eax eax +
jz loc_100186E  +
cmp word ptr [esi] 0 +
jz loc_100186E  +
cmp eax edi +
jnb loc_100185C  +
lea ecx [esi+eax*2] +
cmp word ptr [ecx-2] 5Ch +
jz loc_100186E  +
lea edx [eax+1] +
cmp edx edi +
jnz loc_1001860  +
inc eax  +
inc eax  +
jmp loc_100186E  +
push 5Ch  +
pop eax  +
mov [ecx] ax +
mov eax edx +
xor ecx ecx +
mov [esi+eax*2] cx +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+hConsoleHandle]  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jnz loc_10018A8  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_10018A8  +
xor eax eax +
inc eax  +
jmp locret_10018AA  +
xor eax eax +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10018D4  +
push 5Ch  +
push [ebp+arg_0]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10018D4  +
add eax 2 +
jmp loc_10018D6  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100190F  +
cmp [ebp+arg_4] 0 +
jz loc_100190F  +
push 6001h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call SdbFindFirstTag  +
test eax eax +
jz loc_100190F  +
push eax  +
push [ebp+arg_0]  +
call SdbGetStringTagPtr  +
jmp loc_1001911  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+phkResult] 0 +
lea eax [ebp+phkResult] +
push eax  +
push 10100h  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz locret_1001957  +
push esi  +
push [ebp+phkResult]  +
call ds:NtDeleteKey  +
push [ebp+phkResult]  +
mov esi eax +
call ds:RegCloseKey  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1001976  +
cmp edx 7FFFFFFFh +
jbe loc_100197B  +
mov eax 80070057h +
test eax eax +
jl loc_1001991  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1001660  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_10019B3  +
cmp edx esi +
jbe loc_10019B8  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_10019D0  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_10015D5  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_10019D2  +
xor ecx ecx +
test eax eax +
jl loc_10019E9  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_1001660  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1001A09  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1001A0E  +
mov eax 80070057h +
test eax eax +
jl loc_1001A27  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10016B7  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1001A45  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1001A4A  +
mov eax 80070057h +
test eax eax +
jl loc_1001A64  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10016B7  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_10]  +
mov edi [ebp+arg_4] +
push 7FFFFFFFh  +
push esi  +
mov ecx edi +
call sub_100162A  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_1001B07  +
test [ebp+arg_10] 0FFFFE000h +
push ebx  +
mov ebx edi +
mov [ebp+arg_4] esi +
mov [ebp+var_4] ebx +
jz loc_1001B10  +
mov [ebp+arg_0] 80070057h +
test edi edi +
jz loc_1001AB2  +
xor eax eax +
mov [esi] ax +
test [ebp+arg_10] 1C00h +
jz loc_1001AD9  +
test edi edi +
jz loc_1001AD9  +
push [ebp+arg_10]  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [edi+edi] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
mov edi esi +
call sub_1001784  +
mov ebx [ebp+var_4] +
cmp [ebp+arg_0] 0 +
jge loc_1001AF1  +
cmp [ebp+arg_0] 8007007Ah +
jz loc_1001AF1  +
cmp [ebp+arg_0] 80070026h +
jnz loc_1001B06  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_1001AFD  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1001B06  +
mov [eax] ebx +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 14h  +
test edi edi +
jnz loc_1001B27  +
mov eax esi +
neg eax  +
sbb eax eax +
and eax 23h +
add eax 80070057h +
mov [ebp+arg_0] eax +
jmp loc_1001AB2  +
and [ebp+arg_4] 0 +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
push esi  +
call sub_1001703  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_4] +
sub ebx eax +
cmp [ebp+arg_0] 0 +
lea ecx [esi+eax*2] +
mov [ebp+arg_4] ecx +
mov [ebp+var_4] ebx +
jl loc_1001AB2  +
mov eax [ebp+arg_10] +
test eax 200h +
jz loc_1001AF1  +
cmp ebx 1 +
jbe loc_1001AF1  +
lea ecx [ebx+ebx] +
cmp ecx 2 +
jbe loc_1001AF1  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_4] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_1001AF1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1008h +
call __alloca_probe  +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1001C9C  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_10019F4  +
test eax eax +
jl loc_1001C9C  +
push ebx  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov ebx eax +
lea eax [ebp+WideCharStr] +
lea edx [eax+2] +
xor esi esi +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1001BFF  +
sub eax edx +
sar eax 1 +
mov [ebp+NumberOfBytesWritten] eax +
cmp ebx esi +
jz loc_1001C9B  +
push ebx  +
call sub_1001879  +
test eax eax +
jz loc_1001C43  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+NumberOfBytesWritten]  +
lea eax [ebp+WideCharStr] +
push eax  +
push ebx  +
call ds:WriteConsoleW  +
jmp loc_1001C9B  +
mov eax [ebp+NumberOfBytesWritten] +
push edi  +
add eax eax +
push eax  +
push esi  +
call ds:LocalAlloc  +
mov edi eax +
cmp edi esi +
jz loc_1001C9A  +
mov eax [ebp+NumberOfBytesWritten] +
push esi  +
push esi  +
lea ecx [eax+eax] +
push ecx  +
push edi  +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfBytesWritten] eax +
cmp eax esi +
jz loc_1001C93  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
push edi  +
push ebx  +
call ds:WriteFile  +
push edi  +
call ds:LocalFree  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1003F01  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+arg_0]  +
push 3E8h  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 104h +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_1001D46  +
cmp eax esi +
jnb loc_1001D46  +
push offset aApphelp_dll  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_1001D46  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jz loc_1001D46  +
push offset ProcName  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_1001D3F  +
push 0  +
push 0  +
push 0  +
push 0  +
call eax  +
push esi  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1003F01  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp [ebp+arg_4] 0 +
jz loc_1001DBC  +
cmp [ebp+arg_0] 0 +
jz loc_1001DBC  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call ds:RtlStringFromGUID  +
test eax eax +
jge loc_1001D83  +
push 418h  +
jmp loc_1001DC1  +
push esi  +
push [ebp+var_4]  +
push offset PathName  +
push offset aSS_sdb  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1001A30  +
mov esi eax +
add esp 14h +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlFreeUnicodeString  +
test esi esi +
pop esi  +
jge loc_1001DB7  +
push 409h  +
jmp loc_1001DC1  +
xor eax eax +
inc eax  +
jmp locret_1001DC9  +
push 419h  +
call sub_1001B8B  +
pop ecx  +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp ebx edi +
jz loc_1001E60  +
push esi  +
push edi  +
push ebx  +
call SdbOpenDatabase  +
mov esi eax +
cmp esi edi +
jnz loc_1001DFC  +
push ebx  +
push 3EAh  +
jmp loc_1001E4E  +
push 7001h  +
push edi  +
push esi  +
call SdbFindFirstTag  +
mov ecx eax +
cmp ecx edi +
jnz loc_1001E16  +
push ebx  +
push 3EBh  +
jmp loc_1001E4E  +
mov edi [ebp+arg_4] +
xor eax eax +
stos   +
stos   +
push 9007h  +
stos   +
push ecx  +
push esi  +
stos   +
call SdbFindFirstTag  +
test eax eax +
jz loc_1001E48  +
push 10h  +
push [ebp+arg_4]  +
push eax  +
push esi  +
call SdbReadBinaryTag  +
test eax eax +
jz loc_1001E48  +
mov [ebp+var_4] 1 +
jmp loc_1001E55  +
push ebx  +
push 3ECh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_1001E5F  +
push esi  +
call SdbCloseDatabase  +
pop esi  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 43Ch +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hKey] ebx +
mov [ebp+var_42C] ebx +
cmp eax ebx +
jz loc_1001FC8  +
cmp edi ebx +
jz loc_1001FC8  +
lea ecx [ebp+var_424] +
push ecx  +
push eax  +
call sub_1001DD2  +
test eax eax +
jz loc_1001FB4  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+var_424] +
push eax  +
call ds:RtlStringFromGUID  +
test eax eax +
jl loc_1001FB4  +
push esi  +
push [ebp+var_438]  +
mov esi 104h +
push offset aSoftwareMicr_1  +
push offset aSS  +
lea eax [ebp+SubKey] +
push esi  +
push eax  +
call sub_1001A30  +
add esp 14h +
test eax eax +
jl loc_1001FB3  +
lea eax [ebp+hKey] +
push eax  +
push 101h  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1001FA6  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset ValueName  +
push [ebp+hKey]  +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1001FA6  +
cmp [ebp+Type] 1 +
jnz loc_1001FA6  +
mov eax [ebp+cbData] +
shr eax 1 +
cmp eax esi +
jnb loc_1001FA6  +
cmp word ptr [ebp+Data] bx +
jz loc_1001FB3  +
xor ecx ecx +
mov word ptr [ebp+eax*2+Data] cx +
lea eax [ebp+Data] +
push eax  +
push [ebp+arg_8]  +
push edi  +
call sub_1001960  +
test eax eax +
jl loc_1001FB3  +
mov [ebp+var_42C] 1 +
lea eax [ebp+var_43C] +
push eax  +
call ds:RtlFreeUnicodeString  +
pop esi  +
cmp [ebp+hKey] ebx +
jz loc_1001FC8  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_42C] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_1003F01  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_1002057  +
push esi  +
push ebx  +
push edi  +
call SdbOpenDatabase  +
mov esi eax +
test esi esi +
jnz loc_1002009  +
push edi  +
push 3EAh  +
jmp loc_1002020  +
push 7001h  +
push 0  +
push esi  +
call SdbFindFirstTag  +
test eax eax +
jnz loc_1002029  +
push edi  +
push 3EBh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_100204C  +
push 7002h  +
push eax  +
push esi  +
call SdbFindFirstTag  +
test eax eax +
jz loc_100204C  +
push 7005h  +
push eax  +
push esi  +
call SdbFindFirstTag  +
test eax eax +
jz loc_100204C  +
xor ebx ebx +
inc ebx  +
test esi esi +
jz loc_1002056  +
push esi  +
call SdbCloseDatabase  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
cmp edi ebx +
jz loc_10020DE  +
push esi  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call SdbOpenDatabase  +
mov esi eax +
test esi esi +
jnz loc_100208E  +
push dword ptr [ebp+arg_0]  +
push 3EAh  +
jmp loc_10020A7  +
push 7001h  +
push 0  +
push esi  +
call SdbFindFirstTag  +
test eax eax +
jnz loc_10020B0  +
push dword ptr [ebp+arg_0]  +
push 3EBh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_10020D3  +
push eax  +
push esi  +
call sub_10018DF  +
test eax eax +
jz loc_10020CB  +
push eax  +
push [ebp+arg_8]  +
push edi  +
call sub_1001960  +
test eax eax +
jl loc_10020D3  +
jmp loc_10020D0  +
xor eax eax +
mov [edi] ax +
xor ebx ebx +
inc ebx  +
test esi esi +
jz loc_10020DD  +
push esi  +
call SdbCloseDatabase  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
push eax  +
mov esi 104h +
push esi  +
lea eax [ebp+var_414] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_10021CA  +
push offset a_sdb  +
push esi  +
lea eax [ebp+var_414] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10021CA  +
push offset PathName  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_10021CA  +
cmp [ebp+arg_4] 0 +
jz loc_1002173  +
push offset aCustom64  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10021CA  +
lea eax [ebp+var_414] +
push eax  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10021CA  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_10021CA  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+arg_C]  +
push edi  +
call sub_1001960  +
test eax eax +
jl loc_10021CA  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+arg_14]  +
push ebx  +
call sub_1001960  +
test eax eax +
jl loc_10021CA  +
xor eax eax +
inc eax  +
jmp loc_10021CC  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003F01  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0  +
push [ebp+arg_0]  +
call sub_10020EB  +
test eax eax +
jz loc_1002206  +
xor eax eax +
inc eax  +
jmp loc_100221C  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 1  +
push [ebp+arg_0]  +
call sub_10020EB  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 874h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_868] 0 +
mov [ebp+var_874] eax +
mov eax [ebp+arg_8] +
push esi  +
mov [ebp+var_870] eax +
mov eax [ebp+arg_10] +
push offset PathName  +
mov [ebp+var_86C] eax +
mov esi 104h +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_10023D7  +
cmp [ebp+arg_4] 0 +
jz loc_100229C  +
push offset aCustom64  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10023D7  +
push offset a_sdb_0  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10023D7  +
push ebx  +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_10023D6  +
push edi  +
mov edi ds:FindClose +
push offset PathName  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_10023CD  +
cmp [ebp+arg_4] 0 +
jz loc_1002317  +
push offset aCustom64  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10023CD  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push esi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_10023CD  +
push 100h  +
lea eax [ebp+var_614] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_1002064  +
test eax eax +
jz loc_1002368  +
push [ebp+var_874]  +
lea eax [ebp+var_614] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100238B  +
lea eax [ebp+FindFileData] +
push eax  +
push ebx  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1002380  +
push ebx  +
call edi  +
or ebx 0FFFFFFFFh +
cmp ebx 0FFFFFFFFh +
jnz loc_10022DD  +
jmp loc_10023D5  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_870]  +
call sub_1001960  +
test eax eax +
jl loc_10023CD  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_14]  +
push [ebp+var_86C]  +
call sub_1001960  +
test eax eax +
jl loc_10023CD  +
push ebx  +
call edi  +
or ebx 0FFFFFFFFh +
mov [ebp+var_868] 1 +
cmp ebx 0FFFFFFFFh +
jz loc_10023D5  +
push ebx  +
call edi  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_868] +
xor ecx ebp +
pop esi  +
call sub_1003F01  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 828h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_824] eax +
mov eax [ebp+arg_10] +
push esi  +
mov [ebp+var_820] eax +
xor eax eax +
push edi  +
mov edi 104h +
mov [ebp+var_828] eax +
mov [ebp+var_818] eax +
mov [ebp+var_81C] eax +
lea esi [edi-4] +
cmp [ebp+arg_4] eax +
jz loc_1002445  +
cmp [ebp+arg_4] 1 +
jnz loc_1002475  +
push edi  +
lea ecx [ebp+var_20C] +
push ecx  +
push esi  +
lea ecx [ebp+var_814] +
push ecx  +
push eax  +
push ebx  +
call sub_1002225  +
mov [ebp+var_828] eax +
test eax eax +
jnz loc_1002473  +
cmp [ebp+arg_4] 1 +
jnz loc_1002473  +
push offset aWin32  +
jmp loc_10024AD  +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1002480  +
cmp [ebp+arg_4] 2 +
jnz loc_10024C2  +
push edi  +
lea eax [ebp+var_614] +
push eax  +
push esi  +
lea eax [ebp+var_40C] +
push eax  +
push 1  +
push ebx  +
call sub_1002225  +
mov [ebp+var_818] eax +
test eax eax +
jnz loc_10024C0  +
cmp [ebp+arg_4] 2 +
jnz loc_10024C0  +
push offset aWin64  +
push ebx  +
push 41Dh  +
call sub_1001B8B  +
add esp 0Ch +
jmp loc_1002552  +
xor eax eax +
cmp [ebp+var_828] eax +
jz loc_10024DE  +
cmp [ebp+var_818] eax +
jz loc_1002507  +
push 41Eh  +
call sub_1001B8B  +
jmp loc_1002551  +
cmp [ebp+var_818] eax +
jz loc_1002545  +
lea eax [ebp+var_40C] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_824]  +
call sub_1001960  +
test eax eax +
jl loc_1002552  +
lea eax [ebp+var_614] +
jmp loc_1002526  +
lea eax [ebp+var_814] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_824]  +
call sub_1001960  +
test eax eax +
jl loc_1002552  +
lea eax [ebp+var_20C] +
push eax  +
push [ebp+arg_14]  +
push [ebp+var_820]  +
call sub_1001960  +
test eax eax +
jl loc_1002552  +
mov [ebp+var_81C] 1 +
jmp loc_1002552  +
push ebx  +
push 406h  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_81C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003F01  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
call sub_1001DD2  +
test eax eax +
jz loc_10025A8  +
push [ebp+arg_8]  +
lea eax [ebp+var_14] +
push esi  +
push eax  +
call sub_1001D58  +
neg eax  +
sbb eax eax +
neg eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1003F01  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push eax  +
mov esi 104h +
push esi  +
lea eax [ebp+ValueName] +
xor ebx ebx +
push eax  +
mov [ebp+var_624] ebx +
mov [ebp+hKey] ebx +
call sub_1001960  +
test eax eax +
jl loc_1002643  +
push offset a_sdb  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_1002643  +
mov eax offset aSLayersS +
cmp [ebp+arg_10] ebx +
jnz loc_1002624  +
mov eax offset aSS +
push edi  +
push offset aSoftwareMicros  +
push eax  +
lea eax [ebp+SubKey] +
push 208h  +
push eax  +
call sub_1001A30  +
add esp 14h +
test eax eax +
jge loc_100264F  +
push 409h  +
call sub_1001B8B  +
jmp loc_10026B6  +
push ebx  +
lea eax [ebp+hKey] +
push eax  +
push ebx  +
push 102h  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ds:RegCreateKeyExW  +
test eax eax +
jz loc_1002684  +
lea eax [ebp+SubKey] +
push eax  +
push 3F1h  +
jmp loc_10026B0  +
push 8  +
lea eax [ebp+Data] +
push eax  +
push 0Bh  +
push ebx  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_10026B9  +
lea eax [ebp+SubKey] +
push eax  +
push 3F4h  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_10026C3  +
mov [ebp+var_624] 1 +
cmp [ebp+hKey] ebx +
pop edi  +
pop esi  +
pop ebx  +
jz loc_10026DA  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_624] +
xor ecx ebp +
call sub_1003F01  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 834h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push eax  +
mov esi 104h +
xor ebx ebx +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
mov dword ptr [ebp+lpSubKey] edi +
mov [ebp+var_82C] ebx +
mov [ebp+hKey] ebx +
mov [ebp+cValues] ebx +
call sub_1001960  +
test eax eax +
jl loc_1002820  +
push offset a_sdb  +
push esi  +
lea eax [ebp+ValueName] +
push eax  +
call sub_100199A  +
test eax eax +
jl loc_1002820  +
mov eax offset aSLayersS +
cmp [ebp+arg_8] ebx +
jnz loc_100276F  +
mov eax offset aSS +
push edi  +
push offset aSoftwareMicros  +
push eax  +
lea eax [ebp+SubKey] +
push 208h  +
push eax  +
call sub_1001A30  +
add esp 14h +
test eax eax +
jl loc_1002820  +
lea eax [ebp+hKey] +
push eax  +
push 103h  +
push ebx  +
mov ebx ds:RegOpenKeyExW +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ebx  +
test eax eax +
jz loc_10027C2  +
cmp eax 5 +
jnz loc_100296B  +
jmp loc_10027E6  +
mov edi ds:RegDeleteValueW +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call edi  +
xor ecx ecx +
cmp eax ecx +
jz loc_1002862  +
cmp eax 5 +
jnz loc_10027ED  +
push 3F5h  +
jmp loc_1002825  +
cmp eax 2 +
jnz loc_1002841  +
lea eax [ebp+ValueName] +
push eax  +
push esi  +
lea eax [ebp+var_824] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_1002820  +
push offset a_sdb  +
push esi  +
lea eax [ebp+var_824] +
push eax  +
call sub_100199A  +
test eax eax +
jge loc_1002830  +
push 409h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1002975  +
lea eax [ebp+var_824] +
push eax  +
push [ebp+hKey]  +
call edi  +
xor ecx ecx +
cmp eax ecx +
jz loc_1002862  +
lea eax [ebp+SubKey] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push 3F8h  +
call sub_1001B8B  +
add esp 0Ch +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
lea eax [ebp+cValues] +
push eax  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
test eax eax +
jz loc_10028AE  +
lea eax [ebp+SubKey] +
push eax  +
push 41Ah  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
and [ebp+hKey] 0 +
jmp loc_100296B  +
cmp [ebp+cValues] 0 +
jnz loc_100296B  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor esi esi +
mov [ebp+hKey] esi +
mov eax offset aSLayers +
cmp [ebp+arg_8] esi +
jnz loc_10028DE  +
mov eax offset aS +
push offset aSoftwareMicros  +
push eax  +
lea eax [ebp+SubKey] +
push 208h  +
push eax  +
call sub_1001A30  +
add esp 10h +
test eax eax +
jge loc_1002908  +
push 409h  +
call sub_1001B8B  +
jmp loc_1002939  +
lea eax [ebp+hKey] +
push eax  +
push 102h  +
push esi  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ebx  +
test eax eax +
jz loc_100293C  +
lea eax [ebp+SubKey] +
push eax  +
push 3F6h  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_100296B  +
push dword ptr [ebp+lpSubKey]  +
push [ebp+hKey]  +
call sub_100191A  +
test eax eax +
jz loc_100296B  +
lea eax [ebp+SubKey] +
push eax  +
push dword ptr [ebp+lpSubKey]  +
push 3F7h  +
call sub_1001B8B  +
add esp 0Ch +
mov [ebp+var_82C] 1 +
cmp [ebp+hKey] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_100298D  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_82C] +
xor ecx ebp +
call sub_1003F01  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_A4] eax +
xor eax eax +
push 7012h  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_A0] ax +
lea edi [ebp+var_A0+2] +
stos   +
xor esi esi +
push ebx  +
inc esi  +
stos   +
call SdbFindFirstTag  +
jmp loc_1002AE8  +
test esi esi +
jz loc_1002B0C  +
push 9006h  +
push [ebp+var_98]  +
push ebx  +
call SdbFindFirstTag  +
test eax eax +
jz loc_1002A1A  +
push eax  +
push ebx  +
call SdbGetBinaryTagData  +
test eax eax +
jnz loc_1002A38  +
cmp [ebp+arg_14] 2 +
jz loc_1002AD9  +
cmp [ebp+arg_14] 1 +
jz loc_1002AD9  +
push 408h  +
jmp loc_1002B04  +
mov esi eax +
lea edi [ebp+var_94] +
movs   +
movs   +
lea eax [ebp+var_A0] +
movs   +
push eax  +
lea eax [ebp+var_94] +
push eax  +
movs   +
call ds:RtlStringFromGUID  +
test eax eax +
jl loc_1002AF8  +
mov eax [ebp+var_A0] +
and eax 0FFFEh +
cmp ax 7Eh +
ja loc_1002AFF  +
movzx esi word ptr [ebp+var_A0] +
push esi  +
push [ebp+var_9C]  +
lea eax [ebp+var_84] +
push eax  +
call memcpy  +
xor eax eax +
add esp 0Ch +
shr esi 1 +
cmp [ebp+arg_14] eax +
mov word ptr [ebp+esi*2+var_84] ax +
push eax  +
lea eax [ebp+var_84] +
jnz loc_1002ABE  +
push [ebp+arg_10]  +
push dword ptr [ebp+Data]  +
push [ebp+var_A4]  +
push eax  +
call sub_10025BC  +
jmp loc_1002ACA  +
push [ebp+var_A4]  +
push eax  +
call sub_10026F3  +
mov esi eax +
lea eax [ebp+var_A0] +
push eax  +
call ds:RtlFreeUnicodeString  +
push [ebp+var_98]  +
push [ebp+arg_4]  +
push ebx  +
call SdbFindNextTag  +
mov [ebp+var_98] eax +
test eax eax +
jnz loc_10029F2  +
jmp loc_1002B0C  +
push 407h  +
jmp loc_1002B04  +
push 409h  +
call sub_1001B8B  +
xor esi esi +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003F01  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 640h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
push ebx  +
mov dword ptr [ebp+var_640] eax +
mov eax [ebp+arg_C] +
mov esi offset aSoftwareMicr_2 +
push esi  +
push offset aSS_sdb  +
mov [ebp+lpData] eax +
lea eax [ebp+SubKey] +
push 104h  +
xor edi edi +
push eax  +
mov [ebp+var_634] 1 +
mov [ebp+hKey] edi +
call sub_1001A30  +
add esp 14h +
test eax eax +
jl loc_1002CAB  +
push edi  +
push 100h  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ds:RegDeleteKeyExW  +
cmp eax edi +
jz loc_1002BC0  +
cmp eax 2 +
jz loc_1002BC0  +
push esi  +
push ebx  +
push 3F7h  +
call sub_1001B8B  +
add esp 0Ch +
jmp loc_1002CAB  +
cmp [ebp+arg_0] edi +
jnz loc_1002CB1  +
push dword ptr [ebp+var_640]  +
lea eax [ebp+Data] +
push offset aWindirSystem32  +
push 212h  +
push eax  +
call sub_1001A30  +
add esp 10h +
test eax eax +
jl loc_1002C98  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push 102h  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+SubKey] +
push eax  +
push 80000002h  +
call ds:RegCreateKeyExW  +
test eax eax +
jz loc_1002C25  +
lea eax [ebp+SubKey] +
push eax  +
push 3F1h  +
jmp loc_1002CA4  +
mov eax [ebp+lpData] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1002C2E  +
mov esi ds:RegSetValueExW +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpData]  +
push 1  +
push edi  +
push offset aDisplayname  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jnz loc_1002C98  +
lea eax [ebp+Data] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1002C6A  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 2  +
push edi  +
push offset aUninstallstrin  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jz loc_1002CB1  +
lea eax [ebp+SubKey] +
push eax  +
push 3F4h  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_634] edi +
cmp [ebp+hKey] edi +
pop edi  +
pop esi  +
pop ebx  +
jz loc_1002CC8  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_634] +
xor ecx ebp +
call sub_1003F01  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 654h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
xor ecx ecx +
push edi  +
xor eax eax +
lea edi [ebp+var_638] +
mov dword ptr [ebp+Data] ecx +
mov [ebp+lpExistingFileName] ebx +
mov [ebp+lpFileName] esi +
mov [ebp+var_62C] ecx +
mov [ebp+hKey] ecx +
mov [ebp+var_628] 1 +
stos   +
cmp [ebp+arg_4] ecx +
jnz loc_1002D5E  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov eax [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov dword ptr [ebp+Data] eax +
mov eax [ebp+SystemTimeAsFileTime.dwHighDateTime] +
mov [ebp+var_638] eax +
xor ecx ecx +
cmp ebx ecx +
jz loc_100332C  +
cmp esi ecx +
jz loc_100332C  +
push 200h  +
push ecx  +
lea eax [ebp+var_204] +
push eax  +
call memset  +
add esp 0Ch +
push ebx  +
call sub_10018B3  +
xor edi edi +
cmp eax edi +
jnz loc_1002DA5  +
push 3E9h  +
call sub_1001B8B  +
pop ecx  +
mov [ebp+var_628] edi +
jmp loc_1003346  +
push eax  +
push 104h  +
lea eax [ebp+var_614] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_1002D9A  +
cmp [ebp+arg_4] edi +
jnz loc_1002DD0  +
push [ebp+arg_C]  +
push esi  +
push ebx  +
call sub_100256E  +
test eax eax +
jnz loc_1002DF0  +
jmp loc_1002D9A  +
cmp [ebp+arg_4] 2 +
jnz loc_1002DE2  +
push esi  +
call sub_10018B3  +
test eax eax +
jnz loc_1002DF0  +
jmp loc_1002D8F  +
push ebx  +
push [ebp+arg_C]  +
push esi  +
call sub_1001960  +
test eax eax +
jl loc_1002D9A  +
lea eax [ebp+var_624] +
push eax  +
push ebx  +
call sub_1001DD2  +
test eax eax +
jz loc_1002FC1  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_624] +
movs   +
movs   +
movs   +
movs   +
call SdbIsStandardDatabase  +
test eax eax +
jz loc_1002E33  +
push 3EDh  +
call sub_1001B8B  +
and [ebp+var_628] 0 +
jmp loc_10032DD  +
lea eax [ebp+var_64C] +
push eax  +
lea eax [ebp+var_624] +
push eax  +
call ds:RtlStringFromGUID  +
test eax eax +
jge loc_1002E52  +
push 407h  +
jmp loc_1002E22  +
mov eax dword ptr [ebp+var_64C] +
and eax 0FFFEh +
mov ecx 206h +
cmp ax cx +
jbe loc_1002E6E  +
push 409h  +
jmp loc_1002E22  +
movzx esi word ptr [ebp+var_64C] +
push esi  +
push [ebp+var_648]  +
lea eax [ebp+var_40C] +
push eax  +
call memcpy  +
xor eax eax +
shr esi 1 +
mov word ptr [ebp+esi*2+var_40C] ax +
add esp 0Ch +
lea eax [ebp+var_64C] +
push eax  +
call ds:RtlFreeUnicodeString  +
cmp [ebp+arg_4] 0 +
jnz loc_1002F51  +
mov esi ds:RegCreateKeyExW +
xor eax eax +
push eax  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
mov ebx 101h +
push ebx  +
push eax  +
push eax  +
push eax  +
push offset SubKey  +
mov edi 80000002h +
push edi  +
call esi  +
test eax eax +
jz loc_1002F07  +
cmp eax 5 +
jnz loc_1002EEA  +
push 3F0h  +
call sub_1001B8B  +
jmp loc_1002EFA  +
push offset SubKey  +
push 3F1h  +
call sub_1001B8B  +
pop ecx  +
and [ebp+var_628] 0 +
pop ecx  +
jmp loc_1003346  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
push eax  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
push ebx  +
push eax  +
push eax  +
push eax  +
mov ebx offset aSoftwareMicros +
push ebx  +
push edi  +
mov [ebp+hKey] eax +
call esi  +
test eax eax +
jz loc_1002F38  +
push ebx  +
jmp loc_1002EEF  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
and [ebp+hKey] 0 +
mov ebx [ebp+lpExistingFileName] +
xor edi edi +
push edi  +
push ebx  +
call SdbOpenDatabase  +
mov esi eax +
mov [ebp+var_62C] esi +
cmp esi edi +
jnz loc_1002F7C  +
push ebx  +
push 3EAh  +
call sub_1001B8B  +
mov [ebp+var_628] edi +
jmp loc_10032DC  +
push 7001h  +
push edi  +
push esi  +
call SdbFindFirstTag  +
mov [ebp+var_634] eax +
cmp eax edi +
jnz loc_1002F9A  +
push ebx  +
push 3EBh  +
jmp loc_1002F6C  +
push eax  +
push esi  +
call sub_10018DF  +
cmp eax edi +
jnz loc_1002FAB  +
lea eax [ebp+var_614] +
push eax  +
push 100h  +
lea eax [ebp+var_204] +
push eax  +
call sub_1001960  +
test eax eax +
jge loc_1002FCC  +
mov [ebp+var_628] edi +
jmp loc_10032DE  +
push 7007h  +
push [ebp+var_634]  +
push [ebp+var_62C]  +
call SdbFindFirstTag  +
mov esi eax +
mov ebx 6001h +
jmp loc_100309C  +
push ebx  +
push esi  +
push [ebp+var_62C]  +
call SdbFindFirstTag  +
cmp eax edi +
jnz loc_1003018  +
cmp [ebp+arg_4] 2 +
mov [ebp+var_628] edi +
jz loc_1003082  +
cmp [ebp+arg_4] 1 +
jz loc_1003082  +
push 3F2h  +
jmp loc_100303F  +
push eax  +
push [ebp+var_62C]  +
call SdbGetStringTagPtr  +
cmp eax edi +
jnz loc_100304A  +
cmp [ebp+arg_4] 2 +
mov [ebp+var_628] edi +
jz loc_1003082  +
cmp [ebp+arg_4] 1 +
jz loc_1003082  +
push 3F3h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1003332  +
push edi  +
lea ecx [ebp+var_40C] +
cmp [ebp+arg_4] edi +
jnz loc_1003073  +
push [ebp+var_638]  +
push dword ptr [ebp+Data]  +
push ecx  +
push eax  +
call sub_10025BC  +
test eax eax +
jz loc_10031A1  +
jmp loc_1003082  +
push ecx  +
push eax  +
call sub_10026F3  +
test eax eax +
jz loc_1003332  +
push esi  +
push [ebp+var_634]  +
mov edi esi +
push [ebp+var_62C]  +
call SdbFindNextTag  +
mov esi eax +
cmp esi edi +
jz loc_10030A8  +
xor edi edi +
cmp esi edi +
jnz loc_1002FEE  +
jmp loc_10030AA  +
xor edi edi +
push 700Bh  +
push [ebp+var_634]  +
push [ebp+var_62C]  +
call SdbFindFirstTag  +
mov esi eax +
jmp loc_1003169  +
push ebx  +
push esi  +
push [ebp+var_62C]  +
call SdbFindFirstTag  +
cmp eax edi +
jnz loc_10030F0  +
cmp [ebp+arg_4] 2 +
mov [ebp+var_628] edi +
jz loc_100314D  +
cmp [ebp+arg_4] 1 +
jnz loc_1003011  +
jmp loc_100314D  +
push eax  +
push [ebp+var_62C]  +
call SdbGetStringTagPtr  +
cmp eax edi +
jnz loc_1003118  +
cmp [ebp+arg_4] 2 +
mov [ebp+var_628] edi +
jz loc_100314D  +
cmp [ebp+arg_4] 1 +
jnz loc_100303A  +
jmp loc_100314D  +
push 1  +
lea ecx [ebp+var_40C] +
cmp [ebp+arg_4] edi +
jnz loc_100313E  +
push [ebp+var_638]  +
push dword ptr [ebp+Data]  +
push ecx  +
push eax  +
call sub_10025BC  +
test eax eax +
jz loc_10031A1  +
jmp loc_100314D  +
push ecx  +
push eax  +
call sub_10026F3  +
test eax eax +
jz loc_1003332  +
push esi  +
push [ebp+var_634]  +
mov edi esi +
push [ebp+var_62C]  +
call SdbFindNextTag  +
mov esi eax +
cmp esi edi +
jz loc_1003173  +
xor edi edi +
cmp esi edi +
jnz loc_10030C7  +
jmp loc_1003175  +
xor edi edi +
mov ebx [ebp+arg_4] +
push ebx  +
push [ebp+var_638]  +
lea eax [ebp+var_40C] +
push dword ptr [ebp+Data]  +
push eax  +
push [ebp+var_634]  +
push [ebp+var_62C]  +
call sub_10029A6  +
test eax eax +
jnz loc_10031AC  +
mov [ebp+var_628] edi +
jmp loc_1003332  +
push [ebp+var_62C]  +
call SdbCloseDatabase  +
mov [ebp+var_62C] edi +
cmp ebx edi +
jnz loc_100321D  +
push edi  +
mov esi offset PathName +
push esi  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_10031F3  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_10031F3  +
push eax  +
push esi  +
push 410h  +
call sub_1001B8B  +
add esp 0Ch +
jmp loc_1002D9A  +
mov esi [ebp+lpFileName] +
push 1  +
push esi  +
push [ebp+lpExistingFileName]  +
call ds:CopyFileW  +
test eax eax +
jnz loc_1003264  +
push esi  +
push 3F9h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1002D99  +
mov esi [ebp+lpFileName] +
push 80h  +
push esi  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_1003246  +
push esi  +
push 41Bh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_628] edi +
push esi  +
call ds:DeleteFileW  +
test eax eax +
jnz loc_1003264  +
push esi  +
push 3FAh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
mov [ebp+var_628] edi +
lea eax [ebp+var_204] +
push eax  +
lea eax [ebp+var_40C] +
push eax  +
push esi  +
push ebx  +
call sub_1002B24  +
cmp ebx edi +
jnz loc_10032A8  +
lea eax [ebp+Data] +
push eax  +
push 10000h  +
push esi  +
call SdbRegisterDatabaseEx  +
test eax eax +
lea eax [ebp+var_204] +
push eax  +
jnz loc_100331E  +
push 40Ah  +
jmp loc_1003212  +
lea eax [ebp+var_624] +
push eax  +
call SdbUnregisterDatabase  +
test eax eax +
jnz loc_10032CB  +
lea eax [ebp+var_204] +
push eax  +
push 40Bh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
lea eax [ebp+var_204] +
push eax  +
push 3FCh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
cmp [ebp+arg_4] 0 +
jz loc_1003332  +
cmp [ebp+var_62C] 0 +
jz loc_10032FF  +
push [ebp+var_62C]  +
call SdbCloseDatabase  +
and [ebp+var_62C] 0 +
push 80h  +
push [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
push [ebp+lpFileName]  +
call ds:DeleteFileW  +
jmp loc_1003332  +
push 3FBh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_1003346  +
mov [ebp+var_628] ecx +
cmp [ebp+var_62C] 0 +
jz loc_1003346  +
push [ebp+var_62C]  +
call SdbCloseDatabase  +
cmp [ebp+hKey] 0 +
jz loc_100335B  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_628] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1003F01  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
push edi  +
push dword ptr [ebp+arg_0]  +
mov [ebp+var_4] edi +
mov [ebx] edi +
call SdbOpenDatabase  +
mov esi eax +
cmp esi edi +
jnz loc_10033AA  +
push dword ptr [ebp+arg_0]  +
push 3EAh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_10033FA  +
push 7001h  +
push edi  +
push esi  +
call SdbFindFirstTag  +
cmp eax edi +
jnz loc_10033CB  +
push dword ptr [ebp+arg_0]  +
push 3EBh  +
call sub_1001B8B  +
pop ecx  +
pop ecx  +
jmp loc_10033F4  +
push 4023h  +
push eax  +
push esi  +
call SdbFindFirstTag  +
cmp eax edi +
jz loc_10033ED  +
push edi  +
push eax  +
push esi  +
call SdbReadDWORDTag  +
test al 6 +
jz loc_10033ED  +
mov dword ptr [ebx] 1 +
mov [ebp+var_4] 1 +
push esi  +
call SdbCloseDatabase  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0DA8h +
mov eax dword_1005004 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 100h  +
mov [ebp+var_DA8] edi +
mov [ebp+var_C] edi +
mov [ebp+var_DA4] edi +
call ds:SetThreadPreferredUILanguages  +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:HeapSetInformation  +
push edi  +
call ds:GetModuleHandleW  +
mov hInstance eax +
cmp esi edi +
jnz loc_100346F  +
push 3FDh  +
call sub_1001B8B  +
xor eax eax +
pop ecx  +
inc eax  +
jmp loc_1003C34  +
cmp [ebp+arg_0] 2 +
jge loc_1003483  +
push dword ptr [esi]  +
call sub_1001CAE  +
xor eax eax +
jmp loc_1003C34  +
and dword_1005228 edi +
and [ebp+var_DA0] edi +
xor edi edi +
xor eax eax +
inc edi  +
cmp [ebp+arg_0] edi +
push ebx  +
mov word ptr [ebp+var_D4] ax +
mov word ptr [ebp+var_584] ax +
mov word ptr [ebp+var_784] ax +
mov ebx 104h +
jle loc_1003620  +
mov eax [esi+edi*4] +
movzx ecx word ptr [eax] +
cmp cx 2Dh +
jz loc_10034E5  +
cmp cx 2Fh +
jz loc_10034E5  +
cmp word ptr [ebp+var_584] 0 +
jnz loc_1003634  +
push eax  +
push ebx  +
lea eax [ebp+var_584] +
jmp loc_100360C  +
movzx eax word ptr [eax+2] +
push eax  +
call ds:tolower  +
sub eax 3Fh +
pop ecx  +
jz loc_100368B  +
sub eax 24h +
jz loc_1003681  +
sub eax 4 +
jz loc_10035F1  +
sub eax 7 +
jz loc_100354E  +
dec eax  +
dec eax  +
jz loc_100353F  +
dec eax  +
jz loc_1003530  +
sub eax 4 +
jnz loc_100363B  +
mov [ebp+var_DA0] 1 +
jmp loc_1003616  +
mov dword_1005228 1 +
jmp loc_1003616  +
mov dword_1005640 1 +
jmp loc_1003616  +
mov ecx [esi+edi*4] +
mov eax ecx +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1003556  +
sub eax ebx +
sar eax 1 +
cmp eax 2 +
jbe loc_10035BF  +
cmp eax 8 +
jnz loc_1003645  +
cmp word ptr [ecx+4] 3Ah +
jnz loc_1003645  +
movzx eax word ptr [ecx+6] +
push eax  +
call ds:tolower  +
pop ecx  +
cmp eax 77h +
jnz loc_1003645  +
mov eax [esi+edi*4] +
movzx eax word ptr [eax+0Ch] +
cmp ax 33h +
jnz loc_10035AB  +
mov [ebp+var_DA4] 1 +
jmp loc_10035BF  +
cmp ax 36h +
jnz loc_1003645  +
mov [ebp+var_DA4] 2 +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1003669  +
push dword ptr [esi+edi*4]  +
xor ebx ebx +
push 100h  +
lea eax [ebp+var_784] +
inc ebx  +
push eax  +
mov [ebp+var_DA0] ebx +
call sub_1001960  +
test eax eax +
jl loc_1003650  +
mov ebx 104h +
jmp loc_1003616  +
inc edi  +
cmp edi [ebp+arg_0] +
jge loc_1003669  +
push dword ptr [esi+edi*4]  +
mov [ebp+var_DA0] 1 +
push 64h  +
lea eax [ebp+var_D4] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_100367A  +
inc edi  +
cmp edi [ebp+arg_0] +
jl loc_10034B8  +
call ds:SHELL32_680  +
test eax eax +
jnz loc_1003697  +
push 3F0h  +
jmp loc_1003BC9  +
push 3FFh  +
jmp loc_10036B3  +
push dword ptr [esi+edi*4]  +
push 3FEh  +
jmp loc_1003672  +
push dword ptr [esi+edi*4-4]  +
push 41Fh  +
jmp loc_1003672  +
push 415h  +
call sub_1001B8B  +
pop ecx  +
push dword ptr [esi]  +
call sub_1001CAE  +
mov eax ebx +
jmp loc_1003C33  +
push dword ptr [esi+edi*4-4]  +
push 405h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_10036B8  +
push 415h  +
jmp loc_10036B3  +
call sub_1001CCB  +
jmp loc_1003B9F  +
push dword ptr [esi]  +
call sub_1001CAE  +
jmp loc_1003B9F  +
xor eax eax +
cmp [ebp+var_DA0] eax +
jnz loc_10036C5  +
cmp word ptr [ebp+var_584] ax +
jnz loc_1003767  +
push 400h  +
call sub_1001B8B  +
pop ecx  +
push dword ptr [esi]  +
call sub_1001CAE  +
jmp loc_1003BCF  +
xor edi edi +
inc edi  +
cmp [ebp+var_DA0] edi +
jnz loc_10036F9  +
cmp word ptr [ebp+var_584] ax +
jnz loc_100376A  +
cmp word ptr [ebp+var_D4] ax +
jnz loc_1003702  +
cmp word ptr [ebp+var_784] ax +
jnz loc_1003702  +
push 400h  +
jmp loc_10037C6  +
cmp word ptr [ebp+var_584] ax +
jnz loc_100376A  +
push ebx  +
xor eax eax +
mov esi offset PathName +
push esi  +
mov PathName ax +
call sub_100181B  +
xor eax eax +
cmp ax PathName +
jz loc_1003755  +
push offset aApppatch  +
push ebx  +
push esi  +
call sub_100199A  +
test eax eax +
jl loc_1003755  +
push offset aCustom  +
push ebx  +
push esi  +
call sub_100199A  +
test eax eax +
jl loc_1003755  +
push esi  +
push ebx  +
push offset unk_1005230  +
call sub_1001960  +
test eax eax +
jge loc_10037D5  +
push 409h  +
call sub_1001B8B  +
pop ecx  +
mov eax edi +
jmp loc_1003C33  +
xor edi edi +
inc edi  +
cmp word ptr [ebp+var_584+2] 3Ah +
jz loc_10037A5  +
cmp word ptr [ebp+var_584+2] 5Ch +
jz loc_10037A5  +
push ebx  +
lea eax [ebp+var_584] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:_wfullpath  +
add esp 0Ch +
test eax eax +
jnz loc_1003702  +
push 401h  +
jmp loc_100375A  +
lea eax [ebp+var_584] +
push eax  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001960  +
test eax eax +
jge loc_1003702  +
push 415h  +
call sub_1001B8B  +
pop ecx  +
push dword ptr [esi]  +
call sub_1001CAE  +
jmp loc_1003760  +
push esi  +
push ebx  +
mov edi offset unk_1005438 +
push edi  +
call sub_1001960  +
test eax eax +
jl loc_1003A93  +
mov ebx offset aCustom64 +
push ebx  +
push 104h  +
push edi  +
call sub_100199A  +
test eax eax +
jl loc_1003A93  +
mov edi ds:CreateDirectoryW +
push 0  +
push esi  +
call edi  +
test eax eax +
jnz loc_1003823  +
call ds:GetLastError  +
cmp eax 0B7h +
jnz loc_10038A7  +
cmp [ebp+var_DA0] 0 +
jnz loc_10038BB  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_1003853  +
lea eax [ebp+FileName] +
push eax  +
push 417h  +
jmp loc_1003A0A  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1003377  +
test eax eax +
jz loc_1003BCF  +
cmp [ebp+var_C] 0 +
jz loc_1003A9D  +
push ebx  +
push 104h  +
push esi  +
call sub_100199A  +
test eax eax +
jl loc_1003A93  +
push 0  +
push esi  +
call edi  +
test eax eax +
jnz loc_1003A9D  +
call ds:GetLastError  +
cmp eax 0B7h +
jz loc_1003A9D  +
push eax  +
push esi  +
push 410h  +
call sub_1001B8B  +
add esp 0Ch +
jmp loc_1003BCF  +
cmp [ebp+var_DA0] 1 +
jnz loc_1003BD4  +
xor edi edi +
cmp word ptr [ebp+var_D4] di +
jz loc_10039B0  +
lea eax [ebp+var_D4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10038E0  +
sub eax edx +
sar eax 1 +
cmp eax 26h +
jnz loc_10039A6  +
cmp word ptr [ebp+var_D4] 7Bh +
jnz loc_10039A6  +
cmp [ebp+var_8A] 7Dh +
jnz loc_10039A6  +
push 2Dh  +
pop eax  +
cmp [ebp+var_C2] ax +
jnz loc_10039A6  +
cmp [ebp+var_B8] ax +
jnz loc_10039A6  +
cmp [ebp+var_AE] ax +
jnz loc_10039A6  +
cmp [ebp+var_A4] ax +
jnz loc_10039A6  +
mov esi 104h +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push esi  +
lea eax [ebp+var_584] +
push eax  +
lea eax [ebp+var_D4] +
push eax  +
call sub_10021E2  +
test eax eax +
lea eax [ebp+var_D4] +
push eax  +
jnz loc_100397A  +
push 416h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1003BCE  +
push esi  +
lea eax [ebp+var_584] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_1003A93  +
push offset a_sdb  +
push esi  +
lea eax [ebp+var_584] +
push eax  +
call sub_100199A  +
jmp loc_1003A8B  +
push 407h  +
jmp loc_1003BC9  +
cmp word ptr [ebp+var_784] di +
jz loc_1003A15  +
mov eax 104h +
push eax  +
lea ecx [ebp+FileName] +
push ecx  +
push eax  +
lea eax [ebp+var_584] +
push eax  +
push [ebp+var_DA4]  +
lea eax [ebp+var_784] +
push eax  +
call sub_10023F1  +
test eax eax +
jz loc_1003BCF  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_1003BD4  +
lea eax [ebp+FileName] +
push eax  +
push 3EFh  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1003AC0  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1003377  +
test eax eax +
jz loc_1003BCF  +
cmp [ebp+var_C] edi +
mov edi 104h +
jz loc_1003A43  +
push ebx  +
push edi  +
push esi  +
call sub_100199A  +
test eax eax +
jl loc_1003A93  +
push edi  +
lea eax [ebp+var_B94] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_100256E  +
test eax eax +
jz loc_1003BCF  +
lea eax [ebp+var_B94] +
push eax  +
push edi  +
lea eax [ebp+var_584] +
push eax  +
call sub_1001960  +
test eax eax +
jl loc_1003A93  +
lea eax [ebp+var_B94] +
push eax  +
push edi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001960  +
test eax eax +
jge loc_10039E8  +
push 409h  +
jmp loc_1003BC9  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001FE3  +
test eax eax +
jz loc_1003AC6  +
cmp dword_1005640 0 +
jnz loc_1003AC6  +
push 414h  +
call sub_1001B8B  +
pop ecx  +
jmp loc_1003C2D  +
push 104h  +
lea eax [ebp+var_D9C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1001E6E  +
test eax eax +
jz loc_1003BD4  +
and [ebp+var_DA4] 0 +
xor eax eax +
cmp dword_1005228 eax +
mov ebx 402h +
setnz al  +
add eax ebx +
push eax  +
call sub_1001B8B  +
mov esi ds:LoadStringW +
lea edi [ebx+1Ah] +
jmp loc_1003B87  +
cmp dword_1005228 0 +
jz loc_1003B1F  +
mov ax word ptr [ebp+var_C] +
jmp loc_1003B5A  +
push 1000h  +
push 0  +
lea eax [ebp+var_DA4] +
push eax  +
push 50h  +
lea eax [ebp+var_174] +
push eax  +
call sub_1001A6B  +
test eax eax +
jl loc_1003B9F  +
lea eax [ebp-0D6h] +
cmp [ebp+var_DA4] eax +
jz loc_1003B9F  +
push dword ptr [ebp+var_174]  +
call ds:towupper  +
pop ecx  +
mov [ebp+var_174] ax +
cmp ax word ptr [ebp+var_C+2] +
jz loc_1003B9F  +
cmp ax word ptr [ebp+var_C] +
jz loc_1003BA6  +
and [ebp+var_DA4] 0 +
xor eax eax +
cmp dword_1005228 eax +
setnz al  +
add eax ebx +
push eax  +
call sub_1001B8B  +
pop ecx  +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
push hInstance  +
call esi  +
test eax eax +
jnz loc_1003B10  +
xor eax eax +
jmp loc_1003C33  +
push 104h  +
lea eax [ebp+var_98C] +
push eax  +
push 1  +
lea eax [ebp+var_D9C] +
push eax  +
call sub_1002CE1  +
test eax eax +
jnz loc_1003BD4  +
push 404h  +
call sub_1001B8B  +
pop ecx  +
xor eax eax +
inc eax  +
jmp loc_1003C33  +
xor eax eax +
mov word ptr [ebp+var_98C] ax +
mov esi 104h +
push esi  +
lea eax [ebp+var_98C] +
push eax  +
push [ebp+var_DA0]  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002CE1  +
test eax eax +
jnz loc_1003C28  +
cmp [ebp+var_DA0] eax +
jnz loc_1003C1E  +
push esi  +
lea eax [ebp+var_98C] +
push eax  +
push 2  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002CE1  +
mov [ebp+var_DA8] 1 +
call sub_1001CCB  +
mov eax [ebp+var_DA8] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1003F01  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1003C63  +
test eax eax +
jnz loc_1003C68  +
mov ecx [esi] +
test ecx ecx +
jz loc_1003C60  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1003C54  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1005668 +
push offset dword_1005658  +
push dword_1005664  +
mov dword_1005658 eax +
push offset dword_1005648  +
push offset dword_100564C  +
push offset dword_1005644  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1005654 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1003CF0  +
cmp eax esi +
jnz loc_1003CE3  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1003CF3  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1003CCA  +
xor esi esi +
inc esi  +
mov eax dword_100599C +
cmp eax esi +
jnz loc_1003D06  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1003D41  +
mov eax dword_100599C +
test eax eax +
jnz loc_1003D3B  +
mov dword_100599C esi +
push offset dword_100118C  +
push offset dword_1001180  +
call sub_1003C47  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003D41  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1003E0B  +
mov dword_1005660 esi +
mov eax dword_100599C +
cmp eax esi +
jnz loc_1003D65  +
push offset dword_100117C  +
push offset dword_1001174  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100599C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1003D72  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10059A4 ebx +
jz loc_1003D93  +
push offset dword_10059A4  +
call sub_1004059  +
pop ecx  +
test eax eax +
jz loc_1003D93  +
push ebx  +
push 2  +
push ebx  +
call dword_10059A4  +
push dword_1005648  +
push dword_100564C  +
push dword_1005644  +
call sub_1003409  +
add esp 0Ch +
mov dword_100565C eax +
cmp dword_1005650 ebx +
jnz loc_1003DF1  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100565C eax +
xor ebx ebx +
cmp dword_1005650 ebx +
jnz loc_1003DF1  +
push eax  +
call ds:_exit  +
cmp dword_1005660 ebx +
jnz loc_1003DFF  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100565C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1003E28  +
xor eax eax +
jmp loc_1003E75  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1003E24  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1003E62  +
cmp ecx 20Bh +
jnz loc_1003E24  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1003E24  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1003E70  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1003E24  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1005650 eax +
call sub_10041F2  +
push eax  +
call ds:__set_app_type  +
or dword_1005994 0FFFFFFFFh +
or dword_1005998 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1005670 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100566C +
mov [eax] ecx +
call sub_1004184  +
cmp dword_1005018 0 +
jnz loc_1003ECE  +
push offset sub_1004184  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100416C  +
xor eax eax +
retn   +
***
call sub_1004231  +
jmp sub_1003CA8  +
***
cmp ecx dword_1005004 +
jnz loc_1003F0C  +
retn 0  +
jmp loc_10042C7  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1003F98  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1003F98  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1003F92  +
cmp eax 19930521h +
jz loc_1003F92  +
cmp eax 19930522h +
jz loc_1003F92  +
cmp eax 1994000h +
jnz loc_1003F98  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1003F58+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1003FE6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1003FE2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100404D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1004045  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100404F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1004035  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1003FD0  +
pop ecx  +
test eax eax +
jz loc_10040B6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1004010  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10040B6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10040BF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1003F01  +
push offset dword_1005004  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10041E5  +
cmp ecx 0FFFFFFFFh +
jz loc_10041E5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10041DE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10041DE  +
cmp edx 10000000h +
jnb loc_10041DE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10041DE  +
jmp loc_10041D9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1004227  +
push eax  +
call sub_100418C  +
test eax eax +
jz loc_1004227  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100421C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1004227  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1005004 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1004263  +
test eax ebx +
jz loc_1004263  +
not eax  +
mov dword_1005008 eax +
jmp loc_10042BE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10042AA  +
test dword_1005004 ebx +
jnz loc_10042AF  +
mov esi 0BB40E64Fh +
mov dword_1005004 esi +
not esi  +
mov dword_1005008 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1005778 eax +
mov dword_1005774 ecx +
mov dword_1005770 edx +
mov dword_100576C ebx +
mov dword_1005768 esi +
mov dword_1005764 edi +
mov word_1005790 ss +
mov word_1005784 cs +
mov word_1005760 ds +
mov word_100575C es +
mov word_1005758 fs +
mov word_1005754 gs +
pushf   +
pop dword_1005788  +
mov eax [ebp+0] +
mov dword_100577C eax +
mov eax [ebp+4] +
mov dword_1005780 eax +
lea eax [ebp+8] +
mov dword_100578C eax +
mov eax [ebp-320h] +
mov dword_10056C8 10001h +
mov eax dword_1005780 +
mov dword_1005684 eax +
mov dword_1005678 0C0000409h +
mov dword_100567C 1 +
mov eax dword_1005004 +
mov [ebp-328h] eax +
mov eax dword_1005008 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
