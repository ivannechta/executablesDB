mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_10015E0  +
cmp [esi] ax +
jz loc_10015DC  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_10015D2  +
test edx edx +
jnz loc_10015E5  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_10015F6  +
test eax eax +
jl loc_10015F3  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_100160C  +
cmp ecx [ebp+arg_0] +
jbe loc_1001611  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
mov ecx edx +
mov edi eax +
call sub_10015FC  +
test eax eax +
jl loc_100163A  +
mov eax [ebp+arg_0] +
call sub_10015C5  +
jmp loc_100163D  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100167C  +
cmp [ebp+arg_4] eax +
jz loc_1001678  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1001678  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100165B  +
test esi esi +
jnz loc_1001684  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1001692  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
call ds:CompareStringOrdinal  +
dec eax  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_18] +
test edx edx +
jz loc_100171C  +
cmp word ptr [edx] 0 +
jnz loc_1001701  +
push 0Eh  +
jmp loc_100171E  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001707  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_100171F  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1001730  +
cmp word ptr [edx] 0 +
jnz loc_1001735  +
mov edx offset aNull +
jmp loc_1001735  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push 8  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100178F  +
cmp word ptr [edx] 0 +
jnz loc_1001774  +
push 0Eh  +
jmp loc_1001791  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100177A  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1001792  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_10017A3  +
cmp word ptr [edx] 0 +
jnz loc_10017A8  +
mov edx offset aNull +
jmp loc_10017A8  +
mov edx offset aNull_0 +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1001805  +
cmp word ptr [edx] 0 +
jnz loc_10017E9  +
mov [ebp+arg_14] 0Eh +
jmp loc_100180C  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10017EE  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_14] eax +
jmp loc_100180C  +
mov [ebp+arg_14] 0Ah +
mov ebx offset aNull_0 +
test edx edx +
jz loc_1001822  +
cmp word ptr [edx] 0 +
jnz loc_1001824  +
mov edx offset aNull +
jmp loc_1001824  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_100184E  +
cmp word ptr [edi] 0 +
jnz loc_1001835  +
push 0Eh  +
jmp loc_1001850  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100183A  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1001851  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1001866  +
cmp word ptr [edi] 0 +
jnz loc_1001862  +
mov eax offset aNull +
jmp loc_1001868  +
mov eax edi +
jmp loc_1001868  +
mov eax ebx +
push 0  +
push [ebp+arg_14]  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_10018C3  +
cmp word ptr [edx] 0 +
jnz loc_10018A8  +
push 0Eh  +
jmp loc_10018C5  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10018AE  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_10018C6  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_10018D7  +
cmp word ptr [edx] 0 +
jnz loc_10018DC  +
mov edx offset aNull +
jmp loc_10018DC  +
mov edx offset aNull_0 +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TraceMessage  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax+10h] ecx +
mov dword ptr [eax] offset unk_1006118 +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ch] ecx +
xor edx edx +
mov [eax+1Ah] dx +
add eax 20h +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_10019A2  +
dec eax  +
jz loc_1001999  +
push 57h  +
pop eax  +
jmp loc_1001A10  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_10019C8  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:GetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:GetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_10019F1  +
cmp dword ptr [esi+10h] 0 +
jz loc_10019F1  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_1001A0E  +
test cl 2 +
jz loc_10019FF  +
mov esi [esi+10h] +
test esi esi +
jz loc_10019FF  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_1006000 +
push edi  +
mov edi offset dword_1006138 +
jmp loc_1001A5B  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_1001973  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:RegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_1001A32  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi off_1006000 +
push edi  +
mov edi offset off_1006000 +
cmp esi edi +
jz loc_1001AA7  +
jmp loc_1001A9D  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov edx eax +
or edx ecx +
jz loc_1001A9B  +
push ecx  +
push eax  +
call ds:UnregisterTraceGuids  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
mov esi [esi] +
test esi esi +
jnz loc_1001A7F  +
mov off_1006000 edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_1006174 0 +
push esi  +
mov esi [ebp+arg_0] +
jnz loc_1001B12  +
push 64h  +
lea eax [ebp+Caption] +
push eax  +
push 0Bh  +
push hInstance  +
mov dword_1006174 1 +
call ds:LoadStringW  +
push 1010h  +
lea eax [ebp+Caption] +
push eax  +
push lpText  +
push esi  +
call ds:MessageBoxW  +
and dword_1006174 0 +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1004874  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
call ds:GetCurrentProcess  +
mov edi eax +
lea eax [ebp+hMem] +
push eax  +
xor ebx ebx +
push ebx  +
lea eax [ebp+pDacl] +
push eax  +
push ebx  +
push ebx  +
push 4  +
push 6  +
push edi  +
call ds:GetSecurityInfo  +
test eax eax +
jz loc_1001B58  +
xor eax eax +
jmp loc_1001BB3  +
mov eax [ebp+pDacl] +
push esi  +
xor ecx ecx +
xor esi esi +
cmp cx [eax+4] +
jnb loc_1001B91  +
lea ecx [ebp+pAce] +
push ecx  +
movzx ecx si +
push ecx  +
push eax  +
call ds:GetAce  +
test eax eax +
jz loc_1001B87  +
mov eax [ebp+pAce] +
cmp [eax] bl +
jnz loc_1001B87  +
and dword ptr [eax+4] 0FFF3FFFEh +
mov eax [ebp+pDacl] +
inc esi  +
cmp si [eax+4] +
jb loc_1001B66  +
push ebx  +
push eax  +
push ebx  +
push ebx  +
push 4  +
push 6  +
push edi  +
call ds:SetSecurityInfo  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
xor eax eax +
cmp esi ebx +
setz al  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpString] +
push esi  +
call ds:lstrlenW  +
mov edx [ebp+arg_8] +
mov ecx eax +
lea eax [esi+ecx*2] +
test edx edx +
jz loc_1001BE0  +
mov esi [ebp+arg_4] +
sub esi ecx +
dec esi  +
mov [edx] esi +
cmp word ptr [eax-2] 5Ch +
pop esi  +
jz loc_1001C05  +
inc ecx  +
cmp ecx [ebp+arg_4] +
jb loc_1001BF2  +
xor eax eax +
jmp loc_1001C05  +
push 5Ch  +
pop ecx  +
mov [eax] cx +
inc eax  +
inc eax  +
xor ecx ecx +
mov [eax] cx +
test edx edx +
jz loc_1001C05  +
dec dword ptr [edx]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi ds:GetWindowRect +
push edi  +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call esi  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov ebx [ebp+Rect.right] +
sub ebx [ebp+Rect.left] +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
mov [ebp+var_4] eax +
call ds:GetWindowLongW  +
test eax 40000000h +
jnz loc_1001C5D  +
mov edi ds:GetSystemMetrics +
push 0  +
call edi  +
push 1  +
mov esi eax +
call edi  +
mov edi eax +
jmp loc_1001C83  +
push [ebp+hWnd]  +
call ds:GetParent  +
test eax eax +
jnz loc_1001C70  +
call ds:GetDesktopWindow  +
lea ecx [ebp+var_24] +
push ecx  +
push eax  +
call esi  +
mov esi [ebp+var_1C] +
mov edi [ebp+var_18] +
sub esi [ebp+var_24] +
sub edi [ebp+var_20] +
mov eax esi +
sub eax ebx +
cdq   +
sub eax edx +
mov ecx eax +
push 3  +
pop esi  +
mov eax edi +
sub eax [ebp+var_4] +
push 1  +
cdq   +
idiv  esi +
xor edx edx +
push edx  +
push edx  +
sar ecx 1 +
mov [ebp+Rect.left] ecx +
push eax  +
push ecx  +
push edx  +
push [ebp+hWnd]  +
mov [ebp+Rect.top] eax +
call ds:SetWindowPos  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax [ebp+0Ch] +
jge loc_1001CCF  +
xor eax eax +
inc eax  +
jmp loc_1001CDA  +
xor ecx ecx +
cmp eax [ebp+0Ch] +
setz cl  +
dec ecx  +
mov eax ecx +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1001CF9  +
cmp edx 7FFFFFFFh +
jbe loc_1001CFE  +
mov eax 80070057h +
test eax eax +
jl loc_1001D14  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1001647  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_100161A  +
test eax eax +
jl loc_1001D53  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1001647  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_100161A  +
test eax eax +
jl loc_1001DA4  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_1001D8C  +
mov eax 80070057h +
jmp loc_1001DA4  +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
mov edx [ebp+arg_4] +
sub edx eax +
lea ecx [esi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1001647  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1001DC4  +
cmp ecx 7FFFFFFFh +
jbe loc_1001DC9  +
mov eax 80070057h +
test eax eax +
jl loc_1001E06  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1001DF6  +
cmp eax esi +
ja loc_1001DF6  +
jnz loc_1001E01  +
jmp loc_1001DFB  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi ds:LocalAlloc +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp lpText edi +
jnz loc_1001E7F  +
mov eax 208h +
push eax  +
push 40h  +
mov dword_1006168 eax +
call esi  +
mov lpText eax +
cmp eax edi +
jnz loc_1001E7F  +
mov dword_1006168 edi +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1001E78  +
test byte ptr [eax+1Ch] 4 +
jz loc_1001E78  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
xor eax eax +
jmp loc_1002096  +
push ebx  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push edi  +
mov edi ds:RegQueryValueExW +
mov ebx offset ValueName +
push ebx  +
push [ebp+hKey]  +
call edi  +
test eax eax +
jnz loc_1002076  +
mov eax [ebp+cbData] +
cmp eax dword_1006168 +
jbe loc_1001F14  +
mov eax lpText +
test eax eax +
jz loc_1001EBE  +
push eax  +
call ds:LocalFree  +
mov eax [ebp+cbData] +
add eax 2 +
push eax  +
push 40h  +
mov dword_1006168 eax +
call esi  +
mov lpText eax +
test eax eax +
jnz loc_1001F14  +
and dword_1006168 eax +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1001F0D  +
test byte ptr [eax+1Ch] 4 +
jz loc_1001F0D  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
xor eax eax +
jmp loc_1002095  +
mov eax dword_1006168 +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push lpText  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call edi  +
mov ecx dword_1006168 +
mov edi lpText +
shr ecx 1 +
xor edx edx +
mov [edi+ecx*2-2] dx +
xor ecx ecx +
cmp eax ecx +
jnz loc_1002076  +
mov eax lpText +
cmp [eax] cx +
jz loc_1002092  +
mov edi ds:ExpandEnvironmentStringsW +
push ecx  +
push ecx  +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_1001FAD  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002076  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002076  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 2Bh  +
mov eax off_1006000 +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
jmp loc_1002076  +
lea eax [ebx+ebx] +
push eax  +
push 40h  +
call esi  +
mov esi eax +
test esi esi +
jz loc_1002040  +
push ebx  +
push esi  +
push lpText  +
call edi  +
test eax eax +
jnz loc_1001FF7  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002076  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002076  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 2Ch  +
jmp loc_1001F98  +
lea edi [eax+eax] +
mov eax dword_1006168 +
cmp edi eax +
jbe loc_100201D  +
push lpText  +
call ds:LocalFree  +
mov lpText esi +
mov dword_1006168 edi +
jmp loc_1002092  +
push esi  +
shr eax 1 +
push eax  +
push lpText  +
call sub_1001CE3  +
test eax eax +
jge loc_1002037  +
mov [ebp+var_8] 1 +
push esi  +
call ds:LocalFree  +
jmp loc_1002070  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002092  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002092  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
cmp [ebp+var_8] 0 +
jz loc_1002092  +
mov eax dword_1006168 +
shr eax 1 +
push eax  +
push lpText  +
push 9  +
push hInstance  +
call ds:LoadStringW  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F8h +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
sub eax 110h +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov [ebp-0ACh] esi +
jz loc_100231C  +
dec eax  +
jz loc_1002291  +
sub eax 354h +
jnz loc_1002539  +
mov eax dword_1006150 +
mov ecx dword_1006154 +
push eax  +
mov ebx offset Buffer +
push ebx  +
lea eax [ebp-54h] +
push 28h  +
push eax  +
mov [ebp-0B8h] ecx +
call sub_1001DAE  +
add esp 10h +
test eax eax +
jl loc_1002539  +
mov edi ds:SetDlgItemTextW +
lea eax [ebp-54h] +
push eax  +
push 68h  +
push esi  +
call edi  +
push Data  +
lea eax [ebp-54h] +
push ebx  +
push 28h  +
push eax  +
call sub_1001DAE  +
add esp 10h +
test eax eax +
jl loc_1002539  +
lea eax [ebp-54h] +
push eax  +
push 69h  +
push esi  +
call edi  +
push 3E8h  +
push 40h  +
call ds:LocalAlloc  +
xor ebx ebx +
mov [ebp-0A8h] eax +
cmp eax ebx +
jz loc_1002539  +
mov esi dword_1006154 +
mov eax Data +
mov edx dword_1006150 +
xor ecx ecx +
cmp esi ecx +
jb loc_100219B  +
ja loc_100217F  +
cmp edx eax +
jbe loc_100219B  +
push lpText  +
push 65h  +
push dword ptr [ebp-0ACh]  +
call edi  +
push ebx  +
push dword_10060DC  +
jmp loc_1002279  +
sub eax edx +
sbb ecx esi +
mov [ebp-0BCh] eax +
mov eax ecx +
mov [ebp-0B0h] eax +
mov ecx 7FFFFFFFh +
and eax ecx +
mov [ebp-0B8h] eax +
fild  qword ptr [ebp-0BCh] +
mov eax 80000000h +
and [ebp-0B0h] eax +
mov [ebp-0B4h] ebx +
fild  qword ptr [ebp-0B4h] +
mov [ebp-0B0h] esi +
and [ebp-0B0h] eax +
and esi ecx +
fchs   +
mov [ebp-0BCh] edx +
faddp st(1) st +
mov [ebp-0B8h] esi +
fild  qword ptr [ebp-0BCh] +
mov [ebp-0B4h] ebx +
fild  qword ptr [ebp-0B4h] +
push 1F4h  +
push dword ptr [ebp-0A8h]  +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001298 +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_1002250  +
push 8  +
push hInstance  +
call ds:LoadStringW  +
push dword ptr [ebp-0A8h]  +
push 65h  +
push dword ptr [ebp-0ACh]  +
call ds:SetDlgItemTextW  +
push ebx  +
push dword_10060E4  +
jmp loc_1002279  +
push 7  +
push hInstance  +
call ds:LoadStringW  +
push dword ptr [ebp-0A8h]  +
push 65h  +
push dword ptr [ebp-0ACh]  +
call ds:SetDlgItemTextW  +
push ebx  +
push dword_10060E8  +
push 170h  +
push 6Ah  +
push dword ptr [ebp-0ACh]  +
call ds:SendDlgItemMessageW  +
jmp loc_100252D  +
xor edi edi +
inc edi  +
cmp [ebp+10h] di +
jz loc_10022CB  +
cmp word ptr [ebp+10h] 2 +
jz loc_10022CB  +
cmp word ptr [ebp+10h] 67h +
jnz loc_1002539  +
push 67h  +
push esi  +
call ds:IsDlgButtonChecked  +
push hObject  +
mov dword_10060F0 eax +
call ds:SetEvent  +
jmp loc_1002539  +
mov ecx dword_1006154 +
mov edx Data +
xor ebx ebx +
mov dword_1006148 ebx +
cmp ecx ebx +
ja loc_100230D  +
mov eax dword_1006150 +
jb loc_10022EE  +
cmp eax edx +
jnb loc_100230D  +
cmp dword_1006140 ebx +
jz loc_100230D  +
or eax ecx +
jz loc_100230D  +
push ebx  +
push ebx  +
push 466h  +
push dword_10060D8  +
call ds:PostMessageW  +
push edi  +
push esi  +
call ds:EndDialog  +
mov eax edi +
jmp loc_100253B  +
push 66h  +
push esi  +
call ds:GetDlgItem  +
lea ecx [ebp-0F8h] +
push ecx  +
push eax  +
mov [ebp-0A8h] eax +
call ds:GetClientRect  +
mov eax [ebp-0F0h] +
imul eax eax +
push 28h  +
pop ecx  +
cdq   +
idiv  ecx +
mov esi ds:LoadStringW +
push ecx  +
mov edi eax +
lea eax [ebp-0A4h] +
push eax  +
push 4  +
push hInstance  +
call esi  +
lea eax [ebp-0A4h] +
mov [ebp-0DCh] eax +
lea eax [ebp-0E8h] +
push eax  +
xor ebx ebx +
push ebx  +
push 1061h  +
push dword ptr [ebp-0A8h]  +
mov dword ptr [ebp-0E8h] 0Fh +
mov [ebp-0E4h] ebx +
mov [ebp-0E0h] edi +
mov [ebp-0D4h] ebx +
call ds:SendMessageW  +
push 28h  +
lea eax [ebp-0A4h] +
push eax  +
push 5  +
push hInstance  +
call esi  +
push 3  +
call ds:GetSystemMetrics  +
mov ecx [ebp-0F0h] +
sub ecx edi +
sub ecx eax +
lea eax [ebp-0E8h] +
push eax  +
xor edi edi +
inc edi  +
push edi  +
push 1061h  +
push dword ptr [ebp-0A8h]  +
mov [ebp-0E0h] ecx +
mov [ebp-0E4h] edi +
mov [ebp-0D4h] edi +
call ds:SendMessageW  +
push edi  +
mov dword_10060F0 edi +
mov edi [ebp-0ACh] +
push 67h  +
push edi  +
call ds:CheckDlgButton  +
push edi  +
call sub_1001C0E  +
push edi  +
call ds:SetForegroundWindow  +
push 3E8h  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp-0A8h] eax +
cmp eax ebx +
jz loc_1002539  +
push 1F4h  +
push eax  +
push 0Ch  +
push hInstance  +
call esi  +
push dword ptr [ebp-0A8h]  +
push 65h  +
push edi  +
call ds:SetDlgItemTextW  +
mov edx dword_1006154 +
mov eax Data +
mov esi dword_1006150 +
xor ecx ecx +
cmp edx ecx +
jb loc_100247E  +
ja loc_1002472  +
cmp esi eax +
jbe loc_100247E  +
push ebx  +
push dword_10060DC  +
jmp loc_100250C  +
sub eax esi +
sbb ecx edx +
mov [ebp-0BCh] eax +
mov eax ecx +
mov [ebp-0B0h] eax +
mov ecx 7FFFFFFFh +
and eax ecx +
mov [ebp-0B8h] eax +
fild  qword ptr [ebp-0BCh] +
mov eax 80000000h +
and [ebp-0B0h] eax +
mov [ebp-0B4h] ebx +
fild  qword ptr [ebp-0B4h] +
mov [ebp-0B0h] edx +
and [ebp-0B0h] eax +
and edx ecx +
fchs   +
mov [ebp-0BCh] esi +
faddp st(1) st +
mov [ebp-0B8h] edx +
fild  qword ptr [ebp-0BCh] +
mov [ebp-0B4h] ebx +
fild  qword ptr [ebp-0B4h] +
push ebx  +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001298 +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_1002506  +
push dword_10060E4  +
jmp loc_100250C  +
push dword_10060E8  +
push 170h  +
push 6Ah  +
push edi  +
call ds:SendDlgItemMessageW  +
push hObject  +
mov eax edi +
mov dword_1006148 eax +
call ds:SetEvent  +
push dword ptr [ebp-0A8h]  +
call ds:LocalFree  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004874  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 21Ch +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+hMem] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
push eax  +
mov esi 104h +
push esi  +
lea eax [ebp+String] +
push eax  +
mov [ebp+var_214] 2 +
call sub_1001CE3  +
test eax eax +
jge loc_100259D  +
xor eax eax +
jmp loc_10027F4  +
lea eax [ebp+var_21C] +
push eax  +
push esi  +
lea eax [ebp+String] +
push eax  +
call sub_1001BBC  +
mov [ebp+var_218] eax +
test eax eax +
jz loc_1002596  +
xor esi esi +
push ebx  +
mov eax edi +
mov ebx edi +
cmp [edi] si +
jz loc_10027ED  +
jmp loc_10025D5  +
cmp cx 3Bh +
jz loc_10025E7  +
inc ebx  +
inc ebx  +
movzx ecx word ptr [ebx] +
cmp cx si +
jnz loc_10025CD  +
jmp loc_10025E7  +
cmp cx 20h +
jnz loc_10025EF  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
cmp cx si +
jnz loc_10025DF  +
cmp eax ebx +
jz loc_10026CB  +
mov ecx [ebp+var_218] +
xor edx edx +
mov [ecx] dx +
mov edx ebx +
sub edx eax +
sar edx 1 +
push edx  +
push eax  +
push [ebp+var_21C]  +
push ecx  +
call sub_1001D5E  +
cmp eax esi +
jl loc_10026E6  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
cmp [ebp+hMem] esi +
jz loc_1002689  +
mov esi eax +
inc esi  +
add [ebp+var_214] esi +
mov eax [ebp+var_214] +
push 42h  +
add eax eax +
push eax  +
push [ebp+hMem]  +
call ds:LocalReAlloc  +
mov edi eax +
test edi edi +
jz loc_1002718  +
lea eax [ebp+String] +
push eax  +
mov eax [ebp+var_214] +
sub eax esi +
push esi  +
lea eax [edi+eax*2-2] +
push eax  +
mov [ebp+hMem] edi +
call sub_1001CE3  +
test eax eax +
jl loc_1002750  +
xor esi esi +
jmp loc_10026CB  +
add [ebp+var_214] eax +
mov eax [ebp+var_214] +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
mov [ebp+hMem] edi +
cmp edi esi +
jz loc_1002787  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_214]  +
push edi  +
call sub_1001CE3  +
cmp eax esi +
jl loc_10027B9  +
cmp [ebx] si +
jz loc_10027ED  +
inc ebx  +
inc ebx  +
mov eax ebx +
cmp [ebx] si +
jnz loc_10025D5  +
jmp loc_10027ED  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_100270D  +
test byte ptr [ecx+1Ch] 4 +
jz loc_100270D  +
push eax  +
push offset dword_1001240  +
push 3Ch  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
push [ebp+hMem]  +
jmp loc_10027E1  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002748  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002748  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
push [ebp+hMem]  +
jmp loc_1002778  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_1002777  +
test byte ptr [ecx+1Ch] 4 +
jz loc_1002777  +
push eax  +
push offset dword_1001240  +
push 3Eh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
push edi  +
call ds:LocalFree  +
and [ebp+hMem] 0 +
jmp loc_10027ED  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10027ED  +
test byte ptr [eax+1Ch] 4 +
jz loc_10027ED  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
jmp loc_10027ED  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_10027E0  +
test byte ptr [ecx+1Ch] 4 +
jz loc_10027E0  +
push eax  +
push offset dword_1001240  +
push 40h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
push edi  +
call ds:LocalFree  +
mov [ebp+hMem] esi +
mov eax [ebp+hMem] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1004874  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2C4h +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push offset dword_10012A0  +
push [ebp+arg_C]  +
mov [ebp+pszPath] eax +
mov eax [ebp+arg_8] +
push eax  +
mov [ebp+var_2BC] eax +
mov [ebp+var_2C0] 1 +
call sub_1001CE3  +
mov edi eax +
test edi edi +
jl loc_10029F0  +
mov ebx ds:SHGetFileInfoW +
jmp loc_10028E7  +
cmp word ptr [esi] 5Ch +
jnz loc_10028E5  +
push 200h  +
xor eax eax +
push 2B4h  +
mov [esi] ax +
lea eax [ebp+psfi] +
push eax  +
push 0  +
push [ebp+pszPath]  +
call ebx  +
test eax eax +
jz loc_1002965  +
cmp [ebp+var_2C0] 0 +
push 5Ch  +
pop eax  +
mov [esi] ax +
jz loc_10028A9  +
and [ebp+var_2C0] 0 +
jmp loc_10028C6  +
push offset dword_100121C  +
push [ebp+arg_C]  +
push [ebp+var_2BC]  +
call sub_1001D1D  +
mov edi eax +
test edi edi +
jl loc_10029F0  +
lea eax [ebp+psfi.szDisplayName] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_2BC]  +
call sub_1001D1D  +
mov edi eax +
test edi edi +
jl loc_10029F0  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1002863  +
push 200h  +
push 2B4h  +
lea eax [ebp+psfi] +
push eax  +
push 0  +
push [ebp+pszPath]  +
call ebx  +
test eax eax +
jnz loc_10029B1  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jle loc_100292A  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10029E7  +
test byte ptr [eax+1Ch] 4 +
jz loc_10029E7  +
call esi  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 42h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
jmp loc_10029E7  +
mov ebx ds:GetLastError +
call ebx  +
test eax eax +
jle loc_100297B  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10029A9  +
test byte ptr [eax+1Ch] 4 +
jz loc_10029A9  +
call ebx  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
push 5Ch  +
pop eax  +
mov [esi] ax +
jmp loc_10029E7  +
push offset dword_100121C  +
push [ebp+arg_C]  +
push [ebp+var_2BC]  +
call sub_1001D1D  +
mov edi eax +
test edi edi +
jl loc_10029F0  +
lea eax [ebp+psfi.szDisplayName] +
push eax  +
push [ebp+arg_C]  +
push [ebp+var_2BC]  +
call sub_1001D1D  +
mov edi eax +
test edi edi +
jl loc_10029F0  +
xor edi edi +
test edi edi +
jl loc_10029F0  +
xor eax eax +
inc eax  +
jmp loc_10029FC  +
movzx eax di +
push eax  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004874  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ds:RegOpenKeyExW +
push edi  +
xor eax eax +
lea ecx [ebp+phkResult] +
push ecx  +
mov edi 20019h +
push edi  +
push eax  +
push offset SubKey  +
push [ebp+hKey]  +
mov [ebp+var_C] eax +
mov [ebp+hMem] eax +
mov [ebp+var_14] eax +
mov [ebp+phkResult] eax +
call esi  +
mov ebx ds:RegQueryValueExW +
test eax eax +
jnz loc_1002AEB  +
xor eax eax +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea ecx [ebp+Type] +
push ecx  +
push eax  +
push offset aExcludeprofile  +
push [ebp+phkResult]  +
mov [ebp+cbData] eax +
call ebx  +
test eax eax +
jnz loc_1002ADE  +
cmp [ebp+cbData] 2 +
jbe loc_1002ADE  +
push [ebp+cbData]  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_1002ADE  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aExcludeprofile  +
push [ebp+phkResult]  +
call ebx  +
test eax eax +
jnz loc_1002AAA  +
mov ecx [ebp+hMem] +
cmp [ecx] ax +
jnz loc_1002ADE  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_1002AD1  +
test byte ptr [ecx+1Ch] 4 +
jz loc_1002AD1  +
push eax  +
push offset dword_1001240  +
push 43h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
push [ebp+hMem]  +
call ds:LocalFree  +
and [ebp+hMem] 0 +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
and [ebp+phkResult] 0 +
lea eax [ebp+phkResult] +
push eax  +
push edi  +
push 0  +
push offset aSoftwareMicr_0  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jnz loc_1002BAE  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea ecx [ebp+Type] +
push ecx  +
push eax  +
mov esi offset aExcludeprofile +
push esi  +
push [ebp+phkResult]  +
mov [ebp+cbData] eax +
call ebx  +
test eax eax +
jnz loc_1002B97  +
cmp [ebp+cbData] 2 +
jbe loc_1002B97  +
push [ebp+cbData]  +
push 40h  +
call ds:LocalAlloc  +
mov edi eax +
mov [ebp+var_14] edi +
test edi edi +
jz loc_1002B90  +
lea eax [ebp+cbData] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push esi  +
push [ebp+phkResult]  +
call ebx  +
test eax eax +
jnz loc_1002B54  +
cmp [edi] ax +
jnz loc_1002B90  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_1002B7E  +
test byte ptr [ecx+1Ch] 4 +
jz loc_1002B7E  +
push eax  +
mov ebx offset dword_1001240 +
push ebx  +
push 44h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
jmp loc_1002B83  +
mov ebx offset dword_1001240 +
push edi  +
call ds:LocalFree  +
and [ebp+var_14] 0 +
jmp loc_1002B9C  +
mov ebx offset dword_1001240 +
jmp loc_1002B9F  +
mov ebx offset dword_1001240 +
mov edi [ebp+var_14] +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
and [ebp+phkResult] 0 +
jmp loc_1002BB6  +
mov edi [ebp+var_14] +
mov ebx offset dword_1001240 +
mov esi [ebp+hMem] +
test esi esi +
jnz loc_1002C17  +
test edi edi +
jnz loc_1002BEE  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002D78  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002D78  +
push ebx  +
push 45h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
jmp loc_1002D78  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002C0F  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002C0F  +
push edi  +
push ebx  +
push 46h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
mov [ebp+var_C] edi +
jmp loc_1002D78  +
test edi edi +
jnz loc_1002C44  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002C3C  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002C3C  +
push esi  +
push ebx  +
push 47h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
mov [ebp+var_C] esi +
jmp loc_1002D78  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002C66  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002C66  +
push esi  +
push edi  +
push ebx  +
push 48h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10017CB  +
mov esi ds:lstrlenW +
push edi  +
call esi  +
push [ebp+hMem]  +
mov edi eax +
call esi  +
lea edi [edi+eax+2] +
lea eax [edi+edi] +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_1002CBA  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002D68  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002D68  +
push ebx  +
push 49h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
jmp loc_1002D68  +
push [ebp+var_14]  +
push edi  +
push eax  +
call sub_1001CE3  +
test eax eax +
jge loc_1002CED  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002CE8  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002CE8  +
push ebx  +
push 4Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
push [ebp+var_C]  +
jmp loc_1002D3B  +
push [ebp+var_C]  +
call esi  +
mov esi [ebp+var_C] +
lea eax [esi+eax*2-2] +
cmp word ptr [eax] 3Bh +
jz loc_1002D0C  +
push 3Bh  +
pop ecx  +
mov [eax+2] cx +
xor ecx ecx +
mov [eax+4] cx +
push [ebp+hMem]  +
push edi  +
push esi  +
call sub_1001D1D  +
test eax eax +
jge loc_1002D47  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002D3A  +
test byte ptr [eax+1Ch] 4 +
jz loc_1002D3A  +
push ebx  +
push 4Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
push esi  +
call ds:LocalFree  +
and [ebp+var_C] 0 +
jmp loc_1002D68  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1002D68  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002D68  +
push esi  +
push ebx  +
push 4Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
push [ebp+hMem]  +
mov esi ds:LocalFree +
call esi  +
push [ebp+var_14]  +
call esi  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax hMem +
test eax eax +
jz loc_1002D9E  +
push eax  +
call ds:LocalFree  +
and hMem 0 +
push 80000001h  +
call sub_1002A12  +
mov hMem eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor edi edi +
push edi  +
push offset aSoftwareMicros  +
push 80000001h  +
mov [ebp+var_10] edi +
call ds:RegOpenKeyExW  +
cmp eax edi +
jnz loc_100300E  +
push ebx  +
push esi  +
mov esi ds:RegQueryValueExW +
push 4  +
pop ebx  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push offset aEnableprofileq  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
cmp eax edi +
jnz loc_1002FDA  +
cmp dword ptr [ebp+Data] edi +
jz loc_1002FBF  +
mov eax off_1006000 +
mov edi offset off_1006000 +
cmp eax edi +
jz loc_1002E3F  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002E3F  +
push offset dword_1001240  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
lea eax [ebp+cbData] +
push eax  +
push offset Data  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aMaxprofilesize  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
mov eax off_1006000 +
cmp eax edi +
jz loc_1002E82  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002E82  +
push Data  +
push offset dword_1001240  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
lea eax [ebp+cbData] +
push eax  +
push offset dword_100614C  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aIncludereginpr  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
mov eax off_1006000 +
cmp eax edi +
jz loc_1002ED3  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002ED3  +
cmp dword_100614C 0 +
mov ecx offset aTrue +
jnz loc_1002EC0  +
mov ecx offset aFalse +
push ecx  +
push offset dword_1001240  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
lea eax [ebp+cbData] +
push eax  +
push offset dword_100616C  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aWarnuser  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
mov eax off_1006000 +
cmp eax edi +
jz loc_1002F24  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002F24  +
cmp dword_100616C 0 +
mov ecx offset aTrue +
jnz loc_1002F11  +
mov ecx offset aFalse +
push ecx  +
push offset dword_1001240  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
cmp dword_100616C 0 +
jz loc_1002F86  +
lea eax [ebp+cbData] +
push eax  +
push offset dword_100604C  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aWarnusertimeou  +
push [ebp+hKey]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_1002F86  +
mov eax 5A0h +
cmp dword_100604C eax +
jbe loc_1002F5F  +
mov dword_100604C eax +
mov eax off_1006000 +
cmp eax edi +
jz loc_1002F86  +
test byte ptr [eax+1Ch] 8 +
jz loc_1002F86  +
push dword_100604C  +
push offset dword_1001240  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
push [ebp+hKey]  +
call sub_1001E0D  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_1002F9C  +
call sub_1002D87  +
jmp loc_1003001  +
mov eax off_1006000 +
cmp eax edi +
jz loc_1003001  +
test byte ptr [eax+1Ch] 2 +
jz loc_1003001  +
push offset dword_1001240  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
jmp loc_1003001  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003001  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003001  +
push offset dword_1001240  +
push 34h  +
jmp loc_1002FB2  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_1003001  +
test byte ptr [ecx+1Ch] 2 +
jz loc_1003001  +
push eax  +
push offset dword_1001240  +
push 35h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop esi  +
pop ebx  +
jmp loc_1003035  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_1003035  +
test byte ptr [ecx+1Ch] 2 +
jz loc_1003035  +
push eax  +
push offset dword_1001240  +
push 36h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
mov eax [ebp+var_10] +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 920h +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
or [ebp+hFindFile] 0FFFFFFFFh +
mov [ebp+var_8D0] eax +
mov eax [ebp+arg_C] +
mov [ebp+hWnd] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+lpString] +
mov [ebp+var_8D4] eax +
lea eax [ebp+var_8DC] +
push eax  +
push [ebp+arg_4]  +
mov [ebp+var_8CC] ebx +
push ebx  +
mov [ebp+var_8C0] 1 +
call sub_1001BBC  +
mov [ebp+var_8D8] eax +
test eax eax +
jz loc_10034DB  +
push offset a_  +
push [ebp+var_8DC]  +
push eax  +
call sub_1001CE3  +
test eax eax +
jge loc_10030CA  +
and [ebp+var_8C0] 0 +
jmp loc_10034B5  +
push esi  +
lea eax [ebp+FindFileData] +
push eax  +
push ebx  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_1003139  +
mov esi ds:GetLastError +
call esi  +
cmp eax 2 +
jz loc_10034B4  +
call esi  +
cmp eax 3 +
jz loc_10034B4  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_100312D  +
test byte ptr [eax+1Ch] 4 +
jz loc_100312D  +
call esi  +
push eax  +
mov eax off_1006000 +
push ebx  +
push offset dword_1001240  +
push 37h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001892  +
and [ebp+var_8C0] 0 +
jmp loc_10034B4  +
push edi  +
mov edi ds:lstrlenW +
push ebx  +
call edi  +
push offset String  +
mov esi eax +
call edi  +
add esi eax +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call edi  +
lea eax [eax+esi+1] +
cmp eax [ebp+arg_4] +
jnb loc_1003487  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push [ebp+var_8DC]  +
push [ebp+var_8D8]  +
call sub_1001CE3  +
test eax eax +
jl loc_10034A4  +
test byte ptr [ebp+FindFileData.dwFileAttributes] 10h +
jz loc_1003293  +
push offset a__1  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call sub_100169E  +
test eax eax +
jnz loc_1003487  +
push offset a__  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
call sub_100169E  +
test eax eax +
jnz loc_1003487  +
test [ebp+FindFileData.dwFileAttributes] 400h +
jz loc_1003201  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003487  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003487  +
push ebx  +
push offset dword_1001240  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
jmp loc_1003487  +
mov esi [ebp+var_8D4] +
test esi esi +
jnz loc_1003264  +
push [ebp+var_8D4]  +
push [ebp+hWnd]  +
push [ebp+var_8D0]  +
push [ebp+arg_4]  +
push ebx  +
call sub_1003040  +
test eax eax +
jnz loc_1003487  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003487  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003487  +
push ebx  +
push offset dword_1001240  +
push 3Ah  +
jmp loc_10031F1  +
push ebx  +
push esi  +
call sub_100169E  +
test eax eax +
jnz loc_100326C  +
push esi  +
call edi  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_1003252  +
jmp loc_100320B  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003487  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003487  +
push ebx  +
push offset dword_1001240  +
push 39h  +
jmp loc_10031F1  +
and [ebp+var_8E4] 0 +
and [ebp+var_8E0] 0 +
mov edi [ebp+FindFileData.nFileSizeLow] +
add dword_1006158 edi +
mov esi [ebp+FindFileData.nFileSizeHigh] +
adc dword_100615C esi +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10032F0  +
test byte ptr [eax+1Ch] 8 +
jz loc_10032F0  +
lea ecx [ebp+FindFileData.cFileName] +
push ecx  +
push dword_100615C  +
push dword_1006158  +
push offset dword_1001240  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016EB  +
cmp [ebp+hWnd] 0 +
jz loc_1003487  +
lea eax [ebp+FindFileData.cFileName] +
xor ebx ebx +
push eax  +
inc ebx  +
call ds:lstrlenW  +
cmp eax 6 +
jl loc_1003343  +
push 6  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
push 6  +
push offset String1  +
push ebx  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jnz loc_1003343  +
xor ebx ebx +
cmp dword_100614C ebx +
setnz bl  +
test ebx ebx +
jz loc_1003481  +
cmp dword_10060F0 0 +
jz loc_1003363  +
cmp [ebp+FindFileData.nFileSizeHigh] 0 +
jnz loc_1003363  +
cmp [ebp+FindFileData.nFileSizeLow] 800h +
ja loc_1003363  +
xor ebx ebx +
test ebx ebx +
jz loc_1003481  +
xor ebx ebx +
cmp esi ebx +
ja loc_1003386  +
jb loc_100337B  +
cmp edi 400h +
ja loc_1003386  +
xor edi edi +
inc edi  +
mov [ebp+var_8E0] ebx +
jmp loc_1003393  +
shrd edi esi +
shr esi 0Ah +
mov [ebp+var_8E0] esi +
push edi  +
push offset Buffer  +
lea eax [ebp+var_54] +
push 28h  +
push eax  +
call sub_1001DAE  +
add esp 10h +
test eax eax +
jl loc_10034AD  +
mov esi [ebp+var_8D0] +
push 3  +
pop edi  +
push 30Ch  +
lea eax [ebp+var_66C] +
push eax  +
push esi  +
push [ebp+var_8CC]  +
mov [ebp+lParam] 0Dh +
mov [ebp+var_91C] ebx +
mov [ebp+var_918] ebx +
mov [ebp+var_914] ebx +
mov [ebp+var_910] edi +
call sub_1002809  +
test eax eax +
jz loc_1003404  +
lea eax [ebp+var_66C] +
mov [ebp+var_90C] eax +
jmp loc_100340A  +
mov [ebp+var_90C] esi +
mov eax [ebp+FindFileData.nFileSizeLow] +
mov esi ds:SendMessageW +
mov [ebp+var_900] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 104Dh  +
push [ebp+hWnd]  +
call esi  +
mov [ebp+var_91C] eax +
lea eax [ebp+var_54] +
mov [ebp+var_90C] eax +
mov eax [ebp+FindFileData.nFileSizeLow] +
mov [ebp+var_900] eax +
lea eax [ebp+lParam] +
push eax  +
push ebx  +
push 104Ch  +
push [ebp+hWnd]  +
mov [ebp+lParam] 9 +
mov [ebp+var_918] 1 +
mov [ebp+var_914] ebx +
mov [ebp+var_910] edi +
call esi  +
mov ebx [ebp+var_8CC] +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_100313A  +
jmp loc_10034B3  +
and [ebp+var_8C0] 0 +
jmp loc_10034B3  +
mov [ebp+var_8C0] ebx +
pop edi  +
pop esi  +
mov ecx [ebp+var_8D8] +
xor eax eax +
cmp [ebp+hFindFile] 0FFFFFFFFh +
mov [ecx] ax +
jz loc_10034D5  +
push [ebp+hFindFile]  +
call ds:FindClose  +
mov eax [ebp+var_8C0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1004874  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 45Ch +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor eax eax +
mov [ebp+String] ax +
push 104h  +
lea eax [ebp+String] +
push eax  +
xor edi edi +
push offset Name  +
mov [ebp+var_41C] edi +
call ds:GetEnvironmentVariableW  +
push edi  +
cmp [ebp+String] di +
jnz loc_1003542  +
call ds:ExitThread  +
push 208h  +
lea eax [ebp+String] +
push eax  +
call sub_1001BBC  +
mov [ebp+var_420] eax +
cmp eax edi +
jnz loc_1003560  +
push edi  +
jmp loc_100353C  +
push offset CriticalSection  +
call ds:EnterCriticalSection  +
mov esi ds:SendMessageW +
cmp ebx edi +
jz loc_100357F  +
push edi  +
push edi  +
push 1009h  +
push ebx  +
call esi  +
mov eax hMem +
mov dword_1006158 edi +
mov dword_100615C edi +
cmp eax edi +
jz loc_10035A9  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1002551  +
mov [ebp+var_418] eax +
jmp loc_10035AF  +
mov [ebp+var_418] edi +
push [ebp+var_418]  +
lea eax [ebp+String] +
push ebx  +
push [ebp+var_420]  +
push 208h  +
push eax  +
call sub_1003040  +
test eax eax +
jnz loc_10035DE  +
push edi  +
push 1  +
push 0Bh  +
push ebx  +
call esi  +
jmp loc_100367D  +
mov eax dword_1006158 +
push offset loc_1001CBD  +
push 1  +
mov dword_1006150 eax +
mov eax dword_100615C +
push 1030h  +
push ebx  +
mov dword_1006154 eax +
call esi  +
push 3  +
pop eax  +
mov [ebp+var_450] eax +
mov [ebp+var_44C] eax +
lea eax [ebp+lParam] +
push eax  +
push edi  +
push 102Bh  +
push ebx  +
mov [ebp+lParam] 8 +
mov [ebp+var_458] edi +
mov [ebp+var_454] edi +
call esi  +
mov eax dword_1006154 +
mov ecx dword_1006150 +
cmp eax edi +
ja loc_1003661  +
jb loc_100364F  +
cmp ecx 400h +
jnb loc_1003661  +
mov dword_1006150 1 +
mov dword_1006154 edi +
jmp loc_1003673  +
shrd ecx eax +
shr eax 0Ah +
mov dword_1006150 ecx +
mov dword_1006154 eax +
mov [ebp+var_41C] 1 +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
cmp [ebp+var_418] edi +
jnz loc_1003697  +
push edi  +
call ds:LocalFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_41C] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004874  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 820h +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp-4] eax +
or dword ptr [ebp-7CCh] 0FFFFFFFFh +
mov eax [ebp+8] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp-7F8h] eax +
mov [ebp-7D4h] ebx +
mov dword ptr [ebp-7E4h] 1 +
mov [ebp-7D8h] ebx +
mov [ebp-7D0h] ebx +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_100371D  +
test byte ptr [eax+1Ch] 8 +
jz loc_100371D  +
push offset dword_1001240  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov esi ds:LoadImageW +
push ebx  +
push 10h  +
pop edi  +
push edi  +
push edi  +
push 1  +
push 1  +
push hInstance  +
call esi  +
mov [ebp-7E0h] eax +
cmp eax ebx +
jnz loc_100377C  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003E2B  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003E2B  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
jmp loc_1003E2B  +
push ebx  +
push edi  +
push edi  +
push 1  +
push 2  +
push hInstance  +
call esi  +
mov [ebp-7DCh] eax +
cmp eax ebx +
jnz loc_10037C2  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003DFD  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 19h  +
jmp loc_1003926  +
push ebx  +
push edi  +
push edi  +
push 1  +
push 3  +
push hInstance  +
call esi  +
mov [ebp-7D8h] eax +
cmp eax ebx +
jnz loc_1003808  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003DFD  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 1Ah  +
jmp loc_1003926  +
xor eax eax +
mov [ebp-20Ch] ax +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push offset Name  +
call ds:GetEnvironmentVariableW  +
cmp [ebp-20Ch] bx +
jnz loc_1003838  +
push ebx  +
call ds:ExitThread  +
mov eax off_1006000 +
mov esi offset off_1006000 +
cmp eax esi +
jz loc_1003865  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003865  +
lea ecx [ebp-20Ch] +
push ecx  +
push offset dword_1001240  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
push 0Bh  +
push 1  +
lea eax [ebp-20Ch] +
push eax  +
call ds:FindFirstChangeNotificationW  +
mov [ebp-7CCh] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10038A8  +
mov eax off_1006000 +
cmp eax esi +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003DFD  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 1Ch  +
jmp loc_1003926  +
lea eax [ebp-7D0h] +
push eax  +
push 20019h  +
push ebx  +
push offset aSoftwareMicros  +
push 80000001h  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jz loc_10038EB  +
mov ecx off_1006000 +
cmp ecx esi +
jz loc_1003DFD  +
test byte ptr [ecx+1Ch] 4 +
jz loc_1003DFD  +
push eax  +
push offset dword_1001240  +
push 1Dh  +
jmp loc_1003969  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call ds:CreateEventW  +
mov edi eax +
mov [ebp-7D4h] edi +
cmp edi ebx +
jnz loc_1003933  +
mov eax off_1006000 +
cmp eax esi +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 4 +
jz loc_1003DFD  +
call ds:GetLastError  +
push eax  +
push offset dword_1001240  +
push 1Eh  +
mov eax off_1006000 +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
jmp loc_100396F  +
push 1  +
push edi  +
push 4  +
push ebx  +
push dword ptr [ebp-7D0h]  +
call ds:RegNotifyChangeKeyValue  +
cmp eax ebx +
jz loc_1003979  +
mov ecx off_1006000 +
cmp ecx esi +
jz loc_1003DFD  +
test byte ptr [ecx+1Ch] 4 +
jz loc_1003DFD  +
push eax  +
push offset dword_1001240  +
push 1Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
jmp loc_1003DFD  +
mov eax dword_1006144 +
mov [ebp-820h] eax +
mov eax [ebp-7CCh] +
mov [ebp-81Ch] eax +
mov eax hObject +
mov [ebp-818h] edi +
mov [ebp-814h] eax +
mov edi 80000000h +
mov ecx off_1006000 +
cmp dword_1006148 ebx +
jz loc_1003A10  +
mov esi offset off_1006000 +
cmp ecx esi +
jz loc_10039D5  +
test byte ptr [ecx+1Ch] 8 +
jz loc_10039D5  +
push offset dword_1001240  +
push 20h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10016C5  +
push 66h  +
push dword_1006148  +
call ds:GetDlgItem  +
push eax  +
call sub_10034EF  +
test eax eax +
jnz loc_1003A1E  +
mov eax off_1006000 +
cmp eax esi +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003DFD  +
push offset dword_1001240  +
push 21h  +
jmp loc_1003DE0  +
push ebx  +
call sub_10034EF  +
test eax eax +
jz loc_1003DC7  +
mov eax [ebp-7F8h] +
mov edx dword_1006154 +
mov ecx dword_1006150 +
mov [ebp-7C4h] eax +
xor eax eax +
xor esi esi +
mov [ebp-40Ch] ax +
mov eax Data +
mov dword ptr [ebp-7C8h] 3BCh +
mov dword ptr [ebp-7C0h] 1 +
mov dword ptr [ebp-7BCh] 7 +
mov dword ptr [ebp-7B8h] 400h +
cmp edx esi +
jb loc_1003B39  +
ja loc_1003A80  +
cmp ecx eax +
jbe loc_1003B39  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003AA4  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003AA4  +
push offset dword_1001240  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax [ebp-7D8h] +
push 100h  +
mov [ebp-7B4h] eax +
lea eax [ebp-40Ch] +
push eax  +
push 3  +
push hInstance  +
call ds:LoadStringW  +
mov eax Data +
mov esi dword_1006150 +
xor ecx ecx +
sub esi eax +
mov eax dword_1006154 +
sbb eax ecx +
mov [ebp-804h] eax +
cmp dword_100616C ebx +
jz loc_1003C79  +
cmp dword_1006170 ebx +
jnz loc_1003C79  +
mov ecx dword_100604C +
imul ecx ecx +
push ebx  +
xor eax eax +
inc eax  +
push ecx  +
push eax  +
push dword_10060D8  +
mov dword_1006170 eax +
call ds:SetTimer  +
push ebx  +
push ebx  +
push 467h  +
push dword_10060D8  +
call ds:PostMessageW  +
jmp loc_1003C79  +
sub eax ecx +
sbb esi edx +
mov [ebp-810h] eax +
mov eax 7FFFFFFFh +
mov [ebp-7E8h] esi +
and [ebp-7E8h] edi +
and esi eax +
mov [ebp-80Ch] esi +
fild  qword ptr [ebp-810h] +
mov [ebp-7ECh] ebx +
fild  qword ptr [ebp-7ECh] +
mov [ebp-7F0h] edx +
and [ebp-7F0h] edi +
and edx eax +
fchs   +
mov [ebp-800h] ecx +
faddp st(1) st +
mov [ebp-7FCh] edx +
fild  qword ptr [ebp-800h] +
mov [ebp-7F4h] ebx +
fild  qword ptr [ebp-7F4h] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001298 +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_1003BF1  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003BD5  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003BD5  +
push offset dword_1001240  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax [ebp-7DCh] +
mov [ebp-7B4h] eax +
push 100h  +
lea eax [ebp-40Ch] +
push eax  +
push 2  +
jmp loc_1003C2F  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003C15  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003C15  +
push offset dword_1001240  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax [ebp-7E0h] +
mov [ebp-7B4h] eax +
push 100h  +
lea eax [ebp-40Ch] +
push eax  +
push 1  +
push hInstance  +
call ds:LoadStringW  +
mov esi Data +
xor eax eax +
sub esi dword_1006150 +
sbb eax dword_1006154 +
mov [ebp-804h] eax +
cmp dword_100616C ebx +
jz loc_1003C79  +
cmp dword_1006170 ebx +
jz loc_1003C79  +
push 1  +
push dword_10060D8  +
call ds:KillTimer  +
mov dword_1006170 ebx +
push esi  +
lea eax [ebp-40Ch] +
push eax  +
lea eax [ebp-7B0h] +
push 80h  +
push eax  +
call sub_1001DAE  +
add esp 10h +
cmp eax ebx +
jge loc_1003CCD  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_10039AC  +
test byte ptr [ecx+1Ch] 4 +
jz loc_10039AC  +
push eax  +
push offset dword_1001240  +
push 26h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1001905  +
jmp loc_10039A6  +
***
lea eax [ebp-7C8h] +
push eax  +
cmp [ebp-7E4h] ebx +
jz loc_1003CEF  +
push ebx  +
call ds:Shell_NotifyIconW  +
test eax eax +
jz loc_1003CF7  +
mov [ebp-7E4h] ebx +
jmp loc_1003CF7  +
push 1  +
call ds:Shell_NotifyIconW  +
mov eax dword_1006148 +
cmp eax ebx +
jz loc_1003D0E  +
push ebx  +
push ebx  +
push 465h  +
push eax  +
call ds:PostMessageW  +
push dword ptr [ebp-7CCh]  +
call ds:FindNextChangeNotification  +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp-820h] +
push eax  +
push 4  +
call ds:WaitForMultipleObjects  +
cmp eax 0FFFFFFFFh +
jz loc_1003DFD  +
sub eax ebx +
jz loc_1003DFD  +
dec eax  +
jz loc_1003D89  +
dec eax  +
jnz loc_10039A6  +
push 7D0h  +
call ds:Sleep  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
call sub_1002DB3  +
test eax eax +
jz loc_1003DED  +
push esi  +
call ds:LeaveCriticalSection  +
push 1  +
push dword ptr [ebp-7D4h]  +
push 4  +
push ebx  +
push dword ptr [ebp-7D0h]  +
call ds:RegNotifyChangeKeyValue  +
push 7D0h  +
call ds:Sleep  +
mov ecx off_1006000 +
cmp ecx offset off_1006000 +
jz loc_10039AC  +
test byte ptr [ecx+1Ch] 8 +
jz loc_10039AC  +
push offset dword_1001240  +
push 27h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_10016C5  +
jmp loc_10039A6  +
***
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003DFD  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003DFD  +
push offset dword_1001240  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
jmp loc_1003DFD  +
push ebx  +
push ebx  +
push 2  +
push dword_10060D8  +
call ds:PostMessageW  +
push dword ptr [ebp-7E0h]  +
mov esi ds:DestroyIcon +
call esi  +
cmp [ebp-7DCh] ebx +
jz loc_1003E1B  +
push dword ptr [ebp-7DCh]  +
call esi  +
cmp [ebp-7D8h] ebx +
jz loc_1003E2B  +
push dword ptr [ebp-7D8h]  +
call esi  +
cmp [ebp-7D0h] ebx +
jz loc_1003E3F  +
push dword ptr [ebp-7D0h]  +
call ds:RegCloseKey  +
cmp [ebp-7D4h] ebx +
jz loc_1003E53  +
push dword ptr [ebp-7D4h]  +
call ds:CloseHandle  +
cmp dword ptr [ebp-7CCh] 0FFFFFFFFh +
jz loc_1003E68  +
push dword ptr [ebp-7CCh]  +
call ds:FindCloseChangeNotification  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1003831  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003831  +
push offset dword_1001240  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
jmp loc_1003831  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3CCh +
mov eax dword_1006050 +
xor eax ebp +
mov [ebp-4] eax +
mov ecx [ebp+0Ch] +
push ebx  +
mov ebx [ebp+8] +
mov eax 113h +
push esi  +
push edi  +
mov [ebp-3C4h] ebx +
cmp ecx eax +
ja loc_1004149  +
jz loc_100412F  +
mov eax ecx +
dec eax  +
jz loc_1004037  +
dec eax  +
jz loc_1003FD1  +
sub eax 0Eh +
jz loc_10041D3  +
dec eax  +
jnz loc_100415E  +
mov ecx dword_1006154 +
mov edx Data +
xor edi edi +
cmp ecx eax +
mov eax dword_1006150 +
ja loc_1003F1E  +
jb loc_1003F12  +
cmp eax edx +
ja loc_1003F1E  +
mov dword ptr [ebp-3C8h] 1 +
jmp loc_1003F24  +
mov [ebp-3C8h] edi +
or eax ecx +
mov esi offset off_1006000 +
mov ebx offset dword_1001240 +
jnz loc_1003F55  +
mov [ebp-3C8h] edi +
mov eax off_1006000 +
cmp eax esi +
jz loc_1003FA1  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003F5A  +
push ebx  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax off_1006000 +
cmp eax esi +
jz loc_1003F85  +
test byte ptr [eax+1Ch] 8 +
jz loc_1003F85  +
mov ecx offset aTrue +
cmp [ebp-3C8h] edi +
jnz loc_1003F76  +
mov ecx offset aFalse +
push ecx  +
push ebx  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100175E  +
cmp [ebp-3C8h] edi +
jz loc_1003FA1  +
push dword ptr [ebp-3C4h]  +
call ds:ShutdownBlockReasonDestroy  +
xor eax eax +
inc eax  +
jmp loc_10041D5  +
push lpText  +
push dword ptr [ebp-3C4h]  +
call ds:ShutdownBlockReasonCreate  +
push dword ptr [ebp-3C4h]  +
call sub_1001AAF  +
push edi  +
push 1  +
push 464h  +
push dword ptr [ebp-3C4h]  +
jmp loc_10041CD  +
lea eax [ebp-3C0h] +
push eax  +
push 2  +
mov dword ptr [ebp-3C0h] 3BCh +
mov [ebp-3BCh] ebx +
mov dword ptr [ebp-3B8h] 1 +
call ds:Shell_NotifyIconW  +
push dword_1006144  +
call ds:SetEvent  +
push 0FFFFFFFFh  +
push dword_10060F4  +
call ds:WaitForSingleObject  +
push dword_1006144  +
mov esi ds:CloseHandle +
call esi  +
push dword_10060F4  +
call esi  +
push 0  +
call ds:PostQuitMessage  +
jmp loc_10041D3  +
mov esi ds:LoadIconW +
push 1  +
push hInstance  +
call esi  +
push 2  +
push hInstance  +
mov dword_10060E8 eax +
call esi  +
push 3  +
push hInstance  +
mov dword_10060E4 eax +
call esi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push edi  +
mov dword_10060DC eax +
call ds:CreateEventW  +
mov dword_1006144 eax +
cmp eax edi +
jnz loc_10040B7  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10040AF  +
test byte ptr [eax+1Ch] 4 +
jz loc_10040AF  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
or eax 0FFFFFFFFh +
jmp loc_10041D5  +
lea eax [ebp-3CCh] +
push eax  +
push 4  +
push ebx  +
push offset loc_10036B3  +
push edi  +
push edi  +
call ds:CreateThread  +
mov dword_10060F4 eax +
cmp eax edi +
jnz loc_1004115  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1004107  +
test byte ptr [eax+1Ch] 4 +
jz loc_1004107  +
call ds:GetLastError  +
push eax  +
mov eax off_1006000 +
push offset dword_1001240  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
push dword_1006144  +
call ds:CloseHandle  +
jmp loc_10040AF  +
***
push 0FFFFFFF1h  +
push eax  +
call ds:SetThreadPriority  +
push dword_10060F4  +
call ds:ResumeThread  +
jmp loc_10041D3  +
xor edi edi +
cmp dword_100604C edi +
jbe loc_10041D3  +
push edi  +
push edi  +
push 467h  +
jmp loc_10041CC  +
mov eax ecx +
sub eax 400h +
jz loc_10041BA  +
sub eax 64h +
jz loc_1004181  +
dec eax  +
dec eax  +
jz loc_1004176  +
dec eax  +
jz loc_100416E  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ecx  +
push ebx  +
call ds:DefWindowProcW  +
jmp loc_10041D5  +
push ebx  +
call sub_1001AAF  +
jmp loc_10041D3  +
xor edi edi +
push edi  +
push edi  +
call SHELL32_60  +
jmp loc_10041D3  +
xor edi edi +
cmp dword_1006148 edi +
jnz loc_10041D3  +
xor eax eax +
cmp [ebp+10h] edi +
push edi  +
push offset loc_10020A1  +
push dword_10060D8  +
setnz al  +
push 64h  +
push hInstance  +
mov dword_1006140 eax +
call ds:DialogBoxParamW  +
mov dword_1006148 edi +
jmp loc_10041D3  +
cmp dword ptr [ebp+14h] 203h +
jnz loc_10041D3  +
xor edi edi +
push edi  +
push edi  +
push 464h  +
push ebx  +
call ds:PostMessageW  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1004874  +
leave   +
retn 10h  +
***
call __SEH_prolog4  +
xor esi esi +
mov [ebp+var_20] esi +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:HeapSetInformation  +
mov edi offset unk_10060F8 +
push edi  +
call sub_1001931  +
mov dword_1006138 offset dword_1001220 +
mov dword_100613C offset dword_1001230 +
mov off_1006000 edi +
push offset aMicrosoftProfi  +
call sub_1001A1C  +
mov eax off_1006000 +
mov edi offset dword_1001240 +
cmp eax offset off_1006000 +
jz loc_100425B  +
test byte ptr [eax+1Ch] 8 +
jz loc_100425B  +
push edi  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax [ebp+hInstance] +
mov hInstance eax +
mov ebx offset aProquotaInstan +
push ebx  +
push esi  +
push 100000h  +
call ds:OpenEventW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_10042AE  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 8 +
jz loc_10044D6  +
push edi  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax off_1006000 +
jmp loc_10044D6  +
push ebx  +
push 1  +
push 1  +
push esi  +
mov ebx ds:CreateEventW +
call ebx  +
mov [ebp+hObject] eax +
push esi  +
push 1  +
push esi  +
push esi  +
call ebx  +
mov hObject eax +
cmp eax esi +
jnz loc_1004305  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 8 +
jz loc_10044D6  +
call ds:GetLastError  +
push eax  +
push edi  +
push 0Ch  +
mov eax off_1006000 +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
jmp loc_10042A4  +
call sub_1002DB3  +
test eax eax +
jnz loc_1004330  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 8 +
jz loc_10044D6  +
push edi  +
push 0Dh  +
jmp loc_1004299  +
call sub_1001B26  +
push esi  +
push 3FFh  +
call ds:SetProcessShutdownParameters  +
mov [ebp+ms_exc.disabled] esi +
push 80000000h  +
push offset CriticalSection  +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_1004395  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_1004389  +
test byte ptr [eax+1Ch] 4 +
jz loc_1004389  +
call ds:GetLastError  +
push eax  +
push edi  +
push 0Eh  +
mov eax off_1006000 +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1001905  +
mov eax off_1006000 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10044D6  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call ds:InitCommonControls  +
push esi  +
call ds:CoInitialize  +
push 28h  +
push offset Buffer  +
push 6  +
pop ebx  +
push ebx  +
push hInstance  +
call ds:LoadStringW  +
mov [ebp+WndClass.style] 3 +
mov [ebp+WndClass.lpfnWndProc] offset loc_1003E9E +
mov [ebp+WndClass.cbClsExtra] esi +
mov [ebp+WndClass.cbWndExtra] esi +
mov eax [ebp+hInstance] +
mov [ebp+WndClass.hInstance] eax +
mov [ebp+WndClass.hIcon] esi +
mov [ebp+WndClass.hCursor] esi +
mov [ebp+WndClass.hbrBackground] ebx +
mov [ebp+WndClass.lpszMenuName] esi +
mov ebx offset aProquota +
mov [ebp+WndClass.lpszClassName] ebx +
lea eax [ebp+WndClass] +
push eax  +
call ds:RegisterClassW  +
test ax ax +
jnz loc_1004426  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 4 +
jz loc_10044D6  +
call ds:GetLastError  +
push eax  +
push edi  +
push 10h  +
jmp loc_10042F3  +
push esi  +
push [ebp+hInstance]  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push ebx  +
push esi  +
call ds:CreateWindowExW  +
mov dword_10060D8 eax +
cmp eax esi +
jnz loc_1004468  +
mov eax off_1006000 +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 4 +
jz loc_10044D6  +
call ds:GetLastError  +
push eax  +
push edi  +
push 11h  +
jmp loc_10042F3  +
mov ebx ds:GetMessageW +
jmp loc_1004484  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
test eax eax +
jnz loc_1004470  +
mov eax [ebp+Msg.wParam] +
mov [ebp+var_20] eax +
jmp loc_10042A4  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov eax off_1006000 +
mov edi offset dword_1001240 +
cmp eax offset off_1006000 +
jz loc_10044CD  +
test byte ptr [eax+1Ch] 8 +
jz loc_10044CD  +
push edi  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
mov eax off_1006000 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor esi esi +
cmp eax offset off_1006000 +
jz loc_10044F1  +
test byte ptr [eax+1Ch] 8 +
jz loc_10044F1  +
push edi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_10016C5  +
cmp [ebp+hObject] esi +
jz loc_10044FF  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax hObject +
cmp eax esi +
jz loc_100450F  +
push eax  +
call ds:CloseHandle  +
mov eax lpText +
cmp eax esi +
jz loc_1004525  +
push eax  +
call ds:LocalFree  +
mov lpText esi +
mov eax hMem +
cmp eax esi +
jz loc_100453B  +
push eax  +
call ds:LocalFree  +
mov hMem esi +
call sub_1001A6A  +
mov eax [ebp+var_20] +
call __SEH_epilog4  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1004577  +
test eax eax +
jnz loc_100457C  +
mov ecx [esi] +
test ecx ecx +
jz loc_1004574  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1004568  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100619C +
push offset dword_100618C  +
push dword_1006198  +
mov dword_100618C eax +
push offset unk_100617C  +
push offset unk_1006180  +
push offset unk_1006178  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1006188 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov edi offset Destination +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_100461C  +
cmp eax esi +
jnz loc_100460F  +
xor esi esi +
inc esi  +
mov ebx esi +
jmp loc_100461F  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10045F6  +
xor esi esi +
inc esi  +
mov eax dword_10064CC +
cmp eax esi +
jnz loc_1004632  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1004661  +
mov eax dword_10064CC +
test eax eax +
jnz loc_100465B  +
mov dword_10064CC esi +
push offset dword_10011F8  +
push offset dword_10011EC  +
call sub_100455B  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004661  +
jmp loc_1004789  +
mov dword_1006194 esi +
mov eax dword_10064CC +
cmp eax esi +
jnz loc_1004685  +
push offset dword_10011E8  +
push offset dword_10011E0  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10064CC 2 +
test ebx ebx +
jnz loc_1004691  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10064D4 0 +
jz loc_10046B5  +
push offset dword_10064D4  +
call sub_1004A19  +
pop ecx  +
test eax eax +
jz loc_10046B5  +
push 0  +
push 2  +
push 0  +
call dword_10064D4  +
mov eax ds:_acmdln +
mov esi [eax] +
mov [ebp+var_20] esi +
mov al [esi] +
cmp al 20h +
ja $LN61  +
test al al +
jz loc_10046CF  +
cmp [ebp+var_1C] 0 +
jnz $LN61  +
mov al [esi] +
test al al +
jz loc_10046DF  +
cmp al 20h +
ja loc_10046DF  +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_10046CF  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_10046EB  +
movzx eax [ebp+StartupInfo.wShowWindow] +
jmp loc_10046EE  +
push 0Ah  +
pop eax  +
push eax  +
push esi  +
push 0  +
push 1000000h  +
call _WinMain@16  +
mov dword_1006190 eax +
cmp dword_1006184 0 +
jnz $LN62  +
push eax  +
call ds:exit  +
cmp al 22h +
jnz loc_1004720  +
xor ecx ecx +
cmp [ebp+var_1C] ecx +
setz cl  +
mov [ebp+var_1C] ecx +
movzx eax al +
push eax  +
call ds:_ismbblead  +
pop ecx  +
test eax eax +
jz loc_1004733  +
inc esi  +
mov [ebp+var_20] esi +
inc esi  +
jmp loc_10046BC  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-24h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov dword_1006190 eax +
cmp dword_1006184 0 +
jnz $LN62  +
push eax  +
call ds:_exit  +
cmp dword_1006194 0 +
jnz loc_1004774  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1006190 +
jmp loc_1004795  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10047B2  +
xor eax eax +
jmp loc_10047FF  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10047AE  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10047EC  +
cmp ecx 20Bh +
jnz loc_10047AE  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10047AE  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10047FA  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10047AE  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_1006184 eax +
call sub_1004B27  +
push eax  +
call ds:__set_app_type  +
or dword_10064C4 0FFFFFFFFh +
or dword_10064C8 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10061A4 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10061A0 +
mov [eax] ecx +
call sub_1004AB9  +
cmp dword_1006068 0 +
jnz loc_1004858  +
push offset sub_1004AB9  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1004AA1  +
xor eax eax +
retn   +
***
call sub_1004B66  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1006050 +
jnz loc_100487F  +
retn 0  +
jmp loc_1004BFC  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1004874  +
push offset dword_1006050  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100495D  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100495D  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1004957  +
cmp eax 19930521h +
jz loc_1004957  +
cmp eax 19930522h +
jz loc_1004957  +
cmp eax 1994000h +
jnz loc_100495D  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_1004920  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_10049A6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_10049A2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1004A0D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1004A05  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1004A0F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10049F5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1004990  +
pop ecx  +
test eax eax +
jz loc_1004A76  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10049D0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004A76  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1004A7F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004B1A  +
cmp ecx 0FFFFFFFFh +
jz loc_1004B1A  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1004B13  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1004B13  +
cmp edx 10000000h +
jnb loc_1004B13  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1004B13  +
jmp loc_1004B0E  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1004B5C  +
push eax  +
call sub_1004AC1  +
test eax eax +
jz loc_1004B5C  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1004B51  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1004B5C  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1006050 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1004B98  +
test eax ebx +
jz loc_1004B98  +
not eax  +
mov dword_1006054 eax +
jmp loc_1004BF3  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1004BDF  +
test dword_1006050 ebx +
jnz loc_1004BE4  +
mov esi 0BB40E64Fh +
mov dword_1006050 esi +
not esi  +
mov dword_1006054 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10062A8 eax +
mov dword_10062A4 ecx +
mov dword_10062A0 edx +
mov dword_100629C ebx +
mov dword_1006298 esi +
mov dword_1006294 edi +
mov word_10062C0 ss +
mov word_10062B4 cs +
mov word_1006290 ds +
mov word_100628C es +
mov word_1006288 fs +
mov word_1006284 gs +
pushf   +
pop dword_10062B8  +
mov eax [ebp+0] +
mov dword_10062AC eax +
mov eax [ebp+4] +
mov dword_10062B0 eax +
lea eax [ebp+8] +
mov dword_10062BC eax +
mov eax [ebp-320h] +
mov dword_10061F8 10001h +
mov eax dword_10062B0 +
mov dword_10061B4 eax +
mov dword_10061A8 0C0000409h +
mov dword_10061AC 1 +
mov eax dword_1006050 +
mov [ebp-328h] eax +
mov eax dword_1006054 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
