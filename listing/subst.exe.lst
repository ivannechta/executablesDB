mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1001287  +
push [ebp+arg_0]  +
mov eax large fs:18h +
mov eax [eax+30h] +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
push 3  +
push 0  +
push 772Bh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
mov edi ds:?Display@MESSAGE@@QAAEPBDZZ +
mov ebx offset dword_100119C +
push ebx  +
push esi  +
call edi  +
mov eax [esi] +
pop ecx  +
pop ecx  +
push 3  +
push 0  +
push 772Dh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push ebx  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ds:??0FSTRING@@QAE@XZ +
push edi  +
mov edi [ebp+arg_C] +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_20] +
call esi  +
mov eax [ebp+arg_0] +
add eax 40h +
push 3Ah  +
mov [ebp+DeviceName] ax +
pop eax  +
push [ebp+ucchMax]  +
mov [ebp-0Ah] ax +
xor eax eax +
mov [ebp+var_8] ax +
push ebx  +
lea eax [ebp+DeviceName] +
push eax  +
call ds:QueryDosDeviceW  +
test eax eax +
jz loc_100139C  +
push 0FFFFFFFFh  +
push offset a??  +
lea ecx [ebp+var_34] +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_20] +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [ebp+var_20] +
call ds:?Strstr@WSTRING@@QBEKPBV1@@Z  +
test eax eax +
jnz loc_1001392  +
push [ebp+var_28]  +
lea ecx [ebp+var_20] +
push eax  +
call ds:?DeleteChAt@WSTRING@@QAEXKK@Z  +
and dword ptr [edi] 0 +
mov bl 1 +
mov esi ds:??1OBJECT@@UAE@XZ +
lea ecx [ebp+var_20] +
call esi  +
lea ecx [ebp+var_34] +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov al bl +
xor ecx ebp +
pop ebx  +
call sub_10022BE  +
leave   +
retn 10h  +
mov dword ptr [edi] 57h +
xor bl bl +
jmp loc_100136F  +
call ds:GetLastError  +
mov [edi] eax +
jmp loc_1001398  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea ecx [ebp+var_238] +
call ds:??0DSTRING@@QAE@XZ  +
lea ecx [ebp+var_24C] +
call ds:??0FSTRING@@QAE@XZ  +
push 0FFFFFFFFh  +
push offset aD  +
lea ecx [ebp+var_238] +
call ds:?Initialize@WSTRING@@QAEEPBGK@Z  +
mov eax [esi] +
push 3  +
push 0  +
push 772Eh  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor edi edi +
inc edi  +
lea eax [ebp+var_220] +
push eax  +
push 10Ch  +
lea eax [ebp+var_21C] +
push eax  +
push edi  +
call sub_10012DC  +
test al al +
jz loc_10014A4  +
mov ecx [ebp+var_230] +
lea eax [edi+40h] +
mov [ecx] ax +
lea eax [ebp+var_21C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001439  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
jnz loc_1001472  +
cmp word ptr [ebp+var_21C+2] 3Ah +
jnz loc_1001472  +
cmp [ebp+var_218] cx +
jnz loc_1001472  +
push 5Ch  +
pop eax  +
mov [ebp+var_218] ax +
xor eax eax +
mov [ebp+var_216] ax +
push 0FFFFFFFFh  +
lea eax [ebp+var_21C] +
push eax  +
lea ecx [ebp+var_24C] +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
lea eax [ebp+var_24C] +
push eax  +
lea eax [ebp+var_238] +
push eax  +
push offset aWW  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 10h +
inc edi  +
cmp edi 1Ah +
jbe loc_1001403  +
lea ecx [ebp+var_24C] +
call ds:??1OBJECT@@UAE@XZ  +
lea ecx [ebp+var_238] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10022BE  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+10h] +
call ds:??1DSTRING@@UAE@XZ  +
mov ecx esi +
pop esi  +
jmp ds:??1OBJECT@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_234] +
call ds:??0FSTRING@@QAE@XZ  +
lea eax [ebp+var_220] +
push eax  +
push 10Ch  +
lea eax [ebp+var_21C] +
push eax  +
movzx eax word ptr [edi] +
sub eax 40h +
push eax  +
call sub_10012DC  +
movzx ebx al +
test ebx ebx +
jz loc_1001564  +
push 0  +
push edi  +
push 2  +
call ds:DefineDosDeviceW  +
mov ebx eax +
test ebx ebx +
jnz loc_10015A9  +
call ds:GetLastError  +
mov [ebp+var_220] eax +
push 0FFFFFFFFh  +
lea ecx [ebp+var_234] +
push edi  +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
cmp [ebp+var_220] 5 +
mov eax [esi] +
push 3  +
mov ecx esi +
push 0  +
jnz loc_100158B  +
push 7732h  +
jmp loc_1001590  +
push 772Fh  +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_234] +
push eax  +
push offset aW  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
lea ecx [ebp+var_234] +
call ds:??1OBJECT@@UAE@XZ  +
mov ecx [ebp+var_4] +
test ebx ebx +
pop edi  +
setnz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10022BE  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 23Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+var_23C] +
call ds:??0FSTRING@@QAE@XZ  +
lea eax [ebp+var_220] +
push eax  +
push 10Ch  +
lea eax [ebp+var_21C] +
push eax  +
movzx eax word ptr [ebx] +
sub eax 40h +
push eax  +
call sub_10012DC  +
test al al +
jnz loc_10016E5  +
cmp [ebp+var_220] 2 +
jnz loc_10016EF  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1001636  +
sub eax edx +
sar eax 1 +
cmp eax 3 +
jnz loc_10016C0  +
cmp word ptr [edi+2] 3Ah +
jnz loc_10016C0  +
cmp word ptr [edi+4] 5Ch +
jnz loc_10016C0  +
xor eax eax +
cmp [edi+6] ax +
jnz loc_10016C0  +
push eax  +
push eax  +
lea eax [ebp+var_228] +
push eax  +
push edi  +
call ds:RtlDosPathNameToNtPathName_U  +
test al al +
jz loc_10016CE  +
movzx eax word ptr [ebp+var_228] +
mov edx [ebp+lpTargetPath] +
shr eax 1 +
xor ecx ecx +
mov [edx+eax*2-2] cx +
push [ebp+lpTargetPath]  +
push ebx  +
push 1  +
call ds:DefineDosDeviceW  +
test eax eax +
jnz loc_10016AA  +
call ds:GetLastError  +
mov [ebp+var_220] eax +
jmp loc_10016B1  +
and [ebp+var_220] 0 +
lea eax [ebp+var_228] +
push eax  +
call ds:RtlFreeUnicodeString  +
jmp loc_10016EF  +
push edi  +
push ebx  +
push 0  +
call ds:DefineDosDeviceW  +
test eax eax +
jnz loc_10016DC  +
call ds:GetLastError  +
mov [ebp+var_220] eax +
jmp loc_10016EF  +
and [ebp+var_220] 0 +
jmp loc_10016EF  +
mov [ebp+var_220] 87h +
mov eax [ebp+var_220] +
test eax eax +
jz loc_10017A8  +
cmp eax 87h +
jnz loc_1001724  +
mov eax [esi] +
push 3  +
push 0  +
push 772Ch  +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push offset dword_100119C  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
pop ecx  +
pop ecx  +
jmp loc_1001787  +
push 0FFFFFFFFh  +
lea ecx [ebp+var_23C] +
cmp eax 2 +
jnz loc_1001743  +
push edi  +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
push 3  +
push 0  +
push 7731h  +
jmp loc_100176A  +
cmp eax 5 +
jnz loc_100175A  +
push edi  +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
push 3  +
push 0  +
push 7732h  +
jmp loc_100176A  +
push ebx  +
call ds:?Initialize@FSTRING@@QAEPAVWSTRING@@PAGK@Z  +
push 3  +
push 0  +
push 772Fh  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
lea eax [ebp+var_23C] +
push eax  +
push offset aW  +
push esi  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
xor bl bl +
lea ecx [ebp+var_23C] +
call ds:??1OBJECT@@UAE@XZ  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov al bl +
xor ecx ebp +
pop ebx  +
call sub_10022BE  +
leave   +
retn 10h  +
mov bl 1 +
jmp loc_1001789  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4FCh +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
lea ecx [ebp+var_38C] +
call ds:??0STREAM_MESSAGE@@QAE@XZ  +
lea ecx [ebp+var_4FC] +
call ds:??0ARGUMENT_LEXEMIZER@@QAE@XZ  +
mov esi ds:??0ARRAY@@QAE@XZ +
lea ecx [ebp+var_278] +
call esi  +
lea ecx [ebp+var_260] +
call esi  +
lea ecx [ebp+var_3B8] +
call ds:??0STRING_ARGUMENT@@QAE@XZ  +
mov esi ds:??0PATH_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_2DC] +
call esi  +
lea ecx [ebp+var_2AC] +
call esi  +
mov esi ds:??0FLAG_ARGUMENT@@QAE@XZ +
lea ecx [ebp+var_3E8] +
call esi  +
lea ecx [ebp+var_30C] +
call esi  +
xor ebx ebx +
push ebx  +
xor esi esi +
push ebx  +
inc esi  +
push esi  +
push ebx  +
mov [ebp+var_248] esi +
call ds:HeapSetInformation  +
call ds:?Get_Standard_Error_Stream@@YGPAVSTREAM@@XZ  +
push eax  +
call ds:?Get_Standard_Input_Stream@@YGPAVSTREAM@@XZ  +
push eax  +
call ds:?Get_Standard_Output_Stream@@YGPAVSTREAM@@XZ  +
push eax  +
lea ecx [ebp+var_38C] +
call ds:?Initialize@STREAM_MESSAGE@@QAEEPAVSTREAM@@00@Z  +
test al al +
jz loc_1001F9F  +
mov edi ds:?Initialize@ARRAY@@QAEEKK@Z +
push 19h  +
push 32h  +
lea ecx [ebp+var_278] +
call edi  +
test al al +
jz loc_1001F9F  +
push 19h  +
push 32h  +
lea ecx [ebp+var_260] +
call edi  +
test al al +
jz loc_1001F9F  +
lea eax [ebp+var_278] +
push eax  +
lea ecx [ebp+var_4FC] +
call ds:?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jz loc_1001F9F  +
push offset asc_10011D4  +
lea ecx [ebp+var_4FC] +
call ds:?PutSwitches@ARGUMENT_LEXEMIZER@@QAEXPBD@Z  +
mov esi ds:?Initialize@WSTRING@@QAEEPBDK@Z +
push 0FFFFFFFFh  +
push offset asc_10011D0  +
lea ecx [ebp+var_498] +
call esi  +
push 0FFFFFFFFh  +
push offset asc_10011D0  +
lea ecx [ebp+var_468] +
call esi  +
push offset asc_10011CC  +
lea ecx [ebp+var_4FC] +
call ds:?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z  +
push ebx  +
lea ecx [ebp+var_4FC] +
call ds:?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z  +
push ebx  +
lea ecx [ebp+var_4FC] +
call ds:?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z  +
test al al +
jnz loc_1001988  +
lea ecx [ebp+var_30C] +
call sub_10014DB  +
lea ecx [ebp+var_3E8] +
call sub_10014DB  +
mov esi ds:??1PATH_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_2AC] +
call esi  +
lea ecx [ebp+var_2DC] +
call esi  +
lea ecx [ebp+var_3B8] +
call ds:??1STRING_ARGUMENT@@UAE@XZ  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_260] +
call esi  +
lea ecx [ebp+var_278] +
call esi  +
lea ecx [ebp+var_4FC] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_38C] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1002007  +
push 19h  +
push 32h  +
lea ecx [ebp+var_260] +
call edi  +
test al al +
jz loc_100191A  +
mov esi offset asc_10011C8 +
push esi  +
lea ecx [ebp+var_3B8] +
call ds:?Initialize@STRING_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_100191A  +
push offset a?  +
lea ecx [ebp+var_3E8] +
call ds:?Initialize@FLAG_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_100191A  +
mov edi ds:?Initialize@PATH_ARGUMENT@@QAEEPADE@Z +
push ebx  +
push esi  +
lea ecx [ebp+var_2DC] +
call edi  +
test al al +
jz loc_100191A  +
push ebx  +
push esi  +
lea ecx [ebp+var_2AC] +
call edi  +
test al al +
jz loc_100191A  +
push offset aD_0  +
lea ecx [ebp+var_30C] +
call ds:?Initialize@FLAG_ARGUMENT@@QAEEPAD@Z  +
test al al +
jz loc_100191A  +
mov esi ds:?Put@ARRAY@@UAEEPAVOBJECT@@@Z +
lea eax [ebp+var_3B8] +
push eax  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_100191A  +
lea eax [ebp+var_2DC] +
push eax  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_100191A  +
lea eax [ebp+var_2AC] +
push eax  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_100191A  +
lea eax [ebp+var_3E8] +
push eax  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_100191A  +
lea eax [ebp+var_30C] +
push eax  +
lea ecx [ebp+var_260] +
call esi  +
test al al +
jz loc_100191A  +
lea eax [ebp+var_260] +
push eax  +
lea ecx [ebp+var_4FC] +
call ds:?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z  +
test al al +
jnz loc_1001B7A  +
push 3  +
pop esi  +
push esi  +
lea ecx [ebp+var_38C] +
push ebx  +
cmp [ebp+var_4E4] esi +
jbe loc_1001ACF  +
push 7730h  +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
push esi  +
lea ecx [ebp+var_4FC] +
call ds:?GetLexemeAt@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@K@Z  +
jmp loc_1001AE6  +
push 772Fh  +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
lea ecx [ebp+var_4FC] +
call ds:?QueryInvalidArgument@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@XZ  +
mov esi eax +
push esi  +
lea eax [ebp+var_38C] +
push offset aW  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
cmp esi ebx +
jz loc_1001B0A  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
xor ebx ebx +
inc ebx  +
lea ecx [ebp+var_30C] +
call sub_10014DB  +
lea ecx [ebp+var_3E8] +
call sub_10014DB  +
mov esi ds:??1PATH_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_2AC] +
call esi  +
lea ecx [ebp+var_2DC] +
call esi  +
lea ecx [ebp+var_3B8] +
call ds:??1STRING_ARGUMENT@@UAE@XZ  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_260] +
call esi  +
lea ecx [ebp+var_278] +
call esi  +
lea ecx [ebp+var_4FC] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_38C] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
mov eax ebx +
jmp loc_1002007  +
cmp [ebp+var_3BC] bl +
jz loc_1001B93  +
lea eax [ebp+var_38C] +
push eax  +
call sub_100128E  +
jmp loc_1001B0D  +
mov esi ds:?IsValueSet@ARGUMENT@@QAEEXZ +
lea ecx [ebp+var_30C] +
call esi  +
test al al +
jz loc_1001BF8  +
lea ecx [ebp+var_2DC] +
call esi  +
test al al +
jz loc_1001BF8  +
lea ecx [ebp+var_2AC] +
call esi  +
test al al +
jz loc_1001BF8  +
push 3  +
push ebx  +
push 7730h  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
lea ecx [ebp+var_30C] +
call ds:?GetPattern@ARGUMENT@@QAEPAVWSTRING@@XZ  +
push eax  +
lea eax [ebp+var_38C] +
push offset aW  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
jmp loc_1001B0A  +
lea ecx [ebp+var_30C] +
call esi  +
test al al +
jz loc_1001C26  +
lea ecx [ebp+var_2DC] +
call esi  +
test al al +
jnz loc_1001C26  +
lea ecx [ebp+var_2AC] +
call esi  +
test al al +
jnz loc_1001C26  +
push 3  +
push ebx  +
push 772Fh  +
jmp loc_1001BC5  +
lea ecx [ebp+var_2DC] +
call esi  +
mov edi 0FFFFh +
test al al +
jz loc_1001C87  +
mov eax [ebp+var_2B4] +
cmp dword ptr [eax+21Ch] 2 +
jnz loc_1001C63  +
cmp dword ptr [eax+21Ch] 1 +
jbe loc_1001C5B  +
mov eax [eax+218h] +
movzx eax word ptr [eax+2] +
jmp loc_1001C5D  +
mov eax edi +
cmp ax 3Ah +
jz loc_1001C87  +
push 3  +
push ebx  +
push 772Fh  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
mov eax [ebp+var_2B4] +
add eax 210h +
jmp loc_1001BDD  +
lea ecx [ebp+var_2AC] +
call esi  +
test al al +
jz loc_1001CDB  +
mov eax [ebp+var_284] +
cmp dword ptr [eax+21Ch] 2 +
jnz loc_1001CDB  +
cmp dword ptr [eax+21Ch] 1 +
jbe loc_1001CB7  +
mov eax [eax+218h] +
movzx eax word ptr [eax+2] +
jmp loc_1001CB9  +
mov eax edi +
cmp ax 3Ah +
jnz loc_1001CDB  +
push 3  +
push ebx  +
push 772Fh  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
mov eax [ebp+var_284] +
jmp loc_1001C7D  +
lea ecx [ebp+var_2DC] +
call esi  +
test al al +
jz loc_1001ECA  +
mov edi ds:??0DSTRING@@QAE@XZ +
lea ecx [ebp+var_324] +
call edi  +
lea ecx [ebp+var_400] +
call edi  +
lea ecx [ebp+var_244] +
call ds:??0PATH@@QAE@XZ  +
mov eax [ebp+var_2B4] +
push 0FFFFFFFFh  +
push ebx  +
add eax 210h +
push eax  +
lea ecx [ebp+var_324] +
call ds:?Initialize@WSTRING@@QAEEPBV1@KK@Z  +
push [ebp+var_31C]  +
call ds:_wcsupr  +
pop ecx  +
lea ecx [ebp+var_30C] +
call esi  +
test al al +
jz loc_1001D91  +
lea eax [ebp+var_38C] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_324] +
call ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z  +
push eax  +
call sub_10014F7  +
movzx eax al +
mov [ebp+var_248] eax +
lea ecx [ebp+var_244] +
call ds:??1PATH@@UAE@XZ  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_400] +
call esi  +
lea ecx [ebp+var_324] +
call esi  +
jmp loc_1001F2C  +
lea ecx [ebp+var_2AC] +
call esi  +
test al al +
jz loc_1001E7B  +
push ebx  +
push [ebp+var_284]  +
call ds:?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z  +
cmp eax ebx +
jnz loc_1001E0E  +
push 3  +
push ebx  +
push 7731h  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
mov eax [ebp+var_284] +
add eax 210h +
push eax  +
lea eax [ebp+var_38C] +
push offset aW  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
lea ecx [ebp+var_244] +
call ds:??1PATH@@UAE@XZ  +
mov esi ds:??1DSTRING@@UAE@XZ +
lea ecx [ebp+var_400] +
call esi  +
lea ecx [ebp+var_324] +
call esi  +
jmp loc_1001B0A  +
mov edx [eax] +
xor edi edi +
inc edi  +
push edi  +
mov ecx eax +
call dword ptr [edx]  +
push edi  +
push [ebp+var_284]  +
lea ecx [ebp+var_244] +
call ds:?Initialize@PATH@@QAEEPBV1@E@Z  +
mov esi ds:?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z +
push edi  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
lea ecx [ebp+var_34] +
call esi  +
lea ecx [ebp+var_38C] +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_324] +
push eax  +
push edi  +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push ebx  +
mov [ebp+var_27C] eax +
call esi  +
push eax  +
call sub_10015D0  +
push [ebp+var_27C]  +
movzx eax al +
mov [ebp+var_248] eax +
call sub_1001265  +
pop ecx  +
jmp loc_1001D6A  +
push 3  +
push ebx  +
push 772Fh  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
push 1  +
lea ecx [ebp+var_4FC] +
call ds:?GetLexemeAt@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@K@Z  +
mov esi eax +
push esi  +
lea eax [ebp+var_38C] +
push offset aW  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
cmp esi ebx +
jz loc_1001DE7  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax]  +
jmp loc_1001DE7  +
xor edi edi +
inc edi  +
cmp [ebp+var_4E4] edi +
jbe loc_1001F20  +
push 3  +
push ebx  +
push 772Fh  +
lea ecx [ebp+var_38C] +
call ds:?Set@STREAM_MESSAGE@@UAEEKW4MESSAGE_TYPE@@K@Z  +
push edi  +
lea ecx [ebp+var_4FC] +
call ds:?GetLexemeAt@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@K@Z  +
mov esi eax +
push esi  +
lea eax [ebp+var_38C] +
push offset aW  +
push eax  +
call ds:?Display@MESSAGE@@QAAEPBDZZ  +
add esp 0Ch +
cmp esi ebx +
jz loc_1001F19  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax]  +
mov ebx edi +
jmp loc_1001B0D  +
lea eax [ebp+var_38C] +
push eax  +
call sub_10013AB  +
lea ecx [ebp+var_30C] +
call sub_10014DB  +
lea ecx [ebp+var_3E8] +
call sub_10014DB  +
mov esi ds:??1PATH_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_2AC] +
call esi  +
lea ecx [ebp+var_2DC] +
call esi  +
lea ecx [ebp+var_3B8] +
call ds:??1STRING_ARGUMENT@@UAE@XZ  +
mov esi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_260] +
call esi  +
lea ecx [ebp+var_278] +
call esi  +
lea ecx [ebp+var_4FC] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_38C] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
xor eax eax +
cmp [ebp+var_248] ebx +
setz al  +
jmp loc_1002007  +
lea ecx [ebp+var_30C] +
call sub_10014DB  +
lea ecx [ebp+var_3E8] +
call sub_10014DB  +
mov edi ds:??1PATH_ARGUMENT@@UAE@XZ +
lea ecx [ebp+var_2AC] +
call edi  +
lea ecx [ebp+var_2DC] +
call edi  +
lea ecx [ebp+var_3B8] +
call ds:??1STRING_ARGUMENT@@UAE@XZ  +
mov edi ds:??1ARRAY@@UAE@XZ +
lea ecx [ebp+var_260] +
call edi  +
lea ecx [ebp+var_278] +
call edi  +
lea ecx [ebp+var_4FC] +
call ds:??1ARGUMENT_LEXEMIZER@@UAE@XZ  +
lea ecx [ebp+var_38C] +
call ds:??1STREAM_MESSAGE@@UAE@XZ  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10022BE  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002037  +
test eax eax +
jnz loc_100203C  +
mov ecx [esi] +
test ecx ecx +
jz loc_1002034  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1002028  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100403C +
push offset dword_100402C  +
push dword_1004038  +
mov dword_100402C eax +
push offset dword_100401C  +
push offset dword_1004020  +
push offset dword_1004018  +
call ds:__getmainargs  +
add esp 14h +
mov dword_1004028 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10020C4  +
cmp eax esi +
jnz loc_10020B7  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10020C7  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100209E  +
xor esi esi +
inc esi  +
mov eax dword_100436C +
cmp eax esi +
jnz loc_10020DA  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1002115  +
mov eax dword_100436C +
test eax eax +
jnz loc_100210F  +
mov dword_100436C esi +
push offset dword_1001170  +
push offset dword_1001164  +
call sub_100201B  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002115  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10021DF  +
mov dword_1004034 esi +
mov eax dword_100436C +
cmp eax esi +
jnz loc_1002139  +
push offset dword_1001160  +
push offset dword_1001158  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100436C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1002146  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1004374 ebx +
jz loc_1002167  +
push offset dword_1004374  +
call sub_10023C9  +
pop ecx  +
test eax eax +
jz loc_1002167  +
push ebx  +
push 2  +
push ebx  +
call dword_1004374  +
push dword_100401C  +
push dword_1004020  +
push dword_1004018  +
call sub_10017B1  +
add esp 0Ch +
mov dword_1004030 eax +
cmp dword_1004024 ebx +
jnz loc_10021C5  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1004030 eax +
xor ebx ebx +
cmp dword_1004024 ebx +
jnz loc_10021C5  +
push eax  +
call ds:_exit  +
cmp dword_1004034 ebx +
jnz loc_10021D3  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1004030 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10021FC  +
xor eax eax +
jmp loc_1002249  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10021F8  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1002236  +
cmp ecx 20Bh +
jnz loc_10021F8  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10021F8  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1002244  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10021F8  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1004024 eax +
call sub_1002562  +
push eax  +
call ds:__set_app_type  +
or dword_1004364 0FFFFFFFFh +
or dword_1004368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1004044 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1004040 +
mov [eax] ecx +
call sub_10024F4  +
cmp dword_1004010 0 +
jnz loc_10022A2  +
push offset sub_10024F4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10024DC  +
xor eax eax +
retn   +
***
call sub_10025A1  +
jmp sub_100207C  +
***
cmp ecx dword_1004000 +
jnz loc_10022C9  +
retn 0  +
jmp loc_1002637  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1002310  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1002310  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100230A  +
cmp eax 19930521h +
jz loc_100230A  +
cmp eax 19930522h +
jz loc_100230A  +
cmp eax 1994000h +
jnz loc_1002310  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10022D0+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002356  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002352  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10023BD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10023B5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10023BF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10023A5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002340  +
pop ecx  +
test eax eax +
jz loc_1002426  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002380  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002426  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100242F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10022BE  +
push offset dword_1004000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002555  +
cmp ecx 0FFFFFFFFh +
jz loc_1002555  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100254E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100254E  +
cmp edx 10000000h +
jnb loc_100254E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100254E  +
jmp loc_1002549  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002597  +
push eax  +
call sub_10024FC  +
test eax eax +
jz loc_1002597  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100258C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002597  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1004000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10025D3  +
test eax ebx +
jz loc_10025D3  +
not eax  +
mov dword_1004004 eax +
jmp loc_100262E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100261A  +
test dword_1004000 ebx +
jnz loc_100261F  +
mov esi 0BB40E64Fh +
mov dword_1004000 esi +
not esi  +
mov dword_1004004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1004148 eax +
mov dword_1004144 ecx +
mov dword_1004140 edx +
mov dword_100413C ebx +
mov dword_1004138 esi +
mov dword_1004134 edi +
mov word_1004160 ss +
mov word_1004154 cs +
mov word_1004130 ds +
mov word_100412C es +
mov word_1004128 fs +
mov word_1004124 gs +
pushf   +
pop dword_1004158  +
mov eax [ebp+0] +
mov dword_100414C eax +
mov eax [ebp+4] +
mov dword_1004150 eax +
lea eax [ebp+8] +
mov dword_100415C eax +
mov eax [ebp-320h] +
mov dword_1004098 10001h +
mov eax dword_1004150 +
mov dword_1004054 eax +
mov dword_1004048 0C0000409h +
mov dword_100404C 1 +
mov eax dword_1004000 +
mov [ebp-328h] eax +
mov eax dword_1004004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
retn   +
***
