mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+Context]  +
call ds:SetupTermDefaultQueueCallback  +
push [ebp+QueueHandle]  +
call ds:SetupCloseFileQueue  +
push [ebp+InfHandle]  +
call ds:SetupCloseInfFile  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push esi  +
push 2  +
push esi  +
push [ebp+FileName]  +
call ds:SetupOpenInfFileW  +
mov edi [ebp+arg_0] +
mov [edi] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10011F2  +
xor eax eax +
jmp loc_1001246  +
push esi  +
push eax  +
push esi  +
call ds:SetupOpenAppendInfFileW  +
test eax eax +
jnz loc_1001209  +
push dword ptr [edi]  +
call ds:SetupCloseInfFile  +
jmp loc_10011EE  +
push ebx  +
call ds:SetupOpenFileQueue  +
mov ebx [ebp+arg_8] +
mov [ebx] eax +
cmp eax esi +
jz loc_100123B  +
cmp eax 0FFFFFFFFh +
jz loc_100123B  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:SetupInitDefaultQueueCallbackEx  +
mov ecx [ebp+arg_C] +
mov [ecx] eax +
cmp eax esi +
jnz loc_100124C  +
push dword ptr [ebx]  +
call ds:SetupCloseFileQueue  +
push dword ptr [edi]  +
call ds:SetupCloseInfFile  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
xor eax eax +
inc eax  +
jmp loc_1001245  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100126C  +
cmp ecx 7FFFFFFFh +
jbe loc_1001271  +
mov eax 80070057h +
test eax eax +
jl loc_10012BC  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10012AC  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_10012A7  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_10012A7  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100128F  +
pop edi  +
test esi esi +
jnz loc_10012B3  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0Eh +
push esi  +
jnz loc_10012F8  +
mov eax [ebp+arg_8] +
push dword ptr [eax+0Ch]  +
mov esi [ebp+arg_C] +
push 104h  +
push esi  +
call sub_1001256  +
test eax eax +
jge loc_10012F3  +
xor eax eax +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 10h  +
push 4  +
pop eax  +
jmp loc_10012EE  +
pop esi  +
pop ebp  +
jmp ds:SetupDefaultQueueCallbackW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
lea eax [ebp+Context] +
push eax  +
lea eax [ebp+FileQueue] +
push eax  +
push [ebp+InfHandle]  +
lea eax [ebp+InfHandle] +
push eax  +
call sub_10011CE  +
test eax eax +
jnz loc_100132D  +
or eax 0FFFFFFFFh +
jmp locret_10013B8  +
push ebx  +
mov ebx [ebp+FileQueue] +
push esi  +
push edi  +
push 4  +
xor esi esi +
push esi  +
mov edi offset SectionName +
push edi  +
push ebx  +
push esi  +
push [ebp+InfHandle]  +
call ds:SetupInstallFilesFromInfSectionW  +
test eax eax +
jz loc_1001396  +
lea eax [ebp+Result] +
push eax  +
push esi  +
push esi  +
push esi  +
push 22h  +
push ebx  +
call ds:SetupScanFileQueueA  +
test eax eax +
jz loc_100137B  +
cmp [ebp+Result] 1 +
jz loc_100137B  +
push [ebp+Context]  +
push offset MsgHandler  +
push ebx  +
push esi  +
call ds:SetupCommitFileQueueA  +
test eax eax +
jz loc_1001396  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 7EFh  +
push edi  +
push [ebp+InfHandle]  +
push esi  +
call ds:SetupInstallFromInfSectionW  +
test eax eax +
jnz loc_10013A7  +
push [ebp+Context]  +
push ebx  +
push [ebp+InfHandle]  +
call sub_10011A5  +
or eax 0FFFFFFFFh +
jmp loc_10013B5  +
push [ebp+Context]  +
push ebx  +
push [ebp+InfHandle]  +
call sub_10011A5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] 2 +
jnz loc_10013D9  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_1001305  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10013FC  +
test eax eax +
jnz loc_1001401  +
mov ecx [esi] +
test ecx ecx +
jz loc_10013F9  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10013ED  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100203C +
push offset dword_100202C  +
push dword_1002038  +
mov dword_100202C eax +
push offset dword_100201C  +
push offset dword_1002020  +
push offset dword_1002018  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1002028 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1001489  +
cmp eax esi +
jnz loc_100147C  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_100148C  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1001463  +
xor esi esi +
inc esi  +
mov eax dword_100236C +
cmp eax esi +
jnz loc_100149F  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10014DA  +
mov eax dword_100236C +
test eax eax +
jnz loc_10014D4  +
mov dword_100236C esi +
push offset dword_10010C0  +
push offset dword_10010B4  +
call sub_10013E0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10014DA  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10015A4  +
mov dword_1002034 esi +
mov eax dword_100236C +
cmp eax esi +
jnz loc_10014FE  +
push offset dword_10010B0  +
push offset dword_10010A8  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100236C 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100150B  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1002374 ebx +
jz loc_100152C  +
push offset dword_1002374  +
call sub_1001779  +
pop ecx  +
test eax eax +
jz loc_100152C  +
push ebx  +
push 2  +
push ebx  +
call dword_1002374  +
push dword_100201C  +
push dword_1002020  +
push dword_1002018  +
call sub_10013C1  +
add esp 0Ch +
mov dword_1002030 eax +
cmp dword_1002024 ebx +
jnz loc_100158A  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1002030 eax +
xor ebx ebx +
cmp dword_1002024 ebx +
jnz loc_100158A  +
push eax  +
call ds:_exit  +
cmp dword_1002034 ebx +
jnz loc_1001598  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1002030 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10015C1  +
xor eax eax +
jmp loc_100160E  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10015BD  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10015FB  +
cmp ecx 20Bh +
jnz loc_10015BD  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10015BD  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1001609  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10015BD  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1002024 eax +
call sub_1001912  +
push eax  +
call ds:__set_app_type  +
or dword_1002364 0FFFFFFFFh +
or dword_1002368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1002044 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1002040 +
mov [eax] ecx +
call sub_10018A4  +
cmp dword_1002008 0 +
jnz loc_1001667  +
push offset sub_10018A4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100188C  +
xor eax eax +
retn   +
***
call sub_1001951  +
jmp sub_1001441  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10016C0  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10016C0  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10016BA  +
cmp eax 19930521h +
jz loc_10016BA  +
cmp eax 19930522h +
jz loc_10016BA  +
cmp eax 1994000h +
jnz loc_10016C0  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1001680+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1001706  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1001702  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100176D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1001765  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100176F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1001755  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_10016F0  +
pop ecx  +
test eax eax +
jz loc_10017D6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1001730  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10017D6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10017DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset loc_10019E7  +
push offset dword_100200C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1001905  +
cmp ecx 0FFFFFFFFh +
jz loc_1001905  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10018FE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10018FE  +
cmp edx 10000000h +
jnb loc_10018FE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10018FE  +
jmp loc_10018F9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1001947  +
push eax  +
call sub_10018AC  +
test eax eax +
jz loc_1001947  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100193C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1001947  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100200C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1001983  +
test eax ebx +
jz loc_1001983  +
not eax  +
mov dword_1002010 eax +
jmp loc_10019DE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_10019CA  +
test dword_100200C ebx +
jnz loc_10019CF  +
mov esi 0BB40E64Fh +
mov dword_100200C esi +
not esi  +
mov dword_1002010 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
cmp ecx dword_100200C +
jnz loc_10019F2  +
retn 0  +
***
jmp loc_1001A07  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1002148 eax +
mov dword_1002144 ecx +
mov dword_1002140 edx +
mov dword_100213C ebx +
mov dword_1002138 esi +
mov dword_1002134 edi +
mov word_1002160 ss +
mov word_1002154 cs +
mov word_1002130 ds +
mov word_100212C es +
mov word_1002128 fs +
mov word_1002124 gs +
pushf   +
pop dword_1002158  +
mov eax [ebp+0] +
mov dword_100214C eax +
mov eax [ebp+4] +
mov dword_1002150 eax +
lea eax [ebp+8] +
mov dword_100215C eax +
mov eax [ebp-320h] +
mov dword_1002098 10001h +
mov eax dword_1002150 +
mov dword_1002054 eax +
mov dword_1002048 0C0000409h +
mov dword_100204C 1 +
mov eax dword_100200C +
mov [ebp-328h] eax +
mov eax dword_1002010 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset off_100110C  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
