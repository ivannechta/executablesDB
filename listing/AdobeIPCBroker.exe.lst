push 13h  +
push offset aVulcan_getendp  +
call sub_474F10  +
add esp 8 +
mov dword_4F6368 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6390 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6358 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F633C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F634C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6388 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6354 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63B8 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F639C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6310 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6398 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6360 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6380 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F635C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63A4 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63B0 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6320 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6314 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63BC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6350 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6340 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6384 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63A0 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6344 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F638C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F631C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6328 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6370 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63A8 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6334 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6378 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F636C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6374 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6318 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F630C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63B4 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F637C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6364 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6324 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6394 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6338 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F632C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F63AC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6348 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F6330 eax +
retn   +
***
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
push offset loc_4BBBA0  +
call sub_488F0F  +
pop ecx  +
retn   +
***
mov ecx offset dword_4F640C +
call sub_403A90  +
push offset byte_4BBBB0  +
mov dword_4F6420 0Fh +
mov dword_4F641C 0 +
mov byte ptr dword_4F640C 0 +
call sub_488F0F  +
pop ecx  +
retn   +
***
mov ecx offset dword_4F63D8 +
call sub_403A90  +
push offset byte_4BBC10  +
mov dword_4F63EC 0Fh +
mov dword_4F63E8 0 +
mov byte ptr dword_4F63D8 0 +
call sub_488F0F  +
pop ecx  +
retn   +
***
mov ecx offset dword_4F6424 +
call sub_403A90  +
push 4  +
xor eax eax +
mov dword_4F6438 7 +
push offset a_xml  +
mov ecx offset dword_4F6424 +
mov dword_4F6434 0 +
mov word ptr dword_4F6424 ax +
call loc_40BB60  +
push offset byte_4BBC70  +
call sub_488F0F  +
pop ecx  +
retn   +
***
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
add esp 8 +
mov dword_4F6448 eax +
retn   +
***
push offset sub_4BBCE0  +
call sub_488F0F  +
pop ecx  +
retn   +
***
call sub_474F10  +
call sub_43B890  +
add esp 8 +
retn   +
***
push offset loc_4BBD00  +
call sub_488F0F  +
pop ecx  +
retn   +
***
push offset loc_4BBD20  +
call sub_488F0F  +
pop ecx  +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F64A8 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F64AC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F64B4 eax +
retn   +
***
call sub_474B70  +
push offset sub_4BBD30  +
mov dword_4F64B0 eax +
call sub_488F0F  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9D37  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 8  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_4018C8  +
mov edi dword_4F64B4 +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_4E0E44 +
test edi edi +
jnz loc_4018B8  +
call sub_47C0A0  +
call sub_41C300  +
push esi  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+2Ch]  +
jmp loc_4018CA  +
xor esi esi +
push offset sub_4BBD90  +
mov dword_4F64B8 esi +
call sub_488F0F  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F64BC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F64C0 eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9D37  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 8  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_401998  +
mov edi dword_4F64C0 +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_4E0FF4 +
test edi edi +
jnz loc_401988  +
call sub_47C0A0  +
call sub_41C300  +
push esi  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+2Ch]  +
jmp loc_40199A  +
xor esi esi +
push offset sub_4BBDA0  +
mov dword_4F64C4 esi +
call sub_488F0F  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx offset dword_4F521C +
call sub_403A90  +
push 1Dh  +
xor eax eax +
mov dword_4F5230 7 +
push offset aCProgramFile_0  +
mov ecx offset dword_4F521C +
mov dword_4F522C 0 +
mov word ptr dword_4F521C ax +
call loc_40BB60  +
push offset byte_4BBDD0  +
call sub_488F0F  +
pop ecx  +
retn   +
***
mov ecx offset dword_4F5234 +
call sub_403A90  +
push 28h  +
xor eax eax +
mov dword_4F5248 7 +
push offset aAdobeOobePdapp  +
mov ecx offset dword_4F5234 +
mov dword_4F5244 0 +
mov word ptr dword_4F5234 ax +
call loc_40BB60  +
push offset byte_4BBE30  +
call sub_488F0F  +
pop ecx  +
retn   +
***
mov ecx offset unk_4F5368 +
jmp sub_47C0C0  +
***
call sub_47D720  +
mov dword_4F538C eax +
retn   +
***
pop ecx  +
retn   +
***
call loc_480750  +
push offset dword_4F53A4  +
push eax  +
mov dword_4F53AC eax +
call loc_4807B0  +
push offset nullsub_3  +
call sub_488F0F  +
add esp 0Ch +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5448 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F544C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5470 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5468 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F546C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5458 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5454 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5450 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5460 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5464 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F545C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54A4 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5494 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5484 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5488 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F548C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54A8 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54C0 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54AC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54B0 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5498 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F549C eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54A0 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54B8 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F5490 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54B4 eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54BC eax +
retn   +
***
call sub_474F10  +
add esp 8 +
mov dword_4F54C4 eax +
retn   +
***
call sub_474F10  +
mov ecx offset unk_4F5870 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset unk_4F59E8 +
call loc_489E37  +
push offset sub_4BBF39  +
call sub_488F0F  +
pop ecx  +
retn   +
***
pop ecx  +
mov ecx offset unk_4F5B08 +
call loc_48B385  +
push offset loc_4BBF5C  +
call sub_488F0F  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov [ebp-4] edx +
mov edx ecx +
mov ecx [ebp+8] +
mov eax edx +
mov [ebp-8] edx +
mov esi ecx +
mov bl [edi+4] +
mov [ecx] bl +
mov edi [edi] +
cmp edi 3 +
ja loc_402068  +
jmp ds:off_402074[edi*4]  +
mov ebx [ebp-4] +
add edx ebx +
cmp eax edx +
jz loc_40204E  +
mov cl [eax] +
sub cl 2Bh +
cmp cl 50h +
ja loc_401F35  +
movsx ecx cl +
movsx ecx ds:byte_4DE5F0[ecx] +
jmp loc_401F38  +
or ecx 0FFFFFFFFh +
inc eax  +
test cl cl +
js loc_401F17  +
mov edx [ebp-8] +
shl cl 2 +
mov [esi] cl +
jmp loc_401F4A  +
mov ebx [ebp-4] +
lea edi [edx+ebx] +
cmp eax edi +
jz loc_402034  +
mov cl [eax] +
sub cl 2Bh +
cmp cl 50h +
ja loc_401F6E  +
movsx ecx cl +
movsx edx ds:byte_4DE5F0[ecx] +
jmp loc_401F71  +
or edx 0FFFFFFFFh +
inc eax  +
test dl dl +
js loc_401F50  +
mov cl dl +
sar cl 4 +
and cl 3 +
or [esi] cl +
inc esi  +
shl dl 4 +
mov [esi] dl +
mov edx [ebp-8] +
jmp loc_401F8E  +
mov ebx [ebp-4] +
lea edi [edx+ebx] +
cmp eax edi +
jz loc_40201A  +
mov cl [eax] +
sub cl 2Bh +
cmp cl 50h +
ja loc_401FAF  +
movsx ecx cl +
movsx edx ds:byte_4DE5F0[ecx] +
jmp loc_401FB2  +
or edx 0FFFFFFFFh +
inc eax  +
test dl dl +
js loc_401F91  +
mov cl dl +
sar cl 2 +
and cl 0Fh +
or [esi] cl +
inc esi  +
shl dl 6 +
mov [esi] dl +
mov edx [ebp-8] +
jmp loc_401FD0  +
mov ebx [ebp-4] +
nop   +
lea ecx [edx+ebx] +
cmp eax ecx +
jz loc_402000  +
mov cl [eax] +
sub cl 2Bh +
cmp cl 50h +
ja loc_401FED  +
movsx ecx cl +
movsx ecx ds:byte_4DE5F0[ecx] +
jmp loc_401FF0  +
or ecx 0FFFFFFFFh +
inc eax  +
test cl cl +
js loc_401FD0  +
and cl 3Fh +
or [esi] cl +
inc esi  +
jmp loc_401F15  +
***
mov eax [ebp+0Ch] +
pop edi  +
mov dword ptr [eax] 3 +
mov cl [esi] +
sub esi [ebp+8] +
mov [eax+4] cl +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+0Ch] +
pop edi  +
mov dword ptr [ecx] 2 +
mov al [esi] +
sub esi [ebp+8] +
mov [ecx+4] al +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+0Ch] +
pop edi  +
mov dword ptr [ecx] 1 +
mov al [esi] +
sub esi [ebp+8] +
mov [ecx+4] al +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+0Ch] +
pop edi  +
mov dword ptr [ecx] 0 +
mov al [esi] +
sub esi [ebp+8] +
mov [ecx+4] al +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
mov ecx [edi] +
lea ebx [esi+edx] +
mov edx [ebp+arg_0] +
mov al [edi+4] +
mov [ebp+var_4] ebx +
sub ecx 0 +
jz loc_4020C2  +
sub ecx 1 +
jz loc_4020E1  +
sub ecx 1 +
jz loc_402114  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
cmp esi ebx +
jz loc_402192  +
mov al [esi] +
inc esi  +
movzx ecx al +
and al 3 +
shr ecx 2 +
mov cl ds:byte_4DE670[ecx] +
mov [edx] cl +
inc edx  +
shl al 4 +
cmp esi ebx +
jz loc_40217D  +
mov bl [esi] +
inc esi  +
mov cl bl +
sar cl 4 +
and cl 0Fh +
or al cl +
cmp al 3Fh +
jle loc_4020FE  +
mov al 3Dh +
jmp loc_402107  +
movsx eax al +
mov al ds:byte_4DE670[eax] +
mov [edx] al +
mov al bl +
mov ebx [ebp+var_4] +
and al 0Fh +
inc edx  +
shl al 2 +
cmp esi ebx +
jz loc_402168  +
mov ch [esi] +
inc esi  +
mov cl ch +
sar cl 6 +
and cl 3 +
or al cl +
cmp al 3Fh +
jle loc_40212D  +
mov al 3Dh +
jmp loc_402136  +
movsx eax al +
mov al ds:byte_4DE670[eax] +
mov [edx] al +
mov al ch +
and al 3Fh +
movsx ecx al +
mov cl ds:byte_4DE670[ecx] +
mov [edx+1] cl +
add edx 2 +
inc dword ptr [edi+8]  +
cmp dword ptr [edi+8] 12h +
jnz loc_4020C2  +
mov byte ptr [edx] 0Ah +
inc edx  +
mov dword ptr [edi+8] 0 +
jmp loc_4020C2  +
sub edx [ebp+arg_0] +
mov [edi+4] al +
mov eax edx +
mov dword ptr [edi] 2 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
sub edx [ebp+arg_0] +
mov [edi+4] al +
mov eax edx +
mov dword ptr [edi] 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
sub edx [ebp+arg_0] +
mov [edi+4] al +
mov eax edx +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax ecx +
sub esi 1 +
jz loc_4021F3  +
sub esi 1 +
jnz loc_402214  +
mov al [edx+4] +
cmp al 3Fh +
jle loc_4021D9  +
mov al 3Dh +
mov [ecx] al +
lea eax [ecx+1] +
mov byte ptr [eax] 3Dh +
inc eax  +
pop esi  +
mov byte ptr [eax] 0Ah +
sub eax ecx +
inc eax  +
retn   +
movsx eax al +
pop esi  +
mov al ds:byte_4DE670[eax] +
mov [ecx] al +
lea eax [ecx+1] +
mov byte ptr [eax] 3Dh +
inc eax  +
mov byte ptr [eax] 0Ah +
sub eax ecx +
inc eax  +
retn   +
mov al [edx+4] +
cmp al 3Fh +
jle loc_4021FE  +
mov al 3Dh +
jmp loc_402207  +
movsx eax al +
mov al ds:byte_4DE670[eax] +
mov [ecx] al +
lea eax [ecx+1] +
mov word ptr [eax] 3D3Dh +
add eax 2 +
mov byte ptr [eax] 0Ah +
sub eax ecx +
inc eax  +
pop esi  +
retn   +
***
mov dword ptr [ecx] offset off_4DE6F4 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4DE6F4 +
jz loc_40224D  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 48h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 60h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B746C  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
lea ecx [esi+4] +
push [ebp+arg_0]  +
mov dword ptr [esi] offset off_4DE710 +
call sub_4023E0  +
push [ebp+arg_4]  +
lea ecx [esi+7Ch] +
mov byte ptr [ebp+var_4] 1 +
call sub_4023E0  +
mov dword ptr [esi+0F4h] 0 +
mov dword ptr [esi+0F8h] 0 +
mov dword ptr [esi+0FCh] 0 +
mov dword ptr [esi+100h] 0 +
mov dword ptr [esi+104h] 0 +
mov dword ptr [esi+108h] 0 +
mov dword ptr [esi+10Ch] 0 +
push 80h  +
mov byte ptr [ebp+var_4] 4 +
call sub_488C2D  +
add esp 4 +
mov [ebp+arg_0] eax +
mov ecx eax +
mov byte ptr [ebp+var_4] 5 +
call sub_404CE0  +
mov [esi+100h] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call loc_402520  +
test [ebp+arg_0] 1 +
jz loc_4023CF  +
push 110h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B74B9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_402430  +
mov eax [esi] +
jmp loc_402432  +
mov eax esi +
mov edi [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+18h] +
mov [ebp+var_4] 0 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+18h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_402467  +
mov eax [ecx] +
jmp loc_402469  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+30h] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+30h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_402498  +
mov eax [ecx] +
jmp loc_40249A  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+48h] +
mov byte ptr [ebp+var_4] 2 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+48h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_4024C9  +
mov eax [ecx] +
jmp loc_4024CB  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
push 0FFFFFFFFh  +
lea ecx [esi+60h] +
mov byte ptr [ebp+var_4] 3 +
lea eax [edi+60h] +
mov dword ptr [ecx+14h] 0Fh +
push 0  +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4032A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B74E0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov dword ptr [edi] offset off_4DE710 +
mov esi [edi+104h] +
cmp esi [edi+108h] +
jz loc_402577  +
add [ebp-17h] dh +
mov eax [edi+104h] +
mov [edi+108h] eax +
mov ecx [edi+100h] +
test ecx ecx +
jz loc_40259D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [edi+100h] 0 +
mov ecx [edi+104h] +
test ecx ecx +
jz loc_4025D7  +
mov eax [edi+10Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_403440  +
mov dword ptr [edi+104h] 0 +
mov dword ptr [edi+108h] 0 +
mov dword ptr [edi+10Ch] 0 +
lea ecx [edi+0F4h] +
call sub_4030A0  +
lea ecx [edi+7Ch] +
call sub_40A870  +
lea ecx [edi+4] +
call sub_40A870  +
mov dword ptr [edi] offset off_4DE6F4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B75A7  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_40] ebx +
lea edi [ebx+4] +
lea eax [ebp+var_28] +
mov [ebp+var_44] edi +
push eax  +
mov ecx edi +
call sub_402260  +
mov esi [eax+10h] +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_402669  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
test esi esi +
jnz loc_4026E1  +
mov [ebp+var_34] esi +
mov [ebp+var_30] esi +
call sub_403980  +
mov [ebp+var_34] eax +
mov [ebp+var_4] esi +
lea edx [ebp+var_34] +
mov ecx [ebx+100h] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push edi  +
lea edx [ebp+var_34] +
lea ecx [ebp+var_28] +
call loc_40B0C0  +
add esp 4 +
lea ecx [ebx+4Ch] +
mov byte ptr [ebp+var_4] 1 +
cmp ecx eax +
jz loc_4026B0  +
push 0FFFFFFFFh  +
push esi  +
push eax  +
call loc_4032A0  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_4026C5  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov edi [ebp+var_34] +
lea ecx [ebp+var_34] +
mov esi [edi] +
mov [ebp+var_2C] esi +
call sub_403550  +
mov edi [ebp+var_34] +
push edi  +
call sub_47BF70  +
add esp 4 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
push 7Ch  +
mov [ebp+var_4] 2 +
call sub_488C2D  +
mov edi eax +
add esp 4 +
mov [ebp+var_2C] edi +
lea eax [ebx+7Ch] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea ecx [edi+4] +
mov dword ptr [edi] offset off_4DE9F4 +
call sub_4023E0  +
push ecx  +
lea ecx [ebp+var_38] +
mov byte ptr [ebp+var_4] 2 +
call loc_403040  +
mov esi [ebp+var_34] +
test esi esi +
jz loc_402738  +
mov [esi] edi +
add esi 4 +
push 7Ch  +
mov [ebp+var_34] esi +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+var_2C] ebx +
mov eax [ebp+var_40] +
lea ecx [ebx+4] +
add eax 7Ch +
mov byte ptr [ebp+var_4] 6 +
push eax  +
mov dword ptr [ebx] offset off_4DEA18 +
call sub_4023E0  +
lea eax [ebp+var_3C] +
mov byte ptr [ebp+var_4] 2 +
mov edi [ebp+var_38] +
mov [ebp+var_3C] ebx +
cmp eax esi +
jnb loc_4027A8  +
cmp edi eax +
ja loc_4027A8  +
mov ebx [ebp+var_30] +
sub eax edi +
sar eax 2 +
mov [ebp+var_2C] eax +
cmp esi ebx +
jnz loc_40279F  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_2C] +
test esi esi +
jz loc_4027CA  +
mov eax [edi+eax*4] +
jmp loc_4027C8  +
mov ebx [ebp+var_30] +
cmp esi ebx +
jnz loc_4027C1  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
test esi esi +
jz loc_4027CA  +
mov eax [ebp+var_2C] +
mov [esi] eax +
add esi 4 +
push 0F4h  +
mov [ebp+var_34] esi +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_2C] eax +
mov ecx [ebp+var_40] +
add ecx 7Ch +
mov byte ptr [ebp+var_4] 8 +
push ecx  +
lea ecx [eax+4] +
mov dword ptr [eax] offset off_4DEA24 +
call sub_4023E0  +
push [ebp+var_44]  +
mov byte ptr [ebp+var_4] 9 +
mov ecx [ebp+var_2C] +
add ecx 7Ch +
call sub_4023E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_3C] +
mov eax [ebp+var_2C] +
mov [ebp+var_3C] eax +
cmp ecx esi +
jnb loc_40284C  +
cmp edi ecx +
ja loc_40284C  +
mov eax ecx +
sub eax edi +
sar eax 2 +
mov [ebp+var_2C] eax +
cmp esi ebx +
jnz loc_402843  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_2C] +
test esi esi +
jz loc_40286B  +
mov eax [edi+eax*4] +
jmp loc_402869  +
cmp esi ebx +
jnz loc_402865  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_2C] +
test esi esi +
jz loc_40286B  +
mov [esi] eax +
add esi 4 +
push 7Ch  +
mov [ebp+var_34] esi +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_3C] eax +
mov ecx [ebp+var_40] +
add ecx 7Ch +
mov byte ptr [ebp+var_4] 0Bh +
push ecx  +
lea ecx [eax+4] +
mov dword ptr [eax] offset off_4DEA0C +
call sub_4023E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
mov eax [ebp+var_3C] +
mov [ebp+var_2C] eax +
cmp ecx esi +
jnb loc_4028D8  +
cmp edi ecx +
ja loc_4028D8  +
mov eax ecx +
sub eax edi +
sar eax 2 +
mov [ebp+var_3C] eax +
cmp esi ebx +
jnz loc_4028CF  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_3C] +
test esi esi +
jz loc_4028F7  +
mov eax [edi+eax*4] +
jmp loc_4028F5  +
cmp esi ebx +
jnz loc_4028F1  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov ebx [ebp+var_30] +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_3C] +
test esi esi +
jz loc_4028F7  +
mov [esi] eax +
add esi 4 +
push 0F4h  +
mov [ebp+var_34] esi +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_3C] eax +
mov ecx [ebp+var_40] +
add ecx 7Ch +
mov byte ptr [ebp+var_4] 0Dh +
push ecx  +
lea ecx [eax+4] +
mov dword ptr [eax] offset off_4DEA00 +
call sub_4023E0  +
push [ebp+var_44]  +
mov byte ptr [ebp+var_4] 0Eh +
mov ecx [ebp+var_3C] +
add ecx 7Ch +
call sub_4023E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
mov eax [ebp+var_3C] +
mov [ebp+var_2C] eax +
cmp ecx esi +
jnb loc_402976  +
cmp edi ecx +
ja loc_402976  +
mov eax ecx +
sub eax edi +
sar eax 2 +
mov [ebp+var_44] eax +
cmp esi ebx +
jnz loc_40296D  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov esi [ebp+var_34] +
mov edi [ebp+var_38] +
mov eax [ebp+var_44] +
test esi esi +
jz loc_40298F  +
mov eax [edi+eax*4] +
jmp loc_40298D  +
cmp esi ebx +
jnz loc_402989  +
push ecx  +
lea ecx [ebp+var_38] +
call loc_403040  +
mov esi [ebp+var_34] +
mov eax [ebp+var_3C] +
test esi esi +
jz loc_40298F  +
mov [esi] eax +
mov ecx [ebp+var_40] +
lea eax [ebp+var_38] +
add esi 4 +
push eax  +
mov [ebp+var_34] esi +
call loc_402A10  +
mov ecx [ebp+var_38] +
test ecx ecx +
jz loc_4029B7  +
mov eax [ebp+var_30] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_403440  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebx] +
mov esi [edi] +
mov [ebp+var_4] esi +
call sub_403550  +
push dword ptr [ebx]  +
call sub_47BF70  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebx+104h] +
push edi  +
lea edi [ebx+104h] +
cmp esi [ebx+108h] +
jz loc_402A47  +
mov ecx [esi] +
test ecx ecx +
jz loc_402A3C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
add esi 4 +
cmp esi [ebx+108h] +
jnz loc_402A30  +
mov edx [ebp+8] +
mov eax [edi] +
mov [edi+4] eax +
mov esi [edx] +
cmp esi [edx+4] +
jz loc_402AAF  +
mov eax [edi+4] +
cmp esi eax +
jnb loc_402A88  +
mov ecx [edi] +
cmp ecx esi +
ja loc_402A88  +
mov ebx esi +
sub ebx ecx +
sar ebx 2 +
cmp eax [edi+8] +
jnz loc_402A7A  +
push ecx  +
mov ecx edi +
call loc_403040  +
mov edx [ebp+8] +
mov ecx [edi+4] +
test ecx ecx +
jz loc_402AA3  +
mov eax [edi] +
mov eax [eax+ebx*4] +
jmp loc_402AA1  +
cmp eax [edi+8] +
jnz loc_402A98  +
push ecx  +
mov ecx edi +
call loc_403040  +
mov edx [ebp+8] +
mov ecx [edi+4] +
test ecx ecx +
jz loc_402AA3  +
mov eax [esi] +
mov [ecx] eax +
add dword ptr [edi+4] 4 +
add esi 4 +
cmp esi [edx+4] +
jnz loc_402A56  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4B7630  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov edx [ecx] +
mov esi [ebp+arg_8] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call dword ptr [edx+4]  +
mov [ebp+var_4] 0 +
cmp byte ptr [esi] 0 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
jnz loc_402D1C  +
xor ecx ecx +
jmp loc_402D2A  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_402D21  +
sub ecx edx +
push ecx  +
push esi  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
xor eax eax +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+arg_4] al +
lea edx [ebp+var_28] +
push ecx  +
setz al  +
lea ecx [ebp+var_40] +
push eax  +
call sub_40B6B0  +
mov ecx [ebp+var_14] +
add esp 8 +
mov bl al +
cmp ecx 10h +
jb loc_402D67  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax [ebp+var_2C] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_402D8E  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
mov [ebp+var_1] 0 +
mov ecx [edi+100h] +
lea ebx [edi+0F4h] +
push ebx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [edi+104h] +
cmp eax [edi+108h] +
jz loc_402E30  +
mov eax [ebx] +
cmp eax [ebx+4] +
jz loc_402E30  +
push esi  +
mov esi [edi+104h] +
cmp esi [edi+108h] +
jz loc_402E0F  +
mov ecx [esi] +
test ecx ecx +
jz loc_402E04  +
mov eax [ecx] +
push ebx  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_402E1B  +
add esi 4 +
cmp esi [edi+108h] +
jnz loc_402DF2  +
mov al [ebp+var_1] +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push dword ptr [ebx]  +
mov ecx [ebp+arg_0] +
call sub_402AC0  +
pop esi  +
pop edi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov ecx [ecx+100h] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+8]  +
***
mov ecx [ecx+100h] +
mov eax [ecx] +
jmp dword ptr [eax+10h]  +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_402EFC  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_403440  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
jmp sub_4030A0  +
***
mov eax [esi+14h] +
cmp eax 10h +
jb loc_402F24  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_402F3F  +
mov eax [esi] +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_402F86  +
mov eax [esi+10h] +
add eax 1 +
jz loc_402F90  +
push eax  +
push esi  +
push edi  +
call loc_48B430  +
add esp 0Ch +
jmp loc_402F90  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_402FBD  +
mov eax [esi] +
mov byte ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edi +
mov byte ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [ecx] 0 +
jnz loc_403001  +
xor edx edx +
push edx  +
push ecx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov edx ecx +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_403007  +
sub edx edi +
pop edi  +
push edx  +
push ecx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_40308F  +
mov ecx [esi] +
sub edx ecx +
push ebx  +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_403094  +
sub edi ecx +
inc edx  +
sar edi 2 +
xor ecx ecx +
mov eax edi +
shr eax 1 +
sub ebx eax +
add eax edi +
cmp ebx edi +
cmovnb ecx eax +
cmp ecx edx +
cmovnb edx ecx +
mov ecx esi +
push edx  +
call loc_4034A0  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_4030F6  +
push edi  +
mov edi [ebx+4] +
cmp esi edi +
jz loc_4030C0  +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi edi +
jnz loc_4030B2  +
mov esi [ebx] +
mov eax 88888889h +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4035E0  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_40311E  +
nop   +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi edi +
jnz loc_403110  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+14h] 10h +
jb loc_403139  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_403176  +
cmp dword ptr [esi+14h] 10h +
jb loc_403176  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_403168  +
push edi  +
push ebx  +
push esi  +
call loc_48C9C0  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call loc_403650  +
pop ebx  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_403192  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_403205  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_4031BA  +
mov eax [esi] +
jmp loc_4031BC  +
mov eax esi +
cmp ebx eax +
jb loc_403205  +
cmp ecx 10h +
jb loc_4031C9  +
mov edx [esi] +
jmp loc_4031CB  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_403205  +
cmp ecx 10h +
jb loc_4031EF  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_4032A0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_4032A0  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 0FFFFFFFEh +
ja loc_40328B  +
cmp [esi+14h] edi +
jnb loc_40322C  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_4037F0  +
test edi edi +
jz loc_403282  +
cmp dword ptr [esi+14h] 10h +
jb loc_403253  +
mov eax [esi] +
jmp loc_403255  +
test edi edi +
jnz loc_403222  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_403247  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
test edi edi +
jz loc_403264  +
push edi  +
push ebx  +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40327C  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_4033A2  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_40330E  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_4033AC  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 10h +
jb loc_4032F5  +
mov edx [esi] +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_403710  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call loc_403710  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 0FFFFFFFEh +
ja loc_4033B6  +
cmp [esi+14h] edi +
jnb loc_403340  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_4037F0  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_403399  +
cmp dword ptr [ebx+14h] 10h +
jb loc_403336  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_403367  +
mov edx [esi] +
jmp loc_403369  +
test edi edi +
jnz loc_40332E  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40335B  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_40337B  +
push edi  +
lea eax [ebx+ecx] +
push eax  +
push edx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_403393  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jnb loc_4033F5  +
mov eax [esi+10h] +
add eax 1 +
jz loc_403403  +
push eax  +
push esi  +
push edi  +
call loc_48B430  +
add esp 0Ch +
jmp loc_403403  +
test edi edi +
jz loc_4033FD  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40342E  +
mov eax [esi] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 4  +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_403481  +
shl eax 2 +
cmp eax 1000h +
jb loc_403474  +
test cl 1Fh +
jnz loc_403486  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_40348B  +
sub ecx eax +
cmp ecx 4 +
jb loc_403490  +
cmp ecx 23h +
ja loc_403495  +
mov ecx eax +
push ecx  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_4034B3  +
xor esi esi +
jmp loc_4034EF  +
cmp ebx 3FFFFFFFh +
ja loc_403539  +
lea eax ds:0[ebx*4] +
cmp eax 1000h +
jb loc_4034E4  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40353E  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea esi [eax+23h] +
and esi 0FFFFFFE0h +
mov [esi-4] eax +
jmp loc_4034EF  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov esi eax +
mov edx [edi] +
mov ecx [edi+4] +
sub ecx edx +
push ecx  +
push edx  +
push esi  +
call loc_48B430  +
mov ecx [edi] +
add esp 0Ch +
mov eax [edi+4] +
sub eax ecx +
sar eax 2 +
mov [ebp+8] eax +
test ecx ecx +
jz loc_403521  +
mov eax [edi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_403440  +
lea eax [esi+ebx*4] +
mov [edi+8] eax +
mov eax [ebp+8] +
lea eax [esi+eax*4] +
mov [edi+4] eax +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
call sub_489DDA  +
push 0FFFFFFFFh  +
push offset loc_4B76A0  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx] +
mov edi [eax+4] +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4035AA  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_4037B0  +
mov esi [esi] +
push ecx  +
lea ecx [edi+10h] +
call sub_403AA0  +
push edi  +
call sub_47BF70  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_403584  +
mov eax [ebx] +
mov [eax+4] eax +
mov eax [ebx] +
mov [eax] eax +
mov eax [ebx] +
mov [eax+8] eax +
mov dword ptr [ebx+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
mov ecx [ebp+8] +
cmp edx 2222222h +
ja loc_403629  +
mov eax edx +
shl eax 4 +
sub eax edx +
shl eax 3 +
cmp eax 1000h +
jb loc_40361C  +
test cl 1Fh +
jnz loc_40362E  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_403633  +
sub ecx eax +
cmp ecx 4 +
jb loc_403638  +
cmp ecx 23h +
ja loc_40363D  +
mov ecx eax +
push ecx  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 1000h +
mov eax [ebp+8] +
jb loc_403678  +
test al 1Fh +
jnz loc_403685  +
mov ecx [eax-4] +
cmp ecx eax +
jnb loc_40368A  +
sub eax ecx +
cmp eax 4 +
jb loc_40368F  +
cmp eax 23h +
ja loc_403694  +
mov eax ecx +
push eax  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFFEh +
ja loc_403705  +
cmp [ecx+14h] esi +
jnb loc_4036C4  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_4037F0  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
cmp [ebp+arg_4] 0 +
jz loc_4036E9  +
cmp esi 10h +
jnb loc_4036E9  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_403140  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
test esi esi +
jnz loc_4036FD  +
cmp dword ptr [ecx+14h] 10h +
mov [ecx+10h] esi +
jb loc_4036F8  +
mov ecx [ecx] +
mov byte ptr [ecx] 0 +
test esi esi +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
push offset aStringTooLong  +
call sub_489DF7  +
int 3  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_40379F  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_40374F  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_403743  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_403797  +
cmp dword ptr [esi+14h] 10h +
jb loc_40375D  +
mov eax [esi] +
jmp loc_40375F  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx] +
mov eax edi +
sub eax ecx +
jz loc_403779  +
push eax  +
lea eax [ebx+edx] +
push eax  +
push ebx  +
call loc_48B430  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
pop ebx  +
jb loc_403791  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push ebx  +
push 0FFFFFFFFh  +
push offset loc_4B76C0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_403831  +
mov edi eax +
jmp loc_403858  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_403858  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_403858  +
mov edi 0FFFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
test eax eax +
jnz loc_40386A  +
xor ebx ebx +
jmp loc_4038C7  +
cmp eax 1000h +
jb loc_403891  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_40387D  +
call sub_489DDA  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea ebx [eax+23h] +
and ebx 0FFFFFFE0h +
mov [ebx-4] eax +
jmp loc_4038C7  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov ebx eax +
jmp loc_4038C7  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_4039B0  +
mov [ebp-18h] eax +
mov eax offset loc_4038BE +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ebx [ebp-18h] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4038E9  +
cmp dword ptr [esi+14h] 10h +
jb loc_4038D8  +
mov ecx [esi] +
jmp loc_4038DA  +
mov ecx esi +
test eax eax +
jz loc_4038E9  +
push eax  +
push ecx  +
push ebx  +
call loc_48C9C0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4038FC  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_403914  +
mov eax [esi] +
jmp loc_403916  +
mov eax esi +
mov byte ptr [eax] 0 +
mov eax [ebp+arg_4] +
mov [esi] ebx +
mov [esi+14h] edi +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] eax +
jb loc_40392C  +
mov esi ebx +
mov byte ptr [esi+eax] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz loc_403990  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_403999  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_4039A2  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_4039C2  +
xor ecx ecx +
mov eax ecx +
pop ebp  +
retn 4  +
***
cmp eax 1000h +
jb loc_4039E8  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4039F7  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_488C2D  +
add esp 4 +
mov ecx eax +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403A4C  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403A2F  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403A2A  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403A20  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403A4A  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_403A4A  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403A38  +
mov [edx] eax +
mov eax edx +
retn   +
***
retn   +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+18h] +
lea ecx [edi+18h] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call sub_403B50  +
push dword ptr [edi+18h]  +
call sub_47BF70  +
mov eax [edi+14h] +
add esp 4 +
cmp eax 10h +
jb loc_403AD8  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_403650  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_403AFB  +
mov eax [edi] +
mov byte ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov byte ptr [edi] 0 +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call sub_403B50  +
push dword ptr [esi]  +
call sub_47BF70  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ecx]  +
call sub_47BF70  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B76E6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov edx [edi] +
mov eax [ebp+arg_4] +
cmp eax [edx] +
jnz loc_403BC3  +
cmp [ebp+arg_8] edx +
jnz loc_403BC3  +
mov [ebp+var_4] 0 +
push dword ptr [edx+4]  +
call loc_4040A0  +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
mov dword ptr [edi+4] 0 +
mov eax [edi] +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp eax [ebp+arg_8] +
jz loc_403C20  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_403C0C  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_403BED  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403C09  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403BE1  +
jmp loc_403C09  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_403C09  +
cmp eax [edx+8] +
jnz loc_403C09  +
mov eax edx +
mov [ebp+arg_4] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_403BF6  +
mov [ebp+arg_4] edx +
push ecx  +
lea eax [ebp+var_10] +
mov ecx edi +
push eax  +
call loc_403C40  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_8] +
jnz loc_403BC8  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx esi +
mov [ebp-4] ecx +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_403C9D  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403C7C  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403C9A  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403C70  +
jmp loc_403C9A  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403C98  +
cmp esi [eax+8] +
jnz loc_403C98  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403C85  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [ebx] +
push edi  +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_403CAB  +
mov edi [ebx+8] +
jmp loc_403CC3  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403CB8  +
mov edi ecx +
jmp loc_403CC3  +
mov edi [esi+8] +
cmp esi ebx +
jnz loc_403D50  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebx+4] +
jnz loc_403CCF  +
mov [edi+4] edx +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_403CDE  +
mov [eax+4] edi +
jmp loc_403CE9  +
cmp [edx] ebx +
jnz loc_403CE6  +
mov [edx] edi +
jmp loc_403CE9  +
mov [edx+8] edi +
mov eax [ebp-4] +
mov esi [eax] +
cmp [esi] ebx +
jnz loc_403D15  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_403CFC  +
mov ecx edx +
jmp loc_403D13  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403D10  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403D06  +
mov eax [ebp-4] +
mov [esi] ecx +
mov esi [eax] +
cmp [esi+8] ebx +
jnz loc_403DA9  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_403D2D  +
mov ecx edx +
mov [esi+8] ecx +
jmp loc_403DA9  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403D4B  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403D40  +
mov [esi+8] ecx +
jmp loc_403DA9  +
mov [ecx+4] esi +
mov eax [ebx] +
mov [esi] eax +
cmp esi [ebx+8] +
jnz loc_403D60  +
mov edx esi +
jmp loc_403D7A  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_403D6C  +
mov [edi+4] edx +
mov [edx] edi +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+8] +
mov [eax+4] esi +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_403D89  +
mov [eax+4] esi +
jmp loc_403D97  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_403D94  +
mov [eax] esi +
jmp loc_403D97  +
mov [eax+8] esi +
mov eax [ebx+4] +
mov [esi+4] eax +
mov al [ebx+0Ch] +
mov cl [esi+0Ch] +
mov [esi+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_403F17  +
mov esi [ebp-4] +
mov eax [esi] +
cmp edi [eax+4] +
jz loc_403F13  +
cmp byte ptr [edi+0Ch] 1 +
mov [ebp-0Ch] edx +
mov [ebp-8] edx +
mov [ebp-10h] edx +
jnz loc_403F13  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_403E8F  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_403E2A  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403E02  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_403E14  +
mov [eax+4] ecx +
jmp loc_403E22  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_403E1F  +
mov [eax] ecx +
jmp loc_403E22  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403EFC  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403E49  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_403EF8  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403F89  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403E73  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_403F6E  +
mov [eax+4] esi +
jmp loc_403F7D  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_403ED9  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403EB0  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_403EC2  +
mov [eax+4] ecx +
jmp loc_403ED1  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_403ECF  +
mov [eax+8] ecx +
jmp loc_403ED1  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403EFC  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403FE7  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403FE7  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov ecx [ebp-0Ch] +
mov edx [edx+4] +
mov edi [ebp-8] +
cmp ecx [eax+4] +
jnz loc_403DC1  +
mov edi [ebp-10h] +
mov byte ptr [edi+0Ch] 1 +
mov eax [ebx+24h] +
lea esi [ebx+10h] +
pop edi  +
cmp eax 10h +
jb loc_403F2E  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_403F44  +
mov esi [esi] +
push ebx  +
mov byte ptr [esi] 0 +
call sub_47BF70  +
mov ecx [ebp-4] +
add esp 4 +
mov eax [ecx+4] +
pop esi  +
pop ebx  +
test eax eax +
jz loc_403F60  +
dec eax  +
mov [ecx+4] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_403F7B  +
mov [eax+8] esi +
jmp loc_403F7D  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403FAD  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_403FC7  +
mov [eax+4] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_403FDA  +
mov [eax] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40403A  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40400D  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_404022  +
mov [eax+4] esi +
jmp loc_404030  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_40402D  +
mov [eax] esi +
jmp loc_404030  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40405D  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_404078  +
mov [eax+4] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_40408E  +
mov [eax+8] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_403F13  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
mov eax ecx +
push edi  +
mov [ebp-4] eax +
mov edi ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_404110  +
push esi  +
push dword ptr [edi+8]  +
mov ecx eax +
call loc_4040A0  +
mov eax [ebx+24h] +
lea esi [ebx+10h] +
mov edi [edi] +
cmp eax 10h +
jb loc_4040E2  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_4040F8  +
mov esi [esi] +
push ebx  +
mov byte ptr [esi] 0 +
call sub_47BF70  +
mov eax [ebp-4] +
add esp 4 +
cmp byte ptr [edi+0Dh] 0 +
mov ebx edi +
jz loc_4040C0  +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
mov ecx [esi] +
test ecx ecx +
jz loc_4048F8  +
cmp dword ptr [esi+40h] 0 +
jz loc_4048F8  +
cmp dword ptr [esi+1Ch] 0 +
jz loc_4048F8  +
lea eax [esi+50h] +
push 1  +
push eax  +
call ecx  +
add esp 8 +
test eax eax +
jnz loc_4048F8  +
lea eax [esi+54h] +
push 1  +
push eax  +
mov eax [esi+1Ch] +
call eax  +
add esp 8 +
test eax eax +
jnz loc_4048F8  +
lea eax [esi+58h] +
push 1  +
push eax  +
mov eax [esi+40h] +
call eax  +
add esp 8 +
test eax eax +
jz loc_404935  +
mov eax [esi+4] +
test eax eax +
jz loc_40490C  +
mov ecx [esi+50h] +
test ecx ecx +
jz loc_40490C  +
push ecx  +
call eax  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_404920  +
mov ecx [esi+54h] +
test ecx ecx +
jz loc_404920  +
push ecx  +
call eax  +
add esp 4 +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+50h] 0 +
mov dword ptr [esi+58h] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
lea eax [ecx+4] +
push eax  +
mov ecx esi +
call loc_406550  +
mov eax [esi] +
cmp eax [esi+4] +
pop esi  +
setnz al  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ecx+10h] +
cmp esi edi +
jz loc_404981  +
mov ecx esi +
call sub_403550  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call sub_407920  +
cmp dword ptr [esi+4] 0 +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4DE9AC +
mov eax ecx +
mov dword ptr [ecx+18h] 0Fh +
mov dword ptr [ecx+14h] 0 +
mov byte ptr [ecx+4] 0 +
mov dword ptr [ecx+30h] 0Fh +
mov dword ptr [ecx+2Ch] 0 +
mov byte ptr [ecx+1Ch] 0 +
mov dword ptr [ecx+48h] 0Fh +
mov dword ptr [ecx+44h] 0 +
mov byte ptr [ecx+34h] 0 +
mov dword ptr [ecx+60h] 0Fh +
mov dword ptr [ecx+5Ch] 0 +
mov byte ptr [ecx+4Ch] 0 +
mov dword ptr [ecx+78h] 0Fh +
mov dword ptr [ecx+74h] 0 +
mov byte ptr [ecx+64h] 0 +
mov dword ptr [ecx+90h] 0Fh +
mov dword ptr [ecx+8Ch] 0 +
mov byte ptr [ecx+7Ch] 0 +
mov dword ptr [ecx+0A8h] 0Fh +
mov dword ptr [ecx+0A4h] 0 +
mov byte ptr [ecx+94h] 0 +
mov dword ptr [ecx+0C0h] 0Fh +
mov dword ptr [ecx+0BCh] 0 +
mov byte ptr [ecx+0ACh] 0 +
mov byte ptr [ecx+0C4h] 0 +
retn   +
***
mov edi ecx +
lea esi [edi+0ACh] +
mov dword ptr [edi] offset off_4DE9AC +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404A83  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404A99  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+94h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404AB5  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404ACB  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+7Ch] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404AE4  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404AFA  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+64h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404B13  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404B29  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+4Ch] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404B42  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404B58  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+34h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404B71  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404B87  +
mov esi [esi] +
mov byte ptr [esi] 0 +
lea esi [edi+1Ch] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404BA0  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_404BB6  +
mov esi [esi] +
mov byte ptr [esi] 0 +
mov eax [edi+18h] +
cmp eax 10h +
jb loc_404BCE  +
inc eax  +
lea ecx [edi+4] +
push eax  +
push dword ptr [edi+4]  +
call loc_403650  +
mov dword ptr [edi+18h] 0Fh +
cmp dword ptr [edi+18h] 10h +
mov dword ptr [edi+14h] 0 +
jb loc_404BEB  +
mov eax [edi+4] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [edi+4] 0 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
call sub_404A60  +
test [ebp+arg_0] 1 +
jz loc_404C1F  +
push 0C8h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 10h +
push ebx  +
mov ebx ecx +
push esi  +
lea eax [ebx+10h] +
push edi  +
mov dword ptr [ebx] offset off_4DE9CC +
mov ecx eax +
mov edi [eax] +
mov esi [edi] +
mov [ebp+var_4] esi +
call sub_403550  +
push dword ptr [ebx+10h]  +
lea eax [ebx+10h] +
call sub_47BF70  +
add esp 4 +
lea ecx [ebx+4] +
call sub_4030A0  +
test [ebp+arg_0] 1 +
jz loc_404C79  +
push 18h  +
push ebx  +
call sub_488C60  +
add esp 8 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 0Ch +
mov eax ecx +
push ebx  +
push esi  +
lea ebx [eax+10h] +
mov [ebp+var_8] eax +
mov dword ptr [eax] offset off_4DE9CC +
mov ecx ebx +
push edi  +
mov edi [ebx] +
mov esi [edi] +
mov [ebp+var_4] esi +
call sub_403550  +
push dword ptr [ebx]  +
call sub_47BF70  +
mov ecx [ebp+var_8] +
add esp 4 +
add ecx 4 +
call sub_4030A0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7723  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov dword ptr [edi] offset off_4DE9CC +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
lea esi [edi+10h] +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_403980  +
mov [esi] eax +
mov [ebp+var_4] 1 +
lea ecx [edi+18h] +
mov dword ptr [edi] offset off_4DE9B4 +
call sub_404120  +
mov dword ptr [edi+74h] 0 +
mov eax edi +
mov dword ptr [edi+78h] 0 +
mov dword ptr [edi+7Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_404DC0  +
test [ebp+arg_0] 1 +
jz loc_404DAF  +
push 80h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 10h +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
lea ecx [ebx+74h] +
mov dword ptr [ebx] offset off_4DE9B4 +
call sub_406780  +
mov eax [ebx+64h] +
test eax eax +
jz loc_404DE7  +
push eax  +
call ds:FreeLibrary  +
lea eax [ebx+10h] +
mov dword ptr [ebx] offset off_4DE9CC +
mov edi [eax] +
mov ecx eax +
mov esi [edi] +
mov [ebp+var_4] esi +
call sub_403550  +
push dword ptr [ebx+10h]  +
lea eax [ebx+10h] +
call sub_47BF70  +
add esp 4 +
lea ecx [ebx+4] +
call sub_4030A0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7766  +
mov eax large fs:0 +
push eax  +
sub esp 17Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebx+78h] +
mov esi [ebx+74h] +
cmp esi edi +
jz loc_404E72  +
mov eax [ebx+74h] +
lea ecx [ebx+4] +
mov [ebx+78h] eax +
mov edi [ecx+4] +
mov esi [ecx] +
cmp esi edi +
jz loc_404E95  +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi edi +
jnz loc_404E84  +
lea ecx [ebx+4] +
mov eax [ecx] +
mov [ecx+4] eax +
lea ecx [ebx+10h] +
call sub_403550  +
lea edi [ebx+18h] +
mov ecx edi +
mov [ebp-188h] edi +
call sub_4048B0  +
mov ecx ebx +
call sub_406110  +
mov ecx [edi+50h] +
mov dword ptr [ebp-184h] 0 +
test ecx ecx +
jz loc_405018  +
mov eax [edi+8] +
test eax eax +
jz loc_405018  +
lea edx [ebp-184h] +
push edx  +
push 1  +
push ecx  +
call eax  +
add esp 0Ch +
test eax eax +
jnz loc_405018  +
push dword ptr [ebp-184h]  +
mov ecx ebx +
call loc_405270  +
mov esi [ebx+74h] +
cmp esi [ebx+78h] +
jz loc_405018  +
push esi  +
lea ecx [ebp-180h] +
call sub_405090  +
lea eax [ebp-17Ch] +
mov dword ptr [ebp-4] 0 +
push eax  +
lea ecx [ebp-0B8h] +
call sub_40A720  +
lea edx [ebp-180h] +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-28h] +
call loc_405DA0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-58h] +
call loc_4032A0  +
lea eax [ebp-0B8h] +
push eax  +
lea edx [ebx+10h] +
lea ecx [ebp-40h] +
call loc_40B0C0  +
add esp 4 +
lea ecx [ebp-70h] +
mov byte ptr [ebp-4] 3 +
cmp ecx eax +
jz loc_404F85  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
mov byte ptr [ebp-4] 2 +
mov eax [ebp-2Ch] +
cmp eax 10h +
jb loc_404F9E  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
lea eax [ebp-0B8h] +
mov dword ptr [ebp-2Ch] 0Fh +
push eax  +
lea ecx [ebx+4] +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
call sub_406490  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_404FD4  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
lea ecx [ebp-0B8h] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call sub_40A870  +
lea ecx [ebp-180h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_404A60  +
add esi 0C8h +
cmp esi [ebx+78h] +
jnz loc_404F10  +
mov edi [ebp-188h] +
mov ecx [edi+54h] +
test ecx ecx +
jz loc_405033  +
mov eax [edi+20h] +
test eax eax +
jz loc_40502C  +
push ecx  +
call eax  +
add esp 4 +
mov dword ptr [edi+54h] 0 +
mov eax [edi+50h] +
test eax eax +
jz loc_40504E  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_405047  +
push eax  +
call ecx  +
add esp 4 +
mov dword ptr [edi+50h] 0 +
mov eax [edi+58h] +
test eax eax +
jz loc_405069  +
mov ecx [edi+44h] +
test ecx ecx +
jz loc_405062  +
push eax  +
call ecx  +
add esp 4 +
mov dword ptr [edi+58h] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B77E0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_4DE9AC +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
lea edx [edi+4] +
jb loc_4050E1  +
mov eax [ecx] +
jmp loc_4050E3  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+1Ch] +
mov [ebp+var_4] 0 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+1Ch] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_405115  +
mov eax [ecx] +
jmp loc_405117  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+34h] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+34h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_405146  +
mov eax [ecx] +
jmp loc_405148  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+4Ch] +
mov byte ptr [ebp+var_4] 2 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+4Ch] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_405177  +
mov eax [ecx] +
jmp loc_405179  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+64h] +
mov byte ptr [ebp+var_4] 3 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+64h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_4051A8  +
mov eax [ecx] +
jmp loc_4051AA  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+7Ch] +
mov byte ptr [ebp+var_4] 4 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+7Ch] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_4051D9  +
mov eax [ecx] +
jmp loc_4051DB  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [esi+94h] +
mov byte ptr [ebp+var_4] 5 +
mov dword ptr [ecx+14h] 0Fh +
lea edx [edi+94h] +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_405210  +
mov eax [ecx] +
jmp loc_405212  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push edx  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
push 0FFFFFFFFh  +
lea ecx [esi+0ACh] +
mov byte ptr [ebp+var_4] 6 +
lea eax [edi+0ACh] +
mov dword ptr [ecx+14h] 0Fh +
push 0  +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4032A0  +
mov al [edi+0C4h] +
mov [esi+0C4h] al +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B784F  +
mov eax large fs:0 +
push eax  +
sub esp 510h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+8] +
test ebx ebx +
jz loc_4055D4  +
mov esi [ebx] +
test esi esi +
jz loc_4055D4  +
cmp byte ptr [esi] 7Bh +
jnz loc_4055CB  +
push 400h  +
lea eax [ebp-410h] +
push 0  +
push eax  +
call sub_48CF40  +
mov ecx [edi+68h] +
add esp 0Ch +
mov dword ptr [ebp-50Ch] 0 +
test ecx ecx +
jz loc_405319  +
mov eax [edi+28h] +
test eax eax +
jz loc_405319  +
lea edx [ebp-50Ch] +
push edx  +
push offset byte_4DE8DC  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405319  +
mov eax [ebp-50Ch] +
test eax eax +
jz loc_405319  +
cmp byte ptr [eax] 0 +
jnz loc_40536E  +
mov eax [edi+6Ch] +
mov dword ptr [ebp-50Ch] 0 +
test eax eax +
jz loc_4055CB  +
mov ecx [edi+44h] +
test ecx ecx +
jz loc_4055CB  +
lea edx [ebp-50Ch] +
push edx  +
push offset byte_4DE8DC  +
push 0  +
push dword ptr [ebx]  +
push eax  +
call ecx  +
add esp 14h +
test eax eax +
jnz loc_4055CB  +
mov eax [ebp-50Ch] +
test eax eax +
jz loc_4055CB  +
cmp byte ptr [eax] 0 +
jz loc_4055CB  +
push 0Eh  +
push offset aBridgetalkcode  +
lea ecx [ebp-440h] +
mov dword ptr [ebp-510h] 0 +
mov dword ptr [ebp-42Ch] 0Fh +
mov dword ptr [ebp-430h] 0 +
mov byte ptr [ebp-440h] 0 +
call loc_4031A0  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-440h] +
mov eax [ebp-42Ch] +
cmp eax 10h +
mov esi [edi+68h] +
cmovnb ecx [ebp-440h] +
test esi esi +
jz loc_4053EC  +
mov edx [edi+28h] +
test edx edx +
jz loc_4053EC  +
lea eax [ebp-510h] +
push eax  +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call edx  +
mov ecx eax +
add esp 14h +
mov eax [ebp-42Ch] +
jmp loc_4053F1  +
mov ecx 1 +
test ecx ecx +
jnz loc_4055AC  +
mov edx [ebp-510h] +
mov dword ptr [ebp-414h] 0Fh +
mov [ebp-418h] ecx +
mov [ebp-428h] cl +
cmp [edx] cl +
jnz loc_40541D  +
xor eax eax +
jmp loc_40542B  +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_405422  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp-428h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 1 +
cmp dword ptr [ebp-418h] 0 +
jz loc_40556D  +
mov ecx [edi+68h] +
mov dword ptr [ebp-518h] 0 +
test ecx ecx +
jz loc_4055F2  +
mov eax [edi+24h] +
test eax eax +
jz loc_4055F2  +
lea edx [ebp-518h] +
push edx  +
push dword ptr [ebp-510h]  +
push 1  +
push ecx  +
call eax  +
add esp 10h +
test eax eax +
jnz loc_4055F2  +
lea ecx [ebp-508h] +
call sub_4049A0  +
mov eax ecx +
mov byte ptr [ebp-4] 2 +
push eax  +
push dword ptr [ebp-518h]  +
mov ecx edi +
push dword ptr [ebp-510h]  +
call loc_4057B0  +
push dword ptr [ebp-50Ch]  +
lea ecx [ebp-474h] +
call sub_406740  +
mov ecx [edi+78h] +
lea eax [ebp-508h] +
cmp eax ecx +
jnb loc_40552A  +
mov eax [edi+74h] +
lea edx [ebp-508h] +
cmp eax edx +
ja loc_40552A  +
mov ecx edx +
sub ecx eax +
mov eax 51EB851Fh +
imul  ecx +
mov ecx [edi+78h] +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-514h] eax +
cmp ecx [edi+7Ch] +
jnz loc_405508  +
push ecx  +
lea ecx [edi+74h] +
call loc_4067E0  +
mov eax [ebp-514h] +
mov ecx [edi+78h] +
imul eax eax +
mov [ebp-514h] ecx +
mov [ebp-51Ch] ecx +
add eax [edi+74h] +
mov byte ptr [ebp-4] 3 +
test ecx ecx +
jz loc_40555B  +
jmp loc_405555  +
cmp ecx [edi+7Ch] +
jnz loc_405538  +
push ecx  +
lea ecx [edi+74h] +
call loc_4067E0  +
mov ecx [edi+78h] +
mov [ebp-51Ch] ecx +
mov [ebp-514h] ecx +
mov byte ptr [ebp-4] 4 +
test ecx ecx +
jz loc_40555B  +
lea eax [ebp-508h] +
push eax  +
call sub_405090  +
add dword ptr [edi+78h] 0C8h +
lea ecx [ebp-508h] +
call sub_404A60  +
mov eax [ebp-414h] +
cmp eax 10h +
jb loc_40558B  +
inc eax  +
lea ecx [ebp-428h] +
push eax  +
push dword ptr [ebp-428h]  +
call loc_403650  +
mov eax [ebp-42Ch] +
mov dword ptr [ebp-414h] 0Fh +
mov dword ptr [ebp-418h] 0 +
mov byte ptr [ebp-428h] 0 +
mov dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax 10h +
jb loc_4055CB  +
inc eax  +
lea ecx [ebp-440h] +
push eax  +
push dword ptr [ebp-440h]  +
call loc_403650  +
add ebx 4 +
jnz loc_4052B0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea ecx [ebp-428h] +
call sub_402F10  +
lea ecx [ebp-440h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
call sub_402F10  +
jmp loc_4055CB  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7888  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push dword ptr [ecx+8]  +
lea eax [ecx+4] +
push dword ptr [eax]  +
lea ecx [ebp-2Ch] +
mov [ebp-24h] eax +
call sub_407530  +
mov dword ptr [ebp-4] 0 +
xor ecx ecx +
mov eax [ebp+8] +
mov ebx [ebp-2Ch] +
mov [ebp-18h] ecx +
mov ecx [eax+4] +
sub ecx [eax] +
mov eax 88888889h +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_40574D  +
xor edi edi +
mov [ebp-14h] edi +
mov ecx [ebp+8] +
mov esi ebx +
mov [ebp-20h] esi +
mov [ebp-10h] ebx +
mov ecx [ecx] +
add ecx edi +
mov edi [ebx+4] +
mov [ebp-1Ch] ecx +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4056F2  +
push ecx  +
lea ecx [edi+10h] +
call sub_40ADC0  +
test al al +
jz loc_4056C2  +
mov edi [edi+8] +
jmp loc_4056C6  +
mov esi edi +
mov edi [edi] +
cmp byte ptr [edi+0Dh] 0 +
mov ecx [ebp-1Ch] +
jz loc_4056B0  +
mov ebx [ebp-2Ch] +
cmp esi ebx +
mov [ebp-10h] esi +
mov esi [ebp-20h] +
jz loc_4056F2  +
mov eax [ebp-10h] +
add eax 10h +
push eax  +
call sub_40ADC0  +
mov ebx [ebp-2Ch] +
test al al +
mov eax [ebp-10h] +
jz loc_4056F4  +
mov eax ebx +
mov edi [ebp-14h] +
cmp eax esi +
mov esi [ebp+8] +
jnz loc_405723  +
mov eax [esi] +
mov ecx [ebp-24h] +
add eax edi +
push eax  +
call sub_406490  +
push dword ptr [ebp+8]  +
mov eax [esi] +
add eax edi +
push eax  +
push ecx  +
lea eax [ebp-34h] +
push eax  +
lea ecx [ebp-2Ch] +
call sub_4079D0  +
mov ebx [ebp-2Ch] +
mov ecx [esi+4] +
mov eax 88888889h +
sub ecx [esi] +
add edi 78h +
inc dword ptr [ebp-18h]  +
imul  ecx +
mov [ebp-14h] edi +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp [ebp-18h] eax +
jb loc_405690  +
push ebx  +
push dword ptr [ebx]  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-2Ch] +
call loc_406C90  +
push dword ptr [ebp-2Ch]  +
call sub_47BF70  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_406C90  +
push dword ptr [esi]  +
call sub_47BF70  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B78C0  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+0Ch] +
mov esi [ebp+8] +
mov eax [ebp+10h] +
mov [ebp-48h] esi +
mov [ebp-4Ch] eax +
test ebx ebx +
jz loc_405D73  +
mov edx [ebx] +
test edx edx +
jz loc_405D73  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_405819  +
xor ecx ecx +
jmp loc_40582C  +
mov ecx edx +
lea esi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405820  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
xor ecx ecx +
mov dword ptr [ebp-4] 0 +
cmp ds:byte_4DE8C8 cl +
mov eax 12h +
mov edx [ebp-18h] +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE8C8  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_4058E3  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_4058C0  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+7Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4058C5  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+7Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 0Dh +
cmp ds:byte_4DE8DC cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE8DC  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405979  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_405953  +
xor ecx ecx +
jmp loc_405964  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405958  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+94h] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 0Fh +
cmp ds:byte_4DE8EC cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE8EC  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405A1E  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_4059F9  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+1Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405A00  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+1Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 16h +
cmp ds:byte_4DE8FC cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE8FC  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405AC1  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_405A9E  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+64h] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405AA3  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+64h] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 0Bh +
cmp ds:byte_4DE914 cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE914  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405B64  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_405B41  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+34h] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405B46  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+34h] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 10h +
cmp ds:byte_4DE920 cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE920  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405C0E  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_405BE4  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+4Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405BF0  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+4Ch] +
call loc_4031A0  +
jmp loc_405D4C  +
xor ecx ecx +
mov eax 9 +
cmp ds:byte_4DE934 cl +
cmovz eax ecx +
cmp dword ptr [ebp-14h] 10h +
push eax  +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push offset byte_4DE934  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_405CB1  +
mov ecx [edi+68h] +
mov [ebp-44h] eax +
test ecx ecx +
jz loc_405D4C  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D4C  +
lea edx [ebp-44h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D4C  +
mov edx [ebp-44h] +
test edx edx +
jz loc_405D4C  +
cmp [edx] al +
jnz loc_405C8E  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+4] +
call loc_4031A0  +
jmp loc_405D4C  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405C93  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
mov ecx [ebp-4Ch] +
push edx  +
lea ecx [ecx+4] +
call loc_4031A0  +
jmp loc_405D4C  +
mov edx offset aIsshelltool +
lea ecx [ebp-28h] +
call sub_4075C0  +
test al al +
jz loc_405D4C  +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
mov byte ptr [ebp-4] 1 +
mov ecx [edi+68h] +
mov dword ptr [ebp-50h] 0 +
test ecx ecx +
jz loc_405D2E  +
mov eax [edi+28h] +
test eax eax +
jz loc_405D2E  +
lea edx [ebp-50h] +
push edx  +
push dword ptr [ebx]  +
push esi  +
push 1  +
push ecx  +
call eax  +
add esp 14h +
test eax eax +
jnz loc_405D2E  +
mov edx [ebp-50h] +
test edx edx +
jz loc_405D2E  +
cmp [edx] al +
jnz loc_405D13  +
xor ecx ecx +
jmp loc_405D24  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_405D18  +
sub ecx esi +
mov esi [ebp-48h] +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_4031A0  +
mov edx offset aTrue +
lea ecx [ebp-40h] +
call sub_4075C0  +
mov ecx [ebp-4Ch] +
mov [ecx+0C4h] al +
lea ecx [ebp-40h] +
call sub_402F10  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
add ebx 4 +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_405D6B  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
test ebx ebx +
jnz loc_4057F4  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7931  +
mov eax large fs:0 +
push eax  +
sub esp 0A4h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov [ebp-0A8h] edi +
mov esi ecx +
mov [ebp-0A4h] esi +
mov [ebp-0ACh] esi +
mov dword ptr [ebp-0B0h] 0 +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [edi+8Ch] 0 +
jnz loc_405E40  +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
push offset unk_4DE8C5  +
mov byte ptr [esi] 0 +
call loc_4031A0  +
mov ecx [ebp-2Ch] +
cmp ecx 10h +
jb loc_4060E3  +
inc ecx  +
push ecx  +
jmp loc_4060D8  +
cmp dword ptr [edi+0A4h] 0 +
lea eax [edi+94h] +
jbe loc_4060C3  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_4032A0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-58h] +
push 1  +
push offset asc_4DE95C  +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
call loc_4031A0  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-88h] +
push 4  +
push offset a_bat  +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
call loc_4031A0  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-70h] +
push 4  +
push offset a_exe  +
mov dword ptr [ebp-5Ch] 0Fh +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-70h] 0 +
call loc_4031A0  +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-28h] +
cmp dword ptr [ebp-14h] 10h +
mov ebx 2 +
push 2Eh  +
cmovnb eax [ebp-28h] +
push eax  +
call loc_48C750  +
add esp 8 +
test eax eax +
jz loc_405F74  +
push 0  +
push offset unk_4DE8C5  +
call loc_4031A0  +
mov edi [ebp-0A8h] +
mov esi [ebp-0A4h] +
cmp dword ptr [ebp-18h] 0 +
jz loc_406030  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-40h] +
call loc_4032A0  +
lea eax [edi+7Ch] +
push eax  +
lea edx [ebp-58h] +
lea ecx [ebp-0A0h] +
call sub_407600  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 5 +
call loc_406B30  +
mov byte ptr [ebp-4] 4 +
mov eax [ebp-8Ch] +
cmp eax 10h +
jb loc_405FD6  +
inc eax  +
lea ecx [ebp-0A0h] +
push eax  +
push dword ptr [ebp-0A0h]  +
call loc_403650  +
cmp dword ptr [edi+74h] 0 +
lea eax [edi+64h] +
jbe loc_406011  +
push eax  +
mov edx offset a_ +
lea ecx [ebp-0A0h] +
call loc_407710  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 6 +
call loc_406B30  +
lea ecx [ebp-0A0h] +
call sub_402F10  +
jmp loc_406030  +
cmp byte ptr [edi+0C4h] 0 +
lea ecx [ebp-40h] +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-88h] +
jnz loc_40602A  +
lea eax [ebp-70h] +
push eax  +
call loc_406B30  +
mov eax [ebp-5Ch] +
cmp eax 10h +
jb loc_406045  +
inc eax  +
lea ecx [ebp-70h] +
push eax  +
push dword ptr [ebp-70h]  +
call loc_403650  +
mov eax [ebp-74h] +
mov dword ptr [ebp-5Ch] 0Fh +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-70h] 0 +
cmp eax 10h +
jb loc_406072  +
inc eax  +
lea ecx [ebp-88h] +
push eax  +
push dword ptr [ebp-88h]  +
call loc_403650  +
mov eax [ebp-44h] +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
cmp eax 10h +
jb loc_40609C  +
inc eax  +
lea ecx [ebp-58h] +
push eax  +
push dword ptr [ebp-58h]  +
call loc_403650  +
mov eax [ebp-14h] +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
cmp eax 10h +
jb loc_4060C3  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
lea eax [ebp-40h] +
mov ecx esi +
push eax  +
call sub_402F50  +
mov eax [ebp-2Ch] +
cmp eax 10h +
jb loc_4060E3  +
inc eax  +
push eax  +
push dword ptr [ebp-40h]  +
lea ecx [ebp-40h] +
call loc_403650  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7968  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] 0 +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 0 +
mov ecx [esi+68h] +
test ecx ecx +
jz loc_40620F  +
mov eax [esi+24h] +
test eax eax +
jz loc_40620F  +
lea edx [ebp+var_2C] +
push edx  +
push offset aAdobeBridgetal  +
push 1  +
push ecx  +
call eax  +
add esp 10h +
test eax eax +
jnz loc_4061FA  +
mov eax [ebp+var_2C] +
test eax eax +
jz loc_4061FA  +
nop   +
mov eax [eax] +
test eax eax +
jz loc_4061FA  +
mov edx [esi+68h] +
mov [ebp+var_30] 0 +
test edx edx +
jz loc_4061E4  +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_4061E4  +
lea edi [ebp+var_30] +
push edi  +
push eax  +
push offset aAdobeBridgetal  +
push 1  +
push edx  +
call ecx  +
add esp 14h +
test eax eax +
jnz loc_4061E4  +
mov edx [ebp+var_30] +
test edx edx +
jz loc_4061E4  +
cmp [edx] al +
jz loc_4061DA  +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4061D1  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
call sub_406230  +
mov eax [ebp+var_2C] +
add eax 4 +
mov [ebp+var_2C] eax +
jnz loc_406190  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40620F  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B79B0  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_44] ecx +
mov esi [ebp+arg_0] +
mov [ebp+var_54] 0 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
push 1  +
push offset asc_4DE990  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_4031A0  +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea edx [ebp+var_54] +
mov ecx esi +
call sub_40AF20  +
mov byte ptr [ebp+var_4] 0 +
add esp 4 +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_4062CC  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov ebx [ebp+var_50] +
mov eax 2AAAAAABh +
mov edi [ebp+var_54] +
mov ecx ebx +
sub ecx edi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 6 +
jb loc_4063D6  +
push ecx  +
lea edx [edi+48h] +
lea ecx [ebp+var_40] +
call sub_407820  +
mov edx eax +
lea eax [edi+60h] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea ecx [ebp+var_28] +
call sub_4076E0  +
add esp 8 +
mov ebx eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_44] +
add ecx 10h +
push ebx  +
call sub_4082E0  +
mov esi eax +
mov eax [ebp+var_44] +
cmp esi [eax+10h] +
jz loc_40635C  +
cmp dword ptr [esi+24h] 10h +
lea eax [esi+10h] +
lea edx [eax+10h] +
jb loc_40633B  +
mov eax [eax] +
cmp dword ptr [ebx+14h] 10h +
jb loc_406345  +
mov ecx [ebx] +
jmp loc_406347  +
mov ecx ebx +
push dword ptr [edx]  +
mov edx [ebx+10h] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jns loc_406383  +
mov eax [ebp+var_44] +
push ecx  +
lea ecx [ebp+var_44] +
mov [ebp+var_44] ebx +
push ecx  +
lea ebx [eax+10h] +
push ecx  +
mov ecx ebx +
call sub_408620  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+var_44] +
push eax  +
call sub_4086D0  +
mov esi [ebp+var_44] +
push [ebp+var_44]  +
lea eax [edi+78h] +
push eax  +
push ecx  +
lea eax [ebp+var_48] +
push eax  +
lea ecx [esi+28h] +
call sub_407B30  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_4063AC  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov eax [ebp+var_2C] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_4063D3  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov ebx [ebp+var_50] +
test edi edi +
jz loc_406407  +
push [ebp+var_44]  +
mov edx ebx +
push ecx  +
mov ecx edi +
call loc_407E30  +
mov ecx [ebp+var_4C] +
mov eax 2AAAAAABh +
sub ecx edi +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push edi  +
call loc_406C30  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_40647E  +
push [ebp+var_4]  +
mov edx [edi+4] +
push ecx  +
call loc_407E30  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_406C30  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7A02  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+4] +
mov edi [ebp+arg_0] +
cmp edi ecx +
jnb loc_40650C  +
mov eax [esi] +
cmp eax edi +
ja loc_40650C  +
sub edi eax +
mov eax 88888889h +
imul  edi +
add edx edi +
sar edx 6 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ecx [esi+8] +
jnz loc_4064E9  +
push ecx  +
mov ecx esi +
call loc_406870  +
mov eax [esi] +
mov edx edi +
mov ecx [esi+4] +
shl edx 4 +
sub edx edi +
mov [ebp+arg_0] ecx +
mov [ebp+var_10] ecx +
lea eax [eax+edx*8] +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_406533  +
push eax  +
jmp loc_40652E  +
cmp ecx [esi+8] +
jnz loc_406519  +
push ecx  +
mov ecx esi +
call loc_406870  +
mov ecx [esi+4] +
mov [ebp+arg_0] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 1 +
test ecx ecx +
jz loc_406533  +
push edi  +
call sub_4023E0  +
add dword ptr [esi+4] 78h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7A20  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
mov [ebp-1Ch] edi +
mov ebx [ebp+8] +
cmp edi ebx +
jz loc_4066A1  +
mov esi [ebx] +
mov eax [ebx+4] +
cmp esi eax +
jnz loc_4065B5  +
mov ebx [edi+4] +
mov esi [edi] +
cmp esi ebx +
jz loc_4065AE  +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi ebx +
jnz loc_4065A0  +
mov eax [edi] +
jmp loc_40669E  +
mov ecx eax +
mov eax 88888889h +
sub ecx esi +
imul  ecx +
add edx ecx +
mov ecx [edi+4] +
sub ecx [edi] +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-14h] eax +
mov eax 88888889h +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-18h] eax +
cmp [ebp-14h] eax +
ja loc_406648  +
mov eax [edi] +
mov ecx esi +
mov edx [ebx+4] +
mov byte ptr [ebp-14h] 0 +
push dword ptr [ebp-14h]  +
push eax  +
call loc_407CC0  +
mov esi eax +
add esp 8 +
mov eax [edi+4] +
cmp esi eax +
jz loc_406622  +
mov ebx eax +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi ebx +
jnz loc_406611  +
mov ebx [ebp+8] +
mov ecx [ebx+4] +
mov eax 88888889h +
sub ecx [ebx] +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov ecx eax +
shl ecx 4 +
sub ecx eax +
mov eax [edi] +
lea eax [eax+ecx*8] +
jmp loc_40669E  +
mov ecx [edi+8] +
mov eax 88888889h +
sub ecx [edi] +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp [ebp-14h] eax +
ja loc_4066B7  +
mov eax [ebp-18h] +
mov ecx [ebx] +
shl eax 4 +
sub eax [ebp-18h] +
mov byte ptr [ebp+8] 0 +
push dword ptr [ebp+8]  +
push dword ptr [edi]  +
lea esi [esi+eax*8] +
mov edx esi +
call loc_407CC0  +
mov edx [ebx+4] +
add esp 4 +
mov byte ptr [ebp+8] 0 +
push dword ptr [ebp+8]  +
push ecx  +
push dword ptr [edi+4]  +
mov ecx esi +
call loc_408940  +
add esp 10h +
mov [edi+4] eax +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [edi] +
test eax eax +
jz loc_4066E7  +
push dword ptr [edi+4]  +
push eax  +
call sub_403100  +
mov esi [edi] +
mov eax 88888889h +
mov ecx [edi+8] +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4035E0  +
mov ecx [ebx+4] +
mov eax 88888889h +
sub ecx [ebx] +
imul  ecx +
add edx ecx +
mov ecx edi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
call loc_406910  +
test al al +
jz loc_4066A1  +
mov dword ptr [ebp-4] 0 +
mov edx [ebx+4] +
push ecx  +
mov byte ptr [ebp+8] 0 +
push dword ptr [ebp+8]  +
push ecx  +
push dword ptr [edi]  +
mov ecx [ebx] +
jmp loc_406696  +
***
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi] 0 +
jnz loc_40675A  +
xor edx edx +
push edx  +
push esi  +
call loc_4031A0  +
pop esi  +
pop ebp  +
retn 4  +
mov edx esi +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_406760  +
sub edx edi +
pop edi  +
push edx  +
push esi  +
call loc_4031A0  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebx] +
test esi esi +
jz loc_4067D8  +
push edi  +
mov edi [ebx+4] +
cmp esi edi +
jz loc_4067A4  +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 0C8h +
cmp esi edi +
jnz loc_406792  +
mov esi [ebx] +
mov eax 51EB851Fh +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406D30  +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebx  +
mov ebx ecx +
mov eax 51EB851Fh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_40685A  +
sub esi [ebx] +
mov eax 51EB851Fh +
imul  esi +
push edi  +
sar edx 6 +
mov eax 147AE14h +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_40685F  +
sub ecx [ebx] +
mov eax 51EB851Fh +
imul  ecx +
xor ecx ecx +
inc edi  +
sar edx 6 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 147AE14h +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
cmp ecx edi +
cmovnb edi ecx +
mov ecx ebx +
push edi  +
call sub_406D90  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push ebx  +
mov ebx ecx +
mov eax 88888889h +
push esi  +
push edi  +
mov ecx [ebx+8] +
mov esi ecx +
mov edi [ebx+4] +
sub esi edi +
imul  esi +
add edx esi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_4068F1  +
mov esi [ebx] +
mov eax 88888889h +
sub edi esi +
imul  edi +
mov eax 2222222h +
add edx edi +
sar edx 6 +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_4068F7  +
sub ecx esi +
mov eax 88888889h +
imul  ecx +
inc edi  +
add edx ecx +
xor ecx ecx +
sar edx 6 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 2222222h +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
cmp ecx edi +
cmovnb edi ecx +
mov ecx ebx +
push edi  +
call loc_406ED0  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jnz loc_40693A  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp edi 2222222h +
ja loc_406964  +
push edi  +
call loc_407480  +
mov [esi] eax +
mov ecx edi +
mov [esi+4] eax +
mov eax [esi] +
shl ecx 4 +
sub ecx edi +
pop edi  +
lea eax [eax+ecx*8] +
mov [esi+8] eax +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp edx ebx +
push esi  +
mov esi ebx +
cmovb esi edx +
push edi  +
mov edi ecx +
test esi esi +
jz loc_4069E0  +
mov ecx [ebp+arg_0] +
sub esi 4 +
jb loc_4069A1  +
nop   +
mov eax [edi] +
cmp eax [ecx] +
jnz loc_4069A6  +
add edi 4 +
add ecx 4 +
sub esi 4 +
jnb loc_406990  +
cmp esi 0FFFFFFFCh +
jz loc_4069DA  +
mov al [edi] +
cmp al [ecx] +
jnz loc_4069D3  +
cmp esi 0FFFFFFFDh +
jz loc_4069DA  +
mov al [edi+1] +
cmp al [ecx+1] +
jnz loc_4069D3  +
cmp esi 0FFFFFFFEh +
jz loc_4069DA  +
mov al [edi+2] +
cmp al [ecx+2] +
jnz loc_4069D3  +
cmp esi 0FFFFFFFFh +
jz loc_4069DA  +
mov al [edi+3] +
cmp al [ecx+3] +
jz loc_4069DA  +
sbb eax eax +
or eax 1 +
jmp loc_4069DC  +
xor eax eax +
test eax eax +
jnz loc_4069F0  +
cmp ebx edx +
jbe loc_4069EC  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_406A65  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_406A1A  +
mov eax [esi] +
jmp loc_406A1C  +
mov eax esi +
cmp ebx eax +
jb loc_406A65  +
cmp ecx 10h +
jb loc_406A29  +
mov edx [esi] +
jmp loc_406A2B  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_406A65  +
cmp ecx 10h +
jb loc_406A4F  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_406B30  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call loc_406B30  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
mov eax edx +
mov ecx [ebp+0Ch] +
not eax  +
cmp eax ecx +
jbe loc_406B0F  +
push edi  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_406B06  +
cmp edi 0FFFFFFFEh +
ja loc_406B19  +
cmp [esi+14h] edi +
jnb loc_406AAB  +
push edx  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_406B06  +
cmp dword ptr [esi+14h] 10h +
jb loc_406AD2  +
mov edx [esi] +
jmp loc_406AD4  +
test edi edi +
jnz loc_406AA1  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_406AC6  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_406AE8  +
mov eax [esi+10h] +
push ecx  +
add eax edx +
push ebx  +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_406B00  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_406C09  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
mov eax edx +
not eax  +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_406C13  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_406C00  +
cmp edi 0FFFFFFFEh +
ja loc_406C1D  +
cmp [esi+14h] edi +
jnb loc_406BA0  +
push edx  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_406C00  +
cmp dword ptr [ebx+14h] 10h +
jb loc_406B96  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_406BC7  +
mov edx [esi] +
jmp loc_406BC9  +
test edi edi +
jnz loc_406B8E  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_406BBB  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_406BE2  +
mov eax [ebp+0Ch] +
add eax ebx +
push ecx  +
push eax  +
mov eax [esi+10h] +
add eax edx +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_406BFA  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 0AAAAAAAh +
ja loc_406C74  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_406C67  +
test cl 1Fh +
jnz loc_406C79  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_406C7E  +
sub ecx eax +
cmp ecx 4 +
jb loc_406C83  +
cmp ecx 23h +
ja loc_406C88  +
mov ecx eax +
push ecx  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov edx [ebp+10h] +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
cmp eax [esi] +
jnz loc_406CBE  +
cmp edx esi +
jnz loc_406CBE  +
call sub_406FD0  +
mov eax [edi] +
pop edi  +
pop esi  +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp eax edx +
jz loc_406D1F  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_406D0B  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_406CEC  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_406D08  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_406CE0  +
jmp loc_406D08  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_406D08  +
cmp eax [edx+8] +
jnz loc_406D08  +
mov eax edx +
mov [ebp+0Ch] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_406CF5  +
mov [ebp+0Ch] edx +
push ecx  +
lea eax [ebp-4] +
mov ecx edi +
push eax  +
call loc_407050  +
mov eax [ebp+0Ch] +
cmp eax [ebp+10h] +
jnz loc_406CC2  +
mov ecx [ebp+8] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 147AE14h +
ja loc_406D74  +
imul eax eax +
cmp eax 1000h +
jb loc_406D67  +
test cl 1Fh +
jnz loc_406D79  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_406D7E  +
sub ecx eax +
cmp ecx 4 +
jb loc_406D83  +
cmp ecx 23h +
ja loc_406D88  +
mov ecx eax +
push ecx  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push 0FFFFFFFFh  +
push offset loc_4B7A40  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_406DC8  +
xor edi edi +
jmp loc_406E0C  +
cmp eax 147AE14h +
jbe loc_406DD4  +
call sub_489DDA  +
imul eax eax +
cmp eax 1000h +
jb loc_406E01  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_406DED  +
call sub_489DDA  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_406E0C  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 0 +
mov edx [ebx+4] +
push ecx  +
mov byte ptr [ebp+var_18] 0 +
push [ebp+var_18]  +
mov [ebp+var_14] edi +
push ecx  +
mov ecx [ebx] +
push edi  +
call loc_408A60  +
mov eax [ebx+4] +
add esp 10h +
mov esi [ebx] +
mov ecx eax +
mov [ebp+var_14] eax +
sub ecx esi +
mov eax 51EB851Fh +
imul  ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp+var_18] eax +
test esi esi +
jz loc_406E88  +
cmp esi [ebp+var_14] +
jz loc_406E69  +
mov eax [esi] +
mov ecx esi +
push 0  +
call dword ptr [eax]  +
add esi 0C8h +
cmp esi [ebp+var_14] +
jnz loc_406E56  +
mov esi [ebx] +
mov eax 51EB851Fh +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406D30  +
imul eax [ebp+arg_0] +
add eax edi +
mov [ebx+8] eax +
imul eax [ebp+var_18] +
add eax edi +
mov [ebx+4] eax +
mov [ebx] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7A60  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
push dword ptr [ebp+8]  +
call loc_407480  +
mov dword ptr [ebp-4] 0 +
mov edx [edi+4] +
push ecx  +
mov byte ptr [ebp-18h] 0 +
push dword ptr [ebp-18h]  +
mov [ebp-14h] eax +
push ecx  +
mov ecx [edi] +
push eax  +
call loc_408940  +
mov ebx [edi+4] +
mov eax 88888889h +
mov esi [edi] +
mov ecx ebx +
sub ecx esi +
add esp 10h +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-18h] eax +
test esi esi +
jz loc_406F7F  +
cmp esi ebx +
jz loc_406F5E  +
mov ecx esi +
call sub_40A870  +
add esi 78h +
cmp esi ebx +
jnz loc_406F50  +
mov esi [edi] +
mov eax 88888889h +
mov ecx [edi+8] +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4035E0  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
shl eax 4 +
sub eax [ebp+8] +
lea eax [ecx+eax*8] +
mov [edi+8] eax +
mov eax [ebp-18h] +
shl eax 4 +
sub eax [ebp-18h] +
lea eax [ecx+eax*8] +
mov [edi+4] eax +
mov [edi] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B76A0  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx] +
mov edi [eax+4] +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_407029  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_4074F0  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_40A870  +
push edi  +
call sub_47BF70  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_407004  +
mov eax [ebx] +
mov [eax+4] eax +
mov eax [ebx] +
mov [eax] eax +
mov eax [ebx] +
mov [eax+8] eax +
mov dword ptr [ebx+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx esi +
push edi  +
mov [ebp-4] ecx +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4070AD  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40708C  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4070AA  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4070A8  +
cmp esi [eax+8] +
jnz loc_4070A8  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407095  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_4070BA  +
mov edi [ebx+8] +
jmp loc_4070D2  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4070C7  +
mov edi ecx +
jmp loc_4070D2  +
mov edi [esi+8] +
cmp esi ebx +
jnz loc_407157  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebx+4] +
jnz loc_4070DE  +
mov [edi+4] edx +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_4070ED  +
mov [eax+4] edi +
jmp loc_4070F8  +
cmp [edx] ebx +
jnz loc_4070F5  +
mov [edx] edi +
jmp loc_4070F8  +
mov [edx+8] edi +
mov eax [ebp-4] +
mov esi [eax] +
cmp [esi] ebx +
jnz loc_407124  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_40710B  +
mov ecx edx +
jmp loc_407122  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40711F  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407115  +
mov eax [ebp-4] +
mov [esi] ecx +
mov esi [eax] +
cmp [esi+8] ebx +
jnz loc_4071B0  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_40713C  +
mov ecx edx +
mov [esi+8] ecx +
jmp loc_4071B0  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407152  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407147  +
mov [esi+8] ecx +
jmp loc_4071B0  +
mov [ecx+4] esi +
mov eax [ebx] +
mov [esi] eax +
cmp esi [ebx+8] +
jnz loc_407167  +
mov edx esi +
jmp loc_407181  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_407173  +
mov [edi+4] edx +
mov [edx] edi +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+8] +
mov [eax+4] esi +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_407190  +
mov [eax+4] esi +
jmp loc_40719E  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_40719B  +
mov [eax] esi +
jmp loc_40719E  +
mov [eax+8] esi +
mov eax [ebx+4] +
mov [esi+4] eax +
mov al [ebx+0Ch] +
mov cl [esi+0Ch] +
mov [esi+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
mov esi [ebp-4] +
jnz loc_407326  +
mov eax [esi] +
cmp edi [eax+4] +
jz loc_407322  +
cmp byte ptr [edi+0Ch] 1 +
mov [ebp-0Ch] edx +
mov [ebp-8] edx +
mov [ebp-10h] edx +
jnz loc_407322  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_40729E  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_407239  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407211  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_407223  +
mov [eax+4] ecx +
jmp loc_407231  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40722E  +
mov [eax] ecx +
jmp loc_407231  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40730B  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_407258  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_407307  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40736E  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407282  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_407353  +
mov [eax+4] esi +
jmp loc_407362  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4072E8  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4072BF  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_4072D1  +
mov [eax+4] ecx +
jmp loc_4072E0  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4072DE  +
mov [eax+8] ecx +
jmp loc_4072E0  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40730B  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4073CC  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4073CC  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov ecx [ebp-0Ch] +
mov edx [edx+4] +
mov edi [ebp-8] +
cmp ecx [eax+4] +
jnz loc_4071D0  +
mov edi [ebp-10h] +
mov byte ptr [edi+0Ch] 1 +
lea ecx [ebx+10h] +
call sub_40A870  +
push ebx  +
call sub_47BF70  +
mov eax [esi+4] +
add esp 4 +
mov ecx [ebp+0Ch] +
test eax eax +
jz loc_407345  +
dec eax  +
mov [esi+4] eax +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_407360  +
mov [eax+8] esi +
jmp loc_407362  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407392  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_4073AC  +
mov [eax+4] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_4073BF  +
mov [eax] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40741F  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4073F2  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_407407  +
mov [eax+4] esi +
jmp loc_407415  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_407412  +
mov [eax] esi +
jmp loc_407415  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407442  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_40745D  +
mov [eax+4] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_407473  +
mov [eax+8] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_407322  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_407490  +
mov eax ecx +
pop ebp  +
retn 4  +
***
cmp ecx 2222222h +
ja loc_4074D7  +
mov eax ecx +
shl eax 4 +
sub eax ecx +
shl eax 3 +
cmp eax 1000h +
jb loc_4074C8  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_4074DC  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_488C2D  +
add esp 4 +
mov ecx eax +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
call sub_489DDA  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_407528  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_4074F0  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_40A870  +
push edi  +
call sub_47BF70  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_407503  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B7A88  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_4079A0  +
mov [esi] eax +
mov [ebp+var_4] 0 +
mov ebx [ebp+arg_4] +
mov edi [ebp+arg_0] +
cmp edi ebx +
jz loc_4075A8  +
mov ecx [ebp+var_10] +
mov esi [esi] +
push edi  +
call sub_408370  +
push eax  +
add eax 10h +
push eax  +
push esi  +
mov esi [ebp+var_10] +
lea eax [ebp+var_14] +
push eax  +
mov ecx esi +
call sub_408400  +
add edi 78h +
cmp edi ebx +
jnz loc_407582  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
cmp byte ptr [edx] 0 +
push esi  +
jnz loc_4075CA  +
xor esi esi +
jmp loc_4075DA  +
mov esi edx +
push edi  +
lea edi [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_4075D0  +
sub esi edi +
pop edi  +
cmp dword ptr [ecx+14h] 10h +
lea eax [ecx+10h] +
jb loc_4075E5  +
mov ecx [ecx] +
push esi  +
push edx  +
mov edx [eax] +
call sub_406970  +
add esp 8 +
test eax eax +
setz al  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7AC9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40765C  +
mov eax [esi] +
jmp loc_40765E  +
mov eax esi +
mov byte ptr [eax] 0 +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax [ebx+10h] +
mov edi [esi+10h] +
add eax [ecx+10h] +
mov [ebp+var_10] 1 +
cmp edi eax +
ja loc_4076A5  +
cmp [esi+14h] eax +
jz loc_4076A5  +
push 1  +
push eax  +
mov ecx esi +
call sub_4036A0  +
test al al +
jz loc_4076A5  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40769F  +
mov eax [esi] +
jmp loc_4076A1  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call loc_406B30  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call loc_406B30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov ecx edx +
mov [ebp+var_4] esi +
call loc_406B30  +
push eax  +
mov ecx esi +
call sub_402F50  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7AC9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp-14h] esi +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40776C  +
mov eax [esi] +
jmp loc_40776E  +
mov eax esi +
mov byte ptr [eax] 0 +
mov dword ptr [ebp-4] 0 +
cmp byte ptr [edi] 0 +
mov dword ptr [ebp-10h] 1 +
jnz loc_407788  +
xor ecx ecx +
jmp loc_407799  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_407790  +
sub ecx edx +
mov eax [ebp+8] +
mov ebx [esi+10h] +
mov eax [eax+10h] +
add eax ecx +
cmp ebx eax +
ja loc_4077CE  +
cmp [esi+14h] eax +
jz loc_4077CE  +
push 1  +
push eax  +
mov ecx esi +
call sub_4036A0  +
test al al +
jz loc_4077CE  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ebx +
jb loc_4077C8  +
mov eax [esi] +
jmp loc_4077CA  +
mov eax esi +
mov byte ptr [eax+ebx] 0 +
cmp byte ptr [edi] 0 +
jnz loc_4077D7  +
xor ecx ecx +
jmp loc_4077E9  +
mov ecx edi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4077E0  +
sub ecx edx +
push ecx  +
push edi  +
mov ecx esi +
call loc_406A00  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp+8]  +
mov ecx esi +
call loc_406B30  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7AC9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40787C  +
mov eax [esi] +
jmp loc_40787E  +
mov eax esi +
mov byte ptr [eax] 0 +
mov [ebp+var_4] 0 +
mov eax [ebx+10h] +
mov edi [esi+10h] +
inc eax  +
mov [ebp+var_10] 1 +
cmp edi eax +
ja loc_4078C0  +
cmp [esi+14h] eax +
jz loc_4078C0  +
push 1  +
push eax  +
mov ecx esi +
call sub_4036A0  +
test al al +
jz loc_4078C0  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4078BA  +
mov eax [esi] +
jmp loc_4078BC  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call loc_406B30  +
push 1  +
push offset asc_4DE990  +
mov ecx esi +
call loc_406A00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push [ebp+arg_4]  +
mov eax [edi] +
mov esi [ebx] +
push esi  +
push dword ptr [eax+4]  +
call sub_407D70  +
mov [esi+4] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov edx [ebx] +
mov ecx [edx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_407986  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407961  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407957  +
mov [edx] ecx +
mov edx [ebx] +
mov ecx [edx+4] +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40797C  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407971  +
pop edi  +
pop esi  +
mov [edx+8] ecx +
pop ebx  +
pop ebp  +
retn 8  +
mov [edx] edx +
mov eax [ebx] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax+8] eax +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz loc_4079B3  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_4079BC  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_4079C5  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7AF0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_1C] ecx +
mov [ebp+var_4] 0 +
xor dl dl +
mov edi [ecx] +
mov al 1 +
mov ebx [ebp+arg_8] +
mov [ebp+var_11] dl +
mov byte ptr [ebp+var_15] al +
mov esi [edi+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_407A51  +
mov edi esi +
test dl dl +
jz loc_407A33  +
push ebx  +
lea ecx [esi+10h] +
call sub_40ADC0  +
test al al +
setz al  +
jmp loc_407A3E  +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
call sub_40ADC0  +
mov dl [ebp+var_11] +
mov byte ptr [ebp+var_15] al +
test al al +
jz loc_407A4C  +
mov esi [esi] +
jmp loc_407A17  +
mov esi [esi+8] +
jmp loc_407A17  +
mov esi edi +
test al al +
jz loc_407ADD  +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
cmp edi [eax] +
jnz loc_407A93  +
push [ebp+arg_C]  +
push ebx  +
push edi  +
push 1  +
lea eax [ebp+arg_8] +
push eax  +
call loc_407EC0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_407A9E  +
mov esi [edi+8] +
jmp loc_407ADD  +
mov eax [edi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407ABE  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407ADD  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407AB1  +
jmp loc_407ADD  +
mov eax [edi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407AD6  +
cmp esi [eax] +
jnz loc_407AD6  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407AC7  +
cmp byte ptr [esi+0Dh] 0 +
cmovz esi eax +
push ebx  +
lea ecx [esi+10h] +
call sub_40ADC0  +
test al al +
jz loc_407AFA  +
push [ebp+arg_C]  +
mov ecx [ebp+var_1C] +
push ebx  +
push edi  +
push [ebp+var_15]  +
jmp loc_407A6B  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4B7B10  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx ecx +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0 +
mov al 1 +
mov ecx [edx] +
mov ebx ecx +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_14] al +
mov esi [ecx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_407BC7  +
nop   +
cmp dword ptr [esi+24h] 10h +
lea eax [esi+10h] +
mov ebx esi +
lea edx [eax+10h] +
jb loc_407B90  +
mov eax [eax] +
cmp dword ptr [edi+14h] 10h +
jb loc_407B9A  +
mov ecx [edi] +
jmp loc_407B9C  +
mov ecx edi +
push dword ptr [edx]  +
mov edx [edi+10h] +
push eax  +
call sub_406970  +
shr eax 1Fh +
add esp 8 +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_407BB8  +
mov esi [esi] +
jmp loc_407BBB  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_407B80  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_18] +
mov esi ebx +
test al al +
jz loc_407C4C  +
cmp ebx [ecx] +
jnz loc_407C02  +
push [ebp+arg_C]  +
mov ecx edx +
push edi  +
push ebx  +
push 1  +
lea eax [ebp+arg_8] +
push eax  +
call loc_4080D0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp byte ptr [ebx+0Dh] 0 +
jz loc_407C0D  +
mov esi [ebx+8] +
jmp loc_407C4C  +
mov eax [ebx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407C2D  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407C4C  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407C20  +
jmp loc_407C4C  +
mov eax [ebx+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407C45  +
cmp esi [eax] +
jnz loc_407C45  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407C36  +
cmp byte ptr [esi+0Dh] 0 +
cmovz esi eax +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
jb loc_407C59  +
mov eax [edi] +
jmp loc_407C5B  +
mov eax edi +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
jb loc_407C66  +
mov ecx [ecx] +
push dword ptr [edi+10h]  +
mov edx [edx] +
push eax  +
call sub_406970  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_407C94  +
push [ebp+arg_C]  +
mov ecx [ebp+var_18] +
push edi  +
push ebx  +
push [ebp+var_14]  +
jmp loc_407BDA  +
push 0  +
push 0  +
call sub_48D64F  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax edx +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_407D62  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
lea esi [ecx+30h] +
lea edi [ebx+30h] +
lea eax [esi-30h] +
cmp ebx eax +
jz loc_407CF6  +
push 0FFFFFFFFh  +
push 0  +
lea eax [esi-30h] +
mov ecx ebx +
push eax  +
call loc_4032A0  +
lea ecx [esi-18h] +
lea eax [edi-18h] +
cmp eax ecx +
jz loc_407D10  +
push 0FFFFFFFFh  +
push 0  +
lea eax [esi-18h] +
push eax  +
lea ecx [edi-18h] +
call loc_4032A0  +
cmp edi esi +
jz loc_407D20  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call loc_4032A0  +
lea eax [esi+18h] +
lea ecx [edi+18h] +
cmp ecx eax +
jz loc_407D34  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea eax [esi+30h] +
lea ecx [edi+30h] +
cmp ecx eax +
jz loc_407D48  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
add esi 78h +
add ebx 78h +
add edi 78h +
lea ecx [esi-30h] +
cmp ecx [ebp-4] +
jnz loc_407CE0  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7B30  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407DF9  +
add eax 10h +
push eax  +
call sub_4089E0  +
mov ecx [ebp+arg_0] +
mov ebx eax +
mov eax [ebp+arg_4] +
mov [ebx+4] eax +
mov al [ecx+0Ch] +
mov [ebx+0Ch] al +
cmp byte ptr [edi+0Dh] 0 +
mov [ebp+var_4] 0 +
push [ebp+arg_8]  +
cmovnz edi ebx +
push ebx  +
push dword ptr [ecx]  +
mov ecx esi +
mov [ebp+arg_4] edi +
call sub_407D70  +
mov [ebx] eax +
mov ecx esi +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push ebx  +
push dword ptr [eax+8]  +
call sub_407D70  +
mov [ebx+8] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_407E77  +
div  dword ptr [ebp-37h] +
pop edi  +
pop esi  +
retn   +
***
mov eax [ebp+arg_4] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_407E91  +
mov eax [eax] +
mov ecx [ebp+arg_0] +
push esi  +
cmp dword ptr [ecx+14h] 10h +
lea esi [ecx+10h] +
jb loc_407EA0  +
mov ecx [ecx] +
push dword ptr [edx]  +
mov edx [esi] +
push eax  +
call sub_406970  +
add esp 8 +
shr eax 1Fh +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4] 1E1E1E0h +
jnb loc_4080B6  +
push dword ptr [ebp+14h]  +
call sub_408370  +
inc dword ptr [edi+4]  +
mov ebx eax +
mov ecx [ebp+10h] +
mov [ebx+4] ecx +
mov edx [edi] +
cmp ecx edx +
jnz loc_407EF8  +
mov [edx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
jmp loc_407F14  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_407F0A  +
mov [ecx] ebx +
mov eax [edi] +
cmp ecx [eax] +
jnz loc_407F17  +
mov [eax] ebx +
jmp loc_407F17  +
mov [ecx+8] ebx +
mov eax [edi] +
cmp ecx [eax+8] +
jnz loc_407F17  +
mov [eax+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4080A2  +
push esi  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_407FE2  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_407FE8  +
cmp eax [ecx+8] +
jnz loc_407F83  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_407F5E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_407F70  +
mov [ecx+4] edx +
jmp loc_407F7E  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_407F7B  +
mov [ecx] edx +
jmp loc_407F7E  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_407FAD  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_407FC5  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_408091  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_407FD8  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_408091  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_408091  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_408005  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_408094  +
cmp eax [ecx] +
jnz loc_408045  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40801E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_408030  +
mov [ecx+4] edx +
jmp loc_40803F  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40803D  +
mov [ecx+8] edx +
jmp loc_40803F  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40806F  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_408081  +
mov [ecx+4] esi +
jmp loc_40808F  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40808C  +
mov [ecx] esi +
jmp loc_40808F  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_407F27  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push offset aMapSetTTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4] 6666665h +
jnb loc_4082C6  +
push dword ptr [ebp+14h]  +
call sub_408FA0  +
inc dword ptr [edi+4]  +
mov ebx eax +
mov ecx [ebp+10h] +
mov [ebx+4] ecx +
mov edx [edi] +
cmp ecx edx +
jnz loc_408108  +
mov [edx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
jmp loc_408124  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_40811A  +
mov [ecx] ebx +
mov eax [edi] +
cmp ecx [eax] +
jnz loc_408127  +
mov [eax] ebx +
jmp loc_408127  +
mov [ecx+8] ebx +
mov eax [edi] +
cmp ecx [eax+8] +
jnz loc_408127  +
mov [eax+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4082B2  +
push esi  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_4081F2  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_4081F8  +
cmp eax [ecx+8] +
jnz loc_408193  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40816E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_408180  +
mov [ecx+4] edx +
jmp loc_40818E  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_40818B  +
mov [ecx] edx +
jmp loc_40818E  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4081BD  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_4081D5  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_4082A1  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4081E8  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_4082A1  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_4082A1  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_408215  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_4082A4  +
cmp eax [ecx] +
jnz loc_408255  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40822E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_408240  +
mov [ecx+4] edx +
jmp loc_40824F  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40824D  +
mov [ecx+8] edx +
jmp loc_40824F  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40827F  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_408291  +
mov [ecx+4] esi +
jmp loc_40829F  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40829C  +
mov [ecx] esi +
jmp loc_40829F  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_408137  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push offset aMapSetTTooLong  +
call sub_489DF7  +
push ebx  +
mov ebx [ecx] +
push esi  +
mov esi [ebx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_408330  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
jb loc_408301  +
mov eax [edi] +
jmp loc_408303  +
mov eax edi +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
jb loc_40830E  +
mov ecx [ecx] +
push dword ptr [edi+10h]  +
mov edx [edx] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jns loc_408325  +
mov esi [esi+8] +
jmp loc_408329  +
mov ebx esi +
mov esi [esi] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4082F4  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp dword ptr [edx+14h] 10h +
push esi  +
lea esi [edx+10h] +
jb loc_40834C  +
mov edx [edx] +
cmp dword ptr [ecx+14h] 10h +
lea eax [ecx+10h] +
jb loc_408357  +
mov ecx [ecx] +
push dword ptr [esi]  +
push edx  +
mov edx [eax] +
call sub_406970  +
add esp 8 +
shr eax 1Fh +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7B61  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_408B00  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
mov [ebp+var_18] ecx +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_4083CB  +
push [ebp+arg_0]  +
call sub_4023E0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B7B80  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [edi+4] 0 +
jnz loc_408463  +
push [ebp+arg_C]  +
push ecx  +
push dword ptr [edi]  +
push 1  +
mov ecx edi +
mov esi [ebp+arg_0] +
push esi  +
call loc_408C00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ecx [edi] +
mov eax [ebp+arg_4] +
mov ebx [ebp+arg_8] +
cmp eax [ecx] +
jnz loc_40848B  +
add eax 10h +
mov ecx ebx +
push eax  +
call sub_40ADC0  +
test al al +
jz loc_4085CC  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_4]  +
jmp loc_408440  +
cmp eax ecx +
jnz loc_4084B0  +
mov ecx [ecx+8] +
add ecx 10h +
push ebx  +
call sub_40ADC0  +
test al al +
jz loc_4085CC  +
push [ebp+arg_C]  +
mov eax [edi] +
push ecx  +
push dword ptr [eax+8]  +
push 0  +
jmp loc_408442  +
add eax 10h +
mov ecx ebx +
push eax  +
call sub_40ADC0  +
test al al +
jz loc_40853C  +
mov eax [ebp+arg_4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4084CD  +
mov esi [eax+8] +
jmp loc_40850E  +
mov esi [eax] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4084ED  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40850E  +
nop   +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4084E0  +
jmp loc_40850E  +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408505  +
cmp eax [ecx] +
jnz loc_408505  +
mov eax ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_4084F6  +
cmp byte ptr [eax+0Dh] 0 +
mov esi eax +
cmovz esi ecx +
push ebx  +
lea ecx [esi+10h] +
call sub_40ADC0  +
test al al +
jz loc_40853C  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx edi +
jz loc_408532  +
push esi  +
push 0  +
jmp loc_408444  +
push [ebp+arg_4]  +
push 1  +
jmp loc_408444  +
mov eax [ebp+arg_4] +
push ebx  +
lea ecx [eax+10h] +
call sub_40ADC0  +
test al al +
jz loc_4085CC  +
mov eax [ebp+arg_4] +
mov esi eax +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408597  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40857C  +
mov esi ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408597  +
nop   +
mov esi ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_408570  +
jmp loc_408597  +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408595  +
cmp esi [ecx+8] +
jnz loc_408595  +
mov esi ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_408585  +
mov esi ecx +
cmp esi [edi] +
jz loc_4085AD  +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
call sub_40ADC0  +
test al al +
jz loc_4085CC  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [ecx+0Dh] 0 +
mov ecx edi +
jz loc_4085C4  +
push eax  +
push 0  +
jmp loc_408444  +
push esi  +
push 1  +
jmp loc_408444  +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push ebx  +
push ecx  +
push eax  +
mov ecx edi +
call sub_408E20  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4B7BB9  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_408B40  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea edi [esi+10h] +
mov word ptr [esi+0Ch] 0 +
mov [ebp+var_18] edi +
mov [ebp+var_1C] edi +
mov byte ptr [ebp+var_4] 1 +
test edi edi +
jz loc_40869D  +
mov eax [ebp+arg_4] +
mov ecx edi +
push dword ptr [eax]  +
call sub_402F50  +
add edi 18h +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+arg_4] edi +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
call sub_4095D0  +
mov [edi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B7BE0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_408734  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebx] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_40879D  +
cmp dword ptr [esi+24h] 10h +
lea ecx [esi+10h] +
lea edx [ecx+10h] +
jb loc_40874B  +
mov ecx [ecx] +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+14h] 10h +
jb loc_408758  +
mov edi [eax] +
jmp loc_40875A  +
mov edi eax +
push dword ptr [edx]  +
mov edx [eax+10h] +
push ecx  +
mov ecx edi +
call sub_406970  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_4088FD  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 1  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp esi edi +
jnz loc_4087E0  +
mov esi [edi+8] +
push [ebp+arg_8]  +
lea eax [esi+10h] +
push eax  +
call sub_407E80  +
test al al +
jz loc_4088FD  +
push [ebp+arg_C]  +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx ebx +
push 0  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
lea eax [esi+10h] +
push eax  +
push ebx  +
call sub_407E80  +
test al al +
jz loc_408864  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_408BA0  +
push ebx  +
mov ebx [ebp+var_14] +
lea eax [ebx+10h] +
push eax  +
call sub_407E80  +
test al al +
jz loc_408861  +
mov eax [ebx+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_40883F  +
mov esi [ebp+arg_0] +
push ebx  +
push 0  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+arg_8] +
push ebx  +
lea eax [esi+10h] +
push eax  +
call sub_407E80  +
test al al +
jz loc_4088FD  +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_403A00  +
mov ebx [ebp+var_14] +
cmp ebx edi +
jz loc_408898  +
lea eax [ebx+10h] +
push eax  +
push [ebp+arg_8]  +
call sub_407E80  +
test al al +
jz loc_4088FD  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx [ebp+var_1C] +
jz loc_4088CA  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov esi [ebp+arg_0] +
push ebx  +
push 1  +
push esi  +
call loc_409060  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_408B80  +
push 0  +
push 0  +
call sub_48D64F  +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
mov ecx [ebp+var_1C] +
push eax  +
call sub_409280  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7C11  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx edx +
mov esi ecx +
mov edi [ebp+8] +
mov [ebp-14h] edi +
mov dword ptr [ebp-4] 0 +
cmp esi ebx +
jz loc_4089BE  +
mov [ebp-18h] edi +
mov byte ptr [ebp-4] 1 +
test edi edi +
jz loc_408997  +
push esi  +
mov ecx edi +
call sub_4023E0  +
add edi 78h +
mov byte ptr [ebp-4] 0 +
mov [ebp+8] edi +
add esi 78h +
jmp loc_408980  +
***
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7C30  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_408B40  +
push [ebp+arg_0]  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
push ecx  +
call sub_409420  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7C61  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx edx +
mov esi ecx +
mov edi [ebp+8] +
mov [ebp-14h] edi +
mov dword ptr [ebp-4] 0 +
cmp esi ebx +
jz loc_408AE4  +
mov [ebp-18h] edi +
mov byte ptr [ebp-4] 1 +
test edi edi +
jz loc_408AB7  +
push esi  +
mov ecx edi +
call sub_405090  +
add edi 0C8h +
mov byte ptr [ebp-4] 0 +
mov [ebp+8] edi +
add esi 0C8h +
jmp loc_408AA0  +
***
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 88h  +
mov edi ecx +
call sub_488C2D  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_408B1B  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_408B26  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_408B31  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push 30h  +
mov edi ecx +
call sub_488C2D  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_408B58  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_408B63  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_408B6E  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push ecx  +
lea ecx [esi+10h] +
call sub_403AA0  +
push esi  +
call sub_47BF70  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408BB2  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
***
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408BD3  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408BF9  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408BC3  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408BF1  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_408BF1  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_408BE0  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408BFB  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 1E1E1E0h +
jnb loc_408DF4  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_408C37  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_408C56  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_408C49  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_408C56  +
mov [ecx] ebx +
jmp loc_408C56  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_408C56  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_408DDF  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_408D20  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_408D26  +
cmp eax [ecx+8] +
jnz loc_408CC1  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408C9C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_408CAE  +
mov [ecx+4] edx +
jmp loc_408CBC  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_408CB9  +
mov [ecx] edx +
jmp loc_408CBC  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408CEB  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_408D03  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_408DCF  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_408D16  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_408DCF  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_408DCF  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_408D43  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_408DD2  +
cmp eax [ecx] +
jnz loc_408D83  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408D5C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_408D6E  +
mov [ecx+4] edx +
jmp loc_408D7D  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_408D7B  +
mov [ecx+8] edx +
jmp loc_408D7D  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_408DAD  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_408DBF  +
mov [ecx+4] esi +
jmp loc_408DCD  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_408DCA  +
mov [ecx] esi +
jmp loc_408DCD  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_408C65  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [ebp+18h] +
lea ecx [esi+10h] +
call sub_40A870  +
push esi  +
call sub_47BF70  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_489DF7  +
push 0FFFFFFFFh  +
push offset loc_4B7C80  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_1C] ecx +
mov [ebp+var_4] 0 +
xor dl dl +
mov edi [ecx] +
mov al 1 +
mov ebx [ebp+arg_8] +
mov [ebp+var_11] dl +
mov byte ptr [ebp+var_15] al +
mov esi [edi+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_408EA1  +
mov edi esi +
test dl dl +
jz loc_408E83  +
push ebx  +
lea ecx [esi+10h] +
call sub_40ADC0  +
test al al +
setz al  +
jmp loc_408E8E  +
lea eax [esi+10h] +
mov ecx ebx +
push eax  +
call sub_40ADC0  +
mov dl [ebp+var_11] +
mov byte ptr [ebp+var_15] al +
test al al +
jz loc_408E9C  +
mov esi [esi] +
jmp loc_408E67  +
mov esi [esi+8] +
jmp loc_408E67  +
mov esi edi +
test al al +
jz loc_408F2D  +
mov ecx [ebp+var_1C] +
mov eax [ecx] +
cmp edi [eax] +
jnz loc_408EE3  +
push [ebp+arg_C]  +
push ecx  +
push edi  +
push 1  +
lea eax [ebp+arg_8] +
push eax  +
call loc_408C00  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_408EEE  +
mov esi [edi+8] +
jmp loc_408F2D  +
mov eax [edi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408F0E  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408F2D  +
mov esi eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408F01  +
jmp loc_408F2D  +
mov eax [edi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408F26  +
cmp esi [eax] +
jnz loc_408F26  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408F17  +
cmp byte ptr [esi+0Dh] 0 +
cmovz esi eax +
push ebx  +
lea ecx [esi+10h] +
call sub_40ADC0  +
test al al +
jz loc_408F4A  +
push [ebp+arg_C]  +
push ecx  +
mov ecx [ebp+var_1C] +
push edi  +
push [ebp+var_15]  +
jmp loc_408EBB  +
mov edi [ebp+arg_C] +
lea ecx [edi+10h] +
call sub_40A870  +
push edi  +
call sub_47BF70  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4B7CB1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_4093E0  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
mov [ebp+var_18] ecx +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_40902A  +
mov dword ptr [ecx+10h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+14h] 0Fh +
cmp dword ptr [ecx+14h] 10h +
mov dword ptr [ecx+10h] 0 +
jb loc_409019  +
mov eax [ecx] +
jmp loc_40901B  +
mov eax ecx +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 5555554h +
jnb loc_409254  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_409097  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_4090B6  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_4090A9  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_4090B6  +
mov [ecx] ebx +
jmp loc_4090B6  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_4090B6  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40923F  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_409180  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_409186  +
cmp eax [ecx+8] +
jnz loc_409121  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4090FC  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_40910E  +
mov [ecx+4] edx +
jmp loc_40911C  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_409119  +
mov [ecx] edx +
jmp loc_40911C  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40914B  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_409163  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_40922F  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_409176  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_40922F  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_40922F  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_4091A3  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_409232  +
cmp eax [ecx] +
jnz loc_4091E3  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4091BC  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_4091CE  +
mov [ecx+4] edx +
jmp loc_4091DD  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_4091DB  +
mov [ecx+8] edx +
jmp loc_4091DD  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40920D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_40921F  +
mov [ecx+4] esi +
jmp loc_40922D  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40922A  +
mov [ecx] esi +
jmp loc_40922D  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_4090C5  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [ebp+18h] +
push ecx  +
lea ecx [esi+10h] +
call sub_403AA0  +
push esi  +
call sub_47BF70  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_489DF7  +
push 0FFFFFFFFh  +
push offset loc_4B7CD0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx ecx +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0 +
mov al 1 +
mov ecx [edx] +
mov ebx ecx +
mov edi [ebp+arg_8] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_14] al +
mov esi [ecx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_409317  +
nop   +
cmp dword ptr [esi+24h] 10h +
lea eax [esi+10h] +
mov ebx esi +
lea edx [eax+10h] +
jb loc_4092E0  +
mov eax [eax] +
cmp dword ptr [edi+14h] 10h +
jb loc_4092EA  +
mov ecx [edi] +
jmp loc_4092EC  +
mov ecx edi +
push dword ptr [edx]  +
mov edx [edi+10h] +
push eax  +
call sub_406970  +
shr eax 1Fh +
add esp 8 +
mov byte ptr [ebp+var_14] al +
test al al +
jz loc_409308  +
mov esi [esi] +
jmp loc_40930B  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4092D0  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_18] +
mov esi ebx +
mov [ebp+arg_8] esi +
test al al +
jz loc_409360  +
cmp ebx [ecx] +
jnz loc_409355  +
push [ebp+arg_C]  +
push ecx  +
push ebx  +
push 1  +
mov ecx edx +
lea eax [ebp+arg_8] +
push eax  +
call loc_409060  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
lea ecx [ebp+arg_8] +
call loc_408BA0  +
mov esi [ebp+arg_8] +
cmp dword ptr [edi+14h] 10h +
lea ecx [esi+10h] +
lea eax [edi+10h] +
jb loc_40936E  +
mov edi [edi] +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
jb loc_409379  +
mov ecx [ecx] +
push dword ptr [eax]  +
mov edx [edx] +
push edi  +
call sub_406970  +
shr eax 1Fh +
add esp 8 +
test al al +
jz loc_4093AB  +
push [ebp+arg_C]  +
push ecx  +
mov ecx [ebp+var_18] +
push ebx  +
push [ebp+var_14]  +
jmp loc_40932D  +
push dword ptr [ebp+14h]  +
call sub_408B80  +
push 0  +
push 0  +
call sub_48D64F  +
mov edi [ebp+arg_C] +
push ecx  +
lea ecx [edi+10h] +
call sub_403AA0  +
push edi  +
call sub_47BF70  +
mov eax [ebp+arg_0] +
add esp 4 +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 28h  +
mov edi ecx +
call sub_488C2D  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4093F8  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_409403  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_40940E  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7D09  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_4094A4  +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_40947C  +
mov eax [edi] +
jmp loc_40947E  +
mov eax edi +
mov esi [ebp+arg_4] +
mov ecx edi +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov byte ptr [eax] 0 +
call loc_4032A0  +
lea ecx [edi+18h] +
mov byte ptr [ebp+var_4] 1 +
push ecx  +
lea eax [esi+18h] +
mov [ebp+arg_4] ecx +
push eax  +
call sub_4094C0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B7D38  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_4095D0  +
mov [esi] eax +
mov [ebp+var_4] 0 +
mov ecx esi +
mov byte ptr [ebp+var_4] 1 +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
call sub_409550  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push [ebp+arg_4]  +
mov eax [edi] +
mov esi [ebx] +
push esi  +
push dword ptr [eax+4]  +
call sub_409600  +
mov [esi+4] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov edx [ebx] +
mov ecx [edx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4095B6  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_409591  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_409587  +
mov [edx] ecx +
mov edx [ebx] +
mov ecx [edx+4] +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4095AC  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4095A1  +
pop edi  +
pop esi  +
mov [edx+8] ecx +
pop ebx  +
pop ebp  +
retn 8  +
mov [edx] edx +
mov eax [ebx] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax+8] eax +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz loc_4095E0  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_4095E9  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_4095F2  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7D60  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_409689  +
add eax 10h +
push eax  +
call sub_408FA0  +
mov ecx [ebp+arg_0] +
mov ebx eax +
mov eax [ebp+arg_4] +
mov [ebx+4] eax +
mov al [ecx+0Ch] +
mov [ebx+0Ch] al +
cmp byte ptr [edi+0Dh] 0 +
mov [ebp+var_4] 0 +
push [ebp+arg_8]  +
cmovnz edi ebx +
push ebx  +
push dword ptr [ecx]  +
mov ecx esi +
mov [ebp+arg_4] edi +
call sub_409600  +
mov [ebx] eax +
mov ecx esi +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push ebx  +
push dword ptr [eax+8]  +
call sub_409600  +
mov [ebx+8] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 18h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
add ecx 30h +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [ebp+var_4] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4DE9E8 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4DE9E8 +
jz loc_4097AD  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push esi  +
mov esi ecx +
lea ecx [esi+4] +
call sub_40A870  +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_4DE9E8 +
jz loc_409A35  +
push 7Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7DD6  +
mov eax large fs:0 +
push eax  +
sub esp 88h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+8] +
xor eax eax +
xor ecx ecx +
mov [ebp-94h] eax +
mov [ebp-90h] ecx +
mov [ebp-8Ch] eax +
mov [ebp-4] ecx +
mov esi [edi] +
cmp esi [edi+4] +
jz loc_409AF7  +
add ebx 4 +
push esi  +
lea ecx [ebp-88h] +
call sub_4023E0  +
lea eax [ebp-88h] +
mov byte ptr [ebp-4] 1 +
push eax  +
mov ecx ebx +
call sub_40ACB0  +
test al al +
jz loc_409AD4  +
lea eax [ebp-88h] +
push eax  +
lea ecx [ebp-94h] +
call sub_406490  +
lea ecx [ebp-88h] +
mov byte ptr [ebp-4] 0 +
call sub_40A870  +
add esi 78h +
cmp esi [edi+4] +
jnz loc_409AA0  +
mov ecx [ebp-90h] +
mov eax [ebp-94h] +
sub ecx eax +
mov eax 88888889h +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_409B20  +
lea eax [ebp-94h] +
mov ecx edi +
push eax  +
call loc_406550  +
mov bl 1 +
jmp loc_409B22  +
xor bl bl +
lea ecx [ebp-94h] +
call sub_4030A0  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B7E7B  +
mov eax large fs:0 +
push eax  +
sub esp 0F8h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_D8] ebx +
xor edi edi +
mov [ebp+var_DC] eax +
mov [ebp+var_E8] ebx +
mov [ebp+var_E4] edi +
mov [ebp+var_E0] ebx +
lea eax [ecx+4] +
mov [ebp+var_4] edi +
lea ecx [ebp+var_28] +
mov [ebp+var_EC] eax +
push ecx  +
mov ecx eax +
call sub_409700  +
push eax  +
lea ecx [ebp+var_F8] +
mov byte ptr [ebp+var_4] 1 +
call sub_4097C0  +
mov byte ptr [ebp+var_4] bl +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_409BE2  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov ecx [ebp+var_DC] +
mov esi [ecx] +
cmp esi [ecx+4] +
jz loc_409DA1  +
push esi  +
lea ecx [ebp+var_D0] +
call sub_4023E0  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea ecx [ebp+var_D0] +
call sub_4096C0  +
mov edi eax +
mov ecx [ebp+var_EC] +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 3 +
or ebx 1 +
push eax  +
mov [ebp+var_D8] ebx +
call sub_4096C0  +
mov [ebp+var_4] 4 +
lea ecx [edi+10h] +
or ebx 2 +
cmp dword ptr [edi+14h] 10h +
mov [ebp+var_D8] ebx +
jb loc_409C4B  +
mov edi [edi] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_409C56  +
mov eax [eax] +
push dword ptr [ecx]  +
mov edx [edx] +
mov ecx eax +
push edi  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_409CE0  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_D0] +
call sub_409700  +
mov [ebp+var_4] 5 +
lea ecx [ebp+var_104] +
or ebx 4 +
push eax  +
mov [ebp+var_D8] ebx +
call sub_4097C0  +
mov ecx [ebp+var_F8] +
cmp ecx [eax] +
jnz loc_409CE0  +
mov ecx [eax+4] +
mov edx [ebp+var_F4] +
cmp edx ecx +
jz loc_409CBB  +
cmp edx 1869Fh +
jz loc_409CBB  +
cmp ecx 1869Fh +
jnz loc_409CE0  +
mov eax [eax+8] +
mov ecx [ebp+var_F0] +
cmp ecx eax +
jz loc_409CD7  +
cmp ecx 1869Fh +
jz loc_409CD7  +
cmp eax 1869Fh +
jnz loc_409CE0  +
mov [ebp+var_D1] 1 +
jmp loc_409CE7  +
mov [ebp+var_D1] 0 +
test bl 4 +
jz loc_409D16  +
mov eax [ebp+var_2C] +
and ebx 0FFFFFFFBh +
cmp eax 10h +
jb loc_409D04  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov eax [ebp+var_14] +
and ebx 0FFFFFFFDh +
cmp eax 10h +
jb loc_409D2E  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov [ebp+var_4] 2 +
and ebx 0FFFFFFFEh +
mov eax [ebp+var_44] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_409D5F  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_403650  +
cmp [ebp+var_D1] 0 +
jz loc_409D7A  +
lea eax [ebp+var_D0] +
push eax  +
lea ecx [ebp+var_E8] +
call sub_406490  +
lea ecx [ebp+var_D0] +
mov byte ptr [ebp+var_4] 0 +
call sub_40A870  +
mov ecx [ebp+var_DC] +
add esi 78h +
cmp esi [ecx+4] +
jnz loc_409BF3  +
mov edi [ebp+var_E4] +
sub edi [ebp+var_E8] +
mov eax 88888889h +
imul  edi +
add edx edi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_409DCC  +
lea eax [ebp+var_E8] +
push eax  +
call loc_406550  +
mov bl 1 +
jmp loc_409DCE  +
xor bl bl +
lea ecx [ebp+var_E8] +
call sub_4030A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+7Ch] +
call sub_40A870  +
lea ecx [esi+4] +
call sub_40A870  +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_4DE9E8 +
jz loc_409E30  +
push 0F4h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B7F45  +
mov eax large fs:0 +
push eax  +
sub esp 118h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov [ebp+var_10C] edx +
mov ecx [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_108] ebx +
xor eax eax +
xor edi edi +
mov [ebp+var_124] ecx +
mov [ebp+var_118] eax +
mov [ebp+var_114] edi +
mov [ebp+var_110] eax +
mov [ebp+var_4] edi +
mov esi [ecx] +
cmp esi [ecx+4] +
jz loc_40A0F6  +
lea eax [edx+4] +
mov [ebp+var_11C] eax +
push esi  +
lea ecx [ebp+var_100] +
call sub_4023E0  +
lea eax [ebp+var_88] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea ecx [ebp+var_100] +
call sub_4096C0  +
mov edi eax +
mov ecx [ebp+var_11C] +
lea eax [ebp+var_70] +
mov byte ptr [ebp+var_4] 2 +
or ebx 1 +
push eax  +
mov [ebp+var_108] ebx +
call sub_4096C0  +
mov [ebp+var_4] 3 +
lea ecx [edi+10h] +
or ebx 2 +
cmp dword ptr [edi+14h] 10h +
mov [ebp+var_108] ebx +
jb loc_409F0F  +
mov edi [edi] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_409F1A  +
mov eax [eax] +
push dword ptr [ecx]  +
mov edx [edx] +
mov ecx eax +
push edi  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_409FCB  +
mov eax [ebp+var_10C] +
lea ecx [ebp+var_58] +
push ecx  +
lea ecx [eax+7Ch] +
call sub_402260  +
or ebx 4 +
mov [ebp+var_4] 4 +
cmp dword ptr [eax+10h] 0 +
mov [ebp+var_108] ebx +
mov [ebp+var_120] ebx +
jz loc_409FCB  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_100] +
call sub_402260  +
mov edi eax +
mov ecx [ebp+var_10C] +
lea eax [ebp+var_28] +
mov [ebp+var_4] 5 +
or ebx 8 +
push eax  +
mov [ebp+var_108] ebx +
lea ecx [ecx+7Ch] +
call sub_402260  +
mov ebx [ebp+var_120] +
lea ecx [edi+10h] +
or ebx 18h +
cmp dword ptr [edi+14h] 10h +
jb loc_409FA6  +
mov edi [edi] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_409FB1  +
mov eax [eax] +
push dword ptr [ecx]  +
mov edx [edx] +
mov ecx eax +
push edi  +
call sub_406970  +
add esp 8 +
mov [ebp+var_101] 1 +
test eax eax +
jz loc_409FD2  +
mov [ebp+var_101] 0 +
test bl 10h +
jz loc_40A001  +
mov eax [ebp+var_14] +
and ebx 0FFFFFFEFh +
cmp eax 10h +
jb loc_409FEF  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
test bl 8 +
jz loc_40A030  +
mov eax [ebp+var_2C] +
and ebx 0FFFFFFF7h +
cmp eax 10h +
jb loc_40A01E  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
test bl 4 +
jz loc_40A05F  +
mov eax [ebp+var_44] +
and ebx 0FFFFFFFBh +
cmp eax 10h +
jb loc_40A04D  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_403650  +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
mov eax [ebp+var_5C] +
and ebx 0FFFFFFFDh +
cmp eax 10h +
jb loc_40A077  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_403650  +
mov [ebp+var_4] 1 +
and ebx 0FFFFFFFEh +
mov eax [ebp+var_74] +
mov [ebp+var_5C] 0Fh +
mov [ebp+var_60] 0 +
mov byte ptr [ebp+var_70] 0 +
cmp eax 10h +
jb loc_40A0AE  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_403650  +
cmp [ebp+var_101] 0 +
jz loc_40A0C9  +
lea eax [ebp+var_100] +
push eax  +
lea ecx [ebp+var_118] +
call sub_406490  +
lea ecx [ebp+var_100] +
mov byte ptr [ebp+var_4] 0 +
call sub_40A870  +
mov ecx [ebp+var_124] +
add esi 78h +
cmp esi [ecx+4] +
jnz loc_409EB4  +
mov edi [ebp+var_114] +
mov eax [ebp+var_118] +
sub edi eax +
mov eax 88888889h +
imul  edi +
add edx edi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_40A11D  +
lea eax [ebp+var_118] +
push eax  +
call loc_406550  +
mov bl 1 +
jmp loc_40A11F  +
xor bl bl +
lea ecx [ebp+var_118] +
call sub_4030A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B7FA1  +
mov eax large fs:0 +
push eax  +
sub esp 158h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx [ebp+8] +
xor eax eax +
mov [ebp-13Ch] edx +
xor ebx ebx +
mov [ebp-138h] eax +
mov [ebp-134h] eax +
mov dword ptr [ebp-0A4h] 0Fh +
mov [ebp-0A8h] eax +
mov [ebp-0B8h] al +
mov dword ptr [ebp-8Ch] 0Fh +
mov [ebp-90h] eax +
mov [ebp-0A0h] al +
mov dword ptr [ebp-74h] 0Fh +
mov [ebp-78h] eax +
mov [ebp-88h] al +
mov dword ptr [ebp-5Ch] 0Fh +
mov [ebp-60h] eax +
mov [ebp-70h] al +
mov dword ptr [ebp-44h] 0Fh +
mov [ebp-48h] eax +
mov [ebp-58h] al +
mov [ebp-4] ebx +
mov [ebp-14Ch] ebx +
mov [ebp-148h] ebx +
mov [ebp-144h] ebx +
mov byte ptr [ebp-4] 1 +
mov esi [edx] +
cmp esi [edx+4] +
jz loc_40A42C  +
lea eax [ecx+4] +
mov [ebp-140h] eax +
xor bl bl +
lea ecx [ebp-14Ch] +
call sub_4030A0  +
lea ecx [ebp-0B8h] +
call sub_40A870  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8043  +
mov eax large fs:0 +
push eax  +
sub esp 100h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov [ebp+var_104] edx +
mov ecx [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_F0] ebx +
xor eax eax +
xor edi edi +
mov [ebp+var_10C] ecx +
mov [ebp+var_FC] eax +
mov [ebp+var_F8] edi +
mov [ebp+var_F4] eax +
mov [ebp+var_4] edi +
mov esi [ecx] +
cmp esi [ecx+4] +
jz loc_40A6C2  +
lea eax [edx+4] +
mov [ebp+var_100] eax +
push esi  +
lea ecx [ebp+var_E8] +
call sub_4023E0  +
lea eax [ebp+var_70] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea ecx [ebp+var_E8] +
call sub_4096C0  +
mov edi eax +
mov ecx [ebp+var_100] +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
or ebx 1 +
push eax  +
mov [ebp+var_F0] ebx +
call sub_4096C0  +
or ebx 2 +
mov [ebp+var_4] 3 +
cmp dword ptr [edi+14h] 10h +
lea ecx [edi+10h] +
mov [ebp+var_F0] ebx +
mov [ebp+var_108] ebx +
jb loc_40A542  +
mov edi [edi] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40A54D  +
mov eax [eax] +
push dword ptr [ecx]  +
mov edx [edx] +
mov ecx eax +
push edi  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_40A5CC  +
lea eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_E8] +
call sub_409740  +
mov edi eax +
mov ecx [ebp+var_104] +
lea eax [ebp+var_28] +
mov [ebp+var_4] 4 +
or ebx 4 +
push eax  +
mov [ebp+var_F0] ebx +
lea ecx [ecx+7Ch] +
call sub_409740  +
mov ebx [ebp+var_108] +
lea ecx [edi+10h] +
or ebx 0Ch +
cmp dword ptr [edi+14h] 10h +
jb loc_40A5A7  +
mov edi [edi] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40A5B2  +
mov eax [eax] +
push dword ptr [ecx]  +
mov edx [edx] +
mov ecx eax +
push edi  +
call sub_406970  +
add esp 8 +
mov [ebp+var_E9] 1 +
test eax eax +
jz loc_40A5D3  +
mov [ebp+var_E9] 0 +
test bl 8 +
jz loc_40A602  +
mov eax [ebp+var_14] +
and ebx 0FFFFFFF7h +
cmp eax 10h +
jb loc_40A5F0  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
test bl 4 +
jz loc_40A631  +
mov eax [ebp+var_2C] +
and ebx 0FFFFFFFBh +
cmp eax 10h +
jb loc_40A61F  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov eax [ebp+var_44] +
and ebx 0FFFFFFFDh +
cmp eax 10h +
jb loc_40A649  +
inc eax  +
lea ecx [ebp+var_58] +
push eax  +
push [ebp+var_58]  +
call loc_403650  +
mov [ebp+var_4] 1 +
and ebx 0FFFFFFFEh +
mov eax [ebp+var_5C] +
mov [ebp+var_44] 0Fh +
mov [ebp+var_48] 0 +
mov byte ptr [ebp+var_58] 0 +
cmp eax 10h +
jb loc_40A67A  +
inc eax  +
lea ecx [ebp+var_70] +
push eax  +
push [ebp+var_70]  +
call loc_403650  +
cmp [ebp+var_E9] 0 +
jz loc_40A695  +
lea eax [ebp+var_E8] +
push eax  +
lea ecx [ebp+var_FC] +
call sub_406490  +
lea ecx [ebp+var_E8] +
mov byte ptr [ebp+var_4] 0 +
call sub_40A870  +
mov ecx [ebp+var_10C] +
add esi 78h +
cmp esi [ecx+4] +
jnz loc_40A4E4  +
mov edi [ebp+var_F8] +
mov eax [ebp+var_FC] +
sub edi eax +
mov eax 88888889h +
imul  edi +
add edx edi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_40A6E9  +
lea eax [ebp+var_FC] +
push eax  +
call loc_406550  +
mov bl 1 +
jmp loc_40A6EB  +
xor bl bl +
lea ecx [ebp+var_FC] +
call sub_4030A0  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B80A4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40A771  +
mov eax [esi] +
jmp loc_40A773  +
mov eax esi +
mov byte ptr [eax] 0 +
lea eax [esi+18h] +
mov [ebp+var_4] 0 +
mov dword ptr [eax+14h] 0Fh +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_40A796  +
mov eax [eax] +
mov byte ptr [eax] 0 +
lea eax [esi+30h] +
mov dword ptr [eax+14h] 0Fh +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_40A7B2  +
mov eax [eax] +
mov byte ptr [eax] 0 +
lea eax [esi+48h] +
mov dword ptr [eax+14h] 0Fh +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_40A7CE  +
mov eax [eax] +
mov byte ptr [eax] 0 +
lea eax [esi+60h] +
mov dword ptr [eax+14h] 0Fh +
mov dword ptr [eax+10h] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_40A7EA  +
mov eax [eax] +
mov byte ptr [eax] 0 +
push [ebp+arg_0]  +
mov ecx esi +
mov byte ptr [ebp+var_4] 4 +
call sub_40A970  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+14h] 0Fh +
mov eax ecx +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
mov dword ptr [ecx+2Ch] 0Fh +
mov dword ptr [ecx+28h] 0 +
mov byte ptr [ecx+18h] 0 +
mov dword ptr [ecx+44h] 0Fh +
mov dword ptr [ecx+40h] 0 +
mov byte ptr [ecx+30h] 0 +
mov dword ptr [ecx+5Ch] 0Fh +
mov dword ptr [ecx+58h] 0 +
mov byte ptr [ecx+48h] 0 +
mov dword ptr [ecx+74h] 0Fh +
mov dword ptr [ecx+70h] 0 +
mov byte ptr [ecx+60h] 0 +
retn   +
***
mov eax [esi+74h] +
push edi  +
lea edi [esi+60h] +
cmp eax 10h +
jb loc_40A88A  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_403650  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_40A8A0  +
mov edi [edi] +
mov byte ptr [edi] 0 +
lea edi [esi+48h] +
mov eax [edi+14h] +
cmp eax 10h +
jb loc_40A8B9  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_403650  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_40A8CF  +
mov edi [edi] +
mov byte ptr [edi] 0 +
lea edi [esi+30h] +
mov eax [edi+14h] +
cmp eax 10h +
jb loc_40A8E8  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_403650  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_40A8FE  +
mov edi [edi] +
mov byte ptr [edi] 0 +
lea edi [esi+18h] +
mov eax [edi+14h] +
cmp eax 10h +
jb loc_40A917  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call loc_403650  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_40A92D  +
mov edi [edi] +
mov byte ptr [edi] 0 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40A943  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40A95F  +
mov eax [esi] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B7D90  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_2C] +
push 1  +
push offset byte_4DEA2C  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call loc_4031A0  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea edx [ebp+var_38] +
mov ecx esi +
call sub_40AF20  +
mov byte ptr [ebp+var_4] 0 +
add esp 4 +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_40AA0A  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_403650  +
mov ecx [ebp+var_34] +
mov eax 2AAAAAABh +
mov esi [ebp+var_38] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
dec eax  +
add eax edx +
cmp eax 3 +
ja loc_40AAD8  +
jmp ds:off_40AB28[eax*4]  +
cmp edi esi +
jz loc_40AAD8  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
jmp loc_40AAD3  +
cmp edi esi +
jz loc_40AA58  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call loc_4032A0  +
lea eax [esi+18h] +
lea ecx [edi+18h] +
jmp loc_40AACA  +
cmp edi esi +
jz loc_40AA70  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call loc_4032A0  +
lea eax [esi+18h] +
lea ecx [edi+18h] +
cmp ecx eax +
jz loc_40AA84  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea eax [esi+30h] +
lea ecx [edi+30h] +
jmp loc_40AACA  +
cmp edi esi +
jz loc_40AA9C  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
mov ecx edi +
call loc_4032A0  +
lea eax [esi+18h] +
lea ecx [edi+18h] +
cmp ecx eax +
jz loc_40AAB0  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea eax [esi+30h] +
lea ecx [edi+30h] +
cmp ecx eax +
jz loc_40AAC4  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea eax [esi+48h] +
lea ecx [edi+48h] +
cmp ecx eax +
jz loc_40AAD8  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
test esi esi +
jz loc_40AB0A  +
push [ebp+var_3C]  +
mov edx [ebp+var_34] +
push ecx  +
mov ecx esi +
call loc_407E30  +
mov ecx [ebp+var_30] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406C30  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B80F1  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
mov [ebp+var_2C] 0 +
mov [ebp+var_30] esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40AB9F  +
mov eax [esi] +
jmp loc_40ABA1  +
mov eax esi +
mov byte ptr [eax] 0 +
mov [ebp+var_4] 0 +
cmp dword ptr [edi+10h] 0 +
mov [ebp+var_2C] 1 +
jz loc_40AC8D  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov ecx esi +
call loc_406B30  +
cmp dword ptr [edi+28h] 0 +
lea eax [edi+18h] +
jz loc_40AC8D  +
push eax  +
mov edx offset byte_4DEA2C +
lea ecx [ebp+var_28] +
call loc_407710  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 1 +
call loc_406B30  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40AC12  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
cmp dword ptr [edi+40h] 0 +
lea eax [edi+30h] +
jz loc_40AC8D  +
push eax  +
mov edx offset byte_4DEA2C +
lea ecx [ebp+var_28] +
call loc_407710  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 2 +
call loc_406B30  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40AC58  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
add edi 48h +
cmp dword ptr [edi+10h] 0 +
jz loc_40AC8D  +
push edi  +
mov edx offset byte_4DEA2C +
lea ecx [ebp+var_28] +
call loc_407710  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 3 +
call loc_406B30  +
lea ecx [ebp+var_28] +
call sub_402F10  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_40ACCB  +
mov eax [esi] +
jmp loc_40ACCD  +
mov eax esi +
cmp dword ptr [edi+14h] 10h +
jb loc_40ACD5  +
mov ecx [edi] +
push dword ptr [esi+10h]  +
mov edx [edi+10h] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_40ADAA  +
lea eax [esi+18h] +
push eax  +
lea ecx [esp+2Ch+var_18] +
call sub_4097C0  +
lea ecx [edi+18h] +
mov ebx eax +
push ecx  +
lea ecx [esp+2Ch+var_C] +
call sub_4097C0  +
mov ecx [eax] +
cmp ecx [ebx] +
jnz loc_40ADAA  +
mov edx [eax+4] +
mov ecx [ebx+4] +
cmp edx ecx +
jz loc_40AD2C  +
cmp edx 1869Fh +
jz loc_40AD2C  +
cmp ecx 1869Fh +
jnz loc_40ADAA  +
mov ecx [eax+8] +
mov eax [ebx+8] +
cmp ecx eax +
jz loc_40AD45  +
cmp ecx 1869Fh +
jz loc_40AD45  +
cmp eax 1869Fh +
jnz loc_40ADAA  +
cmp dword ptr [esi+44h] 10h +
lea eax [esi+30h] +
lea ecx [edi+30h] +
lea ebx [eax+10h] +
jb loc_40AD56  +
mov eax [eax] +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
jb loc_40AD61  +
mov ecx [ecx] +
push dword ptr [ebx]  +
mov edx [edx] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_40ADAA  +
add esi 48h +
lea ecx [edi+48h] +
cmp dword ptr [esi+14h] 10h +
lea eax [esi+10h] +
jb loc_40AD83  +
mov esi [esi] +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
jb loc_40AD8E  +
mov ecx [ecx] +
push dword ptr [eax]  +
mov edx [edx] +
push esi  +
call sub_406970  +
add esp 8 +
test eax eax +
jnz loc_40ADAA  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_40ADDB  +
mov eax [esi] +
jmp loc_40ADDD  +
mov eax esi +
mov ebx [edi+14h] +
cmp ebx 10h +
jb loc_40ADE7  +
mov ecx [edi] +
push dword ptr [esi+10h]  +
mov edx [edi+10h] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jns loc_40AE05  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp ebx 10h +
jb loc_40AE0E  +
mov eax [edi] +
jmp loc_40AE10  +
mov eax edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40AE1A  +
mov ecx [esi] +
jmp loc_40AE1C  +
mov ecx esi +
push edx  +
mov edx [esi+10h] +
push eax  +
call sub_406970  +
add esp 8 +
test eax eax +
jns loc_40AE38  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
lea eax [edi+18h] +
push eax  +
lea ecx [esp+2Ch+var_C] +
call sub_4097C0  +
lea eax [esi+18h] +
push eax  +
lea ecx [esp+2Ch+var_18] +
call sub_4097C0  +
mov eax [esp+28h+var_18] +
cmp [esp+28h+var_C] eax +
mov eax [esp+28h+var_4] +
mov edx [esp+28h+var_8] +
mov ecx [esp+28h+var_10] +
mov ebx [esp+28h+var_14] +
jg loc_40AE88  +
mov esi [esp+28h+var_18] +
cmp [esp+28h+var_C] esi +
jl loc_40ADFA  +
cmp edx ebx +
jg loc_40AE88  +
jl loc_40ADFA  +
cmp eax ecx +
jl loc_40ADFA  +
mov esi [esp+28h+var_18] +
cmp esi [esp+28h+var_C] +
mov esi [ebp+arg_0] +
jg loc_40AEAC  +
mov esi [esp+28h+var_18] +
cmp esi [esp+28h+var_C] +
mov esi [ebp+arg_0] +
jl loc_40AE2D  +
cmp ebx edx +
jg loc_40AEAC  +
jl loc_40AE2D  +
cmp ecx eax +
jl loc_40AE2D  +
lea eax [edi+30h] +
lea edx [esi+30h] +
mov ecx eax +
call sub_408340  +
test al al +
jnz loc_40ADFA  +
lea edx [esi+30h] +
lea ecx [edi+30h] +
call sub_40AEF0  +
test al al +
jnz loc_40AE2D  +
lea edx [esi+48h] +
lea ecx [edi+48h] +
call sub_408340  +
pop edi  +
test al al +
pop esi  +
setnz al  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+14h] 10h +
mov eax edx +
push esi  +
lea esi [ecx+10h] +
jb loc_40AEFE  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40AF09  +
mov eax [eax] +
push dword ptr [esi]  +
mov edx [edx] +
push ecx  +
mov ecx eax +
call sub_406970  +
add esp 8 +
shr eax 1Fh +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8128  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push [ebp+var_30]  +
mov eax [ebp+arg_0] +
mov edx [esi+4] +
push ecx  +
mov ecx [esi] +
mov [ebp+var_34] eax +
call loc_407E30  +
mov eax [esi] +
mov [esi+4] eax +
mov ebx [edi+10h] +
lea eax [ebx+1] +
push eax  +
call sub_488C96  +
add esp 0Ch +
mov [ebp+var_30] eax +
cmp dword ptr [edi+14h] 10h +
jb loc_40AF82  +
mov edi [edi] +
push ebx  +
push edi  +
push eax  +
call loc_48C9C0  +
mov ecx [ebp+var_30] +
add esp 0Ch +
mov eax [ebp+var_34] +
mov byte ptr [ecx+ebx] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_40AF9F  +
mov eax [eax] +
push eax  +
push ecx  +
call sub_495961  +
mov edx eax +
add esp 8 +
test edx edx +
jz loc_40B08B  +
cmp byte ptr [edx] 0 +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
jnz loc_40AFCE  +
xor eax eax +
jmp loc_40AFDC  +
mov eax edx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40AFD3  +
sub eax edi +
push eax  +
push edx  +
lea ecx [ebp+var_2C] +
call loc_4031A0  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_2C] +
mov ebx [esi+4] +
cmp eax ebx +
jnb loc_40B031  +
mov eax [esi] +
lea ecx [ebp+var_2C] +
cmp eax ecx +
ja loc_40B031  +
sub ecx eax +
mov eax 2AAAAAABh +
imul  ecx +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ebx [esi+8] +
jnz loc_40B020  +
push ecx  +
mov ecx esi +
call loc_40BD60  +
mov eax [esi] +
lea ecx [edi+edi*2] +
lea eax [eax+ecx*8] +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40B04E  +
jmp loc_40B048  +
cmp ebx [esi+8] +
jnz loc_40B03E  +
push ecx  +
mov ecx esi +
call loc_40BD60  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40B04E  +
lea eax [ebp+var_2C] +
push eax  +
call sub_402F50  +
add dword ptr [esi+4] 18h +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_40B06E  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_403650  +
mov ecx [ebp+var_34] +
call sub_403130  +
push eax  +
push 0  +
call sub_495961  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_40AFB3  +
push [ebp+var_30]  +
call sub_488C91  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B8207  +
mov eax large fs:0 +
push eax  +
sub esp 13Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-144h] edx +
mov esi ecx +
mov [ebp-140h] esi +
mov [ebp-120h] esi +
mov eax [ebp+8] +
xor ebx ebx +
mov [ebp-124h] ebx +
mov [ebp-130h] eax +
mov eax [edx] +
mov edi [eax] +
mov [ebp-12Ch] edi +
mov [ebp-13Ch] edi +
cmp edi eax +
jz loc_40B4F5  +
lea eax [esi+10h] +
push eax  +
lea ecx [ebp-118h] +
call sub_40A720  +
mov ecx [ebp-130h] +
lea eax [ebp-0A0h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_4096C0  +
mov [ebp-128h] eax +
lea eax [ebp-88h] +
mov byte ptr [ebp-4] 2 +
or ebx 1 +
lea ecx [ebp-118h] +
push eax  +
mov [ebp-124h] ebx +
call sub_4096C0  +
mov ecx [ebp-128h] +
or ebx 2 +
mov dword ptr [ebp-4] 3 +
mov [ebp-124h] ebx +
mov [ebp-120h] ebx +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
mov [ebp-128h] edx +
jb loc_40B1D7  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40B1E2  +
mov eax [eax] +
mov edi [ebp-128h] +
mov edx [edx] +
push dword ptr [edi]  +
push ecx  +
mov ecx eax +
call sub_406970  +
mov edi [ebp-12Ch] +
add esp 8 +
test eax eax +
jnz loc_40B315  +
mov ecx [ebp-130h] +
lea eax [ebp-70h] +
push eax  +
call sub_409700  +
mov [ebp-128h] eax +
lea eax [ebp-58h] +
mov dword ptr [ebp-4] 4 +
or ebx 4 +
lea ecx [ebp-118h] +
push eax  +
mov [ebp-124h] ebx +
call sub_409700  +
mov ecx [ebp-128h] +
mov ebx [ebp-120h] +
mov dword ptr [ebp-4] 5 +
or ebx 0Ch +
mov [ebp-124h] ebx +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
mov [ebp-120h] edx +
jb loc_40B266  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40B271  +
mov eax [eax] +
mov edi [ebp-120h] +
mov edx [edx] +
push dword ptr [edi]  +
push ecx  +
mov ecx eax +
call sub_406970  +
mov edi [ebp-12Ch] +
add esp 8 +
test eax eax +
jnz loc_40B315  +
mov ecx [ebp-130h] +
lea eax [ebp-40h] +
push eax  +
call sub_409740  +
mov [ebp-120h] eax +
mov eax ebx +
mov dword ptr [ebp-4] 6 +
or eax 10h +
lea ecx [ebp-118h] +
mov [ebp-124h] eax +
lea eax [ebp-28h] +
push eax  +
call sub_409740  +
mov ecx [ebp-120h] +
or ebx 30h +
cmp dword ptr [ecx+14h] 10h +
lea edx [ecx+10h] +
mov [ebp-120h] edx +
jb loc_40B2E4  +
mov ecx [ecx] +
cmp dword ptr [eax+14h] 10h +
lea edx [eax+10h] +
jb loc_40B2EF  +
mov eax [eax] +
mov edi [ebp-120h] +
mov edx [edx] +
push dword ptr [edi]  +
push ecx  +
mov ecx eax +
call sub_406970  +
mov edi [ebp-12Ch] +
add esp 8 +
mov byte ptr [ebp-119h] 1 +
test eax eax +
jz loc_40B31C  +
mov byte ptr [ebp-119h] 0 +
test bl 20h +
jz loc_40B34B  +
mov eax [ebp-14h] +
and ebx 0FFFFFFDFh +
cmp eax 10h +
jb loc_40B339  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
test bl 10h +
jz loc_40B37A  +
mov eax [ebp-2Ch] +
and ebx 0FFFFFFEFh +
cmp eax 10h +
jb loc_40B368  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
test bl 8 +
jz loc_40B3A9  +
mov eax [ebp-44h] +
and ebx 0FFFFFFF7h +
cmp eax 10h +
jb loc_40B397  +
inc eax  +
lea ecx [ebp-58h] +
push eax  +
push dword ptr [ebp-58h]  +
call loc_403650  +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
test bl 4 +
jz loc_40B3D8  +
mov eax [ebp-5Ch] +
and ebx 0FFFFFFFBh +
cmp eax 10h +
jb loc_40B3C6  +
inc eax  +
lea ecx [ebp-70h] +
push eax  +
push dword ptr [ebp-70h]  +
call loc_403650  +
mov dword ptr [ebp-5Ch] 0Fh +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-70h] 0 +
mov eax [ebp-74h] +
and ebx 0FFFFFFFDh +
cmp eax 10h +
jb loc_40B3F6  +
inc eax  +
lea ecx [ebp-88h] +
push eax  +
push dword ptr [ebp-88h]  +
call loc_403650  +
mov dword ptr [ebp-4] 1 +
and ebx 0FFFFFFFEh +
mov eax [ebp-8Ch] +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
cmp eax 10h +
jb loc_40B433  +
inc eax  +
lea ecx [ebp-0A0h] +
push eax  +
push dword ptr [ebp-0A0h]  +
call loc_403650  +
cmp byte ptr [ebp-119h] 0 +
jnz loc_40B532  +
lea ecx [ebp-118h] +
mov byte ptr [ebp-4] 0 +
call sub_40A870  +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40B492  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40B474  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40B492  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40B468  +
jmp loc_40B492  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40B490  +
cmp esi [eax+8] +
jnz loc_40B490  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40B480  +
mov esi eax +
mov eax [ebp-138h] +
cmp esi eax +
jnz loc_40B160  +
push eax  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-138h] +
push dword ptr [eax]  +
lea eax [ebp-148h] +
push eax  +
call sub_403B50  +
push dword ptr [ebp-138h]  +
call sub_47BF70  +
add esp 4 +
lea ecx [ebp-13Ch] +
call loc_403A00  +
mov eax [ebp-144h] +
mov edi [ebp-13Ch] +
mov [ebp-12Ch] edi +
cmp edi [eax] +
jnz near ptr dword_40B130  +
mov esi [ebp-140h] +
push 0  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push offset unk_4DE8C5  +
mov byte ptr [esi] 0 +
call loc_4031A0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov esi [ebp-140h] +
add edi 10h +
push 0FFFFFFFFh  +
push 0  +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
lea ecx [ebp-118h] +
call sub_40A870  +
mov ecx [ebp-138h] +
lea eax [ebp-148h] +
push ecx  +
push dword ptr [ecx]  +
lea ecx [ebp-138h] +
push eax  +
call sub_403B50  +
push dword ptr [ebp-138h]  +
call sub_47BF70  +
add esp 4 +
jmp loc_40B514  +
***
push 0FFFFFFFFh  +
push offset loc_4B8251  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
mov [ebp+var_18] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+14h] 7 +
cmp dword ptr [edi+14h] 8 +
mov dword ptr [edi+10h] 0 +
jb loc_40B5EC  +
mov eax [edi] +
jmp loc_40B5EE  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_4] ecx +
cmp dword ptr [ebx+14h] 10h +
mov [ebp+var_10] 1 +
jb loc_40B607  +
mov eax [ebx] +
jmp loc_40B609  +
mov eax ebx +
push 0  +
push 0  +
push dword ptr [ebx+10h]  +
push eax  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jle loc_40B690  +
lea esi [eax+1] +
push esi  +
lea ecx [ebp+var_24] +
call loc_40BAB0  +
push esi  +
mov [ebp+var_4] 1 +
mov esi [ebp+var_24] +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [ebp+var_20] +
add esp 0Ch +
mov ecx [ebx+10h] +
sub eax esi +
sar eax 1 +
cmp dword ptr [ebx+14h] 10h +
mov [ebp+var_14] eax +
jb loc_40B659  +
mov ebx [ebx] +
push eax  +
push esi  +
push ecx  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jle loc_40B67B  +
mov eax [ebp+var_14] +
mov ecx edi +
dec eax  +
push eax  +
push esi  +
call loc_40BB60  +
test esi esi +
jz loc_40B690  +
mov eax [ebp+var_1C] +
lea ecx [ebp+var_24] +
sub eax esi +
sar eax 1 +
push eax  +
push esi  +
call loc_40C2A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_40BAAD  +
mov eax [esi+8] +
sub eax ecx +
sar eax 1 +
push eax  +
push ecx  +
mov ecx esi +
call loc_40C2A0  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
test esi esi +
jz loc_40BAFE  +
cmp esi 7FFFFFFFh +
ja loc_40BB06  +
push esi  +
call loc_40C300  +
mov [edi] eax +
add esi esi +
mov [edi+4] eax +
mov eax [edi] +
push esi  +
add eax esi +
mov [edi+8] eax +
push 0  +
push dword ptr [edi]  +
call sub_48CF40  +
add esp 0Ch +
add [edi+4] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
xor eax eax +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 7 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_40BF90  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_40BBB6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40BB7A  +
mov eax [esi] +
jmp loc_40BB7C  +
mov eax esi +
cmp ebx eax +
jb loc_40BBB6  +
cmp ecx 8 +
jb loc_40BB89  +
mov edx [esi] +
jmp loc_40BB8B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_40BBB6  +
cmp ecx 8 +
jb loc_40BB9E  +
mov eax [esi] +
jmp loc_40BBA0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call loc_40BF90  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7FFFFFFEh +
ja loc_40BC4E  +
cmp [esi+14h] edi +
jnb loc_40BBE4  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_40C360  +
test edi edi +
jz loc_40BC45  +
cmp dword ptr [esi+14h] 8 +
jb loc_40BC0F  +
mov ecx [esi] +
jmp loc_40BC11  +
test edi edi +
jnz loc_40BBDA  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40BC01  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ecx esi +
test edi edi +
jz loc_40BC23  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40BC3D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40BC74  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_40C2A0  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_40BC91  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B82E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp esi [ebp+arg_0] +
jz loc_40BD04  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40BCDB  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_40C2A0  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_40BCF3  +
mov eax [esi] +
jmp loc_40BCF5  +
mov eax esi +
push [ebp+arg_0]  +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
call sub_40C0B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call loc_4032A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx ecx +
mov eax 2AAAAAABh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_40BDDA  +
sub esi [ebx] +
mov eax 2AAAAAABh +
imul  esi +
push edi  +
sar edx 2 +
mov eax 0AAAAAAAh +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_40BDDF  +
sub ecx [ebx] +
mov eax 2AAAAAABh +
imul  ecx +
xor ecx ecx +
inc edi  +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0AAAAAAAh +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
cmp ecx edi +
cmovnb edi ecx +
mov ecx ebx +
push edi  +
call loc_40C1A0  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
cmp dword ptr [ecx+14h] 8 +
jb loc_40BDF9  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_40BE39  +
cmp dword ptr [esi+14h] 8 +
jb loc_40BE39  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_40BE2B  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call loc_48C9C0  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call loc_40C2A0  +
pop ebx  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40BE57  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 7FFFFFFEh +
ja loc_40BEDA  +
cmp [ecx+14h] esi +
jnb loc_40BE97  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_40C360  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_40BEBC  +
cmp esi 8 +
jnb loc_40BEBC  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_40BE00  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_40BED2  +
cmp dword ptr [ecx+14h] 8 +
mov [ecx+10h] esi +
jb loc_40BECB  +
mov ecx [ecx] +
xor eax eax +
test esi esi +
mov [ecx] ax +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
mov edx [ebp+arg_8] +
sub esp 8 +
push ebx  +
mov ebx ecx +
mov eax [ebx+10h] +
test edx edx +
jz loc_40BF86  +
push esi  +
push edi  +
cmp edx eax +
ja loc_40BF81  +
sub eax edx +
cmp dword ptr [ebx+14h] 8 +
jb loc_40BF17  +
mov ecx [ebx] +
lea edi [ecx+eax*2] +
mov ecx [ebp+arg_0] +
movzx eax word ptr [ecx] +
mov [ebp+var_4] eax +
cmp [edi] ax +
jnz loc_40BF68  +
cmp [ebp+arg_8] 0 +
mov esi edx +
mov edx ecx +
mov eax edi +
jbe loc_40BF47  +
mov cx [eax] +
cmp cx [edx] +
jnz loc_40BF5E  +
add eax 2 +
add edx 2 +
sub esi 1 +
jnz loc_40BF34  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40BF4F  +
mov ebx [ebx] +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 1 +
jz loc_40BF47  +
mov ecx ebx +
call sub_40BDF0  +
cmp edi eax +
jz loc_40BF81  +
mov edx [ebp+arg_8] +
sub edi 2 +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
jmp loc_40BF23  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40C08C  +
mov edi [ebp+10h] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_40BFEA  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jb loc_40C096  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_40BFD0  +
mov edx [esi] +
jmp loc_40BFD2  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call loc_40C510  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 7FFFFFFEh +
ja loc_40C0A0  +
cmp [esi+14h] edi +
jnb loc_40C01F  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_40C360  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_40C083  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40C015  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40C04A  +
mov edx [esi] +
jmp loc_40C04C  +
test edi edi +
jnz loc_40C00D  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40C03C  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_40C061  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40C07B  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_40C0D7  +
mov eax [esi+10h] +
add eax 1 +
jz loc_40C0E5  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_48B430  +
add esp 0Ch +
jmp loc_40C0E5  +
test edi edi +
jz loc_40C0DF  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_40C112  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 4  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_40C189  +
mov eax [edi+10h] +
test eax eax +
jz loc_40C189  +
mov ecx [ebp+arg_4] +
cmp ecx eax +
jb loc_40C140  +
lea ecx [eax-1] +
cmp dword ptr [edi+14h] 10h +
jb loc_40C14A  +
mov eax [edi] +
jmp loc_40C14C  +
mov eax edi +
lea esi [eax+ecx] +
nop   +
test ebx ebx +
jz loc_40C168  +
movsx eax byte ptr [esi] +
push ebx  +
push eax  +
push [ebp+arg_0]  +
call sub_48C890  +
add esp 0Ch +
test eax eax +
jnz loc_40C176  +
mov ecx edi +
call sub_403130  +
cmp esi eax +
jz loc_40C189  +
dec esi  +
jmp loc_40C150  +
cmp dword ptr [edi+14h] 10h +
jb loc_40C17E  +
mov edi [edi] +
sub esi edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-4] esi +
push edi  +
test ebx ebx +
jnz loc_40C1B9  +
xor edi edi +
jmp loc_40C1FC  +
cmp ebx 0AAAAAAAh +
ja loc_40C288  +
lea eax [ebx+ebx*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_40C1F1  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40C28D  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_40C1FC  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov edi eax +
mov edx [esi+4] +
push ecx  +
mov byte ptr [ebp+8] 0 +
push dword ptr [ebp+8]  +
push ecx  +
mov ecx [esi] +
push edi  +
call sub_40CC80  +
mov ecx [esi+4] +
mov eax 2AAAAAABh +
sub ecx [esi] +
add esp 10h +
imul  ecx +
mov eax [esi] +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+8] ecx +
test eax eax +
jz loc_40C26B  +
push dword ptr [ebp+8]  +
mov edx [esi+4] +
push ecx  +
mov ecx eax +
call loc_407E30  +
mov ecx [ebp-4] +
mov eax 2AAAAAABh +
mov esi [esi] +
add esp 8 +
mov ecx [ecx+8] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406C30  +
mov esi [ebp-4] +
mov ecx [ebp+8] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*8] +
mov [esi+8] eax +
lea eax [ecx+ecx*2] +
lea eax [edi+eax*8] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
call sub_489DDA  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_40C2E0  +
add eax eax +
cmp eax 1000h +
jb loc_40C2D3  +
test cl 1Fh +
jnz loc_40C2E5  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_40C2EA  +
sub ecx eax +
cmp ecx 4 +
jb loc_40C2EF  +
cmp ecx 23h +
ja loc_40C2F4  +
mov ecx eax +
push ecx  +
call sub_47BF70  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_40C312  +
xor ecx ecx +
mov eax ecx +
pop ebp  +
retn 4  +
***
cmp eax 7FFFFFFFh +
ja loc_40C350  +
add eax eax +
cmp eax 1000h +
jb loc_40C341  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_40C355  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_488C2D  +
add esp 4 +
mov ecx eax +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
call sub_489DDA  +
push 0FFFFFFFFh  +
push offset loc_4B8300  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_40C3A4  +
mov edi eax +
jmp loc_40C3CB  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_40C3CB  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_40C3CB  +
mov edi 7FFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
test eax eax +
jnz loc_40C3DD  +
xor ebx ebx +
jmp loc_40C448  +
cmp eax 7FFFFFFFh +
jbe loc_40C3E9  +
call sub_489DDA  +
add eax eax +
cmp eax 1000h +
jb loc_40C412  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_40C3FE  +
call sub_489DDA  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea ebx [eax+23h] +
and ebx 0FFFFFFE0h +
mov [ebx-4] eax +
jmp loc_40C448  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov ebx eax +
jmp loc_40C448  +
mov eax [ebp+8] +
mov ecx [ebp-14h] +
mov [ebp+8] eax +
inc eax  +
mov [ebp-10h] esp +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_40C300  +
mov [ebp-18h] eax +
mov eax offset loc_40C43F +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ebx [ebp-18h] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_40C46C  +
cmp dword ptr [esi+14h] 8 +
jb loc_40C459  +
mov ecx [esi] +
jmp loc_40C45B  +
mov ecx esi +
test eax eax +
jz loc_40C46C  +
add eax eax +
push eax  +
push ecx  +
push ebx  +
call loc_48C9C0  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40C47F  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_40C2A0  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_40C497  +
mov eax [esi] +
jmp loc_40C499  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_4] +
mov [esi] ebx +
mov [esi+14h] edi +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] eax +
jb loc_40C4B1  +
mov esi ebx +
xor ecx ecx +
mov [esi+eax*2] cx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_40C5AD  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_40C557  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_40C549  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_40C5A5  +
cmp dword ptr [esi+14h] 8 +
jb loc_40C565  +
mov eax [esi] +
jmp loc_40C567  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_40C583  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call loc_48B430  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
pop ebx  +
jb loc_40C59D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jb loc_40C6A9  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+10h] +
cmp ecx eax +
cmova ecx eax +
mov eax edx +
not eax  +
mov [ebp+10h] ecx +
cmp eax ecx +
jbe loc_40C6B3  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_40C6A0  +
cmp edi 7FFFFFFEh +
ja loc_40C6BD  +
cmp [esi+14h] edi +
jnb loc_40C633  +
push edx  +
push edi  +
mov ecx esi +
call sub_40C360  +
mov ecx [ebp+10h] +
test edi edi +
jz loc_40C6A0  +
cmp dword ptr [ebx+14h] 8 +
jb loc_40C629  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40C65E  +
mov edx [esi] +
jmp loc_40C660  +
test edi edi +
jnz loc_40C621  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40C650  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ecx ecx +
jz loc_40C67E  +
lea eax [ecx+ecx] +
push eax  +
mov eax [ebp+0Ch] +
lea eax [ebx+eax*2] +
push eax  +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40C698  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push 0FFFFFFFFh  +
push offset loc_4B8339  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_40C72A  +
mov eax [esi] +
jmp loc_40C72C  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov ebx [ebp+arg_0] +
mov [ebp+var_4] ecx +
mov edi [esi+10h] +
mov [ebp+var_10] 1 +
mov eax [ebx+10h] +
inc eax  +
cmp edi eax +
ja loc_40C771  +
cmp [esi+14h] eax +
jz loc_40C771  +
push 1  +
push eax  +
mov ecx esi +
call loc_40BE70  +
test al al +
jz loc_40C771  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_40C769  +
mov eax [esi] +
jmp loc_40C76B  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
push 1  +
push offset unk_4DEA38  +
mov ecx esi +
call loc_40C9D0  +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov ecx esi +
call loc_40C5C0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr [edx] 0 +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov [ebp+var_4] esi +
jnz loc_40C7BD  +
xor eax eax +
jmp loc_40C7D3  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40C7C3  +
sub eax edi +
sar eax 1 +
pop edi  +
push eax  +
push edx  +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_40C870  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_40C0B0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ebx edx +
mov [ebp-4] esi +
mov dword ptr [ebp-8] 0 +
cmp word ptr [edi] 0 +
jnz loc_40C824  +
xor eax eax +
jmp loc_40C83F  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40C830  +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
mov ecx ebx +
call loc_40C9D0  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_40C0B0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi ecx +
test edi edi +
jz loc_40C8C7  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40C88A  +
mov eax [esi] +
jmp loc_40C88C  +
mov eax esi +
cmp edi eax +
jb loc_40C8C7  +
cmp ecx 8 +
jb loc_40C899  +
mov edx [esi] +
jmp loc_40C89B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_40C8C7  +
cmp ecx 8 +
jb loc_40C8AE  +
mov eax [esi] +
jmp loc_40C8B0  +
mov eax esi +
push dword ptr [ebp+10h]  +
sub edi eax +
sar edi 1 +
push edi  +
push esi  +
push ecx  +
mov ecx esi +
call loc_40CB00  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edx [esi+10h] +
mov eax edx +
mov ecx [ebp+10h] +
not eax  +
cmp eax ecx +
jbe loc_40C9B6  +
push ebx  +
lea ebx [edx+ecx] +
test ecx ecx +
jz loc_40C9AD  +
cmp ebx 7FFFFFFEh +
ja loc_40C9C0  +
cmp [esi+14h] ebx +
jnb loc_40C919  +
push edx  +
push ebx  +
mov ecx esi +
call sub_40C360  +
mov ecx [ebp+10h] +
test ebx ebx +
jz loc_40C9AD  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40C944  +
mov edx [esi] +
mov [ebp+0Ch] edx +
jmp loc_40C947  +
test ebx ebx +
jnz loc_40C90A  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40C936  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop ebx  +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov [ebp+0Ch] esi +
cmp eax 8 +
jb loc_40C950  +
mov edx [esi] +
jmp loc_40C952  +
mov edx esi +
mov eax [esi+10h] +
test eax eax +
jz loc_40C96B  +
add eax eax +
push eax  +
push dword ptr [ebp+0Ch]  +
lea eax [edx+ecx*2] +
push eax  +
call loc_48B430  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_40C975  +
mov ecx [esi] +
jmp loc_40C977  +
mov ecx esi +
mov eax [ebp+10h] +
test eax eax +
jz loc_40C98B  +
add eax eax +
push eax  +
push edi  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ebx +
jb loc_40C9A5  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_40CA26  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40C9EA  +
mov eax [esi] +
jmp loc_40C9EC  +
mov eax esi +
cmp edi eax +
jb loc_40CA26  +
cmp ecx 8 +
jb loc_40C9F9  +
mov edx [esi] +
jmp loc_40C9FB  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_40CA26  +
cmp ecx 8 +
jb loc_40CA0E  +
mov eax [esi] +
jmp loc_40CA10  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
call loc_40C5C0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
mov eax edx +
mov ecx [ebp+0Ch] +
not eax  +
cmp eax ecx +
jbe loc_40CADF  +
push ebx  +
lea ebx [edx+ecx] +
test ecx ecx +
jz loc_40CAD6  +
cmp ebx 7FFFFFFEh +
ja loc_40CAE9  +
cmp [esi+14h] ebx +
jnb loc_40CA6F  +
push edx  +
push ebx  +
mov ecx esi +
call sub_40C360  +
mov ecx [ebp+0Ch] +
test ebx ebx +
jz loc_40CAD6  +
cmp dword ptr [esi+14h] 8 +
jb loc_40CA9A  +
mov edx [esi] +
jmp loc_40CA9C  +
test ebx ebx +
jnz loc_40CA65  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40CA8C  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop ebx  +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_40CAB4  +
lea eax [ecx+ecx] +
push eax  +
mov eax [esi+10h] +
push edi  +
lea eax [edx+eax*2] +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ebx +
jb loc_40CACE  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+10h] +
mov eax [eax+10h] +
push edi  +
cmp eax ecx +
jb loc_40CC57  +
mov edi [ebp+14h] +
sub eax ecx +
mov ecx [esi+10h] +
cmp edi eax +
cmova edi eax +
mov eax ecx +
not eax  +
cmp eax edi +
jbe loc_40CC61  +
lea ebx [ecx+edi] +
test edi edi +
jz loc_40CC4E  +
cmp ebx 7FFFFFFEh +
ja loc_40CC6B  +
cmp [esi+14h] ebx +
jnb loc_40CB6B  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_40C360  +
test ebx ebx +
jz loc_40CC4E  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CB96  +
mov edx [esi] +
jmp loc_40CB98  +
test ebx ebx +
jnz loc_40CB5F  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40CB88  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 10h  +
***
mov edx esi +
cmp eax 8 +
jb loc_40CBA1  +
mov ecx [esi] +
jmp loc_40CBA3  +
mov ecx esi +
mov eax [esi+10h] +
test eax eax +
jz loc_40CBBA  +
add eax eax +
push eax  +
push edx  +
lea eax [ecx+edi*2] +
push eax  +
call loc_48B430  +
add esp 0Ch +
mov ecx [ebp+0Ch] +
cmp esi ecx +
jnz loc_40CC00  +
mov eax [ebp+10h] +
test eax eax +
lea ecx [eax+edi] +
cmovz ecx eax +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CBDB  +
mov edx [esi] +
mov [ebp+10h] edx +
jmp loc_40CBDE  +
mov [ebp+10h] esi +
cmp eax 8 +
jb loc_40CBE7  +
mov edx [esi] +
jmp loc_40CBE9  +
mov edx esi +
test edi edi +
jz loc_40CC2C  +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+10h] +
lea eax [eax+ecx*2] +
push eax  +
push edx  +
call loc_48B430  +
jmp loc_40CC29  +
cmp dword ptr [ecx+14h] 8 +
jb loc_40CC08  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40CC12  +
mov edx [esi] +
jmp loc_40CC14  +
mov edx esi +
test edi edi +
jz loc_40CC2C  +
lea eax [edi+edi] +
push eax  +
mov eax [ebp+10h] +
lea eax [ecx+eax*2] +
push eax  +
push edx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ebx +
jb loc_40CC46  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax+ebx*2] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_40CCAE  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_40CC9D  +
push edi  +
mov ecx esi +
call sub_402F50  +
add edi 18h +
add esi 18h +
cmp edi ebx +
jnz loc_40CC91  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B82E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_40CCF6  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword ptr [esi] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40CD6E +
retn   +
***
mov edi ecx +
push 0  +
mov dword ptr [edi] offset off_4DEA64 +
mov byte ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
call sub_475C60  +
push 1Fh  +
push offset aLocalCom_adobe  +
mov esi eax +
call sub_474F10  +
add esp 0Ch +
mov ecx esi +
push eax  +
call sub_475840  +
call sub_4750D0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+44h]  +
push eax  +
mov ecx esi +
call sub_475840  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
push 1  +
push 0  +
call ds:CreateMutexW  +
mov [edi+8] eax +
test eax eax +
jz loc_40CDFF  +
call ds:GetLastError  +
cmp eax 0B7h +
jnz loc_40CE03  +
mov byte ptr [edi+4] 1 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_4DEA64 +
test eax eax +
jz loc_40CE51  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+8] 0 +
test [ebp+arg_0] 1 +
jz loc_40CE62  +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov ecx [ebp-1Ch] +
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
mov [ebp+var_4] esi +
call loc_40D7E0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B83CB  +
mov eax large fs:0 +
push eax  +
sub esp 244h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea eax [ebp+Filename] +
push 0FFh  +
push eax  +
push 0  +
mov [ebp+var_24C] 0 +
call ds:GetModuleFileNameW  +
lea eax [ebp+var_22C] +
push eax  +
call sub_476CF0  +
add esp 4 +
mov [ebp+var_4] 0 +
xor eax eax +
mov [ebp+var_230] 7 +
mov [ebp+var_234] 0 +
mov word ptr [ebp+var_244] ax +
cmp [ebp+Filename] ax +
jnz loc_40D02E  +
xor ecx ecx +
jmp loc_40D046  +
lea ecx [ebp+Filename] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40D037  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Filename] +
push eax  +
lea ecx [ebp+var_244] +
call loc_40BB60  +
mov edi [ebp+var_230] +
lea ecx [ebp+var_244] +
push [ebp+var_234]  +
cmp edi 8 +
lea eax [ebp+var_22C] +
cmovnb ecx [ebp+var_244] +
cmp [ebp+var_218] 8 +
push ecx  +
cmovnb eax [ebp+var_22C] +
push [ebp+var_21C]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
mov [ebp+var_248] eax +
cmp edi 8 +
jb loc_40D0BF  +
lea eax [edi+1] +
push eax  +
push [ebp+var_244]  +
lea ecx [ebp+var_244] +
call loc_40C2A0  +
mov eax [ebp+var_248] +
mov dword ptr [esi+14h] 7 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
test eax eax +
jnz loc_40D0F0  +
push eax  +
push offset WindowName  +
mov [esi] ax +
call loc_40BB60  +
mov ecx [ebp+var_218] +
cmp ecx 8 +
jb loc_40D11F  +
inc ecx  +
push ecx  +
jmp loc_40D10E  +
xor eax eax +
mov [esi] ax +
lea eax [ebp+var_22C] +
push eax  +
call sub_40C0B0  +
mov eax [ebp+var_218] +
cmp eax 8 +
jb loc_40D11F  +
inc eax  +
push eax  +
push [ebp+var_22C]  +
lea ecx [ebp+var_22C] +
call loc_40C2A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push 1  +
push 0FFFFFFFFh  +
push offset unk_4DEA30  +
mov ecx esi +
mov [ebp+var_28] ebx +
call loc_40D760  +
cmp eax 0FFFFFFFFh +
jz loc_40D1A7  +
push 0FFFFFFFFh  +
inc eax  +
mov ecx esi +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_40BB20  +
mov ebx 1 +
cmp dword ptr [eax+14h] 8 +
lea ecx [eax+10h] +
jb loc_40D18E  +
mov eax [eax] +
push 12h  +
push offset aAdobeipcbroker  +
push dword ptr [ecx]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
mov [ebp+var_21] bl +
test eax eax +
jz loc_40D1AB  +
mov [ebp+var_21] 0 +
test bl 1 +
jz loc_40D1C8  +
mov eax [ebp+var_C] +
and ebx 0FFFFFFFEh +
cmp eax 8 +
jb loc_40D1C8  +
inc eax  +
lea ecx [ebp+var_20] +
push eax  +
push [ebp+var_20]  +
call loc_40C2A0  +
cmp [ebp+var_21] 0 +
jz loc_40D1E2  +
mov al 1 +
pop esi  +
pop ebx  +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
push 1  +
push 0FFFFFFFFh  +
push offset unk_4DEA34  +
mov ecx esi +
call loc_40D760  +
cmp eax 0FFFFFFFFh +
jz loc_40D22E  +
push 0FFFFFFFFh  +
inc eax  +
mov ecx esi +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_40BB20  +
or ebx 2 +
cmp dword ptr [eax+14h] 8 +
lea ecx [eax+10h] +
jb loc_40D214  +
mov eax [eax] +
push 12h  +
push offset aAdobeipcbroker  +
push dword ptr [ecx]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
mov [ebp+var_21] 1 +
test eax eax +
jz loc_40D232  +
mov [ebp+var_21] 0 +
test bl 2 +
jz loc_40D24C  +
mov eax [ebp+var_C] +
cmp eax 8 +
jb loc_40D24C  +
inc eax  +
lea ecx [ebp+var_20] +
push eax  +
push [ebp+var_20]  +
call loc_40C2A0  +
cmp [ebp+var_21] 0 +
mov ecx [ebp+var_8] +
setnz al  +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 220h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_8] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+Data] +
push 208h  +
push 0  +
push eax  +
mov [ebp+hKey] 0 +
mov [ebp+Type] 1 +
call sub_48CF40  +
add esp 0Ch +
mov [ebp+cbData] 104h +
lea eax [ebp+hKey] +
push eax  +
push 20119h  +
push 0  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_40D315  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
test eax eax +
jz loc_40D328  +
call ds:RegCloseKey  +
xor al al +
pop esi  +
mov ecx [ebp+var_8] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
call ds:RegCloseKey  +
cmp word ptr [ebp+Data] 0 +
jnz loc_40D33C  +
xor ecx ecx +
jmp loc_40D354  +
lea ecx [ebp+Data] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40D345  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Data] +
mov ecx esi +
push eax  +
call loc_40BB60  +
push esi  +
call sub_40D140  +
mov ecx [ebp+var_8] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B840E  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov [ebp+var_4] eax +
lea eax [ebp+var_40] +
push eax  +
call sub_40CFA0  +
mov esi eax +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_40D404  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40D3E7  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_14] 7 +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call sub_40C0B0  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_40D41D  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_40C2A0  +
cmp [ebp+var_14] 8 +
lea ecx [ebp+var_58] +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
call sub_496F96  +
add esp 8 +
test eax eax +
jz loc_40D473  +
lea eax [ebp+var_28] +
push eax  +
call sub_40D270  +
test al al +
jz loc_40D462  +
cmp [ebp+var_14] 8 +
lea ecx [ebp+var_58] +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
call sub_496F96  +
add esp 8 +
test eax eax +
jz loc_40D473  +
push 0  +
push offset unk_4DE8C5  +
call sub_474F10  +
add esp 8 +
jmp loc_40D487  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
call sub_478790  +
add esp 4 +
mov esi eax +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40D49E  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8458  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_4750D0  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
call dword ptr [edx+10h]  +
mov edx eax +
lea ecx [ebp+var_40] +
call sub_40CF80  +
push eax  +
mov edx offset aLaunchedbyvulc +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_40C7A0  +
push offset unk_4DEA3C  +
mov edx eax +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_58] +
call loc_40C800  +
add esp 8 +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40D542  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
mov byte ptr [ebp+var_4] 4 +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_40D56F  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_2C] 7 +
cmp [ebp+var_44] 8 +
mov word ptr [ebp+var_40] ax +
lea eax [ebp+var_58] +
cmovnb eax [ebp+var_58] +
push eax  +
mov [ebp+var_30] 0 +
call sub_478790  +
mov edx [edi] +
add esp 4 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+24h]  +
push eax  +
mov ecx esi +
call loc_477BD0  +
mov esi [edi] +
push eax  +
push 15h  +
push offset aAdobeCsi_launc  +
call sub_474F10  +
add esp 8 +
mov ecx edi +
push eax  +
call dword ptr [esi+28h]  +
mov [ebp+var_5C] eax +
lea eax [ebp+var_5C] +
push eax  +
push 1  +
call sub_478F50  +
mov ecx [ebp+var_44] +
add esp 8 +
mov esi eax +
cmp ecx 8 +
jb loc_40D5E8  +
inc ecx  +
push ecx  +
push [ebp+var_58]  +
lea ecx [ebp+var_58] +
call loc_40C2A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
xor bl bl +
call sub_475C60  +
push 1Fh  +
push offset aLocalCom_adobe  +
mov esi eax +
call sub_474F10  +
add esp 0Ch +
mov ecx esi +
push eax  +
call sub_475840  +
call sub_4750D0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+44h]  +
push eax  +
mov ecx esi +
call sub_475840  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
push 1  +
push 0  +
call ds:CreateMutexW  +
mov esi eax +
test esi esi +
jz loc_40D66D  +
call ds:GetLastError  +
cmp eax 0B7h +
jnz loc_40D66F  +
mov bl 1 +
test esi esi +
jz loc_40D67A  +
push esi  +
call ds:CloseHandle  +
pop esi  +
mov al bl +
pop ebx  +
retn   +
***
and esp 0FFFFFFC0h +
sub esp 38h +
push esi  +
push edi  +
call sub_40D610  +
test al al +
jnz loc_40D6EB  +
call sub_478FB0  +
mov edi eax +
call sub_40D380  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
call dword ptr [edx+18h]  +
test eax eax +
jle loc_40D6EB  +
mov edx [edi] +
mov ecx edi +
push esi  +
call dword ptr [edx+28h]  +
movsd xmm0 ds:qword_4E1050 +
sub esp 8 +
mov esi [edi] +
movsd [esp+4Ch+var_4C] xmm0 +
call sub_40D4C0  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
push eax  +
mov ecx edi +
call dword ptr [esi+20h]  +
push 1  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov al 1 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
mov esi ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_40D733  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_40BB60  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx edx +
push edi  +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40D740  +
sub ecx edi +
sar ecx 1 +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_40BB60  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_40D7D2  +
mov eax [edi+10h] +
test eax eax +
jz loc_40D7D2  +
mov ecx [ebp+0Ch] +
cmp ecx eax +
jb loc_40D780  +
lea ecx [eax-1] +
cmp dword ptr [edi+14h] 8 +
jb loc_40D78A  +
mov eax [edi] +
jmp loc_40D78C  +
mov eax edi +
lea esi [eax+ecx*2] +
nop   +
test ebx ebx +
jz loc_40D7AD  +
mov eax [ebp+8] +
mov ecx ebx +
movzx edx word ptr [esi] +
cmp [eax] dx +
jz loc_40D7BD  +
add eax 2 +
sub ecx 1 +
jnz loc_40D7A0  +
mov ecx edi +
call sub_40BDF0  +
cmp esi eax +
jz loc_40D7D2  +
sub esi 2 +
jmp loc_40D790  +
***
cmp dword ptr [edi+14h] 8 +
jb loc_40D7C5  +
mov edi [edi] +
sub esi edi +
sar esi 1 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi edx +
mov dword ptr [ebp-38h] 0 +
mov ebx ecx +
mov [ebp-34h] ebx +
push edi  +
lea edi [ebp-6] +
test esi esi +
jns loc_40D840  +
neg esi  +
mov eax 0CCCCCCCDh +
sub edi 2 +
mul  esi +
shr edx 3 +
lea eax [edx+edx*4] +
add eax eax +
sub esi eax +
add esi 30h +
mov [edi] si +
mov esi edx +
test esi esi +
jnz loc_40D840  +
xor eax eax +
mov dword ptr [ebx+14h] 7 +
mov dword ptr [ebx+10h] 0 +
mov [ebx] ax +
lea eax [ebp-6] +
cmp edi eax +
jz loc_40D889  +
mov ecx eax +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx ebx +
call loc_40BB60  +
mov ecx [ebp-4] +
mov eax ebx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
cmp word ptr [edx] 0 +
jnz loc_40D8B1  +
xor eax eax +
jmp loc_40D8C5  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40D8B6  +
sub eax esi +
sar eax 1 +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+14h] 8 +
lea esi [ecx+10h] +
jb loc_40D8D3  +
mov ecx [ecx] +
push eax  +
push edx  +
push dword ptr [esi]  +
push ecx  +
call sub_40D8F0  +
add esp 10h +
test eax eax +
setz al  +
pop esi  +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E00A4 +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_40D968  +
call sub_479590  +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_40D97A  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40D986  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_40D992  +
call sub_479590  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40D99E  +
call sub_479590  +
test [ebp+arg_0] 1 +
jz loc_40D9AF  +
push 24h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B849E  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_58] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp+var_5C] esi +
mov [ebp+var_4] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebx+20h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40DA43  +
xor ecx ecx +
jmp loc_40DA51  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40DA48  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
mov byte ptr [ebp+var_4] 2 +
lea edx [ebp+var_28] +
mov ecx [ebx+18h] +
lea edi [ebp+var_48] +
cmp [ebp+var_14] 10h +
push edi  +
cmovnb edx [ebp+var_28] +
mov eax [ecx] +
push edx  +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jz loc_40DA93  +
push edi  +
push dword ptr [ebx+20h]  +
push offset aGetapppathFail  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 14h +
jmp loc_40DAC6  +
mov edx [ebp+var_48] +
cmp byte ptr [edx] 0 +
jnz loc_40DA9F  +
xor ecx ecx +
jmp loc_40DAB1  +
mov ecx edx +
lea eax [ecx+1] +
mov [ebp+var_44] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40DAA7  +
sub ecx [ebp+var_44] +
push ecx  +
push edx  +
lea ecx [ebp+var_40] +
call loc_4031A0  +
mov ecx [ebx+18h] +
push [ebp+var_48]  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
push edi  +
push offset aD  +
call sub_4782A0  +
mov edi dword_4F6350 +
mov [ebp+var_4C] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp+var_44] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_44]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 28h +
mov [ebp+var_44] eax +
call sub_478670  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp+var_50] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_4C]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
cmp [ebp+var_2C] 10h +
lea ecx [ebp+var_40] +
mov ebx dword_4F63A0 +
cmovnb ecx [ebp+var_40] +
push ecx  +
mov [ebp+var_54] eax +
call loc_4794B0  +
push ebx  +
push offset a@  +
mov [ebp+var_4C] eax +
call sub_4782A0  +
push ebx  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+var_4C]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp+var_50] +
add esp 44h +
mov ecx ebx +
mov edi eax +
push [ebp+var_44]  +
call sub_475840  +
push [ebp+var_54]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp+var_58] +
mov ecx edi +
push dword_4F6360  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40DBDA  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40DBE1  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40DBF6  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov eax [ebp+var_2C] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 10h +
jb loc_40DC1D  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov [ebp+var_4] 4 +
test esi esi +
jz loc_40DC41  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_40DC78  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40DC84  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_40DC90  +
call sub_479590  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40DC9C  +
call sub_479590  +
test [ebp+arg_0] 1 +
jz loc_40DCAD  +
push 20h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B84DE  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_1C] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp+var_28] esi +
mov [ebp+var_4] 0 +
mov ecx dword_4F6364 +
call sub_478670  +
mov ecx [ebx+18h] +
mov [ebp+var_18] eax +
lea eax [ebp+var_10] +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
mov edx [ecx] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call dword ptr [edx+1Ch]  +
mov [ebp+var_2C] eax +
test eax eax +
jz loc_40DD44  +
push eax  +
push offset aGetspecifiersF  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
jmp loc_40DDB5  +
mov edx [ebp+var_10] +
xor edi edi +
test edx edx +
jz loc_40DDA9  +
mov esi [ebp+var_18] +
mov eax [ebp+var_14] +
mov ebx dword_4F638C +
mov [ebp+var_20] ebx +
push dword ptr [eax+edi*4]  +
call loc_4794B0  +
push ebx  +
push offset a@  +
mov [ebp+var_24] eax +
call sub_4782A0  +
push [ebp+var_20]  +
mov ebx eax +
push offset a@_0  +
call sub_4782A0  +
push ebx  +
push [ebp+var_24]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
add esp 24h +
mov ecx esi +
push eax  +
call sub_475840  +
mov edx [ebp+var_10] +
inc edi  +
cmp edi edx +
jb loc_40DD50  +
mov esi [ebp+var_28] +
mov ebx [ebp+var_1C] +
mov ecx [ebx+18h] +
push edx  +
push [ebp+var_14]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
push [ebp+var_2C]  +
push offset aD  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 8 +
mov [ebp+var_24] eax +
call sub_478670  +
mov edi dword_4F6350 +
mov [ebp+var_20] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp+var_2C] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_2C]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp+var_2C] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_24]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F63A0 +
add esp 40h +
mov [ebp+var_24] eax +
push edi  +
push offset a@  +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_18]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp+var_20] +
add esp 20h +
mov ecx ebx +
mov edi eax +
push [ebp+var_2C]  +
call sub_475840  +
push [ebp+var_24]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp+var_1C] +
mov ecx edi +
push dword_4F635C  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40DEBA  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40DEC1  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov [ebp+var_4] 2 +
test esi esi +
jz loc_40DED3  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B849E  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_58] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp+var_5C] esi +
mov [ebp+var_4] 0 +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebx+20h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40DF6C  +
xor ecx ecx +
jmp loc_40DF7A  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40DF71  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
mov byte ptr [ebp+var_4] 2 +
lea edx [ebp+var_28] +
mov ecx [ebx+18h] +
lea edi [ebp+var_4C] +
cmp [ebp+var_14] 10h +
mov [ebp+var_4C] 0 +
cmovnb edx [ebp+var_28] +
mov eax [ecx] +
push edi  +
push edx  +
call dword ptr [eax+24h]  +
mov edi eax +
test edi edi +
jz loc_40DFC1  +
push edi  +
push dword ptr [ebx+20h]  +
push offset aGetprocessidFa  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 14h +
push edi  +
push offset aD  +
call sub_4782A0  +
push [ebp+var_4C]  +
mov [ebp+var_48] eax +
push offset aD  +
call sub_4782A0  +
mov edi dword_4F6350 +
mov [ebp+var_50] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp+var_44] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_44]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 30h +
mov [ebp+var_44] eax +
call sub_478670  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp+var_54] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_48]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F63A0 +
push edi  +
push offset a@  +
mov [ebp+var_48] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push [ebp+var_50]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp+var_54] +
add esp 40h +
mov ecx ebx +
mov edi eax +
push [ebp+var_44]  +
call sub_475840  +
push [ebp+var_48]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp+var_58] +
mov ecx edi +
push dword_4F63B0  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40E0D1  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40E0D8  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40E0ED  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 4 +
test esi esi +
jz loc_40E111  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B8516  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-40h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-44h] esi +
mov dword ptr [ebp-4] 0 +
mov ecx [ebx+20h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40E196  +
xor ecx ecx +
jmp loc_40E1A9  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40E1A0  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-28h] +
mov ecx [ebx+18h] +
lea edi [ebp-29h] +
cmp dword ptr [ebp-14h] 10h +
mov byte ptr [ebp-29h] 0 +
cmovnb edx [ebp-28h] +
mov eax [ecx] +
push edi  +
push edx  +
call dword ptr [eax+8]  +
mov edi eax +
test edi edi +
jz loc_40E1ED  +
push edi  +
push dword ptr [ebx+14h]  +
push offset aIsappinstalled  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 14h +
push edi  +
push offset aD  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 8 +
mov [ebp-34h] eax +
call sub_478670  +
mov edi dword_4F6350 +
mov [ebp-38h] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp-30h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-30h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp-30h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-34h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx dword_4F63A0 +
add esp 40h +
cmp byte ptr [ebp-29h] 0 +
mov [ebp-3Ch] eax +
mov eax dword_4F6370 +
cmovnz eax dword_4F6328 +
push ebx  +
push offset a@  +
mov [ebp-34h] eax +
call sub_4782A0  +
push ebx  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push dword ptr [ebp-34h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp-38h] +
add esp 20h +
mov ecx ebx +
mov edi eax +
push dword ptr [ebp-30h]  +
call sub_475840  +
push dword ptr [ebp-3Ch]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp-40h] +
mov ecx edi +
push dword_4F63B8  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40E303  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40E30A  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_40E31F  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
mov dword ptr [ebp-4] 3 +
test esi esi +
jz loc_40E343  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B8516  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-40h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-44h] esi +
mov dword ptr [ebp-4] 0 +
mov ecx [ebx+20h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40E3C6  +
xor ecx ecx +
jmp loc_40E3D9  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40E3D0  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 1 +
lea edx [ebp-28h] +
mov ecx [ebx+18h] +
lea edi [ebp-29h] +
cmp dword ptr [ebp-14h] 10h +
mov byte ptr [ebp-29h] 0 +
cmovnb edx [ebp-28h] +
mov eax [ecx] +
push edi  +
push edx  +
call dword ptr [eax+0Ch]  +
cmp byte ptr [ebp-29h] 0 +
mov edi eax +
jz loc_40E41F  +
push edi  +
push dword ptr [ebx+14h]  +
push offset aIsapprunningFa  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 14h +
push edi  +
push offset aD  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 8 +
mov [ebp-34h] eax +
call sub_478670  +
mov edi dword_4F6350 +
mov [ebp-38h] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp-30h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-30h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp-30h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-34h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx dword_4F63A0 +
add esp 40h +
cmp byte ptr [ebp-29h] 0 +
mov [ebp-3Ch] eax +
mov eax dword_4F6370 +
cmovnz eax dword_4F6328 +
push ebx  +
push offset a@  +
mov [ebp-34h] eax +
call sub_4782A0  +
push ebx  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push dword ptr [ebp-34h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp-38h] +
add esp 20h +
mov ecx ebx +
mov edi eax +
push dword ptr [ebp-30h]  +
call sub_475840  +
push dword ptr [ebp-3Ch]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp-40h] +
mov ecx edi +
push dword_4F6310  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40E535  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40E53C  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_40E551  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
mov dword ptr [ebp-4] 3 +
test esi esi +
jz loc_40E575  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8561  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword_4F634C  +
push [ebp+arg_0]  +
call sub_419090  +
mov [ebp+var_4] 0 +
mov dword ptr [ebx] offset off_4DF064 +
call sub_478810  +
test eax eax +
jz loc_40E5FE  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_40E600  +
xor eax eax +
mov [ebx+24h] eax +
mov byte ptr [ebp+var_4] 1 +
mov byte ptr [ebx+28h] 1 +
call sub_474B70  +
mov esi eax +
mov [ebp+arg_4] esi +
mov byte ptr [ebp+var_4] 2 +
push dword_4F6320  +
push offset a@_0  +
call sub_4782A0  +
push dword_4F6320  +
mov edi eax +
push offset a@  +
call sub_4782A0  +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
push offset a@@@  +
call sub_4782A0  +
mov edx dword_4F6344 +
add esp 20h +
mov ecx eax +
mov [ebp+arg_8] eax +
call sub_41A870  +
mov ecx [ebx+24h] +
mov edi eax +
cmp ecx edi +
jz loc_40E67D  +
call sub_474AB0  +
test edi edi +
jz loc_40E678  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_40E67A  +
xor eax eax +
mov [ebx+24h] eax +
cmp dword ptr [ebx+24h] 0 +
jnz loc_40E696  +
push dword ptr [ebx+4]  +
push offset aTargetSpecifie  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov edx dword_4F631C +
mov ecx [ebp+arg_8] +
call sub_41A870  +
mov ecx eax +
test ecx ecx +
jnz loc_40E6BF  +
push dword ptr [ebx+4]  +
push offset aFocusNotFoundI  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
jmp loc_40E6CF  +
mov eax [ecx] +
push dword_4F6328  +
mov eax [eax+4] +
call eax  +
mov [ebx+28h] al +
mov byte ptr [ebp+var_4] 3 +
test esi esi +
jz loc_40E6DE  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
call sub_40E730  +
test [ebp+arg_0] 1 +
jz loc_40E71C  +
push 2Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_4DF064 +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_40E745  +
call sub_479590  +
mov dword ptr [esi] offset off_4E00A4 +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_40E757  +
call sub_479590  +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_40E769  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_40E775  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_40E781  +
call sub_479590  +
mov ecx [esi+4] +
pop esi  +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B85B1  +
mov eax large fs:0 +
push eax  +
sub esp 7Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-84h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-88h] esi +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
mov dword ptr [ebp-5Ch] 0Fh +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-70h] 0 +
mov byte ptr [ebp-4] 2 +
mov ecx [ebx+20h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40E824  +
xor ecx ecx +
jmp loc_40E839  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40E830  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 3 +
mov ecx [ebx+24h] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx eax +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40E86C  +
xor ecx ecx +
jmp loc_40E87A  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40E871  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-28h] +
cmp dword ptr [ebp-14h] 10h +
lea edi [ebp-40h] +
mov ecx [ebx+18h] +
cmovnb eax [ebp-28h] +
cmp dword ptr [ebp-2Ch] 10h +
push eax  +
movzx eax byte ptr [ebx+28h] +
cmovnb edi [ebp-40h] +
mov edx [ecx] +
push eax  +
push edi  +
call dword ptr [edx+4]  +
mov edi eax +
test edi edi +
jz loc_40E8C7  +
push edi  +
push dword ptr [ebx+20h]  +
push offset aLaunchappFaile  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 14h +
push edi  +
push offset aD  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 8 +
mov [ebp-78h] eax +
call sub_478670  +
mov edi dword_4F6350 +
mov [ebp-7Ch] eax +
mov eax [ebx+0Ch] +
push edi  +
push offset a@  +
mov [ebp-74h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-74h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov edi dword_4F6384 +
push edi  +
push offset a@  +
mov [ebp-74h] eax +
call sub_4782A0  +
push edi  +
push offset a@_0  +
mov ebx eax +
call sub_4782A0  +
push ebx  +
push dword ptr [ebp-78h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx dword_4F63A0 +
lea ecx [ebp-58h] +
add esp 40h +
mov [ebp-80h] eax +
cmp dword ptr [ebp-44h] 10h +
cmovnb ecx [ebp-58h] +
push ecx  +
call loc_4794B0  +
push ebx  +
push offset a@  +
mov [ebp-78h] eax +
call sub_4782A0  +
push ebx  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push dword ptr [ebp-78h]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov ebx [ebp-7Ch] +
add esp 24h +
mov ecx ebx +
mov edi eax +
push dword ptr [ebp-74h]  +
call sub_475840  +
push dword ptr [ebp-80h]  +
mov ecx ebx +
call sub_475840  +
push edi  +
mov ecx ebx +
call sub_475840  +
mov edi [ebp-84h] +
mov ecx edi +
push dword_4F6388  +
push ebx  +
mov eax [edi] +
call dword ptr [eax+0Ch]  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_40E9E1  +
push offset aNullPostRespon  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
jmp loc_40E9E8  +
mov eax [ecx] +
push dword ptr [edi+14h]  +
call dword ptr [eax]  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_40E9FD  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov eax [ebp-2Ch] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp eax 10h +
jb loc_40EA24  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
mov eax [ebp-44h] +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
cmp eax 10h +
jb loc_40EA4B  +
inc eax  +
lea ecx [ebp-58h] +
push eax  +
push dword ptr [ebp-58h]  +
call loc_403650  +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
mov dword ptr [ebp-4] 6 +
test esi esi +
jz loc_40EA6F  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [esi] +
cmp ecx edi +
jz loc_40EACE  +
call sub_474AB0  +
test edi edi +
jz loc_40EACA  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
mov [esi] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4DF124 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4DF124 +
jz loc_40EB0D  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
dec dword ptr [eax]  +
add eax 4 +
push eax  +
call ds:LeaveCriticalSection  +
retn   +
***
test edx edx +
jnz loc_40EB3C  +
lea ecx [edx+1] +
jmp loc_40EB4D  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EB42  +
sub ecx edi +
inc ecx  +
pop edi  +
test esi esi +
jz loc_40EB69  +
test edx edx +
jz loc_40EB66  +
test ecx ecx +
jz loc_40EB66  +
push ecx  +
push edx  +
push esi  +
call loc_48C9C0  +
add esp 0Ch +
pop esi  +
retn   +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B85F7  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
push 28h  +
mov dword ptr [esi] offset off_4DF0F8 +
mov dword ptr [esi+4] 0 +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
mov edx offset dword_4F63D8 +
cmp dword_4F63EC 10h +
mov ecx offset dword_4F640C +
cmovnb edx dword_4F63D8 +
cmp dword_4F6420 10h +
push edx  +
cmovnb ecx dword_4F640C +
push ecx  +
mov ecx eax +
call loc_40FBC0  +
mov [esi+4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+4] +
mov dword ptr [esi] offset off_4DF0F8 +
test edi edi +
jz loc_40EC3D  +
mov ecx edi +
call sub_40FE40  +
push 28h  +
push edi  +
call sub_488C60  +
add esp 8 +
mov dword ptr [esi+4] 0 +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_4DF124 +
jz loc_40EC54  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8628  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp [ebp+arg_0] 0 +
jnz loc_40ECA3  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push offset CriticalSection  +
mov [ebp+var_10] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
mov [ebp+var_4] 0 +
mov esi [esi+4] +
mov ecx esi +
call sub_410650  +
mov ecx [esi] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov eax [ecx] +
push [ebp+arg_0]  +
mov eax [eax+14h] +
call eax  +
xor ecx ecx +
mov esi 194h +
test al al +
push offset CriticalSection  +
cmovnz esi ecx +
dec dword_4F63F0  +
call ds:LeaveCriticalSection  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B8658  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
cmp [ebp+arg_0] 0 +
jz loc_40ED95  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_40ED95  +
push offset CriticalSection  +
mov [ebp+arg_4] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
mov ecx [ebx+4] +
call sub_410060  +
mov [esi] al +
dec dword_4F63F0  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B869E  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
test edi edi +
jz loc_40EF04  +
test esi esi +
jz loc_40EF04  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 0 +
push offset CriticalSection  +
mov [ebp+var_44] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
push edi  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebx+4] +
push eax  +
call sub_40FEE0  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_40EE6E  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40EE53  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_40EE83  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov byte ptr [ebp+var_4] 0 +
dec dword_4F63F0  +
mov edi ds:LeaveCriticalSection +
push offset CriticalSection  +
call edi  +
cmp [ebp+var_18] 0 +
jnz loc_40EEAA  +
mov byte ptr [esi] 0 +
mov esi 192h +
jmp loc_40EEEB  +
push offset CriticalSection  +
mov [ebp+var_44] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
mov ecx [ebx+4] +
cmovnb eax [ebp+var_28] +
push eax  +
call sub_4100C0  +
mov [esi] al +
xor esi esi +
dec dword_4F63F0  +
push offset CriticalSection  +
call edi  +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_40EF00  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax esi +
jmp loc_40EF09  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B86D8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
cmp [ebp+arg_0] 0 +
jnz loc_40EF72  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
push offset CriticalSection  +
mov [ebp+var_10] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
call sub_410180  +
dec dword_4F63F0  +
mov bl al +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8716  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
test edi edi +
jz loc_40F105  +
test esi esi +
jz loc_40F105  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 0 +
push offset CriticalSection  +
mov [ebp+var_44] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
push edi  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebx+4] +
push eax  +
call sub_40FEE0  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_40F08E  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40F073  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_40F0A3  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov byte ptr [ebp+var_4] 0 +
dec dword_4F63F0  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
mov eax [ebp+var_18] +
test eax eax +
jz loc_40F0E1  +
inc eax  +
push eax  +
call sub_488C96  +
add esp 4 +
mov [esi] eax +
cmp [ebp+var_14] 10h +
lea edx [ebp+var_28] +
mov ecx eax +
cmovnb edx [ebp+var_28] +
call sub_40EB30  +
xor esi esi +
jmp loc_40F0EC  +
mov dword ptr [esi] 0 +
mov esi 191h +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_40F101  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax esi +
jmp loc_40F10A  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_40F143  +
push eax  +
call sub_488C91  +
add esp 4 +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8750  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp [ebp+arg_0] 0 +
jz loc_40F31A  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_40F31A  +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_4] 0 +
push offset CriticalSection  +
mov [ebp+var_18] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
lea eax [ebp+var_30] +
mov byte ptr [ebp+var_4] 1 +
mov ecx [esi+4] +
push eax  +
call sub_40FF10  +
push eax  +
lea ecx [ebp+var_24] +
call sub_40F750  +
lea ecx [ebp+var_30] +
call sub_406430  +
mov byte ptr [ebp+var_4] 0 +
dec dword_4F63F0  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
mov edi [ebp+var_24] +
mov ecx [ebp+var_20] +
cmp edi ecx +
jz loc_40F2BF  +
sub ecx edi +
mov eax 2AAAAAABh +
imul  ecx +
xor ecx ecx +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 4 +
mov eax esi +
mov [ebp+var_10] esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_488C96  +
add esp 4 +
mov [ebp+var_14] eax +
xor ebx ebx +
test esi esi +
jz loc_40F2AB  +
mov esi edi +
mov eax [esi+10h] +
inc eax  +
push eax  +
call sub_488C96  +
mov edi eax +
add esp 4 +
mov eax [ebp+var_14] +
mov [eax+ebx*4] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_40F262  +
mov edx [esi] +
jmp loc_40F264  +
mov edx esi +
test edx edx +
jnz loc_40F26D  +
lea eax [edx+1] +
jmp loc_40F280  +
mov eax edx +
lea ecx [eax+1] +
mov [ebp+var_18] ecx +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40F275  +
sub eax [ebp+var_18] +
inc eax  +
test edi edi +
jz loc_40F29C  +
test edx edx +
jz loc_40F299  +
test eax eax +
jz loc_40F299  +
push eax  +
push edx  +
push edi  +
call loc_48C9C0  +
add esp 0Ch +
jmp loc_40F29C  +
mov byte ptr [edi] 0 +
inc ebx  +
add esi 18h +
cmp ebx [ebp+var_10] +
jb loc_40F243  +
mov esi [ebp+var_10] +
mov edi [ebp+var_24] +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_20] +
mov [eax] esi +
xor esi esi +
jmp loc_40F2D3  +
mov eax [ebp+arg_0] +
mov esi 192h +
mov dword ptr [eax] 0 +
mov dword ptr [ebx] 0 +
test edi edi +
jz loc_40F304  +
push [ebp+arg_0]  +
mov edx ecx +
push ecx  +
mov ecx edi +
call loc_407E30  +
mov ecx [ebp+var_1C] +
mov eax 2AAAAAABh +
sub ecx edi +
add esp 8 +
imul  ecx +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
push ecx  +
push edi  +
call loc_406C30  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_40F371  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
test ebx ebx +
jz loc_40F366  +
push dword ptr [edi+esi*4]  +
call sub_488C91  +
inc esi  +
add esp 4 +
cmp esi ebx +
jb loc_40F356  +
push edi  +
call sub_488C91  +
add esp 4 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B869E  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
test edi edi +
jz loc_40F4E1  +
test esi esi +
jz loc_40F4E1  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
mov [ebp+var_4] 0 +
push offset CriticalSection  +
mov [ebp+var_44] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
push edi  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebx+4] +
push eax  +
call sub_40FEE0  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_40F43E  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40F423  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_40F453  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
mov byte ptr [ebp+var_4] 0 +
dec dword_4F63F0  +
mov edi ds:LeaveCriticalSection +
push offset CriticalSection  +
call edi  +
cmp [ebp+var_18] 0 +
jnz loc_40F47D  +
mov dword ptr [esi] 0 +
mov esi 192h +
jmp loc_40F4C8  +
push offset CriticalSection  +
mov [ebp+var_44] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
mov ecx [ebx+4] +
cmovnb eax [ebp+var_28] +
push eax  +
call sub_410240  +
mov [esi] eax +
xor ecx ecx +
test eax eax +
mov esi 193h +
push offset CriticalSection  +
cmovnz esi ecx +
dec dword_4F63F0  +
call edi  +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_40F4DD  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax esi +
jmp loc_40F4E6  +
mov eax 3 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B8628  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset CriticalSection  +
mov [ebp+var_10] offset dword_4F63F0 +
call ds:EnterCriticalSection  +
inc dword_4F63F0  +
mov [ebp+var_4] 0 +
cmp byte_4F62FC 0 +
jz loc_40F563  +
mov esi 1 +
jmp loc_40F58E  +
push 0  +
push offset unk_4DE8C5  +
mov ecx offset dword_4F640C +
call loc_4031A0  +
push 0  +
push offset unk_4DE8C5  +
mov ecx offset dword_4F63D8 +
call loc_4031A0  +
mov byte_4F62FC 1 +
xor esi esi +
dec dword_4F63F0  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax [ebp-14h] +
mov dword ptr [eax] 0 +
mov eax offset loc_40F6CA +
retn   +
mov eax 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
inc dword_4F63F0  +
dec dword_4F6300  +
cmp dword_4F6300 0 +
jg loc_40F734  +
mov ecx dword_4F62F8 +
test ecx ecx +
jz loc_40F720  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4F62F8 0 +
mov dword_4F6300 0 +
dec dword_4F63F0  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp edi ebx +
jz loc_40F7C9  +
mov ecx [edi] +
test ecx ecx +
jz loc_40F7A5  +
push [ebp+arg_0]  +
mov edx [edi+4] +
push ecx  +
call loc_407E30  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_406C30  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
mov [edi+8] eax +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+10h] +
cmp eax ebx +
jb loc_40FB8E  +
mov ecx [ebp+10h] +
mov edi [ecx+10h] +
cmp edi [ebp+14h] +
jb loc_40FB98  +
mov edx [ebp+0Ch] +
sub eax ebx +
cmp edx eax +
mov [ebp-4] eax +
cmova edx eax +
sub edi [ebp+14h] +
mov eax [esi+10h] +
mov [ebp-8] edi +
mov edi [ebp+18h] +
cmp edi [ebp-8] +
mov [ebp+0Ch] edx +
cmova edi [ebp-8] +
sub eax edx +
mov [ebp+18h] eax +
mov eax edi +
not eax  +
cmp eax [ebp+18h] +
jbe loc_40FBA2  +
mov ebx [ebp+18h] +
mov eax [ebp-4] +
add ebx edi +
sub eax edx +
mov [ebp+18h] ebx +
cmp [esi+10h] ebx +
mov ebx [ebp+8] +
mov [ebp-4] eax +
jnb loc_40F8A8  +
cmp dword ptr [ebp+18h] 0FFFFFFFEh +
ja loc_40FBAC  +
mov ebx [ebp+18h] +
cmp [esi+14h] ebx +
mov ebx [ebp+8] +
jnb loc_40F882  +
push dword ptr [esi+10h]  +
mov ecx esi +
push dword ptr [ebp+18h]  +
call sub_4037F0  +
mov ecx [ebp+10h] +
mov edx [ebp+0Ch] +
mov eax [ebp-4] +
jmp loc_40F8A8  +
cmp dword ptr [ebp+18h] 0 +
jnz loc_40F8A8  +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_40F89C  +
mov ebx [esi] +
mov [ebp-8] ebx +
jmp loc_40F89F  +
mov [ebp-8] esi +
mov ebx [ebp-8] +
mov byte ptr [ebx] 0 +
mov ebx [ebp+8] +
cmp edi edx +
jnz loc_40F8D7  +
cmp dword ptr [ecx+14h] 10h +
jb loc_40F8B4  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40F8BE  +
mov edx [esi] +
jmp loc_40F8C0  +
mov edx esi +
test edi edi +
jz loc_40FB62  +
mov eax [ebp+14h] +
add eax ecx +
push edi  +
push eax  +
lea eax [edx+ebx] +
jmp loc_40FB59  +
cmp esi ecx +
jz loc_40F952  +
cmp dword ptr [esi+14h] 10h +
jb loc_40F8EB  +
mov ebx [esi] +
mov [ebp-8] ebx +
mov ebx [ebp+8] +
jmp loc_40F8EE  +
mov [ebp-8] esi +
cmp dword ptr [esi+14h] 10h +
jb loc_40F8FE  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_40F901  +
mov [ebp+8] esi +
test eax eax +
jz loc_40F921  +
push eax  +
mov eax [ebp-8] +
add eax ebx +
add eax edx +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edi +
push eax  +
call loc_48B430  +
mov ecx [ebp+10h] +
add esp 0Ch +
cmp dword ptr [ecx+14h] 10h +
jb loc_40F929  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40F933  +
mov edx [esi] +
jmp loc_40F935  +
mov edx esi +
test edi edi +
jz loc_40FB62  +
mov eax [ebp+14h] +
add eax ecx +
push edi  +
push eax  +
lea eax [edx+ebx] +
push eax  +
call loc_48C9C0  +
jmp loc_40FB5F  +
cmp edi edx +
jnb loc_40F9C9  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40F965  +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_40F968  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_40F971  +
mov ecx [esi] +
jmp loc_40F973  +
mov ecx esi +
test edi edi +
jz loc_40F98E  +
mov eax [ebp+8] +
add eax [ebp+14h] +
push edi  +
push eax  +
lea eax [ecx+ebx] +
push eax  +
call loc_48B430  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40F99D  +
mov ecx [esi] +
mov [ebp+14h] ecx +
jmp loc_40F9A0  +
mov [ebp+14h] esi +
cmp eax 10h +
jb loc_40F9A9  +
mov ecx [esi] +
jmp loc_40F9AB  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_40FB62  +
push eax  +
mov eax [ebp+14h] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
jmp loc_40FB59  +
mov ecx [ebp+14h] +
cmp ecx ebx +
ja loc_40FA3B  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40F9E2  +
mov edx [esi] +
mov [ebp+8] edx +
mov edx [ebp+0Ch] +
jmp loc_40F9E5  +
mov [ebp+8] esi +
cmp ecx 10h +
jb loc_40F9EE  +
mov ecx [esi] +
jmp loc_40F9F0  +
mov ecx esi +
test eax eax +
jz loc_40FA0B  +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_48B430  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40FA17  +
mov edx [esi] +
jmp loc_40FA19  +
mov edx esi +
cmp eax 10h +
jb loc_40FA22  +
mov ecx [esi] +
jmp loc_40FA24  +
mov ecx esi +
test edi edi +
jz loc_40FB62  +
mov eax [ebp+14h] +
add eax edx +
push edi  +
push eax  +
lea eax [ecx+ebx] +
jmp loc_40FB59  +
lea eax [ebx+edx] +
cmp eax ecx +
mov eax [esi+14h] +
ja loc_40FAB2  +
cmp eax 10h +
jb loc_40FA51  +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_40FA54  +
mov [ebp+8] esi +
cmp eax 10h +
jb loc_40FA5D  +
mov ecx [esi] +
jmp loc_40FA5F  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_40FA80  +
push eax  +
mov eax [ebp+8] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_48B430  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40FA8C  +
mov eax [esi] +
jmp loc_40FA8E  +
mov eax esi +
cmp ecx 10h +
jb loc_40FA97  +
mov ecx [esi] +
jmp loc_40FA99  +
mov ecx esi +
test edi edi +
jz loc_40FB62  +
sub eax edx +
add eax [ebp+14h] +
add eax edi +
push edi  +
push eax  +
lea eax [ecx+ebx] +
jmp loc_40FB59  +
cmp eax 10h +
jb loc_40FABE  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_40FAC1  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_40FACA  +
mov ecx [esi] +
jmp loc_40FACC  +
mov ecx esi +
test edx edx +
jz loc_40FAE7  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
push edx  +
push eax  +
lea eax [ecx+ebx] +
push eax  +
call loc_48B430  +
mov edx [ebp+0Ch] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40FAF6  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_40FAF9  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_40FB02  +
mov ecx [esi] +
jmp loc_40FB04  +
mov ecx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_40FB22  +
push eax  +
mov eax [ebp+10h] +
add eax ebx +
add eax edx +
push eax  +
lea eax [ecx+ebx] +
add eax edi +
push eax  +
call loc_48B430  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40FB31  +
mov ecx [esi] +
mov [ebp+10h] ecx +
jmp loc_40FB34  +
mov [ebp+10h] esi +
cmp eax 10h +
jb loc_40FB3D  +
mov edx [esi] +
jmp loc_40FB3F  +
mov edx esi +
mov ecx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
jz loc_40FB62  +
push eax  +
mov eax [ebp+10h] +
add eax [ebp+14h] +
add eax edi +
push eax  +
mov eax [ebp+8] +
add eax edx +
add eax ecx +
push eax  +
call loc_48B430  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov ecx [ebp+18h] +
mov [esi+10h] ecx +
jb loc_40FB7F  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax+ecx] 0 +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B883F  +
mov eax large fs:0 +
push eax  +
sub esp 12Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-134h] esi +
mov edi [ebp+8] +
mov edx [ebp+0Ch] +
mov [ebp-138h] esi +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [ebp-4] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov byte ptr [ebp-4] 5 +
mov word ptr [esi+24h] 101h +
cmp byte ptr [edx] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
jnz loc_40FC58  +
xor ecx ecx +
jmp loc_40FC69  +
mov ecx edx +
lea ebx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40FC60  +
sub ecx ebx +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
lea eax [ebp-28h] +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-130h] +
call sub_40A720  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_40FC9B  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov dword ptr [ebp-0A4h] 0Fh +
mov dword ptr [ebp-0A8h] 0 +
mov byte ptr [ebp-0B8h] 0 +
mov dword ptr [ebp-8Ch] 0Fh +
mov dword ptr [ebp-90h] 0 +
mov byte ptr [ebp-0A0h] 0 +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
mov dword ptr [ebp-5Ch] 0Fh +
mov dword ptr [ebp-60h] 0 +
mov byte ptr [ebp-70h] 0 +
mov dword ptr [ebp-44h] 0Fh +
mov dword ptr [ebp-48h] 0 +
mov byte ptr [ebp-58h] 0 +
mov byte ptr [ebp-4] 9 +
test edi edi +
jz loc_40FD82  +
mov ecx offset unk_4DE8C5 +
mov eax edi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_40FD40  +
test dl dl +
jz loc_40FD3C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_40FD40  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_40FD20  +
xor eax eax +
jmp loc_40FD45  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_40FD82  +
push edi  +
lea ecx [ebp-40h] +
call sub_402FD0  +
push 0FFFFFFFFh  +
push 0  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea ecx [ebp-0E8h] +
call loc_4032A0  +
mov byte ptr [ebp-4] 9 +
mov eax [ebp-2Ch] +
cmp eax 10h +
jb loc_40FD82  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
push 4  +
call sub_488C2D  +
add esp 4 +
mov [ebp-134h] eax +
mov dword ptr [eax] 0 +
push 30h  +
mov [esi+4] eax +
call sub_488C2D  +
add esp 4 +
mov [ebp-134h] eax +
mov ecx eax +
call sub_4162A0  +
mov ecx eax +
mov eax [esi+4] +
mov [esi+8] ecx +
push 110h  +
mov [eax] ecx +
call sub_488C2D  +
add esp 4 +
mov [ebp-134h] eax +
lea ecx [ebp-0B8h] +
mov byte ptr [ebp-4] 0Bh +
push ecx  +
lea ecx [ebp-130h] +
push ecx  +
mov ecx eax +
call sub_4022E0  +
mov byte ptr [ebp-4] 9 +
mov ecx esi +
mov [esi] eax +
call sub_4102F0  +
mov ecx esi +
call sub_410450  +
lea ecx [ebp-0B8h] +
call sub_40A870  +
lea ecx [ebp-130h] +
call sub_40A870  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [esi] +
test ecx ecx +
jz loc_40FE4F  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov eax [esi+4] +
mov dword ptr [esi] 0 +
test eax eax +
jz loc_40FE67  +
push 4  +
push eax  +
call sub_488C60  +
add esp 8 +
push edi  +
mov edi [esi+8] +
mov dword ptr [esi+4] 0 +
test edi edi +
jz loc_40FE88  +
mov ecx edi +
call sub_416310  +
push 30h  +
push edi  +
call sub_488C60  +
add esp 8 +
mov dword ptr [esi+8] 0 +
mov ecx [esi+20h] +
pop edi  +
test ecx ecx +
jz loc_40FE9C  +
call sub_479590  +
mov ecx [esi+1Ch] +
test ecx ecx +
jz loc_40FEA8  +
call sub_479590  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_40FEB4  +
call sub_479590  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_40FEC0  +
call sub_479590  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_40FECC  +
call sub_479590  +
mov ecx [esi+0Ch] +
pop esi  +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] 0 +
call sub_410650  +
mov ecx [esi] +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B8899  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov [ebp+var_3C] edi +
mov [ebp+var_2C] 0 +
call sub_410650  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov [ebp+var_4] 0 +
lea edx [ebp+var_38] +
mov ecx [esi] +
push edx  +
mov [ebp+var_2C] 1 +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov [ebp+var_4] 1 +
mov esi [ebp+var_38] +
cmp esi [ebp+var_34] +
jz loc_41002D  +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
call sub_40AB40  +
mov ebx eax +
mov byte ptr [ebp+var_4] 2 +
cmp ebx [edi+4] +
jnb loc_40FFE7  +
mov eax [edi] +
cmp eax ebx +
ja loc_40FFE7  +
sub ebx eax +
mov eax 2AAAAAABh +
imul  ebx +
mov eax [edi+4] +
sar edx 2 +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
cmp eax [edi+8] +
jnz loc_40FFD5  +
push ecx  +
mov ecx edi +
call loc_40BD60  +
mov eax [edi] +
lea ecx [ebx+ebx*2] +
lea eax [eax+ecx*8] +
mov ecx [edi+4] +
test ecx ecx +
jz loc_410004  +
push eax  +
jmp loc_40FFFF  +
mov eax [edi+4] +
cmp eax [edi+8] +
jnz loc_40FFF7  +
push ecx  +
mov ecx edi +
call loc_40BD60  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_410004  +
push ebx  +
call sub_402F50  +
add dword ptr [edi+4] 18h +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_410021  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
add esi 78h +
cmp esi [ebp+var_34] +
jnz loc_40FF96  +
lea ecx [ebp+var_38] +
call sub_4030A0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1Ch+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push eax  +
lea eax [esp+24h+var_1C] +
push eax  +
call sub_40FEE0  +
cmp [esp+20h+var_C] 0 +
mov ecx [esp+20h+var_8] +
setnbe bl  +
cmp ecx 10h +
jb loc_4100A3  +
inc ecx  +
push ecx  +
push [esp+24h+var_1C]  +
lea ecx [esp+28h+var_1C] +
call loc_403650  +
mov ecx [esp+28h+var_C] +
mov al bl +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B88C8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov edx [ebp+arg_0] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41010A  +
xor ecx ecx +
jmp loc_410119  +
mov ecx edx +
lea esi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_410110  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
push 1  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
push eax  +
call sub_416890  +
mov ecx [ebp+var_14] +
mov esi eax +
cmp ecx 10h +
jb loc_41014F  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
test esi esi +
setnz al  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B88C8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov edx [ebp+arg_0] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp byte ptr [edx] 0 +
jnz loc_4101CA  +
xor ecx ecx +
jmp loc_4101D9  +
mov ecx edx +
lea esi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4101D0  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
push 0  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
push eax  +
call sub_416890  +
mov ecx [ebp+var_14] +
mov esi eax +
cmp ecx 10h +
jb loc_41020F  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
test esi esi +
setnz al  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B88C8  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov edx [ebp+arg_0] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41028A  +
xor ecx ecx +
jmp loc_410299  +
mov ecx edx +
lea esi [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_410290  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_4031A0  +
push 1  +
lea eax [ebp+var_28] +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
push eax  +
call sub_416890  +
mov ecx [ebp+var_14] +
mov esi eax +
cmp ecx 10h +
jb loc_4102CF  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov eax [ebp-18h] +
mov byte ptr [eax+25h] 0 +
mov eax offset loc_4103BE +
retn   +
***
push 0FFFFFFFFh  +
mov eax [ebp-30h] +
mov byte ptr [eax+25h] 0 +
mov eax offset loc_41054F +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_410592  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
push edi  +
push esi  +
call sub_4798A0  +
mov edi [ebp+arg_4] +
add esp 4 +
cmp dword ptr [edi] 0 +
setnz cl  +
cmp al cl +
jz loc_4105B1  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
test al al +
jnz loc_4105BB  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
push esi  +
call loc_4799B0  +
mov ecx eax +
add esp 4 +
mov eax [ecx] +
push dword ptr [edi]  +
mov eax [eax+4] +
call eax  +
xor ecx ecx +
test al al +
pop edi  +
setz cl  +
mov al cl +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_410643  +
push esi  +
call sub_4798A0  +
add esp 4 +
test al al +
jnz loc_410611  +
mov esi [ebp+arg_4] +
mov ecx [esi] +
test ecx ecx +
jz loc_410643  +
call sub_479590  +
mov dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 8  +
push edi  +
push esi  +
call loc_4799B0  +
mov edi [ebp+arg_4] +
mov esi eax +
add esp 4 +
mov ecx [edi] +
cmp ecx esi +
jz loc_410642  +
call sub_474AB0  +
test esi esi +
jz loc_41063E  +
mov ecx esi +
call sub_4795C0  +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor esi esi +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B898C  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
call sub_474B70  +
mov esi eax +
mov [ebp+var_18] esi +
mov [ebp+var_4] 0 +
cmp byte ptr [edi+25h] 0 +
jz loc_4106F9  +
cmp byte ptr [edi+24h] 0 +
jnz loc_4106F9  +
lea eax [edi+18h] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_410580  +
test al al +
jnz loc_4106DD  +
lea eax [edi+20h] +
push eax  +
push dword ptr [edi+14h]  +
call sub_410580  +
test al al +
jnz loc_4106DD  +
lea eax [edi+1Ch] +
push eax  +
push dword ptr [edi+10h]  +
call sub_410580  +
test al al +
jnz loc_4106DD  +
mov [ebp+var_4] 2 +
jmp loc_41077F  +
mov [ebp+var_4] 0 +
jmp loc_4106F9  +
mov eax offset loc_4106EC +
retn   +
mov edi [ebp-14h] +
mov dword ptr [ebp-4] 0 +
mov esi [ebp-18h] +
mov ecx [edi] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
lea ecx [ebp+var_24] +
mov byte ptr [ebp+var_4] 4 +
call sub_411A80  +
mov ecx [edi] +
lea edx [ebp+var_24] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp byte ptr [edi+25h] 0 +
jz loc_410770  +
lea eax [edi+18h] +
mov byte ptr [ebp+var_4] 5 +
push eax  +
push dword ptr [edi+0Ch]  +
mov byte ptr [edi+24h] 0 +
call sub_4105E0  +
lea eax [edi+20h] +
push eax  +
push dword ptr [edi+14h]  +
call sub_4105E0  +
lea eax [edi+1Ch] +
push eax  +
push dword ptr [edi+10h]  +
call sub_4105E0  +
jmp loc_410770  +
mov eax [ebp-14h] +
mov byte ptr [eax+24h] 1 +
mov eax offset loc_41076D +
retn   +
mov esi [ebp-18h] +
lea ecx [ebp+var_24] +
call sub_4030A0  +
mov [ebp+var_4] 7 +
test esi esi +
jz loc_41078A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
lea edx [esi+4] +
mov [ebp+var_4] 1 +
push edx  +
lea eax [ebp+var_8] +
mov dword ptr [esi] offset off_4CEDC0 +
push eax  +
movq qword ptr [edx] xmm0 +
call sub_48C93D  +
add esp 8 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_48C93D  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_4CEDC0 +
push eax  +
call sub_48C9A0  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B89FA  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 0  +
call sub_489E64  +
mov [ebp+var_4] 0 +
mov dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov byte ptr [esi+10h] 0 +
xor eax eax +
mov dword ptr [esi+14h] 0 +
mov [esi+18h] ax +
mov [esi+1Ch] eax +
mov [esi+20h] ax +
mov [esi+24h] eax +
mov [esi+28h] al +
mov [esi+2Ch] eax +
mov [esi+30h] al +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 6 +
test eax eax +
jnz loc_410929  +
lea eax [ebp+var_20] +
mov [ebp+var_24] offset off_4CEDC0 +
push eax  +
lea eax [ebp+var_18] +
mov [ebp+var_18] offset aBadLocaleName +
xorps xmm0 xmm0 +
mov [ebp+var_14] 1 +
push eax  +
movq [ebp+var_20] xmm0 +
call sub_48C93D  +
add esp 8 +
mov [ebp+var_24] offset off_4CEE00 +
lea eax [ebp+var_24] +
push offset unk_4EC02C  +
push eax  +
call sub_48D64F  +
push eax  +
push esi  +
call sub_48A1AC  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B82E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
call sub_48A1F7  +
mov eax [esi+2Ch] +
add esp 4 +
test eax eax +
jz loc_41098E  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_4109A5  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_4109BC  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi+1Ch] 0 +
mov eax [esi+14h] +
test eax eax +
jz loc_4109D3  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4109EA  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_410A01  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov ecx esi +
mov dword ptr [esi+4] 0 +
call sub_489EBC  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_48C93D  +
add esp 8 +
mov dword ptr [esi] offset off_4CEE00 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CEE0C +
jz loc_410A7D  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4CEE0C +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8A20  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_410B0A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_410B0A  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8A4F  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_410BCE  +
cmp dword ptr [esi] 0 +
jnz loc_410BCE  +
push 18h  +
call sub_488C2D  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_410B91  +
mov ecx offset unk_4DE8C5 +
jmp loc_410B9B  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_410B9B  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_54] +
call sub_410870  +
lea eax [ebp+var_20] +
mov dword ptr [edi+4] 0 +
push eax  +
mov dword ptr [edi] offset off_4CEE1C +
call sub_48A58B  +
add esp 4 +
lea ecx [ebp+var_54] +
movups xmm0 oword ptr [eax] +
movups oword ptr [edi+8] xmm0 +
mov [esi] edi +
call sub_410950  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_48A5F6  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_410C4A  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_48A5F6  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_410C32  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
lea eax [ecx+8] +
push eax  +
movzx eax [ebp+arg_0] +
push eax  +
call sub_48A6F0  +
add esp 8 +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_4] +
xor edx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ebx esi +
push edi  +
xor edi edi +
cmp esi [ebp+arg_4] +
cmova ebx edx +
test ebx ebx +
jz loc_410CBA  +
lea eax [ecx+8] +
mov [ebp+arg_4] eax +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_48A6F0  +
mov [esi] al +
inc edi  +
mov eax [ebp+arg_4] +
add esp 8 +
inc esi  +
cmp edi ebx +
jnz loc_410CA2  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_8]  +
call loc_48C9C0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov al [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ecx  +
push edx  +
push [ebp+arg_C]  +
call loc_48C9C0  +
mov eax [ebp+arg_4] +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov eax [esi+10h] +
mov dword ptr [esi] offset off_4CEE1C +
test eax eax +
jle loc_410D4D  +
push dword ptr [esi+0Ch]  +
call sub_497EC6  +
jmp loc_410D57  +
jns loc_410D5A  +
push dword ptr [esi+0Ch]  +
call sub_488C91  +
add esp 4 +
push dword ptr [esi+14h]  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi] offset off_4CEE0C +
test [ebp+arg_0] 1 +
jz loc_410D7C  +
push 18h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CEE4C +
jz loc_410DAD  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ecx+4] +
push dword ptr [ecx]  +
mov ecx eax +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
mov edx [eax] +
call dword ptr [edx+8]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [eax] edx +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
lea edx [ebp+var_8] +
sub esp 8 +
push esi  +
push [ebp+arg_0]  +
push edx  +
call dword ptr [eax+0Ch]  +
mov esi [ebp+arg_4] +
mov ecx [eax+4] +
mov edx [esi+4] +
mov ecx [ecx+4] +
cmp ecx [edx+4] +
jnz loc_410E43  +
mov eax [eax] +
cmp eax [esi] +
jnz loc_410E43  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi+4] +
cmp eax [edx+4] +
jnz loc_410E70  +
mov eax [esi] +
cmp eax [ebp+arg_4] +
jnz loc_410E70  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B8A80  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_30] 0 +
mov [ebp+var_4] 0 +
cmp [ebp+arg_1C] 0 +
jz loc_410ECF  +
push 2  +
push offset asc_4DF184  +
lea ecx [ebp+arg_C] +
call loc_406A00  +
lea eax [ebp+var_2C] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_410DC0  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+arg_C] +
mov byte ptr [ebp+var_4] 1 +
call loc_406B30  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_410F01  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call loc_403650  +
lea eax [ebp+arg_C] +
mov ecx esi +
push eax  +
call sub_402F50  +
mov ecx [ebp+arg_20] +
cmp ecx 10h +
jb loc_410F21  +
inc ecx  +
push ecx  +
push [ebp+arg_C]  +
lea ecx [ebp+arg_C] +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+24h+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
sub esp 18h +
mov esi ecx +
mov ecx esp +
mov [esp+40h+var_24] esi +
push 0FFFFFFFFh  +
push 0  +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov byte ptr [ecx] 0 +
call loc_4032A0  +
push [ebp+arg_4]  +
lea eax [esp+50h+var_28] +
push [ebp+arg_0]  +
push eax  +
call sub_410E80  +
mov ecx eax +
add esp 24h +
cmp dword ptr [ecx+14h] 10h +
jb loc_410F9B  +
mov ecx [ecx] +
lea eax [esi+4] +
mov dword ptr [esi] offset off_4CEDC0 +
xorps xmm0 xmm0 +
mov [esp+34h+var_30] ecx +
push eax  +
movq qword ptr [eax] xmm0 +
lea eax [esp+38h+var_30] +
push eax  +
mov [esp+3Ch+var_2C] 1 +
call sub_48C93D  +
mov eax [esp+3Ch+var_14] +
add esp 8 +
mov dword ptr [esi] offset off_4CEE00 +
cmp eax 10h +
jb loc_410FE0  +
inc eax  +
lea ecx [esp+34h+var_28] +
push eax  +
push [esp+38h+var_28]  +
call loc_403650  +
mov ecx [ebp+arg_0] +
mov eax esi +
mov [esi+0Ch] ecx +
mov ecx [ebp+arg_4] +
mov [esi+10h] ecx +
mov ecx [esp+3Ch+var_18] +
mov dword ptr [esi] offset off_4CEE68 +
pop esi  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push 0FFFFFFFFh  +
push offset loc_4B8AB8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_30] esi +
mov edx [ebp+arg_8] +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41108D  +
xor ecx ecx +
jmp loc_41109B  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_411092  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp+var_2C] +
call loc_4031A0  +
lea eax [ebp+var_2C] +
mov [ebp+var_4] 0 +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_410F40  +
mov ecx [ebp+var_18] +
cmp ecx 10h +
jb loc_4110D2  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call loc_403650  +
mov eax esi +
mov dword ptr [esi] offset off_4CEE74 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
call sub_48A566  +
mov esi [ebp+8] +
mov edx eax +
add esp 4 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_411146  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_411150  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp eax 1 +
jnz loc_4111BF  +
push 15h  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
push offset aIostreamStream  +
mov byte ptr [esi] 0 +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push eax  +
push esi  +
call loc_411100  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax [ebp+8] +
sub esp 18h +
and eax 17h +
mov [ecx+0Ch] eax +
mov ecx [ecx+10h] +
and ecx eax +
jz loc_4111FB  +
cmp byte ptr [ebp+0Ch] 0 +
jnz loc_411201  +
test cl 4 +
jnz loc_41120A  +
test cl 2 +
jnz loc_411237  +
jmp loc_411264  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
call sub_48D64F  +
call sub_413730  +
push offset aIos_baseBadbit  +
push eax  +
push 1  +
lea ecx [esp+10h] +
call sub_411040  +
push offset unk_4EC0EC  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4CEE9C +
push eax  +
call sub_48D64F  +
call sub_413730  +
push offset aIos_baseFailbi  +
push eax  +
push 1  +
lea ecx [esp+10h] +
call sub_411040  +
push offset unk_4EC0EC  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4CEE9C +
push eax  +
call sub_48D64F  +
call sub_413730  +
push offset aIos_baseEofbit  +
push eax  +
push 1  +
lea ecx [esp+10h] +
call sub_411040  +
push offset unk_4EC0EC  +
lea eax [esp+8] +
mov dword ptr [esp+8] offset off_4CEE9C +
push eax  +
call sub_48D64F  +
push 0FFFFFFFFh  +
push offset loc_4B8AE6  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+30h] +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B76E6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
push 0  +
mov dword ptr [edi+30h] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 201h +
mov dword ptr [edi+18h] 6 +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
call loc_4111D0  +
push 8  +
call sub_488C2D  +
add esp 4 +
mov esi eax +
push 1  +
mov [ebp+var_4] 0 +
call sub_48A0A9  +
mov [esi+4] eax +
add esp 4 +
mov [edi+30h] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_48C93D  +
mov dword ptr [edi] offset off_4CEE68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_4CEE9C +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_48C93D  +
mov dword ptr [edi] offset off_4CEE68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_4CEE74 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_48C93D  +
mov dword ptr [edi] offset off_4CEE68 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4DF2AC +
jz loc_41150D  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8B48  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
xor eax eax +
mov [ebp+var_30] 0 +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
push offset aAppdata  +
mov [ebp+var_4] eax +
call sub_497C8E  +
mov edx eax +
add esp 4 +
test edx edx +
jnz loc_4115A4  +
mov [esi+10h] eax +
mov ecx esi +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
lea eax [ebp+var_28] +
push eax  +
call sub_40C0B0  +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_41160E  +
inc ecx  +
push ecx  +
jmp loc_411603  +
cmp word ptr [edx] 0 +
jnz loc_4115AE  +
xor ecx ecx +
jmp loc_4115C2  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4115B3  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_28] +
call loc_40BB60  +
push 19h  +
push offset aAdobeVulcanSpe  +
lea ecx [ebp+var_28] +
call loc_40C9D0  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
lea eax [ebp+var_28] +
push eax  +
call sub_40C0B0  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_41160E  +
inc eax  +
push eax  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_40C2A0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8B89  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_411689  +
mov eax [esi] +
jmp loc_41168B  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_4] ecx +
push offset aCommonprogramf  +
mov [ebp+var_10] 1 +
call sub_497C8E  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_4116D3  +
cmp word ptr [edx] 0 +
jnz loc_4116B9  +
xor ecx ecx +
push ecx  +
push edx  +
jmp loc_4116DA  +
mov ecx edx +
lea edi [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4116C0  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
jmp loc_4116DA  +
push 1Dh  +
push offset aCProgramFilesC  +
mov ecx esi +
call loc_40BB60  +
push 19h  +
push offset aAdobeVulcanSpe  +
mov ecx esi +
call loc_40C9D0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8BEA  +
mov eax large fs:0 +
push eax  +
sub esp 104h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov [ebp+var_48] ebx +
mov edi ecx +
mov [ebp+var_2C] edi +
mov [ebp+var_44] 0 +
mov [ebp+var_34] edi +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_4] 1 +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
push 4  +
mov byte ptr [ebp+var_4] 2 +
call sub_488C2D  +
mov [ebp+var_2C] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax] offset off_4DF2B8 +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov edx ebx +
mov [ebp+var_44] 1 +
lea ecx [ebp+var_54] +
call loc_417F70  +
add esp 4 +
lea ecx [ebp+var_40] +
push eax  +
call sub_411C60  +
mov ecx [ebp+var_54] +
test ecx ecx +
jz loc_411803  +
push [ebp+var_34]  +
mov edx [ebp+var_50] +
push ecx  +
call loc_413BE0  +
mov ecx [ebp+var_4C] +
mov eax 2AAAAAABh +
mov esi [ebp+var_54] +
add esp 8 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406C30  +
mov ecx [ebp+var_3C] +
mov eax 2AAAAAABh +
mov esi [ebp+var_40] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
jz loc_41196D  +
mov [ebp+var_30] esi +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
push 0FFFFFFFFh  +
cmovnb eax [ebp+var_28] +
xor ecx ecx +
push ecx  +
push [ebp+var_48]  +
mov [ebp+var_18] 0 +
mov [eax] cx +
lea ecx [ebp+var_28] +
call loc_40C5C0  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
lea ecx [ebp+var_28] +
call loc_40C5C0  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
lea ecx [ebp+var_110] +
cmovnb eax [ebp+var_28] +
sub esp 0Ch +
push eax  +
call sub_411D10  +
mov ecx [ebp+var_2C] +
lea edx [ebp+var_110] +
mov byte ptr [ebp+var_4] 3 +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov esi eax +
test esi esi +
jz loc_4118A4  +
push esi  +
mov ecx edi +
call sub_406490  +
mov ecx esi +
call sub_40A870  +
push 78h  +
push esi  +
call sub_488C60  +
add esp 8 +
lea ecx [ebp+var_100] +
call sub_413240  +
test eax eax +
jnz loc_4118DE  +
mov eax [ebp+var_110] +
lea ecx [ebp+var_110] +
push 0  +
mov eax [eax+4] +
add ecx eax +
mov edx [ecx+0Ch] +
or edx 2 +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov eax [ebp+var_110] +
mov eax [eax+4] +
mov [ebp+eax+var_110] offset off_4CEF4C +
mov eax [ebp+var_110] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ebp+ecx+var_114] eax +
lea ecx [ebp+var_100] +
call sub_412620  +
mov eax [ebp+var_110] +
mov eax [eax+4] +
mov [ebp+eax+var_110] offset off_4CEEC4 +
mov eax [ebp+var_110] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ebp+ecx+var_114] eax +
lea eax [ebp+var_A0] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov [ebp+var_A0] offset off_4CEEA8 +
call sub_48A34E  +
mov esi [ebp+var_30] +
add esp 4 +
add esi 18h +
mov byte ptr [ebp+var_4] 2 +
mov [ebp+var_30] esi +
sub ebx 1 +
jnz loc_411825  +
mov esi [ebp+var_40] +
mov ecx [ebp+var_2C] +
push 1  +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_41198B  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
test esi esi +
jz loc_4119D1  +
push [ebp+var_34]  +
mov edx [ebp+var_3C] +
push ecx  +
mov ecx esi +
call loc_413BE0  +
mov ecx [ebp+var_38] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 8 +
imul  ecx +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
push ecx  +
push esi  +
call loc_406C30  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea esi [ecx+70h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-70h] offset off_4CEF4C +
mov eax [esi-70h] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ecx+esi-74h] eax +
lea ecx [esi-60h] +
call sub_412620  +
mov eax [esi-70h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-70h] offset off_4CEEC4 +
mov eax [esi-70h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-74h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push ecx  +
push esi  +
mov esi ecx +
call sub_411B50  +
mov ecx esi +
call sub_411AA0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8C60  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea ecx [ebp+var_28] +
call sub_411520  +
mov edx eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_38] +
call sub_411710  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_411AFD  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov byte ptr [ebp+var_2C] al +
mov ecx esi +
push [ebp+var_2C]  +
mov [ebp+var_18] 0 +
push [ebp+var_34]  +
mov word ptr [ebp+var_28] ax +
push [ebp+var_38]  +
push dword ptr [esi+4]  +
call sub_4139B0  +
lea ecx [ebp+var_38] +
call sub_4030A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8C60  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea ecx [ebp+var_28] +
call sub_411630  +
mov edx eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_38] +
call sub_411710  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_411BAD  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
xor eax eax +
mov [ebp+var_14] 7 +
mov byte ptr [ebp+var_2C] al +
mov ecx esi +
push [ebp+var_2C]  +
mov [ebp+var_18] 0 +
push [ebp+var_34]  +
mov word ptr [ebp+var_28] ax +
push [ebp+var_38]  +
push dword ptr [esi+4]  +
call sub_4139B0  +
lea ecx [ebp+var_38] +
call sub_4030A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_411C4E  +
push [ebp+var_4]  +
mov edx [edi+4] +
push ecx  +
call loc_413BE0  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_406C30  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp edi ebx +
jz loc_411CD9  +
mov ecx [edi] +
test ecx ecx +
jz loc_411CB5  +
push [ebp+arg_0]  +
mov edx [edi+4] +
push ecx  +
call loc_413BE0  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_406C30  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
mov [edi+8] eax +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_411D02  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov dword ptr [esi] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8CD0  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi] offset unk_4DF2C0 +
mov dword ptr [esi+70h] offset off_4CEEBC +
mov [ebp+var_4] 0 +
lea edi [esi+10h] +
mov eax [esi] +
push 0  +
push edi  +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4CEEC4 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_413530  +
mov [ebp+var_4] 2 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4CEF4C +
mov eax [esi] +
mov ecx [eax+4] +
mov [ebp+var_18] edi +
lea eax [ecx-70h] +
mov [ecx+esi-4] eax +
mov ecx edi +
call sub_413470  +
push 0  +
push 0  +
mov ecx edi +
mov dword ptr [edi] offset off_4CEF0C +
call sub_413160  +
mov byte ptr [ebp+var_4] 3 +
cmp dword ptr [edi+4Ch] 0 +
jnz loc_411E35  +
push 40h  +
push 1  +
push [ebp+arg_0]  +
call sub_48A523  +
add esp 0Ch +
test eax eax +
jz loc_411E35  +
push 1  +
push eax  +
mov ecx edi +
call sub_413160  +
lea eax [ebp+var_1C] +
mov ecx edi +
push eax  +
call sub_413420  +
push eax  +
mov byte ptr [ebp+var_4] 4 +
call sub_413790  +
add esp 4 +
mov ecx edi +
push eax  +
call sub_412F80  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_18] +
test ecx ecx +
jz loc_411E56  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_411E56  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
jmp loc_411E56  +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
add ecx esi +
mov edx [ecx+0Ch] +
or edx 2 +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_413790  +
add esp 4 +
mov ecx esi +
push eax  +
call sub_412F80  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+4Ch] 0 +
jz loc_411EB9  +
mov eax [esi] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_411EB9  +
push dword ptr [esi+4Ch]  +
call sub_49725C  +
add esp 4 +
test eax eax +
jns loc_411EB9  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+4Ch] +
test ecx ecx +
jz loc_411F08  +
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_411EE1  +
mov eax [ebp+arg_4] +
or eax [ebp+arg_8] +
jnz loc_411EE1  +
lea eax [edx+4] +
jmp loc_411EE3  +
xor eax eax +
push [ebp+arg_4]  +
push eax  +
push edx  +
push ecx  +
call sub_497E50  +
add esp 10h +
test eax eax +
jnz loc_411F08  +
push 1  +
push dword ptr [esi+4Ch]  +
mov ecx esi +
call sub_413160  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
mov [esp+14h+var_8] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
mov [esp+18h+var_4] eax +
jz loc_411FD0  +
call sub_413010  +
test al al +
jz loc_411FD0  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_49802A  +
add esp 8 +
test eax eax +
jnz loc_411FD0  +
mov eax edi +
or eax ebx +
jz loc_411F76  +
push 1  +
push ebx  +
push edi  +
push dword ptr [esi+4Ch]  +
call sub_49831F  +
add esp 10h +
test eax eax +
jnz loc_411FD0  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_497CAF  +
add esp 8 +
test eax eax +
jnz loc_411FD0  +
mov eax [ebp+arg_14] +
mov ecx esi +
mov [esi+40h] eax +
mov eax [ebp+arg_18] +
mov [esi+44h] eax +
call sub_412F50  +
mov eax [ebp+arg_0] +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx [esp+18h+var_8] +
mov [eax+8] ecx +
mov ecx [esp+18h+var_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax+14h] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_4D1C98 +
mov ecx ds:dword_4D1C9C +
pop edi  +
mov [edx] eax +
mov eax edx +
pop esi  +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_412042  +
cmp [ebp+arg_C] 1 +
jnz loc_412042  +
cmp dword ptr [esi+38h] 0 +
jnz loc_412042  +
mov edi [ebp+arg_4] +
mov ebx [ebp+arg_8] +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
jmp loc_412048  +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
jz loc_4120E6  +
mov ecx esi +
call sub_413010  +
test al al +
jz loc_4120E6  +
mov eax edi +
or eax ebx +
mov eax [ebp+arg_C] +
jnz loc_41206F  +
cmp eax 1 +
jz loc_412081  +
push eax  +
push ebx  +
push edi  +
push dword ptr [esi+4Ch]  +
call sub_49831F  +
add esp 10h +
test eax eax +
jnz loc_4120E6  +
lea eax [esp+18h+var_8] +
push eax  +
push dword ptr [esi+4Ch]  +
call sub_497CAF  +
add esp 8 +
test eax eax +
jnz loc_4120E6  +
mov eax [esi+0Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_4120B3  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
mov eax [ebp+arg_0] +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx [esp+18h+var_8] +
mov [eax+8] ecx +
mov ecx [esp+18h+var_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax+14h] esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_4D1C98 +
mov ecx ds:dword_4D1C9C +
pop edi  +
mov [edx] eax +
mov eax edx +
pop esi  +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_4B8CF8  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_412179  +
mov edx [ebx+2Ch] +
mov esi [edx] +
lea eax [esi+ecx] +
cmp ecx eax +
jnb loc_412179  +
lea eax [esi-1] +
mov [edx] eax +
mov ecx [ebx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_4122C5  +
cmp dword ptr [ebx+4Ch] 0 +
jnz loc_412187  +
or eax 0FFFFFFFFh +
jmp loc_4122C5  +
mov esi [ebx+0Ch] +
lea eax [ebx+3Ch] +
cmp [esi] eax +
jnz loc_4121A5  +
mov edx [ebx+54h] +
mov ecx [ebx+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [ebx+1Ch] +
mov [eax] ecx +
mov eax [ebx+2Ch] +
mov [eax] edx +
cmp dword ptr [ebx+38h] 0 +
jnz loc_4121C3  +
push dword ptr [ebx+4Ch]  +
call sub_4973E7  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_41217F  +
movzx eax al +
jmp loc_4122C5  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_29+1] 0 +
mov [ebp+var_4] 0 +
push dword ptr [ebx+4Ch]  +
call sub_4973E7  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_4122AB  +
push eax  +
push 1  +
lea ecx [ebp+var_29+1] +
call loc_412E60  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_34] +
mov ecx [ebx+38h] +
lea edi [ebp+var_29+1] +
cmovnb edi [ebp+var_29+1] +
lea esi [ebp+var_29+1] +
cmovnb esi [ebp+var_29+1] +
push eax  +
mov edx [ecx] +
lea eax [ebp+var_29+1] +
push eax  +
lea eax [ebp-29h] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_18] +
add eax edi +
push eax  +
push esi  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edx+18h]  +
test eax eax +
js loc_4122AB  +
cmp eax 1 +
jle loc_412274  +
cmp eax 3 +
jnz loc_4122AB  +
cmp [ebp+var_18] 1 +
jb loc_412297  +
cmp [ebp+var_14] 10h +
jb loc_4122E1  +
mov eax [ebp+var_29+1] +
test eax eax +
jnz loc_4122E4  +
mov byte ptr [ebp+var_29] al +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
mov al byte ptr [ebp+var_29] +
movzx esi al +
jmp loc_4122AE  +
lea eax [ebp+var_29] +
cmp [ebp+var_34] eax +
jnz loc_4122EE  +
cmp [ebp+var_14] 10h +
lea ecx [ebp+var_29+1] +
mov eax [ebp+var_30] +
cmovnb ecx [ebp+var_29+1] +
sub eax ecx +
lea ecx [ebp+var_29+1] +
push eax  +
push 0  +
call loc_403710  +
push dword ptr [ebx+4Ch]  +
call sub_4973E7  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_4121F0  +
or esi 0FFFFFFFFh +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_4122C3  +
inc ecx  +
push ecx  +
push [ebp+var_29+1]  +
lea ecx [ebp+var_29+1] +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+var_29+1] +
mov al [eax] +
mov byte ptr [ebp+var_29] al +
movzx esi al +
jmp loc_4122AE  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_29+1] +
mov esi [ebp+var_18] +
cmovnb eax [ebp+var_29+1] +
mov ecx [ebp+var_30] +
sub esi ecx +
add esi eax +
test esi esi +
jle loc_412322  +
push dword ptr [ebx+4Ch]  +
movsx eax byte ptr [esi+ecx-1] +
dec esi  +
push eax  +
call sub_497FBA  +
add esp 8 +
test esi esi +
jle loc_412322  +
mov ecx [ebp+var_30] +
jmp loc_412307  +
movzx esi byte ptr [ebp+var_29] +
jmp loc_4122AE  +
***
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_41234C  +
mov eax [esi+2Ch] +
mov eax [eax] +
add eax ecx +
cmp ecx eax +
jnb loc_41234C  +
movzx eax byte ptr [ecx] +
pop esi  +
retn   +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+1Ch]  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_412360  +
pop edi  +
or eax eax +
pop esi  +
retn   +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+10h]  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_4123AF  +
mov eax [esi+0Ch] +
cmp [eax] ecx +
jnb loc_4123AF  +
cmp ebx 0FFFFFFFFh +
jz loc_412397  +
movzx eax byte ptr [ecx-1] +
cmp eax ebx +
jnz loc_4123AF  +
mov eax [esi+2Ch] +
inc dword ptr [eax]  +
mov eax [esi+1Ch] +
pop esi  +
dec dword ptr [eax]  +
xor eax eax +
cmp ebx 0FFFFFFFFh +
cmovnz eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_4123EE  +
cmp ebx 0FFFFFFFFh +
jz loc_4123EE  +
cmp dword ptr [esi+38h] 0 +
jnz loc_4123D3  +
push eax  +
movzx ecx bl +
push ecx  +
call sub_497FBA  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4123E6  +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jz loc_4123EE  +
mov [ecx] bl +
mov ecx esi +
call sub_412F10  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8CF8  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
setz al  +
test al al +
jz loc_412447  +
xor eax eax +
cmp ecx 0FFFFFFFFh +
cmovnz eax ecx +
jmp loc_4125DC  +
mov eax [ebx+20h] +
mov edx [eax] +
test edx edx +
jz loc_412475  +
mov esi [ebx+30h] +
mov edi [esi] +
lea eax [edi+edx] +
cmp edx eax +
jnb loc_412475  +
lea eax [edi-1] +
mov [esi] eax +
mov ecx [ebx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
mov [edx] al +
jmp loc_4125DC  +
cmp dword ptr [ebx+4Ch] 0 +
jnz loc_412483  +
or eax 0FFFFFFFFh +
jmp loc_4125DC  +
mov esi [ebx+0Ch] +
lea eax [ebx+3Ch] +
cmp [esi] eax +
jnz loc_4124A4  +
mov ecx [ebx+50h] +
mov edx [ebx+54h] +
mov [esi] ecx +
sub edx ecx +
mov eax [ebx+1Ch] +
mov [eax] ecx +
mov eax [ebx+2Ch] +
mov ecx [ebp+arg_0] +
mov [eax] edx +
cmp dword ptr [ebx+38h] 0 +
jnz loc_4124C9  +
push dword ptr [ebx+4Ch]  +
movsx eax cl +
push eax  +
call sub_496FCA  +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx [ebp+arg_0] +
mov eax ecx +
jmp loc_4125DC  +
push 0  +
mov [ebp+var_29] cl +
lea ecx [ebp+var_28] +
push 8  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_412D90  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_14] +
cmp esi 10h +
lea eax [ebp+var_30] +
mov esi [ebx+38h] +
lea ecx [ebp+var_28] +
cmovnb ecx [ebp+var_28] +
lea edx [ebp+var_28] +
cmovnb edx [ebp+var_28] +
push eax  +
mov eax [ebp+var_18] +
mov edi [esi] +
add eax ecx +
push eax  +
push edx  +
lea eax [ebp+var_34] +
mov ecx esi +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp-29h] +
push eax  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edi+1Ch]  +
test eax eax +
js loc_4125C0  +
cmp eax 1 +
jg loc_41259B  +
mov esi [ebp+var_14] +
lea eax [ebp+var_28] +
mov ecx [ebp+var_28] +
cmp esi 10h +
mov edi [ebp+var_30] +
cmovnb eax ecx +
sub edi eax +
jz loc_41256C  +
push dword ptr [ebx+4Ch]  +
cmp esi 10h +
lea eax [ebp+var_28] +
push edi  +
cmovnb eax ecx +
push 1  +
push eax  +
call sub_4978B3  +
mov esi [ebp+var_14] +
add esp 10h +
cmp edi eax +
jnz loc_4125C3  +
lea eax [ebp-29h] +
mov byte ptr [ebx+3Dh] 1 +
cmp [ebp+var_34] eax +
jnz loc_412596  +
test edi edi +
jnz loc_4124F4  +
cmp [ebp+var_18] 20h +
jnb loc_4125C3  +
push edi  +
push 8  +
lea ecx [ebp+var_28] +
call loc_412E60  +
jmp loc_4124F1  +
mov ebx [ebp+arg_0] +
jmp loc_4125C6  +
cmp eax 3 +
jnz loc_4125C0  +
push dword ptr [ebx+4Ch]  +
movsx eax [ebp+var_29] +
push eax  +
call sub_496FCA  +
mov esi [ebp+var_14] +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx [ebp+arg_0] +
mov ebx ecx +
jmp loc_4125C6  +
mov esi [ebp+var_14] +
or ebx 0FFFFFFFFh +
cmp esi 10h +
jb loc_4125DA  +
lea ecx [esi+1] +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+4Ch] +
test eax eax +
jz locret_41260E  +
push eax  +
call sub_497667  +
pop ecx  +
retn   +
***
mov eax [ecx+4Ch] +
test eax eax +
jz locret_41261E  +
push eax  +
call sub_497653  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_4CEF0C +
jz loc_412670  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_412670  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_41267D  +
mov ecx esi +
call sub_413240  +
mov dword ptr [esi] offset off_4CEECC +
mov esi [esi+34h] +
test esi esi +
jz loc_4126B4  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4126A9  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_4126A9  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-18h] offset off_4CEEC4 +
mov eax [ecx-18h] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+ecx-1Ch] eax +
retn   +
***
retn   +
***
retn 0Ch  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_4D1C98 +
mov ecx ds:dword_4D1C9C +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 20h  +
***
mov edx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov eax ds:dword_4D1C98 +
mov ecx ds:dword_4D1C9C +
mov [edx] eax +
mov eax edx +
mov [edx+4] ecx +
mov dword ptr [edx+8] 0 +
mov dword ptr [edx+0Ch] 0 +
movq qword ptr [edx+10h] xmm0 +
pop ebp  +
retn 14h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_412884  +
mov edi [ebp+arg_4] +
jg loc_4127C1  +
test edi edi +
jz loc_412884  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_413300  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_412834  +
jg loc_4127E8  +
test esi esi +
jz loc_412834  +
cmp ebx eax +
jg loc_4127F8  +
jl loc_4127F2  +
cmp edi esi +
jnb loc_4127F8  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_412811  +
mov ecx [esp+20h+var_C] +
push esi  +
push [ebp+arg_0]  +
mov eax [ecx+20h] +
push dword ptr [eax]  +
call loc_48C9C0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+30h] +
sub [eax] esi +
mov eax [ecx+20h] +
add [eax] esi +
jmp loc_412861  +
mov ecx [esp+20h+var_C] +
mov esi [ebp+arg_0] +
mov edx [ecx] +
movzx eax byte ptr [esi] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_412873  +
mov ecx [esp+24h+var_10] +
inc esi  +
add [esp+24h+var_14] 1 +
mov [ebp+arg_0] esi +
adc [esp+24h+var_18] 0 +
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_4127D1  +
jl loc_412873  +
test edi edi +
jnz loc_4127D1  +
mov edx [esp+24h+var_18] +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_8] +
xorps xmm0 xmm0 +
mov [esp+18h+var_C] ecx +
movlpd oword ptr [esp+18h+var_8] xmm0 +
push esi  +
push edi  +
test ebx ebx +
jl loc_412992  +
mov edi [ebp+arg_4] +
jg loc_4128D1  +
test edi edi +
jz loc_412992  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] eax +
call sub_413320  +
mov esi eax +
mov eax edx +
mov [esp+20h+var_8] eax +
test eax eax +
jl loc_412944  +
jg loc_4128F8  +
test esi esi +
jz loc_412944  +
cmp ebx eax +
jg loc_412908  +
jl loc_412902  +
cmp edi esi +
jnb loc_412908  +
mov esi edi +
mov [esp+20h+var_8] ebx +
test esi esi +
jz loc_412921  +
mov ecx [esp+20h+var_C] +
push esi  +
mov eax [ecx+1Ch] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call loc_48C9C0  +
add esp 0Ch +
add [ebp+arg_0] esi +
add [esp+20h+var_10] esi +
mov eax [esp+20h+var_8] +
adc [esp+20h+var_14] eax +
sub edi esi +
mov ecx [esp+20h+var_C] +
sbb ebx eax +
mov eax [ecx+2Ch] +
sub [eax] esi +
mov eax [ecx+1Ch] +
add [eax] esi +
jmp loc_41296F  +
mov ecx [esp+20h+var_C] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_412981  +
mov ecx [ebp+arg_0] +
mov [ecx] al +
inc ecx  +
add [esp+20h+var_10] 1 +
mov [ebp+arg_0] ecx +
adc [esp+20h+var_14] 0 +
add edi 0FFFFFFFFh +
mov ecx [esp+20h+var_C] +
adc ebx 0FFFFFFFFh +
test ebx ebx +
jg loc_4128E1  +
jl loc_412981  +
test edi edi +
jnz loc_4128E1  +
mov edx [esp+20h+var_14] +
mov eax [esp+20h+var_10] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov edx [esp+20h+var_4] +
mov eax [esp+20h+var_8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [esi] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jnz loc_4129C1  +
or eax eax +
pop esi  +
retn   +
mov eax [esi+2Ch] +
dec dword ptr [eax]  +
mov ecx [esi+1Ch] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
retn   +
***
retn   +
***
xor edx edx +
retn   +
***
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ecx+34h] +
mov dword ptr [ecx] offset off_4CEECC +
test esi esi +
jz loc_412A6A  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_412A5F  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_412A5F  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8D26  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [ecx] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi-70h] +
lea edi [esi-70h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-70h] offset off_4CEF4C +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ecx+esi-74h] eax +
lea ecx [esi-60h] +
call sub_412620  +
mov eax [esi-70h] +
mov eax [eax+4] +
mov dword ptr [eax+esi-70h] offset off_4CEEC4 +
mov eax [esi-70h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-74h] eax +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_412B60  +
push 0B8h  +
push edi  +
call sub_488C60  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_412620  +
test [ebp+arg_0] 1 +
jz loc_412B9C  +
push 58h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov eax [edx-18h] +
lea esi [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_4CEEC4 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_412C19  +
push 60h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_4CEECC +
test edi edi +
jz loc_412C8D  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_412C82  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_412C82  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_488C60  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_412C9E  +
push 38h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov eax [ebp+arg_8] +
sub eax [ebp+arg_4] +
cmp [ebp+arg_C] eax +
cmovb eax [ebp+arg_C] +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
mov ecx [ebp+arg_18] +
mov eax [ebp+arg_10] +
mov [ecx] eax +
mov eax 3 +
pop ebp  +
retn 1Ch  +
***
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jz loc_412E40  +
cmp edi 0FFFFFFFEh +
ja loc_412E4A  +
cmp [esi+14h] edi +
jnb loc_412DD2  +
push dword ptr [esi+10h]  +
push edi  +
call sub_4037F0  +
test edi edi +
jz loc_412E38  +
cmp edi 1 +
jnz loc_412E00  +
cmp dword ptr [esi+14h] 10h +
jb loc_412DF7  +
mov ecx [esi] +
mov al [ebp+0Ch] +
mov [ecx] al +
jmp loc_412E1B  +
test edi edi +
jnz loc_412DBE  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_412DEC  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov al [ebp+0Ch] +
mov ecx esi +
mov [ecx] al +
jmp loc_412E1B  +
cmp dword ptr [esi+14h] 10h +
jb loc_412E0A  +
mov ecx [esi] +
jmp loc_412E0C  +
mov ecx esi +
movsx eax byte ptr [ebp+0Ch] +
push edi  +
push eax  +
push ecx  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_412E32  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
mov eax ecx +
not eax  +
cmp eax ebx +
jbe loc_412EF0  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_412EE7  +
cmp edi 0FFFFFFFEh +
ja loc_412EFA  +
cmp [esi+14h] edi +
jnb loc_412EBA  +
push ecx  +
push edi  +
mov ecx esi +
call sub_4037F0  +
test edi edi +
jz loc_412EE7  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_413370  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_412EE1  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
test edi edi +
jnz loc_412E94  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_412ED5  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+0Ch] +
lea esi [edx+3Ch] +
mov eax [edi] +
cmp eax esi +
jz loc_412F30  +
mov ecx [edx+1Ch] +
mov [edx+50h] eax +
mov eax [edx+2Ch] +
mov eax [eax] +
add eax [ecx] +
mov [edx+54h] eax +
mov [edi] esi +
mov ecx edx +
mov eax [edx+1Ch] +
sub ecx esi +
add ecx 3Dh +
pop edi  +
mov [eax] esi +
mov eax [edx+2Ch] +
pop esi  +
mov [eax] ecx +
retn   +
***
lea eax [ecx+3Ch] +
cmp [edi] eax +
jnz loc_412F71  +
mov edx [ecx+50h] +
push esi  +
mov esi [ecx+54h] +
mov [edi] edx +
sub esi edx +
mov eax [ecx+1Ch] +
mov [eax] edx +
mov eax [ecx+2Ch] +
mov [eax] esi +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
mov eax [eax+0Ch] +
call eax  +
test al al +
jz loc_412FA4  +
pop edi  +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ebp  +
retn 4  +
lea eax [esi+4] +
mov [esi+38h] edi +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
pop edi  +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
pop esi  +
mov dword ptr [eax] 0 +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8D58  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
cmp dword ptr [ebx+38h] 0 +
jz loc_41313E  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_41313E  +
mov eax [ebx] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
setz al  +
test al al +
jz loc_413069  +
xor al al +
jmp loc_413140  +
push 0  +
push 8  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call loc_412D90  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
cmp ecx 10h +
lea eax [ebp+var_2C] +
mov ecx [ebx+38h] +
lea edi [ebp+var_28] +
cmovnb edi [ebp+var_28] +
lea esi [ebp+var_28] +
cmovnb esi [ebp+var_28] +
push eax  +
mov eax [ebp+var_18] +
mov edx [ecx] +
add eax edi +
push eax  +
push esi  +
lea eax [ebx+40h] +
push eax  +
call dword ptr [edx+20h]  +
sub eax 0 +
jz loc_4130CF  +
sub eax 1 +
jz loc_4130D3  +
mov ecx [ebp+var_14] +
sub eax 2 +
jz loc_413126  +
xor bl bl +
jmp loc_413128  +
mov byte ptr [ebx+3Dh] 0 +
mov ecx [ebp+var_14] +
lea eax [ebp+var_28] +
mov edx [ebp+var_28] +
cmp ecx 10h +
mov esi [ebp+var_2C] +
cmovnb eax edx +
sub esi eax +
jz loc_413108  +
push dword ptr [ebx+4Ch]  +
cmp ecx 10h +
lea eax [ebp+var_28] +
push esi  +
cmovnb eax edx +
push 1  +
push eax  +
call sub_4978B3  +
mov ecx [ebp+var_14] +
add esp 10h +
cmp esi eax +
jnz loc_4130CB  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_413126  +
test esi esi +
jnz loc_413091  +
push esi  +
push 8  +
lea ecx [ebp+var_28] +
call loc_412E60  +
jmp loc_41308E  +
mov bl 1 +
cmp ecx 10h +
jb loc_41313A  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call loc_403650  +
mov al bl +
jmp loc_413140  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
cmp [ebp+arg_4] 1 +
push esi  +
mov esi ecx +
setz al  +
lea edx [esi+8] +
push edi  +
mov edi [ebp+arg_0] +
mov [esi+48h] al +
lea eax [esi+4] +
mov [esi+0Ch] eax +
lea eax [esi+14h] +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov byte ptr [esi+3Dh] 0 +
mov [esi+10h] edx +
mov dword ptr [edx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
test edi edi +
jz loc_413219  +
lea eax [ebp+var_4] +
mov [ebp+arg_4] 0 +
push eax  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] 0 +
push eax  +
lea eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
push eax  +
push edi  +
call sub_49760D  +
mov eax [ebp+arg_4] +
add esp 10h +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov eax [ebp+arg_0] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [ebp+var_4] +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+4Ch] edi +
mov eax dword_4F64DC +
mov [esi+40h] eax +
mov eax dword_4F64E0 +
pop edi  +
mov [esi+44h] eax +
mov dword ptr [esi+38h] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi ecx +
push edi  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_41324F  +
xor edi edi +
jmp loc_41326F  +
call sub_413010  +
push dword ptr [esi+4Ch]  +
xor ecx ecx +
mov edi esi +
test al al +
cmovz edi ecx +
call sub_49732B  +
xor ecx ecx +
add esp 4 +
test eax eax +
cmovnz edi ecx +
lea eax [esi+4] +
mov byte ptr [esi+48h] 0 +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov [esi+10h] ecx +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov byte ptr [esi+3Dh] 0 +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [esi+1Ch] +
pop edi  +
mov dword ptr [ecx] 0 +
mov ecx [esi+2Ch] +
mov dword ptr [ecx] 0 +
mov dword ptr [esi+4Ch] 0 +
mov ecx dword_4F64DC +
mov [esi+40h] ecx +
mov ecx dword_4F64E0 +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ecx  +
retn   +
***
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_41330F  +
mov eax [ecx+30h] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
mov eax [ecx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_41332F  +
mov eax [ecx+2Ch] +
mov eax [eax] +
cdq   +
retn   +
xor eax eax +
cdq   +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CEE0C +
jz loc_41335D  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx ecx +
cmp eax 1 +
jnz loc_413392  +
cmp dword ptr [edx+14h] 10h +
jb loc_413385  +
mov edx [edx] +
mov eax [ebp+arg_0] +
mov cl [ebp+arg_8] +
mov [edx+eax] cl +
pop ebp  +
retn 0Ch  +
cmp dword ptr [edx+14h] 10h +
jb loc_41339A  +
mov edx [edx] +
push eax  +
movsx eax [ebp+arg_8] +
push eax  +
mov eax [ebp+arg_0] +
add eax edx +
push eax  +
call sub_48CF40  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
lea eax [ecx+4] +
mov [ecx+0Ch] eax +
lea edx [ecx+8] +
lea eax [ecx+14h] +
mov [ecx+10h] edx +
mov [ecx+1Ch] eax +
lea eax [ecx+18h] +
mov [ecx+20h] eax +
lea eax [ecx+24h] +
mov [ecx+2Ch] eax +
lea eax [ecx+28h] +
mov [ecx+30h] eax +
mov dword ptr [edx] 0 +
mov eax [ecx+20h] +
mov dword ptr [eax] 0 +
mov eax [ecx+30h] +
mov dword ptr [eax] 0 +
mov eax [ecx+0Ch] +
mov dword ptr [eax] 0 +
mov eax [ecx+1Ch] +
mov dword ptr [eax] 0 +
mov eax [ecx+2Ch] +
mov dword ptr [eax] 0 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8AE6  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx+34h] +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B76E6  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 8  +
mov dword ptr [edi] offset off_4CEECC +
call sub_488C2D  +
mov esi eax +
push 1  +
mov [ebp+var_4] 0 +
call sub_48A0A9  +
mov [esi+4] eax +
lea ecx [edi+8] +
lea eax [edi+4] +
mov [edi+34h] esi +
mov [edi+0Ch] eax +
add esp 8 +
lea eax [edi+14h] +
mov [edi+10h] ecx +
mov [edi+1Ch] eax +
lea eax [edi+18h] +
mov [edi+20h] eax +
lea eax [edi+24h] +
mov [edi+2Ch] eax +
lea eax [edi+28h] +
mov [edi+30h] eax +
mov dword ptr [ecx] 0 +
mov eax [edi+20h] +
mov dword ptr [eax] 0 +
mov eax [edi+30h] +
mov dword ptr [eax] 0 +
mov eax [edi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [edi+2Ch] +
mov dword ptr [eax] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8D8E  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_4112F0  +
mov eax [ebp+arg_0] +
mov ecx esi +
mov [esi+38h] eax +
lea eax [ebp+var_14] +
push eax  +
mov dword ptr [esi+3Ch] 0 +
call sub_4112A0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_413600  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_4135A7  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_4135A7  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx edi +
mov eax [edi] +
push 20h  +
mov eax [eax+20h] +
call eax  +
cmp dword ptr [esi+38h] 0 +
mov [esi+40h] al +
jnz loc_4135D2  +
mov eax [esi+0Ch] +
mov ecx esi +
push 0  +
or eax 4 +
push eax  +
call loc_4111D0  +
cmp [ebp+arg_4] 0 +
jz loc_4135E1  +
push esi  +
call sub_48A2CB  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B8DB8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_1C] +
call sub_489E64  +
mov [ebp+var_4] 0 +
mov edi dword_4F5958 +
mov ebx dword_4F64D4 +
mov [ebp+var_14] ebx +
test edi edi +
jnz loc_41367B  +
push edi  +
lea ecx [ebp+var_18] +
call sub_489E64  +
cmp dword_4F5958 edi +
jnz loc_41366D  +
mov eax dword_4F5938 +
inc eax  +
mov dword_4F5938 eax +
mov dword_4F5958 eax +
lea ecx [ebp+var_18] +
call sub_489EBC  +
mov edi dword_4F5958 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_413692  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_413707  +
jmp loc_413694  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_4136AA  +
call sub_48A0A3  +
cmp edi [eax+0Ch] +
jnb loc_4136AE  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_413707  +
test ebx ebx +
jz loc_4136B6  +
mov esi ebx +
jmp loc_413707  +
push [ebp+arg_0]  +
lea eax [ebp+var_14] +
push eax  +
call sub_410B30  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4136EE  +
xorps xmm0 xmm0 +
mov [ebp+var_28] offset off_4CEDCC +
push offset unk_4EC098  +
lea eax [ebp+var_28] +
movq [ebp+var_24] xmm0 +
push eax  +
mov dword ptr [ebp+var_24] offset aBadCast +
call sub_48D64F  +
mov esi [ebp+var_14] +
mov ecx esi +
mov dword_4F64D4 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_48A075  +
add esp 4 +
lea ecx [ebp+var_1C] +
call sub_489EBC  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F64C8 +
cmp eax [ecx+4] +
jle loc_413786  +
push offset dword_4F64C8  +
call sub_489058  +
add esp 4 +
cmp dword_4F64C8 0FFFFFFFFh +
jnz loc_413786  +
push offset nullsub_2  +
mov dword_4F64CC offset off_4CEE80 +
mov dword_4F64D0 5 +
call sub_488F0F  +
push offset dword_4F64C8  +
call sub_489019  +
add esp 8 +
mov eax offset dword_4F64CC +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8DE8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_489E64  +
mov [ebp+var_4] 0 +
mov edi dword_4F64F8 +
mov ebx dword_4F64D8 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_41380B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_489E64  +
cmp dword_4F64F8 edi +
jnz loc_4137FD  +
mov eax dword_4F5938 +
inc eax  +
mov dword_4F5938 eax +
mov dword_4F64F8 eax +
lea ecx [ebp+var_14] +
call sub_489EBC  +
mov edi dword_4F64F8 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_413822  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_413897  +
jmp loc_413824  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_41383A  +
call sub_48A0A3  +
cmp edi [eax+0Ch] +
jnb loc_41383E  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_413897  +
test ebx ebx +
jz loc_413846  +
mov esi ebx +
jmp loc_413897  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_413900  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_41387E  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_4CEDCC +
push offset unk_4EC098  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call sub_48D64F  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_4F64D8 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_48A075  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_489EBC  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_48C93D  +
add esp 8 +
mov dword ptr [esi] offset off_4CEDCC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8E1F  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_41398B  +
cmp dword ptr [esi] 0 +
jnz loc_41398B  +
push 8  +
call sub_488C2D  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov eax [ecx+4] +
test eax eax +
jnz loc_413961  +
mov ecx offset unk_4DE8C5 +
jmp loc_41396B  +
mov ecx [eax+18h] +
test ecx ecx +
jnz loc_41396B  +
lea ecx [eax+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_410870  +
mov dword ptr [edi+4] 0 +
lea ecx [ebp+var_44] +
mov dword ptr [edi] offset off_4CF174 +
mov [esi] edi +
call sub_410950  +
mov eax 2 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8E40  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov esi [ebp+arg_8] +
mov eax 88888889h +
mov ecx [ebp+arg_4] +
mov edi esi +
sub edi ecx +
imul  edi +
add edx edi +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp+var_1C] eax +
jz loc_413BC6  +
mov edi [ebx+8] +
mov eax 88888889h +
sub edi [ebx+4] +
imul  edi +
add edx edi +
mov edi [ebp+var_1C] +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax edi +
jnb loc_413B94  +
mov ecx [ebx+4] +
mov eax 88888889h +
mov esi [ebx] +
sub ecx esi +
imul  ecx +
mov eax 2222222h +
add edx ecx +
sar edx 6 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
sub eax ecx +
cmp eax edi +
jnb loc_413A56  +
push offset aVectorTTooLong  +
call sub_489DF7  +
add ecx edi +
mov eax 88888889h +
mov [ebp+var_14] ecx +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
add edx ecx +
xor ecx ecx +
sar edx 6 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 2222222h +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
mov eax [ebp+var_14] +
cmp ecx eax +
cmovnb eax ecx +
push eax  +
mov [ebp+var_14] eax +
mov [ebp+var_24] eax +
call loc_407480  +
mov [ebp+var_4] 0 +
mov esi eax +
mov edx [ebp+arg_0] +
push ecx  +
mov byte ptr [ebp+var_20] 0 +
push [ebp+var_20]  +
mov [ebp+var_1C] esi +
push ecx  +
mov ecx [ebx] +
push esi  +
mov [ebp+var_18] esi +
call loc_408940  +
mov edx [ebp+arg_8] +
add esp 10h +
mov byte ptr [ebp+var_20] 0 +
mov [ebp+var_18] eax +
push ecx  +
push [ebp+var_20]  +
push ecx  +
mov ecx [ebp+arg_4] +
push eax  +
call loc_408940  +
mov edx [ebx+4] +
add esp 10h +
mov byte ptr [ebp+var_20] 0 +
mov [ebp+var_18] eax +
push ecx  +
push [ebp+var_20]  +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
call loc_408940  +
mov ecx [ebx+4] +
mov eax 88888889h +
sub ecx [ebx] +
add esp 10h +
imul  ecx +
add edx ecx +
mov ecx [ebx] +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
add edi eax +
test ecx ecx +
jz loc_413B44  +
push dword ptr [ebx+4]  +
push ecx  +
call sub_403100  +
mov esi [ebx] +
mov eax 88888889h +
mov ecx [ebx+8] +
sub ecx esi +
imul  ecx +
add edx ecx +
sar edx 6 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_4035E0  +
mov esi [ebp+var_1C] +
mov eax [ebp+var_14] +
shl eax 4 +
sub eax [ebp+var_14] +
lea eax [esi+eax*8] +
mov [ebx+8] eax +
mov eax edi +
shl eax 4 +
sub eax edi +
lea eax [esi+eax*8] +
mov [ebx+4] eax +
mov [ebx] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp-18h]  +
mov esi [ebp-1Ch] +
push esi  +
call sub_403100  +
push [ebp+var_24]  +
push esi  +
call loc_4035E0  +
push 0  +
push 0  +
call sub_48D64F  +
push ecx  +
mov byte ptr [ebp+var_24] 0 +
mov edx esi +
push [ebp+var_24]  +
push ecx  +
push dword ptr [ebx+4]  +
call loc_408940  +
mov edx [ebx+4] +
mov esi edi +
mov ecx [ebp+arg_0] +
shl esi 4 +
sub esi edi +
shl esi 3 +
lea eax [esi+edx] +
push eax  +
call sub_413C30  +
add esp 14h +
add [ebx+4] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
cmp esi edi +
jz loc_413C29  +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov esi edx +
mov edi ecx +
cmp edi esi +
jnz loc_413C46  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov ebx [ebp+arg_0] +
cmp esi ebx +
jnz loc_413C54  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
call sub_413C90  +
mov edx ebx +
mov ecx esi +
call sub_413C90  +
mov edx ebx +
mov ecx edi +
call sub_413C90  +
sub ebx esi +
mov eax 88888889h +
imul  ebx +
add edx ebx +
sar edx 6 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov eax ecx +
shl eax 4 +
sub eax ecx +
lea eax [edi+eax*8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_412BB0  +
***
retn   +
***
and esp 0FFFFFFF8h +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+28h+var_4] eax +
mov [esp+28h+var_20] 0 +
push esi  +
mov esi ecx +
mov [esp+2Ch+var_24] esi +
push edi  +
test edx edx +
jnz loc_413D97  +
mov dword ptr [esi+14h] 0Fh +
mov eax esi +
mov [esi+10h] edx +
mov [esi] dl +
pop edi  +
pop esi  +
mov ecx [esp+28h+var_4] +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edx+4] +
mov edx offset unk_4F64E4 +
test eax eax +
mov [esp+30h+var_8] 0Fh +
mov [esp+30h+var_C] 0 +
cmovnz edx eax +
mov byte ptr [esp+30h+var_1C] 0 +
cmp byte ptr [edx] 0 +
jnz loc_413DC2  +
xor ecx ecx +
jmp loc_413DD0  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_413DC7  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [esp+38h+var_1C] +
call loc_4031A0  +
cmp [esp+38h+var_14] 400h +
jbe loc_413DF8  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
jmp loc_413E04  +
lea eax [esp+38h+var_24] +
mov ecx esi +
push eax  +
call sub_402F50  +
mov eax [esp+38h+var_10] +
cmp eax 10h +
jb loc_413E1C  +
inc eax  +
lea ecx [esp+38h+var_24] +
push eax  +
push [esp+3Ch+var_24]  +
call loc_403650  +
mov ecx [esp+40h+var_14] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8EB0  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
mov [ebp+var_4] 0 +
cmp dword ptr [edi+5Ch] 0 +
jnz loc_413EB6  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
jmp loc_413F72  +
push 2  +
push 0  +
push 0  +
mov ecx edi +
call sub_4145B0  +
lea eax [ebp+var_44] +
mov ecx edi +
push eax  +
call sub_4144D0  +
push 0  +
push 0  +
push 0  +
mov ebx [eax+8] +
mov ecx edi +
add ebx [eax] +
call sub_4145B0  +
cmp ebx 100000h +
jnb loc_413E88  +
lea eax [ebx+1] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_414390  +
push 0  +
push ebx  +
mov byte ptr [ebp+var_4] 1 +
mov ecx edi +
push [ebp+var_2C]  +
call sub_4146C0  +
mov ecx [ebp+var_2C] +
mov byte ptr [ecx+ebx] 0 +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+edi+0Ch] +
shr eax 2 +
test al 1 +
jz loc_413F47  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
jmp loc_413F6A  +
mov eax [ebp+var_28] +
mov [esi+4] eax +
mov eax [ebp+var_24] +
mov [esi] ecx +
mov [esi+8] eax +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
lea ecx [ebp+var_2C] +
call loc_414900  +
lea ecx [ebp+var_20] +
call loc_414900  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8F46  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax 100E8h +
call sub_489360  +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edx [ebp+arg_0] +
lea ecx [ebp+var_100F4] +
call sub_413E30  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_100F0] +
mov ecx [ebp+var_100F4] +
sub eax ecx +
jz loc_414311  +
lea eax [ebp+var_100AC] +
mov [ebp+var_100E8] 0 +
mov [ebp+var_100B8] eax +
neg eax  +
and eax 3 +
mov [ebp+var_100E4] 0 +
mov [ebp+var_100D8] 0 +
mov [ebp+var_100D4] 0 +
mov [ebp+var_100D0] 0 +
lea eax [ebp+eax+var_100AC] +
mov [ebp+var_100C8] 0 +
mov [ebp+var_100B4] eax +
lea eax [ebp+var_AC] +
mov [ebp+var_AC] 0 +
mov [ebp+var_A8] 0 +
mov [ebp+var_100B0] eax +
push ecx  +
lea ecx [ebp+var_100E8] +
mov byte ptr [ebp+var_4] 2 +
call loc_414E00  +
push 1  +
push 0  +
push offset aSpecifiermanif  +
lea ecx [ebp+var_100E8] +
mov [ebp+var_4] 1 +
call loc_414450  +
mov esi eax +
test esi esi +
jnz loc_4140A3  +
mov byte ptr [ebp+var_4] 5 +
jmp loc_414306  +
sub esp 8 +
mov ecx esi +
push offset aVersion  +
call sub_4143E0  +
mov edx eax +
lea ecx [ebp+var_2C] +
call sub_413D50  +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_2C] +
mov edi [ebp+var_18] +
cmp edi 10h +
mov edx [ebp+var_1C] +
cmovnb ecx [ebp+var_2C] +
push 3  +
push offset a1_0  +
call sub_406970  +
add esp 8 +
test eax eax +
jz loc_414112  +
cmp edi 10h +
jb loc_4140F7  +
lea eax [edi+1] +
push eax  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call loc_403650  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
mov byte ptr [ebp+var_4] 7 +
jmp loc_414306  +
push 1  +
push 0  +
push offset aName  +
mov ecx esi +
call loc_414450  +
mov edx eax +
lea ecx [ebp+var_44] +
call sub_413D50  +
mov byte ptr [ebp+var_4] 8 +
cmp [ebp+var_34] 0 +
jnz loc_41414F  +
lea ecx [ebp+var_44] +
call sub_402F10  +
lea ecx [ebp+var_2C] +
call sub_402F10  +
mov byte ptr [ebp+var_4] 9 +
jmp loc_414306  +
push 1  +
push 0  +
push offset aVersion  +
mov ecx esi +
call loc_414450  +
mov edx eax +
lea ecx [ebp+var_5C] +
call sub_413D50  +
mov byte ptr [ebp+var_4] 0Ah +
cmp [ebp+var_4C] 0 +
jnz loc_414194  +
lea ecx [ebp+var_5C] +
call sub_402F10  +
lea ecx [ebp+var_44] +
call sub_402F10  +
lea ecx [ebp+var_2C] +
call sub_402F10  +
mov byte ptr [ebp+var_4] 0Bh +
jmp loc_414306  +
push 1  +
push 0  +
push offset aPath  +
mov ecx esi +
call loc_414450  +
mov edx eax +
lea ecx [ebp+var_74] +
call sub_413D50  +
mov byte ptr [ebp+var_4] 0Ch +
cmp [ebp+var_64] 0 +
jnz loc_4141E1  +
lea ecx [ebp+var_74] +
call sub_402F10  +
lea ecx [ebp+var_5C] +
call sub_402F10  +
lea ecx [ebp+var_44] +
call sub_402F10  +
lea ecx [ebp+var_2C] +
call sub_402F10  +
mov byte ptr [ebp+var_4] 0Dh +
jmp loc_414306  +
push 1  +
push 0  +
push offset aLocale  +
mov ecx esi +
call loc_414450  +
mov edx eax +
lea ecx [ebp+var_A4] +
call sub_413D50  +
push 1  +
push 0  +
push offset aGroup  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0Eh +
call loc_414450  +
mov edx eax +
lea ecx [ebp+var_8C] +
call sub_413D50  +
push 78h  +
mov byte ptr [ebp+var_4] 0Fh +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_100F8] eax +
mov ecx eax +
call sub_40A810  +
mov esi eax +
lea eax [ebp+var_44] +
cmp esi eax +
jz loc_41424F  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_4032A0  +
lea ecx [esi+18h] +
lea eax [ebp+var_5C] +
cmp ecx eax +
jz loc_414263  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea ecx [esi+60h] +
lea eax [ebp+var_74] +
cmp ecx eax +
jz loc_414277  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea ecx [esi+30h] +
lea eax [ebp+var_A4] +
cmp ecx eax +
jz loc_41428E  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea ecx [esi+48h] +
lea eax [ebp+var_8C] +
cmp ecx eax +
jz loc_4142A5  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea ecx [ebp+var_8C] +
call sub_402F10  +
lea ecx [ebp+var_A4] +
call sub_402F10  +
lea ecx [ebp+var_74] +
call sub_402F10  +
lea ecx [ebp+var_5C] +
call sub_402F10  +
lea ecx [ebp+var_44] +
call sub_402F10  +
lea ecx [ebp+var_2C] +
call sub_402F10  +
lea ecx [ebp+var_100B8] +
mov byte ptr [ebp+var_4] 10h +
call loc_414850  +
lea ecx [ebp+var_100F4] +
call loc_414900  +
mov eax esi +
jmp loc_41431E  +
mov eax offset loc_4142FF +
retn   +
mov [ebp+var_4] 4 +
lea ecx [ebp+var_100B8] +
call loc_414850  +
lea ecx [ebp+var_100F4] +
call loc_414900  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8D26  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
add ecx 30h +
mov [ebp+var_4] 0 +
call loc_414850  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp loc_414900  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jz loc_4143D4  +
push edi  +
call loc_4039B0  +
mov [esi] eax +
mov [esi+4] eax +
mov eax [esi] +
push edi  +
add eax edi +
mov [esi+8] eax +
push 0  +
push dword ptr [esi]  +
call sub_48CF40  +
add esp 0Ch +
add [esi+4] edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_414445  +
cmp byte ptr [ebx] 0 +
push edi  +
mov edi ebx +
jz loc_4143F9  +
inc edi  +
cmp byte ptr [edi] 0 +
jnz loc_4143F3  +
push esi  +
mov esi [ecx+20h] +
sub edi ebx +
test esi esi +
jz loc_414433  +
mov ecx [esi] +
test ecx ecx +
jz loc_41440E  +
mov edx [esi+8] +
jmp loc_414410  +
xor edx edx +
push 1  +
push edi  +
test ecx ecx +
mov eax offset unk_4F64E4 +
push ebx  +
cmovnz eax ecx +
push edx  +
push eax  +
call loc_414F10  +
add esp 14h +
test al al +
jnz loc_41443C  +
mov esi [esi+18h] +
test esi esi +
jnz loc_414403  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax [ecx+20h] +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
test ebx ebx +
jz loc_4144C3  +
push edi  +
mov edi [ebp+0Ch] +
test edi edi +
jnz loc_414478  +
cmp byte ptr [ebx] 0 +
mov edi ebx +
jz loc_414476  +
sub edi ebx +
push esi  +
mov esi [ecx+18h] +
test esi esi +
jz loc_4144B1  +
mov ecx [esi] +
test ecx ecx +
jz loc_41448B  +
mov edx [esi+8] +
jmp loc_41448D  +
xor edx edx +
push dword ptr [ebp+10h]  +
test ecx ecx +
mov eax offset unk_4F64E4 +
push edi  +
push ebx  +
cmovnz eax ecx +
push edx  +
push eax  +
call loc_414F10  +
add esp 14h +
test al al +
jnz loc_4144BA  +
mov esi [esi+2Ch] +
test esi esi +
jnz loc_414480  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+18h] +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B8F8C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov [ebp+var_14] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41450E  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_414990  +
mov [ebp+var_10] al +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
test byte ptr [eax+esi+0Ch] 6 +
jnz loc_414552  +
mov ecx [eax+esi+38h] +
push 1  +
push 1  +
push 0  +
mov eax [ecx] +
push 0  +
push edi  +
call dword ptr [eax+28h]  +
mov [ebp+var_4] 2 +
jmp loc_41457E  +
mov eax ds:dword_4D1C98 +
xorps xmm0 xmm0 +
mov [edi] eax +
mov eax ds:dword_4D1C9C +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
movq qword ptr [edi+10h] xmm0 +
mov [ebp+var_4] 3 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_414590  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B8FC6  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
add ecx esi +
mov edx [ecx+0Ch] +
and edx 0FFFFFFFEh +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov eax [esi] +
mov [ebp+var_14] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41460E  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_414990  +
mov [ebp+var_10] al +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
test byte ptr [eax+esi+0Ch] 6 +
jnz loc_414689  +
mov ecx [eax+esi+38h] +
lea edx [ebp+var_2C] +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov eax [ecx] +
push [ebp+arg_0]  +
push edx  +
call dword ptr [eax+28h]  +
mov eax [ebp+var_2C] +
add eax [ebp+var_24] +
mov ecx [ebp+var_28] +
adc ecx [ebp+var_20] +
cmp eax ds:dword_4D1C98 +
jnz loc_414689  +
cmp ecx ds:dword_4D1C9C +
jnz loc_414689  +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
add ecx esi +
mov edx [ecx+0Ch] +
or edx 2 +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov [ebp+var_4] 2 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_4146A2  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B9006  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
xor edi edi +
mov [ebp+var_20] esi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov eax [esi] +
mov [ebp+var_18] edi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_414710  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_414990  +
mov [ebp+var_1C] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_4147A2  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jl loc_4147A2  +
mov ebx [ebp+arg_4] +
jg loc_41473E  +
test ebx ebx +
jz loc_4147A2  +
mov byte ptr [ebp+var_4] 2 +
mov eax [esi] +
push ecx  +
push ebx  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call sub_414970  +
add [esi+8] eax +
adc [esi+0Ch] edx +
cmp eax ebx +
jnz loc_414764  +
cmp edx [ebp+arg_8] +
jz loc_41479B  +
mov edi 3 +
jmp loc_41479B  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_414785  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_4111D0  +
mov eax offset loc_414795 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-18h] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_4147C6  +
mov edx [ecx+0Ch] +
or edx edi +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
push 0  +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov [ebp+var_4] 4 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_4147DF  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset sub_4B8D26  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_41483D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+0Ch] +
cmp [esi] ebx +
jz loc_41488A  +
push edi  +
mov ecx [esi] +
mov eax ecx +
neg eax  +
and eax 3 +
push ecx  +
mov edi [eax+ecx] +
mov eax [esi+10010h] +
test eax eax +
jz loc_41487B  +
call eax  +
jmp loc_414880  +
call sub_488C91  +
add esp 4 +
mov [esi] edi +
cmp edi ebx +
jnz loc_414860  +
pop edi  +
mov eax ebx +
mov [esi] ebx +
neg eax  +
and eax 3 +
add eax ebx +
mov [esi+4] eax +
lea eax [esi+1000Ch] +
mov [esi+8] eax +
pop esi  +
pop ebx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B8A20  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_4148E6  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov edx [esi] +
test edx edx +
jz loc_41494C  +
mov eax [esi+8] +
sub eax edx +
cmp eax 1000h +
jb loc_41492F  +
test dl 1Fh +
jnz loc_41494E  +
mov eax [edx-4] +
cmp eax edx +
jnb loc_414953  +
sub edx eax +
cmp edx 4 +
jb loc_414958  +
cmp edx 23h +
ja loc_41495D  +
mov edx eax +
push edx  +
call sub_47BF70  +
mov dword ptr [esi] 0 +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
and esp 0FFFFFFF8h +
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [eax+20h] +
call eax  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B903E  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_18] edi +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_414B79  +
mov ecx [ecx+3Ch] +
test ecx ecx +
jz loc_4149DD  +
call sub_414BB0  +
cmp [ebp+arg_0] 0 +
jnz loc_414B56  +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
test byte ptr [ecx+14h] 1 +
jz loc_414B56  +
lea eax [ebp+var_20] +
push eax  +
call sub_4112A0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_413600  +
add esp 4 +
mov ebx eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_1C] +
test ecx ecx +
jz loc_414A32  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_414A32  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_4] 2 +
mov eax [edi] +
mov eax [eax+4] +
mov ecx [eax+edi+38h] +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_414A58  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_414A58  +
movzx ecx byte ptr [edx] +
jmp loc_414A60  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx eax +
nop   +
cmp ecx 0FFFFFFFFh +
setz al  +
test al al +
jz loc_414A90  +
mov eax [edi] +
push 0  +
mov ecx [eax+4] +
add ecx edi +
mov edx [ecx+0Ch] +
or edx 1 +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
jmp loc_414B4F  +
mov eax [ebx+0Ch] +
movzx ecx cl +
test byte ptr [eax+ecx*2] 48h +
jz loc_414B4F  +
mov eax [edi] +
mov eax [eax+4] +
mov esi [eax+edi+38h] +
mov eax [esi+1Ch] +
mov eax [eax] +
test eax eax +
jz loc_414AED  +
mov ecx [esi+2Ch] +
mov edx [ecx] +
cmp edx 1 +
jle loc_414ACE  +
lea eax [edx-1] +
mov [ecx] eax +
mov eax [esi+1Ch] +
mov ecx [eax] +
inc ecx  +
mov [eax] ecx +
movzx ecx byte ptr [ecx] +
jmp loc_414A60  +
test eax eax +
jz loc_414AED  +
mov ecx [esi+2Ch] +
mov eax [ecx] +
test eax eax +
jle loc_414AED  +
dec eax  +
mov [ecx] eax +
mov ecx [esi+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_414AF4  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_414B00  +
or ecx eax +
jmp loc_414A60  +
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_414B19  +
mov eax [esi+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_414B19  +
movzx ecx byte ptr [ecx] +
jmp loc_414A60  +
mov eax [esi] +
mov ecx esi +
jmp loc_414A5A  +
mov ecx [ebp-18h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_414B3C  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_4111D0  +
mov eax offset loc_414B4C +
retn   +
mov edi [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_414B79  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov edx [ecx+0Ch] +
or edx 2 +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
push 0  +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call sub_48A7EA  +
test al al +
jnz loc_414CA6  +
mov ecx [esi] +
call sub_414D70  +
mov [ebp+var_4] 0 +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_414CC1  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9098  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_414D21  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_414D45  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_414D45  +
cmp ecx esi +
jz loc_414D45  +
call sub_414BB0  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
mov eax [esi+18h] +
test eax eax +
jz loc_414E1E  +
mov dword ptr [eax+10h] 0 +
mov eax [eax+2Ch] +
test eax eax +
jnz loc_414E10  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_414E3E  +
mov dword ptr [eax+10h] 0 +
mov eax [eax+18h] +
test eax eax +
jnz loc_414E30  +
mov eax [ebp+8] +
mov dword ptr [esi+20h] 0 +
cmp byte ptr [eax] 0EFh +
jnz loc_414E60  +
cmp byte ptr [eax+1] 0BBh +
jnz loc_414E60  +
cmp byte ptr [eax+2] 0BFh +
jnz loc_414E60  +
add eax 3 +
mov [ebp+8] eax +
nop   +
movzx ecx byte ptr [eax] +
cmp ds:byte_4DF6B8[ecx] 0 +
jz loc_414E7E  +
movzx ecx byte ptr [eax+1] +
inc eax  +
cmp ds:byte_4DF6B8[ecx] 0 +
jnz loc_414E70  +
mov [ebp+8] eax +
mov cl [eax] +
test cl cl +
jz loc_414ED6  +
cmp cl 3Ch +
jnz loc_414EDD  +
inc eax  +
mov ecx esi +
mov [ebp+8] eax +
lea eax [ebp+8] +
push eax  +
call loc_414FE0  +
mov ecx eax +
test ecx ecx +
jnz loc_414EA6  +
mov eax [ebp+8] +
jmp loc_414E60  +
***
cmp dword ptr [esi+18h] 0 +
jz loc_414EBA  +
mov eax [esi+1Ch] +
mov [ecx+28h] eax +
mov eax [esi+1Ch] +
mov [eax+2Ch] ecx +
jmp loc_414EC4  +
mov dword ptr [ecx+28h] 0 +
mov [esi+18h] ecx +
mov [esi+1Ch] ecx +
mov [ecx+10h] esi +
mov dword ptr [ecx+2Ch] 0 +
mov eax [ebp+8] +
jmp loc_414E60  +
***
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-4] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-14h] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aExpected +
call sub_48D64F  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+14h] +
jz loc_414F1F  +
xor al al +
pop ebp  +
retn   +
***
cmp byte ptr [ebp+18h] 0 +
push esi  +
push edi  +
jz loc_414F48  +
mov ecx [ebp+8] +
lea esi [ecx+eax] +
cmp ecx esi +
jnb loc_414F42  +
mov edx [ebp+10h] +
sub edx ecx +
mov al [ecx] +
cmp al [edx+ecx] +
jnz loc_414F80  +
inc ecx  +
cmp ecx esi +
jb loc_414F36  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+8] +
lea edi [edx+eax] +
cmp edx edi +
jnb loc_414F42  +
mov esi [ebp+10h] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [esi] +
mov al ds:byte_4DF3B8[eax] +
cmp al ds:byte_4DF3B8[ecx] +
jnz loc_414F80  +
inc edx  +
inc esi  +
cmp edx edi +
jb loc_414F60  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn   +
***
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_4CEDC0 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_48C93D  +
mov dword ptr [edi] offset off_4CEEB0 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
sub esp 14h +
push esi  +
mov esi [edx] +
mov al [esi] +
cmp al 21h +
jz loc_415052  +
cmp al 3Fh +
jz loc_415003  +
push edx  +
call loc_415160  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
inc esi  +
mov [edx] esi +
mov al [esi] +
cmp al 78h +
jz loc_415010  +
cmp al 58h +
jnz loc_415045  +
mov al [esi+1] +
cmp al 6Dh +
jz loc_41501B  +
cmp al 4Dh +
jnz loc_415045  +
mov al [esi+2] +
cmp al 6Ch +
jz loc_415026  +
cmp al 4Ch +
jnz loc_415045  +
movzx eax byte ptr [esi+3] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_415045  +
lea eax [esi+4] +
push edx  +
mov [edx] eax +
call loc_415290  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edx  +
call loc_415290  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov al [esi+1] +
push edi  +
lea edi [esi+1] +
cmp al 2Dh +
jz loc_4150F3  +
cmp al 44h +
jz loc_4150AF  +
cmp al 5Bh +
jnz loc_41510C  +
cmp byte ptr [esi+2] 43h +
jnz loc_41510C  +
cmp byte ptr [esi+3] 44h +
jnz loc_41510C  +
cmp byte ptr [esi+4] 41h +
jnz loc_41510C  +
cmp byte ptr [esi+5] 54h +
jnz loc_41510C  +
cmp byte ptr [esi+6] 41h +
jnz loc_41510C  +
cmp [esi+7] al +
jnz loc_41510C  +
lea eax [esi+8] +
push edx  +
mov [edx] eax +
call loc_415350  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp byte ptr [esi+2] 4Fh +
jnz loc_41510C  +
cmp byte ptr [esi+3] 43h +
jnz loc_41510C  +
cmp byte ptr [esi+4] 54h +
jnz loc_41510C  +
cmp byte ptr [esi+5] 59h +
jnz loc_41510C  +
cmp byte ptr [esi+6] 50h +
jnz loc_41510C  +
cmp byte ptr [esi+7] 45h +
jnz loc_41510C  +
movzx eax byte ptr [esi+8] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_41510C  +
lea eax [esi+9] +
push edx  +
mov [edx] eax +
call loc_4153B0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
cmp byte ptr [esi+2] 2Dh +
jnz loc_41510C  +
lea eax [esi+3] +
push edx  +
mov [edx] eax +
call loc_4152F0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [edx] edi +
cmp byte ptr [edi] 3Eh +
jz loc_415122  +
mov eax [edx] +
cmp byte ptr [eax] 0 +
jz loc_41512E  +
inc eax  +
mov [edx] eax +
cmp byte ptr [eax] 3Eh +
jnz loc_415113  +
inc dword ptr [edx]  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-4] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-14h] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
call sub_48D64F  +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov eax ecx +
push edi  +
sub esp 14h +
mov [ebp-4] eax +
lea ecx [eax+30h] +
call sub_415470  +
mov esi [ebp+8] +
mov edi eax +
mov ebx [esi] +
mov edx ebx +
movzx ecx byte ptr [edx] +
cmp ds:byte_4DF7B8[ecx] 0 +
jz loc_41519E  +
nop   +
movzx eax byte ptr [edx+1] +
inc edx  +
cmp ds:byte_4DF7B8[eax] 0 +
jnz loc_415190  +
mov [esi] edx +
cmp edx ebx +
jz loc_415233  +
sub edx ebx +
mov [edi] ebx +
mov [edi+8] edx +
mov ecx [esi] +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_4151CE  +
movzx eax byte ptr [ecx+1] +
inc ecx  +
cmp ds:byte_4DF6B8[eax] 0 +
jnz loc_4151C0  +
mov ebx [ebp-4] +
push edi  +
mov [esi] ecx +
mov ecx ebx +
push esi  +
call loc_415520  +
mov eax [esi] +
mov cl [eax] +
cmp cl 3Eh +
jnz loc_4151F3  +
push edi  +
inc eax  +
mov ecx ebx +
push esi  +
mov [esi] eax +
call loc_415770  +
jmp loc_415203  +
cmp cl 2Fh +
jnz loc_41525A  +
inc eax  +
mov [esi] eax +
cmp byte ptr [eax] 3Eh +
jnz loc_41525A  +
inc eax  +
mov [esi] eax +
mov eax [edi] +
mov ecx offset unk_4F64E4 +
test eax eax +
cmovnz ecx eax +
jz loc_415223  +
mov eax [edi+8] +
mov byte ptr [eax+ecx] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
xor eax eax +
mov [eax+ecx] al +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset unk_4EC140  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0Ch] offset aExpectedElemen +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov [ebp-8] edx +
call sub_48D64F  +
mov [ebp-8] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-18h] +
movq qword ptr [ebp-14h] xmm0 +
push eax  +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
mov dword ptr [ebp-0Ch] offset aExpected_0 +
call sub_48D64F  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 14h +
mov eax [ecx] +
mov dl [eax] +
cmp dl 3Fh +
jnz loc_4152AF  +
cmp byte ptr [eax+1] 3Eh +
jz loc_4152B8  +
test dl dl +
jz loc_4152C3  +
inc eax  +
mov [ecx] eax +
jmp loc_4152A0  +
***
add dword ptr [ecx] 2 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-4] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-14h] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
call sub_48D64F  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 14h +
mov eax [ecx] +
mov dl [eax] +
cmp dl 2Dh +
jnz loc_415314  +
cmp [eax+1] dl +
jnz loc_415314  +
cmp byte ptr [eax+2] 3Eh +
jz loc_41531D  +
test dl dl +
jz loc_415328  +
inc eax  +
mov [ecx] eax +
jmp loc_415300  +
***
add dword ptr [ecx] 3 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-4] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-14h] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
call sub_48D64F  +
int 3  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 14h +
mov eax [ecx] +
mov dl [eax] +
cmp dl 5Dh +
jnz loc_415374  +
cmp [eax+1] dl +
jnz loc_415374  +
cmp byte ptr [eax+2] 3Eh +
jz loc_41537D  +
test dl dl +
jz loc_415388  +
inc eax  +
mov [ecx] eax +
jmp loc_415360  +
***
add dword ptr [ecx] 3 +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov [ebp-4] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-14h] +
movq qword ptr [ebp-10h] xmm0 +
push eax  +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
call sub_48D64F  +
int 3  +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi [ebp+8] +
mov eax [esi] +
mov cl [eax] +
cmp cl 3Eh +
jz loc_415406  +
test cl cl +
jz loc_415438  +
cmp cl 5Bh +
jz loc_4153D1  +
inc eax  +
mov [esi] eax +
jmp loc_4153FD  +
lea edx [eax+1] +
mov ecx 1 +
mov [esi] edx +
movsx eax byte ptr [edx] +
sub eax 0 +
jz loc_415411  +
sub eax 5Bh +
jz loc_4153F5  +
sub eax 2 +
jnz loc_4153F6  +
dec ecx  +
jmp loc_4153F6  +
inc ecx  +
inc edx  +
mov [esi] edx +
test ecx ecx +
jg loc_4153E0  +
mov eax [esi] +
mov cl [eax] +
cmp cl 3Eh +
jnz loc_4153C3  +
inc dword ptr [esi]  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset unk_4EC140  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
mov [ebp-4] edx +
call sub_48D64F  +
mov eax [esi] +
xorps xmm0 xmm0 +
mov [ebp-4] eax +
lea eax [ebp-14h] +
push offset unk_4EC140  +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov dword ptr [ebp-8] offset aUnexpectedEndO +
call sub_48D64F  +
push ecx  +
push esi  +
mov esi ecx +
mov edx [esi+4] +
neg edx  +
and edx 3 +
add edx [esi+4] +
lea eax [edx+30h] +
cmp eax [esi+8] +
jbe loc_4154CE  +
mov eax [esi+1000Ch] +
push 1000Ah  +
test eax eax +
jz loc_41549D  +
call eax  +
jmp loc_4154A2  +
call sub_488C96  +
mov edx eax +
add esp 4 +
mov eax [esi] +
mov ecx edx +
neg ecx  +
and ecx 3 +
add ecx edx +
mov [ecx] eax +
lea eax [edx+1000Ah] +
mov [esi] edx +
add ecx 4 +
mov edx ecx +
mov [esi+4] ecx +
neg edx  +
mov [esi+8] eax +
and edx 3 +
add edx ecx +
lea eax [edx+30h] +
mov [esi+4] eax +
pop esi  +
test edx edx +
jz loc_41550A  +
mov dword ptr [edx] 0 +
mov eax edx +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 1 +
mov dword ptr [edx+18h] 0 +
mov dword ptr [edx+20h] 0 +
mov esp ebp +
pop ebp  +
retn 14h  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
mov esi [ebp+8] +
mov edx ecx +
mov [ebp-4] edx +
mov eax [esi] +
movzx eax byte ptr [eax] +
cmp ds:byte_4DFAB8[eax] 0 +
jz loc_4156C6  +
push ebx  +
push edi  +
mov ebx [esi] +
lea ecx [ebx+1] +
mov [esi] ecx +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DFAB8[eax] 0 +
jz loc_41556E  +
movzx eax byte ptr [ecx+1] +
inc ecx  +
cmp ds:byte_4DFAB8[eax] 0 +
jnz loc_415560  +
mov [esi] ecx +
cmp ecx ebx +
jz loc_415742  +
sub esp 10h +
lea ecx [edx+30h] +
call sub_4158F0  +
mov ecx [esi] +
mov edi eax +
sub ecx ebx +
mov [edi+8] ecx +
mov ecx [ebp+0Ch] +
mov [edi] ebx +
cmp dword ptr [ecx+20h] 0 +
jz loc_4155A5  +
mov eax [ecx+24h] +
mov [edi+14h] eax +
mov eax [ecx+24h] +
mov [eax+18h] edi +
jmp loc_4155AF  +
mov dword ptr [edi+14h] 0 +
mov [ecx+20h] edi +
mov [ecx+24h] edi +
mov [edi+10h] ecx +
mov dword ptr [edi+18h] 0 +
mov ecx [esi] +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_4155DE  +
mov [esi] ecx +
cmp byte ptr [ecx] 3Dh +
jnz loc_41571B  +
lea eax [ecx+1] +
mov ecx offset unk_4F64E4 +
mov [esi] eax +
mov eax [edi] +
test eax eax +
cmovnz ecx eax +
jz loc_415601  +
mov eax [edi+8] +
jmp loc_415603  +
xor eax eax +
mov byte ptr [eax+ecx] 0 +
mov ecx [esi] +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_41562E  +
movzx eax byte ptr [ecx+1] +
inc ecx  +
cmp ds:byte_4DF6B8[eax] 0 +
jnz loc_415620  +
mov [esi] ecx +
mov bl [ecx] +
cmp bl 27h +
jz loc_415640  +
cmp bl 22h +
jnz loc_4156CD  +
lea eax [ecx+1] +
mov [ebp+8] eax +
mov [esi] eax +
push esi  +
cmp bl 27h +
jnz loc_415655  +
call loc_415980  +
jmp loc_41565A  +
call loc_415BE0  +
mov ecx [ebp+8] +
add esp 4 +
sub eax ecx +
mov [edi+4] ecx +
mov [edi+0Ch] eax +
mov eax [esi] +
cmp [eax] bl +
jnz loc_4156F4  +
inc eax  +
mov ecx offset unk_4F64E4 +
mov [esi] eax +
mov eax [edi+4] +
test eax eax +
cmovnz ecx eax +
jz loc_415689  +
mov eax [edi+0Ch] +
jmp loc_41568B  +
xor eax eax +
mov byte ptr [eax+ecx] 0 +
mov eax [esi] +
movzx ecx byte ptr [eax] +
cmp ds:byte_4DF6B8[ecx] 0 +
jz loc_4156AE  +
movzx ecx byte ptr [eax+1] +
inc eax  +
cmp ds:byte_4DF6B8[ecx] 0 +
jnz loc_4156A0  +
mov [esi] eax +
movzx eax byte ptr [eax] +
cmp ds:byte_4DFAB8[eax] 0 +
jz loc_4156C4  +
mov edx [ebp-4] +
jmp loc_415543  +
***
pop edi  +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset unk_4EC140  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0Ch] offset aExpectedOr +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov [ebp-8] ecx +
call sub_48D64F  +
mov [ebp-8] eax +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
lea eax [ebp-18h] +
movq qword ptr [ebp-14h] xmm0 +
push eax  +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
mov dword ptr [ebp-0Ch] offset aExpectedOr +
call sub_48D64F  +
push offset unk_4EC140  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0Ch] offset aExpected_1 +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov [ebp-8] ecx +
call sub_48D64F  +
push offset unk_4EC140  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0Ch] offset aExpectedAttrib +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov [ebp-8] ebx +
call sub_48D64F  +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
mov [ebp-4] ecx +
mov ebx [edi] +
mov eax ebx +
movzx ecx byte ptr [eax] +
cmp ds:byte_4DF6B8[ecx] 0 +
jz loc_4157A0  +
movzx ecx byte ptr [eax+1] +
inc eax  +
cmp ds:byte_4DF6B8[ecx] 0 +
jnz loc_415792  +
mov [edi] eax +
mov al [eax] +
test al al +
jz loc_4158BA  +
cmp al 3Ch +
jz loc_4157E4  +
push edi  +
mov [edi] ebx +
call loc_415F40  +
mov ecx [esi+4] +
add esp 4 +
test ecx ecx +
mov [ebp+0Ch] eax +
mov edx offset unk_4F64E4 +
cmovnz edx ecx +
cmp byte ptr [edx] 0 +
jnz loc_4157D8  +
sub eax ebx +
mov [esi+4] ebx +
mov [esi+0Ch] eax +
mov eax [edi] +
mov ecx [ebp+0Ch] +
mov al [eax] +
mov byte ptr [ecx] 0 +
jmp loc_4157A4  +
***
mov eax [edi] +
inc eax  +
cmp byte ptr [eax] 2Fh +
jz loc_41583D  +
mov ecx [ebp-4] +
push edi  +
mov [edi] eax +
call loc_414FE0  +
mov edx eax +
test edx edx +
jz loc_415782  +
cmp dword ptr [esi+18h] 0 +
jz loc_415821  +
mov ecx [esi+1Ch] +
mov [edx+28h] ecx +
mov eax [esi+1Ch] +
mov [eax+2Ch] edx +
mov [esi+1Ch] edx +
mov [edx+10h] esi +
mov dword ptr [edx+2Ch] 0 +
jmp loc_415782  +
***
mov dword ptr [edx+28h] 0 +
mov [esi+18h] edx +
mov [esi+1Ch] edx +
mov [edx+10h] esi +
mov dword ptr [edx+2Ch] 0 +
jmp loc_415782  +
***
add dword ptr [edi] 2 +
mov ecx [edi] +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DF7B8[eax] 0 +
jz loc_41585E  +
nop   +
movzx eax byte ptr [ecx+1] +
inc ecx  +
cmp ds:byte_4DF7B8[eax] 0 +
jnz loc_415850  +
mov [edi] ecx +
movzx eax byte ptr [ecx] +
cmp ds:byte_4DF6B8[eax] 0 +
jz loc_41587E  +
movzx eax byte ptr [ecx+1] +
inc ecx  +
cmp ds:byte_4DF6B8[eax] 0 +
jnz loc_415870  +
mov [edi] ecx +
cmp byte ptr [ecx] 3Eh +
jnz loc_415893  +
lea eax [ecx+1] +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset unk_4EC140  +
lea eax [ebp-18h] +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-0Ch] offset aExpected_0 +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov [ebp-8] ecx +
call sub_48D64F  +
mov eax [edi] +
xorps xmm0 xmm0 +
mov [ebp-8] eax +
lea eax [ebp-18h] +
push offset unk_4EC140  +
push eax  +
movq qword ptr [ebp-14h] xmm0 +
mov dword ptr [ebp-18h] offset off_4CEEB0 +
mov dword ptr [ebp-0Ch] offset aUnexpectedEndO +
call sub_48D64F  +
push ecx  +
push esi  +
mov esi ecx +
mov edx [esi+4] +
neg edx  +
and edx 3 +
add edx [esi+4] +
lea eax [edx+1Ch] +
cmp eax [esi+8] +
jbe loc_41594E  +
mov eax [esi+1000Ch] +
push 1000Ah  +
test eax eax +
jz loc_41591D  +
call eax  +
jmp loc_415922  +
call sub_488C96  +
mov edx eax +
add esp 4 +
mov eax [esi] +
mov ecx edx +
neg ecx  +
and ecx 3 +
add ecx edx +
mov [ecx] eax +
lea eax [edx+1000Ah] +
mov [esi] edx +
add ecx 4 +
mov edx ecx +
mov [esi+4] ecx +
neg edx  +
mov [esi+8] eax +
and edx 3 +
add edx ecx +
lea eax [edx+1Ch] +
mov [esi+4] eax +
pop esi  +
test edx edx +
jz loc_415975  +
mov dword ptr [edx] 0 +
mov eax edx +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+10h] 0 +
mov esp ebp +
pop ebp  +
retn 10h  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
movzx eax byte ptr [esi] +
cmp ds:byte_4DF9B8[eax] 0 +
jz loc_4159AE  +
movzx eax byte ptr [esi+1] +
inc esi  +
cmp ds:byte_4DF9B8[eax] 0 +
jnz loc_4159A0  +
mov [edi] esi +
mov ecx esi +
movzx eax byte ptr [esi] +
mov [ebp+8] ecx +
cmp ds:byte_4DF5B8[eax] 0 +
jz loc_415B46  +
mov dl [esi] +
cmp dl 26h +
jnz loc_415B2F  +
movsx eax byte ptr [esi+1] +
add eax 0FFFFFFDDh +
cmp eax 4Eh +
ja loc_415B2F  +
movzx eax ds:byte_415B90[eax] +
jmp ds:off_415B78[eax*4]  +
mov al [esi+2] +
cmp al 6Dh +
jnz loc_415A0D  +
cmp byte ptr [esi+3] 70h +
jnz loc_415A0D  +
cmp byte ptr [esi+4] 3Bh +
jnz loc_415A0D  +
mov byte ptr [ecx] 26h +
inc ecx  +
add esi 5 +
jmp loc_415B33  +
cmp al 70h +
jnz loc_415B2F  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_415B2F  +
cmp byte ptr [esi+4] 73h +
jnz loc_415B2F  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_415B2F  +
mov byte ptr [ecx] 27h +
inc ecx  +
add esi 6 +
jmp loc_415B33  +
cmp byte ptr [esi+2] 75h +
jnz loc_415B2F  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_415B2F  +
cmp byte ptr [esi+4] 74h +
jnz loc_415B2F  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_415B2F  +
mov byte ptr [ecx] 22h +
inc ecx  +
add esi 6 +
jmp loc_415B33  +
cmp byte ptr [esi+2] 74h +
jnz loc_415B2F  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_415B2F  +
mov byte ptr [ecx] 3Eh +
inc ecx  +
add esi 4 +
jmp loc_415B33  +
cmp byte ptr [esi+2] 74h +
jnz loc_415B2F  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_415B2F  +
mov byte ptr [ecx] 3Ch +
inc ecx  +
add esi 4 +
jmp loc_415B33  +
xor ecx ecx +
cmp byte ptr [esi+2] 78h +
jnz loc_415AE8  +
movzx eax byte ptr [esi+3] +
add esi 3 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_415B17  +
inc esi  +
movzx eax al +
shl ecx 4 +
add ecx eax +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_415AD0  +
jmp loc_415B17  +
movzx eax byte ptr [esi+2] +
add esi 2 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_415B17  +
movzx eax al +
lea ecx [ecx+ecx*4] +
inc esi  +
lea ecx [eax+ecx*2] +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_415B00  +
push ecx  +
lea eax [ebp+8] +
push eax  +
call loc_415E40  +
add esp 8 +
cmp byte ptr [esi] 3Bh +
jnz loc_415B50  +
mov ecx [ebp+8] +
inc esi  +
jmp loc_415B36  +
mov [ecx] dl +
inc ecx  +
inc esi  +
mov [ebp+8] ecx +
movzx eax byte ptr [esi] +
cmp ds:byte_4DF5B8[eax] 0 +
jnz loc_4159C5  +
mov [edi] esi +
mov eax ecx +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset unk_4EC140  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-8] offset aExpected_2 +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
mov [ebp-4] esi +
call sub_48D64F  +
nop   +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5010505h +
add eax 2050505h +
add eax 3050505h +
add eax 4050505h +
int 3  +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
movzx eax byte ptr [esi] +
cmp ds:byte_4DFCB8[eax] 0 +
jz loc_415C0E  +
movzx eax byte ptr [esi+1] +
inc esi  +
cmp ds:byte_4DFCB8[eax] 0 +
jnz loc_415C00  +
mov [edi] esi +
mov ecx esi +
movzx eax byte ptr [esi] +
mov [ebp+8] ecx +
cmp ds:byte_4DF8B8[eax] 0 +
jz loc_415DA6  +
mov dl [esi] +
cmp dl 26h +
jnz loc_415D8F  +
movsx eax byte ptr [esi+1] +
add eax 0FFFFFFDDh +
cmp eax 4Eh +
ja loc_415D8F  +
movzx eax ds:byte_415DF0[eax] +
jmp ds:off_415DD8[eax*4]  +
mov al [esi+2] +
cmp al 6Dh +
jnz loc_415C6D  +
cmp byte ptr [esi+3] 70h +
jnz loc_415C6D  +
cmp byte ptr [esi+4] 3Bh +
jnz loc_415C6D  +
mov byte ptr [ecx] 26h +
inc ecx  +
add esi 5 +
jmp loc_415D93  +
cmp al 70h +
jnz loc_415D8F  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_415D8F  +
cmp byte ptr [esi+4] 73h +
jnz loc_415D8F  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_415D8F  +
mov byte ptr [ecx] 27h +
inc ecx  +
add esi 6 +
jmp loc_415D93  +
cmp byte ptr [esi+2] 75h +
jnz loc_415D8F  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_415D8F  +
cmp byte ptr [esi+4] 74h +
jnz loc_415D8F  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_415D8F  +
mov byte ptr [ecx] 22h +
inc ecx  +
add esi 6 +
jmp loc_415D93  +
cmp byte ptr [esi+2] 74h +
jnz loc_415D8F  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_415D8F  +
mov byte ptr [ecx] 3Eh +
inc ecx  +
add esi 4 +
jmp loc_415D93  +
cmp byte ptr [esi+2] 74h +
jnz loc_415D8F  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_415D8F  +
mov byte ptr [ecx] 3Ch +
inc ecx  +
add esi 4 +
jmp loc_415D93  +
xor ecx ecx +
cmp byte ptr [esi+2] 78h +
jnz loc_415D48  +
movzx eax byte ptr [esi+3] +
add esi 3 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_415D77  +
inc esi  +
movzx eax al +
shl ecx 4 +
add ecx eax +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_415D30  +
jmp loc_415D77  +
movzx eax byte ptr [esi+2] +
add esi 2 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_415D77  +
movzx eax al +
lea ecx [ecx+ecx*4] +
inc esi  +
lea ecx [eax+ecx*2] +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_415D60  +
push ecx  +
lea eax [ebp+8] +
push eax  +
call loc_415E40  +
add esp 8 +
cmp byte ptr [esi] 3Bh +
jnz loc_415DB0  +
mov ecx [ebp+8] +
inc esi  +
jmp loc_415D96  +
mov [ecx] dl +
inc ecx  +
inc esi  +
mov [ebp+8] ecx +
movzx eax byte ptr [esi] +
cmp ds:byte_4DF8B8[eax] 0 +
jnz loc_415C25  +
mov [edi] esi +
mov eax ecx +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset unk_4EC140  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-8] offset aExpected_2 +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
mov [ebp-4] esi +
call sub_48D64F  +
nop   +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5050505h +
add eax 5010505h +
add eax 2050505h +
add eax 3050505h +
add eax 4050505h +
int 3  +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+0Ch] +
cmp ebx 80h +
jnb loc_415E60  +
mov ecx [ebp+8] +
mov eax [ecx] +
mov [eax] bl +
inc dword ptr [ecx]  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ebx 800h +
jnb loc_415E8A  +
mov edx [ebp+8] +
mov cl bl +
and cl 3Fh +
shr ebx 6 +
or cl 80h +
or bl 0C0h +
mov eax [edx] +
mov [eax+1] cl +
mov eax [edx] +
mov [eax] bl +
add dword ptr [edx] 2 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ebx 10000h +
jnb loc_415EC4  +
mov edx [ebp+8] +
mov cl bl +
and cl 3Fh +
shr ebx 6 +
or cl 80h +
mov eax [edx] +
mov [eax+2] cl +
mov cl bl +
mov eax [edx] +
and cl 3Fh +
or cl 80h +
shr ebx 6 +
or bl 0E0h +
mov [eax+1] cl +
mov eax [edx] +
mov [eax] bl +
add dword ptr [edx] 3 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ebx 110000h +
jnb loc_415F0E  +
mov edx [ebp+8] +
mov cl bl +
and cl 3Fh +
shr ebx 6 +
or cl 80h +
mov eax [edx] +
mov [eax+3] cl +
mov cl bl +
mov eax [edx] +
and cl 3Fh +
or cl 80h +
shr ebx 6 +
mov [eax+2] cl +
mov cl bl +
mov eax [edx] +
and cl 3Fh +
or cl 80h +
shr ebx 6 +
or bl 0F0h +
mov [eax+1] cl +
mov eax [edx] +
mov [eax] bl +
add dword ptr [edx] 4 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
xorps xmm0 xmm0 +
push offset unk_4EC140  +
movq qword ptr [ebp-10h] xmm0 +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
mov eax [eax] +
mov [ebp-4] eax +
lea eax [ebp-14h] +
push eax  +
mov dword ptr [ebp-8] offset aInvalidNumeric +
call sub_48D64F  +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
movzx eax byte ptr [esi] +
cmp ds:byte_4DFBB8[eax] 0 +
jz loc_415F6E  +
movzx eax byte ptr [esi+1] +
inc esi  +
cmp ds:byte_4DFBB8[eax] 0 +
jnz loc_415F60  +
mov [edi] esi +
mov ecx esi +
movzx eax byte ptr [esi] +
mov [ebp+8] ecx +
cmp ds:byte_4DFDB8[eax] 0 +
jz loc_416106  +
mov dl [esi] +
cmp dl 26h +
jnz loc_4160EF  +
movsx eax byte ptr [esi+1] +
add eax 0FFFFFFDDh +
cmp eax 4Eh +
ja loc_4160EF  +
movzx eax ds:byte_416150[eax] +
jmp ds:off_416138[eax*4]  +
mov al [esi+2] +
cmp al 6Dh +
jnz loc_415FCD  +
cmp byte ptr [esi+3] 70h +
jnz loc_415FCD  +
cmp byte ptr [esi+4] 3Bh +
jnz loc_415FCD  +
mov byte ptr [ecx] 26h +
inc ecx  +
add esi 5 +
jmp loc_4160F3  +
cmp al 70h +
jnz loc_4160EF  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_4160EF  +
cmp byte ptr [esi+4] 73h +
jnz loc_4160EF  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_4160EF  +
mov byte ptr [ecx] 27h +
inc ecx  +
add esi 6 +
jmp loc_4160F3  +
cmp byte ptr [esi+2] 75h +
jnz loc_4160EF  +
cmp byte ptr [esi+3] 6Fh +
jnz loc_4160EF  +
cmp byte ptr [esi+4] 74h +
jnz loc_4160EF  +
cmp byte ptr [esi+5] 3Bh +
jnz loc_4160EF  +
mov byte ptr [ecx] 22h +
inc ecx  +
add esi 6 +
jmp loc_4160F3  +
cmp byte ptr [esi+2] 74h +
jnz loc_4160EF  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_4160EF  +
mov byte ptr [ecx] 3Eh +
inc ecx  +
add esi 4 +
jmp loc_4160F3  +
cmp byte ptr [esi+2] 74h +
jnz loc_4160EF  +
cmp byte ptr [esi+3] 3Bh +
jnz loc_4160EF  +
mov byte ptr [ecx] 3Ch +
inc ecx  +
add esi 4 +
jmp loc_4160F3  +
xor ecx ecx +
cmp byte ptr [esi+2] 78h +
jnz loc_4160A8  +
movzx eax byte ptr [esi+3] +
add esi 3 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_4160D7  +
inc esi  +
movzx eax al +
shl ecx 4 +
add ecx eax +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_416090  +
jmp loc_4160D7  +
movzx eax byte ptr [esi+2] +
add esi 2 +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jz loc_4160D7  +
movzx eax al +
lea ecx [ecx+ecx*4] +
inc esi  +
lea ecx [eax+ecx*2] +
movzx eax byte ptr [esi] +
mov al ds:byte_4DF4B8[eax] +
cmp al 0FFh +
jnz loc_4160C0  +
push ecx  +
lea eax [ebp+8] +
push eax  +
call loc_415E40  +
add esp 8 +
cmp byte ptr [esi] 3Bh +
jnz loc_416110  +
mov ecx [ebp+8] +
inc esi  +
jmp loc_4160F6  +
mov [ecx] dl +
inc ecx  +
inc esi  +
mov [ebp+8] ecx +
movzx eax byte ptr [esi] +
cmp ds:byte_4DFDB8[eax] 0 +
jnz loc_415F85  +
mov [edi] esi +
mov eax ecx +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset unk_4EC140  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] offset off_4CEEB0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-8] offset aExpected_2 +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
mov [ebp-4] esi +
call sub_48D64F  +
nop   +
push 0FFFFFFFFh  +
push offset loc_4B90EF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_488C2D  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_41620D  +
push [ebp+arg_0]  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_41620F  +
cmp [ebp+arg_0] eax +
jz loc_41620F  +
push 8007000Eh  +
call sub_48B080  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_416226  +
push 8007000Eh  +
call sub_48B080  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_416298  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_416292  +
test esi esi +
jz loc_416292  +
mov eax [esi] +
test eax eax +
jz loc_416270  +
push eax  +
call ds:__imp_SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_416287  +
push eax  +
call sub_488C91  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
push 0  +
push 1  +
push 0  +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 0 +
mov byte ptr [edi+5] 0 +
mov dword ptr [edi+28h] 0Fh +
mov dword ptr [edi+24h] 0 +
push 0  +
mov byte ptr [edi+14h] 0 +
call ds:CreateSemaphoreW  +
push 0  +
push 1  +
push 0  +
push 0  +
mov [edi+8] eax +
call ds:CreateSemaphoreW  +
mov [edi+0Ch] eax +
lea eax [ebp+var_4] +
push eax  +
push 0  +
push edi  +
push offset sub_416550  +
push 0  +
push 0  +
call sub_4984A9  +
add esp 18h +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+PreviousCount] +
push esi  +
mov esi ecx +
cmp dword ptr [eax+10h] 0 +
jnz loc_4163B6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
lea ecx [esi+14h] +
cmp ecx eax +
jz loc_4163C7  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_4032A0  +
lea eax [ebp+PreviousCount] +
mov dword ptr [esi+2Ch] 0 +
push eax  +
push 1  +
push dword ptr [esi+8]  +
mov [ebp+PreviousCount] 0 +
call ds:ReleaseSemaphore  +
test eax eax +
jz loc_4163F3  +
push 0FFFFFFFFh  +
push dword ptr [esi+0Ch]  +
call ds:WaitForSingleObject  +
mov eax [esi+2Ch] +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B9118  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
push 0  +
call ds:CoInitializeEx  +
test eax eax +
js loc_416512  +
push 0  +
push 0  +
push 0  +
push 3  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push 0  +
call ds:CoInitializeSecurity  +
test eax eax +
jns loc_416462  +
cmp eax 80010119h +
jnz loc_41650C  +
lea eax [ebp+ppv] +
mov [ebp+ppv] 0 +
push eax  +
push offset riid  +
push 1  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
test eax eax +
js loc_41650C  +
push offset aRootCimv2  +
lea ecx [ebp+var_18] +
mov [ebp+pProxy] 0 +
call sub_4161A0  +
mov [ebp+var_4] 0 +
mov eax [eax] +
test eax eax +
jz loc_4164AE  +
mov edx [eax] +
jmp loc_4164B0  +
xor edx edx +
mov eax [ebp+ppv] +
lea esi [ebp+pProxy] +
push esi  +
push 0  +
push 0  +
mov ecx [eax] +
push 0  +
push 0  +
push 0  +
push 0  +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea ecx [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
mov esi eax +
call sub_416240  +
test esi esi +
js loc_416503  +
push 0  +
push 0  +
push 3  +
push 3  +
push 0  +
push 0  +
push 0Ah  +
push [ebp+pProxy]  +
call ds:CoSetProxyBlanket  +
test eax eax +
jns loc_416525  +
mov eax [ebp+pProxy] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
call ds:__imp_CoUninitialize  +
xor al al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+ppv] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+pProxy] +
mov [edi] eax +
mov al 1 +
mov byte ptr [edi+4] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax [ebp-14h] +
mov byte ptr [eax+4] 0 +
mov eax offset loc_4165EF +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9187  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_40] ebx +
lea edx [ebx+14h] +
mov [ebp+var_30] 0 +
lea ecx [ebp+var_28] +
call sub_40B590  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 8 +
lea ecx [ebp+var_3C] +
cmovnb eax [ebp+var_28] +
push eax  +
call sub_4161A0  +
mov edi eax +
push 0Ch  +
mov byte ptr [ebp+var_4] 1 +
call sub_488C2D  +
mov esi eax +
add esp 4 +
mov [ebp+var_34] esi +
mov byte ptr [ebp+var_4] 2 +
test esi esi +
jz loc_4166B6  +
push offset off_4DFED0  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call sub_48B0A0  +
mov [esi] eax +
jmp loc_4166B8  +
xor esi esi +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_34] esi +
test esi esi +
jnz loc_4166CD  +
push 8007000Eh  +
call sub_48B080  +
mov byte ptr [ebp+var_4] 3 +
mov eax [edi] +
test eax eax +
jz loc_4166DB  +
mov edx [eax] +
jmp loc_4166DD  +
xor edx edx +
mov eax [ebx] +
lea edi [ebp+var_30] +
push edi  +
push 0  +
push 30h  +
mov ecx [eax] +
push edx  +
push dword ptr [esi]  +
push eax  +
call dword ptr [ecx+50h]  +
or edi 0FFFFFFFFh +
mov [ebp+var_34] eax +
mov ecx edi +
xadd [esi+8] ecx +
dec ecx  +
mov ebx ds:__imp_SysFreeString +
jnz loc_416737  +
mov ecx [esi] +
test ecx ecx +
jz loc_416715  +
push ecx  +
call ebx  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_41672C  +
push eax  +
call sub_488C91  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov byte ptr [ebp+var_4] 0 +
mov esi [ebp+var_3C] +
test esi esi +
jz loc_41677F  +
xadd [esi+8] edi +
dec edi  +
jnz loc_41677F  +
test esi esi +
jz loc_41677F  +
mov eax [esi] +
test eax eax +
jz loc_41675D  +
push eax  +
call ebx  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_416774  +
push eax  +
call sub_488C91  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
cmp [ebp+var_34] 0 +
jl loc_4167ED  +
mov eax [ebp+var_30] +
lea edx [ebp+var_38] +
push edx  +
lea edx [ebp+var_2C] +
mov [ebp+var_2C] 0 +
push edx  +
push 1  +
mov [ebp+var_38] 0 +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
mov ecx [ebp+var_2C] +
test ecx ecx +
jz loc_4167E4  +
test eax eax +
js loc_4167DE  +
cmp [ebp+var_38] 0 +
jbe loc_4167DE  +
mov eax [ecx] +
lea edx [ebp+var_54] +
push 0  +
push 0  +
push edx  +
push 0  +
push offset aProcessid  +
push ecx  +
call dword ptr [eax+10h]  +
test eax eax +
js loc_4167DB  +
mov ecx [ebp+var_40] +
mov eax [ebp+var_4C] +
mov [ecx+2Ch] eax +
mov ecx [ebp+var_2C] +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_416802  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_40C2A0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
mov esi edx +
mov ebx ecx +
push edi  +
cmp dword ptr [esi+14h] 10h +
jb loc_416834  +
mov eax [esi] +
jmp loc_416836  +
mov eax esi +
push dword ptr [esi+10h]  +
push 0  +
push eax  +
call sub_417510  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_41687F  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx ebx +
push dword ptr [esi+10h]  +
push edi  +
call loc_40F7E0  +
mov eax [ebp+arg_0] +
add edi [eax+10h] +
cmp dword ptr [esi+14h] 10h +
jb loc_41686A  +
mov eax [esi] +
jmp loc_41686C  +
mov eax esi +
push dword ptr [esi+10h]  +
mov ecx ebx +
push edi  +
push eax  +
call sub_417510  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_416848  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B91E1  +
mov eax large fs:0 +
push eax  +
sub esp 114h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov esi [ebp+arg_0] +
test eax eax +
jz loc_416A49  +
cmp byte ptr [eax+4] 0 +
jz loc_416A49  +
cmp dword ptr [esi+10h] 0 +
jz loc_416A49  +
sub esp 8 +
lea ecx [ebp+var_120] +
call sub_416BE0  +
mov edx offset aSelectProcessi +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_110] +
call loc_417930  +
cmp [ebp+arg_4] 0 +
jz loc_4169AE  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
lea ecx [ebp+var_40] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
call loc_4032A0  +
push offset asc_4DFF14  +
lea ecx [ebp+var_70] +
mov byte ptr [ebp+var_4] 1 +
call sub_402FD0  +
push offset asc_4DE95C  +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
call sub_402FD0  +
lea eax [ebp+var_70] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
lea edx [ebp+var_58] +
lea ecx [ebp+var_40] +
call sub_416820  +
add esp 4 +
lea ecx [ebp+var_58] +
call sub_402F10  +
lea ecx [ebp+var_70] +
mov byte ptr [ebp+var_4] 1 +
call sub_402F10  +
mov edx offset aExecutablepath +
lea ecx [ebp+var_110] +
call loc_417930  +
lea edx [ebp+var_40] +
mov ecx eax +
call sub_417BE0  +
mov edx offset asc_4DFF18 +
mov ecx eax +
call loc_417930  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 0 +
call sub_402F10  +
jmp loc_4169D3  +
mov edx offset aName_0 +
lea ecx [ebp+var_110] +
call loc_417930  +
mov edx esi +
mov ecx eax +
call sub_417BE0  +
mov edx offset asc_4DFF18 +
mov ecx eax +
call loc_417930  +
lea eax [ebp+PreviousCount] +
push eax  +
lea ecx [ebp+var_120] +
call sub_416AD0  +
lea eax [ebp+PreviousCount] +
mov byte ptr [ebp+var_4] 4 +
mov ecx [edi] +
push eax  +
call sub_4163A0  +
mov ecx [ebp+var_14] +
mov esi eax +
cmp ecx 10h +
jb loc_416A08  +
inc ecx  +
push ecx  +
push [ebp+PreviousCount]  +
lea ecx [ebp+PreviousCount] +
call loc_403650  +
lea ecx [ebp+var_B8] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+PreviousCount] 0 +
call sub_416AF0  +
lea eax [ebp+var_B8] +
mov [ebp+var_4] 5 +
push eax  +
mov [ebp+var_B8] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov eax esi +
jmp loc_416A4B  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx+68h] +
mov ecx esi +
call sub_416AF0  +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_4176C0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-68h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_4DFF8C +
mov eax [edi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov dword ptr [edi-50h] offset off_4DFF4C +
call loc_417610  +
mov esi [edi-1Ch] +
mov dword ptr [edi-50h] offset off_4CEECC +
test esi esi +
jz loc_416B78  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_416B6D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_416B6D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_4DFF44 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edi-6Ch] eax +
mov eax [edi-58h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-58h] offset off_4DFF9C +
mov eax [edi-58h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi-5Ch] eax +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_4CEEC4 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edi-6Ch] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B923F  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_4DFF90 +
mov dword ptr [edi+10h] offset unk_4DFF38 +
mov dword ptr [edi+68h] offset off_4CEEBC +
push ecx  +
lea esi [edi+18h] +
mov [ebp+var_4] 0 +
push esi  +
mov [ebp+var_10] 1 +
call sub_4177D0  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4DFF8C +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_413470  +
mov dword ptr [esi] offset off_4DFF4C +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_C] +
add esi [ebp+arg_4] +
push edi  +
adc ebx [ebp+arg_8] +
mov edi ecx +
mov edx [edi+20h] +
mov eax [edx] +
test eax eax +
jz loc_416CCB  +
cmp [edi+38h] eax +
jnb loc_416CCB  +
mov [edi+38h] eax +
mov eax ds:dword_4D1C9C +
cmp esi ds:dword_4D1C98 +
jnz loc_416CE0  +
cmp ebx eax +
jz loc_416DA4  +
mov ecx [ebp+arg_1C] +
test cl 1 +
jz loc_416D60  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+18h+var_8] eax +
test eax eax +
jz loc_416D5B  +
test ebx ebx +
jl loc_416D53  +
jg loc_416CFF  +
test esi esi +
jb loc_416D53  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_416D53  +
jl loc_416D14  +
cmp esi eax +
ja loc_416D53  +
mov eax [edi+2Ch] +
sub ecx [esp+18h+var_8] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_1C] 2 +
jz loc_416DA4  +
mov eax [edi+20h] +
mov eax [eax] +
mov [esp+18h+var_8] eax +
test eax eax +
jz loc_416DA4  +
mov eax [edi+1Ch] +
mov edx [eax] +
mov eax [edi+30h] +
mov ecx [eax] +
mov eax [edi+20h] +
add ecx [esp+18h+var_8] +
sub ecx edx +
mov [eax] edx +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_416DA4  +
mov ebx ds:dword_4D1C9C +
jmp loc_416D9E  +
mov eax ds:dword_4D1C9C +
test cl 2 +
jz loc_416D9C  +
cmp dword ptr [edx] 0 +
jz loc_416D9C  +
test ebx ebx +
jl loc_416D53  +
jg loc_416D74  +
test esi esi +
jb loc_416D53  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_416D53  +
jl loc_416D89  +
cmp esi eax +
ja loc_416D53  +
mov eax [edi+20h] +
sub ecx [eax] +
mov eax [edi+30h] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+20h] +
add [eax] ecx +
jmp loc_416DA4  +
mov ebx eax +
mov esi ds:dword_4D1C98 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
pop edi  +
mov [eax] esi +
mov [eax+4] ebx +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_416DEA  +
cmp [ebx+38h] eax +
jnb loc_416DEA  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_416ECF  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_416ECF  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_416E23  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416E59  +
cmp eax 1 +
jnz loc_416E41  +
test cl 2 +
jnz loc_416E45  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416E59  +
test eax eax +
jz loc_416E53  +
mov esi ds:dword_4D1C98 +
mov edi ds:dword_4D1C9C +
jmp loc_416E59  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_416F6B  +
jg loc_416E6B  +
test esi esi +
jb loc_416F6B  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_416F6B  +
jl loc_416E88  +
cmp esi eax +
ja loc_416F6B  +
mov eax [ebx+2Ch] +
sub ecx [ebp+var_4] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_10] 2 +
jz loc_416F77  +
mov eax [ebx+20h] +
mov eax [eax] +
mov [ebp+arg_10] eax +
test eax eax +
jz loc_416F77  +
mov eax [ebx+1Ch] +
mov edx [eax] +
mov eax [ebx+30h] +
mov ecx [eax] +
mov eax [ebx+20h] +
add ecx [ebp+arg_10] +
sub ecx edx +
mov [eax] edx +
mov eax [ebx+30h] +
mov [eax] ecx +
jmp loc_416F77  +
test cl 2 +
jz loc_416F5F  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_416F5F  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_416EFE  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416F2F  +
cmp eax 1 +
jnz loc_416F17  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_416F2F  +
test eax eax +
jz loc_416F29  +
mov esi ds:dword_4D1C98 +
mov edi ds:dword_4D1C9C +
jmp loc_416F2F  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_416F6B  +
jg loc_416F39  +
test esi esi +
jb loc_416F6B  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_416F6B  +
jl loc_416F4E  +
cmp esi eax +
ja loc_416F6B  +
mov eax [ebx+30h] +
sub ecx [ebp+arg_10] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+20h] +
add [eax] ecx +
jmp loc_416F77  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_416F77  +
mov esi ds:dword_4D1C98 +
mov edi ds:dword_4D1C9C +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx [esi] +
test edx edx +
jnz loc_416FAF  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
mov edi [ecx+2Ch] +
mov eax [edi] +
add eax edx +
cmp edx eax +
jnb loc_416FC1  +
movzx eax byte ptr [edx] +
pop edi  +
pop esi  +
retn   +
test byte ptr [ecx+3Ch] 4 +
jnz loc_416FF3  +
mov eax [ecx+20h] +
mov eax [eax] +
test eax eax +
jz loc_416FF3  +
cmp eax edx +
ja loc_416FD9  +
cmp [ecx+38h] edx +
jbe loc_416FF3  +
cmp [ecx+38h] eax +
jnb loc_416FE1  +
mov [ecx+38h] eax +
mov eax [ecx+38h] +
sub eax [esi] +
mov [edi] eax +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
movzx eax byte ptr [eax] +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edx ecx +
push esi  +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_41704F  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_41704F  +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
jz loc_417029  +
cmp cl [esi-1] +
jz loc_417029  +
test byte ptr [edx+3Ch] 2 +
jnz loc_41704F  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
dec dword ptr [eax]  +
cmp ecx 0FFFFFFFFh +
jz loc_417046  +
mov eax [edx+1Ch] +
pop esi  +
mov eax [eax] +
mov [eax] cl +
mov eax ecx +
pop ebp  +
retn 4  +
xor ecx ecx +
mov eax ecx +
pop esi  +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_41707A  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+8] +
cmp ebx 0FFFFFFFFh +
jnz loc_41708D  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_4170B5  +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_4170B5  +
mov edi [esi+38h] +
cmp edx edi +
jnb loc_4170B5  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
add ecx edx +
sub ecx edi +
mov [eax] edi +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_4170E8  +
mov edi [esi+30h] +
mov ecx [edi] +
lea eax [ecx+edx] +
cmp edx eax +
jnb loc_4170E4  +
dec ecx  +
mov eax ebx +
mov [edi] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+1] +
mov [edx] ecx +
mov [esi] bl +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test edx edx +
jnz loc_4170EC  +
xor edi edi +
jmp loc_4170F8  +
mov eax [esi+30h] +
mov ecx [esi+0Ch] +
mov edi [eax] +
sub edi [ecx] +
add edi edx +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_417108  +
mov ecx 20h +
jmp loc_417110  +
test ecx ecx +
jz loc_417123  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_41711F  +
shr ecx 1 +
jnz loc_417110  +
test ecx ecx +
jnz loc_41712F  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
lea ecx [esi+40h] +
mov [ebp-8] eax +
push eax  +
call loc_4039B0  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov ecx [ecx] +
mov [ebp-4] ecx +
test edi edi +
jz loc_41715E  +
push edi  +
push ecx  +
push ebx  +
call loc_48C9C0  +
mov ecx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_41719B  +
mov eax [esi+10h] +
mov edx [ebp-8] +
mov [esi+38h] ebx +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] edx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_41718E  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_417202  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_417202  +
mov eax ebx +
sub eax ecx +
add [esi+38h] eax +
mov eax [esi+20h] +
mov edx [eax] +
mov eax ebx +
sub eax [ebp-4] +
sub edx ecx +
mov ecx [esi+10h] +
add edx ebx +
add [ecx] eax +
mov ecx ebx +
mov eax [esi+20h] +
sub ecx edx +
add ecx [ebp-8] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_4171E1  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_417202  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov ecx [eax] +
mov eax [esi+0Ch] +
sub ecx [ebp-4] +
add ecx ebx +
sub edx ecx +
mov [eax] ebx +
inc edx  +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_417214  +
push edi  +
push dword ptr [ebp-4]  +
lea ecx [esi+40h] +
call loc_403650  +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+8] +
mov [edx] al +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-20h] offset off_4DFF44 +
mov eax [ecx-20h] +
mov edx [eax+4] +
lea eax [edx-20h] +
mov [edx+ecx-24h] eax +
lea edx [ecx-8] +
mov eax [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_4DFF9C +
mov eax [edx-8] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov eax [edx-18h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-18h] offset off_4CEEC4 +
mov eax [edx-18h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-1Ch] eax +
retn   +
***
mov eax [ecx-8] +
mov eax [eax+4] +
mov dword ptr [eax+ecx-8] offset off_4DFF9C +
mov eax [ecx-8] +
mov edx [eax+4] +
lea eax [edx-8] +
mov [edx+ecx-0Ch] eax +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-68h] +
call sub_416AF0  +
lea eax [esi+68h] +
mov [ebp+var_4] 0 +
push eax  +
mov dword ptr [eax] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_417318  +
push 0B0h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_4DFF4C +
call loc_417610  +
mov edi [esi+34h] +
mov dword ptr [esi] offset off_4CEECC +
test edi edi +
jz loc_417398  +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_41738D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41738D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push edi  +
call sub_488C60  +
add esp 8 +
test [ebp+arg_0] 1 +
jz loc_4173A9  +
push 44h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
lea esi [ecx-20h] +
mov ecx esi +
call sub_417470  +
test [ebp+arg_0] 1 +
jz loc_4173DF  +
push 68h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx ecx +
mov eax [edx-8] +
lea esi [edx-8] +
mov eax [eax+4] +
mov dword ptr [eax+edx-8] offset off_4DFF9C +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-0Ch] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_417459  +
push 50h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8D26  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ecx] +
lea edx [ecx+20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_4DFF44 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+edx-24h] eax +
mov eax [edx-10h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-10h] offset off_4DFF9C +
mov eax [edx-10h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-14h] eax +
mov eax [edx-20h] +
mov eax [eax+4] +
mov dword ptr [eax+edx-20h] offset off_4CEEC4 +
mov eax [edx-20h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edx-24h] eax +
mov [ebp+var_4] 0 +
push edx  +
mov dword ptr [edx] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_4] ecx +
test esi esi +
jnz loc_417530  +
cmp edx [ecx+10h] +
ja loc_417530  +
mov eax edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
push ebx  +
push edi  +
mov edi [ecx+10h] +
cmp edx edi +
jnb loc_417600  +
sub edi edx +
cmp esi edi +
ja loc_417600  +
mov eax 1 +
sub eax esi +
add edi eax +
cmp dword ptr [ecx+14h] 10h +
jb loc_41755A  +
mov eax [ecx] +
jmp loc_41755C  +
mov eax ecx +
lea ecx [eax+edx] +
mov [ebp+arg_4] ecx +
test edi edi +
jz loc_417600  +
mov eax [ebp+arg_0] +
push edi  +
movsx eax byte ptr [eax] +
push eax  +
push ecx  +
call sub_48C890  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_417600  +
test esi esi +
jz loc_4175E8  +
mov ecx [ebp+arg_8] +
mov edx ebx +
mov esi [ebp+arg_0] +
sub ecx 4 +
jb loc_4175A3  +
mov eax [edx] +
cmp eax [esi] +
jnz loc_4175A8  +
add edx 4 +
add esi 4 +
sub ecx 4 +
jnb loc_417592  +
cmp ecx 0FFFFFFFCh +
jz loc_4175E8  +
mov al [edx] +
cmp al [esi] +
jnz loc_4175D5  +
cmp ecx 0FFFFFFFDh +
jz loc_4175E8  +
mov al [edx+1] +
cmp al [esi+1] +
jnz loc_4175D5  +
cmp ecx 0FFFFFFFEh +
jz loc_4175E8  +
mov al [edx+2] +
cmp al [esi+2] +
jnz loc_4175D5  +
cmp ecx 0FFFFFFFFh +
jz loc_4175E8  +
mov al [edx+3] +
cmp al [esi+3] +
jz loc_4175E8  +
mov ecx [ebp+arg_4] +
mov esi [ebp+arg_8] +
sub ecx ebx +
dec ecx  +
add edi ecx +
lea ecx [ebx+1] +
jmp loc_41755F  +
mov eax [ebp+var_4] +
cmp dword ptr [eax+14h] 10h +
jb loc_4175F3  +
mov eax [eax] +
sub ebx eax +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
test byte ptr [esi+3Ch] 1 +
jz loc_417666  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_41762B  +
mov eax [esi+30h] +
mov edx [eax] +
add edx ecx +
jmp loc_417635  +
mov eax [esi+2Ch] +
mov ecx [esi+1Ch] +
mov edx [eax] +
add edx [ecx] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub edx eax +
cmp edx 1000h +
jb loc_41765D  +
test al 1Fh +
jnz loc_4176A9  +
mov ecx [eax-4] +
cmp ecx eax +
jnb loc_4176AE  +
sub eax ecx +
cmp eax 4 +
jb loc_4176B3  +
cmp eax 23h +
ja loc_4176B8  +
mov eax ecx +
push eax  +
call sub_47BF70  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
call sub_495911  +
call sub_495911  +
call sub_495911  +
call sub_495911  +
and esp 0FFFFFFF8h +
sub esp 20h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+20h+var_4] eax +
mov edx ecx +
mov [esp+20h+var_20] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_41773B  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_41773B  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
mov eax [eax] +
sub ecx eax +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 0Fh +
mov [esp+30h+var_C] 0 +
mov byte ptr [esp+30h+var_1C] 0 +
call loc_4031A0  +
lea eax [esp+30h+var_24] +
mov ecx esi +
push eax  +
call sub_402F50  +
mov ecx [esp+30h+var_10] +
cmp ecx 10h +
jb loc_4177B2  +
inc ecx  +
push ecx  +
jmp loc_4177A5  +
test cl 4 +
jnz loc_417779  +
mov eax [edx+1Ch] +
mov edi [eax] +
test edi edi +
jz loc_417779  +
mov eax [edx+2Ch] +
mov ecx [eax] +
mov eax [edx+0Ch] +
add ecx edi +
mov eax [eax] +
sub ecx eax +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 0Fh +
mov [esp+30h+var_C] 0 +
mov byte ptr [esp+30h+var_1C] 0 +
call loc_4031A0  +
jmp loc_41778E  +
mov [esp+28h+var_8] 0Fh +
mov [esp+28h+var_C] 0 +
mov byte ptr [esp+28h+var_1C] 0 +
lea eax [esp+28h+var_1C] +
mov ecx esi +
push eax  +
call sub_402F50  +
mov eax [esp+28h+var_8] +
cmp eax 10h +
jb loc_4177B2  +
inc eax  +
push eax  +
push [esp+2Ch+var_1C]  +
lea ecx [esp+30h+var_1C] +
call loc_403650  +
mov ecx [esp+30h+var_C] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B926B  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_14] 0 +
mov eax [esi] +
push 0  +
push [ebp+arg_0]  +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4CEEC4 +
mov eax [esi] +
mov edx [eax+4] +
lea eax [edx-18h] +
mov [edx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_413530  +
lea edx [esi+10h] +
mov [ebp+arg_0] edx +
mov eax [edx] +
mov eax [eax+4] +
mov dword ptr [edx+eax] offset off_4DFF9C +
mov eax [edx] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edx-4] eax +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4DFF44 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-20h] +
mov [ecx+esi-4] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov dword ptr [esi+38h] 0 +
mov [esi+3Ch] eax +
test ebx ebx +
jz loc_417929  +
and eax 6 +
cmp al 6 +
jz loc_417929  +
push edi  +
push ebx  +
lea ecx [esi+40h] +
call loc_4039B0  +
push ebx  +
push [ebp+arg_0]  +
mov edi eax +
push edi  +
call loc_48C9C0  +
add esp 0Ch +
lea ecx [edi+ebx] +
test byte ptr [esi+3Ch] 4 +
mov [esi+38h] ecx +
jnz loc_4178E6  +
mov eax [esi+0Ch] +
mov [eax] edi +
mov eax [esi+1Ch] +
mov [eax] edi +
mov eax [esi+2Ch] +
mov [eax] ebx +
mov eax [esi+3Ch] +
test al 2 +
jnz loc_417924  +
test al 18h +
mov edx edi +
mov eax [esi+10h] +
cmovnz edx ecx +
mov ecx edi +
sub ecx edx +
add ecx ebx +
mov [eax] edi +
mov eax [esi+20h] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+1Ch] +
cmp dword ptr [eax] 0 +
jnz loc_417924  +
mov eax [esi+0Ch] +
mov [eax] edi +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] edi +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B92AC  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov eax edx +
mov [ebp-20h] eax +
mov ebx ecx +
mov [ebp-1Ch] ebx +
cmp byte ptr [eax] 0 +
mov dword ptr [ebp-24h] 0 +
jnz loc_417975  +
xor ecx ecx +
jmp loc_417989  +
mov ecx eax +
lea edx [ecx+1] +
mov eax [ebx] +
mov [ebp-18h] ecx +
mov eax [eax+4] +
mov edi [eax+ebx+24h] +
mov esi [eax+ebx+20h] +
test edi edi +
jl loc_4179B4  +
jg loc_4179AD  +
test esi esi +
jz loc_4179B4  +
test edi edi +
jl loc_4179B4  +
jg loc_4179AD  +
cmp esi ecx +
jbe loc_4179B4  +
sub esi ecx +
sbb edi 0 +
jmp loc_4179C2  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-2Ch] xmm0 +
mov edi [ebp-28h] +
mov esi [ebp-2Ch] +
mov ecx [eax+ebx+38h] +
mov [ebp-2Ch] ebx +
test ecx ecx +
jz loc_4179D2  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword ptr [ebp-4] 0 +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
jnz loc_4179F6  +
mov ecx [eax+ebx+3Ch] +
test ecx ecx +
jz loc_4179F6  +
cmp ecx ebx +
jz loc_4179F6  +
call sub_414BB0  +
mov eax [ebx] +
mov ecx [eax+4] +
cmp dword ptr [ecx+ebx+0Ch] 0 +
setz al  +
mov [ebp-28h] al +
mov dword ptr [ebp-4] 1 +
test al al +
jnz loc_417A1B  +
mov ecx 4 +
jmp loc_417B72  +
***
mov byte ptr [ebp-4] 2 +
mov eax [ecx+ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_417A9B  +
test edi edi +
jl loc_417A93  +
jg loc_417A3A  +
test esi esi +
jz loc_417A93  +
add esi 0FFFFFFFFh +
adc edi 0FFFFFFFFh +
jmp loc_417A30  +
***
xor ecx ecx +
jnz loc_417B24  +
mov eax [ebx] +
push 0  +
push dword ptr [ebp-18h]  +
mov eax [eax+4] +
push dword ptr [ebp-20h]  +
mov ecx [eax+ebx+38h] +
call sub_417E50  +
cmp eax [ebp-18h] +
jnz loc_417A81  +
test edx edx +
jnz loc_417A81  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_417B55  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_4111D0  +
mov eax offset loc_417B65 +
retn   +
mov ebx [ebp-1Ch] +
mov ecx [ebp-24h] +
mov dword ptr [ebp-4] 1 +
mov eax [ebx] +
mov esi [eax+4] +
add esi ebx +
test ecx ecx +
jz loc_417B98  +
mov edx [esi+0Ch] +
or edx ecx +
mov ecx esi +
mov eax edx +
or eax 4 +
cmp dword ptr [esi+38h] 0 +
push 0  +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov dword ptr [ebp-4] 4 +
call sub_48A7EA  +
mov esi [ebp-2Ch] +
test al al +
jnz loc_417BB2  +
mov ecx esi +
call sub_414D70  +
mov byte ptr [ebp-4] 5 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_417BC8  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B92EC  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_24] edx +
mov ebx ecx +
mov [ebp+var_1C] ebx +
mov eax [ebx] +
xor edi edi +
mov edx [edx+10h] +
mov [ebp+var_20] edi +
mov [ebp+var_18] edx +
mov ecx [eax+4] +
mov eax [ecx+ebx+24h] +
mov esi [ecx+ebx+20h] +
test eax eax +
jl loc_417C43  +
jg loc_417C35  +
test esi esi +
jz loc_417C43  +
mov [ebp+var_28] eax +
cmp esi edx +
jbe loc_417C43  +
mov [ebp+var_28] eax +
sub esi edx +
jmp loc_417C45  +
xor esi esi +
mov ecx [ecx+ebx+38h] +
mov [ebp+var_2C] ebx +
test ecx ecx +
jz loc_417C55  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
jnz loc_417C79  +
mov ecx [eax+ebx+3Ch] +
test ecx ecx +
jz loc_417C79  +
cmp ecx ebx +
jz loc_417C79  +
call sub_414BB0  +
mov eax [ebx] +
mov ecx [eax+4] +
cmp dword ptr [ecx+ebx+0Ch] 0 +
setz al  +
mov byte ptr [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jnz loc_417C9E  +
mov edi 4 +
jmp loc_417DDC  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ecx+ebx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_417D0C  +
test esi esi +
jz loc_417D08  +
mov eax [ebx] +
mov eax [eax+4] +
mov cl [eax+ebx+40h] +
mov [ebp+var_11] cl +
mov ecx [eax+ebx+38h] +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_417CEC  +
mov edx [ecx+30h] +
mov eax [edx] +
test eax eax +
jle loc_417CEC  +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_417CF6  +
movzx eax [ebp+var_11] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_417D05  +
mov edi 4 +
mov [ebp+var_20] edi +
jmp loc_417D34  +
dec esi  +
jmp loc_417CB0  +
test edi edi +
jnz loc_417D34  +
mov ecx [ebp+var_24] +
cmp dword ptr [ecx+14h] 10h +
jb loc_417D17  +
mov ecx [ecx] +
mov eax [ebx] +
push 0  +
push [ebp+var_18]  +
mov eax [eax+4] +
push ecx  +
mov ecx [eax+ebx+38h] +
call sub_417E50  +
cmp eax [ebp+var_18] +
jnz loc_417D89  +
test edx edx +
jnz loc_417D89  +
test esi esi +
jz loc_417D8E  +
mov eax [ebx] +
mov eax [eax+4] +
mov ecx [eax+ebx+38h] +
mov dl [eax+ebx+40h] +
mov [ebp+var_11] dl +
mov eax [ecx+20h] +
cmp dword ptr [eax] 0 +
jz loc_417D73  +
mov eax [ecx+30h] +
mov eax [eax] +
test eax eax +
jle loc_417D73  +
mov edx [ecx+30h] +
dec eax  +
mov [edx] eax +
mov ecx [ecx+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al [ebp+var_11] +
mov [edx] al +
movzx eax al +
jmp loc_417D7C  +
movzx eax dl +
mov edx [ecx] +
push eax  +
call dword ptr [edx+0Ch]  +
cmp eax 0FFFFFFFFh +
jnz loc_417D86  +
or edi 4 +
jmp loc_417D8E  +
dec esi  +
jmp loc_417D34  +
mov edi 4 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [eax+ebx+20h] 0 +
mov dword ptr [eax+ebx+24h] 0 +
jmp loc_417DD5  +
mov ecx [ebp-1Ch] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_417DBF  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_4111D0  +
mov eax offset loc_417DCF +
retn   +
mov ebx [ebp-1Ch] +
mov edi [ebp-20h] +
mov [ebp+var_4] 1 +
mov eax [ebx] +
mov ecx [eax+4] +
add ecx ebx +
test edi edi +
jz loc_417E00  +
mov edx [ecx+0Ch] +
or edx edi +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
push 0  +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov [ebp+var_4] 4 +
call sub_48A7EA  +
mov esi [ebp+var_2C] +
test al al +
jnz loc_417E1A  +
mov ecx esi +
call sub_414D70  +
mov byte ptr [ebp+var_4] 5 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_417E30  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_4173C0  +
***
push ecx  +
call ds:InitializeCriticalSectionEx  +
test eax eax +
jnz loc_417EB2  +
call ds:GetLastError  +
test eax eax +
jle locret_417EB4  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov edx 104h +
mov eax edi +
cmp word ptr [eax] 0 +
jz loc_417EDE  +
add eax 2 +
sub edx 1 +
jnz loc_417ED0  +
xor eax eax +
mov ecx 80070057h +
test edx edx +
mov esi 104h +
cmovnz ecx eax +
mov eax esi +
sub eax edx +
xor ebx ebx +
test edx edx +
cmovnz ebx eax +
test ecx ecx +
js loc_417F17  +
push ecx  +
push offset asc_4DFFA0  +
sub esi ebx +
push ecx  +
lea ecx [edi+ebx*2] +
mov edx esi +
call sub_417F20  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
retn 4  +
***
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
test edx edx +
jz loc_417F55  +
mov edi [ebp+arg_4] +
mov eax 7FFFFFFEh +
sub edi ecx +
test eax eax +
jz loc_417F51  +
movzx esi word ptr [edi+ecx] +
test si si +
jz loc_417F51  +
mov [ecx] si +
dec eax  +
add ecx 2 +
sub edx 1 +
jnz loc_417F36  +
jmp loc_417F55  +
test edx edx +
jnz loc_417F5D  +
sub ecx 2 +
mov ebx 8007007Ah +
xor eax eax +
pop edi  +
mov [ecx] ax +
mov eax ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9331  +
mov eax large fs:0 +
push eax  +
sub esp 4A8h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-4B0h] ebx +
mov [ebp-4ACh] ebx +
mov dword ptr [ebp-4B4h] 0 +
mov dword ptr [ebp-4A8h] 0 +
mov dword ptr [ebp-4A4h] 0 +
mov dword ptr [ebp-4A0h] 0 +
mov dword ptr [ebp-4] 0 +
cmp dword ptr [edx+10h] 101h +
jbe loc_417FFF  +
mov dword ptr [ebx] 0 +
mov eax ebx +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
jmp loc_418246  +
cmp dword ptr [edx+14h] 8 +
jb loc_418007  +
mov edx [edx] +
push ecx  +
push edx  +
push ecx  +
mov edx 104h +
lea ecx [ebp-21Ch] +
call sub_417F20  +
push ecx  +
lea ecx [ebp-21Ch] +
call loc_417EC0  +
lea eax [ebp-49Ch] +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
call ds:FindFirstFileW  +
mov edi eax +
mov [ebp-4ACh] edi +
cmp edi 0FFFFFFFFh +
jnz loc_418090  +
lea ecx [ebp-4A8h] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebp-4A8h] 0 +
mov dword ptr [ebp-4A4h] 0 +
mov dword ptr [ebp-4A0h] 0 +
call sub_411C00  +
mov eax ebx +
jmp loc_418246  +
xor eax eax +
mov dword ptr [ebp-220h] 7 +
mov dword ptr [ebp-224h] 0 +
mov [ebp-234h] ax +
cmp [ebp-470h] ax +
jz loc_4180CF  +
lea eax [ebp-470h] +
lea edx [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4180C0  +
sub eax edx +
sar eax 1 +
push eax  +
lea eax [ebp-470h] +
push eax  +
lea ecx [ebp-234h] +
call loc_40BB60  +
mov byte ptr [ebp-4] 1 +
mov edx [ebp-224h] +
mov ebx dword_4F6434 +
mov esi [ebp-220h] +
cmp edx ebx +
jbe loc_41814E  +
mov edi edx +
sub edi ebx +
cmp edx edi +
jb loc_418262  +
cmp dword_4F6438 8 +
lea eax [ebp-234h] +
mov ecx offset dword_4F6424 +
cmovnb ecx dword_4F6424 +
sub edx edi +
cmp ebx edx +
push ebx  +
cmovbe edx ebx +
cmp esi 8 +
push ecx  +
cmovnb eax [ebp-234h] +
push edx  +
lea eax [eax+edi*2] +
push eax  +
call sub_40D8F0  +
mov edi [ebp-4ACh] +
add esp 10h +
test eax eax +
setz al  +
jmp loc_418150  +
xor al al +
test al al +
jz loc_4181C0  +
xor eax eax +
mov dword ptr [ebp-238h] 7 +
push 0FFFFFFFFh  +
push eax  +
mov [ebp-24Ch] ax +
lea ecx [ebp-24Ch] +
lea eax [ebp-234h] +
mov dword ptr [ebp-23Ch] 0 +
push eax  +
call loc_40BF90  +
lea eax [ebp-24Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-4A8h] +
call sub_418270  +
mov eax [ebp-238h] +
cmp eax 8 +
jb loc_4181BA  +
inc eax  +
lea ecx [ebp-24Ch] +
push eax  +
push dword ptr [ebp-24Ch]  +
call loc_40C2A0  +
mov esi [ebp-220h] +
mov byte ptr [ebp-4] 0 +
cmp esi 8 +
jb loc_4181DE  +
lea eax [esi+1] +
push eax  +
push dword ptr [ebp-234h]  +
lea ecx [ebp-234h] +
call loc_40C2A0  +
lea eax [ebp-49Ch] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_418090  +
push edi  +
call ds:FindClose  +
mov esi [ebp-4B0h] +
lea ecx [ebp-4A8h] +
mov eax [ebp-4A8h] +
mov dword ptr [ebp-4A8h] 0 +
mov [esi] eax +
mov eax [ebp-4A4h] +
mov [esi+4] eax +
mov eax [ebp-4A0h] +
mov [esi+8] eax +
mov dword ptr [ebp-4A4h] 0 +
mov dword ptr [ebp-4A0h] 0 +
call sub_411C00  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aInvalidStringP  +
call sub_489E17  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [esi+4] +
cmp edi ecx +
jnb loc_4182D9  +
mov eax [esi] +
cmp eax edi +
ja loc_4182D9  +
sub edi eax +
mov eax 2AAAAAABh +
imul  edi +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ecx [esi+8] +
jnz loc_4182A7  +
push ecx  +
mov ecx esi +
call loc_418310  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418306  +
mov eax [esi] +
lea edx [edi+edi*2] +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
lea eax [eax+edx*8] +
xor edx edx +
push eax  +
mov [ecx] dx +
call sub_40C0B0  +
add dword ptr [esi+4] 18h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp ecx [esi+8] +
jnz loc_4182E6  +
push ecx  +
mov ecx esi +
call loc_418310  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418306  +
xor eax eax +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push edi  +
mov [ecx] ax +
call sub_40C0B0  +
add dword ptr [esi+4] 18h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx ecx +
mov eax 2AAAAAABh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_41838A  +
sub esi [ebx] +
mov eax 2AAAAAABh +
imul  esi +
push edi  +
sar edx 2 +
mov eax 0AAAAAAAh +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_41838F  +
sub ecx [ebx] +
mov eax 2AAAAAABh +
imul  ecx +
xor ecx ecx +
inc edi  +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0AAAAAAAh +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
cmp ecx edi +
cmovnb edi ecx +
mov ecx ebx +
push edi  +
call loc_4183A0  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_489DF7  +
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-4] esi +
push edi  +
test ebx ebx +
jnz loc_4183B9  +
xor edi edi +
jmp loc_4183FC  +
cmp ebx 0AAAAAAAh +
ja loc_418488  +
lea eax [ebx+ebx*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_4183F1  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_41848D  +
push ecx  +
call sub_488C2D  +
add esp 4 +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_4183FC  +
push eax  +
call sub_488C2D  +
add esp 4 +
mov edi eax +
mov edx [esi+4] +
push ecx  +
mov byte ptr [ebp+8] 0 +
push dword ptr [ebp+8]  +
push ecx  +
mov ecx [esi] +
push edi  +
call sub_4184A0  +
mov ecx [esi+4] +
mov eax 2AAAAAABh +
sub ecx [esi] +
add esp 10h +
imul  ecx +
mov eax [esi] +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+8] ecx +
test eax eax +
jz loc_41846B  +
push dword ptr [ebp+8]  +
mov edx [esi+4] +
push ecx  +
mov ecx eax +
call loc_413BE0  +
mov ecx [ebp-4] +
mov eax 2AAAAAABh +
mov esi [esi] +
add esp 8 +
mov ecx [ecx+8] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_406C30  +
mov esi [ebp-4] +
mov ecx [ebp+8] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*8] +
mov [esi+8] eax +
lea eax [ecx+ecx*2] +
lea eax [edi+eax*8] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_489DDA  +
call sub_489DDA  +
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_4184E1  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4184D0  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
push edi  +
mov [esi] ax +
call sub_40C0B0  +
add edi 18h +
add esi 18h +
cmp edi ebx +
jnz loc_4184B1  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
mov ebx [esi+8] +
push ebx  +
mov [esp+1Ch+var_4] ebx +
call sub_488C96  +
add esp 4 +
mov edi eax +
mov [esp+18h+var_C] edi +
push ebx  +
call sub_488C96  +
mov ebx [ebp+arg_0] +
add esp 4 +
mov [esp+18h+var_8] eax +
jmp loc_418534  +
mov edi [esp+18h+var_C] +
push 0  +
push [esp+1Ch+var_4]  +
mov ecx ebx +
push edi  +
call sub_4146C0  +
mov edi [ebx+8] +
mov edx edi +
mov ecx [esp+18h+var_C] +
push esi  +
push [esp+1Ch+var_8]  +
call loc_401EE0  +
mov ecx [ebp+arg_4] +
add esp 8 +
push 0  +
push eax  +
push [esp+20h+var_8]  +
call sub_418DF0  +
mov eax [ebx] +
mov eax [eax+4] +
cmp dword ptr [eax+ebx+0Ch] 0 +
jnz loc_418577  +
test edi edi +
jnz loc_418530  +
push [esp+18h+var_C]  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
call sub_488C91  +
add esp 4 +
push [esp+18h+var_8]  +
call sub_488C91  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B9382  +
mov eax large fs:0 +
push eax  +
sub esp 144h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
sub esp 8 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_150] +
push [ebp+arg_4]  +
call sub_418D00  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_A8] +
call sub_418B70  +
lea eax [ebp+var_A8] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_150] +
mov ecx esi +
push eax  +
call sub_4184F0  +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_A8] +
push esi  +
call sub_418A90  +
lea ecx [ebp+var_58] +
call sub_418AB0  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov [ebp+var_58] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
lea ecx [ebp+var_F0] +
call sub_418C40  +
lea eax [ebp+var_F0] +
mov [ebp+var_4] 3 +
push eax  +
mov [ebp+var_F0] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx+60h] +
mov ecx esi +
call sub_418C40  +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx+50h] +
mov ecx esi +
call sub_418AB0  +
mov [ebp+var_4] 0 +
push esi  +
mov dword ptr [esi] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9402  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_48] ebx +
mov edi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov dword ptr [ebx] offset off_4E0058 +
mov [ebp+var_4C] ebx +
mov dword ptr [ebx+4] 0 +
mov [ebp+var_4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_478750  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_4187C5  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_4187C7  +
xor eax eax +
mov [ebx+10h] eax +
mov byte ptr [ebp+var_4] 3 +
mov [ebx+14h] edi +
call sub_474B70  +
mov esi eax +
mov [ebp+var_50] esi +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebx+14h] +
push dword_4F6394  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov [ebp+var_44] eax +
test eax eax +
jz loc_4189CD  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
add esp 14h +
mov [ebp+var_48] eax +
test eax eax +
jz loc_4189C0  +
mov edx dword_4F6314 +
mov ecx eax +
call sub_41A870  +
mov ecx [ebx+8] +
mov [ebp+var_44] eax +
cmp ecx eax +
jz loc_418849  +
call sub_474AB0  +
mov ecx [ebp+var_44] +
test ecx ecx +
jz loc_418844  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_418846  +
xor eax eax +
mov [ebx+8] eax +
mov ecx [ebx+8] +
test ecx ecx +
jnz loc_418879  +
push edi  +
push offset aPayloadencodin  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov byte ptr [ebp+var_4] 6 +
test esi esi +
jz loc_4189ED  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
jmp loc_4189ED  +
mov eax [ecx] +
push dword_4F63BC  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_4188B5  +
push dword ptr [ebx+8]  +
push offset aUnknownPayload  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov byte ptr [ebp+var_4] 7 +
test esi esi +
jz loc_4189ED  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
jmp loc_4189ED  +
mov edx dword_4F6320 +
mov ecx [ebp+var_48] +
call sub_41A870  +
mov ecx eax +
test ecx ecx +
jnz loc_4188F2  +
push edi  +
push offset aPayloadNotFoun  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov byte ptr [ebp+var_4] 8 +
test esi esi +
jz loc_4189ED  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
jmp loc_4189ED  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
lea ecx [ebp+var_40] +
call sub_402FD0  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 9 +
push eax  +
lea eax [ebp+var_28] +
mov [ebp+var_54] 400h +
push eax  +
lea ecx [ebp+var_5C] +
call sub_4185B0  +
mov byte ptr [ebp+var_4] 0Ah +
lea eax [ebp+var_28] +
cmp [ebp+var_14] 10h +
cmovnb eax [ebp+var_28] +
push eax  +
call loc_4794B0  +
add esp 4 +
lea ecx [ebx+4] +
push eax  +
call sub_40EAA0  +
push dword_4F6320  +
push offset a@_0  +
call sub_4782A0  +
push dword_4F6320  +
mov edi eax +
push offset a@  +
call sub_4782A0  +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
push offset a@@@  +
call sub_4782A0  +
mov edx dword_4F6350 +
add esp 20h +
mov ecx eax +
call sub_41A870  +
push eax  +
lea ecx [ebx+0Ch] +
call sub_40EAA0  +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_41899F  +
push dword ptr [ebx+4]  +
push offset aSequenceIdNotF  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
lea ecx [ebp+var_28] +
call sub_402F10  +
lea ecx [ebp+var_40] +
call sub_402F10  +
mov byte ptr [ebp+var_4] 0Bh +
test esi esi +
jz loc_4189ED  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
jmp loc_4189ED  +
push [ebp+var_44]  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push edi  +
push offset aInvalidDataInE  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov byte ptr [ebp+var_4] 5 +
test esi esi +
jz loc_4189ED  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+4]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_418A28  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_418A34  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_418A40  +
call sub_479590  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418A4C  +
call sub_479590  +
test [ebp+arg_0] 1 +
jz loc_418A5D  +
push 18h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_47A9B0  +
add esp 0Ch +
pop ebp  +
retn   +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 4 +
mov [ebp+var_4] 0 +
call sub_4176C0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-50h] +
lea ecx [edi-4Ch] +
mov eax [eax+4] +
mov dword ptr [eax+edi-50h] offset off_4E0050 +
mov eax [edi-50h] +
mov edx [eax+4] +
lea eax [edx-50h] +
mov [edx+edi-54h] eax +
mov dword ptr [edi-4Ch] offset off_4DFF4C +
call loc_417610  +
mov esi [edi-18h] +
mov dword ptr [edi-4Ch] offset off_4CEECC +
test esi esi +
jz loc_418B38  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418B2D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418B2D  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-50h] offset off_4DFF9C +
mov eax [edi-50h] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi-54h] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B945F  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
mov dword ptr [edi] offset unk_4E005C +
mov dword ptr [edi+50h] offset off_4CEEBC +
mov [ebp+var_4] 0 +
lea esi [edi+4] +
mov eax [edi] +
push 0  +
push esi  +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4DFF9C +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-8] +
mov [ecx+edi-4] eax +
mov eax [edi] +
mov ecx [eax+4] +
add ecx edi +
call sub_413530  +
mov [ebp+var_4] 2 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4E0050 +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-50h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_413470  +
mov dword ptr [esi] offset off_4DFF4C +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset sub_4B8C26  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-60h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-60h] offset off_4E0070 +
mov eax [edi-60h] +
mov edx [eax+4] +
lea eax [edx-60h] +
mov [edx+edi-64h] eax +
mov dword ptr [edi-50h] offset off_4DFF4C +
call loc_417610  +
mov esi [edi-1Ch] +
mov dword ptr [edi-50h] offset off_4CEECC +
test esi esi +
jz loc_418CC8  +
mov [ebp+var_4] 0 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_418CBD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_418CBD  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 8  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax [edi-60h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-60h] offset off_4CEEC4 +
mov eax [edi-60h] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edi-64h] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B94AF  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi] offset unk_4E0064 +
mov dword ptr [esi+60h] offset off_4CEEBC +
mov [ebp+var_4] 0 +
lea edi [esi+10h] +
mov eax [esi] +
push 0  +
push edi  +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4CEEC4 +
mov eax [esi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+esi-4] eax +
mov eax [esi] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov ecx [eax+4] +
add ecx esi +
call sub_413530  +
mov [ebp+var_4] 2 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4E0070 +
mov eax [esi] +
mov ecx [eax+4] +
mov [ebp+var_18] edi +
lea eax [ecx-60h] +
mov [ecx+esi-4] eax +
mov ecx edi +
call sub_413470  +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 3 +
mov dword ptr [edi] offset off_4DFF4C +
cmp dword ptr [eax+14h] 10h +
mov ecx [eax+10h] +
jb loc_418DC7  +
mov eax [eax] +
push 2  +
push ecx  +
push eax  +
mov ecx edi +
call sub_417890  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-50h] +
call sub_418AB0  +
lea eax [esi+50h] +
mov [ebp+var_4] 0 +
push eax  +
mov dword ptr [eax] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_418FA8  +
push 98h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset sub_4B8B16  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea esi [ecx-60h] +
call sub_418C40  +
lea eax [esi+60h] +
mov [ebp+var_4] 0 +
push eax  +
mov dword ptr [eax] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_419018  +
push 0A8h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
sub ecx [ecx-4] +
jmp sub_418FC0  +
***
push 0FFFFFFFFh  +
push offset loc_4B9531  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_418750  +
mov eax [ebp+arg_8] +
mov [ebx+18h] eax +
mov eax [ebp+arg_C] +
mov [ebx+1Ch] eax +
mov [ebp+var_4] 0 +
mov dword ptr [ebx] offset off_4E00A4 +
mov dword ptr [ebx+20h] 0 +
mov byte ptr [ebp+var_4] 1 +
call sub_474B70  +
mov esi eax +
mov [ebp+arg_4] esi +
mov byte ptr [ebp+var_4] 2 +
push dword_4F6320  +
push offset a@_0  +
call sub_4782A0  +
push dword_4F6320  +
mov edi eax +
push offset a@  +
call sub_4782A0  +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
push offset a@@@  +
call sub_4782A0  +
mov edx dword_4F6340 +
add esp 20h +
mov ecx eax +
call sub_41A870  +
mov ecx [ebx+20h] +
mov edi eax +
cmp ecx edi +
jz loc_419159  +
call sub_474AB0  +
test edi edi +
jz loc_419154  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_419156  +
xor eax eax +
mov [ebx+20h] eax +
cmp dword ptr [ebx+20h] 0 +
jnz loc_419172  +
push dword ptr [ebx+4]  +
push offset aTargetSpecif_0  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
mov byte ptr [ebp+var_4] 3 +
test esi esi +
jz loc_419181  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E00A4 +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_4191B5  +
call sub_479590  +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_4191C7  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4191D3  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4191DF  +
call sub_479590  +
mov ecx [esi+4] +
pop esi  +
test ecx ecx +
jnz sub_479590  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov ebx [esi+0Ch] +
push ebx  +
mov [esp+1Ch+var_4] ebx +
call sub_488C96  +
add esp 4 +
lea ecx [ebx+ebx] +
mov edi eax +
mov [esp+18h+var_8] edi +
push ecx  +
call sub_488C96  +
mov ecx [ebp+arg_0] +
add esp 4 +
mov ebx eax +
jmp loc_419244  +
mov edi [esp+18h+var_8] +
push 0  +
push [esp+1Ch+var_4]  +
push edi  +
call sub_4146C0  +
mov edi [ebp+arg_0] +
mov ecx [esp+18h+var_8] +
push esi  +
push ebx  +
mov edi [edi+8] +
mov edx edi +
call sub_402090  +
mov ecx [ebp+arg_4] +
add esp 8 +
push 0  +
push eax  +
push ebx  +
call sub_418DF0  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+4] +
cmp dword ptr [eax+ecx+0Ch] 0 +
jnz loc_419285  +
test edi edi +
jnz loc_419240  +
mov edx esi +
mov ecx ebx +
call sub_4021B0  +
mov ecx [ebp+arg_4] +
push 0  +
push eax  +
push ebx  +
call sub_418DF0  +
push ebx  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
call sub_488C91  +
add esp 4 +
push [esp+18h+var_8]  +
call sub_488C91  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B9382  +
mov eax large fs:0 +
push eax  +
sub esp 144h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
sub esp 8 +
mov [ebp+var_10] 0 +
lea ecx [ebp+var_150] +
push [ebp+arg_4]  +
call sub_418D00  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_A8] +
call sub_418B70  +
lea eax [ebp+var_A8] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea eax [ebp+var_150] +
mov ecx esi +
push eax  +
call sub_4191F0  +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_A8] +
push esi  +
call sub_418A90  +
lea ecx [ebp+var_58] +
call sub_418AB0  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
mov [ebp+var_58] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
lea ecx [ebp+var_F0] +
call sub_418C40  +
lea eax [ebp+var_F0] +
mov [ebp+var_4] 3 +
push eax  +
mov [ebp+var_F0] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E0058 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_4193C5  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4193D1  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4193DD  +
call sub_479590  +
mov ecx [esi+4] +
pop esi  +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push dword_4F6394  +
mov edi ecx +
mov ecx [edi+14h] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41942C  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_419444  +
pop edi  +
mov ecx eax +
pop esi  +
jmp sub_478670  +
push dword ptr [edi+14h]  +
push offset aInvalidDataInE  +
push 1  +
push edi  +
call sub_418A70  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B956E  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [ebp+8] +
mov ebx [ebp+0Ch] +
mov [ebp-44h] eax +
mov [ebp-58h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-5Ch] esi +
cmp dword ptr [ebp-44h] 0 +
mov dword ptr [ebp-4] 0 +
jz loc_41966C  +
test ebx ebx +
jz loc_41966C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
mov ebx eax +
test ebx ebx +
jnz loc_4194D1  +
push dword ptr [edi+14h]  +
push offset aInvalidDataInE  +
push 1  +
push edi  +
call sub_418A70  +
add esp 10h +
jmp loc_41967C  +
mov ecx [ebp-44h] +
mov dword ptr [ebp-68h] 400h +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
lea ecx [ebp-40h] +
call sub_402FD0  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 3 +
push eax  +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-74h] +
call sub_4192D0  +
mov byte ptr [ebp-4] 4 +
push dword_4F6320  +
push offset a@_0  +
call sub_4782A0  +
push dword_4F6320  +
mov [ebp-50h] eax +
push offset a@  +
call sub_4782A0  +
mov ecx dword_4F6364 +
add esp 10h +
mov [ebp-48h] eax +
call sub_478670  +
push dword ptr [ebp-50h]  +
mov ecx eax +
mov [ebp-44h] eax +
call sub_475840  +
cmp dword ptr [ebp-14h] 10h +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
push ecx  +
call loc_4794B0  +
mov ecx [ebp-44h] +
add esp 4 +
push eax  +
call sub_475840  +
push dword ptr [ebp-48h]  +
mov ecx [ebp-44h] +
call sub_475840  +
push dword_4F6320  +
push offset a@_1  +
call sub_4782A0  +
add esp 8 +
mov [ebp-4Ch] eax +
mov ecx ebx +
push eax  +
lea eax [ebp-64h] +
push eax  +
call sub_477F90  +
cmp dword ptr [ebp-64h] 0FFFFFFFFh +
jz loc_419597  +
mov eax [ebp-4Ch] +
jmp loc_4195DC  +
push dword ptr [ebp-50h]  +
lea eax [ebp-54h] +
mov ecx ebx +
push eax  +
call sub_477F90  +
push dword ptr [ebp-48h]  +
lea eax [ebp-6Ch] +
mov ecx ebx +
push eax  +
call sub_477F90  +
mov ecx [ebp-48h] +
mov eax [ebp-54h] +
mov [ebp-4Ch] eax +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx [ebp-6Ch] +
add eax ecx +
cmp dword ptr [ebp-54h] 0FFFFFFFFh +
jz loc_419609  +
cmp ecx 0FFFFFFFFh +
jz loc_419609  +
push eax  +
push dword ptr [ebp-4Ch]  +
mov ecx ebx +
call loc_478820  +
push dword ptr [ebp-44h]  +
mov ecx ebx +
push eax  +
call loc_475AA0  +
mov ecx [edi+14h] +
push ebx  +
push dword_4F6394  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
mov ecx [edi+14h] +
push dword ptr [ebp-58h]  +
push dword_4F6324  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
jmp loc_41961C  +
push dword ptr [edi+14h]  +
push offset aUnableToFindPa  +
push 1  +
push edi  +
call sub_418A70  +
add esp 10h +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_419631  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov eax [ebp-2Ch] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp eax 10h +
jb loc_419658  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
jmp loc_41967C  +
push offset aNullContentOrR  +
push 1  +
push edi  +
call sub_418A70  +
add esp 0Ch +
mov dword ptr [ebp-4] 6 +
test esi esi +
jz loc_41968E  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push [ebp+arg_0]  +
push 0FFFFFFFFh  +
push offset loc_4B95A8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
call sub_41D520  +
mov [ebp+var_4] 0 +
mov dword ptr [edi+20h] offset off_4E03F4 +
mov dword ptr [edi] offset off_4E03A8 +
mov dword ptr [edi+20h] offset off_4E03A0 +
mov dword ptr [edi+24h] 0 +
call sub_40F510  +
lea ecx [edi+24h] +
call sub_40F5C0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+10h]  +
cmp eax dword_4F6448 +
jnz loc_41985D  +
push ebx  +
push edi  +
mov ecx esi +
call sub_41DE80  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jnz loc_41978B  +
push edi  +
push offset aInvalidVulcanm  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx ebx +
call loc_47B770  +
mov edi eax +
test edi edi +
jnz loc_4197B0  +
push ebx  +
push offset aInvalidVulca_0  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword_4F6324  +
mov ecx edi +
call sub_419030  +
mov ebx eax +
test ebx ebx +
jnz loc_4197DA  +
push offset aMessageHasNoTy  +
push 1  +
push esi  +
call sub_418A70  +
add esp 0Ch +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
push offset aHandlingVulcan  +
push 3  +
push esi  +
call sub_418A70  +
add esp 10h +
mov ecx ebx +
push dword_4F6390  +
call loc_4783A0  +
test al al +
jz loc_41980B  +
push edi  +
mov ecx esi +
call loc_419A80  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword_4F6368  +
mov ecx ebx +
call loc_4783A0  +
test al al +
jz loc_41982B  +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+20h]  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword_4F633C  +
mov ecx ebx +
call loc_4783A0  +
test al al +
jz loc_41984B  +
push edi  +
mov ecx esi +
call loc_419F20  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push ebx  +
push offset aUnableToHandle  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B95D8  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_1C] esi +
push dword ptr [esi+0Ch]  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov edi [ebp+arg_0] +
mov ecx esi +
mov [ebp+var_4] 0 +
mov eax [esi] +
push edi  +
call dword ptr [eax+38h]  +
mov ecx dword_4F6364 +
call sub_478670  +
mov edx [edi] +
mov ecx edi +
mov ebx dword_4F6364 +
push dword_4F6338  +
mov [ebp+var_18] eax +
mov [ebp+var_14] ebx +
call dword ptr [edx+18h]  +
mov [ebp+var_24] eax +
test eax eax +
jz loc_419A4B  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
add esp 14h +
mov [ebp+var_28] eax +
test eax eax +
jz loc_419A3E  +
mov ecx [esi+0Ch] +
mov edx [ecx] +
call dword ptr [edx+20h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_4199A3  +
mov eax [edi] +
lea ecx [ebp+var_30] +
push ecx  +
mov ecx edi +
call dword ptr [eax+14h]  +
mov esi [ebp+var_2C] +
mov ecx esi +
mov eax [ebp+var_30] +
mov [ebp+var_14] eax +
mov eax [esi] +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
mov [ebp+var_24] eax +
call dword ptr [edx+20h]  +
mov [ebp+var_20] eax +
mov eax [ebp+var_1C] +
mov ecx eax +
push esi  +
mov edx [eax] +
call dword ptr [edx+40h]  +
mov ecx eax +
mov edx [eax] +
mov edx [edx+10h] +
call edx  +
test al al +
jnz loc_419993  +
push [ebp+var_20]  +
push [ebp+var_24]  +
push [ebp+var_14]  +
call sub_41A500  +
push [ebp+var_28]  +
mov esi eax +
mov eax [ebp+var_14] +
mov ecx eax +
mov edx [eax] +
mov edx [edx+4] +
call edx  +
mov ecx [ebp+var_18] +
test al al +
push esi  +
cmovnz ebx esi +
call sub_475840  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_419926  +
mov [ebp+var_14] ebx +
mov esi dword_4F636C +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+var_18]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov esi dword_4F6334 +
mov ebx eax +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+var_14]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
add esp 40h +
push eax  +
push ebx  +
push offset a@@  +
call sub_4782A0  +
mov edi [ebp+arg_0] +
add esp 0Ch +
mov esi [ebp+var_1C] +
mov ecx esi +
push eax  +
push edi  +
call sub_41A0F0  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
push edi  +
test al al +
jnz loc_419A35  +
push offset aInvalidDataInE  +
jmp loc_419A51  +
mov ecx esi +
call loc_41A230  +
jmp loc_419A5C  +
push [ebp+var_24]  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push edi  +
push offset aNoSessionIdInG  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
lea ecx [ebp+var_10] +
call sub_47AEF0  +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9608  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
push dword ptr [ebx+0Ch]  +
lea ecx [ebp-10h] +
call sub_47AC20  +
mov esi [ebp+8] +
mov ecx ebx +
mov dword ptr [ebp-4] 0 +
mov eax [ebx] +
push esi  +
call dword ptr [eax+38h]  +
push esi  +
call loc_41A080  +
test eax eax +
jnz loc_419AE7  +
push esi  +
push offset aInvalidDataInE  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
jmp loc_419C11  +
push eax  +
mov ecx ebx +
call sub_41A340  +
mov edi eax +
test edi edi +
jz loc_419C11  +
mov ecx dword_4F6448 +
mov edx esi +
push 0  +
call sub_41B9F0  +
add esp 4 +
mov [ebp-18h] eax +
mov ecx edi +
call sub_47B0F0  +
test al al +
jz loc_419B39  +
mov edx [ebx] +
mov ecx ebx +
push dword ptr [ebp-18h]  +
call dword ptr [edx+44h]  +
push esi  +
push offset aSentBroadcastV  +
push 3  +
push ebx  +
call sub_418A70  +
add esp 10h +
jmp loc_419C11  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
call sub_47BCF0  +
mov edx [edi] +
add esp 4 +
mov esi eax +
mov ecx edi +
mov [ebp-14h] esi +
call dword ptr [edx+18h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_419BE1  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov [ebp-1Ch] eax +
test eax eax +
jnz loc_419B76  +
xor esi esi +
jmp loc_419B97  +
push 0  +
push offset off_4F1C38  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_419C35  +
mov edx [esi] +
mov ecx esi +
mov edx [edx+14h] +
call edx  +
test al al +
jz loc_419BD1  +
push dword ptr [ebp-18h]  +
mov ecx ebx +
push esi  +
call loc_41A420  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
test al al +
jnz loc_419BD1  +
mov [ebp-1Ch] esi +
lea ecx [ebp-1Ch] +
mov esi [ebp-14h] +
push ecx  +
push 1  +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+30h]  +
jmp loc_419BD4  +
mov esi [ebp-14h] +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_419B64  +
mov ecx esi +
call sub_47B0F0  +
test al al +
jnz loc_419C11  +
push esi  +
mov esi [ebp+8] +
mov ecx ebx +
push esi  +
call loc_41A5E0  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
push esi  +
test al al +
jz loc_419AD2  +
mov ecx ebx +
call loc_41A230  +
lea ecx [ebp-10h] +
call sub_47AEF0  +
lea ecx [ebp-10h] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push dword ptr [ebp-1Ch]  +
push offset off_4F1C38  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B968A  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
xor ebx ebx +
test esi esi +
jz loc_419F05  +
cmp [ebp+arg_4] ebx +
jz loc_419F05  +
mov eax [esi] +
mov ecx esi +
push dword_4F634C  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419CE2  +
push 2Ch  +
call sub_488C2D  +
mov edx eax +
add esp 4 +
mov [ebp+arg_0] edx +
mov ecx edi +
mov [ebp+var_4] ebx +
neg ecx  +
lea eax [edi+20h] +
sbb ecx ecx +
and ecx eax +
mov eax [ebp+arg_4] +
push ecx  +
push dword ptr [edi+24h]  +
mov ecx edx +
push eax  +
call sub_40E5A0  +
mov ebx eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push dword_4F6354  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419D47  +
push 24h  +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+arg_0] ebx +
mov ecx edi +
mov [ebp+var_4] 1 +
neg ecx  +
lea eax [edi+20h] +
sbb ecx ecx +
and ecx eax +
mov eax [ebp+arg_4] +
push ecx  +
push dword ptr [edi+24h]  +
mov ecx ebx +
push dword_4F6354  +
push eax  +
call sub_419090  +
mov dword ptr [ebx] offset off_4DF004 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push dword_4F639C  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419DAC  +
push 24h  +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+arg_0] ebx +
mov ecx edi +
mov [ebp+var_4] 2 +
neg ecx  +
lea eax [edi+20h] +
sbb ecx ecx +
and ecx eax +
mov eax [ebp+arg_4] +
push ecx  +
push dword ptr [edi+24h]  +
mov ecx ebx +
push dword_4F639C  +
push eax  +
call sub_419090  +
mov dword ptr [ebx] offset off_4DF050 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push dword_4F6398  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419E11  +
push 24h  +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+arg_0] ebx +
mov ecx edi +
mov [ebp+var_4] 3 +
neg ecx  +
lea eax [edi+20h] +
sbb ecx ecx +
and ecx eax +
mov eax [ebp+arg_4] +
push ecx  +
push dword ptr [edi+24h]  +
mov ecx ebx +
push dword_4F6398  +
push eax  +
call sub_419090  +
mov dword ptr [ebx] offset off_4DEF34 +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push dword_4F6380  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419E79  +
push 20h  +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+arg_0] ebx +
mov eax [ebp+arg_4] +
mov ecx ebx +
mov [ebp+var_4] 4 +
push dword_4F6398  +
mov esi [edi+24h] +
push eax  +
call sub_418750  +
lea eax [edi+20h] +
mov [ebx+18h] esi +
neg edi  +
mov dword ptr [ebx] offset off_4DEF48 +
sbb edi edi +
and edi eax +
mov eax ebx +
mov [ebx+1Ch] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push dword_4F63A4  +
mov eax [eax+4] +
call eax  +
test al al +
jz loc_419EDE  +
push 24h  +
call sub_488C2D  +
mov ebx eax +
add esp 4 +
mov [ebp+arg_0] ebx +
mov ecx edi +
mov [ebp+var_4] 5 +
neg ecx  +
lea eax [edi+20h] +
sbb ecx ecx +
and ecx eax +
mov eax [ebp+arg_4] +
push ecx  +
push dword ptr [edi+24h]  +
mov ecx ebx +
push dword_4F63A4  +
push eax  +
call sub_419090  +
mov dword ptr [ebx] offset off_4DEFBC +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
push offset aInvalidVulcanC  +
push 1  +
push edi  +
call sub_418A70  +
add esp 10h +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jnz loc_419F44  +
push offset aNullEventData  +
push 1  +
push esi  +
call sub_418A70  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [edi] +
mov ecx edi +
push dword_4F6324  +
call dword ptr [eax+18h]  +
mov [ebp+8] eax +
test eax eax +
jz loc_419FB3  +
push ebx  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_419FC9  +
push edi  +
push ebx  +
mov ecx esi +
call sub_419C50  +
mov edi eax +
test edi edi +
jnz loc_419F9D  +
push ebx  +
push offset aFailedToCreate  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+4]  +
mov eax [edi] +
mov ecx edi +
push 1  +
call dword ptr [eax]  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aMessageHasNoTy  +
push 1  +
push esi  +
call sub_418A70  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+8]  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B96B8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_41A033  +
push offset aNullEventData  +
lea eax [esi-20h] +
push 1  +
push eax  +
call sub_418A70  +
add esp 0Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push dword ptr [esi-14h]  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov [ebp+var_4] 0 +
lea ecx [esi-20h] +
mov eax [esi-20h] +
push edi  +
call dword ptr [eax+38h]  +
push edi  +
lea ecx [esi-20h] +
call loc_41A230  +
lea ecx [ebp+arg_0] +
call sub_47AEF0  +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ecx edi +
push dword_4F6394  +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41A0C3  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41A0DB  +
mov ecx eax +
call sub_478670  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
push offset aInvalidDataInE  +
push 1  +
call sub_47A9E0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
sub esp 20h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
push esi  +
mov [ebp+var_8] edi +
call loc_41A080  +
mov ebx eax +
test ebx ebx +
jnz loc_41A11B  +
push esi  +
push offset aInvalidDataInE  +
push 1  +
push edi  +
jmp loc_41A20D  +
push dword_4F637C  +
push offset a@_1  +
call sub_4782A0  +
add esp 8 +
mov [ebp+var_4] eax +
mov ecx ebx +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_477F90  +
cmp [ebp+var_18] 0FFFFFFFFh +
jnz loc_41A1A8  +
push dword_4F637C  +
push offset a@_0  +
call sub_4782A0  +
push dword_4F637C  +
mov esi eax +
push offset a@  +
call sub_4782A0  +
add esp 10h +
mov edi eax +
lea eax [ebp+var_10] +
mov ecx ebx +
push esi  +
push eax  +
call sub_477F90  +
push edi  +
lea eax [ebp+var_20] +
mov ecx ebx +
push eax  +
call sub_477F90  +
mov eax [edi] +
mov ecx edi +
mov esi [ebp+var_10] +
call dword ptr [eax+18h]  +
mov ecx [ebp+var_20] +
add eax ecx +
cmp [ebp+var_10] 0FFFFFFFFh +
jz loc_41A200  +
cmp ecx 0FFFFFFFFh +
jz loc_41A200  +
push eax  +
push esi  +
mov ecx ebx +
call loc_478820  +
mov [ebp+var_4] eax +
mov esi dword_4F637C +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+arg_4]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
add esp 20h +
mov ecx ebx +
push eax  +
push [ebp+var_4]  +
call loc_475AA0  +
mov ecx [ebp+arg_0] +
push ebx  +
push dword_4F6394  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
call sub_47B960  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push [ebp+arg_0]  +
push offset aUnableToFindRe  +
push 1  +
push [ebp+var_8]  +
call sub_418A70  +
add esp 10h +
call sub_47B950  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword_4F6338  +
mov edi ecx +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ebx eax +
test ebx ebx +
jz loc_41A301  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
add esp 14h +
mov [ebp+8] eax +
test eax eax +
jz loc_41A326  +
mov ecx dword_4F6448 +
mov edx esi +
push 0  +
call sub_41B9F0  +
mov ecx [edi+0Ch] +
add esp 4 +
mov [ebp-4] eax +
mov edx [ecx] +
push dword ptr [ebp+8]  +
call dword ptr [edx+18h]  +
mov ebx eax +
test ebx ebx +
jz loc_41A2B6  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41A31B  +
mov edx [edi] +
mov ecx edi +
push eax  +
push dword ptr [ebp-4]  +
call dword ptr [edx+34h]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
push esi  +
test al al +
jz loc_41A2E8  +
push offset aSentVulcanEven  +
push 3  +
push edi  +
call sub_418A70  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aUnableToRouteV  +
push 3  +
push edi  +
call sub_418A70  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push offset aNoSessionIdInM  +
push 1  +
push edi  +
call sub_418A70  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push offset off_4F1C84  +
call loc_47A0A0  +
push ebx  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+14h]  +
push 10h  +
mov edi eax +
call sub_47ABB0  +
add esp 4 +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_41A371  +
push edi  +
mov ecx eax +
call sub_41AA00  +
mov edi eax +
jmp loc_41A373  +
xor edi edi +
mov ecx edi +
call sub_474AB0  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+14h] +
call eax  +
test al al +
jnz loc_41A3A1  +
push esi  +
push offset aInvalidXmlInDe  +
push 1  +
push ebx  +
call sub_418A70  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [edi] +
mov ecx edi +
push dword_4F6378  +
call dword ptr [eax+10h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+14h] +
call edx  +
test al al +
jz loc_41A387  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+14h]  +
test eax eax +
jle loc_41A40F  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+1Ch]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+14h] +
call edx  +
test al al +
jz loc_41A387  +
mov eax [edi] +
mov ecx edi +
push dword_4F6374  +
call dword ptr [eax+10h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+14h] +
call edx  +
test al al +
jz loc_41A387  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
push 0  +
call sub_47BCF0  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call sub_47B950  +
push dword_4F6318  +
mov edi eax +
mov eax [ebp+8] +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+1Ch]  +
mov ebx eax +
mov ecx ebx +
mov edx [ebx] +
mov edx [edx+14h] +
call edx  +
test al al +
jnz loc_41A477  +
mov ecx [ebp+8] +
call sub_4795E0  +
push eax  +
push offset aInvalidXmlInDa  +
push 1  +
push esi  +
call sub_418A70  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+2Ch]  +
mov ecx [esi+0Ch] +
push eax  +
mov [ebp+8] eax +
mov edx [ecx] +
call dword ptr [edx+18h]  +
mov edi eax +
test edi edi +
jz loc_41A4AB  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41A4EA  +
mov edx [esi] +
mov ecx esi +
mov ebx [ebp+0Ch] +
push eax  +
push ebx  +
call dword ptr [edx+34h]  +
mov edi eax +
mov ecx edi +
mov eax [edi] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_41A4E1  +
mov eax [ebx] +
mov ecx ebx +
push dword ptr [ebp+8]  +
call dword ptr [eax+14h]  +
push eax  +
push offset aSentTargetedVu  +
push 3  +
push esi  +
call sub_418A70  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push ebx  +
push esi  +
mov esi dword_4F63B4 +
push edi  +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+arg_8]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov esi dword_4F630C +
push esi  +
push offset a@  +
mov [ebp+arg_8] eax +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+arg_4]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov esi dword_4F6318 +
add esp 40h +
mov ebx eax +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
push edi  +
push [ebp+arg_0]  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
push [ebp+arg_8]  +
push ebx  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
mov esi dword_4F6374 +
mov ebx eax +
push esi  +
push offset a@  +
call sub_4782A0  +
push esi  +
push offset a@_0  +
mov edi eax +
call sub_4782A0  +
add esp 40h +
push edi  +
push ebx  +
push eax  +
push offset a@@@  +
call sub_4782A0  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov [ebp-4] ecx +
mov ecx dword_4F6364 +
push edi  +
call sub_478670  +
mov ecx [ebp+0Ch] +
mov ebx eax +
mov edx [ecx] +
call dword ptr [edx+18h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41A65C  +
nop   +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jnz loc_41A621  +
xor ecx ecx +
jmp loc_41A642  +
push 0  +
push offset off_4F1C38  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_41A6DC  +
mov eax [ecx] +
call dword ptr [eax+30h]  +
push eax  +
mov ecx ebx +
call sub_475840  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41A610  +
mov eax dword_4F63A8 +
mov esi [ebp+8] +
push esi  +
mov [ebp+0Ch] eax +
call loc_41A080  +
mov edi eax +
test edi edi +
jnz loc_41A694  +
push esi  +
push offset aInvalidDataInE  +
push 1  +
push dword ptr [ebp-4]  +
call sub_418A70  +
add esp 10h +
call sub_47B950  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push dword ptr [ebp+0Ch]  +
push offset aDataError@Erro  +
call sub_4782A0  +
add esp 0Ch +
mov ecx edi +
push eax  +
call sub_475C30  +
push dword_4F6358  +
mov eax [esi] +
mov ecx esi +
push dword_4F6324  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
mov ecx esi +
push edi  +
push dword_4F6394  +
call dword ptr [eax+2Ch]  +
call sub_47B960  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push offset off_4F1C38  +
call loc_47A0A0  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E03A8 +
mov dword ptr [esi+20h] offset off_4E03A0 +
call sub_40F6F0  +
mov ecx esi +
mov dword ptr [esi+24h] 0 +
call sub_41D630  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_41A73C  +
test al 4 +
jnz loc_41A731  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 28h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B9703  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset stru_4F6450  +
mov [ebp+var_10] offset dword_4F644C +
call ds:EnterCriticalSection  +
inc dword_4F644C  +
mov [ebp+var_4] 0 +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F6500 +
cmp eax [ecx+4] +
jle loc_41A7F6  +
push offset dword_4F6500  +
call sub_489058  +
add esp 4 +
cmp dword_4F6500 0FFFFFFFFh +
jnz loc_41A7F6  +
push 28h  +
mov byte ptr [ebp+var_4] 1 +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 2 +
test eax eax +
jz loc_41A7E2  +
mov ecx eax +
call sub_4196C0  +
jmp loc_41A7E4  +
xor eax eax +
push offset dword_4F6500  +
mov dword_4F64FC eax +
call sub_489019  +
add esp 4 +
mov esi dword_4F64FC +
dec dword_4F644C  +
push offset stru_4F6450  +
call ds:LeaveCriticalSection  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ebp+8]  +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jnz loc_41A837  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41A857  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov ebx edx +
mov eax [edi] +
call dword ptr [eax+14h]  +
push 10h  +
mov esi eax +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_4] eax +
test eax eax +
jz loc_41A89F  +
push esi  +
mov ecx eax +
call sub_41AA00  +
mov esi eax +
jmp loc_41A8A1  +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
mov edx [esi] +
mov ecx esi +
mov edx [edx+14h] +
call edx  +
test al al +
jnz loc_41A8CE  +
push edi  +
push offset aInvalidXmlInDa  +
push 1  +
call sub_47A9E0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov edx ebx +
mov ecx esi +
call sub_41A8E0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
push esi  +
push edx  +
call dword ptr [eax+10h]  +
mov esi eax +
mov ecx esi +
mov eax [esi] +
mov eax [eax+14h] +
call eax  +
mov ecx esi +
test al al +
jnz loc_41A911  +
call sub_4795E0  +
push eax  +
push offset aInvalidXmlInDa  +
push 1  +
call sub_47A9E0  +
add esp 0Ch +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+14h]  +
test eax eax +
jle loc_41A95D  +
mov eax [esi] +
mov ecx esi +
push edi  +
call dword ptr [eax+1Ch]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+14h] +
call edx  +
test al al +
jnz loc_41A954  +
mov ecx esi +
call sub_4795E0  +
push eax  +
push offset aInvalidXmlInDa  +
push 1  +
call sub_47A9E0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
retn   +
mov eax [edi] +
mov ecx edi +
pop edi  +
pop esi  +
jmp dword ptr [eax+2Ch]  +
mov eax dword_4F6364 +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41A9A2  +
test al 4 +
jnz loc_41A997  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 8  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4CE8B4 +
retn   +
***
push [ebp+arg_4]  +
push offset aXpathS  +
call sub_4782A0  +
add esp 8 +
lea ecx [ebp+arg_8] +
mov edx [eax] +
push ecx  +
mov ecx eax +
call dword ptr [edx+14h]  +
push eax  +
call sub_478260  +
push eax  +
push 1  +
call sub_47A980  +
add esp 10h +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E0428 +
mov dword ptr [esi+8] 0 +
mov byte ptr [esi+0Ch] 0 +
test eax eax +
jz loc_41AA5E  +
push edi  +
push 10000h  +
push offset aUtf8  +
push 0  +
push eax  +
call sub_439880  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_41AA56  +
push edi  +
call sub_446580  +
push edi  +
mov [esi+8] eax +
call sub_422980  +
mov ecx [esi+8] +
add esp 8 +
mov [ecx+4] eax +
mov byte ptr [esi+0Ch] 1 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+0Ch] 0 +
jz loc_41AAA5  +
mov eax [esi+8] +
test eax eax +
jz loc_41AAA5  +
mov ecx [ebp+arg_0] +
push eax  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
call sub_444CF0  +
mov edx [esi+8] +
mov ecx esi +
push eax  +
call sub_41B8C0  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 4  +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F650C +
cmp eax [ecx+4] +
jle loc_41AAF1  +
push offset dword_4F650C  +
call sub_489058  +
add esp 4 +
cmp dword_4F650C 0FFFFFFFFh +
jnz loc_41AAF1  +
push offset sub_4BBCF0  +
mov dword_4F6510 offset off_4E05A0 +
call sub_488F0F  +
push offset dword_4F650C  +
call sub_489019  +
add esp 8 +
mov eax offset dword_4F6510 +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push edi  +
mov edi ecx +
mov eax [edi+8] +
mov dword ptr [edi] offset off_4E0428 +
test eax eax +
jz loc_41AB36  +
push esi  +
mov esi [eax] +
push eax  +
call sub_445540  +
push esi  +
call sub_4229F0  +
add esp 8 +
pop esi  +
mov eax [ebp+arg_0] +
mov dword ptr [edi+8] 0 +
mov byte ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_4CE8B4 +
test al 1 +
jz loc_41AB6D  +
test al 4 +
jnz loc_41AB62  +
push edi  +
call sub_497EC6  +
add esp 4 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
push 10h  +
push edi  +
call nullsub_1  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_41ABA2  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_41ABA4  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_41ABB5  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn 4  +
***
push esi  +
mov esi ecx +
call sub_479ED0  +
test [ebp+arg_0] 1 +
jz loc_41ABFC  +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B973E  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4E04FC +
mov dword ptr [esi+8] 0 +
mov eax [ebp+arg_8] +
mov edi [ebp+arg_0] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_4] +
mov [esi+10h] eax +
test edi edi +
jz loc_41AC68  +
mov ecx edi +
call sub_4795C0  +
mov [esi+14h] edi +
mov byte ptr [ebp+var_4] 2 +
cmp dword ptr [esi+10h] 0 +
jnz loc_41AC7A  +
call sub_47C0A0  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_41AC86  +
call sub_47C0A0  +
test edi edi +
jnz loc_41AC8F  +
call sub_47C0A0  +
push dword ptr [eax+8]  +
call loc_4794B0  +
mov ecx [esi+8] +
mov edi eax +
add esp 4 +
cmp ecx edi +
jz loc_41ACBA  +
call sub_474AB0  +
test edi edi +
jz loc_41ACB5  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_41ACB7  +
xor eax eax +
mov [esi+8] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp dword ptr [ecx+0Ch] 0 +
setnz al  +
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jz loc_41AD4E  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+14h]  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_423450  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_41AD42  +
push ebx  +
call loc_4794B0  +
mov edx eax +
mov ecx edi +
call sub_41B450  +
mov ecx ds:off_4E114C +
mov esi eax +
push ebx  +
mov ecx [ecx] +
call ecx  +
add esp 8 +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
call sub_41B4F0  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
call sub_41B4F0  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx ecx +
push offset unk_4DE8C5  +
mov [ebp-4] ebx +
call loc_4794B0  +
mov esi eax +
add esp 4 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_41AE22  +
push edi  +
push eax  +
call sub_424950  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41ADAA  +
push edi  +
call loc_4794B0  +
mov esi eax +
mov eax ds:off_4E114C +
push edi  +
mov eax [eax] +
call eax  +
add esp 8 +
mov eax [ebx+0Ch] +
cmp dword ptr [eax+4] 3 +
jnz loc_41AE19  +
cmp dword ptr [eax+18h] 0 +
jz loc_41AE19  +
mov ecx esi +
call sub_478670  +
mov ecx [ebp-4] +
mov ebx eax +
mov ecx [ecx+0Ch] +
mov esi [ecx+18h] +
push esi  +
call sub_424950  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41ADFD  +
push edi  +
call loc_4794B0  +
add esp 4 +
mov ecx ebx +
push eax  +
call sub_475840  +
mov eax ds:off_4E114C +
push edi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov esi [esi+18h] +
test esi esi +
jnz loc_41ADD0  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+58h]  +
mov ecx eax +
call sub_475CA0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+0Ch] +
test eax eax +
jz loc_41AE66  +
push edi  +
push eax  +
call sub_43D520  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41AE62  +
push esi  +
push edi  +
call loc_4794B0  +
mov esi eax +
mov eax ds:off_4E114C +
push edi  +
mov eax [eax] +
call eax  +
add esp 8 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
xor eax eax +
retn   +
***
push esi  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_41AEBE  +
mov esi [esi+20h] +
push edi  +
call sub_421DF0  +
push 0  +
push 0  +
push dword ptr [ebx+0Ch]  +
mov edi eax +
push esi  +
push edi  +
call sub_44D450  +
add esp 14h +
test eax eax +
js loc_41AEB8  +
push edi  +
call sub_421DE0  +
push eax  +
call loc_4794B0  +
push edi  +
mov esi eax +
call sub_45DAC0  +
add esp 0Ch +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
mov eax [eax] +
call eax  +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [ecx+0Ch] +
test eax eax +
jz loc_41AF4A  +
push eax  +
call sub_43D4C0  +
push ecx  +
fstp  [esp+8+var_8] +
call sub_47C350  +
add esp 8 +
retn   +
xor eax eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B976F  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_18] edi +
push dword ptr [edi+0Ch]  +
call sub_422250  +
mov esi eax +
push esi  +
call sub_47BCF0  +
add esp 8 +
mov ebx eax +
test esi esi +
jle loc_41B030  +
push dword ptr [edi+0Ch]  +
call sub_4229A0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41B02E  +
nop   +
push dword ptr [esi+8]  +
call loc_4794B0  +
add esp 4 +
mov ecx eax +
mov edx [eax] +
push [ebp+arg_0]  +
mov eax [edx+4] +
call eax  +
test al al +
jz loc_41B01F  +
mov eax [edi+14h] +
mov edi [edi+10h] +
push 18h  +
mov [ebp+var_10] eax +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_1C] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41AFFC  +
push esi  +
push edi  +
push [ebp+var_10]  +
mov ecx eax +
call sub_41AC10  +
mov edi eax +
jmp loc_41AFFE  +
xor edi edi +
mov ecx edi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_474AB0  +
mov eax [ebx] +
lea ecx [ebp+var_14] +
push ecx  +
push 1  +
mov ecx ebx +
mov [ebp+var_14] edi +
call dword ptr [eax+30h]  +
mov edi [ebp+var_18] +
push esi  +
call sub_424600  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_41AFB0  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4B97BF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov eax [eax+14h] +
call eax  +
test al al +
jz loc_41B1DF  +
mov eax [esi+0Ch] +
mov edi [eax+14h] +
test edi edi +
jz loc_41B1DF  +
mov ebx [esi+14h] +
mov esi [esi+10h] +
push 18h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41B1C2  +
push edi  +
push esi  +
push ebx  +
mov ecx eax +
call sub_41AC10  +
mov esi eax +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_41B4F0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E04FC +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_41B218  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41B224  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41B250  +
test al 4 +
jnz loc_41B245  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 18h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41B4F0  +
retn 4  +
***
call sub_478F50  +
add esp 8 +
retn 4  +
***
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_41B2BC  +
mov eax [ecx] +
push ebx  +
push esi  +
push edi  +
call dword ptr [eax+14h]  +
mov ebx eax +
mov ecx ebx +
lea eax [ecx+1] +
mov dl [ecx] +
inc ecx  +
test dl dl +
jnz loc_41B296  +
sub ecx eax +
lea esi [ecx+1] +
push esi  +
call sub_47BF90  +
push esi  +
push ebx  +
mov edi eax +
push esi  +
push edi  +
call sub_4985ED  +
add esp 14h +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_41B2DB  +
call sub_477E40  +
sub esp 8 +
fstp  [esp+8+var_8] +
call sub_47C350  +
add esp 8 +
retn   +
xor eax eax +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F650C +
cmp eax [ecx+4] +
jle loc_41B32C  +
push offset dword_4F650C  +
call sub_489058  +
add esp 4 +
cmp dword_4F650C 0FFFFFFFFh +
jnz loc_41B32C  +
push offset sub_4BBCF0  +
mov dword_4F6510 offset off_4E05A0 +
call sub_488F0F  +
push offset dword_4F650C  +
call sub_489019  +
add esp 8 +
mov eax offset dword_4F6510 +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E053C +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41B378  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41B384  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41B3B0  +
test al 4 +
jnz loc_41B3A5  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B97EF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push 18h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41B431  +
push [ebp+arg_0]  +
mov ecx eax +
push esi  +
push edi  +
call sub_41AC10  +
mov esi eax +
jmp loc_41B433  +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9832  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx edx +
mov edi ecx +
push 10h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_41B4CB  +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_4E053C +
test edi edi +
jz loc_41B4AB  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_41B4AD  +
xor eax eax +
mov [esi+8] eax +
mov byte ptr [ebp+var_4] 2 +
test ebx ebx +
jz loc_41B4C4  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
mov [esi+0Ch] eax +
jmp loc_41B4CD  +
xor eax eax +
mov [esi+0Ch] eax +
jmp loc_41B4CD  +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B985C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F6508 +
cmp eax [ecx+4] +
jle loc_41B572  +
push offset dword_4F6508  +
call sub_489058  +
add esp 4 +
cmp dword_4F6508 0FFFFFFFFh +
jnz loc_41B572  +
push 8  +
mov [ebp+var_4] 0 +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
test eax eax +
jz loc_41B55E  +
mov dword ptr [eax] offset off_4E04BC +
jmp loc_41B560  +
xor eax eax +
push offset dword_4F6508  +
mov dword_4F6504 eax +
call sub_489019  +
add esp 4 +
mov eax dword_4F6504 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B988F  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor esi esi +
mov [ebp+var_10] esi +
test eax eax +
jz loc_41B5D2  +
mov eax [eax+4] +
test eax eax +
jz loc_41B5D2  +
mov esi [eax] +
mov [ebp+var_10] esi +
push esi  +
call sub_47BCF0  +
add esp 4 +
mov edi eax +
mov [ebp+var_1C] edi +
test esi esi +
jle loc_41B66E  +
xor esi esi +
cmp [ebp+var_10] esi +
jle loc_41B66E  +
mov eax [ebx+0Ch] +
mov eax [eax+4] +
test eax eax +
jz loc_41B60D  +
test esi esi +
js loc_41B60D  +
cmp esi [eax] +
jge loc_41B60D  +
mov eax [eax+8] +
mov edi [eax+esi*4] +
jmp loc_41B60F  +
xor edi edi +
mov eax [ebx+10h] +
mov [ebp+var_18] eax +
mov eax [ebx+8] +
push 18h  +
mov [ebp+var_14] eax +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_24] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41B645  +
push edi  +
push [ebp+var_14]  +
mov ecx eax +
push [ebp+var_18]  +
call sub_41AC10  +
mov edi eax +
jmp loc_41B647  +
xor edi edi +
mov ecx edi +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_474AB0  +
mov [ebp+var_20] edi +
lea ecx [ebp+var_20] +
mov edi [ebp+var_1C] +
push ecx  +
push 1  +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+30h]  +
inc esi  +
cmp esi [ebp+var_10] +
jl loc_41B5F3  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+0Ch] +
test eax eax +
jz loc_41B6D8  +
mov eax [eax+4] +
test eax eax +
jz loc_41B6D8  +
mov ecx [eax] +
test ecx ecx +
jz loc_41B6D8  +
mov eax [eax+8] +
test eax eax +
jz loc_41B6D8  +
test ecx ecx +
jle loc_41B6C5  +
mov eax [eax] +
mov edx [esi+8] +
mov ecx [esi+10h] +
push eax  +
call sub_41B3E0  +
add esp 4 +
pop esi  +
retn   +
mov edx [esi+8] +
xor eax eax +
mov ecx [esi+10h] +
push eax  +
call sub_41B3E0  +
add esp 4 +
pop esi  +
retn   +
pop esi  +
jmp sub_41B4F0  +
***
push 0FFFFFFFFh  +
push offset loc_4B98B0  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_1C] edi +
mov eax [edi+8] +
mov ebx [eax+4] +
mov eax large fs:2Ch +
mov [ebp+var_20] ebx +
mov edx [eax] +
mov eax dword_4F650C +
cmp eax [edx+4] +
jle loc_41B765  +
push offset dword_4F650C  +
call sub_489058  +
add esp 4 +
cmp dword_4F650C 0FFFFFFFFh +
jnz loc_41B765  +
push offset sub_4BBCF0  +
mov dword_4F6510 offset off_4E05A0 +
call sub_488F0F  +
push offset dword_4F650C  +
call sub_489019  +
add esp 8 +
mov [ebp+var_4] 0 +
mov esi offset dword_4F6510 +
mov eax [edi+0Ch] +
mov [ebp+var_24] esi +
mov eax [eax+4] +
test eax eax +
jz loc_41B81C  +
cmp dword ptr [eax] 1 +
jnz loc_41B81C  +
mov eax [eax+8] +
mov ecx [edi+8] +
mov eax [eax] +
mov [ecx+4] eax +
mov ecx [ebp+arg_0] +
mov eax [edi+10h] +
mov [ebp+var_14] eax +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push dword ptr [edi+8]  +
push eax  +
call sub_444CF0  +
mov [ebp+var_18] eax +
mov eax [edi+8] +
push 14h  +
mov [ebp+arg_0] eax +
call sub_47ABB0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_41B7F5  +
mov eax [ebp+arg_0] +
mov [esi+8] eax +
mov eax [ebp+var_18] +
mov [esi+0Ch] eax +
mov eax [ebp+var_14] +
mov dword ptr [esi] offset off_4E05C4 +
test eax eax +
jz loc_41B7E9  +
mov ecx eax +
call sub_4795C0  +
mov eax [ebp+var_14] +
mov ecx esi +
mov [esi+10h] eax +
call sub_474AB0  +
jmp loc_41B81C  +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
jmp loc_41B81C  +
push offset aExceptionOccur  +
call sub_47A700  +
add esp 4 +
mov eax offset loc_41B813 +
retn   +
mov edi [ebp+var_1C] +
mov ebx [ebp+var_20] +
mov esi [ebp+var_24] +
mov ecx [edi+8] +
mov eax esi +
mov [ecx+4] ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
mov dword ptr [esi] offset off_4E05C4 +
test eax eax +
jz loc_41B85C  +
push eax  +
call sub_445600  +
add esp 4 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_41B868  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41B894  +
test al 4 +
jnz loc_41B889  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_478F50  +
add esp 8 +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 14h  +
mov ebx edx +
mov edi ecx +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_41B90B  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4E05C4 +
mov [esi+8] ebx +
mov [esi+0Ch] eax +
test edi edi +
jz loc_41B8F8  +
mov ecx edi +
call sub_4795C0  +
mov ecx esi +
mov [esi+10h] edi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F650C +
cmp eax [ecx+4] +
jle loc_41B96C  +
push offset dword_4F650C  +
call sub_489058  +
add esp 4 +
cmp dword_4F650C 0FFFFFFFFh +
jnz loc_41B96C  +
push offset sub_4BBCF0  +
mov dword_4F6510 offset off_4E05A0 +
call sub_488F0F  +
push offset dword_4F650C  +
call sub_489019  +
add esp 8 +
mov eax offset dword_4F6510 +
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41B9A2  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41B9AE  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41B9DA  +
test al 4 +
jnz loc_41B9CF  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B98F2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi edx +
mov ebx ecx +
test ebx ebx +
jnz loc_41BA23  +
call sub_47C0A0  +
test edi edi +
jnz loc_41BA2C  +
call sub_47C0A0  +
push 14h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_41BA89  +
mov byte ptr [ebp+var_4] 1 +
mov ecx ebx +
mov dword ptr [esi] offset off_4E05E8 +
mov eax [ebx] +
call dword ptr [eax+10h]  +
mov [esi+8] eax +
mov byte ptr [ebp+var_4] 2 +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+10h]  +
mov [esi+0Ch] eax +
mov ecx esi +
mov eax [ebp+arg_0] +
mov [esi+10h] eax +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B992C  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+4] offset unk_4E0640 +
mov dword ptr [esi+0Ch] offset off_4CE8B4 +
mov [ebp+var_4] 0 +
mov eax [esi+4] +
mov dword ptr [esi] offset off_4E064C +
push 0Ah  +
mov [ebp+var_10] 1 +
mov eax [eax+4] +
mov dword ptr [eax+esi+4] offset off_4E065C +
call sub_47C740  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41BB1F  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
jmp loc_41BB26  +
mov dword ptr [esi+8] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9958  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_41BB73  +
call sub_47C0A0  +
push esi  +
lea ecx [ebp+8] +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx ebx +
mov eax [ebx] +
mov esi [esi+8] +
call dword ptr [eax+10h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_41BC11  +
push 0  +
push offset off_4F1E48  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41BC38  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+18h]  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41BC11  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov edi eax +
test edi edi +
jnz loc_41BBE1  +
xor ecx ecx +
jmp loc_41BBFE  +
push 0  +
push offset off_4F1C5C  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_41BC2D  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax+14h]  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41BBD0  +
lea ecx [ebp+8] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
push offset off_4F1C5C  +
call loc_47A0A0  +
push esi  +
push offset off_4F1E48  +
call loc_47A0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9988  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp-10h] eax +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_41BC89  +
call sub_47C0A0  +
push eax  +
lea ecx [ebp-18h] +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx ebx +
mov eax [ebx] +
call dword ptr [eax+10h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov ebx eax +
mov ecx ebx +
mov edx [ebx] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41BD63  +
lea ecx [ebp-18h] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9988  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp-10h] eax +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_41BDC9  +
call sub_47C0A0  +
push eax  +
lea ecx [ebp-18h] +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx ebx +
mov eax [ebx] +
call dword ptr [eax+10h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov ebx eax +
mov ecx ebx +
mov edx [ebx] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41BE9D  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41BEC6  +
mov eax [ebp-10h] +
push edi  +
mov ecx [eax+8] +
mov edx [ecx] +
call dword ptr [edx+18h]  +
mov [ebp-14h] eax +
test eax eax +
jz loc_41BE7E  +
push 0  +
push offset off_4F1E48  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41BEB9  +
mov eax [esi] +
mov ecx esi +
push dword ptr [ebp+8]  +
mov eax [eax+20h] +
call eax  +
test al al +
jz loc_41BE7E  +
mov eax [esi] +
mov ecx esi +
push dword ptr [ebp+8]  +
call dword ptr [eax+38h]  +
jmp loc_41BE8C  +
push edi  +
push offset aEventhandler@N  +
call sub_47A700  +
add esp 8 +
mov eax [ebx] +
mov ecx ebx +
mov eax [eax+10h] +
call eax  +
test al al +
jnz near ptr dword_41BDFC+4  +
lea ecx [ebp-18h] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push dword ptr [ebp-14h]  +
push offset off_4F1E48  +
call loc_47A0A0  +
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push esi  +
lea esi [ecx-0Ch] +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41BEF3  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi+0Ch] offset off_4CE8B4 +
test al 1 +
jz loc_41BF20  +
test al 4 +
jnz loc_41BF15  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B99C7  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_4F6304 +
test eax eax +
jnz loc_41BFCC  +
push offset stru_4F6474  +
mov [ebp+var_10] offset dword_4F6470 +
call ds:EnterCriticalSection  +
mov eax dword_4F6470 +
inc eax  +
mov dword_4F6470 eax +
mov [ebp+var_4] 0 +
cmp dword_4F6304 0 +
jnz loc_41BFB6  +
push 14h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41BFAA  +
push ecx  +
mov ecx eax +
call sub_41BAA0  +
jmp loc_41BFAC  +
xor eax eax +
mov dword_4F6304 eax +
mov eax dword_4F6470 +
dec eax  +
push offset stru_4F6474  +
mov dword_4F6470 eax +
call ds:LeaveCriticalSection  +
mov eax dword_4F6304 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx+8] +
mov eax [ecx] +
jmp dword ptr [eax+14h]  +
***
mov ecx [ecx+8] +
mov eax [ecx] +
jmp dword ptr [eax+18h]  +
***
mov ecx [ecx+8] +
mov eax [ecx] +
jmp dword ptr [eax+1Ch]  +
***
mov ecx [ecx+8] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+30h]  +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41C032  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41C05E  +
test al 4 +
jnz loc_41C053  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 0Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41C07F  +
call sub_479590  +
mov dword ptr [esi] offset off_4CE8B4 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
mov ebx [ebp-14h] +
mov ecx [ebx+8] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
push offset aGeneralExcepti  +
call sub_47A700  +
push 6  +
push offset aStatus  +
call sub_474F10  +
mov edx [ebx] +
add esp 10h +
mov ecx ebx +
mov esi eax +
call dword ptr [edx+28h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
test eax eax +
jnz loc_41C273  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+28h]  +
mov esi eax +
push 0FFFFFFFFh  +
mov edi [esi] +
call sub_47C550  +
add esp 4 +
push eax  +
push 6  +
push offset aStatus  +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+2Ch]  +
push 7  +
push offset aMessage  +
call sub_474F10  +
mov edx [ebx] +
add esp 8 +
mov ecx ebx +
mov esi eax +
call dword ptr [edx+28h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
test eax eax +
jnz loc_41C2D0  +
mov eax [ebx] +
mov ecx ebx +
mov esi [ebx+8] +
call dword ptr [eax+28h]  +
mov edx [esi] +
mov edi eax +
mov ecx esi +
mov ebx [edi] +
call dword ptr [edx+14h]  +
push eax  +
push offset aGeneralExcepti  +
call sub_4782A0  +
add esp 8 +
push eax  +
push 7  +
push offset aMessage  +
call sub_474F10  +
add esp 8 +
mov ecx edi +
push eax  +
call dword ptr [ebx+2Ch]  +
mov eax offset loc_41C1E5 +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push offset aAbstractreques  +
call sub_47A700  +
add esp 8 +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B9A1C  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_4F651C +
cmp eax [ecx+4] +
jle loc_41C377  +
push offset dword_4F651C  +
call sub_489058  +
add esp 4 +
cmp dword_4F651C 0FFFFFFFFh +
jnz loc_41C377  +
push 0Ah  +
push offset dword_4F6518  +
mov [ebp+var_4] 0 +
call sub_47C6C0  +
push offset loc_4BBD10  +
call sub_488F0F  +
push offset dword_4F651C  +
call sub_489019  +
add esp 10h +
mov eax dword_4F6518 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
test esi esi +
jz loc_41C3DA  +
mov eax [esi] +
push ebx  +
call dword ptr [eax+14h]  +
mov ebx eax +
call sub_41C300  +
push ebx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov edi eax +
test edi edi +
jz loc_41C3EA  +
push 0  +
push offset off_4F1F24  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
pop ebx  +
test eax eax +
jz loc_41C3DF  +
mov edx [eax] +
mov ecx eax +
push esi  +
call dword ptr [edx+10h]  +
pop edi  +
pop esi  +
retn   +
***
call sub_47C0A0  +
push edi  +
push offset off_4F1F24  +
call loc_47A0A0  +
push ebx  +
push offset aNoRequestcreat  +
call loc_47A380  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_47A9B0  +
add esp 0Ch +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9A7B  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_24] edi +
mov [ebp+var_28] edi +
mov dword ptr [edi+4] offset off_4CE8B4 +
mov [ebp+var_4] 0 +
push 14h  +
mov dword ptr [edi] offset off_4E091C +
mov dword ptr [edi+4] offset off_4E08DC +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_24] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41C48D  +
mov ecx eax +
call sub_41CD20  +
mov esi eax +
jmp loc_41C48F  +
xor esi esi +
test esi esi +
jz loc_41C49A  +
mov ecx esi +
call sub_4795C0  +
mov [edi+0Ch] esi +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+14h] 0 +
lea eax [ebp+var_20] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov dword ptr [edi+18h] 0 +
mov dword ptr [edi+1Ch] 0 +
call sub_498746  +
add esp 4 +
push 0  +
push 3E8h  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call sub_4B6D70  +
mov ecx eax +
mov esi edx +
movzx eax [ebp+var_18] +
cdq   +
add ecx eax +
mov [edi+18h] ecx +
mov ecx edi +
adc esi edx +
mov [edi+1Ch] esi +
call loc_41C8E0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [esi] offset off_4E091C +
mov dword ptr [esi+4] offset off_4E08DC +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_41C543  +
call sub_479590  +
mov dword ptr [esi+10h] 0 +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_41C556  +
call sub_479590  +
mov dword ptr [esi+14h] 0 +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_41C562  +
call sub_479590  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_41C56E  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41C57A  +
call sub_479590  +
mov dword ptr [esi+4] offset off_4CE8B4 +
pop esi  +
retn   +
***
and esp 0FFFFFFC0h +
sub esp 38h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+38h+var_4] eax +
push esi  +
push edi  +
mov edi ecx +
call sub_41CA00  +
lea eax [esp+40h+var_18] +
push eax  +
call sub_498746  +
add esp 4 +
push 0  +
push 3E8h  +
push [esp+48h+var_14]  +
push [esp+4Ch+var_18]  +
call sub_4B6D70  +
mov esi eax +
mov ecx edx +
sub esi [edi+18h] +
movzx eax [esp+40h+var_10] +
sbb ecx [edi+1Ch] +
cdq   +
add esi eax +
adc ecx edx +
push ecx  +
push esi  +
push offset aAdobeipcbrok_1  +
call sub_47A7E0  +
add esp 0Ch +
push 8  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [esp+40h+var_1C] esi +
test esi esi +
jz loc_41C61B  +
mov ecx esi +
mov dword ptr [esi] offset off_4E09BC +
call sub_41D4A0  +
mov ecx esi +
call sub_474AB0  +
jmp loc_41C61D  +
xor esi esi +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41C643  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41C643  +
call sub_479590  +
mov dword ptr [edi+10h] 0 +
movsd xmm0 ds:qword_4E1048 +
sub esp 8 +
movsd [esp+48h+var_48] xmm0 +
call sub_47D0D0  +
mov ecx [edi+14h] +
add esp 8 +
test ecx ecx +
jz loc_41C66E  +
call sub_479590  +
mov dword ptr [edi+14h] 0 +
mov ecx [esp+40h+var_4] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
call loc_41C390  +
test eax eax +
jz loc_41C6A6  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+18h]  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push offset off_4F20D8  +
push offset off_4F128C  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41C6F8  +
push edi  +
mov edi [eax+0Ch] +
push edi  +
push offset aServicemanager  +
push 3  +
call sub_41C400  +
add esp 0Ch +
test edi edi +
jz loc_41C6F7  +
call sub_41A750  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+24h]  +
pop edi  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+0Ch]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov [ebp-10h] esp +
retn   +
***
mov edi [ebp-18h] +
push 8  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov esi [edi+0Ch] +
push offset aLoglevel  +
call sub_474F10  +
mov edx [esi] +
add esp 8 +
mov ecx esi +
mov edi eax +
call dword ptr [edx+20h]  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov edi eax +
test edi edi +
jnz loc_41C851  +
lea edi [eax+1] +
jmp loc_41C894  +
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41C8B3  +
mov edx [esi] +
mov ecx esi +
mov edi 1 +
call dword ptr [edx+10h]  +
cmp eax 0FFFFFFFFh +
jl loc_41C894  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
cmp eax 6 +
jg loc_41C894  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov edi eax +
call sub_47A6B0  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+14h]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push offset off_4F2104  +
call loc_47A0A0  +
mov ecx [ecx+14h] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
test eax eax +
jg locret_41C8D1  +
call sub_47DA40  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9ACE  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-18h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-1Ch] esi +
mov dword ptr [ebp-4] 0 +
mov ecx [ebx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+20h]  +
mov ebx eax +
mov ecx ebx +
mov [ebp-14h] ebx +
mov edx [ebx] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41C9BB  +
nop   +
mov eax [ebx] +
lea ecx [ebp-24h] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+14h]  +
call sub_4750D0  +
mov ebx [ebp-20h] +
mov [ebp-10h] eax +
test ebx ebx +
jnz loc_41C95E  +
xor edi edi +
jmp loc_41C97B  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41C9E7  +
mov ebx [ebp-24h] +
test ebx ebx +
jnz loc_41C986  +
xor eax eax +
jmp loc_41C9A1  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41C9E7  +
mov ecx [ebp-10h] +
push edi  +
push eax  +
mov edx [ecx] +
call dword ptr [edx+2Ch]  +
mov ebx [ebp-14h] +
mov ecx ebx +
mov eax [ebx] +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41C940  +
mov ecx [ebp-18h] +
call loc_41C710  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jz loc_41C9D5  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B9AFE  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
call sub_474B70  +
mov esi eax +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
call sub_41A750  +
call sub_41BF30  +
mov ecx [edi+0Ch] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx eax +
shl ecx 4 +
sub ecx eax +
shl ecx 2 +
push 18h  +
mov [ebp+var_10] ecx +
call sub_47ABB0  +
mov ebx eax +
add esp 4 +
mov [ebp+var_18] ebx +
test ebx ebx +
jz loc_41CA95  +
lea ecx [edi+4] +
mov dword ptr [ebx] offset off_4E0904 +
call sub_4795C0  +
mov [ebx+8] edi +
mov ecx ebx +
mov dword ptr [ebx+10h] offset loc_41C8C0 +
mov dword ptr [ebx+14h] 0 +
call sub_474AB0  +
jmp loc_41CA97  +
xor ebx ebx +
movd xmm0 [ebp+var_10] +
push 1  +
cvtdq2pd xmm0 xmm0 +
push ebx  +
sub esp 8 +
movsd [esp+38h+var_38] xmm0 +
call sub_47D490  +
add esp 10h +
call sub_478FB0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
lea ecx [edi+4] +
mov [ebp+var_10] eax +
push ecx  +
call sub_47DF70  +
mov ecx [edi+14h] +
mov ebx eax +
add esp 4 +
cmp ecx ebx +
jz loc_41CAEE  +
call sub_474AB0  +
test ebx ebx +
jz loc_41CAE9  +
mov ecx ebx +
call sub_4795C0  +
jmp loc_41CAEB  +
xor ebx ebx +
mov [edi+14h] ebx +
push 400h  +
push 400h  +
push [ebp+var_10]  +
call sub_477770  +
mov ecx [edi+10h] +
mov ebx eax +
add esp 0Ch +
cmp ecx ebx +
jz loc_41CB23  +
call sub_474AB0  +
test ebx ebx +
jz loc_41CB1E  +
mov ecx ebx +
call sub_4795C0  +
jmp loc_41CB20  +
xor ebx ebx +
mov [edi+10h] ebx +
mov ecx [edi+14h] +
push dword ptr [edi+10h]  +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov [ebp+var_4] 1 +
test esi esi +
jz loc_41CB40  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41C520  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_41CB91  +
test al 4 +
jnz loc_41CB86  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 20h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B9B37  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset stru_4F6490  +
mov [ebp+var_10] offset dword_4F648C +
call ds:EnterCriticalSection  +
mov eax dword_4F648C +
inc eax  +
mov dword_4F648C eax +
mov [ebp+var_4] 0 +
mov esi dword_4F6308 +
test esi esi +
jnz loc_41CC35  +
push 20h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_41CC12  +
mov ecx eax +
call sub_41C420  +
jmp loc_41CC14  +
xor eax eax +
mov byte ptr [ebp+var_4] 0 +
push offset aServiceManager  +
mov dword_4F6308 eax +
call sub_47A680  +
mov eax dword_4F648C +
add esp 4 +
mov esi dword_4F6308 +
dec eax  +
push offset stru_4F6490  +
mov dword_4F648C eax +
call ds:LeaveCriticalSection  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ebp+8]  +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jnz loc_41CC77  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41CC97  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push offset off_4F2104  +
call loc_47A0A0  +
mov eax ecx +
mov ecx [eax+14h] +
add ecx [eax+8] +
mov eax [eax+10h] +
pop ebp  +
jmp eax  +
***
push esi  +
sub ecx 4 +
push 0FFFFFFFFh  +
push offset loc_4B9B89  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4E0994 +
call sub_4750D0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+24h]  +
push eax  +
call loc_4797F0  +
add esp 4 +
test eax eax +
jz loc_41CD78  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41CD7A  +
xor eax eax +
mov [esi+8] eax +
push 0  +
push 0  +
push 0  +
mov byte ptr [ebp+var_4] 1 +
call sub_47B6F0  +
add esp 0Ch +
test eax eax +
jz loc_41CD9C  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41CD9E  +
xor eax eax +
mov [esi+0Ch] eax +
push 0  +
push 0  +
push 0  +
mov byte ptr [ebp+var_4] 2 +
call sub_47B6F0  +
add esp 0Ch +
test eax eax +
jz loc_41CDC0  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41CDC2  +
xor eax eax +
mov [esi+10h] eax +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_41D030  +
test al al +
jnz loc_41CDDB  +
mov ecx esi +
call sub_41D1C0  +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call sub_4750D0  +
push 6  +
push offset aLogdir  +
mov edi eax +
call sub_474F10  +
mov ecx [ebx+10h] +
add esp 8 +
mov [ebp-4] eax +
mov edx [ecx] +
push eax  +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jnz loc_41CE42  +
mov ecx [ebx+0Ch] +
push dword ptr [ebp-4]  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41CE67  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41CE75  +
push eax  +
call sub_41D280  +
test eax eax +
jnz loc_41CE6E  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+34h]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
or eax 4E092C68h +
add [ebx-7F901707h] cl +
add eax 104F8B00h +
add esp 8 +
mov ebx eax +
mov edx [ecx] +
push ebx  +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jnz loc_41CEC4  +
mov ecx [edi+0Ch] +
push ebx  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41CEE9  +
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41CEF2  +
mov edx [eax] +
mov ecx eax +
pop edi  +
pop esi  +
pop ebx  +
jmp dword ptr [edx+10h]  +
***
pop edi  +
pop esi  +
mov eax 5 +
pop ebx  +
retn   +
***
push esi  +
push offset off_4F2104  +
call loc_47A0A0  +
push offset aEnvironment  +
mov esi ecx +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call loc_41CF50  +
pop esi  +
retn   +
***
push offset aSystemproperti  +
mov esi ecx +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call loc_41CF50  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
push dword ptr [ebp+8]  +
mov ecx [ebx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jnz loc_41CF6D  +
xor edi edi +
jmp loc_41CF8E  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41D018  +
mov ecx [ebx+10h] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ebx eax +
test ebx ebx +
jnz loc_41CFA3  +
xor esi esi +
jmp loc_41CFC0  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41D00D  +
test edi edi +
jz loc_41CFD1  +
test esi esi +
jnz loc_41CFDE  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
test esi esi +
jz loc_41CFDE  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0  +
call sub_47C740  +
add esp 4 +
mov ebx eax +
test edi edi +
jz loc_41CFF7  +
mov edx edi +
mov ecx ebx +
call sub_41D230  +
test esi esi +
jz loc_41D004  +
mov edx esi +
mov ecx ebx +
call sub_41D230  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push offset off_4F2170  +
call loc_47A0A0  +
push esi  +
push offset off_4F2170  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
retn   +
***
push 0  +
push 0  +
push 0  +
mov esi ecx +
call sub_47B6F0  +
mov ecx [esi+0Ch] +
mov edi eax +
add esp 0Ch +
cmp ecx edi +
jz loc_41D1F2  +
call sub_474AB0  +
test edi edi +
jz loc_41D1ED  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_41D1EF  +
xor eax eax +
mov [esi+0Ch] eax +
push 0  +
push 0  +
push 0  +
call sub_47B6F0  +
mov ecx [esi+10h] +
mov edi eax +
add esp 0Ch +
cmp ecx edi +
jz loc_41D224  +
call sub_474AB0  +
test edi edi +
jz loc_41D21F  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
pop edi  +
mov [esi+10h] eax +
pop esi  +
retn   +
xor eax eax +
mov [esi+10h] eax +
pop edi  +
pop esi  +
retn   +
***
mov eax [edx] +
sub esp 8 +
push esi  +
push edi  +
mov edi ecx +
mov ecx edx +
call dword ptr [eax+20h]  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41D275  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
push [ebp+var_4]  +
mov eax [edi] +
mov ecx edi +
push [ebp+var_8]  +
call dword ptr [eax+2Ch]  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41D250  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and esp 0FFFFFFF8h +
push esi  +
push edi  +
call sub_4750D0  +
push 1  +
push offset asc_4E097C  +
mov esi eax +
call sub_474F10  +
mov edi [ebp+arg_0] +
add esp 8 +
mov ecx edi +
push eax  +
call loc_4783A0  +
test al al +
jz loc_41D2D1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
mov ecx edi +
mov esi eax +
call sub_478670  +
push esi  +
push 1  +
push 0  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+5Ch]  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 1  +
push offset asc_4E0980  +
call sub_474F10  +
add esp 8 +
mov ecx edi +
push eax  +
call loc_4783A0  +
test al al +
jz loc_41D2FD  +
mov edx esi +
mov ecx edi +
call sub_41D320  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
test edi edi +
jz loc_41D312  +
push edi  +
push eax  +
call loc_479750  +
add esp 8 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov ebx edx +
push 1  +
push offset asc_4E0984  +
mov [ebp+var_8] esi +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_477F90  +
mov eax [ebp+var_10] +
cmp eax 0FFFFFFFFh +
jz loc_41D3C8  +
dec eax  +
mov ecx esi +
push eax  +
push 1  +
call sub_478880  +
mov ecx eax +
mov [ebp+var_4] eax +
call sub_4788D0  +
mov esi eax +
push 4  +
push offset aTemp  +
mov edi [esi] +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
mov eax [edi+4] +
call eax  +
test al al +
mov ecx ebx +
mov eax [ebx] +
jz loc_41D390  +
call dword ptr [eax+3Ch]  +
jmp loc_41D398  +
push 0  +
push [ebp+var_4]  +
call dword ptr [eax+28h]  +
mov ebx eax +
test ebx ebx +
jnz loc_41D3A5  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov edi [ebp+var_8] +
mov ecx edi +
mov esi [ebp+var_10] +
inc esi  +
mov eax [edi] +
call dword ptr [eax+18h]  +
sub eax esi +
mov ecx edi +
push eax  +
push esi  +
call sub_478880  +
push eax  +
mov ecx ebx +
call loc_477BD0  +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_41D3F2  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41D3FE  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41D40A  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41D436  +
test al 4 +
jnz loc_41D42B  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ecx] +
push esi  +
push dword ptr [ebp+8]  +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jnz loc_41D457  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41D477  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push offset off_4F2170  +
call loc_47A0A0  +
sub esp 28h +
mov eax ds:DefWindowProcW +
xorps xmm0 xmm0 +
push esi  +
push edi  +
mov [ebp+WndClass.lpfnWndProc] eax +
mov edi ecx +
lea eax [ebp+WndClass] +
mov [ebp+WndClass.style] 0 +
movups oword ptr [ebp+WndClass.hCursor] xmm0 +
push eax  +
movups oword ptr [ebp+WndClass.cbClsExtra] xmm0 +
mov [ebp+WndClass.lpszClassName] offset ClassName +
call ds:RegisterClassW  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFDh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset WindowName  +
push offset ClassName  +
push 0  +
call ds:CreateWindowExW  +
mov esi eax +
test esi esi +
jz loc_41D511  +
push edi  +
push 0FFFFFFEBh  +
push esi  +
call ds:SetWindowLongW  +
mov eax esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9BF9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
mov eax dword_4F64A8 +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
push 1  +
mov dword ptr [esi] offset off_4E0DC4 +
call sub_478F50  +
add esp 8 +
test eax eax +
jz loc_41D57C  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41D57E  +
xor eax eax +
mov [esi+8] eax +
push 0Ah  +
mov byte ptr [ebp+var_4] 1 +
call sub_47C740  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_41D59E  +
mov ecx edi +
call sub_4795C0  +
jmp loc_41D5A0  +
xor edi edi +
mov [esi+0Ch] edi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov byte ptr [ebp+var_4] 3 +
call sub_41BF30  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+4]  +
mov ecx esi +
call sub_41E240  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_41D630  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_41D621  +
test al 4 +
jnz loc_41D616  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 20h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B82E0  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+18h] +
mov dword ptr [esi] offset off_4E0DC4 +
test ecx ecx +
jz loc_41D67A  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_41D67A  +
call sub_479590  +
mov dword ptr [esi+18h] 0 +
call sub_41BF30  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+8]  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_41D693  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_41D69F  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41D6AB  +
call sub_479590  +
mov dword ptr [esi] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9958  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_41D7BF  +
cmp [ebp+arg_4] 0 +
jz loc_41D7BF  +
cmp [ebp+arg_8] 0 +
jz loc_41D7BF  +
push dword ptr [edi+0Ch]  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov [ebp+var_4] 0 +
mov ecx [edi+0Ch] +
push ebx  +
call loc_41A820  +
mov esi eax +
test esi esi +
jnz loc_41D7A1  +
push ebx  +
push offset aCsxseventqueue  +
push 3  +
call sub_41C400  +
mov eax [ebp+arg_C] +
add esp 0Ch +
mov ecx ebx +
lea edx [eax+eax] +
call sub_41EAF0  +
push [ebp+arg_4]  +
mov esi eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+1Ch]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_8]  +
call dword ptr [eax+24h]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_10]  +
call dword ptr [eax+40h]  +
mov ecx [edi+0Ch] +
push esi  +
push ebx  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
push dword ptr [edi+14h]  +
mov eax [esi] +
mov ecx esi +
push dword ptr [edi+10h]  +
call dword ptr [eax+10h]  +
push offset aCsxseventque_0  +
push 3  +
call sub_41C400  +
mov eax [edi] +
add esp 8 +
mov ecx edi +
call dword ptr [eax+30h]  +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B96B8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
test esi esi +
jnz loc_41D822  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push dword ptr [edi+0Ch]  +
lea ecx [ebp+8] +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx [edi+0Ch] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov edi eax +
test edi edi +
jnz loc_41D865  +
lea ecx [ebp+8] +
xor esi esi +
call sub_47AC40  +
test esi esi +
setnz al  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41D8A2  +
lea ecx [ebp+8] +
call sub_47AC40  +
test esi esi +
setnz al  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B9C28  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_41D8E4  +
call sub_47C0A0  +
push dword ptr [ebx+0Ch]  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov [ebp+var_4] 0 +
mov ecx [ebx+0Ch] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_41D9AF  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41D9A2  +
mov eax [edi] +
mov ecx edi +
push [ebp+arg_10]  +
call dword ptr [eax+3Ch]  +
push dword ptr [ebx+14h]  +
mov eax [edi] +
mov ecx edi +
push dword ptr [ebx+10h]  +
call dword ptr [eax+10h]  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+28h] +
call eax  +
test al al +
jz loc_41D9F5  +
movsd xmm0 ds:qword_4E1060 +
lea ecx [ebp+arg_0] +
sub esp 8 +
movsd [esp+38h+var_38] xmm0 +
call sub_47B000  +
mov ecx [ebx+0Ch] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jnz loc_41D97A  +
xor edi edi +
jmp loc_41D9F5  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jnz loc_41D9F5  +
push esi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push [ebp+var_10]  +
push offset off_4F1C84  +
call loc_47A0A0  +
push esi  +
push offset aCsxseventque_1  +
push 3  +
call sub_41C400  +
mov eax [ebx] +
add esp 0Ch +
mov ecx ebx +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call dword ptr [eax+28h]  +
mov edi eax +
test edi edi +
jz loc_41D9F5  +
push esi  +
mov esi [ebp+arg_10] +
push esi  +
push offset aCsxseventque_2  +
push 5  +
call sub_41C400  +
mov eax [edi] +
add esp 10h +
mov ecx edi +
push esi  +
call dword ptr [eax+3Ch]  +
xor esi esi +
test edi edi +
jz loc_41DA04  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+34h]  +
mov esi eax +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9C60  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-2Ch] ebx +
mov eax [ebp+8] +
lea ecx [ebp-34h] +
push dword ptr [ebx+0Ch]  +
mov [ebp-30h] eax +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx [ebx+0Ch] +
call sub_47EAF0  +
mov edi eax +
mov edx [edi] +
mov ecx edi +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41DB7A  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jnz loc_41DAA4  +
xor esi esi +
jmp loc_41DAC5  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41DBA0  +
mov eax [esi] +
mov ecx esi +
mov ebx [ebp-30h] +
push ebx  +
mov eax [eax+38h] +
call eax  +
test al al +
jz loc_41DA82  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+14h]  +
mov edx eax +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41DB01  +
xor ecx ecx +
jmp loc_41DB0F  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41DB06  +
sub ecx edi +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
mov byte ptr [ebp-4] 1 +
mov ecx esi +
mov eax [esi] +
push ebx  +
call dword ptr [eax+14h]  +
push eax  +
push offset aCsxseventque_3  +
push 3  +
call sub_41C400  +
mov edi [ebp-2Ch] +
add esp 10h +
mov eax [esi] +
mov ecx esi +
mov edi [edi+0Ch] +
mov ebx [edi] +
call dword ptr [eax+14h]  +
push eax  +
mov ecx edi +
call dword ptr [ebx+30h]  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_41DB63  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
push offset aCsxseventque_4  +
push 3  +
call sub_41C400  +
mov ecx [ebp-2Ch] +
add esp 8 +
mov eax [ecx] +
call dword ptr [eax+30h]  +
lea ecx [ebp-34h] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push offset off_4F1C84  +
call loc_47A0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9C98  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-18h] ecx +
mov ecx [ecx+0Ch] +
call sub_47EAF0  +
mov ebx eax +
mov ecx ebx +
mov [ebp-14h] ebx +
mov edx [ebx] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41DD7E  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_41DD6D  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_41DDC1  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
cmp eax 1 +
jl loc_41DD90  +
mov ecx [ebp-18h] +
push edi  +
mov eax [ecx] +
call dword ptr [eax+40h]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+10h] +
call eax  +
test al al +
jnz loc_41DD6D  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push offset aCsxseventque_6  +
push 3  +
call sub_41C400  +
lea eax [ebp-10h] +
push 0Ah  +
push eax  +
call sub_47C6C0  +
add esp 20h +
mov dword ptr [ebp-4] 0 +
mov ecx edi +
mov esi [ebp-10h] +
mov eax [edi] +
mov ebx [esi] +
call dword ptr [eax+14h]  +
push eax  +
push dword_4F6338  +
mov ecx esi +
call dword ptr [ebx+24h]  +
mov esi [ebp-10h] +
mov ecx edi +
mov eax [edi] +
mov ebx [esi] +
call dword ptr [eax+18h]  +
push eax  +
push dword_4F632C  +
mov ecx esi +
call dword ptr [ebx+24h]  +
mov esi [ebp-10h] +
mov ecx edi +
mov eax [edi] +
mov ebx [esi] +
call dword ptr [eax+20h]  +
push eax  +
push dword_4F63AC  +
mov ecx esi +
call dword ptr [ebx+24h]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push offset aDataRefreshend  +
call sub_4782A0  +
mov ecx [ebp-10h] +
add esp 10h +
mov edx [ecx] +
push eax  +
push dword_4F6394  +
call dword ptr [edx+24h]  +
mov ecx [ebp-10h] +
push dword_4F6368  +
push dword_4F6324  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
mov esi [ebp-10h] +
push 0  +
mov edi [esi] +
call sub_47C550  +
add esp 4 +
mov ecx esi +
push eax  +
push dword_4F6348  +
call dword ptr [edi+24h]  +
call sub_41A750  +
push dword ptr [ebp-10h]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+20h]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_41DD6A  +
call sub_479590  +
mov ebx [ebp-14h] +
mov eax [ebx] +
mov ecx ebx +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41DC00  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push offset aCsxseventque_7  +
push 3  +
call sub_41C400  +
add esp 18h +
jmp loc_41DD6D  +
***
push esi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B96B8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
test esi esi +
jnz loc_41DE02  +
call sub_47C0A0  +
push dword ptr [edi+0Ch]  +
lea ecx [ebp+8] +
call sub_47AC20  +
mov dword ptr [ebp-4] 0 +
mov ecx [edi+0Ch] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41DE3E  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41DE70  +
mov edx [edi] +
mov ecx edi +
push eax  +
push dword ptr [ebp+0Ch]  +
call dword ptr [edx+34h]  +
lea ecx [ebp+8] +
mov esi eax +
call sub_47AEF0  +
lea ecx [ebp+8] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B9CC8  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41DFBF  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
cmp eax dword_4F64A8 +
jnz loc_41DFBF  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov edx [esi] +
mov ecx esi +
mov ebx eax +
call dword ptr [edx+18h]  +
mov [ebp+var_18] eax +
test ebx ebx +
jz loc_41DFBF  +
test eax eax +
jz loc_41DFBF  +
push dword_4F6338  +
mov ecx ebx +
call sub_419030  +
push dword_4F632C  +
mov esi eax +
mov ecx ebx +
mov [ebp+var_10] esi +
call sub_419030  +
push dword_4F63AC  +
mov ecx ebx +
mov [ebp+arg_0] eax +
call sub_419030  +
mov [ebp+var_14] eax +
test esi esi +
jz loc_41DFBF  +
cmp [ebp+arg_0] 0 +
jz loc_41DFBF  +
test eax eax +
jz loc_41DFBF  +
push dword_4F6330  +
mov ecx ebx +
call loc_41CC60  +
test eax eax +
jz loc_41DF53  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov ebx eax +
jmp loc_41DF55  +
xor ebx ebx +
push dword ptr [edi+0Ch]  +
lea ecx [ebp+var_1C] +
call sub_47AC20  +
mov [ebp+var_4] 0 +
mov ecx [edi+0Ch] +
push esi  +
call loc_41A820  +
mov esi eax +
test esi esi +
jnz loc_41DFA0  +
mov esi [ebp+var_10] +
push esi  +
push offset aCsxseventque_5  +
push 3  +
call sub_41C400  +
mov eax [edi] +
add esp 0Ch +
mov ecx edi +
push ebx  +
push 3Ch  +
push [ebp+var_14]  +
push [ebp+arg_0]  +
push esi  +
call dword ptr [eax+28h]  +
mov esi eax +
test esi esi +
jz loc_41DFB7  +
mov eax [esi] +
mov ecx esi +
push [ebp+var_18]  +
call dword ptr [eax+3Ch]  +
push dword ptr [edi+14h]  +
mov eax [esi] +
mov ecx esi +
push dword ptr [edi+10h]  +
call dword ptr [eax+10h]  +
lea ecx [ebp+var_1C] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push edi  +
mov ecx [ebx+0Ch] +
call sub_47EAF0  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_41E041  +
push esi  +
nop   +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov esi eax +
test esi esi +
jz loc_41E028  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41E047  +
mov edx [ebx] +
mov ecx ebx +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [edx+34h]  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_41E000  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push offset off_4F1C84  +
call loc_47A0A0  +
push esi  +
push edi  +
mov edi ecx +
call sub_47B950  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_41E0A8  +
mov eax [esi] +
mov ecx esi +
push dword ptr [edi+14h]  +
push dword ptr [edi+10h]  +
mov eax [eax+2Ch] +
call eax  +
test al al +
jz loc_41E099  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+40h]  +
call sub_47B950  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_0]  +
call dword ptr [eax+30h]  +
call sub_47B960  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
call dword ptr [edx+38h]  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
test edi edi +
jz loc_41E1B4  +
mov eax [edi] +
mov ecx edi +
push dword_4F6338  +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jz loc_41E1AD  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_41E1C4  +
mov ecx [ebx+0Ch] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+18h]  +
mov ebx eax +
test ebx ebx +
jz loc_41E1AD  +
push 0  +
push offset off_4F1C84  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_41E1B9  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+18h]  +
test eax eax +
jz loc_41E166  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx eax +
call sub_478660  +
test al al +
jz loc_41E17B  +
mov eax [edi] +
mov ecx edi +
push dword_4F632C  +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
call dword ptr [edx+1Ch]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jz loc_41E198  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
mov ecx eax +
call sub_478660  +
test al al +
jz loc_41E1AD  +
mov eax [edi] +
mov ecx edi +
push dword_4F63AC  +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
call dword ptr [edx+24h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
call sub_47C0A0  +
push ebx  +
push offset off_4F1C84  +
call loc_47A0A0  +
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
int 3  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call sub_47B950  +
mov ebx [ebp+arg_0] +
mov esi eax +
test ebx ebx +
jz loc_41E22E  +
mov eax [ebx] +
mov ecx ebx +
push dword ptr [edi+14h]  +
push dword ptr [edi+10h]  +
mov eax [eax+2Ch] +
call eax  +
test al al +
jz loc_41E22C  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+14h]  +
push eax  +
push offset aRemovingStaleQ  +
call sub_47A7E0  +
mov esi [edi+0Ch] +
add esp 8 +
mov eax [ebx] +
mov ecx ebx +
mov edi [esi] +
call dword ptr [eax+14h]  +
push eax  +
mov ecx esi +
call dword ptr [edi+30h]  +
call sub_47B960  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFC0h +
sub esp 38h +
push esi  +
push edi  +
push 10h  +
mov edi ecx +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [esp+40h+var_4] esi +
test esi esi +
jz loc_41E285  +
mov dword ptr [esi] offset off_4E0E10 +
test edi edi +
jz loc_41E272  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov ecx esi +
mov dword ptr [esi+0Ch] offset loc_41E2D0 +
call sub_474AB0  +
jmp loc_41E287  +
xor esi esi +
movsd xmm0 ds:qword_4E1058 +
push 1  +
push esi  +
sub esp 8 +
movsd [esp+50h+var_50] xmm0 +
call sub_47D490  +
mov ecx [edi+18h] +
mov esi eax +
add esp 10h +
cmp ecx esi +
jz loc_41E2C9  +
call sub_474AB0  +
test esi esi +
jz loc_41E2C4  +
mov ecx esi +
call sub_4795C0  +
mov [edi+18h] esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov [edi+18h] esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
add dword ptr [ecx+10h] 0Ah +
adc dword ptr [ecx+14h] 0 +
retn 4  +
***
mov eax ecx +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
pop ebp  +
jmp eax  +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41E302  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41E32E  +
test al 4 +
jnz loc_41E323  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+24h]  +
push 5  +
push offset aEvent  +
mov esi eax +
call sub_474F10  +
mov edx [esi] +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_41E3AF  +
push ebx  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_41E3DD  +
mov edx [edi] +
mov ecx edi +
push 0  +
call dword ptr [edx+2Ch]  +
mov ecx dword_4F64AC +
mov edx ebx +
push eax  +
call sub_41B9F0  +
add esp 4 +
mov esi eax +
call sub_41BF30  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx]  +
pop ebx  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+28h]  +
mov esi eax +
push 0  +
mov edi [esi] +
call sub_47C550  +
add esp 4 +
push eax  +
push 6  +
push offset aStatus  +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+2Ch]  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push offset off_4F2170  +
call loc_47A0A0  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E0E5C +
mov ecx [esi+8] +
test ecx ecx +
jz loc_41E408  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_41E434  +
test al 4 +
jnz loc_41E429  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 0Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
retn   +
***
and esp 0FFFFFFF8h +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41E490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_49A81E  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41E4A0  +
add esp 14h +
pop ecx  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9D94  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
push 0Ah  +
mov dword ptr [edi] offset off_4E0F94 +
call sub_47BCF0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_41E550  +
mov ecx esi +
call sub_4795C0  +
jmp loc_41E552  +
xor esi esi +
mov [edi+8] esi +
mov ecx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_41E567  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_41E569  +
xor eax eax +
mov [edi+0Ch] eax +
mov byte ptr [ebp+var_4] 2 +
call sub_478810  +
test eax eax +
jz loc_41E582  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41E584  +
xor eax eax +
mov [edi+10h] eax +
mov byte ptr [ebp+var_4] 3 +
call sub_478810  +
test eax eax +
jz loc_41E59D  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_41E59F  +
xor eax eax +
mov [edi+14h] eax +
movd xmm0 [ebp+arg_4] +
lea esi [edi+28h] +
cvtdq2pd xmm0 xmm0 +
mov byte ptr [ebp+var_4] 4 +
mov dword ptr [edi+18h] 0 +
mov dword ptr [edi+1Ch] 0 +
mov [ebp+arg_0] esi +
movsd qword ptr [edi+20h] xmm0 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_420670  +
mov [esi] eax +
mov eax edi +
mov dword ptr [edi+30h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push edi  +
mov edi ecx +
mov dword ptr [edi] offset off_4E0F94 +
mov ecx [edi+8] +
test ecx ecx +
jz loc_41E620  +
call sub_479590  +
mov dword ptr [edi+8] 0 +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_41E633  +
call sub_479590  +
mov dword ptr [edi+0Ch] 0 +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41E646  +
call sub_479590  +
mov dword ptr [edi+10h] 0 +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_41E659  +
call sub_479590  +
mov dword ptr [edi+14h] 0 +
mov eax [edi+28h] +
lea ecx [edi+28h] +
push esi  +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_41FF80  +
push dword ptr [edi+28h]  +
call sub_47BF70  +
mov ecx [edi+14h] +
add esp 4 +
pop esi  +
test ecx ecx +
jz loc_41E684  +
call sub_479590  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_41E690  +
call sub_479590  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_41E69C  +
call sub_479590  +
mov ecx [edi+8] +
test ecx ecx +
jz loc_41E6A8  +
call sub_479590  +
mov dword ptr [edi] offset off_4CE8B4 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi+10h] +
cmp ecx esi +
jz loc_41E6EF  +
call sub_474AB0  +
test esi esi +
jz loc_41E6EA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov [edi+10h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
mov [edi+10h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi+14h] +
cmp ecx esi +
jz loc_41E73F  +
call sub_474AB0  +
test esi esi +
jz loc_41E73A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov [edi+14h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
mov [edi+14h] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov ecx [ebx+0Ch] +
mov edi [ebp+arg_4] +
push edi  +
push esi  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
push offset aUpdatingEventq  +
push 3  +
call sub_41C400  +
add esp 14h +
mov [ebx+1Ch] edi +
mov [ebx+18h] esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ecx [ecx+8] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
mov ecx [ecx+8] +
lea edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov [ebp+arg_0] eax +
push edx  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+30h]  +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov ecx [edi+8] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [edi+8] +
mov esi eax +
push 0  +
call loc_47BE30  +
mov ecx esi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov eax [ecx+28h] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi eax +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41E86A  +
cmp [edx+10h] edi +
jnb loc_41E860  +
mov edx [edx+8] +
jmp loc_41E864  +
mov esi edx +
mov edx [edx] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_41E856  +
cmp esi eax +
jz loc_41E873  +
cmp edi [esi+10h] +
jnb loc_41E875  +
mov esi eax +
xor eax eax +
cmp esi [ecx+28h] +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B7968  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov ecx [ebp+arg_0] +
mov [ebp+var_2C] ecx +
push ecx  +
mov eax [eax+38h] +
mov ecx esi +
call eax  +
test al al +
jnz loc_41E92A  +
push [ebp+var_2C]  +
lea eax [ebp+var_2C] +
push eax  +
push ecx  +
lea eax [ebp+var_34] +
push eax  +
lea ecx [esi+28h] +
call loc_420BB0  +
lea eax [ebp+var_28] +
mov ecx esi +
push eax  +
call loc_41E990  +
mov [ebp+var_4] 0 +
cmp dword ptr [eax+14h] 10h +
jb loc_41E8FD  +
mov eax [eax] +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push eax  +
push offset aEventqueueimpl  +
push 5  +
call sub_41C400  +
mov eax [ebp+var_14] +
add esp 10h +
cmp eax 10h +
jb loc_41E92A  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
test eax eax +
js loc_41E961  +
mov [ecx+30h] eax +
pop ebp  +
retn 4  +
push eax  +
push offset aEventqueueim_0  +
push 1  +
call sub_41C400  +
add esp 0Ch +
pop ebp  +
retn 4  +
***
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9DC1  +
mov eax large fs:0 +
push eax  +
sub esp 0B4h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
sub esp 8 +
mov dword ptr [ebp-10h] 0 +
lea ecx [ebp-0C0h] +
call sub_416BE0  +
mov edx offset asc_4E0F68 +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-0B0h] +
call loc_417930  +
mov esi [edi+28h] +
mov esi [esi] +
cmp esi [edi+28h] +
jz loc_41EA57  +
push dword ptr [esi+10h]  +
lea ecx [ebp-0B0h] +
call sub_41EB60  +
mov edx offset asc_4E0F6C +
mov ecx eax +
call loc_417930  +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_41EA52  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41EA31  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41EA52  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41EA25  +
jmp loc_41EA52  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41EA50  +
mov esi eax +
cmp esi [edi+28h] +
jnz loc_41E9F2  +
mov edx offset asc_4E0F70 +
lea ecx [ebp-0B0h] +
call loc_417930  +
mov esi [ebp+8] +
lea ecx [ebp-0C0h] +
push esi  +
call sub_416AD0  +
lea ecx [ebp-58h] +
call sub_416AF0  +
lea eax [ebp-58h] +
mov dword ptr [ebp-4] 1 +
push eax  +
mov dword ptr [ebp-58h] offset off_4CEEA8 +
call sub_48A34E  +
add esp 4 +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_41E600  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_41EAE1  +
test al 4 +
jnz loc_41EAD6  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 38h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B9DEF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov edi ecx +
push 38h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_41EB3E  +
push esi  +
push edi  +
mov ecx eax +
call sub_41E500  +
mov esi eax +
jmp loc_41EB40  +
xor esi esi +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9E3A  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [esi] +
xor edi edi +
mov [ebp+var_1C] edi +
mov [ebp+var_24] esi +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41EBAA  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_41EBCE  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_41EBCE  +
cmp ecx esi +
jz loc_41EBCE  +
call sub_414BB0  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp+var_20] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_41EC95  +
lea eax [ebp+var_2C] +
push eax  +
call sub_4112A0  +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_4206E0  +
add esp 4 +
mov ebx eax +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+var_28] +
test ecx ecx +
jz loc_41EC22  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41EC22  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push [ebp+arg_0]  +
mov byte ptr [ebp+var_4] 4 +
mov eax [esi] +
mov ecx [eax+4] +
mov al [ecx+esi+40h] +
add ecx esi +
mov byte ptr [ebp+var_18] al +
push [ebp+var_18]  +
mov eax [ebx] +
push ecx  +
mov byte ptr [ebp+var_34] 0 +
push dword ptr [ecx+38h]  +
lea ecx [ebp+var_34] +
push [ebp+var_34]  +
push ecx  +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
cmp byte ptr [ebp+var_34] 0 +
mov eax 4 +
cmovnz edi eax +
jmp loc_41EC8E  +
mov ecx [ebp-14h] +
mov eax [ecx] +
mov edx [eax+4] +
mov eax [edx+ecx+0Ch] +
add edx ecx +
or eax 4 +
cmp dword ptr [edx+38h] 0 +
jnz loc_41EC78  +
or eax 4 +
push 1  +
push eax  +
mov ecx edx +
call loc_4111D0  +
mov eax offset loc_41EC88 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp-1Ch] +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
test edi edi +
jz loc_41ECB9  +
mov edx [ecx+0Ch] +
or edx edi +
mov eax edx +
or eax 4 +
cmp dword ptr [ecx+38h] 0 +
push 0  +
cmovnz eax edx +
push eax  +
call loc_4111D0  +
mov [ebp+var_4] 6 +
call sub_48A7EA  +
test al al +
jnz loc_41ECD0  +
mov ecx esi +
call sub_414D70  +
mov byte ptr [ebp+var_4] 7 +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_41ECE6  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
sub esp 4Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+4Ch+var_4] eax +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push eax  +
push offset aP  +
lea eax [esp+60h+var_48] +
mov edi ecx +
push 40h  +
push eax  +
call sub_41E4E0  +
push eax  +
lea eax [esp+6Ch+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41F710  +
mov ecx [esp+88h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4B9E68  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_40] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
mov [ebp+var_34] esi +
test ecx ecx +
jg loc_41EDE8  +
jl loc_41EDD7  +
test esi esi +
jnz loc_41EDE8  +
cmp eax 2000h +
jz loc_41EDE8  +
mov esi 6 +
xor ecx ecx +
mov [ebp+var_34] esi +
mov [ebp+var_44] ecx +
mov ecx esi +
cmp eax 2000h +
jnz loc_41EE4A  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_4E1070 +
comisd xmm0 ds:qword_4E1068 +
jbe loc_41EE4A  +
lea eax [ebp+var_44] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_49A86C  +
mov eax [ebp+var_44] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_41EE64  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_41EE71  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_412E60  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_38] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_34]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 4Ch  +
push eax  +
push [ebp+var_3C]  +
call sub_41FEC0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_41E4E0  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_40] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_38]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_3C]  +
call loc_41FB00  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_41EEEB  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4B9E68  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] ecx +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_C] +
mov edi 0Fh +
mov [ebp+var_40] eax +
mov [ebp+var_38] ecx +
mov [ebp+var_1C] edi +
mov [ebp+var_20] edx +
mov byte ptr [ebp+var_30] dl +
mov [ebp+var_4] edx +
mov eax [ecx+14h] +
mov esi [ecx+18h] +
and eax 3000h +
mov ecx [ecx+1Ch] +
mov [ebp+var_34] esi +
test ecx ecx +
jg loc_41EF88  +
jl loc_41EF77  +
test esi esi +
jnz loc_41EF88  +
cmp eax 2000h +
jz loc_41EF88  +
mov esi 6 +
xor ecx ecx +
mov [ebp+var_34] esi +
mov [ebp+var_44] ecx +
mov ecx esi +
cmp eax 2000h +
jnz loc_41EFEA  +
movsd xmm1 [ebp+arg_14] +
movaps xmm0 xmm1 +
andps xmm0 oword ptr ds:oword_4E1070 +
comisd xmm0 ds:qword_4E1068 +
jbe loc_41EFEA  +
lea eax [ebp+var_44] +
push eax  +
sub esp 8 +
movsd [esp+60h+var_60] xmm1 +
call sub_49A86C  +
mov eax [ebp+var_44] +
add esp 0Ch +
mov edi [ebp+var_1C] +
fstp  st +
cdq   +
xor eax edx +
sub eax edx +
imul ecx eax +
mov eax 14F8B589h +
imul  ecx +
sar edx 0Dh +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [ebp+var_20] +
add ecx esi +
add ecx 32h +
cmp ecx edx +
ja loc_41F004  +
cmp edi 10h +
mov [ebp+var_20] ecx +
lea eax [ebp+var_30] +
cmovnb eax [ebp+var_30] +
mov byte ptr [eax+ecx] 0 +
jmp loc_41F011  +
sub ecx edx +
push 0  +
push ecx  +
lea ecx [ebp+var_30] +
call loc_412E60  +
cmp [ebp+var_1C] 10h +
lea edi [ebp+var_30] +
movsd xmm0 [ebp+arg_14] +
cmovnb edi [ebp+var_30] +
sub esp 8 +
mov eax [ebp+var_38] +
mov esi [ebp+var_20] +
movsd qword ptr [esp] xmm0 +
push [ebp+var_34]  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push 0  +
push eax  +
push [ebp+var_3C]  +
call sub_41FEC0  +
add esp 10h +
push eax  +
push esi  +
push edi  +
call sub_41E4E0  +
cmp [ebp+var_1C] 10h +
lea ecx [ebp+var_30] +
mov esi [ebp+var_40] +
cmovnb ecx [ebp+var_30] +
push eax  +
push ecx  +
push [ebp+arg_10]  +
push [ebp+var_38]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+var_3C]  +
call loc_41FB00  +
mov ecx [ebp+var_1C] +
add esp 38h +
cmp ecx 10h +
jb loc_41F08B  +
inc ecx  +
push ecx  +
push [ebp+var_30]  +
lea ecx [ebp+var_30] +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLu  +
push eax  +
push edi  +
call sub_41FA70  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_41E4E0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41F710  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_18]  +
mov edi ecx +
push [ebp+arg_14]  +
push dword ptr [esi+14h]  +
push offset aLd  +
push eax  +
push edi  +
call sub_41FA70  +
add esp 10h +
push eax  +
lea eax [esp+6Ch+var_48] +
push 40h  +
push eax  +
call sub_41E4E0  +
add esp 14h +
push eax  +
lea eax [esp+64h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41F710  +
mov ecx [esp+80h+var_4] +
add esp 20h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLu_0  +
push eax  +
push edi  +
call sub_41FA70  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_41E4E0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41F710  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
and esp 0FFFFFFF8h +
sub esp 54h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+54h+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [esp+58h+var_50] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
push [ebp+arg_14]  +
mov edi ecx +
push dword ptr [esi+14h]  +
push offset aLd_0  +
push eax  +
push edi  +
call sub_41FA70  +
add esp 10h +
push eax  +
lea eax [esp+68h+var_48] +
push 40h  +
push eax  +
call sub_41E4E0  +
push eax  +
lea eax [esp+74h+var_48] +
push eax  +
push [ebp+arg_10]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
push edi  +
call loc_41F710  +
mov ecx [esp+90h+var_4] +
add esp 30h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4B9EB2  +
mov eax large fs:0 +
push eax  +
sub esp 44h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_48] ecx +
mov esi [ebp+arg_C] +
mov al [ebp+arg_10] +
mov ebx [ebp+arg_0] +
mov byte ptr [ebp+var_44] al +
test dword ptr [esi+14h] 4000h +
jnz loc_41F30D  +
movzx eax [ebp+arg_14] +
mov edx [ecx] +
push eax  +
push [ebp+var_44]  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call dword ptr [edx+24h]  +
jmp loc_41F48A  +
lea eax [ebp+var_50] +
mov ecx esi +
push eax  +
call sub_4112A0  +
push eax  +
mov [ebp+var_4] 0 +
call sub_420820  +
add esp 4 +
mov edi eax +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_4C] +
test ecx ecx +
jz loc_41F349  +
mov edx [ecx] +
call dword ptr [edx+8]  +
test eax eax +
jz loc_41F349  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp [ebp+arg_14] 0 +
lea eax [ebp+var_40] +
mov [ebp+var_4] 2 +
mov ecx edi +
push eax  +
jz loc_41F377  +
call sub_41F5E0  +
mov edi eax +
jmp loc_41F37E  +
call sub_41F600  +
mov edi eax +
lea eax [ebp+var_28] +
cmp eax edi +
jz loc_41F3B5  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_41F39A  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push edi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_41F3CE  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
cmp dword ptr [esi+24h] 0 +
mov ecx [ebp+var_18] +
jl loc_41F3EA  +
jg loc_41F3DF  +
cmp dword ptr [esi+20h] 0 +
jbe loc_41F3EA  +
mov edi [esi+20h] +
cmp edi ecx +
jbe loc_41F3EA  +
sub edi ecx +
jmp loc_41F3EC  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41F424  +
push edi  +
push [ebp+var_44]  +
lea eax [ebp+var_50] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
push [ebp+var_48]  +
call sub_41F620  +
mov ecx [ebp+var_18] +
add esp 18h +
xor edi edi +
mov edx [eax] +
mov [ebp+arg_4] edx +
mov eax [eax+4] +
mov [ebp+arg_8] eax +
jmp loc_41F42A  +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_4] +
cmp [ebp+var_14] 10h +
mov [ebp+var_4C] eax +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
push [ebp+var_4C]  +
lea eax [ebp+var_50] +
push edx  +
push eax  +
push [ebp+var_48]  +
call sub_41F690  +
push edi  +
push [ebp+var_44]  +
mov ecx [eax] +
mov [ebp+arg_4] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push ebx  +
push [ebp+var_48]  +
mov [ebp+arg_8] eax +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
call sub_41F620  +
mov eax [ebp+var_14] +
add esp 30h +
cmp eax 10h +
jb loc_41F48A  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push ecx  +
mov edx [ecx+14h] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41F4EC  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41F4F2  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+10h] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41F54C  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41F552  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx+8] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [edx] 0 +
jnz loc_41F5AC  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx edx +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41F5B2  +
sub ecx edi +
pop edi  +
push ecx  +
push edx  +
mov ecx esi +
call loc_4031A0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+1Ch]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+18h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_41F679  +
push ebx  +
mov bl [ebp+arg_10] +
test esi esi +
jz loc_41F66F  +
mov eax [esi+20h] +
cmp dword ptr [eax] 0 +
jz loc_41F65C  +
mov ecx [esi+30h] +
mov eax [ecx] +
test eax eax +
jle loc_41F65C  +
dec eax  +
mov [ecx] eax +
mov ecx [esi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov [edx] bl +
movzx eax bl +
jmp loc_41F667  +
mov edx [esi] +
mov ecx esi +
movzx eax bl +
push eax  +
call dword ptr [edx+0Ch]  +
mov esi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_41F673  +
mov byte ptr [ebp+arg_8] 1 +
sub edi 1 +
jnz loc_41F633  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
pop edi  +
mov [eax+4] esi +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+arg_C] +
test esi esi +
jz loc_41F6F2  +
push ebx  +
mov ebx [ebp+arg_10] +
test edi edi +
jz loc_41F6E7  +
mov eax [edi+20h] +
mov cl [ebx] +
mov byte ptr [ebp+arg_14+3] cl +
cmp dword ptr [eax] 0 +
jz loc_41F6D4  +
mov edx [edi+30h] +
mov eax [edx] +
test eax eax +
jle loc_41F6D4  +
dec eax  +
mov [edx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov al byte ptr [ebp+arg_14+3] +
mov [edx] al +
movzx eax al +
jmp loc_41F6DF  +
mov edx [edi] +
movzx eax cl +
mov ecx edi +
push eax  +
call dword ptr [edx+0Ch]  +
mov edi [ebp+arg_C] +
cmp eax 0FFFFFFFFh +
jnz loc_41F6EB  +
mov byte ptr [ebp+arg_8] 1 +
inc ebx  +
sub esi 1 +
jnz loc_41F6A3  +
pop ebx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov [eax+4] edi +
pop edi  +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9F0C  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebp+24h] +
mov eax [ebp+0Ch] +
mov esi [ebp+18h] +
mov ecx [ebp+20h] +
mov [ebp-58h] eax +
mov [ebp-54h] esi +
mov [ebp-44h] ecx +
test edi edi +
jz loc_41F765  +
mov al [ecx] +
cmp al 2Bh +
jz loc_41F75E  +
cmp al 2Dh +
jnz loc_41F765  +
mov ebx 1 +
jmp loc_41F767  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 0E00h +
cmp eax 800h +
jnz loc_41F793  +
lea eax [ebx+2] +
cmp eax edi +
ja loc_41F793  +
cmp byte ptr [ecx+ebx] 30h +
jnz loc_41F793  +
mov cl [ecx+ebx+1] +
cmp cl 78h +
jz loc_41F791  +
cmp cl 58h +
jnz loc_41F793  +
mov ebx eax +
lea eax [ebp-50h] +
mov ecx esi +
push eax  +
call sub_4112A0  +
push eax  +
mov dword ptr [ebp-4] 0 +
call sub_413600  +
add esp 4 +
mov [ebp-48h] eax +
mov dword ptr [ebp-4] 1 +
mov ecx [ebp-4Ch] +
test ecx ecx +
jz loc_41F7D0  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41F7D0  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
push 0  +
push edi  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_412D90  +
mov ecx [ebp-44h] +
lea eax [ebp-28h] +
mov dword ptr [ebp-4] 2 +
cmp dword ptr [ebp-14h] 10h +
mov edx [ebp-48h] +
cmovnb eax [ebp-28h] +
push eax  +
lea eax [edi+ecx] +
mov edx [edx] +
push eax  +
push ecx  +
mov ecx [ebp-48h] +
call dword ptr [edx+1Ch]  +
lea eax [ebp-50h] +
mov ecx esi +
push eax  +
call sub_4112A0  +
push eax  +
mov byte ptr [ebp-4] 3 +
call sub_420820  +
mov esi eax +
add esp 4 +
mov [ebp-44h] esi +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-4Ch] +
test ecx ecx +
jz loc_41F853  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41F853  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov ecx esi +
call sub_420090  +
mov byte ptr [ebp-4] 5 +
lea esi [ebp-40h] +
cmp dword ptr [ebp-2Ch] 10h +
cmovnb esi [ebp-40h] +
mov al [esi] +
cmp al 7Fh +
jz loc_41F8C2  +
test al al +
jle loc_41F8C2  +
mov ecx [ebp-44h] +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
cmp byte ptr [esi] 7Fh +
mov [ebp-44h] al +
jz loc_41F8C2  +
mov al [esi] +
test al al +
jle loc_41F8C2  +
movsx ecx al +
mov eax edi +
sub eax ebx +
cmp ecx eax +
jnb loc_41F8C2  +
push dword ptr [ebp-44h]  +
sub edi ecx +
lea ecx [ebp-28h] +
push 1  +
push edi  +
call loc_420560  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
cmovle eax esi +
mov esi eax +
cmp byte ptr [esi] 7Fh +
jnz loc_41F890  +
mov esi [ebp-54h] +
mov eax [ebp-18h] +
mov [ebp-44h] eax +
cmp dword ptr [esi+24h] 0 +
jl loc_41F8E4  +
jg loc_41F8D9  +
cmp dword ptr [esi+20h] 0 +
jbe loc_41F8E4  +
mov edi [esi+20h] +
cmp edi eax +
jbe loc_41F8E4  +
sub edi eax +
jmp loc_41F8E6  +
xor edi edi +
mov eax [esi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41F98E  +
cmp eax 100h +
jz loc_41F946  +
push edi  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-50h] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F620  +
mov edx eax +
lea ecx [ebp-28h] +
xor edi edi +
cmp dword ptr [ebp-14h] 10h +
push ebx  +
cmovnb ecx [ebp-28h] +
mov eax [edx] +
mov [ebp+10h] eax +
mov eax [edx+4] +
push ecx  +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push dword ptr [edx+4]  +
push dword ptr [edx]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
add esp 30h +
jmp loc_41F9B0  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push ebx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
mov ecx eax +
push edi  +
push dword ptr [ebp+1Ch]  +
mov eax [ecx] +
mov [ebp+10h] eax +
mov eax [ecx+4] +
mov [ebp+14h] eax +
lea eax [ebp-50h] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F620  +
add esp 30h +
xor edi edi +
jmp loc_41F9B0  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push ebx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-50h] +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
add esp 18h +
mov edx [eax] +
cmp dword ptr [ebp-14h] 10h +
mov ecx [ebp-44h] +
mov [ebp+10h] edx +
mov eax [eax+4] +
mov [ebp-48h] eax +
mov [ebp+14h] eax +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub ecx ebx +
push ecx  +
add eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp-48h]  +
lea eax [ebp-50h] +
push edx  +
push eax  +
push ebx  +
call sub_41F690  +
push edi  +
push dword ptr [ebp+1Ch]  +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov esi [ebp-58h] +
push esi  +
push ebx  +
mov [ebp+14h] eax +
call sub_41F620  +
mov eax [ebp-2Ch] +
add esp 30h +
cmp eax 10h +
jb loc_41FA24  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
mov ecx [ebp-14h] +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
cmp ecx 10h +
jb loc_41FA4B  +
inc ecx  +
push ecx  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-28h] +
call loc_403650  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test cl 20h +
jz loc_41FA8A  +
mov byte ptr [eax] 2Bh +
inc eax  +
test cl 8 +
jz loc_41FA93  +
mov byte ptr [eax] 23h +
inc eax  +
mov edi [ebp+arg_8] +
mov dl [edi] +
cmp dl 4Ch +
jz loc_41FAA1  +
mov [eax] dl +
jmp loc_41FAAC  +
mov word ptr [eax] 3649h +
add eax 2 +
mov byte ptr [eax] 34h +
mov edx ecx +
and edx 0E00h +
cmp edx 400h +
jnz loc_41FACB  +
mov cl 6Fh +
mov [eax+1] cl +
mov byte ptr [eax+2] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
cmp edx 800h +
jz loc_41FAE3  +
mov cl [edi+1] +
mov [eax+1] cl +
mov byte ptr [eax+2] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
shl cl 3 +
not cl  +
and cl 20h +
or cl 58h +
mov [eax+1] cl +
mov byte ptr [eax+2] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4B9F6C  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ecx [ebp+24h] +
mov eax [ebp+0Ch] +
mov esi [ebp+18h] +
mov edi [ebp+20h] +
mov [ebp-64h] eax +
mov [ebp-60h] esi +
mov [ebp-58h] edi +
mov [ebp-44h] ecx +
test ecx ecx +
jz loc_41FB58  +
mov al [edi] +
cmp al 2Bh +
jz loc_41FB51  +
cmp al 2Dh +
jnz loc_41FB58  +
mov ebx 1 +
jmp loc_41FB5A  +
xor ebx ebx +
mov eax [esi+14h] +
and eax 3000h +
cmp eax 3000h +
jz loc_41FB70  +
mov edx offset aEe +
jmp loc_41FB92  +
lea eax [ebx+2] +
mov edx offset aPp +
cmp eax ecx +
ja loc_41FB92  +
cmp byte ptr [edi+ebx] 30h +
jnz loc_41FB92  +
mov cl [edi+ebx+1] +
cmp cl 78h +
jz loc_41FB90  +
cmp cl 58h +
jnz loc_41FB92  +
mov ebx eax +
push edx  +
push edi  +
call sub_498760  +
mov [ebp-5Ch] eax +
mov eax 2Eh +
mov [ebp-48h] ax +
call sub_49A842  +
mov eax [eax] +
mov al [eax] +
mov [ebp-48h] al +
lea eax [ebp-48h] +
push eax  +
push edi  +
call sub_498760  +
add esp 10h +
mov edi eax +
lea eax [ebp-54h] +
mov ecx esi +
push eax  +
call sub_4112A0  +
push eax  +
mov dword ptr [ebp-4] 0 +
call sub_413600  +
add esp 4 +
mov [ebp-4Ch] eax +
mov dword ptr [ebp-4] 1 +
mov ecx [ebp-50h] +
test ecx ecx +
jz loc_41FBFD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FBFD  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
push 0  +
push dword ptr [ebp-44h]  +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call loc_412D90  +
mov edx [ebp-4Ch] +
lea eax [ebp-28h] +
mov ecx [ebp-58h] +
mov dword ptr [ebp-4] 2 +
cmp dword ptr [ebp-14h] 10h +
mov edx [edx] +
cmovnb eax [ebp-28h] +
push eax  +
mov eax [ebp-44h] +
add eax ecx +
push eax  +
push ecx  +
mov ecx [ebp-4Ch] +
call dword ptr [edx+1Ch]  +
lea eax [ebp-54h] +
mov ecx esi +
push eax  +
call sub_4112A0  +
push eax  +
mov byte ptr [ebp-4] 3 +
call sub_420820  +
mov esi eax +
add esp 4 +
mov [ebp-58h] esi +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-50h] +
test ecx ecx +
jz loc_41FC84  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_41FC84  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 2 +
push eax  +
mov ecx esi +
call sub_420090  +
mov byte ptr [ebp-4] 5 +
mov ecx esi +
mov eax [esi] +
mov eax [eax+10h] +
call eax  +
mov esi [ebp-44h] +
mov [ebp-4Ch] al +
cmp edi esi +
jz loc_41FCC6  +
mov ecx [ebp-58h] +
mov eax [ecx] +
mov eax [eax+0Ch] +
call eax  +
cmp dword ptr [ebp-14h] 10h +
mov cl al +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
cmp edi esi +
mov [eax+edi] cl +
cmovz edi [ebp-5Ch] +
lea esi [ebp-40h] +
cmp dword ptr [ebp-2Ch] 10h +
cmovnb esi [ebp-40h] +
cmp byte ptr [esi] 7Fh +
jz loc_41FD12  +
mov edi [ebp-60h] +
mov eax [ebp-18h] +
mov [ebp-5Ch] eax +
cmp dword ptr [edi+24h] 0 +
jl loc_41FD34  +
jg loc_41FD29  +
cmp dword ptr [edi+20h] 0 +
jbe loc_41FD34  +
mov esi [edi+20h] +
cmp esi eax +
jbe loc_41FD34  +
sub esi eax +
jmp loc_41FD36  +
xor esi esi +
mov eax [edi+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41FDDE  +
cmp eax 100h +
jz loc_41FD96  +
push esi  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-54h] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F620  +
mov ecx eax +
xor esi esi +
cmp dword ptr [ebp-14h] 10h +
push ebx  +
mov eax [ecx] +
mov [ebp+10h] eax +
mov eax [ecx+4] +
mov [ebp+14h] eax +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ecx+4]  +
lea eax [ebp-54h] +
push dword ptr [ecx]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
add esp 30h +
jmp loc_41FE00  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push ebx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-54h] +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
mov ecx eax +
push esi  +
push dword ptr [ebp+1Ch]  +
mov eax [ecx] +
mov [ebp+10h] eax +
mov eax [ecx+4] +
mov [ebp+14h] eax +
lea eax [ebp-54h] +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F620  +
add esp 30h +
xor esi esi +
jmp loc_41FE00  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
push ebx  +
cmovnb eax [ebp-28h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-54h] +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_41F690  +
add esp 18h +
mov edx [eax] +
cmp dword ptr [ebp-14h] 10h +
mov ecx [ebp-5Ch] +
mov [ebp+10h] edx +
mov eax [eax+4] +
mov [ebp-44h] eax +
mov [ebp+14h] eax +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
sub ecx ebx +
push ecx  +
add eax ebx +
mov ebx [ebp+8] +
push eax  +
push dword ptr [ebp-44h]  +
lea eax [ebp-54h] +
push edx  +
push eax  +
push ebx  +
call sub_41F690  +
push esi  +
push dword ptr [ebp+1Ch]  +
mov esi [ebp-64h] +
mov ecx [eax] +
mov [ebp+10h] ecx +
mov eax [eax+4] +
push eax  +
push ecx  +
push esi  +
push ebx  +
mov [ebp+14h] eax +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
call sub_41F620  +
mov eax [ebp-2Ch] +
add esp 30h +
cmp eax 10h +
jb loc_41FE74  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call loc_403650  +
mov ecx [ebp-14h] +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
cmp ecx 10h +
jb loc_41FE9B  +
inc ecx  +
push ecx  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-28h] +
call loc_403650  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
mov byte ptr [esi] 25h +
lea eax [esi+1] +
test dl 20h +
jz loc_41FED9  +
mov byte ptr [eax] 2Bh +
inc eax  +
test dl 10h +
jz loc_41FEE2  +
mov byte ptr [eax] 23h +
inc eax  +
mov cl [ebp+arg_8] +
mov word ptr [eax] 2A2Eh +
add eax 2 +
test cl cl +
jz loc_41FEF4  +
mov [eax] cl +
inc eax  +
mov ecx edx +
and ecx 3000h +
test dl 4 +
jz loc_41FF39  +
cmp ecx 2000h +
jz loc_41FF41  +
cmp ecx 3000h +
jnz loc_41FF1E  +
mov cl 41h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:45h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 2000h +
jnz loc_41FF4E  +
mov cl 66h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 3000h +
jnz loc_41FF63  +
mov cl 61h +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
cmp ecx 1000h +
setnz cl  +
lea ecx ds:65h[ecx*2] +
mov [eax] cl +
mov byte ptr [eax+1] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov edx [ebp+10h] +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
cmp eax [esi] +
jnz loc_41FFAE  +
cmp edx esi +
jnz loc_41FFAE  +
call sub_4200B0  +
mov eax [edi] +
pop edi  +
pop esi  +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp eax edx +
jz loc_42000F  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx eax +
jnz loc_41FFFB  +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41FFDC  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41FFF8  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_41FFD0  +
jmp loc_41FFF8  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_41FFF8  +
cmp eax [edx+8] +
jnz loc_41FFF8  +
mov eax edx +
mov [ebp+0Ch] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_41FFE5  +
mov [ebp+0Ch] edx +
push ecx  +
lea eax [ebp-4] +
mov ecx edi +
push eax  +
call loc_420130  +
mov eax [ebp+0Ch] +
cmp eax [ebp+10h] +
jnz loc_41FFB2  +
mov ecx [ebp+8] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
push dword ptr [esi+8]  +
mov dword ptr [esi] offset off_4D28E8 +
call sub_497EC6  +
push dword ptr [esi+10h]  +
call sub_497EC6  +
push dword ptr [esi+14h]  +
call sub_497EC6  +
add esp 0Ch +
mov dword ptr [esi] offset off_4CEE0C +
test [ebp+arg_0] 1 +
jz loc_42005E  +
push 18h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov edx [ecx] +
push [ebp+arg_0]  +
mov [ebp+var_4] 0 +
call dword ptr [edx+14h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4B76A0  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov ebx [eax+4] +
mov esi ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_420101  +
push dword ptr [esi+8]  +
mov ecx edi +
call sub_4206A0  +
mov esi [esi] +
push ebx  +
call sub_47BF70  +
add esp 4 +
mov ebx esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4200E4  +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
mov dword ptr [edi+4] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx esi +
push edi  +
mov [ebp-4] ecx +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_42018D  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42016C  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42018A  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420188  +
cmp esi [eax+8] +
jnz loc_420188  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_420175  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_42019A  +
mov edi [ebx+8] +
jmp loc_4201B2  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4201A7  +
mov edi ecx +
jmp loc_4201B2  +
mov edi [esi+8] +
cmp esi ebx +
jnz loc_420237  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebx+4] +
jnz loc_4201BE  +
mov [edi+4] edx +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_4201CD  +
mov [eax+4] edi +
jmp loc_4201D8  +
cmp [edx] ebx +
jnz loc_4201D5  +
mov [edx] edi +
jmp loc_4201D8  +
mov [edx+8] edi +
mov eax [ebp-4] +
mov esi [eax] +
cmp [esi] ebx +
jnz loc_420204  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_4201EB  +
mov ecx edx +
jmp loc_420202  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4201FF  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4201F5  +
mov eax [ebp-4] +
mov [esi] ecx +
mov esi [eax] +
cmp [esi+8] ebx +
jnz loc_420290  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_42021C  +
mov ecx edx +
mov [esi+8] ecx +
jmp loc_420290  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420232  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_420227  +
mov [esi+8] ecx +
jmp loc_420290  +
mov [ecx+4] esi +
mov eax [ebx] +
mov [esi] eax +
cmp esi [ebx+8] +
jnz loc_420247  +
mov edx esi +
jmp loc_420261  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_420253  +
mov [edi+4] edx +
mov [edx] edi +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+8] +
mov [eax+4] esi +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_420270  +
mov [eax+4] esi +
jmp loc_42027E  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_42027B  +
mov [eax] esi +
jmp loc_42027E  +
mov [eax+8] esi +
mov eax [ebx+4] +
mov [esi+4] eax +
mov al [ebx+0Ch] +
mov cl [esi+0Ch] +
mov [esi+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
mov esi [ebp-4] +
jnz loc_420406  +
mov eax [esi] +
cmp edi [eax+4] +
jz loc_420402  +
cmp byte ptr [edi+0Ch] 1 +
mov [ebp-0Ch] edx +
mov [ebp-8] edx +
mov [ebp-10h] edx +
jnz loc_420402  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_42037E  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_420319  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4202F1  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_420303  +
mov [eax+4] ecx +
jmp loc_420311  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_42030E  +
mov [eax] ecx +
jmp loc_420311  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4203EB  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_420338  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_4203E7  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_420446  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420362  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_42042B  +
mov [eax+4] esi +
jmp loc_42043A  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4203C8  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42039F  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_4203B1  +
mov [eax+4] ecx +
jmp loc_4203C0  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4203BE  +
mov [eax+8] ecx +
jmp loc_4203C0  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4203EB  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4204A1  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4204A1  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov ecx [ebp-0Ch] +
mov edx [edx+4] +
mov edi [ebp-8] +
cmp ecx [eax+4] +
jnz loc_4202B0  +
mov edi [ebp-10h] +
mov byte ptr [edi+0Ch] 1 +
push ebx  +
call sub_47BF70  +
mov eax [esi+4] +
add esp 4 +
mov ecx [ebp+0Ch] +
test eax eax +
jz loc_42041D  +
dec eax  +
mov [esi+4] eax +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_420438  +
mov [eax+8] esi +
jmp loc_42043A  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_42046A  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_420481  +
mov [eax+4] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_420494  +
mov [eax] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4204F4  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4204C7  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_4204DC  +
mov [eax+4] esi +
jmp loc_4204EA  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_4204E7  +
mov [eax] esi +
jmp loc_4204EA  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420517  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_420532  +
mov [eax+4] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_420548  +
mov [eax+8] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_420402  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx edx +
jb loc_420648  +
mov ebx [ebp+0Ch] +
mov eax ecx +
not eax  +
cmp eax ebx +
jbe loc_420652  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_42063F  +
cmp edi 0FFFFFFFEh +
ja loc_42065C  +
cmp [esi+14h] edi +
jnb loc_4205C1  +
push ecx  +
push edi  +
mov ecx esi +
call sub_4037F0  +
mov edx [ebp+8] +
test edi edi +
jz loc_42063F  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4205E8  +
mov ecx [esi] +
mov [ebp+0Ch] ecx +
jmp loc_4205EB  +
test edi edi +
jnz loc_4205B2  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_4205DC  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
***
mov [ebp+0Ch] esi +
cmp eax 10h +
jb loc_4205F4  +
mov ecx [esi] +
jmp loc_4205F6  +
mov ecx esi +
mov eax [esi+10h] +
sub eax edx +
jz loc_420615  +
push eax  +
mov eax [ebp+0Ch] +
add eax edx +
push eax  +
lea eax [ecx+edx] +
add eax ebx +
push eax  +
call loc_48B430  +
mov edx [ebp+8] +
add esp 0Ch +
push dword ptr [ebp+10h]  +
mov ecx esi +
push ebx  +
push edx  +
call sub_413370  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_420639  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_489E17  +
push offset aStringTooLong  +
call sub_489DF7  +
push offset aStringTooLong  +
call sub_489DF7  +
add esp 4 +
test eax eax +
jz loc_420680  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_420689  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_420692  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_4206D0  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_4206A0  +
mov esi [esi] +
push edi  +
call sub_47BF70  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4206B3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4B8DE8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
lea ecx [ebp+var_18] +
call sub_489E64  +
mov [ebp+var_4] 0 +
mov edi dword_4F6524 +
mov ebx dword_4F64F0 +
mov [ebp+var_10] ebx +
test edi edi +
jnz loc_42089B  +
push edi  +
lea ecx [ebp+var_14] +
call sub_489E64  +
cmp dword_4F6524 edi +
jnz loc_42088D  +
mov eax dword_4F5938 +
inc eax  +
mov dword_4F5938 eax +
mov dword_4F6524 eax +
lea ecx [ebp+var_14] +
call sub_489EBC  +
mov edi dword_4F6524 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
cmp edi [ecx+0Ch] +
jnb loc_4208B2  +
mov eax [ecx+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_420927  +
jmp loc_4208B4  +
xor esi esi +
cmp byte ptr [ecx+14h] 0 +
jz loc_4208CA  +
call sub_48A0A3  +
cmp edi [eax+0Ch] +
jnb loc_4208CE  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_420927  +
test ebx ebx +
jz loc_4208D6  +
mov esi ebx +
jmp loc_420927  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_420950  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_42090E  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_4CEDCC +
push offset unk_4EC098  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call sub_48D64F  +
mov esi [ebp+var_10] +
mov ecx esi +
mov dword_4F64F0 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_48A075  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_489EBC  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA010  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] 0 +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4209F3  +
cmp dword ptr [esi] 0 +
jnz loc_4209F3  +
push 18h  +
call sub_488C2D  +
mov edi eax +
add esp 4 +
mov [ebp+arg_0] edi +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov edx [ecx+4] +
test edx edx +
jnz loc_4209B1  +
mov ecx offset unk_4DE8C5 +
jmp loc_4209BB  +
mov ecx [edx+18h] +
test ecx ecx +
jnz loc_4209BB  +
lea ecx [edx+1Ch] +
push ecx  +
lea ecx [ebp+var_44] +
call sub_410870  +
mov [ebp+var_10] 1 +
mov dword ptr [edi+4] 0 +
push 1  +
mov [ebp+var_4] 2 +
mov ecx edi +
push eax  +
mov dword ptr [edi] offset off_4D28E8 +
call loc_420A10  +
lea ecx [ebp+var_44] +
mov [esi] edi +
call sub_410950  +
mov eax 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA030  +
mov eax large fs:0 +
push eax  +
sub esp 38h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov [ebp-14h] ebx +
call sub_49A842  +
mov esi eax +
lea eax [ebp-44h] +
push eax  +
mov [ebp-18h] esi +
call sub_48A7EF  +
add esp 4 +
mov dword ptr [ebx+8] 0 +
cmp byte ptr [ebp+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebp-4] 0 +
jz loc_420A7F  +
mov esi offset unk_4DE8C5 +
jmp loc_420A82  +
mov esi [esi+8] +
lea eax [ebp-44h] +
push eax  +
call sub_48A7EF  +
mov edi esi +
add esp 4 +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_420A93  +
sub edi ecx +
inc edi  +
push 1  +
push edi  +
call sub_49874B  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_420AB3  +
call sub_489DDA  +
test edi edi +
jz loc_420ACE  +
mov ecx edx +
sub ecx esi +
mov al [esi] +
lea esi [esi+1] +
mov [ecx+esi-1] al +
sub edi 1 +
jnz loc_420AC0  +
mov edi 6 +
mov [ebx+8] edx +
push 1  +
push edi  +
mov esi offset aFalse +
call sub_49874B  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_420AF1  +
call sub_489DDA  +
mov ecx edx +
sub ecx offset aFalse +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA050  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-18h] ecx +
mov dword ptr [ebp-4] 0 +
mov dl 1 +
mov ebx [ecx] +
mov esi ebx +
mov edi [ebp+10h] +
mov [ebp-14h] dl +
mov eax [ebx+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_420C1F  +
mov ecx [edi] +
push dword ptr [ebp+14h]  +
push edi  +
push esi  +
push 1  +
lea eax [ebp+10h] +
push eax  +
call loc_420CB0  +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_48D64F  +
mov ecx [ebp+8] +
mov [ecx] eax +
mov eax ecx +
mov byte ptr [ecx+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4] 0CCCCCCBh +
jnb loc_420EA6  +
push dword ptr [ebp+14h]  +
call sub_420EC0  +
inc dword ptr [edi+4]  +
mov ebx eax +
mov ecx [ebp+10h] +
mov [ebx+4] ecx +
mov edx [edi] +
cmp ecx edx +
jnz loc_420CE8  +
mov [edx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
jmp loc_420D04  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_420CFA  +
mov [ecx] ebx +
mov eax [edi] +
cmp ecx [eax] +
jnz loc_420D07  +
mov [eax] ebx +
jmp loc_420D07  +
mov [ecx+8] ebx +
mov eax [edi] +
cmp ecx [eax+8] +
jnz loc_420D07  +
mov [eax+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_420E92  +
push esi  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_420DD2  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_420DD8  +
cmp eax [ecx+8] +
jnz loc_420D73  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_420D4E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_420D60  +
mov [ecx+4] edx +
jmp loc_420D6E  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_420D6B  +
mov [ecx] edx +
jmp loc_420D6E  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_420D9D  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_420DB5  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_420E81  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_420DC8  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_420E81  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_420E81  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_420DF5  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_420E84  +
cmp eax [ecx] +
jnz loc_420E35  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_420E0E  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_420E20  +
mov [ecx+4] edx +
jmp loc_420E2F  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_420E2D  +
mov [ecx+8] edx +
jmp loc_420E2F  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_420E5F  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_420E71  +
mov [ecx+4] esi +
jmp loc_420E7F  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_420E7C  +
mov [ecx] esi +
jmp loc_420E7F  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_420D17  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push offset aMapSetTTooLong  +
call sub_489DF7  +
call sub_420EE0  +
push 14h  +
mov edi ecx +
call sub_488C2D  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_420EF8  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_420F03  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_420F0E  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA078  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
push 9  +
push offset aSessionid  +
call sub_474F10  +
mov edx [edi] +
add esp 8 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+24h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_421167  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_42115C  +
push 5  +
push offset aAppid  +
call sub_474F10  +
mov edx [edi] +
add esp 8 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+24h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jnz loc_420FC3  +
mov [ebp-34h] eax +
jmp loc_420FE5  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
mov [ebp-34h] eax +
test eax eax +
jz loc_42115C  +
push 0Ah  +
push offset aAppversion  +
call sub_474F10  +
mov edx [edi] +
add esp 8 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+24h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jnz loc_421010  +
mov [ebp-30h] eax +
jmp loc_421032  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
mov [ebp-30h] eax +
test eax eax +
jz loc_42115C  +
mov edx [ebx] +
mov ecx ebx +
call dword ptr [edx+14h]  +
mov edx eax +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp byte ptr [edx] 0 +
jnz loc_421056  +
xor ecx ecx +
jmp loc_421069  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_421060  +
sub ecx esi +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_4031A0  +
mov dword ptr [ebp-4] 0 +
mov ecx edi +
mov eax [edi] +
push 0  +
call dword ptr [eax+2Ch]  +
push 0Ah  +
push offset aLibversion  +
mov [ebp-38h] eax +
mov dword ptr [ebp-2Ch] 0 +
call sub_474F10  +
mov edx [edi] +
add esp 8 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+24h]  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_4210D8  +
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_42110E  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov [ebp-2Ch] eax +
call sub_41A750  +
push dword ptr [ebp-2Ch]  +
mov ecx eax +
push dword ptr [ebp-38h]  +
mov edx [eax] +
push 3Ch  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push ebx  +
call dword ptr [edx+18h]  +
mov ecx [edi+0Ch] +
mov esi eax +
cmp ecx esi +
jz loc_42111E  +
call sub_474AB0  +
test esi esi +
jz loc_421119  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_42111B  +
push esi  +
push offset off_4F2104  +
call loc_47A0A0  +
xor eax eax +
mov [edi+0Ch] eax +
cmp dword ptr [edi+0Ch] 0 +
jz loc_42112B  +
mov ecx edi +
call loc_421170  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_421140  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_403650  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
call sub_47C0A0  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp-8] esi +
mov ecx [esi+0Ch] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
call sub_47BCF0  +
mov ecx [esi+0Ch] +
add esp 4 +
mov ebx eax +
mov [ebp-4] ebx +
mov edx [ecx] +
call dword ptr [edx+18h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_42122B  +
nop   +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ebx eax +
test ebx ebx +
jnz loc_4211C1  +
xor esi esi +
jmp loc_4211E2  +
push 0  +
push offset off_4F1E28  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_42127F  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
push dword_4F64BC  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+4] +
call eax  +
test al al +
jz loc_421218  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov ebx [ebp-4] +
lea ecx [ebp-0Ch] +
mov [ebp-0Ch] eax +
push ecx  +
push 1  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+30h]  +
jmp loc_42121B  +
mov ebx [ebp-4] +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_4211B0  +
mov esi [ebp-8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+28h]  +
mov esi eax +
push 0  +
mov edi [esi] +
call sub_47C550  +
add esp 4 +
push eax  +
push 6  +
push offset aStatus  +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+2Ch]  +
mov ecx [ebp-8] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov esi eax +
push ebx  +
push 5  +
push offset aEvent  +
mov edi [esi] +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+2Ch]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push offset off_4F1E28  +
call loc_47A0A0  +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4E100C +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4212A8  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4212B4  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4212E0  +
test al 4 +
jnz loc_4212D5  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA0B7  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 10h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_4213A0  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_4E07B4 +
test edi edi +
jz loc_421343  +
mov ecx edi +
call sub_4795C0  +
mov ecx esi +
mov [esi+8] edi +
call sub_474AB0  +
push 0  +
mov byte ptr [ebp+var_4] 1 +
push 0  +
mov dword ptr [esi] offset off_4E100C +
call sub_478F50  +
add esp 8 +
test eax eax +
jz loc_421386  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov [esi+0Ch] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
xor eax eax +
mov [esi+0Ch] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [esp+arg_C] +
push eax  +
push 0  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call sub_41E490  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 2 +
push ecx  +
call sub_49A7FA  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
retn   +
***
test edi edi +
jz loc_421596  +
mov eax [edi+4] +
cmp eax 12h +
jz loc_421596  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_421591  +
mov ecx [esi+4] +
cmp ecx 12h +
jz loc_421591  +
cmp edi esi +
jz loc_421591  +
push ebx  +
cmp ecx 3 +
jnz loc_421495  +
cmp eax ecx +
jnz loc_421452  +
cmp dword ptr [edi+28h] 0 +
jz loc_421452  +
mov eax [edi+8] +
cmp eax [esi+8] +
jz loc_4214C3  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_421495  +
cmp dword ptr [ebx+4] 3 +
jnz loc_421495  +
mov eax [ebx+8] +
cmp eax [esi+8] +
jnz loc_421495  +
cmp ebx esi +
jz loc_421495  +
push ebp  +
mov ebp [esi+28h] +
test ebp ebp +
jz loc_421484  +
push ebp  +
call sub_44E660  +
push eax  +
push ebp  +
push ebx  +
call sub_424690  +
add esp 10h +
push esi  +
call sub_422CB0  +
mov eax [edi+10h] +
add esp 4 +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [esi+14h] +
mov [esi+14h] edi +
mov eax [edi+20h] +
cmp [esi+20h] eax +
jz loc_4214AD  +
push eax  +
push esi  +
call loc_425310  +
add esp 8 +
cmp ebx edi +
jz loc_42158B  +
mov eax [edi+4] +
cmp eax 3 +
jnz loc_4214EA  +
cmp dword ptr [edi+28h] 0 +
jz loc_4214EA  +
mov ebx [esi+28h] +
test ebx ebx +
jz loc_4214DB  +
push ebx  +
call sub_44E660  +
push eax  +
push ebx  +
push edi  +
call sub_424690  +
add esp 10h +
push esi  +
call sub_422CB0  +
add esp 4 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp dword ptr [esi+4] 2 +
jnz loc_42156D  +
cmp eax 1 +
jz loc_4214FB  +
pop ebx  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
cmp dword ptr [edi+2Ch] 0 +
jz loc_42153D  +
mov eax [esi+24h] +
test eax eax +
jnz loc_42150B  +
push eax  +
jmp loc_42150E  +
push dword ptr [eax+8]  +
push dword ptr [esi+8]  +
push edi  +
call sub_423710  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_421539  +
cmp ebx esi +
jz loc_42158B  +
cmp dword ptr [ebx+4] 10h +
jz loc_421539  +
push ebx  +
call sub_4262D0  +
push ebx  +
call sub_423070  +
add esp 8 +
cmp ebx esi +
jz loc_42158B  +
mov eax [edi+2Ch] +
test eax eax +
jnz loc_42154D  +
pop ebx  +
mov [edi+2Ch] esi +
mov eax esi +
pop esi  +
pop edi  +
retn   +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_421561  +
mov eax [ecx] +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jnz loc_421556  +
mov [eax+18h] esi +
mov [esi+1Ch] eax +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_42157F  +
pop ebx  +
mov [edi+0Ch] esi +
mov eax esi +
mov [edi+10h] esi +
pop esi  +
pop edi  +
retn   +
mov eax [edi+10h] +
mov [eax+18h] esi +
mov [esi+1Ch] eax +
mov [edi+10h] esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
retn   +
pop esi  +
xor eax eax +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
test edi edi +
jz loc_421673  +
cmp dword ptr [edi+4] 12h +
jz loc_421673  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_42166E  +
mov eax [esi+4] +
cmp eax 12h +
jz loc_42166E  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_4215DB  +
mov [edi+0Ch] esi +
jmp loc_421625  +
cmp eax 3 +
jnz loc_42161C  +
mov ecx [edi+10h] +
cmp [ecx+4] eax +
jnz loc_42161C  +
mov eax [esi+8] +
cmp eax [ecx+8] +
jnz loc_42161C  +
push dword ptr [esi+28h]  +
push ecx  +
call sub_424660  +
mov ecx [esi+18h] +
add esp 8 +
push esi  +
test ecx ecx +
jnz loc_421612  +
call sub_422CB0  +
mov eax [edi+10h] +
add esp 4 +
pop esi  +
pop edi  +
retn   +
mov esi ecx +
call sub_422CB0  +
add esp 4 +
mov eax [edi+10h] +
mov [eax+18h] esi +
mov [esi+1Ch] eax +
cmp dword ptr [esi+18h] 0 +
push ebx  +
lea ebx [esi+18h] +
jz loc_421650  +
nop   +
mov [esi+14h] edi +
mov eax [edi+20h] +
cmp [esi+20h] eax +
jz loc_421645  +
push eax  +
push esi  +
call loc_425310  +
add esp 8 +
mov esi [ebx] +
cmp dword ptr [esi+18h] 0 +
lea ebx [esi+18h] +
jnz loc_421630  +
mov [esi+14h] edi +
mov eax [edi+20h] +
pop ebx  +
cmp [esi+20h] eax +
jz loc_421666  +
push eax  +
push esi  +
call loc_425310  +
add esp 8 +
mov [edi+10h] esi +
mov eax esi +
pop esi  +
pop edi  +
retn   +
pop esi  +
xor eax eax +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
test ebx ebx +
jz loc_421789  +
cmp dword ptr [ebx+4] 12h +
jz loc_421789  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_421784  +
cmp dword ptr [edi+4] 12h +
jz loc_421784  +
cmp ebx edi +
jz loc_421784  +
push edi  +
call sub_4262D0  +
mov eax [edi+4] +
add esp 4 +
cmp eax 3 +
jnz loc_42172F  +
cmp [ebx+4] eax +
jnz loc_4216E3  +
push dword ptr [edi+28h]  +
push ebx  +
call sub_424660  +
push edi  +
call sub_422CB0  +
add esp 0Ch +
mov eax ebx +
pop edi  +
pop ebx  +
retn   +
mov ecx [ebx+18h] +
test ecx ecx +
jz loc_421742  +
cmp dword ptr [ecx+4] 3 +
jnz loc_421742  +
mov eax [ebx+8] +
cmp eax [ecx+8] +
jnz loc_421742  +
push esi  +
push dword ptr [edi+28h]  +
call sub_44E600  +
mov ecx [ebx+18h] +
push dword ptr [ecx+28h]  +
push eax  +
call sub_44E540  +
mov esi eax +
push esi  +
push dword ptr [ebx+18h]  +
call loc_424BC0  +
push esi  +
call off_4EE2F4  +
push edi  +
call sub_422CB0  +
mov eax [ebx+18h] +
add esp 1Ch +
pop esi  +
pop edi  +
pop ebx  +
retn   +
cmp eax 2 +
jnz loc_421742  +
push edi  +
push ebx  +
push ebx  +
call sub_4218A0  +
add esp 0Ch +
pop edi  +
pop ebx  +
retn   +
mov eax [ebx+20h] +
cmp [edi+20h] eax +
jz loc_421754  +
push eax  +
push edi  +
call loc_425310  +
add esp 8 +
mov eax [ebx+14h] +
mov [edi+14h] eax +
mov [edi+1Ch] ebx +
mov eax [ebx+18h] +
mov [edi+18h] eax +
mov [ebx+18h] edi +
mov eax [edi+18h] +
test eax eax +
jz loc_421770  +
mov [eax+1Ch] edi +
mov eax [edi+14h] +
test eax eax +
jz loc_42177F  +
cmp [eax+10h] ebx +
jnz loc_42177F  +
mov [eax+10h] edi +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
test ebx ebx +
jz loc_421896  +
cmp dword ptr [ebx+4] 12h +
jz loc_421896  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_421891  +
cmp dword ptr [edi+4] 12h +
jz loc_421891  +
cmp ebx edi +
jz loc_421891  +
push edi  +
call sub_4262D0  +
mov eax [edi+4] +
add esp 4 +
cmp eax 3 +
jnz loc_42183A  +
cmp [ebx+4] eax +
jnz loc_42180D  +
push esi  +
push dword ptr [edi+28h]  +
call sub_44E600  +
push dword ptr [ebx+28h]  +
push eax  +
call sub_44E540  +
mov esi eax +
push esi  +
push ebx  +
call loc_424BC0  +
push esi  +
call off_4EE2F4  +
push edi  +
call sub_422CB0  +
add esp 1Ch +
mov eax ebx +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov ecx [ebx+1Ch] +
test ecx ecx +
jz loc_42184F  +
cmp dword ptr [ecx+4] 3 +
jnz loc_42184F  +
mov eax [ebx+8] +
cmp eax [ecx+8] +
jnz loc_42184F  +
push dword ptr [edi+28h]  +
push ecx  +
call sub_424660  +
push edi  +
call sub_422CB0  +
mov eax [ebx+1Ch] +
add esp 0Ch +
pop edi  +
pop ebx  +
retn   +
cmp eax 2 +
jnz loc_42184F  +
push edi  +
push ebx  +
push dword ptr [ebx+1Ch]  +
call sub_4218A0  +
add esp 0Ch +
pop edi  +
pop ebx  +
retn   +
mov eax [ebx+20h] +
cmp [edi+20h] eax +
jz loc_421861  +
push eax  +
push edi  +
call loc_425310  +
add esp 8 +
mov eax [ebx+14h] +
mov [edi+14h] eax +
mov [edi+18h] ebx +
mov eax [ebx+1Ch] +
mov [edi+1Ch] eax +
mov [ebx+1Ch] edi +
mov eax [edi+1Ch] +
test eax eax +
jz loc_42187D  +
mov [eax+18h] edi +
mov eax [edi+14h] +
test eax eax +
jz loc_42188C  +
cmp [eax+0Ch] ebx +
jnz loc_42188C  +
mov [eax+0Ch] edi +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
mov edi [esp+arg_4] +
test edi edi +
jz loc_421963  +
cmp dword ptr [edi+4] 2 +
jnz loc_421963  +
mov esi [esp+arg_8] +
test esi esi +
jz loc_421963  +
cmp dword ptr [esi+4] 2 +
jnz loc_421963  +
mov ebx [esp+arg_0] +
test ebx ebx +
jz loc_4218E1  +
cmp dword ptr [ebx+4] 2 +
jnz loc_421963  +
mov eax [esi+24h] +
push ebp  +
test eax eax +
jnz loc_4218EC  +
push eax  +
jmp loc_4218EF  +
push dword ptr [eax+8]  +
push dword ptr [esi+8]  +
push dword ptr [edi+14h]  +
call sub_423710  +
mov ebp eax +
add esp 0Ch +
mov eax [edi+20h] +
cmp [esi+20h] eax +
jz loc_421911  +
push eax  +
push esi  +
call loc_425310  +
add esp 8 +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov [esi+1Ch] ebx +
test ebx ebx +
jz loc_421933  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
mov [ebx+18h] esi +
mov eax [esi+18h] +
test eax eax +
jz loc_421939  +
mov [eax+1Ch] esi +
jmp loc_421939  +
mov [esi+18h] edi +
mov [edi+1Ch] esi +
cmp dword ptr [esi+1Ch] 0 +
jnz loc_421949  +
mov eax [esi+14h] +
test eax eax +
jz loc_421949  +
mov [eax+2Ch] esi +
test ebp ebp +
jz loc_42195C  +
cmp dword ptr [ebp+4] 10h +
jz loc_42195C  +
push ebp  +
call loc_424D70  +
add esp 4 +
pop ebp  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
test esi esi +
jz loc_421A59  +
mov eax [esi+4] +
cmp eax 12h +
jz loc_421A59  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_421A54  +
cmp dword ptr [edi+4] 12h +
jz loc_421A54  +
cmp esi edi +
jz loc_421A54  +
cmp eax 2 +
jz loc_4219CB  +
mov eax [esi+14h] +
test eax eax +
jz loc_4219CB  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_4219CB  +
mov eax [eax+10h] +
test eax eax +
jz loc_4219CB  +
cmp dword ptr [eax+18h] 0 +
jnz loc_4219CB  +
mov esi eax +
jmp loc_4219DB  +
mov eax [esi+18h] +
test eax eax +
jz loc_4219DB  +
mov esi eax +
mov eax [esi+18h] +
test eax eax +
jnz loc_4219D2  +
push edi  +
call sub_4262D0  +
add esp 4 +
cmp dword ptr [esi+4] 3 +
jnz loc_421A0F  +
cmp dword ptr [edi+4] 3 +
jnz loc_421A0F  +
mov eax [esi+8] +
cmp eax [edi+8] +
jnz loc_421A0F  +
push dword ptr [edi+28h]  +
push esi  +
call sub_424660  +
push edi  +
call sub_422CB0  +
add esp 0Ch +
mov eax esi +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [edi+4] 2 +
jnz loc_421A23  +
push edi  +
push esi  +
push esi  +
call sub_4218A0  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
mov eax [esi+20h] +
cmp [edi+20h] eax +
jz loc_421A35  +
push eax  +
push edi  +
call loc_425310  +
add esp 8 +
mov eax [esi+14h] +
mov [edi+1Ch] esi +
mov dword ptr [edi+18h] 0 +
mov [edi+14h] eax +
mov [esi+18h] edi +
test eax eax +
jz loc_421A4F  +
mov [eax+10h] edi +
mov eax edi +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
push edi  +
mov edi [esp+10h] +
test edi edi +
jz loc_421BDB  +
mov ebx [esp+0Ch] +
test ebx ebx +
jz loc_421BDB  +
mov eax [edi+4] +
dec eax  +
push esi  +
cmp eax 14h +
ja loc_421BD5  +
movzx eax ds:byte_421C00[eax] +
jmp ds:off_421BE4[eax*4]  +
push dword ptr [edi+28h]  +
push ebx  +
call sub_45D7B0  +
add esp 8 +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
mov esi edi +
pop ebx  +
retn   +
***
mov esi [edi+0Ch] +
test esi esi +
jz loc_421BD5  +
cmp dword ptr [esi+4] 3 +
jnz loc_421B42  +
push dword ptr [esi+28h]  +
push ebx  +
call sub_45D7B0  +
jmp loc_421B49  +
push esi  +
push ebx  +
call loc_421A60  +
mov esi [esi+18h] +
add esp 8 +
test esi esi +
jnz loc_421B31  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push dword ptr [edi+8]  +
push dword ptr [edi+20h]  +
call sub_458150  +
add esp 8 +
test eax eax +
jnz loc_421B72  +
pop esi  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov esi [eax+0Ch] +
test esi esi +
jz loc_421BD5  +
push esi  +
push ebx  +
call loc_421A60  +
mov esi [esi+18h] +
add esp 8 +
test esi esi +
jnz loc_421B80  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
mov esi [edi+0Ch] +
test esi esi +
jz loc_421BD5  +
nop   +
mov eax [esi+4] +
cmp eax 1 +
jz loc_421BB2  +
cmp eax 3 +
jz loc_421BB2  +
cmp eax 4 +
jnz loc_421BBC  +
push esi  +
push ebx  +
call loc_421A60  +
add esp 8 +
mov esi [esi+18h] +
test esi esi +
jnz loc_421BA0  +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push dword ptr [edi+8]  +
push ebx  +
call sub_45D7B0  +
add esp 8 +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push ss  +
push offset aGrowingBuffer  +
call sub_4262B0  +
add esp 4 +
mov eax 2 +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
mov eax [edi] +
add eax [edi+4] +
push esi  +
push ebx  +
push eax  +
call loc_48B430  +
mov eax [edi] +
add esp 0Ch +
add [edi+4] esi +
mov ecx [edi+4] +
mov byte ptr [ecx+eax] 0 +
pop esi  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_421CCE  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
cmp dword ptr [esi+0Ch] 2 +
jz loc_421CC9  +
push edi  +
mov edi [esp+10h] +
test edi edi +
jnz loc_421CE3  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
cmp byte ptr [edi] 0 +
jz loc_421D1C  +
mov eax [esi+4] +
add eax 0Ah +
cmp eax [esi+8] +
jb loc_421D09  +
push eax  +
push esi  +
call sub_421E80  +
add esp 8 +
test eax eax +
jz loc_421D2A  +
mov edx [esi+4] +
mov al [edi] +
inc edi  +
mov ecx [esi] +
mov [edx+ecx] al +
inc dword ptr [esi+4]  +
cmp byte ptr [edi] 0 +
jnz loc_421CF0  +
mov eax [esi] +
mov ecx [esi+4] +
pop edi  +
pop esi  +
mov byte ptr [ecx+eax] 0 +
xor eax eax +
retn   +
***
push offset aGrowingBuffer  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
mov eax 2 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_421D5E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp dword ptr [esi+0Ch] 2 +
jz loc_421D59  +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jnz loc_421D73  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
push ebx  +
call sub_44E660  +
mov edi eax +
add esp 4 +
test edi edi +
jns loc_421D8A  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
jz loc_421DD9  +
mov eax [esi+4] +
add eax 2 +
add eax edi +
cmp eax [esi+8] +
jbe loc_421DBD  +
push eax  +
push esi  +
call sub_421E80  +
add esp 8 +
test eax eax +
jnz loc_421DBD  +
push offset aGrowingBuffer  +
call sub_4262B0  +
add esp 4 +
mov eax 2 +
pop edi  +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
add eax [esi] +
push edi  +
push ebx  +
push eax  +
call loc_48B430  +
mov eax [esi] +
add esp 0Ch +
add [esi+4] edi +
mov ecx [esi+4] +
mov byte ptr [ecx+eax] 0 +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_421DE9  +
retn   +
mov eax [eax] +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_421E19  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov dword ptr [esi+4] 0 +
call sub_458320  +
mov eax [eax] +
mov [esi+8] eax +
call sub_458300  +
push dword ptr [esi+8]  +
mov eax [eax] +
mov [esi+0Ch] eax +
call off_4EE2EC  +
add esp 4 +
mov [esi] eax +
test eax eax +
jnz loc_421E64  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
push esi  +
call off_4EE2F4  +
add esp 18h +
xor eax eax +
pop esi  +
retn   +
mov byte ptr [eax] 0 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
pop esi  +
retn   +
***
test edi edi +
jnz loc_421E8D  +
xor eax eax +
pop edi  +
retn   +
mov edx [edi+0Ch] +
cmp edx 2 +
jz loc_421E89  +
mov ecx [edi+8] +
mov eax [esp+arg_4] +
cmp eax ecx +
jnb loc_421EA7  +
mov eax 1 +
pop edi  +
retn   +
push esi  +
cmp edx 4 +
ja loc_421F08  +
jmp ds:off_422008[edx*4]  +
lea esi [ecx+ecx] +
test ecx ecx +
jnz loc_421EBE  +
lea esi [eax+0Ah] +
cmp eax esi +
jbe loc_421F0B  +
cmp esi 7FFFFFFFh +
ja loc_421EF6  +
add esi esi +
cmp eax esi +
ja loc_421EC2  +
jmp loc_421F0B  +
cmp dword ptr [edi+4] 1000h +
jnb loc_421EDF  +
mov esi eax +
jmp loc_421F0B  +
lea esi [ecx+ecx] +
cmp eax esi +
jbe loc_421F0B  +
cmp esi 7FFFFFFFh +
ja loc_421EF6  +
add esi esi +
cmp eax esi +
ja loc_421EE6  +
jmp loc_421F0B  +
push offset aGrowingBuffer  +
call sub_4262B0  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea esi [eax+0Ah] +
push ebx  +
cmp edx 3 +
jnz loc_421F82  +
mov edx [edi+10h] +
test edx edx +
jz loc_421F82  +
mov eax [edi] +
mov ebx eax +
sub ebx edx +
cmp ebx esi +
jbe loc_421F4A  +
push dword ptr [edi+4]  +
push eax  +
push edx  +
call loc_48B430  +
mov ecx [edi+10h] +
add esp 0Ch +
mov eax [edi+4] +
mov [edi] ecx +
mov byte ptr [ecx+eax] 0 +
mov eax 1 +
add [edi+8] ebx +
pop ebx  +
mov [edi+8] esi +
pop esi  +
pop edi  +
retn   +
lea eax [ebx+esi] +
push eax  +
push edx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_421F6F  +
push offset aGrowingBuffer  +
call sub_4262B0  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [edi+10h] eax +
add eax ebx +
pop ebx  +
mov [edi+8] esi +
mov [edi] eax +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov eax [edi] +
push esi  +
test eax eax +
jnz loc_421F96  +
call off_4EE2EC  +
add esp 4 +
mov ebx eax +
jmp loc_421FD8  +
sub ecx [edi+4] +
cmp ecx 64h +
jnb loc_421FAC  +
push eax  +
call off_4EE2F0  +
add esp 8 +
mov ebx eax +
jmp loc_421FD8  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_421FEA  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
push ebx  +
call loc_48C9C0  +
push dword ptr [edi]  +
call off_4EE2F4  +
mov eax [edi+4] +
add esp 10h +
mov byte ptr [ebx+eax] 0 +
test ebx ebx +
jz loc_421FEA  +
mov [edi] ebx +
mov eax 1 +
pop ebx  +
mov [edi+8] esi +
pop esi  +
pop edi  +
retn   +
push offset aGrowingBuffer  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_422037  +
cmp dword ptr [eax+0Ch] 2 +
jz locret_422037  +
mov [esp+arg_0] eax +
jmp sub_421D50  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_422057  +
cmp dword ptr [eax+0Ch] 2 +
jz locret_422057  +
mov [esp+arg_0] eax +
jmp loc_421CC0  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_42219C  +
cmp dword ptr [edi+0Ch] 2 +
jz loc_42219C  +
push esi  +
mov esi [esp+10h] +
push 22h  +
push esi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_42217B  +
push 27h  +
push esi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_422158  +
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
add esp 8 +
mov ecx esi +
cmp byte ptr [esi] 0 +
jz loc_422147  +
call sub_4262B0  +
add esp 4 +
inc esi  +
mov ecx esi +
jmp loc_422131  +
mov eax [edi+4] +
add eax [edi] +
push 6  +
push offset aQuot_0  +
push eax  +
call loc_48B430  +
mov eax [edi] +
add esp 0Ch +
add dword ptr [edi+4] 6 +
mov ecx [edi+4] +
mov byte ptr [ecx+eax] 0 +
inc esi  +
mov ecx esi +
jmp loc_422131  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz near ptr dword_4220C0  +
cmp ecx esi +
jz loc_422147  +
sub esi ecx +
push esi  +
push ecx  +
push edi  +
call near ptr dword_421C04+1Ch  +
add esp 0Ch +
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push offset asc_4BC884  +
push edi  +
call loc_421CC0  +
push esi  +
push edi  +
call sub_421D50  +
push offset asc_4BC884  +
push edi  +
call loc_421CC0  +
add esp 18h +
pop esi  +
pop edi  +
retn   +
***
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
push esi  +
push edi  +
call sub_421D50  +
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
add esp 18h +
pop esi  +
pop edi  +
retn   +
***
test ebp ebp +
jnz loc_4221AD  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [esp+arg_4] +
test ecx ecx +
jnz loc_4221B9  +
mov eax ebp +
pop ebp  +
retn   +
push edi  +
mov edi ebp +
lea edx [edi+1] +
nop   +
mov al [edi] +
inc edi  +
test al al +
jnz loc_4221C0  +
push esi  +
mov esi ecx +
sub edi edx +
lea edx [esi+1] +
nop   +
mov al [esi] +
inc esi  +
test al al +
jnz loc_4221D0  +
push ebx  +
mov ebx [esp+0Ch+arg_8] +
sub esi edx +
test ebx ebx +
jz loc_4221ED  +
lea eax [edi+2] +
add eax esi +
cmp [esp+0Ch+arg_C] eax +
jge loc_422220  +
lea eax [edi+2] +
add eax esi +
push eax  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_42221C  +
push offset aBuildingQname  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0Ch+arg_4] +
push esi  +
push ecx  +
push ebx  +
call loc_48C9C0  +
add esi ebx +
push edi  +
push ebp  +
lea eax [esi+1] +
mov byte ptr [esi] 3Ah +
push eax  +
call loc_48C9C0  +
add esp 18h +
mov byte ptr [esi+edi+1] 0 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+arg_0] +
xor edx edx +
test ecx ecx +
jz loc_422289  +
mov eax [ecx+4] +
dec eax  +
cmp eax 0Ch +
ja loc_422289  +
movzx eax ds:byte_422294[eax] +
jmp ds:off_42228C[eax*4]  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_422286  +
cmp dword ptr [ecx+4] 1 +
jnz loc_42227F  +
inc edx  +
mov ecx [ecx+18h] +
test ecx ecx +
jnz loc_422278  +
mov eax edx +
retn   +
xor eax eax +
retn   +
***
adc eax offset off_4EE2F8 +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+3Ch] +
test eax eax +
jz loc_4222FA  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+3Ch] eax +
mov eax [edi+48h] +
test eax eax +
jz loc_42230D  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+48h] eax +
cmp dword ptr [esp+10h] 0 +
mov eax [edi+4Ch] +
mov [esi+4Ch] eax +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax [edi+28h] +
mov [esi+28h] eax +
jz loc_4223B0  +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov eax [edi+2Ch] +
test eax eax +
jz loc_42236C  +
push eax  +
call loc_4223C0  +
add esp 4 +
mov [esi+2Ch] eax +
push esi  +
test eax eax +
jnz loc_42235D  +
call sub_4229F0  +
add esp 4 +
pop esi  +
xor eax eax +
pop edi  +
retn   +
***
push eax  +
call loc_425310  +
mov eax [esi+2Ch] +
add esp 8 +
mov [eax+14h] esi +
mov eax [edi+34h] +
test eax eax +
jz loc_42237F  +
push eax  +
call sub_422540  +
add esp 4 +
mov [esi+34h] eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_4223B0  +
push esi  +
push esi  +
push eax  +
call loc_425760  +
add esp 0Ch +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_4223B0  +
nop   +
cmp dword ptr [eax+18h] 0 +
jnz loc_4223A9  +
mov [esi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_4223A0  +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push esi  +
mov esi [esp+0Ch] +
xor ebx ebx +
test esi esi +
jnz loc_4223D1  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push dword ptr [esi+38h]  +
push dword ptr [esi+34h]  +
push dword ptr [esi+8]  +
push 0  +
call sub_423DA0  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_4223EF  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esi+30h] +
test eax eax +
jz loc_422402  +
push eax  +
call sub_457560  +
add esp 4 +
mov [edi+30h] eax +
mov eax [esi+24h] +
test eax eax +
jz loc_422415  +
push eax  +
call sub_451DE0  +
add esp 4 +
mov [edi+24h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_422428  +
push eax  +
call sub_451CD0  +
add esp 4 +
mov [edi+28h] eax +
mov eax [esi+2Ch] +
test eax eax +
jz loc_42243B  +
push eax  +
call sub_451A20  +
add esp 4 +
mov [edi+2Ch] eax +
mov eax [esi+3Ch] +
test eax eax +
jz loc_42244E  +
push eax  +
call sub_457560  +
add esp 4 +
mov [edi+3Ch] eax +
mov esi [esi+0Ch] +
test esi esi +
jz loc_422517  +
mov eax [esi+4] +
cmp eax 11h +
jnz loc_4224AA  +
mov eax [esi+30h] +
dec eax  +
cmp eax 4 +
ja loc_42250C  +
jmp ds:off_422520[eax*4]  +
mov eax [edi+30h] +
test eax eax +
jz loc_42250C  +
push dword ptr [esi+8]  +
push eax  +
call sub_450440  +
add esp 8 +
jmp loc_4224EA  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_42250C  +
push dword ptr [esi+8]  +
push eax  +
call sub_450440  +
add esp 8 +
jmp loc_4224EA  +
cmp eax 0Fh +
jnz loc_4224C0  +
push dword ptr [esi+30h]  +
push dword ptr [esi+8]  +
push edi  +
call sub_452D80  +
add esp 0Ch +
jmp loc_4224EA  +
cmp eax 10h +
jnz loc_4224D6  +
push dword ptr [esi+38h]  +
push dword ptr [esi+8]  +
push dword ptr [esi+3Ch]  +
push edi  +
call sub_452D50  +
jmp loc_4224E7  +
cmp eax 8 +
jnz loc_42250C  +
push 0  +
push 0  +
push 0  +
push esi  +
call loc_425480  +
add esp 10h +
test eax eax +
jz loc_42250C  +
test ebx ebx +
jnz loc_4224F7  +
mov [edi+0Ch] eax +
jmp loc_4224FA  +
mov [ebx+18h] eax +
mov [eax+1Ch] ebx +
mov ebx eax +
mov [eax+14h] edi +
mov dword ptr [eax+18h] 0 +
mov [edi+10h] eax +
mov esi [esi+18h] +
test esi esi +
jnz loc_422460  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi [esp+arg_0] +
xor ebx ebx +
push edi  +
xor edi edi +
test esi esi +
jz loc_42257B  +
cmp dword ptr [esi+4] 12h +
jz loc_422559  +
xor eax eax +
jmp loc_422569  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push 0  +
call sub_423F60  +
add esp 0Ch +
test edi edi +
jnz loc_422571  +
mov ebx eax +
jmp loc_422573  +
mov [edi] eax +
mov esi [esi] +
mov edi eax +
test esi esi +
jnz loc_42254F  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
test esi esi +
jnz loc_42259D  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
push edi  +
test ebx ebx +
jz loc_4225B7  +
cmp dword ptr [ebx+4] 1 +
jnz loc_4225EF  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [ebx+20h]  +
jmp loc_4225E1  +
mov eax [esp+8+arg_0] +
push 0  +
push dword ptr [esi+8]  +
test eax eax +
jz loc_4225C7  +
push eax  +
jmp loc_4225E1  +
mov eax [esi+14h] +
test eax eax +
jz loc_4225D3  +
push dword ptr [eax+20h]  +
jmp loc_4225E1  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4225DF  +
push dword ptr [eax+20h]  +
jmp loc_4225E1  +
push 0  +
call loc_423CA0  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_4225F5  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
mov [edi+14h] ebx +
mov eax [esi+24h] +
push ebp  +
test eax eax +
jz loc_422696  +
test ebx ebx +
jz loc_422696  +
push dword ptr [eax+0Ch]  +
push ebx  +
push dword ptr [ebx+20h]  +
call sub_424DE0  +
mov ebp eax +
add esp 0Ch +
mov eax [esi+24h] +
test ebp ebp +
jnz loc_42266B  +
push dword ptr [eax+0Ch]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+20h]  +
call sub_424DE0  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_42269D  +
mov edx [ebx+14h] +
xor eax eax +
mov ecx ebx +
test edx edx +
jz loc_422651  +
mov eax ecx +
mov ecx edx +
mov edx [ecx+14h] +
test edx edx +
jnz loc_422646  +
push dword ptr [ebp+0Ch]  +
cmp ecx [ebx+20h] +
push dword ptr [ebp+8]  +
cmovz ecx eax +
push ecx  +
call sub_423F60  +
add esp 0Ch +
mov [edi+24h] eax +
jmp loc_42269D  +
push dword ptr [eax+8]  +
push dword ptr [ebp+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_422682  +
mov [edi+24h] ebp +
jmp loc_42269D  +
push dword ptr [esi+24h]  +
push ebx  +
push dword ptr [ebx+20h]  +
call sub_424300  +
add esp 0Ch +
mov [edi+24h] eax +
jmp loc_42269D  +
mov dword ptr [edi+24h] 0 +
mov eax [esi+0Ch] +
pop ebp  +
test eax eax +
jz loc_4226D0  +
push edi  +
push dword ptr [edi+20h]  +
push eax  +
call loc_425760  +
add esp 0Ch +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
test eax eax +
jz loc_4226D0  +
cmp dword ptr [eax+18h] 0 +
jnz loc_4226C9  +
mov [edi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_4226C0  +
test ebx ebx +
jz loc_422729  +
cmp dword ptr [ebx+20h] 0 +
jz loc_422729  +
mov eax [esi+20h] +
test eax eax +
jz loc_422729  +
cmp dword ptr [eax+40h] 0 +
jz loc_422729  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_422729  +
push esi  +
push ecx  +
push eax  +
call sub_453220  +
add esp 0Ch +
test eax eax +
jz loc_422729  +
push 1  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+20h]  +
call sub_424AB0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_422729  +
push edi  +
push esi  +
push dword ptr [ebx+20h]  +
push 0  +
call sub_451500  +
push esi  +
call off_4EE2F4  +
add esp 14h +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
xor ebp ebp +
xor edi edi +
test ebx ebx +
jz loc_42274B  +
cmp dword ptr [ebx+4] 1 +
jz loc_42274B  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
mov esi [esp+0Ch+arg_4] +
test esi esi +
jz loc_42277B  +
push esi  +
push ebx  +
push 0  +
call sub_422590  +
add esp 0Ch +
test eax eax +
jz loc_422782  +
test edi edi +
jnz loc_42276C  +
mov ebp eax +
jmp loc_422772  +
mov [edi+18h] eax +
mov [eax+1Ch] edi +
mov esi [esi+18h] +
mov edi eax +
test esi esi +
jnz loc_422754  +
pop esi  +
pop edi  +
mov eax ebp +
pop ebp  +
pop ebx  +
retn   +
pop esi  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
test edi edi +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_425480  +
add esp 10h +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_422989  +
retn   +
mov eax [eax+0Ch] +
test eax eax +
jz locret_42299D  +
cmp dword ptr [eax+4] 1 +
jz locret_42299D  +
mov eax [eax+18h] +
test eax eax +
jnz loc_422990  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_4229D3  +
mov eax [ecx+4] +
dec eax  +
cmp eax 0Ch +
ja loc_4229D3  +
movzx eax ds:byte_4229E0[eax] +
jmp ds:off_4229D8[eax*4]  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_4229D3  +
cmp dword ptr [eax+4] 1 +
jz locret_4229D5  +
mov eax [eax+18h] +
test eax eax +
jnz loc_4229C6  +
xor eax eax +
retn   +
***
test esi esi +
jz loc_422B5F  +
cmp dword_4F2460 0 +
push edi  +
mov edi [esi+50h] +
jz loc_422A21  +
call sub_458380  +
cmp dword ptr [eax] 0 +
jz loc_422A21  +
call sub_458380  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esi+40h] +
test eax eax +
jz loc_422A31  +
push eax  +
call sub_452A00  +
add esp 4 +
mov eax [esi+44h] +
mov dword ptr [esi+40h] 0 +
test eax eax +
jz loc_422A48  +
push eax  +
call sub_452B00  +
add esp 4 +
push ebx  +
mov ebx [esi+30h] +
push ebp  +
mov ebp [esi+2Ch] +
mov dword ptr [esi+44h] 0 +
cmp ebp ebx +
jz loc_422A75  +
test ebx ebx +
jz loc_422A75  +
push ebx  +
call sub_4262D0  +
push ebx  +
mov dword ptr [esi+30h] 0 +
call sub_422B70  +
add esp 8 +
test ebp ebp +
jz loc_422A91  +
push dword ptr [esi+2Ch]  +
call sub_4262D0  +
push ebp  +
mov dword ptr [esi+2Ch] 0 +
call sub_422B70  +
add esp 8 +
mov eax [esi+0Ch] +
pop ebp  +
pop ebx  +
test eax eax +
jz loc_422AA3  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esi+34h] +
test eax eax +
jz loc_422AB3  +
push eax  +
call loc_423020  +
add esp 4 +
mov eax [esi+38h] +
test eax eax +
jz loc_422AD8  +
test edi edi +
jz loc_422ACC  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422AD8  +
push dword ptr [esi+38h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_422AFD  +
test edi edi +
jz loc_422AF1  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422AFD  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+3Ch] +
test eax eax +
jz loc_422B22  +
test edi edi +
jz loc_422B16  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422B22  +
push dword ptr [esi+3Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+48h] +
test eax eax +
jz loc_422B47  +
test edi edi +
jz loc_422B3B  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422B47  +
push dword ptr [esi+48h]  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_422B5E  +
push edi  +
call sub_44F150  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
mov edi [esp+arg_0] +
push edi  +
xor edi edi +
test esi esi +
jz loc_422E47  +
mov eax [esi+4] +
cmp eax 0Eh +
jnz loc_422CD4  +
push esi  +
call sub_422B70  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
cmp eax 12h +
jnz loc_422CE5  +
push esi  +
call sub_422FE0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
cmp eax 2 +
jnz loc_422CF6  +
push esi  +
call sub_423070  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
cmp dword_4F2460 edi +
jz loc_422D14  +
call sub_458380  +
cmp [eax] edi +
jz loc_422D14  +
call sub_458380  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_422D1E  +
mov edi [eax+50h] +
cmp dword ptr [esi+4] 11h +
jnz loc_422D6E  +
mov eax [esi+38h] +
test eax eax +
jz loc_422D49  +
test edi edi +
jz loc_422D3D  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422D49  +
push dword ptr [esi+38h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+34h] +
test eax eax +
jz loc_422D6E  +
test edi edi +
jz loc_422D62  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422D6E  +
push dword ptr [esi+34h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_422D84  +
cmp dword ptr [esi+4] 5 +
jz loc_422D84  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esi+4] +
cmp eax 1 +
jz loc_422D96  +
cmp eax 13h +
jz loc_422D96  +
cmp eax 14h +
jnz loc_422DA6  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_422DA6  +
push eax  +
call sub_423110  +
add esp 4 +
mov eax [esi+4] +
cmp eax 1 +
jz loc_422DE9  +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_422DE9  +
cmp eax 5 +
jz loc_422DE9  +
cmp eax 14h +
jz loc_422DE9  +
cmp eax 13h +
jz loc_422DE9  +
lea eax [esi+2Ch] +
cmp ecx eax +
jz loc_422DE9  +
test edi edi +
jz loc_422DDD  +
push ecx  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422DE9  +
push dword ptr [esi+28h]  +
call off_4EE2F4  +
add esp 4 +
mov ecx [esi+8] +
test ecx ecx +
jz loc_422E1B  +
mov eax [esi+4] +
cmp eax 3 +
jz loc_422E1B  +
cmp eax 8 +
jz loc_422E1B  +
test edi edi +
jz loc_422E0F  +
push ecx  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_422E1B  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
cmp eax 1 +
jz loc_422E2D  +
cmp eax 13h +
jz loc_422E2D  +
cmp eax 14h +
jnz loc_422E3D  +
mov eax [esi+30h] +
test eax eax +
jz loc_422E3D  +
push eax  +
call loc_423020  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
push edi  +
mov edi [esp+0Ch] +
xor ebx ebx +
test edi edi +
jz loc_422FCB  +
mov eax [edi+4] +
cmp eax 12h +
jnz loc_422E74  +
push edi  +
call loc_423020  +
add esp 4 +
pop edi  +
pop ebx  +
retn   +
***
cmp eax 9 +
jz loc_422FC2  +
cmp eax 15h +
jz loc_422FC2  +
cmp eax 0Dh +
jz loc_422FC2  +
mov eax [edi+20h] +
test eax eax +
jz loc_422E99  +
mov ebx [eax+50h] +
push ebp  +
push esi  +
pop ebx  +
retn   +
***
push edi  +
call sub_4229F0  +
add esp 4 +
pop edi  +
pop ebx  +
retn   +
***
test esi esi +
jz loc_423015  +
mov eax [esi+8] +
test eax eax +
jz loc_422FFA  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_42300B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_423065  +
push edi  +
pop edi  +
pop esi  +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jz loc_423100  +
mov eax [esi+20h] +
test eax eax +
jz loc_42308A  +
mov edi [eax+50h] +
cmp dword_4F2460 0 +
jz loc_4230AA  +
call sub_458380  +
cmp dword ptr [eax] 0 +
jz loc_4230AA  +
call sub_458380  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_4230C1  +
cmp dword ptr [esi+28h] 2 +
jnz loc_4230C1  +
push esi  +
push eax  +
call sub_4536E0  +
add esp 8 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4230D1  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_4230F6  +
test edi edi +
jz loc_4230EA  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4230F6  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_4231B1  +
push ebx  +
push edi  +
nop   +
mov eax [esi+20h] +
xor edi edi +
mov ebx [esi+18h] +
test eax eax +
jz loc_42312F  +
mov edi [eax+50h] +
cmp dword_4F2460 0 +
jz loc_42314F  +
call sub_458380  +
cmp dword ptr [eax] 0 +
jz loc_42314F  +
call sub_458380  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_423166  +
cmp dword ptr [esi+28h] 2 +
jnz loc_423166  +
push esi  +
push eax  +
call sub_4536E0  +
add esp 8 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_423176  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_42319B  +
test edi edi +
jz loc_42318F  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_42319B  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov esi ebx +
test ebx ebx +
jnz loc_423120  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_4231CB  +
xor eax eax +
retn   +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_4231DF  +
cmp dword ptr [eax+4] 0Eh +
jz locret_4231E2  +
mov eax [eax+18h] +
test eax eax +
jnz loc_4231D2  +
mov eax [ecx+2Ch] +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_423202  +
cmp dword ptr [eax+4] 12h +
jz loc_423202  +
mov eax [eax+10h] +
retn   +
xor eax eax +
retn   +
***
call sub_423220  +
add esp 8 +
retn   +
***
mov edx [esp+arg_4] +
or eax 0FFFFFFFFh +
cmp edx 5 +
jl loc_42322F  +
or eax eax +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jnz loc_42323D  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov ecx [esi+4] +
push edi  +
cmp ecx 1 +
jz loc_4232A2  +
cmp ecx 3 +
jz loc_4232A2  +
cmp ecx 8 +
jz loc_4232A2  +
cmp ecx 7 +
jz loc_4232A2  +
mov edi [esi+1Ch] +
test edi edi +
jz loc_423283  +
mov ecx [edi+4] +
cmp ecx 1 +
jz loc_423273  +
cmp ecx 3 +
jz loc_423273  +
cmp ecx 8 +
jz loc_423273  +
cmp ecx 7 +
jnz loc_423283  +
lea eax [edx+1] +
push eax  +
push edi  +
call sub_423220  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_4232F0  +
cmp dword ptr [ecx+4] 1 +
jnz loc_4232F0  +
pop edi  +
lea eax [edx+1] +
pop esi  +
mov [esp+arg_4] eax +
mov [esp+arg_0] ecx +
jmp sub_423220  +
mov eax 0FFFFh +
cmp [esi+38h] ax +
jnz loc_4232EC  +
cmp ecx 3 +
jnz loc_4232B9  +
mov eax [esi+34h] +
test eax eax +
jnz loc_4232E0  +
cmp ecx 1 +
jnz loc_4232C5  +
mov ecx [esi+0Ch] +
test ecx ecx +
jnz loc_4232D3  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_4232D3  +
mov ecx [esi+1Ch] +
test ecx ecx +
jz loc_4232EC  +
lea eax [edx+1] +
push eax  +
push ecx  +
call sub_423220  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_4232EC  +
cmp eax 0FFFFh +
jnz loc_4232F0  +
movzx eax word ptr [esi+38h] +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
mov eax [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
mov esi 0Ah +
mov [esp+0Ch] esi +
test eax eax +
jz loc_423411  +
cmp dword ptr [eax+4] 12h +
jz loc_423411  +
push ebp  +
cmp dword ptr [eax+4] 1 +
jnz loc_4233DD  +
mov ebp [eax+30h] +
test ebp ebp +
jz loc_4233DD  +
test ebx ebx +
jnz loc_42336B  +
lea eax ds:4[esi*4] +
push eax  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4233F4  +
mov dword ptr [ebx+edi*4] 0 +
xor esi esi +
test edi edi +
jle loc_423397  +
mov eax [ebx+esi*4] +
mov ecx [ebp+0Ch] +
mov eax [eax+0Ch] +
cmp ecx eax +
jz loc_423393  +
push eax  +
push ecx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_423393  +
inc esi  +
cmp esi edi +
jl loc_423371  +
jmp loc_423397  +
cmp esi edi +
jl loc_4233CA  +
mov esi [esp+10h] +
cmp edi esi +
jl loc_4233BD  +
add esi esi +
mov [esp+10h] esi +
lea eax ds:4[esi*4] +
push eax  +
push ebx  +
call off_4EE2F0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_4233F4  +
mov [ebx+edi*4] ebp +
inc edi  +
mov dword ptr [ebx+edi*4] 0 +
jmp loc_4233CE  +
mov esi [esp+10h] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_423345  +
mov eax [esp+1Ch] +
mov eax [eax+14h] +
mov [esp+1Ch] eax +
test eax eax +
jnz loc_423330  +
pop ebp  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ecx  +
retn   +
***
push offset aGettingNamespa  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call sub_423470  +
add esp 10h +
test eax eax +
jnz loc_42343F  +
retn   +
push eax  +
call sub_4236A0  +
add esp 4 +
retn   +
***
call sub_423730  +
add esp 8 +
test eax eax +
jnz loc_423465  +
retn   +
push eax  +
call sub_4236A0  +
add esp 4 +
retn   +
***
mov eax [esp+arg_0] +
sub esp 0Ch +
push ebx  +
test eax eax +
jz loc_423690  +
cmp dword ptr [eax+4] 1 +
jnz loc_423690  +
mov ebx [esp+10h+arg_4] +
test ebx ebx +
jz loc_423690  +
push ebp  +
mov ebp [esp+14h+arg_8] +
push esi  +
mov esi [eax+2Ch] +
test esi esi +
jz loc_4234C8  +
test ebp ebp +
jnz loc_4234D8  +
cmp dword ptr [esi+24h] 0 +
jnz loc_4234BD  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_42350F  +
mov esi [esi+18h] +
test esi esi +
jnz loc_4234A7  +
mov eax [esp+18h+arg_0] +
cmp [esp+18h+arg_C] 0 +
jnz loc_423518  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
cmp dword ptr [esi+24h] 0 +
jz loc_423506  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_423506  +
mov eax [esi+24h] +
mov eax [eax+8] +
cmp eax ebp +
jz loc_42350F  +
push ebp  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_42350F  +
mov esi [esi+18h] +
test esi esi +
jnz loc_4234D8  +
jmp loc_4234C4  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
mov esi [eax+20h] +
mov [esp+18h+var_4] esi +
push edi  +
test esi esi +
jz loc_4235E7  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_4235E7  +
mov ecx [eax+24h] +
xor edi edi +
mov [esp+1Ch+var_8] edi +
test ecx ecx +
jz loc_42357D  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_42357D  +
push ecx  +
call sub_44E600  +
push offset word_4BC858  +
push eax  +
call sub_44E540  +
mov ecx [esp+28h+arg_0] +
push dword ptr [ecx+8]  +
push eax  +
call sub_44E540  +
mov edx eax +
add esp 14h +
mov [esp+1Ch+var_8] edx +
test edx edx +
jz loc_4235E7  +
mov eax [esp+1Ch+arg_0] +
mov ecx edx +
mov [esp+1Ch+var_C] edx +
jmp loc_423584  +
mov ecx [eax+8] +
mov [esp+1Ch+var_C] ecx +
test ebp ebp +
jnz loc_4235C1  +
push ebp  +
push ebx  +
push ecx  +
push dword ptr [esi+2Ch]  +
call sub_452D50  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_423662  +
mov eax [esi+30h] +
test eax eax +
jz loc_423662  +
push edi  +
push ebx  +
push [esp+24h+var_C]  +
push eax  +
call sub_452D50  +
add esp 10h +
mov edi eax +
jmp loc_423662  +
push eax  +
push dword ptr [eax+20h]  +
call loc_423300  +
add esp 8 +
mov [esp+1Ch+arg_0] eax +
test eax eax +
jnz loc_4235F1  +
mov eax [esp+1Ch+var_8] +
test eax eax +
jz loc_4235E7  +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
mov esi eax +
cmp [eax] edi +
jz loc_423658  +
mov eax [esi] +
push ebp  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_42364C  +
mov eax [esi] +
push dword ptr [eax+0Ch]  +
mov eax [esp+20h+var_4] +
push ebx  +
push [esp+24h+var_C]  +
push dword ptr [eax+2Ch]  +
call sub_452D50  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_423654  +
mov eax [esp+1Ch+var_4] +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_42364C  +
mov eax [esi] +
push dword ptr [eax+0Ch]  +
push ebx  +
push [esp+24h+var_C]  +
push ecx  +
call sub_452D50  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_423654  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_4235F7  +
mov eax [esp+1Ch+arg_0] +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+1Ch+var_8] +
test eax eax +
jz loc_423674  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_4235E7  +
cmp dword ptr [edi+30h] 0 +
jz loc_4235E7  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_423706  +
mov ecx [eax+4] +
cmp ecx 2 +
jnz loc_4236F5  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_4236E8  +
cmp dword ptr [ecx+18h] 0 +
jnz loc_4236D6  +
mov edx [ecx+4] +
cmp edx 3 +
jz loc_4236CA  +
cmp edx 4 +
jnz loc_4236D6  +
push dword ptr [ecx+28h]  +
call sub_44E600  +
add esp 4 +
retn   +
push 1  +
push ecx  +
push dword ptr [eax+20h]  +
call sub_424AB0  +
add esp 0Ch +
test eax eax +
jnz locret_423708  +
mov [esp+arg_0] offset unk_4DE8C5 +
jmp sub_44E600  +
cmp ecx 10h +
jnz loc_423706  +
push dword ptr [eax+30h]  +
call sub_44E600  +
add esp 4 +
retn   +
xor eax eax +
retn   +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call sub_423470  +
add esp 10h +
retn   +
***
mov edi [esp+arg_0] +
test edi edi +
jz loc_4237B9  +
cmp dword ptr [edi+4] 1 +
jnz loc_4237B9  +
mov ebx [esp+arg_4] +
test ebx ebx +
jz loc_4237B9  +
push esi  +
mov esi [edi+2Ch] +
test esi esi +
jz loc_423767  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4237B3  +
mov esi [esi+18h] +
test esi esi +
jnz loc_423750  +
cmp dword_4EE000 0 +
jz loc_4237AD  +
mov esi [edi+20h] +
test esi esi +
jz loc_4237AD  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_4237AD  +
push ebx  +
push dword ptr [edi+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jnz loc_4237A7  +
mov eax [esi+30h] +
test eax eax +
jz loc_4237AD  +
push ebx  +
push dword ptr [edi+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jz loc_4237AD  +
cmp dword ptr [eax+30h] 0 +
jnz loc_4237AF  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
retn   +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_4237CB  +
xor eax eax +
retn   +
mov eax [ecx+4] +
cmp eax 3 +
jz loc_4237D8  +
cmp eax 4 +
jnz loc_4237C8  +
mov ecx [ecx+28h] +
test ecx ecx +
jz loc_4237FD  +
mov al [ecx] +
test al al +
jz loc_4237FD  +
cmp al 20h +
jz loc_4237F5  +
cmp al 9 +
jb loc_4237F1  +
cmp al 0Ah +
jbe loc_4237F5  +
cmp al 0Dh +
jnz loc_4237C8  +
mov al [ecx+1] +
inc ecx  +
test al al +
jnz loc_4237E5  +
mov eax 1 +
retn   +
***
call off_4EE2E8  +
test esi esi +
jnz loc_42389D  +
xor eax eax +
pop esi  +
retn   +
push edi  +
push 3Ch  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_4238C7  +
push offset aBuildingCharac  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push 3Ch  +
push 0  +
push edi  +
call sub_48CF40  +
mov eax [esp+10h+arg_0] +
add esp 0Ch +
mov dword ptr [edi+4] 5 +
mov [edi+20h] eax +
cmp byte ptr [esi] 26h +
jnz loc_423905  +
inc esi  +
push esi  +
call sub_44E660  +
add esp 4 +
cmp byte ptr [eax+esi-1] 3Bh +
jnz loc_4238F9  +
dec eax  +
push eax  +
push esi  +
call sub_44E8A0  +
add esp 8 +
jmp loc_42390E  +
push esi  +
call sub_44E600  +
add esp 4 +
mov [edi+8] eax +
cmp dword_4F2460 0 +
jz loc_423931  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423931  +
call sub_458520  +
push edi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423969  +
push offset aBuildingCommen  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_0] +
add esp 0Ch +
mov dword ptr [esi+4] 8 +
mov dword ptr [esi+8] offset aComment +
test eax eax +
jz loc_423998  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
cmp dword_4F2460 0 +
jz loc_4239B8  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_4239B8  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
push esi  +
push edi  +
mov edi offset a1_0 +
push 60h  +
cmovnz edi eax +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4239F9  +
push offset aBuildingDoc  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push 60h  +
push 0  +
push esi  +
call sub_48CF40  +
push edi  +
mov dword ptr [esi+4] 9 +
call sub_44E600  +
add esp 10h +
mov [esi+38h] eax +
test eax eax +
jnz loc_423A39  +
push offset aBuildingDoc  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
push esi  +
call off_4EE2F4  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
mov dword ptr [esi+28h] 0FFFFFFFFh +
mov dword ptr [esi+24h] 0FFFFFFFFh +
mov [esi+20h] esi +
mov dword ptr [esi+58h] 0 +
mov dword ptr [esi+5Ch] 20h +
mov dword ptr [esi+4Ch] 1 +
cmp dword_4F2460 0 +
jz loc_423A7F  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423A7F  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
add esp 4 +
test eax eax +
jz locret_423AA7  +
mov ecx [esp+arg_0] +
mov [eax+20h] ecx +
retn   +
***
mov edi [esp+arg_0] +
test edi edi +
jz loc_423ADC  +
mov eax [edi+50h] +
test eax eax +
jz loc_423ADC  +
push 0FFFFFFFFh  +
push [esp+4+arg_8]  +
push eax  +
call sub_44F4D0  +
push eax  +
push [esp+10h+arg_4]  +
call sub_423EE0  +
add esp 14h +
jmp loc_423AEC  +
push [esp+arg_8]  +
push [esp+4+arg_4]  +
call sub_423E60  +
add esp 8 +
mov esi eax +
test esi esi +
jz loc_423B34  +
mov eax [esp+arg_C] +
mov [esi+20h] edi +
test eax eax +
jz loc_423B34  +
push eax  +
push edi  +
call loc_425820  +
add esp 8 +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_423B16  +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_423B2E  +
nop   +
mov [eax+14h] esi +
mov eax [ecx] +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jnz loc_423B20  +
mov [eax+14h] esi +
mov [esi+10h] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+14h] +
push edi  +
push dword ptr [esp+14h]  +
call sub_423EE0  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_423BA9  +
mov ecx [esp+18h] +
mov eax [esp+0Ch] +
mov [esi+20h] eax +
test ecx ecx +
jz loc_423BCF  +
push ecx  +
push eax  +
call loc_425820  +
add esp 8 +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_423B81  +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_423B9E  +
mov [eax+14h] esi +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
test edi edi +
jz loc_423BD1  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_423BCF  +
push edi  +
push dword ptr [eax+50h]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_423BCF  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
test edi edi +
jnz loc_423BED  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push 3Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423C17  +
push offset aBuildingPi  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push ebx  +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov ebx [esp+14h+arg_0] +
add esp 0Ch +
mov dword ptr [esi+4] 7 +
test ebx ebx +
jz loc_423C49  +
mov eax [ebx+50h] +
test eax eax +
jz loc_423C49  +
push 0FFFFFFFFh  +
push edi  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_423C52  +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [esp+8+arg_8] +
test eax eax +
jz loc_423C69  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
mov [esi+20h] ebx +
cmp dword_4F2460 0 +
pop ebx  +
jz loc_423C8D  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423C8D  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
test ebx ebx +
jnz loc_423CAD  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423CD7  +
push offset aBuildingAttrib  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
push edi  +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+1Ch] +
add esp 0Ch +
mov dword ptr [esi+4] 2 +
test edi edi +
jz loc_423D09  +
mov eax [edi+50h] +
test eax eax +
jz loc_423D09  +
push 0FFFFFFFFh  +
push ebx  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_423D12  +
push ebx  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [esp+18h] +
mov [esi+20h] edi +
test eax eax +
jz loc_423D53  +
push eax  +
push edi  +
call loc_425820  +
add esp 8 +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_423D53  +
cmp dword ptr [eax+18h] 0 +
mov [eax+14h] esi +
jnz loc_423D4C  +
mov [esi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_423D40  +
cmp dword_4F2460 0 +
pop edi  +
jz loc_423D74  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423D74  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
add esp 4 +
test eax eax +
jz locret_423D97  +
mov ecx [esp+arg_0] +
mov [eax+20h] ecx +
retn   +
***
test edi edi +
jz loc_423DB3  +
cmp dword ptr [edi+30h] 0 +
jz loc_423DB3  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push 40h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423DDD  +
push offset aBuildingDtd  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+10h+arg_4] +
add esp 0Ch +
mov dword ptr [esi+4] 0Eh +
test eax eax +
jz loc_423E05  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [esp+4+arg_8] +
test eax eax +
jz loc_423E19  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+34h] eax +
mov eax [esp+4+arg_C] +
test eax eax +
jz loc_423E2D  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+38h] eax +
test edi edi +
jz loc_423E34  +
mov [edi+30h] esi +
mov [esi+20h] edi +
cmp dword_4F2460 0 +
jz loc_423E57  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423E57  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
cmp [esp+arg_4] 0 +
jnz loc_423E6A  +
xor eax eax +
retn   +
push esi  +
push 3Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423E93  +
push offset aBuildingNode  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
push [esp+10h+arg_4]  +
mov dword ptr [esi+4] 1 +
call sub_44E600  +
mov [esi+8] eax +
add esp 10h +
mov eax [esp+4+arg_0] +
mov [esi+24h] eax +
cmp dword_4F2460 0 +
jz loc_423EDA  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423EDA  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
***
test edi edi +
jnz loc_423EED  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push 3Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_423F17  +
push offset aBuildingNode  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+10h+arg_0] +
add esp 0Ch +
mov dword ptr [esi+4] 1 +
mov [esi+8] edi +
mov [esi+24h] eax +
cmp dword_4F2460 0 +
jz loc_423F55  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_423F55  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
test ebx ebx +
jz loc_423F73  +
cmp dword ptr [ebx+4] 1 +
jz loc_423F73  +
xor eax eax +
pop ebx  +
retn   +
push ebp  +
mov ebp [esp+4+arg_4] +
push esi  +
mov esi [esp+8+arg_8] +
test esi esi +
jz loc_423FAB  +
push offset aXml_1  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_423FAB  +
push offset aHttpWww_w3_org  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_423FAB  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
push 18h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_423FD7  +
push offset aBuildingNamesp  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [edi] xmm0 +
movq qword ptr [edi+10h] xmm0 +
mov dword ptr [edi+4] 12h +
test ebp ebp +
jz loc_423FF9  +
push ebp  +
call sub_44E600  +
add esp 4 +
mov [edi+8] eax +
test esi esi +
jz loc_424009  +
push esi  +
call sub_44E600  +
add esp 4 +
mov [edi+0Ch] eax +
test ebx ebx +
jz loc_424064  +
mov esi [ebx+30h] +
test esi esi +
jnz loc_42401E  +
mov [ebx+30h] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_42402A  +
cmp [edi+0Ch] eax +
jz loc_42406B  +
push dword ptr [edi+0Ch]  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_42406B  +
cmp [esi] eax +
jz loc_424062  +
nop   +
mov esi [esi] +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_42404E  +
cmp [edi+0Ch] eax +
jz loc_42406B  +
push dword ptr [edi+0Ch]  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_42406B  +
cmp [esi] eax +
jnz loc_424040  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push edi  +
call sub_422FE0  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax [esp+arg_8] +
test eax eax +
jnz loc_424089  +
retn   +
push 0  +
push [esp+4+arg_C]  +
push eax  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call loc_424100  +
add esp 14h +
retn   +
***
mov eax [esp+arg_8] +
test eax eax +
jnz loc_4240B9  +
retn   +
push 1  +
push [esp+4+arg_C]  +
push eax  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call loc_424100  +
add esp 14h +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jnz loc_4240E9  +
retn   +
push 0  +
push [esp+4+arg_8]  +
push eax  +
push 0  +
push [esp+10h+arg_0]  +
call loc_424100  +
add esp 14h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [esp+10h] +
xor ebx ebx +
test edi edi +
jz loc_424145  +
cmp dword ptr [edi+4] 1 +
jz loc_424145  +
cmp dword ptr [esp+20h] 1 +
jnz loc_42413F  +
mov eax [edi+20h] +
mov esi [esp+18h] +
test eax eax +
jz loc_424135  +
push esi  +
push dword ptr [eax+50h]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_42413F  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4241A1  +
cmp dword ptr [esp+20h] 1 +
jnz loc_424186  +
mov esi [esp+18h] +
test edi edi +
jz loc_42417C  +
mov eax [edi+20h] +
test eax eax +
jz loc_42417C  +
push esi  +
push dword ptr [eax+50h]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_424186  +
push esi  +
call off_4EE2F4  +
add esp 4 +
push offset aBuildingAttrib  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi+4] 2 +
mov [esi+14h] edi +
test edi edi +
jz loc_4241C2  +
mov ebx [edi+20h] +
mov [esi+20h] ebx +
cmp dword ptr [esp+20h] 0 +
mov eax [esp+14h] +
mov [esi+24h] eax +
jnz loc_4241FA  +
test ebx ebx +
jz loc_4241EC  +
mov eax [ebx+50h] +
test eax eax +
jz loc_4241EC  +
push 0FFFFFFFFh  +
push dword ptr [esp+1Ch]  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_4241FE  +
push dword ptr [esp+18h]  +
call sub_44E600  +
add esp 4 +
jmp loc_4241FE  +
mov eax [esp+18h] +
push ebp  +
mov ebp [esp+20h] +
mov [esi+8] eax +
test ebp ebp +
jz loc_424273  +
push ebp  +
call sub_44E1A0  +
add esp 4 +
test eax eax +
jnz loc_424241  +
push eax  +
push offset aStringIsNotInU  +
push ebx  +
push 517h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
test ebx ebx +
jz loc_424241  +
push offset aIso88591  +
call sub_44E600  +
add esp 4 +
mov [ebx+3Ch] eax +
push ebp  +
call sub_424500  +
add esp 4 +
test eax eax +
jz loc_424251  +
mov [eax+20h] ebx +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_424273  +
nop   +
cmp dword ptr [eax+18h] 0 +
mov [eax+14h] esi +
jnz loc_42426C  +
mov [esi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_424260  +
test edi edi +
jz loc_4242A1  +
mov eax [edi+2Ch] +
test eax eax +
jnz loc_424283  +
mov [edi+2Ch] esi +
jmp loc_4242A1  +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_42429B  +
mov eax [ecx] +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jnz loc_424290  +
mov [eax+18h] esi +
mov [esi+1Ch] eax +
test ebp ebp +
jz loc_4242CA  +
test edi edi +
jz loc_4242CA  +
push esi  +
push edi  +
push dword ptr [edi+20h]  +
call sub_453220  +
add esp 0Ch +
cmp eax 1 +
jnz loc_4242CA  +
push esi  +
push ebp  +
push dword ptr [edi+20h]  +
push 0  +
call sub_451500  +
add esp 10h +
cmp dword_4F2460 0 +
pop ebp  +
jz loc_4242EB  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_4242EB  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
sub esp 38h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+38h+var_4] eax +
push ebx  +
mov ebx [esp+3Ch+arg_4] +
push ebp  +
mov ebp [esp+40h+arg_0] +
push esi  +
mov esi 1 +
push edi  +
mov edi [esp+48h+arg_8] +
test ebx ebx +
jz loc_424413  +
cmp [ebx+4] esi +
jnz loc_424413  +
test edi edi +
jz loc_424413  +
cmp dword ptr [edi+4] 12h +
jnz loc_424413  +
push dword ptr [edi+8]  +
push ebx  +
push ebp  +
call loc_424F60  +
add esp 0Ch +
test eax eax +
jnz loc_424415  +
mov eax [edi+0Ch] +
test eax eax +
jnz loc_424378  +
push offset aDefault  +
lea eax [esp+4Ch+var_38] +
push 32h  +
push eax  +
call sub_4213C0  +
add esp 0Ch +
jmp loc_42438D  +
push eax  +
push offset a_20s  +
lea eax [esp+50h+var_38] +
push 32h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea eax [esp+48h+var_38] +
push eax  +
push ebx  +
push ebp  +
call sub_424DE0  +
add esp 0Ch +
test eax eax +
jz loc_4243EF  +
cmp esi 3E8h +
jg loc_424413  +
mov eax [edi+0Ch] +
push esi  +
test eax eax +
jnz loc_4243C6  +
push offset aDefaultD  +
lea eax [esp+50h+var_38] +
push 32h  +
push eax  +
call sub_4213C0  +
add esp 10h +
jmp loc_4243DB  +
push eax  +
push offset a_20sD  +
lea eax [esp+54h+var_38] +
push 32h  +
push eax  +
call sub_4213C0  +
add esp 14h +
lea eax [esp+48h+var_38] +
inc esi  +
push eax  +
push ebx  +
push ebp  +
call sub_424DE0  +
add esp 0Ch +
test eax eax +
jnz loc_4243A0  +
lea eax [esp+48h+var_38] +
push eax  +
push dword ptr [edi+8]  +
push ebx  +
call sub_423F60  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+38h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
xor eax eax +
mov ecx [esp+48h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
***
test edi edi +
jnz loc_42443D  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push 3Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_424467  +
push offset aBuildingRefere  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push ebx  +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov ebx [esp+14h+arg_0] +
add esp 0Ch +
mov dword ptr [esi+4] 5 +
mov [esi+20h] ebx +
cmp byte ptr [edi] 26h +
jnz loc_4244A6  +
inc edi  +
push edi  +
call sub_44E660  +
add esp 4 +
cmp byte ptr [eax+edi-1] 3Bh +
jnz loc_42449A  +
dec eax  +
push eax  +
push edi  +
call sub_44E8A0  +
add esp 8 +
jmp loc_4244AF  +
push edi  +
call sub_44E600  +
add esp 4 +
push eax  +
push ebx  +
mov [esi+8] eax +
call sub_458150  +
add esp 8 +
pop ebx  +
test eax eax +
jz loc_4244CD  +
mov ecx [eax+28h] +
mov [esi+28h] ecx +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
cmp dword_4F2460 0 +
jz loc_4244ED  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_4244ED  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_424529  +
push offset aBuildingText  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_0] +
add esp 0Ch +
mov dword ptr [esi+4] 3 +
mov dword ptr [esi+8] offset aText +
test eax eax +
jz loc_424558  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
cmp dword_4F2460 0 +
jz loc_424578  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_424578  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_424633  +
mov eax [ecx+4] +
dec eax  +
cmp eax 13h +
ja loc_424633  +
movzx eax ds:byte_424640[eax] +
jmp ds:off_424638[eax*4]  +
mov eax [ecx+18h] +
test eax eax +
jz loc_424633  +
cmp dword ptr [eax+4] 1 +
jz locret_424635  +
mov eax [eax+18h] +
test eax eax +
jnz loc_424626  +
xor eax eax +
retn   +
***
cmp [esp+arg_0] 0 +
jz locret_424685  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_424684  +
push esi  +
call sub_44E660  +
push eax  +
push esi  +
push [esp+10h+arg_0]  +
call sub_424690  +
add esp 10h +
pop esi  +
retn   +
***
test esi esi +
jz loc_42476A  +
push edi  +
mov edi [esp+4+arg_8] +
test edi edi +
jle loc_424769  +
mov eax [esi+4] +
dec eax  +
cmp eax 0Bh +
ja loc_424769  +
movzx eax ds:byte_424778[eax] +
push ebx  +
jmp ds:off_42476C[eax*4]  +
mov ebx [esi+10h] +
push edi  +
push [esp+0Ch+arg_4]  +
call sub_424580  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_424768  +
push edi  +
push esi  +
call sub_421400  +
add esp 8 +
cmp eax edi +
jnz loc_424768  +
test ebx ebx +
jz loc_424768  +
cmp [ebx+18h] edi +
jnz loc_424768  +
push edi  +
push ebx  +
call sub_426120  +
add esp 8 +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov ebx [esp+8+arg_4] +
test ebx ebx +
jz loc_424768  +
mov eax [esi+28h] +
push ebp  +
lea ebp [esi+2Ch] +
cmp eax ebp +
jz loc_424749  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_424734  +
mov ecx [ecx+50h] +
test ecx ecx +
jz loc_424734  +
push eax  +
push ecx  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_424749  +
push edi  +
push ebx  +
push dword ptr [esi+28h]  +
call sub_44E6F0  +
add esp 0Ch +
mov [esi+28h] eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push edi  +
push ebx  +
push dword ptr [esi+28h]  +
call loc_44E780  +
add esp 0Ch +
mov dword ptr [ebp+0] 0 +
mov dword ptr [esi+30h] 0 +
mov [esi+28h] eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push offset aHtml_0  +
push eax  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_4247FB  +
mov esi [esi+0Ch] +
jmp loc_42482B  +
push offset aHead  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_424814  +
mov esi [esi+0Ch] +
jmp loc_42482B  +
push offset aBase  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_424834  +
mov esi [esi+18h] +
test esi esi +
jnz near ptr dword_42477C+5Bh  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push offset aHref  +
push esi  +
call sub_423450  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
push ebp  +
test esi esi +
jz loc_424907  +
nop   +
mov eax [esi+4] +
cmp eax 11h +
jz loc_424937  +
cmp eax 1 +
jnz loc_4248F8  +
push dword_4EE000  +
push offset aHttpWww_w3_org  +
push offset aBase  +
push esi  +
call sub_423470  +
add esp 10h +
test eax eax +
jz loc_4248F8  +
push eax  +
call sub_4236A0  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4248F8  +
test edi edi +
jz loc_4248BA  +
push ebx  +
push edi  +
call loc_4587B0  +
add esp 8 +
mov ebp eax +
push edi  +
call off_4EE2F4  +
push ebx  +
call off_4EE2F4  +
add esp 8 +
test ebp ebp +
jz loc_424930  +
mov edi ebp +
jmp loc_4248BC  +
mov edi ebx +
push 7  +
push offset aHttp  +
push edi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_424947  +
push 6  +
push offset aFtp  +
push edi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_424947  +
push 4  +
push offset aUrn  +
push edi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_424947  +
mov esi [esi+14h] +
test esi esi +
jnz loc_424850  +
mov eax [esp+18h] +
test eax eax +
jz loc_424947  +
mov eax [eax+48h] +
test eax eax +
jz loc_424947  +
push eax  +
test edi edi +
jz loc_42493A  +
push edi  +
call loc_4587B0  +
push edi  +
mov esi eax +
call off_4EE2F4  +
add esp 0Ch +
mov eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push dword ptr [esi+40h]  +
call sub_44E600  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
pop ebp  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_42495D  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+4] +
dec eax  +
push edi  +
cmp eax 14h +
ja loc_4249FD  +
movzx eax ds:byte_424A24[eax] +
jmp ds:off_424A04[eax*4]  +
push 40h  +
call sub_45D8F0  +
add esp 4 +
jmp loc_4249BA  +
push esi  +
call sub_4236A0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
mov eax [esi+28h] +
test eax eax +
jz loc_4249FD  +
pop edi  +
pop esi  +
mov [esp-4+arg_0] eax +
jmp sub_44E600  +
push dword ptr [esi+8]  +
push dword ptr [esi+20h]  +
call sub_458150  +
add esp 8 +
test eax eax +
jz loc_4249FD  +
call sub_45D830  +
mov edi eax +
test edi edi +
jz loc_4249FD  +
push esi  +
push edi  +
call loc_421A60  +
push edi  +
call sub_45D9C0  +
push edi  +
mov esi eax +
call sub_45DAC0  +
add esp 10h +
mov eax esi +
pop edi  +
pop esi  +
retn   +
push dword ptr [esi+8]  +
call sub_44E600  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
mov eax [esi+28h] +
test eax eax +
jz loc_4249FD  +
pop edi  +
pop esi  +
mov [esp-4+arg_0] eax +
jmp sub_44E600  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_424A81  +
cmp dword ptr [esi+4] 12h +
jz loc_424A81  +
nop   +
push dword_4EE000  +
push offset aHttpWww_w3_org  +
push offset aLang  +
push esi  +
call sub_423470  +
add esp 10h +
test eax eax +
jz loc_424A7A  +
push eax  +
call sub_4236A0  +
add esp 4 +
test eax eax +
jnz loc_424A83  +
mov esi [esi+14h] +
test esi esi +
jnz loc_424A50  +
xor eax eax +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
xor eax eax +
test ecx ecx +
jz locret_424AA1  +
cmp dword ptr [ecx+4] 3 +
setz al  +
retn   +
***
mov esi [esp+8+arg_4] +
push edi  +
xor edi edi +
test esi esi +
jnz loc_424AC3  +
pop edi  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
mov eax [esi+14h] +
test eax eax +
jz loc_424AD7  +
cmp dword ptr [eax+4] 2 +
jnz loc_424AD7  +
mov edx 1 +
jmp loc_424AD9  +
xor edx edx +
mov ecx [esp+0Ch+arg_8] +
push ebx  +
push ebp  +
mov ebp [esp+14h+arg_0] +
mov [esp+14h+var_4] edx +
mov eax [esi+4] +
cmp eax 3 +
jz loc_424B59  +
cmp eax 4 +
jz loc_424B59  +
cmp eax 5 +
jnz loc_424BA1  +
test ecx ecx +
jz loc_424B21  +
push dword ptr [esi+8]  +
push ebp  +
call sub_458150  +
add esp 8 +
test eax eax +
jz loc_424B5D  +
push 1  +
push dword ptr [eax+0Ch]  +
push ebp  +
call sub_424AB0  +
add esp 0Ch +
jmp loc_424B84  +
push 1  +
lea eax [esp+18h+arg_4] +
mov word ptr [esp+18h+arg_4] 26h +
push eax  +
push edi  +
call sub_44E6F0  +
push dword ptr [esi+8]  +
push eax  +
call sub_44E540  +
push 1  +
lea ecx [esp+2Ch+arg_4] +
mov word ptr [esp+2Ch+arg_4] 3Bh +
push ecx  +
push eax  +
call sub_44E6F0  +
add esp 20h +
mov edi eax +
jmp loc_424B9D  +
test ecx ecx +
jz loc_424B6D  +
push dword ptr [esi+28h]  +
push edi  +
call sub_44E540  +
add esp 8 +
mov edi eax +
jmp loc_424B9D  +
push dword ptr [esi+28h]  +
push ebp  +
test edx edx +
jz loc_424B7C  +
call sub_457A50  +
jmp loc_424B81  +
call sub_457F90  +
add esp 8 +
mov ebx eax +
test ebx ebx +
jz loc_424B9D  +
push ebx  +
push edi  +
call sub_44E540  +
push ebx  +
mov edi eax +
call off_4EE2F4  +
add esp 0Ch +
mov ecx [esp+14h+arg_8] +
mov esi [esi+18h] +
mov edx [esp+14h+var_4] +
test esi esi +
jnz loc_424AE7  +
pop ebp  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_424CC3  +
mov eax [esi+4] +
dec eax  +
cmp eax 0Ah +
ja loc_424CC3  +
movzx eax ds:byte_424CD4[eax] +
jmp ds:off_424CC8[eax*4]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_424BF8  +
push eax  +
call loc_422E50  +
add esp 4 +
push dword ptr [esp+0Ch]  +
push dword ptr [esi+20h]  +
call loc_425820  +
add esp 8 +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_424C13  +
mov [esi+10h] eax +
pop esi  +
retn   +
***
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_424C2E  +
mov [eax+14h] esi +
mov eax [ecx] +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jnz loc_424C20  +
mov [eax+14h] esi +
mov [esi+10h] eax +
pop esi  +
retn   +
***
mov ecx [esi+28h] +
test ecx ecx +
jz loc_424C6C  +
lea eax [esi+2Ch] +
cmp ecx eax +
jz loc_424C6C  +
mov eax [esi+20h] +
test eax eax +
jz loc_424C60  +
mov eax [eax+50h] +
test eax eax +
jz loc_424C60  +
push ecx  +
push eax  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_424C6C  +
push dword ptr [esi+28h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_424C7C  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esp+0Ch] +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_424CAE  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
pop esi  +
retn   +
***
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp [esp+4+arg_8] +
push esi  +
push edi  +
test ebx ebx +
jz loc_424D44  +
mov edi [esp+0Ch+arg_C] +
cmp ebx ebp +
jz loc_424D48  +
mov eax [ebx+4] +
cmp eax 5 +
jz loc_424D59  +
cmp eax 6 +
jz loc_424D59  +
cmp eax 11h +
jz loc_424D59  +
cmp eax 1 +
jnz loc_424D3D  +
mov esi [ebx+30h] +
test esi esi +
jz loc_424D3D  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_424D25  +
test edi edi +
jz loc_424D52  +
test eax eax +
jz loc_424D37  +
test edi edi +
jz loc_424D37  +
push edi  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_424D52  +
mov esi [esi] +
test esi esi +
jnz loc_424D16  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_424CF4  +
cmp ebx ebp +
jnz loc_424D59  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 1 +
pop ebx  +
retn   +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_424DBD  +
mov edx [ecx+14h] +
test edx edx +
jz loc_424DBD  +
mov eax [edx+2Ch] +
cmp eax ecx +
jnz loc_424DA6  +
mov eax [ecx+18h] +
mov [edx+2Ch] eax +
mov eax [ecx+18h] +
test eax eax +
jz loc_424D9A  +
mov dword ptr [eax+1Ch] 0 +
push ecx  +
call sub_423070  +
add esp 4 +
xor eax eax +
retn   +
***
test eax eax +
jz loc_424DBD  +
or eax 0FFFFFFFFh +
retn   +
***
mov edx [ecx+18h] +
mov [eax+18h] edx +
test edx edx +
jz loc_424DCE  +
mov [edx+1Ch] eax +
push ecx  +
call sub_423070  +
add esp 4 +
xor eax eax +
retn   +
***
push ebp  +
mov ebp ebx +
test ebx ebx +
jz loc_424F53  +
cmp dword ptr [ebx+4] 12h +
jz loc_424F53  +
push esi  +
push edi  +
mov edi [esp+0Ch+arg_8] +
test edi edi +
jz loc_424EB2  +
push offset aXml_1  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_424EB2  +
mov eax [esp+0Ch+arg_0] +
test eax eax +
jnz loc_424E96  +
cmp dword ptr [ebx+4] 1 +
jnz loc_424E8F  +
push 18h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_424E51  +
push offset aSearchingNames  +
call sub_4262B0  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push offset aHttpWww_w3_org  +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+4] 12h +
call sub_44E600  +
push offset aXml_1  +
mov [esi+8] eax +
call sub_44E600  +
mov [esi+0Ch] eax +
add esp 8 +
mov eax [ebx+30h] +
mov [esi] eax +
mov [ebx+30h] esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [ebx+20h] +
test eax eax +
jz loc_424E4A  +
mov ecx [eax+34h] +
test ecx ecx +
jnz loc_424EAB  +
push eax  +
call sub_426180  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
pop ebp  +
mov eax ecx +
pop ebx  +
retn   +
mov eax [ebx+4] +
cmp eax 5 +
jz loc_424E4A  +
cmp eax 6 +
jz loc_424E4A  +
cmp eax 11h +
jz loc_424E4A  +
cmp eax 1 +
jnz loc_424F41  +
mov esi [ebx+30h] +
test esi esi +
jz loc_424F02  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_424EE4  +
test edi edi +
jnz loc_424EE0  +
cmp [esi+8] edi +
jnz loc_424E88  +
test eax eax +
jz loc_424EFC  +
test edi edi +
jz loc_424EFC  +
cmp dword ptr [esi+8] 0 +
jz loc_424EFC  +
push edi  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_424E88  +
mov esi [esi] +
test esi esi +
jnz loc_424ED0  +
cmp ebp ebx +
jz loc_424F41  +
mov esi [ebx+24h] +
test esi esi +
jz loc_424F41  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_424F25  +
test edi edi +
jnz loc_424F21  +
cmp [esi+8] edi +
jnz loc_424E88  +
test eax eax +
jz loc_424F41  +
test edi edi +
jz loc_424F41  +
cmp dword ptr [esi+8] 0 +
jz loc_424F41  +
push edi  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_424E88  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_424EB2  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
mov edi [esp+10h] +
mov ebp edi +
test edi edi +
jz loc_42510A  +
cmp dword ptr [edi+4] 12h +
jz loc_42510A  +
mov eax [esp+14h] +
test eax eax +
jz loc_42510A  +
push esi  +
push offset aHttpWww_w3_org  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_42502D  +
mov eax [esp+10h] +
test eax eax +
jnz loc_425013  +
cmp dword ptr [edi+4] 1 +
jnz loc_42500C  +
push 18h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_424FCF  +
push offset aSearchingNames  +
call sub_4262B0  +
add esp 4 +
pop esi  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
***
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push offset aHttpWww_w3_org  +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+4] 12h +
call sub_44E600  +
push offset aXml_1  +
mov [esi+8] eax +
call sub_44E600  +
add esp 8 +
mov [esi+0Ch] eax +
mov eax [edi+30h] +
mov [esi] eax +
mov eax esi +
mov [edi+30h] esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+20h] +
test eax eax +
jz loc_424FC9  +
mov ecx [eax+34h] +
test ecx ecx +
jnz loc_425027  +
push eax  +
call sub_426180  +
add esp 4 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
pop esi  +
pop edi  +
mov eax ecx +
pop ebp  +
retn   +
***
push ebx  +
xor ebx ebx +
cmp dword ptr [edi+4] 2 +
setz bl  +
mov eax [edi+4] +
cmp eax 5 +
jz loc_4250FC  +
cmp eax 6 +
jz loc_4250FC  +
cmp eax 11h +
jz loc_4250FC  +
cmp eax 1 +
jnz loc_4250F1  +
mov esi [edi+30h] +
test esi esi +
jz loc_4250AE  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_4250A8  +
push dword ptr [esp+1Ch]  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4250A8  +
test ebx ebx +
jz loc_425092  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4250A8  +
push dword ptr [esi+0Ch]  +
push edi  +
push ebp  +
push dword ptr [esp+20h]  +
call sub_424CE0  +
add esp 10h +
cmp eax 1 +
jz loc_425103  +
mov esi [esi] +
test esi esi +
jnz loc_425070  +
cmp ebp edi +
jz loc_4250F1  +
mov esi [edi+24h] +
test esi esi +
jz loc_4250F1  +
mov eax [esi+8] +
test eax eax +
jz loc_4250F1  +
push dword ptr [esp+1Ch]  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4250F1  +
test ebx ebx +
jz loc_4250DB  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4250F1  +
push dword ptr [esi+0Ch]  +
push edi  +
push ebp  +
push dword ptr [esp+20h]  +
call sub_424CE0  +
add esp 10h +
cmp eax 1 +
jz loc_425103  +
mov edi [edi+14h] +
test edi edi +
jnz loc_425040  +
pop ebx  +
pop esi  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
***
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
pop edi  +
xor eax eax +
pop ebp  +
retn   +
***
test esi esi +
jz loc_42513B  +
cmp dword ptr [esi+4] 12h +
jz loc_42513B  +
push edi  +
mov edi [esp+4+arg_4] +
cmp [esi+20h] edi +
jz loc_425133  +
push edi  +
push esi  +
call loc_425310  +
add esp 8 +
mov esi [esi+18h] +
test esi esi +
jnz loc_425124  +
pop edi  +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz locret_42515C  +
mov eax [ecx+4] +
cmp eax 1 +
jz loc_425155  +
cmp eax 2 +
jnz locret_42515C  +
mov eax [esp+arg_4] +
mov [ecx+24h] eax +
retn   +
***
test edi edi +
jz loc_425172  +
mov eax [edi+8] +
test eax eax +
jnz loc_425174  +
pop edi  +
retn   +
xor eax eax +
push ebx  +
mov ebx [esp+4+arg_0] +
push ebp  +
mov ebp [esp+8+arg_8] +
push esi  +
push 0  +
push eax  +
push ebp  +
push ebx  +
call sub_423470  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_425266  +
cmp dword ptr [esi+28h] 2 +
jnz loc_4251AF  +
push esi  +
push dword ptr [ebx+20h]  +
call sub_4536E0  +
add esp 8 +
mov dword ptr [esi+28h] 2 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4251BF  +
push eax  +
call loc_422E50  +
add esp 4 +
mov [esi+24h] edi +
mov edi [esp+0Ch+arg_C] +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
test edi edi +
jz loc_42524A  +
push edi  +
call sub_44E1A0  +
add esp 4 +
test eax eax +
jnz loc_425216  +
push eax  +
push offset aStringIsNotInU  +
push dword ptr [ebx+20h]  +
push 517h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
cmp dword ptr [ebx+20h] 0 +
jz loc_425216  +
push offset aIso88591  +
call sub_44E600  +
mov ecx [ebx+20h] +
add esp 4 +
mov [ecx+3Ch] eax +
mov ebp [ebx+20h] +
push edi  +
call sub_424500  +
add esp 4 +
test eax eax +
jz loc_425229  +
mov [eax+20h] ebp +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_42524A  +
cmp dword ptr [eax+18h] 0 +
mov [eax+14h] esi +
jnz loc_425243  +
mov [esi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_425237  +
cmp dword ptr [esi+28h] 2 +
jnz loc_42525F  +
push esi  +
push edi  +
push dword ptr [ebx+20h]  +
push 0  +
call sub_451500  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
push 0  +
push [esp+10h+arg_C]  +
push ebp  +
push edi  +
push ebx  +
call loc_424100  +
add esp 14h +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
***
push edi  +
test esi esi +
jz loc_425309  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_425309  +
cmp dword ptr [esi+4] 1 +
jnz loc_425309  +
push ebx  +
lea eax [esp+8+arg_0] +
push eax  +
push edi  +
call sub_425440  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_4252F5  +
push ebp  +
push [esp+0Ch+arg_0]  +
push edi  +
call sub_44E8A0  +
mov ebp eax +
push ebp  +
push esi  +
push dword ptr [esi+20h]  +
call sub_424DE0  +
add esp 14h +
mov [esp+0Ch+arg_0] eax +
test ebp ebp +
jz loc_4252DD  +
push ebp  +
call off_4EE2F4  +
mov eax [esp+10h+arg_0] +
add esp 4 +
pop ebp  +
test eax eax +
jz loc_4252F5  +
push [esp+8+arg_8]  +
push ebx  +
push eax  +
push esi  +
call sub_425160  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push [esp+8+arg_8]  +
push edi  +
push 0  +
push esi  +
call sub_425160  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push ebp  +
mov ebp [esp+8] +
test ebp ebp +
jz loc_425396  +
mov eax [ebp+4] +
cmp eax 12h +
jz loc_425396  +
push edi  +
mov edi [esp+10h] +
cmp [ebp+20h] edi +
jz loc_425395  +
cmp eax 1 +
jnz loc_425381  +
push ebx  +
mov ebx [ebp+2Ch] +
test ebx ebx +
jz loc_425380  +
push esi  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_425352  +
push ebx  +
push dword ptr [ebp+20h]  +
call sub_4536E0  +
add esp 8 +
mov esi [ebx+0Ch] +
mov [ebx+20h] edi +
test esi esi +
jz loc_425378  +
cmp dword ptr [esi+4] 12h +
jz loc_425378  +
cmp [esi+20h] edi +
jz loc_425371  +
push edi  +
push esi  +
call loc_425310  +
add esp 8 +
mov esi [esi+18h] +
test esi esi +
jnz loc_425362  +
mov ebx [ebx+18h] +
test ebx ebx +
jnz loc_425340  +
pop esi  +
pop ebx  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_425392  +
push edi  +
push eax  +
call sub_425110  +
add esp 8 +
mov [ebp+20h] edi +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
test esi esi +
jnz loc_4253AF  +
xor eax eax +
pop esi  +
retn   +
mov edx [esp+arg_0] +
mov [esi] ecx +
test edx edx +
jz loc_4253AB  +
mov al [edx] +
cmp al 3Ah +
jz loc_4253AB  +
test al al +
jz loc_4253D0  +
cmp al 3Ah +
jz loc_4253D0  +
mov al [ecx+edx+1] +
inc ecx  +
test al al +
jnz loc_4253C3  +
cmp byte ptr [ecx+edx] 0 +
push edi  +
lea edi [ecx+edx] +
jz loc_425435  +
push ecx  +
push edx  +
call sub_44E8A0  +
add esp 8 +
mov [esi] eax +
test eax eax +
jnz loc_425402  +
push offset aQnameSplit  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
lea eax [edi+1] +
push eax  +
call sub_44E600  +
add esp 4 +
test eax eax +
jnz loc_425437  +
push offset aQnameSplit  +
call sub_4262B0  +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_425435  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi] 0 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
xor ecx ecx +
test edx edx +
jnz loc_42544D  +
xor eax eax +
retn   +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_425473  +
mov al [edx] +
cmp al 3Ah +
jz loc_425473  +
test al al +
jz loc_42546D  +
cmp al 3Ah +
jz loc_42546D  +
mov al [ecx+edx+1] +
inc ecx  +
test al al +
jnz loc_425460  +
cmp byte ptr [ecx+edx] 0 +
jnz loc_425477  +
xor eax eax +
pop esi  +
retn   +
lea eax [edx+1] +
mov [esi] ecx +
add eax ecx +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jnz loc_42548D  +
xor eax eax +
pop edi  +
retn   +
***
mov eax [edi+4] +
add eax 0FFFFFFFEh +
cmp eax 13h +
ja loc_4254D3  +
movzx eax ds:byte_425748[eax] +
jmp ds:off_425734[eax*4]  +
push edi  +
push dword ptr [esp+14h]  +
push dword ptr [esp+14h]  +
call sub_422590  +
add esp 0Ch +
pop edi  +
retn   +
***
push edi  +
call sub_422540  +
add esp 4 +
pop edi  +
retn   +
***
push dword ptr [esp+14h]  +
push edi  +
call near ptr dword_422298+18h  +
add esp 8 +
pop edi  +
retn   +
***
push esi  +
push 3Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4254FD  +
push offset aCopyingNode  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebp  +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [edi+4] +
add esp 0Ch +
mov ebx [esp+18h] +
mov ebp [esp+1Ch] +
mov [esi+4] eax +
mov [esi+20h] ebx +
mov [esi+14h] ebp +
mov eax [edi+8] +
cmp eax offset aText +
jnz loc_425533  +
mov dword ptr [esi+8] offset aText +
jmp loc_42557C  +
cmp eax offset aTextnoenc +
jnz loc_425543  +
mov dword ptr [esi+8] offset aTextnoenc +
jmp loc_42557C  +
cmp eax offset aComment +
jnz loc_425553  +
mov dword ptr [esi+8] offset aComment +
jmp loc_42557C  +
test eax eax +
jz loc_42557C  +
test ebx ebx +
jz loc_425570  +
mov ecx [ebx+50h] +
test ecx ecx +
jz loc_425570  +
push 0FFFFFFFFh  +
push eax  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_425579  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+4] +
cmp eax 1 +
jz loc_4255AD  +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_4255A8  +
cmp eax 5 +
jz loc_4255A8  +
cmp eax 14h +
jz loc_4255A8  +
cmp eax 13h +
jz loc_4255A8  +
push ecx  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
jmp loc_4255B5  +
cmp eax 1 +
jnz loc_4255B5  +
mov ax [edi+38h] +
mov [esi+38h] ax +
test ebp ebp +
jz loc_4255EB  +
cmp dword_4F2460 0 +
jz loc_4255D9  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_4255D9  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
push esi  +
push ebp  +
call sub_421400  +
add esp 8 +
cmp eax esi +
jnz loc_42572D  +
mov ebp [esp+20h] +
test ebp ebp +
jz loc_425704  +
mov eax [edi+4] +
cmp eax 1 +
jz loc_425604  +
cmp eax 13h +
jnz loc_425617  +
mov eax [edi+30h] +
test eax eax +
jz loc_425617  +
push eax  +
call sub_422540  +
add esp 4 +
mov [esi+30h] eax +
mov eax [edi+24h] +
test eax eax +
jz loc_425677  +
push dword ptr [eax+0Ch]  +
push esi  +
push ebx  +
call sub_424DE0  +
add esp 0Ch +
test eax eax +
jnz loc_425674  +
mov eax [edi+24h] +
push dword ptr [eax+0Ch]  +
push edi  +
push dword ptr [edi+20h]  +
call sub_424DE0  +
add esp 0Ch +
test eax eax +
jz loc_425667  +
mov ecx [esi+14h] +
mov edx esi +
test ecx ecx +
jz loc_425659  +
nop   +
mov edx ecx +
mov ecx [edx+14h] +
test ecx ecx +
jnz loc_425650  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push edx  +
call sub_423F60  +
jmp loc_425671  +
push dword ptr [edi+24h]  +
push esi  +
push ebx  +
call sub_424300  +
add esp 0Ch +
mov [esi+24h] eax +
mov eax [edi+4] +
cmp eax 1 +
jz loc_425684  +
cmp eax 13h +
jnz loc_425698  +
mov eax [edi+2Ch] +
test eax eax +
jz loc_425698  +
push eax  +
push esi  +
call sub_422730  +
add esp 8 +
mov [esi+2Ch] eax +
cmp dword ptr [edi+4] 5 +
jnz loc_4256C0  +
test ebx ebx +
jz loc_4256AF  +
cmp [edi+20h] ebx +
jnz loc_4256AF  +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
jmp loc_425701  +
push dword ptr [esi+8]  +
push ebx  +
call sub_458150  +
add esp 8 +
mov [esi+0Ch] eax +
jmp loc_425701  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_425704  +
cmp ebp 2 +
jz loc_425704  +
push esi  +
push ebx  +
push eax  +
call loc_425760  +
add esp 0Ch +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_4256E3  +
mov [esi+10h] eax +
jmp loc_425704  +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jz loc_4256FE  +
mov [eax+14h] esi +
mov eax [ecx] +
cmp dword ptr [eax+18h] 0 +
lea ecx [eax+18h] +
jnz loc_4256F0  +
mov [eax+14h] esi +
mov [esi+10h] eax +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_42572B  +
cmp dword_4F2460 0 +
jz loc_42572B  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_42572B  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax esi +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ecx  +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+18h] +
xor eax eax +
xor ebp ebp +
mov [esp+10h] eax +
test edi edi +
jz loc_425810  +
mov ebx [esp+1Ch] +
cmp dword ptr [edi+4] 0Eh +
jnz loc_4257C8  +
test ebx ebx +
jz loc_4257FD  +
mov esi [ebx+2Ch] +
test esi esi +
jnz loc_4257B9  +
push edi  +
call loc_4223C0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_42580E  +
mov eax [esp+20h] +
push esi  +
mov [esi+20h] ebx +
mov [esi+14h] eax +
push eax  +
mov [ebx+2Ch] esi +
call sub_421400  +
add esp 8 +
jmp loc_4257DA  +
push esi  +
push dword ptr [esp+24h]  +
call sub_421400  +
add esp 8 +
jmp loc_4257DA  +
push 1  +
push dword ptr [esp+24h]  +
push ebx  +
push edi  +
call loc_425480  +
add esp 10h +
mov esi eax +
test esi esi +
jz loc_42580E  +
mov eax [esp+10h] +
test eax eax +
jnz loc_4257F1  +
mov [esi+1Ch] eax +
mov eax esi +
mov [esp+10h] eax +
jmp loc_4257FB  +
cmp ebp esi +
jz loc_4257FD  +
mov [ebp+18h] esi +
mov [esi+1Ch] ebp +
mov ebp esi +
mov edi [edi+18h] +
test edi edi +
jnz loc_425780  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 20h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1Ch] eax +
mov eax [esp+24h] +
push esi  +
mov esi [esp+2Ch] +
push edi  +
xor edi edi +
mov [esp+0Ch] eax +
mov dword ptr [esp+14h] 0 +
mov [esp+8] edi +
test esi esi +
jnz loc_425861  +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+1Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 20h +
retn   +
***
push ebp  +
push 0  +
call sub_45D8F0  +
mov ebp eax +
add esp 4 +
mov [esp+14h] ebp +
test ebp ebp +
jnz loc_425888  +
pop ebp  +
pop edi  +
pop esi  +
mov ecx [esp+1Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 20h +
retn   +
***
push ebx  +
push 4  +
push ebp  +
call sub_45E040  +
add esp 8 +
mov ebx esi +
cmp byte ptr [esi] 0 +
jz loc_425BA6  +
nop   +
cmp byte ptr [esi] 26h +
jnz loc_425B8D  +
xor edi edi +
cmp esi ebx +
jz loc_4258C6  +
mov eax esi +
sub eax ebx +
push eax  +
push ebx  +
push ebp  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_425A47  +
mov al [esi+1] +
cmp al 23h +
jnz loc_4259C8  +
cmp byte ptr [esi+2] 78h +
jnz loc_425935  +
mov bl [esi+3] +
add esi 3 +
cmp bl 3Bh +
jz loc_425986  +
lea eax [ebx-30h] +
cmp al 9 +
ja loc_4258F5  +
add edi 0FFFFFFFDh +
shl edi 4 +
jmp loc_425911  +
lea eax [ebx-61h] +
cmp al 5 +
ja loc_425904  +
shl edi 4 +
add edi 0FFFFFFA9h +
jmp loc_425911  +
lea eax [ebx-41h] +
cmp al 5 +
ja loc_425920  +
shl edi 4 +
add edi 0FFFFFFC9h +
inc esi  +
movzx eax bl +
add edi eax +
mov bl [esi] +
cmp bl 3Bh +
jnz loc_4258E6  +
jmp loc_425986  +
push 0  +
push dword ptr [esp+18h]  +
push 514h  +
call sub_426200  +
add esp 0Ch +
jmp loc_42597F  +
cmp al 23h +
jnz loc_4259C8  +
mov bl [esi+2] +
add esi 2 +
cmp bl 3Bh +
jz loc_425986  +
lea eax [ebx-30h] +
cmp al 9 +
ja loc_425965  +
inc esi  +
movzx eax bl +
lea edi [edi+edi*4] +
lea edi [edi-18h] +
mov bl [esi] +
lea edi [eax+edi*2] +
cmp bl 3Bh +
jnz loc_425948  +
jmp loc_425986  +
push 0  +
push offset aInvalidDecimal  +
push dword ptr [esp+1Ch]  +
push 515h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor edi edi +
cmp bl 3Bh +
jnz loc_425987  +
inc esi  +
mov ebx esi +
test edi edi +
jz loc_425B8E  +
lea eax [esp+20h] +
push edi  +
push eax  +
call sub_45B520  +
add esp 8 +
cmp eax 0Ah +
jnb loc_425C0F  +
mov byte ptr [esp+eax+20h] 0 +
lea eax [esp+20h] +
push eax  +
push ebp  +
call sub_45D7B0  +
add esp 8 +
test eax eax +
jnz loc_425A47  +
jmp loc_425B8E  +
mov al [esi+1] +
inc esi  +
mov ecx esi +
test al al +
jz loc_4259DE  +
cmp al 3Bh +
jz loc_4259F9  +
mov al [esi+1] +
inc esi  +
test al al +
jnz loc_4259D2  +
push ecx  +
push offset aUnterminatedEn  +
push dword ptr [esp+1Ch]  +
push 516h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
jmp loc_425A47  +
cmp byte ptr [esi] 0 +
jz loc_4259DE  +
cmp esi ecx +
jz loc_425B88  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
mov ebp eax +
push ebp  +
push dword ptr [esp+20h]  +
call sub_458150  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jz loc_425A67  +
cmp dword ptr [ebx+30h] 6 +
jnz loc_425A67  +
push dword ptr [ebx+28h]  +
push dword ptr [esp+1Ch]  +
call sub_45D7B0  +
add esp 8 +
test eax eax +
jz loc_425B7A  +
mov ebp [esp+18h] +
push ebp  +
call sub_45DAC0  +
mov ecx [esp+30h] +
add esp 4 +
mov eax [esp+1Ch] +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 20h +
retn   +
***
push dword ptr [esp+18h]  +
call sub_45DCD0  +
add esp 4 +
test eax eax +
jnz loc_425B12  +
push 3Ch  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_425AA1  +
push offset aBuildingText  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
jmp loc_425AE3  +
push 3Ch  +
push 0  +
push edi  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [edi+4] 3 +
mov dword ptr [edi+8] offset aText +
cmp dword_4F2460 0 +
jz loc_425ADC  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_425ADC  +
call sub_458520  +
push edi  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esp+14h] +
mov [edi+20h] eax +
push dword ptr [esp+18h]  +
call sub_45D9C0  +
mov [edi+28h] eax +
add esp 4 +
mov eax [esp+10h] +
test eax eax +
jnz loc_425B04  +
mov [esp+1Ch] edi +
mov [esp+10h] edi +
jmp loc_425B12  +
push edi  +
push eax  +
call sub_421680  +
add esp 8 +
mov [esp+10h] eax +
push ebp  +
push dword ptr [esp+18h]  +
call sub_424430  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_425BE9  +
test ebx ebx +
jz loc_425B5A  +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_425B5A  +
push dword ptr [edi+28h]  +
push dword ptr [esp+18h]  +
call loc_425820  +
add esp 8 +
mov [ebx+0Ch] eax +
mov dword ptr [ebx+44h] 1 +
test eax eax +
jz loc_425B5A  +
mov [eax+14h] ebx +
mov eax [eax+18h] +
test eax eax +
jnz loc_425B50  +
mov eax [esp+10h] +
test eax eax +
jnz loc_425B6C  +
mov [esp+1Ch] edi +
mov [esp+10h] edi +
jmp loc_425B7A  +
push edi  +
push eax  +
call sub_421680  +
add esp 8 +
mov [esp+10h] eax +
push ebp  +
call off_4EE2F4  +
mov ebp [esp+1Ch] +
add esp 4 +
inc esi  +
mov ebx esi +
jmp loc_425B8E  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_4258A0  +
mov edi [esp+10h] +
cmp esi ebx +
jnz loc_425BA6  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_425BB3  +
sub esi ebx +
push esi  +
push ebx  +
push ebp  +
call sub_45D320  +
add esp 0Ch +
push ebp  +
call sub_45DCD0  +
add esp 4 +
test eax eax +
jnz loc_425A47  +
push eax  +
push dword ptr [esp+18h]  +
call sub_423D80  +
push ebp  +
mov esi eax +
call sub_45D9C0  +
add esp 0Ch +
mov [esi+28h] eax +
test edi edi +
jnz loc_425C00  +
mov [esp+1Ch] esi +
jmp loc_425A47  +
***
test ebp ebp +
jz loc_425A43  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_425A43  +
***
push esi  +
push edi  +
call sub_421680  +
add esp 8 +
jmp loc_425A47  +
***
call sub_48927F  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+20h] eax +
mov eax [esp+28h] +
push ebp  +
mov ebp [esp+34h] +
push esi  +
mov esi [esp+34h] +
add ebp esi +
push edi  +
xor edi edi +
mov [esp+10h] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+14h] edi +
test esi esi +
jnz loc_425C69  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+20h] +
xor ecx esp +
call sub_488C1C  +
add esp 24h +
retn   +
***
push 0  +
call sub_45D8F0  +
add esp 4 +
mov [esp+18h] eax +
test eax eax +
jz loc_425C55  +
push ebx  +
push 4  +
push eax  +
call sub_45E040  +
add esp 8 +
mov ebx esi +
cmp esi ebp +
jnb loc_425FD8  +
mov al [esi] +
test al al +
jz loc_425FB8  +
cmp al 26h +
jnz loc_425FAF  +
xor edi edi +
cmp esi ebx +
jz loc_425CC6  +
mov eax esi +
sub eax ebx +
push eax  +
push ebx  +
mov ebx [esp+24h] +
push ebx  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_426063  +
jmp loc_425CCA  +
mov ebx [esp+1Ch] +
lea eax [esi+2] +
cmp eax ebp +
jnb loc_425D45  +
cmp byte ptr [esi+1] 23h +
jnz loc_425D45  +
cmp byte ptr [eax] 78h +
jnz loc_425D45  +
add esi 3 +
cmp esi ebp +
jnb loc_425CF0  +
mov bl [esi] +
cmp bl 3Bh +
jz loc_425DAA  +
jmp loc_425CF2  +
xor bl bl +
lea eax [ebx-30h] +
cmp al 9 +
ja loc_425D01  +
add edi 0FFFFFFFDh +
shl edi 4 +
jmp loc_425D1D  +
lea eax [ebx-61h] +
cmp al 5 +
ja loc_425D10  +
shl edi 4 +
add edi 0FFFFFFA9h +
jmp loc_425D1D  +
lea eax [ebx-41h] +
cmp al 5 +
ja loc_425D30  +
shl edi 4 +
add edi 0FFFFFFC9h +
movzx eax bl +
inc esi  +
add edi eax +
cmp esi ebp +
jnb loc_425CF0  +
mov bl [esi] +
cmp bl 3Bh +
jnz loc_425CF2  +
jmp loc_425DAA  +
push 0  +
push dword ptr [esp+18h]  +
push 514h  +
call sub_426200  +
add esp 0Ch +
jmp loc_425DA3  +
inc esi  +
cmp esi ebp +
jnb loc_425DEF  +
cmp byte ptr [esi] 23h +
jnz loc_425DEF  +
mov esi eax +
cmp esi ebp +
jnb loc_425D66  +
mov bl [esi] +
cmp bl 3Bh +
jz loc_425DAA  +
jmp loc_425D68  +
xor bl bl +
lea eax [ebx-30h] +
cmp al 9 +
ja loc_425D89  +
lea edi [edi+edi*4] +
movzx eax bl +
inc esi  +
lea edi [edi-18h] +
lea edi [eax+edi*2] +
cmp esi ebp +
jnb loc_425D66  +
mov bl [esi] +
cmp bl 3Bh +
jnz loc_425D68  +
jmp loc_425DAA  +
push 0  +
push offset aInvalidDecimal  +
push dword ptr [esp+1Ch]  +
push 515h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor edi edi +
cmp bl 3Bh +
jnz loc_425DAB  +
inc esi  +
mov ebx esi +
test edi edi +
jz loc_425FB0  +
lea eax [esp+24h] +
push edi  +
push eax  +
call sub_45B520  +
add esp 8 +
cmp eax 0Ah +
jnb loc_426088  +
mov byte ptr [esp+eax+24h] 0 +
lea eax [esp+24h] +
push eax  +
push dword ptr [esp+20h]  +
call sub_45D7B0  +
add esp 8 +
test eax eax +
jnz loc_426063  +
jmp loc_425FB0  +
mov ecx esi +
cmp esi ebp +
jnb loc_425E04  +
mov al [esi] +
test al al +
jz loc_425E04  +
cmp al 3Bh +
jz loc_425E22  +
inc esi  +
cmp esi ebp +
jb loc_425DF5  +
push ecx  +
push offset aUnterminatedEn  +
push dword ptr [esp+1Ch]  +
push 516h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
jmp loc_426063  +
cmp byte ptr [esi] 0 +
jz loc_425E04  +
cmp esi ecx +
jz loc_425FAA  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
push eax  +
push dword ptr [esp+20h]  +
mov [esp+30h] eax +
call sub_458150  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_425E80  +
cmp dword ptr [edi+30h] 6 +
jnz loc_425E80  +
push dword ptr [edi+28h]  +
push ebx  +
call sub_45D7B0  +
add esp 8 +
test eax eax +
jnz loc_426063  +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
add esp 4 +
inc esi  +
mov ebx esi +
jmp loc_425FB0  +
push ebx  +
call sub_45DCD0  +
add esp 4 +
test eax eax +
jnz loc_425F17  +
push 3Ch  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_426014  +
push 3Ch  +
push 0  +
push ebx  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [ebx+4] 3 +
mov dword ptr [ebx+8] offset aText +
cmp dword_4F2460 0 +
jz loc_425EE1  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_425EE1  +
call sub_458520  +
push ebx  +
mov eax [eax] +
call eax  +
add esp 4 +
mov eax [esp+14h] +
push dword ptr [esp+1Ch]  +
mov [ebx+20h] eax +
call sub_45D9C0  +
mov [ebx+28h] eax +
add esp 4 +
mov eax [esp+18h] +
test eax eax +
jnz loc_425F09  +
mov [esp+10h] ebx +
mov [esp+18h] ebx +
jmp loc_425F17  +
push ebx  +
push eax  +
call sub_421680  +
add esp 8 +
mov [esp+18h] eax +
push dword ptr [esp+20h]  +
push dword ptr [esp+18h]  +
call sub_424430  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_426029  +
test edi edi +
jz loc_425F6D  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_425F6D  +
push dword ptr [ebx+28h]  +
push dword ptr [esp+18h]  +
call loc_425820  +
add esp 8 +
mov [edi+0Ch] eax +
mov dword ptr [edi+44h] 1 +
test eax eax +
jz loc_425F6D  +
mov [eax+14h] edi +
mov [edi+10h] eax +
mov eax [eax+18h] +
test eax eax +
jnz loc_425F60  +
mov eax [esp+18h] +
test eax eax +
jnz loc_425F8F  +
push dword ptr [esp+20h]  +
mov [esp+14h] ebx +
mov [esp+1Ch] ebx +
call off_4EE2F4  +
add esp 4 +
inc esi  +
mov ebx esi +
jmp loc_425FB0  +
push ebx  +
push eax  +
call sub_421680  +
add esp 8 +
mov [esp+18h] eax +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
add esp 4 +
inc esi  +
mov ebx esi +
jmp loc_425FB0  +
inc esi  +
cmp esi ebp +
jb loc_425C91  +
cmp esi ebx +
jz loc_425FD4  +
sub esi ebx +
push esi  +
push ebx  +
push dword ptr [esp+24h]  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_426063  +
mov edi [esp+18h] +
push dword ptr [esp+1Ch]  +
call sub_45DCD0  +
add esp 4 +
test eax eax +
jnz loc_426046  +
push eax  +
push dword ptr [esp+18h]  +
call sub_423D80  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_426063  +
push dword ptr [esp+1Ch]  +
call sub_45D9C0  +
add esp 4 +
mov [esi+28h] eax +
test edi edi +
jnz loc_42603D  +
mov [esp+10h] esi +
jmp loc_426063  +
push offset aBuildingText  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
mov eax [esp+20h] +
test eax eax +
jz loc_426063  +
push eax  +
call off_4EE2F4  +
add esp 4 +
jmp loc_426063  +
push esi  +
push edi  +
call sub_421680  +
jmp loc_426060  +
mov esi [esp+10h] +
test esi esi +
jnz loc_426067  +
push offset unk_4DE8C5  +
push dword ptr [esp+18h]  +
call sub_423D80  +
mov [esp+18h] eax +
add esp 8 +
mov esi [esp+10h] +
push dword ptr [esp+1Ch]  +
call sub_45DAC0  +
mov ecx [esp+34h] +
add esp 4 +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 24h +
retn   +
***
call sub_48927F  +
test esi esi +
jnz loc_42609E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov eax [esi+4] +
cmp eax 3 +
jz loc_4260B5  +
cmp eax 4 +
jz loc_4260B5  +
cmp eax 8 +
jz loc_4260B5  +
cmp eax 7 +
jnz loc_426099  +
mov eax [esi+28h] +
push edi  +
lea edi [esi+2Ch] +
cmp eax edi +
jz loc_4260EE  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_4260DC  +
mov ecx [ecx+50h] +
test ecx ecx +
jz loc_4260DC  +
push eax  +
push ecx  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4260EE  +
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push dword ptr [esi+28h]  +
call sub_44E6F0  +
jmp loc_4260FE  +
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push dword ptr [esi+28h]  +
call loc_44E780  +
mov [esi+28h] eax +
add esp 0Ch +
neg eax  +
mov dword ptr [edi] 0 +
sbb eax eax +
neg eax  +
pop edi  +
dec eax  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_42612F  +
mov eax [esp+arg_4] +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_426175  +
cmp dword ptr [esi+4] 3 +
jnz loc_426175  +
cmp dword ptr [edi+4] 3 +
jnz loc_426175  +
mov eax [edi+8] +
cmp eax [esi+8] +
jnz loc_426175  +
push ebx  +
mov ebx [edi+28h] +
test ebx ebx +
jz loc_426165  +
push ebx  +
call sub_44E660  +
push eax  +
push ebx  +
push esi  +
call sub_424690  +
add esp 10h +
push edi  +
call sub_4262D0  +
push edi  +
call sub_422CB0  +
add esp 8 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
test edi edi +
jnz loc_42618D  +
xor eax eax +
pop edi  +
retn   +
mov eax [edi+34h] +
test eax eax +
jnz loc_4261F3  +
push esi  +
push 18h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4261BE  +
push offset aAllocatingTheX  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push offset aHttpWww_w3_org  +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+4] 12h +
call sub_44E600  +
push offset aXml_1  +
mov [esi+8] eax +
call sub_44E600  +
add esp 8 +
mov [esi+0Ch] eax +
mov [edi+34h] esi +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
lea eax [ecx-514h] +
cmp eax 3 +
ja loc_42627E  +
jmp ds:off_426298[eax*4]  +
push [esp+arg_8]  +
mov eax offset aInvalidHexadec +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aInvalidDecimal +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aUnterminatedEn +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aStringIsNotInU +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aUnexpectedErro +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
***
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
retn   +
***
test esi esi +
jz loc_42642B  +
mov eax [esi+4] +
cmp eax 12h +
jz loc_42642B  +
cmp eax 0Eh +
jnz loc_42630D  +
mov eax [esi+20h] +
test eax eax +
jz loc_42630D  +
cmp [eax+2Ch] esi +
jnz loc_426301  +
mov dword ptr [eax+2Ch] 0 +
cmp [eax+30h] esi +
jnz loc_42630D  +
mov dword ptr [eax+30h] 0 +
cmp dword ptr [esi+4] 11h +
jnz loc_4263CC  +
push edi  +
mov edi [esi+20h] +
test edi edi +
jz loc_4263CB  +
mov eax [edi+2Ch] +
test eax eax +
jz loc_426377  +
push dword ptr [esi+8]  +
push dword ptr [eax+30h]  +
call sub_450440  +
add esp 8 +
cmp eax esi +
jnz loc_42634F  +
mov eax [edi+2Ch] +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [eax+30h]  +
call sub_450620  +
add esp 0Ch +
mov eax [edi+2Ch] +
push dword ptr [esi+8]  +
push dword ptr [eax+3Ch]  +
call sub_450440  +
add esp 8 +
cmp eax esi +
jnz loc_426377  +
mov eax [edi+2Ch] +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [eax+3Ch]  +
call sub_450620  +
add esp 0Ch +
mov eax [edi+30h] +
test eax eax +
jz loc_4263CB  +
push dword ptr [esi+8]  +
push dword ptr [eax+30h]  +
call sub_450440  +
add esp 8 +
cmp eax esi +
jnz loc_4263A3  +
mov eax [edi+30h] +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [eax+30h]  +
call sub_450620  +
add esp 0Ch +
mov eax [edi+30h] +
push dword ptr [esi+8]  +
push dword ptr [eax+3Ch]  +
call sub_450440  +
add esp 8 +
cmp eax esi +
jnz loc_4263CB  +
mov eax [edi+30h] +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [eax+3Ch]  +
call sub_450620  +
add esp 0Ch +
pop edi  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_426403  +
cmp dword ptr [esi+4] 2 +
jnz loc_4263E6  +
cmp [ecx+2Ch] esi +
jnz loc_4263FC  +
mov eax [esi+18h] +
mov [ecx+2Ch] eax +
jmp loc_4263FC  +
cmp [ecx+0Ch] esi +
jnz loc_4263F1  +
mov eax [esi+18h] +
mov [ecx+0Ch] eax +
cmp [ecx+10h] esi +
jnz loc_4263FC  +
mov eax [esi+1Ch] +
mov [ecx+10h] eax +
mov dword ptr [esi+14h] 0 +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_426410  +
mov eax [esi+1Ch] +
mov [ecx+1Ch] eax +
mov ecx [esi+1Ch] +
test ecx ecx +
jz loc_42641D  +
mov eax [esi+18h] +
mov [ecx+18h] eax +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+18h] 0 +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
mov eax edi +
test edi edi +
jnz loc_426440  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+10h] +
test ebx ebx +
jz loc_426469  +
mov cl [eax] +
cmp cl 20h +
jz loc_426466  +
cmp cl 9 +
jb loc_426461  +
cmp cl 0Ah +
jbe loc_426466  +
cmp cl 0Dh +
jnz loc_426469  +
inc eax  +
jmp loc_426450  +
***
mov cl [eax] +
cmp cl 61h +
jb loc_426475  +
cmp cl 7Ah +
jbe loc_426484  +
cmp cl 41h +
jb loc_42647F  +
cmp cl 5Ah +
jbe loc_426484  +
cmp cl 5Fh +
jnz loc_4264E3  +
mov cl [eax+1] +
inc eax  +
cmp cl 61h +
jb loc_426492  +
cmp cl 7Ah +
jbe loc_426484  +
cmp cl 41h +
jb loc_42649C  +
cmp cl 5Ah +
jbe loc_426484  +
cmp cl 30h +
jb loc_4264A6  +
cmp cl 39h +
jbe loc_426484  +
cmp cl 5Fh +
jz loc_426484  +
cmp cl 2Dh +
jz loc_426484  +
cmp cl 2Eh +
jz loc_426484  +
test ebx ebx +
jz loc_4264D9  +
mov cl [eax] +
cmp cl 20h +
jz loc_4264D6  +
cmp cl 9 +
jb loc_4264D1  +
cmp cl 0Ah +
jbe loc_4264D6  +
cmp cl 0Dh +
jnz loc_4264D9  +
inc eax  +
jmp loc_4264C0  +
***
cmp byte ptr [eax] 0 +
jnz loc_4264E3  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
***
push esi  +
lea eax [esp+10h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add esp 0Ch +
mov esi eax +
test ebx ebx +
jz loc_426538  +
cmp esi 100h +
jge loc_4265E0  +
cmp esi 41h +
jl loc_42654E  +
cmp esi 5Ah +
jle loc_426580  +
cmp esi 61h +
jl loc_426558  +
cmp esi 7Ah +
jle loc_426580  +
cmp esi 0C0h +
jl loc_426568  +
cmp esi 0D6h +
jle loc_426580  +
cmp esi 0D8h +
jl loc_426578  +
cmp esi 0F6h +
jle loc_426580  +
cmp esi 0F8h +
jl loc_4265F2  +
add edi [esp+10h] +
lea eax [esp+10h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
mov esi eax +
add esp 0Ch +
cmp esi 100h +
jge loc_426640  +
cmp esi 41h +
jl loc_4265AC  +
cmp esi 5Ah +
jle loc_426580  +
cmp esi 61h +
jl loc_4265B6  +
cmp esi 7Ah +
jle loc_426580  +
cmp esi 0C0h +
jl loc_4265C6  +
cmp esi 0D6h +
jle loc_426580  +
cmp esi 0D8h +
jl loc_4265D6  +
cmp esi 0F6h +
jle loc_426580  +
cmp esi 0F8h +
jl loc_426656  +
jmp loc_426580  +
***
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_426580  +
cmp esi 100h +
jl loc_42662E  +
cmp esi 4E00h +
jl loc_42660E  +
cmp esi 9FA5h +
jle loc_426580  +
cmp esi 3007h +
jz loc_426580  +
cmp esi 3021h +
jl loc_42662E  +
cmp esi 3029h +
jle loc_426580  +
cmp esi 5Fh +
jz loc_426580  +
pop esi  +
pop ebx  +
mov eax 1 +
pop edi  +
retn   +
***
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_426580  +
cmp esi 100h +
jl loc_4266AA  +
cmp esi 4E00h +
jl loc_426672  +
cmp esi 9FA5h +
jle loc_426580  +
cmp esi 3007h +
jz loc_426580  +
cmp esi 3021h +
jl loc_426692  +
cmp esi 3029h +
jle loc_426580  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_426580  +
jmp loc_4266B6  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_426580  +
cmp esi 2Eh +
jz loc_426580  +
cmp esi 2Dh +
jz loc_426580  +
cmp esi 5Fh +
jz loc_426580  +
cmp esi 100h +
jl loc_4266FF  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_426580  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_42670A  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jnz loc_426580  +
test ebx ebx +
jz loc_42674A  +
cmp esi 100h +
jge loc_42674A  +
cmp esi 20h +
jz loc_426732  +
cmp esi 9 +
jl loc_42672D  +
cmp esi 0Ah +
jle loc_426732  +
cmp esi 0Dh +
jnz loc_42674A  +
add edi [esp+10h] +
lea eax [esp+10h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add esp 0Ch +
mov esi eax +
jmp loc_426716  +
***
xor eax eax +
test esi esi +
pop esi  +
pop ebx  +
setnz al  +
pop edi  +
retn   +
***
mov ecx [esi] +
mov eax [ecx+48h] +
cmp eax [ecx+44h] +
jnz loc_426773  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+0E8h] +
test eax eax +
jz loc_42676F  +
mov eax [eax] +
cmp eax 1 +
jz loc_42676F  +
cmp eax 0FFFFFFFEh +
jz loc_42676F  +
cmp [esp+arg_C] 0 +
push edi  +
jnz loc_4267B8  +
mov edx [esp+4+arg_8] +
xor ecx ecx +
test edx edx +
jle loc_4267B8  +
mov edi [esp+4+arg_4] +
nop   +
mov al [ecx+edi] +
cmp al 20h +
jz loc_4267B3  +
cmp al 9 +
jb loc_4267AF  +
cmp al 0Ah +
jbe loc_4267B3  +
cmp al 0Dh +
jnz loc_42681A  +
inc ecx  +
cmp ecx edx +
jl loc_4267A0  +
mov eax [esi+34h] +
test eax eax +
jz loc_42681A  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4267DB  +
push dword ptr [eax+8]  +
push ecx  +
call sub_453460  +
add esp 8 +
test eax eax +
jz loc_426843  +
cmp eax 1 +
jz loc_42681A  +
mov eax [esi+24h] +
mov edx [eax+10h] +
mov al [edx] +
cmp al 3Ch +
jz loc_4267EB  +
cmp al 0Dh +
jnz loc_42681A  +
mov ecx [esi+34h] +
cmp dword ptr [ecx+0Ch] 0 +
jnz loc_4267FE  +
cmp al 3Ch +
jnz loc_4267FE  +
cmp byte ptr [edx+1] 2Fh +
jz loc_42681A  +
push ecx  +
call sub_4231F0  +
add esp 4 +
test eax eax +
jnz loc_42681F  +
mov eax [esi+34h] +
cmp dword ptr [eax+4] 1 +
jz loc_426843  +
cmp dword ptr [eax+28h] 0 +
jz loc_426843  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push eax  +
call sub_424A90  +
add esp 4 +
test eax eax +
jnz loc_42681A  +
mov eax [esi+34h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_426843  +
push eax  +
call sub_424A90  +
add esp 4 +
test eax eax +
jmp loc_426818  +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
***
jmp off_4EE2F4  +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_42686B  +
xor eax eax +
retn   +
mov edx [ecx+28h] +
test edx edx +
jle loc_426868  +
dec edx  +
mov [ecx+28h] edx +
test edx edx +
jle loc_426894  +
mov eax [ecx+30h] +
mov eax [eax+edx*4-4] +
mov [ecx+24h] eax +
mov eax [ecx+30h] +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
mov eax [ecx+30h] +
mov dword ptr [ecx+24h] 0 +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
***
push edi  +
test esi esi +
jz loc_426901  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_426901  +
mov eax [esi+2Ch] +
cmp [esi+28h] eax +
jl loc_426907  +
add eax eax +
mov [esi+2Ch] eax +
shl eax 2 +
push eax  +
push dword ptr [esi+30h]  +
call off_4EE2F0  +
add esp 8 +
mov [esi+30h] eax +
test eax eax +
jnz loc_426907  +
push eax  +
push esi  +
call sub_45BA50  +
push edi  +
call sub_45BAF0  +
mov eax [esi+2Ch] +
add esp 0Ch +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+2Ch] eax +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov ecx [esi+28h] +
mov eax [esi+30h] +
mov [eax+ecx*4] edi +
mov eax [esi+28h] +
mov [esi+24h] edi +
pop edi  +
lea ecx [eax+1] +
mov [esi+28h] ecx +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_42696C  +
mov edx [ecx+0BCh] +
test edx edx +
jle loc_42696C  +
dec edx  +
mov [ecx+0BCh] edx +
test edx edx +
jle loc_42694F  +
mov eax [ecx+0C4h] +
mov eax [eax+edx*4-4] +
mov [ecx+0B8h] eax +
jmp loc_426959  +
mov dword ptr [ecx+0B8h] 0 +
mov eax [ecx+0C4h] +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
xor eax eax +
retn   +
***
test esi esi +
jz loc_4269A8  +
mov eax [esi+0C0h] +
cmp [esi+0BCh] eax +
jl loc_4269C1  +
shl eax 3 +
push eax  +
push dword ptr [esi+0C4h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4269AD  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+0C4h] eax +
mov eax [esi+0C0h] +
add eax eax +
mov [esi+0C0h] eax +
mov edx [esi+0BCh] +
mov eax [esi+0C4h] +
mov ecx [esp+arg_4] +
mov [eax+edx*4] ecx +
mov eax [esi+0BCh] +
mov [esi+0B8h] ecx +
lea ecx [eax+1] +
mov [esi+0BCh] ecx +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_4269FB  +
xor eax eax +
retn   +
mov edx [ecx+38h] +
test edx edx +
jle loc_4269F8  +
dec edx  +
mov [ecx+38h] edx +
test edx edx +
jle loc_426A24  +
mov eax [ecx+40h] +
mov eax [eax+edx*4-4] +
mov [ecx+34h] eax +
mov eax [ecx+40h] +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
mov eax [ecx+40h] +
mov dword ptr [ecx+34h] 0 +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
***
test esi esi +
jnz loc_426A4D  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+3Ch] +
cmp [esi+38h] eax +
jl loc_426A83  +
shl eax 3 +
push eax  +
push dword ptr [esi+40h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_426A78  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+40h] eax +
mov eax [esi+3Ch] +
add eax eax +
mov [esi+3Ch] eax +
mov edx [esi+38h] +
mov eax dword_4EE004 +
cmp edx eax +
jbe loc_426AB7  +
test dword ptr [esi+168h] 80000h +
jnz loc_426AB7  +
push eax  +
push offset aExcessiveDepth  +
push 1  +
push esi  +
call sub_45B970  +
push esi  +
call sub_428260  +
add esp 14h +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov eax [esi+40h] +
mov ecx [esp+arg_4] +
mov [eax+edx*4] ecx +
mov eax [esi+38h] +
mov [esi+34h] ecx +
lea ecx [eax+1] +
mov [esi+38h] ecx +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
cmp dword ptr [esi+150h] 0 +
jnz loc_426AE2  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esi+148h] +
push ebx  +
mov ebx [esp+10h] +
push edi  +
cmp eax ebx +
jge loc_426B15  +
call sub_4583E0  +
mov edi eax +
call sub_4583C0  +
push ebx  +
push offset aPbmPoppingDNs  +
push dword ptr [edi]  +
mov eax [eax] +
call eax  +
mov eax [esi+148h] +
add esp 0Ch +
mov ebx eax +
test eax eax +
jg loc_426B1F  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
test ebx ebx +
jle loc_426B4E  +
mov edi ebx +
dec dword ptr [esi+148h]  +
mov edx [esi+148h] +
mov ecx [esi+150h] +
mov dword ptr [ecx+edx*4] 0 +
sub edi 1 +
jnz loc_426B30  +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi [esp+8+arg_4] +
test dword ptr [esi+168h] 2000h +
jz loc_426B9C  +
mov eax [esi+148h] +
sub eax 2 +
js loc_426B9C  +
mov edx [esi+150h] +
lea ecx [edx+eax*4] +
nop   +
cmp [ecx] edi +
jz loc_426BFC  +
sub ecx 8 +
sub eax 2 +
jns loc_426B90  +
mov eax [esi+14Ch] +
test eax eax +
jz loc_426C45  +
mov ecx [esi+150h] +
test ecx ecx +
jz loc_426C45  +
cmp [esi+148h] eax +
jl loc_426C11  +
add eax eax +
mov [esi+14Ch] eax +
shl eax 2 +
push eax  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_426C0B  +
push eax  +
push esi  +
call sub_45BA50  +
mov eax [esi+14Ch] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
pop edi  +
mov [esi+14Ch] eax +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
cmp [edx+eax*4+4] ebx +
jnz loc_426B9C  +
pop edi  +
pop esi  +
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
mov [esi+150h] eax +
mov ecx [esi+148h] +
mov eax [esi+150h] +
mov [eax+ecx*4] edi +
inc dword ptr [esi+148h]  +
mov ecx [esi+148h] +
mov eax [esi+150h] +
pop edi  +
mov [eax+ecx*4] ebx +
inc dword ptr [esi+148h]  +
mov eax [esi+148h] +
pop esi  +
pop ebx  +
retn   +
push 28h  +
mov dword ptr [esi+14Ch] 0Ah +
mov dword ptr [esi+148h] 0 +
call off_4EE2E8  +
add esp 4 +
mov [esi+150h] eax +
test eax eax +
jnz loc_426C11  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
mov dword ptr [esi+14Ch] 0 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ecx [esp+arg_0] +
push esi  +
mov esi [ecx+0ECh] +
test esi esi +
jg loc_426CA3  +
xor eax eax +
pop esi  +
retn   +
mov edx [ecx+0F4h] +
dec esi  +
mov [ecx+0ECh] esi +
test esi esi +
jle loc_426CCC  +
lea eax [edx-4] +
lea eax [eax+esi*4] +
mov [ecx+0E8h] eax +
mov eax [edx+esi*4] +
mov dword ptr [edx+esi*4] 0FFFFFFFFh +
pop esi  +
retn   +
mov [ecx+0E8h] edx +
mov eax [edx+esi*4] +
mov dword ptr [edx+esi*4] 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esi+0F0h] +
cmp [esi+0ECh] eax +
jl loc_426D38  +
add eax eax +
mov [esi+0F0h] eax +
shl eax 2 +
push eax  +
push dword ptr [esi+0F4h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_426D32  +
push eax  +
push esi  +
call sub_45BA50  +
mov eax [esi+0F0h] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+0F0h] eax +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+0F4h] eax +
mov edx [esi+0ECh] +
mov ecx [esi+0F4h] +
mov eax [esp+arg_4] +
mov [ecx+edx*4] eax +
mov eax [esi+0ECh] +
mov ecx [esi+0F4h] +
lea ecx [ecx+eax*4] +
mov [esi+0E8h] ecx +
lea ecx [eax+1] +
mov [esi+0ECh] ecx +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [esp+0Ch+arg_0] +
push ebp  +
mov ebp [esp+10h+arg_8] +
push esi  +
mov eax [ebx+160h] +
mov esi [esp+14h+arg_4] +
test eax eax +
jz loc_426D9F  +
push ebp  +
push esi  +
push eax  +
call sub_450460  +
add esp 0Ch +
test eax eax +
jnz loc_426F6C  +
cmp dword ptr [ebx+15Ch] 0 +
push edi  +
jnz loc_426DC7  +
push dword ptr [ebx+128h]  +
push 0Ah  +
call sub_450180  +
add esp 8 +
mov [ebx+15Ch] eax +
test eax eax +
jz loc_426E9F  +
lea eax [esp+18h+arg_0] +
push eax  +
push esi  +
call sub_425440  +
add esp 8 +
push 0FFFFFFFFh  +
test eax eax +
jnz loc_426DF0  +
push esi  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
add esp 0Ch +
mov esi eax +
xor eax eax +
jmp loc_426E17  +
push eax  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
push [esp+24h+arg_0]  +
mov [esp+28h+var_4] eax +
push esi  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
mov esi [esp+30h+var_4] +
add esp 18h +
push eax  +
push esi  +
push dword ptr [ebx+15Ch]  +
mov [esp+24h+var_8] eax +
call sub_450460  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_426E51  +
push 6Ch  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_426E9F  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 4 +
jmp loc_426E7B  +
mov eax [edi+4] +
cmp [edi] eax +
jl loc_426EB2  +
lea eax [eax+eax*4] +
lea eax ds:1Ch[eax*8] +
push eax  +
push edi  +
call off_4EE2F0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_426E9F  +
mov eax [edi+4] +
add eax eax +
mov [edi+4] eax +
push 0  +
push edi  +
push [esp+20h+var_8]  +
push esi  +
push dword ptr [ebx+15Ch]  +
call sub_4509A0  +
add esp 14h +
test eax eax +
jns loc_426EB2  +
push edi  +
call off_4EE2F4  +
add esp 4 +
push 0  +
push ebx  +
call sub_45BA50  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
lea eax [esp+18h+arg_0] +
push eax  +
push ebp  +
call sub_425440  +
add esp 8 +
push 0FFFFFFFFh  +
test eax eax +
jnz loc_426EDB  +
push ebp  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
add esp 0Ch +
mov esi eax +
xor eax eax +
jmp loc_426EFC  +
push eax  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
push [esp+24h+arg_0]  +
mov esi eax +
push ebp  +
push dword ptr [ebx+128h]  +
call sub_44F4D0  +
add esp 18h +
mov ecx [edi] +
lea ecx [ecx+ecx*4] +
mov [edi+ecx*4+8] esi +
mov ecx [edi] +
mov esi [esp+18h+arg_C] +
push esi  +
lea ecx [ecx+ecx*4] +
mov [edi+ecx*4+0Ch] eax +
call sub_44E660  +
push eax  +
push esi  +
push dword ptr [ebx+128h]  +
mov [esp+28h+arg_0] eax +
call sub_44F4D0  +
mov ecx [edi] +
add esp 10h +
lea ecx [ecx+ecx*4] +
mov [edi+ecx*4+10h] eax +
mov ecx [esp+18h+arg_0] +
add ecx eax +
mov eax [edi] +
inc eax  +
lea eax [eax+eax*4] +
mov [edi+eax*4] ecx +
cmp dword ptr [ebx+60h] 0 +
mov eax [edi] +
lea eax [eax+eax*4] +
jz loc_426F61  +
mov dword ptr [edi+eax*4+18h] offset aExternal +
inc dword ptr [edi]  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
mov dword ptr [edi+eax*4+18h] 0 +
inc dword ptr [edi]  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
cmp dword ptr [esi+160h] 0 +
jnz loc_426FB4  +
push dword ptr [esi+128h]  +
push 0Ah  +
call sub_450180  +
add esp 8 +
mov [esi+160h] eax +
test eax eax +
jnz loc_426FB4  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
pop esi  +
retn   +
push [esp+arg_8]  +
push [esp+4+arg_4]  +
push dword ptr [esi+160h]  +
call sub_450460  +
add esp 0Ch +
test eax eax +
jnz loc_426FE8  +
push [esp+arg_C]  +
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push dword ptr [esi+160h]  +
call sub_44FBB0  +
add esp 10h +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_42703E  +
mov ecx [esp+arg_4] +
test ecx ecx +
jz loc_42703E  +
cmp byte ptr [eax] 20h +
jnz loc_42700B  +
inc eax  +
cmp byte ptr [eax] 20h +
jz loc_427005  +
mov dl [eax] +
test dl dl +
jz loc_427031  +
cmp dl 20h +
jnz loc_427027  +
inc eax  +
cmp byte ptr [eax] 20h +
jz loc_427016  +
cmp byte ptr [eax] 0 +
jz loc_427031  +
mov byte ptr [ecx] 20h +
inc ecx  +
jmp loc_42702B  +
mov [ecx] dl +
inc ecx  +
inc eax  +
mov dl [eax] +
test dl dl +
jnz loc_427011  +
xor edx edx +
mov byte ptr [ecx] 0 +
cmp ecx eax +
cmovz ecx edx +
mov eax ecx +
retn   +
xor eax eax +
retn   +
***
xor edx edx +
push esi  +
push edi  +
cmp [esp+0Ch] edx +
jz loc_427111  +
mov esi [esp+10h] +
test esi esi +
jz loc_427111  +
mov edi [esp+14h] +
test edi edi +
jz loc_427111  +
push ebx  +
mov ebx [edi] +
test ebx ebx +
jle loc_4270C5  +
cmp byte ptr [esi] 20h +
mov eax esi +
jnz loc_42708B  +
inc eax  +
inc edx  +
cmp byte ptr [eax] 20h +
jz loc_427084  +
mov cl [eax] +
test cl cl +
jz loc_4270CF  +
inc eax  +
cmp cl 20h +
mov cl [eax] +
jnz loc_4270CB  +
cmp cl 20h +
jz loc_4270A2  +
test cl cl +
jnz loc_427091  +
sub ebx edx +
lea eax [edx+esi] +
inc ebx  +
push ebx  +
push eax  +
call sub_44E8A0  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_4270EC  +
push eax  +
push dword ptr [esp+14h]  +
call sub_45BA50  +
add esp 8 +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
test cl cl +
jnz loc_427091  +
test edx edx +
jz loc_4270C5  +
sub [edi] edx +
mov ecx [edi] +
inc ecx  +
push ecx  +
lea ecx [edx+esi] +
push ecx  +
push esi  +
call loc_48B430  +
add esp 0Ch +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push esi  +
call sub_426FF0  +
mov ecx esi +
add esp 8 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_427100  +
sub ecx edx +
mov eax esi +
pop ebx  +
mov [edi] ecx +
pop edi  +
pop esi  +
retn   +
***
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov al [ecx] +
cmp al 41h +
jb loc_42716A  +
cmp al 5Ah +
jbe loc_427172  +
cmp al 61h +
jb loc_427175  +
cmp al 7Ah +
ja loc_427175  +
inc ecx  +
jmp loc_427160  +
***
xor eax eax +
cmp [ecx] al +
setz al  +
retn   +
***
mov eax edx +
nop   +
mov cl [eax] +
cmp cl 41h +
jb loc_42718C  +
cmp cl 5Ah +
jbe loc_427196  +
cmp cl 61h +
jb loc_427199  +
cmp cl 7Ah +
ja loc_427199  +
inc eax  +
jmp loc_427180  +
***
mov ecx eax +
sub ecx edx +
cmp ecx 4 +
jl loc_4271BA  +
cmp ecx 8 +
jg loc_42734A  +
cmp byte ptr [eax] 0 +
jnz loc_42734A  +
mov eax 1 +
retn   +
***
cmp ecx 2 +
jl loc_42734A  +
mov cl [eax] +
test cl cl +
jz loc_4271B4  +
cmp cl 2Dh +
jnz loc_42734A  +
mov cl [eax+1] +
inc eax  +
mov edx eax +
cmp cl 30h +
jb loc_4271E6  +
cmp cl 39h +
jbe loc_4272A7  +
mov cl [eax] +
cmp cl 41h +
jb loc_4271F2  +
cmp cl 5Ah +
jbe loc_4271FC  +
cmp cl 61h +
jb loc_4271FF  +
cmp cl 7Ah +
ja loc_4271FF  +
inc eax  +
jmp loc_4271E6  +
***
mov ecx eax +
sub ecx edx +
cmp ecx 4 +
jz loc_427284  +
cmp ecx 2 +
jz loc_4272FE  +
cmp ecx 5 +
jl loc_42721F  +
cmp ecx 8 +
jle loc_427337  +
cmp ecx 3 +
jnz loc_42734A  +
mov cl [eax] +
test cl cl +
jz loc_4271B4  +
cmp cl 2Dh +
jnz loc_42734A  +
mov cl [eax+1] +
inc eax  +
mov edx eax +
cmp cl 30h +
jb loc_427247  +
cmp cl 39h +
jbe loc_4272A7  +
mov cl [eax] +
cmp cl 41h +
jb loc_427253  +
cmp cl 5Ah +
jbe loc_42725D  +
cmp cl 61h +
jb loc_427260  +
cmp cl 7Ah +
ja loc_427260  +
inc eax  +
jmp loc_427247  +
***
mov ecx eax +
sub ecx edx +
cmp ecx 2 +
jz loc_4272FE  +
cmp ecx 5 +
jl loc_42727B  +
cmp ecx 8 +
jle loc_427337  +
cmp ecx 4 +
jnz loc_42734A  +
mov cl [eax] +
test cl cl +
jz loc_4271B4  +
cmp cl 2Dh +
jnz loc_42734A  +
mov cl [eax+1] +
inc eax  +
mov edx eax +
cmp cl 30h +
jb loc_4272D2  +
cmp cl 39h +
ja loc_4272D2  +
mov cl [eax+1] +
cmp cl 30h +
jb loc_42734A  +
cmp cl 39h +
ja loc_42734A  +
mov cl [eax+2] +
cmp cl 30h +
jb loc_42734A  +
cmp cl 39h +
ja loc_42734A  +
add eax 3 +
jmp loc_4272FE  +
mov cl [eax] +
cmp cl 41h +
jb loc_4272DE  +
cmp cl 5Ah +
jbe loc_4272E8  +
cmp cl 61h +
jb loc_4272EB  +
cmp cl 7Ah +
ja loc_4272EB  +
inc eax  +
jmp loc_4272D2  +
***
mov ecx eax +
sub ecx edx +
cmp ecx 5 +
jl loc_4272F9  +
cmp ecx 8 +
jle loc_427337  +
cmp ecx 2 +
jnz loc_42734A  +
mov cl [eax] +
test cl cl +
jz loc_4271B4  +
cmp cl 2Dh +
jnz loc_42734A  +
inc eax  +
mov edx eax +
mov cl [eax] +
cmp cl 41h +
jb loc_42731C  +
cmp cl 5Ah +
jbe loc_427326  +
cmp cl 61h +
jb loc_427329  +
cmp cl 7Ah +
ja loc_427329  +
inc eax  +
jmp loc_427310  +
***
mov ecx eax +
sub ecx edx +
cmp ecx 5 +
jl loc_42734A  +
cmp ecx 8 +
jg loc_42734A  +
mov cl [eax] +
test cl cl +
jz loc_4271B4  +
xor eax eax +
cmp cl 2Dh +
setz al  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esi+160h] +
test eax eax +
jz loc_427396  +
push esi  +
push offset loc_4273A0  +
push eax  +
call sub_4507F0  +
push dword ptr [esi+160h]  +
call sub_450990  +
add esp 10h +
test eax eax +
jnz loc_427396  +
push eax  +
push dword ptr [esi+160h]  +
call loc_4501B0  +
add esp 8 +
mov dword ptr [esi+160h] 0 +
pop esi  +
retn   +
***
cmp dword ptr [esp+4] 1 +
jnz locret_4273C3  +
mov eax [esp+8] +
push 0  +
push dword ptr [esp+14h]  +
push dword ptr [esp+14h]  +
push dword ptr [eax+160h]  +
call sub_450640  +
add esp 10h +
retn   +
***
xor edi edi +
call sub_45C550  +
mov esi eax +
test esi esi +
jnz loc_4273E2  +
pop edi  +
pop esi  +
retn   +
mov ecx [esp+arg_C] +
test ecx ecx +
jz loc_427402  +
mov eax [ecx+168h] +
mov [esi+168h] eax +
mov eax [ecx+110h] +
mov [esi+110h] eax +
push ebx  +
push ebp  +
push [esp+8+arg_8]  +
mov ebp [esp+0Ch+arg_0] +
push ebp  +
call loc_4587B0  +
add esp 8 +
mov ebx eax +
push esi  +
push [esp+0Ch+arg_4]  +
test ebx ebx +
jnz loc_427474  +
push ebp  +
call sub_45FCE0  +
add esp 0Ch +
test eax eax +
jnz loc_42743D  +
push esi  +
call loc_45BB70  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push eax  +
push esi  +
call sub_4268B0  +
add esp 8 +
cmp [esi+0B4h] edi +
jnz loc_42745A  +
push ebp  +
call loc_4604E0  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+0B4h] 0 +
jnz loc_4274D2  +
test edi edi +
jz loc_4274D2  +
pop ebp  +
pop ebx  +
mov [esi+0B4h] edi +
mov eax esi +
pop edi  +
pop esi  +
retn   +
push ebx  +
call sub_45FCE0  +
add esp 0Ch +
test eax eax +
jnz loc_427498  +
push ebx  +
call off_4EE2F4  +
push esi  +
call loc_45BB70  +
add esp 8 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push eax  +
push esi  +
call sub_4268B0  +
add esp 8 +
cmp [esi+0B4h] edi +
jnz loc_4274B5  +
push ebx  +
call loc_4604E0  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+0B4h] 0 +
jnz loc_4274C8  +
test edi edi +
jz loc_4274C8  +
mov [esi+0B4h] edi +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
test edi edi +
jnz loc_4274ED  +
xor eax eax +
pop edi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jg loc_4274FB  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
push esi  +
call sub_45C550  +
mov esi eax +
test esi esi +
jz loc_427545  +
push 0  +
push ebx  +
push edi  +
call sub_460610  +
add esp 0Ch +
mov ebx eax +
push esi  +
test ebx ebx +
jnz loc_427528  +
call loc_45BB70  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
call sub_45C4E0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_42754B  +
push ebx  +
call sub_45F7D0  +
push esi  +
call loc_45BB70  +
add esp 8 +
pop esi  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
mov dword ptr [edi+4] 0 +
mov [edi] ebx +
push edi  +
push dword ptr [ebx+10h]  +
call sub_45DDF0  +
push edi  +
push esi  +
call sub_4268B0  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push edi  +
mov ecx [esi+12Ch] +
test ecx ecx +
jnz loc_4275C4  +
push 0DCh  +
call off_4EE2E8  +
add esp 4 +
test eax eax +
jz loc_427629  +
push 2Ch  +
mov [esi+12Ch] eax +
call off_4EE2E8  +
add esp 4 +
test eax eax +
jz loc_427629  +
mov [esi+154h] eax +
mov dword ptr [esi+130h] 37h +
mov eax [esi+130h] +
pop edi  +
pop esi  +
retn   +
mov edi [esp+4+arg_4] +
add edi 5 +
cmp edi [esi+130h] +
jle loc_4275BB  +
add edi edi +
lea eax ds:0[edi*4] +
push eax  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_427629  +
mov [esi+12Ch] eax +
mov eax 66666667h +
imul  edi +
sar edx 1 +
mov eax edx +
shr eax 1Fh +
add eax edx +
shl eax 2 +
push eax  +
push dword ptr [esi+154h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_427629  +
mov [esi+154h] eax +
mov eax edi +
mov [esi+130h] edi +
pop edi  +
pop esi  +
retn   +
push 0  +
push esi  +
call sub_45BA50  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_42764E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp [esp+arg_8] 0 +
jz loc_427675  +
mov eax [esi+18h] +
test eax eax +
jz loc_427666  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push [esp+arg_8]  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
push ebx  +
mov ebx [esp+4+arg_4] +
test bl 1 +
jz loc_427693  +
dec ebx  +
mov dword ptr [esi+120h] 1 +
or dword ptr [esi+168h] 1 +
jmp loc_42769D  +
mov dword ptr [esi+120h] 0 +
test bl 4 +
jz loc_4276B8  +
sub ebx 4 +
mov dword ptr [esi+114h] 2 +
or dword ptr [esi+168h] 4 +
jmp loc_4276C2  +
mov dword ptr [esi+114h] 0 +
test bl 8 +
jz loc_4276D8  +
or dword ptr [esi+114h] 4 +
sub ebx 8 +
or dword ptr [esi+168h] 8 +
test bl 2 +
jz loc_4276F0  +
sub ebx 2 +
mov dword ptr [esi+10h] 1 +
or dword ptr [esi+168h] 2 +
jmp loc_4276F7  +
mov dword ptr [esi+10h] 0 +
test bl bl +
jns loc_427714  +
add ebx 0FFFFFF80h +
mov dword ptr [esi+10Ch] 1 +
or dword ptr [esi+168h] 80h +
jmp loc_42771E  +
mov dword ptr [esi+10Ch] 0 +
test ebx 100h +
jz loc_42774B  +
mov eax [esi] +
sub ebx 100h +
mov dword ptr [esi+0D0h] 0 +
mov dword ptr [eax+48h] offset nullsub_1 +
or dword ptr [esi+168h] 100h +
jmp loc_427755  +
mov dword ptr [esi+0D0h] 1 +
test bl 10h +
jz loc_427785  +
mov dword ptr [esi+68h] 1 +
test bl 40h +
jz loc_42776D  +
mov dword ptr [esi+74h] 0 +
test bl 20h +
jz loc_427779  +
mov dword ptr [esi+70h] 0 +
sub ebx 10h +
or dword ptr [esi+168h] 10h +
jmp loc_42778C  +
mov dword ptr [esi+68h] 0 +
test bl 40h +
jz loc_42779D  +
mov eax [esi] +
sub ebx 40h +
mov dword ptr [eax+54h] 0 +
test bl 20h +
jz loc_4277B7  +
mov eax [esi] +
sub ebx 20h +
mov dword ptr [eax+58h] 0 +
mov eax [esi] +
mov dword ptr [eax+5Ch] 0 +
test ebx 200h +
jz loc_4277FC  +
mov eax [esi] +
sub ebx 200h +
mov dword ptr [eax+38h] offset loc_465210 +
mov eax [esi] +
mov dword ptr [eax+3Ch] offset sub_464630 +
mov eax [esi] +
mov dword ptr [eax+74h] 0 +
mov eax [esi] +
mov dword ptr [eax+78h] 0 +
mov eax [esi] +
mov dword ptr [eax+6Ch] 1 +
or dword ptr [esi+168h] 200h +
test ebx 1000h +
jz loc_427820  +
sub ebx 1000h +
mov dword ptr [esi+16Ch] 0 +
or dword ptr [esi+168h] 1000h +
jmp loc_42782A  +
mov dword ptr [esi+16Ch] 1 +
test ebx 4000h +
jz loc_42784B  +
mov eax [esi] +
sub ebx 4000h +
mov dword ptr [eax+64h] 0 +
or dword ptr [esi+168h] 4000h +
test ebx 2000h +
jz loc_427863  +
or dword ptr [esi+168h] 2000h +
sub ebx 2000h +
test ebx 800h +
jz loc_42787B  +
or dword ptr [esi+168h] 800h +
sub ebx 800h +
test ebx 10000h +
jz loc_427893  +
or dword ptr [esi+168h] 10000h +
sub ebx 10000h +
test ebx 20000h +
jz loc_4278AB  +
or dword ptr [esi+168h] 20000h +
sub ebx 20000h +
test ebx 40000h +
jz loc_4278C3  +
or dword ptr [esi+168h] 40000h +
sub ebx 40000h +
test ebx 80000h +
jz loc_4278F0  +
or dword ptr [esi+168h] 80000h +
sub ebx 80000h +
mov eax [esi+128h] +
test eax eax +
jz loc_4278F0  +
push 0  +
push eax  +
call sub_44FB50  +
add esp 8 +
test ebx 100000h +
jz loc_427908  +
or dword ptr [esi+168h] 100000h +
sub ebx 100000h +
test ebx 200000h +
jz loc_427920  +
or dword ptr [esi+168h] 200000h +
sub ebx 200000h +
test ebx 400000h +
jz loc_427938  +
or dword ptr [esi+168h] 400000h +
sub ebx 400000h +
mov eax ebx +
mov dword ptr [esi+118h] 1 +
pop ebx  +
pop esi  +
retn   +
***
test esi esi +
push edi  +
mov edi [esp+4+arg_8] +
push edi  +
push [esp+8+arg_C]  +
push esi  +
call sub_427640  +
add esp 0Ch +
test edi edi +
jz loc_427A23  +
push edi  +
call loc_462010  +
add esp 4 +
test eax eax +
jz loc_427A23  +
push eax  +
push esi  +
call sub_45D280  +
add esp 8 +
mov eax [esp+4+arg_4] +
test eax eax +
jz loc_427A47  +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_427A47  +
cmp dword ptr [ecx+4] 0 +
jnz loc_427A47  +
push eax  +
call sub_44E600  +
mov ecx [esi+24h] +
add esp 4 +
mov [ecx+4] eax +
push esi  +
call sub_42DDC0  +
add esp 4 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_427A73  +
cmp dword ptr [esi+120h] 0 +
jnz loc_427A73  +
mov eax [esi+8] +
xor edi edi +
test eax eax +
jz loc_427A76  +
push eax  +
call sub_4229F0  +
add esp 4 +
jmp loc_427A76  +
mov edi [esi+8] +
cmp [esp+4+arg_10] 0 +
mov dword ptr [esi+8] 0 +
jnz loc_427A8D  +
push esi  +
call loc_45BB70  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_427AC2  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_427ABB  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_427B37  +
mov dword ptr [esi+54h] 2Ah +
mov ecx [esp+arg_4] +
mov eax [esp+arg_8] +
push eax  +
test ecx ecx +
jnz loc_427AF0  +
push offset aAttributeSRede  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push eax  +
push ecx  +
push ecx  +
push 3  +
push 2Ah  +
push 1  +
push ecx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
call sub_43A650  +
add esp 44h +
jmp loc_427B19  +
push ecx  +
push offset aAttributeSSRed  +
push 0  +
push 0  +
push 0  +
push eax  +
push ecx  +
push 0  +
push 0  +
push 3  +
push 2Ah  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
test esi esi +
jz loc_427B37  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_427B37  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_427B61  +
cmp dword ptr [ecx+0D4h] 0 +
jz loc_427B5E  +
cmp dword ptr [ecx+0ACh] 0FFFFFFFFh +
jz locret_427B8D  +
mov [ecx+54h] edx +
mov eax [esp+arg_C] +
push eax  +
push [esp+4+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 2  +
push edx  +
push 1  +
push 0  +
push ecx  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push ebx  +
mov ebx [esp+8Ch+arg_8] +
lea eax [esp+8Ch+var_88] +
push esi  +
mov esi [esp+90h+arg_0] +
push 81h  +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
test esi esi +
jz loc_427BE2  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_427BE2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_427E75  +
push edi  +
mov edi [esp+94h+arg_4] +
lea eax [edi-1] +
cmp eax 6Dh +
ja loc_427DFE  +
movzx eax ds:byte_427F70[eax] +
jmp ds:off_427E8C[eax*4]  +
mov eax offset aCharrefInvalid +
jmp loc_427E03  +
mov eax offset aCharrefInval_0 +
jmp loc_427E03  +
mov eax offset aCharrefInval_1 +
jmp loc_427E03  +
mov eax offset aInternalError +
jmp loc_427E03  +
mov eax offset aPereferenceAtE +
jmp loc_427E03  +
mov eax offset aPereferenceInP +
jmp loc_427E03  +
mov eax offset aPereferenceInE +
jmp loc_427E03  +
mov eax offset aPereferenceNoN +
jmp loc_427E03  +
mov eax offset aPereferenceExp +
jmp loc_427E03  +
mov eax offset aDetectedAnEnti +
jmp loc_427E03  +
mov eax offset aEntityvalueOrE +
jmp loc_427E03  +
mov eax offset aPereferencesFo +
jmp loc_427E03  +
mov eax offset aAttvalueOrExpe +
jmp loc_427E03  +
mov eax offset aUnescapedNotAl +
jmp loc_427E03  +
mov eax offset aSystemliteralO +
jmp loc_427E03  +
mov eax offset aUnfinishedSyst +
jmp loc_427E03  +
mov eax offset aSequenceNotAll +
jmp loc_427E03  +
mov eax offset aSystemOrPublic +
jmp loc_427E03  +
mov eax offset aPublicThePubli +
jmp loc_427E03  +
mov eax offset aCommentMustNot +
jmp loc_427E03  +
mov eax offset aXmlparsepiNoTa +
jmp loc_427E03  +
mov eax offset aInvalidPiName +
jmp loc_427E03  +
mov eax offset aNotationNameEx +
jmp loc_427E03  +
mov eax offset aRequiredToClos +
jmp loc_427E03  +
mov eax offset aEntityValueReq +
jmp loc_427E03  +
mov eax offset aFragmentNotAll +
jmp loc_427E03  +
mov eax offset aRequiredToStar +
jmp loc_427E03  +
mov eax offset aNmtokenExpecte +
jmp loc_427E03  +
mov eax offset aRequiredToFini +
jmp loc_427E03  +
mov eax offset aMixedcontentde +
jmp loc_427E03  +
mov eax offset aMixedcontent_0 +
jmp loc_427E03  +
mov eax offset aContentdeclNam +
jmp loc_427E03  +
mov eax offset aContentdeclOrE +
jmp loc_427E03  +
mov eax offset aPereferenceFor +
jmp loc_427E03  +
mov eax offset aExpected_3 +
jmp loc_427E03  +
mov eax offset aXmlConditional +
jmp loc_427E03  +
mov eax offset aContentErrorIn +
jmp loc_427E03  +
mov eax offset aConditionalSec +
jmp loc_427E03  +
mov eax offset aXmlCondition_0 +
jmp loc_427E03  +
mov eax offset aTextDeclaratio +
jmp loc_427E03  +
mov eax offset aParsingXmlDecl +
jmp loc_427E03  +
mov eax offset aExternalParsed +
jmp loc_427E03  +
mov eax offset aEntityrefExpec +
jmp loc_427E03  +
mov eax offset aDoctypeImprope +
jmp loc_427E03  +
mov eax offset aEndtagNotFound +
jmp loc_427E03  +
mov eax offset aExpected_4 +
jmp loc_427E03  +
mov eax offset aStringNotClose +
jmp loc_427E03  +
mov eax offset aStringNotStart +
jmp loc_427E03  +
mov eax offset aInvalidXmlEnco +
jmp loc_427E03  +
mov eax offset aStandaloneAcce +
jmp loc_427E03  +
mov eax offset aDocumentIsEmpt +
jmp loc_427E03  +
mov eax offset aExtraContentAt +
jmp loc_427E03  +
mov eax offset aChunkIsNotWell +
jmp loc_427E03  +
mov eax offset aExtraContent_0 +
jmp loc_427E03  +
mov eax offset aMalformedDecla +
jmp loc_427E03  +
mov eax offset aNameTooLongUse +
jmp loc_427E03  +
mov eax offset aUnregisteredEr +
push eax  +
lea eax [esp+98h+var_88] +
test ebx ebx +
jnz loc_427E13  +
push offset aS  +
jmp loc_427E18  +
push offset aSS  +
push 80h  +
push eax  +
call sub_4213C0  +
add esp 10h +
test esi esi +
jz loc_427E2D  +
mov [esi+54h] edi +
push ebx  +
lea eax [esp+98h+var_88] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push ebx  +
push 0  +
push 0  +
push 3  +
push edi  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop edi  +
test esi esi +
jz loc_427E75  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_427E75  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+90h+var_4] +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
mov eax [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_428002  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_427FFF  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42804D  +
mov [esi+54h] eax +
push [esp+4+arg_8]  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push eax  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
test esi esi +
jz loc_42804D  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_42804D  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_428072  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42806F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4280BC  +
mov [esi+54h] ecx +
mov eax [esp+4+arg_C] +
push eax  +
push [esp+8+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push ecx  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
test esi esi +
jz loc_4280BC  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_4280BC  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+4+arg_4] +
test esi esi +
jz loc_4280E3  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4280E0  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_428135  +
mov [esi+54h] edi +
mov edx [esp+4+arg_14] +
mov eax [esp+4+arg_10] +
mov ecx [esp+4+arg_C] +
push edx  +
push eax  +
push ecx  +
push [esp+10h+arg_8]  +
push 0  +
push eax  +
push 0  +
push edx  +
push ecx  +
push 0  +
push 0  +
push 3  +
push edi  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 4Ch +
test esi esi +
jz loc_428135  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_428135  +
mov dword ptr [esi+0D4h] 1 +
pop edi  +
pop esi  +
retn   +
***
mov ecx [esi+24h] +
mov eax [ecx+14h] +
mov edx [ecx+10h] +
sub eax edx +
cmp eax 989680h +
ja loc_428162  +
sub edx [ecx+0Ch] +
cmp edx 989680h +
jbe loc_428195  +
mov eax [ecx] +
test eax eax +
jz loc_428195  +
cmp dword ptr [eax+4] offset sub_4126F0 +
jz loc_428195  +
test dword ptr [esi+168h] 80000h +
jnz loc_428195  +
push offset aHugeInputLooku  +
push 1  +
push esi  +
call sub_427B90  +
push esi  +
call sub_428260  +
add esp 10h +
pop esi  +
retn   +
push 0FAh  +
push ecx  +
call sub_45CA50  +
mov ecx [esi+24h] +
add esp 8 +
mov eax [ecx+10h] +
cmp eax [ecx+14h] +
ja loc_4281D9  +
cmp eax [ecx+0Ch] +
jb loc_4281D9  +
test eax eax +
jz loc_4281EF  +
cmp byte ptr [eax] 0 +
jnz loc_4281EF  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4281EF  +
push esi  +
call loc_439740  +
add esp 4 +
pop esi  +
retn   +
push esi  +
call sub_428260  +
push offset aCurIndexOutOfB  +
push 1  +
push esi  +
call sub_427B90  +
add esp 10h +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
cmp edx [eax+138h] +
jnz loc_428217  +
mov eax [eax+140h] +
retn   +
***
mov ecx [eax+148h] +
sub ecx 2 +
push esi  +
js loc_42823C  +
mov esi [eax+150h] +
lea eax [esi+ecx*4] +
cmp [eax] edx +
jz loc_428240  +
sub eax 8 +
sub ecx 2 +
jns loc_428230  +
xor eax eax +
pop esi  +
retn   +
***
test edx edx +
jnz loc_42824C  +
mov eax [esi+ecx*4+4] +
cmp [eax] dl +
jz loc_42823C  +
mov eax [esi+ecx*4+4] +
pop esi  +
retn   +
***
test esi esi +
jz loc_4282B0  +
mov eax [esi+24h] +
mov dword ptr [esi+0ACh] 0FFFFFFFFh +
mov dword ptr [esi+0D4h] 1 +
test eax eax +
jz loc_4282B0  +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_42829D  +
push dword ptr [eax+0Ch]  +
call ecx  +
mov eax [esi+24h] +
add esp 4 +
mov dword ptr [eax+28h] 0 +
mov eax [esi+24h] +
mov dword ptr [eax+10h] offset unk_4DE8C5 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov [ecx+0Ch] eax +
pop esi  +
retn   +
***
cmp dword_4F246C 0 +
jnz locret_42833E  +
call sub_45E6A0  +
cmp dword_4F246C 0 +
jnz loc_428339  +
call sub_45E800  +
call sub_4585E0  +
call sub_4583C0  +
cmp dword ptr [eax] offset sub_43ACC0 +
jz loc_4282F8  +
call sub_4583C0  +
cmp dword ptr [eax] 0 +
jnz loc_428302  +
push 0  +
call sub_43AB80  +
add esp 4 +
call sub_460BB0  +
call sub_4126F0  +
call sub_462540  +
call sub_463330  +
call sub_460850  +
call sub_460930  +
call sub_45E520  +
call sub_463020  +
call sub_445AA0  +
mov dword_4F246C 1 +
jmp loc_45E710  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test dword ptr [eax+168h] 20000h +
jnz loc_4284AE  +
mov eax [esp+4+arg_4] +
cmp eax 20h +
jz loc_4285D0  +
cmp eax 3Eh +
jz loc_4285D0  +
cmp eax 2Fh +
jz loc_4285D0  +
cmp eax 61h +
jl loc_428382  +
cmp eax 7Ah +
jle loc_4284A7  +
cmp eax 41h +
jl loc_428390  +
cmp eax 5Ah +
jle loc_4284A7  +
cmp eax 30h +
jl loc_42839E  +
cmp eax 39h +
jle loc_4284A7  +
cmp eax 5Fh +
jz loc_4284A7  +
cmp eax 3Ah +
jz loc_4284A7  +
cmp eax 2Dh +
jz loc_4284A7  +
cmp eax 2Eh +
jz loc_4284A7  +
cmp eax 0B7h +
jz loc_4284A7  +
cmp eax 0C0h +
jl loc_4283DF  +
cmp eax 0D6h +
jle loc_4284A7  +
cmp eax 0D8h +
jl loc_4283F1  +
cmp eax 0F6h +
jle loc_4284A7  +
cmp eax 0F8h +
jl loc_428403  +
cmp eax 2FFh +
jle loc_4284A7  +
cmp eax 300h +
jl loc_428415  +
cmp eax 36Fh +
jle loc_4284A7  +
cmp eax 370h +
jl loc_428427  +
cmp eax 37Dh +
jle loc_4284A7  +
cmp eax 37Fh +
jl loc_428435  +
cmp eax 1FFFh +
jle loc_4284A7  +
cmp eax 200Ch +
jl loc_428443  +
cmp eax 200Dh +
jle loc_4284A7  +
cmp eax 203Fh +
jl loc_428451  +
cmp eax 2040h +
jle loc_4284A7  +
cmp eax 2070h +
jl loc_42845F  +
cmp eax 218Fh +
jle loc_4284A7  +
cmp eax 2C00h +
jl loc_42846D  +
cmp eax 2FEFh +
jle loc_4284A7  +
cmp eax 3001h +
jl loc_42847B  +
cmp eax 0D7FFh +
jle loc_4284A7  +
cmp eax 0F900h +
jl loc_428489  +
cmp eax 0FDCFh +
jle loc_4284A7  +
cmp eax 0FDF0h +
jl loc_428497  +
cmp eax 0FFFDh +
jle loc_4284A7  +
add eax 0FFFF0000h +
cmp eax 0DFFFFh +
ja loc_4285D0  +
mov eax 1 +
pop esi  +
retn   +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_4284FD  +
cmp esi 41h +
jl loc_4284C4  +
cmp esi 5Ah +
jle loc_4284A7  +
cmp esi 61h +
jl loc_4284CE  +
cmp esi 7Ah +
jle loc_4284A7  +
cmp esi 0C0h +
jl loc_4284DE  +
cmp esi 0D6h +
jle loc_4284A7  +
cmp esi 0D8h +
jl loc_4284EE  +
cmp esi 0F6h +
jle loc_4284A7  +
cmp esi 0F8h +
jl loc_42850F  +
mov eax 1 +
pop esi  +
retn   +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4284A7  +
cmp esi 100h +
jl loc_42855F  +
cmp esi 4E00h +
jl loc_428527  +
cmp esi 9FA5h +
jle loc_4284A7  +
cmp esi 3007h +
jz loc_4284A7  +
cmp esi 3021h +
jl loc_428547  +
cmp esi 3029h +
jle loc_4284A7  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4284A7  +
jmp loc_42856B  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_4284A7  +
cmp esi 2Eh +
jz loc_4284A7  +
cmp esi 2Dh +
jz loc_4284A7  +
cmp esi 5Fh +
jz loc_4284A7  +
cmp esi 3Ah +
jz loc_4284A7  +
cmp esi 100h +
jl loc_4285BD  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4284A7  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_4285C8  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jnz loc_4284A7  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test dword ptr [eax+168h] 20000h +
jnz loc_4286FF  +
mov eax [esp+4+arg_4] +
cmp eax 20h +
jz loc_4287AA  +
cmp eax 3Eh +
jz loc_4287AA  +
cmp eax 2Fh +
jz loc_4287AA  +
cmp eax 61h +
jl loc_428622  +
cmp eax 7Ah +
jle loc_4286F8  +
cmp eax 41h +
jl loc_428630  +
cmp eax 5Ah +
jle loc_4286F8  +
cmp eax 5Fh +
jz loc_4286F8  +
cmp eax 3Ah +
jz loc_4286F8  +
cmp eax 0C0h +
jl loc_428654  +
cmp eax 0D6h +
jle loc_4286F8  +
cmp eax 0D8h +
jl loc_428666  +
cmp eax 0F6h +
jle loc_4286F8  +
cmp eax 0F8h +
jl loc_428678  +
cmp eax 2FFh +
jle loc_4286F8  +
cmp eax 370h +
jl loc_428686  +
cmp eax 37Dh +
jle loc_4286F8  +
cmp eax 37Fh +
jl loc_428694  +
cmp eax 1FFFh +
jle loc_4286F8  +
cmp eax 200Ch +
jl loc_4286A2  +
cmp eax 200Dh +
jle loc_4286F8  +
cmp eax 2070h +
jl loc_4286B0  +
cmp eax 218Fh +
jle loc_4286F8  +
cmp eax 2C00h +
jl loc_4286BE  +
cmp eax 2FEFh +
jle loc_4286F8  +
cmp eax 3001h +
jl loc_4286CC  +
cmp eax 0D7FFh +
jle loc_4286F8  +
cmp eax 0F900h +
jl loc_4286DA  +
cmp eax 0FDCFh +
jle loc_4286F8  +
cmp eax 0FDF0h +
jl loc_4286E8  +
cmp eax 0FFFDh +
jle loc_4286F8  +
add eax 0FFFF0000h +
cmp eax 0DFFFFh +
ja loc_4287AA  +
mov eax 1 +
pop esi  +
retn   +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_42874E  +
cmp esi 41h +
jl loc_428715  +
cmp esi 5Ah +
jle loc_4286F8  +
cmp esi 61h +
jl loc_42871F  +
cmp esi 7Ah +
jle loc_4286F8  +
cmp esi 0C0h +
jl loc_42872F  +
cmp esi 0D6h +
jle loc_4286F8  +
cmp esi 0D8h +
jl loc_42873F  +
cmp esi 0F6h +
jle loc_4286F8  +
cmp esi 0F8h +
jl loc_428760  +
mov eax 1 +
pop esi  +
retn   +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4286F8  +
cmp esi 100h +
jl loc_428798  +
cmp esi 4E00h +
jl loc_428778  +
cmp esi 9FA5h +
jle loc_4286F8  +
cmp esi 3007h +
jz loc_4286F8  +
cmp esi 3021h +
jl loc_428798  +
cmp esi 3029h +
jle loc_4286F8  +
cmp esi 5Fh +
jz loc_4286F8  +
cmp esi 3Ah +
jz loc_4286F8  +
xor eax eax +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [esp+14h] +
xor ebx ebx +
test edi edi +
jz loc_428AC3  +
mov esi [esp+18h] +
test esi esi +
jz loc_428AC3  +
mov eax [esi+30h] +
cmp eax 5 +
jz loc_4287DF  +
cmp eax 2 +
jnz loc_428AC3  +
cmp [esi+28h] ebx +
jnz loc_428AC3  +
call sub_4584C0  +
cmp [eax] ebx +
jz loc_428816  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
mov ecx [esp+18h] +
push dword ptr [ecx+8]  +
push offset aReadingSEntity  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov esi [esp+24h] +
add esp 0Ch +
push ebp  +
call sub_421DF0  +
mov ebp eax +
test ebp ebp +
jnz loc_42883B  +
push offset aXmlloadentityc  +
push 1  +
push edi  +
call sub_427B90  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push esi  +
push edi  +
call sub_45C270  +
add esp 8 +
mov [esp+18h] eax +
test eax eax +
jnz loc_42886C  +
push offset aXmlloadentit_0  +
push 1  +
push edi  +
call sub_427B90  +
push ebp  +
call sub_45DAC0  +
add esp 10h +
or eax 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push eax  +
push edi  +
call sub_4397C0  +
add esp 8 +
test eax eax +
js loc_428A37  +
cmp [edi+124h] ebx +
jnz loc_4288A0  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4288A0  +
push edi  +
call sub_428140  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
mov edx eax +
add esp 8 +
mov eax [esp+18h] +
cmp [edi+24h] eax +
jnz loc_4288EF  +
mov ecx [edi+24h] +
mov esi [ecx+10h] +
cmp esi [ecx+14h] +
jnb loc_4288E7  +
cmp edx 100h +
jge loc_42892D  +
cmp edx 9 +
jl loc_4288DD  +
cmp edx 0Ah +
jle loc_428952  +
cmp edx 0Dh +
jz loc_428952  +
cmp edx 20h +
jge loc_428952  +
mov esi [esp+1Ch] +
mov eax [esp+18h] +
mov ecx [edi+24h] +
cmp ecx eax +
jnz loc_428A49  +
mov eax [ecx+10h] +
cmp eax [ecx+14h] +
jb loc_428A49  +
push edi  +
call loc_439740  +
add esp 4 +
mov eax [ebp+0] +
mov [esi+28h] eax +
push ebp  +
mov dword ptr [ebp+0] 0 +
call sub_45DAC0  +
add esp 4 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
cmp edx 0D7FFh +
jle loc_428952  +
cmp edx 0E000h +
jl loc_428945  +
cmp edx 0FFFDh +
jle loc_428952  +
lea eax [edx-10000h] +
cmp eax 0FFFFFh +
ja loc_4288E7  +
push dword ptr [esp+10h]  +
push esi  +
push ebp  +
call near ptr dword_421C04+1Ch  +
mov eax ebx +
add esp 0Ch +
inc ebx  +
cmp eax 64h +
jle loc_428999  +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_42898C  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42898C  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_428A37  +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4289B3  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4289B6  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4289D4  +
push edi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
mov edx eax +
add esp 8 +
test edx edx +
jnz loc_428A25  +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_428A0C  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_428A0C  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_428A37  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
add esp 8 +
mov edx eax +
mov ecx [esp+18h] +
cmp [edi+24h] ecx +
jz loc_4288C0  +
jmp loc_4288E7  +
***
push ebp  +
call sub_45DAC0  +
add esp 4 +
or eax 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
cmp edx 100h +
jge loc_428A72  +
cmp edx 9 +
jl loc_428A5F  +
cmp edx 0Ah +
jle loc_42890F  +
cmp edx 0Dh +
jz loc_42890F  +
cmp edx 20h +
jl loc_428AA3  +
jmp loc_42890F  +
***
cmp edx 0D7FFh +
jle loc_42890F  +
cmp edx 0E000h +
jl loc_428A92  +
cmp edx 0FFFDh +
jle loc_42890F  +
lea eax [edx-10000h] +
cmp eax 0FFFFFh +
jbe loc_42890F  +
push edx  +
push offset aXmlloadentit_1  +
push 9  +
push edi  +
call sub_45B970  +
push ebp  +
call sub_45DAC0  +
add esp 14h +
or eax 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push offset aXmlloadentityc  +
push 1  +
push edi  +
call sub_427B90  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
test ebx ebx +
jnz loc_428B00  +
push offset aXmlnewblankswr  +
push 1  +
push [esp+8+arg_0]  +
call sub_427B90  +
add esp 0Ch +
xor eax eax +
pop ebx  +
retn   +
push esi  +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_428B28  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebx+8]  +
push offset aNewBlanksWrapp  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
push edi  +
push [esp+8+arg_0]  +
call sub_45C4E0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_428B3F  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push ebp  +
push dword ptr [ebx+8]  +
call sub_44E660  +
lea esi [eax+5] +
push esi  +
mov [esp+14h+arg_4] esi +
call off_4EE2EC  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jnz loc_428B7A  +
push eax  +
push [esp+10h+arg_0]  +
call sub_45BA50  +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esp+0Ch+arg_4] +
add esi ebp +
add eax 0FFFFFFFBh +
mov word ptr [ebp+0] 2520h +
push eax  +
lea eax [ebp+2] +
mov word ptr [esi-3] 203Bh +
mov byte ptr [esi-1] 0 +
push dword ptr [ebx+8]  +
push eax  +
call loc_48C9C0  +
mov eax [esp+18h+arg_4] +
add esp 0Ch +
mov [edi+0Ch] ebp +
mov [edi+10h] ebp +
mov [edi+18h] eax +
mov eax edi +
pop ebp  +
mov [edi+14h] esi +
mov dword ptr [edi+28h] offset loc_426850 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push edi  +
mov edi [esp+4+arg_4] +
test esi esi +
jz loc_428BF3  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_428BF0  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_428C35  +
mov [esi+54h] edi +
mov edx [esp+4+arg_14] +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push edx  +
push ecx  +
push eax  +
push [esp+10h+arg_8]  +
push 0  +
push 0  +
push edx  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 2  +
push edi  +
push 3  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 4Ch +
test esi esi +
jz loc_428C35  +
mov dword ptr [esi+164h] 0 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_428C5B  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_428C5B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_428C92  +
mov edx [esp+arg_14] +
mov ecx [esp+arg_10] +
mov eax [esp+arg_C] +
push edx  +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push edx  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 1  +
push [esp+30h+arg_4]  +
push 3  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 4Ch +
pop esi  +
retn   +
***
sub esp 0ACh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0ACh+var_4] eax +
mov eax [esp+0ACh+arg_4] +
push esi  +
mov [esp+0B0h+var_8C] eax +
xor esi esi +
xor eax eax +
push edi  +
mov edi [esp+0B4h+arg_0] +
mov [esp+0B4h+var_9C] eax +
mov [esp+0B4h+var_98] eax +
mov [esp+0B4h+var_A4] edi +
mov eax [edi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 22h +
jnz loc_428CEA  +
mov [esp+0B4h+var_A9] al +
jmp loc_428CF6  +
cmp al 27h +
jnz loc_42942E  +
mov [esp+0B4h+var_A9] al +
push edi  +
mov dword ptr [edi+0ACh] 0Ch +
call sub_45C5B0  +
add esp 4 +
push ebx  +
push ebp  +
mov ebp 64h +
push ebp  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4293FF  +
lea eax [esp+0BCh+var_94] +
push eax  +
push edi  +
call sub_45B5E0  +
mov dl [esp+0C4h+var_A9] +
mov ecx eax +
mov eax [edi+24h] +
add esp 8 +
mov eax [eax+10h] +
cmp [eax] dl +
mov edx [esp+0BCh+arg_8] +
jz loc_428D75  +
cmp ecx 100h +
jge loc_428E4A  +
cmp ecx 9 +
jl loc_428D63  +
cmp ecx 0Ah +
jle loc_428E73  +
cmp ecx 0Dh +
jz loc_428E73  +
cmp ecx 20h +
jge loc_428E73  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42940A  +
cmp [esp+0BCh+var_98] 0 +
jz loc_428D9D  +
test edx edx +
jz loc_428D9D  +
test esi esi +
jz loc_428D9D  +
cmp byte ptr [ebx+esi-1] 20h +
jnz loc_428D9D  +
sub esi 1 +
jnz loc_428D91  +
mov byte ptr [esi+ebx] 0 +
mov eax [edi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 3Ch +
jnz loc_429344  +
push 81h  +
lea eax [esp+0C0h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_428DDB  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4293BC  +
push offset aUnescapedNotAl  +
push offset aS  +
lea eax [esp+0C4h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0D0h+var_88] +
mov dword ptr [edi+54h] 26h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 26h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_4293BC  +
mov dword ptr [edi+0D4h] 1 +
jmp loc_4293BC  +
cmp ecx 0D7FFh +
jle loc_428E73  +
cmp ecx 0E000h +
jl loc_428E62  +
cmp ecx 0FFFDh +
jle loc_428E73  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
ja loc_428D75  +
cmp ecx 3Ch +
jz loc_428D75  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42940A  +
cmp esi 989680h +
jbe loc_428EA1  +
test dword ptr [edi+168h] 80000h +
jz loc_4293C4  +
test ecx ecx +
jz loc_428D75  +
cmp ecx 26h +
jnz loc_4291F4  +
mov eax [edi+24h] +
mov [esp+0BCh+var_98] 0 +
push edi  +
mov eax [eax+10h] +
cmp byte ptr [eax+1] 23h +
jnz loc_428FBB  +
call loc_42BAF0  +
add esp 4 +
mov [esp+0BCh+var_A0] eax +
cmp eax 26h +
jnz loc_428F67  +
cmp dword ptr [edi+10h] 0 +
lea eax [esi+0Ah] +
jz loc_428F23  +
cmp eax ebp +
jbe loc_428F19  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_A8] eax +
cmp eax ebp +
jb loc_4293FF  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FF  +
mov ebp [esp+0BCh+var_A8] +
mov ebx eax +
mov byte ptr [esi+ebx] 26h +
inc esi  +
jmp loc_429314  +
cmp eax ebp +
jbe loc_428F53  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_A8] eax +
cmp eax ebp +
jb loc_4293FF  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FF  +
mov ebp [esp+0BCh+var_A8] +
mov ebx eax +
mov dword ptr [esi+ebx] 38332326h +
mov byte ptr [esi+ebx+4] 3Bh +
add esi 5 +
jmp loc_429314  +
test eax eax +
jz loc_429314  +
lea eax [esi+0Ah] +
cmp eax ebp +
jbe loc_428FA2  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_A8] eax +
cmp eax ebp +
jb loc_4293FF  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FF  +
mov ebp [esp+0BCh+var_A8] +
mov ebx eax +
push [esp+0BCh+var_A0]  +
lea eax [esi+ebx] +
push eax  +
push 0  +
call sub_45B4F0  +
add esp 0Ch +
add esi eax +
jmp loc_429314  +
call sub_430DD0  +
inc dword ptr [edi+1B8h]  +
mov ecx eax +
add esp 4 +
mov [esp+0BCh+var_A0] ecx +
test ecx ecx +
jz loc_429314  +
mov eax [ecx+44h] +
add [edi+1B8h] eax +
cmp dword ptr [ecx+30h] 6 +
jnz loc_42904D  +
lea eax [esi+0Ah] +
cmp eax ebp +
jbe loc_42901D  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_A8] eax +
cmp eax ebp +
jb loc_4293FF  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FF  +
mov ebp [esp+0BCh+var_A8] +
mov ebx eax +
mov ecx [esp+0BCh+var_A0] +
cmp dword ptr [edi+10h] 0 +
jnz loc_42903F  +
mov eax [ecx+28h] +
cmp byte ptr [eax] 26h +
jnz loc_42903F  +
mov dword ptr [esi+ebx] 38332326h +
mov byte ptr [esi+ebx+4] 3Bh +
add esi 5 +
jmp loc_429314  +
mov eax [ecx+28h] +
mov al [eax] +
mov [esi+ebx] al +
inc esi  +
jmp loc_429314  +
cmp dword ptr [edi+10h] 0 +
jz loc_4290F4  +
push 0  +
push 0  +
push 0  +
push 1  +
push dword ptr [ecx+28h]  +
push edi  +
call sub_439DD0  +
add esp 18h +
mov [esp+0BCh+var_9C] eax +
test eax eax +
jz loc_429314  +
cmp byte ptr [eax] 0 +
mov edi eax +
jz loc_4290DC  +
lea ecx [esi+0Ah] +
mov al [edi] +
cmp al 0Dh +
jz loc_429094  +
cmp al 0Ah +
jz loc_429094  +
cmp al 9 +
jz loc_429094  +
mov [esi+ebx] al +
jmp loc_429098  +
mov byte ptr [esi+ebx] 20h +
inc ecx  +
inc esi  +
inc edi  +
mov [esp+0BCh+var_A8] ecx +
cmp ecx ebp +
jbe loc_4290D3  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_A0] eax +
cmp eax ebp +
jb loc_4293FB  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FB  +
mov ebp [esp+0BCh+var_A0] +
mov ebx eax +
mov ecx [esp+0BCh+var_A8] +
cmp byte ptr [edi] 0 +
jnz loc_429081  +
mov eax [esp+0BCh+var_9C] +
push eax  +
call off_4EE2F4  +
mov edi [esp+0C0h+var_A4] +
mov [esp+0C0h+var_9C] 0 +
jmp loc_429311  +
push dword ptr [ecx+8]  +
call sub_44E660  +
mov ecx eax +
add esp 4 +
mov eax [esp+0BCh+var_A0] +
mov [esp+0BCh+var_A8] ecx +
cmp dword ptr [eax+30h] 6 +
mov edx [eax+8] +
mov [esp+0BCh+var_90] edx +
jz loc_42918F  +
mov edx [eax+28h] +
test edx edx +
jz loc_42918F  +
cmp dword ptr [eax+48h] 0 +
jnz loc_42918F  +
mov edi [edi+1B8h] +
push 0  +
push 0  +
push 0  +
push 1  +
push edx  +
push [esp+0D0h+var_A4]  +
call sub_439DD0  +
mov edx eax +
add esp 18h +
mov eax [esp+0BCh+var_A4] +
mov [esp+0BCh+var_9C] edx +
mov eax [eax+1B8h] +
sub eax edi +
mov edi [esp+0BCh+var_A0] +
lea eax ds:2[eax*2] +
mov [edi+48h] eax +
test edx edx +
jz loc_42918B  +
push 3Ch  +
push edx  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_429175  +
or dword ptr [edi+48h] 1 +
mov eax [esp+0BCh+var_9C] +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov [esp+0BCh+var_9C] 0 +
mov ecx [esp+0BCh+var_A8] +
mov byte ptr [esi+ebx] 26h +
inc esi  +
lea eax [esi+0Ah] +
add eax ecx +
mov [esp+0BCh+var_A0] eax +
cmp eax ebp +
jbe loc_4291D0  +
lea edi [ebp+5] +
lea edi [ecx+edi*2] +
cmp edi ebp +
jb loc_4293FB  +
push edi  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FB  +
mov ebx eax +
mov ecx [esp+0BCh+var_A8] +
mov ebp edi +
cmp [esp+0BCh+var_A0] edi +
ja loc_4291A1  +
test ecx ecx +
jle loc_4291E6  +
mov edx [esp+0BCh+var_90] +
mov al [edx] +
lea edx [edx+1] +
mov [esi+ebx] al +
dec ecx  +
inc esi  +
test ecx ecx +
jg loc_4291D8  +
mov edi [esp+0BCh+var_A4] +
mov byte ptr [esi+ebx] 3Bh +
inc esi  +
jmp loc_429314  +
cmp ecx 20h +
jz loc_429265  +
cmp ecx 0Dh +
jz loc_429265  +
cmp ecx 0Ah +
jz loc_429265  +
cmp ecx 9 +
jz loc_429265  +
cmp [esp+0BCh+var_94] 1 +
mov [esp+0BCh+var_98] 0 +
jnz loc_42921D  +
mov [esi+ebx] cl +
inc esi  +
jmp loc_42922C  +
push ecx  +
lea eax [esi+ebx] +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
lea eax [esi+0Ah] +
cmp eax ebp +
jbe loc_4292D9  +
lea eax ds:0Ah[ebp*2] +
mov [esp+0BCh+var_90] eax +
cmp eax ebp +
jb loc_4293FF  +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FF  +
mov ebp [esp+0BCh+var_90] +
mov ebx eax +
jmp loc_4292D9  +
test esi esi +
jnz loc_42926F  +
test edx edx +
jnz loc_4292D9  +
jmp loc_42927A  +
test edx edx +
jz loc_42927A  +
cmp [esp+0BCh+var_98] 0 +
jnz loc_4292D1  +
cmp [esp+0BCh+var_94] 1 +
jnz loc_429288  +
mov byte ptr [esi+ebx] 20h +
inc esi  +
jmp loc_429298  +
lea eax [esi+ebx] +
push 20h  +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
lea eax [esi+0Ah] +
cmp eax ebp +
jbe loc_4292D1  +
nop   +
lea edi ds:0Ah[ebp*2] +
cmp edi ebp +
jb loc_4293FB  +
push edi  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4293FB  +
mov ebx eax +
mov ebp edi +
lea eax [esi+0Ah] +
cmp eax edi +
ja loc_4292A0  +
mov edi [esp+0BCh+var_A4] +
mov [esp+0BCh+var_98] 1 +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4292F3  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4292F6  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+0BCh+var_94] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_429314  +
push edi  +
call sub_439220  +
add esp 4 +
cmp dword ptr [edi+124h] 0 +
jnz loc_428D24  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_428D24  +
push edi  +
call sub_428140  +
add esp 4 +
jmp loc_428D24  +
cmp al [esp+0BCh+var_A9] +
jz loc_4293B3  +
test ecx ecx +
jz loc_42936A  +
cmp ecx 100h +
jge loc_42937C  +
cmp ecx 9 +
jl loc_429360  +
cmp ecx 0Ah +
jle loc_42936A  +
cmp ecx 0Dh +
jz loc_42936A  +
cmp ecx 20h +
jl loc_4293A1  +
push offset aAttvalueExpect  +
push 28h  +
push edi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_4293BC  +
cmp ecx 0D7FFh +
jle loc_42936A  +
cmp ecx 0E000h +
jl loc_429394  +
cmp ecx 0FFFDh +
jle loc_42936A  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
jbe loc_42936A  +
push offset aInvalidChara_0  +
push 9  +
push edi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_4293BC  +
push edi  +
call sub_45C5B0  +
add esp 4 +
cmp esi 7FFFFFFFh +
jb loc_4293D6  +
push offset aAttvalueLength  +
push 28h  +
push edi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_4293FF  +
mov eax [esp+0BCh+var_8C] +
test eax eax +
jz loc_4293E0  +
mov [eax] esi +
mov eax ebx +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+0ACh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0ACh +
retn   +
mov edi [esp+0BCh+var_A4] +
push 0  +
push edi  +
call sub_45BA50  +
add esp 8 +
test ebx ebx +
jz loc_429418  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+0BCh+var_9C] +
test eax eax +
jz loc_42942A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
jmp loc_4293E2  +
push 81h  +
lea eax [esp+0B8h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] esi +
jz loc_429453  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4294B4  +
push offset aAttvalueOrExpe  +
push offset aS  +
lea eax [esp+0BCh+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C8h+var_88] +
mov dword ptr [edi+54h] 27h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 27h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] esi +
cmp [edi+120h] esi +
jnz loc_4294B4  +
mov dword ptr [edi+0D4h] 1 +
mov ecx [esp+0B4h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0ACh +
retn   +
***
sub esp 0A0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+9Ch] eax +
mov eax [esp+0A8h] +
push esi  +
push edi  +
mov edi [esp+0ACh] +
mov [esp+1Ch] eax +
mov eax [esp+0B4h] +
mov [esp+18h] eax +
cmp dword ptr [edi+124h] 0 +
jnz loc_429526  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_429526  +
push edi  +
call sub_428140  +
add esp 4 +
mov ecx [edi+24h] +
mov esi [ecx+10h] +
mov eax [ecx+1Ch] +
mov edx [ecx+20h] +
mov [esp+14h] eax +
mov al [esi] +
cmp al 22h +
jz loc_4295ED  +
cmp al 27h +
jz loc_4295ED  +
push 81h  +
lea eax [esp+24h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_42956E  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4295D4  +
push offset aAttvalueOrExpe  +
push offset aS  +
lea eax [esp+28h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+34h] +
mov dword ptr [edi+54h] 27h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 27h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_4295D4  +
mov dword ptr [edi+0D4h] 1 +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+9Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
inc edx  +
mov dword ptr [edi+0ACh] 0Ch +
mov ah [esi] +
inc esi  +
push ebx  +
mov ebx [ecx+14h] +
mov [esp+10h] edx +
mov edx ebx +
mov [esp+0Fh] ah +
push ebp  +
mov ebp esi +
mov [esp+18h] ebp +
cmp esi edx +
jb loc_429655  +
cmp dword ptr [edi+124h] 0 +
mov ebp [ecx+0Ch] +
jnz loc_429634  +
sub ebx [ecx+10h] +
cmp ebx 0FAh +
jge loc_429634  +
push edi  +
call sub_428140  +
add esp 4 +
mov ecx [edi+24h] +
mov eax [ecx+0Ch] +
cmp ebp eax +
jz loc_42964A  +
sub eax ebp +
add esi eax +
mov ebp esi +
mov [esp+18h] ebp +
jmp loc_42964C  +
mov ebp esi +
mov ebx [ecx+14h] +
mov edx ebx +
mov ah [esp+13h] +
cmp dword ptr [esp+0C0h] 0 +
jz loc_429907  +
cmp esi edx +
jnb loc_4297E0  +
mov al [esi] +
cmp al ah +
jz loc_429727  +
cmp al 20h +
jz loc_42968E  +
cmp al 9 +
jz loc_42968E  +
cmp al 0Ah +
jz loc_429692  +
cmp al 0Dh +
jnz loc_429727  +
cmp al 0Ah +
jnz loc_4296A0  +
inc dword ptr [esp+1Ch]  +
mov dword ptr [esp+14h] 1 +
jmp loc_4296A4  +
inc dword ptr [esp+14h]  +
inc esi  +
mov ebp esi +
mov [esp+18h] ebp +
cmp esi edx +
jb loc_429670  +
cmp dword ptr [edi+124h] 0 +
mov ebp [ecx+0Ch] +
jnz loc_4296CF  +
sub ebx [ecx+10h] +
cmp ebx 0FAh +
jge loc_4296CF  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4299D4  +
mov ecx [edi+24h] +
mov eax [ecx+0Ch] +
cmp ebp eax +
jz loc_4296F2  +
sub eax ebp +
add esi eax +
mov ebp esi +
mov [esp+18h] ebp +
jmp loc_4296F6  +
mov ebp [esp+18h] +
mov ebx [ecx+14h] +
mov eax esi +
sub eax ebp +
mov edx ebx +
cmp eax 989680h +
jle loc_429716  +
test dword ptr [edi+168h] 80000h +
jz loc_4299C4  +
cmp esi edx +
jnb loc_4297E0  +
mov ah [esp+13h] +
jmp loc_429670  +
***
cmp esi edx +
jnb loc_4297E0  +
mov ecx [esp+14h] +
mov al [esi] +
cmp al ah +
jz loc_4297E0  +
cmp al 20h +
jb loc_4297E0  +
cmp al 7Fh +
ja loc_4297E0  +
cmp al 26h +
jz loc_4297E0  +
cmp al 3Ch +
jz loc_4297E0  +
inc ecx  +
inc esi  +
mov [esp+14h] ecx +
cmp al 20h +
jnz loc_42976B  +
cmp [esi] al +
jz loc_4297E0  +
cmp esi edx +
jb loc_429733  +
cmp dword ptr [edi+124h] 0 +
mov ecx [edi+24h] +
mov ebx [ecx+0Ch] +
jnz loc_429794  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax 0FAh +
jge loc_429794  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4299D4  +
mov edx [edi+24h] +
mov eax [edx+0Ch] +
cmp ebx eax +
jz loc_4297B5  +
sub eax ebx +
add ebp eax +
add esi eax +
mov [esp+18h] ebp +
mov edx [edx+14h] +
mov eax esi +
sub eax ebp +
cmp eax 989680h +
jle loc_4297D3  +
test dword ptr [edi+168h] 80000h +
jz loc_4299C4  +
cmp esi edx +
jnb loc_4297E0  +
mov ah [esp+13h] +
jmp loc_42972F  +
***
cmp byte ptr [esi-1] 20h +
lea eax [esi-1] +
mov ebx esi +
jnz loc_4297FF  +
cmp ebx ebp +
jbe loc_4297FF  +
mov ebx eax +
cmp byte ptr [ebx-1] 20h +
lea eax [ebx-1] +
jz loc_4297F0  +
mov cl [esp+13h] +
cmp esi edx +
jnb loc_4298C5  +
mov al [esi] +
cmp al cl +
jz loc_4298C5  +
cmp al 20h +
jz loc_42982E  +
cmp al 9 +
jz loc_42982E  +
cmp al 0Ah +
jz loc_429832  +
cmp al 0Dh +
jnz loc_4298C5  +
cmp al 0Ah +
jnz loc_429840  +
inc dword ptr [esp+1Ch]  +
mov dword ptr [esp+14h] 1 +
jmp loc_429844  +
inc dword ptr [esp+14h]  +
inc esi  +
cmp esi edx +
jb loc_429810  +
cmp dword ptr [edi+124h] 0 +
mov ecx [edi+24h] +
mov ebp [ecx+0Ch] +
jnz loc_42986E  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax 0FAh +
jge loc_42986E  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4299D4  +
mov edx [edi+24h] +
mov eax [edx+0Ch] +
cmp ebp eax +
jz loc_429897  +
sub eax ebp +
mov ebp [esp+18h] +
add ebp eax +
add esi eax +
mov [esp+18h] ebp +
add ebx eax +
jmp loc_42989B  +
mov ebp [esp+18h] +
mov edx [edx+14h] +
mov eax esi +
sub eax ebp +
cmp eax 989680h +
jle loc_4298B9  +
test dword ptr [edi+168h] 80000h +
jz loc_4299C4  +
mov cl [esp+13h] +
cmp esi edx +
jb loc_429810  +
mov eax esi +
sub eax ebp +
cmp eax 989680h +
jle loc_4298E0  +
test dword ptr [edi+168h] 80000h +
jz loc_4299C4  +
cmp [esi] cl +
jnz loc_4299E4  +
mov eax [esp+14h] +
inc esi  +
mov ecx [esp+24h] +
inc eax  +
mov [esp+14h] eax +
test ecx ecx +
jz loc_429A09  +
sub ebx ebp +
mov [ecx] ebx +
jmp loc_429A29  +
cmp esi edx +
jnb loc_4299AB  +
nop   +
mov al [esi] +
cmp al ah +
jz loc_4299AB  +
cmp al 20h +
jb loc_4299AB  +
cmp al 7Fh +
ja loc_4299AB  +
cmp al 26h +
jz loc_4299AB  +
cmp al 3Ch +
jz loc_4299AB  +
inc dword ptr [esp+14h]  +
inc esi  +
cmp esi edx +
jb loc_429910  +
cmp dword ptr [edi+124h] 0 +
mov ebp [ecx+0Ch] +
jnz loc_42995B  +
sub ebx [ecx+10h] +
cmp ebx 0FAh +
jge loc_42995B  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4299D4  +
mov ecx [edi+24h] +
mov eax [ecx+0Ch] +
cmp ebp eax +
jz loc_42997E  +
sub eax ebp +
mov ebp [esp+18h] +
add ebp eax +
add esi eax +
mov [esp+18h] ebp +
jmp loc_429982  +
mov ebp [esp+18h] +
mov ebx [ecx+14h] +
mov eax esi +
sub eax ebp +
mov edx ebx +
cmp eax 989680h +
jle loc_42999E  +
test dword ptr [edi+168h] 80000h +
jz loc_4299C4  +
cmp esi edx +
jnb loc_4299AB  +
mov ah [esp+13h] +
jmp loc_429910  +
***
mov eax esi +
mov ebx esi +
sub eax ebp +
cmp eax 989680h +
jle loc_4299D8  +
test dword ptr [edi+168h] 80000h +
jnz loc_4299D8  +
push offset aAttvalueLength  +
push 28h  +
push edi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
jmp loc_429A4F  +
mov al [esp+13h] +
cmp [esi] al +
jz loc_4298E8  +
mov eax [esp+20h] +
test eax eax +
jz loc_4299F2  +
mov dword ptr [eax] 1 +
push dword ptr [esp+0C0h]  +
mov ecx [esp+28h] +
push ecx  +
push edi  +
call sub_428CA0  +
add esp 0Ch +
jmp loc_429A4F  +
mov eax [esp+20h] +
test eax eax +
jz loc_429A17  +
mov dword ptr [eax] 1 +
sub ebx ebp +
push ebx  +
push ebp  +
call sub_44E8A0  +
mov ebp eax +
add esp 8 +
mov eax [esp+14h] +
mov ecx [edi+24h] +
mov edx [esp+1Ch] +
mov [ecx+10h] esi +
mov ecx [edi+24h] +
mov [ecx+1Ch] edx +
mov ecx [edi+24h] +
mov [ecx+20h] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_429A4D  +
mov dword ptr [eax] 0 +
mov eax ebp +
mov ecx [esp+0ACh] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
mov ebp [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
mov dword ptr [ebp+0] 0 +
cmp dword ptr [esi+124h] 0 +
jnz loc_429AA5  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_429AA5  +
push esi  +
call sub_428140  +
add esp 4 +
push esi  +
call sub_432EB0  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_429ACA  +
push offset aErrorParsingAt  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Dh +
jnz loc_429BD0  +
push edi  +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
add esp 8 +
cmp dword ptr [esi+24h] 0 +
jz loc_429B0B  +
push 0  +
push 0  +
push 0  +
push esi  +
call loc_4294D0  +
add esp 10h +
mov edi eax +
jmp loc_429B0D  +
xor edi edi +
cmp dword ptr [esi+10Ch] 0 +
mov dword ptr [esi+0ACh] 7 +
jz loc_429B51  +
push offset aXmlLang  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429B51  +
push edi  +
call near ptr dword_427120  +
add esp 4 +
test eax eax +
jnz loc_429B51  +
push eax  +
push edi  +
push offset aMalformedValue  +
push 62h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
push offset aXmlSpace  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429BC6  +
push offset aDefault  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429B8B  +
mov eax [esi+0E8h] +
mov dword ptr [eax] 0 +
mov eax ebx +
mov [ebp+0] edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push offset aPreserve  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429BB3  +
mov eax [esi+0E8h] +
mov dword ptr [eax] 1 +
mov eax ebx +
mov [ebp+0] edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push 0  +
push edi  +
push offset aInvalidValueSF  +
push 66h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
mov [ebp+0] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push ebx  +
push offset aSpecificationM  +
push 29h  +
push esi  +
call sub_428050  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebx  +
push ebp  +
push esi  +
mov esi [esp+10h+arg_0] +
xor ebx ebx +
push edi  +
xor edi edi +
mov [eax] ebx +
mov [esp+14h+var_4] ebx +
cmp [esi+124h] ebx +
jnz loc_429C29  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_429C29  +
push esi  +
call sub_428140  +
add esp 4 +
push [esp+14h+arg_C]  +
push esi  +
call sub_435270  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jnz loc_429C54  +
push offset aErrorParsingAt  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
mov ecx [esi+160h] +
test ecx ecx +
jz loc_429C84  +
mov eax [esp+14h+arg_C] +
push ebp  +
push dword ptr [eax]  +
push [esp+1Ch+arg_8]  +
push [esp+20h+arg_4]  +
push ecx  +
call sub_450540  +
add esp 14h +
mov ecx 1 +
test eax eax +
cmovnz ebx ecx +
mov [esp+14h+var_4] ebx +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Dh +
jnz loc_429DE4  +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
push ebx  +
push [esp+20h+arg_18]  +
push [esp+24h+arg_14]  +
push esi  +
call loc_4294D0  +
add esp 18h +
mov ebx eax +
cmp [esp+14h+var_4] edi +
jz loc_429CF2  +
mov eax [esp+14h+arg_18] +
cmp [eax] edi +
jz loc_429CF2  +
push [esp+14h+arg_14]  +
push ebx  +
push esi  +
call loc_427050  +
add esp 0Ch +
mov [esp+14h+arg_0] eax +
test eax eax +
jz loc_429CF2  +
cmp eax ebx +
jz loc_429CF2  +
push ebx  +
call off_4EE2F4  +
mov ebx [esp+18h+arg_0] +
add esp 4 +
mov eax [esp+14h+arg_C] +
mov dword ptr [esi+0ACh] 7 +
mov eax [eax] +
cmp eax [esi+138h] +
jnz loc_429DD6  +
cmp [esi+10Ch] edi +
jz loc_429D55  +
push offset aLang  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429D55  +
mov eax [esp+14h+arg_14] +
push dword ptr [eax]  +
push ebx  +
call sub_44E8A0  +
mov edi eax +
push edi  +
call near ptr dword_427120  +
add esp 0Ch +
test eax eax +
jnz loc_429D55  +
push eax  +
push edi  +
push offset aMalformedValue  +
push 62h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
push offset aSpace  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429DC8  +
mov eax [esp+14h+arg_14] +
push dword ptr [eax]  +
push ebx  +
call sub_44E8A0  +
mov edi eax +
push offset aDefault  +
push edi  +
call sub_44E370  +
add esp 10h +
test eax eax +
jz loc_429D95  +
mov eax [esi+0E8h] +
mov dword ptr [eax] 0 +
jmp loc_429DC8  +
push offset aPreserve  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_429DB5  +
mov eax [esi+0E8h] +
mov dword ptr [eax] 1 +
jmp loc_429DC8  +
push 0  +
push edi  +
push offset aInvalidValueSF  +
push 66h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
test edi edi +
jz loc_429DD6  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+14h+arg_10] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov eax ebp +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
push ebp  +
push offset aSpecificationM  +
push 29h  +
push esi  +
call sub_428050  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 14h +
push ebx  +
push esi  +
mov esi [esp+20h] +
mov ebx [esi+24h] +
mov [esp+20h] ebx +
mov eax [ebx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42A25D  +
cmp byte ptr [eax+1] 21h +
jnz loc_42A25D  +
cmp byte ptr [eax+2] 41h +
jnz loc_42A25D  +
cmp byte ptr [eax+3] 54h +
jnz loc_42A25D  +
cmp byte ptr [eax+4] 54h +
jnz loc_42A25D  +
cmp byte ptr [eax+5] 4Ch +
jnz loc_42A25D  +
cmp byte ptr [eax+6] 49h +
jnz loc_42A25D  +
cmp byte ptr [eax+7] 53h +
jnz loc_42A25D  +
cmp byte ptr [eax+8] 54h +
jnz loc_42A25D  +
add dword ptr [esi+0C8h] 9 +
add dword ptr [ebx+10h] 9 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 9 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_429E92  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_429EB8  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_429EB8  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_429EE0  +
cmp al 9 +
jb loc_429ECC  +
cmp al 0Ah +
jbe loc_429EE0  +
cmp al 0Dh +
jz loc_429EE0  +
push offset aSpaceRequire_8  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
add esp 8 +
mov [esp+10h] eax +
test eax eax +
jnz loc_429F0D  +
push offset aAttlistNoNameF  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
pop esi  +
pop ebx  +
add esp 14h +
retn   +
***
push esi  +
call loc_439900  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_429F39  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_429F39  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_42A231  +
push ebp  +
push edi  +
jnz loc_42A106  +
mov eax [eax+20h] +
test eax eax +
jz loc_42A106  +
push dword ptr [esp+10h]  +
push edi  +
push ebx  +
push ebp  +
push dword ptr [esp+24h]  +
push dword ptr [esp+2Ch]  +
push dword ptr [esi+4]  +
call eax  +
add esp 1Ch +
jmp loc_42A117  +
mov eax [esp+10h] +
test eax eax +
jz loc_42A117  +
push eax  +
call sub_452950  +
add esp 4 +
cmp dword ptr [esi+144h] 0 +
jz loc_42A143  +
test edi edi +
jz loc_42A143  +
cmp ebx 3 +
jz loc_42A143  +
cmp ebx 2 +
mov ebx [esp+14h] +
jz loc_42A147  +
push edi  +
push ebx  +
push dword ptr [esp+20h]  +
push esi  +
call sub_426D70  +
add esp 10h +
jmp loc_42A147  +
mov ebx [esp+14h] +
cmp dword ptr [esi+144h] 0 +
jz loc_42A15F  +
push ebp  +
push ebx  +
push dword ptr [esp+20h]  +
push esi  +
call sub_426F80  +
add esp 10h +
test edi edi +
jz loc_42A16D  +
push edi  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42A190  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42A190  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Eh +
jnz near ptr dword_429F4C+4  +
jmp loc_42A22B  +
push offset aSpaceRequir_11  +
push 41h  +
jmp loc_42A222  +
push offset aSpaceRequir_12  +
push 41h  +
push esi  +
call sub_427FE0  +
mov eax [esp+1Ch] +
add esp 0Ch +
test eax eax +
jz loc_42A22B  +
push eax  +
call sub_452950  +
add esp 4 +
jmp loc_42A22B  +
push offset aSpaceRequir_13  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
test edi edi +
jz loc_42A1EE  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+10h] +
test eax eax +
jz loc_42A22B  +
push eax  +
call sub_452950  +
add esp 4 +
jmp loc_42A22B  +
push offset aInXmlparseattr  +
push 1  +
push esi  +
call sub_427B90  +
jmp loc_42A1DD  +
***
mov eax [esp+1Ch] +
test eax eax +
jz loc_42A1EE  +
push eax  +
jmp loc_42A1E5  +
***
push offset aAttlistNoNam_0  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov ebx [esp+28h] +
pop edi  +
pop ebp  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Eh +
jnz loc_42A25D  +
cmp ebx ecx +
jz loc_42A254  +
push 0  +
push 0  +
push offset aAttributeListD  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
push esi  +
call sub_45C5B0  +
add esp 4 +
pop esi  +
pop ebx  +
add esp 14h +
retn   +
***
push esi  +
mov esi [esp+8] +
cmp dword ptr [esi+124h] 0 +
jnz loc_42A2A5  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42A2A5  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42A2A5  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 43h +
jnz loc_42A31D  +
cmp byte ptr [eax+1] 44h +
jnz loc_42A31D  +
cmp byte ptr [eax+2] 41h +
jnz loc_42A31D  +
cmp byte ptr [eax+3] 54h +
jnz loc_42A31D  +
cmp byte ptr [eax+4] 41h +
jnz loc_42A31D  +
add dword ptr [esi+0C8h] 5 +
add dword ptr [ecx+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A2F0  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A316  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A316  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 1 +
pop esi  +
retn   +
***
cmp dl 49h +
jnz loc_42A469  +
cmp byte ptr [eax+1] 44h +
jnz loc_42A397  +
cmp byte ptr [eax+2] 52h +
jnz loc_42A397  +
cmp byte ptr [eax+3] 45h +
jnz loc_42A397  +
cmp byte ptr [eax+4] 46h +
jnz loc_42A397  +
cmp byte ptr [eax+5] 53h +
jnz loc_42A397  +
add dword ptr [esi+0C8h] 6 +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A36A  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A390  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A390  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 4 +
pop esi  +
retn   +
***
cmp dl 49h +
jnz loc_42A469  +
cmp byte ptr [eax+1] 44h +
jnz loc_42A40B  +
cmp byte ptr [eax+2] 52h +
jnz loc_42A40B  +
cmp byte ptr [eax+3] 45h +
jnz loc_42A40B  +
cmp byte ptr [eax+4] 46h +
jnz loc_42A40B  +
add dword ptr [esi+0C8h] 5 +
add dword ptr [ecx+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A3DE  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A404  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A404  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 3 +
pop esi  +
retn   +
***
cmp dl 49h +
jnz loc_42A469  +
cmp byte ptr [eax+1] 44h +
jnz loc_42A469  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A43C  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A462  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A462  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 2 +
pop esi  +
retn   +
***
cmp dl 45h +
jnz loc_42A564  +
cmp byte ptr [eax+1] 4Eh +
jnz loc_42A4E3  +
cmp byte ptr [eax+2] 54h +
jnz loc_42A4E3  +
cmp byte ptr [eax+3] 49h +
jnz loc_42A4E3  +
cmp byte ptr [eax+4] 54h +
jnz loc_42A4E3  +
cmp byte ptr [eax+5] 59h +
jnz loc_42A4E3  +
add dword ptr [esi+0C8h] 6 +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A4B6  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A4DC  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A4DC  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 5 +
pop esi  +
retn   +
***
cmp dl 45h +
jnz loc_42A564  +
cmp byte ptr [eax+1] 4Eh +
jnz loc_42A564  +
cmp byte ptr [eax+2] 54h +
jnz loc_42A564  +
cmp byte ptr [eax+3] 49h +
jnz loc_42A564  +
cmp byte ptr [eax+4] 54h +
jnz loc_42A564  +
cmp byte ptr [eax+5] 49h +
jnz loc_42A564  +
cmp [eax+6] dl +
jnz loc_42A564  +
cmp byte ptr [eax+7] 53h +
jnz loc_42A564  +
add dword ptr [esi+0C8h] 8 +
add dword ptr [ecx+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A537  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A55D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A55D  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 6 +
pop esi  +
retn   +
***
cmp dl 4Eh +
jnz loc_42A664  +
cmp byte ptr [eax+1] 4Dh +
jnz loc_42A5E9  +
cmp byte ptr [eax+2] 54h +
jnz loc_42A5E9  +
cmp byte ptr [eax+3] 4Fh +
jnz loc_42A5E9  +
cmp byte ptr [eax+4] 4Bh +
jnz loc_42A5E9  +
cmp byte ptr [eax+5] 45h +
jnz loc_42A5E9  +
cmp [eax+6] dl +
jnz loc_42A5E9  +
cmp byte ptr [eax+7] 53h +
jnz loc_42A5E9  +
add dword ptr [esi+0C8h] 8 +
add dword ptr [ecx+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A5BC  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A5E2  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A5E2  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 8 +
pop esi  +
retn   +
***
cmp dl 4Eh +
jnz loc_42A664  +
cmp byte ptr [eax+1] 4Dh +
jnz loc_42A664  +
cmp byte ptr [eax+2] 54h +
jnz loc_42A664  +
cmp byte ptr [eax+3] 4Fh +
jnz loc_42A664  +
cmp byte ptr [eax+4] 4Bh +
jnz loc_42A664  +
cmp byte ptr [eax+5] 45h +
jnz loc_42A664  +
cmp [eax+6] dl +
jnz loc_42A664  +
add dword ptr [esi+0C8h] 7 +
add dword ptr [ecx+10h] 7 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 7 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42A637  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42A65D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42A65D  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax 7 +
pop esi  +
retn   +
***
push dword ptr [esp+0Ch]  +
push esi  +
call sub_431580  +
add esp 8 +
pop esi  +
retn   +
***
sub esp 9Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+98h] eax +
mov ecx [esp+0ACh] +
push ebp  +
push esi  +
mov esi [esp+0ACh] +
xor ebp ebp +
push edi  +
mov edi [esp+0ACh] +
mov [esp+18h] ecx +
mov [esp+0Ch] ebp +
mov [esp+10h] ebp +
mov eax [edi+0F8h] +
cmp eax 28h +
jle loc_42A6D1  +
test dword ptr [edi+168h] 80000h +
jz loc_42A6D8  +
cmp eax 400h +
jle loc_42A6F5  +
pop edi  +
pop esi  +
mov eax 59h +
pop ebp  +
mov ecx [esp+98h] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
***
test ecx ecx +
jz loc_42A6FB  +
mov [ecx] ebp +
test esi esi +
jnz loc_42A71A  +
pop edi  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
mov ecx [esp+98h] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
***
push esi  +
call sub_44E660  +
push eax  +
push esi  +
call sub_4274E0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_42A74B  +
pop edi  +
lea eax [esi+1Bh] +
pop esi  +
pop ebp  +
mov ecx [esp+98h] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
***
mov eax [esp+0B4h] +
mov ecx esi +
test eax eax +
cmovnz ecx eax +
mov eax [esi+128h] +
mov [esi+4] ecx +
test eax eax +
jz loc_42A76F  +
push eax  +
call sub_44F150  +
add esp 4 +
mov eax [edi+128h] +
push ebx  +
push 3  +
push offset aXml_1  +
push eax  +
mov [esi+128h] eax +
call sub_44F4D0  +
push 5  +
push offset aXmlns  +
push dword ptr [esi+128h]  +
mov [esi+138h] eax +
call sub_44F4D0  +
push 24h  +
push offset aHttpWww_w3_org  +
push dword ptr [esi+128h]  +
mov [esi+13Ch] eax +
call sub_44F4D0  +
xor ebx ebx +
mov [esi+140h] eax +
add esp 24h +
cmp [edi+148h] ebx +
jle loc_42A7F1  +
mov eax [edi+150h] +
push dword ptr [eax+ebx*4+4]  +
push dword ptr [eax+ebx*4]  +
push esi  +
call sub_426B60  +
add ebx 2 +
add esp 0Ch +
cmp ebx [edi+148h] +
jl loc_42A7D0  +
mov ebx [esi] +
mov eax [edi] +
push esi  +
mov [esp+24h] ebx +
mov [esi] eax +
call sub_427950  +
mov eax [edi+10h] +
add esp 4 +
mov [esi+10h] eax +
mov eax [edi+168h] +
mov [esi+168h] eax +
mov eax [edi+110h] +
mov [esi+110h] eax +
mov eax [edi+8] +
test eax eax +
jnz loc_42A873  +
push offset a1_0  +
call sub_4239C0  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_42A855  +
push esi  +
mov [esi] ebx +
mov [esi+128h] eax +
call loc_45BB70  +
add esp 4 +
lea eax [ebp+1] +
jmp loc_42AC1A  +
mov dword ptr [ebp+5Ch] 40h +
mov eax [esi+128h] +
push eax  +
mov [ebp+50h] eax +
call sub_44FAE0  +
add esp 4 +
mov [esi+8] ebp +
jmp loc_42A884  +
mov [esi+8] eax +
mov ecx [eax+0Ch] +
mov eax [eax+10h] +
mov [esp+10h] ecx +
mov [esp+14h] eax +
push 0  +
push offset aPseudoroot  +
push 0  +
push dword ptr [esi+8]  +
call sub_423AB0  +
mov ecx eax +
add esp 10h +
test ecx ecx +
jnz loc_42A8C6  +
push esi  +
mov [esi] ebx +
mov [esi+128h] eax +
call loc_45BB70  +
add esp 4 +
test ebp ebp +
jz loc_42A8BC  +
push ebp  +
call sub_4229F0  +
add esp 4 +
mov eax 1 +
jmp loc_42AC1A  +
mov eax [esi+8] +
push ecx  +
mov dword ptr [eax+0Ch] 0 +
mov eax [esi+8] +
mov dword ptr [eax+10h] 0 +
push dword ptr [esi+8]  +
call sub_421400  +
mov eax [esi+8] +
push dword ptr [eax+0Ch]  +
push esi  +
call sub_426A40  +
mov dword ptr [esi+0ACh] 7 +
add esp 10h +
mov eax [edi+0F8h] +
inc eax  +
mov dword ptr [esi+68h] 0 +
mov [esi+0F8h] eax +
mov eax [edi+114h] +
mov [esi+114h] eax +
cmp dword ptr [edi+68h] 0 +
jnz loc_42A928  +
cmp dword ptr [edi+10h] 0 +
jz loc_42A931  +
or eax 8 +
mov [esi+114h] eax +
mov eax [edi+16Ch] +
mov [esi+16Ch] eax +
mov eax [edi+15Ch] +
mov [esi+15Ch] eax +
mov eax [edi+160h] +
push esi  +
mov [esi+160h] eax +
call loc_42D1B0  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
mov cl [eax] +
cmp cl 3Ch +
jnz loc_42A9D6  +
cmp byte ptr [eax+1] 2Fh +
jnz loc_42A9D6  +
push 81h  +
lea eax [esp+28h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42A99B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42AA6A  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+2Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+38h] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
jmp loc_42AA3D  +
test cl cl +
jz loc_42AA6A  +
push 81h  +
lea eax [esp+28h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42AA04  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42AA6A  +
push offset aExtraContent_0  +
push offset aS  +
lea eax [esp+2Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+38h] +
mov dword ptr [esi+54h] 56h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 56h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42AA6A  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esi+8] +
mov eax [esi+34h] +
cmp eax [ecx+0Ch] +
jz loc_42AB05  +
push 81h  +
lea eax [esp+28h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42AA9F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42AB05  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+2Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+38h] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42AB05  +
mov dword ptr [esi+0D4h] 1 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_42AB1A  +
mov eax [esi+54h] +
mov ecx 1 +
test eax eax +
cmovz eax ecx +
jmp loc_42AB1C  +
xor eax eax +
mov ecx [esp+1Ch] +
mov [esp+18h] eax +
test ecx ecx +
jz loc_42AB8F  +
test eax eax +
jnz loc_42AB8F  +
mov eax [esi+8] +
mov eax [eax+0Ch] +
mov ebx [eax+0Ch] +
mov [ecx] ebx +
test ebx ebx +
jz loc_42AB7E  +
cmp dword ptr [edi+68h] 0 +
jz loc_42AB70  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_42AB70  +
mov eax [edi+8] +
test eax eax +
jz loc_42AB70  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_42AB70  +
cmp dword ptr [ebx+4] 1 +
jnz loc_42AB70  +
push ebx  +
push eax  +
lea eax [edi+6Ch] +
push eax  +
call sub_454F50  +
add esp 0Ch +
and [edi+64h] eax +
mov dword ptr [ebx+14h] 0 +
mov ebx [ebx+18h] +
test ebx ebx +
jnz loc_42AB40  +
mov eax [esi+8] +
mov ebx [esp+20h] +
mov eax [eax+0Ch] +
mov dword ptr [eax+0Ch] 0 +
mov eax [esi+8] +
test eax eax +
jz loc_42ABB5  +
push dword ptr [eax+0Ch]  +
call sub_422CB0  +
mov eax [esi+8] +
add esp 4 +
mov ecx [esp+10h] +
mov [eax+0Ch] ecx +
mov eax [esi+8] +
mov ecx [esp+14h] +
mov [eax+10h] ecx +
mov eax [esi+1B8h] +
add [edi+1B8h] eax +
cmp dword ptr [esi+184h] 0 +
jz loc_42ABE0  +
lea eax [edi+180h] +
push eax  +
lea eax [esi+180h] +
push eax  +
call sub_43ABA0  +
add esp 8 +
push esi  +
mov [esi] ebx +
mov dword ptr [esi+128h] 0 +
mov dword ptr [esi+15Ch] 0 +
mov dword ptr [esi+160h] 0 +
call loc_45BB70  +
add esp 4 +
test ebp ebp +
jz loc_42AC16  +
push ebp  +
call sub_4229F0  +
add esp 4 +
mov eax [esp+18h] +
mov ecx [esp+0A8h] +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
***
sub esp 0A4h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A0h] eax +
push ebp  +
push esi  +
mov esi [esp+0B0h] +
xor eax eax +
mov [esp+1Ch] eax +
xor ebp ebp +
mov dword ptr [esp+20h] 64h +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42B11C  +
cmp byte ptr [eax+1] 21h +
jnz loc_42B11C  +
cmp byte ptr [eax+2] 5Bh +
jnz loc_42B11C  +
cmp byte ptr [eax+3] 43h +
jnz loc_42B11C  +
cmp byte ptr [eax+4] 44h +
jnz loc_42B11C  +
cmp byte ptr [eax+5] 41h +
jnz loc_42B11C  +
cmp byte ptr [eax+6] 54h +
jnz loc_42B11C  +
cmp byte ptr [eax+7] 41h +
jnz loc_42B11C  +
cmp byte ptr [eax+8] 5Bh +
jnz loc_42B11C  +
add dword ptr [esi+0C8h] 9 +
add dword ptr [ecx+10h] 9 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 9 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42ACF2  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42AD18  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42AD18  +
push esi  +
call loc_439740  +
add esp 4 +
lea eax [esp+10h] +
mov dword ptr [esi+0ACh] 8 +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov [esp+0Ch] eax +
cmp eax 100h +
jge loc_42AD70  +
cmp eax 9 +
jl loc_42AD45  +
cmp eax 0Ah +
jle loc_42AD4F  +
cmp eax 0Dh +
jz loc_42AD4F  +
cmp eax 20h +
jl loc_42AD91  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42AE38  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42AE3B  +
cmp eax 0D7FFh +
jle loc_42AD4F  +
cmp eax 0E000h +
jl loc_42AD85  +
cmp eax 0FFFDh +
jle loc_42AD4F  +
add eax 0FFFF0000h +
cmp eax 0FFFFFh +
jbe loc_42AD4F  +
push 81h  +
lea eax [esp+28h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebp +
jz loc_42ADB6  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42AE17  +
push offset aUnregisteredEr  +
push offset aS  +
lea eax [esp+2Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+38h] +
mov dword ptr [esi+54h] 3Fh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Fh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] ebp +
cmp [esi+120h] ebp +
jnz loc_42AE17  +
mov dword ptr [esi+0D4h] 1 +
mov dword ptr [esi+0ACh] 7 +
pop esi  +
pop ebp  +
mov ecx [esp+0A0h] +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42AE59  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov [esp+14h] eax +
cmp eax 100h +
jge loc_42AE8C  +
cmp eax 9 +
jl loc_42AE7C  +
cmp eax 0Ah +
jle loc_42AEB1  +
cmp eax 0Dh +
jz loc_42AEB1  +
cmp eax 20h +
jl loc_42AD91  +
jmp loc_42AEB1  +
cmp eax 0D7FFh +
jle loc_42AEB1  +
cmp eax 0E000h +
jl loc_42AEA1  +
cmp eax 0FFFDh +
jle loc_42AEB1  +
add eax 0FFFF0000h +
cmp eax 0FFFFFh +
ja loc_42AD91  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42AECB  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42AECE  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+18h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42AEEC  +
push esi  +
call sub_439220  +
add esp 4 +
push ebx  +
push edi  +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
push 64h  +
mov edi eax +
call off_4EE2EC  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_42AF20  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
jmp loc_42B11A  +
cmp edi 100h +
jge loc_42AF5E  +
cmp edi 9 +
jl loc_42AF32  +
cmp edi 0Ah +
jle loc_42AF83  +
cmp edi 0Dh +
jz loc_42AF83  +
cmp edi 20h +
jge loc_42AF83  +
mov byte ptr [ebx+ebp] 0 +
mov dword ptr [esi+0ACh] 7 +
cmp edi 3Eh +
jz loc_42B0A5  +
push ebx  +
push offset aCdataSectionNo  +
jmp loc_42B13A  +
cmp edi 0D7FFh +
jle loc_42AF83  +
cmp edi 0E000h +
jl loc_42AF76  +
cmp edi 0FFFDh +
jle loc_42AF83  +
lea eax [edi-10000h] +
cmp eax 0FFFFFh +
ja loc_42AF3C  +
mov ecx [esp+14h] +
cmp ecx 5Dh +
jnz loc_42AF97  +
cmp [esp+1Ch] ecx +
jnz loc_42AF97  +
cmp edi 3Eh +
jz loc_42AF3C  +
mov edx [esp+28h] +
lea eax [ebp+5] +
cmp eax edx +
jl loc_42AFD9  +
cmp edx 989680h +
jle loc_42AFBA  +
test dword ptr [esi+168h] 80000h +
jz loc_42B133  +
add edx edx +
push edx  +
push ebx  +
mov [esp+30h] edx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_42B14E  +
mov ecx [esp+14h] +
mov ebx eax +
cmp dword ptr [esp+18h] 1 +
jnz loc_42AFE6  +
mov [ebx+ebp] cl +
inc ebp  +
jmp loc_42AFF5  +
push ecx  +
lea eax [ebx+ebp] +
push eax  +
call sub_45B520  +
add esp 8 +
add ebp eax +
mov eax [esp+1Ch] +
mov edx [esp+24h] +
mov [esp+14h] eax +
inc edx  +
mov eax [esp+20h] +
mov [esp+18h] eax +
mov eax [esp+10h] +
mov [esp+1Ch] edi +
mov [esp+20h] eax +
mov [esp+24h] edx +
cmp edx 32h +
jle loc_42B055  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42B042  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42B042  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42B110  +
xor eax eax +
mov [esp+24h] eax +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42B06F  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42B072  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42B090  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov edi eax +
jmp loc_42AF20  +
***
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42B0BF  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42B0C2  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42B0E0  +
push esi  +
call sub_439220  +
add esp 4 +
mov eax [esi] +
test eax eax +
jz loc_42B110  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42B110  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_42B0FF  +
push ebp  +
push ebx  +
push dword ptr [esi+4]  +
call ecx  +
jmp loc_42B10D  +
mov eax [eax+44h] +
test eax eax +
jz loc_42B110  +
push ebp  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebx  +
mov ecx [esp+0A8h] +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
push 0  +
push offset aCdataSectionTo  +
push 3Fh  +
push esi  +
call sub_428050  +
push ebx  +
call off_4EE2F4  +
add esp 14h +
jmp loc_42B11A  +
***
push ebx  +
call off_4EE2F4  +
push 0  +
push esi  +
call sub_45BA50  +
add esp 0Ch +
jmp loc_42B11A  +
***
push edi  +
xor edi edi +
mov al [esi] +
cmp al 20h +
jz loc_42B18A  +
cmp al 9 +
jb loc_42B186  +
cmp al 0Ah +
jbe loc_42B18A  +
cmp al 0Dh +
jnz loc_42B18D  +
inc esi  +
jmp loc_42B178  +
push 7  +
push offset aCatalog  +
push esi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_42B1F4  +
add esi 7 +
mov al [esi] +
cmp al 20h +
jz loc_42B1B6  +
cmp al 9 +
jb loc_42B1B2  +
cmp al 0Ah +
jbe loc_42B1B6  +
cmp al 0Dh +
jnz loc_42B1B9  +
inc esi  +
jmp loc_42B1A4  +
cmp byte ptr [esi] 3Dh +
jnz loc_42B21B  +
mov al [esi+1] +
inc esi  +
cmp al 20h +
jz loc_42B1BE  +
cmp al 9 +
jb loc_42B1CE  +
cmp al 0Ah +
jbe loc_42B1BE  +
cmp al 0Dh +
jz loc_42B1BE  +
mov cl [esi] +
cmp cl 27h +
jz loc_42B1DE  +
cmp cl 22h +
jnz loc_42B1F4  +
mov al [esi+1] +
inc esi  +
mov edx esi +
test al al +
jz loc_42B1F4  +
cmp al cl +
jz loc_42B21E  +
mov al [esi+1] +
inc esi  +
test al al +
jnz loc_42B1E8  +
push 0  +
push [esp+8+arg_4]  +
push offset aCatalogPiSynta  +
push 5Dh  +
push [esp+14h+arg_0]  +
call sub_43A5A0  +
add esp 14h +
test edi edi +
jz loc_42B21B  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
cmp byte ptr [esi] 0 +
jz loc_42B1F4  +
mov eax esi +
sub eax edx +
push eax  +
push edx  +
call sub_44E8A0  +
add esp 8 +
mov edi eax +
mov cl [esi+1] +
inc esi  +
cmp cl 20h +
jz loc_42B233  +
cmp cl 9 +
jb loc_42B246  +
cmp cl 0Ah +
jbe loc_42B233  +
cmp cl 0Dh +
jz loc_42B233  +
cmp byte ptr [esi] 0 +
jnz loc_42B1F4  +
test edi edi +
jz loc_42B21B  +
mov esi [esp+4+arg_0] +
push edi  +
push dword ptr [esi+11Ch]  +
call sub_465EC0  +
push edi  +
mov [esi+11Ch] eax +
call off_4EE2F4  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
***
mov ecx [edx+20h] +
jz loc_42B374  +
movzx eax byte ptr [esi+1] +
inc esi  +
inc ecx  +
cmp ds:byte_4BC888[eax] 0 +
jnz loc_42B365  +
mov [edx+20h] ecx +
mov al [esi] +
cmp al 0Ah +
jnz loc_42B398  +
cmp al 5Dh +
jnz loc_42B3B4  +
cmp [esi+1] al +
jnz loc_42B3AB  +
cmp byte ptr [esi+2] 3Eh +
jz loc_42B57D  +
mov eax [edi+24h] +
inc esi  +
inc dword ptr [eax+20h]  +
jmp near ptr dword_42B308+4Bh  +
***
mov eax [edi+24h] +
mov ebx esi +
mov ebp [eax+10h] +
sub ebx ebp +
test ebx ebx +
jle loc_42B465  +
mov ecx [edi] +
test ecx ecx +
jz loc_42B458  +
mov edx [ecx+44h] +
cmp [ecx+48h] edx +
jz loc_42B439  +
mov cl [ebp+0] +
cmp cl 20h +
jz loc_42B3EF  +
cmp cl 9 +
jb loc_42B3EA  +
cmp cl 0Ah +
jbe loc_42B3EF  +
cmp cl 0Dh +
jnz loc_42B439  +
push 0  +
push ebx  +
push ebp  +
push edi  +
mov [eax+10h] esi +
call sub_426760  +
add esp 10h +
test eax eax +
mov eax [edi] +
jz loc_42B415  +
mov eax [eax+48h] +
test eax eax +
jz loc_42B447  +
push ebx  +
push ebp  +
push dword ptr [edi+4]  +
call eax  +
jmp loc_42B444  +
mov eax [eax+44h] +
test eax eax +
jz loc_42B426  +
push ebx  +
push ebp  +
push dword ptr [edi+4]  +
call eax  +
add esp 0Ch +
mov eax [edi+0E8h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_42B447  +
mov dword ptr [eax] 0FFFFFFFEh +
jmp loc_42B447  +
test edx edx +
jz loc_42B447  +
push ebx  +
push ebp  +
push dword ptr [edi+4]  +
call edx  +
add esp 0Ch +
mov eax [edi+24h] +
mov ecx [eax+1Ch] +
mov [esp+10h] ecx +
mov ecx [eax+20h] +
mov [esp+14h] ecx +
cmp dword ptr [edi+0ACh] 7 +
jnz loc_42B564  +
mov [eax+10h] esi +
cmp byte ptr [esi] 0Dh +
jnz loc_42B490  +
inc esi  +
cmp byte ptr [esi] 0Ah +
jnz loc_42B48F  +
mov eax [edi+24h] +
mov [eax+10h] esi +
inc esi  +
mov eax [edi+24h] +
inc dword ptr [eax+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42B52A  +
dec esi  +
mov al [esi] +
cmp al 3Ch +
jz loc_42B564  +
cmp al 26h +
jz loc_42B564  +
cmp dword ptr [edi+124h] 0 +
jnz loc_42B51B  +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42B4F8  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42B4F8  +
push ecx  +
call sub_45CAF0  +
mov ecx [edi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42B4F8  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42B4F8  +
push edi  +
call loc_439740  +
add esp 4 +
cmp dword ptr [edi+124h] 0 +
jnz loc_42B51B  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42B51B  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42B564  +
mov esi [edi+24h] +
mov esi [esi+10h] +
mov al [esi] +
cmp al 20h +
jb loc_42B538  +
cmp al 7Fh +
jbe near ptr dword_42B308+0Ch  +
cmp al 9 +
jz near ptr dword_42B308+0Ch  +
mov esi [esp+10h] +
mov ebx [esp+14h] +
mov eax [edi+24h] +
push dword ptr [esp+0A8h]  +
push edi  +
mov [eax+1Ch] esi +
mov eax [edi+24h] +
mov [eax+20h] ebx +
call loc_42B6A0  +
add esp 8 +
mov ecx [esp+9Ch] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
push 81h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_42B5A3  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42B609  +
push offset aSequenceNotAll  +
push offset aS  +
lea eax [esp+20h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+2Ch] +
mov dword ptr [edi+54h] 3Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Eh  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_42B609  +
mov dword ptr [edi+0D4h] 1 +
mov eax [edi+24h] +
mov [eax+10h] esi +
jmp loc_42B564  +
***
mov eax [edi+24h] +
mov ebx esi +
mov ebp [eax+10h] +
sub ebx ebp +
test ebx ebx +
jle loc_42B564  +
mov [eax+10h] esi +
mov ecx [edi] +
test ecx ecx +
jz loc_42B564  +
mov eax [ecx+44h] +
cmp [ecx+48h] eax +
jz loc_42B651  +
push 1  +
push ebx  +
push ebp  +
push edi  +
call sub_426760  +
add esp 10h +
test eax eax +
mov eax [edi] +
jz loc_42B668  +
mov eax [eax+48h] +
test eax eax +
jz loc_42B564  +
push ebx  +
push ebp  +
push dword ptr [edi+4]  +
call eax  +
add esp 0Ch +
jmp loc_42B564  +
***
mov eax [eax+44h] +
test eax eax +
jz loc_42B679  +
push ebx  +
push ebp  +
push dword ptr [edi+4]  +
call eax  +
add esp 0Ch +
mov eax [edi+0E8h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_42B564  +
mov dword ptr [eax] 0FFFFFFFEh +
jmp loc_42B564  +
***
sub esp 1C0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1BCh] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+1D0h] +
xor ebp ebp +
push edi  +
xor edi edi +
cmp [esi+124h] edi +
jnz loc_42B714  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42B6F2  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42B6F2  +
push esi  +
call sub_4398C0  +
add esp 4 +
cmp [esi+124h] edi +
jnz loc_42B714  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42B714  +
push esi  +
call sub_428140  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
cmp ebx 3Ch +
jz loc_42BA30  +
cmp ebx 26h +
jz loc_42B761  +
cmp ebx 100h +
jge loc_42B7C9  +
cmp ebx 9 +
jl loc_42B74F  +
cmp ebx 0Ah +
jle loc_42B7F2  +
cmp ebx 0Dh +
jz loc_42B7F2  +
cmp ebx 20h +
jge loc_42B7F2  +
test edi edi +
jz loc_42BA30  +
cmp edi 131h +
jnb loc_42BAE4  +
cmp dword ptr [esi] 0 +
mov byte ptr [esp+edi+14h] 0 +
jz loc_42BA30  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42BA30  +
push 0  +
push edi  +
lea eax [esp+1Ch] +
push eax  +
push esi  +
call sub_426760  +
add esp 10h +
test eax eax +
mov eax [esi] +
jz loc_42BA00  +
mov eax [eax+48h] +
test eax eax +
jz loc_42BA30  +
push edi  +
lea ecx [esp+18h] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
jmp loc_42BA30  +
cmp ebx 0D7FFh +
jle loc_42B7F2  +
cmp ebx 0E000h +
jl loc_42B7E1  +
cmp ebx 0FFFDh +
jle loc_42B7F2  +
lea eax [ebx-10000h] +
cmp eax 0FFFFFh +
ja loc_42B761  +
cmp ebx 5Dh +
jnz loc_42B8B7  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp [eax+1] bl +
jnz loc_42B8B7  +
cmp byte ptr [eax+2] 3Eh +
jnz loc_42B8B7  +
cmp dword ptr [esp+1D8h] 0 +
jnz loc_42B761  +
push 81h  +
lea eax [esp+14Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42B84B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42B8B7  +
push offset aSequenceNotAll  +
push offset aS  +
lea eax [esp+150h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+15Ch] +
mov dword ptr [esi+54h] 3Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42B8B7  +
mov dword ptr [esi+0D4h] 1 +
cmp dword ptr [esp+10h] 1 +
jnz loc_42B8C5  +
mov [esp+edi+14h] bl +
inc edi  +
jmp loc_42B8D7  +
lea eax [esp+14h] +
add eax edi +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add edi eax +
cmp edi 12Ch +
jl loc_42B96F  +
cmp edi 131h +
jnb loc_42BAE4  +
cmp dword ptr [esi] 0 +
mov byte ptr [esp+edi+14h] 0 +
jz loc_42B960  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42B960  +
push 0  +
push edi  +
lea eax [esp+1Ch] +
push eax  +
push esi  +
call sub_426760  +
add esp 10h +
test eax eax +
mov eax [esi] +
jz loc_42B930  +
mov eax [eax+48h] +
test eax eax +
jz loc_42B960  +
push edi  +
lea ecx [esp+18h] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
jmp loc_42B960  +
mov eax [eax+44h] +
test eax eax +
jz loc_42B945  +
push edi  +
lea ecx [esp+18h] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
mov ecx [esi] +
mov eax [ecx+44h] +
cmp eax [ecx+48h] +
jz loc_42B960  +
mov eax [esi+0E8h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_42B960  +
mov dword ptr [eax] 0FFFFFFFEh +
xor edi edi +
cmp dword ptr [esi+0ACh] 7 +
jnz loc_42BACB  +
inc ebp  +
cmp ebp 32h +
jle loc_42B9A7  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42B998  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42B998  +
push esi  +
call sub_428140  +
add esp 4 +
xor ebp ebp +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42BACB  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42B9C1  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42B9C4  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42B9E2  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
cmp ebx 3Ch +
jnz loc_42B730  +
jmp loc_42B761  +
***
mov eax [eax+44h] +
test eax eax +
jz loc_42BA15  +
push edi  +
lea ecx [esp+18h] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
mov ecx [esi] +
mov eax [ecx+44h] +
cmp eax [ecx+48h] +
jz loc_42BA30  +
mov eax [esi+0E8h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jnz loc_42BA30  +
mov dword ptr [eax] 0FFFFFFFEh +
test ebx ebx +
jz loc_42BACB  +
cmp ebx 100h +
jge loc_42BA5A  +
cmp ebx 9 +
jl loc_42BA4E  +
cmp ebx 0Ah +
jle loc_42BACB  +
cmp ebx 0Dh +
jz loc_42BACB  +
cmp ebx 20h +
jl loc_42BA7F  +
jmp loc_42BACB  +
cmp ebx 0D7FFh +
jle loc_42BACB  +
cmp ebx 0E000h +
jl loc_42BA72  +
cmp ebx 0FFFDh +
jle loc_42BACB  +
lea eax [ebx-10000h] +
cmp eax 0FFFFFh +
jbe loc_42BACB  +
push ebx  +
push offset aPcdataInvalidC  +
push 9  +
push esi  +
call sub_45B970  +
mov ecx [esi+24h] +
add esp 10h +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42BAAA  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42BAAD  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42BACB  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esp+1CCh] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 1C0h +
retn   +
***
call sub_48927F  +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+10h] +
xor ebx ebx +
push edi  +
xor edi edi +
xor ebp ebp +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 26h +
jnz loc_42BDCD  +
cmp byte ptr [eax+1] 23h +
jnz loc_42BC4E  +
cmp byte ptr [eax+2] 78h +
jnz loc_42BC4E  +
add dword ptr [esi+0C8h] 3 +
add dword ptr [ecx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42BB49  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp [eax] bl +
jnz loc_42BB6E  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42BB6E  +
push esi  +
call loc_439740  +
add esp 4 +
cmp [esi+124h] ebx +
jnz loc_42BB90  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42BB90  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jz loc_42BD64  +
nop   +
mov eax ebx +
inc ebx  +
cmp eax 14h +
jle loc_42BBD9  +
xor ebx ebx +
cmp [esi+124h] ebx +
jnz loc_42BBCC  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42BBCC  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42BDEB  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 30h +
jb loc_42BBF1  +
cmp al 39h +
ja loc_42BBF1  +
movzx eax al +
add eax 0FFFFFFD0h +
jmp loc_42BC19  +
cmp al 61h +
jb loc_42BC06  +
cmp al 66h +
ja loc_42BC06  +
cmp ebx 14h +
jge loc_42BC06  +
movzx eax al +
add eax 0FFFFFFA9h +
jmp loc_42BC19  +
cmp al 41h +
jb loc_42BC45  +
cmp al 46h +
ja loc_42BC45  +
cmp ebx 14h +
jge loc_42BC45  +
movzx eax al +
add eax 0FFFFFFC9h +
shl edi 4 +
add edi eax +
cmp edi 10FFFFh +
push esi  +
cmova ebp edi +
call sub_45C5B0  +
mov eax [esi+24h] +
add esp 4 +
inc ebx  +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jnz loc_42BBA0  +
jmp loc_42BD64  +
push 0  +
push 6  +
jmp loc_42BD59  +
cmp dl 26h +
jnz loc_42BDCD  +
cmp byte ptr [eax+1] 23h +
jnz loc_42BDCD  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42BC87  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp [eax] bl +
jnz loc_42BCAC  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42BCAC  +
push esi  +
call loc_439740  +
add esp 4 +
cmp [esi+124h] ebx +
jnz loc_42BCCE  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42BCCE  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jz loc_42BD64  +
mov eax ebx +
inc ebx  +
cmp eax 14h +
jle loc_42BD19  +
xor ebx ebx +
cmp [esi+124h] ebx +
jnz loc_42BD0C  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42BD0C  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42BDEB  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 30h +
jb loc_42BD55  +
cmp al 39h +
ja loc_42BD55  +
movzx eax al +
lea edi [edi+edi*4] +
lea edi [edi-18h] +
push esi  +
lea edi [eax+edi*2] +
cmp edi 10FFFFh +
cmova ebp edi +
call sub_45C5B0  +
mov eax [esi+24h] +
add esp 4 +
inc ebx  +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jnz loc_42BCE0  +
jmp loc_42BD64  +
push 0  +
push 7  +
push esi  +
call sub_427B90  +
add esp 0Ch +
xor edi edi +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Bh +
jnz loc_42BD7E  +
inc dword ptr [ecx+20h]  +
mov eax [esi+24h] +
inc dword ptr [esi+0C8h]  +
inc dword ptr [eax+10h]  +
cmp edi 100h +
jnb loc_42BD9C  +
cmp edi 9 +
jb loc_42BD90  +
cmp edi 0Ah +
jbe loc_42BDC2  +
cmp edi 0Dh +
jz loc_42BDC2  +
cmp edi 20h +
jnb loc_42BDC2  +
jmp loc_42BDDA  +
cmp edi 0D7FFh +
jbe loc_42BDC2  +
cmp edi 0E000h +
jb loc_42BDB4  +
cmp edi 0FFFDh +
jbe loc_42BDC2  +
lea ecx [edi-10000h] +
cmp ecx 0FFFFFh +
ja loc_42BDDA  +
test ebp ebp +
jnz loc_42BDDA  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push 0  +
push 8  +
push esi  +
call sub_427B90  +
add esp 0Ch +
push edi  +
push offset aXmlparsecharre  +
push 9  +
push esi  +
call sub_45B970  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 0Ch +
push ebp  +
push edi  +
mov edi [esp+18h] +
xor ebp ebp +
mov dword ptr [esp+0Ch] 64h +
mov [esp+8] ebp +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42C2B8  +
cmp byte ptr [eax+1] 21h +
jnz loc_42C2B8  +
cmp byte ptr [eax+2] 2Dh +
jnz loc_42C2B8  +
cmp byte ptr [eax+3] 2Dh +
jnz loc_42C2B8  +
mov eax [edi+0ACh] +
mov dword ptr [edi+0ACh] 5 +
mov [esp+18h] eax +
mov eax [ecx+38h] +
add dword ptr [edi+0C8h] 4 +
add dword ptr [ecx+10h] 4 +
mov [esp+10h] eax +
mov eax [edi+24h] +
add dword ptr [eax+20h] 4 +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42BE85  +
push edi  +
call sub_439220  +
add esp 4 +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42BEAB  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42BEAB  +
push edi  +
call loc_439740  +
add esp 4 +
cmp [edi+124h] ebp +
jnz loc_42BEFC  +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42BEDA  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42BEDA  +
push edi  +
call sub_4398C0  +
add esp 4 +
cmp [edi+124h] ebp +
jnz loc_42BEFC  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42BEFC  +
push edi  +
call sub_428140  +
add esp 4 +
push esi  +
mov esi [edi+24h] +
push ebx  +
mov esi [esi+10h] +
cmp byte ptr [esi] 0Ah +
jnz loc_42BF26  +
mov eax [edi+24h] +
inc esi  +
inc dword ptr [eax+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
cmp byte ptr [esi] 0Ah +
jz loc_42BF10  +
mov edx [edi+24h] +
mov ecx [edx+20h] +
mov al [esi] +
cmp al 2Dh +
jbe loc_42BF3A  +
cmp al 7Fh +
jbe loc_42BF46  +
cmp al 20h +
jb loc_42BF42  +
cmp al 2Dh +
jb loc_42BF46  +
cmp al 9 +
jnz loc_42BF4A  +
inc esi  +
inc ecx  +
jmp loc_42BF30  +
***
mov [edx+20h] ecx +
cmp byte ptr [esi] 0Ah +
jnz loc_42BF6A  +
mov eax [edi+24h] +
inc esi  +
inc dword ptr [eax+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
cmp byte ptr [esi] 0Ah +
jz loc_42BF52  +
jmp loc_42BF26  +
***
mov eax [edi+24h] +
mov ebx esi +
sub ebx [eax+10h] +
jz loc_42C018  +
mov eax [edi] +
test eax eax +
jz loc_42C018  +
cmp dword ptr [eax+50h] 0 +
jz loc_42C018  +
test ebp ebp +
jnz loc_42BFC3  +
cmp byte ptr [esi] 2Dh +
jnz loc_42BF9E  +
cmp byte ptr [esi+1] 2Dh +
lea eax [ebx+1] +
jz loc_42BFA1  +
lea eax [ebx+64h] +
push eax  +
mov [esp+18h] eax +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_42C184  +
mov dword ptr [esp+10h] 0 +
jmp loc_42BFF2  +
mov ecx [esp+10h] +
mov edx [esp+14h] +
add ecx ebx +
lea eax [ecx+1] +
cmp eax edx +
jb loc_42BFF2  +
add edx 64h +
add edx ecx +
push edx  +
push ebp  +
mov [esp+1Ch] edx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_42C1A1  +
mov ebp eax +
mov eax [edi+24h] +
push ebx  +
push dword ptr [eax+10h]  +
mov eax [esp+18h] +
add eax ebp +
push eax  +
call loc_48C9C0  +
mov ecx [esp+1Ch] +
add esp 0Ch +
add ecx ebx +
mov [esp+10h] ecx +
mov byte ptr [ecx+ebp] 0 +
jmp loc_42C01C  +
mov ecx [esp+10h] +
cmp ecx 989680h +
jbe loc_42C034  +
test dword ptr [edi+168h] 80000h +
jz loc_42C1C5  +
mov eax [edi+24h] +
mov [eax+10h] esi +
cmp byte ptr [esi] 0Ah +
jnz loc_42C050  +
mov eax [edi+24h] +
inc esi  +
inc dword ptr [eax+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
cmp byte ptr [esi] 0Dh +
jnz loc_42C05F  +
inc esi  +
cmp byte ptr [esi] 0Ah +
jz loc_42C135  +
cmp dword ptr [edi+124h] 0 +
jnz loc_42C0DC  +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42C0B5  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42C0B5  +
push ecx  +
call sub_45CAF0  +
mov ecx [edi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42C0B5  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42C0B5  +
push edi  +
call loc_439740  +
add esp 4 +
cmp dword ptr [edi+124h] 0 +
jnz loc_42C0D8  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42C0D8  +
push edi  +
call sub_428140  +
add esp 4 +
mov ecx [esp+10h] +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42C2AC  +
mov esi [edi+24h] +
mov esi [esi+10h] +
cmp byte ptr [esi] 2Dh +
jnz loc_42C14C  +
cmp byte ptr [esi+1] 2Dh +
jnz loc_42C129  +
cmp byte ptr [esi+2] 3Eh +
jz loc_42C1E6  +
test ebp ebp +
jz loc_42C110  +
push ebp  +
push offset aDoubleHyphenWi  +
jmp loc_42C117  +
push 0  +
push offset aDoubleHyphen_0  +
push 50h  +
push edi  +
call sub_428050  +
mov eax [edi+24h] +
add esp 10h +
inc esi  +
inc dword ptr [eax+20h]  +
mov eax [edi+24h] +
inc esi  +
inc dword ptr [eax+20h]  +
jmp loc_42BF26  +
***
mov eax [edi+24h] +
mov [eax+10h] esi +
inc esi  +
mov eax [edi+24h] +
inc dword ptr [eax+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
mov al [esi] +
cmp al 20h +
jb loc_42C15A  +
cmp al 7Fh +
jbe loc_42BF04  +
cmp al 9 +
jz loc_42BF04  +
mov eax [esp+14h] +
push eax  +
push ecx  +
push ebp  +
push edi  +
call loc_42C2C0  +
mov eax [esp+30h] +
add esp 10h +
mov [edi+0ACh] eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
push 0  +
push edi  +
call sub_45BA50  +
mov eax [esp+28h] +
add esp 8 +
mov [edi+0ACh] eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
push ebp  +
call off_4EE2F4  +
push 0  +
push edi  +
call sub_45BA50  +
mov eax [esp+2Ch] +
add esp 0Ch +
mov [edi+0ACh] eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
push 0  +
push offset aCommentTooBigF  +
push 2Dh  +
push edi  +
call sub_428050  +
push ebp  +
call off_4EE2F4  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
mov eax [edi+24h] +
mov ecx [esp+18h] +
cmp [eax+38h] ecx +
jz loc_42C202  +
push offset aCommentDoesnTS  +
push 5Ah  +
push edi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [edi+24h] +
add dword ptr [edi+0C8h] 3 +
add dword ptr [eax+10h] 3 +
mov eax [edi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C22B  +
push edi  +
call sub_439220  +
add esp 4 +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42C251  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42C251  +
push edi  +
call loc_439740  +
add esp 4 +
mov eax [edi] +
test eax eax +
jz loc_42C274  +
mov eax [eax+50h] +
test eax eax +
jz loc_42C274  +
cmp dword ptr [edi+0D4h] 0 +
jnz loc_42C274  +
test ebp ebp +
jz loc_42C29D  +
push ebp  +
push dword ptr [edi+4]  +
call eax  +
add esp 8 +
test ebp ebp +
jz loc_42C282  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42C2B6  +
mov eax [esp+20h] +
pop ebx  +
pop esi  +
mov [edi+0ACh] eax +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
push offset unk_4DE8C5  +
push dword ptr [edi+4]  +
call eax  +
add esp 8 +
jmp loc_42C282  +
***
push ebp  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 0Ch +
retn   +
***
sub esp 0A8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A4h] eax +
mov eax [esp+0B4h] +
push ebp  +
mov ebp [esp+0B4h] +
mov [esp+4] eax +
mov eax [esp+0BCh] +
push esi  +
mov esi [esp+0B4h] +
mov [esp+14h] eax +
xor eax eax +
mov [esp+20h] eax +
mov eax [esi+24h] +
mov eax [eax+38h] +
mov [esp+24h] eax +
test ebp ebp +
jnz loc_42C34E  +
xor eax eax +
mov dword ptr [esp+14h] 64h +
push 64h  +
mov [esp+0Ch] eax +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_42C34E  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
pop esi  +
pop ebp  +
mov ecx [esp+0A4h] +
xor ecx esp +
call sub_488C1C  +
add esp 0A8h +
retn   +
***
cmp dword ptr [esi+124h] 0 +
jnz loc_42C371  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42C371  +
push esi  +
call sub_428140  +
add esp 4 +
push ebx  +
push edi  +
lea eax [esp+20h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_42C841  +
cmp ebx 100h +
jge loc_42C3C1  +
cmp ebx 9 +
jl loc_42C39D  +
cmp ebx 0Ah +
jle loc_42C3A7  +
cmp ebx 0Dh +
jz loc_42C3A7  +
cmp ebx 20h +
jl loc_42C3E6  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42C3F9  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42C3FC  +
cmp ebx 0D7FFh +
jle loc_42C3A7  +
cmp ebx 0E000h +
jl loc_42C3D9  +
cmp ebx 0FFFDh +
jle loc_42C3A7  +
lea eax [ebx-10000h] +
cmp eax 0FFFFFh +
jbe loc_42C3A7  +
push ebx  +
push offset aXmlparsecommen  +
push 9  +
push esi  +
call sub_45B970  +
jmp loc_42C850  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+20h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C41A  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+24h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov [esp+14h] eax +
test eax eax +
jz loc_42C841  +
cmp eax 100h +
jge loc_42C451  +
cmp eax 9 +
jl loc_42C445  +
cmp eax 0Ah +
jle loc_42C476  +
cmp eax 0Dh +
jz loc_42C476  +
cmp eax 20h +
jl loc_42C3E6  +
jmp loc_42C476  +
cmp eax 0D7FFh +
jle loc_42C476  +
cmp eax 0E000h +
jl loc_42C466  +
cmp eax 0FFFDh +
jle loc_42C476  +
add eax 0FFFF0000h +
cmp eax 0FFFFFh +
ja loc_42C3E6  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42C490  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42C493  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+24h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C4B1  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_42C841  +
cmp edi 100h +
jge loc_42C51C  +
cmp edi 9 +
jl loc_42C4E2  +
cmp edi 0Ah +
jle loc_42C541  +
cmp edi 0Dh +
jz loc_42C541  +
cmp edi 20h +
jge loc_42C541  +
mov eax [esp+10h] +
mov byte ptr [eax+ebp] 0 +
test edi edi +
jnz loc_42C776  +
push ebp  +
push offset aCommentNotTe_0  +
push 2Dh  +
push esi  +
call sub_428050  +
add esp 10h +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_42C85A  +
cmp edi 0D7FFh +
jle loc_42C541  +
cmp edi 0E000h +
jl loc_42C534  +
cmp edi 0FFFDh +
jle loc_42C541  +
lea eax [edi-10000h] +
cmp eax 0FFFFFh +
ja loc_42C4EC  +
cmp edi 3Eh +
jnz loc_42C558  +
cmp dword ptr [esp+14h] 2Dh +
jnz loc_42C5F8  +
cmp ebx 2Dh +
jz loc_42C4EC  +
jmp loc_42C563  +
cmp dword ptr [esp+14h] 2Dh +
jnz loc_42C5F8  +
cmp ebx 2Dh +
jnz loc_42C5F8  +
push 81h  +
lea eax [esp+34h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42C592  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42C5F8  +
push offset aCommentMustNot  +
push offset aS  +
lea eax [esp+38h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+44h] +
mov dword ptr [esi+54h] 50h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 50h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42C5F8  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+10h] +
cmp ecx 989680h +
jbe loc_42C614  +
test dword ptr [esi+168h] 80000h +
jz loc_42C824  +
mov edx [esp+1Ch] +
lea eax [ecx+5] +
cmp eax edx +
jb loc_42C63E  +
add edx edx +
push edx  +
push ebp  +
mov [esp+24h] edx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_42C82D  +
mov ecx [esp+10h] +
mov ebp eax +
cmp dword ptr [esp+20h] 1 +
jnz loc_42C64F  +
mov [ecx+ebp] bl +
inc ecx  +
mov [esp+10h] ecx +
jmp loc_42C660  +
lea eax [ecx+ebp] +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add [esp+10h] eax +
mov edx [esp+28h] +
mov eax [esp+24h] +
inc edx  +
mov ebx [esp+14h] +
mov [esp+20h] eax +
mov eax [esp+18h] +
mov [esp+14h] edi +
mov [esp+24h] eax +
mov [esp+28h] edx +
cmp edx 32h +
jbe loc_42C6BC  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42C6A9  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42C6A9  +
push esi  +
call sub_428140  +
add esp 4 +
xor eax eax +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
mov [esp+28h] eax +
jz loc_42C7D6  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_42C6D6  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_42C6D9  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+18h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C6F7  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_42C4D0  +
cmp [esi+124h] eax +
jnz loc_42C761  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42C73E  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42C73E  +
push esi  +
call sub_4398C0  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42C761  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42C761  +
push esi  +
call sub_428140  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov edi eax +
jmp loc_42C4D0  +
***
cmp edi 100h +
jge loc_42C7E2  +
cmp edi 9 +
jl loc_42C788  +
cmp edi 0Ah +
jle loc_42C792  +
cmp edi 0Dh +
jz loc_42C792  +
cmp edi 20h +
jl loc_42C807  +
mov eax [esi+24h] +
mov ecx [esp+2Ch] +
cmp ecx [eax+38h] +
jz loc_42C7AE  +
push offset aCommentDoesn_0  +
push 5Ah  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call sub_45C5B0  +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_42C7D6  +
mov eax [eax+50h] +
test eax eax +
jz loc_42C7D6  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42C7D6  +
push ebp  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_42C85A  +
cmp edi 0D7FFh +
jle loc_42C792  +
cmp edi 0E000h +
jl loc_42C7FA  +
cmp edi 0FFFDh +
jle loc_42C792  +
lea eax [edi-10000h] +
cmp eax 0FFFFFh +
jbe loc_42C792  +
push edi  +
push offset aXmlparsecommen  +
push 9  +
push esi  +
call sub_45B970  +
add esp 10h +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_42C85A  +
push 0  +
push offset aCommentTooBigF  +
jmp loc_42C848  +
push ebp  +
call off_4EE2F4  +
push 0  +
push esi  +
call sub_45BA50  +
add esp 0Ch +
jmp loc_42C85A  +
push 0  +
push offset aCommentNotTerm  +
push 2Dh  +
push esi  +
call sub_428050  +
push ebp  +
call off_4EE2F4  +
add esp 14h +
mov ecx [esp+0B4h] +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 0A8h +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+9Ch] +
push edi  +
mov eax [esi+24h] +
mov ebx [eax+38h] +
add dword ptr [esi+0C8h] 3 +
add dword ptr [eax+10h] 3 +
mov eax [esi+24h] +
mov [esp+10h] ebx +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C8CF  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42C8F5  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42C8F5  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 49h +
jnz loc_42D0BA  +
cmp byte ptr [eax+1] 4Eh +
jnz loc_42CC5C  +
cmp byte ptr [eax+2] 43h +
jnz loc_42CC5C  +
cmp byte ptr [eax+3] 4Ch +
jnz loc_42CC5C  +
cmp byte ptr [eax+4] 55h +
jnz loc_42CC5C  +
cmp byte ptr [eax+5] 44h +
jnz loc_42CC5C  +
cmp byte ptr [eax+6] 45h +
jnz loc_42CC5C  +
add dword ptr [esi+0C8h] 7 +
add dword ptr [ecx+10h] 7 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 7 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42C971  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42C997  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42C997  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 5Bh +
jz loc_42CA49  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42C9D5  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42CA3B  +
push offset aXmlConditional  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 53h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 53h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42CA3B  +
mov dword ptr [esi+0D4h] 1 +
push esi  +
call sub_428260  +
add esp 4 +
jmp loc_42D18D  +
cmp [ecx+38h] ebx +
jz loc_42CA62  +
push 0  +
push 0  +
push offset aAllMarkupOfThe  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
push esi  +
call sub_45C5B0  +
add esp 4 +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_42CABF  +
mov eax [esi+24h] +
test eax eax +
jz loc_42CAA5  +
cmp dword ptr [eax+4] 0 +
jz loc_42CAA5  +
call sub_4583C0  +
mov edi [esi+24h] +
mov ebx eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push dword ptr [edi+4]  +
push offset aSD  +
push dword ptr [eax]  +
mov eax [ebx] +
call eax  +
add esp 10h +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aEnteringInclud  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 8 +
mov edx [esi+24h] +
mov ecx [edx+10h] +
mov al [ecx] +
test al al +
jz loc_42CC08  +
nop   +
cmp al 5Dh +
jnz loc_42CAE3  +
cmp [ecx+1] al +
jnz loc_42CAE3  +
cmp byte ptr [ecx+2] 3Eh +
jz loc_42CC08  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42CC08  +
mov ebx [edx+24h] +
mov edi ecx +
cmp al 3Ch +
jnz loc_42CB0D  +
cmp byte ptr [ecx+1] 21h +
jnz loc_42CB0D  +
cmp byte ptr [ecx+2] 5Bh +
jnz loc_42CB0D  +
push esi  +
call loc_42C880  +
jmp loc_42CB36  +
cmp al 20h +
jz loc_42CB30  +
cmp al 9 +
jb loc_42CB19  +
cmp al 0Ah +
jbe loc_42CB30  +
cmp al 0Dh +
jz loc_42CB30  +
push esi  +
cmp al 25h +
jnz loc_42CB29  +
call sub_4343D0  +
jmp loc_42CB36  +
call sub_432860  +
jmp loc_42CB36  +
push esi  +
call sub_45C5B0  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42CB5E  +
cmp dword ptr [esi+28h] 1 +
jle loc_42CB5E  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_42CB44  +
mov edx [esi+24h] +
mov ecx [edx+10h] +
cmp ecx edi +
jnz loc_42CB6D  +
cmp ebx [edx+24h] +
jz loc_42CB7C  +
mov al [ecx] +
test al al +
jnz loc_42CAD0  +
jmp loc_42CC08  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42CBA2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42CC08  +
push offset aContentErrorIn  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 3Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42CC08  +
mov dword ptr [esi+0D4h] 1 +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_42CF22  +
mov eax [esi+24h] +
test eax eax +
jz loc_42CC46  +
cmp dword ptr [eax+4] 0 +
jz loc_42CC46  +
call sub_4583C0  +
mov edi [esi+24h] +
mov ebx eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push dword ptr [edi+4]  +
push offset aSD  +
push dword ptr [eax]  +
mov eax [ebx] +
call eax  +
add esp 10h +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aLeavingInclude  +
jmp loc_42CF19  +
cmp dl 49h +
jnz loc_42D0BA  +
cmp byte ptr [eax+1] 47h +
jnz loc_42D0BA  +
cmp byte ptr [eax+2] 4Eh +
jnz loc_42D0BA  +
cmp byte ptr [eax+3] 4Fh +
jnz loc_42D0BA  +
cmp byte ptr [eax+4] 52h +
jnz loc_42D0BA  +
cmp byte ptr [eax+5] 45h +
jnz loc_42D0BA  +
add dword ptr [esi+0C8h] 6 +
xor ebp ebp +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42CCBF  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42CCE5  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42CCE5  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 5Bh +
jz loc_42CD80  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebp +
jz loc_42CD26  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42CA3B  +
push offset aXmlConditional  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 53h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 53h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] ebp +
cmp [esi+120h] ebp +
jmp loc_42CA2F  +
***
cmp [ecx+38h] ebx +
jz loc_42CD99  +
push 0  +
push 0  +
push offset aAllMarkupOfThe  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
push esi  +
call sub_45C5B0  +
add esp 4 +
call sub_4584C0  +
cmp [eax] ebp +
jz loc_42CDF4  +
mov eax [esi+24h] +
test eax eax +
jz loc_42CDDA  +
cmp [eax+4] ebp +
jz loc_42CDDA  +
call sub_4583C0  +
mov edi [esi+24h] +
mov ebx eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push dword ptr [edi+4]  +
push offset aSD  +
push dword ptr [eax]  +
mov eax [ebx] +
call eax  +
add esp 10h +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aEnteringIgnore  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 8 +
mov edi [esi+0D4h] +
mov ebx [esi+0ACh] +
cmp [esi+120h] ebp +
jnz loc_42CE12  +
mov dword ptr [esi+0D4h] 1 +
mov dword ptr [esi+0ACh] 0Fh +
mov edx [esi+24h] +
mov eax [edx+10h] +
mov cl [eax] +
test cl cl +
jz loc_42CEC2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42CEC2  +
cmp cl 3Ch +
jnz loc_42CE9A  +
cmp byte ptr [eax+1] 21h +
jnz loc_42CE9A  +
cmp byte ptr [eax+2] 5Bh +
jnz loc_42CE9A  +
inc ebp  +
add dword ptr [esi+0C8h] 3 +
add dword ptr [edx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42CE75  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42CEBA  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42CEBA  +
push esi  +
call loc_439740  +
jmp loc_42CEB7  +
cmp cl 5Dh +
jnz loc_42CEB1  +
cmp [eax+1] cl +
jnz loc_42CEB1  +
cmp byte ptr [eax+2] 3Eh +
jnz loc_42CEB1  +
sub ebp 1 +
js loc_42CEC2  +
jmp loc_42CE4F  +
***
push esi  +
call sub_45C5B0  +
add esp 4 +
test ebp ebp +
jns loc_42CE20  +
mov [esi+0D4h] edi +
mov [esi+0ACh] ebx +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_42CF22  +
mov eax [esi+24h] +
test eax eax +
jz loc_42CF08  +
cmp dword ptr [eax+4] 0 +
jz loc_42CF08  +
call sub_4583C0  +
mov edi [esi+24h] +
mov ebx eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push dword ptr [edi+4]  +
push offset aSD  +
push dword ptr [eax]  +
mov eax [ebx] +
call eax  +
add esp 10h +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aLeavingIgnoreC  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 8 +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
cmp byte ptr [edx] 0 +
jnz loc_42CF7D  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42CF7D  +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42CF7D  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42CF7D  +
push ecx  +
call sub_45CAF0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42CF7D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42CF7D  +
push esi  +
call loc_439740  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42D025  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42CFB6  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D18D  +
push offset aXmlCondition_0  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 3Bh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Bh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42D18D  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_42D18D  +
mov eax [esp+10h] +
cmp [ecx+38h] eax +
jz loc_42D042  +
push 0  +
push 0  +
push offset aAllMarkupOfThe  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D18D  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
add eax 3 +
cmp eax [ecx+14h] +
ja loc_42D18D  +
add dword ptr [esi+0C8h] 3 +
add dword ptr [ecx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42D087  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42D18D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42D18D  +
push esi  +
call loc_439740  +
add esp 4 +
jmp loc_42D18D  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42D0E0  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D146  +
push offset aConditionalSec  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 5Fh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 5Fh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42D146  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov dword ptr [esi+0ACh] 0FFFFFFFFh +
mov dword ptr [esi+0D4h] 1 +
test eax eax +
jz loc_42D18D  +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_42D17A  +
push dword ptr [eax+0Ch]  +
call ecx  +
mov eax [esi+24h] +
add esp 4 +
mov dword ptr [eax+28h] 0 +
mov eax [esi+24h] +
mov dword ptr [eax+10h] offset unk_4DE8C5 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov [ecx+0Ch] eax +
mov ecx [esp+98h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42D1D9  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42D1D9  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov edi [eax+10h] +
mov cl [edi] +
test cl cl +
jz loc_42D38C  +
push ebx  +
retn   +
***
push offset aDetectedAnErro  +
push 1  +
push esi  +
call sub_427B90  +
push esi  +
call sub_428260  +
add esp 10h +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
sub esp 90h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+8Ch] eax +
mov ecx [esp+98h] +
mov edx [esp+9Ch] +
push ebp  +
mov ebp [esp+0A4h] +
push edi  +
mov edi [esp+9Ch] +
test edi edi +
jnz loc_42D3E0  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebp  +
mov ecx [esp+8Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
mov eax [edi+0F8h] +
cmp eax 28h +
jle loc_42D3F7  +
test dword ptr [edi+168h] 80000h +
jz loc_42D3FE  +
cmp eax 400h +
jle loc_42D41A  +
pop edi  +
mov eax 59h +
pop ebp  +
mov ecx [esp+8Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
test ebp ebp +
jz loc_42D425  +
mov dword ptr [ebp+0] 0 +
test ecx ecx +
jnz loc_42D42D  +
test edx edx +
jz loc_42D3C6  +
cmp dword ptr [edi+8] 0 +
jz loc_42D3C6  +
push esi  +
push edi  +
push 0  +
push edx  +
push ecx  +
call sub_4273D0  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_42D462  +
pop esi  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebp  +
mov ecx [esp+8Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
mov eax [esi] +
push ebx  +
mov [esp+14h] eax +
mov eax [edi] +
push esi  +
mov [esi] eax +
call sub_427950  +
push offset a1_0  +
call sub_4239C0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_42D497  +
push esi  +
call loc_45BB70  +
add esp 4 +
or eax 0FFFFFFFFh +
jmp loc_42D99D  +
mov dword ptr [ebx+5Ch] 40h +
mov eax [edi+8] +
mov eax [eax+50h] +
test eax eax +
jz loc_42D4B4  +
push eax  +
mov [ebx+50h] eax +
call sub_44FAE0  +
add esp 4 +
mov eax [edi+8] +
test eax eax +
jz loc_42D4CA  +
mov eax [eax+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi+8] +
mov eax [eax+30h] +
mov [ebx+30h] eax +
mov eax [edi+8] +
mov eax [eax+48h] +
test eax eax +
jz loc_42D4E0  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebx+48h] eax +
push 0  +
push offset aPseudoroot  +
push 0  +
push ebx  +
call sub_423AB0  +
add esp 10h +
test eax eax +
jnz loc_42D521  +
mov eax [esp+14h] +
push esi  +
mov [esi] eax +
call loc_45BB70  +
push ebx  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
call sub_4229F0  +
add esp 8 +
or eax 0FFFFFFFFh +
jmp loc_42D99D  +
push eax  +
push ebx  +
call sub_421400  +
push dword ptr [ebx+0Ch]  +
push esi  +
call sub_426A40  +
mov eax [edi+8] +
add esp 10h +
test eax eax +
jnz loc_42D540  +
mov [esi+8] ebx +
jmp loc_42D54C  +
mov [esi+8] eax +
mov ecx [ebx+0Ch] +
mov eax [edi+8] +
mov [ecx+20h] eax +
cmp dword ptr [esi+124h] 0 +
jnz loc_42D56F  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42D56F  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 4 +
jl loc_42D5CD  +
movzx eax byte ptr [ecx] +
mov [esp+10h] al +
mov eax [esi+24h] +
push 4  +
mov eax [eax+10h] +
movzx eax byte ptr [eax+1] +
mov [esp+15h] al +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx eax byte ptr [eax+2] +
mov [esp+16h] al +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx eax byte ptr [eax+3] +
mov [esp+17h] al +
lea eax [esp+14h] +
push eax  +
call sub_461EA0  +
add esp 8 +
test eax eax +
jz loc_42D5CD  +
push eax  +
push esi  +
call sub_45CDE0  +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42D644  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_42D644  +
cmp byte ptr [eax+2] 78h +
jnz loc_42D644  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_42D644  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_42D644  +
mov al [eax+5] +
cmp al 20h +
jz loc_42D603  +
cmp al 9 +
jb loc_42D5FF  +
cmp al 0Ah +
jbe loc_42D603  +
cmp al 0Dh +
jnz loc_42D644  +
push esi  +
call sub_438350  +
push offset a1_0  +
push dword ptr [edi+14h]  +
call sub_44E370  +
add esp 0Ch +
test eax eax +
jz loc_42D644  +
mov eax [esi+24h] +
push offset a1_0  +
push dword ptr [eax+30h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_42D644  +
push offset aVersionMismatc  +
push 6Dh  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [edi+4] +
cmp eax edi +
mov dword ptr [esi+0ACh] 7 +
cmovz eax esi +
mov [esi+4] eax +
mov eax [edi+68h] +
mov [esi+68h] eax +
mov eax [edi+64h] +
mov [esi+64h] eax +
mov eax [edi+114h] +
mov [esi+114h] eax +
mov eax [edi+0F8h] +
inc eax  +
cmp dword ptr [esi+68h] 0 +
mov [esi+0F8h] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
jz loc_42D698  +
mov eax [edi+70h] +
mov [esi+70h] eax +
mov eax [edi+74h] +
mov [esi+74h] eax +
jmp loc_42D6A6  +
mov dword ptr [esi+70h] 0 +
mov dword ptr [esi+74h] 0 +
mov eax [esi+128h] +
mov dword ptr [esi+84h] 0 +
mov dword ptr [esi+7Ch] 0 +
mov dword ptr [esi+80h] 0 +
mov dword ptr [esi+78h] 0 +
test eax eax +
jz loc_42D6DB  +
push eax  +
call sub_44F150  +
add esp 4 +
mov eax [edi+128h] +
push 3  +
push offset aXml_1  +
push eax  +
mov [esi+128h] eax +
call sub_44F4D0  +
push 5  +
push offset aXmlns  +
push dword ptr [esi+128h]  +
mov [esi+138h] eax +
call sub_44F4D0  +
push 24h  +
push offset aHttpWww_w3_org  +
push dword ptr [esi+128h]  +
mov [esi+13Ch] eax +
call sub_44F4D0  +
mov [esi+140h] eax +
mov eax [edi+16Ch] +
mov [esi+16Ch] eax +
mov eax [edi+15Ch] +
mov [esi+15Ch] eax +
mov eax [edi+160h] +
mov [esi+160h] eax +
mov eax [edi+118h] +
push esi  +
mov [esi+118h] eax +
call loc_42D1B0  +
mov eax [esi+68h] +
add esp 28h +
mov [edi+68h] eax +
mov eax [esi+64h] +
mov [edi+64h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov cl [eax] +
cmp cl 3Ch +
jnz loc_42D7E7  +
cmp byte ptr [eax+1] 2Fh +
jnz loc_42D7E7  +
push 81h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42D7AC  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D87B  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+20h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+2Ch] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
jmp loc_42D84E  +
test cl cl +
jz loc_42D87B  +
push 81h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42D815  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D87B  +
push offset aExtraContent_0  +
push offset aS  +
lea eax [esp+20h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+2Ch] +
mov dword ptr [esi+54h] 56h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 56h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42D87B  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+34h] +
cmp eax [ebx+0Ch] +
jz loc_42D913  +
push 81h  +
lea eax [esp+1Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42D8AD  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42D913  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+20h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+2Ch] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42D913  +
mov dword ptr [esi+0D4h] 1 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_42D928  +
mov edi [esi+54h] +
mov eax 1 +
test edi edi +
cmovz edi eax +
jmp loc_42D95A  +
test ebp ebp +
jz loc_42D958  +
mov eax [ebx+0Ch] +
mov eax [eax+0Ch] +
mov [ebp+0] eax +
test eax eax +
jz loc_42D94E  +
mov dword ptr [eax+14h] 0 +
mov eax [eax+18h] +
test eax eax +
jnz loc_42D940  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+0Ch] 0 +
xor edi edi +
mov eax [esp+14h] +
push esi  +
mov [esi] eax +
mov dword ptr [esi+128h] 0 +
mov dword ptr [esi+15Ch] 0 +
mov dword ptr [esi+160h] 0 +
call loc_45BB70  +
push ebx  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
call sub_4229F0  +
add esp 8 +
mov eax edi +
mov ecx [esp+9Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
push esi  +
mov esi [esp+0Ch] +
mov dword ptr [ebx] 0 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 23h +
jnz loc_42DAE8  +
cmp byte ptr [eax+1] 52h +
jnz loc_42DA65  +
cmp byte ptr [eax+2] 45h +
jnz loc_42DA65  +
cmp byte ptr [eax+3] 51h +
jnz loc_42DA65  +
cmp byte ptr [eax+4] 55h +
jnz loc_42DA65  +
cmp byte ptr [eax+5] 49h +
jnz loc_42DA65  +
cmp byte ptr [eax+6] 52h +
jnz loc_42DA65  +
cmp byte ptr [eax+7] 45h +
jnz loc_42DA65  +
cmp byte ptr [eax+8] 44h +
jnz loc_42DA65  +
add dword ptr [esi+0C8h] 9 +
add dword ptr [ecx+10h] 9 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 9 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42DA37  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42DA5D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42DA5D  +
push esi  +
call loc_439740  +
add esp 4 +
pop esi  +
mov eax 2 +
pop ebx  +
retn   +
***
cmp dl 23h +
jnz loc_42DAE8  +
cmp byte ptr [eax+1] 49h +
jnz loc_42DAE8  +
cmp byte ptr [eax+2] 4Dh +
jnz loc_42DAE8  +
cmp byte ptr [eax+3] 50h +
jnz loc_42DAE8  +
cmp byte ptr [eax+4] 4Ch +
jnz loc_42DAE8  +
cmp byte ptr [eax+5] 49h +
jnz loc_42DAE8  +
cmp byte ptr [eax+6] 45h +
jnz loc_42DAE8  +
cmp byte ptr [eax+7] 44h +
jnz loc_42DAE8  +
add dword ptr [esi+0C8h] 8 +
add dword ptr [ecx+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42DABA  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42DAE0  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42DAE0  +
push esi  +
call loc_439740  +
add esp 4 +
pop esi  +
mov eax 3 +
pop ebx  +
retn   +
***
push edi  +
mov edi 1 +
cmp dl 23h +
jnz loc_42DBAB  +
cmp byte ptr [eax+1] 46h +
jnz loc_42DBAB  +
cmp byte ptr [eax+2] 49h +
jnz loc_42DBAB  +
cmp byte ptr [eax+3] 58h +
jnz loc_42DBAB  +
cmp byte ptr [eax+4] 45h +
jnz loc_42DBAB  +
cmp byte ptr [eax+5] 44h +
jnz loc_42DBAB  +
add dword ptr [esi+0C8h] 6 +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42DB4F  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42DB75  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42DB75  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov edi 4 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_42DBA2  +
cmp al 9 +
jb loc_42DB8E  +
cmp al 0Ah +
jbe loc_42DBA2  +
cmp al 0Dh +
jz loc_42DBA2  +
push offset aSpaceRequir_15  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
add esp 4 +
cmp dword ptr [esi+24h] 0 +
jz loc_42DBC2  +
push 0  +
push 0  +
push 0  +
push esi  +
call loc_4294D0  +
add esp 10h +
jmp loc_42DBC4  +
xor eax eax +
mov dword ptr [esi+0ACh] 3 +
test eax eax +
jnz loc_42DBE9  +
push offset aAttributeDefau  +
push dword ptr [esi+54h]  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov [ebx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+8Ch+var_4] eax +
push esi  +
mov esi [esp+90h+arg_0] +
mov [esp+90h+var_8C] 0 +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 9 +
add dword ptr [eax+10h] 9 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 9 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42DC4D  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42DC73  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42DC73  +
push esi  +
call loc_439740  +
add esp 4 +
push ebx  +
push ebp  +
push edi  +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_42DC9B  +
push offset aXmlparsedoctyp  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
mov [esi+0DCh] edi +
call loc_439900  +
push 1  +
lea eax [esp+0A4h+var_8C] +
push eax  +
push esi  +
call sub_431F70  +
mov ebx [esp+0ACh+var_8C] +
mov ebp eax +
add esp 10h +
test ebp ebp +
jnz loc_42DCC5  +
test ebx ebx +
jz loc_42DCCC  +
mov dword ptr [esi+58h] 1 +
push esi  +
mov [esi+0E0h] ebp +
mov [esi+0E4h] ebx +
call loc_439900  +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_42DD01  +
mov eax [eax] +
test eax eax +
jz loc_42DD01  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42DD01  +
push ebp  +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 10h +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
pop edi  +
pop ebp  +
pop ebx  +
jz loc_42DDA5  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 5Bh +
jz loc_42DDA5  +
cmp al 3Eh +
jz loc_42DD9C  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
push offset aDoctypeImprope  +
push offset aS  +
lea eax [esp+0A4h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0B0h+var_88] +
mov dword ptr [esi+54h] 3Dh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Dh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 60h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42DD9C  +
mov dword ptr [esi+0D4h] 1 +
push esi  +
call sub_45C5B0  +
add esp 4 +
mov ecx [esp+90h+var_4] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
call sub_4282C0  +
mov esi [esp+8+arg_0] +
test esi esi +
jz loc_42DEA1  +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_42DEA1  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42DDFD  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax 0FAh +
jge loc_42DDFD  +
push esi  +
call sub_428140  +
add esp 4 +
push edi  +
push esi  +
call sub_427950  +
mov edi [esi] +
add esp 4 +
test edi edi +
jz loc_42DE24  +
cmp dword ptr [edi+2Ch] 0 +
jz loc_42DE24  +
call sub_458360  +
push eax  +
push dword ptr [esi+4]  +
mov eax [edi+2Ch] +
call eax  +
add esp 8 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
pop edi  +
jz loc_42DEA1  +
cmp dword ptr [esi+18h] 0 +
jnz loc_42DE89  +
mov ecx [esi+24h] +
mov eax [ecx+14h] +
mov edx [ecx+10h] +
sub eax edx +
cmp eax 4 +
jl loc_42DE89  +
movzx eax byte ptr [edx] +
mov [esp+4] al +
mov eax [ecx+10h] +
push 4  +
movzx eax byte ptr [eax+1] +
mov [esp+0Ch+var_3] al +
mov eax [ecx+10h] +
movzx eax byte ptr [eax+2] +
mov [esp+0Ch+var_2] al +
mov eax [ecx+10h] +
movzx eax byte ptr [eax+3] +
mov [esp+0Ch+var_1] al +
lea eax [esp+8] +
push eax  +
call sub_461EA0  +
add esp 8 +
test eax eax +
jz loc_42DE89  +
push eax  +
push esi  +
call sub_45CDE0  +
add esp 8 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 0 +
jnz loc_42DEA7  +
push 0  +
push 4  +
push esi  +
call sub_427B90  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 23h +
jge loc_42DECA  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42DECA  +
cmp eax 0FAh +
jge loc_42DECA  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42DF29  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_42DF29  +
cmp byte ptr [eax+2] 78h +
jnz loc_42DF29  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_42DF29  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_42DF29  +
mov al [eax+5] +
cmp al 20h +
jz loc_42DF00  +
cmp al 9 +
jb loc_42DEFC  +
cmp al 0Ah +
jbe loc_42DF00  +
cmp al 0Dh +
jnz loc_42DF29  +
push esi  +
call loc_438B80  +
add esp 4 +
cmp dword ptr [esi+54h] 20h +
jz loc_42DEA1  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42DEA1  +
mov eax [esi+24h] +
push esi  +
mov eax [eax+34h] +
mov [esi+1Ch] eax +
call loc_439900  +
jmp loc_42DF36  +
push offset a1_0  +
call sub_44E110  +
mov [esi+14h] eax +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_42DF57  +
mov eax [eax+30h] +
test eax eax +
jz loc_42DF57  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42DF57  +
push dword ptr [esi+4]  +
call eax  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42DEA1  +
mov eax [esi+8] +
test eax eax +
jz loc_42DF82  +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_42DF82  +
mov ecx [ecx] +
test ecx ecx +
jz loc_42DF82  +
mov ecx [ecx+18h] +
test ecx ecx +
js loc_42DF82  +
mov [eax+24h] ecx +
cmp dword ptr [esi+124h] 0 +
jnz loc_42DFA5  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42DFA5  +
push esi  +
call sub_428140  +
add esp 4 +
push esi  +
call sub_432990  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42DFD1  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42DFD1  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42E0D8  +
cmp byte ptr [eax+1] 21h +
jnz loc_42E0D8  +
cmp byte ptr [eax+2] 44h +
jnz loc_42E0D8  +
cmp byte ptr [eax+3] 4Fh +
jnz loc_42E0D8  +
cmp byte ptr [eax+4] 43h +
jnz loc_42E0D8  +
cmp byte ptr [eax+5] 54h +
jnz loc_42E0D8  +
cmp byte ptr [eax+6] 59h +
jnz loc_42E0D8  +
cmp byte ptr [eax+7] 50h +
jnz loc_42E0D8  +
cmp byte ptr [eax+8] 45h +
jnz loc_42E0D8  +
push esi  +
mov dword ptr [esi+0D8h] 1 +
call sub_42DC00  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 5Bh +
jnz loc_42E06E  +
push esi  +
mov dword ptr [esi+0ACh] 3 +
call loc_4326C0  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42DEA1  +
mov eax [esi] +
mov dword ptr [esi+0D8h] 2 +
test eax eax +
jz loc_42E0A8  +
mov eax [eax+68h] +
test eax eax +
jz loc_42E0A8  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42E0A8  +
push dword ptr [esi+0E0h]  +
push dword ptr [esi+0E4h]  +
push dword ptr [esi+0DCh]  +
push dword ptr [esi+4]  +
call eax  +
add esp 10h +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42DEA1  +
push esi  +
mov dword ptr [esi+0D8h] 0 +
call sub_427350  +
push esi  +
mov dword ptr [esi+0ACh] 4 +
call sub_432990  +
add esp 8 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42E0FB  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E0FB  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jz loc_42E118  +
push offset aStartTagExpect  +
push 4  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_42E15D  +
push esi  +
mov dword ptr [esi+0ACh] 7 +
call sub_42E200  +
push esi  +
mov dword ptr [esi+0ACh] 0Eh +
call sub_432990  +
mov eax [esi+24h] +
add esp 8 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_42E153  +
push 0  +
push 5  +
push esi  +
call sub_427B90  +
add esp 0Ch +
mov dword ptr [esi+0ACh] 0FFFFFFFFh +
mov eax [esi] +
test eax eax +
jz loc_42E172  +
mov eax [eax+34h] +
test eax eax +
jz loc_42E172  +
push dword ptr [esi+4]  +
call eax  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_42E19F  +
push offset aSaxCompatibili  +
push dword ptr [eax+38h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_42E19F  +
push dword ptr [esi+8]  +
call sub_4229F0  +
add esp 4 +
mov dword ptr [esi+8] 0 +
cmp dword ptr [esi+0Ch] 0 +
jz loc_42E1E6  +
mov eax [esi+8] +
test eax eax +
jz loc_42E1E0  +
or dword ptr [eax+5Ch] 1 +
cmp dword ptr [esi+64h] 0 +
jz loc_42E1BD  +
mov eax [esi+8] +
or dword ptr [eax+5Ch] 8 +
cmp dword ptr [esi+164h] 0 +
jz loc_42E1CD  +
mov eax [esi+8] +
or dword ptr [eax+5Ch] 2 +
test dword ptr [esi+168h] 20000h +
jz loc_42E1E0  +
mov eax [esi+8] +
or dword ptr [eax+5Ch] 4 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_42E1F3  +
mov dword ptr [esi+64h] 0 +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
***
sub esp 20h +
mov eax dword_4EE004 +
push ebx  +
push esi  +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] 0 +
mov [esp+28h+var_18] 0 +
mov ebx [esi+148h] +
cmp [esi+0BCh] eax +
jbe loc_42E25D  +
test dword ptr [esi+168h] 80000h +
jnz loc_42E25D  +
push eax  +
push offset aExcessiveDepth  +
push 1  +
push esi  +
call sub_45B970  +
push esi  +
call sub_428260  +
add esp 14h +
pop esi  +
pop ebx  +
add esp 20h +
retn   +
cmp dword ptr [esi+44h] 0 +
jz loc_42E27A  +
mov ecx [esi+24h] +
mov eax [ecx+24h] +
sub eax [ecx+0Ch] +
add eax [ecx+10h] +
mov [esp+28h+var_10] eax +
mov eax [ecx+1Ch] +
mov [esp+28h+var_C] eax +
cmp dword ptr [esi+0ECh] 0 +
jnz loc_42E287  +
push 0FFFFFFFFh  +
jmp loc_42E299  +
mov eax [esi+0E8h] +
mov eax [eax] +
cmp eax 0FFFFFFFEh +
jnz loc_42E298  +
push 0FFFFFFFFh  +
jmp loc_42E299  +
push eax  +
push esi  +
call sub_426CE0  +
mov eax [esi+24h] +
add esp 8 +
cmp dword ptr [esi+144h] 0 +
mov eax [eax+1Ch] +
push ebp  +
mov [esp+2Ch+arg_0] eax +
jz loc_42E2D0  +
lea eax [esp+2Ch+var_18] +
push eax  +
lea eax [esp+30h+var_20] +
push eax  +
lea eax [esp+34h+var_1C] +
push eax  +
push esi  +
call loc_436680  +
add esp 10h +
jmp loc_42E2D9  +
push esi  +
call loc_4362A0  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
mov ebp eax +
jz loc_42E56E  +
test ebp ebp +
jnz loc_42E2FC  +
push esi  +
call sub_426C90  +
add esp 4 +
pop ebp  +
pop esi  +
pop ebx  +
add esp 20h +
retn   +
push edi  +
push ebp  +
push esi  +
call sub_426970  +
mov edi [esi+34h] +
add esp 8 +
cmp dword ptr [esi+68h] 0 +
jz loc_42E336  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_42E336  +
mov eax [esi+8] +
test eax eax +
jz loc_42E336  +
test edi edi +
jz loc_42E336  +
cmp edi [eax+0Ch] +
jnz loc_42E336  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call sub_457140  +
add esp 8 +
and [esi+64h] eax +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov dl [ecx] +
cmp dl 2Fh +
jnz loc_42E412  +
cmp byte ptr [ecx+1] 3Eh +
jnz loc_42E412  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42E377  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42E39D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42E39D  +
push esi  +
call loc_439740  +
add esp 4 +
cmp dword ptr [esi+144h] 0 +
mov eax [esi] +
jz loc_42E3E1  +
test eax eax +
jz loc_42E3FE  +
mov eax [eax+78h] +
test eax eax +
jz loc_42E3FE  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42E3FE  +
push [esp+30h+var_20]  +
push [esp+34h+var_1C]  +
push ebp  +
push dword ptr [esi+4]  +
call eax  +
add esp 10h +
push esi  +
call sub_426920  +
push esi  +
call sub_426C90  +
add esp 8 +
jmp loc_42E524  +
test eax eax +
jz loc_42E3FE  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42E3FE  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42E3FE  +
push ebp  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
push esi  +
call sub_426920  +
push esi  +
call sub_426C90  +
add esp 8 +
jmp loc_42E524  +
cmp dl 3Eh +
jnz loc_42E4FB  +
inc dword ptr [eax+20h]  +
mov eax [esi+24h] +
inc dword ptr [eax+10h]  +
mov ecx [esi+24h] +
inc dword ptr [esi+0C8h]  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42E443  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
push esi  +
call loc_42D1B0  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42E56D  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 9 +
jb loc_42E469  +
cmp al 0Ah +
jbe loc_42E4BC  +
cmp al 0Dh +
jz loc_42E4BC  +
cmp al 20h +
jnb loc_42E4BC  +
push 0  +
push [esp+34h+arg_0]  +
push ebp  +
push offset aPrematureEndOf  +
push 4Dh  +
push esi  +
call sub_4280C0  +
push esi  +
call sub_4269F0  +
push esi  +
call sub_426920  +
push esi  +
call sub_426C90  +
mov eax [esi+148h] +
add esp 24h +
cmp ebx eax +
jz loc_42E56D  +
sub eax ebx +
push eax  +
push esi  +
call loc_426AD0  +
add esp 8 +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 20h +
retn   +
cmp dword ptr [esi+144h] 0 +
jz loc_42E4EF  +
push [esp+30h+var_18]  +
mov eax [esi+148h] +
sub eax ebx +
push eax  +
push [esp+38h+arg_0]  +
push [esp+3Ch+var_20]  +
push [esp+40h+var_1C]  +
push esi  +
call sub_430110  +
push esi  +
call sub_426920  +
add esp 1Ch +
jmp loc_42E53A  +
push [esp+30h+arg_0]  +
push esi  +
call sub_42FEB0  +
jmp loc_42E537  +
push 0  +
push [esp+34h+arg_0]  +
push ebp  +
push offset aCouldnTFindEnd  +
push 49h  +
push esi  +
call sub_4280C0  +
push esi  +
call sub_4269F0  +
push esi  +
call sub_426920  +
push esi  +
call sub_426C90  +
add esp 24h +
mov eax [esi+148h] +
cmp ebx eax +
jz loc_42E53A  +
sub eax ebx +
push eax  +
push esi  +
call loc_426AD0  +
add esp 8 +
test edi edi +
jz loc_42E56D  +
cmp dword ptr [esi+44h] 0 +
jz loc_42E56D  +
mov ecx [esi+24h] +
mov eax [ecx+24h] +
sub eax [ecx+0Ch] +
add eax [ecx+10h] +
mov [esp+30h+var_8] eax +
mov eax [ecx+1Ch] +
mov [esp+30h+var_4] eax +
lea eax [esp+30h+var_14] +
push eax  +
push esi  +
mov [esp+38h+var_14] edi +
call sub_45C8C0  +
add esp 8 +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 20h +
retn   +
***
sub esp 94h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+90h] eax +
push ebx  +
mov ebx [esp+0A4h] +
xor al al +
push ebp  +
xor ebp ebp +
mov [esp+10h] ebx +
mov [esp+0Bh] al +
push edi  +
mov edi [esp+0A4h] +
cmp ebx 80h +
jle loc_42E5C5  +
test dword ptr [edi+168h] 80000h +
jz loc_42E5CD  +
cmp ebx 800h +
jle loc_42E5F8  +
push ebx  +
push offset aXmlparseelem_1  +
push 37h  +
push edi  +
call sub_45B970  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+90h] +
xor ecx esp +
call sub_488C1C  +
add esp 94h +
retn   +
***
push edi  +
call loc_439900  +
add esp 4 +
cmp [edi+124h] ebp +
jnz loc_42E623  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E623  +
push edi  +
call sub_428140  +
add esp 4 +
push esi  +
mov esi [edi+24h] +
push edi  +
mov eax [esi+10h] +
cmp byte ptr [eax] 28h +
jnz loc_42E65F  +
mov esi [esi+38h] +
call sub_45C5B0  +
push edi  +
call loc_439900  +
lea eax [ebx+1] +
push eax  +
push esi  +
push edi  +
call loc_42E580  +
mov ebx eax +
mov esi ebx +
push edi  +
mov [esp+2Ch] esi +
call loc_439900  +
add esp 18h +
jmp loc_42E799  +
call sub_432EB0  +
add esp 4 +
test eax eax +
jnz loc_42E6FB  +
push 81h  +
push eax  +
lea eax [esp+24h] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] ebp +
jz loc_42E693  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42E6F4  +
push offset aContentdeclNam  +
push offset aS  +
lea eax [esp+24h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+30h] +
mov dword ptr [edi+54h] 36h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 36h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] ebp +
cmp [edi+120h] ebp +
jnz loc_42E6F4  +
mov dword ptr [edi+0D4h] 1 +
xor eax eax +
jmp loc_42ED92  +
push 2  +
push eax  +
push dword ptr [edi+8]  +
call sub_453560  +
mov ebx eax +
add esp 0Ch +
mov esi ebx +
mov [esp+14h] esi +
test ebx ebx +
jnz loc_42E726  +
push eax  +
push edi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
cmp [edi+124h] ebp +
jnz loc_42E748  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E748  +
push edi  +
call sub_428140  +
add esp 4 +
mov eax [edi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 3Fh +
jnz loc_42E766  +
push edi  +
mov dword ptr [ebx+4] 2 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E799  +
cmp al 2Ah +
jnz loc_42E77C  +
push edi  +
mov dword ptr [ebx+4] 3 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E799  +
cmp al 2Bh +
jnz loc_42E792  +
push edi  +
mov dword ptr [ebx+4] 4 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E799  +
mov dword ptr [ebx+4] 1 +
cmp [edi+124h] ebp +
jnz loc_42E7BB  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E7BB  +
push edi  +
call sub_428140  +
add esp 4 +
push edi  +
call loc_439900  +
add esp 4 +
cmp [edi+124h] ebp +
jnz loc_42E7F3  +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42E7F3  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42E7F3  +
push edi  +
call sub_4398C0  +
add esp 4 +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 29h +
jz loc_42EC23  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42EC23  +
mov eax [edi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 2Ch +
jnz loc_42E861  +
mov al [esp+13h] +
test al al +
jnz loc_42E82A  +
mov byte ptr [esp+13h] 2Ch +
jmp loc_42E832  +
cmp al 2Ch +
jnz loc_42EA3F  +
push edi  +
call sub_45C5B0  +
push 3  +
push 0  +
push dword ptr [edi+8]  +
call sub_453560  +
add esp 10h +
test eax eax +
jz loc_42EA18  +
test ebp ebp +
jnz loc_42E8C8  +
mov [eax+0Ch] ebx +
test ebx ebx +
jz loc_42E85D  +
mov [ebx+14h] eax +
mov ebx eax +
jmp loc_42E8D4  +
cmp al 7Ch +
jnz loc_42EB6C  +
mov al [esp+13h] +
test al al +
jnz loc_42E878  +
mov byte ptr [esp+13h] 7Ch +
jmp loc_42E880  +
cmp al 7Ch +
jnz loc_42EB29  +
push edi  +
call sub_45C5B0  +
push 4  +
push 0  +
push dword ptr [edi+8]  +
call sub_453560  +
add esp 10h +
test eax eax +
jnz loc_42E84F  +
test ebp ebp +
jz loc_42E8AD  +
cmp ebp ebx +
jz loc_42E8AD  +
push ebp  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
test ebx ebx +
jz loc_42EC1C  +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
mov [esi+10h] eax +
mov [eax+14h] esi +
mov [eax+0Ch] ebp +
mov [ebp+14h] eax +
cmp dword ptr [edi+124h] 0 +
mov [esp+14h] eax +
jnz loc_42E8FB  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E8FB  +
push edi  +
call sub_428140  +
add esp 4 +
push edi  +
call loc_439900  +
add esp 4 +
cmp dword ptr [edi+124h] 0 +
jnz loc_42E927  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42E927  +
push edi  +
call sub_428140  +
add esp 4 +
mov esi [edi+24h] +
push edi  +
mov eax [esi+10h] +
cmp byte ptr [eax] 28h +
jnz loc_42E95B  +
mov esi [esi+38h] +
call sub_45C5B0  +
push edi  +
call loc_439900  +
mov eax [esp+20h] +
inc eax  +
push eax  +
push esi  +
push edi  +
call loc_42E580  +
push edi  +
mov ebp eax +
call loc_439900  +
add esp 18h +
jmp loc_42E9D4  +
call sub_432EB0  +
add esp 4 +
test eax eax +
jz loc_42EA82  +
push 2  +
push eax  +
push dword ptr [edi+8]  +
call sub_453560  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_42EC0C  +
mov eax [edi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 3Fh +
jnz loc_42E9A1  +
push edi  +
mov dword ptr [ebp+4] 2 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E9D4  +
cmp al 2Ah +
jnz loc_42E9B7  +
push edi  +
mov dword ptr [ebp+4] 3 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E9D4  +
cmp al 2Bh +
jnz loc_42E9CD  +
push edi  +
mov dword ptr [ebp+4] 4 +
call sub_45C5B0  +
add esp 4 +
jmp loc_42E9D4  +
mov dword ptr [ebp+4] 1 +
push edi  +
call loc_439900  +
add esp 4 +
cmp dword ptr [edi+124h] 0 +
jnz loc_42EA00  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42EA00  +
push edi  +
call sub_428140  +
add esp 4 +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 29h +
jz loc_42EC23  +
mov esi [esp+14h] +
jmp loc_42E802  +
***
test ebp ebp +
jz loc_42EA2C  +
cmp ebp ebx +
jz loc_42EA2C  +
push ebp  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
movzx eax al +
push eax  +
push offset aXmlparseelem_2  +
push 42h  +
push edi  +
call sub_45B970  +
add esp 10h +
test ebp ebp +
jz loc_42EA67  +
cmp ebp ebx +
jz loc_42EA67  +
push ebp  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
test ebx ebx +
jz loc_42EC1C  +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
push 81h  +
lea eax [esp+20h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_42EAA8  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42EB0E  +
push offset aContentdeclNam  +
push offset aS  +
lea eax [esp+24h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+30h] +
mov dword ptr [edi+54h] 36h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 36h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_42EB0E  +
mov dword ptr [edi+0D4h] 1 +
test ebx ebx +
jz loc_42EC1C  +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
movzx eax al +
push eax  +
push offset aXmlparseelem_2  +
push 42h  +
push edi  +
call sub_45B970  +
add esp 10h +
test ebp ebp +
jz loc_42EB51  +
cmp ebp ebx +
jz loc_42EB51  +
push ebp  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
test ebx ebx +
jz loc_42EC1C  +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
push 81h  +
lea eax [esp+20h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_42EB92  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_42EBF8  +
push offset aContentdeclOrE  +
push offset aS  +
lea eax [esp+24h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+30h] +
mov dword ptr [edi+54h] 37h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 37h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_42EBF8  +
mov dword ptr [edi+0D4h] 1 +
test ebp ebp +
jz loc_42EC0C  +
cmp ebp ebx +
jz loc_42EC0C  +
push ebp  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
test ebx ebx +
jz loc_42EC1C  +
push ebx  +
push dword ptr [edi+8]  +
call loc_4527E0  +
add esp 8 +
xor eax eax +
jmp loc_42ED92  +
mov esi [esp+14h] +
test esi esi +
jz loc_42EC35  +
test ebp ebp +
jz loc_42EC35  +
mov [esi+10h] ebp +
mov [ebp+14h] esi +
cmp dword ptr [edi+68h] 0 +
jz loc_42EC5E  +
mov eax [edi+24h] +
mov eax [eax+38h] +
cmp eax [esp+0ACh] +
jz loc_42EC5E  +
push 0  +
push 0  +
push offset aElementConte_0  +
push 5Ah  +
push edi  +
call sub_43A4F0  +
add esp 14h +
push edi  +
call sub_45C5B0  +
mov eax [edi+24h] +
add esp 4 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 3Fh +
jnz loc_42EC9C  +
test ebx ebx +
jz loc_42ED87  +
mov eax [ebx+4] +
cmp eax 4 +
jz loc_42ED80  +
cmp eax 3 +
jz loc_42ED80  +
mov dword ptr [ebx+4] 2 +
jmp loc_42ED87  +
cmp al 2Ah +
jnz loc_42ECFD  +
test ebx ebx +
jz loc_42ED87  +
mov dword ptr [ebx+4] 3 +
mov eax ebx +
cmp dword ptr [eax] 4 +
jnz loc_42ED87  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_42ECD5  +
mov edx [ecx+4] +
cmp edx 2 +
jz loc_42ECCE  +
cmp edx 3 +
jnz loc_42ECD5  +
mov dword ptr [ecx+4] 1 +
lea ecx [eax+10h] +
mov eax [ecx] +
test eax eax +
jz loc_42ECF2  +
mov edx [eax+4] +
cmp edx 2 +
jz loc_42ECEB  +
cmp edx 3 +
jnz loc_42ECF2  +
mov dword ptr [eax+4] 1 +
mov eax [ecx] +
test eax eax +
jnz loc_42ECB1  +
jmp loc_42ED87  +
cmp al 2Bh +
jnz loc_42ED90  +
test ebx ebx +
jz loc_42ED87  +
mov eax [ebx+4] +
xor edx edx +
cmp eax 2 +
jz loc_42ED21  +
cmp eax 3 +
jz loc_42ED21  +
mov dword ptr [ebx+4] 4 +
jmp loc_42ED28  +
mov dword ptr [ebx+4] 3 +
test esi esi +
jz loc_42ED87  +
cmp dword ptr [esi] 4 +
jnz loc_42ED7C  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_42ED55  +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_42ED49  +
cmp ecx 3 +
jnz loc_42ED55  +
mov dword ptr [eax+4] 1 +
mov edx 1 +
mov eax [esi+10h] +
test eax eax +
jz loc_42ED75  +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_42ED69  +
cmp ecx 3 +
jnz loc_42ED75  +
mov dword ptr [eax+4] 1 +
mov edx 1 +
mov esi [esi+10h] +
test esi esi +
jnz loc_42ED30  +
test edx edx +
jz loc_42ED87  +
mov dword ptr [ebx+4] 3 +
push edi  +
call sub_45C5B0  +
add esp 4 +
mov eax ebx +
mov ecx [esp+0A0h] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 94h +
retn   +
***
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov eax [esi+24h] +
mov edi [eax+38h] +
mov dword ptr [ebp+0] 0 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 28h +
jz loc_42EDEE  +
push [esp+8+arg_4]  +
push offset aXmlparseelem_0  +
push 36h  +
push esi  +
call sub_428050  +
add esp 10h +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push esi  +
call sub_45C5B0  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42EE1A  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42EE1A  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42EDE7  +
push ebx  +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 23h +
jnz loc_42EE6D  +
cmp byte ptr [eax+1] 50h +
jnz loc_42EE6D  +
cmp byte ptr [eax+2] 43h +
jnz loc_42EE6D  +
cmp byte ptr [eax+3] 44h +
jnz loc_42EE6D  +
cmp byte ptr [eax+4] 41h +
jnz loc_42EE6D  +
cmp byte ptr [eax+5] 54h +
jnz loc_42EE6D  +
cmp byte ptr [eax+6] 41h +
jnz loc_42EE6D  +
push edi  +
push esi  +
call loc_42F2C0  +
add esp 8 +
mov ebx 3 +
jmp loc_42EE7E  +
push 1  +
push edi  +
push esi  +
call loc_42E580  +
add esp 0Ch +
mov ebx 4 +
push esi  +
mov edi eax +
call loc_439900  +
add esp 4 +
mov [ebp+0] edi +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 90h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+90h+var_4] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+9Ch+arg_0] +
or ebx 0FFFFFFFFh +
push edi  +
xor edi edi +
mov [esp+0A0h+var_90] edi +
mov ecx [esi+24h] +
mov [esp+0A0h+var_8C] ecx +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_42F201  +
cmp byte ptr [eax+1] 21h +
jnz loc_42F201  +
cmp byte ptr [eax+2] 45h +
jnz loc_42F201  +
cmp byte ptr [eax+3] 4Ch +
jnz loc_42F201  +
cmp byte ptr [eax+4] 45h +
jnz loc_42F201  +
cmp byte ptr [eax+5] 4Dh +
jnz loc_42F201  +
cmp byte ptr [eax+6] 45h +
jnz loc_42F201  +
cmp byte ptr [eax+7] 4Eh +
jnz loc_42F201  +
cmp byte ptr [eax+8] 54h +
jnz loc_42F201  +
add dword ptr [esi+0C8h] 9 +
add dword ptr [ecx+10h] 9 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 9 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42EF51  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42EF77  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42EF77  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_42EF9F  +
cmp al 9 +
jb loc_42EF8B  +
cmp al 0Ah +
jbe loc_42EF9F  +
cmp al 0Dh +
jz loc_42EF9F  +
push offset aSpaceRequire_2  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jnz loc_42EFCC  +
push offset aXmlparseelemen  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
jmp loc_42F203  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42EFF1  +
cmp dword ptr [esi+28h] 1 +
jle loc_42EFF1  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_42EFD7  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_42F019  +
cmp al 9 +
jb loc_42F005  +
cmp al 0Ah +
jbe loc_42F019  +
cmp al 0Dh +
jz loc_42F019  +
push offset aSpaceRequire_3  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
mov edx [esi+24h] +
add esp 4 +
mov eax [edx+10h] +
mov cl [eax] +
cmp cl 45h +
jnz loc_42F09D  +
cmp byte ptr [eax+1] 4Dh +
jnz loc_42F09D  +
cmp byte ptr [eax+2] 50h +
jnz loc_42F09D  +
cmp byte ptr [eax+3] 54h +
jnz loc_42F09D  +
cmp byte ptr [eax+4] 59h +
jnz loc_42F09D  +
add dword ptr [esi+0C8h] 5 +
add dword ptr [edx+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42F06D  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42F093  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42F093  +
push esi  +
call loc_439740  +
add esp 4 +
mov ebx 1 +
jmp loc_42F11F  +
cmp cl 41h +
jnz loc_42F101  +
cmp byte ptr [eax+1] 4Eh +
jnz loc_42F101  +
cmp byte ptr [eax+2] 59h +
jnz loc_42F101  +
add dword ptr [esi+0C8h] 3 +
add dword ptr [edx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42F0D4  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42F0FA  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42F0FA  +
push esi  +
call loc_439740  +
add esp 4 +
mov ebx 2 +
jmp loc_42F11F  +
cmp cl 28h +
jnz loc_42F27A  +
lea eax [esp+0A0h+var_90] +
push eax  +
push ebp  +
push esi  +
call sub_42EDB0  +
mov edi [esp+0ACh+var_90] +
add esp 0Ch +
mov ebx eax +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov ecx [ecx+10h] +
cmp byte ptr [ecx] 0 +
jnz loc_42F14D  +
cmp dword ptr [esi+28h] 1 +
jle loc_42F14D  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_42F133  +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_42F21C  +
push 81h  +
lea eax [esp+0A4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42F18B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42F1F1  +
push offset aExpected_3  +
push offset aS  +
lea eax [esp+0A8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0B4h+var_88] +
mov dword ptr [esi+54h] 49h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 49h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42F1F1  +
mov dword ptr [esi+0D4h] 1 +
test edi edi +
jz loc_42F201  +
push edi  +
push dword ptr [esi+8]  +
call loc_4527E0  +
add esp 8 +
mov eax ebx +
mov ecx [esp+0A0h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
cmp [esp+0A0h+var_8C] ecx +
jz loc_42F232  +
push offset aElementDeclara  +
push 5Ah  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call sub_45C5B0  +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_42F1F1  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_42F1F1  +
cmp dword ptr [eax+24h] 0 +
jz loc_42F1F1  +
test edi edi +
jz loc_42F25B  +
mov dword ptr [edi+14h] 0 +
mov eax [esi] +
push edi  +
push ebx  +
push ebp  +
push dword ptr [esi+4]  +
mov eax [eax+24h] +
call eax  +
add esp 10h +
test edi edi +
jz loc_42F201  +
cmp dword ptr [edi+14h] 0 +
jnz loc_42F201  +
jmp loc_42F1F5  +
cmp cl 25h +
jnz loc_42F2A2  +
cmp [esi+60h] edi +
jnz loc_42F2A2  +
cmp dword ptr [esi+28h] 1 +
jnz loc_42F2A2  +
push offset aPereferenceF_0  +
push 15h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
jmp loc_42F203  +
push offset aXmlparseelem_3  +
push 36h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
jmp loc_42F203  +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+9Ch] +
xor ebx ebx +
push edi  +
xor ebp ebp +
mov [esp+10h] ebx +
xor edi edi +
cmp [esi+124h] ebx +
jnz loc_42F30B  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42F30B  +
push esi  +
call sub_428140  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 23h +
jnz loc_42F6C7  +
cmp byte ptr [eax+1] 50h +
jnz loc_42F6C7  +
cmp byte ptr [eax+2] 43h +
jnz loc_42F6C7  +
cmp byte ptr [eax+3] 44h +
jnz loc_42F6C7  +
cmp byte ptr [eax+4] 41h +
jnz loc_42F6C7  +
cmp byte ptr [eax+5] 54h +
jnz loc_42F6C7  +
cmp byte ptr [eax+6] 41h +
jnz loc_42F6C7  +
add dword ptr [esi+0C8h] 7 +
add dword ptr [ecx+10h] 7 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 7 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42F37C  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp [eax] bl +
jnz loc_42F3A1  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42F3A1  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
add esp 4 +
cmp [esi+124h] ebx +
jnz loc_42F3D9  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42F3D9  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42F3D9  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov al [eax] +
cmp al 29h +
jnz loc_42F44B  +
cmp [esi+68h] ebx +
jz loc_42F40A  +
mov eax [ecx+38h] +
cmp eax [esp+0A4h] +
jz loc_42F40A  +
push 0  +
push 0  +
push offset aElementConte_0  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
push esi  +
call sub_45C5B0  +
push 1  +
push 0  +
push dword ptr [esi+8]  +
call sub_453560  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_42F624  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 2Ah +
jnz loc_42F444  +
push esi  +
mov dword ptr [edi+4] 3 +
call sub_45C5B0  +
add esp 4 +
mov eax edi +
jmp loc_42F74F  +
cmp al 28h +
jz loc_42F453  +
cmp al 7Ch +
jnz loc_42F46E  +
push 1  +
push 0  +
push dword ptr [esi+8]  +
call sub_453560  +
mov edi eax +
add esp 0Ch +
mov ebp edi +
test edi edi +
jz loc_42F624  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 7Ch +
jnz loc_42F546  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42F546  +
push esi  +
call sub_45C5B0  +
add esp 4 +
push 4  +
push 0  +
push dword ptr [esi+8]  +
call sub_453560  +
add esp 0Ch +
test ebx ebx +
jnz loc_42F4C1  +
mov ebp eax +
test ebp ebp +
jz loc_42F624  +
mov [ebp+0Ch] edi +
test edi edi +
jz loc_42F4BD  +
mov [edi+14h] ebp +
mov edi ebp +
jmp loc_42F4EE  +
mov ebx eax +
test ebx ebx +
jz loc_42F624  +
push 2  +
push dword ptr [esp+14h]  +
push dword ptr [esi+8]  +
call sub_453560  +
add esp 0Ch +
mov [ebx+0Ch] eax +
test eax eax +
jz loc_42F4E6  +
mov [eax+14h] ebx +
mov [edi+10h] ebx +
mov [ebx+14h] edi +
mov edi ebx +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
mov ebx eax +
add esp 8 +
mov [esp+10h] ebx +
test ebx ebx +
jz loc_42F60B  +
push esi  +
call loc_439900  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42F537  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42F537  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 7Ch +
jz loc_42F480  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 29h +
jnz loc_42F62B  +
cmp byte ptr [eax+1] 2Ah +
jnz loc_42F62B  +
test ebx ebx +
jz loc_42F57B  +
push 2  +
push ebx  +
push dword ptr [esi+8]  +
call sub_453560  +
add esp 0Ch +
mov [edi+10h] eax +
test eax eax +
jz loc_42F57B  +
mov [eax+14h] edi +
test ebp ebp +
jz loc_42F586  +
mov dword ptr [ebp+4] 3 +
cmp dword ptr [esi+68h] 0 +
jz loc_42F5AF  +
mov eax [esi+24h] +
mov eax [eax+38h] +
cmp eax [esp+0A4h] +
jz loc_42F5AF  +
push 0  +
push 0  +
push offset aElementConte_0  +
push 5Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42F5D8  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42F74D  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42F74D  +
push esi  +
call loc_439740  +
add esp 4 +
jmp loc_42F74D  +
push offset aXmlparseelem_4  +
push 44h  +
push esi  +
call sub_427FE0  +
push edi  +
push dword ptr [esi+8]  +
call loc_4527E0  +
add esp 14h +
xor eax eax +
jmp loc_42F74F  +
push ebp  +
push dword ptr [esi+8]  +
call loc_4527E0  +
push 81h  +
lea eax [esp+20h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 14h +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42F65A  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42F6C0  +
push offset aMixedcontentde  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 34h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 34h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42F6C0  +
mov dword ptr [esi+0D4h] 1 +
xor eax eax +
jmp loc_42F74F  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebx +
jz loc_42F6EC  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42F74D  +
push offset aMixedcontent_0  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [esi+54h] 45h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 45h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] ebx +
cmp [esi+120h] ebx +
jnz loc_42F74D  +
mov dword ptr [esi+0D4h] 1 +
mov eax ebp +
mov ecx [esp+98h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
sub esp 90h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+90h+var_4] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+9Ch+arg_0] +
xor ebp ebp +
push edi  +
mov [esp+0A0h+var_90] 0Ah +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov bl [eax] +
cmp bl 61h +
jb loc_42F7AB  +
cmp bl 7Ah +
jbe loc_42F7B6  +
lea eax [ebx-41h] +
cmp al 19h +
ja loc_42F8E7  +
push 0Ah  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_42F7D8  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
jmp loc_42F96F  +
mov edi 1 +
mov [ebp+0] bl +
push esi  +
mov [esp+0A4h+var_8C] edi +
call sub_45C5B0  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov bl [eax] +
cmp bl 61h +
jb loc_42F7FF  +
cmp bl 7Ah +
jbe loc_42F826  +
cmp bl 41h +
jb loc_42F809  +
cmp bl 5Ah +
jbe loc_42F826  +
cmp bl 30h +
jb loc_42F813  +
cmp bl 39h +
jbe loc_42F826  +
cmp bl 2Eh +
jz loc_42F826  +
cmp bl 5Fh +
jz loc_42F826  +
cmp bl 2Dh +
jnz loc_42F8C5  +
mov eax [esp+0A0h+var_90] +
inc edi  +
cmp edi eax +
jl loc_42F84A  +
add eax eax +
push eax  +
push ebp  +
mov [esp+0A8h+var_90] eax +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_42F8CE  +
mov ebp eax +
mov eax [esp+0A0h+var_8C] +
push esi  +
mov [esp+0A4h+var_8C] edi +
mov [eax+ebp] bl +
call sub_45C5B0  +
mov ecx [esi+24h] +
add esp 4 +
mov edx [ecx+10h] +
mov bl [edx] +
test bl bl +
jnz loc_42F7F5  +
cmp dword ptr [esi+124h] 0 +
jnz loc_42F7ED  +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_42F898  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_42F898  +
push esi  +
call sub_4398C0  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_42F7ED  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42F7ED  +
push esi  +
call sub_428140  +
jmp loc_42F7EA  +
mov byte ptr [edi+ebp] 0 +
jmp loc_42F96D  +
push 0  +
push esi  +
call sub_45BA50  +
push ebp  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
jmp loc_42F96F  +
push 81h  +
lea eax [esp+0A4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebp +
jz loc_42F90C  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42F96D  +
push offset aInvalidXmlEnco  +
push offset aS  +
lea eax [esp+0A8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0B4h+var_88] +
mov dword ptr [esi+54h] 4Fh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Fh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] ebp +
cmp [esi+120h] ebp +
jnz loc_42F96D  +
mov dword ptr [esi+0D4h] 1 +
mov eax ebp +
mov ecx [esp+0A0h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
push edi  +
push esi  +
xor edi edi +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 65h +
jnz loc_42FE95  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_42FE95  +
cmp byte ptr [eax+2] 63h +
jnz loc_42FE95  +
cmp byte ptr [eax+3] 6Fh +
jnz loc_42FE95  +
cmp byte ptr [eax+4] 64h +
jnz loc_42FE95  +
cmp byte ptr [eax+5] 69h +
jnz loc_42FE95  +
cmp byte ptr [eax+6] 6Eh +
jnz loc_42FE95  +
cmp byte ptr [eax+7] 67h +
jnz loc_42FE95  +
add dword ptr [esi+0C8h] 8 +
add dword ptr [ecx+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42FA33  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42FA59  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42FA59  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Dh +
jz loc_42FB10  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_42FA96  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42FAF7  +
push offset aExpected_4  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 4Bh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Bh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_42FAF7  +
mov dword ptr [esi+0D4h] 1 +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 8 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 22h +
jnz loc_42FBFE  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_42F770  +
mov ecx [esi+24h] +
add esp 8 +
mov edi eax +
mov ecx [ecx+10h] +
cmp byte ptr [ecx] 22h +
jz loc_42FCD5  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42FB75  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42FBDB  +
push offset aStringNotClose  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 22h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 22h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42FBDB  +
mov dword ptr [esi+0D4h] 1 +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
cmp al 27h +
jnz loc_42FCE3  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_42F770  +
mov edi eax +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 27h +
jz loc_42FCD5  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42FC4C  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42FCB2  +
push offset aStringNotClose  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 22h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 22h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_42FCB2  +
mov dword ptr [esi+0D4h] 1 +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push esi  +
call sub_45C5B0  +
add esp 4 +
jmp loc_42FD69  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_42FD08  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_42FD69  +
push offset aStringNotStart  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 21h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 21h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_42FD69  +
mov dword ptr [esi+0D4h] 1 +
test dword ptr [esi+168h] 200000h +
jnz loc_42FBDB  +
test edi edi +
jz loc_42FE95  +
push offset aUtf16  +
push edi  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_42FE5C  +
push offset aUtf16_0  +
push edi  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_42FE5C  +
push offset aUtf8  +
push edi  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_42FE81  +
push offset aUtf8_0  +
push edi  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_42FE81  +
mov eax [esi+24h] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_42FDED  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+24h] +
push edi  +
mov [eax+2Ch] edi +
call loc_462010  +
add esp 4 +
test eax eax +
jz loc_42FE32  +
push eax  +
push esi  +
call sub_45D280  +
add esp 8 +
test eax eax +
jns loc_42FE95  +
pop edi  +
mov dword ptr [esi+54h] 20h +
xor eax eax +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push edi  +
push offset aUnsupportedEnc  +
push 20h  +
push esi  +
call sub_428050  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
cmp dword ptr [esi+18h] 0 +
jnz loc_42FE81  +
mov eax [esi+24h] +
mov eax [eax] +
test eax eax +
jz loc_42FE81  +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_42FE81  +
push offset aDocumentLabell  +
push 51h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+18h] +
test eax eax +
jz loc_42FE92  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov [esi+18h] edi +
mov ecx [esp+90h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
cmp dword ptr [esi+124h] 0 +
jnz loc_42FEEF  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_42FEEF  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 3Ch +
jnz loc_4300E3  +
cmp byte ptr [ecx+1] 2Fh +
jnz loc_4300E3  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_42FF2E  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_42FF54  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_42FF54  +
push esi  +
call loc_439740  +
add esp 4 +
push edi  +
push dword ptr [esi+0B8h]  +
push esi  +
call sub_433090  +
add esp 8 +
mov edi eax +
cmp dword ptr [esi+124h] 0 +
jnz loc_42FF89  +
mov ecx [esi+24h] +
mov edx [ecx+14h] +
sub edx [ecx+10h] +
cmp edx 0FAh +
jge loc_42FF89  +
push esi  +
call sub_428140  +
add esp 4 +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
mov al [eax] +
cmp al 9 +
jb loc_42FFA2  +
cmp al 0Ah +
jbe loc_42FFAA  +
cmp al 0Dh +
jz loc_42FFAA  +
cmp al 20h +
jb loc_42FFB2  +
cmp al 3Eh +
jz loc_430044  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_42FFDC  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43006C  +
push offset aExpected_3  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 49h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 49h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43006C  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_43006C  +
inc dword ptr [ecx+20h]  +
mov eax [esi+24h] +
inc dword ptr [eax+10h]  +
mov ecx [esi+24h] +
inc dword ptr [esi+0C8h]  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43006C  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
cmp edi 1 +
jz loc_430099  +
test edi edi +
mov eax offset aUnparseable +
cmovnz eax edi +
push eax  +
push [esp+94h+arg_4]  +
push dword ptr [esi+0B8h]  +
push offset aOpeningAndEndi  +
push 4Ch  +
push esi  +
call sub_4280C0  +
add esp 18h +
mov eax [esi] +
pop edi  +
test eax eax +
jz loc_4300BE  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4300BE  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_4300BE  +
push dword ptr [esi+0B8h]  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
push esi  +
call sub_426920  +
push esi  +
call sub_426C90  +
add esp 8 +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push offset aXmlparseendtag  +
push 4Ah  +
push esi  +
call sub_427FE0  +
mov ecx [esp+98h+var_4] +
add esp 0Ch +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push ebx  +
mov ebx [esp+8Ch+arg_4] +
push ebp  +
mov ebp [esp+90h+arg_8] +
push esi  +
mov esi [esp+94h+arg_0] +
push edi  +
mov edi [esp+98h+arg_14] +
cmp dword ptr [esi+124h] 0 +
jnz loc_430167  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_430167  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 3Ch +
jnz loc_4303DC  +
cmp byte ptr [ecx+1] 2Fh +
jnz loc_4303DC  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4301A6  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4301CC  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4301CC  +
push esi  +
call loc_439740  +
add esp 4 +
test edi edi +
jle loc_430218  +
mov eax [esi+24h] +
push edi  +
push dword ptr [esi+0B8h]  +
push dword ptr [eax+10h]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_430218  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
add eax edi +
cmp byte ptr [eax] 3Eh +
jnz loc_430208  +
inc eax  +
mov [ecx+10h] eax +
lea eax [edi+1] +
mov ecx [esi+24h] +
add [ecx+20h] eax +
jmp loc_43038F  +
mov [ecx+10h] eax +
mov eax [esi+24h] +
add [eax+20h] edi +
mov edi 1 +
jmp loc_43023F  +
test ebx ebx +
jnz loc_43022D  +
push dword ptr [esi+0B8h]  +
push esi  +
call sub_433090  +
add esp 8 +
jmp loc_43023D  +
push ebx  +
push dword ptr [esi+0B8h]  +
push esi  +
call sub_435420  +
add esp 0Ch +
mov edi eax +
cmp dword ptr [esi+124h] 0 +
jnz loc_430262  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_430262  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430468  +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
mov al [eax] +
cmp al 9 +
jb loc_430288  +
cmp al 0Ah +
jbe loc_430290  +
cmp al 0Dh +
jz loc_430290  +
cmp al 20h +
jb loc_430298  +
cmp al 3Eh +
jz loc_43032A  +
push 81h  +
lea eax [esp+9Ch+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4302C2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430352  +
push offset aExpected_3  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [esi+54h] 49h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 49h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430352  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_430352  +
inc dword ptr [ecx+20h]  +
mov eax [esi+24h] +
inc dword ptr [eax+10h]  +
mov ecx [esi+24h] +
inc dword ptr [esi+0C8h]  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_430352  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
cmp edi 1 +
jz loc_43038F  +
mov eax [esp+98h+arg_C] +
test edi edi +
mov ecx offset aUnparseable +
cmovnz ecx edi +
test eax eax +
jnz loc_430377  +
mov edx [esi+34h] +
test edx edx +
jz loc_430377  +
movzx eax word ptr [edx+38h] +
push ecx  +
push eax  +
push dword ptr [esi+0B8h]  +
push offset aOpeningAndEndi  +
push 4Ch  +
push esi  +
call sub_4280C0  +
add esp 18h +
mov eax [esi] +
test eax eax +
jz loc_4303B5  +
mov eax [eax+78h] +
test eax eax +
jz loc_4303B5  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_4303B5  +
push ebp  +
push ebx  +
push dword ptr [esi+0B8h]  +
push dword ptr [esi+4]  +
call eax  +
add esp 10h +
push esi  +
call sub_426C90  +
mov eax [esp+9Ch+arg_10] +
add esp 4 +
test eax eax +
jz loc_430468  +
push eax  +
push esi  +
call loc_426AD0  +
add esp 8 +
jmp loc_430468  +
push 81h  +
lea eax [esp+9Ch+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_430402  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430468  +
push offset aEndtagNotFound  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [esi+54h] 4Ah +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Ah  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430468  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+98h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 0A0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A0h+var_4] eax +
push ebp  +
push esi  +
mov esi [esp+0A8h+arg_0] +
xor eax eax +
push edi  +
xor ebp ebp +
mov [esp+0ACh+var_94] eax +
xor edi edi +
mov [esp+0ACh+var_A0] ebp +
mov edx [esi+24h] +
mov [esp+0ACh+var_90] eax +
mov [esp+0ACh+var_98] eax +
mov [esp+0ACh+var_8C] edx +
mov ecx [edx+10h] +
cmp byte ptr [ecx] 3Ch +
jnz loc_430DAF  +
cmp byte ptr [ecx+1] 21h +
jnz loc_430DAF  +
cmp byte ptr [ecx+2] 45h +
jnz loc_430DAF  +
cmp byte ptr [ecx+3] 4Eh +
jnz loc_430DAF  +
cmp byte ptr [ecx+4] 54h +
jnz loc_430DAF  +
cmp byte ptr [ecx+5] 49h +
jnz loc_430DAF  +
cmp byte ptr [ecx+6] 54h +
jnz loc_430DAF  +
cmp byte ptr [ecx+7] 59h +
jnz loc_430DAF  +
cmp [esi+124h] eax +
jnz loc_430546  +
mov eax ecx +
sub eax [edx+0Ch] +
cmp eax 1F4h +
jle loc_430546  +
mov eax [edx+14h] +
sub eax ecx +
cmp eax 1F4h +
jge loc_430546  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 8 +
add dword ptr [eax+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_43056F  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_430595  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_430595  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
add esp 4 +
test eax eax +
jnz loc_4305B2  +
push offset aSpaceRequire_4  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4305E8  +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
add esp 8 +
test eax eax +
jnz loc_4305E0  +
push offset aSpaceRequire_5  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov [esp+0ACh+var_90] 1 +
push ebx  +
push esi  +
call sub_432EB0  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_43060D  +
push offset aXmlparseentity  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_430DAE  +
push 3Ah  +
push ebx  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_430634  +
push 0  +
push 0  +
push ebx  +
push offset aColonsAreFor_0  +
push 0CDh  +
push esi  +
call sub_428BD0  +
add esp 18h +
push esi  +
call loc_439900  +
add esp 4 +
test eax eax +
jnz loc_430651  +
push offset aSpaceRequire_6  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+24h] +
mov dword ptr [esi+0ACh] 0Ah +
mov eax [eax+10h] +
mov al [eax] +
cmp [esp+0B0h+var_90] edi +
jz loc_4308A3  +
cmp al 22h +
jz loc_430854  +
cmp al 27h +
jz loc_430854  +
push 1  +
lea eax [esp+0B4h+var_A0] +
push eax  +
push esi  +
call sub_431F70  +
mov edi eax +
add esp 0Ch +
mov [esp+0B0h+var_9C] edi +
test edi edi +
jnz loc_43073E  +
mov ebp [esp+0B0h+var_A0] +
test ebp ebp +
jnz loc_430CBD  +
push 81h  +
lea eax [esp+0B4h+var_88] +
push ebp  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebp +
jz loc_4306CF  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430DAE  +
push offset aEntityValueReq  +
push offset aS  +
lea eax [esp+0B8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C4h+var_88] +
mov dword ptr [esi+54h] 54h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 54h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430CBD  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_430CBD  +
push edi  +
call sub_45A210  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_43076B  +
mov edi [esp+0B0h+var_9C] +
push edi  +
push offset aInvalidUriS  +
push 5Bh  +
push esi  +
call sub_427B40  +
mov ebp [esp+0C0h+var_A0] +
add esp 10h +
jmp loc_430CBD  +
cmp [edi+20h] ebp +
mov ebp [esp+0B0h+var_A0] +
jz loc_43081A  +
push 81h  +
lea eax [esp+0B4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4307A2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430842  +
push offset aFragmentNotAll  +
push offset aS  +
lea eax [esp+0B8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C4h+var_88] +
mov dword ptr [esi+54h] 5Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 5Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430842  +
push edi  +
mov dword ptr [esi+0D4h] 1 +
call sub_458EE0  +
mov edi [esp+0B4h+var_9C] +
add esp 4 +
jmp loc_430CBD  +
mov eax [esi] +
test eax eax +
jz loc_430842  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_430842  +
mov eax [eax+18h] +
test eax eax +
jz loc_430842  +
push 0  +
push [esp+0B4h+var_9C]  +
push ebp  +
push 5  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 18h +
push edi  +
call sub_458EE0  +
mov edi [esp+0B4h+var_9C] +
add esp 4 +
jmp loc_430CBD  +
lea eax [esp+0B0h+var_98] +
push eax  +
push esi  +
call loc_431010  +
mov edx eax +
add esp 8 +
mov [esp+0B0h+var_94] edx +
test edx edx +
jz loc_430CBD  +
mov ecx [esi] +
test ecx ecx +
jz loc_430CBD  +
cmp [esi+0D4h] edi +
jnz loc_430CBD  +
mov eax [ecx+18h] +
test eax eax +
jz loc_430CBD  +
push edx  +
push 0  +
push 0  +
push 4  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
jmp loc_430CBA  +
cmp al 22h +
jz loc_430C01  +
cmp al 27h +
jz loc_430C01  +
push 1  +
lea eax [esp+0B4h+var_A0] +
push eax  +
push esi  +
call sub_431F70  +
mov ebp [esp+0BCh+var_A0] +
mov edi eax +
add esp 0Ch +
mov [esp+0B0h+var_9C] edi +
test edi edi +
jnz loc_430974  +
test ebp ebp +
jnz loc_430A40  +
push 81h  +
lea eax [esp+0B4h+var_88] +
push ebp  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] ebp +
jz loc_430905  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430A40  +
push offset aEntityValueReq  +
push offset aS  +
lea eax [esp+0B8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C4h+var_88] +
mov dword ptr [esi+54h] 54h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 54h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430A40  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_430A40  +
push edi  +
call sub_45A210  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_43099D  +
mov edi [esp+0B0h+var_9C] +
push edi  +
push offset aInvalidUriS  +
push 5Bh  +
push esi  +
call sub_427B40  +
add esp 10h +
jmp loc_430A40  +
cmp dword ptr [edi+20h] 0 +
jz loc_430A33  +
push 81h  +
lea eax [esp+0B4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4309CD  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430A33  +
push offset aFragmentNotAll  +
push offset aS  +
lea eax [esp+0B8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C4h+var_88] +
mov dword ptr [esi+54h] 5Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 5Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_430A33  +
mov dword ptr [esi+0D4h] 1 +
push edi  +
call sub_458EE0  +
mov edi [esp+0B4h+var_9C] +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 3Eh +
jz loc_430A6C  +
cmp al 20h +
jz loc_430A6C  +
cmp al 9 +
jb loc_430A58  +
cmp al 0Ah +
jbe loc_430A6C  +
cmp al 0Dh +
jz loc_430A6C  +
push offset aSpaceRequiredB  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 4Eh +
jnz loc_430B62  +
cmp byte ptr [eax+1] 44h +
jnz loc_430B62  +
cmp byte ptr [eax+2] 41h +
jnz loc_430B62  +
cmp byte ptr [eax+3] 54h +
jnz loc_430B62  +
cmp byte ptr [eax+4] 41h +
jnz loc_430B62  +
add dword ptr [esi+0C8h] 5 +
add dword ptr [ecx+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_430AD2  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_430AF8  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_430AF8  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_430B20  +
cmp al 9 +
jb loc_430B0C  +
cmp al 0Ah +
jbe loc_430B20  +
cmp al 0Dh +
jz loc_430B20  +
push offset aSpaceRequire_7  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
mov ecx [esi] +
add esp 8 +
test ecx ecx +
jz loc_430CBD  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_430CBD  +
mov ecx [ecx+28h] +
test ecx ecx +
jz loc_430CBD  +
push eax  +
push edi  +
push ebp  +
push ebx  +
push dword ptr [esi+4]  +
call ecx  +
add esp 14h +
jmp loc_430CBD  +
mov eax [esi] +
test eax eax +
jz loc_430B87  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_430B87  +
mov eax [eax+18h] +
test eax eax +
jz loc_430B87  +
push 0  +
push edi  +
push ebp  +
push 2  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 18h +
cmp dword ptr [esi+10h] 0 +
jz loc_430CBD  +
mov eax [esi+8] +
test eax eax +
jz loc_430BB0  +
push offset aSaxCompatibili  +
push dword ptr [eax+38h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_430CBD  +
cmp dword ptr [esi+8] 0 +
jnz loc_430BD5  +
push offset aSaxCompatibili  +
call sub_4239C0  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jz loc_430C6E  +
mov dword ptr [eax+5Ch] 40h +
mov eax [esi+8] +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_430BF6  +
push 0  +
push 0  +
push offset aFake  +
push eax  +
call sub_423DA0  +
mov ecx [esi+8] +
add esp 10h +
mov [ecx+2Ch] eax +
push 0  +
push edi  +
push ebp  +
push 2  +
jmp loc_430CB3  +
lea eax [esp+0B0h+var_98] +
push eax  +
push esi  +
call loc_431010  +
mov ecx eax +
add esp 8 +
mov eax [esi] +
mov [esp+0B0h+var_94] ecx +
test eax eax +
jz loc_430C3A  +
cmp [esi+0D4h] edi +
jnz loc_430C3A  +
mov eax [eax+18h] +
test eax eax +
jz loc_430C3A  +
push ecx  +
push 0  +
push 0  +
push 1  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 18h +
mov eax [esi+8] +
test eax eax +
jz loc_430C55  +
push offset aSaxCompatibili  +
push dword ptr [eax+38h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_430CBD  +
cmp [esi+8] edi +
jnz loc_430C88  +
push offset aSaxCompatibili  +
call sub_4239C0  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_430C81  +
push offset aNewDocFailed  +
push esi  +
call sub_45BA50  +
add esp 8 +
jmp loc_430DAE  +
mov dword ptr [eax+5Ch] 40h +
mov eax [esi+8] +
cmp [eax+2Ch] edi +
jnz loc_430CA8  +
push 0  +
push 0  +
push offset aFake  +
push eax  +
call sub_423DA0  +
mov ecx [esi+8] +
add esp 10h +
mov [ecx+2Ch] eax +
mov eax [esp+0B0h+var_94] +
push eax  +
push 0  +
push 0  +
push 1  +
push ebx  +
push esi  +
call sub_464760  +
add esp 18h +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_430DAE  +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_430CF7  +
push ebx  +
push offset aXmlparseenti_0  +
push 25h  +
push esi  +
call sub_428050  +
push esi  +
call sub_428260  +
add esp 14h +
jmp loc_430D16  +
cmp [esp+0B0h+var_8C] ecx +
jz loc_430D0D  +
push offset aEntityDeclarat  +
push 5Ah  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call sub_45C5B0  +
add esp 4 +
cmp [esp+0B0h+var_98] 0 +
jz loc_430D80  +
cmp [esp+0B0h+var_90] 0 +
mov eax [esi] +
jz loc_430D39  +
test eax eax +
jz loc_430D73  +
mov eax [eax+60h] +
test eax eax +
jz loc_430D73  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
jmp loc_430D5D  +
test eax eax +
jz loc_430D51  +
mov eax [eax+14h] +
test eax eax +
jz loc_430D51  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
test eax eax +
jnz loc_430D64  +
cmp [esi+4] esi +
jnz loc_430D73  +
push ebx  +
push esi  +
call sub_464B60  +
add esp 8 +
test eax eax +
jz loc_430D73  +
cmp dword ptr [eax+24h] 0 +
jnz loc_430D73  +
mov ecx [esp+0B0h+var_98] +
mov [eax+24h] ecx +
jmp loc_430D80  +
push [esp+0B0h+var_98]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+0B0h+var_94] +
test eax eax +
jz loc_430D92  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_430DA0  +
push edi  +
call off_4EE2F4  +
add esp 4 +
test ebp ebp +
jz loc_430DAE  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
mov ecx [esp+0ACh+var_4] +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
push edi  +
xor edi edi +
cmp [esi+124h] edi +
jnz loc_430DFA  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_430DFA  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_430E08  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 26h +
jnz loc_430E03  +
push ebx  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_432EB0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_430E3F  +
push offset aXmlparseenti_1  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jz loc_430E5D  +
push 0  +
push 17h  +
push esi  +
call sub_427B90  +
add esp 0Ch +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push esi  +
call sub_45C5B0  +
add esp 4 +
test dword ptr [esi+168h] 100000h +
jnz loc_430E85  +
push ebx  +
call sub_458200  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_430FFC  +
inc dword ptr [esi+1B8h]  +
mov eax [esi] +
test eax eax +
jz loc_430EDF  +
mov eax [eax+14h] +
test eax eax +
jz loc_430EA3  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
mov edi eax +
cmp dword ptr [esi+0Ch] 1 +
jnz loc_430EDF  +
test edi edi +
jnz loc_430EC4  +
test dword ptr [esi+168h] 100000h +
jz loc_430EC4  +
push ebx  +
call sub_458200  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+0Ch] 1 +
jnz loc_430EDF  +
test edi edi +
jnz loc_430EDF  +
cmp [esi+4] esi +
jnz loc_430EDF  +
push ebx  +
push esi  +
call sub_464B60  +
add esp 8 +
mov edi eax +
mov ecx [esi+0ACh] +
cmp ecx 0FFFFFFFFh +
jz loc_430E57  +
test edi edi +
jnz loc_430F61  +
cmp dword ptr [esi+1Ch] 1 +
jz loc_430F34  +
cmp [esi+58h] edi +
jnz loc_430F02  +
cmp [esi+5Ch] edi +
jz loc_430F34  +
push ebx  +
push offset aEntitySNotDefi  +
push 1Bh  +
push esi  +
call sub_427B40  +
add esp 10h +
cmp dword ptr [esi+0D8h] 0 +
jnz loc_430F45  +
mov eax [esi] +
test eax eax +
jz loc_430F45  +
mov eax [eax+40h] +
test eax eax +
jz loc_430F45  +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
jmp loc_430F45  +
push ebx  +
push offset aEntitySNotDefi  +
push 1Ah  +
push esi  +
call sub_428050  +
add esp 10h +
push 0  +
push 0  +
push 0  +
push esi  +
call sub_438FE0  +
add esp 10h +
mov dword ptr [esi+64h] 0 +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov eax [edi+30h] +
cmp eax 3 +
jnz loc_430F80  +
push ebx  +
push offset aEntityReferenc  +
push 1Ch  +
push esi  +
call sub_428050  +
add esp 10h +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
cmp ecx 0Ch +
jnz loc_430FE3  +
cmp eax 2 +
jnz loc_430FA1  +
push ebx  +
push offset aAttributeRefer  +
push 1Dh  +
push esi  +
call sub_428050  +
add esp 10h +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
cmp ecx 0Ch +
jnz loc_430FE3  +
cmp eax 6 +
jz loc_430FE3  +
mov eax [edi+48h] +
test al 1 +
jnz loc_430FB6  +
test eax eax +
jnz loc_430FFC  +
mov eax [edi+28h] +
test eax eax +
jz loc_430FFC  +
push 3Ch  +
push eax  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_430FFC  +
push ebx  +
push offset aInEntitySIsNot  +
push 26h  +
push esi  +
call sub_428050  +
add esp 10h +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
add eax 0FFFFFFFCh +
cmp eax 1 +
ja loc_430FFC  +
push ebx  +
push offset aAttemptToRefer  +
push 1Eh  +
push esi  +
call sub_428050  +
add esp 10h +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
sub esp 0A4h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A0h] eax +
mov eax [esp+0ACh] +
push esi  +
mov esi [esp+0ACh] +
mov [esp+1Ch] eax +
push edi  +
xor edi edi +
mov dword ptr [esp+0Ch] 64h +
mov eax [esi+24h] +
mov [esp+18h] edi +
mov eax [eax+10h] +
mov al [eax] +
cmp al 22h +
jnz loc_431058  +
mov [esp+0Ah] al +
jmp loc_431064  +
cmp al 27h +
jnz loc_4314DE  +
mov [esp+0Ah] al +
push ebp  +
push 64h  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
mov [esp+18h] ebp +
test ebp ebp +
jnz loc_43109E  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
mov ecx [esp+0A0h] +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
mov ecx [esi+24h] +
mov dword ptr [esi+0ACh] 0Bh +
mov [esp+20h] ecx +
cmp [esi+124h] edi +
jnz loc_4310CD  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax 0FAh +
jge loc_4310CD  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_4310FA  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
mov ecx [esp+0A0h] +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
push ebx  +
push esi  +
call sub_45C5B0  +
lea eax [esp+1Ch] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 0Ch +
mov ebx eax +
cmp ebx 100h +
jge loc_431163  +
cmp ebx 9 +
jl loc_431123  +
cmp ebx 0Ah +
jle loc_431188  +
cmp ebx 0Dh +
jz loc_431188  +
cmp ebx 20h +
jge loc_431188  +
mov byte ptr [edi+ebp] 0 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_4312D1  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
mov ecx [esp+0A0h] +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
cmp ebx 0D7FFh +
jle loc_431188  +
cmp ebx 0E000h +
jl loc_43117B  +
cmp ebx 0FFFDh +
jle loc_431188  +
lea eax [ebx-10000h] +
cmp eax 0FFFFFh +
ja loc_43112D  +
movzx eax byte ptr [esp+12h] +
cmp ebx eax +
jnz loc_43119A  +
mov eax [esp+24h] +
cmp [esi+24h] eax +
jz loc_43112D  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43112D  +
mov ecx [esp+14h] +
lea eax [edi+5] +
cmp eax ecx +
jl loc_4311CD  +
add ecx ecx +
push ecx  +
push ebp  +
mov [esp+1Ch] ecx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4312BA  +
mov ebp eax +
mov [esp+1Ch] ebp +
cmp dword ptr [esp+18h] 1 +
jnz loc_4311DA  +
mov [edi+ebp] bl +
inc edi  +
jmp loc_4311E9  +
lea eax [edi+ebp] +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add edi eax +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_431203  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_431206  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+18h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_431224  +
push esi  +
call sub_439220  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43124A  +
nop   +
cmp dword ptr [esi+28h] 1 +
jle loc_43124A  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_431230  +
cmp dword ptr [esi+124h] 0 +
jnz loc_43126D  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_43126D  +
push esi  +
call sub_428140  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_431111  +
cmp [esi+124h] eax +
jnz loc_4312A7  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4312A7  +
push esi  +
call sub_428140  +
add esp 4 +
lea eax [esp+18h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
jmp loc_43110F  +
***
push 0  +
push esi  +
call sub_45BA50  +
push ebp  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_431148  +
***
cmp byte ptr [ebp+0] 0 +
mov edi ebp +
jz loc_431403  +
mov al [edi] +
mov [esp+13h] al +
cmp al 25h +
jz loc_4312FC  +
cmp al 26h +
jnz loc_4313F5  +
cmp byte ptr [edi+1] 23h +
jz loc_4313F5  +
lea eax [esp+14h] +
inc edi  +
push eax  +
push esi  +
mov [esp+1Ch] edi +
call loc_437910  +
mov edi [esp+1Ch] +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_43131E  +
cmp byte ptr [edi] 3Bh +
jz loc_431334  +
movzx eax byte ptr [esp+13h] +
push eax  +
push offset aEntityvalueCFo  +
push 57h  +
push esi  +
call sub_45B970  +
add esp 10h +
cmp byte ptr [esp+13h] 25h +
jnz loc_4313E2  +
cmp dword ptr [esi+0D8h] 1 +
jnz loc_4313E2  +
cmp dword ptr [esi+28h] 1 +
jnz loc_4313E2  +
push 81h  +
lea eax [esp+30h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43137C  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4313E2  +
push offset aPereferencesFo  +
push offset aS  +
lea eax [esp+34h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+40h] +
mov dword ptr [esi+54h] 58h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 58h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4313E2  +
mov dword ptr [esi+0D4h] 1 +
test ebp ebp +
jz loc_4313F0  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
cmp byte ptr [edi] 0 +
jz loc_4313FF  +
inc edi  +
cmp byte ptr [edi] 0 +
jnz loc_4312E0  +
mov ebp [esp+1Ch] +
movzx eax byte ptr [esp+12h] +
cmp ebx eax +
jz loc_4314AF  +
push 81h  +
lea eax [esp+30h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_431436  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43149C  +
push offset aEntityvalueOrE  +
push offset aS  +
lea eax [esp+34h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+40h] +
mov dword ptr [esi+54h] 25h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 25h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43149C  +
mov dword ptr [esi+0D4h] 1 +
push ebp  +
call off_4EE2F4  +
mov eax [esp+24h] +
add esp 4 +
jmp loc_43114A  +
***
push esi  +
call sub_45C5B0  +
push 0  +
push 0  +
push 0  +
push 2  +
push ebp  +
push esi  +
call sub_439DD0  +
mov [esp+3Ch] eax +
add esp 1Ch +
mov eax [esp+28h] +
test eax eax +
jz loc_43149C  +
mov [eax] ebp +
mov eax [esp+20h] +
jmp loc_43114A  +
***
push 81h  +
lea eax [esp+28h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_431503  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_431564  +
push offset aEntityvalueOrE  +
push offset aS  +
lea eax [esp+2Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+38h] +
mov dword ptr [esi+54h] 24h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 24h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_431564  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+0A8h] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0A4h +
retn   +
***
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 4Eh +
jnz loc_431670  +
cmp byte ptr [eax+1] 4Fh +
jnz loc_431670  +
cmp byte ptr [eax+2] 54h +
jnz loc_431670  +
cmp byte ptr [eax+3] 41h +
jnz loc_431670  +
cmp byte ptr [eax+4] 54h +
jnz loc_431670  +
cmp byte ptr [eax+5] 49h +
jnz loc_431670  +
cmp byte ptr [eax+6] 4Fh +
jnz loc_431670  +
cmp byte ptr [eax+7] 4Eh +
jnz loc_431670  +
add dword ptr [esi+0C8h] 8 +
add dword ptr [ecx+10h] 8 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_431600  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_431626  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_431626  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_431652  +
cmp al 9 +
jb loc_43163A  +
cmp al 0Ah +
jbe loc_431652  +
cmp al 0Dh +
jz loc_431652  +
push offset aSpaceRequir_14  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
pop esi  +
retn   +
push esi  +
call loc_439900  +
push esi  +
call loc_434140  +
mov ecx [esp+8+arg_4] +
add esp 8 +
mov [ecx] eax +
neg eax  +
pop esi  +
sbb eax eax +
and eax 0Ah +
retn   +
push esi  +
call loc_431690  +
mov ecx [esp+4+arg_4] +
add esp 4 +
mov [ecx] eax +
neg eax  +
pop esi  +
sbb eax eax +
and eax 9 +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebp  +
push edi  +
mov edi [esp+98h] +
xor ebp ebp +
mov [esp+8] ebp +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
cmp byte ptr [edx] 28h +
jz loc_431760  +
push 81h  +
lea eax [esp+10h] +
push ebp  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] ebp +
jz loc_4316E6  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_431747  +
push offset aRequiredToStar  +
push offset aS  +
lea eax [esp+14h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+20h] +
mov dword ptr [edi+54h] 32h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 32h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] ebp +
cmp [edi+120h] ebp +
jnz loc_431747  +
mov dword ptr [edi+0D4h] 1 +
pop edi  +
xor eax eax +
pop ebp  +
mov ecx [esp+88h] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
cmp [edi+124h] ebp +
jnz loc_431789  +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_431789  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_431789  +
push edi  +
call sub_4398C0  +
add esp 4 +
push ebx  +
push esi  +
push edi  +
call sub_45C5B0  +
push edi  +
call loc_439900  +
push edi  +
call loc_433910  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_4318E2  +
mov esi ebp +
test ebp ebp +
jz loc_4317CB  +
push dword ptr [esi+4]  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_431808  +
mov esi [esi] +
test esi esi +
jnz loc_4317B5  +
push ebx  +
call sub_451E00  +
push ebx  +
push dword ptr [edi+128h]  +
mov esi eax +
call loc_44F780  +
add esp 0Ch +
test eax eax +
jnz loc_4317F0  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
test esi esi +
jz loc_4318D2  +
mov eax [esp+10h] +
mov [esp+10h] esi +
test eax eax +
jnz loc_43183A  +
mov ebp esi +
jmp loc_43183C  +
push 0  +
push ebx  +
push offset aStandaloneAttr  +
push 21Dh  +
push edi  +
call sub_43A4F0  +
push ebx  +
push dword ptr [edi+128h]  +
call loc_44F780  +
add esp 1Ch +
test eax eax +
jnz loc_43183C  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
jmp loc_43183C  +
mov [eax] esi +
push edi  +
call loc_439900  +
mov eax [edi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 7Ch +
jz loc_431790  +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 29h +
jz loc_4318C4  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_431889  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_43196E  +
push offset aRequiredToFini  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [edi+54h] 33h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 33h  +
jmp loc_431941  +
push edi  +
call sub_45C5B0  +
add esp 4 +
jmp loc_43196E  +
push ebp  +
call sub_452950  +
add esp 4 +
xor eax eax +
jmp loc_431970  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_431908  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_43196E  +
push offset aNmtokenExpecte  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [edi+54h] 43h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 43h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_43196E  +
mov dword ptr [edi+0D4h] 1 +
mov eax ebp +
mov ecx [esp+98h] +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
sub esp 98h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+98h+var_4] eax +
mov edx [esp+98h+arg_10] +
mov eax [esp+98h+arg_14] +
mov ecx [esp+98h+arg_18] +
mov [esp+98h+var_94] 0 +
push ebx  +
mov ebx [esp+9Ch+arg_1C] +
mov [esp+9Ch+var_8C] ebx +
push ebp  +
mov ebp [esp+0A0h+arg_0] +
push edi  +
mov edi [esp+0A4h+arg_4] +
cmp edx 28h +
jle loc_4319F2  +
test edi edi +
jz loc_4319FA  +
test dword ptr [edi+168h] 80000h +
jz loc_4319FA  +
cmp edx 400h +
jle loc_431A17  +
pop edi  +
pop ebp  +
mov eax 59h +
pop ebx  +
mov ecx [esp+98h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
test ebx ebx +
jz loc_431A21  +
mov dword ptr [ebx] 0 +
test eax eax +
jnz loc_431A46  +
test ecx ecx +
jnz loc_431A46  +
pop edi  +
pop ebp  +
mov eax 1 +
pop ebx  +
mov ecx [esp+98h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
test ebp ebp +
jz loc_431A29  +
push esi  +
push edi  +
push 0  +
push ecx  +
push eax  +
call sub_4273D0  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_431A66  +
lea eax [esi+1Bh] +
jmp loc_431F48  +
mov [esi+4] esi +
test edi edi +
jz loc_431AAB  +
mov eax [edi+110h] +
mov [esi+110h] eax +
mov eax [edi+114h] +
mov [esi+114h] eax +
mov eax [edi+68h] +
mov [esi+68h] eax +
mov eax [edi+60h] +
mov [esi+60h] eax +
mov eax [edi+44h] +
mov [esi+44h] eax +
mov eax [edi+48h] +
mov [esi+48h] eax +
mov eax [edi+4Ch] +
mov [esi+4Ch] eax +
mov eax [edi+50h] +
mov [esi+50h] eax +
jmp loc_431ACD  +
mov dword ptr [esi+110h] 0 +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+60h] 2 +
mov dword ptr [esi+114h] 0 +
mov eax [esp+0A8h+arg_8] +
test eax eax +
jz loc_431AEE  +
mov ecx [esi] +
mov [esi] eax +
mov eax [esp+0A8h+arg_C] +
mov [esp+0A8h+var_94] ecx +
test eax eax +
jz loc_431AEE  +
mov [esi+4] eax +
push esi  +
call sub_427950  +
push offset a1_0  +
call sub_4239C0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_431B21  +
push esi  +
mov [esi+48h] eax +
mov [esi+4Ch] eax +
mov [esi+50h] eax +
call loc_45BB70  +
add esp 4 +
lea eax [ebx+1] +
jmp loc_431F48  +
mov dword ptr [ebx+5Ch] 40h +
mov eax [ebp+2Ch] +
mov [ebx+2Ch] eax +
mov eax [ebp+30h] +
mov [ebx+30h] eax +
mov eax [ebp+50h] +
push eax  +
mov [ebx+50h] eax +
call sub_44FAE0  +
mov eax [ebp+48h] +
add esp 4 +
test eax eax +
jz loc_431B56  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebx+48h] eax +
push 0  +
push offset aPseudoroot  +
push 0  +
push ebx  +
call sub_423AB0  +
add esp 10h +
mov [esp+0A8h+var_90] eax +
test eax eax +
jnz loc_431BB8  +
cmp [esp+0A8h+arg_8] eax +
jz loc_431B7F  +
mov eax [esp+0A8h+var_94] +
mov [esi] eax +
push esi  +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+50h] 0 +
call loc_45BB70  +
push ebx  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
call sub_4229F0  +
mov eax 1 +
jmp loc_431F45  +
push eax  +
push ebx  +
call sub_421400  +
push dword ptr [ebx+0Ch]  +
push esi  +
call sub_426A40  +
mov eax [esp+0B8h+var_90] +
add esp 10h +
mov [esi+8] ebp +
mov [eax+20h] ebp +
cmp dword ptr [esi+124h] 0 +
jnz loc_431BF8  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_431BF8  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 4 +
jl loc_431C56  +
movzx eax byte ptr [ecx] +
mov [esp+0A8h+var_98] al +
mov eax [esi+24h] +
push 4  +
mov eax [eax+10h] +
movzx eax byte ptr [eax+1] +
mov [esp+15h] al +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx eax byte ptr [eax+2] +
mov [esp+0ACh+var_96] al +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx eax byte ptr [eax+3] +
mov [esp+0ACh+var_95] al +
lea eax [esp+0ACh+var_98] +
push eax  +
call sub_461EA0  +
add esp 8 +
test eax eax +
jz loc_431C56  +
push eax  +
push esi  +
call sub_45CDE0  +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_431C95  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_431C95  +
cmp byte ptr [eax+2] 78h +
jnz loc_431C95  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_431C95  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_431C95  +
mov al [eax+5] +
cmp al 20h +
jz loc_431C8C  +
cmp al 9 +
jb loc_431C88  +
cmp al 0Ah +
jbe loc_431C8C  +
cmp al 0Dh +
jnz loc_431C95  +
push esi  +
call sub_438350  +
add esp 4 +
mov eax [esp+0A8h+arg_10] +
push esi  +
mov dword ptr [esi+0ACh] 7 +
mov [esi+0F8h] eax +
call loc_42D1B0  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
mov cl [eax] +
cmp cl 3Ch +
jnz loc_431D2D  +
cmp byte ptr [eax+1] 2Fh +
jnz loc_431D2D  +
push 81h  +
lea eax [esp+0ACh+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_431CF2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_431DC1  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+0B0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0BCh+var_88] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
jmp loc_431D94  +
test cl cl +
jz loc_431DC1  +
push 81h  +
lea eax [esp+0ACh+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_431D5B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_431DC1  +
push offset aExtraContent_0  +
push offset aS  +
lea eax [esp+0B0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0BCh+var_88] +
mov dword ptr [esi+54h] 56h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 56h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_431DC1  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+34h] +
cmp eax [ebx+0Ch] +
jz loc_431E59  +
push 81h  +
lea eax [esp+0ACh+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_431DF3  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_431E59  +
push offset aChunkIsNotWell  +
push offset aS  +
lea eax [esp+0B0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0BCh+var_88] +
mov dword ptr [esi+54h] 55h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 55h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_431E59  +
mov dword ptr [esi+0D4h] 1 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_431E6E  +
mov ebp [esi+54h] +
mov eax 1 +
test ebp ebp +
cmovz ebp eax +
jmp loc_431E9C  +
mov ecx [esp+0A8h+var_8C] +
test ecx ecx +
jz loc_431E9A  +
mov eax [ebx+0Ch] +
mov eax [eax+0Ch] +
mov [ecx] eax +
test eax eax +
jz loc_431E90  +
mov dword ptr [eax+14h] 0 +
mov eax [eax+18h] +
test eax eax +
jnz loc_431E82  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+0Ch] 0 +
xor ebp ebp +
test edi edi +
jz loc_431EAC  +
mov eax [esi+1B8h] +
add [edi+1B8h] eax +
mov eax [esi+24h] +
test eax eax +
jz loc_431ECF  +
test edi edi +
jz loc_431ECF  +
mov eax [eax+24h] +
add [edi+1BCh] eax +
mov eax [esi+24h] +
mov ecx [eax+10h] +
sub ecx [eax+0Ch] +
add [edi+1BCh] ecx +
cmp dword ptr [esi+184h] 0 +
jz loc_431EEE  +
lea eax [edi+180h] +
push eax  +
lea eax [esi+180h] +
push eax  +
call sub_43ABA0  +
add esp 8 +
cmp [esp+0A8h+arg_8] 0 +
jz loc_431EFE  +
mov eax [esp+0A8h+var_94] +
mov [esi] eax +
test edi edi +
jz loc_431F14  +
mov eax [esi+48h] +
mov [edi+48h] eax +
mov eax [esi+4Ch] +
mov [edi+4Ch] eax +
mov eax [esi+50h] +
mov [edi+50h] eax +
push esi  +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+50h] 0 +
call loc_45BB70  +
push ebx  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
call sub_4229F0  +
mov eax ebp +
add esp 8 +
mov ecx [esp+0A8h+var_4] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push ebx  +
mov ebx [esp+8Ch+arg_4] +
push esi  +
mov esi [esp+90h+arg_0] +
push edi  +
xor edi edi +
cmp [esi+124h] edi +
jnz loc_431FC6  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_431FC6  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_431FC6  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov [ebx] edi +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 53h +
jnz loc_43213B  +
cmp byte ptr [eax+1] 59h +
jnz loc_43213B  +
cmp [eax+2] dl +
jnz loc_43213B  +
cmp byte ptr [eax+3] 54h +
jnz loc_43213B  +
cmp byte ptr [eax+4] 45h +
jnz loc_43213B  +
cmp byte ptr [eax+5] 4Dh +
jnz loc_43213B  +
add dword ptr [esi+0C8h] 6 +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_432030  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_432056  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_432056  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_43207E  +
cmp al 9 +
jb loc_43206A  +
cmp al 0Ah +
jbe loc_43207E  +
cmp al 0Dh +
jz loc_43207E  +
push offset aSpaceRequiredA  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
push esi  +
call sub_437E10  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_432121  +
push 81h  +
push eax  +
lea eax [esp+9Ch+var_88] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_4320BB  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432121  +
push offset aSystemOrPublic  +
push offset aS  +
lea eax [esp+9Ch+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A8h+var_88] +
mov dword ptr [esi+54h] 46h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 46h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_432121  +
mov dword ptr [esi+0D4h] 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
cmp dl 50h +
jnz loc_432121  +
cmp byte ptr [eax+1] 55h +
jnz loc_432121  +
cmp byte ptr [eax+2] 42h +
jnz loc_432121  +
cmp byte ptr [eax+3] 4Ch +
jnz loc_432121  +
cmp byte ptr [eax+4] 49h +
jnz loc_432121  +
cmp byte ptr [eax+5] 43h +
jnz loc_432121  +
add dword ptr [esi+0C8h] 6 +
add dword ptr [ecx+10h] 6 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 6 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_432184  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4321AA  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4321AA  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_4321D2  +
cmp al 9 +
jb loc_4321BE  +
cmp al 0Ah +
jbe loc_4321D2  +
cmp al 0Dh +
jz loc_4321D2  +
push offset aSpaceRequire_0  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
push esi  +
call sub_434E30  +
add esp 8 +
mov [ebx] eax +
test eax eax +
jnz loc_432270  +
push 81h  +
push eax  +
lea eax [esp+9Ch+var_88] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_43220F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432270  +
push offset aPublicThePubli  +
push offset aS  +
lea eax [esp+9Ch+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A8h+var_88] +
mov dword ptr [esi+54h] 47h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 47h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_432270  +
mov dword ptr [esi+0D4h] 1 +
cmp [esp+94h+arg_8] edi +
jz loc_4322A7  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_43207E  +
cmp al 9 +
jb loc_432295  +
cmp al 0Ah +
jbe loc_43207E  +
cmp al 0Dh +
jz loc_43207E  +
push offset aSpaceRequire_1  +
jmp loc_432073  +
cmp [esi+124h] edi +
jnz loc_4322C9  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4322C9  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 20h +
jz loc_4322E1  +
cmp al 9 +
jb loc_4322DD  +
cmp al 0Ah +
jbe loc_4322E1  +
cmp al 0Dh +
jnz loc_432308  +
mov al [ecx] +
cmp al 20h +
jz loc_4322F3  +
cmp al 9 +
jb loc_4322EF  +
cmp al 0Ah +
jbe loc_4322F3  +
cmp al 0Dh +
jnz loc_4322F6  +
inc ecx  +
jmp loc_4322E1  +
mov al [ecx] +
cmp al 27h +
jz loc_43207E  +
cmp al 22h +
jz loc_43207E  +
mov ecx [esp+94h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebx  +
mov ebx [esp+9Ch] +
push esi  +
mov esi [esp+98h] +
push edi  +
mov edi [esp+0A0h] +
push esi  +
call sub_427950  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_432388  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432388  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+18h] 0 +
jnz loc_4323DA  +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 4 +
jl loc_4323DA  +
movzx eax byte ptr [ecx] +
mov [esp+0Ch] al +
movzx eax byte ptr [ecx+1] +
mov [esp+0Dh] al +
movzx eax byte ptr [ecx+2] +
mov [esp+0Eh] al +
movzx eax byte ptr [ecx+3] +
mov [esp+0Fh] al +
lea eax [esp+0Ch] +
push 4  +
push eax  +
call sub_461EA0  +
add esp 8 +
test eax eax +
jz loc_4323DA  +
push eax  +
push esi  +
call sub_45CDE0  +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_43242D  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_43242D  +
cmp byte ptr [eax+2] 78h +
jnz loc_43242D  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_43242D  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_43242D  +
push esi  +
call sub_438350  +
add esp 4 +
cmp dword ptr [esi+54h] 20h +
jnz loc_43242D  +
push esi  +
call sub_428260  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+88h] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
cmp dword ptr [esi+8] 0 +
jnz loc_432474  +
push offset a1_0  +
call sub_4239C0  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_43246D  +
push offset aNewDocFailed  +
push esi  +
call sub_45BA50  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+88h] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
mov dword ptr [eax+5Ch] 40h +
mov eax [esi+8] +
test eax eax +
jz loc_43248E  +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_43248E  +
push ebx  +
push edi  +
push 0  +
push eax  +
call sub_422790  +
add esp 10h +
mov dword ptr [esi+0ACh] 3 +
mov dword ptr [esi+60h] 1 +
nop   +
mov ecx [esi+24h] +
mov edi [ecx+10h] +
mov al [edi] +
cmp al 3Ch +
jnz loc_4324BC  +
cmp byte ptr [edi+1] 3Fh +
jz loc_4324D4  +
cmp al al +
jnz loc_4324BC  +
cmp byte ptr [edi+1] 21h +
jz loc_4324D4  +
cmp al 25h +
jz loc_4324D4  +
cmp al 20h +
jz loc_4324D4  +
cmp al 9 +
jb loc_4324CC  +
cmp al 0Ah +
jbe loc_4324D4  +
cmp al 0Dh +
jnz loc_43260B  +
cmp dword ptr [esi+124h] 0 +
mov ebx [ecx+24h] +
jnz loc_4324F5  +
mov eax [ecx+14h] +
sub eax edi +
cmp eax 0FAh +
jge loc_4324F5  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Ch +
jnz loc_432515  +
cmp byte ptr [ecx+1] 21h +
jnz loc_432515  +
cmp byte ptr [ecx+2] 5Bh +
jnz loc_432515  +
push esi  +
call loc_42C880  +
jmp loc_43253E  +
cmp al 20h +
jz loc_432538  +
cmp al 9 +
jb loc_432521  +
cmp al 0Ah +
jbe loc_432538  +
cmp al 0Dh +
jz loc_432538  +
push esi  +
cmp al 25h +
jnz loc_432531  +
call sub_4343D0  +
jmp loc_43253E  +
call sub_432860  +
jmp loc_43253E  +
push esi  +
call sub_45C5B0  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43256A  +
cmp dword ptr [esi+28h] 1 +
jle loc_43256A  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_432550  +
mov eax [esi+24h] +
cmp [eax+10h] edi +
jnz loc_4324A0  +
cmp ebx [eax+24h] +
jnz loc_4324A0  +
push 81h  +
lea eax [esp+14h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4325A5  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43260B  +
push offset aContentErrorIn  +
push offset aS  +
lea eax [esp+18h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+24h] +
mov dword ptr [esi+54h] 3Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43260B  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_4326A6  +
push 81h  +
lea eax [esp+14h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_432640  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4326A6  +
push offset aContentErrorIn  +
push offset aS  +
lea eax [esp+18h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+24h] +
mov dword ptr [esi+54h] 3Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4326A6  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+94h] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+84h] eax +
push esi  +
mov esi [esp+90h] +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 5Bh +
jnz loc_43279C  +
push esi  +
mov dword ptr [esi+0ACh] 3 +
call sub_45C5B0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 5Dh +
jz loc_432782  +
push ebx  +
push edi  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432780  +
mov edi [ecx+24h] +
mov ebx eax +
push esi  +
call loc_439900  +
push esi  +
call sub_432860  +
push esi  +
call sub_4343D0  +
mov eax [esi+24h] +
add esp 0Ch +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43275A  +
nop   +
cmp dword ptr [esi+28h] 1 +
jle loc_43275A  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_432740  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp eax ebx +
jnz loc_432769  +
cmp edi [ecx+24h] +
jz loc_432770  +
cmp byte ptr [eax] 5Dh +
jnz loc_432710  +
jmp loc_432780  +
push offset aXmlparseintern  +
push 1  +
push esi  +
call sub_427B90  +
add esp 0Ch +
pop edi  +
pop ebx  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 5Dh +
jnz loc_43279C  +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_432837  +
push 81h  +
lea eax [esp+8] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4327D1  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432837  +
push offset aDoctypeImprope  +
push offset aS  +
lea eax [esp+0Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+18h] +
mov dword ptr [esi+54h] 3Dh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 3Dh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_432837  +
mov dword ptr [esi+0D4h] 1 +
push esi  +
call sub_45C5B0  +
mov ecx [esp+8Ch] +
add esp 4 +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
cmp dword ptr [esi+124h] 0 +
jnz loc_432888  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432888  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 3Ch +
jnz loc_4328F4  +
mov al [ecx+1] +
cmp al 21h +
jnz loc_4328E7  +
movzx eax byte ptr [ecx+2] +
add eax 0FFFFFFD3h +
cmp eax 21h +
ja loc_4328F4  +
movzx eax ds:byte_432960[eax] +
jmp ds:off_43294C[eax*4]  +
mov al [ecx+3] +
cmp al 4Ch +
jnz loc_4328C3  +
push esi  +
call sub_42EEA0  +
jmp loc_4328F1  +
cmp al 4Eh +
jnz loc_4328F4  +
push esi  +
call sub_430490  +
jmp loc_4328F1  +
push esi  +
call loc_429E00  +
jmp loc_4328F1  +
push esi  +
call sub_433D90  +
jmp loc_4328F1  +
push esi  +
call loc_42BE00  +
jmp loc_4328F1  +
cmp al 3Fh +
jnz loc_4328F4  +
push esi  +
call sub_434670  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432948  +
cmp dword ptr [esi+60h] 0 +
jnz loc_43293E  +
cmp dword ptr [esi+28h] 1 +
jnz loc_432912  +
push esi  +
call sub_4343D0  +
add esp 4 +
cmp dword ptr [esi+60h] 0 +
jnz loc_43293E  +
cmp dword ptr [esi+28h] 1 +
jle loc_43293E  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_43293E  +
cmp byte ptr [eax+1] 21h +
jnz loc_43293E  +
cmp byte ptr [eax+2] 5Bh +
jnz loc_43293E  +
push esi  +
call loc_42C880  +
add esp 4 +
mov dword ptr [esi+0ACh] 3 +
pop esi  +
retn   +
***
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432A14  +
nop   +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Ch +
jnz loc_4329C8  +
cmp byte ptr [ecx+1] 3Fh +
jz loc_4329D8  +
cmp al al +
jnz loc_4329C8  +
cmp byte ptr [ecx+1] 21h +
jnz loc_4329C8  +
cmp byte ptr [ecx+2] 2Dh +
jnz loc_4329C8  +
cmp byte ptr [ecx+3] 2Dh +
jz loc_4329D8  +
cmp al 20h +
jz loc_4329D8  +
cmp al 9 +
jb loc_4329D4  +
cmp al 0Ah +
jbe loc_4329D8  +
cmp al 0Dh +
jnz loc_432A14  +
cmp al 3Ch +
jnz loc_4329EA  +
cmp byte ptr [ecx+1] 3Fh +
jnz loc_4329EA  +
push esi  +
call sub_434670  +
jmp loc_432A08  +
cmp al 20h +
jz loc_432A02  +
cmp al 9 +
jb loc_4329F6  +
cmp al 0Ah +
jbe loc_432A02  +
cmp al 0Dh +
jz loc_432A02  +
push esi  +
call loc_42BE00  +
jmp loc_432A08  +
push esi  +
call sub_45C5B0  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_4329A0  +
pop esi  +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
push edi  +
mov edi [esp+90h+arg_0] +
mov eax [edi+24h] +
mov edx [eax+10h] +
mov esi edx +
mov ecx [eax+14h] +
mov al [esi] +
cmp al 61h +
jb loc_432A52  +
cmp al 7Ah +
jbe loc_432A62  +
cmp al 41h +
jb loc_432A5A  +
cmp al 5Ah +
jbe loc_432A62  +
cmp al 5Fh +
jnz loc_432BC7  +
cmp esi ecx +
jnb loc_432BC7  +
mov al [esi+1] +
inc esi  +
cmp al 61h +
jb loc_432A76  +
cmp al 7Ah +
jbe loc_432A62  +
cmp al 41h +
jb loc_432A7E  +
cmp al 5Ah +
jbe loc_432A62  +
cmp al 30h +
jb loc_432A86  +
cmp al 39h +
jbe loc_432A62  +
cmp al 5Fh +
jz loc_432A62  +
cmp al 2Dh +
jz loc_432A62  +
cmp al 2Eh +
jz loc_432A62  +
cmp esi ecx +
jnb loc_432BC7  +
mov al [esi] +
test al al +
jz loc_432BC7  +
cmp al 80h +
jnb loc_432BC7  +
push ebx  +
mov ebx esi +
sub ebx edx +
cmp ebx 0C350h +
jle loc_432B79  +
test dword ptr [edi+168h] 80000h +
jnz loc_432B79  +
push 81h  +
lea eax [esp+98h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_432AF3  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_432B5F  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+9Ch+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNcname  +
lea eax [esp+0A8h+var_88] +
mov dword ptr [edi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNcname  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_432B5F  +
mov dword ptr [edi+0D4h] 1 +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push ebp  +
push ebx  +
push edx  +
push dword ptr [edi+128h]  +
call sub_44F4D0  +
mov ecx [edi+24h] +
mov ebp eax +
add esp 0Ch +
mov [ecx+10h] esi +
mov ecx [edi+24h] +
add [edi+0C8h] ebx +
add [ecx+20h] ebx +
test ebp ebp +
jnz loc_432BAC  +
push eax  +
push edi  +
call sub_45BA50  +
add esp 8 +
mov eax ebp +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push edi  +
call sub_432BF0  +
mov ecx [esp+94h+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 90h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+90h+var_4] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+9Ch+arg_0] +
xor ebx ebx +
xor ebp ebp +
push edi  +
cmp [esi+124h] ebx +
jnz loc_432C35  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432C35  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov [esp+0A0h+var_8C] eax +
lea eax [esp+0A0h+var_90] +
push eax  +
push esi  +
call sub_45B5E0  +
mov edi eax +
add esp 8 +
cmp edi 20h +
jz loc_432E89  +
cmp edi 3Eh +
jz loc_432E89  +
cmp edi 2Fh +
jz loc_432E89  +
push edi  +
push esi  +
call sub_4285E0  +
add esp 8 +
test eax eax +
jz loc_432E89  +
cmp edi 3Ah +
jz loc_432E89  +
cmp edi 3Eh +
jz loc_432DC8  +
cmp edi 2Fh +
jz loc_432DC8  +
push edi  +
push esi  +
call sub_428340  +
add esp 8 +
test eax eax +
jz loc_432DC8  +
cmp edi 3Ah +
jz loc_432DC8  +
mov eax ebx +
inc ebx  +
cmp eax 64h +
jle loc_432D03  +
cmp ebp 0C350h +
jle loc_432CD2  +
test dword ptr [esi+168h] 80000h +
jz loc_432DF7  +
xor ebx ebx +
cmp [esi+124h] ebx +
jnz loc_432CF6  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432CF6  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432E89  +
mov ecx [esi+24h] +
add ebp [esp+0A0h+var_90] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_432D21  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_432D24  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+0A0h+var_90] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_432D42  +
push esi  +
call sub_439220  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov [esp+0A0h+var_8C] eax +
lea eax [esp+0A0h+var_90] +
push eax  +
push esi  +
call sub_45B5E0  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_432DBF  +
mov ecx [esi+24h] +
xor ebx ebx +
mov eax [esp+0A0h+var_90] +
sub [ecx+10h] eax +
cmp [esi+124h] ebx +
jnz loc_432D8E  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432D8E  +
push esi  +
call sub_428140  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [esp+0A0h+var_90] +
add [ecx+10h] eax +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432E89  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov [esp+0A0h+var_8C] eax +
lea eax [esp+0A0h+var_90] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov edi eax +
cmp edi 20h +
jnz loc_432C85  +
cmp ebp 0C350h +
jle loc_432DDC  +
test dword ptr [esi+168h] 80000h +
jz loc_432DF7  +
mov eax [esp+0A0h+var_8C] +
push ebp  +
sub eax ebp +
push eax  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_432E8B  +
push 81h  +
lea eax [esp+0A4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_432E1D  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_432E89  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+0A8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNcname  +
lea eax [esp+0B4h+var_88] +
mov dword ptr [esi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNcname  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_432E89  +
mov dword ptr [esi+0D4h] 1 +
xor eax eax +
mov ecx [esp+0A0h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
push edi  +
cmp dword ptr [esi+124h] 0 +
jnz loc_432EF0  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_432EF0  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov edi ecx +
mov al [edi] +
cmp al 61h +
jb loc_432F02  +
cmp al 7Ah +
jbe loc_432F16  +
cmp al 41h +
jb loc_432F0A  +
cmp al 5Ah +
jbe loc_432F16  +
cmp al 5Fh +
jz loc_432F16  +
cmp al 3Ah +
jnz loc_43306F  +
mov al [edi+1] +
inc edi  +
cmp al 61h +
jb loc_432F22  +
cmp al 7Ah +
jbe loc_432F16  +
cmp al 41h +
jb loc_432F2A  +
cmp al 5Ah +
jbe loc_432F16  +
cmp al 30h +
jb loc_432F32  +
cmp al 39h +
jbe loc_432F16  +
cmp al 5Fh +
jz loc_432F16  +
cmp al 2Dh +
jz loc_432F16  +
cmp al 3Ah +
jz loc_432F16  +
cmp al 2Eh +
jz loc_432F16  +
mov al [edi] +
test al al +
jz loc_43306F  +
cmp al 80h +
jnb loc_43306F  +
push ebx  +
mov ebx edi +
sub ebx ecx +
cmp ebx 0C350h +
jle loc_433021  +
test dword ptr [esi+168h] 80000h +
jnz loc_433021  +
push 81h  +
lea eax [esp+98h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_432F9B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_433007  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+9Ch+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aName  +
lea eax [esp+0A8h+var_88] +
mov dword ptr [esi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aName  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_433007  +
mov dword ptr [esi+0D4h] 1 +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push ebp  +
push ebx  +
push ecx  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
mov ecx [esi+24h] +
mov ebp eax +
add esp 0Ch +
mov [ecx+10h] edi +
mov ecx [esi+24h] +
add [esi+0C8h] ebx +
add [ecx+20h] ebx +
test ebp ebp +
jnz loc_433054  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
mov eax ebp +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push esi  +
call loc_433130  +
mov ecx [esp+94h+var_4] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
push edi  +
mov edi [esp+4+arg_4] +
cmp dword ptr [esi+124h] 0 +
jnz loc_4330BD  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4330BD  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_4330CB  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
test al al +
jz loc_4330E9  +
cmp al [edi] +
jnz loc_4330E9  +
mov eax [esi+24h] +
inc ecx  +
inc edi  +
inc dword ptr [eax+20h]  +
mov al [ecx] +
test al al +
jnz loc_4330D7  +
cmp byte ptr [edi] 0 +
jnz loc_433112  +
mov al [ecx] +
cmp al 3Eh +
jz loc_433104  +
cmp al 20h +
jz loc_433104  +
cmp al 9 +
jb loc_433100  +
cmp al 0Ah +
jbe loc_433104  +
cmp al 0Dh +
jnz loc_433112  +
mov eax [esi+24h] +
pop edi  +
pop esi  +
mov [eax+10h] ecx +
mov eax 1 +
retn   +
push esi  +
call sub_432EB0  +
add esp 4 +
mov ecx 1 +
cmp eax [esp+4+arg_4] +
cmovz eax ecx +
pop edi  +
pop esi  +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebx  +
push edi  +
mov edi [esp+98h] +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_433171  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_433171  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jnz loc_433193  +
pop edi  +
xor eax eax +
pop ebx  +
mov ecx [esp+88h] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
push ebp  +
push esi  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
add esp 8 +
mov esi eax +
test dword ptr [edi+168h] 20000h +
jnz loc_4334FE  +
cmp esi 20h +
jz loc_4338B6  +
cmp esi 3Eh +
jz loc_4338B6  +
cmp esi 2Fh +
jz loc_4338B6  +
cmp esi 61h +
jl loc_4331DE  +
cmp esi 7Ah +
jle loc_4332CF  +
cmp esi 41h +
jl loc_4331EC  +
cmp esi 5Ah +
jle loc_4332CF  +
cmp esi 5Fh +
jz loc_4332CF  +
cmp esi 3Ah +
jz loc_4332CF  +
cmp esi 0C0h +
jl loc_433212  +
cmp esi 0D6h +
jle loc_4332CF  +
cmp esi 0D8h +
jl loc_433226  +
cmp esi 0F6h +
jle loc_4332CF  +
cmp esi 0F8h +
jl loc_43323A  +
cmp esi 2FFh +
jle loc_4332CF  +
cmp esi 370h +
jl loc_43324E  +
cmp esi 37Dh +
jle loc_4332CF  +
cmp esi 37Fh +
jl loc_43325E  +
cmp esi 1FFFh +
jle loc_4332CF  +
cmp esi 200Ch +
jl loc_43326E  +
cmp esi 200Dh +
jle loc_4332CF  +
cmp esi 2070h +
jl loc_43327E  +
cmp esi 218Fh +
jle loc_4332CF  +
cmp esi 2C00h +
jl loc_43328E  +
cmp esi 2FEFh +
jle loc_4332CF  +
cmp esi 3001h +
jl loc_43329E  +
cmp esi 0D7FFh +
jle loc_4332CF  +
cmp esi 0F900h +
jl loc_4332AE  +
cmp esi 0FDCFh +
jle loc_4332CF  +
cmp esi 0FDF0h +
jl loc_4332BE  +
cmp esi 0FFFDh +
jle loc_4332CF  +
lea eax [esi-10000h] +
cmp eax 0DFFFFh +
ja loc_4338B6  +
mov ecx [edi+24h] +
mov ebp [esp+10h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4332ED  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4332F0  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_43330E  +
push edi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
add esp 8 +
cmp eax 20h +
jz loc_433808  +
cmp eax 3Eh +
jz loc_433808  +
cmp eax 2Fh +
jz loc_433808  +
cmp eax 61h +
jl loc_433345  +
cmp eax 7Ah +
jle loc_43346A  +
cmp eax 41h +
jl loc_433353  +
cmp eax 5Ah +
jle loc_43346A  +
cmp eax 30h +
jl loc_433361  +
cmp eax 39h +
jle loc_43346A  +
cmp eax 5Fh +
jz loc_43346A  +
cmp eax 3Ah +
jz loc_43346A  +
cmp eax 2Dh +
jz loc_43346A  +
cmp eax 2Eh +
jz loc_43346A  +
cmp eax 0B7h +
jz loc_43346A  +
cmp eax 0C0h +
jl loc_4333A2  +
cmp eax 0D6h +
jle loc_43346A  +
cmp eax 0D8h +
jl loc_4333B4  +
cmp eax 0F6h +
jle loc_43346A  +
cmp eax 0F8h +
jl loc_4333C6  +
cmp eax 2FFh +
jle loc_43346A  +
cmp eax 300h +
jl loc_4333D8  +
cmp eax 36Fh +
jle loc_43346A  +
cmp eax 370h +
jl loc_4333EA  +
cmp eax 37Dh +
jle loc_43346A  +
cmp eax 37Fh +
jl loc_4333F8  +
cmp eax 1FFFh +
jle loc_43346A  +
cmp eax 200Ch +
jl loc_433406  +
cmp eax 200Dh +
jle loc_43346A  +
cmp eax 203Fh +
jl loc_433414  +
cmp eax 2040h +
jle loc_43346A  +
cmp eax 2070h +
jl loc_433422  +
cmp eax 218Fh +
jle loc_43346A  +
cmp eax 2C00h +
jl loc_433430  +
cmp eax 2FEFh +
jle loc_43346A  +
cmp eax 3001h +
jl loc_43343E  +
cmp eax 0D7FFh +
jle loc_43346A  +
cmp eax 0F900h +
jl loc_43344C  +
cmp eax 0FDCFh +
jle loc_43346A  +
cmp eax 0FDF0h +
jl loc_43345A  +
cmp eax 0FFFDh +
jle loc_43346A  +
add eax 0FFFF0000h +
cmp eax 0DFFFFh +
ja loc_433808  +
mov eax ebx +
inc ebx  +
cmp eax 64h +
jle loc_4334A3  +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_433496  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_433496  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4338B6  +
mov ecx [edi+24h] +
add ebp [esp+10h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4334C1  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4334C4  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4334E2  +
push edi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
add esp 8 +
cmp eax 20h +
jnz loc_433325  +
jmp loc_433808  +
cmp esi 20h +
jz loc_4338B6  +
cmp esi 3Eh +
jz loc_4338B6  +
cmp esi 2Fh +
jz loc_4338B6  +
cmp esi 100h +
jge loc_433563  +
cmp esi 41h +
jl loc_43352F  +
cmp esi 5Ah +
jle loc_4335B3  +
cmp esi 61h +
jl loc_433539  +
cmp esi 7Ah +
jle loc_4335B3  +
cmp esi 0C0h +
jl loc_433549  +
cmp esi 0D6h +
jle loc_4335B3  +
cmp esi 0D8h +
jl loc_433559  +
cmp esi 0F6h +
jle loc_4335B3  +
cmp esi 0F8h +
jl loc_433575  +
jmp loc_4335B3  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4335B3  +
cmp esi 100h +
jl loc_4335A5  +
cmp esi 4E00h +
jl loc_43358D  +
cmp esi 9FA5h +
jle loc_4335B3  +
cmp esi 3007h +
jz loc_4335B3  +
cmp esi 3021h +
jl loc_4335A5  +
cmp esi 3029h +
jle loc_4335B3  +
cmp esi 5Fh +
jz loc_4335B3  +
cmp esi 3Ah +
jnz loc_4338B6  +
mov ecx [edi+24h] +
mov ebp [esp+10h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4335D1  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4335D4  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4335F2  +
push edi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
mov esi eax +
add esp 8 +
cmp esi 20h +
jz loc_433808  +
cmp esi 3Eh +
jz loc_433808  +
cmp esi 2Fh +
jz loc_433808  +
cmp esi 100h +
jge loc_43367B  +
cmp esi 41h +
jl loc_433638  +
cmp esi 5Ah +
jle loc_433732  +
cmp esi 61h +
jl loc_433646  +
cmp esi 7Ah +
jle loc_433732  +
cmp esi 0C0h +
jl loc_43365A  +
cmp esi 0D6h +
jle loc_433732  +
cmp esi 0D8h +
jl loc_43366E  +
cmp esi 0F6h +
jle loc_433732  +
cmp esi 0F8h +
jl loc_433691  +
jmp loc_433732  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_433732  +
cmp esi 100h +
jl loc_4336D9  +
cmp esi 4E00h +
jl loc_4336AD  +
cmp esi 9FA5h +
jle loc_433732  +
cmp esi 3007h +
jz loc_433732  +
cmp esi 3021h +
jl loc_4336C5  +
cmp esi 3029h +
jle loc_433732  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_433732  +
jmp loc_4336E1  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_433732  +
cmp esi 2Eh +
jz loc_433732  +
cmp esi 2Dh +
jz loc_433732  +
cmp esi 5Fh +
jz loc_433732  +
cmp esi 3Ah +
jz loc_433732  +
cmp esi 100h +
jl loc_43371F  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_433732  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_43372A  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_433808  +
mov eax ebx +
inc ebx  +
cmp eax 64h +
jle loc_43376B  +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_43375E  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_43375E  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4338B6  +
mov ecx [edi+24h] +
add ebp [esp+10h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_433789  +
inc dword ptr [ecx+1Ch]  +
mov eax [edi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_43378C  +
inc dword ptr [ecx+20h]  +
mov ecx [edi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4337AA  +
push edi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_4337FF  +
xor ebx ebx +
cmp [edi+124h] ebx +
jnz loc_4337E2  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4337E2  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4338B6  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B5E0  +
add esp 8 +
mov esi eax +
cmp esi 20h +
jnz loc_433610  +
cmp ebp 0C350h +
jle loc_4338D1  +
test dword ptr [edi+168h] 80000h +
jnz loc_4338D1  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_43384A  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4338B6  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aName  +
lea eax [esp+28h] +
mov dword ptr [edi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aName  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_4338B6  +
mov dword ptr [edi+0D4h] 1 +
xor eax eax +
mov ecx [esp+98h] +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4338F7  +
cmp byte ptr [eax-1] 0Dh +
jnz loc_4338F7  +
sub eax ebp +
push ebp  +
dec eax  +
push eax  +
push dword ptr [edi+128h]  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_4338B8  +
***
push ebp  +
sub eax ebp +
push eax  +
push dword ptr [edi+128h]  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_4338B8  +
***
sub esp 100h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0FCh] eax +
push ebp  +
push esi  +
mov esi [esp+10Ch] +
xor ebp ebp +
push edi  +
xor edi edi +
cmp [esi+124h] edi +
jnz loc_433954  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_433954  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_433977  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+0FCh] +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
***
push ebx  +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
push ebx  +
push esi  +
call sub_428340  +
add esp 10h +
test eax eax +
jz loc_433B49  +
mov eax ebp +
inc ebp  +
cmp eax 64h +
jle loc_4339C3  +
xor ebp ebp +
cmp [esi+124h] ebp +
jnz loc_4339C3  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4339C3  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esp+10h] 1 +
jnz loc_4339D4  +
mov [esp+edi+0A0h] bl +
inc edi  +
jmp loc_4339E9  +
lea eax [esp+0A0h] +
add eax edi +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add edi eax +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_433A03  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_433A06  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_433A24  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_433A79  +
xor ebp ebp +
cmp [esi+124h] ebp +
jnz loc_433A5C  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_433A5C  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_433B49  +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
mov ebx eax +
cmp edi 64h +
jge loc_433B77  +
push ebx  +
push esi  +
call sub_428340  +
add esp 8 +
test eax eax +
jnz loc_433997  +
test edi edi +
jz loc_433B49  +
cmp edi 0C350h +
jle loc_433B64  +
test dword ptr [esi+168h] 80000h +
jnz loc_433B64  +
push 81h  +
push eax  +
lea eax [esp+24h] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_433ADD  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_433B49  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+24h] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNmtoken  +
lea eax [esp+30h] +
mov dword ptr [esi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNmtoken  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_433B49  +
mov dword ptr [esi+0D4h] 1 +
xor eax eax +
mov ecx [esp+10Ch] +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
***
lea eax [esp+0A0h] +
push edi  +
push eax  +
call sub_44E8A0  +
add esp 8 +
jmp loc_433B4B  +
***
lea eax [edi+edi] +
push eax  +
mov [esp+1Ch] eax +
call off_4EE2EC  +
add esp 4 +
mov [esp+14h] eax +
test eax eax +
jnz loc_433B9C  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
jmp loc_433B49  +
***
push edi  +
lea ecx [esp+0A4h] +
push ecx  +
push eax  +
call loc_48C9C0  +
push ebx  +
push esi  +
call sub_428340  +
add esp 14h +
test eax eax +
jz loc_433CB7  +
mov eax ebp +
inc ebp  +
cmp eax 64h +
jle loc_433BF9  +
xor ebp ebp +
cmp [esi+124h] ebp +
jnz loc_433BEC  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_433BEC  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_433D56  +
mov ecx [esp+18h] +
lea eax [edi+0Ah] +
cmp eax ecx +
jle loc_433C3E  +
cmp ecx 0C350h +
jle loc_433C1C  +
test dword ptr [esi+168h] 80000h +
jz loc_433CC4  +
add ecx ecx +
push ecx  +
push dword ptr [esp+18h]  +
mov [esp+20h] ecx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_433D68  +
mov [esp+14h] eax +
jmp loc_433C42  +
mov eax [esp+14h] +
cmp dword ptr [esp+10h] 1 +
jnz loc_433C4F  +
mov [eax+edi] bl +
inc edi  +
jmp loc_433C5D  +
add eax edi +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add edi eax +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_433C77  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_433C7A  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+10h] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_433C98  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
push ebx  +
push esi  +
call sub_428340  +
add esp 10h +
test eax eax +
jnz loc_433BC0  +
mov eax [esp+14h] +
mov byte ptr [eax+edi] 0 +
jmp loc_433B4B  +
***
push 81h  +
lea eax [esp+20h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_433CEA  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_433D56  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+24h] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNmtoken  +
lea eax [esp+30h] +
mov dword ptr [esi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNmtoken  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_433D56  +
mov dword ptr [esi+0D4h] 1 +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
add esp 4 +
jmp loc_433B49  +
***
push 0  +
push esi  +
call sub_45BA50  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_433B49  +
***
sub esp 90h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+90h+var_4] eax +
push esi  +
mov esi [esp+94h+arg_0] +
mov edx [esi+24h] +
mov [esp+94h+var_8C] edx +
mov ecx [edx+10h] +
cmp byte ptr [ecx] 3Ch +
jnz loc_434124  +
cmp byte ptr [ecx+1] 21h +
jnz loc_434124  +
cmp byte ptr [ecx+2] 4Eh +
jnz loc_434124  +
cmp byte ptr [ecx+3] 4Fh +
jnz loc_434124  +
cmp byte ptr [ecx+4] 54h +
jnz loc_434124  +
cmp byte ptr [ecx+5] 41h +
jnz loc_434124  +
cmp byte ptr [ecx+6] 54h +
jnz loc_434124  +
cmp byte ptr [ecx+7] 49h +
jnz loc_434124  +
cmp byte ptr [ecx+8] 4Fh +
jnz loc_434124  +
cmp byte ptr [ecx+9] 4Eh +
jnz loc_434124  +
cmp dword ptr [esi+124h] 0 +
jnz loc_433E43  +
mov eax ecx +
sub eax [edx+0Ch] +
cmp eax 1F4h +
jle loc_433E43  +
mov eax [edx+14h] +
sub eax ecx +
cmp eax 1F4h +
jge loc_433E43  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 0Ah +
add dword ptr [eax+10h] 0Ah +
mov eax [esi+24h] +
add dword ptr [eax+20h] 0Ah +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_433E6C  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_433E92  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_433E92  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_433ED0  +
cmp al 9 +
jb loc_433EA6  +
cmp al 0Ah +
jbe loc_433ED0  +
cmp al 0Dh +
jz loc_433ED0  +
push offset aSpaceRequire_9  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
pop esi  +
mov ecx [esp+90h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
push edi  +
push esi  +
call loc_439900  +
push esi  +
call sub_432EB0  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_433F93  +
push 81h  +
push eax  +
lea eax [esp+0A0h+var_88] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_433F12  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434123  +
push offset aNotationNameEx  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [esi+54h] 30h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 30h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_434123  +
pop edi  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
mov ecx [esp+90h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_433FD2  +
cmp al 9 +
jb loc_433FA7  +
cmp al 0Ah +
jbe loc_433FD2  +
cmp al 0Dh +
jz loc_433FD2  +
push offset aSpaceRequir_10  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
pop edi  +
pop esi  +
mov ecx [esp+90h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
push 3Ah  +
push edi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_433FF9  +
push 0  +
push 0  +
push edi  +
push offset aColonsAreFor_1  +
push 0CDh  +
push esi  +
call sub_428BD0  +
add esp 18h +
push ebx  +
push ebp  +
push esi  +
call loc_439900  +
push 0  +
lea eax [esp+0A8h+var_90] +
push eax  +
push esi  +
call sub_431F70  +
push esi  +
mov ebp eax +
call loc_439900  +
mov eax [esi+24h] +
add esp 14h +
mov ebx [esp+0A0h+var_90] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 3Eh +
jnz loc_434079  +
cmp [esp+0A0h+var_8C] eax +
jz loc_43403E  +
push offset aNotationDeclar  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call sub_45C5B0  +
mov eax [esi] +
add esp 4 +
test eax eax +
jz loc_434105  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_434105  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_434105  +
push ebp  +
push ebx  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 10h +
jmp loc_434105  +
push 81h  +
lea eax [esp+0A4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43409F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434105  +
push offset aRequiredToClos  +
push offset aS  +
lea eax [esp+0A8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0B4h+var_88] +
mov dword ptr [esi+54h] 31h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 31h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_434105  +
mov dword ptr [esi+0D4h] 1 +
test ebp ebp +
jz loc_434113  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_434121  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov ecx [esp+94h+var_4] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 90h +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h] eax +
push ebp  +
push edi  +
mov edi [esp+98h] +
xor ebp ebp +
mov [esp+8] ebp +
mov ecx [edi+24h] +
mov edx [ecx+10h] +
cmp byte ptr [edx] 28h +
jz loc_434210  +
push 81h  +
lea eax [esp+10h] +
push ebp  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] ebp +
jz loc_434196  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4341F7  +
push offset aNotationNameEx  +
push offset aS  +
lea eax [esp+14h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+20h] +
mov dword ptr [edi+54h] 30h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 30h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] ebp +
cmp [edi+120h] ebp +
jnz loc_4341F7  +
mov dword ptr [edi+0D4h] 1 +
pop edi  +
xor eax eax +
pop ebp  +
mov ecx [esp+88h] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
cmp [edi+124h] ebp +
jnz loc_434239  +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_434239  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_434239  +
push edi  +
call sub_4398C0  +
add esp 4 +
push ebx  +
push esi  +
push edi  +
call sub_45C5B0  +
push edi  +
call loc_439900  +
push edi  +
call sub_432EB0  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_43439B  +
mov esi ebp +
test ebp ebp +
jz loc_43427B  +
push dword ptr [esi+4]  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_43429C  +
mov esi [esi] +
test esi esi +
jnz loc_434265  +
push ebx  +
call sub_451E00  +
add esp 4 +
test eax eax +
jz loc_434383  +
mov ecx [esp+10h] +
mov [esp+10h] eax +
test ecx ecx +
jnz loc_4342CE  +
mov ebp eax +
jmp loc_4342D0  +
push 0  +
push ebx  +
push offset aStandaloneAt_0  +
push 21Dh  +
push edi  +
call sub_43A4F0  +
push ebx  +
push dword ptr [edi+128h]  +
call loc_44F780  +
add esp 1Ch +
test eax eax +
jnz loc_4342D0  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
jmp loc_4342D0  +
mov [ecx] eax +
push edi  +
call loc_439900  +
mov eax [edi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 7Ch +
jz loc_434240  +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 29h +
jz loc_43438E  +
push 81h  +
lea eax [esp+18h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_43431D  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_434383  +
push offset aRequiredToClos  +
push offset aS  +
lea eax [esp+1Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+28h] +
mov dword ptr [edi+54h] 31h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 31h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_434383  +
mov dword ptr [edi+0D4h] 1 +
push ebp  +
call sub_452950  +
add esp 4 +
jmp loc_4343B1  +
push edi  +
call sub_45C5B0  +
add esp 4 +
mov eax ebp +
jmp loc_4343B3  +
push offset aNameExpectedIn  +
push 44h  +
push edi  +
call sub_427FE0  +
push ebp  +
call sub_452950  +
add esp 10h +
xor eax eax +
mov ecx [esp+98h] +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
sub esp 88h +
sub esp 0A0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A0h+var_4] eax +
push esi  +
mov esi [esp+0A4h+arg_0] +
xor eax eax +
mov [esp+0A4h+var_94] eax +
push edi  +
xor edi edi +
mov [esp+0A8h+var_90] 64h +
mov ecx [esi+24h] +
mov [esp+0A8h+var_8C] ecx +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_434C42  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_434C42  +
add dword ptr [esi+0C8h] 2 +
push ebx  +
mov ebx [esi+0ACh] +
mov dword ptr [esi+0ACh] 2 +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
mov [esp+0ACh+var_9C] ebx +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4346F5  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43471B  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_43471B  +
push esi  +
call loc_439740  +
add esp 4 +
cmp [esi+124h] edi +
jnz loc_43474A  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_43474A  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_43474A  +
push esi  +
call sub_4398C0  +
add esp 4 +
push ebp  +
push esi  +
call loc_434C60  +
mov ebp eax +
add esp 4 +
mov [esp+0B0h+var_A0] ebp +
test ebp ebp +
jz loc_434BAB  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
cmp byte ptr [edx] 3Fh +
jnz loc_434811  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_434811  +
cmp [esp+0B0h+var_8C] ecx +
jz loc_434791  +
push offset aPiDeclarationD  +
push 5Ah  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4347BA  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4347E0  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4347E0  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi] +
test eax eax +
jz loc_434C31  +
cmp [esi+0D4h] edi +
jnz loc_434C31  +
mov eax [eax+4Ch] +
test eax eax +
jz loc_434C31  +
push 0  +
push ebp  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
jmp loc_434C31  +
push 64h  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_434831  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
jmp loc_434C3A  +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx eax byte ptr [eax] +
cmp eax 100h +
jge loc_434855  +
cmp eax 20h +
jz loc_434869  +
cmp eax 9 +
jl loc_434850  +
cmp eax 0Ah +
jle loc_434869  +
cmp eax 0Dh +
jz loc_434869  +
push [esp+0B0h+var_A0]  +
push offset aParsepiPiSSpac  +
push 41h  +
push esi  +
call sub_428050  +
add esp 10h +
push esi  +
call loc_439900  +
lea eax [esp+0B4h+var_98] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 0Ch +
mov ebx eax +
nop   +
cmp ebx 100h +
jge loc_4348E8  +
cmp ebx 9 +
jl loc_434892  +
cmp ebx 0Ah +
jle loc_43490D  +
cmp ebx 0Dh +
jz loc_43490D  +
cmp ebx 20h +
jge loc_43490D  +
cmp edi 989680h +
jbe loc_4348B4  +
test dword ptr [esi+168h] 80000h +
jz loc_434B72  +
mov byte ptr [edi+ebp] 0 +
cmp ebx 3Fh +
jz loc_434A78  +
push [esp+0B0h+var_A0]  +
push offset aParsepiPiSNeve  +
push 2Fh  +
push esi  +
call sub_428050  +
mov ebx [esp+0C0h+var_9C] +
add esp 10h +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_434C31  +
cmp ebx 0D7FFh +
jle loc_43490D  +
cmp ebx 0E000h +
jl loc_434900  +
cmp ebx 0FFFDh +
jle loc_43490D  +
lea eax [ebx-10000h] +
cmp eax 0FFFFFh +
ja loc_43489C  +
cmp ebx 3Fh +
jnz loc_434922  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax+1] 3Eh +
jz loc_43489C  +
mov ecx [esp+0B0h+var_90] +
lea eax [edi+5] +
cmp eax ecx +
jb loc_434948  +
add ecx ecx +
push ecx  +
push ebp  +
mov [esp+0B8h+var_90] ecx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_434B51  +
mov ebp eax +
mov eax [esp+0B0h+var_94] +
inc eax  +
mov [esp+0B0h+var_94] eax +
cmp eax 32h +
jle loc_4349A4  +
cmp dword ptr [esi+124h] 0 +
jnz loc_434979  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_434979  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434B9C  +
xor eax eax +
mov [esp+0B0h+var_94] eax +
cmp edi 989680h +
jbe loc_4349A4  +
test dword ptr [esi+168h] 80000h +
jz loc_434B72  +
cmp [esp+0B0h+var_98] 1 +
jnz loc_4349B1  +
mov [edi+ebp] bl +
inc edi  +
jmp loc_4349C0  +
lea eax [edi+ebp] +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add edi eax +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0Ah +
jnz loc_4349DA  +
inc dword ptr [ecx+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_4349DD  +
inc dword ptr [ecx+20h]  +
mov ecx [esi+24h] +
mov eax [esp+0B0h+var_98] +
add [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4349FB  +
push esi  +
call sub_439220  +
add esp 4 +
lea eax [esp+0B0h+var_98] +
push eax  +
push esi  +
call sub_45B5E0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_434880  +
cmp [esi+124h] eax +
jnz loc_434A65  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_434A42  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_434A42  +
push esi  +
call sub_4398C0  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_434A65  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_434A65  +
push esi  +
call sub_428140  +
add esp 4 +
lea eax [esp+0B0h+var_98] +
push eax  +
push esi  +
call sub_45B5E0  +
add esp 8 +
jmp loc_43487D  +
mov eax [esp+0B0h+var_8C] +
cmp eax [esi+24h] +
jz loc_434A91  +
push offset aPiDeclarationD  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_434ABA  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_434AE0  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_434AE0  +
push esi  +
call loc_439740  +
add esp 4 +
mov ebx [esp+0B0h+var_9C] +
cmp ebx 1 +
jz loc_434AED  +
test ebx ebx +
jnz loc_434B1E  +
mov edi [esp+0B0h+var_A0] +
push offset aOasisXmlCatalo  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_434B22  +
call sub_465FA0  +
cmp eax 2 +
jz loc_434B12  +
cmp eax 3 +
jnz loc_434B22  +
push ebp  +
push esi  +
call sub_42B170  +
add esp 8 +
jmp loc_434B22  +
mov edi [esp+0B0h+var_A0] +
mov eax [esi] +
test eax eax +
jz loc_434B42  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_434B42  +
mov eax [eax+4Ch] +
test eax eax +
jz loc_434B42  +
push ebp  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_434C31  +
push 0  +
push esi  +
call sub_45BA50  +
push ebp  +
call off_4EE2F4  +
mov eax [esp+0BCh+var_9C] +
add esp 0Ch +
mov [esi+0ACh] eax +
jmp loc_434C40  +
push [esp+0B0h+var_A0]  +
push offset aPiSTooBigFound  +
push 2Fh  +
push esi  +
call sub_428050  +
push ebp  +
call off_4EE2F4  +
mov eax [esp+0C4h+var_9C] +
add esp 14h +
mov [esi+0ACh] eax +
jmp loc_434C40  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_434C40  +
push 81h  +
lea eax [esp+0B4h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_434BD0  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434C40  +
push offset aXmlparsepiNoTa  +
push offset aS  +
lea eax [esp+0B8h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C4h+var_88] +
mov dword ptr [esi+54h] 2Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_434C31  +
mov dword ptr [esi+0D4h] 1 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434C40  +
mov [esi+0ACh] ebx +
pop ebp  +
pop ebx  +
mov ecx [esp+0A8h+var_4] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+84h] eax +
push ebx  +
push esi  +
mov esi [esp+94h] +
push edi  +
push esi  +
call sub_432EB0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_434E0C  +
mov al [edi] +
cmp al 78h +
jz loc_434C9F  +
cmp al 58h +
jnz loc_434DE5  +
mov cl [edi+1] +
cmp cl 6Dh +
jz loc_434CB0  +
cmp cl 4Dh +
jnz loc_434DE5  +
mov dl [edi+2] +
cmp dl 6Ch +
jz loc_434CC1  +
cmp dl 4Ch +
jnz loc_434DE5  +
cmp al 78h +
jnz loc_434CEE  +
cmp cl 6Dh +
jnz loc_434CEE  +
cmp dl 6Ch +
jnz loc_434CEE  +
cmp byte ptr [edi+3] 0 +
jnz loc_434D9D  +
push offset aXmlDeclaration  +
push 40h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
jmp loc_434E0C  +
cmp byte ptr [edi+3] 0 +
jnz loc_434D9D  +
push 81h  +
lea eax [esp+10h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
test esi esi +
jz loc_434D26  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_434D26  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_434E0C  +
push offset aInvalidPiName  +
push offset aS  +
lea eax [esp+14h] +
push 80h  +
push eax  +
call sub_4213C0  +
add esp 10h +
test esi esi +
jz loc_434D4D  +
mov dword ptr [esi+54h] 40h +
push 0  +
lea eax [esp+10h] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 40h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
test esi esi +
jz loc_434E0C  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_434E0C  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_434E0C  +
xor ebx ebx +
cmp off_4EE008 ebx +
jz loc_434DD1  +
mov eax offset off_4EE008 +
push dword ptr [eax]  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_434E0C  +
inc ebx  +
cmp off_4EE008[ebx*4] 0 +
lea eax off_4EE008[ebx*4] +
jnz loc_434DB0  +
push 0  +
push 0  +
push offset aXmlparsepitarg  +
push 40h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
push 3Ah  +
push edi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_434E0C  +
push 0  +
push 0  +
push edi  +
push offset aColonsAreForbi  +
push 0CDh  +
push esi  +
call sub_428BD0  +
add esp 18h +
mov ecx [esp+90h] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 98h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+98h+var_4] eax +
push ebx  +
push esi  +
mov esi [esp+0A0h+arg_0] +
xor eax eax +
push edi  +
xor edi edi +
mov [esp+0A4h+var_94] eax +
mov [esp+0A4h+var_98] edi +
mov eax [esi+0ACh] +
mov [esp+0A4h+var_90] 64h +
mov [esp+0A4h+var_8C] eax +
cmp [esi+124h] edi +
jnz loc_434E9B  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_434E9B  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_434E9B  +
push esi  +
call sub_4398C0  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 22h +
jnz loc_434EB1  +
push esi  +
call sub_45C5B0  +
mov bh 22h +
jmp loc_434EC1  +
cmp al 27h +
jnz loc_4351C8  +
push esi  +
call sub_45C5B0  +
mov bh 27h +
add esp 4 +
push ebp  +
push 64h  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_434EFB  +
push eax  +
push esi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+98h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
mov eax [esi+24h] +
mov dword ptr [esi+0ACh] 10h +
mov eax [eax+10h] +
mov bl [eax] +
movzx eax bl +
cmp ds:byte_4C1510[eax] 0 +
jz loc_435101  +
cmp bl bh +
jz loc_435101  +
mov eax [esp+0A8h+var_90] +
inc edi  +
cmp edi eax +
jl loc_434F60  +
cmp eax 0C350h +
jle loc_434F45  +
test dword ptr [esi+168h] 80000h +
jz loc_435049  +
add eax eax +
push eax  +
push ebp  +
mov [esp+0B0h+var_90] eax +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4350EA  +
mov ebp eax +
mov eax [esp+0A8h+var_98] +
mov [esp+0A8h+var_98] edi +
mov edi [esp+0A8h+var_94] +
inc edi  +
mov [eax+ebp] bl +
mov [esp+0A8h+var_94] edi +
cmp edi 32h +
jle loc_434FAF  +
cmp dword ptr [esi+124h] 0 +
jnz loc_434F9C  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_434F9C  +
push esi  +
call sub_428140  +
add esp 4 +
xor eax eax +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
mov [esp+0A8h+var_94] eax +
jz loc_4350DB  +
push esi  +
call sub_45C5B0  +
mov eax [esi+24h] +
add esp 4 +
mov ecx [eax+10h] +
mov bl [ecx] +
test bl bl +
jnz loc_435040  +
cmp dword ptr [esi+124h] 0 +
jnz loc_435038  +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 0FAh +
jge loc_434FE2  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_435038  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_435038  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_435038  +
push ecx  +
call sub_45CAF0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_435038  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_435038  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov bl [eax] +
mov edi [esp+0A8h+var_98] +
jmp loc_434F0D  +
push 81h  +
lea eax [esp+0ACh+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43506F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4350DB  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+0B0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aPublicId  +
lea eax [esp+0BCh+var_88] +
mov dword ptr [esi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aPublicId  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4350DB  +
mov dword ptr [esi+0D4h] 1 +
push ebp  +
call off_4EE2F4  +
add esp 4 +
jmp loc_434EE0  +
push 0  +
push esi  +
call sub_45BA50  +
push ebp  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_434EE0  +
mov byte ptr [edi+ebp] 0 +
cmp bl bh +
jz loc_4351AE  +
push 81h  +
lea eax [esp+0ACh+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_435137  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4351B7  +
push offset aUnfinishedSyst  +
push offset aS  +
lea eax [esp+0B0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0BCh+var_88] +
mov dword ptr [esi+54h] 2Ch +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2Ch  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4351B7  +
mov eax [esp+0A8h+var_8C] +
mov [esi+0ACh] eax +
mov eax ebp +
mov dword ptr [esi+0D4h] 1 +
jmp loc_434EE2  +
push esi  +
call sub_45C5B0  +
add esp 4 +
mov eax [esp+0A8h+var_8C] +
mov [esi+0ACh] eax +
mov eax ebp +
jmp loc_434EE2  +
push 81h  +
lea eax [esp+0A8h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_4351ED  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43524E  +
push offset aSystemliteralO  +
push offset aS  +
lea eax [esp+0ACh+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0B8h+var_88] +
mov dword ptr [esi+54h] 2Bh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2Bh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_43524E  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+0A4h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
***
push edi  +
cmp dword ptr [esi+124h] 0 +
jnz loc_435299  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_435299  +
push esi  +
call sub_428140  +
add esp 4 +
push esi  +
call sub_432A20  +
mov edi eax +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
test edi edi +
jnz loc_4352EE  +
cmp byte ptr [eax] 3Ah +
jnz loc_4352E9  +
push esi  +
call sub_432EB0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_4352E9  +
push 0  +
push 0  +
push edi  +
push offset aFailedToParseQ  +
push 0CAh  +
push esi  +
call sub_428BD0  +
mov eax [esp+1Ch+arg_4] +
add esp 18h +
mov dword ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
cmp byte ptr [eax] 3Ah +
push ebx  +
jnz loc_435409  +
push esi  +
call sub_45C5B0  +
push esi  +
mov ebx edi +
call sub_432A20  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_43538A  +
push ebp  +
push eax  +
push eax  +
push ebx  +
push offset aFailedToPars_0  +
push 0CAh  +
push esi  +
call sub_428BD0  +
push esi  +
call loc_433910  +
add esp 1Ch +
mov ebp eax +
push edi  +
push edi  +
push ebx  +
test ebp ebp +
jnz loc_435346  +
push offset unk_4DE8C5  +
call sub_4221A0  +
add esp 10h +
mov edi eax +
jmp loc_435358  +
push ebp  +
call sub_4221A0  +
push ebp  +
mov edi eax +
call off_4EE2F4  +
add esp 14h +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
add esp 0Ch +
mov esi eax +
pop ebp  +
test edi edi +
jz loc_43537A  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov ecx [esp+8+arg_4] +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
mov dword ptr [ecx] 0 +
retn   +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ah +
jnz loc_4353FD  +
push 0  +
push edi  +
push ebx  +
push offset aFailedToPars_1  +
push 0CAh  +
push esi  +
call sub_428BD0  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_432EB0  +
add esp 20h +
push 0  +
push 0  +
push edi  +
test eax eax +
jz loc_4353C4  +
push eax  +
jmp loc_4353C9  +
push offset unk_4DE8C5  +
call sub_4221A0  +
mov edi eax +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
add esp 1Ch +
mov esi eax +
test edi edi +
jz loc_4353F1  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov ecx [esp+8+arg_4] +
mov eax esi +
mov [ecx] ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov eax [esp+8+arg_4] +
mov [eax] ebx +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov eax [esp+8+arg_4] +
pop ebx  +
mov dword ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
test edi edi +
jnz loc_43543B  +
push [esp+arg_4]  +
push [esp+4+arg_0]  +
call sub_433090  +
add esp 8 +
pop edi  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
cmp dword ptr [esi+124h] 0 +
jnz loc_435463  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_435463  +
push esi  +
call sub_428140  +
add esp 4 +
push ebp  +
mov ebp [esi+24h] +
mov ecx edi +
mov eax [ebp+10h] +
mov dl [eax] +
test dl dl +
jz loc_43547F  +
cmp dl [ecx] +
jnz loc_43547F  +
mov dl [eax+1] +
inc eax  +
inc ecx  +
test dl dl +
jnz loc_435472  +
cmp byte ptr [ecx] 0 +
jnz loc_4354CE  +
cmp byte ptr [eax] 3Ah +
jnz loc_4354CE  +
mov dl [eax+1] +
inc eax  +
mov ecx [esp+8+arg_4] +
test dl dl +
jz loc_4354A2  +
cmp dl [ecx] +
jnz loc_4354A2  +
mov dl [eax+1] +
inc eax  +
inc ecx  +
test dl dl +
jnz loc_435495  +
cmp byte ptr [ecx] 0 +
jnz loc_4354CE  +
mov cl [eax] +
cmp cl 3Eh +
jz loc_4354C2  +
cmp cl 20h +
jz loc_4354C2  +
cmp cl 9 +
jb loc_4354BD  +
cmp cl 0Ah +
jbe loc_4354C2  +
cmp cl 0Dh +
jnz loc_4354CE  +
mov [ebp+10h] eax +
mov eax 1 +
pop ebp  +
pop esi  +
pop edi  +
retn   +
lea eax [esp+8+arg_8] +
push eax  +
push esi  +
call sub_435270  +
add esp 8 +
cmp eax [esp+8+arg_4] +
jnz loc_4354ED  +
cmp edi [esp+8+arg_8] +
jnz loc_4354ED  +
mov eax 1 +
pop ebp  +
pop esi  +
pop edi  +
retn   +
***
sub esp 0A0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+9Ch] eax +
push ebx  +
push esi  +
mov esi [esp+0ACh] +
xor ebx ebx +
mov [esp+8] ebx +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 26h +
jnz loc_435855  +
cmp byte ptr [eax+1] 23h +
push edi  +
push esi  +
jnz loc_435685  +
movzx edi byte ptr [eax+2] +
call loc_42BAF0  +
add esp 4 +
test eax eax +
jz loc_435854  +
cmp dword ptr [esi+100h] 1 +
jz loc_435623  +
cmp eax 0FFh +
jg loc_4355B6  +
mov [esp+18h] al +
mov eax [esi] +
mov [esp+19h] bl +
test eax eax +
jz loc_435854  +
mov eax [eax+44h] +
test eax eax +
jz loc_435854  +
cmp [esi+0D4h] ebx +
jnz loc_435854  +
push 1  +
lea ecx [esp+1Ch] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
cmp edi 78h +
jz loc_4355C8  +
cmp edi 58h +
jz loc_4355C8  +
push eax  +
push offset aD_2  +
jmp loc_4355CE  +
push eax  +
push offset aXX_0  +
lea eax [esp+20h] +
push 0Ah  +
push eax  +
call sub_4213C0  +
mov eax [esi] +
add esp 10h +
test eax eax +
jz loc_435854  +
mov eax [eax+40h] +
test eax eax +
jz loc_435854  +
cmp [esi+0D4h] ebx +
jnz loc_435854  +
lea ecx [esp+18h] +
push ecx  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
push eax  +
lea eax [esp+1Ch] +
push eax  +
call sub_45B520  +
add esp 8 +
cmp eax 0Ah +
jnb loc_435D6B  +
mov ecx [esi] +
mov [esp+eax+18h] bl +
test ecx ecx +
jz loc_435854  +
mov ecx [ecx+44h] +
test ecx ecx +
jz loc_435854  +
cmp [esi+0D4h] ebx +
jnz loc_435854  +
push eax  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [esi+4]  +
call ecx  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
call sub_430DD0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_435854  +
cmp [esi+0Ch] ebx +
jz loc_435854  +
mov ecx [edi+48h] +
mov [esp+10h] ecx +
cmp [edi+8] ebx +
jz loc_435D14  +
mov eax [edi+30h] +
cmp eax 6 +
jz loc_435D14  +
push ebp  +
test ecx ecx +
jz loc_4356CF  +
cmp [edi+0Ch] ebx +
jnz loc_4356DD  +
test byte ptr [esi+168h] 2 +
jz loc_4356DD  +
cmp eax 2 +
jnz loc_4356F8  +
test byte ptr [esi+168h] 12h +
jnz loc_4356F8  +
cmp ecx 1 +
jz loc_435986  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add [esi+1B8h] eax +
jmp loc_435986  +
mov ecx [esi+1B8h] +
xor edx edx +
mov [esp+18h] ecx +
mov ecx [esi+4] +
cmp ecx esi +
cmovz ecx edx +
cmp eax 1 +
jnz loc_435737  +
inc dword ptr [esi+0F8h]  +
lea eax [esp+10h] +
push eax  +
push ecx  +
push dword ptr [edi+28h]  +
push esi  +
call loc_42A680  +
mov ebx [esp+20h] +
add esp 10h +
dec dword ptr [esi+0F8h]  +
mov ebp eax +
jmp loc_435787  +
cmp eax 2 +
jnz loc_435770  +
inc dword ptr [esi+0F8h]  +
lea eax [esp+10h] +
push eax  +
push dword ptr [edi+34h]  +
push dword ptr [edi+40h]  +
push dword ptr [esi+0F8h]  +
push ecx  +
push dword ptr [esi]  +
push esi  +
push dword ptr [esi+8]  +
call sub_431990  +
mov ebx [esp+30h] +
add esp 20h +
dec dword ptr [esi+0F8h]  +
mov ebp eax +
jmp loc_435787  +
push 0  +
push offset aInvalidEntityT  +
push 1  +
push esi  +
mov ebp 58h +
call sub_427B40  +
add esp 10h +
mov eax [esi+1B8h] +
sub eax [esp+18h] +
lea eax ds:2[eax*2] +
mov [edi+48h] eax +
mov eax [edi+28h] +
test eax eax +
jz loc_4357B5  +
push 3Ch  +
push eax  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_4357B5  +
or dword ptr [edi+48h] 1 +
cmp ebp 59h +
jnz loc_43586C  +
push 81h  +
lea eax [esp+2Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4357E4  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43584A  +
push offset aDetectedAnEnti  +
push offset aS  +
lea eax [esp+30h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+3Ch] +
mov dword ptr [esi+54h] 59h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 59h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43584A  +
mov dword ptr [esi+0D4h] 1 +
push ebx  +
call loc_422E50  +
add esp 4 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
push 0  +
push edi  +
push 0  +
push esi  +
call sub_438FE0  +
add esp 10h +
test eax eax +
jnz loc_43584A  +
test ebp ebp +
jnz loc_435941  +
test ebx ebx +
jz loc_435975  +
mov eax [edi+30h] +
cmp eax 1 +
jz loc_43589F  +
cmp eax 2 +
jnz loc_43596A  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_43596A  +
mov [edi+0Ch] ebx +
cmp dword ptr [esi+10h] 0 +
jz loc_435919  +
cmp dword ptr [ebx+4] 3 +
jnz loc_4358BE  +
cmp dword ptr [ebx+18h] 0 +
jz loc_4358C7  +
cmp dword ptr [esi+1B4h] 5 +
jnz loc_4358D6  +
mov [ebx+14h] edi +
mov dword ptr [edi+44h] 1 +
jmp loc_435973  +
mov dword ptr [edi+44h] 0 +
mov eax [esi+34h] +
mov [ebx+14h] eax +
mov eax [esi+8] +
mov [ebx+20h] eax +
cmp dword ptr [ebx+18h] 0 +
jnz loc_4358F5  +
mov [edi+10h] ebx +
mov ebx [ebx+18h] +
test ebx ebx +
jnz loc_4358E0  +
cmp dword ptr [edi+30h] 2 +
mov ebx [edi+0Ch] +
jnz loc_435975  +
mov eax dword_4F2468 +
test eax eax +
jz loc_435975  +
push 0  +
push ebx  +
push edi  +
call eax  +
add esp 0Ch +
jmp loc_435975  +
mov dword ptr [edi+44h] 1 +
mov [ebx+14h] edi +
push dword ptr [edi+20h]  +
push ebx  +
call loc_425310  +
add esp 8 +
cmp dword ptr [ebx+18h] 0 +
jnz loc_435938  +
mov [edi+10h] ebx +
mov ebx [ebx+18h] +
test ebx ebx +
jnz loc_435920  +
jmp loc_435975  +
cmp ebp 1Bh +
jz loc_435966  +
push dword ptr [edi+8]  +
push offset aEntitySFailedT  +
push 1Ah  +
push esi  +
call sub_428050  +
push 0  +
push edi  +
push 0  +
push esi  +
call sub_438FE0  +
add esp 20h +
jmp loc_435975  +
test ebx ebx +
jz loc_435975  +
push ebx  +
call loc_422E50  +
add esp 4 +
xor ebx ebx +
cmp dword ptr [edi+48h] 0 +
mov ecx [esp+14h] +
jnz loc_435986  +
mov dword ptr [edi+48h] 2 +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_435ADF  +
test ecx ecx +
jz loc_435AA3  +
mov eax [esi+4] +
xor ecx ecx +
cmp eax esi +
push 0  +
cmovz eax ecx +
mov ecx [edi+30h] +
cmp ecx 1 +
jnz loc_4359C1  +
inc dword ptr [esi+0F8h]  +
push eax  +
push dword ptr [edi+28h]  +
push esi  +
call loc_42A680  +
add esp 10h +
jmp loc_4359EB  +
cmp ecx 2 +
jnz loc_435A93  +
inc dword ptr [esi+0F8h]  +
push dword ptr [edi+34h]  +
push dword ptr [edi+40h]  +
push dword ptr [esi+0F8h]  +
push eax  +
push dword ptr [esi]  +
push esi  +
push dword ptr [esi+8]  +
call sub_431990  +
add esp 20h +
dec dword ptr [esi+0F8h]  +
cmp eax 59h +
jnz loc_435AA3  +
push 81h  +
lea eax [esp+2Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_435A24  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_435853  +
push offset aDetectedAnEnti  +
push offset aS  +
lea eax [esp+30h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+3Ch] +
mov dword ptr [esi+54h] 59h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 59h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_435853  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_435853  +
***
push offset aInvalidEntityT  +
push 1  +
push esi  +
call sub_427B40  +
add esp 10h +
mov eax [esi] +
test eax eax +
jz loc_435853  +
mov eax [eax+40h] +
test eax eax +
jz loc_435853  +
cmp dword ptr [esi+10h] 0 +
jnz loc_435853  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_435853  +
push dword ptr [edi+8]  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
jmp loc_435853  +
***
mov eax [esi] +
test eax eax +
jz loc_435AFB  +
mov eax [eax+40h] +
test eax eax +
jz loc_435AFB  +
cmp dword ptr [esi+10h] 0 +
jnz loc_435B05  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_435ACF  +
cmp dword ptr [esi+10h] 0 +
jz loc_435853  +
cmp dword ptr [esi+34h] 0 +
jz loc_435853  +
test ebx ebx +
jnz loc_435B18  +
cmp [edi+44h] ebx +
jz loc_435B25  +
cmp dword ptr [esi+1B4h] 5 +
jnz loc_435BDD  +
mov eax [edi+2Ch] +
xor ebx ebx +
add eax 5 +
mov [esp+10h] ebx +
add [esi+1D4h] eax +
push dword ptr [esi+1D4h]  +
push edi  +
push ebx  +
push esi  +
call sub_438FE0  +
add esp 10h +
test eax eax +
jnz loc_435853  +
mov ebp [edi+0Ch] +
test ebp ebp +
jz loc_435BC0  +
push 1  +
push dword ptr [esi+8]  +
push ebp  +
call sub_422960  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_435B90  +
cmp dword ptr [ebx] 0 +
jnz loc_435B75  +
mov ecx [ebp+0] +
mov [ebx] ecx +
mov eax [esp+10h] +
test eax eax +
push ebx  +
push dword ptr [esi+34h]  +
cmovz eax ebx +
mov [esp+18h] eax +
call sub_421400  +
add esp 8 +
mov ebx eax +
cmp ebp [edi+10h] +
jz loc_435B9E  +
mov ebp [ebp+18h] +
test ebp ebp +
jnz loc_435B57  +
jmp loc_435BC0  +
cmp dword ptr [esi+1B4h] 5 +
jnz loc_435BC0  +
test ebx ebx +
jz loc_435BC0  +
cmp dword ptr [ebx+4] 1 +
jnz loc_435BC0  +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_435BC0  +
mov eax 1 +
mov [ebx+3Ah] ax +
cmp dword ptr [edi+30h] 2 +
jnz loc_435CFB  +
mov eax dword_4F2468 +
test eax eax +
jz loc_435CFB  +
push ebx  +
jmp loc_435CF1  +
test ebx ebx +
jz loc_435C2C  +
cmp dword ptr [esi+28h] 0 +
jg loc_435C2C  +
push 0FFFFFFFFh  +
push offset aNbktext  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
mov ecx [edi+0Ch] +
add esp 0Ch +
cmp dword ptr [ecx+4] 3 +
jnz loc_435C08  +
mov [ecx+8] eax +
mov ecx [edi+10h] +
cmp ecx [edi+0Ch] +
jz loc_435C19  +
cmp dword ptr [ecx+4] 3 +
jnz loc_435C19  +
mov [ecx+8] eax +
push dword ptr [edi+0Ch]  +
push dword ptr [esi+34h]  +
call sub_4215A0  +
add esp 8 +
jmp loc_435CFB  +
mov eax [edi+2Ch] +
xor ebp ebp +
add eax 5 +
mov [esp+10h] ebp +
add [esi+1D4h] eax +
push dword ptr [esi+1D4h]  +
push edi  +
push ebp  +
push esi  +
call sub_438FE0  +
add esp 10h +
test eax eax +
jnz loc_435853  +
mov ebx [edi+0Ch] +
mov eax [edi+10h] +
mov [edi+0Ch] ebp +
mov [esp+18h] eax +
mov [edi+10h] ebp +
test ebx ebx +
jz loc_435CD4  +
mov eax [ebx+18h] +
push 1  +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+14h] 0 +
push dword ptr [esi+8]  +
mov [esp+1Ch] eax +
push ebx  +
call sub_422960  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_435CC4  +
cmp dword ptr [ebp+0] 0 +
jnz loc_435CA4  +
mov ecx [ebx] +
mov [ebp+0] ecx +
mov eax [esp+10h] +
test eax eax +
push ebp  +
cmovz eax ebx +
push edi  +
mov [esp+18h] eax +
call sub_421400  +
push ebx  +
push dword ptr [esi+34h]  +
call sub_421400  +
add esp 10h +
cmp ebx [esp+18h] +
jz loc_435CD4  +
mov eax [esp+14h] +
mov ebx eax +
test eax eax +
jnz loc_435C70  +
cmp dword ptr [edi+44h] 0 +
jnz loc_435CE1  +
mov dword ptr [edi+44h] 1 +
cmp dword ptr [edi+30h] 2 +
jnz loc_435CFB  +
mov eax dword_4F2468 +
test eax eax +
jz loc_435CFB  +
push ebp  +
push dword ptr [esp+14h]  +
push edi  +
call eax  +
add esp 0Ch +
mov dword ptr [esi+108h] 0 +
mov dword ptr [esi+104h] 0 +
jmp loc_435853  +
***
mov ebx [edi+28h] +
test ebx ebx +
jz loc_435854  +
mov edi [esi] +
test edi edi +
jz loc_435854  +
cmp dword ptr [edi+44h] 0 +
jz loc_435854  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_435854  +
push ebx  +
call sub_44E660  +
push eax  +
mov eax [edi+44h] +
push ebx  +
push dword ptr [esi+4]  +
call eax  +
mov ecx [esp+0B8h] +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
***
call sub_48927F  +
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
push edi  +
push esi  +
mov edi 0FFFFFFFEh +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 73h +
jnz loc_436285  +
cmp byte ptr [eax+1] 74h +
jnz loc_436285  +
cmp byte ptr [eax+2] 61h +
jnz loc_436285  +
cmp byte ptr [eax+3] 6Eh +
jnz loc_436285  +
cmp byte ptr [eax+4] 64h +
jnz loc_436285  +
cmp byte ptr [eax+5] 61h +
jnz loc_436285  +
cmp byte ptr [eax+6] 6Ch +
jnz loc_436285  +
cmp byte ptr [eax+7] 6Fh +
jnz loc_436285  +
cmp byte ptr [eax+8] 6Eh +
jnz loc_436285  +
cmp byte ptr [eax+9] 65h +
jnz loc_436285  +
add dword ptr [esi+0C8h] 0Ah +
add dword ptr [ecx+10h] 0Ah +
mov eax [esi+24h] +
add dword ptr [eax+20h] 0Ah +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_435E3A  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_435E60  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_435E60  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Dh +
jz loc_435EDC  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_435E9E  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436285  +
push offset aExpected_4  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 4Bh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Bh  +
jmp loc_436258  +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 8 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 27h +
jnz loc_43609F  +
push esi  +
call sub_45C5B0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 6Eh +
jnz loc_435F2D  +
cmp byte ptr [eax+1] 6Fh +
jnz loc_435F2D  +
add dword ptr [esi+0C8h] 2 +
xor edi edi +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
jmp loc_435F55  +
cmp dl 79h +
jnz loc_435F9C  +
cmp byte ptr [eax+1] 65h +
jnz loc_435F9C  +
cmp byte ptr [eax+2] 73h +
jnz loc_435F9C  +
add dword ptr [esi+0C8h] 3 +
mov edi 1 +
add dword ptr [ecx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_435F69  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_436028  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_436028  +
push esi  +
call loc_439740  +
add esp 4 +
jmp loc_436028  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_435FC2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436028  +
push offset aStandaloneAcce  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 4Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_436028  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 27h +
jz loc_4361EB  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_436061  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436285  +
push offset aStringNotClose  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 22h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 22h  +
jmp loc_436258  +
cmp al 22h +
jnz loc_4361F9  +
push esi  +
call sub_45C5B0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
mov dl [eax] +
cmp dl 6Eh +
jnz loc_4360D9  +
cmp byte ptr [eax+1] 6Fh +
jnz loc_4360D9  +
add dword ptr [esi+0C8h] 2 +
xor edi edi +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
jmp loc_436101  +
cmp dl 79h +
jnz loc_436151  +
cmp byte ptr [eax+1] 65h +
jnz loc_436151  +
cmp byte ptr [eax+2] 73h +
jnz loc_436151  +
add dword ptr [esi+0C8h] 3 +
mov edi 1 +
add dword ptr [ecx+10h] 3 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 3 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_436115  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4361DD  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4361DD  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 22h +
jmp loc_436031  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_436177  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4361DD  +
push offset aStandaloneAcce  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 4Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Eh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4361DD  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 22h +
jmp loc_436031  +
push esi  +
call sub_45C5B0  +
add esp 4 +
jmp loc_436285  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43621F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436285  +
push offset aStringNotStart  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 21h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 21h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_436285  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+90h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 18h +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+28h] +
xor ebp ebp +
mov ecx [esi+24h] +
mov eax [esi+130h] +
mov ebx [esi+12Ch] +
mov [esp+14h] eax +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jz loc_4362D0  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 18h +
retn   +
***
inc dword ptr [ecx+20h]  +
mov eax [esi+24h] +
inc dword ptr [eax+10h]  +
mov ecx [esi+24h] +
inc dword ptr [esi+0C8h]  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4362F8  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
push edi  +
push esi  +
call sub_432EB0  +
mov edi eax +
add esp 4 +
mov [esp+2Ch] edi +
test edi edi +
jnz loc_436326  +
push offset aXmlparsestartt  +
push 44h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
push esi  +
call loc_439900  +
add esp 4 +
cmp [esi+124h] ebp +
jnz loc_436351  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_436351  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_436621  +
mov dword ptr [esp+1Ch] 4 +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov [esp+24h] edx +
mov al [edx] +
cmp al 2Fh +
jnz loc_43638A  +
cmp byte ptr [edx+1] 3Eh +
jz loc_43661D  +
cmp al 9 +
jb loc_436392  +
cmp al 0Ah +
jbe loc_43639E  +
cmp al 0Dh +
jz loc_43639E  +
cmp al 20h +
jb loc_43661D  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43661D  +
mov eax [ecx+24h] +
mov [esp+20h] eax +
lea eax [esp+10h] +
push eax  +
push esi  +
call sub_429A70  +
mov edi [esp+18h] +
add esp 8 +
mov [esp+14h] eax +
test eax eax +
jz loc_436514  +
test edi edi +
jz loc_436522  +
xor edi edi +
test ebp ebp +
jle loc_4363FB  +
nop   +
push eax  +
push dword ptr [ebx+edi*4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_43643B  +
mov eax [esp+14h] +
add edi 2 +
cmp edi ebp +
jl loc_4363E0  +
test ebx ebx +
jnz loc_4364B4  +
push 58h  +
mov dword ptr [esp+1Ch] 16h +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_4364A2  +
push 0  +
push esi  +
call sub_45BA50  +
mov edi [esp+18h] +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_436522  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43644D  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43649C  +
mov eax [esp+14h] +
push eax  +
push offset aAttributeSRede  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push 2Ah  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
mov dword ptr [esi+54h] 2Ah +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43649C  +
mov dword ptr [esi+0D4h] 1 +
mov edi [esp+10h] +
jmp loc_436518  +
mov [esi+12Ch] ebx +
mov dword ptr [esi+130h] 16h +
jmp loc_4364EC  +
mov edi [esp+18h] +
cmp [esp+1Ch] edi +
jle loc_4364F0  +
add edi edi +
mov [esp+18h] edi +
lea eax ds:0[edi*4] +
push eax  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_436420  +
mov ebx eax +
mov [esi+12Ch] eax +
mov [esi+130h] edi +
mov eax [esp+14h] +
mov edi [esp+10h] +
mov [ebx+ebp*4] eax +
mov [ebx+ebp*4+4] edi +
add ebp 2 +
add dword ptr [esp+1Ch] 2 +
mov dword ptr [ebx+ebp*4] 0 +
mov dword ptr [ebx+ebp*4+4] 0 +
jmp loc_436522  +
test edi edi +
jz loc_436522  +
push edi  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_436545  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_436545  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Eh +
jz loc_43661D  +
cmp al 2Fh +
jnz loc_436563  +
cmp byte ptr [ecx+1] 3Eh +
jz loc_43661D  +
cmp al 20h +
jz loc_436583  +
cmp al 9 +
jb loc_43656F  +
cmp al 0Ah +
jbe loc_436583  +
cmp al 0Dh +
jz loc_436583  +
push offset aAttributesCons  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [esp+20h] +
cmp eax [ecx+24h] +
jnz loc_4365AC  +
mov eax [esp+24h] +
cmp eax [ecx+10h] +
jnz loc_4365AC  +
cmp dword ptr [esp+14h] 0 +
jnz loc_4365AC  +
test edi edi +
jz loc_43660D  +
cmp dword ptr [esi+124h] 0 +
jnz loc_4365FC  +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_4365D9  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_4365D9  +
push esi  +
call sub_4398C0  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_4365FC  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4365FC  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Eh +
jnz loc_436370  +
jmp loc_43661D  +
push offset aXmlparsestar_0  +
push 1  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov edi [esp+2Ch] +
mov eax [esi] +
test eax eax +
jz loc_436649  +
mov eax [eax+38h] +
test eax eax +
jz loc_436649  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_436649  +
test ebp ebp +
jle loc_43663E  +
push ebx  +
jmp loc_436640  +
push 0  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
test ebx ebx +
jz loc_43666E  +
mov esi 1 +
cmp ebp esi +
jle loc_43666E  +
mov eax [ebx+esi*4] +
test eax eax +
jz loc_436667  +
push eax  +
call off_4EE2F4  +
add esp 4 +
add esi 2 +
cmp esi ebp +
jl loc_436656  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
sub esp 58h +
push esi  +
mov esi [esp+60h] +
mov eax [esi+12Ch] +
mov ecx [esi+24h] +
mov [esp+4] eax +
mov eax [esi+130h] +
mov [esp+38h] eax +
mov eax [esi+148h] +
mov [esp+50h] eax +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jz loc_4366B8  +
xor eax eax +
pop esi  +
add esp 58h +
retn   +
***
inc dword ptr [ecx+20h]  +
mov eax [esi+24h] +
inc dword ptr [eax+10h]  +
mov ecx [esi+24h] +
inc dword ptr [esi+0C8h]  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4366E0  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
push ebx  +
push ebp  +
mov dword ptr [esp+44h] 0 +
push edi  +
cmp dword ptr [esi+124h] 0 +
jnz loc_436746  +
mov ecx [esi+24h] +
mov edx [ecx+10h] +
mov eax edx +
sub eax [ecx+0Ch] +
cmp eax 1F4h +
jle loc_436746  +
mov eax [ecx+14h] +
sub eax edx +
cmp eax 1F4h +
jge loc_436746  +
push ecx  +
call sub_45CAF0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_436746  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_436746  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
xor ebp ebp +
mov ecx [esi+28h] +
mov [esp+18h] ecx +
mov dword ptr [esp+14h] 0 +
mov ebx [eax+0Ch] +
mov ecx [eax+1Ch] +
mov edi [eax+10h] +
mov eax [eax+20h] +
sub edi ebx +
mov [esp+64h] eax +
mov eax [esp+5Ch] +
mov [esi+148h] eax +
lea eax [esp+30h] +
mov [esp+60h] ecx +
xor ecx ecx +
push eax  +
push esi  +
mov [esp+48h] ebx +
mov [esp+5Ch] edi +
mov dword ptr [esp+3Ch] 0 +
mov [esp+28h] ebp +
mov [esp+60h] ecx +
call sub_435270  +
mov ebp eax +
add esp 8 +
mov [esp+24h] ebp +
test ebp ebp +
jz loc_43753D  +
mov ecx [esi+24h] +
mov eax [esp+78h] +
push esi  +
mov edx [ecx+10h] +
sub edx [ecx+0Ch] +
sub edx edi +
mov [eax] edx +
call loc_439900  +
add esp 4 +
cmp dword ptr [esi+124h] 0 +
jnz loc_4367ED  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_4367ED  +
push esi  +
call sub_428140  +
add esp 4 +
mov eax [esi+24h] +
cmp [eax+0Ch] ebx +
mov eax [esp+18h] +
jnz loc_436E7C  +
cmp eax [esi+28h] +
jnz loc_437502  +
mov ecx [esi+24h] +
mov ebx [ecx+10h] +
mov [esp+38h] ebx +
mov al [ebx] +
cmp al 3Eh +
jz loc_436F07  +
cmp al 2Fh +
jnz loc_436828  +
cmp byte ptr [ebx+1] 3Eh +
jz loc_436F07  +
cmp al 9 +
jb loc_436830  +
cmp al 0Ah +
jbe loc_43683C  +
cmp al 0Dh +
jz loc_43683C  +
cmp al 20h +
jb loc_436F07  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436F07  +
mov ebp [ecx+24h] +
lea eax [esp+2Ch] +
push eax  +
lea eax [esp+54h] +
mov [esp+40h] ebp +
push eax  +
lea eax [esp+24h] +
mov dword ptr [esp+58h] 0FFFFFFFFh +
push eax  +
lea eax [esp+58h] +
mov dword ptr [esp+38h] 0 +
push eax  +
push dword ptr [esp+34h]  +
push dword ptr [esp+44h]  +
push esi  +
call sub_429BF0  +
mov ecx [esi+24h] +
mov edi eax +
mov eax [esp+5Ch] +
add esp 1Ch +
mov [esp+28h] edi +
cmp [ecx+0Ch] eax +
jnz loc_436E07  +
mov eax [esp+18h] +
cmp eax [esi+28h] +
jnz loc_436E07  +
mov edx [esp+1Ch] +
test edi edi +
jz loc_436DE2  +
test edx edx +
jz loc_436CA0  +
mov ebp [esp+50h] +
test ebp ebp +
jns loc_4368D3  +
push edx  +
call sub_44E660  +
mov edx [esp+20h] +
add esp 4 +
mov ebp eax +
mov eax [esi+13Ch] +
mov ebx [esp+4Ch] +
cmp edi eax +
jnz loc_436A6C  +
test ebx ebx +
jnz loc_436A6C  +
push ebp  +
push edx  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_436EC7  +
cmp [edi] bl +
jz loc_4369BB  +
push edi  +
call sub_45A210  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_436933  +
push eax  +
push eax  +
push edi  +
push offset aXmlnsSIsNotAVa  +
push 63h  +
push esi  +
call sub_428BD0  +
add esp 18h +
jmp loc_436956  +
cmp dword ptr [ebx] 0 +
jnz loc_43694D  +
push 0  +
push 0  +
push edi  +
push offset aXmlnsUriSIsNot  +
push 64h  +
push esi  +
call sub_428C40  +
add esp 18h +
push ebx  +
call sub_458EE0  +
add esp 4 +
cmp edi [esi+140h] +
jnz loc_436989  +
mov eax [esp+28h] +
cmp eax [esi+138h] +
jz loc_436A02  +
push 0  +
push 0  +
push 0  +
push offset aXmlNamespaceUr  +
push 0C8h  +
push esi  +
call sub_428BD0  +
add esp 18h +
jmp loc_436A02  +
cmp ebp 1Dh +
jnz loc_4369BB  +
push offset aHttpWww_w3_o_5  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4369BB  +
push 0  +
push 0  +
push 0  +
push offset aReuseOfTheXmln  +
push 0C8h  +
push esi  +
call sub_428BD0  +
add esp 18h +
jmp loc_436A02  +
mov ebp [esp+20h] +
mov edx 1 +
cmp ebp edx +
jl loc_4369ED  +
mov ecx [esi+148h] +
mov eax [esi+150h] +
lea eax [eax+ecx*4] +
add eax 0FFFFFFF8h +
push edi  +
push 0  +
push esi  +
call sub_426B60  +
add esp 0Ch +
test eax eax +
jle loc_436A02  +
inc ebp  +
mov [esp+20h] ebp +
cmp dword ptr [esp+2Ch] 0 +
jz loc_436A16  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Eh +
jz loc_436F07  +
cmp al 2Fh +
jnz loc_436A34  +
cmp byte ptr [ecx+1] 3Eh +
jz loc_436F07  +
cmp al 20h +
jz loc_436A48  +
cmp al 9 +
jb loc_436A40  +
cmp al 0Ah +
jbe loc_436A48  +
cmp al 0Dh +
jnz loc_436EB8  +
push esi  +
call loc_439900  +
add esp 4 +
jmp loc_436806  +
***
cmp edx ebp +
jg loc_4369ED  +
mov eax [esp+28h] +
push eax  +
push 0  +
push esi  +
call sub_427AA0  +
add esp 0Ch +
jmp loc_436A02  +
***
cmp ebx eax +
jnz loc_436C53  +
push ebp  +
push edx  +
push dword ptr [esi+128h]  +
call sub_44F4D0  +
mov edi eax +
add esp 0Ch +
mov eax [esp+28h] +
cmp eax [esi+138h] +
jnz loc_436AAE  +
cmp edi [esi+140h] +
jz loc_436BE2  +
push 0  +
push 0  +
push 0  +
push offset aXmlNamespacePr  +
jmp loc_436BD4  +
cmp edi [esi+140h] +
jnz loc_436AC6  +
push 0  +
push 0  +
push 0  +
push offset aXmlNamespace_0  +
jmp loc_436BD4  +
cmp eax [esi+13Ch] +
jnz loc_436ADE  +
push 0  +
push 0  +
push 0  +
push offset aRedefinitionOf  +
jmp loc_436BD4  +
cmp ebp 1Dh +
jnz loc_436B09  +
push offset aHttpWww_w3_o_5  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_436B05  +
push 0  +
push 0  +
push 0  +
push offset aReuseOfTheXmln  +
jmp loc_436BD4  +
mov eax [esp+28h] +
test edi edi +
jz loc_436BCA  +
cmp byte ptr [edi] 0 +
jz loc_436BCA  +
push edi  +
call sub_45A210  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_436B42  +
mov ebx [esp+28h] +
push eax  +
push edi  +
push ebx  +
push offset aXmlnsSSIsNotAV  +
push 63h  +
push esi  +
call sub_428BD0  +
add esp 18h +
jmp loc_436B75  +
cmp dword ptr [esi+10Ch] 0 +
jz loc_436B68  +
cmp dword ptr [ebx] 0 +
jnz loc_436B68  +
mov eax [esp+28h] +
push 0  +
push edi  +
push eax  +
push offset aXmlnsSUriSIsNo  +
push 64h  +
push esi  +
call sub_428C40  +
add esp 18h +
push ebx  +
call sub_458EE0  +
mov ebx [esp+2Ch] +
add esp 4 +
mov ebp [esp+20h] +
mov edx 1 +
cmp ebp edx +
jl loc_436BA0  +
mov ecx [esi+148h] +
mov eax [esi+150h] +
lea eax [eax+ecx*4] +
add eax 0FFFFFFF8h +
cmp [eax] ebx +
jz loc_436BB6  +
inc edx  +
sub eax 8 +
cmp edx ebp +
jle loc_436B94  +
push edi  +
push ebx  +
push esi  +
call sub_426B60  +
add esp 0Ch +
test eax eax +
jle loc_436BE2  +
inc ebp  +
mov [esp+20h] ebp +
jmp loc_436BE2  +
cmp edx ebp +
jg loc_436BA0  +
push ebx  +
push dword ptr [esp+50h]  +
push esi  +
call sub_427AA0  +
add esp 0Ch +
jmp loc_436BE2  +
push 0  +
push 0  +
push eax  +
push offset aXmlnsSEmptyXml  +
push 0C8h  +
push esi  +
call sub_428BD0  +
add esp 18h +
cmp dword ptr [esp+2Ch] 0 +
jz loc_436BF6  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Eh +
jz loc_436F07  +
cmp al 2Fh +
jnz loc_436C14  +
cmp byte ptr [ecx+1] 3Eh +
jz loc_436F07  +
cmp al 20h +
jz loc_436C28  +
cmp al 9 +
jb loc_436C20  +
cmp al 0Ah +
jbe loc_436C28  +
cmp al 0Dh +
jnz loc_436EB8  +
push esi  +
call loc_439900  +
add esp 4 +
mov eax [esi+24h] +
mov ecx [esp+40h] +
cmp [eax+0Ch] ecx +
mov eax [esp+18h] +
jnz loc_436E2C  +
cmp eax [esi+28h] +
jz loc_436806  +
jmp loc_436E2C  +
cmp dword ptr [esp+10h] 0 +
jz loc_436C6B  +
mov eax [esp+14h] +
add eax 5 +
cmp eax [esp+44h] +
jle loc_436D7D  +
mov eax [esp+14h] +
add eax 5 +
push eax  +
push esi  +
call sub_427570  +
mov edx [esp+24h] +
add esp 8 +
test eax eax +
jns loc_436D69  +
cmp byte ptr [edx+ebp] 0 +
jnz loc_436C98  +
push edx  +
call off_4EE2F4  +
add esp 4 +
mov ebp [esp+3Ch] +
mov ebx [esp+38h] +
cmp dword ptr [esi+124h] 0 +
jnz loc_436CC3  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_436CC3  +
push esi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_436F07  +
mov eax [esi+24h] +
mov ecx [esp+40h] +
cmp [eax+0Ch] ecx +
jnz loc_436E28  +
mov ecx [esp+18h] +
cmp ecx [esi+28h] +
jnz loc_436E28  +
mov ecx [eax+10h] +
mov al [ecx] +
cmp al 3Eh +
jz loc_436F07  +
cmp al 2Fh +
jnz loc_436D08  +
cmp byte ptr [ecx+1] 3Eh +
jz loc_436F07  +
cmp al 20h +
jz loc_436D1C  +
cmp al 9 +
jb loc_436D14  +
cmp al 0Ah +
jbe loc_436D1C  +
cmp al 0Dh +
jnz loc_436EB8  +
push esi  +
call loc_439900  +
mov ecx [esi+24h] +
add esp 4 +
cmp ebp [ecx+24h] +
jnz loc_436D40  +
cmp ebx [ecx+10h] +
jnz loc_436D40  +
test edi edi +
jnz loc_436D40  +
cmp [esp+1Ch] edi +
jz loc_436EF7  +
cmp dword ptr [esi+124h] 0 +
jnz loc_436C31  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax 0FAh +
jge loc_436C31  +
push esi  +
call sub_428140  +
jmp loc_436C2E  +
***
mov eax [esi+130h] +
mov [esp+44h] eax +
mov eax [esi+12Ch] +
mov [esp+10h] eax +
mov eax [esi+154h] +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov [eax+esi*4] ecx +
inc esi  +
mov eax [esp+14h] +
mov [esp+34h] esi +
mov esi [esp+10h] +
mov [esi+eax*4] edi +
mov [esi+eax*4+4] ebx +
mov ebx esi +
mov esi [esp+6Ch] +
mov dword ptr [ebx+eax*4+8] 0 +
mov [ebx+eax*4+0Ch] edx +
add edx ebp +
mov ebp [esp+3Ch] +
mov [ebx+eax*4+10h] edx +
add eax 5 +
mov ebx [esp+38h] +
mov [esp+1Ch] edx +
mov [esp+14h] eax +
test ecx ecx +
jz loc_436CA0  +
mov dword ptr [esp+58h] 1 +
jmp loc_436CA0  +
***
test edx edx +
jz loc_436CA0  +
mov eax [esp+50h] +
cmp byte ptr [edx+eax] 0 +
jnz loc_436CA0  +
push edx  +
call off_4EE2F4  +
add esp 4 +
jmp loc_436CA0  +
***
mov eax [esp+1Ch] +
test eax eax +
jz loc_436E20  +
cmp dword ptr [esp+2Ch] 0 +
jz loc_436E20  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+18h] +
mov ecx [esp+58h] +
test ecx ecx +
jz loc_436E78  +
mov ebp [esp+34h] +
xor edi edi +
test ebp ebp +
jle loc_436E78  +
mov ebx [esp+10h] +
add ebx 0Ch +
mov eax [esi+154h] +
cmp dword ptr [eax+edi*4] 0 +
jz loc_436E6C  +
mov eax [ebx] +
test eax eax +
jz loc_436E6C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
add ebx 14h +
cmp edi ebp +
jl loc_436E50  +
mov eax [esp+18h] +
mov edi [esp+54h] +
cmp eax [esi+28h] +
jnz loc_437502  +
mov ecx [esi+24h] +
mov eax [ecx+0Ch] +
add eax edi +
mov [ecx+10h] eax +
mov eax [esi+24h] +
mov ecx [esp+60h] +
mov [eax+1Ch] ecx +
mov eax [esi+24h] +
mov ecx [esp+64h] +
mov [eax+20h] ecx +
cmp dword ptr [esi+0Ch] 1 +
jz loc_4366F0  +
pop edi  +
pop ebp  +
pop ebx  +
xor eax eax +
pop esi  +
add esp 58h +
retn   +
***
push offset aAttributesCons  +
push 41h  +
push esi  +
call sub_427FE0  +
jmp loc_436F04  +
push offset aDictionaryAllo  +
push esi  +
call sub_45BA50  +
add esp 8 +
cmp dword ptr [esp+2Ch] 0 +
jz loc_43759F  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
add esp 58h +
retn   +
***
push offset aXmlparsestar_0  +
push 1  +
push esi  +
call sub_427B90  +
add esp 0Ch +
mov eax [esi+15Ch] +
test eax eax +
jz loc_4371DA  +
push dword ptr [esp+30h]  +
push dword ptr [esp+28h]  +
push eax  +
call sub_450460  +
add esp 0Ch +
mov [esp+1Ch] eax +
test eax eax +
jz loc_4371DA  +
cmp dword ptr [eax] 0 +
mov dword ptr [esp+54h] 0 +
jle loc_4371DA  +
mov edx [esp+14h] +
add eax 10h +
mov [esp+64h] eax +
mov [esp+2Ch] eax +
lea ebp [edx+5] +
mov ebx [eax-8] +
mov edi [eax-4] +
mov eax [esi+13Ch] +
cmp ebx eax +
jnz loc_436FE2  +
test edi edi +
jnz loc_436FE2  +
lea edx [edi+1] +
mov edi [esp+20h] +
cmp edi edx +
jl loc_436FA8  +
mov ecx [esi+148h] +
mov eax [esi+150h] +
lea eax [eax+ecx*4] +
add eax 0FFFFFFF8h +
cmp dword ptr [eax] 0 +
jz loc_436FA0  +
inc edx  +
sub eax 8 +
cmp edx edi +
jle loc_436F91  +
jmp loc_436FA8  +
cmp edx edi +
jle loc_4371B6  +
mov ecx [esp+2Ch] +
push 0  +
push esi  +
mov edi [ecx] +
call loc_428200  +
add esp 8 +
cmp eax edi +
jz loc_4371B6  +
push edi  +
push 0  +
push esi  +
call sub_426B60  +
mov ecx [esp+28h] +
add esp 0Ch +
test eax eax +
jle loc_4371BA  +
inc dword ptr [esp+20h]  +
jmp loc_4371BA  +
cmp edi eax +
jnz loc_4370A2  +
mov edi [esp+20h] +
mov edx 1 +
cmp edi edx +
jl loc_437026  +
mov ecx [esi+148h] +
mov eax [esi+150h] +
lea eax [eax+ecx*4] +
add eax 0FFFFFFF8h +
cmp [eax] ebx +
jz loc_43701E  +
inc edx  +
sub eax 8 +
cmp edx edi +
jle loc_437010  +
jmp loc_437026  +
cmp edx edi +
jle loc_4371B6  +
cmp ebx [esi+138h] +
jnz loc_437036  +
mov eax [esi+140h] +
jmp loc_43705E  +
mov ecx [esi+148h] +
sub ecx 2 +
js loc_43705C  +
mov edx [esi+150h] +
lea eax [edx+ecx*4] +
xor eax eax +
mov ecx [esp+64h] +
cmp eax [ecx] +
jz loc_4371B6  +
mov ecx [esp+2Ch] +
push dword ptr [ecx]  +
push ebx  +
push esi  +
call sub_426B60  +
mov ecx [esp+28h] +
add esp 0Ch +
test eax eax +
jle loc_4371BA  +
inc edi  +
mov [esp+20h] edi +
jmp loc_4371BA  +
test ebx ebx +
jnz loc_43709C  +
mov eax [edx+ecx*4+4] +
cmp [eax] bl +
jz loc_43705C  +
mov eax [edx+ecx*4+4] +
jmp loc_43705E  +
***
xor eax eax +
test edx edx +
jle loc_4370DC  +
mov esi [esp+10h] +
cmp ebx [esi+eax*4] +
mov esi [esp+6Ch] +
jnz loc_4370CB  +
mov ecx [esp+10h] +
cmp edi [ecx+eax*4+4] +
mov ecx [esp+1Ch] +
jz loc_4370D4  +
add eax 5 +
cmp eax edx +
jl loc_4370B0  +
jmp loc_4370DC  +
cmp eax edx +
jl loc_4371BA  +
mov eax [esp+10h] +
test eax eax +
jz loc_4370EA  +
cmp ebp [esp+44h] +
jle loc_437114  +
push ebp  +
push esi  +
call sub_427570  +
add esp 8 +
test eax eax +
js loc_43759F  +
mov eax [esi+130h] +
mov edx [esp+14h] +
mov [esp+44h] eax +
mov eax [esi+12Ch] +
mov [esp+10h] eax +
mov [eax+edx*4] ebx +
mov [eax+edx*4+4] edi +
add edx 2 +
mov [esp+14h] edx +
test edi edi +
jnz loc_43712F  +
mov [eax+edx*4] edi +
mov edi [esp+10h] +
jmp loc_437170  +
cmp edi [esi+138h] +
jnz loc_43713F  +
mov eax [esi+140h] +
jmp loc_437169  +
mov eax [esi+148h] +
sub eax 2 +
js loc_437167  +
mov edx [esi+150h] +
lea ecx [edx+eax*4] +
cmp [ecx] edi +
jz loc_437210  +
sub ecx 8 +
sub eax 2 +
jns loc_437153  +
mov edx [esp+14h] +
xor eax eax +
mov edi [esp+10h] +
mov [edi+edx*4] eax +
mov ecx [esp+2Ch] +
inc edx  +
add ebp 3 +
add ebp 2 +
mov eax [ecx] +
mov [edi+edx*4] eax +
mov eax [ecx+4] +
mov [edi+edx*4+4] eax +
add edx 2 +
cmp dword ptr [esi+1Ch] 1 +
mov [esp+14h] edx +
jnz loc_4371B2  +
cmp dword ptr [ecx+8] 0 +
jz loc_4371B2  +
push dword ptr [esp+24h]  +
push ebx  +
push offset aStandaloneAt_1  +
push 21Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
inc dword ptr [esp+48h]  +
mov ecx [esp+1Ch] +
mov ebx [esp+54h] +
mov eax [esp+2Ch] +
inc ebx  +
mov edx [esp+14h] +
add eax 14h +
mov [esp+54h] ebx +
mov [esp+2Ch] eax +
cmp ebx [ecx] +
jl loc_436F60  +
mov eax [esp+14h] +
xor ebp ebp +
mov [esp+6Ch] ebp +
test eax eax +
jle loc_437366  +
mov ecx [esp+10h] +
lea ebx [ecx+4] +
mov edx [ebx] +
test edx edx +
jz loc_4372AD  +
cmp edx [esi+138h] +
jnz loc_43721D  +
mov edi [esi+140h] +
jmp loc_4372A7  +
mov eax [edx+eax*4+4] +
mov edx [esp+14h] +
jmp loc_437169  +
***
mov eax [esi+148h] +
sub eax 2 +
js loc_43723D  +
mov edi [esi+150h] +
lea ecx [edi+eax*4] +
cmp [ecx] edx +
jz loc_4372A3  +
sub ecx 8 +
sub eax 2 +
jns loc_437231  +
xor edi edi +
cmp dword ptr [esi+0D4h] 0 +
mov eax [ebx-4] +
jz loc_437254  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_437296  +
mov ecx [esp+24h] +
push ecx  +
push eax  +
push edx  +
push offset aNamespacePre_0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push edx  +
push 0  +
push 0  +
push 2  +
push 0C9h  +
push 3  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
mov dword ptr [esi+54h] 0C9h +
call sub_43A650  +
add esp 4Ch +
mov dword ptr [esi+164h] 0 +
mov eax [esp+14h] +
mov ecx [esp+10h] +
mov [ebx+4] edi +
jmp loc_4372AF  +
mov edi [edi+eax*4+4] +
test edi edi +
jnz loc_437296  +
jmp loc_43723F  +
***
xor edi edi +
xor edx edx +
test ebp ebp +
jle loc_43734A  +
mov ebp [ebx-4] +
add ecx 8 +
mov eax [esp+6Ch] +
cmp ebp [ecx-8] +
jnz loc_4372DB  +
mov eax [ebx] +
cmp eax [ecx-4] +
jz loc_43733B  +
test edi edi +
jz loc_4372D7  +
cmp [ecx] edi +
jz loc_4372E7  +
mov eax [esp+6Ch] +
add edx 5 +
add ecx 14h +
cmp edx eax +
jl loc_4372C3  +
jmp loc_437346  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4372F9  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_437346  +
push 0  +
push edi  +
push ebp  +
push offset aNamespacedAttr  +
push 0  +
push 0  +
push 0  +
push edi  +
push ebp  +
push 0  +
push 0  +
push 2  +
push 0CBh  +
push 3  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
mov dword ptr [esi+54h] 0CBh +
call sub_43A650  +
add esp 4Ch +
mov dword ptr [esi+164h] 0 +
jmp loc_437346  +
push ebp  +
push eax  +
push esi  +
call sub_427AA0  +
add esp 0Ch +
mov eax [esp+14h] +
mov edi [esp+6Ch] +
add ebx 14h +
mov ecx [esp+10h] +
add edi 5 +
mov [esp+6Ch] edi +
mov ebp edi +
cmp edi eax +
jl loc_4371F3  +
mov ebx [esp+30h] +
cmp ebx [esi+138h] +
jnz loc_43737A  +
mov edi [esi+140h] +
jmp loc_4373A2  +
mov ecx [esi+148h] +
sub ecx 2 +
js loc_4373A0  +
mov edi [esi+150h] +
lea eax [edi+ecx*4] +
nop   +
cmp [eax] ebx +
jz loc_4374C2  +
sub eax 8 +
sub ecx 2 +
jns loc_437390  +
xor edi edi +
test ebx ebx +
jz loc_4373FF  +
test edi edi +
jnz loc_4373FF  +
cmp [esi+0D4h] edi +
jz loc_4373BB  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4373FF  +
mov eax [esp+24h] +
push 0  +
push eax  +
push ebx  +
push offset aNamespacePre_1  +
push 0  +
push 0  +
push 0  +
push eax  +
push ebx  +
push 0  +
push 0  +
push 2  +
push 0C9h  +
push 3  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
mov dword ptr [esi+54h] 0C9h +
call sub_43A650  +
add esp 4Ch +
mov dword ptr [esi+164h] 0 +
mov eax [esp+70h] +
mov [eax] ebx +
mov eax [esp+74h] +
mov [eax] edi +
mov ebx [esi] +
test ebx ebx +
jz loc_437473  +
mov ebx [ebx+74h] +
test ebx ebx +
jz loc_437473  +
cmp dword ptr [esi+0D4h] 0 +
jnz loc_437473  +
mov ebp [esp+20h] +
mov eax 66666667h +
imul  dword ptr [esp+14h] +
sar edx 1 +
mov eax edx +
shr eax 1Fh +
add eax edx +
test ebp ebp +
jle loc_4374DE  +
push dword ptr [esp+10h]  +
mov ecx [esi+148h] +
push dword ptr [esp+4Ch]  +
push eax  +
lea eax ds:0[ebp*2] +
sub ecx eax +
mov eax [esi+150h] +
lea eax [eax+ecx*4] +
push eax  +
push ebp  +
push edi  +
push dword ptr [esp+48h]  +
push dword ptr [esp+40h]  +
push dword ptr [esi+4]  +
call ebx  +
add esp 24h +
mov ebp [esp+10h] +
mov ecx [esp+58h] +
test ecx ecx +
jz loc_4374B6  +
xor edi edi +
cmp [esp+34h] edi +
jle loc_4374B6  +
lea ebx [ebp+0Ch] +
mov eax [esp+24h] +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
add esp 58h +
retn   +
***
test ebx ebx +
jnz loc_4374D5  +
mov eax [edi+ecx*4+4] +
cmp [eax] bl +
jnz loc_4374D5  +
xor edi edi +
jmp loc_4373FF  +
***
mov edi [edi+ecx*4+4] +
jmp loc_4373A2  +
***
mov ebp [esp+10h] +
push ebp  +
push dword ptr [esp+4Ch]  +
push eax  +
push 0  +
push 0  +
push edi  +
push dword ptr [esp+48h]  +
push dword ptr [esp+40h]  +
push dword ptr [esi+4]  +
call ebx  +
add esp 24h +
jmp loc_437477  +
***
cmp dword ptr [esi+0D4h] 0 +
jz loc_437518  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43759F  +
push offset aStartTagDoesnT  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
mov dword ptr [esi+54h] 5Ah +
push 5Ah  +
jmp loc_437572  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_43754F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43759F  +
push offset aStarttagInvali  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
mov dword ptr [esi+54h] 44h +
push 44h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43759F  +
mov dword ptr [esi+0D4h] 1 +
pop edi  +
pop ebp  +
pop ebx  +
xor eax eax +
pop esi  +
add esp 58h +
retn   +
***
mov ecx [esp+arg_4] +
xor eax eax +
push esi  +
push edi  +
xor edi edi +
test ecx ecx +
jz loc_437719  +
mov esi [ecx] +
test esi esi +
jz loc_437719  +
mov cl [esi] +
push ebx  +
push ebp  +
cmp cl 26h +
jnz loc_437702  +
mov cl [esi+1] +
cmp cl 23h +
jnz loc_437702  +
cmp byte ptr [esi+2] 78h +
jnz loc_43764C  +
mov bl [esi+3] +
add esi 3 +
mov ebp [esp+10h+arg_0] +
cmp bl 3Bh +
jz loc_43769F  +
nop   +
lea ecx [ebx-30h] +
cmp cl 9 +
ja loc_437610  +
shl eax 4 +
add eax 0FFFFFFD0h +
jmp loc_43762E  +
lea ecx [ebx-61h] +
cmp cl 5 +
ja loc_437620  +
shl eax 4 +
add eax 0FFFFFFA9h +
jmp loc_43762E  +
lea ecx [ebx-41h] +
cmp cl 5 +
ja loc_437646  +
shl eax 4 +
add eax 0FFFFFFC9h +
movzx ecx bl +
mov bl [esi+1] +
add eax ecx +
cmp eax 10FFFFh +
cmova edi eax +
inc esi  +
cmp bl 3Bh +
jnz loc_437600  +
jmp loc_43769F  +
push 0  +
push 6  +
jmp loc_43768F  +
cmp cl 23h +
jnz loc_437702  +
mov bl [esi+2] +
add esi 2 +
mov ebp [esp+10h+arg_0] +
cmp bl 3Bh +
jz loc_43769F  +
lea ecx [ebx-30h] +
cmp cl 9 +
ja loc_43768B  +
lea ecx [eax+eax*4] +
movzx eax bl +
mov bl [esi+1] +
lea eax [eax+ecx*2] +
add eax 0FFFFFFD0h +
cmp eax 10FFFFh +
cmova edi eax +
inc esi  +
cmp bl 3Bh +
jnz loc_437664  +
jmp loc_43769F  +
push 0  +
push 7  +
push ebp  +
call sub_427B90  +
add esp 0Ch +
xor eax eax +
cmp bl 3Bh +
jnz loc_4376A0  +
inc esi  +
mov ecx [esp+10h+arg_4] +
mov [ecx] esi +
cmp eax 100h +
jnb loc_4376C3  +
cmp eax 9 +
jb loc_4376B7  +
cmp eax 0Ah +
jbe loc_4376E6  +
cmp eax 0Dh +
jz loc_4376E6  +
cmp eax 20h +
jb loc_4376EA  +
jmp loc_4376E6  +
cmp eax 0D7FFh +
jbe loc_4376E6  +
cmp eax 0E000h +
jb loc_4376D8  +
cmp eax 0FFFDh +
jbe loc_4376E6  +
lea ecx [eax-10000h] +
cmp ecx 0FFFFFh +
ja loc_4376EA  +
test edi edi +
jz loc_4376FD  +
push eax  +
push offset aXmlparsestring  +
push 9  +
push ebp  +
call sub_45B970  +
add esp 10h +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push 0  +
push 8  +
push [esp+18h+arg_0]  +
call sub_427B90  +
add esp 0Ch +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov ebp [esp+arg_4] +
xor ebx ebx +
test ebp ebp +
jz loc_437738  +
mov eax [ebp+0] +
test eax eax +
jz loc_437738  +
cmp byte ptr [eax] 26h +
jz loc_43773D  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
inc eax  +
mov [esp+4+arg_4] eax +
lea eax [esp+4+arg_4] +
push edi  +
push eax  +
push esi  +
call loc_437910  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_43777A  +
push offset aXmlparsestri_0  +
push 44h  +
push esi  +
call sub_427FE0  +
mov eax [esp+14h+arg_4] +
add esp 0Ch +
mov [ebp+0] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [esp+8+arg_4] +
cmp byte ptr [eax] 3Bh +
jz loc_4377A5  +
push 0  +
push 17h  +
push esi  +
call sub_427B90  +
push edi  +
call off_4EE2F4  +
mov eax [esp+18h+arg_4] +
add esp 10h +
mov [ebp+0] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
inc eax  +
test dword ptr [esi+168h] 100000h +
mov [esp+8+arg_4] eax +
jnz loc_4377C9  +
push edi  +
call sub_458200  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_4378F4  +
inc dword ptr [esi+1B8h]  +
mov eax [esi] +
test eax eax +
jz loc_437817  +
mov eax [eax+14h] +
test eax eax +
jz loc_4377E7  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
mov ebx eax +
test ebx ebx +
jnz loc_437817  +
test dword ptr [esi+168h] 100000h +
jz loc_437806  +
push edi  +
call sub_458200  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_437817  +
cmp [esi+4] esi +
jnz loc_437817  +
push edi  +
push esi  +
call sub_464B60  +
add esp 8 +
mov ebx eax +
mov eax [esi+0ACh] +
cmp eax 0FFFFFFFFh +
jnz loc_437833  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
test ebx ebx +
jnz loc_437888  +
cmp dword ptr [esi+1Ch] 1 +
jz loc_437869  +
cmp [esi+58h] ebx +
jnz loc_437847  +
cmp [esi+5Ch] ebx +
jz loc_437869  +
push edi  +
push offset aEntitySNotDefi  +
push 1Bh  +
push esi  +
call sub_427B40  +
add esp 10h +
push 0  +
push 0  +
push 0  +
push esi  +
call sub_438FE0  +
jmp loc_4378F1  +
push edi  +
push offset aEntitySNotDefi  +
push 1Ah  +
push esi  +
call sub_428050  +
add esp 10h +
push 0  +
push 0  +
push 0  +
push esi  +
call sub_438FE0  +
jmp loc_4378F1  +
mov ecx [ebx+30h] +
cmp ecx 3 +
jnz loc_43789A  +
push edi  +
push offset aEntityReferenc  +
push 1Ch  +
jmp loc_4378EB  +
cmp eax 0Ch +
jnz loc_4378D8  +
cmp ecx 2 +
jnz loc_4378AE  +
push edi  +
push offset aAttributeRefer  +
push 1Dh  +
jmp loc_4378EB  +
cmp eax 0Ch +
jnz loc_4378D8  +
mov eax [ebx+28h] +
test eax eax +
jz loc_4378D8  +
cmp ecx 6 +
jz loc_4378D8  +
push 3Ch  +
push eax  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_4378D8  +
push edi  +
push offset aInEntitySIsNot  +
push 26h  +
jmp loc_4378EB  +
mov eax [ebx+30h] +
add eax 0FFFFFFFCh +
cmp eax 1 +
ja loc_4378F4  +
push edi  +
push offset aAttemptToRefer  +
push 1Eh  +
push esi  +
call sub_428050  +
add esp 10h +
push edi  +
call off_4EE2F4  +
mov eax [esp+0Ch+arg_4] +
add esp 4 +
mov [ebp+0] eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub esp 104h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+100h] eax +
mov eax [esp+10Ch] +
push ebx  +
push ebp  +
push edi  +
mov ebp [eax] +
mov edi [esp+114h] +
mov [esp+18h] eax +
lea eax [esp+0Ch] +
push eax  +
push ebp  +
push edi  +
call sub_45CBC0  +
mov ebx eax +
push ebx  +
push edi  +
call sub_4285E0  +
add esp 14h +
test eax eax +
jnz loc_43796F  +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+100h] +
xor ecx esp +
call sub_488C1C  +
add esp 104h +
retn   +
***
mov eax [esp+0Ch] +
push esi  +
cmp eax 1 +
jnz loc_437981  +
mov [esp+20h] bl +
mov esi eax +
jmp loc_437995  +
lea eax [esp+20h] +
push ebx  +
push eax  +
call sub_45B520  +
mov esi eax +
add esp 8 +
mov eax [esp+10h] +
add ebp eax +
lea eax [esp+10h] +
push eax  +
push ebp  +
push edi  +
call sub_45CBC0  +
mov ebx eax +
push ebx  +
push edi  +
call sub_428340  +
add esp 14h +
test eax eax +
jz loc_437A03  +
mov eax [esp+10h] +
cmp eax 1 +
jnz loc_4379C3  +
mov [esp+esi+20h] bl +
inc esi  +
jmp loc_4379D9  +
lea eax [esp+20h] +
add eax esi +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
mov eax [esp+10h] +
add ebp eax +
lea eax [esp+10h] +
push eax  +
push ebp  +
push edi  +
call sub_45CBC0  +
add esp 0Ch +
mov ebx eax +
cmp esi 64h +
jge loc_437AC1  +
push ebx  +
push edi  +
call sub_428340  +
add esp 8 +
test eax eax +
jnz loc_4379B3  +
cmp esi 0C350h +
jle loc_437C68  +
test dword ptr [edi+168h] 80000h +
jnz loc_437C68  +
push 81h  +
lea eax [esp+90h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_437A48  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_437ABA  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+94h] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNcname  +
lea eax [esp+0A0h] +
mov dword ptr [edi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNcname  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_437ABA  +
mov dword ptr [edi+0D4h] 1 +
xor eax eax +
jmp loc_437C7C  +
lea eax [esi+esi] +
push eax  +
mov [esp+1Ch] eax +
call off_4EE2EC  +
add esp 4 +
mov [esp+14h] eax +
test eax eax +
jnz loc_437AEB  +
push eax  +
push edi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
jmp loc_437C7C  +
push esi  +
lea ecx [esp+24h] +
push ecx  +
push eax  +
call loc_48C9C0  +
push ebx  +
push edi  +
call sub_428340  +
add esp 14h +
test eax eax +
jz loc_437B90  +
mov ecx [esp+18h] +
lea eax [esi+0Ah] +
cmp eax ecx +
jle loc_437B51  +
cmp esi 0C350h +
jle loc_437B2F  +
test dword ptr [edi+168h] 80000h +
jz loc_437BA3  +
add ecx ecx +
push ecx  +
push dword ptr [esp+18h]  +
mov [esp+20h] ecx +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_437C4F  +
mov [esp+14h] eax +
jmp loc_437B55  +
mov eax [esp+14h] +
cmp dword ptr [esp+10h] 1 +
jnz loc_437B62  +
mov [eax+esi] bl +
inc esi  +
jmp loc_437B70  +
add eax esi +
push ebx  +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
add ebp [esp+10h] +
lea eax [esp+10h] +
push eax  +
push ebp  +
push edi  +
call sub_45CBC0  +
mov ebx eax +
push ebx  +
push edi  +
call sub_428340  +
add esp 14h +
test eax eax +
jnz loc_437B10  +
mov eax [esp+14h] +
mov ecx [esp+1Ch] +
mov byte ptr [eax+esi] 0 +
mov [ecx] ebp +
jmp loc_437C7C  +
push 81h  +
lea eax [esp+90h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_437BCC  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_437C3E  +
push offset aNameTooLongUse  +
push offset aSS  +
lea eax [esp+94h] +
push 80h  +
push eax  +
call sub_4213C0  +
push offset aNcname  +
lea eax [esp+0A0h] +
mov dword ptr [edi+54h] 6Eh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aNcname  +
push 0  +
push 0  +
push 3  +
push 6Eh  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_437C3E  +
mov dword ptr [edi+0D4h] 1 +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
jmp loc_437C7C  +
push 0  +
push edi  +
call sub_45BA50  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
jmp loc_437C7C  +
mov ecx [esp+1Ch] +
lea eax [esp+20h] +
push esi  +
push eax  +
mov [ecx] ebp +
call sub_44E8A0  +
add esp 8 +
mov ecx [esp+110h] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 104h +
retn   +
***
mov ebx [esp+8+arg_4] +
xor eax eax +
mov [esp+8+var_4] eax +
test ebx ebx +
jz loc_437CBB  +
mov eax [ebx] +
test eax eax +
jz loc_437CBB  +
cmp byte ptr [eax] 25h +
jz loc_437CC0  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
push esi  +
mov esi [esp+0Ch+arg_0] +
inc eax  +
mov [esp+0Ch+arg_4] eax +
lea eax [esp+0Ch+arg_4] +
push edi  +
push eax  +
push esi  +
call loc_437910  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_437CFC  +
push offset aXmlparsestri_1  +
push 44h  +
push esi  +
call sub_427FE0  +
mov eax [esp+1Ch+arg_4] +
add esp 0Ch +
mov [ebx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
push ebp  +
mov ebp [esp+14h+arg_4] +
cmp byte ptr [ebp+0] 3Bh +
jz loc_437D25  +
push 0  +
push 17h  +
push esi  +
call sub_427B90  +
push edi  +
call off_4EE2F4  +
add esp 10h +
mov [ebx] ebp +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
inc dword ptr [esi+1B8h]  +
inc ebp  +
mov eax [esi] +
test eax eax +
jz loc_437D48  +
mov eax [eax+60h] +
test eax eax +
jz loc_437D48  +
push edi  +
push dword ptr [esi+4]  +
call eax  +
add esp 8 +
mov [esp+14h+var_4] eax +
jmp loc_437D4A  +
xor eax eax +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_437D65  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
test eax eax +
jnz loc_437DC6  +
cmp dword ptr [esi+1Ch] 1 +
jz loc_437DA4  +
cmp [esi+58h] eax +
jnz loc_437D79  +
cmp [esi+5Ch] eax +
jz loc_437DA4  +
push 0  +
push edi  +
push offset aPereferenceSNo  +
push 1Bh  +
push esi  +
call sub_43A5A0  +
add esp 14h +
mov dword ptr [esi+64h] 0 +
push 0  +
push 0  +
push 0  +
push esi  +
call sub_438FE0  +
add esp 10h +
jmp loc_437DE6  +
push edi  +
push offset aPereferenceSNo  +
push 1Ah  +
push esi  +
call sub_428050  +
add esp 10h +
push 0  +
push 0  +
push 0  +
push esi  +
call sub_438FE0  +
add esp 10h +
jmp loc_437DE6  +
mov eax [eax+30h] +
cmp eax 4 +
jz loc_437DE6  +
cmp eax 5 +
jz loc_437DE6  +
push 0  +
push edi  +
push offset aSIsNotAParamet  +
push 1Bh  +
push esi  +
call sub_43A5A0  +
add esp 14h +
push edi  +
mov dword ptr [esi+5Ch] 1 +
call off_4EE2F4  +
mov eax [esp+18h+var_4] +
add esp 4 +
mov [ebx] ebp +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 9Ch +
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_4386AF  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_4386AF  +
cmp byte ptr [eax+2] 78h +
jnz loc_4386AF  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_4386AF  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_4386AF  +
mov al [eax+5] +
cmp al 20h +
jz loc_4383BA  +
cmp al 9 +
jb loc_4383B2  +
cmp al 0Ah +
jbe loc_4383BA  +
cmp al 0Dh +
jnz loc_4386AF  +
add dword ptr [esi+0C8h] 5 +
add dword ptr [ecx+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4383E0  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438406  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_438406  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_43842E  +
cmp al 9 +
jb loc_43841A  +
cmp al 0Ah +
jbe loc_43842E  +
cmp al 0Dh +
jz loc_43842E  +
push offset aSpaceNeededAft  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push edi  +
push esi  +
call loc_439900  +
push esi  +
call sub_438760  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_438455  +
push offset a1_0  +
call sub_44E110  +
add esp 4 +
mov edi eax +
jmp loc_43847D  +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_43847D  +
cmp al 9 +
jb loc_438469  +
cmp al 0Ah +
jbe loc_43847D  +
cmp al 0Dh +
jz loc_43847D  +
push offset aSpaceNeededHer  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
mov eax [esi+24h] +
push esi  +
mov [eax+30h] edi +
call sub_42F990  +
mov ecx [esi+54h] +
add esp 4 +
pop edi  +
cmp ecx 20h +
jz loc_43873B  +
test eax eax +
jnz loc_4384B1  +
test ecx ecx +
jnz loc_4384B1  +
push offset aMissingEncodin  +
push 65h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov edx [eax+10h] +
mov cl [edx] +
cmp cl 3Fh +
jnz loc_438537  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_438537  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4384F3  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_43873B  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_43873B  +
push esi  +
call loc_439740  +
add esp 4 +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
lea eax [esp+8Ch+var_88] +
push 81h  +
push 0  +
push eax  +
cmp cl 3Eh +
jnz loc_4385EB  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_438566  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4385CC  +
push offset aParsingXmlDecl  +
push offset aS  +
lea eax [esp+94h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A0h+var_88] +
mov dword ptr [esi+54h] 39h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 39h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_4385CC  +
mov dword ptr [esi+0D4h] 1 +
push esi  +
call sub_45C5B0  +
add esp 4 +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_438605  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43866B  +
push offset aParsingXmlDecl  +
push offset aS  +
lea eax [esp+94h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A0h+var_88] +
mov dword ptr [esi+54h] 39h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 39h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43866B  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_438690  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_438690  +
inc eax  +
mov [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438676  +
push esi  +
call sub_45C5B0  +
add esp 4 +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push 81h  +
lea eax [esp+90h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_4386D5  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43873B  +
push offset aTextDeclaratio  +
push offset aS  +
lea eax [esp+94h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A0h+var_88] +
mov dword ptr [esi+54h] 38h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 38h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_43873B  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+8Ch+var_4] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+88h+var_4] eax +
push esi  +
mov esi [esp+8Ch+arg_0] +
push edi  +
xor edi edi +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 76h +
jnz loc_438A4C  +
cmp byte ptr [eax+1] 65h +
jnz loc_438A4C  +
cmp byte ptr [eax+2] 72h +
jnz loc_438A4C  +
cmp byte ptr [eax+3] 73h +
jnz loc_438A4C  +
cmp byte ptr [eax+4] 69h +
jnz loc_438A4C  +
cmp byte ptr [eax+5] 6Fh +
jnz loc_438A4C  +
cmp byte ptr [eax+6] 6Eh +
jnz loc_438A4C  +
add dword ptr [esi+0C8h] 7 +
add dword ptr [ecx+10h] 7 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 7 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4387F0  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438816  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_438816  +
push esi  +
call loc_439740  +
add esp 4 +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Dh +
jz loc_4388CD  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_438853  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4388B4  +
push offset aExpected_4  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 4Bh +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 4Bh  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_4388B4  +
mov dword ptr [esi+0D4h] 1 +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+88h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
push esi  +
call sub_45C5B0  +
push esi  +
call loc_439900  +
mov eax [esi+24h] +
add esp 8 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 22h +
jnz loc_438995  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_438A70  +
mov ecx [esi+24h] +
add esp 8 +
mov edi eax +
mov ecx [ecx+10h] +
cmp byte ptr [ecx] 22h +
jz loc_4389B8  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_438936  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438A4C  +
push offset aStringNotClose  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 22h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 22h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jmp loc_438A40  +
cmp al 27h +
jnz loc_4389C6  +
push esi  +
call sub_45C5B0  +
push esi  +
call sub_438A70  +
mov edi eax +
add esp 8 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 27h +
jmp loc_438906  +
push esi  +
call sub_45C5B0  +
add esp 4 +
jmp loc_438A4C  +
push 81h  +
lea eax [esp+94h+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_4389EB  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438A4C  +
push offset aStringNotStart  +
push offset aS  +
lea eax [esp+98h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0A4h+var_88] +
mov dword ptr [esi+54h] 21h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 21h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [esi+0Ch] edi +
cmp [esi+120h] edi +
jnz loc_438A4C  +
mov dword ptr [esi+0D4h] 1 +
mov ecx [esp+90h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
push edi  +
mov edi 0Ah +
push edi  +
call off_4EE2EC  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_438A9B  +
push eax  +
push [esp+10h+arg_0]  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push ebp  +
mov ebp [esp+10h+arg_0] +
mov eax [ebp+24h] +
mov eax [eax+10h] +
mov cl [eax] +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_438B65  +
push ebp  +
mov [esi] cl +
call sub_45C5B0  +
mov eax [ebp+24h] +
add esp 4 +
mov eax [eax+10h] +
mov al [eax] +
cmp al 2Eh +
jnz loc_438B65  +
push ebx  +
push ebp  +
mov [esi+1] al +
mov [esp+18h+var_4] 2 +
call sub_45C5B0  +
mov eax [ebp+24h] +
add esp 4 +
mov eax [eax+10h] +
mov bl [eax] +
cmp bl 30h +
jb loc_438B38  +
cmp bl 39h +
ja loc_438B38  +
mov eax [esp+14h+var_4] +
lea ebp [eax+1] +
cmp ebp edi +
jl loc_438B17  +
add edi edi +
push edi  +
push esi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_438B48  +
mov esi eax +
mov eax [esp+14h+var_4] +
mov [esp+14h+var_4] ebp +
mov ebp [esp+14h+arg_0] +
push ebp  +
mov [eax+esi] bl +
call sub_45C5B0  +
mov eax [ebp+24h] +
add esp 4 +
mov eax [eax+10h] +
mov bl [eax] +
cmp bl 30h +
jnb loc_438AF0  +
mov eax [esp+14h+var_4] +
pop ebx  +
pop ebp  +
pop edi  +
mov byte ptr [eax+esi] 0 +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
push esi  +
call off_4EE2F4  +
push 0  +
push [esp+1Ch+arg_0]  +
call sub_45BA50  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
sub esp 88h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+84h] eax +
push esi  +
mov esi [esp+90h] +
mov eax [esi+24h] +
mov dword ptr [eax+34h] 0FFFFFFFEh +
mov eax [esi+24h] +
add dword ptr [esi+0C8h] 5 +
add dword ptr [eax+10h] 5 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 5 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_438BCF  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438BF5  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_438BF5  +
push esi  +
call loc_439740  +
add esp 4 +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov al [eax] +
cmp al 20h +
jz loc_438C1D  +
cmp al 9 +
jb loc_438C09  +
cmp al 0Ah +
jbe loc_438C1D  +
cmp al 0Dh +
jz loc_438C1D  +
push offset aBlankNeededAft  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push edi  +
push esi  +
call loc_439900  +
push esi  +
call sub_438760  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_438CC7  +
push 81h  +
push eax  +
lea eax [esp+10h] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [esi+0D4h] edi +
jz loc_438C5F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438D29  +
push offset aMalformedDecla  +
push offset aS  +
lea eax [esp+10h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+1Ch] +
mov dword ptr [esi+54h] 60h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 60h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_438D29  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_438D29  +
push offset a1_0  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_438D15  +
test dword ptr [esi+168h] 20000h +
jnz loc_438D04  +
cmp byte ptr [edi] 31h +
jnz loc_438D04  +
cmp byte ptr [edi+1] 2Eh +
jnz loc_438D04  +
push eax  +
push edi  +
push offset aUnsupportedVer  +
push 61h  +
push esi  +
call sub_43A5A0  +
add esp 14h +
jmp loc_438D15  +
push edi  +
push offset aUnsupportedVer  +
push 6Ch  +
push esi  +
call sub_428050  +
add esp 10h +
mov eax [esi+14h] +
test eax eax +
jz loc_438D26  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov [esi+14h] edi +
mov ecx [esi+24h] +
pop edi  +
mov edx [ecx+10h] +
mov al [edx] +
cmp al 20h +
jz loc_438DB2  +
cmp al 9 +
jb loc_438D3E  +
cmp al 0Ah +
jbe loc_438DB2  +
cmp al 0Dh +
jz loc_438DB2  +
cmp al 3Fh +
jnz loc_438DA2  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_438DA2  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [ecx+10h] 2 +
mov eax [esi+24h] +
add dword ptr [eax+20h] 2 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_438D72  +
push esi  +
call sub_439220  +
add esp 4 +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438FC3  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_438FC3  +
push esi  +
call loc_439740  +
jmp loc_438FC0  +
push offset aBlankNeededHer  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
push esi  +
call sub_42F990  +
add esp 4 +
cmp dword ptr [esi+54h] 20h +
jz loc_438FC3  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438FC3  +
mov ecx [esi+24h] +
cmp dword ptr [ecx+2Ch] 0 +
jz loc_438E0E  +
mov edx [ecx+10h] +
mov al [edx] +
cmp al 20h +
jz loc_438E0E  +
cmp al 9 +
jb loc_438DEC  +
cmp al 0Ah +
jbe loc_438E0E  +
cmp al 0Dh +
jz loc_438E0E  +
cmp al 3Fh +
jnz loc_438DFE  +
cmp byte ptr [edx+1] 3Eh +
jz loc_438D4C  +
push offset aBlankNeededHer  +
push 41h  +
push esi  +
call sub_427FE0  +
add esp 0Ch +
cmp dword ptr [esi+124h] 0 +
jnz loc_438E31  +
mov eax [esi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_438E31  +
push esi  +
call sub_428140  +
add esp 4 +
push esi  +
call loc_439900  +
push esi  +
call sub_435D80  +
mov ecx [esi+24h] +
push esi  +
mov [ecx+34h] eax +
call loc_439900  +
mov eax [esi+24h] +
add esp 0Ch +
mov edx [eax+10h] +
mov cl [edx] +
cmp cl 3Fh +
jnz loc_438E6F  +
cmp byte ptr [edx+1] 3Eh +
jnz loc_438E6F  +
add dword ptr [esi+0C8h] 2 +
add dword ptr [eax+10h] 2 +
jmp loc_438D57  +
***
lea eax [esp+4] +
push 81h  +
push 0  +
push eax  +
cmp cl 3Eh +
jnz loc_438F11  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_438EA2  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438FBA  +
push offset aParsingXmlDecl  +
push offset aS  +
lea eax [esp+0Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+18h] +
mov dword ptr [esi+54h] 39h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 39h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_438FBA  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_438FBA  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [esi+0D4h] 0 +
jz loc_438F2B  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_438F91  +
push offset aParsingXmlDecl  +
push offset aS  +
lea eax [esp+0Ch] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+18h] +
mov dword ptr [esi+54h] 39h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 39h  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_438F91  +
mov dword ptr [esi+0D4h] 1 +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jz loc_438FBA  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 3Eh +
jz loc_438FBA  +
inc eax  +
mov [ecx+10h] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 0 +
jnz loc_438FA0  +
push esi  +
call sub_45C5B0  +
add esp 4 +
mov ecx [esp+88h] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 88h +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+8Ch+var_4] eax +
push ebx  +
push ebp  +
mov ebp [esp+94h+arg_8] +
xor ebx ebx +
push edi  +
mov edi [esp+98h+arg_0] +
test edi edi +
jz loc_43910F  +
test dword ptr [edi+168h] 80000h +
jnz loc_43910F  +
cmp dword ptr [edi+184h] 59h +
jz loc_439201  +
test ebp ebp +
jz loc_43909C  +
cmp dword ptr [ebp+30h] 6 +
jz loc_43909C  +
mov eax [ebp+28h] +
test eax eax +
jz loc_43909C  +
cmp [ebp+48h] ebx +
jnz loc_43909C  +
push esi  +
mov esi [edi+1B8h] +
push ebx  +
push ebx  +
push ebx  +
push 1  +
push eax  +
push edi  +
mov dword ptr [ebp+48h] 1 +
call sub_439DD0  +
mov ecx eax +
add esp 18h +
mov eax [edi+1B8h] +
sub eax esi +
mov [esp+9Ch+var_8C] ecx +
pop esi  +
lea eax ds:2[eax*2] +
mov [ebp+48h] eax +
test ecx ecx +
jz loc_43909C  +
push 3Ch  +
push ecx  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_43908F  +
or dword ptr [ebp+48h] 1 +
push [esp+98h+var_8C]  +
call off_4EE2F4  +
add esp 4 +
mov ecx [esp+98h+arg_C] +
test ecx ecx +
jz loc_4390D0  +
cmp ecx 989680h +
jb loc_43910F  +
mov eax [edi+24h] +
test eax eax +
jz loc_4390BF  +
mov ebx [eax+24h] +
sub ebx [eax+0Ch] +
add ebx [eax+10h] +
mov eax [edi+1BCh] +
add eax ebx +
lea eax [eax+eax*4] +
add eax eax +
cmp ecx eax +
jmp loc_43910D  +
mov edx [esp+98h+arg_4] +
test edx edx +
jz loc_439129  +
cmp edx 3E8h +
jb loc_43910F  +
mov eax [edi+24h] +
test eax eax +
jz loc_4390F3  +
mov ebx [eax+24h] +
sub ebx [eax+0Ch] +
add ebx [eax+10h] +
add ebx [edi+1BCh] +
lea ecx [ebx+ebx*4] +
add ecx ecx +
cmp edx ecx +
jnb loc_439175  +
mov eax [edi+1B8h] +
lea eax [eax+eax*2] +
cmp eax ecx +
jnb loc_439175  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
test ebp ebp +
jz loc_439159  +
mov eax [ebp+48h] +
mov ecx [edi+24h] +
cdq   +
sub eax edx +
mov edx eax +
sar edx 1 +
test ecx ecx +
jz loc_439147  +
mov ebx [ecx+24h] +
sub ebx [ecx+0Ch] +
add ebx [ecx+10h] +
mov eax [edi+1BCh] +
add eax ebx +
lea ecx [eax+eax*4] +
add ecx ecx +
lea eax [edx+edx*2] +
jmp loc_43910B  +
mov eax [edi+184h] +
cmp eax 1Ah +
jz loc_439169  +
cmp eax 1Bh +
jnz loc_43910F  +
cmp dword ptr [edi+1B8h] 2710h +
jbe loc_43910F  +
push 81h  +
lea eax [esp+9Ch+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp dword ptr [edi+0D4h] 0 +
jz loc_43919B  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_439201  +
push offset aDetectedAnEnti  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [edi+54h] 59h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 59h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov dword ptr [edi+0Ch] 0 +
cmp dword ptr [edi+120h] 0 +
jnz loc_439201  +
mov dword ptr [edi+0D4h] 1 +
mov ecx [esp+98h+var_4] +
mov eax 1 +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
sub esp 8Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+8Ch+var_4] eax +
push ebp  +
push edi  +
mov edi [esp+94h+arg_0] +
xor ebp ebp +
mov eax [edi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 25h +
jnz loc_4396FA  +
mov eax [edi+0ACh] +
inc eax  +
cmp eax 11h +
ja loc_43930E  +
movzx eax ds:byte_439728[eax] +
jmp ds:off_439714[eax*4]  +
push 0  +
push 12h  +
push edi  +
call sub_427B90  +
add esp 0Ch +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
push 0  +
push 13h  +
push edi  +
call sub_427B90  +
add esp 0Ch +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
push 0  +
push 14h  +
push edi  +
call sub_427B90  +
add esp 0Ch +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
cmp [edi+60h] ebp +
jnz loc_4392E7  +
cmp dword ptr [edi+28h] 1 +
jz loc_4396FA  +
mov al [ecx+1] +
cmp al 20h +
jz loc_4396FA  +
cmp al 9 +
jb loc_4392FE  +
cmp al 0Ah +
jbe loc_4396FA  +
cmp al 0Dh +
jz loc_4396FA  +
test al al +
jz loc_4396FA  +
push ebx  +
push edi  +
call sub_45C5B0  +
push edi  +
call sub_432EB0  +
add esp 8 +
mov ebx eax +
call sub_4584C0  +
cmp [eax] ebp +
jz loc_439346  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push ebx  +
push offset aPereferenceS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
test ebx ebx +
jnz loc_4393B0  +
push 81h  +
lea eax [esp+9Ch+var_88] +
push ebx  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] ebp +
jz loc_439372  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4396F9  +
push offset aPereferenceNoN  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [edi+54h] 18h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 18h  +
jmp loc_4396D1  +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Bh +
jnz loc_439673  +
push edi  +
call sub_45C5B0  +
mov eax [edi] +
add esp 4 +
test eax eax +
jz loc_4393E0  +
mov eax [eax+60h] +
test eax eax +
jz loc_4393E0  +
push ebx  +
push dword ptr [edi+4]  +
call eax  +
add esp 8 +
mov ebp eax +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4396F9  +
test ebp ebp +
jnz loc_4394D3  +
cmp dword ptr [edi+1Ch] 1 +
jz loc_43949B  +
cmp [edi+58h] ebp +
jnz loc_43940D  +
cmp [edi+5Ch] ebp +
jz loc_43949B  +
cmp dword ptr [edi+68h] 0 +
jz loc_43945A  +
cmp dword ptr [edi+70h] 0 +
jz loc_43945A  +
push 0  +
push ebx  +
push offset aPereferenceSNo  +
push 1Bh  +
push edi  +
call sub_43A4F0  +
add esp 14h +
mov dword ptr [edi+64h] 0 +
push 0  +
push 0  +
push 0  +
push edi  +
call sub_438FE0  +
add esp 10h +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
push 0  +
push ebx  +
push offset aPereferenceSNo  +
push 1Bh  +
push edi  +
call sub_43A5A0  +
add esp 14h +
mov dword ptr [edi+64h] 0 +
push 0  +
push 0  +
push 0  +
push edi  +
call sub_438FE0  +
add esp 10h +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
push ebx  +
push offset aPereferenceSNo  +
push 1Ah  +
push edi  +
call sub_428050  +
add esp 10h +
push 0  +
push 0  +
push 0  +
push edi  +
call sub_438FE0  +
add esp 10h +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
mov eax [edi+24h] +
cmp dword ptr [eax+28h] offset loc_426850 +
jz loc_439508  +
push ebp  +
push edi  +
call sub_428AE0  +
push eax  +
push edi  +
call sub_4397C0  +
add esp 10h +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
mov eax [ebp+30h] +
cmp eax 4 +
jz loc_43953E  +
cmp eax 5 +
jz loc_439543  +
push ebx  +
push offset aPereferenceSIs  +
push 1Eh  +
push edi  +
call sub_428050  +
add esp 10h +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
cmp eax 5 +
jnz loc_43955C  +
test byte ptr [edi+168h] 1Eh +
jnz loc_43955C  +
cmp dword ptr [edi+10h] 0 +
jnz loc_43955C  +
cmp dword ptr [edi+68h] 0 +
jz loc_4396F9  +
push ebp  +
push edi  +
call sub_45C270  +
push eax  +
push edi  +
call sub_4397C0  +
add esp 10h +
test eax eax +
js loc_4396F9  +
cmp dword ptr [edi+124h] 0 +
jnz loc_439598  +
mov eax [edi+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_439598  +
push edi  +
call sub_428140  +
add esp 4 +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4396F9  +
mov ecx [edi+24h] +
mov eax [ecx+14h] +
mov edx [ecx+10h] +
sub eax edx +
cmp eax 4 +
jl loc_4395FA  +
movzx eax byte ptr [edx] +
mov [esp+98h+var_8C] al +
mov eax [ecx+10h] +
push 4  +
movzx eax byte ptr [eax+1] +
mov [esp+11h] al +
mov eax [ecx+10h] +
movzx eax byte ptr [eax+2] +
mov [esp+9Ch+var_8A] al +
mov eax [ecx+10h] +
movzx eax byte ptr [eax+3] +
mov [esp+9Ch+var_89] al +
lea eax [esp+9Ch+var_8C] +
push eax  +
call sub_461EA0  +
add esp 8 +
test eax eax +
jz loc_4395FA  +
push eax  +
push edi  +
call sub_45CDE0  +
add esp 8 +
cmp dword ptr [ebp+30h] 5 +
jnz loc_4396F9  +
mov eax [edi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 3Ch +
jnz loc_4396F9  +
cmp byte ptr [eax+1] 3Fh +
jnz loc_4396F9  +
cmp byte ptr [eax+2] 78h +
jnz loc_4396F9  +
cmp byte ptr [eax+3] 6Dh +
jnz loc_4396F9  +
cmp byte ptr [eax+4] 6Ch +
jnz loc_4396F9  +
mov al [eax+5] +
cmp al 20h +
jz loc_439652  +
cmp al 9 +
jb loc_43964A  +
cmp al 0Ah +
jbe loc_439652  +
cmp al 0Dh +
jnz loc_4396F9  +
push edi  +
call sub_438350  +
add esp 4 +
pop ebx  +
pop edi  +
pop ebp  +
mov ecx [esp+8Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
push 81h  +
lea eax [esp+9Ch+var_88] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] ebp +
jz loc_439698  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_4396F9  +
push offset aPereferenceExp  +
push offset aS  +
lea eax [esp+0A0h+var_88] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0ACh+var_88] +
mov dword ptr [edi+54h] 19h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 19h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] ebp +
cmp [edi+120h] ebp +
jnz loc_4396F9  +
mov dword ptr [edi+0D4h] 1 +
pop ebx  +
mov ecx [esp+94h+var_4] +
pop edi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 8Ch +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
test esi esi +
jz loc_4397B4  +
pop edi  +
xor al al +
pop esi  +
retn   +
***
test ebp ebp +
jnz loc_4397CE  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push ebx  +
push esi  +
call sub_4584C0  +
mov ebx [esp+8+arg_0] +
cmp dword ptr [eax] 0 +
jz loc_439832  +
mov eax [ebx+24h] +
test eax eax +
jz loc_439810  +
cmp dword ptr [eax+4] 0 +
jz loc_439810  +
push edi  +
call sub_4583C0  +
mov esi [ebx+24h] +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+4]  +
push offset aSD  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 10h +
pop edi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebp+10h]  +
mov ecx [ebx+28h] +
inc ecx  +
push ecx  +
push offset aPushingInputD_  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
push ebp  +
push ebx  +
call sub_4268B0  +
add esp 8 +
mov esi eax +
cmp dword ptr [ebx+0ACh] 0FFFFFFFFh +
jnz loc_43984E  +
pop esi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
cmp dword ptr [ebx+124h] 0 +
jnz loc_439871  +
mov eax [ebx+24h] +
mov ecx [eax+14h] +
sub ecx [eax+10h] +
cmp ecx 0FAh +
jge loc_439871  +
push ebx  +
call sub_428140  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
test esi esi +
jnz loc_43988D  +
xor eax eax +
pop esi  +
retn   +
call sub_4282C0  +
push esi  +
call sub_44E660  +
push eax  +
push esi  +
call sub_4274E0  +
add esp 0Ch +
test eax eax +
jz loc_439889  +
push 0  +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push eax  +
call sub_4279F0  +
add esp 14h +
pop esi  +
retn   +
***
push dword ptr [esi+24h]  +
call sub_45CAF0  +
mov ecx [esi+24h] +
add esp 4 +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_4398F6  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
test eax eax +
jg loc_4398F6  +
push esi  +
call loc_439740  +
add esp 4 +
pop esi  +
retn   +
***
push ebx  +
push esi  +
mov esi [esp+0Ch] +
xor ebx ebx +
cmp dword ptr [esi+28h] 1 +
jnz loc_439975  +
cmp dword ptr [esi+0ACh] 3 +
jz loc_439975  +
mov eax [esi+24h] +
mov edx [eax+10h] +
mov al [edx] +
cmp al 20h +
jz loc_439932  +
cmp al 9 +
jb loc_43992E  +
cmp al 0Ah +
jbe loc_439934  +
cmp al 0Dh +
jnz loc_43996A  +
cmp al 0Ah +
mov eax [esi+24h] +
jnz loc_439948  +
inc dword ptr [eax+1Ch]  +
mov eax [esi+24h] +
mov dword ptr [eax+20h] 1 +
jmp loc_43994B  +
inc dword ptr [eax+20h]  +
inc edx  +
inc ebx  +
cmp byte ptr [edx] 0 +
jnz loc_439920  +
mov eax [esi+24h] +
push 0FAh  +
mov [eax+10h] edx +
push dword ptr [esi+24h]  +
call sub_45CA50  +
add esp 8 +
jmp loc_439917  +
***
mov ecx [esi+24h] +
mov eax ebx +
pop esi  +
pop ebx  +
mov [ecx+10h] edx +
retn   +
***
push edi  +
mov eax [esi+24h] +
mov eax [eax+10h] +
movzx edi byte ptr [eax] +
cmp edi 20h +
jz loc_439993  +
cmp edi 9 +
jl loc_43998E  +
cmp edi 0Ah +
jle loc_439993  +
cmp edi 0Dh +
jnz loc_4399A8  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4399A8  +
push esi  +
call sub_45C5B0  +
add esp 4 +
inc ebx  +
jmp loc_439976  +
***
test edi edi +
jnz loc_4399D5  +
cmp dword ptr [esi+28h] 1 +
jle loc_4399D5  +
cmp dword ptr [esi+0ACh] 5 +
jz loc_4399D5  +
push esi  +
call loc_439740  +
mov eax [esi+24h] +
add esp 4 +
mov eax [eax+10h] +
movzx edi byte ptr [eax] +
test edi edi +
jz loc_4399B0  +
mov eax [esi+24h] +
mov eax [eax+10h] +
cmp byte ptr [eax] 25h +
jnz loc_4399E9  +
push esi  +
call sub_439220  +
add esp 4 +
cmp edi 100h +
jge loc_439A12  +
cmp edi 20h +
jz loc_439A05  +
cmp edi 9 +
jl loc_439A00  +
cmp edi 0Ah +
jle loc_439A05  +
cmp edi 0Dh +
jnz loc_439A12  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jnz loc_439976  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 80h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+7Ch] eax +
mov eax [esp+84h] +
mov ecx [esp+88h] +
push ebx  +
push ebp  +
xor ebx ebx +
mov [esp+0Ch] eax +
mov eax [esp+94h] +
push edi  +
xor edi edi +
mov [esp+18h] ecx +
mov [esp+14h] eax +
lea ebp [ebx+64h] +
test eax eax +
jnz loc_439A77  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+7Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 80h +
retn   +
***
mov [eax] ebx +
test ecx ecx +
jz loc_439A60  +
mov al [ecx] +
cmp al 3Ah +
jnz loc_439AA1  +
push ecx  +
call sub_44E600  +
add esp 4 +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+7Ch] +
xor ecx esp +
call sub_488C1C  +
add esp 80h +
retn   +
***
movzx eax al +
mov [esp+0Ch] eax +
push esi  +
lea esi [ecx+1] +
test eax eax +
jz loc_439B47  +
lea ecx [esp+20h] +
sub ecx esi +
cmp eax 3Ah +
jnz loc_439B96  +
cmp byte ptr [esi] 0 +
jnz loc_439B96  +
test ebx ebx +
jz loc_439B5F  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov ecx [esp+18h] +
push dword ptr [esp+1Ch]  +
mov dword ptr [ecx] 0 +
call sub_44E600  +
add esp 4 +
jmp loc_439D7C  +
push ebx  +
call off_4EE2F4  +
push 0  +
push dword ptr [esp+1Ch]  +
call sub_45BA50  +
add esp 0Ch +
xor eax eax +
jmp loc_439D7C  +
test ebx ebx +
jnz loc_439BB0  +
lea eax [esp+20h] +
push edi  +
push eax  +
call sub_44E8A0  +
mov ebx eax +
add esp 8 +
mov eax [esp+10h] +
jmp loc_439BB5  +
mov ebp 64h +
cmp eax 3Ah +
jnz loc_439D7A  +
movzx eax byte ptr [esi] +
mov ecx [esp+18h] +
mov [esp+10h] eax +
mov [ecx] ebx +
test eax eax +
jnz loc_439BE2  +
push eax  +
push offset unk_4DE8C5  +
call sub_44E8A0  +
add esp 8 +
jmp loc_439D7C  +
xor edi edi +
cmp eax 61h +
jl loc_439BF2  +
cmp eax 7Ah +
jle loc_439CD9  +
cmp eax 41h +
jl loc_439C00  +
cmp eax 5Ah +
jle loc_439CD9  +
cmp eax 5Fh +
jz loc_439CD9  +
cmp eax 3Ah +
jz loc_439CD9  +
lea eax [esp+18h] +
push eax  +
push esi  +
push dword ptr [esp+1Ch]  +
call sub_45CBC0  +
mov ebx eax +
add esp 0Ch +
cmp ebx 100h +
jge loc_439C74  +
cmp ebx 41h +
jl loc_439C3C  +
cmp ebx 5Ah +
jle loc_439CD5  +
cmp ebx 61h +
jl loc_439C4A  +
cmp ebx 7Ah +
jle loc_439CD5  +
cmp ebx 0C0h +
jl loc_439C5A  +
cmp ebx 0D6h +
jle loc_439CD5  +
cmp ebx 0D8h +
jl loc_439C6A  +
cmp ebx 0F6h +
jle loc_439CD5  +
cmp ebx 0F8h +
jl loc_439C86  +
jmp loc_439CD5  +
push offset asc_4C14B0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_439CD5  +
cmp ebx 100h +
jl loc_439CB6  +
cmp ebx 4E00h +
jl loc_439C9E  +
cmp ebx 9FA5h +
jle loc_439CD5  +
cmp ebx 3007h +
jz loc_439CD5  +
cmp ebx 3021h +
jl loc_439CB6  +
cmp ebx 3029h +
jle loc_439CD5  +
cmp ebx 5Fh +
jz loc_439CD5  +
push dword ptr [esp+1Ch]  +
push offset aNameSIsNotXmlN  +
push 0CAh  +
push dword ptr [esp+20h]  +
call sub_428050  +
add esp 10h +
mov eax [esp+10h] +
inc esi  +
push ebp  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_439D1E  +
push 0  +
push dword ptr [esp+18h]  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
jmp loc_439D7C  +
push edi  +
lea eax [esp+24h] +
push eax  +
push ebx  +
call loc_48C9C0  +
add esp 0Ch +
cmp dword ptr [esp+10h] 0 +
jz loc_439D62  +
lea eax [edi+0Ah] +
cmp eax ebp +
jle loc_439D4E  +
add ebp ebp +
push ebp  +
push ebx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_439D95  +
mov ebx eax +
mov eax [esp+10h] +
mov [edi+ebx] al +
inc edi  +
movzx eax byte ptr [esi] +
inc esi  +
mov [esp+10h] eax +
test eax eax +
jnz loc_439D34  +
mov byte ptr [edi+ebx] 0 +
test ebx ebx +
jnz loc_439D7A  +
lea eax [esp+20h] +
push edi  +
push eax  +
call sub_44E8A0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
mov ecx [esp+8Ch] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 80h +
retn   +
***
push 0  +
push dword ptr [esp+18h]  +
call sub_45BA50  +
push ebx  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
jmp loc_439D7C  +
***
test esi esi +
jz loc_439DC9  +
push esi  +
call sub_428260  +
add esp 4 +
mov dword ptr [esi+54h] 6Fh +
pop esi  +
retn   +
***
cmp [esp+arg_0] 0 +
push esi  +
jz loc_439E09  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_439E09  +
push [esp+4+arg_14]  +
push [esp+8+arg_10]  +
push [esp+0Ch+arg_C]  +
push [esp+10h+arg_8]  +
push esi  +
call sub_44E660  +
add esp 4 +
push eax  +
push esi  +
push [esp+1Ch+arg_0]  +
call loc_439E10  +
add esp 1Ch +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
sub esp 0B0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0ACh] eax +
mov eax [esp+0B8h] +
mov ecx [esp+0C0h] +
push esi  +
push edi  +
mov edi [esp+0BCh] +
xor esi esi +
mov [esp+20h] edi +
mov [esp+8] eax +
mov [esp+10h] eax +
mov [esp+1Ch] ecx +
mov [esp+0Ch] esi +
test edi edi +
jz loc_439F1E  +
test eax eax +
jz loc_439F1E  +
mov ecx [esp+0C4h] +
test ecx ecx +
js loc_439F1E  +
add eax ecx +
mov [esp+28h] eax +
mov eax [edi+0F8h] +
cmp eax 28h +
jle loc_439E8D  +
test dword ptr [edi+168h] 80000h +
jz loc_439E98  +
cmp eax 400h +
jle loc_439F37  +
push 81h  +
lea eax [esp+34h] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
cmp [edi+0D4h] esi +
jz loc_439EBD  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jz loc_439F1E  +
push offset aDetectedAnEnti  +
push offset aS  +
lea eax [esp+38h] +
push 80h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+44h] +
mov dword ptr [edi+54h] 59h +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 59h  +
push 1  +
push 0  +
push edi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 54h +
mov [edi+0Ch] esi +
cmp [edi+120h] esi +
jnz loc_439F1E  +
mov dword ptr [edi+0D4h] 1 +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+0ACh] +
xor ecx esp +
call sub_488C1C  +
add esp 0B0h +
retn   +
***
push ebx  +
push ebp  +
mov ebx 12Ch +
push ebx  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_43A4A9  +
mov eax [esp+10h] +
cmp eax [esp+30h] +
jnb loc_43A4A1  +
lea ecx [esp+2Ch] +
push ecx  +
push eax  +
push edi  +
call sub_45CBC0  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jz loc_43A4A1  +
movzx eax byte ptr [esp+0D4h] +
mov [esp+34h] eax +
cmp ecx eax +
jz loc_43A4A1  +
movzx eax byte ptr [esp+0D8h] +
cmp ecx eax +
jz loc_43A4A1  +
movzx eax byte ptr [esp+0DCh] +
cmp ecx eax +
jz loc_43A4A1  +
cmp ecx 26h +
jnz loc_43A2B5  +
mov eax [esp+10h] +
cmp byte ptr [eax+1] 23h +
jnz loc_43A023  +
lea eax [esp+18h] +
push eax  +
push edi  +
call sub_4375B0  +
add esp 8 +
test eax eax +
jz loc_439FE1  +
push eax  +
lea eax [esi+ebp] +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
lea eax [esi+64h] +
cmp eax ebx +
jbe loc_43A419  +
lea eax ds:64h[ebx*2] +
mov [esp+10h] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+10h] +
mov ecx [esp+18h] +
mov [esp+10h] ecx +
jmp loc_43A47C  +
test byte ptr [esp+24h] 1 +
jz loc_43A423  +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_43A05A  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esp+10h]  +
push offset aStringDecoding  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
mov edi [esp+34h] +
add esp 0Ch +
lea eax [esp+18h] +
push eax  +
push edi  +
call sub_437720  +
mov ecx [edi+184h] +
add esp 8 +
mov [esp+10h] eax +
cmp ecx 59h +
jz loc_43A4B4  +
cmp ecx 1 +
jz loc_43A4B4  +
push 0  +
push eax  +
push 0  +
push edi  +
call sub_438FE0  +
mov ecx [esp+20h] +
add esp 10h +
test ecx ecx +
jz loc_43A419  +
mov eax [ecx+48h] +
cdq   +
sub eax edx +
sar eax 1 +
add [edi+1B8h] eax +
cmp dword ptr [ecx+30h] 6 +
jnz loc_43A12A  +
mov eax [ecx+28h] +
test eax eax +
jz loc_43A10D  +
movzx eax byte ptr [eax] +
push eax  +
lea eax [esi+ebp] +
push eax  +
call sub_45B520  +
add esi eax +
add esp 8 +
lea eax [esi+64h] +
cmp eax ebx +
jbe loc_43A419  +
lea eax ds:64h[ebx*2] +
mov [esp+10h] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+10h] +
mov ecx [esp+18h] +
mov [esp+10h] ecx +
jmp loc_43A47C  +
push offset aPredefinedEnti  +
push 1  +
push edi  +
call sub_427FE0  +
mov ecx [esp+24h] +
add esp 0Ch +
mov [esp+10h] ecx +
jmp loc_43A47E  +
cmp dword ptr [ecx+28h] 0 +
jz loc_43A230  +
inc dword ptr [edi+0F8h]  +
mov eax [ecx+28h] +
mov [esp+14h] eax +
test eax eax +
jz loc_43A170  +
push 0  +
push 0  +
push 0  +
push dword ptr [esp+30h]  +
push eax  +
call sub_44E660  +
add esp 4 +
push eax  +
push dword ptr [esp+28h]  +
push edi  +
call loc_439E10  +
mov ecx [esp+2Ch] +
add esp 1Ch +
mov [esp+14h] eax +
jmp loc_43A178  +
mov dword ptr [esp+14h] 0 +
dec dword ptr [edi+0F8h]  +
mov eax [edi+184h] +
cmp eax 59h +
jz loc_43A4B4  +
cmp eax 1 +
jz loc_43A4B4  +
mov eax [esp+14h] +
test eax eax +
jz loc_43A419  +
cmp byte ptr [eax] 0 +
jz loc_43A211  +
sub eax esi +
mov [esp+1Ch] eax +
mov al [eax+esi] +
mov [esi+ebp] al +
inc esi  +
lea eax [esi+64h] +
cmp eax ebx +
jbe loc_43A1FF  +
push 0  +
push ecx  +
push esi  +
push edi  +
call sub_438FE0  +
add esp 10h +
test eax eax +
jnz loc_43A4B4  +
lea eax ds:64h[ebx*2] +
mov [esp+20h] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+20h] +
mov ebp eax +
mov eax [esp+1Ch] +
mov ecx [esp+10h] +
cmp byte ptr [eax+esi] 0 +
jnz loc_43A1B0  +
mov eax [esp+14h] +
push eax  +
call off_4EE2F4  +
mov ecx [esp+1Ch] +
add esp 4 +
mov dword ptr [esp+14h] 0 +
mov [esp+10h] ecx +
jmp loc_43A47E  +
push dword ptr [ecx+8]  +
call sub_44E660  +
mov edx eax +
add esp 4 +
mov eax [esp+10h] +
mov [esp+20h] edx +
mov eax [eax+8] +
mov byte ptr [esi+ebp] 26h +
inc esi  +
mov [esp+10h] eax +
lea ecx [esi+64h] +
add ecx edx +
cmp ecx ebx +
jbe loc_43A289  +
lea eax [ebx+32h] +
lea eax [edx+eax*2] +
mov [esp+1Ch] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+1Ch] +
mov ebp eax +
mov edx [esp+20h] +
test edx edx +
jle loc_43A2A3  +
mov edi [esp+10h] +
mov al [edi] +
lea edi [edi+1] +
mov [esi+ebp] al +
dec edx  +
inc esi  +
test edx edx +
jg loc_43A291  +
mov edi [esp+28h] +
mov ecx [esp+18h] +
mov byte ptr [esi+ebp] 3Bh +
inc esi  +
mov [esp+10h] ecx +
jmp loc_43A47E  +
cmp ecx 25h +
jnz loc_43A423  +
test byte ptr [esp+24h] 2 +
jz loc_43A423  +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_43A2F5  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esp+10h]  +
push offset aStringDecodi_0  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
mov edi [esp+34h] +
add esp 0Ch +
lea eax [esp+18h] +
push eax  +
push edi  +
call sub_437CA0  +
add esp 8 +
mov [esp+10h] eax +
cmp dword ptr [edi+184h] 59h +
jz loc_43A4B4  +
push 0  +
push eax  +
push 0  +
push edi  +
call sub_438FE0  +
mov eax [esp+20h] +
add esp 10h +
test eax eax +
jz loc_43A419  +
mov eax [eax+48h] +
cdq   +
sub eax edx +
mov edx [esp+10h] +
sar eax 1 +
add [edi+1B8h] eax +
cmp dword ptr [edx+28h] 0 +
jnz loc_43A354  +
push edx  +
push edi  +
call loc_4287B0  +
mov edx [esp+18h] +
add esp 8 +
inc dword ptr [edi+0F8h]  +
mov eax [edx+28h] +
mov [esp+1Ch] eax +
test eax eax +
jz loc_43A38C  +
push 0  +
push 0  +
push 0  +
push dword ptr [esp+30h]  +
push eax  +
call sub_44E660  +
add esp 4 +
push eax  +
push dword ptr [esp+30h]  +
push edi  +
call loc_439E10  +
mov edx [esp+2Ch] +
add esp 1Ch +
jmp loc_43A38E  +
xor eax eax +
dec dword ptr [edi+0F8h]  +
mov [esp+14h] eax +
test eax eax +
jz loc_43A419  +
cmp byte ptr [eax] 0 +
mov ecx eax +
jz loc_43A407  +
mov al [ecx] +
inc ecx  +
mov [esi+ebp] al +
inc esi  +
mov [esp+20h] ecx +
lea eax [esi+64h] +
cmp eax ebx +
jbe loc_43A3FA  +
push 0  +
push edx  +
push esi  +
push edi  +
call sub_438FE0  +
add esp 10h +
test eax eax +
jnz loc_43A4B4  +
lea eax ds:64h[ebx*2] +
mov [esp+1Ch] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+1Ch] +
mov ebp eax +
mov ecx [esp+20h] +
cmp byte ptr [ecx] 0 +
mov edx [esp+10h] +
jnz loc_43A3A3  +
mov eax [esp+14h] +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esp+14h] 0 +
mov ecx [esp+18h] +
mov [esp+10h] ecx +
jmp loc_43A47E  +
cmp dword ptr [esp+2Ch] 1 +
jnz loc_43A430  +
mov [esi+ebp] cl +
inc esi  +
jmp loc_43A43F  +
push ecx  +
lea eax [esi+ebp] +
push eax  +
call sub_45B520  +
add esp 8 +
add esi eax +
mov ecx [esp+10h] +
lea eax [esi+64h] +
add ecx [esp+2Ch] +
mov [esp+10h] ecx +
mov [esp+18h] ecx +
cmp eax ebx +
jbe loc_43A47E  +
lea eax ds:64h[ebx*2] +
mov [esp+1Ch] eax +
cmp eax ebx +
jb loc_43A4A9  +
push eax  +
push ebp  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A4A9  +
mov ebx [esp+1Ch] +
mov ecx [esp+10h] +
mov ebp eax +
cmp ecx [esp+30h] +
jnb loc_43A4A1  +
lea eax [esp+2Ch] +
push eax  +
push ecx  +
push edi  +
call sub_45CBC0  +
mov ecx eax +
add esp 0Ch +
mov eax [esp+34h] +
test ecx ecx +
jnz loc_439F85  +
mov byte ptr [esi+ebp] 0 +
mov eax ebp +
jmp loc_43A4D6  +
push 0  +
push edi  +
call sub_45BA50  +
add esp 8 +
mov eax [esp+14h] +
test eax eax +
jz loc_43A4C6  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test ebp ebp +
jz loc_43A4D4  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
mov ecx [esp+0BCh] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0B0h +
retn   +
***
xor edx edx +
test esi esi +
jz loc_43A565  +
cmp [esi+0D4h] edx +
jz loc_43A510  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_43A599  +
mov eax [esi] +
push edi  +
mov edi [esp+4+arg_4] +
mov [esi+54h] edi +
test eax eax +
jz loc_43A52A  +
cmp dword ptr [eax+6Ch] 0DEEDBEAFh +
jnz loc_43A52A  +
mov edx [eax+7Ch] +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 2  +
push edi  +
push 4  +
push 0  +
push esi  +
push dword ptr [esi+6Ch]  +
push dword ptr [esi+70h]  +
push edx  +
call sub_43A650  +
add esp 48h +
mov dword ptr [esi+64h] 0 +
pop edi  +
pop esi  +
retn   +
mov ecx [esp+arg_10] +
mov eax [esp+arg_C] +
push ecx  +
push eax  +
push [esp+8+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 2  +
push [esp+2Ch+arg_4]  +
push 4  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
push edi  +
xor edi edi +
test edx edx +
jz loc_43A60F  +
cmp [edx+0D4h] edi +
jz loc_43A5C0  +
cmp dword ptr [edx+0ACh] 0FFFFFFFFh +
jz loc_43A643  +
mov eax [edx] +
push esi  +
test eax eax +
jz loc_43A5D8  +
cmp dword ptr [eax+6Ch] 0DEEDBEAFh +
jnz loc_43A5D3  +
mov edi [eax+7Ch] +
mov esi [eax+54h] +
jmp loc_43A5DA  +
xor esi esi +
mov ecx [esp+8+arg_10] +
mov eax [esp+8+arg_C] +
push ecx  +
push eax  +
push [esp+10h+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 1  +
push [esp+34h+arg_4]  +
push 1  +
push 0  +
push edx  +
push dword ptr [edx+4]  +
push esi  +
push edi  +
call sub_43A650  +
add esp 48h +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 1  +
push [esp+30h+arg_4]  +
push 1  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
pop edi  +
retn   +
***
sub esp 18h +
push ebx  +
xor eax eax +
push edi  +
mov edi [esp+20h+arg_10] +
mov [esp+20h+var_8] eax +
call sub_458460  +
cmp [esp+20h+arg_18] 0 +
mov ebx eax +
mov [esp+20h+var_4] ebx +
mov [esp+20h+var_C] 0 +
jz loc_43AAB3  +
call sub_458400  +
cmp dword ptr [eax] 0 +
jnz loc_43A692  +
cmp [esp+20h+arg_1C] 1 +
jz loc_43AAB3  +
mov eax [esp+20h+arg_14] +
push ebp  +
push esi  +
cmp eax 1 +
jz loc_43A6C4  +
cmp eax 5 +
jz loc_43A6C4  +
cmp eax 4 +
jz loc_43A6C4  +
cmp eax 3 +
jz loc_43A6C4  +
cmp eax 8 +
jz loc_43A6C4  +
cmp eax 17h +
jz loc_43A6C4  +
mov ecx [esp+28h+arg_0] +
mov ebp [esp+28h+arg_8] +
mov [esp+28h+var_10] ecx +
jmp loc_43A6F9  +
mov ecx [esp+28h+arg_0] +
mov edx [esp+28h+arg_C] +
mov [esp+28h+var_8] edx +
mov [esp+28h+var_10] ecx +
test ecx ecx +
jnz loc_43A723  +
test edx edx +
jz loc_43A703  +
mov eax [edx] +
test eax eax +
jz loc_43A703  +
cmp dword ptr [eax+6Ch] 0DEEDBEAFh +
jnz loc_43A703  +
mov ecx [eax+7Ch] +
mov [esp+28h+var_10] ecx +
test ecx ecx +
jz loc_43A703  +
mov ebp [edx+4] +
mov [esp+28h+var_18] ebp +
test ecx ecx +
jnz loc_43A72B  +
jmp loc_43A70B  +
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_18] eax +
call sub_458560  +
mov eax [eax] +
mov [esp+28h+var_10] eax +
test eax eax +
jz loc_43A72B  +
call sub_458580  +
mov eax [eax] +
jmp loc_43A727  +
mov eax [esp+28h+arg_8] +
mov [esp+28h+var_18] eax +
cmp [esp+28h+arg_3C] 0 +
jnz loc_43A748  +
push offset aNoErrorMessage  +
call sub_44E600  +
add esp 4 +
mov [esp+28h+var_14] eax +
jmp loc_43A7D4  +
push 96h  +
or ebp 0FFFFFFFFh +
call off_4EE2E8  +
add esp 4 +
mov [esp+28h+var_14] eax +
test eax eax +
jz loc_43A7D4  +
mov esi 96h +
call sub_41E490  +
mov edi [esp+28h+var_14] +
mov ebx eax +
lea eax [esp+28h+arg_40] +
push eax  +
mov eax [ebx] +
push 0  +
push [esp+30h+arg_3C]  +
or eax 2 +
push esi  +
push edi  +
push dword ptr [ebx+4]  +
push eax  +
call sub_49A7FA  +
add esp 1Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
cmp eax ecx +
jle loc_43A7AC  +
cmp eax esi +
jge loc_43A7A7  +
cmp ebp eax +
jz loc_43A7CC  +
mov ebp eax +
inc esi  +
add esi eax +
jmp loc_43A7AF  +
add esi 64h +
push esi  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43A7CC  +
mov edi eax +
mov [esp+28h+var_14] edi +
cmp esi 0FA00h +
jl loc_43A771  +
mov edi [esp+28h+arg_10] +
mov ebx [esp+28h+var_4] +
mov edx [esp+28h+var_8] +
mov esi [esp+28h+arg_20] +
test edx edx +
jz loc_43A827  +
test esi esi +
jnz loc_43A81B  +
mov eax [edx+24h] +
test eax eax +
jz loc_43A81B  +
cmp [eax+4] esi +
jnz loc_43A7FF  +
mov ecx [edx+28h] +
cmp ecx 1 +
jle loc_43A7FF  +
mov eax [edx+30h] +
mov eax [eax+ecx*4-8] +
test eax eax +
jz loc_43A81B  +
mov esi [eax+4] +
lea ebx [edx+180h] +
mov ebp [eax+1Ch] +
mov eax [eax+20h] +
mov [esp+28h+arg_38] eax +
jmp loc_43A8A1  +
mov ebp [esp+28h+arg_24] +
lea ebx [edx+180h] +
jmp loc_43A8A1  +
test edi edi +
jz loc_43A89D  +
test esi esi +
jnz loc_43A89D  +
mov eax [edi+20h] +
xor ecx ecx +
test eax eax +
jz loc_43A842  +
cmp [eax+48h] ecx +
cmovnz ecx edi +
mov [esp+28h+var_C] ecx +
xor eax eax +
test edi edi +
jz loc_43A857  +
cmp dword ptr [edi+4] 1 +
jz loc_43A857  +
mov edi [edi+14h] +
inc eax  +
cmp eax 0Ah +
jl loc_43A844  +
test ecx ecx +
jnz loc_43A870  +
test edi edi +
jz loc_43A880  +
mov eax [edi+20h] +
test eax eax +
jz loc_43A870  +
cmp [eax+48h] ecx +
cmovnz ecx edi +
mov [esp+28h+var_C] ecx +
test edi edi +
jz loc_43A880  +
cmp dword ptr [edi+4] 1 +
jnz loc_43A880  +
movzx ebp word ptr [edi+38h] +
jmp loc_43A884  +
mov ebp [esp+28h+arg_24] +
test ebp ebp +
jz loc_43A890  +
cmp ebp 0FFFFh +
jnz loc_43A8A1  +
push edi  +
call sub_423210  +
add esp 4 +
mov ebp eax +
jmp loc_43A8A1  +
mov ebp [esp+28h+arg_24] +
push ebx  +
call sub_43B810  +
mov eax [esp+2Ch+arg_14] +
add esp 4 +
mov [ebx] eax +
mov eax [esp+28h+arg_18] +
mov [ebx+4] eax +
mov eax [esp+28h+var_14] +
mov [ebx+8] eax +
mov eax [esp+28h+arg_1C] +
mov [ebx+0Ch] eax +
test esi esi +
jz loc_43A8CF  +
push esi  +
jmp loc_43A953  +
mov edx [esp+28h+var_C] +
test edx edx +
jz loc_43A95E  +
mov esi edx +
xor eax eax +
nop   +
mov ecx [esi+1Ch] +
test ecx ecx +
jnz loc_43A8EC  +
mov esi [esi+14h] +
jmp loc_43A92A  +
mov esi ecx +
mov ecx [esi+4] +
cmp ecx 13h +
jnz loc_43A924  +
sub eax 1 +
jns loc_43A92A  +
push offset aHref  +
push esi  +
cmp ecx ecx +
jnz loc_43A9E7  +
mov dword ptr [esi+4] 1 +
call sub_423450  +
mov [ebx+10h] eax +
add esp 8 +
mov dword ptr [esi+4] 13h +
jmp loc_43A93F  +
cmp ecx 14h +
jnz loc_43A92A  +
inc eax  +
test esi esi +
jnz loc_43A8E0  +
mov eax [edx+20h] +
push dword ptr [eax+48h]  +
call sub_44E600  +
add esp 4 +
mov [ebx+10h] eax +
cmp dword ptr [ebx+10h] 0 +
jnz loc_43A95E  +
test edi edi +
jz loc_43A95E  +
mov eax [edi+20h] +
test eax eax +
jz loc_43A95E  +
push dword ptr [eax+48h]  +
call sub_44E600  +
mov [ebx+10h] eax +
add esp 4 +
mov eax [esp+28h+arg_28] +
mov [ebx+14h] ebp +
test eax eax +
jz loc_43A975  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebx+18h] eax +
mov eax [esp+28h+arg_2C] +
test eax eax +
jz loc_43A989  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebx+1Ch] eax +
mov eax [esp+28h+arg_30] +
test eax eax +
jz loc_43A99D  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebx+20h] eax +
mov eax [esp+28h+arg_34] +
mov [ebx+24h] eax +
mov eax [esp+28h+arg_38] +
mov [ebx+28h] eax +
mov eax [esp+28h+arg_C] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
call sub_458460  +
cmp ebx eax +
jz loc_43A9CD  +
call sub_458460  +
push eax  +
push ebx  +
call sub_43ABA0  +
add esp 8 +
mov eax [esp+28h+var_10] +
test eax eax +
jz loc_43A9F4  +
push ebx  +
push [esp+2Ch+var_18]  +
call eax  +
add esp 8 +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 18h +
retn   +
call sub_423450  +
add esp 8 +
jmp loc_43A93C  +
mov edi [esp+28h+var_8] +
mov esi [esp+28h+arg_4] +
test edi edi +
jz loc_43AA2A  +
test esi esi +
jnz loc_43AA4E  +
call sub_458560  +
cmp [eax] esi +
jnz loc_43AA2E  +
mov esi [edi] +
test esi esi +
jz loc_43AA2E  +
cmp [esp+28h+arg_1C] 1 +
jnz loc_43AA22  +
mov esi [esi+54h] +
mov eax [edi+4] +
jmp loc_43AA46  +
mov esi [esi+58h] +
mov eax [edi+4] +
jmp loc_43AA46  +
test esi esi +
jnz loc_43AA4E  +
call sub_4583C0  +
mov esi [eax] +
test edi edi +
jz loc_43AA3F  +
mov [esp+28h+var_18] edi +
jmp loc_43AA4A  +
call sub_4583E0  +
mov eax [eax] +
mov [esp+28h+var_18] eax +
test esi esi +
jz loc_43AAB1  +
cmp esi offset sub_43AD10 +
jz loc_43AA9F  +
cmp esi offset sub_43B2B0 +
jz loc_43AA9F  +
cmp esi offset loc_43B000 +
jz loc_43AA9F  +
cmp esi offset loc_43B170 +
jz loc_43AA9F  +
cmp esi offset sub_43AB50 +
jz loc_43AA98  +
cmp esi offset sub_43ACC0 +
jz loc_43AA98  +
push [esp+28h+var_14]  +
push offset unk_4BC790  +
push [esp+30h+var_18]  +
call esi  +
add esp 0Ch +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 18h +
retn   +
push [esp+28h+var_18]  +
push esi  +
jmp loc_43AAA3  +
push 0  +
push 0  +
push [esp+30h+var_14]  +
push edi  +
push ebx  +
call loc_43B420  +
add esp 14h +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 18h +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [esp+arg_10] +
cmp ecx 2 +
jnz loc_43AB19  +
test eax eax +
jz loc_43AAE9  +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push ecx  +
jmp loc_43AB2E  +
push offset aMemoryAlloca_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2  +
push [esp+28h+arg_0]  +
push [esp+2Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 40h +
retn   +
push eax  +
push [esp+4+arg_C]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 2  +
push ecx  +
push [esp+2Ch+arg_0]  +
push [esp+30h+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
lea eax [esp+arg_8] +
push eax  +
push 0  +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call sub_41E490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_49A75C  +
add esp 18h +
retn   +
***
call sub_4583C0  +
test esi esi +
jnz loc_43AB96  +
mov dword ptr [eax] offset sub_43ACC0 +
pop esi  +
retn   +
mov ecx [esi] +
mov [eax] ecx +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
push edi  +
mov edi [esp+10h+arg_0] +
test edi edi +
jz loc_43ACA8  +
mov esi [esp+10h+arg_4] +
test esi esi +
jz loc_43ACA8  +
push ebx  +
push ebp  +
push dword ptr [edi+8]  +
call sub_44E600  +
push dword ptr [edi+10h]  +
mov ebx eax +
call sub_44E600  +
push dword ptr [edi+18h]  +
mov ebp eax +
call sub_44E600  +
push dword ptr [edi+1Ch]  +
mov [esp+28h+arg_0] eax +
call sub_44E600  +
push dword ptr [edi+20h]  +
mov [esp+2Ch+var_8] eax +
call sub_44E600  +
mov ecx [esi+8] +
add esp 14h +
mov [esp+18h+var_4] eax +
test ecx ecx +
jz loc_43AC0B  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_43AC1C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_43AC2D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_43AC3E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_43AC4F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi] +
mov [esi] eax +
mov eax [edi+4] +
mov [esi+4] eax +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+14h] +
mov [esi+14h] eax +
mov eax [edi+30h] +
mov [esi+30h] eax +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax [edi+28h] +
mov [esi+28h] eax +
mov eax [edi+30h] +
mov [esi+30h] eax +
mov eax [edi+2Ch] +
mov [esi+2Ch] eax +
mov eax [esp+18h+arg_0] +
mov [esi+10h] ebp +
mov [esi+18h] eax +
mov eax [esp+18h+var_8] +
pop ebp  +
mov [esi+8] ebx +
mov [esi+1Ch] eax +
mov eax [esp+14h+var_4] +
pop ebx  +
mov [esi+20h] eax +
xor eax eax +
pop edi  +
pop esi  +
add esp 8 +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
add esp 8 +
retn   +
***
cmp dword ptr [eax] 0 +
jnz loc_43ACDE  +
call sub_4583E0  +
push 2  +
mov esi eax +
call sub_4975B1  +
add esp 4 +
mov [esi] eax +
mov esi [esp+arg_4] +
call sub_4583E0  +
lea ecx [esp+arg_8] +
push ecx  +
push 0  +
push esi  +
push dword ptr [eax]  +
call sub_41E490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_49A75C  +
add esp 18h +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
xor edx edx +
push ebx  +
xor ebx ebx +
mov [esp+0Ch+var_4] edx +
mov [esp+0Ch+var_8] ebx +
push esi  +
test eax eax +
jz loc_43AD59  +
mov ebx [eax+24h] +
mov [esp+10h+var_8] ebx +
test ebx ebx +
jz loc_43AD50  +
cmp [ebx+4] edx +
jnz loc_43AD50  +
mov ecx [eax+28h] +
cmp ecx 1 +
jle loc_43AD50  +
mov eax [eax+30h] +
mov [esp+10h+var_4] ebx +
mov ebx [eax+ecx*4-8] +
mov [esp+10h+var_8] ebx +
push ebx  +
call sub_43AFA0  +
add esp 4 +
push ebp  +
push edi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aError  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push 96h  +
or ebp 0FFFFFFFFh +
call off_4EE2E8  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_43ADF0  +
mov esi 96h +
call sub_41E490  +
mov ebx eax +
lea eax [esp+18h+arg_8] +
push eax  +
mov eax [ebx] +
push 0  +
push [esp+20h+arg_4]  +
or eax 2 +
push esi  +
push edi  +
push dword ptr [ebx+4]  +
push eax  +
call sub_49A7FA  +
add esp 1Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
cmp eax ecx +
jle loc_43ADD0  +
cmp eax esi +
jge loc_43ADCB  +
cmp ebp eax +
jz loc_43ADEC  +
mov ebp eax +
inc esi  +
add esi eax +
jmp loc_43ADD3  +
add esi 64h +
push esi  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43ADEC  +
mov edi eax +
cmp esi 0FA00h +
jl loc_43AD95  +
mov ebx [esp+18h+var_8] +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push edi  +
push offset unk_4BC790  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
test edi edi +
jz loc_43AE19  +
push edi  +
call off_4EE2F4  +
add esp 4 +
cmp [esp+18h+arg_0] 0 +
pop edi  +
pop ebp  +
jz loc_43AE79  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push ebx  +
call loc_43AE80  +
mov ebx [esp+1Ch+var_4] +
add esp 0Ch +
test ebx ebx +
jz loc_43AE79  +
push ebx  +
call sub_43AFA0  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset asc_4BECCC  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push ebx  +
call loc_43AE80  +
add esp 18h +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 5Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+58h] eax +
push ebx  +
mov ebx [esp+68h] +
push ebp  +
mov ebp [esp+70h] +
push esi  +
mov esi [esp+6Ch] +
mov [esp+0Ch] ebx +
test esi esi +
jz loc_43AF88  +
push edi  +
mov edi [esi+10h] +
test edi edi +
jz loc_43AF87  +
cmp byte ptr [edi] 0 +
jz loc_43AF87  +
mov esi [esi+0Ch] +
mov eax edi +
cmp eax esi +
jbe loc_43AED8  +
mov cl [eax] +
cmp cl 0Ah +
jz loc_43AED3  +
cmp cl 0Dh +
jnz loc_43AED8  +
dec eax  +
cmp eax esi +
ja loc_43AEC7  +
xor ecx ecx +
push ebp  +
call ebx  +
add esp 0Ch +
lea ecx [esp+14h] +
xor edx edx +
test edi edi +
jz loc_43AF72  +
mov eax edx +
inc edx  +
cmp eax 4Fh +
jnb loc_43AF72  +
mov al [ecx] +
test al al +
jz loc_43AF72  +
cmp al 9 +
jz loc_43AF6D  +
mov byte ptr [ecx] 20h +
inc ecx  +
cmp edx edi +
jb loc_43AF58  +
lea eax [esp+14h] +
mov word ptr [ecx] 5Eh +
push eax  +
push offset aS  +
push ebp  +
call ebx  +
add esp 0Ch +
pop edi  +
mov ecx [esp+64h] +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 5Ch +
retn   +
***
test edi edi +
jz loc_43AFF1  +
cmp dword ptr [edi+4] 0 +
push esi  +
jz loc_43AFD3  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push dword ptr [edi+4]  +
push offset aSD_0  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
pop edi  +
retn   +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+1Ch]  +
push offset aEntityLineD  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
pop edi  +
retn   +
***
push ecx  +
push ebp  +
push esi  +
push dword ptr [esp+14h]  +
xor ebp ebp +
mov [esp+0Ch] ebp +
call sub_44E660  +
add esp 4 +
cmp eax 1 +
jle loc_43B085  +
mov ecx [esp+14h] +
cmp byte ptr [eax+ecx-2] 3Ah +
jz loc_43B085  +
mov eax [esp+10h] +
test eax eax +
jz loc_43B05F  +
mov ebp [eax+24h] +
mov [esp+8] ebp +
cmp dword ptr [ebp+4] 0 +
jnz loc_43B04D  +
mov ecx [eax+28h] +
cmp ecx 1 +
jle loc_43B04D  +
mov eax [eax+30h] +
mov ebp [eax+ecx*4-8] +
mov [esp+8] ebp +
cmp dword_4F2470 0 +
jnz loc_43B05F  +
push ebp  +
call sub_43AFA0  +
add esp 4 +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aValidityError  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
mov dword_4F2470 0 +
jmp loc_43B08F  +
mov dword_4F2470 1 +
push ebx  +
push edi  +
push 96h  +
or ebx 0FFFFFFFFh +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_43B110  +
mov esi 96h +
call sub_41E490  +
mov ebp eax +
lea eax [esp+20h] +
push eax  +
mov eax [ebp+0] +
push 0  +
push dword ptr [esp+24h]  +
or eax 2 +
push esi  +
push edi  +
push dword ptr [ebp+4]  +
push eax  +
call sub_49A7FA  +
add esp 1Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
cmp eax ecx +
jle loc_43B0F0  +
cmp eax esi +
jge loc_43B0EB  +
cmp ebx eax +
jz loc_43B10C  +
mov ebx eax +
inc esi  +
add esi eax +
jmp loc_43B0F3  +
add esi 64h +
push esi  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43B10C  +
mov edi eax +
cmp esi 0FA00h +
jl loc_43B0B4  +
mov ebp [esp+10h] +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push edi  +
push offset unk_4BC790  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
test edi edi +
jz loc_43B139  +
push edi  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esp+18h] 0 +
pop edi  +
pop ebx  +
jz loc_43B15F  +
test ebp ebp +
jz loc_43B15F  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push ebp  +
call loc_43AE80  +
add esp 0Ch +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
***
push ecx  +
push ebp  +
push esi  +
push edi  +
push dword ptr [esp+18h]  +
mov dword ptr [esp+10h] 0 +
call sub_44E660  +
mov ebp [esp+18h] +
add esp 4 +
test ebp ebp +
jz loc_43B1C8  +
test eax eax +
jz loc_43B1C8  +
mov ecx [esp+18h] +
cmp byte ptr [eax+ecx-1] 3Ah +
jz loc_43B1C8  +
mov eax [ebp+24h] +
mov [esp+0Ch] eax +
cmp dword ptr [eax+4] 0 +
jnz loc_43B1BF  +
mov ecx [ebp+28h] +
cmp ecx 1 +
jle loc_43B1BF  +
mov eax [ebp+30h] +
mov eax [eax+ecx*4-8] +
mov [esp+0Ch] eax +
push eax  +
call sub_43AFA0  +
add esp 4 +
push ebx  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aValidityWarnin  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push 96h  +
or ebx 0FFFFFFFFh +
call off_4EE2E8  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_43B25F  +
mov esi 96h +
call sub_41E490  +
mov ebp eax +
lea eax [esp+20h] +
push eax  +
mov eax [ebp+0] +
push 0  +
push dword ptr [esp+24h]  +
or eax 2 +
push esi  +
push edi  +
push dword ptr [ebp+4]  +
push eax  +
call sub_49A7FA  +
add esp 1Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
cmp eax ecx +
jle loc_43B23F  +
cmp eax esi +
jge loc_43B23A  +
cmp ebx eax +
jz loc_43B25B  +
mov ebx eax +
inc esi  +
add esi eax +
jmp loc_43B242  +
add esi 64h +
push esi  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43B25B  +
mov edi eax +
cmp esi 0FA00h +
jl loc_43B203  +
mov ebp [esp+18h] +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push edi  +
push offset unk_4BC790  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop ebx  +
test edi edi +
jz loc_43B289  +
push edi  +
call off_4EE2F4  +
add esp 4 +
test ebp ebp +
jz loc_43B2A9  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push dword ptr [esp+14h]  +
call loc_43AE80  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
xor edx edx +
push ebx  +
xor ebx ebx +
mov [esp+0Ch+var_4] edx +
mov [esp+0Ch+var_8] ebx +
push esi  +
test eax eax +
jz loc_43B2F9  +
mov ebx [eax+24h] +
mov [esp+10h+var_8] ebx +
test ebx ebx +
jz loc_43B2F0  +
cmp [ebx+4] edx +
jnz loc_43B2F0  +
mov ecx [eax+28h] +
cmp ecx 1 +
jle loc_43B2F0  +
mov eax [eax+30h] +
mov [esp+10h+var_4] ebx +
mov ebx [eax+ecx*4-8] +
mov [esp+10h+var_8] ebx +
push ebx  +
call sub_43AFA0  +
add esp 4 +
push ebp  +
push edi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aWarning  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push 96h  +
or ebp 0FFFFFFFFh +
call off_4EE2E8  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_43B390  +
mov esi 96h +
call sub_41E490  +
mov ebx eax +
lea eax [esp+18h+arg_8] +
push eax  +
mov eax [ebx] +
push 0  +
push [esp+20h+arg_4]  +
or eax 2 +
push esi  +
push edi  +
push dword ptr [ebx+4]  +
push eax  +
call sub_49A7FA  +
add esp 1Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
cmp eax ecx +
jle loc_43B370  +
cmp eax esi +
jge loc_43B36B  +
cmp ebp eax +
jz loc_43B38C  +
mov ebp eax +
inc esi  +
add esi eax +
jmp loc_43B373  +
add esi 64h +
push esi  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_43B38C  +
mov edi eax +
cmp esi 0FA00h +
jl loc_43B335  +
mov ebx [esp+18h+var_8] +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push edi  +
push offset unk_4BC790  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
test edi edi +
jz loc_43B3B9  +
push edi  +
call off_4EE2F4  +
add esp 4 +
cmp [esp+18h+arg_0] 0 +
pop edi  +
pop ebp  +
jz loc_43B419  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push ebx  +
call loc_43AE80  +
mov ebx [esp+1Ch+var_4] +
add esp 0Ch +
test ebx ebx +
jz loc_43B419  +
push ebx  +
call sub_43AFA0  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset asc_4BECCC  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
call sub_4583E0  +
mov esi eax +
call sub_4583C0  +
push dword ptr [esi]  +
push dword ptr [eax]  +
push ebx  +
call loc_43AE80  +
add esp 18h +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 0B8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0B4h] eax +
mov eax [esp+0C0h] +
xor edx edx +
mov ecx [esp+0C4h] +
push ebx  +
mov ebx [esp+0D0h] +
push esi  +
mov esi [esp+0D0h] +
push edi  +
mov edi [esp+0C8h] +
mov [esp+1Ch] eax +
xor eax eax +
mov [esp+10h] ecx +
mov [esp+18h] eax +
mov [esp+14h] eax +
mov [esp+0Ch] edx +
test edi edi +
jz loc_43B765  +
test esi esi +
jnz loc_43B48C  +
call sub_4583C0  +
mov esi [eax] +
call sub_4583E0  +
mov ebx [eax] +
cmp dword ptr [edi+4] 0 +
mov eax [edi+0Ch] +
mov edx [edi+14h] +
mov ecx [edi+10h] +
push ebp  +
mov ebp [edi] +
mov [esp+28h] eax +
mov eax [edi+30h] +
mov [esp+24h] edx +
jz loc_43B764  +
test eax eax +
jz loc_43B4BE  +
cmp dword ptr [eax+4] 1 +
jnz loc_43B4BE  +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+20h] +
test eax eax +
jz loc_43B51F  +
mov edx [eax+24h] +
mov [esp+18h] edx +
test edx edx +
jz loc_43B560  +
cmp dword ptr [edx+4] 0 +
jnz loc_43B4F2  +
mov ecx [eax+28h] +
cmp ecx 1 +
jle loc_43B4F2  +
mov eax [eax+30h] +
mov [esp+10h] edx +
mov edx [eax+ecx*4-8] +
mov [esp+18h] edx +
test edx edx +
jz loc_43B560  +
mov eax [edx+4] +
test eax eax +
jz loc_43B50E  +
push dword ptr [edx+1Ch]  +
push eax  +
push offset aSD_0  +
push ebx  +
call esi  +
add esp 10h +
jmp loc_43B560  +
cmp dword ptr [esp+24h] 0 +
jz loc_43B560  +
cmp ebp 1 +
jnz loc_43B560  +
push dword ptr [edx+1Ch]  +
jmp loc_43B555  +
test ecx ecx +
jz loc_43B532  +
push edx  +
push ecx  +
push offset aSD_0  +
push ebx  +
call esi  +
add esp 10h +
jmp loc_43B560  +
test edx edx +
jz loc_43B560  +
cmp ebp 1 +
jz loc_43B554  +
cmp ebp 11h +
jz loc_43B554  +
cmp ebp 10h +
jz loc_43B554  +
cmp ebp 4 +
jz loc_43B554  +
cmp ebp 12h +
jz loc_43B554  +
cmp ebp 13h +
jnz loc_43B560  +
push edx  +
push offset aEntityLineD  +
push ebx  +
call esi  +
add esp 0Ch +
mov eax [esp+1Ch] +
test eax eax +
jz loc_43B574  +
push eax  +
push offset aElementS  +
push ebx  +
call esi  +
add esp 0Ch +
lea eax [ebp-1] +
cmp eax 1Dh +
ja loc_43B62E  +
jmp ds:off_43B784[eax*4]  +
push offset aParser  +
jmp loc_43B628  +
push offset aNamespace  +
jmp loc_43B628  +
push offset aValidity  +
jmp loc_43B628  +
push offset aHtmlParser  +
jmp loc_43B628  +
push offset aMemory  +
jmp loc_43B628  +
push offset aOutput  +
jmp loc_43B628  +
push offset aIO  +
jmp loc_43B628  +
push offset aXinclude  +
jmp loc_43B628  +
push offset aXpath  +
jmp loc_43B628  +
push offset aRegexp  +
jmp loc_43B628  +
push offset aModule  +
jmp loc_43B628  +
push offset aSchemasValidit  +
jmp loc_43B628  +
push offset aSchemasParser  +
jmp loc_43B628  +
push offset aRelaxNgParser  +
jmp loc_43B628  +
push offset aRelaxNgValidit  +
jmp loc_43B628  +
push offset aCatalog_0  +
jmp loc_43B628  +
push offset aC14n  +
jmp loc_43B628  +
push offset aXslt  +
jmp loc_43B628  +
push offset aEncoding  +
jmp loc_43B628  +
push offset aSchematron  +
jmp loc_43B628  +
push offset aInternalBuffer  +
jmp loc_43B628  +
push offset aUri  +
push ebx  +
call esi  +
add esp 8 +
mov eax [esp+28h] +
cmp eax 3 +
ja loc_43B657  +
jmp ds:off_43B7FC[eax*4]  +
push offset asc_4DF184  +
jmp loc_43B651  +
push offset aWarning_0  +
jmp loc_43B651  +
push offset aError_0  +
push ebx  +
call esi  +
add esp 8 +
mov eax [esp+14h] +
test eax eax +
jz loc_43B682  +
push eax  +
call sub_44E660  +
mov ecx [esp+18h] +
add esp 4 +
test eax eax +
jle loc_43B67A  +
cmp byte ptr [ecx+eax-1] 0Ah +
jz loc_43B67A  +
push ecx  +
jmp loc_43B687  +
push ecx  +
push offset unk_4BC790  +
jmp loc_43B68C  +
push offset aOutOfMemoryErr  +
push offset aS  +
push ebx  +
call esi  +
mov eax [esp+2Ch] +
add esp 0Ch +
test eax eax +
jz loc_43B6F1  +
push ebx  +
push esi  +
push dword ptr [esp+20h]  +
call loc_43AE80  +
mov ecx [esp+1Ch] +
add esp 0Ch +
test ecx ecx +
jz loc_43B6F1  +
mov eax [ecx+4] +
test eax eax +
jz loc_43B6C8  +
push dword ptr [ecx+1Ch]  +
push eax  +
push offset aSD_1  +
push ebx  +
call esi  +
add esp 10h +
jmp loc_43B6E2  +
cmp dword ptr [esp+24h] 0 +
jz loc_43B6E6  +
cmp ebp 1 +
jnz loc_43B6E6  +
push dword ptr [ecx+1Ch]  +
push offset aEntityLineD_0  +
push ebx  +
call esi  +
add esp 0Ch +
mov ecx [esp+10h] +
push ebx  +
push esi  +
push ecx  +
call loc_43AE80  +
add esp 0Ch +
cmp ebp 0Ch +
jnz loc_43B764  +
mov eax [edi+18h] +
test eax eax +
jz loc_43B764  +
cmp dword ptr [edi+24h] 64h +
jge loc_43B764  +
push eax  +
call sub_44E660  +
add esp 4 +
cmp [edi+24h] eax +
jge loc_43B764  +
push dword ptr [edi+18h]  +
push offset aS  +
push ebx  +
call esi  +
mov ecx [edi+24h] +
add esp 0Ch +
xor ebp ebp +
test ecx ecx +
jle loc_43B741  +
mov ebp ecx +
lea edi [esp+2Ch] +
mov edx ecx +
mov eax 20202020h +
shr ecx 2 +
stos   +
mov ecx edx +
and ecx 3 +
stos   +
mov byte ptr [esp+ebp+2Ch] 5Eh +
inc ebp  +
cmp ebp 96h +
jnb loc_43B77D  +
lea eax [esp+2Ch] +
mov byte ptr [esp+ebp+2Ch] 0 +
push eax  +
push offset aS  +
push ebx  +
call esi  +
add esp 0Ch +
pop ebp  +
mov ecx [esp+0C0h] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 0B8h +
retn   +
***
call sub_48927F  +
nop   +
test esi esi +
jz loc_43B888  +
cmp dword ptr [esi+4] 0 +
jz loc_43B888  +
mov eax [esi+8] +
test eax eax +
jz loc_43B830  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_43B841  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_43B852  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_43B863  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_43B874  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push 34h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
mov esi [esp+arg_4] +
mov [eax] ecx +
call sub_4583C0  +
test esi esi +
jz loc_43B8AD  +
mov [eax] esi +
pop esi  +
retn   +
mov dword ptr [eax] offset sub_43ACC0 +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax ecx +
mov edx [esp+arg_4] +
or eax edx +
jnz loc_43B8D4  +
mov eax 40h +
retn   +
xor eax eax +
test edx edx +
ja loc_43B8EA  +
jb loc_43B8E1  +
cmp ecx 0FFFFFFFFh +
ja loc_43B8EA  +
mov edx ecx +
mov eax 20h +
xor ecx ecx +
cmp edx 0FFFFh +
ja loc_43B903  +
jb loc_43B8F9  +
cmp ecx 0FFFFFFFFh +
ja loc_43B903  +
shld edx ecx +
add eax 10h +
shl ecx 10h +
cmp edx 0FFFFFFh +
ja loc_43B91C  +
jb loc_43B912  +
cmp ecx 0FFFFFFFFh +
ja loc_43B91C  +
shld edx ecx +
add eax 8 +
shl ecx 8 +
cmp edx 0FFFFFFFh +
ja loc_43B935  +
jb loc_43B92B  +
cmp ecx 0FFFFFFFFh +
ja loc_43B935  +
shld edx ecx +
add eax 4 +
shl ecx 4 +
cmp edx 3FFFFFFFh +
ja loc_43B94E  +
jb loc_43B944  +
cmp ecx 0FFFFFFFFh +
ja loc_43B94E  +
shld edx ecx +
add eax 2 +
shl ecx 2 +
cmp edx 7FFFFFFFh +
ja locret_43B95E  +
jb loc_43B95D  +
cmp ecx 0FFFFFFFFh +
ja locret_43B95E  +
inc eax  +
retn   +
***
push dword ptr [esp+4+arg_0]  +
call sub_43B8C0  +
movq xmm1 [esp+8+arg_0] +
add esp 8 +
mov ecx 40h +
mov edx 6 +
sub ecx eax +
cmp ecx edx +
cmovg edx ecx +
xor ecx ecx +
xor eax eax +
sub edx 6 +
bts ecx edx +
cmp edx 20h +
cmovnb eax ecx +
xor ecx eax +
movd xmm0 edx +
cmp edx 40h +
psrlq xmm1 xmm0 +
cmovnb eax ecx +
add ecx 0FFFFFFFFh +
movd ebx xmm1 +
adc eax 0FFFFFFFFh +
and ecx dword ptr [esp+arg_0] +
and eax dword ptr [esp+arg_0+4] +
or ecx eax +
lea eax [ebx+1] +
jnz loc_43B9C3  +
mov eax ebx +
pop ebx  +
retn   +
***
sub esp 10h +
mov eax [esp+1Ch] +
xor ecx ecx +
push ebx  +
mov ebx [esp+1Ch] +
dec eax  +
push ebp  +
mov ebp [esp+1Ch] +
xorps xmm0 xmm0 +
push esi  +
push edi  +
mov esi eax +
movlpd oword ptr [esp+18h] xmm0 +
push dword ptr [ebp+0]  +
mov edi ecx +
mov [esp+30h] eax +
shrd esi edi +
push ebx  +
mov [esp+18h] ecx +
sar edi 1 +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BB2F  +
neg eax  +
js loc_43BB2F  +
push dword ptr [ebp+0]  +
push ebx  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BA66  +
neg eax  +
jnz loc_43BA66  +
mov esi 1 +
xor edi edi +
mov eax [ebp+esi*4+0] +
mov ebx [esp+1Ch] +
mov ebp [esp+18h] +
push eax  +
push dword ptr [esp+2Ch]  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BAB3  +
neg eax  +
js loc_43BAB3  +
test eax eax +
jle loc_43BB01  +
mov ecx [esp+2Ch] +
mov eax [esp+10h] +
sub ecx esi +
sbb eax edi +
mov [esp+1Ch] eax +
js loc_43BAEF  +
jg loc_43BAA5  +
cmp ecx 1 +
jbe loc_43BAEF  +
mov eax [esp+2Ch] +
mov ebp esi +
mov ecx [esp+10h] +
mov ebx edi +
jmp loc_43BAD4  +
mov ecx esi +
mov eax edi +
sub ecx ebp +
sbb eax ebx +
mov [esp+1Ch] eax +
js loc_43BAF5  +
jg loc_43BAC8  +
cmp ecx 1 +
jbe loc_43BAF5  +
mov eax esi +
mov ecx edi +
mov [esp+2Ch] eax +
mov [esp+10h] ecx +
mov esi eax +
mov edi ecx +
mov eax [esp+24h] +
sub esi ebp +
sbb edi ebx +
shrd esi edi +
sar edi 1 +
add esi ebp +
adc edi ebx +
mov eax [eax+esi*4] +
jmp loc_43BA72  +
***
add esi 1 +
adc edi 0 +
mov edx edi +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov eax [esp+24h] +
add esi 1 +
adc edi 0 +
push dword ptr [eax+esi*4]  +
push dword ptr [esp+2Ch]  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BAF5  +
neg eax  +
jz loc_43BB01  +
mov edx edi +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
xor edx edx +
pop ebx  +
add esp 10h +
retn   +
***
mov ebx [esp+8+arg_4] +
push esi  +
xor esi esi +
mov [esp+0Ch+arg_4] esi +
jg loc_43BBDE  +
jl loc_43BB5F  +
cmp ebx [esp+0Ch+arg_8] +
jnb loc_43BBDE  +
push ebp  +
mov ebp [esp+10h+arg_0] +
push edi  +
mov edi [ebp+ebx*4+0] +
push edi  +
push dword ptr [ebp+ebx*4-4]  +
mov [esp+1Ch+var_4] edi +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BBC8  +
neg eax  +
test eax eax +
jle loc_43BBC8  +
push ebx  +
push edi  +
push ebp  +
call loc_43B9D0  +
add esp 0Ch +
mov ecx ebx +
sub ecx 1 +
mov edi eax +
sbb esi 0 +
cmp esi edx +
jl loc_43BBBC  +
jg loc_43BBA4  +
cmp ecx edi +
jb loc_43BBBC  +
mov eax [ebp+ecx*4+0] +
mov [ebp+ecx*4+4] eax +
add ecx 0FFFFFFFFh +
adc esi 0FFFFFFFFh +
cmp esi edx +
jg loc_43BBA4  +
jl loc_43BBBC  +
cmp ecx edi +
jnb loc_43BBA4  +
mov eax [esp+14h+var_4] +
mov esi [esp+14h+arg_4] +
mov [ebp+edi*4+0] eax +
add ebx 1 +
adc esi 0 +
mov [esp+14h+arg_4] esi +
js loc_43BB65  +
jg loc_43BBDC  +
cmp ebx [esp+14h+arg_8] +
jb loc_43BB65  +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov ecx [esp+arg_4] +
cmp ecx 2 +
jge loc_43BBFF  +
mov eax 1 +
retn   +
jnz loc_43BC1A  +
mov ecx [esp+arg_0] +
mov eax [ecx+0Ch] +
cmp eax [ecx+1Ch] +
jg loc_43BBF9  +
jl loc_43BC17  +
mov eax [ecx+8] +
cmp eax [ecx+18h] +
ja loc_43BBF9  +
xor eax eax +
retn   +
shl ecx 4 +
add ecx [esp+arg_0] +
push ebp  +
push edi  +
mov edi [ecx-8] +
mov edx edi +
add edx [ecx-18h] +
mov ebp [ecx-4] +
mov eax ebp +
adc eax [ecx-14h] +
cmp [ecx-24h] eax +
jl loc_43BC53  +
jg loc_43BC3F  +
cmp [ecx-28h] edx +
jbe loc_43BC53  +
cmp [ecx-14h] ebp +
jl loc_43BC53  +
jg loc_43BC4B  +
cmp [ecx-18h] edi +
jbe loc_43BC53  +
pop edi  +
mov eax 1 +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
***
mov edx [esp+8] +
push ebx  +
mov ebx [esp+14h] +
mov eax ebx +
push ebp  +
xor ebp ebp +
sub eax edx +
push edi  +
mov edi [esp+18h] +
mov ecx ebp +
sbb ecx edi +
cmp eax 1 +
jnz loc_43BC88  +
test ecx ecx +
jnz loc_43BC88  +
pop edi  +
pop ebp  +
xor edx edx +
pop ebx  +
retn   +
***
mov ecx ebx +
mov eax ebp +
sub ecx 2 +
push esi  +
sbb eax 0 +
cmp edi eax +
jl loc_43BCD6  +
jg loc_43BC9D  +
cmp edx ecx +
jb loc_43BCD6  +
mov eax [esp+14h] +
mov edi [eax+ebx*4-4] +
lea esi [eax+ebx*4] +
mov ebp [eax+ebx*4-8] +
lea ebx [eax+ebx*4] +
push edi  +
push ebp  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BCCA  +
neg eax  +
test eax eax +
jle loc_43BCCA  +
mov [ebx-8] edi +
mov [esi-4] ebp +
pop esi  +
pop edi  +
pop ebp  +
mov eax 2 +
xor edx edx +
pop ebx  +
retn   +
***
mov eax [esp+14h] +
mov esi edx +
add esi 2 +
adc edi ebp +
push dword ptr [eax+edx*4+4]  +
push dword ptr [eax+edx*4]  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BD6B  +
neg eax  +
test eax eax +
jle loc_43BD6B  +
sub ebx 1 +
sbb ebp ebp +
cmp esi ebx +
jnz loc_43BD10  +
cmp edi ebp +
jz loc_43BD3C  +
mov eax [esp+14h] +
push dword ptr [eax+esi*4]  +
push dword ptr [eax+esi*4-4]  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BD3C  +
neg eax  +
test eax eax +
jle loc_43BD3C  +
add esi 1 +
adc edi 0 +
cmp esi ebx +
jnz loc_43BD10  +
cmp edi ebp +
jnz loc_43BD10  +
mov ebp [esp+1Ch] +
mov ecx esi +
mov ebx [esp+18h] +
sub ecx 1 +
mov eax edi +
sbb eax 0 +
push eax  +
push ecx  +
push ebp  +
push ebx  +
push dword ptr [esp+24h]  +
call sub_43BDC0  +
add esp 14h +
sub esi ebx +
mov eax esi +
sbb edi ebp +
mov edx edi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
sub ebx 1 +
sbb ebp ebp +
cmp esi ebx +
jnz loc_43BD80  +
cmp edi ebp +
jz loc_43BDAC  +
mov eax [esp+14h] +
push dword ptr [eax+esi*4]  +
push dword ptr [eax+esi*4-4]  +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43BD9E  +
neg eax  +
test eax eax +
jg loc_43BDAC  +
add esi 1 +
adc edi 0 +
cmp esi ebx +
jnz loc_43BD80  +
cmp edi ebp +
jnz loc_43BD80  +
sub esi [esp+18h] +
mov eax esi +
sbb edi [esp+1Ch] +
pop esi  +
mov edx edi +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
push edi  +
mov edi [esp+4+arg_8] +
cmp edi ebx +
jg loc_43BE0A  +
mov edx [esp+4+arg_C] +
push esi  +
mov esi [esp+8+arg_4] +
jl loc_43BDDD  +
cmp esi edx +
jnb loc_43BE09  +
push ebp  +
mov ebp [esp+0Ch+arg_0] +
mov ecx [ebp+esi*4+0] +
mov eax [ebp+edx*4+0] +
mov [ebp+esi*4+0] eax +
add esi 1 +
mov [ebp+edx*4+0] ecx +
adc edi 0 +
add edx 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
cmp edi ebx +
jl loc_43BDE2  +
jg loc_43BE08  +
cmp esi edx +
jb loc_43BDE2  +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
sub esp 830h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+830h+var_4] eax +
push ebx  +
mov ebx [esp+834h+arg_0] +
push edi  +
mov edi [esp+838h+arg_4] +
cmp edi 40h +
jnb loc_43BE5C  +
push edi  +
push 1  +
push ebx  +
call sub_43BB40  +
add esp 0Ch +
pop edi  +
pop ebx  +
mov ecx [esp+830h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 830h +
retn   +
push ebp  +
push esi  +
push 0  +
push edi  +
call sub_43B960  +
push edi  +
push 0  +
push 0  +
push ebx  +
mov esi eax +
mov [esp+858h+var_818] 0 +
mov [esp+858h+var_814] 0 +
call loc_43BC60  +
mov ebp eax +
mov [esp+858h+var_82C] edx +
mov eax esi +
add esp 18h +
cdq   +
mov ecx edx +
mov [esp+840h+var_81C] eax +
mov [esp+840h+var_810] ecx +
mov [esp+840h+var_828] eax +
mov [esp+840h+var_824] ecx +
test ecx ecx +
jl loc_43BEB7  +
jg loc_43BEAB  +
cmp eax edi +
jbe loc_43BEB7  +
mov eax edi +
xor ecx ecx +
mov [esp+840h+var_828] eax +
mov [esp+840h+var_824] ecx +
mov esi [esp+840h+var_82C] +
cmp ecx esi +
jl loc_43BED8  +
jg loc_43BEC5  +
cmp eax ebp +
jbe loc_43BED8  +
push eax  +
push ebp  +
push ebx  +
call sub_43BB40  +
mov ebp [esp+84Ch+var_828] +
add esp 0Ch +
mov esi [esp+840h+var_824] +
mov [esp+840h+var_7FC] ebp +
xorps xmm0 xmm0 +
movlpd oword ptr [esp+3Ch] xmm0 +
mov [esp+840h+var_7F8] esi +
cmp ebp edi +
jnz loc_43BEF5  +
test esi esi +
jz loc_43C1DE  +
push edi  +
push esi  +
push ebp  +
push ebx  +
call loc_43BC60  +
mov [esp+850h+var_830] edi +
add esp 10h +
sub [esp+840h+var_830] ebp +
mov ecx eax +
mov eax [esp+840h+var_81C] +
mov edi 0 +
sbb edi esi +
mov [esp+840h+var_828] eax +
mov eax [esp+840h+var_810] +
cmp eax edi +
mov [esp+840h+var_82C] eax +
mov eax [esp+840h+var_81C] +
mov [esp+840h+var_820] edi +
mov edi [esp+840h+arg_4] +
jl loc_43BF54  +
jg loc_43BF3D  +
cmp eax [esp+840h+var_830] +
jbe loc_43BF54  +
mov edi [esp+840h+var_820] +
mov eax [esp+840h+var_830] +
mov [esp+840h+var_82C] edi +
mov edi [esp+840h+arg_4] +
mov [esp+840h+var_828] eax +
cmp [esp+840h+var_82C] edx +
jl loc_43BF76  +
jg loc_43BF60  +
cmp eax ecx +
jbe loc_43BF76  +
push eax  +
push ecx  +
lea eax [ebx+ebp*4] +
push eax  +
call sub_43BB40  +
mov ecx [esp+84Ch+var_828] +
add esp 0Ch +
mov edx [esp+840h+var_82C] +
mov [esp+840h+var_7F4] ebp +
add ebp ecx +
mov [esp+840h+var_7F0] esi +
adc esi edx +
mov [esp+840h+var_7EC] ecx +
mov [esp+840h+var_7E8] edx +
mov [esp+840h+var_82C] esi +
cmp ebp edi +
jnz loc_43BFB0  +
test esi esi +
jnz loc_43BFB0  +
lea eax [esp+840h+var_818] +
push eax  +
push 2  +
lea eax [esp+848h+var_804] +
push eax  +
push ebx  +
call loc_43C3D0  +
add esp 10h +
jmp loc_43C1CD  +
push edi  +
push esi  +
push ebp  +
push ebx  +
call loc_43BC60  +
mov [esp+850h+var_830] edi +
add esp 10h +
sub [esp+840h+var_830] ebp +
mov ecx eax +
mov eax [esp+840h+var_81C] +
mov edi 0 +
sbb edi esi +
mov [esp+840h+var_828] eax +
mov eax [esp+840h+var_810] +
cmp eax edi +
mov [esp+840h+var_824] eax +
mov eax [esp+840h+var_81C] +
mov [esp+840h+var_820] edi +
mov edi [esp+840h+arg_4] +
jl loc_43C00F  +
jg loc_43BFF8  +
cmp eax [esp+840h+var_830] +
jbe loc_43C00F  +
mov edi [esp+840h+var_820] +
mov eax [esp+840h+var_830] +
mov [esp+840h+var_824] edi +
mov edi [esp+840h+arg_4] +
mov [esp+840h+var_828] eax +
cmp [esp+840h+var_824] edx +
jl loc_43C031  +
jg loc_43C01B  +
cmp eax ecx +
jbe loc_43C031  +
push eax  +
push ecx  +
lea eax [ebx+ebp*4] +
push eax  +
call sub_43BB40  +
mov ecx [esp+84Ch+var_828] +
add esp 0Ch +
mov edx [esp+840h+var_824] +
mov eax [esp+840h+var_82C] +
mov [esp+840h+var_7E4] ebp +
add ebp ecx +
mov [esp+840h+var_7E0] esi +
mov esi 3 +
adc eax edx +
mov [esp+840h+var_7DC] ecx +
mov [esp+840h+var_7D8] edx +
mov [esp+840h+var_82C] eax +
cmp ebp edi +
jnz loc_43C090  +
test eax eax +
jnz loc_43C090  +
lea edi [esp+840h+var_7EC] +
nop   +
lea eax [esp+840h+var_818] +
push eax  +
push esi  +
lea eax [esp+848h+var_804] +
push eax  +
push ebx  +
call loc_43C3D0  +
mov eax [edi+10h] +
add esp 10h +
add [edi] eax +
mov eax [edi+14h] +
adc [edi+4] eax +
dec esi  +
lea edi [edi-10h] +
cmp esi 1 +
jg loc_43C060  +
jmp loc_43C1CD  +
lea eax [esp+840h+var_804] +
push esi  +
push eax  +
call sub_43BBF0  +
add esp 8 +
test eax eax +
jnz loc_43C0C8  +
push edi  +
lea eax [esp+844h+var_818] +
push eax  +
push esi  +
lea eax [esp+84Ch+var_804] +
push eax  +
push ebx  +
call sub_43C200  +
mov esi eax +
lea eax [esp+854h+var_804] +
push esi  +
push eax  +
call sub_43BBF0  +
add esp 1Ch +
test eax eax +
jz loc_43C0A2  +
mov edx [esp+840h+var_82C] +
push edi  +
push edx  +
push ebp  +
push ebx  +
call loc_43BC60  +
add esp 10h +
mov [esp+840h+var_824] 0 +
mov ecx edi +
mov [esp+840h+var_828] edx +
mov edx [esp+840h+var_810] +
sub ecx ebp +
mov [esp+840h+var_80C] ecx +
mov ecx [esp+840h+var_82C] +
sbb [esp+840h+var_824] ecx +
mov [esp+840h+var_830] eax +
mov eax [esp+840h+var_81C] +
mov [esp+840h+var_808] eax +
mov [esp+840h+var_820] edx +
cmp edx [esp+840h+var_824] +
jl loc_43C126  +
jg loc_43C116  +
cmp eax [esp+840h+var_80C] +
jbe loc_43C126  +
mov eax [esp+840h+var_80C] +
mov edx [esp+840h+var_824] +
mov [esp+840h+var_808] eax +
mov [esp+840h+var_820] edx +
cmp edx [esp+840h+var_828] +
mov edx [esp+840h+var_830] +
jl loc_43C15C  +
jg loc_43C136  +
cmp eax edx +
jbe loc_43C15C  +
push eax  +
push edx  +
lea eax [ebx+ebp*4] +
push eax  +
call sub_43BB40  +
mov eax [esp+84Ch+var_808] +
add esp 0Ch +
mov ecx [esp+840h+var_82C] +
mov [esp+840h+var_830] eax +
mov eax [esp+840h+var_820] +
mov edx [esp+840h+var_830] +
mov [esp+840h+var_828] eax +
mov edi [esp+840h+var_828] +
mov eax esi +
add eax eax +
inc esi  +
mov [esp+eax*8+840h+var_804] ebp +
add ebp edx +
mov [esp+eax*8+840h+var_800] ecx +
adc ecx edi +
mov [esp+eax*8+840h+var_7F8] edi +
mov edi [esp+840h+arg_4] +
mov [esp+eax*8+840h+var_7FC] edx +
mov [esp+840h+var_82C] ecx +
cmp ebp edi +
jnz loc_43C090  +
test ecx ecx +
jnz loc_43C090  +
cmp esi 1 +
jle loc_43C1CD  +
lea eax [esi-2] +
shl eax 4 +
lea edi [esp+840h+var_7FC] +
add edi eax +
lea eax [esp+840h+var_818] +
push eax  +
push esi  +
lea eax [esp+848h+var_804] +
push eax  +
push ebx  +
call loc_43C3D0  +
mov eax [edi+10h] +
add esp 10h +
add [edi] eax +
mov eax [edi+14h] +
adc [edi+4] eax +
dec esi  +
lea edi [edi-10h] +
cmp esi 1 +
jg loc_43C1A5  +
mov eax [esp+840h+var_814] +
test eax eax +
jz loc_43C1DE  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov ecx [esp+840h+var_4] +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 830h +
retn   +
***
sub esp 14h +
push esi  +
mov esi [esp+18h+arg_8] +
mov eax esi +
cmp esi 1 +
jle loc_43C329  +
push ebx  +
push ebp  +
mov ebp [esp+20h+arg_4] +
lea edx [esi-2] +
shl edx 4 +
add edx ebp +
shl eax 4 +
mov [esp+20h+arg_8] edx +
lea edx [ebp-10h] +
add edx eax +
lea ecx [ebp-8] +
push edi  +
mov [esp+24h+var_10] edx +
lea edi [ebp-18h] +
lea ebx [ebp-28h] +
add ecx eax +
lea edx [ebp-38h] +
mov [esp+24h+var_C] ecx +
add edi eax +
add ebx eax +
add edx eax +
mov [esp+24h+var_14] edx +
nop   +
cmp esi 2 +
jz loc_43C371  +
mov ebp [ecx] +
mov ecx [ecx+4] +
mov eax [edi] +
mov [esp+24h+var_4] ebp +
mov ebp [esp+24h+arg_4] +
mov [esp+24h+var_8] ecx +
cmp esi 4 +
jl loc_43C291  +
mov ecx eax +
mov eax [edi+4] +
add ecx [ebx] +
adc eax [ebx+4] +
cmp [edx+4] eax +
jg loc_43C28F  +
jl loc_43C286  +
cmp [edx] ecx +
ja loc_43C28F  +
mov eax [edi] +
mov ecx 1 +
jmp loc_43C293  +
mov eax [edi] +
xor ecx ecx +
mov edx [esp+24h+var_4] +
add edx eax +
mov eax [esp+24h+var_8] +
adc eax [edi+4] +
cmp [ebx+4] eax +
jl loc_43C2AF  +
jg loc_43C2AB  +
cmp [ebx] edx +
jbe loc_43C2AF  +
test ecx ecx +
jz loc_43C2B4  +
mov ecx 1 +
mov eax [esp+24h+var_8] +
cmp [edi+4] eax +
jg loc_43C2CE  +
jl loc_43C2C7  +
mov eax [esp+24h+var_4] +
cmp [edi] eax +
ja loc_43C2CE  +
mov eax 1 +
jmp loc_43C2D0  +
xor eax eax +
test ecx ecx +
jnz loc_43C32E  +
test eax eax +
jz loc_43C324  +
push [esp+24h+arg_C]  +
push esi  +
push ebp  +
push [esp+30h+arg_0]  +
call loc_43C3D0  +
mov ecx [esp+34h+var_C] +
add esp 10h +
mov eax [ecx] +
add [edi] eax +
mov eax [ecx+4] +
adc [edi+4] eax +
dec esi  +
sub [esp+24h+arg_8] 10h +
sub [esp+24h+var_10] 10h +
mov edx [esp+24h+var_14] +
sub ecx 10h +
sub edx 10h +
mov [esp+24h+var_C] ecx +
sub ebx 10h +
mov [esp+24h+var_14] edx +
sub edi 10h +
cmp esi 1 +
jg loc_43C250  +
pop edi  +
pop ebp  +
mov eax esi +
pop ebx  +
pop esi  +
add esp 14h +
retn   +
test eax eax +
jnz loc_43C2D8  +
push [esp+24h+arg_C]  +
dec esi  +
push esi  +
push ebp  +
push [esp+30h+arg_0]  +
call loc_43C3D0  +
mov eax [edi] +
add esp 10h +
add [ebx] eax +
mov eax [edi+4] +
adc [ebx+4] eax +
mov eax [esp+24h+var_10] +
mov edx [esp+24h+arg_8] +
mov ecx [esp+24h+var_C] +
movups xmm0 oword ptr [eax] +
movups oword ptr [edx] xmm0 +
sub edx 10h +
sub eax 10h +
mov [esp+24h+arg_8] edx +
mov [esp+24h+var_10] eax +
jmp loc_43C303  +
mov eax [ebp+8] +
mov ebx [ebp+18h] +
add eax ebx +
mov edi [ebp+0Ch] +
mov ecx edi +
mov edx [ebp+1Ch] +
adc ecx edx +
cmp eax [esp+24h+arg_10] +
jnz loc_43C38D  +
test ecx ecx +
jz loc_43C398  +
cmp edi edx +
jg loc_43C324  +
jl loc_43C398  +
cmp [ebp+8] ebx +
ja loc_43C324  +
push [esp+24h+arg_C]  +
push 2  +
push ebp  +
push [esp+30h+arg_0]  +
call loc_43C3D0  +
mov eax [ebp+18h] +
add esp 10h +
add [ebp+8] eax +
mov eax [ebp+1Ch] +
adc [ebp+0Ch] eax +
mov eax 1 +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
add esp 14h +
retn   +
***
sub esp 20h +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov eax ecx +
add eax eax +
push ebx  +
push ebp  +
push esi  +
mov ebx [edx+eax*8-14h] +
mov ebp [edx+eax*8-18h] +
mov [esp+34h] ebx +
mov ebx [edx+eax*8-8] +
mov eax [edx+eax*8-4] +
mov [esp+18h] eax +
lea eax [ecx-2] +
add eax eax +
mov [esp+38h] ebp +
push edi  +
mov [esp+18h] ebx +
mov esi [edx+eax*8+4] +
mov edi [edx+eax*8] +
mov eax [esp+38h] +
mov [esp+10h] esi +
cmp eax [esp+1Ch] +
jg loc_43C423  +
jl loc_43C425  +
cmp ebp ebx +
jb loc_43C425  +
mov ebp ebx +
mov ebx [esp+40h] +
cmp [ebx] ebp +
jnb loc_43C455  +
lea eax ds:0[ebp*4] +
push eax  +
push dword ptr [ebx+4]  +
mov [esp+48h] eax +
call sub_49AE6F  +
add esp 8 +
test eax eax +
jz loc_43C6FD  +
mov [ebx+4] eax +
mov eax [esp+38h] +
mov [ebx] ebp +
mov edx [ebx+4] +
mov ebx [esp+1Ch] +
mov [esp+20h] edx +
cmp eax ebx +
jg loc_43C5AB  +
jl loc_43C478  +
mov eax [esp+18h] +
cmp [esp+3Ch] eax +
jnb loc_43C5AF  +
mov eax [esp+3Ch] +
shl eax 2 +
push eax  +
lea eax ds:0[edi*4] +
add eax [esp+38h] +
push eax  +
push edx  +
call loc_48C9C0  +
mov eax [esp+48h] +
add esp 0Ch +
mov ebx edi +
mov edx esi +
add ebx eax +
mov ecx edi +
mov ebp esi +
xorps xmm0 xmm0 +
adc edx [esp+38h] +
add ecx [esp+18h] +
movlpd oword ptr [esp+28h] xmm0 +
adc ebp [esp+1Ch] +
add ecx eax +
mov [esp+14h] edx +
adc ebp [esp+38h] +
mov [esp+1Ch] ebp +
cmp esi ebp +
mov ebp [esp+34h] +
mov [esp+18h] ecx +
jg loc_43C6F5  +
jl loc_43C4E0  +
cmp edi ecx +
jnb loc_43C6F5  +
mov ecx [esp+2Ch] +
mov esi [esp+28h] +
mov [esp+40h] ecx +
cmp ecx [esp+38h] +
jg loc_43C53E  +
jl loc_43C4FC  +
cmp esi eax +
jnb loc_43C53E  +
cmp edx [esp+1Ch] +
jg loc_43C598  +
jl loc_43C512  +
cmp ebx [esp+18h] +
jnb loc_43C598  +
mov ecx [esp+20h] +
mov eax [ebp+ebx*4+0] +
push eax  +
mov ecx [ecx+esi*4] +
push ecx  +
mov [esp+30h] ecx +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43C580  +
neg eax  +
test eax eax +
jle loc_43C580  +
mov edx [esp+14h] +
mov ecx [esp+40h] +
mov eax [ebp+ebx*4+0] +
add ebx 1 +
adc edx 0 +
mov [esp+14h] edx +
mov [ebp+edi*4+0] eax +
add edi 1 +
mov eax [esp+10h] +
adc eax 0 +
cmp eax [esp+1Ch] +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
jl loc_43C4F0  +
jg loc_43C6F5  +
cmp edi [esp+18h] +
jb loc_43C4F0  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 20h +
retn   +
***
mov ecx [esp+40h] +
add esi 1 +
mov eax [esp+28h] +
mov edx [esp+14h] +
adc ecx 0 +
mov [esp+40h] ecx +
jmp loc_43C54C  +
***
mov eax [esp+20h] +
mov eax [eax+esi*4] +
add esi 1 +
adc ecx 0 +
mov [esp+40h] ecx +
jmp loc_43C54C  +
***
mov eax [esp+18h] +
mov ecx [esp+34h] +
shl eax 2 +
push eax  +
mov eax [esp+40h] +
add eax edi +
lea eax [ecx+eax*4] +
push eax  +
push edx  +
call loc_48C9C0  +
mov ecx [esp+24h] +
add esp 0Ch +
mov ebp ecx +
mov eax ebx +
sub ebp 1 +
mov edx esi +
mov ebx edi +
mov esi edi +
sbb eax 0 +
add ebx [esp+3Ch] +
mov [esp+40h] eax +
adc edx [esp+38h] +
sub ebx 1 +
sbb edx 0 +
add esi ecx +
mov ecx [esp+10h] +
adc ecx [esp+1Ch] +
add esi [esp+3Ch] +
mov [esp+18h] edx +
adc ecx [esp+38h] +
sub esi 1 +
sbb ecx 0 +
mov [esp+3Ch] ecx +
cmp ecx [esp+10h] +
jl loc_43C6F5  +
jg loc_43C624  +
cmp esi edi +
jb loc_43C6F5  +
test eax eax +
jl loc_43C6BB  +
jg loc_43C636  +
test ebp ebp +
jb loc_43C6BB  +
cmp edx [esp+10h] +
jl loc_43C69D  +
jg loc_43C642  +
cmp ebx edi +
jb loc_43C69D  +
mov eax [esp+20h] +
mov ecx [eax+ebp*4] +
mov eax [esp+34h] +
push ecx  +
mov [esp+2Ch] ecx +
mov eax [eax+ebx*4] +
push eax  +
mov [esp+40h] eax +
call loc_43DB70  +
add esp 8 +
cmp eax 0FFFFFFFEh +
jz loc_43C67E  +
neg eax  +
test eax eax +
jle loc_43C67E  +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [esp+18h] +
mov [eax+esi*4] ecx +
jmp loc_43C6C5  +
mov eax [esp+34h] +
add ebp 0FFFFFFFFh +
mov ecx [esp+28h] +
mov edx [esp+18h] +
mov [eax+esi*4] ecx +
mov eax [esp+40h] +
adc eax 0FFFFFFFFh +
mov [esp+40h] eax +
jmp loc_43C6D3  +
mov eax [esp+20h] +
mov ecx [esp+34h] +
mov eax [eax+ebp*4] +
add ebp 0FFFFFFFFh +
mov [ecx+esi*4] eax +
mov eax [esp+40h] +
adc eax 0FFFFFFFFh +
mov [esp+40h] eax +
jmp loc_43C6D3  +
mov ecx [esp+34h] +
mov eax [ecx+ebx*4] +
mov [ecx+esi*4] eax +
mov eax [esp+40h] +
add ebx 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esp+18h] edx +
mov ecx [esp+3Ch] +
add esi 0FFFFFFFFh +
adc ecx 0FFFFFFFFh +
mov [esp+3Ch] ecx +
cmp ecx [esp+10h] +
jg loc_43C624  +
jl loc_43C6F5  +
cmp esi edi +
jnb loc_43C624  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 20h +
retn   +
***
push dword ptr [esp+40h]  +
push offset aErrorAllocatin  +
push 2  +
call sub_4975B1  +
add esp 4 +
push eax  +
call sub_43AB50  +
add esp 0Ch +
push 1  +
call sub_49B110  +
movsd xmm0 [esp+arg_0] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_49A9F9  +
mov ecx [esp+8+arg_8] +
movsd xmm0 [esp+8+arg_0] +
movsd [esp+8+var_8] xmm0 +
mov [ecx] eax +
call sub_49A9E8  +
cwde   +
add esp 8 +
add eax 2 +
cmp eax 4 +
ja loc_43C781  +
jmp ds:off_43C788[eax*4]  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
mov eax 3 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
movsd xmm0 qword_4F2488 +
sub esp 8 +
ucomisd xmm0 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jp loc_43C7E9  +
push esi  +
xor esi esi +
xor edx edx +
nop   +
movzx eax ds:byte_4BED1F[edx] +
lea esi [esi+1] +
mov cl ds:byte_4BED47[esi] +
dec edx  +
mov byte ptr [esp+eax+0Ch+var_8] cl +
cmp edx 0FFFFFFF8h +
jg loc_43C7C0  +
movsd xmm0 [esp+0Ch+var_8] +
movsd qword_4F2488 xmm0 +
pop esi  +
fld  qword_4F2488 +
add esp 8 +
retn   +
***
sub esp 8 +
push esi  +
xor esi esi +
xor edx edx +
movzx eax ds:byte_4BED1F[edx] +
lea esi [esi+1] +
mov cl ds:byte_4BED37[esi] +
dec edx  +
mov [esp+eax+4] cl +
cmp edx 0FFFFFFF8h +
jg loc_43C810  +
fld  qword ptr [esp+4] +
pop esi  +
add esp 8 +
retn   +
***
movsd xmm0 qword_4F2478 +
sub esp 8 +
ucomisd xmm0 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jp loc_43C889  +
push esi  +
xor esi esi +
xor edx edx +
nop   +
movzx eax ds:byte_4BED1F[edx] +
lea esi [esi+1] +
mov cl ds:byte_4BED3F[esi] +
dec edx  +
mov byte ptr [esp+eax+0Ch+var_8] cl +
cmp edx 0FFFFFFF8h +
jg loc_43C860  +
movsd xmm0 [esp+0Ch+var_8] +
movsd qword_4F2478 xmm0 +
pop esi  +
fld  qword_4F2478 +
add esp 8 +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_43C8BF  +
mov edx [ecx+14h] +
test edx edx +
jle loc_43C8BF  +
cmp edx [ecx+2Ch] +
jg loc_43C8C2  +
push 17h  +
push ecx  +
call sub_444780  +
add esp 8 +
xor eax eax +
retn   +
dec edx  +
mov [ecx+14h] edx +
test edx edx +
jle loc_43C8E4  +
mov eax [ecx+1Ch] +
mov eax [eax+edx*4-4] +
mov [ecx+10h] eax +
mov eax [ecx+1Ch] +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
mov eax [ecx+1Ch] +
mov dword ptr [ecx+10h] 0 +
mov ecx [eax+edx*4] +
mov dword ptr [eax+edx*4] 0 +
mov eax ecx +
retn   +
***
push edi  +
test esi esi +
jz loc_43C97C  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_43C97C  +
mov eax [esi+18h] +
cmp [esi+14h] eax +
jl loc_43C964  +
cmp eax 0F4240h +
jl loc_43C93C  +
push offset aXpathStackDept  +
push 0  +
call sub_4448C0  +
add esp 8 +
mov dword ptr [esi+8] 0Fh +
xor eax eax +
pop edi  +
pop esi  +
retn   +
shl eax 3 +
push eax  +
push dword ptr [esi+1Ch]  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jnz loc_43C959  +
push offset aPushingValue  +
jmp loc_43C926  +
mov eax [esi+18h] +
add eax eax +
mov [esi+1Ch] ecx +
mov [esi+18h] eax +
mov ecx [esi+14h] +
mov eax [esi+1Ch] +
mov [eax+ecx*4] edi +
mov eax [esi+14h] +
mov [esi+10h] edi +
pop edi  +
lea ecx [eax+1] +
mov [esi+14h] ecx +
pop esi  +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push edi  +
mov ecx [esi] +
test ecx ecx +
jnz loc_43C9F3  +
mov edi [esp+4+arg_8] +
mov eax 1 +
test edi edi +
cmovle edi eax +
lea eax ds:0[edi*4] +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esi] eax +
test eax eax +
jnz loc_43C9D5  +
push offset aXmlpointerlist  +
push eax  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
mov dword ptr [esi+4] 0 +
mov [esi+8] edi +
mov edx [esi+4] +
mov ecx [esi] +
mov eax [esp+4+arg_4] +
pop edi  +
mov [ecx+edx*4] eax +
inc dword ptr [esi+4]  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+8] +
cmp eax [esi+4] +
jg loc_43C9DF  +
cmp eax 2FAF080h +
jle loc_43CA17  +
push offset aXmlpointerli_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
add eax eax +
mov [esi+8] eax +
shl eax 2 +
push eax  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
mov [esi] eax +
test eax eax +
jnz loc_43C9DF  +
push offset aXmlpointerli_0  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov dword ptr [esi+8] 0 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43CA74  +
push offset aXmlpointerlist  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_0] +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
test eax eax +
jle loc_43CA9D  +
push eax  +
push 0  +
push esi  +
call sub_43C990  +
add esp 0Ch +
mov dword ptr [esi+4] 0 +
mov eax esi +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_43CAD9  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push edi  +
call sub_43D790  +
push edi  +
push dword ptr [esi+0Ch]  +
fstp  [esp+1Ch+var_8] +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_43CB2A  +
cmp dword ptr [eax] 3 +
jz loc_43CB2A  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_43CB11  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_43CB2A  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_43CB4C  +
cmp dword ptr [eax] 3 +
jnz loc_43CB4C  +
movsd xmm0 qword ptr [eax+10h] +
addsd xmm0 [esp+10h+var_8] +
pop edi  +
pop esi  +
movsd qword ptr [eax+10h] xmm0 +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
test esi esi +
jz loc_43CBC0  +
cmp [esp+arg_4] 1 +
jz loc_43CB7D  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_43CB93  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_43CBAD  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CBD0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
pop esi  +
retn   +
***
push esi  +
test ebx ebx +
jnz loc_43CC87  +
mov eax [esp+4+arg_0] +
test eax eax +
jz loc_43CC44  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43CC44  +
mov edx [eax+8] +
test edx edx +
jz loc_43CC18  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CC18  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+8] +
mov eax [eax] +
mov esi [eax+ecx*4] +
mov eax esi +
mov [esi+8] ebx +
mov dword ptr [esi] 2 +
pop esi  +
pop ebx  +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43CC44  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CC44  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
mov eax [eax] +
mov esi [eax+ecx*4] +
mov eax esi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 2 +
pop esi  +
pop ebx  +
retn   +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43CC68  +
push offset aCreatingBoolea  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 2 +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
cmp dword ptr [ebx] 2 +
jnz loc_43CC91  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
push ebx  +
call sub_43D6E0  +
push eax  +
push [esp+0Ch+arg_0]  +
call sub_43CE80  +
push ebx  +
push [esp+14h+arg_0]  +
mov esi eax +
call loc_4499D0  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
test ebx ebx +
jnz loc_43CCE2  +
sub esp 8 +
xorps xmm0 xmm0 +
movsd [esp+8+var_8] xmm0 +
push [esp+8+arg_0]  +
call sub_43CFD0  +
add esp 0Ch +
pop ebx  +
retn   +
cmp dword ptr [ebx] 3 +
jnz loc_43CCEB  +
mov eax ebx +
pop ebx  +
retn   +
push esi  +
push ebx  +
call sub_43D790  +
push ecx  +
fstp  qword ptr [esp] +
push [esp+0Ch+arg_0]  +
call sub_43CFD0  +
push ebx  +
push [esp+14h+arg_0]  +
mov esi eax +
call loc_4499D0  +
add esp 14h +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov edi [esp+arg_4] +
xor ebx ebx +
test edi edi +
jnz loc_43CD3B  +
pop edi  +
pop ebx  +
mov [esp-8+arg_4] offset unk_4DE8C5 +
jmp sub_43CF20  +
mov eax [edi] +
dec eax  +
push esi  +
cmp eax 8 +
ja loc_43CDAC  +
jmp ds:off_43CDE0[eax*4]  +
push dword ptr [edi+4]  +
call sub_43D460  +
add esp 4 +
mov ebx eax +
jmp loc_43CDAC  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
push dword ptr [edi+8]  +
call sub_43D3F0  +
add esp 4 +
mov ebx eax +
jmp loc_43CDAC  +
movsd xmm0 qword ptr [edi+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_43D580  +
add esp 8 +
mov ebx eax +
jmp loc_43CDAC  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 0A78h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
mov esi [esp+4+arg_0] +
push edi  +
push esi  +
call loc_4499D0  +
add esp 8 +
test ebx ebx +
jnz loc_43CDD0  +
push offset unk_4DE8C5  +
push esi  +
call sub_43CF20  +
add esp 8 +
pop esi  +
pop edi  +
pop ebx  +
retn   +
push ebx  +
push esi  +
call sub_43D340  +
add esp 8 +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
test edi edi +
jz loc_43CE77  +
push esi  +
xor esi esi +
cmp [edi+4] esi +
jle loc_43CE5C  +
push ebx  +
mov eax [edi] +
mov ebx [eax+esi*4] +
mov eax [ebx+4] +
test eax eax +
jz loc_43CE4B  +
mov eax [eax+8] +
test eax eax +
jz loc_43CE3F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push dword ptr [ebx+4]  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
inc esi  +
add esp 4 +
cmp esi [edi+4] +
jl loc_43CE22  +
pop ebx  +
mov eax [edi] +
pop esi  +
test eax eax +
jz loc_43CE6D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_43CED6  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43CED6  +
mov edx [eax+8] +
test edx edx +
jz loc_43CEBF  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CEBF  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+8] +
mov eax [eax] +
mov eax [eax+ecx*4] +
xor ecx ecx +
cmp [esp+arg_4] ecx +
setnz cl  +
mov dword ptr [eax] 2 +
mov [eax+8] ecx +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43CED6  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CED6  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
jmp loc_43CEA7  +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43CEFA  +
push offset aCreatingBoolea  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
xor ecx ecx +
mov dword ptr [esi] 2 +
add esp 0Ch +
mov eax esi +
cmp [esp+4+arg_4] ecx +
setnz cl  +
mov [esi+8] ecx +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test eax eax +
jz loc_43CF7D  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43CF7D  +
mov edx [eax+4] +
test edx edx +
jz loc_43CF66  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CF66  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+4] +
mov eax [eax] +
push [esp+4+arg_4]  +
mov esi [eax+ecx*4] +
mov dword ptr [esi] 4 +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43CF7D  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43CF7D  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
jmp loc_43CF48  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43CFA0  +
push offset aCreatingString  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
push [esp+10h+arg_4]  +
mov dword ptr [esi] 4 +
call sub_44E600  +
add esp 10h +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_43D025  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43D025  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43D00E  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D00E  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+0Ch] +
mov eax [eax] +
movsd xmm0 [esp+arg_4] +
mov eax [eax+ecx*4] +
mov dword ptr [eax] 3 +
movsd qword ptr [eax+10h] xmm0 +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43D025  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D025  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
jmp loc_43CFF7  +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43D049  +
push offset aCreatingFloatO  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
movsd xmm0 [esp+10h+arg_4] +
add esp 0Ch +
mov dword ptr [esi] 3 +
mov eax esi +
movsd qword ptr [esi+10h] xmm0 +
pop esi  +
retn   +
***
test esi esi +
jz loc_43D13E  +
mov eax [esi+0C8h] +
test eax eax +
jz loc_43D13E  +
mov edx [eax] +
test edx edx +
jz loc_43D0E7  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D0E7  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax] +
mov eax [eax] +
mov esi [eax+ecx*4] +
mov ecx [esp+arg_4] +
mov dword ptr [esi] 1 +
mov dword ptr [esi+8] 0 +
test ecx ecx +
jz loc_43D0E3  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 0 +
jz loc_43D0D9  +
cmp dword ptr [ecx+4] 12h +
jz loc_43D0D9  +
mov eax [eax+8] +
mov [eax] ecx +
mov eax [esi+4] +
mov dword ptr [eax] 1 +
mov eax esi +
pop esi  +
retn   +
push ecx  +
push eax  +
call sub_4479A0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43D13E  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D13E  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
push edi  +
push [esp+4+arg_4]  +
mov eax [eax] +
mov edi [eax+ecx*4] +
mov dword ptr [edi] 1 +
mov dword ptr [edi+8] 0 +
call sub_447B10  +
add esp 4 +
mov [edi+4] eax +
test eax eax +
jnz loc_43D139  +
pop edi  +
mov dword ptr [esi+88h] 0Ch +
mov dword ptr [esi+8Ch] 2 +
pop esi  +
retn   +
mov eax edi +
pop edi  +
pop esi  +
retn   +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43D161  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
push [esp+0Ch+arg_4]  +
mov dword ptr [esi] 1 +
mov dword ptr [esi+8] 0 +
call sub_447B10  +
add esp 10h +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test eax eax +
jz loc_43D206  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43D206  +
mov edx [eax+4] +
test edx edx +
jz loc_43D1EF  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D1EF  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+4] +
mov eax [eax] +
mov esi [eax+ecx*4] +
mov eax [esp+4+arg_4] +
mov dword ptr [esi] 4 +
test eax eax +
jz loc_43D1DB  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43D206  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D206  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
jmp loc_43D1B8  +
push [esp+4+arg_4]  +
call sub_4466C0  +
add esp 4 +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
test ecx ecx +
jnz loc_43D22B  +
xor eax eax +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_43D296  +
cmp dword ptr [esi+0C8h] 0 +
jz loc_43D296  +
mov eax [ecx] +
dec eax  +
cmp eax 3 +
ja loc_43D296  +
jmp ds:off_43D2A4[eax*4]  +
push dword ptr [ecx+4]  +
push 0  +
call loc_447D40  +
push eax  +
push esi  +
call sub_43D2C0  +
add esp 10h +
pop esi  +
retn   +
push dword ptr [ecx+18h]  +
push esi  +
call sub_43D190  +
add esp 8 +
pop esi  +
retn   +
push dword ptr [ecx+8]  +
push esi  +
call sub_43CE80  +
add esp 8 +
pop esi  +
retn   +
movsd xmm0 qword ptr [ecx+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
push esi  +
call sub_43CFD0  +
add esp 0Ch +
pop esi  +
retn   +
push ecx  +
call sub_4488E0  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_43D2FA  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43D2FA  +
mov edx [eax+10h] +
test edx edx +
jz loc_43D2FA  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D2FA  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
mov eax [eax] +
mov eax [eax+ecx*4] +
mov ecx [esp+arg_4] +
mov dword ptr [eax] 1 +
mov [eax+4] ecx +
retn   +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43D31E  +
push offset aCreatingNodeSe  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esp+10h+arg_4] +
add esp 0Ch +
mov dword ptr [esi] 1 +
mov eax esi +
mov [esi+4] ecx +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_43D3A2  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_43D3A2  +
mov edx [eax+4] +
test edx edx +
jz loc_43D37A  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D37A  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+4] +
mov eax [eax] +
mov eax [eax+ecx*4] +
mov ecx [esp+arg_4] +
mov dword ptr [eax] 4 +
mov [eax+18h] ecx +
retn   +
mov edx [eax+10h] +
test edx edx +
jz loc_43D3A2  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_43D3A2  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
mov eax [eax] +
mov eax [eax+ecx*4] +
mov ecx [esp+arg_4] +
mov dword ptr [eax] 4 +
mov [eax+18h] ecx +
retn   +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_43D3C6  +
push offset aCreatingString  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov eax esi +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esp+10h+arg_4] +
add esp 0Ch +
mov dword ptr [esi] 4 +
mov eax esi +
mov [esi+18h] ecx +
pop esi  +
retn   +
***
cmp [esp+arg_0] 0 +
jz loc_43D404  +
mov [esp+arg_0] offset aTrue +
jmp sub_44E600  +
mov [esp+arg_0] offset aFalse +
jmp sub_44E600  +
***
mov eax [esp+arg_0] +
sub esp 8 +
test eax eax +
jnz loc_43D435  +
fld  dbl_4F24A0 +
add esp 8 +
retn   +
push esi  +
push eax  +
call sub_43D460  +
mov esi eax +
push esi  +
call loc_44A6B0  +
push esi  +
fstp  [esp+18h+var_8] +
call off_4EE2F4  +
fld  [esp+18h+var_8] +
add esp 0Ch +
pop esi  +
add esp 8 +
retn   +
***
test esi esi +
jz loc_43D4A4  +
mov eax [esi] +
test eax eax +
jz loc_43D4A4  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_43D4A4  +
cmp eax 1 +
jle loc_43D485  +
push eax  +
push ecx  +
call sub_43BE10  +
add esp 8 +
mov eax [esi+8] +
push dword ptr [eax]  +
call sub_424950  +
add esp 4 +
pop esi  +
test eax eax +
jnz locret_43D4B2  +
mov [esp-4+arg_0] offset unk_4DE8C5 +
jmp sub_44E600  +
pop esi  +
mov [esp-4+arg_0] offset unk_4DE8C5 +
jmp sub_44E600  +
retn   +
***
mov eax [esp+arg_0] +
add esp 4 +
test eax eax +
jnz locret_43D53D  +
mov [esp+arg_0] offset unk_4DE8C5 +
jmp sub_44E600  +
retn   +
***
movsd xmm0 [esp+arg_0] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jnz loc_43D574  +
movsd xmm0 [esp+arg_0] +
ucomisd xmm0 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jnp loc_43D574  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
sub esp 6Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+6Ch+var_4] eax +
movsd xmm0 [esp+6Ch+arg_0] +
sub esp 8 +
movsd [esp+74h+var_74] xmm0 +
call sub_49A9E8  +
movsd xmm0 [esp+74h+arg_0] +
add esp 8 +
xorps xmm1 xmm1 +
cmp ax 1 +
jnz loc_43D605  +
xor eax eax +
comisd xmm0 xmm1 +
setnbe al  +
lea eax ds:0FFFFFFFFh[eax*2] +
cmp eax 0FFFFFFFFh +
jz loc_43D5E9  +
cmp eax 1 +
jnz loc_43D605  +
push offset aInfinity  +
call sub_44E600  +
add esp 4 +
mov ecx [esp+6Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 6Ch +
retn   +
push offset aInfinity_0  +
call sub_44E600  +
add esp 4 +
mov ecx [esp+6Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 6Ch +
retn   +
sub esp 8 +
movsd [esp+74h+var_74] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jz loc_43D635  +
push offset off_4BF0E4  +
call sub_44E600  +
add esp 4 +
mov ecx [esp+6Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 6Ch +
retn   +
movsd xmm0 [esp+6Ch+arg_0] +
xorps xmm1 xmm1 +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jp loc_43D684  +
lea eax [esp+6Ch+var_6C] +
push eax  +
sub esp 8 +
movsd [esp+78h+var_7C+4] xmm0 +
call sub_43C730  +
add esp 0Ch +
cmp [esp+6Ch+var_6C] 0 +
jz loc_43D67E  +
push offset unk_4BF0E8  +
call sub_44E600  +
add esp 4 +
mov ecx [esp+6Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 6Ch +
retn   +
movsd xmm0 [esp+6Ch+arg_0] +
push 63h  +
lea eax [esp+70h+var_68] +
push eax  +
sub esp 8 +
movsd [esp+7Ch+var_7C] xmm0 +
call loc_4450A0  +
lea eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_5] 0 +
push eax  +
call sub_44E600  +
mov ecx [esp+80h+var_4] +
add esp 14h +
xor ecx esp +
call sub_488C1C  +
add esp 6Ch +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_43D6DB  +
push eax  +
call sub_44E660  +
add esp 4 +
test eax eax +
jz loc_43D6DB  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
mov ecx [esp+arg_0] +
xor eax eax +
test ecx ecx +
jz loc_43D756  +
mov edx [ecx] +
cmp edx 9 +
ja locret_43D758  +
jmp ds:off_43D75C[edx*4]  +
mov eax [ecx+4] +
test eax eax +
jz loc_43D756  +
cmp dword ptr [eax] 0 +
jz loc_43D756  +
mov eax 1 +
retn   +
push dword ptr [ecx+18h]  +
call sub_43D6C0  +
add esp 4 +
retn   +
movsd xmm0 qword ptr [ecx+10h] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_43D540  +
add esp 8 +
retn   +
mov eax [ecx+8] +
retn   +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 17B2h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
xor eax eax +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
xorps xmm0 xmm0 +
movsd [esp+8+var_8] xmm0 +
test eax eax +
jnz loc_43D7AD  +
fld  dbl_4F24A0 +
add esp 8 +
retn   +
mov ecx [eax] +
cmp ecx 9 +
ja loc_43D84B  +
jmp ds:off_43D854[ecx*4]  +
push dword ptr [eax+4]  +
call sub_43D420  +
fstp  [esp+0Ch+var_8] +
fld  [esp+0Ch+var_8] +
add esp 4 +
add esp 8 +
retn   +
push dword ptr [eax+18h]  +
call loc_44A6B0  +
fstp  [esp+0Ch+var_8] +
fld  [esp+0Ch+var_8] +
add esp 4 +
add esp 8 +
retn   +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+8+var_8] xmm0 +
fld  [esp+8+var_8] +
add esp 8 +
retn   +
cmp dword ptr [eax+8] 0 +
jz loc_43D846  +
movsd xmm0 ds:qword_4BF6E0 +
movsd [esp+8+var_8] xmm0 +
fld  [esp+8+var_8] +
add esp 8 +
retn   +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1742h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
movsd xmm0 dbl_4F24A0 +
movsd [esp+8+var_8] xmm0 +
fld  [esp+8+var_8] +
add esp 8 +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
test esi esi +
jz loc_43D98D  +
cmp [esp+0Ch+arg_4] 1 +
jz loc_43D8A7  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_43D8C0  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+10h] +
test eax eax +
jz loc_43D8E5  +
cmp dword ptr [eax] 3 +
jz loc_43D8E5  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push edi  +
mov edi [esi+10h] +
test edi edi +
jz loc_43D981  +
cmp dword ptr [edi] 3 +
jnz loc_43D981  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+10h+var_8] xmm0 +
fld  [esp+10h+var_8] +
fld  ds:dbl_4BF6F0 +
call sub_49B13A  +
movsd xmm2 qword ptr [edi+10h] +
fstp  [esp+10h+var_8] +
cvttsd2si eax [esp+10h+var_8] +
movaps xmm1 xmm2 +
subsd xmm1 [esp+10h+var_8] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm1 xmm0 +
ucomisd xmm1 xmm2 +
lahf   +
test ah 44h +
jnp loc_43D98C  +
xorps xmm0 xmm0 +
comisd xmm2 xmm0 +
jbe loc_43D95E  +
addsd xmm1 ds:qword_4BF6E0 +
movsd qword ptr [edi+10h] xmm1 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
comisd xmm0 xmm2 +
jbe loc_43D953  +
ucomisd xmm1 xmm0 +
lahf   +
test ah 44h +
jp loc_43D953  +
movsd xmm0 dbl_4F2490 +
movsd qword ptr [edi+10h] xmm0 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
mov edx [esp+4] +
xor eax eax +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
xor ebx ebx +
test edx edx +
jz loc_43DB67  +
mov ecx [esp+14h] +
test ecx ecx +
jz loc_43DB67  +
cmp edx ecx +
jnz loc_43D9CD  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
cmp dword ptr [edx+4] 2 +
jnz loc_43D9DD  +
mov esi edx +
mov eax 1 +
mov edx [edx+14h] +
cmp dword ptr [ecx+4] 2 +
jnz loc_43D9ED  +
mov ebx ecx +
mov edi 1 +
mov ecx [ecx+14h] +
cmp edx ecx +
jnz loc_43DA2E  +
cmp eax edi +
jnz loc_43DA1B  +
test eax eax +
jz loc_43D9C7  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_43DA0B  +
cmp eax esi +
jz loc_43DA12  +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_43DA00  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
cmp edi 1 +
pop edi  +
setz al  +
pop esi  +
pop ebx  +
lea eax ds:0FFFFFFFFh[eax*2] +
retn   +
***
mov eax [edx+4] +
cmp eax 12h +
jz loc_43DA12  +
mov esi [ecx+4] +
cmp esi 12h +
jz loc_43DA12  +
cmp edx [ecx+1Ch] +
jz loc_43DA12  +
cmp edx [ecx+18h] +
jz loc_43DA0B  +
cmp eax 1 +
jnz loc_43DA71  +
cmp esi eax +
jnz loc_43DA71  +
mov esi [edx+28h] +
test esi esi +
jns loc_43DA71  +
mov edi [ecx+28h] +
test edi edi +
jns loc_43DA71  +
mov eax [edx+20h] +
cmp eax [ecx+20h] +
jnz loc_43DA71  +
neg esi  +
neg edi  +
cmp esi edi +
jl loc_43DA12  +
jg loc_43DA0B  +
xor eax eax +
lea esi [ecx+14h] +
mov edi ecx +
cmp [esi] eax +
jz loc_43DA90  +
cmp edi edx +
jz loc_43DA12  +
mov edi [esi] +
inc eax  +
cmp dword ptr [edi+14h] 0 +
lea esi [edi+14h] +
jnz loc_43DA80  +
push ebp  +
xor ebx ebx +
lea ebp [edx+14h] +
mov esi edx +
cmp [ebp+0] ebx +
jz loc_43DAB5  +
cmp esi ecx +
jz loc_43DB4B  +
mov esi [ebp+0] +
inc ebx  +
cmp dword ptr [esi+14h] 0 +
lea ebp [esi+14h] +
jnz loc_43DAA0  +
cmp edi esi +
jnz loc_43DB53  +
cmp eax ebx +
jge loc_43DAD1  +
mov esi ebx +
sub esi eax +
sub ebx esi +
mov edx [edx+14h] +
sub esi 1 +
jnz loc_43DAC7  +
cmp eax ebx +
jle loc_43DADD  +
sub eax ebx +
mov ecx [ecx+14h] +
sub eax 1 +
jnz loc_43DAD5  +
mov eax [edx+14h] +
mov esi [ecx+14h] +
cmp eax esi +
jz loc_43DAFD  +
mov edx eax +
mov ecx esi +
test edx edx +
jz loc_43DB53  +
test ecx ecx +
jz loc_43DB53  +
mov eax [edx+14h] +
mov esi [ecx+14h] +
cmp eax esi +
jnz loc_43DAE7  +
cmp edx [ecx+1Ch] +
jz loc_43DB5D  +
cmp edx [ecx+18h] +
jz loc_43DB4B  +
cmp dword ptr [edx+4] 1 +
jnz loc_43DB33  +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DB33  +
mov esi [edx+28h] +
test esi esi +
jns loc_43DB33  +
mov edi [ecx+28h] +
test edi edi +
jns loc_43DB33  +
mov eax [edx+20h] +
cmp eax [ecx+20h] +
jnz loc_43DB33  +
neg esi  +
neg edi  +
cmp esi edi +
jl loc_43DB5D  +
jg loc_43DB4B  +
mov eax [edx+18h] +
test eax eax +
jz loc_43DB4B  +
pop ebp  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
pop ebp  +
pop edi  +
pop esi  +
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
pop ebp  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
***
pop edi  +
pop esi  +
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ecx  +
mov edx [esp+8] +
push ebx  +
push ebp  +
push esi  +
push edi  +
xor edi edi +
mov dword ptr [esp+10h] 0 +
xor esi esi +
xor ebx ebx +
xor ebp ebp +
test edx edx +
jz loc_43DEA8  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_43DEA8  +
cmp edx ecx +
jnz loc_43DBA9  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [edx+4] +
dec eax  +
cmp eax 11h +
ja loc_43DC6F  +
movzx eax ds:byte_43DEC8[eax] +
jmp ds:off_43DEB4[eax*4]  +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DC6F  +
mov ebp [edx+28h] +
test ebp ebp +
jns loc_43DDA3  +
cmp [ecx+28h] ebx +
jge loc_43DDA3  +
mov eax [edx+20h] +
cmp eax [ecx+20h] +
jnz loc_43DDA3  +
mov eax [ecx+28h] +
neg ebp  +
neg eax  +
cmp ebp eax +
jge loc_43DC04  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 1 +
pop ebx  +
pop ecx  +
retn   +
***
jle loc_43DC6D  +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
mov edi 1 +
mov ebx edx +
mov edx [edx+14h] +
mov [esp+10h] edi +
jmp loc_43DC6F  +
mov eax [edx+1Ch] +
mov ebx edx +
test eax eax +
jz loc_43DC46  +
mov edx eax +
cmp dword ptr [edx+4] 1 +
jz loc_43DC3F  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_43DC46  +
mov edx eax +
cmp dword ptr [edx+4] 1 +
jnz loc_43DC30  +
mov edi 3 +
jmp loc_43DC4E  +
mov edx [edx+14h] +
mov edi 2 +
test edx edx +
jz loc_43DC67  +
cmp dword ptr [edx+4] 1 +
jnz loc_43DC67  +
cmp [edx+28h] esi +
jge loc_43DC67  +
mov dword ptr [esp+10h] 1 +
jmp loc_43DC6F  +
mov edx ebx +
xor edi edi +
jmp loc_43DC6F  +
xor ebp ebp +
mov eax [ecx+4] +
add eax 0FFFFFFFEh +
cmp eax 10h +
ja loc_43DCD7  +
movzx eax ds:byte_43DEEC[eax] +
jmp ds:off_43DEDC[eax*4]  +
mov ebp ecx +
mov esi 1 +
mov ecx [ecx+14h] +
jmp loc_43DCE2  +
mov eax [ecx+1Ch] +
mov ebp ecx +
test eax eax +
jz loc_43DCBB  +
mov ecx eax +
cmp dword ptr [ecx+4] 1 +
jz loc_43DCB4  +
mov eax [ecx+1Ch] +
test eax eax +
jz loc_43DCBB  +
mov ecx eax +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DCA5  +
mov esi 3 +
jmp loc_43DCC3  +
mov ecx [ecx+14h] +
mov esi 2 +
test ecx ecx +
jz loc_43DCD3  +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DCD3  +
cmp dword ptr [ecx+28h] 0 +
jl loc_43DCE2  +
mov ecx ebp +
xor esi esi +
cmp dword ptr [esp+10h] 0 +
jz loc_43DD6F  +
cmp edx ecx +
jnz loc_43DD2B  +
cmp edi esi +
jnz loc_43DD17  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_43DC06  +
cmp eax ebx +
jz loc_43DBF9  +
cmp dword ptr [eax+4] 1 +
jz loc_43DC06  +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_43DCF5  +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
xor eax eax +
cmp edi esi +
pop edi  +
setl al  +
pop esi  +
pop ebp  +
pop ebx  +
lea eax ds:0FFFFFFFFh[eax*2] +
pop ecx  +
retn   +
***
cmp esi 3 +
jnz loc_43DD4F  +
cmp edi 1 +
jle loc_43DD4F  +
mov eax [edx+14h] +
test eax eax +
jz loc_43DD4F  +
cmp eax ecx +
jz loc_43DBF9  +
mov eax [eax+14h] +
test eax eax +
jnz loc_43DD40  +
cmp edi 3 +
jnz loc_43DD6F  +
cmp esi 1 +
jle loc_43DD6F  +
mov eax [ecx+14h] +
test eax eax +
jz loc_43DD6F  +
cmp eax edx +
jz loc_43DC06  +
mov eax [eax+14h] +
test eax eax +
jnz loc_43DD60  +
cmp dword ptr [edx+4] 1 +
jnz loc_43DDA3  +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DDA3  +
mov esi [edx+28h] +
test esi esi +
jns loc_43DDA3  +
mov edi [ecx+28h] +
test edi edi +
jns loc_43DDA3  +
mov eax [edx+20h] +
cmp eax [ecx+20h] +
jnz loc_43DDA3  +
neg esi  +
neg edi  +
cmp esi edi +
jl loc_43DBF9  +
jg loc_43DC06  +
cmp edx [ecx+1Ch] +
jz loc_43DBF9  +
cmp edx [ecx+18h] +
jz loc_43DC06  +
mov esi [ecx+14h] +
xor eax eax +
mov ebx ecx +
test esi esi +
jz loc_43DDD2  +
cmp esi edx +
jz loc_43DBF9  +
mov ebx esi +
inc eax  +
mov esi [ebx+14h] +
test esi esi +
jnz loc_43DDC0  +
mov esi [edx+14h] +
xor edi edi +
mov ebp edx +
test esi esi +
jz loc_43DDF2  +
cmp esi ecx +
jz loc_43DC06  +
mov ebp esi +
inc edi  +
mov esi [ebp+14h] +
test esi esi +
jnz loc_43DDE0  +
cmp ebx ebp +
jnz loc_43DEA8  +
cmp eax edi +
jge loc_43DE0E  +
mov esi edi +
sub esi eax +
sub edi esi +
mov edx [edx+14h] +
sub esi 1 +
jnz loc_43DE04  +
cmp eax edi +
jle loc_43DE1A  +
sub eax edi +
mov ecx [ecx+14h] +
sub eax 1 +
jnz loc_43DE12  +
mov eax [edx+14h] +
mov esi [ecx+14h] +
cmp eax esi +
jz loc_43DE3E  +
mov edx eax +
mov ecx esi +
test edx edx +
jz loc_43DEA8  +
test ecx ecx +
jz loc_43DEA8  +
mov eax [edx+14h] +
mov esi [ecx+14h] +
cmp eax esi +
jnz loc_43DE24  +
cmp edx [ecx+1Ch] +
jz loc_43DBF9  +
cmp edx [ecx+18h] +
jz loc_43DC06  +
cmp dword ptr [edx+4] 1 +
jnz loc_43DE84  +
cmp dword ptr [ecx+4] 1 +
jnz loc_43DE84  +
mov esi [edx+28h] +
test esi esi +
jns loc_43DE84  +
mov edi [ecx+28h] +
test edi edi +
jns loc_43DE84  +
mov eax [edx+20h] +
cmp eax [ecx+20h] +
jnz loc_43DE84  +
neg esi  +
neg edi  +
cmp esi edi +
jl loc_43DBF9  +
jg loc_43DC06  +
mov eax [edx+18h] +
test eax eax +
jz loc_43DC06  +
nop   +
cmp eax ecx +
jz loc_43DBF9  +
mov eax [eax+18h] +
test eax eax +
jnz loc_43DE90  +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
mov eax 0FFFFFFFEh +
pop ebx  +
pop ecx  +
retn   +
***
push esi  +
mov esi [esp+8] +
push esi  +
call loc_43EA60  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E0B8  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43DF2C  +
cmp al 9 +
jb loc_43DF28  +
cmp al 0Ah +
jbe loc_43DF2C  +
cmp al 0Dh +
jnz loc_43DF37  +
test al al +
jz loc_43DF18  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43DF18  +
***
push ebx  +
push ebp  +
push edi  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_43E092  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_43E003  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_43E092  +
mov [edi+8] eax +
mov eax [edi] +
mov edx [esp+14h] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] edx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 5 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+0Ch] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E0AA  +
cmp al 9 +
jb loc_43E0A2  +
cmp al 0Ah +
jbe loc_43E0AA  +
cmp al 0Dh +
jnz near ptr dword_43DF3C+4  +
test al al +
jz loc_43E092  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E092  +
***
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
call loc_43E280  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E26F  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E0EC  +
cmp al 9 +
jb loc_43E0E8  +
cmp al 0Ah +
jbe loc_43E0EC  +
cmp al 0Dh +
jnz loc_43E0F7  +
test al al +
jz loc_43E0D8  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E0D8  +
cmp byte ptr [ecx] 61h +
jnz loc_43E26F  +
push ebx  +
push ebp  +
push edi  +
cmp byte ptr [ecx+1] 6Eh +
jnz loc_43E26C  +
cmp byte ptr [ecx+2] 64h +
jnz loc_43E26C  +
mov eax [esi+20h] +
mov ebp [eax+0Ch] +
lea eax [ecx+3] +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E136  +
cmp al 9 +
jb loc_43E132  +
cmp al 0Ah +
jbe loc_43E136  +
cmp al 0Dh +
jnz loc_43E13F  +
test al al +
jz loc_43E122  +
lea eax [ecx+1] +
jmp loc_43E120  +
push esi  +
call loc_43E280  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E26C  +
mov edi [esi+20h] +
mov eax [edi+4] +
mov ebx [edi+0Ch] +
cmp [edi] eax +
jl loc_43E1B8  +
cmp eax 0F4240h +
jl loc_43E17A  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_43E244  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_43E1B5  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_43E244  +
mov [edi+8] eax +
mov eax [edi] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 1 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+0Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E258  +
cmp al 9 +
jb loc_43E254  +
cmp al 0Ah +
jbe loc_43E258  +
cmp al 0Dh +
jnz loc_43E263  +
test al al +
jz loc_43E244  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E244  +
cmp byte ptr [ecx] 61h +
jz loc_43E103  +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push esi  +
call loc_441E80  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E44C  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E2AC  +
cmp al 9 +
jb loc_43E2A8  +
cmp al 0Ah +
jbe loc_43E2AC  +
cmp al 0Dh +
jnz loc_43E2B7  +
test al al +
jz loc_43E298  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E298  +
***
push ebx  +
push ebp  +
push edi  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_43E426  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_43E397  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_43E426  +
mov [edi+8] eax +
mov eax [edi] +
mov edx [esp+14h] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] edx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 3 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+0Ch] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E43E  +
cmp al 9 +
jb loc_43E436  +
cmp al 0Ah +
jbe loc_43E43E  +
cmp al 0Dh +
jnz near ptr dword_43E2BC+4  +
test al al +
jz loc_43E426  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E426  +
***
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
cmp [esi] eax +
jl loc_43E4A1  +
cmp eax 0F4240h +
jge loc_43E48A  +
add eax eax +
mov [esi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_43E49E  +
mov eax [esi+4] +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+4] eax +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+8] eax +
mov eax [esi] +
mov ecx [esi+8] +
mov [esi+0Ch] eax +
push edi  +
lea edx [eax+eax*4] +
mov edi [esp+4+arg_C] +
mov eax [esp+4+arg_4] +
mov [ecx+edx*8+4] eax +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_8] +
mov [ecx+edx*8+8] eax +
mov eax [esi] +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
mov [eax+ecx*8] edi +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_10] +
mov [ecx+edx*8+0Ch] eax +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_14] +
mov [ecx+edx*8+10h] eax +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_18] +
mov [ecx+edx*8+14h] eax +
mov eax [esi+14h] +
test eax eax +
jz loc_43E594  +
cmp edi 0Eh +
jz loc_43E51E  +
cmp edi 0Dh +
jz loc_43E51E  +
cmp edi 0Bh +
jnz loc_43E594  +
mov edi [esp+4+arg_1C] +
test edi edi +
jz loc_43E547  +
push 0FFFFFFFFh  +
push edi  +
push eax  +
call sub_44F4D0  +
mov ecx [esi] +
push edi  +
lea edx [ecx+ecx*4] +
mov ecx [esi+8] +
mov [ecx+edx*8+18h] eax +
call off_4EE2F4  +
add esp 10h +
jmp loc_43E557  +
mov eax [esi] +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov edi [esp+4+arg_20] +
test edi edi +
jz loc_43E582  +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [esi+14h]  +
call sub_44F4D0  +
mov ecx [esi] +
push edi  +
lea edx [ecx+ecx*4] +
mov ecx [esi+8] +
mov [ecx+edx*8+1Ch] eax +
call off_4EE2F4  +
add esp 10h +
jmp loc_43E5B4  +
mov eax [esi] +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
jmp loc_43E5B4  +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_1C] +
mov [ecx+edx*8+18h] eax +
mov eax [esi] +
mov ecx [esi+8] +
lea edx [eax+eax*4] +
mov eax [esp+4+arg_20] +
mov [ecx+edx*8+1Ch] eax +
mov eax [esi] +
pop edi  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
mov eax [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push esi  +
call loc_441D80  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E646  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E5F8  +
cmp al 9 +
jb loc_43E5F4  +
cmp al 0Ah +
jbe loc_43E5F8  +
cmp al 0Dh +
jnz loc_43E603  +
test al al +
jz loc_43E5E4  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E5E4  +
***
mov eax ecx +
cmp byte ptr [eax] 5Bh +
jnz loc_43E646  +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+14h+arg_0] +
mov ebp 1 +
push edi  +
xor edi edi +
mov [esp+18h+var_4] 0 +
push esi  +
mov [esp+1Ch+var_8] edi +
call sub_448B80  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_43E80A  +
mov eax [esi] +
cmp byte ptr [eax] 3Ah +
jnz loc_43E69C  +
inc eax  +
mov edi ebx +
push esi  +
mov [esp+1Ch+var_8] edi +
mov [esi] eax +
call sub_448B80  +
add esp 4 +
mov ebx eax +
test ebx ebx +
jz loc_43E80A  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E6B8  +
cmp al 9 +
jb loc_43E6B4  +
cmp al 0Ah +
jbe loc_43E6B8  +
cmp al 0Dh +
jnz loc_43E6C3  +
test al al +
jz loc_43E6A4  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E6A4  +
mov eax ecx +
cmp byte ptr [eax] 28h +
jz loc_43E6DD  +
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E6F4  +
cmp al 9 +
jb loc_43E6F0  +
cmp al 0Ah +
jbe loc_43E6F4  +
cmp al 0Dh +
jnz loc_43E6FD  +
test al al +
jz loc_43E6E0  +
lea eax [ecx+1] +
jmp loc_43E6DE  +
test edi edi +
jnz loc_43E71B  +
cmp byte ptr [ebx] 63h +
jnz loc_43E71B  +
push offset aCount  +
push ebx  +
call sub_44E370  +
xor ecx ecx +
add esp 8 +
test eax eax +
cmovnz ebp ecx +
mov eax [esi+20h] +
mov dword ptr [eax+0Ch] 0FFFFFFFFh +
mov eax [esi] +
mov al [eax] +
cmp al 29h +
jz loc_43E7AA  +
test al al +
jz loc_43E7AA  +
mov eax [esi+20h] +
push ebp  +
push esi  +
mov edi [eax+0Ch] +
mov dword ptr [eax+0Ch] 0FFFFFFFFh +
call loc_4431F0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jnz loc_43E7EE  +
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0Fh  +
push dword ptr [eax+0Ch]  +
push edi  +
push eax  +
call sub_43E450  +
mov ecx [esi] +
add esp 24h +
inc [esp+18h+var_4]  +
mov al [ecx] +
cmp al 29h +
jz loc_43E7A6  +
cmp al 2Ch +
jnz loc_43E6CA  +
lea eax [ecx+1] +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E79B  +
cmp al 9 +
jb loc_43E797  +
cmp al 0Ah +
jbe loc_43E79B  +
cmp al 0Dh +
jnz loc_43E7A1  +
test al al +
jz loc_43E787  +
jmp loc_43E782  +
cmp byte ptr [ecx] 0 +
jnz loc_43E731  +
mov edi [esp+18h+var_8] +
mov eax [esi+20h] +
push edi  +
push ebx  +
push 0  +
push 0  +
push [esp+28h+var_4]  +
push 0Eh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
mov eax [esi] +
add esp 24h +
cmp byte ptr [eax] 0 +
jz loc_43E7D1  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E7E5  +
cmp al 9 +
jb loc_43E7E1  +
cmp al 0Ah +
jbe loc_43E7E5  +
cmp al 0Dh +
jnz loc_43E81C  +
test al al +
jz loc_43E7D1  +
lea eax [ecx+1] +
jmp loc_43E7CF  +
push ebx  +
call off_4EE2F4  +
push [esp+1Ch+var_8]  +
call off_4EE2F4  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
push edi  +
call off_4EE2F4  +
push 7  +
push esi  +
call sub_444780  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
mov edi [esp+arg_0] +
mov eax [edi] +
mov cl [eax] +
cmp cl 22h +
jnz loc_43E8A1  +
lea edx [eax+1] +
mov [edi] edx +
mov ecx [edi] +
mov al [ecx] +
cmp al 9 +
jb loc_43E850  +
cmp al 0Ah +
jbe loc_43E858  +
cmp al 0Dh +
jz loc_43E858  +
cmp al 20h +
jb loc_43E867  +
cmp al 22h +
jz loc_43E867  +
test al al +
jz loc_43E844  +
lea eax [ecx+1] +
mov [edi] eax +
jmp loc_43E844  +
mov al [ecx] +
cmp al 9 +
jb loc_43E871  +
cmp al 0Ah +
jbe loc_43E887  +
cmp al 0Dh +
jz loc_43E887  +
cmp al 20h +
jnb loc_43E887  +
push 2  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebx  +
retn   +
sub ecx edx +
push ecx  +
push edx  +
call sub_44E8A0  +
mov ecx [edi] +
add esp 8 +
mov ebx eax +
cmp byte ptr [ecx] 0 +
jz loc_43E8FD  +
inc ecx  +
mov [edi] ecx +
jmp loc_43E8FD  +
cmp cl 27h +
jnz loc_43E935  +
lea edx [eax+1] +
mov [edi] edx +
nop   +
mov ecx [edi] +
mov al [ecx] +
cmp al 9 +
jb loc_43E8BC  +
cmp al 0Ah +
jbe loc_43E8C4  +
cmp al 0Dh +
jz loc_43E8C4  +
cmp al 20h +
jb loc_43E8D3  +
cmp al 27h +
jz loc_43E8D3  +
test al al +
jz loc_43E8B0  +
lea eax [ecx+1] +
mov [edi] eax +
jmp loc_43E8B0  +
mov al [ecx] +
cmp al 9 +
jb loc_43E8DD  +
cmp al 0Ah +
jbe loc_43E8E5  +
cmp al 0Dh +
jz loc_43E8E5  +
cmp al 20h +
jb loc_43E879  +
sub ecx edx +
push ecx  +
push edx  +
call sub_44E8A0  +
mov ebx eax +
add esp 8 +
mov eax [edi] +
cmp byte ptr [eax] 0 +
jz loc_43E8FD  +
inc eax  +
mov [edi] eax +
test ebx ebx +
jz loc_43E940  +
push esi  +
mov esi [edi+20h] +
push 0  +
push ebx  +
push dword ptr [edi+0Ch]  +
call sub_43D190  +
add esp 8 +
push eax  +
push 0  +
push 0  +
push 4  +
push 0Ch  +
push 0FFFFFFFFh  +
push dword ptr [esi+0Ch]  +
push esi  +
call sub_43E450  +
push ebx  +
call off_4EE2F4  +
add esp 28h +
pop esi  +
pop edi  +
pop ebx  +
retn   +
push 3  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E969  +
cmp al 9 +
jb loc_43E965  +
cmp al 0Ah +
jbe loc_43E969  +
cmp al 0Dh +
jnz loc_43E974  +
test al al +
jz loc_43E955  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43E955  +
***
cmp byte ptr [ecx] 2Fh +
jz loc_43E984  +
push esi  +
call loc_442060  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi] +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_43EA3E  +
cmp [eax+1] cl +
jnz loc_43E9E2  +
add eax 2 +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43E9B4  +
cmp al 9 +
jb loc_43E9B0  +
cmp al 0Ah +
jbe loc_43E9B4  +
cmp al 0Dh +
jnz loc_43E9BD  +
test al al +
jz loc_43E9A0  +
lea eax [ecx+1] +
jmp loc_43E999  +
***
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 1  +
push 6  +
push 0Bh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
push esi  +
call loc_442060  +
add esp 28h +
jmp loc_43EA3E  +
cmp cl 2Fh +
jnz loc_43EA3E  +
inc eax  +
mov [esi] eax +
cmp dword ptr [esi+8] 0 +
jnz loc_43EA4F  +
mov eax [esi] +
cmp byte ptr [eax] 2Fh +
jz loc_43E984  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push esi  +
call loc_442540  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_43EC58  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43EA8C  +
cmp al 9 +
jb loc_43EA88  +
cmp al 0Ah +
jbe loc_43EA8C  +
cmp al 0Dh +
jnz loc_43EA97  +
test al al +
jz loc_43EA78  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43EA78  +
***
push ebx  +
push ebp  +
push edi  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_43EC32  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_43EBA3  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_43EC32  +
mov [edi+8] eax +
mov eax [edi] +
mov edx [esp+14h] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] edx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 6 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+0Ch] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43EC4A  +
cmp al 9 +
jb loc_43EC42  +
cmp al 0Ah +
jbe loc_43EC4A  +
cmp al 0Dh +
jnz near ptr dword_43EA9C+4  +
test al al +
jz loc_43EC32  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43EC32  +
***
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
mov ebp [esp+arg_4] +
push esi  +
test ebp ebp +
jz loc_43EEB8  +
mov ebx [esp+4+arg_8] +
test ebx ebx +
jz loc_43EEB8  +
mov eax [esp+4+arg_C] +
test eax eax +
jz loc_43EEB8  +
mov esi [esp+4+arg_0] +
mov dword ptr [ebx] 0 +
mov dword ptr [ebp+0] 0 +
mov dword ptr [eax] 0 +
nop   +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43ECB4  +
cmp al 9 +
jb loc_43ECB0  +
cmp al 0Ah +
jbe loc_43ECB4  +
cmp al 0Dh +
jnz loc_43ECBF  +
test al al +
jz loc_43ECA0  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43ECA0  +
push edi  +
mov edi [esp+8+arg_10] +
test edi edi +
jnz loc_43ECE6  +
mov eax ecx +
cmp byte ptr [eax] 2Ah +
jz loc_43EE86  +
push esi  +
call sub_448B80  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_43EE52  +
mov eax [esi] +
mov al [eax] +
cmp al 20h +
jz loc_43ECFE  +
cmp al 9 +
jb loc_43ECF6  +
cmp al 0Ah +
jbe loc_43ECFE  +
cmp al 0Dh +
jz loc_43ECFE  +
xor edx edx +
jmp loc_43ED03  +
mov edx 1 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43ED17  +
cmp al 9 +
jb loc_43ED13  +
cmp al 0Ah +
jbe loc_43ED17  +
cmp al 0Dh +
jnz loc_43ED22  +
test al al +
jz loc_43ED03  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43ED03  +
mov eax ecx +
cmp byte ptr [eax] 28h +
jnz loc_43EE64  +
inc eax  +
push offset aComment_0  +
push edi  +
mov [esi] eax +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_43ED4A  +
mov dword ptr [ebx] 8 +
jmp loc_43ED9A  +
push offset aNode  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_43ED64  +
mov dword ptr [ebx] 0 +
jmp loc_43ED9A  +
push offset aProcessingInst  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_43ED7E  +
mov dword ptr [ebx] 7 +
jmp loc_43ED9A  +
push offset aText_0  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_43EE44  +
mov dword ptr [ebx] 3 +
mov dword ptr [ebp+0] 1 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43EDB5  +
cmp al 9 +
jb loc_43EDB1  +
cmp al 0Ah +
jbe loc_43EDB5  +
cmp al 0Dh +
jnz loc_43EDC0  +
test al al +
jz loc_43EDA1  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43EDA1  +
cmp dword ptr [ebx] 7 +
jnz loc_43EE13  +
test edi edi +
jz loc_43EDD3  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi] +
xor edi edi +
cmp byte ptr [eax] 29h +
jz loc_43EE13  +
push esi  +
call loc_448AA0  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+8] 0 +
jnz loc_43EE5D  +
mov dword ptr [ebp+0] 2 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_43EE08  +
cmp al 9 +
jb loc_43EE04  +
cmp al 0Ah +
jbe loc_43EE08  +
cmp al 0Dh +
jnz loc_43EE13  +
test al al +
jz loc_43EDF4  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_43EDF4  +
mov eax [esi] +
cmp byte ptr [eax] 29h +
jz loc_43EE3A  +
test edi edi +
jz loc_43EE28  +
push edi  +
call off_4EE2F4  +
add esp 4 +
push 8  +
push esi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
inc eax  +
mov [esi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
test edi edi +
jz loc_43EE52  +
push edi  +
call off_4EE2F4  +
add esp 4 +
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
mov dword ptr [ebp+0] 5 +
test edx edx +
jnz loc_43EE3D  +
mov eax [esi] +
cmp byte ptr [eax] 3Ah +
jnz loc_43EE3D  +
inc eax  +
mov [esi] eax +
mov eax [esp+8+arg_C] +
mov [eax] edi +
mov eax [esi] +
cmp byte ptr [eax] 2Ah +
jnz loc_43EE97  +
inc eax  +
pop edi  +
mov [esi] eax +
xor eax eax +
pop esi  +
mov dword ptr [ebp+0] 3 +
pop ebp  +
pop ebx  +
retn   +
push esi  +
call sub_448B80  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_43EE3D  +
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 2B74h  +
push offset a__Xpath_c  +
push offset aInternalErrorA  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
push edi  +
mov edi [esp+14h+arg_0] +
xor ebx ebx +
xor ebp ebp +
cmp [edi+8] ebx +
jnz loc_43F0C6  +
mov edx [edi] +
mov cl [edx] +
cmp cl 2Eh +
jz loc_43EF2C  +
cmp cl 30h +
jb loc_43EF1A  +
cmp cl 39h +
jbe loc_43EF2C  +
push 1  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
movsd xmm3 ds:qword_4E1058 +
xorps xmm1 xmm1 +
movsd [esp+14h+var_8] xmm1 +
movaps xmm2 xmm1 +
cmp cl 30h +
jb loc_43EF7D  +
cmp cl 39h +
ja loc_43EF77  +
movzx eax cl +
mov ebp 1 +
sub eax 30h +
mulsd xmm2 xmm3 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm2 xmm0 +
test cl cl +
jz loc_43EF6E  +
lea eax [edx+1] +
mov [edi] eax +
mov edx [edi] +
mov cl [edx] +
cmp cl 30h +
jnb loc_43EF45  +
movsd [esp+14h+var_8] xmm2 +
mov edx [edi] +
push esi  +
cmp byte ptr [edx] 2Eh +
jnz loc_43F019  +
inc edx  +
xor esi esi +
mov [edi] edx +
mov cl [edx] +
cmp cl 30h +
jb loc_43EF9A  +
cmp cl 39h +
jbe loc_43EFB1  +
test ebp ebp +
jnz loc_43EFB1  +
push 1  +
push edi  +
call sub_444780  +
add esp 8 +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
cmp cl 30h +
jb loc_43EFE9  +
cmp cl 39h +
ja loc_43EFE9  +
cmp esi 14h +
jge loc_43EFE9  +
movzx eax cl +
inc esi  +
sub eax 30h +
mulsd xmm1 xmm3 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm1 xmm0 +
test cl cl +
jz loc_43EFE0  +
lea eax [edx+1] +
mov [edi] eax +
mov edx [edi] +
mov cl [edx] +
cmp cl 30h +
jnb loc_43EFB6  +
divsd xmm1 qword_4EE018[esi*8] +
mov ecx [edi] +
mov al [ecx] +
addsd xmm2 xmm1 +
movsd [esp+18h+var_8] xmm2 +
cmp al 30h +
jb loc_43F019  +
cmp al 39h +
ja loc_43F019  +
test al al +
jz loc_43F011  +
lea eax [ecx+1] +
mov [edi] eax +
mov ecx [edi] +
mov al [ecx] +
cmp al 30h +
jnb loc_43F004  +
mov ecx [edi] +
mov al [ecx] +
cmp al 65h +
jz loc_43F025  +
cmp al 45h +
jnz loc_43F096  +
test al al +
jz loc_43F02E  +
lea eax [ecx+1] +
mov [edi] eax +
mov eax [edi] +
mov cl [eax] +
cmp cl 2Dh +
jnz loc_43F041  +
inc eax  +
mov ebp 1 +
mov [edi] eax +
jmp loc_43F04B  +
cmp cl 2Bh +
jnz loc_43F049  +
inc eax  +
mov [edi] eax +
xor ebp ebp +
mov esi [edi] +
mov dl [esi] +
cmp dl 30h +
jb loc_43F077  +
cmp dl 39h +
ja loc_43F077  +
movzx eax dl +
lea ebx [ebx+ebx*4] +
lea ebx [ebx-18h] +
lea ebx [eax+ebx*2] +
test dl dl +
jz loc_43F06E  +
lea eax [esi+1] +
mov [edi] eax +
mov esi [edi] +
mov dl [esi] +
cmp dl 30h +
jnb loc_43F054  +
test ebp ebp +
jz loc_43F07D  +
neg ebx  +
movd xmm1 ebx +
movaps xmm0 xmm3 +
cvtdq2pd xmm1 xmm1 +
call sub_49B410  +
mulsd xmm0 [esp+18h+var_8] +
movaps xmm2 xmm0 +
mov esi [edi+20h] +
push 0  +
sub esp 8 +
movsd [esp+24h+var_24] xmm2 +
push dword ptr [edi+0Ch]  +
call sub_43CFD0  +
add esp 0Ch +
push eax  +
push 0  +
push 0  +
push 3  +
push 0Ch  +
push 0FFFFFFFFh  +
push dword ptr [esi+0Ch]  +
push esi  +
call sub_43E450  +
add esp 24h +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 28h +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
***
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_43F79E  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebp+8] +
cmp eax 0FFFFFFFFh +
jz loc_43F7C5  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebx+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 10h +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_43F80C  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebp+8] +
cmp eax 0FFFFFFFFh +
jz loc_43F833  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebx+0Ch] +
pop esi  +
pop ebp  +
mov dword ptr [eax+4] 0 +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_440670  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp [ebx+8] edi +
jnz loc_440670  +
push 0  +
push 0  +
push 0  +
push ebp  +
push ebx  +
call sub_446E30  +
add esp 14h +
add eax esi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+0Ch]  +
call sub_43D220  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_43F8D1  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_43F8F9  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+0Ch]  +
call sub_44B8B0  +
add esp 8 +
test eax eax +
jnz loc_43F95C  +
pop esi  +
pop ebp  +
pop edi  +
mov dword ptr [ebx+8] 5 +
pop ebx  +
add esp 28h +
retn   +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_448790  +
add esp 8 +
test eax eax +
jnz loc_43F93A  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push offset aXmlxpathcompop  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
mov dword ptr [ebx+8] 13h +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+0Ch]  +
call sub_44B8E0  +
add esp 0Ch +
test eax eax +
jnz loc_43F95C  +
pop esi  +
pop ebp  +
pop edi  +
mov dword ptr [ebx+8] 5 +
pop ebx  +
add esp 28h +
retn   +
push eax  +
push ebx  +
call sub_43C900  +
add esp 8 +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebx+2Ch] +
mov [esp+38h+arg_0] eax +
mov eax [ebx+14h] +
mov [ebx+2Ch] eax +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_43F9BB  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
cmp dword ptr [ebx+8] 0 +
mov [esp+38h+var_24] edi +
jz loc_43F9BB  +
push [esp+38h+arg_0]  +
push ebx  +
call sub_449150  +
add esp 8 +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebx+2Ch] +
mov edx [ebp+0Ch] +
add eax edx +
mov esi [ebx+14h] +
cmp esi eax +
jl loc_43FA14  +
xor ecx ecx +
test edx edx +
jle loc_43F9ED  +
mov eax [ebx+1Ch] +
lea eax [eax+esi*4] +
add eax 0FFFFFFFCh +
***
cmp dword ptr [eax] 0 +
jz loc_43FA14  +
inc ecx  +
sub eax 4 +
cmp ecx edx +
jl loc_43F9E0  +
***
mov edx [ebp+20h] +
test edx edx +
jnz loc_43FAE0  +
mov eax [ebp+1Ch] +
xor esi esi +
test eax eax +
jnz loc_43FA49  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+0Ch]  +
call sub_445750  +
add esp 8 +
jmp loc_43FAA5  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlxpathcomp_0  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push [esp+40h+arg_0]  +
mov dword ptr [ebx+8] 0Ah +
push ebx  +
call sub_449150  +
add esp 10h +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_448790  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_43FA96  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push offset aXmlxpathcomp_1  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push [esp+48h+arg_0]  +
push ebx  +
call sub_449150  +
add esp 18h +
mov dword ptr [ebx+8] 13h +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
push esi  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+0Ch]  +
call sub_4457B0  +
add esp 0Ch +
mov edx eax +
test edx edx +
jnz loc_43FADA  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebp+18h]  +
push offset aXmlxpathcomp_2  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push 9  +
push ebx  +
call sub_444780  +
add esp 14h +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov [ebp+20h] edx +
mov [ebp+24h] esi +
mov ecx [ebx+0Ch] +
mov eax [ebp+18h] +
mov esi [ecx+68h] +
mov edi [ecx+6Ch] +
mov [ecx+68h] eax +
mov ecx [ebx+0Ch] +
mov eax [ebp+24h] +
mov [ecx+6Ch] eax +
push dword ptr [ebp+0Ch]  +
push ebx  +
call edx  +
mov eax [ebx+0Ch] +
push [esp+40h+arg_0]  +
push ebx  +
mov [eax+68h] esi +
mov eax [ebx+0Ch] +
mov [eax+6Ch] edi +
call sub_449150  +
mov eax [esp+48h+var_24] +
add esp 10h +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov [esp+38h+var_20] ecx +
mov ecx [eax+4] +
mov [esp+38h+var_1C] ecx +
mov ecx [eax+48h] +
mov eax [eax+44h] +
mov [esp+38h+arg_0] eax +
mov eax [ebp+4] +
mov [esp+38h+var_18] ecx +
cmp eax 0FFFFFFFFh +
jz loc_43FB8F  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
mov ecx [esp+40h+arg_0] +
mov edi eax +
mov eax [ebx+0Ch] +
add esp 8 +
mov [eax+44h] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_18] +
mov [eax+48h] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_1C] +
mov [eax+4] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_20] +
mov [eax] ecx +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebp+8] +
cmp eax 0FFFFFFFFh +
jz loc_440642  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
mov ecx [esp+40h+arg_0] +
add edi eax +
mov eax [ebx+0Ch] +
add esp 8 +
mov [eax+44h] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_18] +
mov [eax+48h] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_1C] +
mov [eax+4] ecx +
mov eax [ebx+0Ch] +
mov ecx [esp+38h+var_20] +
mov [eax] ecx +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
pop esi  +
pop ebp  +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov edx [ebp+4] +
cmp edx 0FFFFFFFFh +
jz loc_43FD77  +
mov ecx [ebp+8] +
cmp ecx 0FFFFFFFFh +
jz loc_43FC95  +
mov ebx [esi+8] +
lea eax [edx+edx*4] +
lea eax [ebx+eax*8] +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_14] eax +
mov eax [eax] +
cmp eax 12h +
jz loc_43FC20  +
cmp eax 11h +
jnz loc_43FC95  +
mov eax [esi+8] +
lea ecx [ecx+ecx*4] +
cmp dword ptr [eax+ecx*8] 0Ch +
jnz loc_43FC95  +
mov eax [eax+ecx*8+18h] +
test eax eax +
jz loc_43FC95  +
cmp dword ptr [eax] 3 +
jnz loc_43FC95  +
movsd xmm0 qword ptr [eax+10h] +
ucomisd xmm0 ds:qword_4BF6E0 +
lahf   +
test ah 44h +
jp loc_43FC95  +
lea eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] edi +
push eax  +
push [esp+3Ch+var_14]  +
push ebx  +
call sub_440D30  +
add esp 0Ch +
mov ecx eax +
cmp [ebx+8] edi +
jnz loc_440670  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43FC8B  +
cmp dword ptr [eax] 1 +
jnz loc_43FC8B  +
mov eax [eax+4] +
test eax eax +
jz loc_43FC8B  +
cmp dword ptr [eax] 1 +
jle loc_43FC8B  +
mov dword ptr [eax] 1 +
pop esi  +
pop ebp  +
pop edi  +
mov eax ecx +
pop ebx  +
add esp 28h +
retn   +
cmp edx 0FFFFFFFFh +
jz loc_43FD77  +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jz loc_43FD77  +
mov ecx [esi+8] +
lea eax [edx+edx*4] +
cmp dword ptr [ecx+eax*8] 12h +
jnz loc_43FD77  +
mov eax [ebp+8] +
lea eax [eax+eax*4] +
cmp dword ptr [ecx+eax*8] 12h +
jnz loc_43FD77  +
mov eax [ecx+eax*8+4] +
cmp eax 0FFFFFFFFh +
jz loc_43FD77  +
lea eax [eax+eax*4] +
cmp dword ptr [ecx+eax*8] 0Eh +
jnz loc_43FD77  +
cmp [ecx+eax*8+1Ch] edi +
jnz loc_43FD77  +
cmp [ecx+eax*8+0Ch] edi +
jnz loc_43FD77  +
mov eax [ecx+eax*8+18h] +
test eax eax +
jz loc_43FD77  +
push offset aLast  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_43FD77  +
lea eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] edi +
push eax  +
mov eax [ebp+4] +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_441050  +
add esp 0Ch +
mov edx eax +
cmp [ebx+8] edi +
jnz loc_440670  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43FD6D  +
cmp dword ptr [eax] 1 +
jnz loc_43FD6D  +
mov eax [eax+4] +
test eax eax +
jz loc_43FD6D  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_43FD6D  +
mov eax [eax] +
cmp eax 1 +
jle loc_43FD6D  +
mov eax [ecx+eax*4-4] +
mov [ecx] eax +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov dword ptr [eax] 1 +
pop esi  +
pop ebp  +
pop edi  +
mov eax edx +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_43FD94  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jz loc_440642  +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_440642  +
mov eax [ebx+0Ch] +
mov eax [eax+4] +
mov [esp+38h+var_10] eax +
mov eax [ecx] +
cmp eax 7 +
jnz loc_43FFBB  +
push ebx  +
call sub_43C8A0  +
mov ecx [ebx+0Ch] +
add esp 4 +
mov [esp+38h+arg_0] eax +
mov esi [eax+1Ch] +
mov [esp+38h+var_18] esi +
mov dword ptr [ecx+4] 0 +
test esi esi +
jz loc_43FF64  +
cmp dword ptr [esi] 0 +
jz loc_43FF64  +
push 0  +
call sub_467E70  +
xor edx edx +
mov [esp+3Ch+var_1C] eax +
add esp 4 +
cmp [esi] edx +
jle loc_43FEFD  +
nop   +
mov eax [esi+8] +
lea ecx ds:0[edx*4] +
mov [esp+38h+var_14] ecx +
inc edx  +
mov [esp+38h+var_24] edx +
mov eax [ecx+eax] +
mov ecx [ebx+0Ch] +
mov eax [eax+1Ch] +
mov [ecx+4] eax +
mov ecx [ebx+0Ch] +
mov eax [esi] +
mov [ecx+44h] eax +
mov eax [ebx+0Ch] +
mov [eax+48h] edx +
mov eax [ebx+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push ebx  +
mov [esp+48h+var_20] eax +
call sub_43C900  +
mov ecx [ebp+8] +
add esp 10h +
cmp ecx 0FFFFFFFFh +
jz loc_43FE78  +
mov eax [esp+38h+var_28] +
lea ecx [ecx+ecx*4] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_43FF4E  +
push ebx  +
call sub_43C8A0  +
mov esi eax +
push esi  +
push ebx  +
call sub_444E00  +
add esp 0Ch +
test eax eax +
jz loc_43FEB8  +
mov ecx [esp+38h+var_18] +
mov eax [esp+38h+var_14] +
mov ecx [ecx+8] +
push dword ptr [eax+ecx]  +
call sub_4488E0  +
push eax  +
push [esp+40h+var_1C]  +
call sub_467D50  +
add esp 0Ch +
test esi esi +
jz loc_43FEC8  +
push esi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax [esp+38h+var_20] +
cmp [ebx+10h] eax +
jnz loc_43FEE3  +
push ebx  +
call sub_43C8A0  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 0Ch +
mov eax [ebx+0Ch] +
mov esi [esp+38h+var_18] +
mov edx [esp+38h+var_24] +
mov dword ptr [eax+4] 0 +
cmp edx [esi] +
jl loc_43FE10  +
push [esp+38h+arg_0]  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
mov eax [ebx+0Ch] +
push [esp+40h+var_1C]  +
mov dword ptr [eax+4] 0 +
mov eax [ebx+0Ch] +
mov dword ptr [eax+44h] 0FFFFFFFFh +
mov eax [ebx+0Ch] +
mov dword ptr [eax+48h] 0FFFFFFFFh +
call sub_468260  +
push eax  +
push ebx  +
call sub_43C900  +
mov eax [ebx+0Ch] +
add esp 14h +
mov ecx [esp+38h+var_10] +
pop esi  +
pop ebp  +
mov [eax+4] ecx +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
push [esp+38h+arg_0]  +
call sub_445600  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebx+0Ch] +
mov dword ptr [eax+44h] 0 +
mov eax [ebx+0Ch] +
mov dword ptr [eax+48h] 0 +
mov eax [ebp+8] +
cmp eax 0FFFFFFFFh +
jz loc_43FF99  +
lea ecx [eax+eax*4] +
mov eax [esp+38h+var_28] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
push ebx  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jz loc_43FFB2  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
push [esp+38h+arg_0]  +
jmp sub_4404D5  +
cmp eax 1 +
jnz loc_43F576  +
push ebx  +
call sub_43C8A0  +
mov ecx [ebx+0Ch] +
mov edx eax +
add esp 4 +
mov [esp+38h+var_18] edx +
mov eax [edx+4] +
mov esi [ecx+4] +
mov ebp [ecx] +
mov [esp+38h+arg_0] eax +
mov [esp+38h+var_C] esi +
mov [esp+38h+var_14] ebp +
mov dword ptr [ecx+4] 0 +
test eax eax +
jz loc_4401F7  +
cmp dword ptr [eax] 0 +
jz loc_4401F7  +
xor esi esi +
push esi  +
call sub_447B10  +
mov edx [esp+3Ch+arg_0] +
xor ecx ecx +
add esp 4 +
mov [esp+38h+var_24] eax +
mov [esp+38h+var_20] ecx +
cmp [edx] ecx +
jle loc_44017B  +
***
lea eax ds:0[ecx*4] +
mov ecx [ebx+0Ch] +
mov [esp+1Ch] eax +
mov ebp eax +
mov eax [edx+8] +
mov eax [eax+ebp] +
mov [ecx+4] eax +
mov ecx ebp +
mov eax [edx+8] +
mov ebp [esp+40h] +
mov ecx [ecx+eax] +
cmp dword ptr [ecx+4] 12h +
jz loc_440067  +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_440067  +
mov eax [ebx+0Ch] +
mov [eax] ecx +
mov eax [ebx+0Ch] +
push dword ptr [eax+4]  +
test esi esi +
jnz loc_44007E  +
push eax  +
call sub_43D070  +
add esp 8 +
mov esi eax +
jmp loc_440094  +
push dword ptr [esi+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_440094  +
mov dword ptr [ebx+8] 0Fh +
push esi  +
push ebx  +
call sub_43C900  +
mov ecx [ebx+0Ch] +
add esp 8 +
mov eax [esp+3Ch] +
mov eax [eax] +
mov [ecx+44h] eax +
mov eax [ebx+0Ch] +
mov ecx [esp+18h] +
inc ecx  +
mov [esp+18h] ecx +
mov [eax+48h] ecx +
mov eax [ebp+8] +
cmp eax 0FFFFFFFFh +
jz loc_4400DA  +
lea ecx [eax+eax*4] +
mov eax [esp+10h] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_4401D8  +
push ebx  +
call sub_43C8A0  +
push eax  +
push ebx  +
mov [esp+34h] eax +
call sub_444E00  +
add esp 0Ch +
test eax eax +
jz loc_440121  +
mov eax [esp+3Ch] +
mov ecx [eax+8] +
mov eax [esp+1Ch] +
push dword ptr [eax+ecx]  +
push dword ptr [esp+18h]  +
call loc_447790  +
add esp 8 +
test eax eax +
jns loc_440121  +
mov dword ptr [ebx+8] 0Fh +
mov eax [esp+28h] +
test eax eax +
jz loc_440135  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
cmp [ebx+10h] esi +
jnz loc_44014F  +
push ebx  +
call sub_43C8A0  +
push 1  +
push dword ptr [esi+4]  +
call loc_447A70  +
add esp 0Ch +
jmp loc_440151  +
xor esi esi +
mov eax [ebx+0Ch] +
mov edx [esp+3Ch] +
mov ecx [esp+18h] +
mov dword ptr [eax+4] 0 +
cmp ecx [edx] +
jl loc_440030  +
test esi esi +
jz loc_44017B  +
push esi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
***
push [esp+38h+var_18]  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
mov eax [ebx+0Ch] +
mov ecx [esp+40h+var_14] +
push [esp+40h+var_24]  +
mov dword ptr [eax+4] 0 +
mov eax [ebx+0Ch] +
mov dword ptr [eax+44h] 0FFFFFFFFh +
mov eax [ebx+0Ch] +
mov dword ptr [eax+48h] 0FFFFFFFFh +
mov eax [ebx+0Ch] +
mov [eax] ecx +
push dword ptr [ebx+0Ch]  +
call sub_43D2C0  +
push eax  +
push ebx  +
call sub_43C900  +
mov eax [ebx+0Ch] +
add esp 18h +
mov esi [esp+38h+var_C] +
mov [eax+4] esi +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
***
push dword ptr [esp+14h]  +
call sub_4455B0  +
push dword ptr [esp+24h]  +
call sub_445600  +
add esp 8 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
***
mov eax [ebx+0Ch] +
push edx  +
push ebx  +
mov dword ptr [eax+44h] 0 +
mov eax [ebx+0Ch] +
mov dword ptr [eax+48h] 0 +
call sub_43C900  +
mov eax [ebx+0Ch] +
add esp 8 +
mov [eax+4] esi +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebx+0Ch] +
mov [eax+4] esi +
mov eax edi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_440252  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_440670  +
mov eax [ebx+10h] +
test eax eax +
jz loc_44027D  +
cmp dword ptr [eax] 1 +
jnz loc_44027D  +
mov eax [eax+4] +
test eax eax +
jz loc_44027D  +
cmp dword ptr [eax] 1 +
jle loc_44027D  +
push eax  +
call sub_448220  +
add esp 4 +
pop esi  +
pop ebp  +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_4402A8  +
lea ecx [eax+eax*4] +
mov eax [esi+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
mov [esp+38h+var_24] eax +
mov edi eax +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jz loc_440642  +
mov eax [ebx+10h] +
mov ecx [eax] +
cmp ecx 7 +
jnz loc_4404F0  +
test eax eax +
jz loc_43F576  +
push ebx  +
call sub_43C8A0  +
add esp 4 +
mov [esp+38h+var_20] eax +
mov esi [eax+1Ch] +
mov [esp+38h+var_18] esi +
test esi esi +
jz loc_440481  +
cmp dword ptr [esi] 0 +
jz loc_440481  +
push 0  +
call sub_467E70  +
xor edx edx +
mov [esp+3Ch+var_1C] eax +
add esp 4 +
cmp [esi] edx +
jle loc_440605  +
***
mov eax [esi+8] +
lea ecx ds:0[edx*4] +
mov [esp+24h] ecx +
inc edx  +
mov [esp+34h] edx +
mov eax [ecx+eax] +
mov ecx [ebx+0Ch] +
mov eax [eax+1Ch] +
mov [ecx+4] eax +
mov ecx [ebx+0Ch] +
mov eax [esi] +
mov [ecx+44h] eax +
mov eax [ebx+0Ch] +
mov [eax+48h] edx +
mov eax [ebx+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push ebx  +
mov [esp+40h] eax +
call sub_43C900  +
mov ecx [ebp+8] +
add esp 10h +
cmp ecx 0FFFFFFFFh +
jz loc_44037C  +
mov eax [esp+10h] +
lea ecx [ecx+ecx*4] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
mov [esp+14h] edi +
cmp dword ptr [ebx+8] 0 +
jnz loc_44046B  +
push ebx  +
call sub_43C8A0  +
mov ecx eax +
add esp 4 +
mov [esp+28h] ecx +
cmp dword ptr [ecx] 7 +
jnz loc_440442  +
mov ecx [ecx+1Ch] +
xor esi esi +
mov [esp+2Ch] ecx +
cmp [ecx] esi +
jle loc_4403F9  +
mov ebx [esp+20h] +
mov ebp ecx +
mov edi [esp+1Ch] +
mov eax [ebp+8] +
mov edx [esp+24h] +
mov ecx [eax+esi*4] +
mov eax [ebx+8] +
push dword ptr [ecx+28h]  +
mov eax [edx+eax] +
push dword ptr [ecx+24h]  +
push dword ptr [eax+20h]  +
push dword ptr [eax+1Ch]  +
call sub_468070  +
add esp 10h +
test eax eax +
jz loc_4403E7  +
push eax  +
push edi  +
call sub_467D50  +
add esp 8 +
inc esi  +
cmp esi [ebp+0] +
jl loc_4403B5  +
mov ebx [esp+3Ch] +
mov ebp [esp+40h] +
mov edi [esp+14h] +
mov esi [esp+20h] +
push dword ptr [esp+28h]  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
mov eax [esp+38h] +
add esp 8 +
cmp [ebx+10h] eax +
jnz loc_440427  +
push ebx  +
call sub_43C8A0  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 0Ch +
mov eax [ebx+0Ch] +
mov edx [esp+34h] +
mov dword ptr [eax+4] 0 +
cmp edx [esi] +
jl loc_440310  +
jmp loc_440605  +
***
mov eax [esi+8] +
push ecx  +
mov ecx [esp+28h] +
mov eax [ecx+eax] +
push dword ptr [eax+1Ch]  +
call sub_468100  +
add esp 8 +
test eax eax +
jz loc_4403FD  +
push eax  +
push dword ptr [esp+20h]  +
call sub_467D50  +
add esp 8 +
jmp loc_4403FD  +
***
xor eax eax +
add esp 8 +
cmp [ebx+8] eax +
cmovnz edi eax +
***
pop esi  +
pop ebp  +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
test eax eax +
jz loc_43F576  +
cmp ecx 1 +
jnz loc_43F576  +
push ebx  +
call sub_43C8A0  +
mov [esp+3Ch+var_20] eax +
push 0  +
mov ecx [eax+4] +
mov eax [ebx+0Ch] +
mov [esp+40h+arg_0] ecx +
mov dword ptr [eax+4] 0 +
call sub_467E70  +
mov [esp+40h+var_1C] eax +
add esp 8 +
mov eax [esp+38h+arg_0] +
test eax eax +
jz loc_440605  +
xor esi esi +
cmp [eax] esi +
jle loc_440605  +
mov eax [eax+8] +
mov ecx [ebx+0Ch] +
mov eax [eax+esi*4] +
mov [ecx+4] eax +
mov eax [ebx+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push ebx  +
mov [esp+48h+var_8] eax +
call sub_43C900  +
mov ecx [ebp+8] +
add esp 10h +
cmp ecx 0FFFFFFFFh +
jz loc_440587  +
mov eax [esp+38h+var_28] +
lea ecx [ecx+ecx*4] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call sub_43F0D0  +
add esp 8 +
add edi eax +
cmp dword ptr [ebx+8] 0 +
jnz loc_44046B  +
push ebx  +
call sub_43C8A0  +
mov ecx [esp+3Ch+arg_0] +
push eax  +
mov [esp+40h+var_4] eax +
mov ecx [ecx+8] +
push dword ptr [ecx+esi*4]  +
call sub_468100  +
add esp 0Ch +
test eax eax +
jz loc_4405BF  +
push eax  +
push [esp+3Ch+var_1C]  +
call sub_467D50  +
add esp 8 +
mov eax [esp+38h+var_4] +
test eax eax +
jz loc_4405D3  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax [esp+38h+var_8] +
cmp [ebx+10h] eax +
jnz loc_4405EE  +
push ebx  +
call sub_43C8A0  +
push eax  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 0Ch +
mov eax [ebx+0Ch] +
inc esi  +
mov dword ptr [eax+4] 0 +
mov eax [esp+38h+arg_0] +
cmp esi [eax] +
jl loc_440540  +
push [esp+38h+var_20]  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
mov eax [ebx+0Ch] +
push [esp+40h+var_1C]  +
mov dword ptr [eax+4] 0 +
mov eax [ebx+0Ch] +
mov dword ptr [eax+44h] 0FFFFFFFFh +
mov eax [ebx+0Ch] +
mov dword ptr [eax+48h] 0FFFFFFFFh +
call sub_468260  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 14h +
pop esi  +
pop ebp  +
mov eax edi +
pop edi  +
pop ebx  +
add esp 28h +
retn   +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebp+0]  +
push offset aXpathUnknownPr  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
mov dword ptr [ebx+8] 0Ah +
pop esi  +
pop ebp  +
pop edi  +
xor eax eax +
pop ebx  +
add esp 28h +
retn   +
***
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [esp+28h] +
xor ebx ebx +
mov [esp+8] ebx +
cmp [esi+8] ebx +
jz loc_4406EC  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 1Ch +
retn   +
***
push ebp  +
mov ebp [esp+30h] +
push edi  +
mov edi [esi+20h] +
mov [esp+18h] edi +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_4407F2  +
mov ecx [ebp+8] +
cmp ecx 0FFFFFFFFh +
jz loc_4407F2  +
mov edx [edi+8] +
lea eax [eax+eax*4] +
cmp dword ptr [edx+eax*8] 12h +
jnz loc_4407F2  +
lea eax [ecx+ecx*4] +
cmp dword ptr [edx+eax*8] 12h +
jnz loc_4407F2  +
mov eax [edx+eax*8+4] +
cmp eax 0FFFFFFFFh +
jz loc_4407F2  +
lea eax [eax+eax*4] +
cmp dword ptr [edx+eax*8] 0Eh +
jnz loc_4407F2  +
cmp [edx+eax*8+1Ch] ebx +
jnz loc_4407F2  +
cmp [edx+eax*8+0Ch] ebx +
jnz loc_4407F2  +
mov eax [edx+eax*8+18h] +
test eax eax +
jz loc_4407F2  +
push offset aLast  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4407F2  +
lea eax [esp+30h] +
mov [esp+30h] ebx +
push eax  +
mov eax [ebp+4] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_441050  +
add esp 0Ch +
mov edx eax +
cmp [esi+8] ebx +
jnz loc_440D20  +
mov eax [esi+10h] +
test eax eax +
jz loc_4407E8  +
cmp dword ptr [eax] 1 +
jnz loc_4407E8  +
mov eax [eax+4] +
test eax eax +
jz loc_4407E8  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_4407E8  +
mov eax [eax] +
cmp eax 1 +
jle loc_4407E8  +
mov eax [ecx+eax*4-4] +
mov [ecx] eax +
mov eax [esi+10h] +
mov eax [eax+4] +
mov dword ptr [eax] 1 +
mov eax [esi+10h] +
mov eax [eax+4] +
mov eax [eax+8] +
mov ecx [eax] +
mov eax [esp+38h] +
mov [eax] ecx +
pop edi  +
pop ebp  +
pop esi  +
mov eax edx +
pop ebx  +
add esp 1Ch +
retn   +
***
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_440813  +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
mov [esp+10h] eax +
mov ebx eax +
cmp dword ptr [esi+8] 0 +
jnz loc_440D20  +
cmp dword ptr [ebp+8] 0FFFFFFFFh +
jz loc_440AA0  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_440AA0  +
mov eax [esi+0Ch] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [ecx] +
cmp eax 7 +
jnz loc_440AAA  +
push esi  +
xor edi edi +
call sub_43C8A0  +
mov ecx [esi+0Ch] +
add esp 4 +
mov [esp+14h] eax +
mov ebp [eax+1Ch] +
mov [ecx+4] edi +
test ebp ebp +
jz loc_440A41  +
cmp [ebp+0] edi +
jz loc_440A41  +
push edi  +
call sub_467E70  +
xor edx edx +
mov [esp+34h] eax +
add esp 4 +
mov [esp+1Ch] edx +
cmp [ebp+0] edx +
jle loc_4409D8  +
mov eax [ebp+8] +
lea ecx ds:0[edx*4] +
mov [esp+20h] ecx +
mov eax [ecx+eax] +
mov ecx [esi+0Ch] +
mov eax [eax+1Ch] +
mov [ecx+4] eax +
mov ecx [esi+0Ch] +
mov eax [ebp+0] +
mov [ecx+44h] eax +
lea ecx [edx+1] +
mov eax [esi+0Ch] +
mov [esp+24h] ecx +
mov [eax+48h] ecx +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
test edi edi +
jnz loc_4408D7  +
push eax  +
call sub_43D070  +
add esp 8 +
mov edi eax +
jmp loc_4408ED  +
push dword ptr [edi+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_4408ED  +
mov dword ptr [esi+8] 0Fh +
push edi  +
push esi  +
call sub_43C900  +
mov eax [esp+3Ch] +
add esp 8 +
mov eax [eax+8] +
cmp eax 0FFFFFFFFh +
jz loc_440920  +
lea ecx [eax+eax*4] +
mov eax [esp+18h] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
add ebx eax +
mov [esp+10h] ebx +
cmp dword ptr [esi+8] 0 +
jnz loc_440A2B  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
push ebx  +
push esi  +
call sub_444E00  +
add esp 0Ch +
test eax eax +
jz loc_44095F  +
mov ecx [ebp+8] +
mov eax [esp+20h] +
push dword ptr [eax+ecx]  +
push dword ptr [esi+0Ch]  +
call sub_43D220  +
push eax  +
push dword ptr [esp+3Ch]  +
call sub_467D50  +
add esp 10h +
test ebx ebx +
jz loc_44096F  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
cmp [esi+10h] edi +
jnz loc_440989  +
push esi  +
call sub_43C8A0  +
push 1  +
push dword ptr [edi+4]  +
call loc_447A70  +
add esp 0Ch +
jmp loc_44098B  +
xor edi edi +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax [esp+30h] +
cmp dword ptr [eax] 0 +
jg loc_4409B5  +
mov edx [esp+24h] +
mov ebx [esp+10h] +
mov [esp+1Ch] edx +
cmp edx [ebp+0] +
jl loc_440890  +
jmp loc_4409C8  +
mov eax [ebp+8] +
mov ecx [esp+1Ch] +
mov eax [eax+ecx*4] +
mov ecx [eax+1Ch] +
mov eax [esp+38h] +
mov [eax] ecx +
test edi edi +
jz loc_4409D8  +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
push dword ptr [esp+14h]  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
mov eax [esi+0Ch] +
push dword ptr [esp+38h]  +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax+44h] 0FFFFFFFFh +
mov eax [esi+0Ch] +
mov dword ptr [eax+48h] 0FFFFFFFFh +
call sub_468260  +
push eax  +
push esi  +
call sub_43C900  +
mov eax [esi+0Ch] +
add esp 14h +
mov ecx [esp+28h] +
pop edi  +
pop ebp  +
pop esi  +
mov [eax+4] ecx +
mov eax [esp+4] +
pop ebx  +
add esp 1Ch +
retn   +
***
push dword ptr [esp+14h]  +
call sub_445600  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
mov eax [esi+0Ch] +
mov [eax+44h] edi +
mov eax [esi+0Ch] +
mov [eax+48h] edi +
mov eax [esp+34h] +
mov eax [eax+8] +
cmp eax 0FFFFFFFFh +
jz loc_440A72  +
lea ecx [eax+eax*4] +
mov eax [esp+18h] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
add ebx eax +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jz loc_440A8B  +
push eax  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
push dword ptr [esp+14h]  +
push esi  +
call sub_43C900  +
xor eax eax +
add esp 8 +
cmp [esi+8] eax +
cmovnz ebx eax +
pop edi  +
pop ebp  +
pop esi  +
mov eax ebx +
pop ebx  +
add esp 1Ch +
retn   +
***
cmp eax 1 +
jnz loc_440D15  +
push esi  +
call sub_43C8A0  +
mov ecx [esi+0Ch] +
mov edx eax +
add esp 4 +
mov [esp+1Ch] edx +
mov ebp [edx+4] +
mov ebx [ecx+4] +
mov eax [ecx] +
mov [esp+14h] ebx +
mov [esp+20h] eax +
mov dword ptr [ecx+4] 0 +
test ebp ebp +
jz loc_440CD9  +
cmp dword ptr [ebp+0] 0 +
jz loc_440CD9  +
xor edi edi +
push edi  +
call sub_447B10  +
xor ebx ebx +
mov [esp+34h] eax +
add esp 4 +
cmp [ebp+0] ebx +
jle loc_440C5B  +
mov eax [ebp+8] +
lea edx ds:0[ebx*4] +
mov ecx [esi+0Ch] +
mov [esp+28h] edx +
mov eax [edx+eax] +
mov [ecx+4] eax +
mov eax [ebp+8] +
mov ecx [edx+eax] +
cmp dword ptr [ecx+4] 12h +
jz loc_440B3F  +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_440B3F  +
mov eax [esi+0Ch] +
mov [eax] ecx +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
test edi edi +
jnz loc_440B56  +
push eax  +
call sub_43D070  +
add esp 8 +
mov edi eax +
jmp loc_440B6C  +
push dword ptr [edi+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_440B6C  +
mov dword ptr [esi+8] 0Fh +
push edi  +
push esi  +
call sub_43C900  +
mov ecx [esi+0Ch] +
inc ebx  +
mov eax [ebp+0] +
add esp 8 +
mov [esp+24h] ebx +
mov [ecx+44h] eax +
mov eax [esi+0Ch] +
mov [eax+48h] ebx +
mov eax [esp+34h] +
mov eax [eax+8] +
cmp eax 0FFFFFFFFh +
jz loc_440BB1  +
lea ecx [eax+eax*4] +
mov eax [esp+18h] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
add [esp+10h] eax +
cmp dword ptr [esi+8] 0 +
jnz loc_440CBA  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
push ebx  +
push esi  +
call sub_444E00  +
add esp 0Ch +
test eax eax +
jz loc_440BF2  +
mov ecx [ebp+8] +
mov eax [esp+28h] +
push dword ptr [eax+ecx]  +
push dword ptr [esp+34h]  +
call loc_447790  +
add esp 8 +
test eax eax +
jns loc_440BF2  +
mov dword ptr [esi+8] 0Fh +
test ebx ebx +
jz loc_440C02  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
cmp [esi+10h] edi +
jnz loc_440C1C  +
push esi  +
call sub_43C8A0  +
push 1  +
push dword ptr [edi+4]  +
call loc_447A70  +
add esp 0Ch +
jmp loc_440C1E  +
xor edi edi +
mov eax [esi+0Ch] +
mov dword ptr [eax+4] 0 +
mov eax [esp+30h] +
cmp dword ptr [eax] 0 +
jg loc_440C40  +
mov ebx [esp+24h] +
cmp ebx [ebp+0] +
jl loc_440B10  +
jmp loc_440C4B  +
mov eax [eax+8] +
mov ecx [eax] +
mov eax [esp+38h] +
mov [eax] ecx +
test edi edi +
jz loc_440C5B  +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
push dword ptr [esp+1Ch]  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
mov eax [esi+0Ch] +
mov ecx [esp+28h] +
push dword ptr [esp+38h]  +
mov dword ptr [eax+4] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax+44h] 0FFFFFFFFh +
mov eax [esi+0Ch] +
mov dword ptr [eax+48h] 0FFFFFFFFh +
mov eax [esi+0Ch] +
mov [eax] ecx +
push dword ptr [esi+0Ch]  +
call sub_43D2C0  +
push eax  +
push esi  +
call sub_43C900  +
mov eax [esi+0Ch] +
add esp 18h +
mov ebx [esp+14h] +
pop edi  +
pop ebp  +
mov [eax+4] ebx +
mov eax [esp+8] +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
push dword ptr [esp+30h]  +
call sub_4455B0  +
push dword ptr [esp+20h]  +
call sub_445600  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
mov eax [esi+0Ch] +
push edx  +
push esi  +
mov dword ptr [eax+44h] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax+48h] 0 +
call sub_43C900  +
mov eax [esi+0Ch] +
add esp 8 +
mov [eax+4] ebx +
cmp dword ptr [esi+8] 0 +
jnz loc_440D20  +
mov eax [esi+0Ch] +
pop edi  +
pop ebp  +
pop esi  +
mov [eax+4] ebx +
mov eax [esp+4] +
pop ebx  +
add esp 1Ch +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi [esp+0Ch+arg_0] +
xor esi esi +
cmp [edi+8] esi +
jz loc_440D44  +
pop edi  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
push ebx  +
mov ebx [esp+10h+arg_4] +
push ebp  +
mov ebp [edi+20h] +
mov eax [ebx] +
cmp eax 12h +
ja loc_440FFD  +
movzx eax ds:byte_441038[eax] +
jmp ds:off_441010[eax*4]  +
mov eax [ebx+4] +
mov esi [esp+14h+arg_8] +
push esi  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_440D30  +
add esp 0Ch +
mov [esp+14h+var_4] eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [edi+10h] +
test eax eax +
jz loc_440DC1  +
cmp dword ptr [eax] 1 +
jnz loc_440DC1  +
mov eax [eax+4] +
test eax eax +
jz loc_440DC1  +
mov ecx [eax] +
cmp ecx 1 +
jl loc_440DC1  +
jle loc_440DB4  +
push eax  +
call sub_448220  +
add esp 4 +
mov eax [edi+10h] +
mov eax [eax+4] +
mov eax [eax+8] +
mov eax [eax] +
mov [esi] eax +
mov eax [ebx+8] +
push esi  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_440D30  +
add esp 0Ch +
mov [esp+14h+arg_0] eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [edi+10h] +
test eax eax +
jz loc_440E53  +
cmp dword ptr [eax] 1 +
jnz loc_440E53  +
push edi  +
call sub_43C8A0  +
mov ebp eax +
add esp 4 +
mov eax [edi+10h] +
test eax eax +
jz loc_440E53  +
cmp dword ptr [eax] 1 +
jnz loc_440E53  +
push edi  +
call sub_43C8A0  +
push dword ptr [ebp+4]  +
mov esi eax +
push dword ptr [esi+4]  +
call loc_447D40  +
push esi  +
push edi  +
mov [esi+4] eax +
call sub_43C900  +
push ebp  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
mov edx [esp+30h+arg_0] +
add esp 1Ch +
mov esi [esp+14h+var_4] +
cmp esi edx +
jle loc_440E4A  +
mov ecx [ebx+4] +
mov eax [ebx+8] +
mov [ebx+4] eax +
mov [ebx+8] ecx +
pop ebp  +
pop ebx  +
pop edi  +
lea eax [edx+esi] +
pop esi  +
pop ecx  +
retn   +
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push edi  +
call sub_449C50  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_440E94  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_440EBB  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
add esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [edi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_440F00  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_440F27  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
add esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [edi+0Ch] +
pop ebp  +
pop ebx  +
pop edi  +
mov dword ptr [eax+4] 0 +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_440F91  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
push 0  +
push 0  +
push [esp+1Ch+arg_8]  +
push ebx  +
push edi  +
call sub_446E30  +
add esp 14h +
add eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push dword ptr [ebx+18h]  +
push dword ptr [edi+0Ch]  +
call sub_43D220  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_440FBA  +
push [esp+14h+arg_8]  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_440D30  +
add esp 0Ch +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_440F91  +
mov eax [edi+10h] +
test eax eax +
jz loc_440FE1  +
cmp dword ptr [eax] 1 +
jnz loc_440FE1  +
mov eax [eax+4] +
test eax eax +
jz loc_440FE1  +
cmp dword ptr [eax] 1 +
jle loc_440FE1  +
push eax  +
call sub_448220  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
push [esp+14h+arg_8]  +
push ebx  +
push edi  +
call loc_4406D0  +
add esp 0Ch +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push ebx  +
push edi  +
call sub_43F0D0  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
sub esp 10h +
push esi  +
push edi  +
mov edi [esp+18h+arg_0] +
xor esi esi +
cmp [edi+8] esi +
jz loc_441068  +
pop edi  +
xor eax eax +
pop esi  +
add esp 10h +
retn   +
push ebx  +
mov ebx [esp+1Ch+arg_4] +
push ebp  +
mov ebp [edi+20h] +
mov eax [ebx] +
cmp eax 12h +
ja loc_441366  +
movzx eax ds:byte_44139C[eax] +
jmp ds:off_441378[eax*4]  +
mov eax [edi+0Ch] +
mov esi [esp+20h+arg_8] +
push esi  +
mov ecx [eax] +
mov [esp+24h+arg_0] ecx +
mov ecx [eax+4] +
mov [esp+24h+var_10] ecx +
mov ecx [eax+48h] +
mov eax [eax+44h] +
mov [esp+24h+var_8] eax +
mov eax [ebx+4] +
mov [esp+24h+var_C] ecx +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_441050  +
add esp 0Ch +
mov [esp+20h+var_4] eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [edi+10h] +
test eax eax +
jz loc_441107  +
cmp dword ptr [eax] 1 +
jnz loc_441107  +
mov eax [eax+4] +
test eax eax +
jz loc_441107  +
mov ecx [eax] +
cmp ecx 1 +
jl loc_441107  +
jle loc_4410F6  +
push eax  +
call sub_448220  +
add esp 4 +
mov eax [edi+10h] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov eax [eax+ecx*4-4] +
mov [esi] eax +
mov eax [edi+0Ch] +
mov ecx [esp+20h+arg_0] +
push esi  +
mov [eax] ecx +
mov eax [edi+0Ch] +
mov ecx [esp+24h+var_10] +
mov [eax+4] ecx +
mov eax [edi+0Ch] +
mov ecx [esp+24h+var_C] +
mov [eax+48h] ecx +
mov eax [edi+0Ch] +
mov ecx [esp+24h+var_8] +
mov [eax+44h] ecx +
mov eax [ebx+8] +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_441050  +
add esp 0Ch +
mov [esp+20h+arg_0] eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [edi+10h] +
test eax eax +
jz loc_4411C2  +
cmp dword ptr [eax] 1 +
jnz loc_4411C2  +
push edi  +
call sub_43C8A0  +
mov ebp eax +
add esp 4 +
mov eax [edi+10h] +
test eax eax +
jz loc_4411C2  +
cmp dword ptr [eax] 1 +
jnz loc_4411C2  +
push edi  +
call sub_43C8A0  +
push dword ptr [ebp+4]  +
mov esi eax +
push dword ptr [esi+4]  +
call loc_447D40  +
push esi  +
push edi  +
mov [esi+4] eax +
call sub_43C900  +
push ebp  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
mov edx [esp+3Ch+arg_0] +
add esp 1Ch +
mov esi [esp+20h+var_4] +
cmp esi edx +
jle loc_4411B7  +
mov ecx [ebx+4] +
mov eax [ebx+8] +
mov [ebx+4] eax +
mov [ebx+8] ecx +
pop ebp  +
pop ebx  +
pop edi  +
lea eax [edx+esi] +
pop esi  +
add esp 10h +
retn   +
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 10h +
retn   +
push edi  +
call sub_449C50  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 10h +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_441207  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_44122E  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
add esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [edi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 10h +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_441275  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_44129C  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
add esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [edi+0Ch] +
pop ebp  +
pop ebx  +
pop edi  +
mov dword ptr [eax+4] 0 +
mov eax esi +
pop esi  +
add esp 10h +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_44130A  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_43F0D0  +
add esp 8 +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
push 0  +
push [esp+24h+arg_8]  +
push 0  +
push ebx  +
push edi  +
call sub_446E30  +
add esp 14h +
add eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 10h +
retn   +
push dword ptr [ebx+18h]  +
push dword ptr [edi+0Ch]  +
call sub_43D220  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
add esp 10h +
retn   +
mov eax [ebx+4] +
cmp eax 0FFFFFFFFh +
jz loc_441335  +
push [esp+20h+arg_8]  +
lea ecx [eax+eax*4] +
mov eax [ebp+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call sub_441050  +
add esp 0Ch +
mov esi eax +
cmp dword ptr [edi+8] 0 +
jnz loc_44130A  +
mov eax [edi+10h] +
test eax eax +
jz loc_44135C  +
cmp dword ptr [eax] 1 +
jnz loc_44135C  +
mov eax [eax+4] +
test eax eax +
jz loc_44135C  +
cmp dword ptr [eax] 1 +
jle loc_44135C  +
push eax  +
call sub_448220  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
add esp 10h +
retn   +
push ebx  +
push edi  +
call sub_43F0D0  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 10h +
retn   +
***
or [eax] cl +
or [eax] cl +
or [eax] cl +
add [edx] eax +
add eax ds:8080806h[eax] +
or [eax] cl +
pop es  +
int 3  +
mov edx [esp+1Ch] +
sub esp 2Ch +
push ebx  +
mov ebx [esp+3Ch] +
push esi  +
mov esi [esp+38h] +
push edi  +
mov edi [esp+40h] +
mov ecx [edi+4] +
cmp ecx 0FFFFFFFFh +
jz loc_441401  +
mov eax [esi+20h] +
lea ecx [ecx+ecx*4] +
push edx  +
push dword ptr [esp+4Ch]  +
mov eax [eax+8] +
push ebx  +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call loc_441700  +
add esp 14h +
mov [esp+14h] eax +
cmp dword ptr [esi+8] 0 +
jnz loc_4413F8  +
test eax eax +
jg loc_44140B  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 2Ch +
retn   +
***
mov eax [esp+48h] +
mov [esp+14h] eax +
jmp loc_44140F  +
mov edx [esp+54h] +
cmp eax [esp+4Ch] +
jge loc_441428  +
push edx  +
push ebx  +
call loc_447A70  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
add esp 2Ch +
retn   +
***
mov ecx [edi+8] +
cmp ecx 0FFFFFFFFh +
jz loc_4416F0  +
mov edx [esi+0Ch] +
lea ecx [ecx+ecx*4] +
xor edi edi +
mov dword ptr [esp+20h] 0 +
push ebp  +
xor ebp ebp +
mov [esp+10h] edi +
mov eax [edx+4] +
mov [esp+34h] eax +
mov eax [edx] +
mov [esp+38h] eax +
mov eax [esi+20h] +
mov [esp+1Ch] edi +
mov [esp+44h] edx +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
mov [esp+28h] eax +
xor eax eax +
mov [esp+14h] eax +
cmp [ebx] eax +
jle loc_4416D2  +
lea ecx ds:0[eax*4] +
mov eax [ebx+8] +
mov [esp+30h] ecx +
mov ebx [ecx+eax] +
test ebx ebx +
jz loc_4415D6  +
mov eax [esp+18h] +
mov [edx+44h] eax +
mov eax [esp+1Ch] +
inc eax  +
mov [edx+4] ebx +
mov [edx+48h] eax +
cmp dword ptr [ebx+4] 12h +
mov [esp+1Ch] eax +
jz loc_4414BE  +
mov eax [ebx+20h] +
test eax eax +
jz loc_4414BE  +
mov [edx] eax +
push ebx  +
test ebp ebp +
jnz loc_4414D0  +
push edx  +
call sub_43D070  +
add esp 8 +
mov ebp eax +
jmp loc_4414E3  +
push dword ptr [ebp+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
js loc_4416A3  +
mov eax [esi+2Ch] +
mov [esp+2Ch] eax +
mov eax [esi+14h] +
push ebp  +
push esi  +
mov [esi+2Ch] eax +
call sub_43C900  +
push 1  +
push dword ptr [esp+34h]  +
push esi  +
call sub_441900  +
push esi  +
mov [esp+38h] eax +
call sub_43C8A0  +
mov ecx [esi+14h] +
add esp 18h +
mov edi eax +
cmp ecx [esi+2Ch] +
jge loc_441525  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
mov eax [esp+2Ch] +
mov [esi+2Ch] eax +
jnz loc_441625  +
cmp dword ptr [esp+20h] 0FFFFFFFFh +
jz loc_441625  +
push edi  +
push esi  +
call sub_43C900  +
add esp 8 +
cmp dword ptr [esp+20h] 0 +
jz loc_441593  +
mov edi [esp+24h] +
mov ecx [esp+50h] +
inc edi  +
mov [esp+24h] edi +
cmp edi ecx +
jl loc_441593  +
mov eax [esp+54h] +
cmp edi eax +
jg loc_441593  +
inc dword ptr [esp+10h]  +
cmp ecx eax +
jz loc_4415F0  +
cmp edi eax +
jnz loc_4415B4  +
push dword ptr [esp+58h]  +
mov eax [esp+18h] +
mov edi [esp+4Ch] +
inc eax  +
push eax  +
push edi  +
call sub_447AC0  +
add esp 0Ch +
jmp loc_4416AA  +
mov edi [esp+48h] +
mov ecx [esp+30h] +
mov eax [edi+8] +
mov dword ptr [ecx+eax] 0 +
cmp dword ptr [ebx+4] 12h +
jnz loc_4415B4  +
push ebx  +
call sub_447CF0  +
add esp 4 +
cmp [esi+10h] ebp +
jnz loc_4415D0  +
push esi  +
call sub_43C8A0  +
push dword ptr [esp+5Ch]  +
push dword ptr [ebp+4]  +
call loc_447A70  +
add esp 0Ch +
jmp loc_4415D2  +
xor ebp ebp +
mov edx [esp+44h] +
mov eax [esp+14h] +
mov ebx [esp+48h] +
inc eax  +
mov [esp+14h] eax +
cmp eax [ebx] +
jl loc_441480  +
jmp loc_4416AA  +
cmp dword ptr [ebx+4] 12h +
mov edi [esp+48h] +
jnz loc_441608  +
mov eax [edi+8] +
mov ecx [esp+14h] +
mov dword ptr [eax+ecx*4] 0 +
push dword ptr [esp+58h]  +
push edi  +
call loc_447A70  +
mov eax [edi+8] +
add esp 8 +
mov dword ptr [edi] 1 +
mov [eax] ebx +
jmp loc_4416AA  +
mov ebx [esp+44h] +
cmp edi ebp +
jz loc_441657  +
push edi  +
push ebx  +
call loc_4499D0  +
mov ecx [esi+14h] +
add esp 8 +
test ecx ecx +
jle loc_441651  +
cmp ecx [esi+2Ch] +
jg loc_44166C  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
xor edi edi +
cmp edi ebp +
jnz loc_441630  +
push dword ptr [esp+58h]  +
mov edi [esp+4Ch] +
push edi  +
call loc_447A70  +
add esp 8 +
xor edi edi +
jmp loc_4416B2  +
dec ecx  +
mov [esi+14h] ecx +
test ecx ecx +
jle loc_44168D  +
mov eax [esi+1Ch] +
mov eax [eax+ecx*4-4] +
mov [esi+10h] eax +
mov eax [esi+1Ch] +
mov edi [eax+ecx*4] +
mov dword ptr [eax+ecx*4] 0 +
jmp loc_441653  +
***
mov eax [esi+1Ch] +
mov dword ptr [esi+10h] 0 +
mov edi [eax+ecx*4] +
mov dword ptr [eax+ecx*4] 0 +
jmp loc_441653  +
***
mov dword ptr [esi+8] 0Fh +
mov edi [esp+10h] +
mov ebx [esp+44h] +
test ebp ebp +
jz loc_4416CE  +
cmp [esi+10h] ebp +
jnz loc_4416C4  +
push esi  +
call sub_43C8A0  +
add esp 4 +
push ebp  +
push ebx  +
call loc_4499D0  +
add esp 8 +
mov edx [esp+44h] +
mov eax [esp+34h] +
mov [edx+4] eax +
mov eax [esp+38h] +
mov [edx] eax +
mov eax edi +
mov dword ptr [edx+44h] 0FFFFFFFFh +
mov dword ptr [edx+48h] 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
add esp 2Ch +
retn   +
***
sub esp 1Ch +
push ebx  +
mov ebx [esp+24h] +
push esi  +
mov esi [esp+2Ch] +
mov ecx [esi+4] +
cmp ecx 0FFFFFFFFh +
jz loc_441750  +
mov eax [ebx+20h] +
lea ecx [ecx+ecx*4] +
push dword ptr [esp+38h]  +
mov edx [esp+34h] +
push dword ptr [esp+38h]  +
mov eax [eax+8] +
push edx  +
lea eax [eax+ecx*8] +
push eax  +
push ebx  +
call loc_441700  +
add esp 14h +
mov [esp+10h] eax +
cmp dword ptr [ebx+8] 0 +
mov edx eax +
jnz loc_441748  +
test edx edx +
jg loc_441758  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 1Ch +
retn   +
***
mov edx [esp+34h] +
mov [esp+10h] edx +
mov ecx [esi+8] +
cmp ecx 0FFFFFFFFh +
jz loc_4418F8  +
push ebp  +
mov ebp [ebx+0Ch] +
lea ecx [ecx+ecx*4] +
push edi  +
xor esi esi +
mov dword ptr [esp+10h] 0 +
xor edi edi +
mov [esp+14h] esi +
mov eax [ebp+4] +
mov [esp+24h] eax +
mov eax [ebp+0] +
mov [esp+28h] eax +
mov eax [ebx+20h] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
xor ecx ecx +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov [esp+34h] ecx +
cmp [eax] ecx +
jle loc_4418D2  +
mov eax [eax+8] +
lea ecx ds:0[esi*4] +
mov [esp+20h] ecx +
mov esi [ecx+eax] +
test esi esi +
jz loc_44187A  +
mov eax [esp+10h] +
inc eax  +
mov [ebp+4] esi +
mov [ebp+44h] edx +
mov [ebp+48h] eax +
cmp dword ptr [esi+4] 12h +
mov [esp+10h] eax +
jz loc_4417EB  +
mov eax [esi+20h] +
test eax eax +
jz loc_4417EB  +
mov [ebp+0] eax +
push esi  +
test edi edi +
jnz loc_4417FD  +
push ebp  +
call sub_43D070  +
add esp 8 +
mov edi eax +
jmp loc_441810  +
push dword ptr [edi+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
js loc_4418A9  +
push edi  +
push ebx  +
call sub_43C900  +
push 1  +
push dword ptr [esp+28h]  +
push ebx  +
call sub_441900  +
add esp 14h +
cmp dword ptr [ebx+8] 0 +
jnz loc_441894  +
cmp eax 0FFFFFFFFh +
jz loc_441894  +
test eax eax +
jz loc_44183B  +
inc dword ptr [esp+34h]  +
jmp loc_44185C  +
mov edx [esp+38h] +
mov ecx [esp+20h] +
mov eax [edx+8] +
mov dword ptr [ecx+eax] 0 +
cmp dword ptr [esi+4] 12h +
jnz loc_44185C  +
push esi  +
call sub_447CF0  +
add esp 4 +
cmp [ebx+10h] edi +
jnz loc_441878  +
push ebx  +
call sub_43C8A0  +
push dword ptr [esp+44h]  +
push dword ptr [edi+4]  +
call loc_447A70  +
add esp 0Ch +
jmp loc_44187A  +
xor edi edi +
mov esi [esp+14h] +
mov eax [esp+38h] +
inc esi  +
mov [esp+14h] esi +
cmp esi [eax] +
jge loc_4418B2  +
mov edx [esp+18h] +
jmp loc_4417B0  +
***
push dword ptr [esp+40h]  +
mov edx [esp+3Ch] +
push edx  +
call loc_447A70  +
add esp 8 +
xor ecx ecx +
jmp loc_4418D2  +
mov dword ptr [ebx+8] 0Fh +
jmp loc_4418CE  +
test edi edi +
jz loc_4418CE  +
cmp [ebx+10h] edi +
jnz loc_4418C4  +
push ebx  +
call sub_43C8A0  +
add esp 4 +
push edi  +
push ebp  +
call loc_4499D0  +
add esp 8 +
mov ecx [esp+34h] +
mov eax [esp+24h] +
mov [ebp+4] eax +
mov eax [esp+28h] +
pop edi  +
mov [ebp+0] eax +
mov eax ecx +
mov dword ptr [ebp+44h] 0FFFFFFFFh +
mov dword ptr [ebp+48h] 0FFFFFFFFh +
pop ebp  +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi [esp+4+arg_4] +
mov eax [edi] +
cmp eax 12h +
ja loc_44193A  +
movzx eax ds:byte_441A38[eax] +
jmp ds:off_441A24[eax*4]  +
mov ecx [edi+4] +
cmp ecx 0FFFFFFFFh +
jz loc_441950  +
mov eax [esi+20h] +
lea ecx [ecx+ecx*4] +
mov eax [eax+8] +
lea edi [eax+ecx*8] +
mov eax [edi] +
cmp eax 12h +
jbe loc_441911  +
push edi  +
push esi  +
call sub_43F0D0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jz loc_4419B1  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
cmp [esp+4+arg_8] 0 +
mov eax [edi+18h] +
push eax  +
jz loc_44196C  +
push esi  +
call sub_444E00  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
call sub_43D6E0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
mov ecx [edi+4] +
cmp ecx 0FFFFFFFFh +
jz loc_441950  +
mov eax [esi+20h] +
lea ecx [ecx+ecx*4] +
mov eax [eax+8] +
lea eax [eax+ecx*8] +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jnz loc_4419C0  +
push 1  +
push 0  +
push 0  +
push edi  +
push esi  +
call sub_446E30  +
add esp 14h +
cmp dword ptr [esi+8] 0 +
jnz loc_4419C0  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_4419C6  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp dword ptr [edi] 2 +
push ebx  +
jnz loc_4419E1  +
mov ebx [edi+8] +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
cmp [esp+8+arg_8] 0 +
push edi  +
jz loc_441A06  +
push esi  +
call sub_444E00  +
add esp 8 +
mov ebx eax +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
call sub_43D6E0  +
add esp 4 +
mov ebx eax +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push offset asc_4BF30C  +
push ebp  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jz loc_441B3C  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi] +
push 0  +
push 0  +
push 0  +
cmp byte ptr [eax] 2Fh +
push 0  +
push 0  +
jnz loc_441C0C  +
push 8  +
jmp loc_441C0E  +
push edi  +
push ebp  +
call sub_44E660  +
mov edi eax +
add esp 4 +
mov eax [esi] +
cmp byte ptr [eax+edi] 0 +
jz loc_441B91  +
mov cl [eax+edi] +
cmp cl 2Fh +
jz loc_441B91  +
cmp cl 20h +
jz loc_441B6C  +
cmp cl 9 +
jb loc_441B67  +
cmp cl 0Ah +
jbe loc_441B6C  +
cmp cl 0Dh +
jnz loc_441B75  +
inc edi  +
cmp byte ptr [eax+edi] 0 +
jnz loc_441B50  +
jmp loc_441B91  +
mov al [eax+edi] +
cmp al 3Ah +
jz loc_441B91  +
cmp al 28h +
jnz loc_441B91  +
push ebp  +
call sub_445D30  +
add esp 4 +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
neg ebx  +
mov eax [esi] +
mov ecx 1 +
push ebp  +
cmp byte ptr [edi+eax] 0 +
cmovz ebx ecx +
call off_4EE2F4  +
add esp 4 +
pop edi  +
test ebx ebx +
jnz loc_441B20  +
push esi  +
call loc_43E5D0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_441C08  +
mov eax [esi] +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_441C70  +
cmp [eax+1] cl +
jnz loc_441C5E  +
add eax 2 +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441BF4  +
cmp al 9 +
jb loc_441BF0  +
cmp al 0Ah +
jbe loc_441BF4  +
cmp al 0Dh +
jnz loc_441C25  +
test al al +
jz loc_441BE0  +
lea eax [ecx+1] +
jmp loc_441BDA  +
***
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push 9  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push dword ptr [esi+20h]  +
call sub_43E450  +
add esp 24h +
push esi  +
call loc_43E950  +
jmp loc_441C69  +
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 1  +
push 6  +
push 0Bh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 0  +
push 1  +
push 0Ah  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 48h +
jmp loc_441C63  +
cmp cl 2Fh +
jnz loc_441C70  +
push esi  +
call loc_442060  +
add esp 4 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441C84  +
cmp al 9 +
jb loc_441C80  +
cmp al 0Ah +
jbe loc_441C84  +
cmp al 0Dh +
jnz loc_441C08  +
test al al +
jz loc_441C70  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_441C70  +
***
push esi  +
mov esi [esp+8] +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441D99  +
cmp al 9 +
jb loc_441D95  +
cmp al 0Ah +
jbe loc_441D99  +
cmp al 0Dh +
jnz loc_441DA4  +
test al al +
jz loc_441D85  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_441D85  +
***
mov al [ecx] +
cmp al 24h +
jnz loc_441DB5  +
push esi  +
call sub_442890  +
jmp loc_441E56  +
cmp al 28h +
jnz loc_441E1F  +
lea eax [ecx+1] +
mov [esi] eax +
nop   +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441DD4  +
cmp al 9 +
jb loc_441DD0  +
cmp al 0Ah +
jbe loc_441DD4  +
cmp al 0Dh +
jnz loc_441DDA  +
test al al +
jz loc_441DC0  +
jmp loc_441DB9  +
***
push 1  +
push esi  +
call loc_4431F0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jnz loc_441DFD  +
mov eax [esi] +
cmp byte ptr [eax] 29h +
jz loc_441DFF  +
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441E16  +
cmp al 9 +
jb loc_441E12  +
cmp al 0Ah +
jbe loc_441E16  +
cmp al 0Dh +
jnz loc_441E60  +
test al al +
jz loc_441E02  +
lea eax [ecx+1] +
jmp loc_441E00  +
***
cmp al 30h +
jb loc_441E27  +
cmp al 39h +
jbe loc_441E38  +
cmp al 2Eh +
jnz loc_441E40  +
mov cl [ecx+1] +
cmp cl 30h +
jb loc_441E40  +
cmp cl 39h +
ja loc_441E40  +
push esi  +
call sub_43EEF0  +
jmp loc_441E56  +
cmp al 27h +
jz loc_441E50  +
cmp al 22h +
jz loc_441E50  +
push esi  +
call sub_43E650  +
jmp loc_441E56  +
push esi  +
call sub_43E830  +
add esp 4 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441E74  +
cmp al 9 +
jb loc_441E70  +
cmp al 0Ah +
jbe loc_441E74  +
cmp al 0Dh +
jnz loc_441DFD  +
test al al +
jz loc_441E60  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_441E60  +
***
push ecx  +
push esi  +
mov esi [esp+0Ch] +
push esi  +
call loc_43DF00  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_44204E  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441EB4  +
cmp al 9 +
jb loc_441EB0  +
cmp al 0Ah +
jbe loc_441EB4  +
cmp al 0Dh +
jnz loc_441EBF  +
test al al +
jz loc_441EA0  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_441EA0  +
***
push ebx  +
push ebp  +
push edi  +
mov edx [esi] +
mov cl [edx] +
cmp cl 3Ch +
jz loc_441ED4  +
cmp cl 3Eh +
jnz loc_44204B  +
mov eax [esi+20h] +
mov eax [eax+0Ch] +
mov [esp+18h] eax +
xor eax eax +
cmp cl 3Ch +
setz al  +
inc edx  +
xor ebx ebx +
mov [esp+10h] eax +
cmp byte ptr [edx] 3Dh +
setnz bl  +
test cl cl +
jz loc_441EF9  +
mov [esi] edx +
test ebx ebx +
jnz loc_441F06  +
mov eax [esi] +
cmp [eax] bl +
jz loc_441F06  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_441F1A  +
cmp al 9 +
jb loc_441F16  +
cmp al 0Ah +
jbe loc_441F1A  +
cmp al 0Dh +
jnz loc_441F23  +
test al al +
jz loc_441F06  +
lea eax [ecx+1] +
jmp loc_441F04  +
***
push esi  +
call loc_43DF00  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_44204B  +
mov edi [esi+20h] +
mov eax [edi+4] +
mov ebp [edi+0Ch] +
cmp [edi] eax +
jl loc_441F9C  +
cmp eax 0F4240h +
jl loc_441F5E  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_442028  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_441F99  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_442028  +
mov [edi+8] eax +
mov eax [edi] +
mov edx [esp+18h] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] edx +
mov eax [edi] +
mov edx [esp+10h] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 4 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+0Ch] edx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+10h] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442040  +
cmp al 9 +
jb loc_442038  +
cmp al 0Ah +
jbe loc_442040  +
cmp al 0Dh +
jnz loc_441EC2  +
test al al +
jz loc_442028  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442028  +
***
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
***
push esi  +
mov esi [esp+8] +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442079  +
cmp al 9 +
jb loc_442075  +
cmp al 0Ah +
jbe loc_442079  +
cmp al 0Dh +
jnz loc_442084  +
test al al +
jz loc_442065  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442065  +
***
mov eax ecx +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_4420D1  +
cmp [eax+1] cl +
jnz loc_442103  +
add eax 2 +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4420AB  +
cmp al 9 +
jb loc_4420A7  +
cmp al 0Ah +
jbe loc_4420AB  +
cmp al 0Dh +
jnz loc_4420B4  +
test al al +
jz loc_442097  +
lea eax [ecx+1] +
jmp loc_442095  +
***
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 1  +
push 6  +
push 0Bh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 24h +
push esi  +
call loc_4421F0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4421E2  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4420F8  +
cmp al 9 +
jb loc_4420F4  +
cmp al 0Ah +
jbe loc_4420F8  +
cmp al 0Dh +
jnz loc_44212D  +
test al al +
jz loc_4420E4  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4420E4  +
***
cmp cl 2Fh +
jnz loc_4420D1  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442124  +
cmp al 9 +
jb loc_442120  +
cmp al 0Ah +
jbe loc_442124  +
cmp al 0Dh +
jnz loc_4420D1  +
test al al +
jz loc_442110  +
lea eax [ecx+1] +
jmp loc_442109  +
***
mov eax ecx +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_4421E2  +
cmp byte ptr [eax+1] 2Fh +
jnz loc_442187  +
add eax 2 +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442159  +
cmp al 9 +
jb loc_442155  +
cmp al 0Ah +
jbe loc_442159  +
cmp al 0Dh +
jnz loc_442162  +
test al al +
jz loc_442145  +
lea eax [ecx+1] +
jmp loc_442143  +
***
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 1  +
push 6  +
push 0Bh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
push esi  +
call loc_4421F0  +
add esp 28h +
jmp loc_4421B6  +
cmp cl 2Fh +
jnz loc_4421B6  +
inc eax  +
mov [esi] eax +
nop   +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4421A4  +
cmp al 9 +
jb loc_4421A0  +
cmp al 0Ah +
jbe loc_4421A4  +
cmp al 0Dh +
jnz loc_4421AD  +
test al al +
jz loc_442190  +
lea eax [ecx+1] +
jmp loc_44218D  +
***
push esi  +
call loc_4421F0  +
add esp 4 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4421CA  +
cmp al 9 +
jb loc_4421C6  +
cmp al 0Ah +
jbe loc_4421CA  +
cmp al 0Dh +
jnz loc_4421D5  +
test al al +
jz loc_4421B6  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4421B6  +
***
mov eax ecx +
mov cl [eax] +
cmp cl 2Fh +
jz loc_44213A  +
pop esi  +
retn   +
***
sub esp 10h +
push ebp  +
push esi  +
mov esi [esp+1Ch] +
xor ebp ebp +
mov dword ptr [esp+10h] 0FFFFFFFFh +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442217  +
cmp al 9 +
jb loc_442213  +
cmp al 0Ah +
jbe loc_442217  +
cmp al 0Dh +
jnz loc_442222  +
test al al +
jz loc_442203  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442203  +
***
mov eax ecx +
mov cl [eax] +
cmp cl 2Eh +
jnz loc_4422A1  +
cmp [eax+1] cl +
jnz loc_442275  +
add eax 2 +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442249  +
cmp al 9 +
jb loc_442245  +
cmp al 0Ah +
jbe loc_442249  +
cmp al 0Dh +
jnz loc_442252  +
test al al +
jz loc_442235  +
lea eax [ecx+1] +
jmp loc_442233  +
***
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 1  +
push 0Ah  +
push 0Bh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 24h +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
cmp cl 2Eh +
jnz loc_4422A1  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442298  +
cmp al 9 +
jb loc_442290  +
cmp al 0Ah +
jbe loc_442298  +
cmp al 0Dh +
jnz loc_44252F  +
test al al +
jz loc_442280  +
lea eax [ecx+1] +
jmp loc_44227B  +
***
push ebx  +
xor ebx ebx +
push edi  +
mov [esp+10h] ebx +
mov [esp+14h] ebx +
mov [esp+24h] ebx +
mov [esp+1Ch] ebx +
cmp [esi+24h] ebx +
jz loc_4423A7  +
push esi  +
call sub_448B80  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4423A7  +
push offset aRangeTo  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4423A7  +
mov eax [esi+20h] +
push ebx  +
mov eax [eax+0Ch] +
mov [esp+1Ch] eax +
call off_4EE2F4  +
add esp 4 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442314  +
cmp al 9 +
jb loc_442310  +
cmp al 0Ah +
jbe loc_442314  +
cmp al 0Dh +
jnz loc_44231F  +
test al al +
jz loc_442300  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442300  +
***
mov eax ecx +
cmp byte ptr [eax] 28h +
jnz loc_442387  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442344  +
cmp al 9 +
jb loc_442340  +
cmp al 0Ah +
jbe loc_442344  +
cmp al 0Dh +
jnz loc_44234D  +
test al al +
jz loc_442330  +
lea eax [ecx+1] +
jmp loc_442327  +
***
push 1  +
push esi  +
call loc_4431F0  +
add esp 8 +
cmp [esi+8] ebp +
jnz loc_44252D  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442375  +
cmp al 9 +
jb loc_442371  +
cmp al 0Ah +
jbe loc_442375  +
cmp al 0Dh +
jnz loc_442380  +
test al al +
jz loc_442361  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442361  +
***
mov eax ecx +
cmp byte ptr [eax] 29h +
jz loc_44239A  +
push 7  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
inc eax  +
mov ebp 1 +
mov [esi] eax +
jmp loc_44249B  +
mov eax [esi] +
cmp byte ptr [eax] 2Ah +
jz loc_442427  +
test ebx ebx +
jnz loc_4423D5  +
push esi  +
call sub_448B80  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_4423D5  +
mov eax [esi] +
cmp byte ptr [eax] 40h +
jnz loc_442427  +
inc eax  +
mov dword ptr [esp+24h] 3 +
mov [esi] eax +
jmp loc_44242F  +
push ebx  +
call sub_445B20  +
mov edi eax +
add esp 4 +
mov [esp+24h] edi +
test edi edi +
jz loc_442427  +
mov eax [esi] +
mov cl [eax] +
cmp cl 20h +
jz loc_442400  +
cmp cl 9 +
jb loc_4423FB  +
cmp cl 0Ah +
jbe loc_442400  +
cmp cl 0Dh +
jnz loc_442409  +
test cl cl +
jz loc_4423E8  +
inc eax  +
mov [esi] eax +
jmp loc_4423E8  +
***
cmp byte ptr [eax] 3Ah +
jnz loc_442427  +
cmp byte ptr [eax+1] 3Ah +
jnz loc_442427  +
add eax 2 +
push ebx  +
mov [esi] eax +
call off_4EE2F4  +
add esp 4 +
xor ebx ebx +
jmp loc_44242F  +
mov dword ptr [esp+24h] 4 +
push ebx  +
cmp [esi+8] ebp +
jz loc_442446  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
lea eax [esp+14h] +
push eax  +
lea eax [esp+24h] +
push eax  +
lea eax [esp+20h] +
push eax  +
push esi  +
call sub_43EC60  +
add esp 14h +
mov ebx eax +
cmp [esp+14h] ebp +
jz loc_44252D  +
mov ecx [esp+10h] +
test ecx ecx +
jz loc_44249B  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44249B  +
test byte ptr [eax+0C4h] 1 +
jz loc_44249B  +
push ecx  +
push eax  +
call sub_448790  +
add esp 8 +
test eax eax +
jnz loc_44249B  +
push 13h  +
push esi  +
call sub_444780  +
add esp 8 +
mov eax [esi+20h] +
mov edi [eax+0Ch] +
mov dword ptr [eax+0Ch] 0FFFFFFFFh +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4424BC  +
cmp al 9 +
jb loc_4424B8  +
cmp al 0Ah +
jbe loc_4424BC  +
cmp al 0Dh +
jnz loc_4424C7  +
test al al +
jz loc_4424A8  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4424A8  +
***
cmp byte ptr [ecx] 5Bh +
jnz loc_4424E2  +
test ebp ebp +
jz loc_44250A  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 13h  +
push edi  +
push dword ptr [esp+34h]  +
push dword ptr [esi+20h]  +
call sub_43E450  +
add esp 24h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
mov eax [esi+20h] +
push ebx  +
push dword ptr [esp+14h]  +
push dword ptr [esp+24h]  +
push dword ptr [esp+20h]  +
push dword ptr [esp+34h]  +
push 0Bh  +
push dword ptr [eax+0Ch]  +
push edi  +
push eax  +
call sub_43E450  +
add esp 24h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
push ebx  +
push esi  +
mov esi [esp+0Ch] +
push edi  +
xor edi edi +
xor ebx ebx +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442564  +
cmp al 9 +
jb loc_442560  +
cmp al 0Ah +
jbe loc_442564  +
cmp al 0Dh +
jnz loc_44256F  +
test al al +
jz loc_442550  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442550  +
***
cmp byte ptr [ecx] 2Dh +
jnz loc_4425AB  +
mov ebx 1 +
mov eax ebx +
sub eax edi +
cmp byte ptr [ecx] 0 +
mov edi eax +
jz loc_442590  +
inc ecx  +
mov [esi] ecx +
nop   +
mov al [ecx] +
cmp al 20h +
jz loc_4425A2  +
cmp al 9 +
jb loc_44259E  +
cmp al 0Ah +
jbe loc_4425A2  +
cmp al 0Dh +
jnz loc_4425A6  +
test al al +
jmp loc_442589  +
***
cmp byte ptr [ecx] 2Dh +
jz loc_442580  +
push esi  +
call sub_442600  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4425F5  +
test ebx ebx +
jz loc_4425F5  +
mov eax [esi+20h] +
push 0  +
push 0  +
push 0  +
push 0  +
test edi edi +
jz loc_4425E3  +
push 2  +
push 5  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 24h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 3  +
push 5  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 24h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
call near ptr dword_441A3C+14h  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_44288B  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_44262C  +
cmp al 9 +
jb loc_442628  +
cmp al 0Ah +
jbe loc_44262C  +
cmp al 0Dh +
jnz loc_442637  +
test al al +
jz loc_442618  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442618  +
cmp byte ptr [ecx] 7Ch +
jnz loc_44288B  +
push ebx  +
push ebp  +
push edi  +
mov edi [esi+20h] +
mov eax [edi+4] +
mov ebp [edi+0Ch] +
cmp [edi] eax +
jl loc_4426A9  +
cmp eax 0F4240h +
jl loc_44266B  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_44273D  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4426A6  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_44273D  +
mov [edi+8] eax +
mov eax [edi] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+4] 0FFFFFFFFh +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+8] 0FFFFFFFFh +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 9 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+0Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_442747  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_44275B  +
cmp al 9 +
jb loc_442757  +
cmp al 0Ah +
jbe loc_44275B  +
cmp al 0Dh +
jnz loc_442764  +
test al al +
jz loc_442747  +
lea eax [ecx+1] +
jmp loc_442745  +
push esi  +
call near ptr dword_441A3C+14h  +
mov edi [esi+20h] +
add esp 4 +
mov eax [edi+4] +
mov ebx [edi+0Ch] +
cmp [edi] eax +
jl loc_4427D3  +
cmp eax 0F4240h +
jl loc_442795  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_442860  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4427D0  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_442860  +
mov [edi+8] eax +
mov eax [edi] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 7 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+0Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
nop   +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442874  +
cmp al 9 +
jb loc_442870  +
cmp al 0Ah +
jbe loc_442874  +
cmp al 0Dh +
jnz loc_44287F  +
test al al +
jz loc_442860  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442860  +
cmp byte ptr [ecx] 7Ch +
jz loc_442643  +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4428A9  +
cmp al 9 +
jb loc_4428A5  +
cmp al 0Ah +
jbe loc_4428A9  +
cmp al 0Dh +
jnz loc_4428B4  +
test al al +
jz loc_442895  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442895  +
mov eax ecx +
cmp byte ptr [eax] 24h +
jz loc_4428C8  +
push 4  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
push edi  +
inc eax  +
xor edi edi +
push esi  +
mov [esi] eax +
call sub_448B80  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44295E  +
mov eax [esi] +
cmp byte ptr [eax] 3Ah +
jnz loc_4428F8  +
inc eax  +
mov edi ecx +
push esi  +
mov [esi] eax +
call sub_448B80  +
add esp 4 +
mov ecx eax +
test ecx ecx +
jz loc_44295E  +
mov eax [esi+20h] +
push edi  +
push ecx  +
push 0  +
push 0  +
push 0  +
mov dword ptr [eax+0Ch] 0FFFFFFFFh +
mov eax [esi+20h] +
push 0Dh  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push eax  +
call sub_43E450  +
add esp 24h +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_442935  +
cmp al 9 +
jb loc_442931  +
cmp al 0Ah +
jbe loc_442935  +
cmp al 0Dh +
jnz loc_442940  +
test al al +
jz loc_442921  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_442921  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_442969  +
test byte ptr [eax+0C4h] 2 +
jz loc_442969  +
push 18h  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push 4  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
mov ecx [esp+14h] +
push ebp  +
mov ebp [esp+1Ch] +
push esi  +
push edi  +
xor edi edi +
mov [esp+0Ch] edi +
test ebp ebp +
jz loc_442A92  +
test ecx ecx +
jz loc_442A92  +
mov eax [ecx] +
cmp eax 1 +
jz loc_4429A2  +
cmp eax 9 +
jnz loc_442A92  +
mov ebp [ecx+4] +
mov esi [esp+14h] +
test ebp ebp +
jz loc_442A73  +
push ebx  +
xor ebx ebx +
cmp [ebp+0] ebx +
jle loc_442A72  +
mov eax [ebp+8] +
push dword ptr [eax+ebx*4]  +
call sub_424950  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_4429E7  +
push offset unk_4DE8C5  +
call sub_44E600  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_442A60  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
push eax  +
push esi  +
call sub_43C900  +
push edi  +
call off_4EE2F4  +
mov eax [esi+2Ch] +
add esp 14h +
inc eax  +
cmp [esi+14h] eax +
jge loc_442A17  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_442A30  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push dword ptr [esp+28h]  +
push dword ptr [esi+0Ch]  +
call sub_43D220  +
push eax  +
push esi  +
call sub_43C900  +
push dword ptr [esp+30h]  +
push dword ptr [esp+30h]  +
push esi  +
call sub_442EE0  +
mov edi eax +
add esp 1Ch +
mov [esp+10h] edi +
test edi edi +
jnz loc_442A6E  +
jmp loc_442A64  +
mov edi [esp+10h] +
inc ebx  +
cmp ebx [ebp+0] +
jl loc_4429C0  +
mov ecx [esp+24h] +
pop ebx  +
push ecx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push dword ptr [esp+2Ch]  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
***
mov esi [esp+14h] +
push ecx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
***
push ecx  +
mov eax [esp+14h] +
push ebx  +
mov ebx [esp+1Ch] +
push esi  +
xor esi esi +
mov [esp+8] esi +
test ebx ebx +
jz loc_442BAB  +
test eax eax +
jz loc_442BAB  +
mov ecx [eax] +
cmp ecx 1 +
jz loc_442AF1  +
cmp ecx 9 +
jnz loc_442BAB  +
mov ebx [eax+4] +
push ebp  +
mov ebp [esp+14h] +
test ebx ebx +
jz loc_442B8C  +
push edi  +
xor edi edi +
cmp [ebx] esi +
jle loc_442B8B  +
mov eax [ebx+8] +
push dword ptr [eax+edi*4]  +
call sub_424950  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_442B37  +
push offset unk_4DE8C5  +
call sub_44E600  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_442B7E  +
push esi  +
push dword ptr [ebp+0Ch]  +
call sub_43D190  +
push eax  +
push ebp  +
call sub_43C900  +
push esi  +
call off_4EE2F4  +
push dword ptr [esp+3Ch]  +
push dword ptr [ebp+0Ch]  +
call sub_43D220  +
push eax  +
push ebp  +
call sub_43C900  +
push dword ptr [esp+44h]  +
push dword ptr [esp+44h]  +
push ebp  +
call sub_442EE0  +
mov esi eax +
add esp 30h +
mov [esp+10h] esi +
test esi esi +
jnz loc_442B87  +
jmp loc_442B82  +
mov esi [esp+10h] +
inc edi  +
cmp edi [ebx] +
jl loc_442B10  +
mov eax [esp+24h] +
pop edi  +
push eax  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
push dword ptr [esp+2Ch]  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
add esp 10h +
mov eax esi +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov esi [esp+10h] +
push eax  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
test edi edi +
jz loc_442CA7  +
mov ecx [esp+arg_C] +
test ecx ecx +
jz loc_442CA7  +
mov eax [ecx] +
cmp eax 1 +
jz loc_442BF9  +
cmp eax 9 +
jnz loc_442CA7  +
mov eax [edi] +
dec eax  +
push esi  +
cmp eax 8 +
ja loc_442C7E  +
jmp ds:off_442CAC[eax*4]  +
push edi  +
push ecx  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call loc_442970  +
add esp 14h +
pop esi  +
pop edi  +
retn   +
push edi  +
push ecx  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
call loc_442CD0  +
add esp 10h +
pop esi  +
pop edi  +
retn   +
push edi  +
push ecx  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call loc_442AC0  +
add esp 14h +
pop esi  +
pop edi  +
retn   +
mov esi [esp+4+arg_0] +
push ecx  +
push esi  +
call sub_43C900  +
push 1  +
push esi  +
call sub_43CB60  +
push edi  +
push esi  +
call sub_43C900  +
push [esp+1Ch+arg_8]  +
push [esp+20h+arg_4]  +
push esi  +
call sub_442EE0  +
add esp 24h +
pop esi  +
pop edi  +
retn   +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1A31h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFC0h +
sub esp 34h +
push ebx  +
push esi  +
mov esi [ebp+10h] +
xor ebx ebx +
mov dword ptr [esp+28h] 0 +
push edi  +
test esi esi +
jz loc_442EBD  +
mov eax [esi] +
cmp eax 1 +
jz loc_442D01  +
cmp eax 9 +
jnz loc_442EBD  +
mov edi [ebp+14h] +
test edi edi +
jz loc_442EA5  +
mov eax [edi] +
cmp eax 1 +
jz loc_442D1C  +
cmp eax 9 +
jnz loc_442EA5  +
mov ecx [esi+4] +
mov eax [edi+4] +
mov [esp+34h] ecx +
mov [esp+28h] eax +
test ecx ecx +
jz loc_442EA5  +
cmp [ecx] ebx +
jle loc_442EA5  +
test eax eax +
jz loc_442EA5  +
mov eax [eax] +
test eax eax +
jle loc_442EA5  +
shl eax 3 +
push eax  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_442D84  +
push offset aComparingNodes  +
push eax  +
call sub_4448C0  +
push esi  +
call sub_445600  +
push dword ptr [ebp+14h]  +
call sub_445600  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [esp+34h] +
xor ecx ecx +
mov [esp+30h] ecx +
cmp [edx] ecx +
jle loc_442E84  +
cmp dword ptr [esp+2Ch] 0 +
jnz loc_442DF8  +
mov eax [eax+8] +
push dword ptr [eax+esi*4]  +
call sub_43D4C0  +
fstp  qword ptr [edi+esi*8] +
add esp 4 +
movsd xmm0 qword ptr [edi+esi*8] +
sub esp 8 +
movsd qword ptr [esp] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jnz loc_442E57  +
xor ebx ebx +
cmp [ebp+8] ebx +
jz loc_442E35  +
movsd xmm0 qword ptr [edi+esi*8] +
cmp [ebp+0Ch] ebx +
jz loc_442E2D  +
comisd xmm0 qword ptr [esp+38h] +
setnbe bl  +
jmp loc_442E53  +
comisd xmm0 qword ptr [esp+38h] +
jmp loc_442E50  +
cmp dword ptr [ebp+0Ch] 0 +
movsd xmm0 qword ptr [esp+38h] +
jz loc_442E4B  +
comisd xmm0 qword ptr [edi+esi*8] +
setnbe bl  +
jmp loc_442E53  +
comisd xmm0 qword ptr [edi+esi*8] +
setnb bl  +
test ebx ebx +
jnz loc_442E81  +
mov eax [esp+28h] +
inc esi  +
cmp esi [eax] +
jl loc_442DE0  +
test ebx ebx +
jnz loc_442E81  +
mov dword ptr [esp+2Ch] 1 +
mov ecx [esp+30h] +
mov edx [esp+34h] +
inc ecx  +
mov [esp+30h] ecx +
cmp ecx [edx] +
jl near ptr dword_442DA0  +
mov esi [ebp+10h] +
push edi  +
call off_4EE2F4  +
push esi  +
call sub_445600  +
push dword ptr [ebp+14h]  +
call sub_445600  +
add esp 0Ch +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
call sub_445600  +
push edi  +
call sub_445600  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ebp+14h]  +
call sub_445600  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
jz loc_4431E9  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4431E9  +
push ebp  +
push edi  +
push esi  +
call sub_43C8A0  +
push esi  +
mov ebp eax +
call sub_43C8A0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_4431CC  +
test ebp ebp +
jz loc_4431C9  +
mov eax [ebp+0] +
cmp eax 1 +
jz loc_443167  +
cmp eax 9 +
jz loc_443167  +
mov ecx [edi] +
cmp ecx 1 +
jz loc_443162  +
cmp ecx 9 +
jz loc_443162  +
cmp ecx 3 +
jz loc_442FB0  +
push edi  +
push esi  +
call sub_43C900  +
mov eax [esi+2Ch] +
add esp 8 +
inc eax  +
cmp [esi+14h] eax +
jge loc_442F6A  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_442F83  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
cmp dword ptr [edi] 3 +
jz loc_442FB0  +
push edi  +
call sub_445600  +
push ebp  +
call sub_445600  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
retn   +
cmp dword ptr [ebp+0] 3 +
jz loc_443023  +
push ebp  +
push esi  +
call sub_43C900  +
mov eax [esi+2Ch] +
add esp 8 +
inc eax  +
cmp [esi+14h] eax +
jge loc_442FD6  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_442FEF  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push esi  +
call sub_43C8A0  +
mov ebp eax +
add esp 4 +
cmp dword ptr [ebp+0] 3 +
jz loc_443023  +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 18h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
retn   +
movsd xmm0 qword ptr [edi+10h] +
push ebx  +
sub esp 8 +
movsd [esp+14h+var_14] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [ebp+10h] +
sub esp 8 +
movsd [esp+14h+var_14] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [edi+10h] +
sub esp 8 +
movsd [esp+14h+var_14] xmm0 +
call sub_445CD0  +
movsd xmm0 qword ptr [ebp+10h] +
mov ebx eax +
movsd [esp+14h+var_14] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp [esp+0Ch+arg_4] 0 +
jz loc_4430EC  +
cmp [esp+0Ch+arg_8] 0 +
jz loc_4430CB  +
cmp ebx 0FFFFFFFFh +
jnz loc_44309F  +
cmp eax ebx +
jnz loc_44313D  +
cmp eax 1 +
jnz loc_4430AC  +
cmp ebx eax +
jnz loc_44313D  +
test ebx ebx +
jnz loc_443144  +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [ebp+10h] +
comisd xmm0 qword ptr [edi+10h] +
setnbe bl  +
jmp loc_443146  +
cmp ebx 0FFFFFFFFh +
jz loc_44313D  +
cmp eax 1 +
jz loc_44313D  +
test ebx ebx +
jnz loc_443144  +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [ebp+10h] +
comisd xmm0 qword ptr [edi+10h] +
setnb bl  +
jmp loc_443146  +
cmp [esp+0Ch+arg_8] 0 +
jz loc_44311C  +
cmp ebx 1 +
jnz loc_4430FC  +
cmp eax ebx +
jnz loc_44313D  +
cmp eax 0FFFFFFFFh +
jnz loc_443105  +
cmp ebx eax +
jnz loc_44313D  +
test ebx ebx +
jnz loc_443144  +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [edi+10h] +
comisd xmm0 qword ptr [ebp+10h] +
setnbe bl  +
jmp loc_443146  +
cmp ebx 1 +
jz loc_44313D  +
cmp eax 0FFFFFFFFh +
jz loc_44313D  +
test ebx ebx +
jnz loc_443144  +
test eax eax +
jnz loc_443144  +
movsd xmm0 qword ptr [edi+10h] +
comisd xmm0 qword ptr [ebp+10h] +
setnb bl  +
jmp loc_443146  +
mov ebx 1 +
jmp loc_443146  +
xor ebx ebx +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
pop esi  +
retn   +
cmp eax 9 +
jnz loc_443173  +
mov eax [edi] +
cmp eax 1 +
jz loc_4431B3  +
cmp eax 9 +
jz loc_4431B3  +
mov eax [edi] +
cmp eax 1 +
jz loc_44319C  +
cmp eax 9 +
jz loc_44319C  +
push edi  +
xor eax eax +
cmp [esp+0Ch+arg_4] eax +
push ebp  +
push [esp+10h+arg_8]  +
setz al  +
push eax  +
push esi  +
call sub_442BD0  +
add esp 14h +
pop edi  +
pop ebp  +
pop esi  +
retn   +
push ebp  +
push edi  +
push [esp+10h+arg_8]  +
push [esp+14h+arg_4]  +
push esi  +
call sub_442BD0  +
add esp 14h +
pop edi  +
pop ebp  +
pop esi  +
retn   +
push ebp  +
push edi  +
push [esp+10h+arg_8]  +
push [esp+14h+arg_4]  +
call loc_442CD0  +
add esp 10h +
pop edi  +
pop ebp  +
pop esi  +
retn   +
push edi  +
jmp loc_4431CD  +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push esi  +
call sub_43E0C0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4433CC  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_44321C  +
cmp al 9 +
jb loc_443218  +
cmp al 0Ah +
jbe loc_44321C  +
cmp al 0Dh +
jnz loc_443227  +
test al al +
jz loc_443208  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_443208  +
***
cmp byte ptr [ecx] 6Fh +
push ebx  +
push ebp  +
push edi  +
jnz loc_443398  +
cmp byte ptr [ecx+1] 72h +
jnz loc_443398  +
mov eax [esi+20h] +
mov ebp [eax+0Ch] +
lea eax [ecx+2] +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_44325C  +
cmp al 9 +
jb loc_443258  +
cmp al 0Ah +
jbe loc_44325C  +
cmp al 0Dh +
jnz loc_443265  +
test al al +
jz loc_443248  +
lea eax [ecx+1] +
jmp loc_443246  +
***
push esi  +
call sub_43E0C0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4433C9  +
mov edi [esi+20h] +
mov eax [edi+4] +
mov ebx [edi+0Ch] +
cmp [edi] eax +
jl loc_4432DE  +
cmp eax 0F4240h +
jl loc_4432A0  +
push offset aAddingStep  +
push 0  +
call sub_4448C0  +
add esp 8 +
jmp loc_443370  +
add eax eax +
mov [edi+4] eax +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4432DB  +
mov eax [edi+4] +
cdq   +
sub eax edx +
sar eax 1 +
push offset aAddingStep  +
push 0  +
mov [edi+4] eax +
call sub_4448C0  +
add esp 8 +
jmp loc_443370  +
mov [edi+8] eax +
mov eax [edi] +
mov [edi+0Ch] eax +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+4] ebp +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov [eax+ecx*8+8] ebx +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8] 2 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+0Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+10h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+14h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+18h] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+1Ch] 0 +
mov eax [edi] +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
mov dword ptr [eax+ecx*8+20h] 0 +
inc dword ptr [edi]  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_443384  +
cmp al 9 +
jb loc_443380  +
cmp al 0Ah +
jbe loc_443384  +
cmp al 0Dh +
jnz loc_44338F  +
test al al +
jz loc_443370  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_443370  +
***
cmp byte ptr [ecx] 6Fh +
jz loc_443233  +
cmp dword ptr [esp+18h] 0 +
jz loc_4433C9  +
mov edx [esi+20h] +
mov esi [edx+0Ch] +
mov eax [edx+8] +
lea ecx [esi+esi*4] +
cmp dword ptr [eax+ecx*8] 0Ch +
jz loc_4433C9  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 12h  +
push 0FFFFFFFFh  +
push esi  +
push edx  +
call sub_43E450  +
add esp 24h +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_443509  +
push ebp  +
mov ebp [esp+10h] +
cmp ebp 2 +
jge loc_4433F5  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop ebp  +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_443444  +
cmp dword ptr [eax] 4 +
jz loc_443444  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_443417  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_443444  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_443431  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_443444  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push ebx  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_44352D  +
cmp dword ptr [ebx] 4 +
jnz loc_44352D  +
dec ebp  +
push edi  +
test ebp ebp +
jle loc_4434FC  +
mov eax [esi+10h] +
test eax eax +
jz loc_4434BF  +
cmp dword ptr [eax] 4 +
jz loc_4434BF  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_443492  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_4434BF  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_4434AC  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_4434BF  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_44350B  +
cmp dword ptr [edi] 4 +
jnz loc_44350B  +
push dword ptr [ebx+18h]  +
push dword ptr [edi+18h]  +
call sub_44E540  +
mov ecx [ebx+18h] +
mov [edi+18h] ecx +
mov [ebx+18h] eax +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
dec ebp  +
add esp 10h +
test ebp ebp +
jg loc_443470  +
push ebx  +
push esi  +
call sub_43C900  +
add esp 8 +
pop edi  +
pop ebx  +
pop ebp  +
pop esi  +
retn   +
***
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 18h +
pop edi  +
pop ebx  +
pop ebp  +
pop esi  +
retn   +
***
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop ebx  +
pop ebp  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44368D  +
cmp dword ptr [esp+0Ch] 2 +
jz loc_443561  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov ecx [esi+2Ch] +
mov edx [esi+14h] +
lea eax [ecx+2] +
cmp edx eax +
jge loc_44357B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_4435C8  +
cmp dword ptr [eax] 4 +
jz loc_4435C8  +
lea eax [ecx+1] +
cmp edx eax +
jge loc_44359B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_4435C8  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_4435B5  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_4435C8  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax [esi+10h] +
test eax eax +
jz loc_4436B0  +
cmp dword ptr [eax] 4 +
jnz loc_4436B0  +
push ebx  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_443637  +
cmp dword ptr [eax] 4 +
jz loc_443637  +
mov ecx [esi+2Ch] +
inc ecx  +
cmp [esi+14h] ecx +
jge loc_44360A  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_443637  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_443624  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_443637  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_44368F  +
cmp dword ptr [edi] 4 +
jnz loc_44368F  +
push dword ptr [ebx+18h]  +
push dword ptr [edi+18h]  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jz loc_443662  +
push 1  +
jmp loc_443664  +
push 0  +
push dword ptr [esi+0Ch]  +
call sub_43CE80  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 18h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_4437A9  +
cmp dword ptr [esp+0Ch] 1 +
jz loc_4436E1  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_4436F7  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_44379E  +
mov eax [eax] +
cmp eax 1 +
jz loc_443712  +
cmp eax 9 +
jnz loc_44379E  +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_443772  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_443772  +
mov eax [edi] +
cmp eax 1 +
jz loc_443768  +
cmp eax 9 +
jz loc_443768  +
cmp dword ptr [ecx] 1 +
jnz loc_443772  +
mov eax [ecx+8] +
test eax eax +
jz loc_443772  +
mov eax [eax] +
xor ecx ecx +
test eax eax +
jz loc_44375E  +
cmp dword ptr [eax+4] 12h +
jz loc_44375E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44375E  +
mov eax [eax+18h] +
inc ecx  +
test eax eax +
jnz loc_443756  +
movd xmm0 ecx +
cvtdq2pd xmm0 xmm0 +
jmp loc_443775  +
movd xmm0 dword ptr [ecx] +
cvtdq2pd xmm0 xmm0 +
jmp loc_443775  +
xorps xmm0 xmm0 +
sub esp 8 +
movsd qword ptr [esp] xmm0 +
push dword ptr [esi+0Ch]  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
test esi esi +
jz loc_4438C7  +
mov edx [esi] +
mov cl [edx] +
test cl cl +
jns loc_4438E4  +
mov al [edx+1] +
and al 0C0h +
cmp al 80h +
jnz loc_4438CB  +
mov al cl +
and al 0E0h +
cmp al 0E0h +
jnz loc_44385B  +
mov al [edx+2] +
and al 0C0h +
cmp al 80h +
jnz loc_4438CB  +
mov al cl +
and al 0F0h +
cmp al 0F0h +
jnz loc_443839  +
and cl 0F8h +
cmp cl al +
jnz loc_4438CB  +
mov al [edx+3] +
and al 0C0h +
cmp al 80h +
jnz loc_4438CB  +
mov eax [esp+arg_4] +
mov dword ptr [eax] 4 +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
and ecx 7 +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [edx+2] +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [edx+3] +
jmp loc_44386F  +
mov eax [esp+arg_4] +
mov dword ptr [eax] 3 +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
and ecx 0Fh +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [edx+2] +
jmp loc_44386F  +
mov eax [esp+arg_4] +
mov dword ptr [eax] 2 +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [edx+1] +
and ecx 1Fh +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
cmp ecx 100h +
jnb loc_443897  +
cmp ecx 9 +
jb loc_443889  +
cmp ecx 0Ah +
jbe loc_443893  +
cmp ecx 0Dh +
jz loc_443893  +
cmp ecx 20h +
jb loc_4438BC  +
mov eax ecx +
pop esi  +
retn   +
cmp ecx 0D7FFh +
jbe loc_443893  +
cmp ecx 0E000h +
jb loc_4438AF  +
cmp ecx 0FFFDh +
jbe loc_443893  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
jbe loc_443893  +
push 15h  +
push esi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_4] +
push 14h  +
push esi  +
mov dword ptr [eax] 0 +
call sub_444780  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_4] +
pop esi  +
mov dword ptr [eax] 1 +
movzx eax byte ptr [edx] +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_443929  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push edi  +
call sub_43D790  +
push edi  +
push dword ptr [esi+0Ch]  +
fstp  [esp+1Ch+var_8] +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_44397A  +
cmp dword ptr [eax] 3 +
jz loc_44397A  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_443961  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44397A  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_443A95  +
cmp dword ptr [eax] 3 +
jnz loc_443A95  +
movsd xmm0 [esp+10h+var_8] +
sub esp 8 +
movsd [esp+18h+var_18] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jnz loc_443A7F  +
mov eax [esi+10h] +
sub esp 8 +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+18h+var_18] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jnz loc_443A7F  +
movsd xmm1 [esp+10h+var_8] +
ucomisd xmm1 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jp loc_443A68  +
sub esp 8 +
movsd [esp+18h+var_18] xmm1 +
call sub_445900  +
mov ecx [esi+10h] +
add esp 8 +
xorps xmm0 xmm0 +
movsd xmm1 qword ptr [ecx+10h] +
test eax eax +
jz loc_443A3F  +
ucomisd xmm1 xmm0 +
lahf   +
test ah 44h +
jp loc_443A20  +
movsd xmm0 dbl_4F24A0 +
pop edi  +
movsd qword ptr [ecx+10h] xmm0 +
pop esi  +
add esp 8 +
retn   +
comisd xmm1 xmm0 +
ja loc_443A55  +
comisd xmm0 xmm1 +
jbe loc_443AA0  +
movsd xmm0 dbl_4EE148 +
pop edi  +
movsd qword ptr [ecx+10h] xmm0 +
pop esi  +
add esp 8 +
retn   +
ucomisd xmm1 xmm0 +
lahf   +
test ah 44h +
jnp loc_443A0D  +
comisd xmm1 xmm0 +
ja loc_443A2C  +
comisd xmm0 xmm1 +
jbe loc_443AA0  +
movsd xmm0 qword_4EE150 +
pop edi  +
movsd qword ptr [ecx+10h] xmm0 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+10h] +
pop edi  +
pop esi  +
movsd xmm0 qword ptr [eax+10h] +
divsd xmm0 xmm1 +
movsd qword ptr [eax+10h] xmm0 +
add esp 8 +
retn   +
mov eax [esi+10h] +
movsd xmm0 dbl_4F24A0 +
pop edi  +
pop esi  +
movsd qword ptr [eax+10h] xmm0 +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFC0h +
mov eax [ebp+0Ch] +
sub esp 34h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
test eax eax +
jz loc_443C03  +
mov ecx [eax] +
cmp ecx 1 +
jz loc_443AD9  +
cmp ecx 9 +
jnz loc_443C03  +
mov eax [eax+4] +
mov [esp+34h] eax +
test eax eax +
jz loc_443BC3  +
xor ecx ecx +
mov [esp+30h] ecx +
cmp [eax] ecx +
jle loc_443BC3  +
mov esi [ebp+8] +
mov eax [eax+8] +
push dword ptr [eax+ecx*4]  +
call sub_424950  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_443B2B  +
push offset unk_4DE8C5  +
call sub_44E600  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_443BE5  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
push eax  +
push esi  +
call sub_43C900  +
push edi  +
call off_4EE2F4  +
mov eax [esi+2Ch] +
add esp 14h +
inc eax  +
cmp [esi+14h] eax +
jge loc_443B5B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_443B74  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
movsd xmm0 qword ptr [eax+10h] +
movsd qword ptr [esp+44h] xmm0 +
call loc_4499D0  +
movsd xmm0 qword ptr [esp+44h] +
add esp 4 +
movsd qword ptr [esp] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jnz loc_443BD9  +
movsd xmm0 qword ptr [esp+38h] +
cmp [ebp+18h] eax +
jnz loc_443BCC  +
ucomisd xmm0 qword ptr [ebp+10h] +
lahf   +
test ah 44h +
jp loc_443BE5  +
mov ebx 1 +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
ucomisd xmm0 qword ptr [ebp+10h] +
lahf   +
test ah 44h +
jp loc_443BBE  +
jmp loc_443BE5  +
cmp dword ptr [ebp+18h] 0 +
mov eax 1 +
cmovnz ebx eax +
mov ecx [esp+30h] +
mov eax [esp+34h] +
inc ecx  +
mov [esp+30h] ecx +
cmp ecx [eax] +
jl loc_443B00  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [esp+0Ch] +
push ebp  +
test eax eax +
jz loc_443D1F  +
mov ebp [esp+0Ch] +
test ebp ebp +
jz loc_443D1F  +
mov ecx [ebp+0] +
cmp ecx 1 +
jz loc_443C3B  +
cmp ecx 9 +
jnz loc_443D1F  +
mov ebp [ebp+4] +
test ebp ebp +
jz loc_443D1F  +
mov ecx [ebp+0] +
test ecx ecx +
jle loc_443D1F  +
mov dl [eax] +
push esi  +
test dl dl +
jnz loc_443C5C  +
xor esi esi +
jmp loc_443C68  +
movzx esi byte ptr [eax+1] +
shl esi 8 +
movzx eax dl +
add esi eax +
push ebx  +
xor ebx ebx +
mov [esp+0Ch] esi +
push edi  +
test ecx ecx +
jle loc_443CCF  +
mov edi [esp+20h] +
mov eax [ebp+8] +
push dword ptr [eax+ebx*4]  +
call loc_448240  +
add esp 4 +
cmp eax esi +
jnz loc_443D00  +
mov eax [ebp+8] +
push dword ptr [eax+ebx*4]  +
call sub_424950  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_443CD7  +
push esi  +
push dword ptr [esp+20h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_443CEC  +
push esi  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_443D14  +
mov esi [esp+10h] +
inc ebx  +
cmp ebx [ebp+0] +
jl loc_443C80  +
pop edi  +
pop ebx  +
pop esi  +
xor eax eax +
pop ebp  +
pop ecx  +
retn   +
***
push offset unk_4DE8C5  +
push dword ptr [esp+20h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_443CC1  +
test edi edi +
jnz loc_443D06  +
test esi esi +
jz loc_443CC5  +
push esi  +
call off_4EE2F4  +
add esp 4 +
jmp loc_443CC5  +
***
test edi edi +
jnz loc_443D14  +
jmp loc_443CC9  +
***
test esi esi +
jz loc_443D14  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebx  +
pop esi  +
mov eax 1 +
pop ebp  +
pop ecx  +
retn   +
***
xor eax eax +
pop ebp  +
pop ecx  +
retn   +
***
sub esp 18h +
mov eax [esp+1Ch] +
mov dword ptr [esp] 0 +
test eax eax +
jz loc_44409C  +
mov ecx [eax] +
cmp ecx 1 +
jz loc_443D56  +
cmp ecx 9 +
jnz loc_44409C  +
push ebx  +
mov ebx [esp+24h] +
test ebx ebx +
jz loc_444095  +
mov ecx [ebx] +
cmp ecx 1 +
jz loc_443D73  +
cmp ecx 9 +
jnz loc_444095  +
mov ebx [ebx+4] +
push ebp  +
push esi  +
mov esi [eax+4] +
mov [esp+18h] esi +
test esi esi +
jz loc_44408C  +
mov ebp [esi] +
test ebp ebp +
jle loc_44408C  +
test ebx ebx +
jz loc_44408C  +
mov edx [ebx] +
test edx edx +
jle loc_44408C  +
cmp dword ptr [esp+30h] 0 +
push edi  +
jnz loc_443DD5  +
xor edi edi +
test ebp ebp +
jle loc_443DD5  +
xor ecx ecx +
test edx edx +
jle loc_443DD0  +
mov eax [esi+8] +
mov esi [eax+edi*4] +
mov eax [ebx+8] +
cmp esi [eax] +
jz loc_443E08  +
inc ecx  +
add eax 4 +
cmp ecx edx +
jl loc_443DC0  +
mov esi [esp+1Ch] +
inc edi  +
cmp edi ebp +
jl loc_443DB1  +
lea eax ds:0[ebp*4] +
push eax  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
mov [esp+14h] edi +
test edi edi +
jnz loc_443E15  +
push offset aComparingNodes  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
mov eax 1 +
pop ebx  +
add esp 18h +
retn   +
***
mov eax [esi] +
shl eax 2 +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esp+18h] eax +
test eax eax +
jnz loc_443E4B  +
push offset aComparingNodes  +
push eax  +
call sub_4448C0  +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
mov eax [esi] +
shl eax 2 +
push eax  +
push 0  +
push edi  +
call sub_48CF40  +
mov eax [ebx] +
shl eax 2 +
push eax  +
call off_4EE2E8  +
mov ebp eax +
add esp 10h +
mov [esp+20h] ebp +
test ebp ebp +
jnz loc_443E9B  +
push offset aComparingNodes  +
push eax  +
call sub_4448C0  +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
mov eax [ebx] +
shl eax 2 +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esp+24h] eax +
test eax eax +
jnz loc_443EE2  +
push offset aComparingNodes  +
push eax  +
call sub_4448C0  +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
push ebp  +
call off_4EE2F4  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
mov eax [ebx] +
shl eax 2 +
push eax  +
push 0  +
push ebp  +
call sub_48CF40  +
xor ecx ecx +
add esp 0Ch +
mov [esp+2Ch] ecx +
cmp [esi] ecx +
jle loc_444085  +
mov eax [esp+18h] +
lea edi [eax+ecx*4] +
mov eax [esi+8] +
push dword ptr [eax+ecx*4]  +
call loc_448240  +
mov [edi] eax +
add esp 4 +
xor edi edi +
cmp [ebx] edi +
jle loc_443FDF  +
mov esi ebp +
mov ebp [esp+24h] +
sub ebp [esp+20h] +
mov ecx [esp+2Ch] +
test ecx ecx +
jnz loc_443F4D  +
mov eax [ebx+8] +
push dword ptr [eax+edi*4]  +
call loc_448240  +
mov ecx [esp+30h] +
add esp 4 +
mov [esi+ebp] eax +
mov eax [esp+18h] +
mov eax [eax+ecx*4] +
cmp eax [esi+ebp] +
jz loc_443F6A  +
cmp dword ptr [esp+34h] 0 +
jnz loc_444077  +
mov ecx [esp+10h] +
jmp loc_443FC7  +
mov eax [esp+14h] +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_443F91  +
mov eax [esp+1Ch] +
mov eax [eax+8] +
push dword ptr [eax+ecx*4]  +
call sub_424950  +
mov ecx [esp+30h] +
add esp 4 +
mov edx [esp+14h] +
mov [edx+ecx*4] eax +
cmp dword ptr [esi] 0 +
jnz loc_443FA6  +
mov eax [ebx+8] +
push dword ptr [eax+edi*4]  +
call sub_424950  +
add esp 4 +
mov [esi] eax +
mov eax [esp+2Ch] +
mov ecx [esp+14h] +
push dword ptr [esi]  +
push dword ptr [ecx+eax*4]  +
call sub_44E370  +
mov ecx eax +
add esp 8 +
xor ecx [esp+34h] +
mov [esp+10h] ecx +
jnz loc_443FF0  +
inc edi  +
add esi 4 +
cmp edi [ebx] +
jl loc_443F30  +
test ecx ecx +
jnz loc_443FF0  +
mov esi [esp+1Ch] +
mov ebp [esp+20h] +
mov ecx [esp+2Ch] +
inc ecx  +
mov [esp+2Ch] ecx +
cmp ecx [esi] +
jl loc_443F01  +
mov ebp [esp+10h] +
mov edi [esp+1Ch] +
xor esi esi +
cmp [edi] esi +
jle loc_44401D  +
mov ebp [esp+14h] +
mov eax [ebp+esi*4+0] +
test eax eax +
jz loc_444014  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc esi  +
cmp esi [edi] +
jl loc_444002  +
mov ebp [esp+10h] +
xor esi esi +
cmp [ebx] esi +
jle loc_444042  +
mov ebp [esp+20h] +
mov eax [ebp+esi*4+0] +
test eax eax +
jz loc_444039  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc esi  +
cmp esi [ebx] +
jl loc_444027  +
mov ebp [esp+10h] +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
push dword ptr [esp+24h]  +
call off_4EE2F4  +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
push dword ptr [esp+30h]  +
call off_4EE2F4  +
add esp 10h +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn   +
***
mov ebp 1 +
mov [esp+10h] ebp +
jmp loc_443FF4  +
***
xor ebp ebp +
jmp loc_443FF4  +
***
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 18h +
retn   +
***
xor eax eax +
pop ebx  +
add esp 18h +
retn   +
***
xor eax eax +
add esp 18h +
retn   +
***
mov ebp [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
test ebp ebp +
jz loc_444235  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_444235  +
push ebx  +
push edi  +
push ebp  +
call sub_43C8A0  +
push ebp  +
mov ebx eax +
call sub_43C8A0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_444217  +
test ebx ebx +
jz loc_444214  +
cmp edi ebx +
jnz loc_44410C  +
push edi  +
call sub_445600  +
add esp 4 +
mov eax 1 +
pop edi  +
pop ebx  +
pop ebp  +
pop ecx  +
retn   +
mov eax [ebx] +
cmp eax 1 +
jz loc_444134  +
cmp eax 9 +
jz loc_444134  +
mov eax [edi] +
cmp eax 1 +
jz loc_444146  +
cmp eax 9 +
jz loc_444134  +
push ebx  +
push edi  +
push ebp  +
call sub_444260  +
add esp 0Ch +
pop edi  +
pop ebx  +
pop ebp  +
pop ecx  +
retn   +
mov eax [edi] +
cmp eax 1 +
jz loc_444146  +
cmp eax 9 +
jz loc_444146  +
mov eax ebx +
mov ebx edi +
mov edi eax +
mov eax [ebx] +
dec eax  +
cmp eax 8 +
ja loc_4441F6  +
jmp ds:off_44423C[eax*4]  +
push 0  +
push ebx  +
push edi  +
call loc_443D30  +
add esp 0Ch +
mov [esp+10h+var_4] eax +
jmp loc_4441F6  +
mov eax [edi+4] +
test eax eax +
jz loc_44418D  +
cmp dword ptr [eax] 0 +
jz loc_44418D  +
xor eax eax +
mov ecx 1 +
cmp ecx [ebx+8] +
setz al  +
mov [esp+10h+var_4] eax +
jmp loc_4441F6  +
xor eax eax +
xor ecx ecx +
cmp ecx [ebx+8] +
setz al  +
mov [esp+10h+var_4] eax +
jmp loc_4441F6  +
movsd xmm0 qword ptr [ebx+10h] +
push 0  +
sub esp 8 +
movsd [esp+1Ch+var_1C] xmm0 +
push edi  +
push ebp  +
call loc_443AB0  +
add esp 14h +
mov [esp+10h+var_4] eax +
jmp loc_4441F6  +
push 0  +
push dword ptr [ebx+18h]  +
push edi  +
call loc_443C10  +
add esp 0Ch +
mov [esp+10h+var_4] eax +
jmp loc_4441F6  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1C24h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
mov eax [esp+20h+var_4] +
add esp 10h +
pop edi  +
pop ebx  +
pop ebp  +
pop ecx  +
retn   +
push edi  +
jmp loc_444218  +
push ebx  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
add esp 8 +
push 0Ah  +
push ebp  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebx  +
pop ebp  +
pop ecx  +
retn   +
xor eax eax +
pop ebp  +
pop ecx  +
retn   +
***
mov esi [esp+arg_4] +
xor ebx ebx +
push edi  +
mov eax [esi] +
add eax 0FFFFFFFEh +
cmp eax 6 +
ja loc_4446EA  +
jmp ds:off_444710[eax*4]  +
mov edi [esp+4+arg_8] +
mov eax [edi] +
add eax 0FFFFFFFEh +
cmp eax 6 +
ja loc_4446EE  +
jmp ds:off_44472C[eax*4]  +
mov eax [esi+8] +
xor ebx ebx +
cmp eax [edi+8] +
setz bl  +
jmp loc_4446EE  +
movsd xmm0 qword ptr [edi+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_43D540  +
xor ebx ebx +
add esp 8 +
cmp [esi+8] eax +
setz bl  +
jmp loc_4446EE  +
mov eax [edi+18h] +
test eax eax +
jz loc_4442E6  +
cmp [eax] bl +
jz loc_4442E6  +
mov eax 1 +
xor ebx ebx +
cmp [esi+8] eax +
setz bl  +
jmp loc_4446EE  +
xor eax eax +
xor ebx ebx +
cmp [esi+8] eax +
setz bl  +
jmp loc_4446EE  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1B4Eh  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
jmp loc_4446EE  +
mov edi [esp+4+arg_8] +
mov eax [edi] +
add eax 0FFFFFFFEh +
cmp eax 6 +
ja loc_4446EE  +
jmp ds:off_444748[eax*4]  +
movsd xmm0 qword ptr [esi+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_43D540  +
xor ebx ebx +
add esp 8 +
cmp [edi+8] eax +
setz bl  +
jmp loc_4446EE  +
mov esi [esp+4+arg_0] +
push edi  +
push esi  +
call sub_43C900  +
add esp 8 +
test esi esi +
jz loc_4443A5  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44438C  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
push esi  +
call sub_43C8A0  +
add esp 4 +
mov edi eax +
jmp loc_4443B6  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push esi  +
call sub_43C8A0  +
add esp 4 +
mov edi eax +
jmp loc_4443B6  +
mov esi [esp+4+arg_0] +
mov ebx [esp+4+arg_4] +
sub esp 8 +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_4444D1  +
movsd xmm0 qword ptr [edi+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_4444D1  +
movsd xmm0 qword ptr [ebx+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
sub esp 8 +
cmp eax 1 +
jnz loc_444430  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
lea ebx [eax-1] +
neg ebx  +
sbb ebx ebx +
inc ebx  +
jmp loc_4446F2  +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
movsd xmm0 qword ptr [edi+10h] +
add esp 8 +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
cmp eax 0FFFFFFFFh +
jz loc_4444A7  +
call sub_445CD0  +
add esp 8 +
sub esp 8 +
cmp eax 1 +
jnz loc_444483  +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
lea ebx [eax-1] +
neg ebx  +
sbb ebx ebx +
inc ebx  +
jmp loc_4446F2  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
movsd xmm0 qword ptr [ebx+10h] +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_4444BC  +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
xor ebx ebx +
add esp 8 +
cmp eax 0FFFFFFFFh +
setz bl  +
jmp loc_4446F2  +
ucomisd xmm0 qword ptr [edi+10h] +
lahf   +
test ah 44h +
jp loc_4444D1  +
mov ebx 1 +
jmp loc_4446F2  +
xor ebx ebx +
jmp loc_4446F2  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1B87h  +
jmp loc_444306  +
mov edi [esp+4+arg_8] +
mov eax [edi] +
add eax 0FFFFFFFEh +
cmp eax 6 +
ja loc_4446EE  +
jmp ds:off_444764[eax*4]  +
mov eax [esi+18h] +
test eax eax +
jz loc_444524  +
cmp [eax] bl +
jz loc_444524  +
mov eax 1 +
xor ebx ebx +
cmp [edi+8] eax +
setz bl  +
jmp loc_4446EE  +
xor eax eax +
xor ebx ebx +
cmp [edi+8] eax +
setz bl  +
jmp loc_4446EE  +
push dword ptr [edi+18h]  +
push dword ptr [esi+18h]  +
call sub_44E370  +
add esp 8 +
mov ebx eax +
jmp loc_4446EE  +
mov ebx [esp+4+arg_0] +
push esi  +
push ebx  +
call sub_43C900  +
add esp 8 +
test ebx ebx +
jz loc_444589  +
mov eax [ebx+2Ch] +
inc eax  +
cmp [ebx+14h] eax +
jge loc_444570  +
push 17h  +
push ebx  +
call sub_444780  +
add esp 8 +
jmp loc_444589  +
push ebx  +
call sub_43C8A0  +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_43CCC0  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 14h +
push ebx  +
call sub_43C8A0  +
mov ebx eax +
push ecx  +
mov [esp+0Ch+arg_4] ebx +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_4446AC  +
movsd xmm0 qword ptr [edi+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_4446AC  +
movsd xmm0 qword ptr [ebx+10h] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
sub esp 8 +
cmp eax 1 +
jnz loc_444609  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
lea ebx [eax-1] +
neg ebx  +
sbb ebx ebx +
inc ebx  +
jmp loc_4446EE  +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
movsd xmm0 qword ptr [edi+10h] +
add esp 8 +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
cmp eax 0FFFFFFFFh +
jz loc_444680  +
call sub_445CD0  +
add esp 8 +
sub esp 8 +
cmp eax 1 +
jnz loc_44465C  +
movsd xmm0 qword ptr [ebx+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
add esp 8 +
lea ebx [eax-1] +
neg ebx  +
sbb ebx ebx +
inc ebx  +
jmp loc_4446EE  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
movsd xmm0 qword ptr [ebx+10h] +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_444692  +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_445CD0  +
xor ebx ebx +
add esp 8 +
cmp eax 0FFFFFFFFh +
setz bl  +
jmp loc_4446EE  +
ucomisd xmm0 qword ptr [edi+10h] +
mov esi [esp+4+arg_0] +
lahf   +
test ah 44h +
jp loc_4444D1  +
mov ebx 1 +
jmp loc_4446F2  +
xor ebx ebx +
jmp loc_4446EE  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1BC4h  +
jmp loc_444306  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1BCFh  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
mov edi [esp+4+arg_8] +
mov esi [esp+4+arg_0] +
push [esp+4+arg_4]  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push edi  +
test esi esi +
js loc_44478F  +
cmp esi 19h +
jle loc_444794  +
mov esi 19h +
mov edi [esp+4+arg_0] +
test edi edi +
jnz loc_4447D1  +
push off_4EE0E0[esi*4]  +
push offset unk_4BC790  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push 0  +
push 0  +
push 2  +
lea eax [esi+4B0h] +
push eax  +
push 0Ch  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop edi  +
pop esi  +
retn   +
mov eax [edi+0Ch] +
mov [edi+8] esi +
test eax eax +
jnz loc_4447F7  +
push off_4EE0E0[esi*4]  +
mov ecx [edi+4] +
push offset unk_4BC790  +
push eax  +
mov eax [edi] +
sub eax ecx +
push eax  +
push 0  +
push 0  +
push ecx  +
jmp loc_4447AD  +
add eax 88h +
push ebx  +
push eax  +
call sub_43B810  +
mov eax [edi+0Ch] +
lea ebx [esi+4B0h] +
mov dword ptr [eax+88h] 0Ch +
mov eax [edi+0Ch] +
mov [eax+8Ch] ebx +
mov eax [edi+0Ch] +
mov dword ptr [eax+94h] 2 +
push dword ptr [edi+4]  +
call sub_44E600  +
mov ecx [edi+0Ch] +
add esp 8 +
mov [ecx+0A0h] eax +
mov eax [edi+0Ch] +
mov ecx [edi] +
sub ecx [edi+4] +
mov [eax+0ACh] ecx +
mov ecx [edi+0Ch] +
mov eax [ecx+0BCh] +
mov [ecx+0B8h] eax +
mov edx [edi+0Ch] +
mov ecx [edx+84h] +
test ecx ecx +
jz loc_444880  +
lea eax [edx+88h] +
push eax  +
push dword ptr [edx+80h]  +
call ecx  +
add esp 8 +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push off_4EE0E0[esi*4]  +
mov ecx [edi+4] +
mov eax [edi] +
push offset unk_4BC790  +
push 0  +
sub eax ecx +
push eax  +
push 0  +
push 0  +
push ecx  +
push 0  +
push 0  +
push 2  +
push ebx  +
push 0Ch  +
push dword ptr [edx+0BCh]  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
sub esp 0CCh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0CCh+var_4] eax +
mov eax [esp+0CCh+arg_4] +
push esi  +
mov esi [esp+0D0h+arg_0] +
test esi esi +
jz loc_44496C  +
test eax eax +
jz loc_444913  +
push eax  +
push offset aMemoryAllocati  +
lea eax [esp+0D8h+var_CC] +
push 0C8h  +
push eax  +
call sub_44E3B0  +
lea eax [esp+0E0h+var_CC] +
push eax  +
call sub_44E600  +
add esp 14h +
jmp loc_444920  +
push offset aMemoryAlloca_0  +
call sub_44E600  +
add esp 4 +
mov ecx [esi+84h] +
mov [esi+90h] eax +
lea eax [esi+88h] +
mov dword ptr [eax] 0Ch +
mov dword ptr [esi+8Ch] 2 +
test ecx ecx +
jz loc_4449DC  +
push eax  +
push dword ptr [esi+80h]  +
call ecx  +
add esp 8 +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
test eax eax +
jz loc_4449B1  +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Ch  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
push offset aMemoryAlloca_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Ch  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 40h +
mov ecx [esp+0D0h+var_4] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
***
push ecx  +
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_444C40  +
cmp dword ptr [esp+10h] 2 +
jz loc_444A23  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ecx  +
retn   +
***
mov eax [edi+2Ch] +
add eax 2 +
cmp [edi+14h] eax +
jge loc_444A3C  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ecx  +
retn   +
***
push ebx  +
push ebp  +
push edi  +
call sub_4490E0  +
mov ecx [edi+10h] +
add esp 4 +
mov ebp eax +
test ecx ecx +
jz loc_444A98  +
cmp dword ptr [ecx] 4 +
jz loc_444A98  +
mov ecx [edi+2Ch] +
inc ecx  +
cmp [edi+14h] ecx +
jge loc_444A6B  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
jmp loc_444A98  +
push edi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_444A85  +
push 0Ah  +
push edi  +
call sub_444780  +
add esp 8 +
jmp loc_444A98  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43CD20  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
push edi  +
call sub_43C8A0  +
add esp 4 +
mov [esp+0Ch] eax +
call sub_45D830  +
mov ebx eax +
mov byte ptr [esp+14h] 25h +
mov byte ptr [esp+17h] 0 +
test ebx ebx +
jz loc_444C13  +
push esi  +
mov esi [esp+10h] +
mov esi [esi+18h] +
mov cl [esi] +
test cl cl +
jz loc_444C12  +
cmp cl 41h +
jb loc_444ADE  +
cmp cl 5Ah +
jbe loc_444BFA  +
cmp cl 61h +
jb loc_444AEC  +
cmp cl 7Ah +
jbe loc_444BFA  +
cmp cl 30h +
jb loc_444AFA  +
cmp cl 39h +
jbe loc_444BFA  +
cmp cl 2Dh +
jz loc_444BFA  +
cmp cl 5Fh +
jz loc_444BFA  +
cmp cl 2Eh +
jz loc_444BFA  +
cmp cl 21h +
jz loc_444BFA  +
cmp cl 7Eh +
jz loc_444BFA  +
cmp cl 2Ah +
jz loc_444BFA  +
cmp cl 27h +
jz loc_444BFA  +
cmp cl 28h +
jz loc_444BFA  +
cmp cl 29h +
jz loc_444BFA  +
cmp cl 25h +
jnz loc_444B8A  +
mov al [esi+1] +
cmp al 41h +
jb loc_444B5B  +
cmp al 46h +
jbe loc_444B6B  +
cmp al 61h +
jb loc_444B63  +
cmp al 66h +
jbe loc_444B6B  +
cmp al 30h +
jb loc_444B8A  +
cmp al 39h +
ja loc_444B8A  +
mov al [esi+2] +
cmp al 41h +
jb loc_444B7A  +
cmp al 46h +
jbe loc_444BFA  +
cmp al 61h +
jb loc_444B82  +
cmp al 66h +
jbe loc_444BFA  +
cmp al 30h +
jb loc_444B8A  +
cmp al 39h +
jbe loc_444BFA  +
test ebp ebp +
jnz loc_444BC0  +
cmp cl 3Bh +
jz loc_444BFA  +
cmp cl 2Fh +
jz loc_444BFA  +
cmp cl 3Fh +
jz loc_444BFA  +
cmp cl 3Ah +
jz loc_444BFA  +
cmp cl 40h +
jz loc_444BFA  +
cmp cl 26h +
jz loc_444BFA  +
cmp cl 3Dh +
jz loc_444BFA  +
cmp cl 2Bh +
jz loc_444BFA  +
cmp cl 24h +
jz loc_444BFA  +
cmp cl 2Ch +
jz loc_444BFA  +
shr cl 4 +
cmp cl 0Ah +
jnb loc_444BCD  +
add cl 30h +
jmp loc_444BD0  +
add cl 37h +
mov [esp+19h] cl +
mov al [esi] +
and al 0Fh +
cmp al 0Ah +
jnb loc_444BEB  +
add al 30h +
mov [esp+1Ah] al +
lea eax [esp+18h] +
push 3  +
push eax  +
jmp loc_444BFD  +
add al 37h +
mov [esp+1Ah] al +
lea eax [esp+18h] +
push 3  +
push eax  +
jmp loc_444BFD  +
push 1  +
push esi  +
push ebx  +
call sub_45D320  +
mov cl [esi+1] +
inc esi  +
add esp 0Ch +
test cl cl +
jnz loc_444AD0  +
pop esi  +
push ebx  +
call sub_45D810  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43D190  +
push eax  +
push edi  +
call sub_43C900  +
push ebx  +
call sub_45DAC0  +
push dword ptr [esp+24h]  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
add esp 20h +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
test esi esi +
jz loc_444CE3  +
push edi  +
push dword ptr [esi+4]  +
push dword ptr [esi+0Ch]  +
call loc_44B5F0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_444C9A  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_444C82  +
push ecx  +
call sub_445460  +
add esp 4 +
mov eax [esi] +
mov [esi+20h] edi +
test eax eax +
jz loc_444CD1  +
cmp byte ptr [eax] 0 +
jz loc_444CD1  +
inc eax  +
mov [esi] eax +
cmp byte ptr [eax] 0 +
jnz loc_444C90  +
jmp loc_444CD1  +
push 1  +
push esi  +
call loc_4431F0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
jnz loc_444CD5  +
mov edx [esi+20h] +
test edx edx +
jz loc_444CD1  +
cmp dword ptr [edx] 1 +
jle loc_444CD1  +
mov eax [edx+0Ch] +
test eax eax +
js loc_444CD1  +
lea ecx [eax+eax*4] +
mov eax [edx+8] +
lea eax [eax+ecx*8] +
push eax  +
push edx  +
call loc_4489D0  +
add esp 8 +
cmp dword ptr [esi+8] 0 +
pop edi  +
jnz loc_444CE3  +
push 0  +
push esi  +
call sub_449E30  +
add esp 8 +
pop esi  +
retn   +
***
mov esi [esp+arg_4] +
xor ebx ebx +
test esi esi +
jnz loc_444D28  +
push offset aNullContextPoi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 3B39h  +
push offset a__Xpath_c  +
push 3  +
push 1  +
push 0Ch  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_43A650  +
add esp 40h +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
push edi  +
call sub_445AA0  +
push esi  +
push [esp+8+arg_0]  +
call sub_446630  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_444D45  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push ebp  +
push edi  +
call sub_444C50  +
mov eax [edi] +
add esp 4 +
cmp [eax] bl +
jnz loc_444D67  +
cmp [edi+8] ebx +
jnz loc_444D67  +
push edi  +
call sub_43C8A0  +
add esp 4 +
mov ebp eax +
jmp loc_444D74  +
push 7  +
push edi  +
call sub_444780  +
add esp 8 +
xor ebp ebp +
mov eax [edi+14h] +
test eax eax +
jle loc_444DC6  +
cmp eax [edi+2Ch] +
jle loc_444DBB  +
lea ecx [eax-1] +
mov [edi+14h] ecx +
test ecx ecx +
jle loc_444D96  +
mov eax [edi+1Ch] +
mov eax [eax+ecx*4-4] +
mov [edi+10h] eax +
jmp loc_444D9D  +
mov dword ptr [edi+10h] 0 +
mov eax [edi+1Ch] +
mov edx [eax+ecx*4] +
mov dword ptr [eax+ecx*4] 0 +
test edx edx +
jz loc_444DC6  +
push edx  +
push esi  +
call loc_4499D0  +
add esp 8 +
inc ebx  +
jmp loc_444D74  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
test ebx ebx +
jz loc_444DE9  +
test ebp ebp +
jz loc_444DE9  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push ebx  +
push offset aXmlxpathevalex  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
push edi  +
call sub_4456A0  +
add esp 4 +
mov eax ebp +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_444EA2  +
mov edx [esp+arg_4] +
test edx edx +
jz loc_444EA2  +
mov ecx [edx] +
dec ecx  +
cmp ecx 8 +
ja loc_444E7C  +
jmp ds:off_444EA8[ecx*4]  +
mov eax [edx+8] +
retn   +
mov eax [eax+0Ch] +
movsd xmm0 qword ptr [edx+10h] +
movd xmm1 dword ptr [eax+48h] +
cvtdq2pd xmm1 xmm1 +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jp loc_444EA2  +
mov eax 1 +
retn   +
mov ecx [edx+4] +
xor eax eax +
test ecx ecx +
jz locret_444EA4  +
cmp [ecx] eax +
setnz al  +
retn   +
mov eax [edx+18h] +
test eax eax +
jz loc_444EA2  +
cmp byte ptr [eax] 0 +
jz loc_444EA2  +
mov eax 1 +
retn   +
mov ecx [edx+1Ch] +
xor eax eax +
test ecx ecx +
jz locret_444EA4  +
cmp [ecx] eax +
setnz al  +
retn   +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 3937h  +
push offset a__Xpath_c  +
push offset aInternalErrorA  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
xor eax eax +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_444FA1  +
cmp dword ptr [esp+0Ch] 0 +
jz loc_444EF1  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov eax [edi+14h] +
cmp eax [edi+2Ch] +
jge loc_444F06  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov eax [edi+0Ch] +
push esi  +
test eax eax +
jz loc_444F50  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_444F50  +
mov edx [eax+8] +
test edx edx +
jz loc_444F34  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_444F34  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+8] +
mov eax [eax] +
mov esi [eax+ecx*4] +
jmp loc_444F89  +
mov edx [eax+10h] +
test edx edx +
jz loc_444F50  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_444F50  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
mov eax [eax] +
mov esi [eax+ecx*4] +
jmp loc_444F89  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_444F7C  +
push offset aCreatingBoolea  +
push eax  +
call sub_4448C0  +
add esp 8 +
push esi  +
push edi  +
call sub_43C900  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
push esi  +
mov dword ptr [esi+8] 0 +
push edi  +
mov dword ptr [esi] 2 +
call sub_43C900  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
test esi esi +
jz loc_445093  +
cmp [esp+0Ch+arg_4] 1 +
jz loc_444FD7  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_444FF0  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+10h] +
test eax eax +
jz loc_445015  +
cmp dword ptr [eax] 3 +
jz loc_445015  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
push edi  +
mov edi [esi+10h] +
test edi edi +
jz loc_445087  +
cmp dword ptr [edi] 3 +
jnz loc_445087  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+10h+var_8] xmm0 +
fld  [esp+10h+var_8] +
fld  ds:dbl_4BF6F0 +
call sub_49B13A  +
movsd xmm2 qword ptr [edi+10h] +
fstp  [esp+10h+var_8] +
cvttsd2si eax [esp+10h+var_8] +
movaps xmm1 xmm2 +
subsd xmm1 [esp+10h+var_8] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm1 xmm0 +
ucomisd xmm1 xmm2 +
lahf   +
test ah 44h +
jnp loc_445092  +
comisd xmm2 ds:qword_4BF6D0 +
ja loc_44507C  +
subsd xmm1 ds:qword_4BF6E0 +
movsd qword ptr [edi+10h] xmm1 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+28h] eax +
movsd xmm0 qword ptr [esp+30h] +
push esi  +
mov esi [esp+3Ch] +
sub esp 8 +
mov [esp+10h] esi +
movsd qword ptr [esp] xmm0 +
call sub_49A9E8  +
movsd xmm0 qword ptr [esp+3Ch] +
add esp 8 +
xorps xmm1 xmm1 +
cmp ax 1 +
jnz loc_44514E  +
xor eax eax +
comisd xmm0 xmm1 +
setnbe al  +
lea eax ds:0FFFFFFFFh[eax*2] +
cmp eax 0FFFFFFFFh +
jz loc_445122  +
cmp eax 1 +
jnz loc_44514E  +
mov eax [esp+40h] +
cmp eax 9 +
jle loc_44525F  +
push offset aInfinity  +
push eax  +
push esi  +
call sub_4213C0  +
add esp 0Ch +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
mov eax [esp+40h] +
cmp eax 0Ah +
jle loc_44525F  +
push offset aInfinity_0  +
push eax  +
push esi  +
call sub_4213C0  +
add esp 0Ch +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
sub esp 8 +
movsd qword ptr [esp] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jz loc_44518E  +
mov eax [esp+40h] +
cmp eax 4 +
jle loc_44525F  +
push offset off_4BF0E4  +
push eax  +
push esi  +
call sub_4213C0  +
add esp 0Ch +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
movsd xmm1 qword ptr [esp+34h] +
xorps xmm3 xmm3 +
ucomisd xmm1 xmm3 +
lahf   +
test ah 44h +
jp loc_4451E8  +
lea eax [esp+4] +
push eax  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_43C730  +
add esp 0Ch +
cmp dword ptr [esp+4] 0 +
jz loc_4451DF  +
push offset unk_4BF0E8  +
push dword ptr [esp+44h]  +
push esi  +
call sub_4213C0  +
add esp 0Ch +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
movsd xmm1 qword ptr [esp+34h] +
xorps xmm3 xmm3 +
cvttsd2si ecx xmm1 +
movd xmm0 ecx +
cvtdq2pd xmm0 xmm0 +
ucomisd xmm1 xmm0 +
lahf   +
test ah 44h +
jp loc_445288  +
push edi  +
mov edi [esp+44h] +
test ecx ecx +
jnz loc_445215  +
mov eax esi +
mov byte ptr [eax] 30h +
lea esi [eax+1] +
jmp loc_445251  +
push ecx  +
push offset aD  +
lea eax [esp+18h] +
push 1Dh  +
push eax  +
call sub_4213C0  +
add esp 10h +
cmp byte ptr [esp+10h] 0 +
jz loc_445251  +
lea edx [esp+10h] +
xor ecx ecx +
sub edx esi +
cmp ecx edi +
jge loc_445251  +
mov al [edx+esi] +
inc ecx  +
mov [esi] al +
inc esi  +
cmp byte ptr [edx+esi] 0 +
jnz loc_445240  +
mov eax esi +
sub eax [esp+0Ch] +
cmp eax edi +
jge loc_44526F  +
mov byte ptr [esi] 0 +
pop edi  +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
test edi edi +
jle loc_44525E  +
pop edi  +
mov byte ptr [esi-1] 0 +
pop esi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
movaps xmm2 xmm1 +
andps xmm2 oword ptr ds:oword_4E1070 +
comisd xmm2 ds:qword_4BF6E8 +
ja loc_4452AA  +
movsd xmm0 ds:qword_4BF6D8 +
comisd xmm0 xmm2 +
jbe loc_4452EE  +
ucomisd xmm2 xmm3 +
lahf   +
test ah 44h +
jnp loc_4452EE  +
sub esp 8 +
lea eax [esp+14h] +
movsd qword ptr [esp] xmm1 +
push 0Eh  +
push 15h  +
push offset a_E  +
push 1Ch  +
push eax  +
call sub_4213C0  +
mov edx eax +
add esp 1Ch +
test edx edx +
jle loc_445340  +
jmp loc_445340  +
comisd xmm2 xmm3 +
jbe loc_44531C  +
movaps xmm0 xmm2 +
call sub_49B160  +
movsd xmm1 qword ptr [esp+34h] +
cvttsd2si ecx xmm0 +
test ecx ecx +
jle loc_445313  +
mov eax 0Eh +
sub eax ecx +
jmp loc_445321  +
mov eax 0Fh +
sub eax ecx +
jmp loc_445321  +
mov eax 1 +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
push eax  +
push offset a0_F  +
lea eax [esp+1Ch] +
push 1Ch  +
push eax  +
call sub_4213C0  +
add esp 18h +
mov edx eax +
cmp byte ptr [esp+0Ch] 20h +
jnz loc_445379  +
mov ah [esp+0Dh] +
lea ecx [esp+0Ch] +
mov al ah +
mov [esp+0Ch] al +
test ah ah +
jz loc_445374  +
nop   +
mov al [ecx+2] +
lea ecx [ecx+1] +
mov [ecx] al +
test al al +
jnz loc_445360  +
mov ah [esp+0Dh] +
mov al [esp+0Ch] +
dec edx  +
cmp al 20h +
jz loc_445350  +
lea ecx [esp+0Ch] +
add edx ecx +
mov ecx edx +
dec ecx  +
cmp byte ptr [ecx] 30h +
jz loc_445381  +
cmp byte ptr [ecx] 2Eh +
jz loc_44538D  +
inc ecx  +
sub edx ecx +
nop   +
mov al [edx+ecx] +
lea ecx [ecx+1] +
mov [ecx-1] al +
test al al +
jnz loc_445390  +
lea ecx [esp+0Ch] +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4453A4  +
sub ecx edx +
mov edx [esp+40h] +
inc ecx  +
cmp ecx edx +
jle loc_4453C5  +
lea eax [edx-1] +
cmp eax 1Ch +
jnb loc_4453E4  +
mov byte ptr [esp+eax+0Ch] 0 +
mov ecx edx +
push ecx  +
lea eax [esp+10h] +
push eax  +
push esi  +
call loc_48B430  +
mov ecx [esp+38h] +
add esp 0Ch +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
call sub_48927F  +
test esi esi +
jz loc_445452  +
mov eax [esi] +
test eax eax +
jz loc_445408  +
push eax  +
call sub_43CE10  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_445418  +
push eax  +
call sub_43CE10  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_445428  +
push eax  +
call sub_43CE10  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_445438  +
push eax  +
call sub_43CE10  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_445448  +
push eax  +
call sub_43CE10  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_445532  +
cmp dword ptr [esi+14h] 0 +
push ebx  +
push edi  +
jnz loc_4454BF  +
xor ebx ebx +
cmp [esi] ebx +
jle loc_4454F4  +
push ebp  +
xor ebp ebp +
nop   +
mov edi [esi+8] +
mov eax [edi+ebp+18h] +
test eax eax +
jz loc_4454A2  +
cmp dword ptr [edi+ebp] 0Ch +
push eax  +
jnz loc_445499  +
call sub_445600  +
jmp loc_44549F  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+ebp+1Ch] +
test eax eax +
jz loc_4454B4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc ebx  +
add ebp 28h +
cmp ebx [esi] +
jl loc_445480  +
pop ebp  +
jmp loc_4454F4  +
xor edi edi +
cmp [esi] edi +
jle loc_4454E9  +
xor ebx ebx +
mov eax [esi+8] +
mov ecx [eax+ebx+18h] +
test ecx ecx +
jz loc_4454E1  +
cmp dword ptr [eax+ebx] 0Ch +
jnz loc_4454E1  +
push ecx  +
call sub_445600  +
add esp 4 +
inc edi  +
add ebx 28h +
cmp edi [esi] +
jl loc_4454C7  +
push dword ptr [esi+14h]  +
call sub_44F150  +
add esp 4 +
mov eax [esi+8] +
pop edi  +
pop ebx  +
test eax eax +
jz loc_445507  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_445517  +
push eax  +
call loc_468F00  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_445528  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_4455AC  +
mov eax [esi+0C8h] +
test eax eax +
jz loc_44555C  +
push eax  +
call sub_4453F0  +
add esp 4 +
push off_4EE2F4  +
push dword ptr [esi+58h]  +
call loc_4501B0  +
push 0  +
push dword ptr [esi+28h]  +
mov dword ptr [esi+58h] 0 +
call loc_4501B0  +
push offset sub_445600  +
push dword ptr [esi+10h]  +
mov dword ptr [esi+28h] 0 +
call loc_4501B0  +
lea eax [esi+88h] +
mov dword ptr [esi+10h] 0 +
push eax  +
call sub_43B810  +
push esi  +
call off_4EE2F4  +
add esp 20h +
pop esi  +
retn   +
***
test edi edi +
jz loc_4455FB  +
cmp dword ptr [edi+8] 0 +
jz loc_4455F1  +
push esi  +
xor esi esi +
cmp [edi] esi +
jle loc_4455E4  +
mov eax [edi+8] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_4455DF  +
cmp dword ptr [eax+4] 12h +
jnz loc_4455DF  +
push eax  +
call sub_447CF0  +
add esp 4 +
inc esi  +
cmp esi [edi] +
jl loc_4455C6  +
push dword ptr [edi+8]  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
retn   +
***
test esi esi +
jz loc_44569B  +
mov eax [esi] +
cmp eax 1 +
jz loc_44565C  +
cmp eax 9 +
jz loc_44565C  +
cmp eax 7 +
jnz loc_44563A  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_445691  +
push eax  +
call loc_467D00  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
cmp eax 4 +
jnz loc_445691  +
mov eax [esi+18h] +
test eax eax +
jz loc_445691  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
cmp dword ptr [esi+8] 0 +
mov eax [esi+4] +
jz loc_445684  +
mov dword ptr [esi] 9 +
test eax eax +
jz loc_445691  +
push eax  +
call sub_4456F0  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
test eax eax +
jz loc_445691  +
push eax  +
call sub_4455B0  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
test eax eax +
jz loc_4456B6  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_4456E2  +
mov eax [eax+18h] +
test eax eax +
jz loc_4456D7  +
push eax  +
call loc_468F00  +
mov eax [esi+20h] +
add esp 4 +
mov dword ptr [eax+18h] 0 +
push dword ptr [esi+20h]  +
call sub_445460  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test edi edi +
jz loc_445742  +
cmp dword ptr [edi+8] 0 +
jz loc_445738  +
push esi  +
xor esi esi +
cmp [edi] esi +
jle loc_44572B  +
mov eax [edi+8] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_445726  +
cmp dword ptr [eax+4] 12h +
push eax  +
jnz loc_44571E  +
call sub_447CF0  +
jmp loc_445723  +
call loc_422E50  +
add esp 4 +
inc esi  +
cmp esi [edi] +
jl loc_445706  +
push dword ptr [edi+8]  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
retn   +
***
test esi esi +
jnz loc_44575D  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+70h] +
push edi  +
mov edi [esp+4+arg_4] +
test eax eax +
jz loc_445778  +
push 0  +
push edi  +
push dword ptr [esi+74h]  +
call eax  +
add esp 0Ch +
test eax eax +
jnz loc_4457AA  +
test edi edi +
jnz loc_445781  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+70h] +
test eax eax +
jz loc_445797  +
push 0  +
push edi  +
push dword ptr [esi+74h]  +
call eax  +
add esp 0Ch +
test eax eax +
jnz loc_4457AA  +
mov eax [esi+28h] +
test eax eax +
jz loc_44577C  +
push 0  +
push edi  +
push eax  +
call sub_450460  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_4457BD  +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_4457E5  +
mov eax [esi+70h] +
test eax eax +
jz loc_4457DE  +
push [esp+4+arg_8]  +
push edi  +
push dword ptr [esi+74h]  +
call eax  +
add esp 0Ch +
test eax eax +
jnz loc_4457F8  +
mov eax [esi+28h] +
test eax eax +
jnz loc_4457EA  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push [esp+4+arg_8]  +
push edi  +
push eax  +
call sub_450460  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+10h] +
mov esi edi +
test edi edi +
jnz loc_445811  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
push 0Ch  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_445837  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
xorps xmm0 xmm0 +
movq qword ptr [ebx] xmm0 +
mov dword ptr [ebx+8] 0 +
mov al [esi] +
cmp al 20h +
jz loc_445857  +
cmp al 9 +
jb loc_445853  +
cmp al 0Ah +
jbe loc_445857  +
cmp al 0Dh +
jnz loc_44585A  +
inc esi  +
jmp loc_445845  +
***
mov al [esi] +
test al al +
jz loc_4458FA  +
push ebp  +
mov ebp [esp+14h] +
inc esi  +
jmp loc_4458D8  +
***
lea eax [esp+4+var_4] +
push eax  +
sub esp 8 +
movsd [esp+10h+var_10] xmm0 +
call sub_43C730  +
mov eax [esp+10h+var_4] +
add esp 10h +
retn   +
***
push ecx  +
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_445A93  +
cmp dword ptr [esp+10h] 1 +
jz loc_445943  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ecx  +
retn   +
***
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+14h] eax +
jge loc_44595A  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ecx  +
retn   +
***
push ebx  +
push edi  +
call sub_43C8A0  +
mov ebx eax +
add esp 4 +
mov [esp+8] ebx +
test ebx ebx +
jnz loc_44597D  +
push 0Ah  +
push edi  +
call sub_444780  +
add esp 8 +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
mov eax [ebx] +
push esi  +
cmp eax 1 +
jz loc_4459C3  +
cmp eax 9 +
jz loc_4459C3  +
push ebx  +
push dword ptr [edi+0Ch]  +
call sub_43CD20  +
mov ecx [edi+0Ch] +
mov esi eax +
push dword ptr [esi+18h]  +
push dword ptr [ecx]  +
call loc_445800  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43D2C0  +
push eax  +
push edi  +
call sub_43C900  +
push esi  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
add esp 28h +
pop esi  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
push 0Ch  +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
mov [esp+14h] ecx +
test ecx ecx +
jnz loc_4459F0  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
mov dword ptr [esp+14h] 0 +
jmp loc_4459FE  +
xorps xmm0 xmm0 +
movq qword ptr [ecx] xmm0 +
mov dword ptr [ecx+8] 0 +
mov eax [ebx+4] +
test eax eax +
jz loc_445A72  +
push ebp  +
xor ebp ebp +
cmp [eax] ebp +
jle loc_445A71  +
mov eax [eax+8] +
push dword ptr [eax+ebp*4]  +
call sub_424950  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_445A33  +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
mov ebx eax +
mov eax [edi+0Ch] +
push ebx  +
push dword ptr [eax]  +
call loc_445800  +
mov esi eax +
push esi  +
push dword ptr [esp+24h]  +
call loc_447D40  +
push esi  +
mov [esp+2Ch] eax +
call sub_4455B0  +
add esp 14h +
test ebx ebx +
jz loc_445A65  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov ebx [esp+10h] +
inc ebp  +
mov eax [ebx+4] +
cmp ebp [eax] +
jl loc_445A10  +
pop ebp  +
push ebx  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
push dword ptr [esp+1Ch]  +
push dword ptr [edi+0Ch]  +
call sub_43D2C0  +
push eax  +
push edi  +
call sub_43C900  +
add esp 18h +
pop esi  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
sub esp 8 +
cmp dword_4F2498 0 +
jnz loc_445B11  +
call sub_43C840  +
movsd xmm0 qword_4F2480 +
ucomisd xmm0 ds:qword_4BF6D0 +
fstp  dbl_4EE148 +
lahf   +
test ah 44h +
jp loc_445AE9  +
call sub_43C840  +
fstp  [esp+8+var_8] +
movsd xmm0 [esp+8+var_8] +
xorps xmm0 oword ptr ds:oword_4BF700 +
movsd qword_4F2480 xmm0 +
movsd qword_4EE150 xmm0 +
call sub_43C7A0  +
fstp  dbl_4F24A0 +
call loc_43C800  +
fstp  dbl_4F2490 +
mov dword_4F2498 1 +
add esp 8 +
retn   +
***
mov edi [esp+arg_0] +
xor esi esi +
movzx eax byte ptr [edi] +
add eax 0FFFFFF9Fh +
cmp eax 12h +
ja loc_445C93  +
movzx eax ds:byte_445CB8[eax] +
jmp ds:off_445C98[eax*4]  +
push offset aAncestor  +
push edi  +
call sub_44E370  +
test eax eax +
mov ecx 1 +
push offset aAncestorOrSelf  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
test eax eax +
mov ecx 2 +
push offset aAttribute  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
add esp 18h +
test eax eax +
jz loc_445C93  +
mov esi 3 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aChild  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_445C93  +
mov esi 4 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aDescendant  +
push edi  +
call sub_44E370  +
test eax eax +
mov ecx 5 +
push offset aDescendantOrSe  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
add esp 10h +
test eax eax +
jz loc_445C93  +
mov esi 6 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aFollowing  +
push edi  +
call sub_44E370  +
test eax eax +
mov ecx 7 +
push offset aFollowingSibli  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
add esp 10h +
test eax eax +
jz loc_445C93  +
mov esi 8 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aNamespace_0  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_445C93  +
mov esi 9 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aParent  +
push edi  +
call sub_44E370  +
test eax eax +
mov ecx 0Ah +
push offset aPreceding  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
test eax eax +
mov ecx 0Bh +
push offset aPrecedingSibli  +
push edi  +
cmovnz esi ecx +
call sub_44E370  +
add esp 18h +
test eax eax +
jz loc_445C93  +
mov esi 0Ch +
pop edi  +
mov eax esi +
pop esi  +
retn   +
push offset aSelf  +
push edi  +
call sub_44E370  +
add esp 8 +
mov ecx 0Dh +
test eax eax +
cmovnz esi ecx +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
movsd xmm0 [esp+arg_0] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_49A9E8  +
add esp 8 +
cmp ax 1 +
jnz loc_445D07  +
movsd xmm0 [esp+arg_0] +
xor eax eax +
comisd xmm0 ds:qword_4BF6D0 +
setnbe al  +
lea eax ds:0FFFFFFFFh[eax*2] +
retn   +
xor eax eax +
retn   +
***
movsd xmm0 [esp+arg_0] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_49AAD7  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
test esi esi +
mov ecx [esp+arg_4] +
mov eax [ecx] +
cmp eax 10h +
jz loc_445DA0  +
cmp eax 11h +
jnz loc_445DFA  +
mov ecx [ecx+8] +
cmp ecx 0FFFFFFFFh +
jz loc_445DFA  +
mov eax [esp+arg_0] +
lea ecx [ecx+ecx*4] +
mov eax [eax+20h] +
mov eax [eax+8] +
lea edx [eax+ecx*8] +
test edx edx +
jz loc_445DFA  +
cmp dword ptr [edx] 0Ch +
jnz loc_445DFA  +
mov eax [edx+18h] +
test eax eax +
jz loc_445DFA  +
cmp dword ptr [eax] 3 +
jnz loc_445DFA  +
cvttsd2si ecx qword ptr [eax+10h] +
mov eax [esp+arg_8] +
mov [eax] ecx +
mov eax [edx+18h] +
movd xmm0 ecx +
cvtdq2ps xmm0 xmm0 +
cvtps2pd xmm1 xmm0 +
movsd xmm0 qword ptr [eax+10h] +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jp loc_445DFA  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
sub esp 8 +
push ebp  +
push edi  +
mov edi [esp+14h] +
xor ebp ebp +
test edi edi +
jz loc_445F4F  +
cmp dword ptr [esp+18h] 1 +
jz loc_445E2B  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebp  +
add esp 8 +
retn   +
***
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+14h] eax +
jge loc_445E45  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebp  +
add esp 8 +
retn   +
***
mov eax [edi+10h] +
test eax eax +
jz loc_445E7E  +
cmp dword ptr [eax] 4 +
jz loc_445E7E  +
push edi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_445E6B  +
push 0Ah  +
push edi  +
call sub_444780  +
add esp 8 +
jmp loc_445E7E  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43CD20  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax [edi+10h] +
test eax eax +
jz loc_445F44  +
cmp dword ptr [eax] 4 +
jnz loc_445F44  +
push ebx  +
push edi  +
call sub_43C8A0  +
mov ecx [edi+0Ch] +
mov [esp+14h] eax +
mov ebx [eax+18h] +
push dword ptr [ecx+4]  +
call sub_424A40  +
mov ecx eax +
add esp 8 +
mov [esp+18h] ecx +
test ecx ecx +
jz loc_445F1E  +
test ebx ebx +
jz loc_445F14  +
xor ebp ebp +
cmp byte ptr [ebx] 0 +
push esi  +
jz loc_445EFB  +
sub eax ebx +
mov [esp+10h] eax +
mov al [ecx+ebp] +
test al al +
jz loc_445F06  +
cmp al 2Dh +
jnz loc_445F11  +
mov ebp 1 +
jmp loc_445F13  +
mov ecx [esp+1Ch] +
xor ebp ebp +
pop esi  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
push dword ptr [esp+10h]  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [edi+0Ch]  +
call sub_43CE80  +
push eax  +
push edi  +
call sub_43C900  +
add esp 18h +
pop ebx  +
pop edi  +
pop ebp  +
add esp 8 +
retn   +
***
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop ebp  +
add esp 8 +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_445FC9  +
cmp dword ptr [esp+0Ch] 0 +
jz loc_445F7D  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+14h] +
cmp eax [esi+2Ch] +
jge loc_445F92  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+0Ch] +
mov ecx [eax+44h] +
test ecx ecx +
js loc_445FBE  +
movd xmm0 ecx +
sub esp 8 +
cvtdq2pd xmm0 xmm0 +
movsd qword ptr [esp] xmm0 +
push eax  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
pop esi  +
retn   +
***
push 0Dh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
test esi esi +
jz loc_4460BF  +
mov eax [esp+arg_4] +
test eax eax +
jnz loc_446011  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_446023  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
cmp eax 1 +
jz loc_445FFB  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
mov eax [esi+10h] +
test eax eax +
jz loc_4460B4  +
mov eax [eax] +
cmp eax 1 +
jz loc_44603A  +
cmp eax 9 +
jnz loc_4460B4  +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_44608E  +
cmp dword ptr [ecx] 0 +
jz loc_44608E  +
mov ecx [ecx+8] +
mov ecx [ecx] +
mov eax [ecx+4] +
dec eax  +
cmp eax 11h +
ja loc_44608E  +
movzx eax ds:byte_4460D0[eax] +
jmp ds:off_4460C4[eax*4]  +
mov eax [ecx+8] +
cmp byte ptr [eax] 20h +
jz loc_44608E  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
jmp loc_44609B  +
push dword ptr [ecx+0Ch]  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
jmp loc_44609B  +
push offset unk_4DE8C5  +
push dword ptr [esi+0Ch]  +
call sub_43CF20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
sub esp 18h +
push esi  +
mov esi [esp+1Ch+arg_0] +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_446119  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 18h +
retn   +
push edi  +
call sub_43D790  +
push edi  +
push dword ptr [esi+0Ch]  +
fst  [esp+2Ch+var_10] +
fstp  [esp+2Ch+var_18] +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_44616E  +
cmp dword ptr [eax] 3 +
jz loc_44616E  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_446155  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44616E  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov edi [esi+10h] +
test edi edi +
jz loc_4461C2  +
cmp dword ptr [edi] 3 +
jnz loc_4461C2  +
movsd xmm0 qword ptr [edi+10h] +
movsd [esp+20h+var_8] xmm0 +
movsd xmm0 [esp+20h+var_18] +
ucomisd xmm0 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jp loc_4461AC  +
movsd xmm0 dbl_4F24A0 +
movsd qword ptr [edi+10h] xmm0 +
pop edi  +
pop esi  +
add esp 18h +
retn   +
fld  [esp+20h+var_8] +
fld  [esp+20h+var_10] +
call sub_49B13A  +
fstp  qword ptr [edi+10h] +
pop edi  +
pop esi  +
add esp 18h +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 18h +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_446209  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push edi  +
call sub_43D790  +
push edi  +
push dword ptr [esi+0Ch]  +
fstp  [esp+1Ch+var_8] +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_44625A  +
cmp dword ptr [eax] 3 +
jz loc_44625A  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_446241  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44625A  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_44627C  +
cmp dword ptr [eax] 3 +
jnz loc_44627C  +
movsd xmm0 qword ptr [eax+10h] +
mulsd xmm0 [esp+10h+var_8] +
pop edi  +
pop esi  +
movsd qword ptr [eax+10h] xmm0 +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
mov eax [esp+8] +
push esi  +
mov esi [esp+8] +
test eax eax +
jnz loc_4462B8  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax 1 +
test esi esi +
jz loc_446381  +
cmp eax 1 +
jz loc_4462D2  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_4462E8  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_4463E9  +
mov eax [eax] +
cmp eax 1 +
jz loc_446303  +
cmp eax 9 +
jnz loc_4463E9  +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4463C3  +
cmp dword ptr [ecx] 0 +
jz loc_4463C3  +
mov ecx [ecx+8] +
mov ecx [ecx] +
mov eax [ecx+4] +
dec eax  +
cmp eax 1 +
ja loc_446399  +
mov eax [ecx+8] +
cmp byte ptr [eax] 20h +
jz loc_4463C3  +
mov ecx [ecx+24h] +
test ecx ecx +
jz loc_44638E  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_44638E  +
push 0  +
push 0  +
push ecx  +
push eax  +
call sub_4221A0  +
mov ecx [edi+4] +
add esp 10h +
mov ecx [ecx+8] +
mov ecx [ecx] +
mov ecx [ecx+8] +
cmp eax ecx +
jnz loc_446371  +
push ecx  +
call sub_44E600  +
add esp 4 +
test eax eax +
jnz loc_446383  +
push 0Fh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43D340  +
jmp loc_4463D0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
jmp loc_4463D0  +
push ecx  +
push dword ptr [esi+0Ch]  +
call sub_43D070  +
push eax  +
push esi  +
call sub_43C900  +
push 1  +
push esi  +
call sub_445FD0  +
add esp 18h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push offset unk_4DE8C5  +
push dword ptr [esi+0Ch]  +
call sub_43CF20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_4464D1  +
mov eax [esp+0Ch] +
test eax eax +
jnz loc_446441  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_446453  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
cmp eax 1 +
jz loc_44642B  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_4464C6  +
mov eax [eax] +
cmp eax 1 +
jz loc_446466  +
cmp eax 9 +
jnz loc_4464C6  +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_4464A0  +
cmp dword ptr [ecx] 0 +
jz loc_4464A0  +
mov ecx [ecx+8] +
mov ecx [ecx] +
mov eax [ecx+4] +
dec eax  +
cmp eax 1 +
ja loc_4464A0  +
mov eax [ecx+24h] +
test eax eax +
jz loc_4464A0  +
push dword ptr [eax+8]  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
jmp loc_4464AD  +
push offset unk_4DE8C5  +
push dword ptr [esi+0Ch]  +
call sub_43CF20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_446504  +
push offset aAllocatingComp  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push 190h  +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+4] 0Ah +
mov dword ptr [esi] 0 +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
mov [esi+8] ecx +
test ecx ecx +
jnz loc_446553  +
push offset aAllocatingStep  +
push eax  +
call sub_4448C0  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+4] +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
push 0  +
push ecx  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4465A7  +
push offset aCreatingContex  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 0CCh  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_0] +
push 0  +
mov [esi] eax +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
call sub_450110  +
push esi  +
mov [esi+28h] eax +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+58h] 0 +
mov dword ptr [esi+40h] 0 +
mov dword ptr [esi+44h] 0FFFFFFFFh +
mov dword ptr [esi+48h] 0FFFFFFFFh +
call sub_4491F0  +
add esp 14h +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_446657  +
push offset aCreatingParser  +
push [esp+4+arg_4]  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push edi  +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+10h+arg_0] +
add esp 0Ch +
mov edi [esp+4+arg_4] +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+0Ch] edi +
call sub_4464E0  +
mov [esi+20h] eax +
test eax eax +
jnz loc_446699  +
push dword ptr [esi+1Ch]  +
call off_4EE2F4  +
push esi  +
call off_4EE2F4  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
test edi edi +
jz loc_4466B8  +
mov ecx [edi+0C0h] +
test ecx ecx +
jz loc_4466B8  +
mov [eax+14h] ecx +
mov eax [esi+20h] +
push dword ptr [eax+14h]  +
call sub_44FAE0  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4466E4  +
push offset aCreatingString  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_0] +
add esp 0Ch +
mov dword ptr [esi] 4 +
test eax eax +
jz loc_44670F  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax esi +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_446817  +
mov edx [edi+0Ch] +
test edx edx +
jz loc_446817  +
push esi  +
mov esi [esp+10h] +
test esi esi +
jnz loc_4467B8  +
mov esi [edx+4] +
test esi esi +
jz loc_4467B3  +
mov eax [esi+4] +
dec eax  +
cmp eax 14h +
ja loc_4467B3  +
movzx ecx ds:byte_44682C[eax] +
jmp ds:off_44681C[ecx*4]  +
mov eax [esi+14h] +
test eax eax +
jnz loc_44677B  +
mov eax [edx] +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [eax+4] 1 +
jnz loc_44679B  +
mov eax [eax+8] +
cmp byte ptr [eax] 20h +
jz loc_4467B3  +
push offset aFakeNodeLibxsl  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4467B3  +
mov eax [edi+0Ch] +
pop esi  +
pop edi  +
mov eax [eax+4] +
mov eax [eax+14h] +
retn   +
***
mov eax [esi] +
test eax eax +
jz loc_4467B3  +
cmp dword ptr [eax+4] 12h +
jnz loc_4467B5  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax [edx] +
cmp esi [eax+0Ch] +
jz loc_4467B5  +
cmp esi eax +
jz loc_4467B3  +
mov eax [esi+4] +
dec eax  +
cmp eax 14h +
ja loc_4467B3  +
movzx eax ds:byte_446854[eax] +
jmp ds:off_446844[eax*4]  +
mov eax [esi+14h] +
test eax eax +
jz loc_4467B3  +
cmp dword ptr [eax+4] 1 +
jnz loc_446801  +
mov eax [eax+8] +
cmp byte ptr [eax] 20h +
jz loc_4467B3  +
push offset aFakeNodeLibxsl  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4467B3  +
mov eax [esi+14h] +
pop esi  +
pop edi  +
retn   +
***
mov eax [edx+4] +
pop esi  +
pop edi  +
mov eax [eax+14h] +
retn   +
***
mov eax [edx+4] +
mov eax [eax] +
jmp loc_4467A9  +
***
xor eax eax +
pop edi  +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446898  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_446898  +
mov edx [esp+8] +
test edx edx +
jnz loc_44688B  +
mov eax [eax+4] +
retn   +
***
mov [esp+8] edx +
mov [esp+4] ecx +
jmp loc_446730  +
***
xor eax eax +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_4468D0  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_4468D0  +
mov eax [ecx+4] +
test eax eax +
jz loc_4468D0  +
cmp dword ptr [eax+4] 1 +
jnz loc_4468D0  +
mov edx [esp+8] +
test edx edx +
jnz loc_4468CC  +
cmp eax [ecx] +
jz loc_4468D0  +
mov eax [eax+2Ch] +
retn   +
***
mov eax [edx+18h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_44692A  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_44692A  +
mov eax [esp+8] +
test eax eax +
jnz loc_446919  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_44692A  +
mov eax [ecx+4] +
dec eax  +
cmp eax 14h +
ja loc_44692A  +
movzx eax ds:byte_446938[eax] +
jmp ds:off_446930[eax*4]  +
mov eax [ecx+0Ch] +
retn   +
***
mov ecx [eax+4] +
cmp ecx 9 +
jz loc_44692A  +
cmp ecx 0Dh +
jz loc_44692A  +
mov eax [eax+18h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_4469E0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4469E0  +
mov ecx [esp+8] +
test ecx ecx +
jnz loc_4469AE  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_4469E0  +
mov eax [ecx+4] +
dec eax  +
cmp eax 14h +
ja loc_4469E0  +
movzx eax ds:byte_4469F0[eax] +
jmp ds:off_4469E4[eax*4]  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_4469E0  +
cmp dword ptr [eax+4] 1 +
jz locret_4469E2  +
mov eax [eax+18h] +
test eax eax +
jz locret_4469E2  +
cmp dword ptr [eax+4] 1 +
jnz loc_446996  +
retn   +
***
push ecx  +
call sub_422980  +
add esp 4 +
retn   +
***
mov eax [ecx+4] +
dec eax  +
cmp eax 13h +
ja loc_4469E0  +
movzx eax ds:byte_446A10[eax] +
jmp ds:off_446A08[eax*4]  +
mov eax [ecx+18h] +
test eax eax +
jz loc_4469E0  +
cmp dword ptr [eax+4] 1 +
jz locret_4469E2  +
mov eax [eax+18h] +
test eax eax +
jz locret_4469E2  +
cmp dword ptr [eax+4] 1 +
jnz loc_4469D2  +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446ACB  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_446ACB  +
mov eax [esp+8] +
test eax eax +
jnz loc_446A71  +
mov eax [ecx+4] +
test eax eax +
jz loc_446ACB  +
mov edx [eax+4] +
cmp edx 2 +
jz loc_446ACB  +
cmp edx 12h +
jz loc_446ACB  +
mov ecx [ecx] +
cmp eax ecx +
jnz loc_446A6D  +
mov eax [ecx+0Ch] +
retn   +
***
mov eax [eax+0Ch] +
retn   +
***
cmp dword ptr [eax+4] 12h +
jz loc_446ACB  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_446A8C  +
cmp dword ptr [edx+4] 11h +
jz loc_446A8C  +
mov eax edx +
cmp dword ptr [eax+4] 0Eh +
jnz locret_446ACD  +
mov edx [ecx+4] +
cmp eax edx +
jz loc_446ACB  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_446AB6  +
mov eax [eax+14h] +
test eax eax +
jz loc_446ACB  +
cmp eax edx +
jz loc_446ACB  +
cmp dword ptr [eax+18h] 0 +
jz loc_446AB6  +
mov eax [eax+18h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446B08  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_446B08  +
mov edx [esp+8] +
mov eax [eax+4] +
test edx edx +
jz locret_446B0A  +
test eax eax +
jz loc_446B08  +
mov eax [eax+4] +
cmp eax 2 +
jz loc_446B08  +
cmp eax 12h +
jz loc_446B08  +
mov [esp+8] edx +
mov [esp+4] ecx +
jmp loc_446A30  +
***
xor eax eax +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446B75  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_446B75  +
mov eax [esp+8] +
test eax eax +
jz loc_446B3E  +
mov edx [eax+4] +
cmp edx 2 +
jz loc_446B55  +
cmp edx 12h +
jz loc_446B55  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_446B55  +
mov eax edx +
retn   +
***
mov eax [ecx+4] +
mov edx [eax+4] +
cmp edx 12h +
jz loc_446B75  +
cmp edx 2 +
jnz loc_446B51  +
mov eax [eax+14h] +
test eax eax +
jz loc_446B75  +
mov edx [eax+18h] +
test edx edx +
jnz loc_446B3B  +
mov eax [eax+14h] +
test eax eax +
jz loc_446B75  +
cmp eax [ecx] +
jz loc_446B75  +
cmp dword ptr [eax+18h] 0 +
jz loc_446B60  +
mov eax [eax+18h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446BB3  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_446BB3  +
mov edx [ecx+4] +
mov eax [edx+4] +
cmp eax 2 +
jz loc_446BB3  +
cmp eax 12h +
jz loc_446BB3  +
mov eax [esp+8] +
cmp eax [ecx] +
jz loc_446BB3  +
test eax eax +
jnz loc_446BAF  +
mov eax [edx+18h] +
retn   +
***
mov eax [eax+18h] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esi+0Ch] +
inc dword ptr [eax+7Ch]  +
mov eax [esi+0Ch] +
mov ecx [eax+7Ch] +
mov eax [eax+78h] +
cmp dword ptr [eax+ecx*4] 0 +
jnz loc_446C30  +
mov eax off_4EE0D8 +
pop esi  +
retn   +
***
mov eax [ecx+7Ch] +
test eax eax +
jle loc_446C64  +
lea edx [eax-1] +
mov [ecx+7Ch] edx +
mov ecx [esi+0Ch] +
pop esi  +
mov eax [ecx+78h] +
mov eax [eax+edx*4] +
retn   +
***
test edx edx +
jz loc_446C72  +
push edx  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [eax+78h] 0 +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
test esi esi +
jz loc_446D00  +
mov edi [esi+0Ch] +
test edi edi +
jz loc_446D00  +
cmp dword ptr [esp+10h] 0 +
jnz loc_446D00  +
mov edx [edi+4] +
test edx edx +
jz loc_446D00  +
mov eax [edx+4] +
dec eax  +
cmp eax 14h +
ja loc_446D00  +
movzx ecx ds:byte_446D18[eax] +
jmp ds:off_446D08[ecx*4]  +
mov eax [edx+14h] +
test eax eax +
jnz loc_446CC2  +
mov eax [edi] +
pop edi  +
pop esi  +
retn   +
***
cmp dword ptr [eax+4] 1 +
jnz loc_446CE2  +
mov eax [eax+8] +
cmp byte ptr [eax] 20h +
jz loc_446D00  +
push offset aFakeNodeLibxsl  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_446D00  +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov eax [eax+14h] +
retn   +
***
mov eax [edx+14h] +
pop edi  +
pop esi  +
retn   +
***
mov eax [edx] +
test eax eax +
jz loc_446D00  +
cmp dword ptr [eax+4] 12h +
jnz loc_446D02  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov edx [esp+4] +
push esi  +
test edx edx +
jz loc_446DAD  +
mov esi [edx+0Ch] +
test esi esi +
jz loc_446DAD  +
mov eax [esp+0Ch] +
test eax eax +
jnz loc_446D5B  +
mov eax [esi+4] +
test eax eax +
jz loc_446DAD  +
cmp dword ptr [eax+4] 12h +
jz loc_446DAD  +
mov ecx [eax+14h] +
mov [edx+28h] ecx +
cmp dword ptr [eax+4] 12h +
jz loc_446DAD  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_446D6F  +
cmp dword ptr [ecx+4] 0Eh +
cmovz eax ecx +
cmp dword ptr [eax+1Ch] 0 +
jnz loc_446D94  +
mov eax [eax+14h] +
test eax eax +
jz loc_446DAD  +
mov ecx [esi] +
cmp eax [ecx+0Ch] +
jz loc_446DAD  +
cmp eax [edx+28h] +
jnz loc_446DAF  +
mov ecx [eax+14h] +
mov [edx+28h] ecx +
cmp dword ptr [eax+1Ch] 0 +
jz loc_446D75  +
mov ecx [eax+1Ch] +
mov eax [ecx+10h] +
test eax eax +
jz loc_446DA9  +
nop   +
mov ecx eax +
mov eax [ecx+10h] +
test eax eax +
jnz loc_446DA0  +
mov eax ecx +
pop esi  +
retn   +
***
xor eax eax +
pop esi  +
retn   +
***
mov ecx [esp+4] +
test ecx ecx +
jz loc_446E06  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_446E06  +
mov edx [ecx+4] +
mov eax [edx+4] +
cmp eax 2 +
jz loc_446E06  +
cmp eax 12h +
jz loc_446E06  +
mov eax [esp+8] +
cmp eax [ecx] +
jz loc_446E06  +
test eax eax +
jnz loc_446DEF  +
mov eax [edx+1Ch] +
retn   +
***
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_446E02  +
cmp dword ptr [ecx+4] 0Eh +
jnz loc_446E02  +
mov eax ecx +
test eax eax +
jz loc_446DEB  +
mov eax [eax+1Ch] +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_446E2A  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_446E2A  +
cmp dword ptr [esp+8] 0 +
jnz loc_446E2A  +
mov eax [eax+4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 58h +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+64h+arg_4] +
push edi  +
mov edi [esp+68h+arg_0] +
mov [esp+68h+var_2C] 0 +
mov eax [esi+0Ch] +
mov ebp [esi+18h] +
mov ebx [edi+0Ch] +
mov [esp+68h+var_1C] eax +
mov eax [esi+10h] +
mov [esp+68h+var_14] eax +
mov eax [esi+14h] +
mov [esp+68h+var_10] eax +
mov eax [esi+1Ch] +
mov [esp+68h+var_24] eax +
xor eax eax +
mov [esp+68h+var_40] eax +
mov eax [edi+10h] +
mov [esp+68h+var_20] ebp +
mov [esp+68h+var_34] ebx +
test eax eax +
jz loc_447704  +
cmp dword ptr [eax] 1 +
jnz loc_447704  +
push edi  +
call sub_43C8A0  +
add esp 4 +
mov edx eax +
mov [esp+68h+var_18] edx +
test ebp ebp +
jz loc_446ED3  +
push ebp  +
push ebx  +
call sub_448790  +
add esp 8 +
mov [esp+68h+var_2C] eax +
test eax eax +
jnz loc_446ECF  +
push [esp+68h+var_18]  +
push ebx  +
call loc_4499D0  +
push 13h  +
push edi  +
call sub_444780  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 58h +
retn   +
mov edx [esp+68h+var_18] +
mov eax [esp+68h+var_1C] +
dec eax  +
mov [esp+68h+var_3C] offset loc_447EC0 +
cmp eax 0Ch +
ja loc_4476F0  +
jmp ds:off_44771C[eax*4]  +
xor eax eax +
mov ecx offset loc_446730 +
mov [esp+68h+var_48] eax +
mov eax [esp+68h+arg_C] +
jmp loc_447000  +
xor eax eax +
mov ecx offset loc_446870 +
mov [esp+68h+var_48] eax +
mov eax [esp+68h+arg_C] +
jmp loc_447000  +
mov ecx offset loc_4468A0 +
jmp loc_446FF2  +
xor eax eax +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+var_14] +
cmp eax 5 +
jz loc_446F36  +
cmp eax 3 +
jnz loc_446F42  +
cmp [esp+68h+var_10] 0 +
mov ecx offset loc_446950 +
jz loc_446F47  +
mov ecx offset loc_4468E0 +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_3C] offset sub_4480D0 +
mov [esp+68h+var_48] eax +
jmp loc_447004  +
xor eax eax +
mov ecx offset loc_446A30 +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_48] eax +
jmp loc_447004  +
xor eax eax +
mov ecx offset loc_446AD0 +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_48] eax +
jmp loc_447004  +
xor eax eax +
mov ecx offset loc_446B10 +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_48] eax +
jmp loc_447004  +
xor eax eax +
mov ecx offset loc_446B80 +
mov [esp+68h+var_44] eax +
mov eax [esp+68h+arg_8] +
mov [esp+68h+var_48] eax +
jmp loc_447004  +
mov ecx offset dword_446BC0 +
jmp loc_446FF2  +
xor eax eax +
mov ecx offset loc_446C80 +
mov [esp+68h+var_48] eax +
mov eax [esp+68h+arg_C] +
jmp loc_447000  +
xor eax eax +
mov ecx offset loc_446D30 +
mov [esp+68h+var_48] eax +
mov eax [esp+68h+arg_C] +
jmp loc_447000  +
xor eax eax +
mov ecx offset loc_446DC0 +
mov [esp+68h+var_48] eax +
mov eax [esp+68h+arg_C] +
jmp loc_447000  +
mov ecx offset loc_446E10 +
xor eax eax +
mov [esp+68h+var_3C] offset sub_4480D0 +
mov [esp+68h+var_48] eax +
mov [esp+68h+var_44] eax +
mov [esp+68h+var_4C] ecx +
test ecx ecx +
jz loc_4476F0  +
mov eax [edx+4] +
mov [esp+68h+var_8] eax +
test eax eax +
jz loc_4476CD  +
cmp dword ptr [eax] 0 +
jle loc_4476CD  +
mov ecx [esi+8] +
xor eax eax +
mov [esp+68h+var_58] 0 +
mov [esp+68h+var_28] eax +
mov [esp+68h+var_C] eax +
mov [esp+68h+var_54] eax +
cmp ecx 0FFFFFFFFh +
jz loc_447097  +
mov eax [edi+20h] +
mov esi [eax+8] +
lea eax [ecx+ecx*4] +
lea ebp [esi+eax*8] +
lea eax [esp+68h+var_58] +
mov [esp+68h+var_28] ebp +
push eax  +
push ebp  +
push edi  +
call sub_445D90  +
add esp 0Ch +
test eax eax +
jz loc_447095  +
mov eax [ebp+4] +
cmp eax 0FFFFFFFFh +
jz loc_447085  +
lea eax [eax+eax*4] +
mov [esp+68h+var_C] 1 +
lea eax [esi+eax*8] +
mov [esp+68h+var_28] eax +
jmp loc_447097  +
xor eax eax +
mov [esp+68h+var_54] 1 +
mov [esp+68h+var_28] eax +
jmp loc_447097  +
mov eax ebp +
cmp [esp+68h+arg_10] 0 +
jz loc_4470AA  +
mov [esp+68h+var_50] 1 +
test eax eax +
jz loc_4470B2  +
mov [esp+68h+var_50] 0 +
mov eax [ebx+4] +
xor ebp ebp +
xor ebx ebx +
mov [esp+68h+var_4] eax +
mov [esp+68h+arg_4] ebx +
xor edx edx +
mov esi edi +
jmp loc_4470D0  +
mov edx [esp+68h+var_38] +
mov esi [esp+68h+arg_0] +
nop   +
mov eax [esp+68h+var_8] +
cmp edx [eax] +
jge loc_4475A8  +
cmp dword ptr [esi+8] 0 +
jnz loc_4475A8  +
mov eax [eax+8] +
mov ecx [esp+68h+var_34] +
mov eax [eax+edx*4] +
inc edx  +
mov [ecx+4] eax +
mov [esp+68h+var_38] edx +
test ebp ebp +
jnz loc_447120  +
push 0Ch  +
call off_4EE2E8  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_447593  +
xorps xmm0 xmm0 +
movq qword ptr [ebp+0] xmm0 +
mov dword ptr [ebp+8] 0 +
xor ebx ebx +
xor edi edi +
mov [esp+68h+var_30] ebx +
push edi  +
push esi  +
call [esp+70h+var_4C]  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_447454  +
mov eax [esp+68h+var_48] +
test eax eax +
jz loc_447179  +
mov ecx [eax] +
test ecx ecx +
jz loc_447179  +
cmp ecx edi +
jz loc_447454  +
mov edx [esp+68h+var_40] +
mov eax edx +
and eax 800000FFh +
jns loc_447165  +
dec eax  +
or eax 0FFFFFF00h +
inc eax  +
jnz loc_44717D  +
push edi  +
push ecx  +
call loc_43DB70  +
add esp 8 +
test eax eax +
jns loc_447454  +
mov edx [esp+68h+var_40] +
mov eax [esp+68h+var_44] +
test eax eax +
jz loc_4471B7  +
mov ecx [eax] +
test ecx ecx +
jz loc_4471B7  +
cmp ecx edi +
jz loc_447454  +
mov eax edx +
and eax 800000FFh +
jns loc_4471A3  +
dec eax  +
or eax 0FFFFFF00h +
inc eax  +
jnz loc_4471B7  +
push ecx  +
push edi  +
call loc_43DB70  +
add esp 8 +
test eax eax +
jns loc_447454  +
inc [esp+68h+var_40]  +
mov eax [esp+68h+var_14] +
cmp eax 5 +
ja loc_44744A  +
jmp ds:off_447750[eax*4]  +
mov ecx [esp+68h+var_10] +
mov eax [edi+4] +
test ecx ecx +
jnz loc_4471F2  +
dec eax  +
cmp eax 14h +
ja loc_44744A  +
movzx eax ds:byte_447770[eax] +
jmp ds:off_447768[eax*4]  +
cmp eax ecx +
jnz loc_447245  +
cmp eax 12h +
jnz loc_4472AD  +
cmp [esp+68h+var_54] 0 +
jz loc_447227  +
inc ebx  +
cmp ebx [esp+68h+var_58] +
jnz loc_44744A  +
mov eax [esp+68h+var_34] +
push edi  +
push dword ptr [eax+4]  +
push ebp  +
call sub_447880  +
add esp 0Ch +
jmp loc_4472CD  +
mov eax [esp+68h+var_34] +
push edi  +
mov [esp+6Ch+var_30] 1 +
push dword ptr [eax+4]  +
push ebp  +
call sub_447880  +
add esp 0Ch +
jmp loc_447434  +
cmp ecx 3 +
jnz loc_44744A  +
cmp eax 4 +
jnz loc_44744A  +
jmp loc_4472AD  +
cmp dword ptr [edi+4] 7 +
jnz loc_44744A  +
mov eax [esp+68h+var_24] +
test eax eax +
jz loc_4472AD  +
push dword ptr [edi+8]  +
push eax  +
jmp loc_44729D  +
mov ecx [esp+68h+var_1C] +
cmp ecx 3 +
jnz loc_4472F1  +
cmp dword ptr [edi+4] 2 +
jnz loc_44744A  +
cmp [esp+68h+var_20] 0 +
jz loc_4472AD  +
mov eax [edi+24h] +
test eax eax +
jz loc_44744A  +
push dword ptr [eax+8]  +
push [esp+6Ch+var_2C]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44744A  +
cmp [esp+68h+var_54] 0 +
jz loc_44742A  +
inc ebx  +
cmp ebx [esp+68h+var_58] +
jnz loc_44744A  +
push edi  +
push ebp  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_4472D8  +
mov dword ptr [esi+8] 0Fh +
mov edx [esp+68h+arg_4] +
test edx edx +
jnz loc_4474A4  +
mov ebx ebp +
xor ebp ebp +
mov [esp+68h+arg_4] ebx +
jmp loc_4474B5  +
cmp ecx 9 +
jnz loc_44731B  +
cmp dword ptr [edi+4] 12h +
jnz loc_44744A  +
cmp [esp+68h+var_54] 0 +
jz loc_447227  +
inc ebx  +
cmp ebx [esp+68h+var_58] +
jz loc_447211  +
jmp loc_44744A  +
cmp dword ptr [edi+4] 1 +
jmp loc_44727E  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 30A9h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov esi [esp+78h+arg_0] +
add esp 10h +
jmp loc_44744A  +
mov ecx [esp+68h+var_1C] +
mov eax [edi+4] +
cmp ecx 3 +
jnz loc_447362  +
cmp eax 2 +
jmp loc_44736F  +
cmp ecx 9 +
jnz loc_44736C  +
cmp eax 12h +
jmp loc_44736F  +
cmp eax 1 +
jnz loc_44744A  +
sub eax 1 +
jz loc_447401  +
sub eax 1 +
jz loc_4473CD  +
sub eax 10h +
jnz loc_44744A  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_44744A  +
mov ecx [esp+68h+var_24] +
test ecx ecx +
jz loc_44744A  +
push ecx  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44744A  +
cmp [esp+68h+var_54] 0 +
jz loc_447227  +
inc ebx  +
cmp ebx [esp+68h+var_58] +
jz loc_447211  +
jmp loc_44744A  +
push dword ptr [edi+8]  +
push [esp+6Ch+var_24]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44744A  +
cmp [esp+68h+var_20] 0 +
mov eax [edi+24h] +
jnz loc_44728E  +
test eax eax +
jz loc_4472AD  +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_44744A  +
jmp loc_4472AD  +
push dword ptr [edi+8]  +
push [esp+6Ch+var_24]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44744A  +
cmp [esp+68h+var_20] 0 +
jnz loc_44728B  +
cmp dword ptr [edi+24h] 0 +
jnz loc_44744A  +
jmp loc_4472AD  +
push edi  +
push ebp  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_44743F  +
mov dword ptr [esi+8] 0Fh +
cmp [esp+68h+var_50] 0 +
jnz loc_447603  +
cmp dword ptr [esi+8] 0 +
jz loc_447128  +
cmp dword ptr [esi+8] 0 +
mov ebx [esp+68h+arg_4] +
jnz loc_4475A8  +
mov eax [esp+68h+var_28] +
mov edx [esp+68h+var_38] +
test eax eax +
jz loc_447556  +
mov esi [ebp+0] +
test esi esi +
jle loc_4470CB  +
cmp [esp+68h+var_C] 0 +
mov edi [esp+68h+arg_0] +
jz loc_4474C9  +
push [esp+68h+var_30]  +
mov ebx [esp+6Ch+var_58] +
push ebx  +
push ebx  +
push esi  +
push ebp  +
push eax  +
push edi  +
call loc_4413B0  +
mov ebx [esp+84h+var_30] +
add esp 1Ch +
jmp loc_4474DA  +
push 0  +
push ebp  +
push edx  +
call [esp+74h+var_3C]  +
add esp 0Ch +
mov [esp+68h+arg_4] eax +
mov ebx eax +
cmp [esp+68h+arg_10] 0 +
jnz loc_4475A8  +
mov edx [esp+68h+var_38] +
jmp loc_4470D0  +
mov ebx [esp+68h+var_30] +
push ebx  +
push esi  +
push ebp  +
push eax  +
push edi  +
call loc_441700  +
add esp 14h +
cmp dword ptr [edi+8] 0 +
mov ecx eax +
jnz loc_447658  +
test ecx ecx +
jnz loc_4474FD  +
push ebx  +
push ebp  +
call loc_447A70  +
mov ebx [esp+70h+arg_4] +
add esp 8 +
jmp loc_4470C7  +
cmp dword ptr [ebp+0] 0 +
mov ebx [esp+68h+arg_4] +
mov edx [esp+68h+var_38] +
jle loc_4470CB  +
mov edx ebx +
test edx edx +
jnz loc_447533  +
cmp esi ecx +
jz loc_447529  +
push 1  +
push ebp  +
push ebx  +
call [esp+74h+var_3C]  +
mov ebx eax +
mov [esp+74h+arg_4] ebx +
jmp loc_447547  +
mov ebx ebp +
xor ebp ebp +
mov [esp+68h+arg_4] ebx +
jmp loc_44754A  +
xor eax eax +
cmp esi ecx +
setnz al  +
push eax  +
push ebp  +
push edx  +
call [esp+74h+var_3C]  +
mov ebx eax +
mov [esp+74h+arg_4] eax +
add esp 0Ch +
cmp [esp+68h+arg_10] 0 +
jnz loc_4475AC  +
jmp loc_4470C7  +
cmp dword ptr [ebp+0] 0 +
jle loc_4470D0  +
mov edx [esp+68h+arg_4] +
test edx edx +
jnz loc_447579  +
mov edx [esp+68h+var_38] +
mov ebx ebp +
mov [esp+68h+arg_4] ebx +
xor ebp ebp +
jmp loc_4470D0  +
push 0  +
push ebp  +
push edx  +
call [esp+74h+var_3C]  +
mov edx [esp+74h+var_38] +
mov ebx eax +
add esp 0Ch +
mov [esp+68h+arg_4] ebx +
jmp loc_4470D0  +
push offset aCreatingNodese  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor ebp ebp +
mov [esp+68h+var_40] ebp +
mov edi [esp+68h+arg_0] +
mov edx [esp+68h+var_18] +
cmp dword ptr [edx+8] 0 +
jz loc_4475DD  +
cmp dword ptr [edx+1Ch] 0 +
jz loc_4475DD  +
mov eax [edi+10h] +
mov dword ptr [eax+8] 1 +
mov ecx [edi+10h] +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
mov dword ptr [edx+1Ch] 0 +
mov dword ptr [edx+8] 0 +
mov esi [esp+68h+var_34] +
push edx  +
push esi  +
call loc_4499D0  +
add esp 8 +
test ebx ebx +
jnz loc_447698  +
test ebp ebp +
jz loc_447669  +
cmp [ebp+0] ebx +
jnz loc_447669  +
mov ebx ebp +
jmp loc_447698  +
mov edx [esp+68h+arg_4] +
test edx edx +
jnz loc_447611  +
mov ebx ebp +
xor ebp ebp +
jmp loc_4475A8  +
push 0  +
push ebp  +
push edx  +
call [esp+74h+var_3C]  +
add esp 0Ch +
mov ebx eax +
jmp loc_4475A8  +
mov [esp+68h+var_40] 0 +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 305Bh  +
push offset a__Xpath_c  +
push offset aInternalErrorA  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov ebx [esp+78h+arg_4] +
add esp 10h +
jmp loc_4475A8  +
mov ebx [esp+68h+arg_4] +
mov [esp+68h+var_40] 0 +
jmp loc_4475AC  +
push 0Ch  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_44768A  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
jmp loc_447698  +
xorps xmm0 xmm0 +
movq qword ptr [ebx] xmm0 +
mov dword ptr [ebx+8] 0 +
test ebp ebp +
jz loc_4476A9  +
cmp ebp ebx +
jz loc_4476A9  +
push ebp  +
call sub_4455B0  +
add esp 4 +
push ebx  +
push esi  +
call sub_43D2C0  +
push eax  +
push edi  +
call sub_43C900  +
mov eax [esp+78h+var_4] +
add esp 10h +
mov [esi+4] eax +
mov eax [esp+68h+var_40] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 58h +
retn   +
push edx  +
push ebx  +
call loc_4499D0  +
push 0  +
push ebx  +
call sub_43D2C0  +
push eax  +
push edi  +
call sub_43C900  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 58h +
retn   +
push edx  +
push ebx  +
call loc_4499D0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 58h +
retn   +
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 58h +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
test esi esi +
jz loc_4477E8  +
mov edi [esp+10h] +
test edi edi +
jz loc_4477E8  +
mov edx [esi] +
xor ecx ecx +
test edx edx +
jle loc_4477C0  +
mov eax [esi+8] +
cmp [eax] edi +
jz loc_447871  +
inc ecx  +
add eax 4 +
cmp ecx edx +
jl loc_4477B0  +
mov eax [esi+4] +
test eax eax +
jnz loc_447806  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_4477EE  +
push offset aGrowingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_447847  +
cmp edx eax +
jnz loc_447847  +
cmp eax 989680h +
jl loc_447826  +
push offset aGrowingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
***
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jz loc_4477D9  +
mov eax [esi+4] +
add eax eax +
mov [esi+8] ecx +
mov [esi+4] eax +
cmp dword ptr [edi+4] 12h +
jnz loc_447867  +
push edi  +
push dword ptr [edi]  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
pop edi  +
mov [ecx+edx*4] eax +
inc dword ptr [esi]  +
xor eax eax +
pop esi  +
retn   +
***
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] edi +
inc dword ptr [esi]  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+arg_0] +
test esi esi +
jz loc_447997  +
mov ebp [esp+arg_8] +
test ebp ebp +
jz loc_447997  +
mov ebx [esp+arg_4] +
test ebx ebx +
jz loc_447997  +
cmp dword ptr [ebp+4] 12h +
jnz loc_447997  +
cmp dword ptr [ebx+4] 1 +
jnz loc_447997  +
push edi  +
xor edi edi +
cmp [esi] edi +
jle loc_4478F1  +
mov eax [esi+8] +
mov eax [eax+edi*4] +
test eax eax +
jz loc_4478EC  +
cmp dword ptr [eax+4] 12h +
jnz loc_4478EC  +
cmp [eax] ebx +
jnz loc_4478EC  +
push dword ptr [eax+0Ch]  +
push dword ptr [ebp+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_447990  +
inc edi  +
cmp edi [esi] +
jl loc_4478C2  +
mov eax [esi+4] +
test eax eax +
jnz loc_447922  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jz loc_44795A  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_44797C  +
cmp [esi] eax +
jnz loc_44797C  +
cmp eax 989680h +
jl loc_447944  +
push offset aGrowingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jnz loc_447971  +
push offset aGrowingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [esi+4] +
add eax eax +
mov [esi+8] ecx +
mov [esi+4] eax +
push ebp  +
push ebx  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
mov [ecx+edx*4] eax +
inc dword ptr [esi]  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
test esi esi +
jz loc_4479DA  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_4479DA  +
mov eax [esi+4] +
test eax eax +
jnz loc_4479F8  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_4479E0  +
push offset aGrowingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_447A37  +
cmp [esi] eax +
jnz loc_447A37  +
cmp eax 989680h +
jl loc_447A18  +
push offset aGrowingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4479CB  +
mov [esi+8] eax +
mov eax [esi+4] +
add eax eax +
mov [esi+4] eax +
cmp dword ptr [edi+4] 12h +
jnz loc_447A57  +
push edi  +
push dword ptr [edi]  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
pop edi  +
mov [ecx+edx*4] eax +
inc dword ptr [esi]  +
xor eax eax +
pop esi  +
retn   +
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] edi +
xor eax eax +
inc dword ptr [esi]  +
pop edi  +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_447AB5  +
mov eax [edi] +
test eax eax +
jle loc_447AB5  +
cmp dword ptr [esp+0Ch] 0 +
jz loc_447AAF  +
push esi  +
xor esi esi +
test eax eax +
jle loc_447AAE  +
mov eax [edi+8] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_447AA9  +
cmp dword ptr [eax+4] 12h +
jnz loc_447AA9  +
push eax  +
call sub_447CF0  +
add esp 4 +
inc esi  +
cmp esi [edi] +
jl loc_447A90  +
pop esi  +
mov dword ptr [edi] 0 +
pop edi  +
retn   +
***
test edi edi +
jz loc_447B04  +
mov eax [edi] +
test eax eax +
jle loc_447B04  +
push ebx  +
mov ebx [esp+4+arg_4] +
cmp ebx eax +
jge loc_447B03  +
cmp [esp+4+arg_8] 0 +
jz loc_447B01  +
push esi  +
mov esi ebx +
mov eax [edi+8] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_447AFB  +
cmp dword ptr [eax+4] 12h +
jnz loc_447AFB  +
push eax  +
call sub_447CF0  +
add esp 4 +
inc esi  +
cmp esi [edi] +
jl loc_447AE2  +
pop esi  +
mov [edi] ebx +
pop ebx  +
pop edi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_447B34  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_0] +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jz loc_447BB7  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_447B77  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
cmp dword ptr [edi+4] 12h +
jnz loc_447BAD  +
push edi  +
push dword ptr [edi]  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
pop edi  +
mov [ecx+edx*4] eax +
mov eax esi +
inc dword ptr [esi]  +
pop esi  +
retn   +
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] edi +
inc dword ptr [esi]  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_447BE4  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push ebx  +
push edi  +
mov edi [esp+8+arg_0] +
mov eax 0Ah +
cmp edi eax +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
cmovl edi eax +
mov dword ptr [esi+8] 0 +
lea ebx ds:0[edi*4] +
push ebx  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_447C35  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
push ebx  +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
mov [esi+4] edi +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
test edi edi +
jz loc_447CDD  +
cmp dword ptr [edi+4] 12h +
jnz loc_447CDD  +
push ebx  +
mov ebx [esp+4+arg_0] +
test ebx ebx +
jz loc_447CD8  +
cmp dword ptr [ebx+4] 12h +
jz loc_447CD8  +
push esi  +
push 18h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_447C98  +
push offset aDuplicatingNam  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+4] 12h +
mov eax [edi+8] +
test eax eax +
jz loc_447CBD  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_447CD0  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+0Ch] eax +
mov [esi] ebx +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
pop ebx  +
mov eax edi +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
test esi esi +
jz loc_447D37  +
cmp dword ptr [esi+4] 12h +
jnz loc_447D37  +
mov eax [esi] +
test eax eax +
jz loc_447D37  +
cmp dword ptr [eax+4] 12h +
jz loc_447D37  +
mov eax [esi+8] +
test eax eax +
jz loc_447D1C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_447D2D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [esp+10h] +
test ebx ebx +
jnz loc_447D51  +
mov eax [esp+0Ch] +
pop ebx  +
pop ecx  +
retn   +
***
push esi  +
mov esi [esp+10h] +
test esi esi +
jnz loc_447D8D  +
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_447D7F  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
xor ecx ecx +
push ebp  +
mov ebp [esi] +
push edi  +
mov [esp+10h] ecx +
cmp [ebx] ecx +
jle loc_447E84  +
nop   +
mov eax [ebx+8] +
xor ebx ebx +
mov edi [eax+ecx*4] +
test ebp ebp +
jle loc_447DEB  +
mov eax [esi+8] +
mov ecx [eax+ebx*4] +
cmp ecx edi +
jz loc_447E6F  +
cmp dword ptr [ecx+4] 12h +
jnz loc_447DE6  +
cmp dword ptr [edi+4] 12h +
jnz loc_447DE6  +
mov eax [ecx] +
cmp eax [edi] +
jnz loc_447DE6  +
push dword ptr [edi+0Ch]  +
push dword ptr [ecx+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_447E6F  +
inc ebx  +
cmp ebx ebp +
jl loc_447DB0  +
mov eax [esi+4] +
test eax eax +
jnz loc_447E20  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jz loc_447E8C  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_447E4A  +
cmp [esi] eax +
jnz loc_447E4A  +
cmp eax 989680h +
jge loc_447EA3  +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_447E8C  +
mov [esi+8] eax +
mov eax [esi+4] +
add eax eax +
mov [esi+4] eax +
cmp dword ptr [edi+4] 12h +
jnz loc_447E65  +
push edi  +
push dword ptr [edi]  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
mov [ecx+edx*4] eax +
jmp loc_447E6D  +
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] edi +
inc dword ptr [esi]  +
mov ecx [esp+10h] +
mov ebx [esp+1Ch] +
inc ecx  +
mov [esp+10h] ecx +
cmp ecx [ebx] +
jl loc_447DA0  +
pop edi  +
pop ebp  +
mov eax esi +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push offset aMergingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push offset aMergingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+18h] +
push edi  +
test esi esi +
jnz loc_447F54  +
cmp [esp+24h] esi +
jnz loc_447F1D  +
mov ebp [esp+20h] +
push dword ptr [ebp+0]  +
call sub_447BC0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_447F3C  +
mov eax [ebp+0] +
test eax eax +
jz loc_447F0C  +
shl eax 2 +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [esi+8]  +
call loc_48C9C0  +
mov eax [ebp+0] +
add esp 0Ch +
mov [esi] eax +
pop edi  +
mov eax esi +
mov dword ptr [ebp+0] 0 +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_447F46  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 8 +
retn   +
***
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
mov ebp [esp+20h] +
xor edx edx +
mov ecx [esi] +
mov [esp+1Ch] ecx +
mov [esp+10h] edx +
cmp [ebp+0] edx +
jle loc_447F0C  +
mov eax [ebp+8] +
lea ebx ds:0[edx*4] +
mov [esp+14h] ebx +
mov edi [ebx+eax] +
test edi edi +
jz loc_448072  +
xor ebx ebx +
test ecx ecx +
jle loc_447FC9  +
nop   +
mov eax [esi+8] +
mov ecx [eax+ebx*4] +
cmp ecx edi +
jz loc_44806A  +
cmp dword ptr [ecx+4] 12h +
jnz loc_447FC2  +
cmp dword ptr [edi+4] 12h +
jnz loc_447FC2  +
mov eax [ecx] +
cmp eax [edi] +
jnz loc_447FC2  +
push dword ptr [edi+0Ch]  +
push dword ptr [ecx+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_447FFE  +
inc ebx  +
cmp ebx [esp+1Ch] +
jl loc_447F90  +
mov eax [esi+4] +
test eax eax +
jnz loc_448017  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jz loc_448091  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_448045  +
mov eax [ebp+8] +
mov ecx [esp+14h] +
push edi  +
mov dword ptr [ecx+eax] 0 +
call sub_447CF0  +
add esp 4 +
jmp loc_44806A  +
cmp [esi] eax +
jl loc_448045  +
cmp eax 989680h +
jge loc_4480AA  +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_448091  +
mov [esi+8] eax +
mov eax [esi+4] +
add eax eax +
mov [esi+4] eax +
cmp dword ptr [edi+4] 12h +
jnz loc_448060  +
push edi  +
push dword ptr [edi]  +
call sub_447C50  +
mov edx [esi] +
add esp 8 +
mov ecx [esi+8] +
mov [ecx+edx*4] eax +
jmp loc_448068  +
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] edi +
inc dword ptr [esi]  +
mov ecx [esp+1Ch] +
mov edx [esp+10h] +
inc edx  +
mov [esp+10h] edx +
cmp edx [ebp+0] +
jl loc_447F70  +
pop edi  +
mov eax esi +
mov dword ptr [ebp+0] 0 +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
push offset aMergingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
push offset aMergingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
test ebx ebx +
jnz loc_4480DF  +
mov eax [esp+arg_0] +
pop ebx  +
retn   +
push ebp  +
push esi  +
mov esi [esp+8+arg_0] +
push edi  +
test esi esi +
jnz loc_448161  +
cmp [esp+0Ch+arg_8] esi +
jnz loc_44812D  +
push dword ptr [ebx]  +
call sub_447BC0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4481F7  +
mov eax [ebx] +
test eax eax +
jz loc_448120  +
shl eax 2 +
push eax  +
push dword ptr [ebx+8]  +
push dword ptr [esi+8]  +
call loc_48C9C0  +
mov eax [ebx] +
add esp 0Ch +
mov [esi] eax +
pop edi  +
mov eax esi +
mov dword ptr [ebx] 0 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_448153  +
push offset aCreatingNodese  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
xor edi edi +
cmp [ebx] edi +
jle loc_448120  +
mov eax [ebx+8] +
mov ebp [eax+edi*4] +
test ebp ebp +
jz loc_4481D6  +
mov eax [esi+4] +
test eax eax +
jnz loc_4481A2  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jz loc_4481E8  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [esi+4] 0Ah +
jmp loc_4481CC  +
cmp [esi] eax +
jl loc_4481CC  +
cmp eax 989680h +
jge loc_4481FE  +
shl eax 3 +
push eax  +
push dword ptr [esi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4481E8  +
mov [esi+8] eax +
mov eax [esi+4] +
add eax eax +
mov [esi+4] eax +
mov ecx [esi] +
mov eax [esi+8] +
mov [eax+ecx*4] ebp +
inc dword ptr [esi]  +
inc edi  +
cmp edi [ebx] +
jl loc_448167  +
pop edi  +
mov eax esi +
mov dword ptr [ebx] 0 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push offset aMergingNodeset  +
push 0  +
call sub_4448C0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push offset aMergingNodes_0  +
push 0  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_448235  +
push dword ptr [eax]  +
push dword ptr [eax+8]  +
call sub_43BE10  +
add esp 8 +
retn   +
***
push ebx  +
push ebp  +
push esi  +
mov esi [esp+10h] +
xor ebp ebp +
push edi  +
xor edi edi +
mov ebx 2 +
test esi esi +
jz loc_448370  +
cmp dword ptr [esi+4] 9 +
jnz loc_44827B  +
push esi  +
call sub_422980  +
add esp 4 +
test eax eax +
jnz loc_448271  +
mov esi [esi+0Ch] +
jmp loc_448273  +
mov esi eax +
test esi esi +
jz loc_448370  +
mov eax [esi+4] +
dec eax  +
cmp eax 11h +
ja loc_448370  +
movzx eax ds:byte_448388[eax] +
jmp ds:off_448378[eax*4]  +
mov eax [esi+28h] +
test eax eax +
jz loc_448370  +
mov dl [eax] +
test dl dl +
jz loc_448370  +
movzx ecx byte ptr [eax+1] +
pop edi  +
pop esi  +
movzx eax dl +
shl ecx 8 +
pop ebp  +
add eax ecx +
pop ebx  +
retn   +
***
mov eax [esi+8] +
jmp loc_448299  +
***
mov eax [esi+0Ch] +
test eax eax +
jz loc_44834B  +
mov edx [eax+4] +
lea ecx [edx-3] +
cmp ecx 0Fh +
ja loc_4482F1  +
movzx ecx ds:byte_4483A8[ecx] +
jmp ds:off_44839C[ecx*4]  +
mov edi [eax+28h] +
jmp loc_4482F1  +
mov edi [eax+8] +
test edi edi +
jz loc_44830E  +
mov cl [edi] +
test cl cl +
jz loc_44830E  +
cmp ebx 1 +
jz loc_448363  +
cmp byte ptr [edi+1] 0 +
jnz loc_448352  +
mov ebx 1 +
movzx ebp cl +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_448324  +
cmp edx 0Eh +
jz loc_448324  +
cmp dword ptr [ecx+4] 11h +
jz loc_448324  +
mov eax ecx +
jmp loc_448347  +
cmp eax esi +
jz loc_44834B  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_448333  +
mov eax ecx +
jmp loc_448347  +
mov eax [eax+14h] +
test eax eax +
jz loc_44834B  +
cmp eax esi +
jz loc_44834B  +
cmp dword ptr [eax+18h] 0 +
jz loc_448333  +
mov eax [eax+18h] +
test eax eax +
jnz loc_4482D0  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
pop ebx  +
retn   +
***
movzx ecx byte ptr [edi+1] +
movzx eax byte ptr [edi] +
pop edi  +
pop esi  +
shl ecx 8 +
pop ebp  +
add eax ecx +
pop ebx  +
retn   +
***
movzx eax byte ptr [edi] +
pop edi  +
shl eax 8 +
pop esi  +
add eax ebp +
pop ebp  +
pop ebx  +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_448554  +
mov eax [esp+0Ch] +
test eax eax +
jnz loc_44841D  +
mov eax [edi+0Ch] +
push dword ptr [eax+4]  +
call sub_424950  +
add esp 4 +
test eax eax +
jnz loc_4483F4  +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43D340  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+14h] eax +
jge loc_44842F  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
cmp eax 1 +
jz loc_448407  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov eax [edi+10h] +
test eax eax +
jz loc_448468  +
cmp dword ptr [eax] 4 +
jz loc_448468  +
push edi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_448455  +
push 0Ah  +
push edi  +
call sub_444780  +
add esp 8 +
jmp loc_448468  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43CD20  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax [edi+10h] +
test eax eax +
jz loc_448549  +
cmp dword ptr [eax] 4 +
jnz loc_448549  +
push ebx  +
push ebp  +
push esi  +
push edi  +
call sub_43C8A0  +
mov ebp eax +
add esp 4 +
mov esi [ebp+18h] +
call sub_45D830  +
mov ebx eax +
test ebx ebx +
jz loc_448538  +
test esi esi +
jz loc_448538  +
mov cl [esi] +
cmp cl 20h +
jz loc_4484BA  +
cmp cl 9 +
jb loc_4484B5  +
cmp cl 0Ah +
jbe loc_4484BA  +
cmp cl 0Dh +
jnz loc_4484BD  +
inc esi  +
jmp loc_4484A4  +
***
xor cl cl +
mov [esp+14h] cl +
mov al [esi] +
test al al +
jz loc_448519  +
cmp al 20h +
jz loc_44850B  +
cmp al 9 +
jb loc_4484DC  +
cmp al 0Ah +
jbe loc_44850B  +
cmp al 0Dh +
jz loc_44850B  +
test cl cl +
jz loc_4484F9  +
push 1  +
lea eax [esp+18h] +
push eax  +
push ebx  +
call sub_45D320  +
add esp 0Ch +
mov byte ptr [esp+14h] 0 +
push 1  +
push esi  +
push ebx  +
call sub_45D320  +
mov cl [esp+20h] +
add esp 0Ch +
jmp loc_448511  +
mov cl 20h +
mov [esp+14h] cl +
mov al [esi+1] +
inc esi  +
test al al +
jnz loc_4484D0  +
push ebx  +
call sub_45D810  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43D190  +
push eax  +
push edi  +
call sub_43C900  +
push ebx  +
call sub_45DAC0  +
add esp 18h +
push ebp  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
***
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
test ebx ebx +
jz loc_4486EC  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_4486EC  +
push ebp  +
push edi  +
push ebx  +
call sub_43C8A0  +
push ebx  +
mov ebp eax +
call sub_43C8A0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_4486CE  +
test ebp ebp +
jz loc_4486CB  +
cmp edi ebp +
jnz loc_4485BC  +
push edi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
mov eax [ebp+0] +
cmp eax 1 +
jz loc_4485EA  +
cmp eax 9 +
jz loc_4485EA  +
mov eax [edi] +
cmp eax 1 +
jz loc_4485FC  +
cmp eax 9 +
jz loc_4485EA  +
push ebp  +
push edi  +
push ebx  +
call sub_444260  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
mov eax [edi] +
cmp eax 1 +
jz loc_4485FC  +
cmp eax 9 +
jz loc_4485FC  +
mov eax ebp +
mov ebp edi +
mov edi eax +
mov eax [ebp+0] +
dec eax  +
cmp eax 8 +
ja loc_4486AD  +
jmp ds:off_4486F4[eax*4]  +
push 1  +
push ebp  +
push edi  +
call loc_443D30  +
add esp 0Ch +
mov [esp+10h+var_4] eax +
jmp loc_4486AD  +
mov eax [edi+4] +
test eax eax +
jz loc_448644  +
cmp dword ptr [eax] 0 +
jz loc_448644  +
xor eax eax +
mov ecx 1 +
cmp ecx [ebp+8] +
setnz al  +
mov [esp+10h+var_4] eax +
jmp loc_4486AD  +
xor eax eax +
xor ecx ecx +
cmp ecx [ebp+8] +
setnz al  +
mov [esp+10h+var_4] eax +
jmp loc_4486AD  +
movsd xmm0 qword ptr [ebp+10h] +
push 1  +
sub esp 8 +
movsd [esp+1Ch+var_1C] xmm0 +
push edi  +
push ebx  +
call loc_443AB0  +
add esp 14h +
mov [esp+10h+var_4] eax +
jmp loc_4486AD  +
push 1  +
push dword ptr [ebp+18h]  +
push edi  +
call loc_443C10  +
add esp 0Ch +
mov [esp+10h+var_4] eax +
jmp loc_4486AD  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 1C79h  +
push offset a__Xpath_c  +
push offset aUnimplementedB  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
pop esi  +
push edi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
mov eax [esp+20h+var_4] +
add esp 10h +
pop edi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
push edi  +
jmp loc_4486CF  +
push ebp  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 8 +
push 0Ah  +
push ebx  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
***
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
xor eax eax +
cmp [ecx+8] eax +
pop esi  +
setz al  +
mov [ecx+8] eax +
retn   +
***
test edi edi +
sub esp 8 +
push edi  +
mov edi [esp+0Ch+arg_0] +
test edi edi +
jz loc_4488D6  +
mov eax [esp+0Ch+arg_4] +
test eax eax +
jnz loc_44888F  +
mov eax [edi+0Ch] +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_448852  +
sub esp 8 +
xorps xmm0 xmm0 +
movsd [esp+14h+var_14] xmm0 +
push eax  +
call sub_43CFD0  +
push eax  +
push edi  +
call sub_43C900  +
add esp 14h +
pop edi  +
add esp 8 +
retn   +
push esi  +
push ecx  +
call sub_424950  +
mov esi eax +
push esi  +
call loc_44A6B0  +
fstp  [esp+18h+var_8] +
movsd xmm0 [esp+18h+var_8] +
movsd qword ptr [esp] xmm0 +
push dword ptr [edi+0Ch]  +
call sub_43CFD0  +
push eax  +
push edi  +
call sub_43C900  +
push esi  +
call off_4EE2F4  +
add esp 18h +
pop esi  +
pop edi  +
add esp 8 +
retn   +
cmp eax 1 +
jz loc_4488A4  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
add esp 8 +
retn   +
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+14h] eax +
jge loc_4488BD  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
add esp 8 +
retn   +
push edi  +
call sub_43C8A0  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43CCC0  +
push eax  +
push edi  +
call sub_43C900  +
add esp 14h +
pop edi  +
add esp 8 +
retn   +
***
test ebx ebx +
jnz loc_4488ED  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
push 30h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_448912  +
push offset aCopyingObject  +
push eax  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebx  +
retn   +
movups xmm0 oword ptr [ebx] +
movups oword ptr [edi] xmm0 +
movups xmm0 oword ptr [ebx+10h] +
movups oword ptr [edi+10h] xmm0 +
movups xmm0 oword ptr [ebx+20h] +
movups oword ptr [edi+20h] xmm0 +
mov eax [ebx] +
cmp eax 9 +
ja loc_4489A3  +
jmp ds:off_4489A8[eax*4]  +
push dword ptr [ebx+18h]  +
call sub_44E600  +
add esp 4 +
mov [edi+18h] eax +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
push dword ptr [ebx+4]  +
push 0  +
call loc_447D40  +
add esp 8 +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
push dword ptr [ebx+1Ch]  +
push 0  +
call loc_467F20  +
add esp 8 +
mov [edi+1Ch] eax +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
mov eax [ebx+1Ch] +
mov [edi+1Ch] eax +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebx]  +
push offset aXmlxpathobject  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
push edi  +
mov edi [esp+0Ch] +
jmp ds:off_448A80[eax*4]  +
mov eax [ecx+4] +
mov dword ptr [esi+0Ch] 5 +
jmp loc_448A49  +
mov eax [ecx+4] +
mov dword ptr [esi+0Ch] 6 +
mov [esi+4] eax +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jz loc_448A67  +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
lea eax [eax+ecx*8] +
push eax  +
push edi  +
call loc_4489D0  +
add esp 8 +
mov eax [esi+8] +
cmp eax 0FFFFFFFFh +
jz loc_448A7D  +
lea ecx [eax+eax*4] +
mov eax [edi+8] +
lea esi [eax+ecx*8] +
jmp near ptr dword_4489DC+4  +
***
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
mov eax [esi] +
mov cl [eax] +
cmp cl 22h +
jnz loc_448B11  +
lea edx [eax+1] +
mov [esi] edx +
mov ecx [esi] +
mov al [ecx] +
cmp al 9 +
jb loc_448ABF  +
cmp al 0Ah +
jbe loc_448AC7  +
cmp al 0Dh +
jz loc_448AC7  +
cmp al 20h +
jb loc_448AD6  +
cmp al 22h +
jz loc_448AD6  +
test al al +
jz loc_448AB3  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_448AB3  +
***
mov al [ecx] +
cmp al 9 +
jb loc_448AE0  +
cmp al 0Ah +
jbe loc_448AF7  +
cmp al 0Dh +
jz loc_448AF7  +
cmp al 20h +
jnb loc_448AF7  +
push 2  +
push esi  +
call sub_444780  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
***
sub ecx edx +
push ecx  +
push edx  +
call sub_44E8A0  +
mov ecx [esi] +
add esp 8 +
mov edx eax +
cmp byte ptr [ecx] 0 +
jz loc_448B6D  +
inc ecx  +
mov [esi] ecx +
pop esi  +
retn   +
***
cmp cl 27h +
jnz loc_448B71  +
lea edx [eax+1] +
mov [esi] edx +
mov ecx [esi] +
mov al [ecx] +
cmp al 9 +
jb loc_448B2C  +
cmp al 0Ah +
jbe loc_448B34  +
cmp al 0Dh +
jz loc_448B34  +
cmp al 20h +
jb loc_448B43  +
cmp al 27h +
jz loc_448B43  +
test al al +
jz loc_448B20  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_448B20  +
***
mov al [ecx] +
cmp al 9 +
jb loc_448B4D  +
cmp al 0Ah +
jbe loc_448B55  +
cmp al 0Dh +
jz loc_448B55  +
cmp al 20h +
jb loc_448AE8  +
sub ecx edx +
push ecx  +
push edx  +
call sub_44E8A0  +
mov edx eax +
add esp 8 +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_448B6D  +
inc eax  +
mov [esi] eax +
mov eax edx +
pop esi  +
retn   +
***
test edi edi +
jz loc_448C20  +
mov ecx [edi] +
test ecx ecx +
jz loc_448C20  +
push esi  +
mov esi ecx +
mov al [esi] +
cmp al 61h +
jb loc_448BA4  +
cmp al 7Ah +
jbe loc_448BB0  +
cmp al 41h +
jb loc_448BAC  +
cmp al 5Ah +
jbe loc_448BB0  +
cmp al 5Fh +
jnz loc_448C12  +
mov al [esi+1] +
inc esi  +
cmp al 61h +
jb loc_448BBC  +
cmp al 7Ah +
jbe loc_448BB0  +
cmp al 41h +
jb loc_448BC4  +
cmp al 5Ah +
jbe loc_448BB0  +
cmp al 30h +
jb loc_448BCC  +
cmp al 39h +
jbe loc_448BB0  +
cmp al 5Fh +
jz loc_448BB0  +
cmp al 2Eh +
jz loc_448BB0  +
cmp al 2Dh +
jz loc_448BB0  +
mov al [esi] +
cmp al 20h +
jz loc_448BFA  +
cmp al 3Eh +
jz loc_448BFA  +
cmp al 2Fh +
jz loc_448BFA  +
cmp al 5Bh +
jz loc_448BFA  +
cmp al 5Dh +
jz loc_448BFA  +
cmp al 3Ah +
jz loc_448BFA  +
cmp al 40h +
jz loc_448BFA  +
cmp al 2Ah +
jnz loc_448C12  +
mov eax esi +
sub eax ecx +
jnz loc_448C03  +
pop esi  +
pop edi  +
retn   +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi] esi +
pop esi  +
pop edi  +
retn   +
push 0  +
push edi  +
call loc_448C30  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
sub esp 7Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+78h] eax +
push ebx  +
push ebp  +
mov ebp [esp+88h] +
lea eax [esp+8] +
push esi  +
push edi  +
push eax  +
push ebp  +
mov [esp+1Ch] ebp +
xor esi esi +
call sub_4437B0  +
mov ebx eax +
add esp 8 +
cmp ebx 20h +
jz loc_448F07  +
cmp ebx 3Eh +
jz loc_448F07  +
cmp ebx 2Fh +
jz loc_448F07  +
cmp ebx 5Bh +
jz loc_448F07  +
cmp ebx 5Dh +
jz loc_448F07  +
cmp ebx 40h +
jz loc_448F07  +
cmp ebx 2Ah +
jz loc_448F07  +
mov edi [esp+94h] +
cmp ebx 100h +
jge loc_448CEF  +
cmp ebx 41h +
jl loc_448CBB  +
cmp ebx 5Ah +
jle loc_448D43  +
cmp ebx 61h +
jl loc_448CC5  +
cmp ebx 7Ah +
jle loc_448D43  +
cmp ebx 0C0h +
jl loc_448CD5  +
cmp ebx 0D6h +
jle loc_448D43  +
cmp ebx 0D8h +
jl loc_448CE5  +
cmp ebx 0F6h +
jle loc_448D43  +
cmp ebx 0F8h +
jl loc_448D01  +
jmp loc_448D43  +
push offset asc_4C14B0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_448D43  +
cmp ebx 100h +
jl loc_448D31  +
cmp ebx 4E00h +
jl loc_448D19  +
cmp ebx 9FA5h +
jle loc_448D43  +
cmp ebx 3007h +
jz loc_448D43  +
cmp ebx 3021h +
jl loc_448D31  +
cmp ebx 3029h +
jle loc_448D43  +
cmp ebx 5Fh +
jz loc_448D43  +
test edi edi +
jz loc_448D43  +
cmp ebx 3Ah +
jnz loc_448F07  +
cmp ebx 3Eh +
jz loc_448EB0  +
cmp ebx 2Fh +
jz loc_448EB0  +
cmp ebx 100h +
jge loc_448DAE  +
cmp ebx 41h +
jl loc_448D6B  +
cmp ebx 5Ah +
jle loc_448E65  +
cmp ebx 61h +
jl loc_448D79  +
cmp ebx 7Ah +
jle loc_448E65  +
cmp ebx 0C0h +
jl loc_448D8D  +
cmp ebx 0D6h +
jle loc_448E65  +
cmp ebx 0D8h +
jl loc_448DA1  +
cmp ebx 0F6h +
jle loc_448E65  +
cmp ebx 0F8h +
jl loc_448DC4  +
jmp loc_448E65  +
push offset asc_4C14B0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_448E65  +
cmp ebx 100h +
jl loc_448E0C  +
cmp ebx 4E00h +
jl loc_448DE0  +
cmp ebx 9FA5h +
jle loc_448E65  +
cmp ebx 3007h +
jz loc_448E65  +
cmp ebx 3021h +
jl loc_448DF8  +
cmp ebx 3029h +
jle loc_448E65  +
push offset unk_4C14E0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_448E65  +
jmp loc_448E14  +
lea eax [ebx-30h] +
cmp eax 9 +
jbe loc_448E65  +
cmp ebx 2Eh +
jz loc_448E65  +
cmp ebx 2Dh +
jz loc_448E65  +
cmp ebx 5Fh +
jz loc_448E65  +
test edi edi +
jz loc_448E2C  +
cmp ebx 3Ah +
jz loc_448E65  +
cmp ebx 100h +
jl loc_448E56  +
push offset unk_4C14D0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_448E65  +
push offset unk_4C14F0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
jmp loc_448E61  +
xor eax eax +
cmp ebx 0B7h +
setz al  +
test eax eax +
jz loc_448EB0  +
mov edi [esp+10h] +
cmp edi 1 +
jnz loc_448E75  +
mov [esp+esi+1Ch] bl +
inc esi  +
jmp loc_448E88  +
lea eax [esp+1Ch] +
push ebx  +
add eax esi +
push eax  +
push edi  +
call sub_45B4F0  +
add esp 0Ch +
add esi eax +
add [ebp+0] edi +
lea eax [esp+10h] +
push eax  +
push ebp  +
call sub_4437B0  +
add esp 8 +
mov ebx eax +
cmp esi 64h +
jge loc_448ED5  +
mov edi [esp+94h] +
cmp ebx 20h +
jnz loc_448D43  +
test esi esi +
jz loc_448F07  +
lea eax [esp+1Ch] +
push esi  +
push eax  +
call sub_44E8A0  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+78h] +
xor ecx esp +
call sub_488C1C  +
add esp 7Ch +
retn   +
***
lea edi [esi+esi] +
mov [esp+18h] edi +
cmp esi 0C350h +
jle loc_448EE9  +
push 7  +
push ebp  +
jmp loc_448EFF  +
push edi  +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_448F1C  +
push 0Fh  +
push dword ptr [esp+18h]  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+78h] +
xor ecx esp +
call sub_488C1C  +
add esp 7Ch +
retn   +
***
push esi  +
lea eax [esp+20h] +
push eax  +
push ebp  +
call loc_48C9C0  +
add esp 0Ch +
cmp ebx 100h +
jge loc_448F89  +
cmp ebx 41h +
jl loc_448F46  +
cmp ebx 5Ah +
jle loc_44904A  +
cmp ebx 61h +
jl loc_448F54  +
cmp ebx 7Ah +
jle loc_44904A  +
cmp ebx 0C0h +
jl loc_448F68  +
cmp ebx 0D6h +
jle loc_44904A  +
cmp ebx 0D8h +
jl loc_448F7C  +
cmp ebx 0F6h +
jle loc_44904A  +
cmp ebx 0F8h +
jl loc_448F9F  +
jmp loc_44904A  +
push offset asc_4C14B0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44904A  +
cmp ebx 100h +
jl loc_448FEB  +
cmp ebx 4E00h +
jl loc_448FBB  +
cmp ebx 9FA5h +
jle loc_44904A  +
cmp ebx 3007h +
jz loc_44904A  +
cmp ebx 3021h +
jl loc_448FD7  +
cmp ebx 3029h +
jle loc_44904A  +
push offset unk_4C14E0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44904A  +
jmp loc_448FF3  +
lea eax [ebx-30h] +
cmp eax 9 +
jbe loc_44904A  +
cmp ebx 2Eh +
jz loc_44904A  +
cmp ebx 2Dh +
jz loc_44904A  +
cmp ebx 5Fh +
jz loc_44904A  +
cmp dword ptr [esp+94h] 0 +
jz loc_449011  +
cmp ebx 3Ah +
jz loc_44904A  +
cmp ebx 100h +
jl loc_44903B  +
push offset unk_4C14D0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44904A  +
push offset unk_4C14F0  +
push ebx  +
call sub_45B3E0  +
add esp 8 +
jmp loc_449046  +
xor eax eax +
cmp ebx 0B7h +
setz al  +
test eax eax +
jz loc_4490B2  +
lea eax [esi+0Ah] +
cmp eax edi +
jle loc_449074  +
cmp edi 0C350h +
jg loc_4490CE  +
add edi edi +
push edi  +
push ebp  +
mov [esp+20h] edi +
call off_4EE2F0  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_448EF9  +
mov edi [esp+10h] +
cmp edi 1 +
jnz loc_449083  +
mov [esi+ebp] bl +
inc esi  +
jmp loc_449093  +
push ebx  +
lea eax [esi+ebp] +
push eax  +
push edi  +
call sub_45B4F0  +
add esp 0Ch +
add esi eax +
mov eax [esp+14h] +
lea ecx [esp+10h] +
push ecx  +
push eax  +
add [eax] edi +
call sub_4437B0  +
mov edi [esp+20h] +
add esp 8 +
mov ebx eax +
jmp loc_448F30  +
***
mov ecx [esp+88h] +
mov eax ebp +
pop edi  +
mov byte ptr [esi+ebp] 0 +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 7Ch +
retn   +
***
push 7  +
jmp loc_448EFB  +
***
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_449110  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
test esi esi +
jz loc_44910B  +
mov dword ptr [esi+8] 0Ah +
pop edi  +
xor eax eax +
pop esi  +
retn   +
cmp dword ptr [edi] 2 +
push ebx  +
jz loc_449133  +
push edi  +
call sub_43D6E0  +
add esp 4 +
mov ebx eax +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov ebx [edi+8] +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_449173  +
mov eax [esi+14h] +
cmp eax [esi+2Ch] +
jge loc_44916C  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
mov eax [esp+arg_4] +
mov [esi+2Ch] eax +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_4491E9  +
cmp dword ptr [esp+0Ch] 0 +
jz loc_44919D  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+14h] +
cmp eax [esi+2Ch] +
jge loc_4491B2  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+0Ch] +
mov ecx [eax+48h] +
test ecx ecx +
js loc_4491DE  +
movd xmm0 ecx +
sub esp 8 +
cvtdq2pd xmm0 xmm0 +
movsd qword ptr [esp] xmm0 +
push eax  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
pop esi  +
retn   +
***
push 0Eh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
test esi esi +
jz loc_4499CB  +
cmp dword ptr [esi+28h] 0 +
jnz loc_449210  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449244  +
mov ecx offset sub_43CB60 +
test ecx ecx +
jnz loc_44922F  +
push ecx  +
push ecx  +
push offset aBoolean  +
push eax  +
call sub_450640  +
jmp loc_449241  +
push offset sub_43CB60  +
push 0  +
push offset aBoolean  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449257  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44928B  +
mov ecx offset sub_43D880 +
test ecx ecx +
jnz loc_449276  +
push ecx  +
push ecx  +
push offset aCeiling  +
push eax  +
call sub_450640  +
jmp loc_449288  +
push offset sub_43D880  +
push 0  +
push offset aCeiling  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44929E  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4492D2  +
mov ecx offset loc_4436C0 +
test ecx ecx +
jnz loc_4492BD  +
push ecx  +
push ecx  +
push offset aCount  +
push eax  +
call sub_450640  +
jmp loc_4492CF  +
push offset loc_4436C0  +
push 0  +
push offset aCount  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4492E5  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449319  +
mov ecx offset loc_4433D0 +
test ecx ecx +
jnz loc_449304  +
push ecx  +
push ecx  +
push offset aConcat  +
push eax  +
call sub_450640  +
jmp loc_449316  +
push offset loc_4433D0  +
push 0  +
push offset aConcat  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44932C  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449360  +
mov ecx offset loc_443540 +
test ecx ecx +
jnz loc_44934B  +
push ecx  +
push ecx  +
push offset aContains  +
push eax  +
call sub_450640  +
jmp loc_44935D  +
push offset loc_443540  +
push 0  +
push offset aContains  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449373  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4493A7  +
mov ecx offset loc_445920 +
test ecx ecx +
jnz loc_449392  +
push ecx  +
push ecx  +
push offset aId  +
push eax  +
call sub_450640  +
jmp loc_4493A4  +
push offset loc_445920  +
push 0  +
push offset aId  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4493BA  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4493EE  +
mov ecx offset loc_444ED0 +
test ecx ecx +
jnz loc_4493D9  +
push ecx  +
push ecx  +
push offset aFalse  +
push eax  +
call sub_450640  +
jmp loc_4493EB  +
push offset loc_444ED0  +
push 0  +
push offset aFalse  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449401  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449435  +
mov ecx offset sub_444FB0 +
test ecx ecx +
jnz loc_449420  +
push ecx  +
push ecx  +
push offset aFloor  +
push eax  +
call sub_450640  +
jmp loc_449432  +
push offset sub_444FB0  +
push 0  +
push offset aFloor  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449448  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44947C  +
mov ecx offset loc_445F60 +
test ecx ecx +
jnz loc_449467  +
push ecx  +
push ecx  +
push offset aLast  +
push eax  +
call sub_450640  +
jmp loc_449479  +
push offset loc_445F60  +
push 0  +
push offset aLast  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44948F  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4494C3  +
mov ecx offset loc_445E00 +
test ecx ecx +
jnz loc_4494AE  +
push ecx  +
push ecx  +
push offset aLang  +
push eax  +
call sub_450640  +
jmp loc_4494C0  +
push offset loc_445E00  +
push 0  +
push offset aLang  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4494D6  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44950A  +
mov ecx offset sub_445FD0 +
test ecx ecx +
jnz loc_4494F5  +
push ecx  +
push ecx  +
push offset aLocalName  +
push eax  +
call sub_450640  +
jmp loc_449507  +
push offset sub_445FD0  +
push 0  +
push offset aLocalName  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44951D  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449551  +
mov ecx offset loc_448720 +
test ecx ecx +
jnz loc_44953C  +
push ecx  +
push ecx  +
push offset aNot  +
push eax  +
call sub_450640  +
jmp loc_44954E  +
push offset loc_448720  +
push 0  +
push offset aNot  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449564  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449598  +
mov ecx offset loc_446290 +
test ecx ecx +
jnz loc_449583  +
push ecx  +
push ecx  +
push offset aName_1  +
push eax  +
call sub_450640  +
jmp loc_449595  +
push offset loc_446290  +
push 0  +
push offset aName_1  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4495AB  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4495DF  +
mov ecx offset loc_446400 +
test ecx ecx +
jnz loc_4495CA  +
push ecx  +
push ecx  +
push offset aNamespaceUri  +
push eax  +
call sub_450640  +
jmp loc_4495DC  +
push offset loc_446400  +
push 0  +
push offset aNamespaceUri  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4495F2  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449626  +
mov ecx offset loc_4483C0 +
test ecx ecx +
jnz loc_449611  +
push ecx  +
push ecx  +
push offset aNormalizeSpace  +
push eax  +
call sub_450640  +
jmp loc_449623  +
push offset loc_4483C0  +
push 0  +
push offset aNormalizeSpace  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449639  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44966D  +
mov ecx offset sub_448810 +
test ecx ecx +
jnz loc_449658  +
push ecx  +
push ecx  +
push offset aNumber  +
push eax  +
call sub_450640  +
jmp loc_44966A  +
push offset sub_448810  +
push 0  +
push offset aNumber  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449680  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4496B4  +
mov ecx offset loc_449180 +
test ecx ecx +
jnz loc_44969F  +
push ecx  +
push ecx  +
push offset aPosition  +
push eax  +
call sub_450640  +
jmp loc_4496B1  +
push offset loc_449180  +
push 0  +
push offset aPosition  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4496C7  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4496FB  +
mov ecx offset sub_449C80 +
test ecx ecx +
jnz loc_4496E6  +
push ecx  +
push ecx  +
push offset aRound  +
push eax  +
call sub_450640  +
jmp loc_4496F8  +
push offset sub_449C80  +
push 0  +
push offset aRound  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44970E  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449742  +
mov ecx offset loc_44A870 +
test ecx ecx +
jnz loc_44972D  +
push ecx  +
push ecx  +
push offset aString  +
push eax  +
call sub_450640  +
jmp loc_44973F  +
push offset loc_44A870  +
push 0  +
push offset aString  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449755  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449789  +
mov ecx offset loc_44A910 +
test ecx ecx +
jnz loc_449774  +
push ecx  +
push ecx  +
push offset aStringLength  +
push eax  +
call sub_450640  +
jmp loc_449786  +
push offset loc_44A910  +
push 0  +
push offset aStringLength  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44979C  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4497D0  +
mov ecx offset loc_44A520 +
test ecx ecx +
jnz loc_4497BB  +
push ecx  +
push ecx  +
push offset aStartsWith  +
push eax  +
call sub_450640  +
jmp loc_4497CD  +
push offset loc_44A520  +
push 0  +
push offset aStartsWith  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4497E3  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449817  +
mov ecx offset sub_44AE20 +
test ecx ecx +
jnz loc_449802  +
push ecx  +
push ecx  +
push offset aSubstring  +
push eax  +
call sub_450640  +
jmp loc_449814  +
push offset sub_44AE20  +
push 0  +
push offset aSubstring  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44982A  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44985E  +
mov ecx offset loc_44ACC0 +
test ecx ecx +
jnz loc_449849  +
push ecx  +
push ecx  +
push offset aSubstringBefor  +
push eax  +
call sub_450640  +
jmp loc_44985B  +
push offset loc_44ACC0  +
push 0  +
push offset aSubstringBefor  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449871  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4498A5  +
mov ecx offset sub_44AB20 +
test ecx ecx +
jnz loc_449890  +
push ecx  +
push ecx  +
push offset aSubstringAfter  +
push eax  +
call sub_450640  +
jmp loc_4498A2  +
push offset sub_44AB20  +
push 0  +
push offset aSubstringAfter  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4498B8  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4498EC  +
mov ecx offset sub_44B170 +
test ecx ecx +
jnz loc_4498D7  +
push ecx  +
push ecx  +
push offset aSum  +
push eax  +
call sub_450640  +
jmp loc_4498E9  +
push offset sub_44B170  +
push 0  +
push offset aSum  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_4498FF  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_449933  +
mov ecx offset loc_44B510 +
test ecx ecx +
jnz loc_44991E  +
push ecx  +
push ecx  +
push offset aTrue  +
push eax  +
call sub_450640  +
jmp loc_449930  +
push offset loc_44B510  +
push 0  +
push offset aTrue  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_449946  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_44997A  +
mov ecx offset sub_44B270 +
test ecx ecx +
jnz loc_449965  +
push ecx  +
push ecx  +
push offset aTranslate  +
push eax  +
call sub_450640  +
jmp loc_449977  +
push offset sub_44B270  +
push 0  +
push offset aTranslate  +
push eax  +
call sub_44FBB0  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jnz loc_44998D  +
push 0  +
call sub_450110  +
add esp 4 +
mov [esi+28h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_4499CB  +
mov ecx offset loc_444A00 +
test ecx ecx +
jnz loc_4499B3  +
push ecx  +
push offset aHttpWww_w3_o_0  +
push offset aEscapeUri  +
push eax  +
call sub_450640  +
add esp 10h +
pop esi  +
retn   +
push offset loc_444A00  +
push offset aHttpWww_w3_o_0  +
push offset aEscapeUri  +
push eax  +
call sub_44FBB0  +
add esp 10h +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_449BD2  +
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_449C12  +
mov edi [edi+0C8h] +
test edi edi +
jz loc_449C12  +
mov eax [esi] +
dec eax  +
cmp eax 8 +
ja loc_449BF5  +
jmp ds:off_449C20[eax*4]  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_449B01  +
cmp dword ptr [esi+8] 0 +
jz loc_449A37  +
push ecx  +
mov dword ptr [esi] 9 +
call sub_4456F0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
jmp loc_449B01  +
cmp dword ptr [ecx+4] 28h +
jg loc_449A4B  +
mov eax [edi] +
test eax eax +
jz loc_449A60  +
mov eax [eax+4] +
cmp eax [edi+14h] +
jl loc_449A74  +
push ecx  +
call sub_4455B0  +
add esp 4 +
mov dword ptr [esi+4] 0 +
jmp loc_449B01  +
push 0Ah  +
call sub_43CA50  +
add esp 4 +
mov [edi] eax +
test eax eax +
jz loc_449BF5  +
push 0  +
push esi  +
push dword ptr [edi]  +
jmp loc_449B54  +
mov eax [esi+18h] +
test eax eax +
jz loc_449A8F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_449AA2  +
mov eax [ecx+4] +
cmp eax [edi+18h] +
jge loc_449B01  +
test ecx ecx +
jnz loc_449AB7  +
push 0Ah  +
call sub_43CA50  +
add esp 4 +
mov [edi+4] eax +
test eax eax +
jz loc_449BF5  +
push 0  +
push esi  +
push dword ptr [edi+4]  +
jmp loc_449B54  +
mov ecx [edi+8] +
test ecx ecx +
jz loc_449AD5  +
mov eax [ecx+4] +
cmp eax [edi+1Ch] +
jge loc_449B01  +
test ecx ecx +
jnz loc_449AEA  +
push 0Ah  +
call sub_43CA50  +
add esp 4 +
mov [edi+8] eax +
test eax eax +
jz loc_449BF5  +
push 0  +
push esi  +
push dword ptr [edi+8]  +
jmp loc_449B54  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_449B39  +
mov eax [ecx+4] +
cmp eax [edi+20h] +
jl loc_449B35  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_449B18  +
mov eax [ecx+4] +
cmp eax [edi+24h] +
jge loc_449BF5  +
test ecx ecx +
jnz loc_449B2D  +
push 0Ah  +
call sub_43CA50  +
add esp 4 +
mov [edi+10h] eax +
test eax eax +
jz loc_449BF5  +
push 0  +
push esi  +
push dword ptr [edi+10h]  +
jmp loc_449B54  +
test ecx ecx +
jnz loc_449B4E  +
push 0Ah  +
call sub_43CA50  +
add esp 4 +
mov [edi+0Ch] eax +
test eax eax +
jz loc_449BF5  +
push 0  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_43C990  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_449BF5  +
push ebx  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_449BD4  +
mov eax [ebx] +
cmp eax 1 +
jle loc_449BA0  +
xor edi edi +
test eax eax +
jle loc_449BBA  +
jnz loc_449BBA  +
mov eax [ebx+8] +
mov eax [eax] +
test eax eax +
jz loc_449BBA  +
cmp dword ptr [eax+4] 12h +
jnz loc_449BBA  +
push eax  +
call sub_447CF0  +
add esp 4 +
push 30h  +
push 0  +
push esi  +
mov dword ptr [ebx] 0 +
call sub_48CF40  +
add esp 0Ch +
mov [esi+4] ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
test eax eax +
jz loc_449BF5  +
push eax  +
call loc_467D00  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_449C05  +
push eax  +
call sub_4455B0  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
call sub_445600  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_449C7B  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_449C7B  +
mov eax [ecx] +
mov [ecx+4] eax +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
push eax  +
call sub_43D070  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
test esi esi +
jz loc_449DEF  +
cmp [esp+0Ch+arg_4] 1 +
jz loc_449CA7  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_449CC0  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
mov eax [esi+10h] +
test eax eax +
jz loc_449CE5  +
cmp dword ptr [eax] 3 +
jz loc_449CE5  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_449E15  +
cmp dword ptr [eax] 3 +
jnz loc_449E15  +
movsd xmm0 qword ptr [eax+10h] +
sub esp 8 +
movsd [esp+14h+var_14] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_449DEF  +
mov eax [esi+10h] +
sub esp 8 +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+14h+var_14] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 1 +
jz loc_449DEF  +
mov eax [esi+10h] +
sub esp 8 +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+14h+var_14] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_449DEF  +
push edi  +
mov edi [esi+10h] +
movsd xmm0 qword ptr [edi+10h] +
ucomisd xmm0 ds:qword_4BF6D0 +
movsd [esp+10h+var_8] xmm0 +
lahf   +
test ah 44h +
jnp loc_449DEE  +
fld  [esp+10h+var_8] +
fld  ds:dbl_4BF6F0 +
call sub_49B13A  +
movsd xmm2 qword ptr [edi+10h] +
xorps xmm3 xmm3 +
comisd xmm3 xmm2 +
fstp  [esp+10h+var_8] +
cvttsd2si eax [esp+10h+var_8] +
movaps xmm1 xmm2 +
subsd xmm1 [esp+10h+var_8] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm1 xmm0 +
movaps xmm0 xmm1 +
jbe loc_449DF4  +
subsd xmm0 ds:qword_4E1048 +
comisd xmm0 xmm2 +
jbe loc_449DCA  +
subsd xmm1 ds:qword_4BF6E0 +
movsd qword ptr [edi+10h] xmm1 +
mov ecx [esi+10h] +
movsd xmm0 qword ptr [ecx+10h] +
ucomisd xmm0 xmm3 +
lahf   +
test ah 44h +
jp loc_449DEE  +
movsd xmm0 dbl_4F2490 +
movsd qword ptr [ecx+10h] xmm0 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
addsd xmm0 ds:qword_4E1048 +
comisd xmm0 xmm2 +
ja loc_449E0A  +
addsd xmm1 ds:qword_4BF6E0 +
movsd qword ptr [edi+10h] xmm1 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
add esp 8 +
retn   +
***
test esi esi +
jz loc_449F2B  +
cmp dword ptr [esi+20h] 0 +
jz loc_449F2B  +
cmp dword ptr [esi+1Ch] 0 +
jnz loc_449E99  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+1Ch] eax +
test eax eax +
jnz loc_449E7D  +
push offset aCreatingEvalua  +
push dword ptr [esi+0Ch]  +
mov dword ptr [esi+8] 0Fh +
call sub_4448C0  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0Ah +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov eax [esi+20h] +
mov eax [eax+18h] +
test eax eax +
jz loc_449F07  +
cmp [esp+arg_4] 0 +
jz loc_449EC1  +
push 1  +
push 0  +
push eax  +
push dword ptr [esi+0Ch]  +
call loc_449F60  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_449F07  +
pop esi  +
retn   +
push 0  +
lea ecx [esp+4+arg_0] +
mov [esp+4+arg_0] 0 +
push ecx  +
push eax  +
push dword ptr [esi+0Ch]  +
call loc_449F60  +
add esp 10h +
cmp eax 0FFFFFFFFh +
mov eax [esp+arg_0] +
jz loc_449EF7  +
test eax eax +
jz loc_449F07  +
push eax  +
push esi  +
call sub_43C900  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
test eax eax +
jz loc_449F07  +
push eax  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
mov edx [esi+20h] +
mov eax [edx+0Ch] +
test eax eax +
jns loc_449F30  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlxpathruneva  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp [esp+arg_4] 0 +
lea ecx [eax+eax*4] +
mov eax [edx+8] +
lea eax [eax+ecx*8] +
jz loc_449F4E  +
push 0  +
push eax  +
push esi  +
call sub_441900  +
add esp 0Ch +
pop esi  +
retn   +
push eax  +
push esi  +
call sub_43F0D0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
***
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov [esp+10h] esi +
cmp [esp+18h] esi +
jz loc_449F87  +
mov edi [esp+1Ch] +
test edi edi +
jz loc_449F87  +
push edi  +
call loc_469710  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_449F90  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
add esp 0Ch +
retn   +
***
cmp eax 0FFFFFFFEh +
mov ecx 2710h +
push ebp  +
cmovz eax ecx +
push edi  +
mov [esp+14h] eax +
call loc_469760  +
mov ebp eax +
add esp 4 +
cmp ebp 0FFFFFFFFh +
jnz loc_449FB9  +
pop ebp  +
pop edi  +
or eax eax +
pop esi  +
add esp 0Ch +
retn   +
***
push ebx  +
push edi  +
call sub_469620  +
mov ebx eax +
add esp 4 +
test ebx ebx +
js loc_449FF1  +
mov eax [esp+2Ch] +
test eax eax +
jnz loc_44A002  +
mov eax [esp+28h] +
test eax eax +
jz loc_449FF1  +
push 0  +
push dword ptr [esp+24h]  +
call sub_43D070  +
mov ecx [esp+30h] +
add esp 8 +
mov [ecx] eax +
test eax eax +
jnz loc_449FFC  +
pop ebx  +
pop ebp  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
add esp 0Ch +
retn   +
***
mov eax [esp+2Ch] +
jmp loc_44A006  +
mov ecx [esp+28h] +
test ebp ebp +
jnz loc_44A04A  +
test ebx ebx +
jz loc_44A02C  +
test eax eax +
jnz loc_44A296  +
mov ebp [esp+20h] +
mov eax [ecx] +
push dword ptr [ebp+0]  +
push dword ptr [eax+4]  +
call sub_4479A0  +
add esp 8 +
jmp loc_44A04E  +
test eax eax +
jnz loc_44A296  +
mov ebp [esp+20h] +
mov eax [ecx] +
push dword ptr [ebp+4]  +
push dword ptr [eax+4]  +
call sub_4479A0  +
add esp 8 +
jmp loc_44A04E  +
mov ebp [esp+20h] +
cmp [esp+14h] esi +
jz loc_44A2B0  +
test ebx ebx +
jz loc_44A063  +
mov esi [ebp+0] +
xor ebp ebp +
jmp loc_44A089  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_44A2B0  +
mov eax [ecx+4] +
dec eax  +
cmp eax 14h +
ja loc_44A087  +
movzx eax ds:byte_44A2C4[eax] +
jmp ds:off_44A2BC[eax*4]  +
mov esi ecx +
mov ebp esi +
test esi esi +
jz loc_44A2B0  +
push edi  +
call loc_469650  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_44A2B0  +
push edi  +
call sub_46A4E0  +
add esp 4 +
mov edx eax +
mov [esp+10h] edx +
test ebx ebx +
jz loc_44A0EE  +
push 0  +
push 0  +
push edi  +
call sub_46A000  +
add esp 0Ch +
test eax eax +
js loc_44A0EA  +
cmp eax 1 +
jnz loc_44A0EA  +
cmp dword ptr [esp+2Ch] 0 +
jnz loc_44A289  +
mov eax [esp+28h] +
push esi  +
mov eax [eax] +
push dword ptr [eax+4]  +
call sub_4479A0  +
add esp 8 +
mov edx [esp+10h] +
xor ebx ebx +
cmp dword ptr [esi+4] 12h +
jz loc_44A2A3  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44A116  +
cmp ebx [esp+14h] +
jge loc_44A116  +
cmp dword ptr [eax+4] 11h +
jz loc_44A116  +
mov esi eax +
inc ebx  +
cmp dword ptr [esi+4] 0Eh +
jnz loc_44A18A  +
cmp esi ebp +
jz loc_44A2A3  +
mov eax [esi+18h] +
test eax eax +
jz loc_44A140  +
mov esi eax +
mov eax [esi+4] +
cmp eax 11h +
jz loc_44A134  +
cmp eax 0Eh +
jnz loc_44A1A0  +
mov eax [esi+18h] +
test eax eax +
jnz loc_44A125  +
mov esi [esi+14h] +
dec ebx  +
test esi esi +
jz loc_44A2A3  +
cmp esi ebp +
jz loc_44A2A3  +
mov eax [esi+4] +
cmp eax 1 +
jz loc_44A174  +
test edx edx +
jz loc_44A181  +
cmp eax 3 +
jz loc_44A174  +
cmp eax 4 +
jz loc_44A174  +
cmp eax 8 +
jz loc_44A174  +
cmp eax 7 +
jnz loc_44A181  +
push edi  +
call loc_469FA0  +
mov edx [esp+14h] +
add esp 4 +
cmp dword ptr [esi+18h] 0 +
jz loc_44A140  +
mov esi [esi+18h] +
test esi esi +
jz loc_44A2A3  +
test ebx ebx +
js loc_44A2A3  +
mov ecx [esi+4] +
inc dword ptr [esp+18h]  +
lea eax [ecx-1] +
cmp eax 7 +
ja loc_44A0F0  +
movzx eax ds:byte_44A2E4[eax] +
jmp ds:off_44A2DC[eax*4]  +
cmp ecx 1 +
jnz loc_44A1F0  +
mov eax [esi+24h] +
test eax eax +
jz loc_44A1DF  +
mov eax [eax+8] +
push eax  +
push dword ptr [esi+8]  +
push edi  +
call sub_46A000  +
add esp 0Ch +
jmp loc_44A206  +
xor eax eax +
push eax  +
push dword ptr [esi+8]  +
push edi  +
call sub_46A000  +
add esp 0Ch +
jmp loc_44A206  +
test edx edx +
jz loc_44A0F0  +
push ecx  +
push 0  +
push 0  +
push edi  +
call sub_46A4D0  +
add esp 10h +
test eax eax +
js loc_44A244  +
cmp eax 1 +
jnz loc_44A244  +
cmp dword ptr [esp+2Ch] 0 +
jnz loc_44A289  +
mov eax [esp+28h] +
push esi  +
mov eax [eax] +
push dword ptr [eax+4]  +
call sub_4479A0  +
add esp 8 +
test eax eax +
jns loc_44A244  +
mov eax [esp+20h] +
mov dword ptr [eax+88h] 0Ch +
mov dword ptr [eax+8Ch] 2 +
cmp dword ptr [esi+0Ch] 0 +
jz loc_44A258  +
mov edx [esp+10h] +
cmp ebx [esp+14h] +
jl loc_44A0F0  +
push edi  +
call loc_469FA0  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_44A280  +
mov esi eax +
mov eax [esi+4] +
cmp eax 11h +
jz loc_44A261  +
cmp eax 0Eh +
jz loc_44A261  +
mov edx [esp+10h] +
jmp loc_44A1A0  +
***
mov edx [esp+10h] +
jmp loc_44A0F0  +
***
test edi edi +
jz loc_44A296  +
push edi  +
call loc_469000  +
add esp 4 +
pop ebx  +
pop ebp  +
pop edi  +
mov eax 1 +
pop esi  +
add esp 0Ch +
retn   +
***
test edi edi +
jz loc_44A2B0  +
push edi  +
call loc_469000  +
add esp 4 +
pop ebx  +
pop ebp  +
pop edi  +
xor eax eax +
pop esi  +
add esp 0Ch +
retn   +
***
jmp loc_44A3C0  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44A3C0  +
cmp esi 100h +
jl loc_44A3B0  +
cmp esi 4E00h +
jl loc_44A398  +
cmp esi 9FA5h +
jle loc_44A3C0  +
cmp esi 3007h +
jz loc_44A3C0  +
cmp esi 3021h +
jl loc_44A3B0  +
cmp esi 3029h +
jle loc_44A3C0  +
cmp esi 5Fh +
jz loc_44A3C0  +
cmp esi 3Ah +
jnz loc_44A511  +
nop   +
cmp esi 3Eh +
jz loc_44A4FD  +
cmp esi 2Fh +
jz loc_44A4FD  +
cmp esi 100h +
jge loc_44A42B  +
cmp esi 41h +
jl loc_44A3E8  +
cmp esi 5Ah +
jle loc_44A4DE  +
cmp esi 61h +
jl loc_44A3F6  +
cmp esi 7Ah +
jle loc_44A4DE  +
cmp esi 0C0h +
jl loc_44A40A  +
cmp esi 0D6h +
jle loc_44A4DE  +
cmp esi 0D8h +
jl loc_44A41E  +
cmp esi 0F6h +
jle loc_44A4DE  +
cmp esi 0F8h +
jl loc_44A441  +
jmp loc_44A4DE  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44A4DE  +
cmp esi 100h +
jl loc_44A489  +
cmp esi 4E00h +
jl loc_44A45D  +
cmp esi 9FA5h +
jle loc_44A4DE  +
cmp esi 3007h +
jz loc_44A4DE  +
cmp esi 3021h +
jl loc_44A475  +
cmp esi 3029h +
jle loc_44A4DE  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44A4DE  +
jmp loc_44A491  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_44A4DE  +
cmp esi 2Eh +
jz loc_44A4DE  +
cmp esi 2Dh +
jz loc_44A4DE  +
cmp esi 5Fh +
jz loc_44A4DE  +
cmp esi 3Ah +
jz loc_44A4DE  +
cmp esi 100h +
jl loc_44A4CF  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_44A4DE  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_44A4DA  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_44A4FD  +
mov eax [esp+10h] +
add [edi] eax +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_4437B0  +
mov esi eax +
add esp 8 +
cmp esi 20h +
jnz loc_44A3C0  +
mov eax [edi] +
sub eax ebx +
push eax  +
push ebx  +
call sub_44E8A0  +
add esp 8 +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44A676  +
cmp dword ptr [esp+0Ch] 2 +
jz loc_44A541  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov ecx [esi+2Ch] +
mov edx [esi+14h] +
lea eax [ecx+2] +
cmp edx eax +
jge loc_44A55B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_44A5A8  +
cmp dword ptr [eax] 4 +
jz loc_44A5A8  +
lea eax [ecx+1] +
cmp edx eax +
jge loc_44A57B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44A5A8  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44A595  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44A5A8  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax [esi+10h] +
test eax eax +
jz loc_44A699  +
cmp dword ptr [eax] 4 +
jnz loc_44A699  +
push ebx  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_44A617  +
cmp dword ptr [eax] 4 +
jz loc_44A617  +
mov ecx [esi+2Ch] +
inc ecx  +
cmp [esi+14h] ecx +
jge loc_44A5EA  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44A617  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44A604  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44A617  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_44A678  +
cmp dword ptr [edi] 4 +
jnz loc_44A678  +
push dword ptr [ebx+18h]  +
call sub_44E660  +
push eax  +
push dword ptr [ebx+18h]  +
push dword ptr [edi+18h]  +
call sub_44E840  +
add esp 10h +
test eax eax +
jz loc_44A64B  +
push 0  +
jmp loc_44A64D  +
push 1  +
push dword ptr [esi+0Ch]  +
call sub_43CE80  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 18h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
sub esp 0Ch +
mov edx [esp+10h] +
xor ecx ecx +
push esi  +
push edi  +
xor edi edi +
mov [esp+18h] ecx +
xor esi esi +
mov [esp+10h] edi +
test edx edx +
jnz loc_44A6D3  +
fldz   +
pop edi  +
pop esi  +
add esp 0Ch +
retn   +
***
mov al [edx] +
cmp al 20h +
jz loc_44A6E5  +
cmp al 9 +
jb loc_44A6E1  +
cmp al 0Ah +
jbe loc_44A6E5  +
cmp al 0Dh +
jnz loc_44A6E8  +
inc edx  +
jmp loc_44A6D3  +
***
mov al [edx] +
cmp al 2Eh +
jz loc_44A706  +
cmp al 30h +
jb loc_44A6F6  +
cmp al 39h +
jbe loc_44A706  +
cmp al 2Dh +
jz loc_44A70A  +
fld  dbl_4F24A0 +
pop edi  +
pop esi  +
add esp 0Ch +
retn   +
***
cmp al 2Dh +
jnz loc_44A713  +
mov dword ptr [esp+10h] 1 +
inc edx  +
mov al [edx] +
xorps xmm1 xmm1 +
movsd xmm3 ds:qword_4E1058 +
movaps xmm2 xmm1 +
movsd qword ptr [esp+8] xmm1 +
cmp al 30h +
jb loc_44A75C  +
cmp al 39h +
ja loc_44A756  +
movzx eax al +
inc edx  +
sub eax 30h +
mulsd xmm2 xmm3 +
mov edi 1 +
movd xmm0 eax +
mov al [edx] +
cvtdq2pd xmm0 xmm0 +
addsd xmm2 xmm0 +
cmp al 30h +
jnb loc_44A730  +
movsd qword ptr [esp+8] xmm2 +
cmp byte ptr [edx] 2Eh +
jnz loc_44A7C5  +
mov al [edx+1] +
inc edx  +
xor ecx ecx +
cmp al 30h +
jb loc_44A76F  +
cmp al 39h +
jbe loc_44A773  +
test edi edi +
jz loc_44A6FA  +
cmp al 30h +
jb loc_44A79E  +
cmp al 39h +
ja loc_44A79E  +
cmp ecx 14h +
jge loc_44A79E  +
movzx eax al +
inc edx  +
sub eax 30h +
mulsd xmm1 xmm3 +
inc ecx  +
movd xmm0 eax +
mov al [edx] +
cvtdq2pd xmm0 xmm0 +
addsd xmm1 xmm0 +
cmp al 30h +
jnb loc_44A777  +
divsd xmm1 qword_4EE018[ecx*8] +
mov al [edx] +
addsd xmm2 xmm1 +
movsd qword ptr [esp+8] xmm2 +
cmp al 30h +
jb loc_44A7C3  +
cmp al 39h +
ja loc_44A7C3  +
mov al [edx+1] +
inc edx  +
cmp al 30h +
jnb loc_44A7B7  +
xor ecx ecx +
mov al [edx] +
cmp al 65h +
jz loc_44A7CF  +
cmp al 45h +
jnz loc_44A810  +
mov al [edx+1] +
inc edx  +
cmp al 2Dh +
jnz loc_44A7E2  +
mov ecx 1 +
mov [esp+18h] ecx +
jmp loc_44A7E6  +
cmp al 2Bh +
jnz loc_44A7E7  +
inc edx  +
mov al [edx] +
cmp al 30h +
jb loc_44A810  +
mov al [edx] +
cmp al 20h +
jz loc_44A822  +
cmp al 9 +
jb loc_44A81E  +
cmp al 0Ah +
jbe loc_44A822  +
cmp al 0Dh +
jnz loc_44A825  +
inc edx  +
jmp loc_44A810  +
***
cmp byte ptr [edx] 0 +
jnz loc_44A6FA  +
cmp dword ptr [esp+10h] 0 +
jz loc_44A842  +
xorps xmm2 oword ptr ds:oword_4BF700 +
movsd qword ptr [esp+8] xmm2 +
test ecx ecx +
jz loc_44A848  +
neg esi  +
movd xmm1 esi +
movaps xmm0 xmm3 +
cvtdq2pd xmm1 xmm1 +
call sub_49B410  +
mulsd xmm0 qword ptr [esp+8] +
pop edi  +
pop esi  +
movsd qword ptr [esp] xmm0 +
fld  qword ptr [esp] +
add esp 0Ch +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44A90E  +
mov eax [esp+0Ch] +
test eax eax +
jnz loc_44A8B9  +
mov eax [esi+0Ch] +
push dword ptr [eax+4]  +
call sub_424950  +
add esp 4 +
test eax eax +
jnz loc_44A8A4  +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43D340  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
pop esi  +
retn   +
***
cmp eax 1 +
jz loc_44A8CB  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44A8E1  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44A8FB  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
pop esi  +
retn   +
***
mov eax [esp+8] +
push esi  +
push edi  +
test eax eax +
jnz loc_44A9A8  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_44AA69  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44AA69  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44A95A  +
sub esp 8 +
xorps xmm0 xmm0 +
movsd qword ptr [esp] xmm0 +
push eax  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
call sub_424950  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44A978  +
push offset unk_4DE8C5  +
call sub_44E600  +
add esp 4 +
mov edi eax +
push edi  +
call sub_44E950  +
push ecx  +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
movsd qword ptr [esp] xmm0 +
push dword ptr [esi+0Ch]  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
push edi  +
call off_4EE2F4  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
***
mov edi [esp+0Ch] +
test edi edi +
jz loc_44AA69  +
cmp eax 1 +
jz loc_44A9C7  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
mov eax [edi+2Ch] +
inc eax  +
cmp [edi+14h] eax +
jge loc_44A9DE  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
mov eax [edi+10h] +
test eax eax +
jz loc_44AA17  +
cmp dword ptr [eax] 4 +
jz loc_44AA17  +
push edi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44AA04  +
push 0Ah  +
push edi  +
call sub_444780  +
add esp 8 +
jmp loc_44AA17  +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_43CD20  +
push eax  +
push edi  +
call sub_43C900  +
add esp 10h +
mov eax [edi+10h] +
test eax eax +
jz loc_44AA5E  +
cmp dword ptr [eax] 4 +
jnz loc_44AA5E  +
push edi  +
call sub_43C8A0  +
mov esi eax +
push dword ptr [esi+18h]  +
call sub_44E950  +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
movsd qword ptr [esp] xmm0 +
push dword ptr [edi+0Ch]  +
call sub_43CFD0  +
push eax  +
push edi  +
call sub_43C900  +
push esi  +
push dword ptr [edi+0Ch]  +
call loc_4499D0  +
add esp 1Ch +
pop edi  +
pop esi  +
retn   +
***
push 0Bh  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+0Ch+arg_0] +
push edi  +
push esi  +
call sub_43C8A0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44AA99  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
push edi  +
call sub_43D790  +
push edi  +
push dword ptr [esi+0Ch]  +
fstp  [esp+1Ch+var_8] +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_44AAEA  +
cmp dword ptr [eax] 3 +
jz loc_44AAEA  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44AAD1  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AAEA  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_44AB0C  +
cmp dword ptr [eax] 3 +
jnz loc_44AB0C  +
movsd xmm0 qword ptr [eax+10h] +
subsd xmm0 [esp+10h+var_8] +
pop edi  +
pop esi  +
movsd qword ptr [eax+10h] xmm0 +
add esp 8 +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
add esp 8 +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [esp+0Ch+arg_0] +
test ebx ebx +
jz loc_44ACAE  +
cmp [esp+0Ch+arg_4] 2 +
jz loc_44AB47  +
push 0Ch  +
push ebx  +
call sub_444780  +
add esp 8 +
pop ebx  +
add esp 8 +
retn   +
mov ecx [ebx+2Ch] +
mov edx [ebx+14h] +
lea eax [ecx+2] +
cmp edx eax +
jge loc_44AB64  +
push 17h  +
push ebx  +
call sub_444780  +
add esp 8 +
pop ebx  +
add esp 8 +
retn   +
mov eax [ebx+10h] +
test eax eax +
jz loc_44ABB1  +
cmp dword ptr [eax] 4 +
jz loc_44ABB1  +
lea eax [ecx+1] +
cmp edx eax +
jge loc_44AB84  +
push 17h  +
push ebx  +
call sub_444780  +
add esp 8 +
jmp loc_44ABB1  +
push ebx  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44AB9E  +
push 0Ah  +
push ebx  +
call sub_444780  +
add esp 8 +
jmp loc_44ABB1  +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_43CD20  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 10h +
push ebp  +
push esi  +
push edi  +
push ebx  +
call sub_43C8A0  +
mov ecx [ebx+10h] +
add esp 4 +
mov edi eax +
mov [esp+18h+var_4] edi +
test ecx ecx +
jz loc_44AC12  +
cmp dword ptr [ecx] 4 +
jz loc_44AC12  +
mov ecx [ebx+2Ch] +
inc ecx  +
cmp [ebx+14h] ecx +
jge loc_44ABE5  +
push 17h  +
push ebx  +
call sub_444780  +
add esp 8 +
jmp loc_44AC12  +
push ebx  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44ABFF  +
push 0Ah  +
push ebx  +
call sub_444780  +
add esp 8 +
jmp loc_44AC12  +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_43CD20  +
push eax  +
push ebx  +
call sub_43C900  +
add esp 10h +
push ebx  +
call sub_43C8A0  +
add esp 4 +
mov esi eax +
mov [esp+18h+var_8] esi +
call sub_45D830  +
mov ebp eax +
test ebp ebp +
jz loc_44AC96  +
push dword ptr [edi+18h]  +
push dword ptr [esi+18h]  +
call sub_44E8F0  +
add esp 8 +
mov [esp+18h+arg_0] eax +
test eax eax +
jz loc_44AC77  +
push dword ptr [edi+18h]  +
mov esi [esi+18h] +
call sub_44E660  +
mov edi eax +
mov eax [esp+1Ch+arg_0] +
sub eax esi +
push esi  +
add edi eax +
call sub_44E660  +
mov esi [esp+20h+var_8] +
sub eax edi +
push eax  +
mov eax [esi+18h] +
add eax edi +
push eax  +
push ebp  +
call sub_45D320  +
mov edi [esp+2Ch+var_4] +
add esp 14h +
push ebp  +
call sub_45D810  +
push eax  +
push dword ptr [ebx+0Ch]  +
call sub_43D190  +
push eax  +
push ebx  +
call sub_43C900  +
push ebp  +
call sub_45DAC0  +
add esp 18h +
push esi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
push edi  +
push dword ptr [ebx+0Ch]  +
call loc_4499D0  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44AE14  +
cmp dword ptr [esp+0Ch] 2 +
jz loc_44ACE1  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov ecx [esi+2Ch] +
mov edx [esi+14h] +
lea eax [ecx+2] +
cmp edx eax +
jge loc_44ACFB  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esi+10h] +
test eax eax +
jz loc_44AD48  +
cmp dword ptr [eax] 4 +
jz loc_44AD48  +
lea eax [ecx+1] +
cmp edx eax +
jge loc_44AD1B  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AD48  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44AD35  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AD48  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push ebx  +
push ebp  +
push edi  +
push esi  +
call sub_43C8A0  +
mov ecx [esi+10h] +
add esp 4 +
mov ebp eax +
test ecx ecx +
jz loc_44ADA5  +
cmp dword ptr [ecx] 4 +
jz loc_44ADA5  +
mov ecx [esi+2Ch] +
inc ecx  +
cmp [esi+14h] ecx +
jge loc_44AD78  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44ADA5  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44AD92  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44ADA5  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push esi  +
call sub_43C8A0  +
add esp 4 +
mov ebx eax +
call sub_45D830  +
mov edi eax +
test edi edi +
jz loc_44ADFC  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+18h]  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jz loc_44ADDD  +
mov ecx [ebx+18h] +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push edi  +
call sub_45D810  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
push eax  +
push esi  +
call sub_43C900  +
push edi  +
call sub_45DAC0  +
add esp 18h +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 10h +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 10h +
push edi  +
mov edi [esp+14h+arg_4] +
xorps xmm0 xmm0 +
movsd [esp+14h+var_10] xmm0 +
cmp edi 2 +
jge loc_44AE57  +
mov eax [esp+14h+arg_0] +
test eax eax +
jz loc_44B169  +
pop edi  +
add esp 10h +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] eax +
jmp sub_444780  +
cmp edi 3 +
jle loc_44AE7D  +
mov eax [esp+14h+arg_0] +
test eax eax +
jz loc_44B169  +
pop edi  +
add esp 10h +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] eax +
jmp sub_444780  +
push esi  +
mov esi [esp+18h+arg_0] +
cmp edi 3 +
jnz loc_44AEF3  +
mov eax [esi+10h] +
test eax eax +
jz loc_44AEC2  +
cmp dword ptr [eax] 3 +
jz loc_44AEC2  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44AEA9  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AEC2  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_44B15D  +
cmp dword ptr [eax] 3 +
jnz loc_44B15D  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+24h+var_10] xmm0 +
call loc_4499D0  +
add esp 0Ch +
mov eax [esi+10h] +
test eax eax +
jz loc_44AF2E  +
cmp dword ptr [eax] 3 +
jz loc_44AF2E  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44AF15  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AF2E  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_44B15D  +
cmp dword ptr [eax] 3 +
jnz loc_44B15D  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
movsd xmm0 qword ptr [eax+10h] +
movsd [esp+24h+var_8] xmm0 +
call loc_4499D0  +
mov eax [esi+10h] +
add esp 0Ch +
test eax eax +
jz loc_44AFAE  +
cmp dword ptr [eax] 4 +
jz loc_44AFAE  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44AF81  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AFAE  +
push esi  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44AF9B  +
push 0Ah  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44AFAE  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CD20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
mov eax [esi+10h] +
test eax eax +
jz loc_44B15D  +
cmp dword ptr [eax] 4 +
jnz loc_44B15D  +
push ebx  +
push ebp  +
push esi  +
call sub_43C8A0  +
mov ebp eax +
push dword ptr [ebp+18h]  +
call sub_44E950  +
add esp 8 +
mov ebx eax +
cmp edi 3 +
jz loc_44B00B  +
movsd xmm1 ds:qword_4BF6E0 +
movd xmm0 ebx +
cvtdq2pd xmm0 xmm0 +
movsd [esp+20h+var_10] xmm0 +
movsd xmm0 [esp+20h+var_8] +
comisd xmm1 xmm0 +
jbe loc_44B011  +
movaps xmm0 xmm1 +
movsd [esp+20h+var_8] xmm0 +
jmp loc_44B011  +
movsd xmm0 [esp+20h+var_8] +
sub esp 8 +
movsd [esp+28h+var_28] xmm0 +
call sub_445CD0  +
add esp 8 +
test eax eax +
jnz loc_44B132  +
movsd xmm0 [esp+20h+var_8] +
sub esp 8 +
addsd xmm0 [esp+28h+var_10] +
movsd [esp+28h+var_28] xmm0 +
call sub_445D10  +
add esp 8 +
test eax eax +
jnz loc_44B132  +
movsd xmm1 [esp+20h+var_8] +
cvttsd2si edi xmm1 +
movd xmm0 edi +
cvtdq2pd xmm0 xmm0 +
addsd xmm0 ds:qword_4E1048 +
comisd xmm1 xmm0 +
jb loc_44B06E  +
inc edi  +
movsd xmm0 [esp+20h+var_10] +
sub esp 8 +
movsd [esp+28h+var_28] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 1 +
jnz loc_44B097  +
mov eax ebx +
cmp edi 1 +
jge loc_44B0E0  +
mov edi 1 +
jmp loc_44B0E0  +
movsd xmm0 [esp+20h+var_10] +
sub esp 8 +
movsd [esp+28h+var_28] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_44B0DE  +
movsd xmm1 [esp+20h+var_10] +
xorps xmm0 xmm0 +
comisd xmm0 xmm1 +
ja loc_44B0DE  +
cvttsd2si eax xmm1 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
addsd xmm0 ds:qword_4E1048 +
comisd xmm1 xmm0 +
jb loc_44B0E0  +
inc eax  +
jmp loc_44B0E0  +
xor eax eax +
dec edi  +
xor ecx ecx +
add eax edi +
test edi edi +
cmovs edi ecx +
cmp eax ebx +
cmovg eax ebx +
sub eax edi +
push eax  +
push edi  +
push dword ptr [ebp+18h]  +
call loc_44EB50  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_44B132  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_43D190  +
push eax  +
push esi  +
call sub_43C900  +
push edi  +
call off_4EE2F4  +
add esp 14h +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
add esp 10h +
retn   +
push offset unk_4DE8C5  +
push dword ptr [esi+0Ch]  +
call sub_43CF20  +
push eax  +
push esi  +
call sub_43C900  +
add esp 10h +
push ebp  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 8 +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
add esp 10h +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
pop edi  +
add esp 10h +
retn   +
***
and esp 0FFFFFFC0h +
sub esp 34h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
movsd [esp+3Ch+var_10] xmm0 +
push edi  +
test esi esi +
jz loc_44B266  +
cmp [ebp+arg_4] 1 +
jz loc_44B1A8  +
push 0Ch  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44B1C3  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [esi+10h] +
test eax eax +
jz loc_44B25B  +
mov eax [eax] +
cmp eax 1 +
jz loc_44B1DE  +
cmp eax 9 +
jnz loc_44B25B  +
push esi  +
call sub_43C8A0  +
mov ebx eax +
add esp 4 +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_44B22E  +
mov eax [ecx] +
test eax eax +
jz loc_44B22E  +
xor edi edi +
test eax eax +
jle loc_44B22E  +
fld  [esp+40h+var_10] +
fstp  [esp+40h+var_8] +
mov eax [ecx+8] +
push dword ptr [eax+edi*4]  +
call sub_43D4C0  +
fadd  [esp+44h+var_8] +
mov ecx [ebx+4] +
inc edi  +
add esp 4 +
fst  [esp+40h+var_8] +
fstp  [esp+40h+var_10] +
cmp edi [ecx] +
jl loc_44B204  +
movsd xmm0 [esp+40h+var_10] +
jmp loc_44B231  +
xorps xmm0 xmm0 +
sub esp 8 +
movsd [esp+48h+var_48] xmm0 +
push dword ptr [esi+0Ch]  +
call sub_43CFD0  +
push eax  +
push esi  +
call sub_43C900  +
push ebx  +
push dword ptr [esi+0Ch]  +
call loc_4499D0  +
add esp 1Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
push ebp  +
mov ebp [esp+14h+arg_0] +
test ebp ebp +
jz loc_44B4FE  +
cmp [esp+14h+arg_4] 3 +
jz loc_44B297  +
push 0Ch  +
push ebp  +
call sub_444780  +
add esp 8 +
pop ebp  +
add esp 10h +
retn   +
mov ecx [ebp+2Ch] +
mov edx [ebp+14h] +
lea eax [ecx+3] +
cmp edx eax +
jge loc_44B2B4  +
push 17h  +
push ebp  +
call sub_444780  +
add esp 8 +
pop ebp  +
add esp 10h +
retn   +
mov eax [ebp+10h] +
test eax eax +
jz loc_44B301  +
cmp dword ptr [eax] 4 +
jz loc_44B301  +
lea eax [ecx+1] +
cmp edx eax +
jge loc_44B2D4  +
push 17h  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B301  +
push ebp  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44B2EE  +
push 0Ah  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B301  +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_43CD20  +
push eax  +
push ebp  +
call sub_43C900  +
add esp 10h +
push ebp  +
call sub_43C8A0  +
mov ecx [ebp+10h] +
add esp 4 +
mov [esp+14h+var_10] eax +
test ecx ecx +
jz loc_44B35D  +
cmp dword ptr [ecx] 4 +
jz loc_44B35D  +
mov ecx [ebp+2Ch] +
inc ecx  +
cmp [ebp+14h] ecx +
jge loc_44B330  +
push 17h  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B35D  +
push ebp  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44B34A  +
push 0Ah  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B35D  +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_43CD20  +
push eax  +
push ebp  +
call sub_43C900  +
add esp 10h +
push ebp  +
call sub_43C8A0  +
mov ecx [ebp+10h] +
add esp 4 +
mov [esp+14h+var_8] eax +
test ecx ecx +
jz loc_44B3B9  +
cmp dword ptr [ecx] 4 +
jz loc_44B3B9  +
mov ecx [ebp+2Ch] +
inc ecx  +
cmp [ebp+14h] ecx +
jge loc_44B38C  +
push 17h  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B3B9  +
push ebp  +
call sub_43C8A0  +
add esp 4 +
test eax eax +
jnz loc_44B3A6  +
push 0Ah  +
push ebp  +
call sub_444780  +
add esp 8 +
jmp loc_44B3B9  +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_43CD20  +
push eax  +
push ebp  +
call sub_43C900  +
add esp 10h +
push esi  +
push ebp  +
call sub_43C8A0  +
add esp 4 +
mov [esp+18h+var_C] eax +
call sub_45D830  +
mov esi eax +
mov [esp+18h+arg_0] esi +
test esi esi +
jz loc_44B4BA  +
mov eax [esp+18h+var_10] +
push ebx  +
push edi  +
push dword ptr [eax+18h]  +
call sub_44E950  +
mov edi [esp+24h+var_C] +
add esp 4 +
mov [esp+20h+var_4] eax +
mov edi [edi+18h] +
mov bl [edi] +
test bl bl +
jz loc_44B4B8  +
mov eax [esp+20h+var_8] +
push edi  +
push dword ptr [eax+18h]  +
call loc_44E9C0  +
add esp 8 +
test eax eax +
js loc_44B440  +
cmp eax [esp+20h+var_4] +
jge loc_44B453  +
push eax  +
mov eax [esp+24h+var_10] +
push dword ptr [eax+18h]  +
call sub_44EAB0  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_44B453  +
push 1  +
push esi  +
call sub_44EB00  +
push eax  +
push esi  +
push [esp+30h+arg_0]  +
jmp loc_44B44B  +
push 1  +
push edi  +
call sub_44EB00  +
push eax  +
push edi  +
push esi  +
call sub_45D320  +
add esp 14h +
inc edi  +
test bl bl +
jns loc_44B491  +
mov al bl +
and al 0C0h +
cmp al 0C0h +
jnz loc_44B49A  +
add bl bl +
jns loc_44B48D  +
mov al [edi] +
inc edi  +
and al 0C0h +
cmp al 80h +
jnz loc_44B473  +
add bl bl +
js loc_44B464  +
jmp loc_44B48D  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlxpathtransl  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
test bl bl +
js loc_44B4B4  +
mov esi [esp+20h+arg_0] +
jmp loc_44B3F6  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlxpathtransl  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
mov esi [esp+20h+arg_0] +
pop edi  +
pop ebx  +
push esi  +
call sub_45D810  +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_43D190  +
push eax  +
push ebp  +
call sub_43C900  +
push esi  +
call sub_45DAC0  +
push [esp+30h+var_C]  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
push [esp+38h+var_8]  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
push [esp+40h+var_10]  +
push dword ptr [ebp+0Ch]  +
call loc_4499D0  +
add esp 30h +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_44B5E1  +
cmp dword ptr [esp+0Ch] 0 +
jz loc_44B531  +
push 0Ch  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov eax [edi+14h] +
cmp eax [edi+2Ch] +
jge loc_44B546  +
push 17h  +
push edi  +
call sub_444780  +
add esp 8 +
pop edi  +
retn   +
***
mov eax [edi+0Ch] +
push esi  +
test eax eax +
jz loc_44B590  +
mov eax [eax+0C8h] +
test eax eax +
jz loc_44B590  +
mov edx [eax+8] +
test edx edx +
jz loc_44B574  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_44B574  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+8] +
mov eax [eax] +
mov esi [eax+ecx*4] +
jmp loc_44B5C9  +
mov edx [eax+10h] +
test edx edx +
jz loc_44B590  +
mov ecx [edx+4] +
test ecx ecx +
jz loc_44B590  +
dec ecx  +
mov [edx+4] ecx +
mov eax [eax+10h] +
mov eax [eax] +
mov esi [eax+ecx*4] +
jmp loc_44B5C9  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_44B5BC  +
push offset aCreatingBoolea  +
push eax  +
call sub_4448C0  +
add esp 8 +
push esi  +
push edi  +
call sub_43C900  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
push esi  +
mov dword ptr [esi+8] 1 +
push edi  +
mov dword ptr [esi] 2 +
call sub_43C900  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
push ebp  +
push esi  +
push edi  +
push 5Bh  +
push ebx  +
xor ebp ebp +
xor edi edi +
call sub_44E580  +
add esp 8 +
test eax eax +
jnz loc_44B751  +
push 28h  +
push ebx  +
call sub_44E580  +
add esp 8 +
test eax eax +
jnz loc_44B751  +
push 40h  +
push ebx  +
call sub_44E580  +
add esp 8 +
test eax eax +
jnz loc_44B751  +
push 3Ah  +
push ebx  +
call sub_44E580  +
mov esi [esp+1Ch] +
add esp 8 +
test eax eax +
jz loc_44B663  +
test esi esi +
jz loc_44B751  +
cmp [esi+3Ch] edi +
jz loc_44B751  +
cmp byte ptr [eax+1] 3Ah +
jz loc_44B751  +
test esi esi +
jz loc_44B6DF  +
mov eax [esi+3Ch] +
mov ebp [esi+0C0h] +
test eax eax +
jle loc_44B6DF  +
lea eax ds:8[eax*8] +
push eax  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44B6A0  +
push offset aAllocatingName  +
push esi  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
xor edx edx +
xor ebx ebx +
cmp [esi+3Ch] edx +
jle loc_44B6CC  +
mov eax [esi+38h] +
mov ecx [eax+ebx*4] +
inc ebx  +
mov eax [ecx+8] +
mov [edi+edx*4] eax +
mov eax [ecx+0Ch] +
mov [edi+edx*4+4] eax +
add edx 2 +
cmp ebx [esi+3Ch] +
jl loc_44B6B0  +
mov ebx [esp+18h] +
mov dword ptr [edi+edx*4] 0 +
mov dword ptr [edi+edx*4+4] 0 +
push edi  +
push 1  +
push ebp  +
push ebx  +
call loc_4697D0  +
add esp 10h +
mov ebx eax +
test edi edi +
jz loc_44B6FC  +
push edi  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_44B748  +
push ebx  +
call sub_4697A0  +
add esp 4 +
cmp eax 1 +
jnz loc_44B748  +
call sub_4464E0  +
mov edi eax +
test edi edi +
jnz loc_44B72E  +
push offset aAllocatingStre  +
push esi  +
call sub_4448C0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov [edi+18h] ebx +
mov [edi+14h] ebp +
test ebp ebp +
jz loc_44B741  +
push ebp  +
call sub_44FAE0  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebx  +
call sub_468E10  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
test esi esi +
jz loc_44B8A8  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_44B8A8  +
mov eax [esi+10h] +
test eax eax +
jz loc_44B7B2  +
cmp dword ptr [eax] 3 +
jz loc_44B7B2  +
mov eax [esi+2Ch] +
inc eax  +
cmp [esi+14h] eax +
jge loc_44B799  +
push 17h  +
push esi  +
call sub_444780  +
add esp 8 +
jmp loc_44B7B2  +
push esi  +
call sub_43C8A0  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_43CCC0  +
push eax  +
push esi  +
call sub_43C900  +
add esp 14h +
mov eax [esi+10h] +
test eax eax +
jz loc_44B89D  +
cmp dword ptr [eax] 3 +
jnz loc_44B89D  +
movsd xmm0 qword ptr [eax+10h] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
mov eax [esi+10h] +
jz loc_44B7F1  +
movsd xmm0 dbl_4F24A0 +
movsd qword ptr [eax+10h] xmm0 +
pop esi  +
retn   +
movsd xmm0 qword ptr [eax+10h] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 1 +
mov eax [esi+10h] +
jnz loc_44B81D  +
movsd xmm0 qword_4EE150 +
movsd qword ptr [eax+10h] xmm0 +
pop esi  +
retn   +
movsd xmm0 qword ptr [eax+10h] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_445CD0  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_44B849  +
mov eax [esi+10h] +
movsd xmm0 dbl_4EE148 +
pop esi  +
movsd qword ptr [eax+10h] xmm0 +
retn   +
mov ecx [esi+10h] +
movsd xmm0 qword ptr [ecx+10h] +
ucomisd xmm0 ds:qword_4BF6D0 +
lahf   +
test ah 44h +
jp loc_44B88F  +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_445900  +
add esp 8 +
test eax eax +
mov eax [esi+10h] +
jnz loc_44B885  +
movsd xmm0 dbl_4F2490 +
movsd qword ptr [eax+10h] xmm0 +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movsd qword ptr [eax+10h] xmm0 +
pop esi  +
retn   +
xorps xmm0 oword ptr ds:oword_4BF700 +
movsd qword ptr [ecx+10h] xmm0 +
pop esi  +
retn   +
push 0Bh  +
push esi  +
call sub_444780  +
add esp 8 +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_44B8B9  +
retn   +
mov ecx [eax+5Ch] +
push 0  +
push [esp+4+arg_4]  +
test ecx ecx +
jz loc_44B8CF  +
push dword ptr [eax+60h]  +
call ecx  +
add esp 0Ch +
retn   +
push eax  +
call sub_44B8E0  +
add esp 0Ch +
retn   +
***
test esi esi +
jnz loc_44B8ED  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+5Ch] +
push edi  +
mov edi [esp+4+arg_4] +
test eax eax +
jz loc_44B90A  +
push [esp+4+arg_8]  +
push edi  +
push dword ptr [esi+60h]  +
call eax  +
add esp 0Ch +
test eax eax +
jnz loc_44B92F  +
mov eax [esi+10h] +
test eax eax +
jz loc_44B915  +
test edi edi +
jnz loc_44B91A  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push [esp+4+arg_8]  +
push edi  +
push eax  +
call sub_450460  +
push eax  +
push esi  +
call sub_43D220  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
push ebp  +
mov ebp [esp+10h+arg_0] +
xor ebx ebx +
push esi  +
push edi  +
mov [esp+18h+var_8] ebx +
mov eax [ebp+10h] +
mov esi eax +
mov [esp+18h+var_4] eax +
mov eax [ebp+18h] +
mov [esp+18h+arg_0] eax +
call sub_4282C0  +
mov eax [esp+18h+arg_4] +
mov edi [eax+20h] +
test edi edi +
jz loc_44B985  +
mov eax [ebp+10h] +
mov ebx [edi+3Ch] +
test eax eax +
jz loc_44B980  +
mov [edi+3Ch] eax +
jmp loc_44B985  +
test ebx ebx +
cmovnz esi ebx +
test esi esi +
jz loc_44B999  +
test edi edi +
jz loc_44B9B1  +
push esi  +
push edi  +
call loc_46B210  +
add esp 8 +
jmp loc_44B9B1  +
test edi edi +
jz loc_44B9AC  +
push edi  +
call loc_46AAC0  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_44B9B1  +
mov esi offset aHtml +
cmp [esp+18h+var_4] 0 +
mov eax [esp+18h+arg_0] +
jnz loc_44B9F0  +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_44B9F0  +
cmp dword ptr [eax+14h] 0 +
jnz loc_44B9F0  +
push esi  +
push ebp  +
call sub_44DF70  +
add esp 8 +
test eax eax +
jns loc_44B9E4  +
mov [edi+3Ch] ebx +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_8] 1 +
test byte ptr [ebp+20h] 1 +
jz loc_44B9FA  +
push 1  +
jmp loc_44B9FC  +
push 0  +
push esi  +
push [esp+20h+arg_4]  +
push edi  +
push eax  +
call sub_46AD20  +
add esp 14h +
cmp [esp+18h+var_8] 0 +
jz loc_44BA43  +
cmp [esp+18h+var_4] 0 +
jnz loc_44BA43  +
mov esi [ebp+18h] +
push esi  +
call sub_45FF00  +
push dword ptr [esi+0Ch]  +
call sub_461820  +
push dword ptr [esi+14h]  +
call sub_45DAC0  +
add esp 0Ch +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+14h] 0 +
test edi edi +
jz loc_44BA4A  +
mov [edi+3Ch] ebx +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 10h +
push ebp  +
push esi  +
xor esi esi +
xor eax eax +
mov [esp+10h] esi +
xor ebp ebp +
mov esi [esp+20h] +
mov [esp+8] eax +
test esi esi +
jz loc_44BCF9  +
push ebx  +
mov ebx [esi+14h] +
push edi  +
mov edi [esp+24h] +
mov [esp+1Ch] ebx +
mov ebx [esp+24h] +
mov edi [edi+18h] +
mov [esp+28h] edi +
xor edi edi +
cmp dword ptr [esi+24h] 0 +
jnz loc_44BB0D  +
push offset aId  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BAC3  +
mov [esp+10h] esi +
jmp loc_44BB89  +
cmp dword ptr [esi+24h] 0 +
jnz loc_44BB0D  +
push offset aName_1  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BAE4  +
mov edi esi +
jmp loc_44BB89  +
cmp dword ptr [esi+24h] 0 +
jnz loc_44BB0D  +
push offset aLang  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BB07  +
mov [esp+18h] esi +
jmp loc_44BB89  +
cmp dword ptr [esi+24h] 0 +
jz loc_44BB42  +
push offset aLang  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BB3C  +
mov eax [esi+24h] +
push offset aXml_1  +
push dword ptr [eax+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BB3C  +
mov ebp esi +
jmp loc_44BB89  +
cmp dword ptr [esi+24h] 0 +
jnz loc_44BB89  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44BB55  +
mov eax [eax+28h] +
test eax eax +
jz loc_44BB55  +
cmp byte ptr [eax] 0 +
jnz loc_44BB89  +
push dword ptr [esi+8]  +
call sub_46ACD0  +
add esp 4 +
test eax eax +
jz loc_44BB89  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_44BB74  +
push eax  +
call sub_422CB0  +
add esp 4 +
push dword ptr [esi+8]  +
call sub_424500  +
add esp 4 +
mov [esi+0Ch] eax +
test eax eax +
jz loc_44BB89  +
mov [eax+14h] esi +
push esi  +
push ebx  +
call sub_44C620  +
mov esi [esi+18h] +
add esp 8 +
test esi esi +
jnz loc_44BAA0  +
mov ebx [esp+1Ch] +
test edi edi +
mov [esp+14h] edi +
mov edi [esp+28h] +
jz loc_44BCB3  +
mov eax [esp+10h] +
test eax eax +
jnz loc_44BCB3  +
test ebx ebx +
jz loc_44BCB3  +
mov eax [ebx+8] +
test eax eax +
jz loc_44BCB3  +
push offset aA  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aP_1  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aDiv  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aImg  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aMap  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aApplet  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aForm  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aFrame  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BC8B  +
push offset aIframe  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BCB3  +
push offset aId_1  +
push 5  +
push edi  +
call sub_460010  +
mov eax [esp+20h] +
push eax  +
push edi  +
call sub_44C760  +
push offset asc_4DFF18  +
push 1  +
push edi  +
call sub_460010  +
add esp 20h +
mov esi [esp+18h] +
test esi esi +
jz loc_44BCCF  +
test ebp ebp +
jnz loc_44BCF7  +
push offset aXmlLang_0  +
push 0Bh  +
push edi  +
call sub_460010  +
push esi  +
jmp loc_44BCE1  +
test ebp ebp +
jz loc_44BCF7  +
push offset aLang_0  +
push 7  +
push edi  +
call sub_460010  +
push ebp  +
push edi  +
call sub_44C760  +
push offset asc_4DFF18  +
push 1  +
push edi  +
call sub_460010  +
add esp 20h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 10h +
retn   +
***
test esi esi +
jnz loc_44BD0E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp dword ptr [esi+4] 1 +
jnz loc_44BE7F  +
mov eax [esi+24h] +
test eax eax +
jz loc_44BD37  +
push offset aHttpWww_w3_o_4  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BE7F  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_44BE7F  +
mov ecx [esi+8] +
movzx eax byte ptr [ecx] +
add eax 0FFFFFF9Fh +
cmp eax 0Fh +
ja loc_44BE7F  +
jmp ds:off_44BE84[eax*4]  +
push offset aArea  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aBr  +
push ecx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44BD89  +
mov eax 1 +
pop esi  +
retn   +
push offset aBase  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BD82  +
push offset aBasefont  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aCol  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aFrame  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aHr  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aImg  +
push ecx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BD82  +
push offset aInput  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44BD82  +
push offset aIsindex  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aLink  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aMeta  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
push offset aParam  +
push ecx  +
call sub_44E370  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push ecx  +
push ebp  +
push edi  +
mov edi [esp+14h] +
xor ebp ebp +
test edi edi +
jz loc_44C585  +
mov eax [edi+4] +
cmp eax 9 +
jz loc_44C589  +
cmp eax 0Dh +
jz loc_44C589  +
cmp eax 13h +
jz loc_44C585  +
cmp eax 14h +
jz loc_44C585  +
cmp eax 12h +
jnz loc_44BF22  +
mov eax [esp+10h] +
push eax  +
push edi  +
push dword ptr [eax+18h]  +
call sub_44DB30  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 0Eh +
jnz loc_44BF38  +
push edi  +
push dword ptr [esp+14h]  +
call sub_44CFC0  +
add esp 8 +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 0Bh +
jnz loc_44BF50  +
push dword ptr [edi+0Ch]  +
push dword ptr [esp+14h]  +
call sub_44C5A0  +
add esp 8 +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
push ebx  +
mov ebx [esp+14h] +
push esi  +
mov esi [ebx+18h] +
cmp eax 0Fh +
jnz loc_44BF70  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CB80  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 10h +
jnz loc_44BF87  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CB50  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 11h +
jnz loc_44BF9E  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CBB0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 3 +
jnz loc_44BFE4  +
mov eax [edi+28h] +
test eax eax +
jz loc_44C583  +
mov ecx [edi+8] +
cmp ecx offset aText +
jz loc_44BFD1  +
cmp ecx offset aTextnoenc +
jnz loc_44BFD1  +
push eax  +
push esi  +
call sub_460490  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
push dword ptr [ebx+74h]  +
push eax  +
push esi  +
call sub_4601C0  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 7 +
jnz loc_44C05F  +
push offset a?_0  +
push 2  +
push esi  +
cmp [edi+28h] ebp +
jz loc_44C03B  +
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
add esp 14h +
cmp [edi+28h] ebp +
jz loc_44C025  +
push offset asc_4BF8BC  +
push 1  +
push esi  +
call sub_460010  +
push dword ptr [edi+28h]  +
push esi  +
call sub_460490  +
add esp 14h +
push offset a?_1  +
push 2  +
push esi  +
call sub_460010  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset a?_1  +
push 2  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 8 +
jnz loc_44C099  +
cmp [edi+28h] ebp +
jz loc_44C583  +
push offset asc_4BF90C  +
push 4  +
push esi  +
call sub_460010  +
push dword ptr [edi+28h]  +
push esi  +
call sub_460490  +
push offset asc_4BF914  +
push 3  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 5 +
jnz loc_44C0CA  +
push offset asc_4BF898  +
push 1  +
push esi  +
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset asc_4BF89C  +
push 1  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 4 +
jnz loc_44C182  +
mov edi [edi+28h] +
test edi edi +
jz loc_44C16C  +
cmp byte ptr [edi] 0 +
jz loc_44C16C  +
mov al [edi] +
mov ebx edi +
test al al +
jz loc_44C583  +
cmp al 5Dh +
jnz loc_44C132  +
cmp [edi+1] al +
jnz loc_44C132  +
cmp byte ptr [edi+2] 3Eh +
lea eax [edi+2] +
jnz loc_44C132  +
push offset aCdata  +
push 9  +
push esi  +
mov edi eax +
call sub_460010  +
mov eax edi +
push ebx  +
sub eax ebx +
push eax  +
push esi  +
call sub_460010  +
push offset asc_4BF928  +
push 3  +
push esi  +
call sub_460010  +
add esp 24h +
mov ebx edi +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_44C0F3  +
cmp ebx edi +
jz loc_44C583  +
push offset aCdata  +
push 9  +
push esi  +
call sub_460010  +
push ebx  +
push esi  +
call sub_460490  +
push offset asc_4BF928  +
push 3  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
push offset aCdata_0  +
push 0Ch  +
push esi  +
call sub_460010  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
cmp eax 2 +
jnz loc_44C197  +
push edi  +
push ebx  +
call sub_44C620  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
mov eax [ebx+28h] +
mov [esp+1Ch] eax +
cmp eax 1 +
jnz loc_44C1CA  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_44C1CA  +
and al 1Ch +
push offset asc_4BF92C  +
push 1  +
push esi  +
call sub_460010  +
mov eax [edi+24h] +
add esp 0Ch +
test eax eax +
jz loc_44C1FF  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44C1FF  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
mov eax [edi+30h] +
add esp 8 +
test eax eax +
jz loc_44C21C  +
push eax  +
push ebx  +
call sub_44DC90  +
add esp 8 +
push offset aHtml_0  +
push dword ptr [edi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44C248  +
cmp [edi+24h] ebp +
jnz loc_44C248  +
cmp [edi+30h] ebp +
jnz loc_44C248  +
push offset aXmlnsHttpWww_w  +
push esi  +
call sub_460490  +
add esp 8 +
mov eax [edi+2Ch] +
test eax eax +
jz loc_44C259  +
push eax  +
push ebx  +
call loc_44BA60  +
add esp 8 +
cmp dword ptr [edi+4] 1 +
jnz loc_44C408  +
mov eax [edi+14h] +
test eax eax +
jz loc_44C305  +
mov eax [eax+14h] +
cmp eax [edi+20h] +
jnz loc_44C305  +
push offset aHead  +
push dword ptr [edi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44C305  +
mov eax [edi+14h] +
push offset aHtml_0  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44C305  +
mov ebp [edi+0Ch] +
test ebp ebp +
jz loc_44C300  +
push offset aMeta  +
push dword ptr [ebp+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44C2F9  +
push offset aHttpEquiv  +
push ebp  +
call sub_423450  +
add esp 8 +
mov [esp+10h] eax +
test eax eax +
jz loc_44C2F9  +
push offset aContentType  +
push eax  +
call sub_44E470  +
add esp 8 +
push dword ptr [esp+10h]  +
test eax eax +
jz loc_44C34E  +
call off_4EE2F4  +
add esp 4 +
mov ebp [ebp+18h] +
test ebp ebp +
jnz loc_44C2B0  +
mov ebp 1 +
cmp dword ptr [edi+4] 1 +
jnz loc_44C408  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_44C408  +
mov eax [edi+24h] +
test eax eax +
jz loc_44C326  +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_44C35B  +
push edi  +
call sub_44BD00  +
add esp 4 +
cmp eax 1 +
jnz loc_44C35B  +
test ebp ebp +
jnz loc_44C35B  +
push offset asc_4BFA80  +
push 3  +
push esi  +
call sub_460010  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
call off_4EE2F4  +
add esp 4 +
xor ebp ebp +
jmp loc_44C305  +
***
push offset asc_4BF8EC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
cmp ebp 1 +
jnz loc_44C535  +
cmp [ebx+28h] ebp +
jnz loc_44C3B1  +
push offset asc_4BECCC  +
push ebp  +
push esi  +
call sub_460010  +
add esp 0Ch +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44C3B1  +
mov ecx [ebx+24h] +
lea eax [ebx+2Ch] +
inc ecx  +
cmp ecx [ebx+6Ch] +
push eax  +
cmovg ecx [ebx+6Ch] +
mov eax [ebx+70h] +
imul eax ecx +
push eax  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset aMetaHttpEquivC  +
push esi  +
call sub_460490  +
mov eax [ebx+10h] +
add esp 8 +
test eax eax +
jz loc_44C3D2  +
push eax  +
push esi  +
call sub_460490  +
add esp 8 +
jmp loc_44C3E2  +
push offset aUtf8  +
push 5  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BFAC4  +
push 4  +
push esi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [ebx+28h] 1 +
jnz loc_44C535  +
push offset asc_4BECCC  +
push 1  +
jmp loc_44C52C  +
push offset asc_4BF8EC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
cmp ebp 1 +
jnz loc_44C49F  +
cmp [ebx+28h] ebp +
jnz loc_44C45E  +
push offset asc_4BECCC  +
push ebp  +
push esi  +
call sub_460010  +
add esp 0Ch +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44C45E  +
mov ecx [ebx+24h] +
lea eax [ebx+2Ch] +
inc ecx  +
cmp ecx [ebx+6Ch] +
push eax  +
cmovg ecx [ebx+6Ch] +
mov eax [ebx+70h] +
imul eax ecx +
push eax  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset aMetaHttpEquivC  +
push esi  +
call sub_460490  +
mov eax [ebx+10h] +
add esp 8 +
test eax eax +
jz loc_44C47F  +
push eax  +
push esi  +
call sub_460490  +
add esp 8 +
jmp loc_44C48F  +
push offset aUtf8  +
push 5  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BFAC4  +
push 4  +
push esi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [edi+4] 1 +
jz loc_44C4B9  +
mov eax [edi+28h] +
test eax eax +
jz loc_44C4B9  +
push dword ptr [ebx+74h]  +
push eax  +
push esi  +
call sub_4601C0  +
add esp 0Ch +
cmp dword ptr [edi+0Ch] 0 +
jz loc_44C535  +
mov ecx [esp+1Ch] +
mov ebp [ebx+28h] +
cmp ecx 1 +
jnz loc_44C4DE  +
push offset asc_4BECCC  +
push ecx  +
push esi  +
call sub_460010  +
mov ecx [esp+28h] +
add esp 0Ch +
mov eax [ebx+24h] +
test eax eax +
js loc_44C4E9  +
inc eax  +
mov [ebx+24h] eax +
mov [ebx+28h] ecx +
push dword ptr [edi+0Ch]  +
push ebx  +
call sub_44C5A0  +
mov eax [ebx+24h] +
add esp 8 +
test eax eax +
jle loc_44C503  +
dec eax  +
mov [ebx+24h] eax +
mov [ebx+28h] ebp +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44C535  +
cmp dword ptr [esp+1Ch] 1 +
jnz loc_44C535  +
mov ecx [ebx+24h] +
lea eax [ebx+2Ch] +
cmp ecx [ebx+6Ch] +
push eax  +
cmovg ecx [ebx+6Ch] +
mov eax [ebx+70h] +
imul eax ecx +
push eax  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BF934  +
push 2  +
push esi  +
call sub_460010  +
mov eax [edi+24h] +
add esp 0Ch +
test eax eax +
jz loc_44C56A  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44C56A  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset asc_4BF8EC  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
push edi  +
push dword ptr [esp+14h]  +
call sub_44CCE0  +
add esp 8 +
pop edi  +
pop ebp  +
pop ecx  +
retn   +
***
test esi esi +
jz loc_44C60F  +
push ebx  +
push edi  +
mov edi [esp+8+arg_0] +
mov ebx [edi+18h] +
cmp dword ptr [edi+28h] 1 +
jnz loc_44C5E6  +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44C5E6  +
cmp dword ptr [esi+4] 1 +
jnz loc_44C5E6  +
mov ecx [edi+24h] +
lea eax [edi+2Ch] +
cmp ecx [edi+6Ch] +
push eax  +
cmovg ecx [edi+6Ch] +
mov eax [edi+70h] +
imul eax ecx +
push eax  +
push ebx  +
call sub_460010  +
add esp 0Ch +
push esi  +
push edi  +
call loc_44BED0  +
add esp 8 +
cmp dword ptr [edi+28h] 1 +
jnz loc_44C606  +
push offset asc_4BECCC  +
push 1  +
push ebx  +
call sub_460010  +
add esp 0Ch +
mov esi [esi+18h] +
test esi esi +
jnz loc_44C5B2  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
test edi edi +
jz loc_44C6AF  +
mov eax [esp+arg_0] +
push esi  +
mov esi [eax+18h] +
test esi esi +
jz loc_44C6AE  +
cmp dword ptr [eax+28h] 2 +
jnz loc_44C64C  +
push 2  +
push eax  +
call loc_44DD60  +
add esp 8 +
jmp loc_44C65C  +
push offset asc_4BF8BC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
mov eax [edi+24h] +
test eax eax +
jz loc_44C681  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44C681  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset asc_4BF8F8  +
push 2  +
push esi  +
call sub_460010  +
push edi  +
push esi  +
call sub_44C760  +
push offset asc_4DFF18  +
push 1  +
push esi  +
call sub_460010  +
add esp 28h +
pop esi  +
pop edi  +
retn   +
***
test edi edi +
jz loc_44C75C  +
push ebx  +
mov ebx [esp+4+arg_0] +
push esi  +
mov esi [ebx+18h] +
test esi esi +
jz loc_44C74F  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44C6ED  +
push 2  +
push ebx  +
call loc_44DD60  +
add esp 8 +
jmp loc_44C6FD  +
push offset asc_4BF8BC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
mov eax [edi+24h] +
test eax eax +
jz loc_44C722  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44C722  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset asc_4BF8F8  +
push 2  +
push esi  +
call sub_460010  +
push edi  +
push esi  +
call sub_44C760  +
push offset asc_4DFF18  +
push 1  +
push esi  +
call sub_460010  +
add esp 28h +
mov edi [edi+18h] +
test edi edi +
jnz loc_44C6D3  +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1Ch+var_4] eax +
mov edx [esp+1Ch+arg_4] +
push ebp  +
push edi  +
mov edi [esp+24h+arg_0] +
mov ebp [edx+0Ch] +
mov [esp+24h+var_18] edi +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_14] ebp +
test ebp ebp +
jz loc_44CB32  +
push ebx  +
push esi  +
mov eax [ebp+4] +
sub eax 3 +
jz loc_44C7DC  +
sub eax 2 +
jnz loc_44CB1D  +
push 1  +
push offset asc_4BF898  +
push dword ptr [edi+10h]  +
call sub_45D320  +
push dword ptr [ebp+8]  +
call sub_44E660  +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [edi+10h]  +
call sub_45D320  +
push 1  +
push offset asc_4BF89C  +
push dword ptr [edi+10h]  +
call sub_45D320  +
add esp 28h +
jmp loc_44CB1D  +
mov esi [ebp+28h] +
mov ebx [edx+20h] +
mov edi [edi+10h] +
test esi esi +
jz loc_44CB19  +
cmp byte ptr [esi] 0 +
mov ecx esi +
jz loc_44CB19  +
mov al [esi] +
cmp al 0Ah +
jnz loc_44C82D  +
cmp ecx esi +
jz loc_44C811  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 5  +
push offset a10  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 0Dh +
jnz loc_44C860  +
cmp ecx esi +
jz loc_44C844  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 5  +
push offset a13  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 9 +
jnz loc_44C893  +
cmp ecx esi +
jz loc_44C877  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 4  +
push offset a9  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 22h +
jnz loc_44C8C6  +
cmp ecx esi +
jz loc_44C8AA  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 6  +
push offset aQuot_0  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 3Ch +
jnz loc_44C8F9  +
cmp ecx esi +
jz loc_44C8DD  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 4  +
push offset aLt  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 3Eh +
jnz loc_44C92C  +
cmp ecx esi +
jz loc_44C910  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 4  +
push offset aGt  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 26h +
jnz loc_44C95F  +
cmp ecx esi +
jz loc_44C943  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 5  +
push offset aAmp  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 80h +
jb loc_44CAFA  +
test ebx ebx +
jz loc_44C975  +
cmp dword ptr [ebx+3Ch] 0 +
jnz loc_44CAFA  +
cmp ecx esi +
jz loc_44C98C  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
mov edx [esp+38h+var_1C] +
add esp 0Ch +
mov al [esi] +
cmp al 0C0h +
jnb loc_44C9E0  +
push 0  +
push edx  +
push 578h  +
call sub_44DEC0  +
add esp 0Ch +
test ebx ebx +
jz loc_44C9B6  +
push offset aIso88591  +
call sub_44E600  +
add esp 4 +
mov [ebx+3Ch] eax +
movzx eax byte ptr [esi] +
push eax  +
lea eax [esp+30h+var_10] +
push eax  +
call sub_44E000  +
push 0FFFFFFFFh  +
lea eax [esp+38h+var_10] +
push eax  +
push edi  +
call sub_45D320  +
mov edx [esp+40h+var_1C] +
add esp 14h +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp al 0E0h +
jnb loc_44C9F5  +
movzx ecx al +
mov ebp 2 +
movzx eax byte ptr [esi+1] +
and ecx 1Fh +
jmp loc_44CA41  +
cmp al 0F0h +
jnb loc_44CA16  +
movzx ecx al +
mov ebp 3 +
movzx eax byte ptr [esi+1] +
and ecx 0Fh +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [esi+2] +
jmp loc_44CA41  +
cmp al 0F8h +
jnb loc_44CA65  +
movzx ecx al +
mov ebp 4 +
movzx eax byte ptr [esi+1] +
and ecx 7 +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [esi+2] +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [esi+3] +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
cmp ecx 100h +
jge loc_44CAB0  +
cmp ecx 9 +
jl loc_44CA5B  +
cmp ecx 0Ah +
jle loc_44CAD5  +
cmp ecx 0Dh +
jz loc_44CAD5  +
cmp ecx 20h +
jge loc_44CAD5  +
push 0  +
push edx  +
push 579h  +
call sub_44DEC0  +
add esp 0Ch +
test ebx ebx +
jz loc_44CA89  +
push offset aIso88591  +
call sub_44E600  +
add esp 4 +
mov [ebx+3Ch] eax +
movzx eax byte ptr [esi] +
push eax  +
lea eax [esp+30h+var_10] +
push eax  +
call sub_44E000  +
push 0FFFFFFFFh  +
lea eax [esp+38h+var_10] +
push eax  +
push edi  +
call sub_45D320  +
mov edx [esp+40h+var_1C] +
add esp 14h +
inc esi  +
mov ecx esi +
jmp loc_44CAFB  +
cmp ecx 0D7FFh +
jle loc_44CAD5  +
cmp ecx 0E000h +
jl loc_44CAC8  +
cmp ecx 0FFFDh +
jle loc_44CAD5  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
ja loc_44CA65  +
push ecx  +
lea eax [esp+30h+var_10] +
push eax  +
call sub_44E000  +
push 0FFFFFFFFh  +
lea eax [esp+38h+var_10] +
push eax  +
push edi  +
call sub_45D320  +
mov edx [esp+40h+var_1C] +
add esp 14h +
add esi ebp +
mov ecx esi +
jmp loc_44CAFB  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_44C7F8  +
cmp ecx esi +
jz loc_44CB15  +
sub esi ecx +
push esi  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
mov ebp [esp+2Ch+var_14] +
mov edi [esp+2Ch+var_18] +
mov ebp [ebp+18h] +
mov edx [esp+2Ch+var_1C] +
mov [esp+2Ch+var_14] ebp +
test ebp ebp +
jnz loc_44C791  +
pop esi  +
pop ebx  +
mov ecx [esp+24h+var_4] +
pop edi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 1Ch +
retn   +
***
mov esi eax +
test esi esi +
jz loc_44CB73  +
push [esp+arg_4]  +
push esi  +
call sub_451E70  +
push esi  +
push [esp+0Ch+arg_0]  +
call sub_45DD40  +
add esp 10h +
pop esi  +
retn   +
***
mov esi eax +
test esi esi +
jz loc_44CBA3  +
push [esp+arg_4]  +
push esi  +
call sub_452250  +
push esi  +
push [esp+0Ch+arg_0]  +
call sub_45DD40  +
add esp 10h +
pop esi  +
retn   +
***
mov esi eax +
test esi esi +
jz loc_44CBD3  +
push [esp+arg_4]  +
push esi  +
call sub_457840  +
push esi  +
push [esp+0Ch+arg_0]  +
call sub_45DD40  +
add esp 10h +
pop esi  +
retn   +
***
mov esi eax +
test esi esi +
jz loc_44CC03  +
push [esp+arg_4]  +
push esi  +
call sub_4524A0  +
push esi  +
push [esp+0Ch+arg_0]  +
call sub_45DD40  +
add esp 10h +
pop esi  +
retn   +
***
call sub_4282C0  +
cmp [esp+arg_8] 0 +
jnz loc_44CC20  +
or eax 0FFFFFFFFh +
retn   +
push ebp  +
mov ebp [esp+4+arg_0] +
test ebp ebp +
jnz loc_44CC2E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push ebx  +
push 20h  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_44CC59  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 7  +
call sub_43AAC0  +
add esp 14h +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn   +
push esi  +
xorps xmm0 xmm0 +
movups oword ptr [ebx] xmm0 +
push edi  +
movups oword ptr [ebx+10h] xmm0 +
push ebp  +
mov [ebx+10h] ebp +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+18h] 0 +
call sub_45E180  +
push ebp  +
mov edi eax +
call sub_45DB70  +
push 0  +
push ebp  +
mov esi eax +
call sub_45E040  +
push 0  +
push [esp+24h+arg_10]  +
push [esp+28h+arg_C]  +
push [esp+2Ch+arg_8]  +
push [esp+30h+arg_4]  +
push ebx  +
call sub_44D4B0  +
push esi  +
push ebp  +
call sub_45E040  +
push ebx  +
call off_4EE2F4  +
push ebp  +
call sub_45E180  +
add esp 38h +
sub eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
sub esp 14h +
push ebx  +
mov ebx [esp+18h+arg_4] +
push ebp  +
push esi  +
mov esi [esp+20h+arg_0] +
mov eax [ebx+3Ch] +
mov [esp+20h+var_14] eax +
push edi  +
mov eax [esi+10h] +
mov edi eax +
mov ebp [esi+18h] +
mov [esp+24h+arg_0] eax +
mov eax [esi+74h] +
mov [esp+24h+var_8] eax +
mov eax [esi+78h] +
mov [esp+24h+var_4] eax +
mov [esp+24h+var_C] 0 +
call sub_4282C0  +
mov eax [ebx+4] +
cmp eax 0Dh +
jz loc_44CD2E  +
cmp eax 9 +
jnz loc_44CDB8  +
mov eax [esi+10h] +
test eax eax +
jz loc_44CD3A  +
mov [ebx+3Ch] eax +
jmp loc_44CD54  +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_44CD52  +
mov eax [ebx+4Ch] +
cmp eax 1 +
jz loc_44CD54  +
push eax  +
call sub_462370  +
add esp 4 +
mov edi eax +
mov ecx [ebx+4] +
cmp ecx 0Dh +
jnz loc_44CD62  +
test byte ptr [esi+20h] 30h +
jz loc_44CD6D  +
mov eax [esi+20h] +
test al 40h +
jz loc_44CDF5  +
test edi edi +
jz loc_44CD7D  +
push edi  +
push ebx  +
call loc_46B210  +
add esp 8 +
jmp loc_44CD90  +
push ebx  +
call loc_46AAC0  +
add esp 4 +
mov edi offset aHtml +
test eax eax +
cmovnz edi eax +
cmp [esp+24h+arg_0] 0 +
jnz loc_44CDC3  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_44CDC3  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_44CDC3  +
push edi  +
push esi  +
call sub_44DF70  +
add esp 8 +
test eax eax +
jns loc_44CDC3  +
mov eax [esp+24h+var_14] +
mov [ebx+3Ch] eax +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 14h +
retn   +
test byte ptr [esi+20h] 1 +
jz loc_44CDCD  +
push 1  +
jmp loc_44CDCF  +
push 0  +
push edi  +
push ebx  +
push ebp  +
call sub_46A9A0  +
add esp 10h +
cmp dword ptr [esi+10h] 0 +
jz loc_44CFB4  +
mov eax [esp+24h+var_14] +
pop edi  +
pop esi  +
mov [ebx+3Ch] eax +
xor eax eax +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
cmp ecx 9 +
jz loc_44CE02  +
test al 30h +
jz loc_44CFAD  +
push edi  +
call loc_462790  +
add esp 4 +
test edi edi +
jz loc_44CE74  +
cmp [esp+24h+arg_0] 0 +
jnz loc_44CE74  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_44CE74  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_44CE74  +
test byte ptr [esi+20h] 2 +
jnz loc_44CF06  +
cmp eax 1 +
jz loc_44CE54  +
test eax eax +
jz loc_44CE54  +
cmp eax 16h +
jz loc_44CE54  +
push edi  +
push esi  +
call sub_44DF70  +
add esp 8 +
test eax eax +
js loc_44CDB1  +
mov [esp+24h+var_C] 1 +
cmp dword ptr [esi+74h] offset loc_44D110 +
jnz loc_44CE64  +
mov dword ptr [esi+74h] 0 +
cmp dword ptr [esi+78h] offset loc_44D110 +
jnz loc_44CE74  +
mov dword ptr [esi+78h] 0 +
test byte ptr [esi+20h] 2 +
jnz loc_44CF06  +
push offset a?xmlVersion  +
push 0Eh  +
push ebp  +
call sub_460010  +
mov eax [ebx+38h] +
add esp 0Ch +
test eax eax +
jz loc_44CEA3  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_45E1C0  +
add esp 8 +
jmp loc_44CEB3  +
push offset a1_0_1  +
push 5  +
push ebp  +
call sub_460010  +
add esp 0Ch +
test edi edi +
jz loc_44CED0  +
push offset aEncoding_0  +
push 0Ah  +
push ebp  +
call sub_460010  +
push edi  +
push dword ptr [ebp+10h]  +
call sub_45E1C0  +
add esp 14h +
mov eax [ebx+28h] +
sub eax 0 +
jz loc_44CEE6  +
sub eax 1 +
jnz loc_44CEF6  +
push offset aStandaloneYes  +
push 11h  +
jmp loc_44CEED  +
push offset aStandaloneNo  +
push 10h  +
push ebp  +
call sub_460010  +
add esp 0Ch +
push offset a?_2  +
push 3  +
push ebp  +
call sub_460010  +
add esp 0Ch +
mov eax [esi+20h] +
mov edx 1 +
test al 10h +
mov ecx 0 +
cmovnz ecx edx +
mov [esp+24h+var_10] ecx +
test al 8 +
jnz loc_44CF46  +
push ebx  +
call sub_4231C0  +
add esp 4 +
test eax eax +
jz loc_44CF46  +
push dword ptr [eax+34h]  +
push dword ptr [eax+38h]  +
call sub_44D3B0  +
xor ecx ecx +
add esp 8 +
test eax eax +
cmovs eax ecx +
mov [esp+24h+var_10] eax +
mov edi [ebx+0Ch] +
test edi edi +
jz loc_44CF88  +
mov ebx [esp+24h+var_10] +
mov dword ptr [esi+24h] 0 +
push edi  +
push esi  +
test ebx ebx +
jz loc_44CF65  +
call loc_44BED0  +
jmp loc_44CF6A  +
call loc_44D5B0  +
add esp 8 +
push offset asc_4BECCC  +
push 1  +
push ebp  +
call sub_460010  +
mov edi [edi+18h] +
add esp 0Ch +
test edi edi +
jnz loc_44CF51  +
mov ebx [esp+24h+arg_4] +
cmp [esp+24h+var_C] 0 +
jz loc_44CFAD  +
cmp [esp+24h+arg_0] 0 +
jnz loc_44CFAD  +
push esi  +
call sub_44DDD0  +
mov eax [esp+28h+var_8] +
add esp 4 +
mov [esi+74h] eax +
mov eax [esp+24h+var_4] +
mov [esi+78h] eax +
mov eax [esp+24h+var_14] +
mov [ebx+3Ch] eax +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 14h +
retn   +
***
test ebp ebp +
jz loc_44D10D  +
mov eax [esp+arg_0] +
test eax eax +
jz loc_44D10D  +
push ebx  +
mov ebx [eax+18h] +
mov [esp+4+arg_4] ebx +
test ebx ebx +
jz loc_44D10C  +
push offset aDoctype  +
push 0Ah  +
push ebx  +
call sub_460010  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_460490  +
add esp 14h +
cmp dword ptr [ebp+34h] 0 +
jz loc_44D03D  +
push offset aPublic_1  +
push 8  +
push ebx  +
call sub_460010  +
push dword ptr [ebp+34h]  +
push dword ptr [ebx+10h]  +
call sub_45E1C0  +
push offset asc_4BF8BC  +
push 1  +
push ebx  +
call sub_460010  +
push dword ptr [ebp+38h]  +
push dword ptr [ebx+10h]  +
call sub_45E1C0  +
add esp 28h +
jmp loc_44D05E  +
cmp dword ptr [ebp+38h] 0 +
jz loc_44D05E  +
push offset aSystem_0  +
push 8  +
push ebx  +
call sub_460010  +
push dword ptr [ebp+38h]  +
push dword ptr [ebx+10h]  +
call sub_45E1C0  +
add esp 14h +
cmp dword ptr [ebp+30h] 0 +
jnz loc_44D08F  +
cmp dword ptr [ebp+28h] 0 +
jnz loc_44D08F  +
cmp dword ptr [ebp+2Ch] 0 +
jnz loc_44D08F  +
cmp dword ptr [ebp+24h] 0 +
jnz loc_44D08F  +
cmp dword ptr [ebp+3Ch] 0 +
jnz loc_44D08F  +
push offset asc_4BF8EC  +
push 1  +
push ebx  +
call sub_460010  +
add esp 0Ch +
pop ebx  +
pop ebp  +
retn   +
push offset asc_4BF8F0  +
push 3  +
push ebx  +
call sub_460010  +
mov eax [ebp+24h] +
add esp 0Ch +
test eax eax +
jz loc_44D0BE  +
mov ecx [ebp+20h] +
test ecx ecx +
jz loc_44D0B2  +
cmp [ecx+2Ch] ebp +
jnz loc_44D0BE  +
push eax  +
push dword ptr [ebx+10h]  +
call sub_44CBE0  +
add esp 8 +
mov ecx [esp+4+arg_0] +
push esi  +
push edi  +
mov ebx [ecx+28h] +
mov edi [ecx+24h] +
mov esi [ecx+1Ch] +
mov dword ptr [ecx+28h] 0 +
mov dword ptr [ecx+24h] 0FFFFFFFFh +
mov eax [ebp+20h] +
mov [ecx+1Ch] eax +
push dword ptr [ebp+0Ch]  +
push ecx  +
call sub_44DAB0  +
mov eax [esp+14h+arg_0] +
push offset asc_4BF8F4  +
push 2  +
push [esp+1Ch+arg_4]  +
mov [eax+28h] ebx +
mov [eax+24h] edi +
mov [eax+1Ch] esi +
call sub_460010  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ecx  +
mov ecx [esp+14h] +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
mov ebp [esp+14h] +
mov ecx [ecx] +
push esi  +
mov esi [esp+14h] +
add ecx ebx +
mov ebp [ebp+0] +
add ebp esi +
mov [esp+0Ch] esi +
mov [esp+1Ch] ebx +
mov [esp+14h] ecx +
push edi  +
cmp ebx ecx +
jnb loc_44D343  +
mov edi ecx +
mov eax ecx +
sub edi ebx +
cmp esi ebp +
jnb loc_44D343  +
mov cl [ebx] +
cmp cl 3Ch +
jnz loc_44D176  +
mov eax ebp +
sub eax esi +
cmp eax 4 +
jl loc_44D343  +
mov eax [esp+18h] +
mov dword ptr [esi] 3B746C26h +
add esi 4 +
jmp loc_44D339  +
cmp cl 3Eh +
jnz loc_44D19A  +
mov eax ebp +
sub eax esi +
cmp eax 4 +
jl loc_44D343  +
mov eax [esp+18h] +
mov dword ptr [esi] 3B746726h +
add esi 4 +
jmp loc_44D339  +
cmp cl 26h +
jnz loc_44D1C2  +
mov eax ebp +
sub eax esi +
cmp eax 5 +
jl loc_44D343  +
mov eax [esp+18h] +
mov dword ptr [esi] 706D6126h +
mov byte ptr [esi+4] 3Bh +
add esi 5 +
jmp loc_44D339  +
cmp cl 20h +
jb loc_44D1D0  +
cmp cl 80h +
jb loc_44D336  +
cmp cl 0Ah +
jz loc_44D336  +
cmp cl 9 +
jz loc_44D336  +
cmp cl 80h +
jb loc_44D304  +
mov eax ebp +
sub eax esi +
cmp eax 0Bh +
jl loc_44D343  +
cmp cl 0C0h +
jb loc_44D35F  +
cmp cl 0E0h +
jnb loc_44D229  +
cmp edi 2 +
jl loc_44D343  +
movzx eax byte ptr [ebx+1] +
add ebx 2 +
movzx ecx cl +
and eax 3Fh +
and ecx 1Fh +
shl ecx 6 +
or ecx eax +
sub edi 2 +
jmp loc_44D29B  +
cmp cl 0F0h +
jnb loc_44D25D  +
cmp edi 3 +
jl loc_44D343  +
movzx eax byte ptr [ebx+1] +
movzx ecx cl +
and eax 3Fh +
and ecx 0Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl ecx 6 +
and eax 3Fh +
or ecx eax +
add ebx 3 +
sub edi 3 +
jmp loc_44D29B  +
cmp cl 0F8h +
jnb loc_44D2B7  +
cmp edi 4 +
jl loc_44D343  +
movzx eax byte ptr [ebx+1] +
movzx ecx cl +
and eax 3Fh +
and ecx 7 +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [ebx+2] +
shl ecx 6 +
and eax 3Fh +
or ecx eax +
movzx eax byte ptr [ebx+3] +
shl ecx 6 +
and eax 3Fh +
or ecx eax +
add ebx 4 +
sub edi 4 +
cmp ecx 100h +
jge loc_44D2CD  +
cmp ecx 9 +
jl loc_44D2AD  +
cmp ecx 0Ah +
jle loc_44D2F2  +
cmp ecx 0Dh +
jz loc_44D2F2  +
cmp ecx 20h +
jge loc_44D2F2  +
push 0  +
push 0  +
push 579h  +
call sub_44DEC0  +
add esp 0Ch +
jmp loc_44D38C  +
cmp ecx 0D7FFh +
jle loc_44D2F2  +
cmp ecx 0E000h +
jl loc_44D2E5  +
cmp ecx 0FFFDh +
jle loc_44D2F2  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
ja loc_44D2B7  +
push ecx  +
push esi  +
call sub_44E000  +
mov esi eax +
add esp 8 +
mov eax [esp+18h] +
jmp loc_44D33B  +
cmp cl 9 +
jb loc_44D30E  +
cmp cl 0Ah +
jbe loc_44D318  +
cmp cl 0Dh +
jz loc_44D318  +
cmp cl 20h +
jb loc_44D372  +
mov eax ebp +
sub eax esi +
cmp eax 6 +
jl loc_44D343  +
movzx eax cl +
push eax  +
push esi  +
call sub_44E000  +
mov esi eax +
add esp 8 +
mov eax [esp+18h] +
jmp loc_44D339  +
mov [esi] cl +
inc esi  +
inc ebx  +
dec edi  +
cmp ebx eax +
jb loc_44D148  +
mov ecx [esp+1Ch] +
sub esi [esp+10h] +
sub ebx [esp+20h] +
xor eax eax +
pop edi  +
mov [ecx] esi +
mov ecx [esp+20h] +
pop esi  +
pop ebp  +
mov [ecx] ebx +
pop ebx  +
pop ecx  +
retn   +
***
push 0  +
push 0  +
push 578h  +
call sub_44DEC0  +
add esp 0Ch +
jmp loc_44D38C  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aXmlescapeentit  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 8 +
inc ebx  +
mov eax [esp+1Ch] +
sub esi [esp+10h] +
sub ebx [esp+20h] +
pop edi  +
mov [eax] esi +
mov eax [esp+20h] +
pop esi  +
pop ebp  +
mov [eax] ebx +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
push edi  +
mov edi [esp+4+arg_0] +
test edi edi +
jnz loc_44D3C8  +
test esi esi +
jnz loc_44D3CC  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
test esi esi +
jz loc_44D40A  +
push offset aW3cDtdXhtml1_0  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44D3E6  +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
push offset aW3cDtdXhtml1_1  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44D3DE  +
push offset aW3cDtdXhtml1_2  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44D3DE  +
test edi edi +
jz loc_44D444  +
push offset aHttpWww_w3_o_1  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44D3DE  +
push offset aHttpWww_w3_o_2  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44D3DE  +
push offset aHttpWww_w3_o_3  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44D3DE  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test eax eax +
jz loc_44D4A6  +
mov esi [esp+4+arg_8] +
test esi esi +
jz loc_44D4A6  +
push edi  +
push eax  +
call sub_45DB00  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44D477  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push [esp+8+arg_10]  +
push [esp+0Ch+arg_C]  +
push esi  +
push [esp+14h+arg_4]  +
push edi  +
call sub_44CC10  +
push edi  +
mov esi eax +
call sub_45D630  +
add esp 18h +
or eax 0FFFFFFFFh +
cmp esi 7FFFFFFFh +
cmovg esi eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
sub esp 84h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+84h+var_4] eax +
mov eax [esp+84h+arg_14] +
push ebx  +
mov ebx [esp+88h+arg_0] +
push ebp  +
mov ebp [esp+8Ch+arg_4] +
push edi  +
mov edi [esp+90h+arg_8] +
mov [esp+90h+var_84] eax +
call sub_4282C0  +
test ebx ebx +
jz loc_44D58C  +
test edi edi +
jz loc_44D58C  +
mov eax [esp+90h+var_84] +
test eax eax +
push esi  +
mov esi offset aUtf8 +
push 7Ch  +
cmovnz esi eax +
lea eax [esp+98h+var_80] +
push 0  +
push eax  +
call sub_48CF40  +
mov eax [esp+0A0h+arg_C] +
mov [esp+0A0h+var_5C] eax +
xor eax eax +
cmp [esp+0A0h+arg_10] eax +
mov [esp+0A0h+var_64] ebp +
setnz al  +
mov [esp+0A0h+var_68] ebx +
mov [esp+0A0h+var_58] eax +
lea eax [esp+0A0h+var_80] +
push eax  +
mov [esp+0A4h+var_70] esi +
call sub_44DE10  +
or [esp+0A4h+var_60] 20h +
push ebp  +
call sub_4231C0  +
add esp 14h +
pop esi  +
test eax eax +
jz loc_44D57E  +
push dword ptr [eax+34h]  +
push dword ptr [eax+38h]  +
call sub_44D3B0  +
add esp 8 +
test eax eax +
js loc_44D57E  +
jz loc_44D57E  +
lea eax [esp+90h+var_80] +
push edi  +
push eax  +
call loc_44BED0  +
jmp loc_44D589  +
lea eax [esp+90h+var_80] +
push edi  +
push eax  +
call loc_44D5B0  +
add esp 8 +
mov ecx [esp+90h+var_4] +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 84h +
retn   +
***
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_44D984  +
mov eax [edi+4] +
push ebx  +
mov ebx [esp+0Ch] +
push esi  +
mov esi [ebx+18h] +
cmp eax 13h +
jz loc_44D982  +
cmp eax 14h +
jz loc_44D982  +
cmp eax 9 +
jz loc_44DA97  +
cmp eax 0Dh +
jz loc_44DA97  +
mov ecx [ebx+20h] +
test cl 10h +
jz loc_44D603  +
push edi  +
push ebx  +
call loc_44BED0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 12h +
jz loc_44D61A  +
mov edx [edi+20h] +
test edx edx +
jz loc_44D61A  +
cmp dword ptr [edx+4] 0Dh +
jnz loc_44D61A  +
test cl 20h +
jz loc_44D61F  +
test cl 40h +
jz loc_44D62D  +
push edi  +
push ebx  +
call sub_44B940  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 0Eh +
jnz loc_44D640  +
push edi  +
push ebx  +
call sub_44CFC0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 0Bh +
jnz loc_44D655  +
push dword ptr [edi+0Ch]  +
push ebx  +
call sub_44DAB0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 0Fh +
jnz loc_44D66A  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CB80  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 10h +
jnz loc_44D67F  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CB50  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 11h +
jnz loc_44D694  +
push edi  +
push dword ptr [esi+10h]  +
call sub_44CBB0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 3 +
jnz loc_44D6CC  +
mov eax [edi+28h] +
test eax eax +
jz loc_44D982  +
cmp dword ptr [edi+8] offset aTextnoenc +
jz loc_44D6BE  +
push dword ptr [ebx+74h]  +
push eax  +
push esi  +
call sub_4601C0  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push eax  +
push esi  +
call sub_460490  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 7 +
jnz loc_44D767  +
cmp dword ptr [edi+28h] 0 +
push offset a?_0  +
push 2  +
push esi  +
jz loc_44D731  +
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
add esp 14h +
cmp dword ptr [edi+28h] 0 +
jz loc_44D753  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44D716  +
push 0  +
push ebx  +
call loc_44DD60  +
add esp 8 +
push dword ptr [edi+28h]  +
push esi  +
call sub_460490  +
jmp loc_44D750  +
push offset asc_4BF8BC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
push dword ptr [edi+28h]  +
push esi  +
call sub_460490  +
jmp loc_44D750  +
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
add esp 14h +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44D753  +
push 0  +
push ebx  +
call loc_44DD60  +
add esp 8 +
push offset a?_1  +
push 2  +
push esi  +
call sub_460010  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 8 +
jnz loc_44D7A0  +
cmp dword ptr [edi+28h] 0 +
jz loc_44D982  +
push offset asc_4BF90C  +
push 4  +
push esi  +
call sub_460010  +
push dword ptr [edi+28h]  +
push esi  +
call sub_460490  +
push offset asc_4BF914  +
push 3  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 5 +
jnz loc_44D7CF  +
push offset asc_4BF898  +
push 1  +
push esi  +
call sub_460010  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
push offset asc_4BF89C  +
push 1  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 4 +
jnz loc_44D883  +
mov edi [edi+28h] +
test edi edi +
jz loc_44D86F  +
cmp byte ptr [edi] 0 +
jz loc_44D86F  +
mov al [edi] +
mov ebx edi +
test al al +
jz loc_44D982  +
cmp al 5Dh +
jnz loc_44D837  +
cmp [edi+1] al +
jnz loc_44D837  +
cmp byte ptr [edi+2] 3Eh +
lea eax [edi+2] +
jnz loc_44D837  +
push offset aCdata  +
push 9  +
push esi  +
mov edi eax +
call sub_460010  +
mov eax edi +
push ebx  +
sub eax ebx +
push eax  +
push esi  +
call sub_460010  +
push offset asc_4BF928  +
push 3  +
push esi  +
call sub_460010  +
add esp 24h +
mov ebx edi +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_44D7F8  +
cmp ebx edi +
jz loc_44D982  +
push offset aCdata  +
push 9  +
push esi  +
call sub_460010  +
push ebx  +
push esi  +
call sub_460490  +
push offset asc_4BF928  +
push 3  +
push esi  +
call sub_460010  +
add esp 20h +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push offset aCdata_0  +
push 0Ch  +
push esi  +
call sub_460010  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 2 +
jnz loc_44D896  +
push edi  +
push ebx  +
call sub_44C620  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp eax 12h +
jnz loc_44D8AA  +
push ebx  +
push edi  +
push esi  +
call sub_44DB30  +
add esp 0Ch +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push ebp  +
mov ebp [ebx+28h] +
cmp ebp 1 +
jnz loc_44D8E2  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_44D8E2  +
push offset asc_4BF92C  +
push 1  +
push esi  +
call sub_460010  +
mov eax [edi+24h] +
add esp 0Ch +
test eax eax +
jz loc_44D917  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44D917  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
mov eax [edi+30h] +
add esp 8 +
test eax eax +
jz loc_44D934  +
push eax  +
push ebx  +
call sub_44DC90  +
add esp 8 +
mov eax [edi+2Ch] +
test eax eax +
jz loc_44D945  +
push eax  +
push ebx  +
call sub_44C6C0  +
add esp 8 +
cmp dword ptr [edi+4] 1 +
jz loc_44D951  +
cmp dword ptr [edi+28h] 0 +
jnz loc_44D986  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_44D986  +
test byte ptr [ebx+20h] 4 +
jnz loc_44D986  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44D96E  +
push 0  +
push ebx  +
call loc_44DD60  +
add esp 8 +
push offset asc_4BF930  +
push 2  +
push esi  +
call sub_460010  +
add esp 0Ch +
mov [ebx+28h] ebp +
pop ebp  +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
cmp dword ptr [ebx+28h] 2 +
jnz loc_44D997  +
push 1  +
push ebx  +
call loc_44DD60  +
add esp 8 +
push offset asc_4BF8EC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [edi+4] 1 +
jz loc_44D9C1  +
mov eax [edi+28h] +
test eax eax +
jz loc_44D9C1  +
push dword ptr [ebx+74h]  +
push eax  +
push esi  +
call sub_4601C0  +
add esp 0Ch +
cmp dword ptr [edi+0Ch] 0 +
jz loc_44DA2D  +
cmp dword ptr [ebx+28h] 1 +
jnz loc_44D9DD  +
push offset asc_4BECCC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
mov eax [ebx+24h] +
test eax eax +
js loc_44D9E8  +
inc eax  +
mov [ebx+24h] eax +
push dword ptr [edi+0Ch]  +
push ebx  +
call sub_44DAB0  +
mov eax [ebx+24h] +
add esp 8 +
test eax eax +
jle loc_44D9FF  +
dec eax  +
mov [ebx+24h] eax +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44DA2D  +
cmp dword ptr [ebx+28h] 1 +
jnz loc_44DA2D  +
mov ecx [ebx+24h] +
lea eax [ebx+2Ch] +
cmp ecx [ebx+6Ch] +
push eax  +
cmovg ecx [ebx+6Ch] +
mov eax [ebx+70h] +
imul eax ecx +
push eax  +
push esi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BF934  +
push 2  +
push esi  +
call sub_460010  +
mov eax [edi+24h] +
add esp 0Ch +
test eax eax +
jz loc_44DA62  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44DA62  +
push eax  +
push esi  +
call sub_460490  +
push offset word_4BC858  +
push 1  +
push esi  +
call sub_460010  +
add esp 14h +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
add esp 8 +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44DA7F  +
push 0  +
push ebx  +
call loc_44DD60  +
add esp 8 +
push offset asc_4BF8EC  +
push 1  +
push esi  +
call sub_460010  +
add esp 0Ch +
mov [ebx+28h] ebp +
pop ebp  +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push edi  +
push ebx  +
call sub_44CCE0  +
add esp 8 +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
test esi esi +
jz loc_44DB2B  +
push ebx  +
push edi  +
mov edi [esp+8+arg_0] +
mov ebx [edi+18h] +
cmp dword ptr [edi+28h] 1 +
jnz loc_44DB02  +
call sub_458420  +
cmp dword ptr [eax] 0 +
jz loc_44DB02  +
mov eax [esi+4] +
cmp eax 1 +
jz loc_44DAE4  +
cmp eax 8 +
jz loc_44DAE4  +
cmp eax 7 +
jnz loc_44DB02  +
mov ecx [edi+24h] +
lea eax [edi+2Ch] +
cmp ecx [edi+6Ch] +
push eax  +
cmovg ecx [edi+6Ch] +
mov eax [edi+70h] +
imul eax ecx +
push eax  +
push ebx  +
call sub_460010  +
add esp 0Ch +
push esi  +
push edi  +
call loc_44D5B0  +
add esp 8 +
cmp dword ptr [edi+28h] 1 +
jnz loc_44DB22  +
push offset asc_4BECCC  +
push 1  +
push ebx  +
call sub_460010  +
add esp 0Ch +
mov esi [esi+18h] +
test esi esi +
jnz loc_44DAC2  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
test esi esi +
jz loc_44DBEA  +
push edi  +
mov edi [esp+4+arg_0] +
test edi edi +
jz loc_44DBE9  +
cmp dword ptr [esi+4] 12h +
jnz loc_44DBE9  +
cmp dword ptr [esi+8] 0 +
jz loc_44DBE9  +
push offset aXml_1  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44DBE9  +
mov eax [esp+4+arg_8] +
test eax eax +
jz loc_44DB8D  +
cmp dword ptr [eax+28h] 2 +
jnz loc_44DB8D  +
push 2  +
push eax  +
call loc_44DD60  +
add esp 8 +
jmp loc_44DB9D  +
push offset asc_4BF8BC  +
push 1  +
push edi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [esi+0Ch] 0 +
jz loc_44DBBE  +
push offset aXmlns_0  +
push 6  +
push edi  +
call sub_460010  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_460490  +
add esp 14h +
jmp loc_44DBCE  +
push offset aXmlns  +
push 5  +
push edi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BF068  +
push 1  +
push edi  +
call sub_460010  +
push dword ptr [esi+8]  +
push dword ptr [edi+10h]  +
call sub_45E1C0  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_44DC8D  +
push edi  +
mov edi [esp+4+arg_0] +
test edi edi +
jz loc_44DC82  +
cmp dword ptr [esi+4] 12h +
jnz loc_44DC82  +
cmp dword ptr [esi+8] 0 +
jz loc_44DC82  +
push offset aXml_1  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44DC82  +
push offset asc_4BF8BC  +
push 1  +
push edi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [esi+0Ch] 0 +
jz loc_44DC57  +
push offset aXmlns_0  +
push 6  +
push edi  +
call sub_460010  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_460490  +
add esp 14h +
jmp loc_44DC67  +
push offset aXmlns  +
push 5  +
push edi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BF068  +
push 1  +
push edi  +
call sub_460010  +
push dword ptr [esi+8]  +
push dword ptr [edi+10h]  +
call sub_45E1C0  +
add esp 14h +
mov esi [esi] +
test esi esi +
jnz loc_44DC02  +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_44DD59  +
push ebx  +
mov ebx [esp+4+arg_0] +
push edi  +
mov edi [ebx+18h] +
test esi esi +
jz loc_44DD4D  +
test edi edi +
jz loc_44DD4D  +
cmp dword ptr [esi+4] 12h +
jnz loc_44DD4D  +
cmp dword ptr [esi+8] 0 +
jz loc_44DD4D  +
push offset aXml_1  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44DD4D  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_44DCF1  +
push 2  +
push ebx  +
call loc_44DD60  +
add esp 8 +
jmp loc_44DD01  +
push offset asc_4BF8BC  +
push 1  +
push edi  +
call sub_460010  +
add esp 0Ch +
cmp dword ptr [esi+0Ch] 0 +
jz loc_44DD22  +
push offset aXmlns_0  +
push 6  +
push edi  +
call sub_460010  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_460490  +
add esp 14h +
jmp loc_44DD32  +
push offset aXmlns  +
push 5  +
push edi  +
call sub_460010  +
add esp 0Ch +
push offset asc_4BF068  +
push 1  +
push edi  +
call sub_460010  +
push dword ptr [esi+8]  +
push dword ptr [edi+10h]  +
call sub_45E1C0  +
add esp 14h +
mov esi [esi] +
test esi esi +
jnz loc_44DCA3  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44DDCE  +
mov eax [esi+18h] +
test eax eax +
jz loc_44DDCE  +
push ebx  +
push edi  +
push offset asc_4BECCC  +
push 1  +
push eax  +
call sub_460010  +
mov ecx [esi+24h] +
add esp 0Ch +
mov ebx [esp+14h] +
xor edi edi +
lea eax [ecx+ebx] +
test eax eax +
jle loc_44DDCC  +
mov edx [esi+6Ch] +
push ebp  +
lea ebp [esi+2Ch] +
mov eax [esp+arg_0] +
push esi  +
mov esi [eax+18h] +
push esi  +
call sub_45FF00  +
push dword ptr [esi+0Ch]  +
call sub_461820  +
push dword ptr [esi+14h]  +
call sub_45DAC0  +
add esp 0Ch +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+14h] 0 +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_44DEB5  +
cmp dword ptr [esi+10h] 0 +
jnz loc_44DE30  +
cmp dword ptr [esi+74h] 0 +
jnz loc_44DE30  +
mov dword ptr [esi+74h] offset loc_44D110 +
push edi  +
call sub_4585C0  +
push dword ptr [eax]  +
call sub_44E660  +
add esp 4 +
mov edi eax +
call sub_4585C0  +
cmp dword ptr [eax] 0 +
jz loc_44DE96  +
test edi edi +
jz loc_44DE96  +
mov eax 3Ch +
mov [esi+70h] edi +
cdq   +
idiv  edi +
xor edi edi +
mov [esi+6Ch] eax +
test eax eax +
jle loc_44DE88  +
call sub_4585C0  +
push dword ptr [esi+70h]  +
push dword ptr [eax]  +
mov eax [esi+70h] +
imul eax edi +
add eax 2Ch +
add eax esi +
push eax  +
call loc_48C9C0  +
inc edi  +
add esp 0Ch +
cmp edi [esi+6Ch] +
jl loc_44DE64  +
mov eax [esi+70h] +
imul eax [esi+6Ch] +
mov byte ptr [eax+esi+2Ch] 0 +
jmp loc_44DEA6  +
push 3Dh  +
lea eax [esi+2Ch] +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
call sub_458540  +
pop edi  +
cmp dword ptr [eax] 0 +
jz loc_44DEB5  +
or dword ptr [esi+20h] 4 +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
lea eax [ecx-578h] +
cmp eax 3 +
ja loc_44DF3E  +
jmp ds:off_44DF58[eax*4]  +
push [esp+arg_8]  +
mov eax offset aStringIsNotInU +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 7  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aInvalidCharact +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 7  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aUnknownEncod_0 +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 7  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aDocumentHasNoD +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 7  +
call sub_43AAC0  +
add esp 14h +
retn   +
push [esp+arg_8]  +
mov eax offset aUnexpectedErro +
push eax  +
push [esp+8+arg_4]  +
push ecx  +
push 7  +
call sub_43AAC0  +
add esp 14h +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
push edi  +
mov edi [esp+8+arg_4] +
mov esi [eax+18h] +
test edi edi +
jz loc_44DFF3  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_44DFF3  +
cmp dword ptr [esi+14h] 0 +
jnz loc_44DFF3  +
push edi  +
call loc_462010  +
add esp 4 +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_44DFB9  +
push edi  +
push offset aUnknownEncod_0  +
push eax  +
push 57Bh  +
push 7  +
call sub_43AAC0  +
add esp 14h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
call sub_45D830  +
mov [esi+14h] eax +
test eax eax +
jnz loc_44DFE8  +
push dword ptr [esi+0Ch]  +
call sub_461820  +
push offset aCreatingEncodi  +
push 0  +
push 0  +
push 2  +
push 7  +
call sub_43AAC0  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
push 1  +
push esi  +
call sub_461BD0  +
add esp 8 +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov word ptr [eax] 2326h +
mov byte ptr [eax+2] 78h +
add eax 3 +
cmp ecx 10h +
jl loc_44E04E  +
cmp ecx 100h +
jge loc_44E024  +
inc eax  +
jmp loc_44E04E  +
cmp ecx 1000h +
jge loc_44E031  +
add eax 2 +
jmp loc_44E04E  +
cmp ecx 10000h +
jge loc_44E03E  +
add eax 3 +
jmp loc_44E04E  +
cmp ecx 100000h +
jge loc_44E04B  +
add eax 4 +
jmp loc_44E04E  +
add eax 5 +
push esi  +
lea esi [eax+1] +
test ecx ecx +
jle loc_44E0BD  +
mov edx ecx +
and edx 0Fh +
cmp edx 0Fh +
ja loc_44E0B2  +
jmp ds:off_44E0C8[edx*4]  +
mov byte ptr [eax] 31h +
jmp loc_44E0B5  +
mov byte ptr [eax] 32h +
jmp loc_44E0B5  +
mov byte ptr [eax] 33h +
jmp loc_44E0B5  +
mov byte ptr [eax] 34h +
jmp loc_44E0B5  +
mov byte ptr [eax] 35h +
jmp loc_44E0B5  +
mov byte ptr [eax] 36h +
jmp loc_44E0B5  +
mov byte ptr [eax] 37h +
jmp loc_44E0B5  +
mov byte ptr [eax] 38h +
jmp loc_44E0B5  +
mov byte ptr [eax] 39h +
jmp loc_44E0B5  +
mov byte ptr [eax] 41h +
jmp loc_44E0B5  +
mov byte ptr [eax] 42h +
jmp loc_44E0B5  +
mov byte ptr [eax] 43h +
jmp loc_44E0B5  +
mov byte ptr [eax] 44h +
jmp loc_44E0B5  +
mov byte ptr [eax] 45h +
jmp loc_44E0B5  +
mov byte ptr [eax] 46h +
jmp loc_44E0B5  +
mov byte ptr [eax] 30h +
sar ecx 4 +
dec eax  +
test ecx ecx +
jg loc_44E056  +
mov word ptr [esi] 3Bh +
lea eax [esi+1] +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
mov eax ecx +
test ecx ecx +
jnz loc_44E11B  +
retn   +
cmp byte ptr [ecx] 0 +
jz loc_44E126  +
inc eax  +
cmp byte ptr [eax] 0 +
jnz loc_44E120  +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E140  +
add esp 8 +
retn   +
***
mov edi [esp+arg_0] +
test edi edi +
jz loc_44E199  +
mov esi [esp+arg_4] +
test esi esi +
js loc_44E199  +
lea eax [esi+1] +
push ebx  +
push eax  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_44E176  +
push eax  +
push eax  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
xor edx edx +
test esi esi +
jle loc_44E18F  +
mov ecx ebx +
sub edi ebx +
mov al [edi+ecx] +
mov [ecx] al +
test al al +
jz loc_44E193  +
inc edx  +
inc ecx  +
cmp edx esi +
jl loc_44E180  +
mov byte ptr [ebx+esi] 0 +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
xor eax eax +
test esi esi +
jz loc_44E237  +
mov dl [esi] +
test dl dl +
jz loc_44E232  +
js loc_44E1BA  +
inc eax  +
jmp loc_44E22B  +
mov cl dl +
and cl 0E0h +
cmp cl 0C0h +
jnz loc_44E1D5  +
mov cl [eax+esi+1] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
add eax 2 +
jmp loc_44E22B  +
mov cl dl +
and cl 0F0h +
cmp cl 0E0h +
jnz loc_44E1FC  +
mov cl [eax+esi+1] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
mov cl [eax+esi+2] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
add eax 3 +
jmp loc_44E22B  +
and dl 0F8h +
cmp dl 0F0h +
jnz loc_44E239  +
mov cl [eax+esi+1] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
mov cl [eax+esi+2] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
mov cl [eax+esi+3] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E239  +
add eax 4 +
mov dl [eax+esi] +
test dl dl +
jnz loc_44E1B5  +
mov eax 1 +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
cmp edx ecx +
jnz loc_44E382  +
mov eax 1 +
retn   +
test edx edx +
jnz loc_44E389  +
xor eax eax +
retn   +
test ecx ecx +
jz loc_44E386  +
push ebx  +
nop   +
mov al [edx] +
lea edx [edx+1] +
mov bl [ecx] +
cmp al bl +
jnz loc_44E3A7  +
inc ecx  +
test bl bl +
jnz loc_44E390  +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
test edi edi +
jz loc_44E3F6  +
mov eax [esp+arg_8] +
test eax eax +
jz loc_44E3F6  +
push esi  +
mov esi [esp+4+arg_4] +
lea ecx [esp+4+arg_C] +
push ecx  +
push 0  +
push eax  +
push esi  +
push edi  +
call sub_41E490  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 2 +
push ecx  +
call sub_49A7FA  +
add esp 1Ch +
mov byte ptr [edi+esi-1] 0 +
or ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
pop esi  +
pop edi  +
retn   +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jnz loc_44E419  +
push dword ptr [esp+0Ch]  +
push dword ptr [esp+0Ch]  +
call sub_44E370  +
add esp 8 +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_44E42A  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_44E42E  +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
nop   +
mov al [edx] +
inc edx  +
mov bl [ecx] +
cmp al bl +
jnz loc_44E468  +
inc ecx  +
test bl bl +
jz loc_44E443  +
cmp byte ptr [edx] 0 +
jnz loc_44E430  +
mov al [ecx] +
inc ecx  +
cmp al 3Ah +
jnz loc_44E468  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
cmp edx ecx +
jnz loc_44E47F  +
xor eax eax +
retn   +
test edx edx +
jnz loc_44E487  +
or eax 0FFFFFFFFh +
retn   +
test ecx ecx +
jnz loc_44E48F  +
lea eax [ecx+1] +
retn   +
push ebx  +
push esi  +
movzx eax byte ptr [edx] +
lea edx [edx+1] +
mov bl [ecx] +
movzx esi ds:byte_4BFB00[eax] +
movzx eax bl +
movzx eax ds:byte_4BFB00[eax] +
sub esi eax +
jnz loc_44E4B8  +
inc ecx  +
test bl bl +
jnz loc_44E491  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
test esi esi +
jnz loc_44E4CD  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jnz loc_44E4DB  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
mov al [ebx] +
push edi  +
xor edi edi +
test al al +
jz loc_44E52E  +
inc edi  +
cmp byte ptr [edi+ebx] 0 +
jnz loc_44E4E4  +
test edi edi +
jz loc_44E52E  +
mov cl [esi] +
test cl cl +
jz loc_44E528  +
movzx eax al +
mov dl ds:byte_4BFB00[eax] +
mov byte ptr [esp+8+arg_0] dl +
movzx eax cl +
cmp ds:byte_4BFB00[eax] dl +
jnz loc_44E520  +
push edi  +
push ebx  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jz loc_44E52E  +
mov dl byte ptr [esp+8+arg_0] +
mov cl [esi+1] +
inc esi  +
test cl cl +
jnz loc_44E502  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax ecx +
test ecx ecx +
jnz loc_44E54F  +
mov eax [esp+arg_0] +
retn   +
mov edx [esp+arg_0] +
test edx edx +
jnz loc_44E561  +
push ecx  +
call sub_44E600  +
add esp 4 +
retn   +
cmp byte ptr [ecx] 0 +
jz loc_44E56C  +
inc eax  +
cmp byte ptr [eax] 0 +
jnz loc_44E566  +
sub eax ecx +
push eax  +
push ecx  +
push edx  +
call sub_44E6F0  +
add esp 0Ch +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_44E59E  +
mov cl [eax] +
test cl cl +
jz loc_44E59E  +
mov dl [esp+arg_4] +
cmp cl dl +
jz locret_44E5A0  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_44E592  +
xor eax eax +
retn   +
***
mov ecx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
cmp esi ecx +
jnz loc_44E5C1  +
xor eax eax +
pop esi  +
retn   +
test esi esi +
jnz loc_44E5CA  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
test ecx ecx +
jnz loc_44E5D3  +
lea eax [ecx+1] +
pop esi  +
retn   +
push ebx  +
mov bl [ecx] +
lea esi [esi+1] +
movzx edx byte ptr [esi-1] +
movzx eax bl +
sub edx eax +
jnz loc_44E5EE  +
inc ecx  +
test bl bl +
jnz loc_44E5D4  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
pop ebx  +
mov eax edx +
pop esi  +
retn   +
***
push esi  +
mov esi ebx +
test ebx ebx +
jnz loc_44E611  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
cmp byte ptr [ebx] 0 +
jz loc_44E61C  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_44E616  +
sub esi ebx +
push edi  +
js loc_44E63E  +
lea eax [esi+1] +
push eax  +
call off_4EE2EC  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44E646  +
push eax  +
push eax  +
call sub_45BA50  +
add esp 8 +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push esi  +
push ebx  +
push edi  +
call loc_48C9C0  +
add esp 0Ch +
mov byte ptr [edi+esi] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jnz loc_44E66B  +
retn   +
cmp [eax] cl +
jz loc_44E679  +
nop   +
lea eax [eax+1] +
inc ecx  +
cmp byte ptr [eax] 0 +
jnz loc_44E670  +
mov eax ecx +
retn   +
***
mov edx [esp+arg_8] +
test edx edx +
jg loc_44E68B  +
xor eax eax +
retn   +
mov ecx [esp+arg_4] +
push edi  +
mov edi [esp+4+arg_0] +
cmp edi ecx +
jnz loc_44E69C  +
xor eax eax +
pop edi  +
retn   +
test edi edi +
jnz loc_44E6A5  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
test ecx ecx +
jnz loc_44E6AE  +
lea eax [ecx+1] +
pop edi  +
retn   +
push ebx  +
push esi  +
movzx eax byte ptr [edi] +
lea edi [edi+1] +
mov bl [ecx] +
movzx esi ds:byte_4BFB00[eax] +
movzx eax bl +
movzx eax ds:byte_4BFB00[eax] +
sub esi eax +
jnz loc_44E6DD  +
sub edx 1 +
jz loc_44E6DD  +
inc ecx  +
test bl bl +
jnz loc_44E6B0  +
pop esi  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push edi  +
test ebx ebx +
jz loc_44E76C  +
mov edi [esp+4+arg_8] +
test edi edi +
jz loc_44E76C  +
jns loc_44E709  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
mov esi [esp+8+arg_0] +
test esi esi +
jnz loc_44E720  +
push edi  +
push ebx  +
call sub_44E8A0  +
add esp 8 +
pop esi  +
pop edi  +
pop ebx  +
retn   +
push ebp  +
push esi  +
call sub_44E660  +
mov [esp+10h+arg_4] eax +
inc eax  +
add eax edi +
push eax  +
push esi  +
call off_4EE2F0  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jnz loc_44E750  +
push eax  +
push eax  +
call sub_45BA50  +
add esp 8 +
mov eax esi +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov esi [esp+0Ch+arg_4] +
push edi  +
add esi ebp +
push ebx  +
push esi  +
call loc_48C9C0  +
add esp 0Ch +
mov byte ptr [esi+edi] 0 +
mov eax ebp +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov eax [esp+4+arg_0] +
pop edi  +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
push edi  +
mov edi [esp+14h] +
test edi edi +
jns loc_44E7A7  +
xor edi edi +
test ebx ebx +
jz loc_44E82B  +
cmp byte ptr [ebx] 0 +
jz loc_44E7A7  +
inc edi  +
cmp byte ptr [edi+ebx] 0 +
jnz loc_44E7A0  +
test ebx ebx +
jz loc_44E82B  +
test edi edi +
jz loc_44E82B  +
push ebp  +
mov ebp [esp+10h] +
test ebp ebp +
jnz loc_44E7CA  +
push edi  +
push ebx  +
call sub_44E8A0  +
add esp 8 +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp byte ptr [ebp+0] 0 +
jz loc_44E7DA  +
inc esi  +
cmp byte ptr [esi+ebp] 0 +
jnz loc_44E7D3  +
lea eax [edi+1] +
add eax esi +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esp+1Ch] eax +
test eax eax +
jnz loc_44E807  +
push eax  +
push eax  +
call sub_45BA50  +
push esi  +
push ebp  +
call sub_44E8A0  +
add esp 10h +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
push ebp  +
push eax  +
call loc_48C9C0  +
add esi [esp+28h] +
push edi  +
push ebx  +
push esi  +
call loc_48C9C0  +
mov eax [esp+34h] +
add esp 18h +
mov byte ptr [esi+edi] 0 +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
push dword ptr [esp+0Ch]  +
call sub_44E600  +
add esp 4 +
pop edi  +
pop ebx  +
retn   +
***
test edi edi +
jg loc_44E84D  +
xor eax eax +
pop edi  +
retn   +
mov ecx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
cmp esi ecx +
jnz loc_44E85F  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
test esi esi +
jnz loc_44E869  +
pop esi  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
test ecx ecx +
jnz loc_44E873  +
pop esi  +
lea eax [ecx+1] +
pop edi  +
retn   +
push ebx  +
mov bl [ecx] +
lea esi [esi+1] +
movzx edx byte ptr [esi-1] +
movzx eax bl +
sub edx eax +
jnz loc_44E894  +
sub edi 1 +
jz loc_44E894  +
inc ecx  +
test bl bl +
jnz loc_44E874  +
pop ebx  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
pop ebx  +
pop esi  +
mov eax edx +
pop edi  +
retn   +
***
cmp [esp+arg_0] 0 +
push esi  +
jz loc_44E8EA  +
mov esi [esp+4+arg_4] +
test esi esi +
js loc_44E8EA  +
lea eax [esi+1] +
push edi  +
push eax  +
call off_4EE2EC  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_44E8D3  +
push eax  +
push eax  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push esi  +
push [esp+0Ch+arg_0]  +
push edi  +
call loc_48C9C0  +
add esp 0Ch +
mov byte ptr [edi+esi] 0 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jnz loc_44E8FD  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jnz loc_44E90B  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
mov cl [ebx] +
push edi  +
xor edi edi +
test cl cl +
jz loc_44E948  +
inc edi  +
cmp byte ptr [edi+ebx] 0 +
jnz loc_44E914  +
test edi edi +
jz loc_44E948  +
mov al [esi] +
test al al +
jz loc_44E942  +
cmp al cl +
jnz loc_44E93A  +
push edi  +
push ebx  +
push esi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_44E948  +
mov cl [ebx] +
mov al [esi+1] +
inc esi  +
test al al +
jnz loc_44E925  +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
xor esi esi +
test eax eax +
jnz loc_44E960  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov dl [eax] +
test dl dl +
jz loc_44E9BB  +
jns loc_44E9B3  +
mov cl [eax+1] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E95B  +
mov cl dl +
and cl 0E0h +
cmp cl 0E0h +
jnz loc_44E9AE  +
mov cl [eax+2] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E95B  +
mov cl dl +
and cl 0F0h +
cmp cl 0F0h +
jnz loc_44E9A9  +
and dl 0F8h +
cmp dl cl +
jnz loc_44E95B  +
mov cl [eax+3] +
and cl 0C0h +
cmp cl 80h +
jnz loc_44E95B  +
add eax 4 +
jmp loc_44E9B4  +
add eax 3 +
jmp loc_44E9B4  +
add eax 2 +
jmp loc_44E9B4  +
inc eax  +
mov dl [eax] +
inc esi  +
test dl dl +
jnz loc_44E966  +
mov eax esi +
pop esi  +
retn   +
***
push ebp  +
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_44EA39  +
mov ebp [esp+10h] +
test ebp ebp +
jz loc_44EA39  +
push ebx  +
push edi  +
push 1  +
push ebp  +
call sub_44EB00  +
mov bl [esi] +
add esp 8 +
xor edi edi +
mov [esp+14h] eax +
test bl bl +
jz loc_44EA31  +
push eax  +
push ebp  +
push esi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_44EA2A  +
inc esi  +
test bl bl +
jns loc_44EA1D  +
mov al bl +
and al 0C0h +
cmp al 0C0h +
jnz loc_44EA31  +
add bl bl +
jns loc_44EA1D  +
mov al [esi] +
inc esi  +
and al 0C0h +
cmp al 80h +
jnz loc_44EA31  +
add bl bl +
js loc_44EA10  +
mov bl [esi] +
inc edi  +
test bl bl +
jz loc_44EA31  +
mov eax [esp+14h] +
jmp loc_44E9F0  +
***
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
pop edi  +
pop ebx  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
pop esi  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
mov edi [esp+arg_0] +
mov edx [esp+arg_0] +
test edx edx +
jnz loc_44EABB  +
xor eax eax +
retn   +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
js loc_44EAF7  +
jz loc_44EAF3  +
mov al [edx] +
dec esi  +
inc edx  +
test al al +
jz loc_44EAF7  +
jns loc_44EAEF  +
mov cl al +
and cl 0C0h +
cmp cl 0C0h +
jnz loc_44EAF7  +
add al al +
jns loc_44EAEF  +
nop   +
mov cl [edx] +
inc edx  +
and cl 0C0h +
cmp cl 80h +
jnz loc_44EAF7  +
add al al +
js loc_44EAE0  +
test esi esi +
jnz loc_44EAC6  +
mov eax edx +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov edx edi +
test edi edi +
jnz loc_44EB0F  +
xor eax eax +
pop edi  +
retn   +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jg loc_44EB20  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
mov al [edx] +
dec esi  +
test al al +
jz loc_44EB41  +
mov cl al +
inc edx  +
and cl 80h +
jz loc_44EB3D  +
add al al +
jns loc_44EB3D  +
inc edx  +
cmp byte ptr [edx] 0 +
jz loc_44EB3D  +
add al al +
js loc_44EB33  +
test esi esi +
jg loc_44EB20  +
sub edx edi +
pop esi  +
mov eax edx +
pop edi  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jnz loc_44EB5B  +
xor eax eax +
retn   +
***
push edi  +
mov edi [esp+0Ch] +
test edi edi +
js loc_44EB6B  +
cmp dword ptr [esp+10h] 0 +
jge loc_44EB6F  +
xor eax eax +
pop edi  +
retn   +
***
push esi  +
xor esi esi +
test edi edi +
jle loc_44EBA4  +
mov al [edx] +
inc edx  +
test al al +
jz loc_44EBB4  +
jns loc_44EB9F  +
mov cl al +
and cl 0C0h +
cmp cl 0C0h +
jnz loc_44EBB4  +
add al al +
jns loc_44EB9F  +
mov cl [edx] +
inc edx  +
and cl 0C0h +
cmp cl 80h +
jnz loc_44EBB4  +
add al al +
js loc_44EB90  +
inc esi  +
cmp esi edi +
jl loc_44EB76  +
push dword ptr [esp+14h]  +
push edx  +
call sub_44EA40  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
pop esi  +
xor eax eax +
pop edi  +
retn   +
***
cmp dword_4F24AC 0 +
jnz loc_44EBF6  +
call sub_45E8F0  +
mov dword_4F24A8 eax +
test eax eax +
jnz loc_44EBD8  +
retn   +
push eax  +
call sub_45E990  +
push dword_4F24A8  +
mov dword_4F24AC 1 +
call sub_45E9B0  +
add esp 8 +
mov eax 1 +
retn   +
***
xor ecx ecx +
xor edx edx +
cmp [esp+8] ecx +
jnz loc_44EC1F  +
push dword ptr [esp+14h]  +
push dword ptr [esp+14h]  +
push dword ptr [esp+0Ch]  +
call sub_44ED10  +
add esp 0Ch +
retn   +
***
push ebx  +
mov ebx [esp+8] +
push ebp  +
mov ebp [esp+1Ch] +
push esi  +
mov esi [ebx+10h] +
push edi  +
test esi esi +
jz loc_44EC5A  +
lea edi [ebp+1] +
add edi [esp+1Ch] +
mov eax [esi+8] +
sub eax [esi+4] +
cmp eax edi +
ja loc_44ECC1  +
mov eax [esi+0Ch] +
cmp eax ecx +
mov esi [esi] +
cmova ecx eax +
add edx eax +
test esi esi +
jnz loc_44EC40  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_44EC65  +
cmp edx eax +
ja loc_44EC9A  +
mov edi 3E8h +
test ecx ecx +
jz loc_44EC75  +
lea edi ds:0[ecx*4] +
mov eax [esp+1Ch] +
add eax ebp +
lea eax ds:4[eax*4] +
cmp edi eax +
cmovb edi eax +
lea eax [edi+18h] +
push eax  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_44ECA1  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
lea eax [esi+14h] +
mov [esi+0Ch] edi +
mov [esi+4] eax +
lea eax [esi+14h] +
add eax edi +
mov dword ptr [esi+10h] 0 +
mov [esi+8] eax +
mov eax [ebx+10h] +
mov [esi] eax +
mov [ebx+10h] esi +
mov ebx [esp+1Ch] +
mov edi [esi+4] +
push ebx  +
push dword ptr [esp+1Ch]  +
push edi  +
call loc_48C9C0  +
add [esi+4] ebx +
mov eax [esi+4] +
push ebp  +
push dword ptr [esp+30h]  +
mov byte ptr [eax] 3Ah +
inc dword ptr [esi+4]  +
push dword ptr [esi+4]  +
call loc_48C9C0  +
add [esi+4] ebp +
add esp 18h +
mov ecx [esi+4] +
mov eax edi +
pop edi  +
mov byte ptr [ecx] 0 +
inc dword ptr [esi+4]  +
inc dword ptr [esi+10h]  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
xor ecx ecx +
push ebp  +
mov ebp [esp+4+arg_0] +
xor edx edx +
push esi  +
push edi  +
mov esi [ebp+10h] +
test esi esi +
jz loc_44ED41  +
mov eax [esi+8] +
sub eax [esi+4] +
cmp eax ebx +
ja loc_44EDA2  +
mov eax [esi+0Ch] +
cmp eax ecx +
mov esi [esi] +
cmova ecx eax +
add edx eax +
test esi esi +
jnz loc_44ED27  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_44ED53  +
cmp edx eax +
jbe loc_44ED53  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
mov edi 3E8h +
test ecx ecx +
jz loc_44ED63  +
lea edi ds:0[ecx*4] +
lea eax ds:0[ebx*4] +
cmp edi eax +
cmovb edi eax +
lea eax [edi+18h] +
push eax  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_44ED4C  +
lea eax [esi+14h] +
mov [esi+0Ch] edi +
mov [esi+4] eax +
lea eax [edi+14h] +
add eax esi +
mov dword ptr [esi+10h] 0 +
mov [esi+8] eax +
mov eax [ebp+10h] +
mov [esi] eax +
mov [ebp+10h] esi +
mov edi [esi+4] +
push ebx  +
push [esp+10h+arg_4]  +
push edi  +
call loc_48C9C0  +
add [esi+4] ebx +
add esp 0Ch +
mov ecx [esi+4] +
mov eax edi +
pop edi  +
mov byte ptr [ecx] 0 +
inc dword ptr [esi+4]  +
inc dword ptr [esi+10h]  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
push edi  +
test esi esi +
jle loc_44EE1B  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_44EE1B  +
mov ecx [esp+14h] +
xor edx edx +
test esi esi +
jle loc_44EE08  +
movzx eax byte ptr [edx+edi] +
inc edx  +
add eax ecx +
imul ecx eax +
mov eax ecx +
shr eax 6 +
xor ecx eax +
cmp edx esi +
jl loc_44EDF0  +
lea ecx [ecx+ecx*8] +
mov eax ecx +
shr eax 0Bh +
xor eax ecx +
pop edi  +
imul eax eax +
pop esi  +
retn   +
***
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov ecx [esp+14h] +
xor edx edx +
push esi  +
mov esi [esp+0Ch] +
push edi  +
test esi esi +
jle loc_44EE4C  +
mov edi [esp+0Ch] +
movzx eax byte ptr [edx+edi] +
inc edx  +
add eax ecx +
imul ecx eax +
mov eax ecx +
shr eax 6 +
xor ecx eax +
cmp edx esi +
jl loc_44EE34  +
mov esi [esp+18h] +
lea eax [ecx+3Ah] +
imul ecx eax +
xor edx edx +
mov eax ecx +
shr eax 6 +
xor ecx eax +
test esi esi +
jle loc_44EE88  +
mov edi [esp+14h] +
lea ecx [ecx+ecx*8] +
mov eax ecx +
shr eax 0Bh +
xor eax ecx +
pop edi  +
imul eax eax +
pop esi  +
retn   +
***
test esi esi +
jnz loc_44EEAD  +
xor eax eax +
pop esi  +
retn   +
movzx edx byte ptr [esi] +
mov eax [esp+arg_4] +
shl edx 5 +
cmp eax 0Ah +
jle loc_44EEC8  +
movzx eax byte ptr [esi+eax-1] +
add edx eax +
mov eax 0Ah +
add eax 0FFFFFFFEh +
cmp eax 8 +
ja loc_44EF0D  +
jmp ds:off_44EF14[eax*4]  +
movzx eax byte ptr [esi+9] +
add edx eax +
movzx eax byte ptr [esi+8] +
add edx eax +
movzx eax byte ptr [esi+7] +
add edx eax +
movzx eax byte ptr [esi+6] +
add edx eax +
movzx eax byte ptr [esi+5] +
add edx eax +
movzx eax byte ptr [esi+4] +
add edx eax +
movzx eax byte ptr [esi+3] +
add edx eax +
movzx ecx byte ptr [esi+2] +
add edx ecx +
movzx ecx byte ptr [esi+1] +
add edx ecx +
mov eax edx +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+8+arg_0] +
test ebx ebx +
jnz loc_44EF5B  +
mov edx [esp+8+arg_10] +
add edx 6CCh +
jmp loc_44EF6C  +
movzx eax byte ptr [edi] +
mov ecx eax +
shl ecx 4 +
sub ecx eax +
mov eax [esp+8+arg_10] +
lea edx [eax+ecx*2] +
mov ecx [esp+8+arg_C] +
mov esi [esp+8+arg_8] +
cmp ecx 0Ah +
jle loc_44EF97  +
mov eax ecx +
sub eax ebx +
sub eax 2 +
jns loc_44EF85  +
lea eax [ecx-0Bh] +
movzx eax byte ptr [eax+esi] +
mov ecx 0Ah +
add edx eax +
mov eax ecx +
cmp ebx eax +
cmovg ebx eax +
lea eax [ebx-1] +
cmp eax 9 +
ja loc_44EFE1  +
jmp ds:off_44F03C[eax*4]  +
movzx eax byte ptr [edi+9] +
add edx eax +
movzx eax byte ptr [edi+8] +
add edx eax +
movzx eax byte ptr [edi+7] +
add edx eax +
movzx eax byte ptr [edi+6] +
add edx eax +
movzx eax byte ptr [edi+5] +
add edx eax +
movzx eax byte ptr [edi+4] +
add edx eax +
movzx eax byte ptr [edi+3] +
add edx eax +
movzx eax byte ptr [edi+2] +
add edx eax +
movzx eax byte ptr [edi+1] +
add edx eax +
movzx eax byte ptr [edi] +
add edx eax +
sub ecx ebx +
test ecx ecx +
jle loc_44EFEB  +
add edx 3Ah +
dec ecx  +
dec ecx  +
cmp ecx 9 +
ja loc_44F033  +
jmp ds:off_44F064[ecx*4]  +
movzx eax byte ptr [esi+9] +
add edx eax +
movzx eax byte ptr [esi+8] +
add edx eax +
movzx eax byte ptr [esi+7] +
add edx eax +
movzx eax byte ptr [esi+6] +
add edx eax +
movzx eax byte ptr [esi+5] +
add edx eax +
movzx eax byte ptr [esi+4] +
add edx eax +
movzx eax byte ptr [esi+3] +
add edx eax +
movzx eax byte ptr [esi+2] +
add edx eax +
movzx ecx byte ptr [esi+1] +
add edx ecx +
movzx ecx byte ptr [esi] +
add edx ecx +
pop edi  +
pop esi  +
mov eax edx +
pop ebx  +
retn   +
***
cmp dword_4F24AC 0 +
jnz loc_44F0C9  +
call sub_45E8F0  +
mov dword_4F24A8 eax +
test eax eax +
jz loc_44F134  +
push eax  +
call sub_45E990  +
push dword_4F24A8  +
mov dword_4F24AC 1 +
call sub_45E9B0  +
add esp 8 +
push esi  +
push 20h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_44F141  +
push 0A00h  +
mov dword ptr [esi] 1 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+8] 80h +
mov dword ptr [esi+0Ch] 0 +
call off_4EE2E8  +
add esp 4 +
mov [esi+4] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
test eax eax +
jz loc_44F137  +
push 0A00h  +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi+18h] 0 +
mov eax esi +
pop esi  +
retn   +
xor eax eax +
retn   +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
***
test edi edi +
sub esp 14h +
push ebp  +
push edi  +
mov edi [esp+1Ch+arg_0] +
mov ebp 1 +
mov [esp+1Ch+var_4] 0 +
test edi edi +
jnz loc_44F253  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebp  +
add esp 14h +
retn   +
push esi  +
mov esi [esp+20h+arg_4] +
cmp esi 8 +
jb loc_44F277  +
cmp esi 4000h +
ja loc_44F277  +
mov ecx [edi+4] +
mov eax [edi+8] +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_C] ecx +
test ecx ecx +
jnz loc_44F281  +
pop esi  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebp  +
add esp 14h +
retn   +
xor ecx ecx +
cmp eax 80h +
push ebx  +
cmovz ebp ecx +
lea ebx [esi+esi*4] +
shl ebx 2 +
push ebx  +
mov [esp+28h+var_14] ebp +
call off_4EE2E8  +
add esp 4 +
mov [edi+4] eax +
test eax eax +
jnz loc_44F2B9  +
mov esi [esp+24h+var_C] +
or eax 0FFFFFFFFh +
pop ebx  +
mov [edi+4] esi +
pop esi  +
pop edi  +
pop ebp  +
add esp 14h +
retn   +
push ebx  +
push 0  +
push eax  +
call sub_48CF40  +
mov ecx [esp+30h+var_10] +
add esp 0Ch +
mov [edi+8] esi +
test ecx ecx +
jz loc_44F4B6  +
mov esi [esp+24h+var_C] +
mov eax ecx +
add esi 4 +
mov [esp+24h+arg_0] ecx +
cmp dword ptr [esi+8] 0 +
jz loc_44F392  +
test ebp ebp +
jz loc_44F2F4  +
mov ebx [esi+0Ch] +
jmp loc_44F316  +
cmp dword ptr [edi+8] 80h +
push dword ptr [edi+18h]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
jnz loc_44F30C  +
call sub_44EEA0  +
jmp loc_44F311  +
call loc_44EDD0  +
mov ebx eax +
add esp 0Ch +
xor edx edx +
mov ecx [edi+4] +
mov eax ebx +
div  dword ptr [edi+8] +
lea ebp [edx+edx*4] +
cmp dword ptr [ecx+ebp*4+0Ch] 0 +
jnz loc_44F34C  +
movups xmm0 oword ptr [esi-4] +
movups oword ptr [ecx+ebp*4] xmm0 +
mov eax [esi+0Ch] +
mov [ecx+ebp*4+10h] eax +
mov eax [edi+4] +
mov dword ptr [eax+ebp*4] 0 +
mov eax [edi+4] +
mov [eax+ebp*4+10h] ebx +
jmp loc_44F38A  +
push 14h  +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_44F382  +
mov eax [esi] +
mov [ecx+4] eax +
mov eax [esi+4] +
mov [ecx+8] eax +
mov [ecx+10h] ebx +
mov eax [edi+4] +
mov eax [eax+ebp*4] +
mov [ecx] eax +
mov dword ptr [ecx+0Ch] 1 +
mov eax [edi+4] +
mov [eax+ebp*4] ecx +
jmp loc_44F38A  +
mov [esp+24h+var_4] 0FFFFFFFFh +
mov eax [esp+24h+arg_0] +
mov ebp [esp+24h+var_14] +
add esi 14h +
sub eax 1 +
mov [esp+24h+arg_0] eax +
jnz loc_44F2E1  +
mov ecx [esp+24h+var_10] +
test ecx ecx +
jz loc_44F4B6  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_8] eax +
mov esi [eax] +
test esi esi +
jz loc_44F4A2  +
cmp [esp+24h+var_14] 0 +
mov ebp [esi] +
mov [esp+24h+arg_0] ebp +
jz loc_44F3D2  +
mov ecx [esi+10h] +
jmp loc_44F437  +
cmp dword ptr [edi+8] 80h +
jnz loc_44F3F0  +
push dword ptr [edi+18h]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_44EEA0  +
add esp 0Ch +
mov ecx eax +
jmp loc_44F437  +
mov ebx [esi+8] +
mov ebp [esi+4] +
test ebx ebx +
jle loc_44F431  +
test ebp ebp +
jz loc_44F431  +
mov eax [edi+18h] +
xor edx edx +
test ebx ebx +
jle loc_44F41F  +
movzx ecx byte ptr [edx+ebp] +
inc edx  +
add ecx eax +
imul eax ecx +
mov ecx eax +
shr ecx 6 +
xor eax ecx +
cmp edx ebx +
jl loc_44F407  +
lea ecx [eax+eax*8] +
mov eax ecx +
shr eax 0Bh +
xor eax ecx +
imul ecx eax +
jmp loc_44F433  +
xor ecx ecx +
mov ebp [esp+24h+arg_0] +
xor edx edx +
mov ebx [edi+4] +
mov eax ecx +
div  dword ptr [edi+8] +
lea edx [edx+edx*4] +
shl edx 2 +
add ebx edx +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_44F483  +
movups xmm0 oword ptr [esi] +
push esi  +
movups oword ptr [ebx] xmm0 +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [edi+4] +
mov dword ptr [edx+eax] 0 +
mov eax [edi+4] +
mov dword ptr [eax+edx+0Ch] 1 +
mov eax [edi+4] +
mov [eax+edx+10h] ecx +
call off_4EE2F4  +
add esp 4 +
jmp loc_44F490  +
mov eax [ebx] +
mov [esi] eax +
mov [esi+10h] ecx +
mov eax [edi+4] +
mov [edx+eax] esi +
mov esi ebp +
test ebp ebp +
jnz loc_44F3C0  +
mov eax [esp+24h+var_8] +
mov ecx [esp+24h+var_10] +
add eax 14h +
sub ecx 1 +
mov [esp+24h+var_8] eax +
mov [esp+24h+var_10] ecx +
jnz loc_44F3B6  +
push [esp+24h+var_C]  +
call off_4EE2F4  +
mov eax [esp+28h+var_4] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
add esp 14h +
retn   +
***
sub esp 0Ch +
push ebx  +
push ebp  +
push edi  +
mov edi [esp+18h+arg_0] +
xor ebp ebp +
test edi edi +
jz loc_44F76C  +
mov ebx [esp+18h+arg_4] +
test ebx ebx +
jz loc_44F76C  +
push esi  +
mov esi [esp+1Ch+arg_8] +
test esi esi +
jns loc_44F509  +
mov esi ebx +
lea ecx [esi+1] +
nop   +
mov al [esi] +
inc esi  +
test al al +
jnz loc_44F500  +
sub esi ecx +
mov eax [edi+1Ch] +
test eax eax +
jz loc_44F518  +
cmp esi eax +
jnb loc_44F756  +
cmp esi 3FFFFFFFh +
ja loc_44F756  +
cmp dword ptr [edi+8] 80h +
push dword ptr [edi+18h]  +
push esi  +
push ebx  +
jnz loc_44F539  +
call sub_44EEA0  +
jmp loc_44F53E  +
call loc_44EDD0  +
mov [esp+28h+var_C] eax +
xor edx edx +
div  dword ptr [edi+8] +
add esp 0Ch +
mov eax edx +
mov [esp+1Ch+var_8] eax +
lea ecx [eax+eax*4] +
mov eax [edi+4] +
cmp [eax+ecx*4+0Ch] ebp +
lea edi [eax+ecx*4] +
jnz loc_44F5C7  +
xor edi edi +
mov ecx [esp+1Ch+var_C] +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+14h] +
mov [esp+1Ch+var_4] edx +
test edx edx +
jz loc_44F6D4  +
mov eax [eax+8] +
mov [esp+1Ch+var_8] eax +
cmp eax 80h +
jnz loc_44F5A3  +
mov eax [edx+8] +
cmp eax 80h +
jnz loc_44F62D  +
mov eax [esp+1Ch+var_8] +
cmp eax 80h +
jz loc_44F640  +
mov eax [edx+8] +
cmp eax 80h +
jnz loc_44F640  +
push dword ptr [edx+18h]  +
push esi  +
push ebx  +
call sub_44EEA0  +
add esp 0Ch +
mov [esp+1Ch+var_8] eax +
jmp loc_44F646  +
cmp [edi] ebp +
jz loc_44F5F7  +
mov eax [esp+1Ch+var_C] +
nop   +
cmp [edi+10h] eax +
jnz loc_44F5EF  +
cmp [edi+8] esi +
jnz loc_44F5EF  +
push esi  +
push ebx  +
push dword ptr [edi+4]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_44F622  +
mov eax [esp+1Ch+var_C] +
mov edi [edi] +
inc ebp  +
cmp dword ptr [edi] 0 +
jnz loc_44F5D0  +
mov ecx [esp+1Ch+var_C] +
cmp [edi+10h] ecx +
jnz loc_44F565  +
cmp [edi+8] esi +
jnz loc_44F565  +
push esi  +
push ebx  +
push dword ptr [edi+4]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_44F561  +
mov eax [edi+4] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
push dword ptr [edx+18h]  +
push esi  +
push ebx  +
call loc_44EDD0  +
add esp 0Ch +
mov [esp+1Ch+var_8] eax +
jmp loc_44F646  +
mov eax ecx +
mov [esp+1Ch+var_8] ecx +
mov ebx [esp+1Ch+var_4] +
xor edx edx +
div  dword ptr [ebx+8] +
mov eax [ebx+4] +
lea ecx [edx+edx*4] +
cmp dword ptr [eax+ecx*4+0Ch] 0 +
lea ebx [eax+ecx*4] +
jz loc_44F6BF  +
cmp dword ptr [ebx] 0 +
jz loc_44F692  +
mov eax [esp+1Ch+var_8] +
cmp [ebx+10h] eax +
jnz loc_44F68A  +
cmp [ebx+8] esi +
jnz loc_44F68A  +
push esi  +
push [esp+20h+arg_4]  +
push dword ptr [ebx+4]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_44F6B4  +
mov eax [esp+1Ch+var_8] +
mov ebx [ebx] +
inc ebp  +
cmp dword ptr [ebx] 0 +
jnz loc_44F668  +
mov eax [esp+1Ch+var_8] +
cmp [ebx+10h] eax +
jnz loc_44F6BF  +
cmp [ebx+8] esi +
jnz loc_44F6BF  +
push esi  +
push [esp+20h+arg_4]  +
push dword ptr [ebx+4]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_44F6BF  +
mov eax [ebx+4] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
mov ecx [esp+1Ch+arg_0] +
xor edx edx +
mov eax [esp+1Ch+var_C] +
mov ebx [esp+1Ch+arg_4] +
div  dword ptr [ecx+8] +
mov [esp+1Ch+var_8] edx +
push esi  +
push ebx  +
mov ebx [esp+24h+arg_0] +
push ebx  +
call sub_44ED10  +
add esp 0Ch +
mov [esp+1Ch+arg_0] eax +
test eax eax +
jz loc_44F756  +
test edi edi +
jnz loc_44F6FE  +
mov eax [esp+1Ch+var_8] +
lea ecx [eax+eax*4] +
mov eax [ebx+4] +
lea eax [eax+ecx*4] +
jmp loc_44F70D  +
push 14h  +
call off_4EE2E8  +
add esp 4 +
test eax eax +
jz loc_44F756  +
mov ecx [esp+1Ch+arg_0] +
mov [eax+4] ecx +
mov ecx [esp+1Ch+var_C] +
mov [eax+8] esi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+0Ch] 1 +
mov [eax+10h] ecx +
test edi edi +
jz loc_44F731  +
mov [edi] eax +
inc dword ptr [ebx+0Ch]  +
cmp ebp 3 +
jbe loc_44F760  +
mov eax [ebx+8] +
cmp eax 0AAAh +
ja loc_44F760  +
lea eax [eax+eax*2] +
add eax eax +
push eax  +
push ebx  +
call sub_44F230  +
add esp 8 +
test eax eax +
jz loc_44F760  +
pop esi  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [esp+1Ch+arg_0] +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_44F7C4  +
mov edx [esp+0Ch] +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
mov esi [esp+1Ch] +
mov dword ptr [esp+8] 0 +
push edi  +
test esi esi +
jz loc_44FAC9  +
mov edi [esp+28h] +
test edi edi +
jz loc_44FAC9  +
mov ecx [esp+24h] +
test ecx ecx +
jnz loc_44F80F  +
push 0FFFFFFFFh  +
push edi  +
push esi  +
call sub_44F4D0  +
add esp 0Ch +
pop edi  +
pop esi  +
add esp 14h +
retn   +
***
push ebx  +
mov ebx edi +
lea edx [ebx+1] +
mov al [ebx] +
inc ebx  +
test al al +
jnz loc_44F815  +
push ebp  +
mov ebp ecx +
sub ebx edx +
lea edx [ebp+1] +
mov al [ebp+0] +
inc ebp  +
test al al +
jnz loc_44F824  +
push dword ptr [esi+18h]  +
sub ebp edx +
push ebx  +
push edi  +
push ebp  +
lea eax [ebp+1] +
add eax ebx +
cmp dword ptr [esi+8] 80h +
mov [esp+30h] eax +
push ecx  +
jnz loc_44F84E  +
call sub_44EF40  +
jmp loc_44F853  +
call loc_44EE20  +
mov [esp+24h] eax +
xor edx edx +
div  dword ptr [esi+8] +
add esp 14h +
mov eax edx +
mov [esp+18h] eax +
lea ecx [eax+eax*4] +
mov eax [esi+4] +
cmp dword ptr [eax+ecx*4+0Ch] 0 +
lea esi [eax+ecx*4] +
jnz loc_44F8E2  +
xor esi esi +
mov ecx [esp+10h] +
mov eax [esp+28h] +
mov edx [eax+14h] +
mov [esp+1Ch] edx +
test edx edx +
jz loc_44FA34  +
mov eax [eax+8] +
mov [esp+18h] eax +
cmp eax 80h +
jnz loc_44F8B9  +
mov eax [edx+8] +
cmp eax 80h +
jnz loc_44F965  +
mov eax [esp+18h] +
cmp eax 80h +
jz loc_44F97D  +
mov eax [edx+8] +
cmp eax 80h +
jnz loc_44F97D  +
push dword ptr [edx+18h]  +
push ebx  +
push edi  +
push ebp  +
push dword ptr [esp+3Ch]  +
call sub_44EF40  +
add esp 14h +
mov [esp+18h] eax +
jmp loc_44F983  +
cmp dword ptr [esi] 0 +
jz loc_44F927  +
mov ecx [esp+10h] +
xor eax eax +
cmp [esi+10h] ecx +
jnz loc_44F91B  +
lea ecx [ebp+1] +
add ecx ebx +
cmp [esi+8] ecx +
jnz loc_44F917  +
push dword ptr [esi+4]  +
push edi  +
push dword ptr [esp+34h]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jnz loc_44F95A  +
mov eax [esp+14h] +
mov ecx [esp+10h] +
mov esi [esi] +
inc eax  +
mov [esp+14h] eax +
cmp dword ptr [esi] 0 +
jnz loc_44F8F0  +
mov ecx [esp+10h] +
cmp [esi+10h] ecx +
jnz loc_44F87B  +
lea eax [ebp+1] +
add eax ebx +
cmp [esi+8] eax +
jnz loc_44F87B  +
push dword ptr [esi+4]  +
push edi  +
push dword ptr [esp+34h]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jz loc_44F877  +
mov eax [esi+4] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 14h +
retn   +
***
push dword ptr [edx+18h]  +
push ebx  +
push edi  +
push ebp  +
push dword ptr [esp+3Ch]  +
call loc_44EE20  +
add esp 14h +
mov [esp+18h] eax +
jmp loc_44F983  +
mov eax ecx +
mov [esp+18h] ecx +
mov edi [esp+1Ch] +
xor edx edx +
div  dword ptr [edi+8] +
mov eax [edi+4] +
lea ecx [edx+edx*4] +
cmp dword ptr [eax+ecx*4+0Ch] 0 +
lea edi [eax+ecx*4] +
jz loc_44FA1F  +
cmp dword ptr [edi] 0 +
jz loc_44F9EA  +
mov eax [esp+14h] +
mov ecx [esp+18h] +
cmp [edi+10h] ecx +
jnz loc_44F9DE  +
lea edx [ebp+1] +
add edx ebx +
cmp [edi+8] edx +
jnz loc_44F9DE  +
push dword ptr [edi+4]  +
push dword ptr [esp+34h]  +
push dword ptr [esp+34h]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jnz loc_44FA14  +
mov eax [esp+14h] +
mov ecx [esp+18h] +
mov edi [edi] +
inc eax  +
mov [esp+14h] eax +
cmp dword ptr [edi] 0 +
jnz loc_44F9B0  +
mov eax [esp+18h] +
cmp [edi+10h] eax +
jnz loc_44FA1F  +
lea eax [ebp+1] +
add eax ebx +
cmp [edi+8] eax +
jnz loc_44FA1F  +
push dword ptr [edi+4]  +
push dword ptr [esp+34h]  +
push dword ptr [esp+34h]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jz loc_44FA1F  +
mov eax [edi+4] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
add esp 14h +
retn   +
***
mov ecx [esp+28h] +
xor edx edx +
mov eax [esp+10h] +
mov edi [esp+30h] +
div  dword ptr [ecx+8] +
mov [esp+18h] edx +
push ebx  +
mov ebx [esp+2Ch] +
push edi  +
push ebp  +
push dword ptr [esp+38h]  +
push ebx  +
call loc_44EC00  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_44FABF  +
test esi esi +
jnz loc_44FAB0  +
mov eax [esp+18h] +
lea ecx [eax+eax*4] +
mov eax [ebx+4] +
lea eax [eax+ecx*4] +
mov ecx [esp+20h] +
mov [eax+8] ecx +
mov ecx [esp+10h] +
mov [eax+4] edi +
mov dword ptr [eax] 0 +
mov dword ptr [eax+0Ch] 1 +
mov [eax+10h] ecx +
test esi esi +
jz loc_44FA83  +
mov [esi] eax +
inc dword ptr [ebx+0Ch]  +
cmp dword ptr [esp+14h] 3 +
jbe loc_44FAA6  +
mov eax [ebx+8] +
cmp eax 0AAAh +
ja loc_44FAA6  +
lea eax [eax+eax*2] +
add eax eax +
push eax  +
push ebx  +
call sub_44F230  +
add esp 8 +
pop ebp  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
add esp 14h +
retn   +
***
push 14h  +
call off_4EE2E8  +
add esp 4 +
test eax eax +
jnz loc_44FA5F  +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
add esp 14h +
retn   +
***
pop edi  +
xor eax eax +
pop esi  +
add esp 14h +
retn   +
***
cmp dword_4F24AC 0 +
jnz loc_44FB15  +
call sub_45E8F0  +
mov dword_4F24A8 eax +
test eax eax +
jz loc_44FB23  +
push eax  +
call sub_45E990  +
push dword_4F24A8  +
mov dword_4F24AC 1 +
call sub_45E9B0  +
add esp 8 +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jnz loc_44FB27  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
retn   +
push dword_4F24A8  +
call sub_45E990  +
push dword_4F24A8  +
inc dword ptr [esi]  +
call sub_45E9B0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jnz loc_44FB5B  +
xor eax eax +
retn   +
mov eax [edx+1Ch] +
mov ecx [esp+arg_4] +
mov [edx+1Ch] ecx +
retn   +
***
mov eax [esp+8] +
push dword ptr [esp+0Ch]  +
push dword ptr [eax+4]  +
mov eax [eax] +
push dword ptr [esp+0Ch]  +
call eax  +
add esp 0Ch +
retn   +
***
push 0  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call loc_44FBD0  +
add esp 14h +
retn   +
***
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call loc_44FBD0  +
add esp 14h +
retn   +
***
push ecx  +
push esi  +
push edi  +
mov edi [esp+10h] +
mov dword ptr [esp+8] 0 +
test edi edi +
jz loc_44FE17  +
mov esi [esp+14h] +
test esi esi +
jz loc_44FE17  +
mov eax [edi+0Ch] +
push ebx  +
push ebp  +
test eax eax +
jz loc_44FC87  +
push esi  +
push eax  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_44FC26  +
push 0FFFFFFFFh  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov esi eax +
add esp 0Ch +
mov [esp+1Ch] esi +
test esi esi +
jz loc_44FC7E  +
mov ebx [esp+20h] +
test ebx ebx +
jz loc_44FC52  +
push ebx  +
push dword ptr [edi+0Ch]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_44FC52  +
push 0FFFFFFFFh  +
push ebx  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_44FC7E  +
mov ebp [esp+24h] +
test ebp ebp +
jz loc_44FC8F  +
push ebp  +
push dword ptr [edi+0Ch]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_44FC8F  +
push 0FFFFFFFFh  +
push ebp  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jnz loc_44FC8F  +
pop ebp  +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
***
mov ebp [esp+24h] +
mov ebx [esp+20h] +
push ebp  +
push ebx  +
push esi  +
push edi  +
call sub_44FE20  +
add esp 10h +
lea ecx [eax+eax*2] +
mov eax [edi] +
cmp dword ptr [eax+ecx*8+14h] 0 +
lea edi [eax+ecx*8] +
jnz loc_44FCB1  +
xor esi esi +
jmp loc_44FD9D  +
mov eax [esp+18h] +
mov esi edi +
mov edi [esp+1Ch] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_44FD10  +
mov ecx [esi] +
test ecx ecx +
jz loc_44FCEC  +
xor eax eax +
cmp [esi+4] edi +
jnz loc_44FCDF  +
cmp [esi+8] ebx +
jnz loc_44FCDF  +
cmp [esi+0Ch] ebp +
jz loc_44FC7E  +
mov esi ecx +
inc eax  +
mov [esp+10h] eax +
mov ecx [esi] +
test ecx ecx +
jnz loc_44FCD0  +
cmp [esi+4] edi +
jnz loc_44FD88  +
cmp [esi+8] ebx +
jnz loc_44FD88  +
cmp [esi+0Ch] ebp +
jnz loc_44FD88  +
pop ebp  +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
***
cmp dword ptr [esi] 0 +
jz loc_44FD54  +
push edi  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44FD49  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44FD49  +
push ebp  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44FC7E  +
mov esi [esi] +
inc dword ptr [esp+10h]  +
cmp dword ptr [esi] 0 +
jnz loc_44FD15  +
push edi  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44FD88  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_44FD88  +
push ebp  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_44FC7E  +
push 18h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_44FC7E  +
mov ecx [esp+18h] +
cmp dword ptr [ecx+0Ch] 0 +
jz loc_44FDB6  +
mov eax [esp+1Ch] +
mov [edi+4] eax +
mov [edi+8] ebx +
mov [edi+0Ch] ebp +
jmp loc_44FDDB  +
push dword ptr [esp+1Ch]  +
call sub_44E600  +
push ebx  +
mov [edi+4] eax +
call sub_44E600  +
push ebp  +
mov [edi+8] eax +
call sub_44E600  +
mov ecx [esp+24h] +
add esp 0Ch +
mov [edi+0Ch] eax +
mov eax [esp+28h] +
mov [edi+10h] eax +
mov dword ptr [edi] 0 +
mov dword ptr [edi+14h] 1 +
test esi esi +
jz loc_44FDF5  +
mov [esi] edi +
inc dword ptr [ecx+8]  +
cmp dword ptr [esp+10h] 8 +
jbe loc_44FE0F  +
mov eax [ecx+4] +
shl eax 3 +
push eax  +
push ecx  +
call sub_4502E0  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
***
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
***
mov esi [esp+arg_4] +
xor eax eax +
test esi esi +
jz loc_44FE5C  +
mov bl [esi] +
movzx ecx bl +
mov eax ecx +
shl eax 4 +
sub eax ecx +
add eax eax +
test bl bl +
jz loc_44FE5C  +
nop   +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FE40  +
mov esi [esp+arg_8] +
mov edx eax +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
xor eax edx +
test esi esi +
jz loc_44FE94  +
mov bl [esi] +
test bl bl +
jz loc_44FE94  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FE78  +
mov esi [esp+arg_C] +
mov edx eax +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
xor eax edx +
test esi esi +
jz loc_44FECC  +
mov bl [esi] +
test bl bl +
jz loc_44FECC  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FEB0  +
mov ecx [esp+arg_0] +
xor edx edx +
pop esi  +
pop ebx  +
div  dword ptr [ecx+4] +
mov eax edx +
retn   +
***
push ebx  +
push esi  +
mov esi [esp+14h] +
push edi  +
mov edi [esp+14h] +
test edi edi +
jz loc_44FF30  +
mov bl [edi] +
movzx ecx bl +
mov eax ecx +
shl eax 4 +
sub eax ecx +
add eax eax +
test bl bl +
jz loc_44FF1D  +
mov edx eax +
lea edi [edi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [edi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FF01  +
mov ecx eax +
mov edx eax +
shr ecx 3 +
shl edx 5 +
add ecx 3Ah +
add ecx edx +
xor eax ecx +
jmp loc_44FF3C  +
movzx ecx byte ptr [esi] +
mov eax ecx +
shl eax 4 +
sub eax ecx +
add eax eax +
test esi esi +
jz loc_44FF62  +
mov bl [esi] +
test bl bl +
jz loc_44FF62  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FF46  +
mov esi [esp+1Ch] +
mov edx eax +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
xor eax edx +
test esi esi +
jz loc_44FFAD  +
mov bl [esi] +
test bl bl +
jz loc_44FF9C  +
nop   +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FF80  +
mov ecx eax +
mov edx eax +
shr ecx 3 +
shl edx 5 +
add ecx 3Ah +
add ecx edx +
xor eax ecx +
mov esi [esp+20h] +
test esi esi +
jz loc_44FFDC  +
mov bl [esi] +
test bl bl +
jz loc_44FFDC  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FFC0  +
mov esi [esp+24h] +
mov edx eax +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
xor eax edx +
test esi esi +
jz loc_450025  +
mov bl [esi] +
test bl bl +
jz loc_450014  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_44FFF8  +
mov ecx eax +
mov edx eax +
shr ecx 3 +
shl edx 5 +
add ecx 3Ah +
add ecx edx +
xor eax ecx +
mov esi [esp+28h] +
test esi esi +
jz loc_45004F  +
mov bl [esi] +
test bl bl +
jz loc_45004F  +
mov edx eax +
lea esi [esi+1] +
mov ecx eax +
shl edx 5 +
shr ecx 3 +
add edx ecx +
movsx ecx bl +
mov bl [esi] +
add edx ecx +
xor eax edx +
test bl bl +
jnz loc_450033  +
mov ecx [esp+10h] +
xor edx edx +
pop edi  +
pop esi  +
pop ebx  +
div  dword ptr [ecx+4] +
mov eax edx +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [esp+0Ch+arg_0] +
test ebx ebx +
jnz loc_450073  +
xor eax eax +
pop ebx  +
add esp 8 +
retn   +
cmp [esp+0Ch+arg_4] 0 +
jz loc_45006C  +
push dword ptr [ebx+4]  +
call sub_450110  +
mov edx eax +
add esp 4 +
mov [esp+0Ch+var_4] edx +
test edx edx +
jz loc_45006C  +
cmp dword ptr [ebx] 0 +
jz loc_4500F7  +
push ebp  +
xor ebp ebp +
cmp [ebx+4] ebp +
jle loc_4500F6  +
xor ecx ecx +
push esi  +
mov [esp+14h+var_8] ecx +
push edi  +
mov esi [ebx] +
add esi ecx +
cmp dword ptr [esi+14h] 0 +
jz loc_4500E3  +
test esi esi +
jz loc_4500E3  +
mov ebx [esp+18h+var_4] +
push dword ptr [esi+4]  +
mov edi [esi] +
push dword ptr [esi+10h]  +
call [esp+20h+arg_4]  +
push eax  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push ebx  +
call loc_44FBD0  +
add esp 1Ch +
mov esi edi +
test edi edi +
jnz loc_4500B6  +
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+var_8] +
inc ebp  +
add ecx 18h +
mov [esp+18h+var_8] ecx +
cmp ebp [ebx+4] +
jl loc_4500A4  +
mov edx [esp+18h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
mov eax [ebx+8] +
mov [edx+8] eax +
mov eax edx +
pop ebx  +
add esp 8 +
retn   +
***
mov edi [esp+arg_0] +
mov eax 100h +
test edi edi +
push 10h  +
cmovle edi eax +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_450173  +
mov [esi+4] edi +
lea edi [edi+edi*2] +
shl edi 3 +
push edi  +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+8] 0 +
call off_4EE2E8  +
add esp 4 +
mov [esi] eax +
test eax eax +
jz loc_450169  +
push edi  +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
mov eax esi +
pop edi  +
pop esi  +
retn   +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
call sub_450110  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4501A5  +
mov ecx [esp+arg_4] +
push ecx  +
mov [esi+0Ch] ecx +
call sub_44FAE0  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [esp+10h] +
test ebx ebx +
jz loc_4502CE  +
cmp dword ptr [ebx] 0 +
jz loc_4502B4  +
mov eax [ebx+8] +
xor edx edx +
mov [esp+10h] eax +
mov [esp+4] edx +
cmp [ebx+4] edx +
jle loc_4502A9  +
mov ecx [esp+14h] +
push ebp  +
xor ebp ebp +
push esi  +
mov [esp+10h] ebp +
push edi  +
pop ebp  +
push dword ptr [ebx]  +
call off_4EE2F4  +
add esp 4 +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4502C4  +
push eax  +
call sub_44F150  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
add esp 8 +
retn   +
***
mov edi [esp+8+arg_0] +
test edi edi +
jnz loc_4502F0  +
or eax 0FFFFFFFFh +
pop edi  +
pop ecx  +
retn   +
push esi  +
mov esi [esp+0Ch+arg_4] +
cmp esi 8 +
jl loc_450302  +
cmp esi 4000h +
jle loc_450309  +
pop esi  +
or eax 0FFFFFFFFh +
pop edi  +
pop ecx  +
retn   +
mov eax [edi] +
mov [esp+0Ch+arg_0] eax +
push ebx  +
mov ebx [edi+4] +
mov [esp+10h+var_4] ebx +
test eax eax +
jnz loc_450323  +
pop ebx  +
pop esi  +
or eax 0FFFFFFFFh +
pop edi  +
pop ecx  +
retn   +
push ebp  +
lea ebp [esi+esi*2] +
shl ebp 3 +
push ebp  +
call off_4EE2E8  +
add esp 4 +
mov [edi] eax +
test eax eax +
jnz loc_450349  +
mov eax [esp+14h+arg_0] +
pop ebp  +
pop ebx  +
mov [edi] eax +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
pop ecx  +
retn   +
push ebp  +
push 0  +
push eax  +
call sub_48CF40  +
mov ebp [esp+20h+arg_0] +
add esp 0Ch +
mov [edi+4] esi +
test ebx ebx +
jle loc_45041F  +
lea esi [ebp+0Ch] +
cmp dword ptr [esi+8] 0 +
jz loc_45039F  +
push dword ptr [esi]  +
push dword ptr [esi-4]  +
push dword ptr [esi-8]  +
push edi  +
call sub_44FE20  +
movups xmm0 oword ptr [esi-0Ch] +
add esp 10h +
lea ecx [eax+eax*2] +
mov eax [edi] +
movups oword ptr [eax+ecx*8] xmm0 +
movq xmm0 qword ptr [esi+4] +
movq qword ptr [eax+ecx*8+10h] xmm0 +
mov eax [edi] +
mov dword ptr [eax+ecx*8] 0 +
add esi 18h +
sub ebx 1 +
jnz loc_450367  +
mov ebx [esp+14h+var_4] +
test ebx ebx +
jle loc_45041F  +
nop   +
mov esi [ebp+0] +
test esi esi +
jz loc_450413  +
push dword ptr [esi+0Ch]  +
mov ebx [esi] +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push edi  +
call sub_44FE20  +
add esp 10h +
lea ecx [eax+eax*2] +
mov eax [edi] +
shl ecx 3 +
add eax ecx +
cmp dword ptr [eax+14h] 0 +
jnz loc_450400  +
movups xmm0 oword ptr [esi] +
push esi  +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [esi+10h] +
movq qword ptr [eax+10h] xmm0 +
mov eax [edi] +
mov dword ptr [ecx+eax] 0 +
call off_4EE2F4  +
add esp 4 +
jmp loc_450409  +
mov eax [eax] +
mov [esi] eax +
mov eax [edi] +
mov [ecx+eax] esi +
mov esi ebx +
test ebx ebx +
jnz loc_4503B7  +
mov ebx [esp+14h+var_4] +
add ebp 18h +
sub ebx 1 +
mov [esp+14h+var_4] ebx +
jnz loc_4503B0  +
mov eax [esp+14h+arg_0] +
push eax  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
pop ecx  +
retn   +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_450480  +
add esp 10h +
retn   +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_450480  +
add esp 10h +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_45048D  +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+10h] +
test edi edi +
jnz loc_45049B  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+1Ch] +
push ebp  +
mov ebp [esp+1Ch] +
push ebx  +
push ebp  +
push edi  +
push esi  +
call sub_44FE20  +
add esp 10h +
lea ecx [eax+eax*2] +
mov eax [esi] +
cmp dword ptr [eax+ecx*8+14h] 0 +
lea esi [eax+ecx*8] +
jz loc_450526  +
mov eax [esp+14h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_4504E5  +
mov eax esi +
test eax eax +
jz loc_4504E5  +
cmp [eax+4] edi +
jnz loc_4504DF  +
cmp [eax+8] ebp +
jnz loc_4504DF  +
cmp [eax+0Ch] ebx +
jz loc_45052D  +
mov eax [eax] +
test eax eax +
jnz loc_4504D0  +
test esi esi +
jz loc_450526  +
push edi  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450520  +
push ebp  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450520  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_450535  +
mov esi [esi] +
test esi esi +
jnz loc_4504F0  +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [eax+10h] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi+10h] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push [esp+8+arg_10]  +
push [esp+0Ch+arg_C]  +
push [esp+10h+arg_8]  +
push [esp+14h+arg_4]  +
push [esp+18h+arg_0]  +
call sub_450570  +
add esp 1Ch +
retn   +
***
test esi esi +
jnz loc_45057D  +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_8] +
test edi edi +
jnz loc_45058B  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+8+arg_18] +
push ebp  +
mov ebp [esp+0Ch+arg_14] +
push ebx  +
push ebp  +
push [esp+14h+arg_10]  +
push [esp+18h+arg_C]  +
push edi  +
push [esp+20h+arg_4]  +
push esi  +
call loc_44FEE0  +
add esp 1Ch +
lea ecx [eax+eax*2] +
mov eax [esi] +
cmp dword ptr [eax+ecx*8+14h] 0 +
lea esi [eax+ecx*8] +
jz loc_450602  +
test esi esi +
jz loc_450602  +
push dword ptr [esi+4]  +
push edi  +
push [esp+14h+arg_4]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jz loc_4505FC  +
push dword ptr [esi+8]  +
push [esp+10h+arg_10]  +
push [esp+14h+arg_C]  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jz loc_4505FC  +
push dword ptr [esi+0Ch]  +
push ebx  +
push ebp  +
call loc_44E400  +
add esp 0Ch +
test eax eax +
jnz loc_450609  +
mov esi [esi] +
test esi esi +
jnz loc_4505C0  +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+10h] +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push 0  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call sub_450660  +
add esp 14h +
retn   +
***
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push [esp+10h+arg_0]  +
call sub_450660  +
add esp 14h +
retn   +
***
push edi  +
mov edi [esp+arg_0] +
xor ebx ebx +
test edi edi +
jz loc_45079E  +
mov ebp [esp+arg_4] +
test ebp ebp +
jz loc_45079E  +
push esi  +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push ebp  +
push edi  +
call sub_44FE20  +
mov esi [edi] +
add esp 10h +
lea ecx [eax+eax*2] +
shl ecx 3 +
add esi ecx +
mov [esp+4+arg_0] ecx +
cmp [esi+14h] ebx +
jz loc_4506E5  +
test esi esi +
jz loc_4506E5  +
push ebp  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4506DD  +
push [esp+4+arg_8]  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4506DD  +
push [esp+4+arg_C]  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4506ED  +
mov ebx esi +
mov esi [esi] +
test esi esi +
jnz loc_4506A7  +
pop esi  +
pop edi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov eax [esp+4+arg_10] +
test eax eax +
jz loc_450705  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_450705  +
push dword ptr [esi+4]  +
push ecx  +
call eax  +
add esp 8 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_450745  +
mov eax [esi+4] +
test eax eax +
jz loc_450723  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_450734  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_450745  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_450761  +
mov eax [esi] +
push esi  +
mov [ebx] eax +
call off_4EE2F4  +
dec dword ptr [edi+8]  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
mov ecx [esi] +
test ecx ecx +
jnz loc_450774  +
mov [esi+14h] ecx +
dec dword ptr [edi+8]  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [edi] +
add eax [esp+4+arg_0] +
movups xmm0 oword ptr [ecx] +
push ecx  +
movups oword ptr [eax] xmm0 +
movq xmm0 qword ptr [ecx+10h] +
movq qword ptr [eax+10h] xmm0 +
call off_4EE2F4  +
dec dword ptr [edi+8]  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
pop edi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_8] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_4] +
mov [esp+8+var_8] eax +
lea eax [esp+8+var_8] +
push eax  +
push offset loc_44FB70  +
push [esp+10h+arg_0]  +
call sub_4507F0  +
add esp 14h +
retn   +
***
mov ebx [esp+8+arg_0] +
test ebx ebx +
jz loc_450894  +
cmp [esp+8+arg_4] 0 +
jz loc_450894  +
cmp dword ptr [ebx] 0 +
jz loc_450894  +
xor edx edx +
mov [esp+8+arg_0] edx +
cmp [ebx+4] edx +
jle loc_450894  +
push ebp  +
xor ecx ecx +
push esi  +
mov [esp+10h+var_4] ecx +
push edi  +
mov esi [ebx] +
add esi ecx +
cmp dword ptr [esi+14h] 0 +
jz loc_450880  +
test esi esi +
jz loc_450880  +
mov eax [esi+10h] +
mov edi [esi] +
mov ebp [ebx+8] +
test eax eax +
jz loc_450859  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push [esp+20h+arg_8]  +
push eax  +
call [esp+28h+arg_4]  +
mov ecx [esp+28h+var_4] +
add esp 14h +
cmp ebp [ebx+8] +
jz loc_450876  +
mov eax [ebx] +
add eax ecx +
cmp esi eax +
jnz loc_450876  +
xor edx edx +
cmp [eax+14h] edx +
cmovz esi edx +
cmp [eax] edi +
jz loc_450878  +
mov esi eax +
jmp loc_450878  +
mov esi edi +
test esi esi +
jnz loc_450834  +
mov edx [esp+14h+arg_0] +
inc edx  +
add ecx 18h +
mov [esp+14h+arg_0] edx +
mov [esp+14h+var_4] ecx +
cmp edx [ebx+4] +
jl loc_450826  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [esp+arg_0] +
sub esp 8 +
test eax eax +
jz loc_45097E  +
cmp [esp+8+arg_10] 0 +
jz loc_45097E  +
cmp dword ptr [eax] 0 +
jz loc_45097E  +
xor edx edx +
mov [esp+8+var_8] edx +
cmp [eax+4] edx +
jle loc_45097E  +
mov ecx [esp+8+arg_4] +
push ebx  +
mov ebx [esp+0Ch+arg_C] +
push ebp  +
mov ebp [esp+10h+arg_8] +
push esi  +
xor esi esi +
push edi  +
mov [esp+18h+var_4] esi +
mov eax [eax] +
add esi eax +
cmp dword ptr [esi+14h] 0 +
jz loc_45095D  +
test esi esi +
jz loc_45095D  +
mov edi [esi] +
test ecx ecx +
jz loc_45090B  +
push dword ptr [esi+4]  +
push ecx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45094F  +
test ebp ebp +
jz loc_45091F  +
push dword ptr [esi+8]  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45094F  +
test ebx ebx +
jz loc_450933  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45094F  +
mov eax [esi+10h] +
test eax eax +
jz loc_45094F  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push [esp+24h+arg_14]  +
push eax  +
call [esp+2Ch+arg_10]  +
add esp 14h +
mov ecx [esp+18h+arg_4] +
mov esi edi +
test edi edi +
jnz loc_4508F5  +
mov edx [esp+18h+var_8] +
mov eax [esp+18h+arg_0] +
inc edx  +
mov esi [esp+18h+var_4] +
add esi 18h +
mov [esp+18h+var_8] edx +
mov [esp+18h+var_4] esi +
cmp edx [eax+4] +
jl loc_4508E7  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
push 0  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push [esp+14h+arg_0]  +
call loc_4509C0  +
add esp 18h +
retn   +
***
push esi  +
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jz loc_450BFF  +
mov esi [esp+10h] +
test esi esi +
jz loc_450BFF  +
mov eax [edi+0Ch] +
push ebx  +
push ebp  +
test eax eax +
jz loc_450A6D  +
push esi  +
push eax  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_450A0D  +
push 0FFFFFFFFh  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov esi eax +
add esp 0Ch +
mov [esp+18h] esi +
test esi esi +
jz loc_450A65  +
mov ebx [esp+1Ch] +
test ebx ebx +
jz loc_450A39  +
push ebx  +
push dword ptr [edi+0Ch]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_450A39  +
push 0FFFFFFFFh  +
push ebx  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_450A65  +
mov ebp [esp+20h] +
test ebp ebp +
jz loc_450A75  +
push ebp  +
push dword ptr [edi+0Ch]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_450A75  +
push 0FFFFFFFFh  +
push ebp  +
push dword ptr [edi+0Ch]  +
call sub_44F4D0  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jnz loc_450A75  +
pop ebp  +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov ebp [esp+20h] +
mov ebx [esp+1Ch] +
push ebp  +
push ebx  +
push esi  +
push edi  +
call sub_44FE20  +
add esp 10h +
lea ecx [eax+eax*2] +
mov eax [edi] +
cmp dword ptr [eax+ecx*8+14h] 0 +
lea edi [eax+ecx*8] +
jnz loc_450A97  +
xor esi esi +
jmp loc_450B9D  +
mov eax [esp+14h] +
mov esi edi +
mov edi [esp+18h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_450AF6  +
cmp dword ptr [esi] 0 +
jz loc_450ACA  +
cmp [esi+4] edi +
jnz loc_450AC3  +
cmp [esi+8] ebx +
jnz loc_450AC3  +
cmp [esi+0Ch] ebp +
jz loc_450B67  +
mov esi [esi] +
cmp dword ptr [esi] 0 +
jnz loc_450AB0  +
mov ecx [esi+4] +
cmp ecx edi +
jnz loc_450B88  +
cmp [esi+8] ebx +
jnz loc_450B88  +
cmp [esi+0Ch] ebp +
jnz loc_450B88  +
mov eax [esp+28h] +
test eax eax +
jz loc_450B7A  +
push ecx  +
jmp loc_450B72  +
cmp dword ptr [esi] 0 +
jz loc_450B37  +
push edi  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450B30  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450B30  +
push ebp  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_450B67  +
mov esi [esi] +
cmp dword ptr [esi] 0 +
jnz loc_450B00  +
push edi  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450B88  +
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450B88  +
push ebp  +
push dword ptr [esi+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_450B88  +
mov eax [esp+28h] +
test eax eax +
jz loc_450B7A  +
push dword ptr [esi+4]  +
push dword ptr [esi+10h]  +
call eax  +
add esp 8 +
mov eax [esp+24h] +
mov [esi+10h] eax +
pop ebp  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push 18h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_450A65  +
mov eax [esp+14h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_450BB6  +
mov eax [esp+18h] +
mov [edi+4] eax +
mov [edi+8] ebx +
mov [edi+0Ch] ebp +
jmp loc_450BD7  +
push dword ptr [esp+18h]  +
call sub_44E600  +
push ebx  +
mov [edi+4] eax +
call sub_44E600  +
push ebp  +
mov [edi+8] eax +
call sub_44E600  +
add esp 0Ch +
mov [edi+0Ch] eax +
mov eax [esp+24h] +
mov [edi+10h] eax +
mov eax [esp+14h] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+14h] 1 +
inc dword ptr [eax+8]  +
test esi esi +
jz loc_450B81  +
pop ebp  +
pop ebx  +
mov [esi] edi +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
cmp dword ptr [esi+14h] 0 +
jg loc_450C4D  +
push 10h  +
mov dword ptr [esi+14h] 4 +
call off_4EE2E8  +
add esp 4 +
mov [esi+18h] eax +
test eax eax +
jnz loc_450C4D  +
push offset aMallocFailed  +
push esi  +
call sub_453E00  +
add esp 8 +
mov dword ptr [esi+14h] 0 +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+14h] +
cmp [esi+10h] eax +
jl loc_450C88  +
shl eax 3 +
push eax  +
push dword ptr [esi+18h]  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jnz loc_450C7D  +
push offset aReallocFailed  +
push esi  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+14h] +
add eax eax +
mov [esi+18h] ecx +
mov [esi+14h] eax +
mov edx [esi+10h] +
mov eax [esi+18h] +
mov ecx [esp+arg_4] +
mov [eax+edx*4] ecx +
mov eax [esi+10h] +
mov [esi+0Ch] ecx +
lea ecx [eax+1] +
mov [esi+10h] ecx +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [esp+10h] +
mov dword ptr [esp+4] 0 +
push esi  +
test ebx ebx +
jnz loc_450CFB  +
mov esi [esp+30h] +
test esi esi +
jz loc_450CF5  +
mov eax [esi] +
test eax eax +
jz loc_450CDA  +
push eax  +
call sub_452950  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_450CEB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
***
mov esi [esp+1Ch] +
test esi esi +
jnz loc_450D3B  +
mov esi [esp+30h] +
test esi esi +
jz loc_450CF5  +
mov eax [esi] +
test eax eax +
jz loc_450D1A  +
push eax  +
call sub_452950  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_450D2B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp [esp+1Ch] +
test ebp ebp +
jnz loc_450D57  +
push dword ptr [esp+34h]  +
call sub_452950  +
add esp 4 +
xor eax eax +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov ecx [ebx+20h] +
test ecx ecx +
jz loc_450D65  +
mov eax [ecx+50h] +
mov [esp+0Ch] eax +
mov edx [esp+28h] +
push edi  +
lea eax [edx-1] +
cmp eax 9 +
ja loc_45106A  +
movzx eax ds:byte_4510E0[eax] +
jmp ds:off_4510DC[eax*4]  +
mov eax [esp+34h] +
mov edi [esp+18h] +
test eax eax +
jz loc_450DCC  +
push eax  +
push edx  +
push ecx  +
call sub_454D40  +
add esp 0Ch +
test eax eax +
jnz loc_450DCC  +
push dword ptr [esp+34h]  +
push esi  +
push ebp  +
push offset aAttributeSOfSI  +
push 1F4h  +
push ebx  +
push edi  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+34h] 0 +
test edi edi +
jz loc_450DCC  +
mov dword ptr [edi+24h] 0 +
mov eax [ebx+20h] +
test eax eax +
jz loc_450E0D  +
cmp [eax+30h] ebx +
jnz loc_450E0D  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_450E0D  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_450E0D  +
push ebp  +
push dword ptr [esp+2Ch]  +
push esi  +
push eax  +
call loc_450480  +
add esp 10h +
test eax eax +
jz loc_450E0D  +
push dword ptr [esp+38h]  +
call sub_452950  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [ebx+2Ch] +
mov [esp+1Ch] eax +
test eax eax +
jnz loc_450E4F  +
push dword ptr [esp+10h]  +
push eax  +
call sub_450180  +
add esp 8 +
mov [esp+1Ch] eax +
mov [ebx+2Ch] eax +
test eax eax +
jnz loc_450E4F  +
push offset aXmladdattribut  +
push edi  +
call sub_453E00  +
push dword ptr [esp+40h]  +
call sub_452950  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push 40h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_450E67  +
push offset aMallocFailed  +
jmp loc_450E35  +
***
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+38h] +
add esp 0Ch +
mov ecx [esp+10h] +
mov [esi+28h] eax +
mov dword ptr [esi+4] 10h +
mov eax [ebx+20h] +
mov [esi+20h] eax +
mov eax [esp+24h] +
test ecx ecx +
jz loc_450EC4  +
push 0FFFFFFFFh  +
push eax  +
push ecx  +
call sub_44F4D0  +
mov [esi+8] eax +
mov eax [esp+34h] +
push 0FFFFFFFFh  +
push eax  +
push dword ptr [esp+24h]  +
call sub_44F4D0  +
push 0FFFFFFFFh  +
push ebp  +
push dword ptr [esp+30h]  +
mov [esi+38h] eax +
call sub_44F4D0  +
add esp 24h +
jmp loc_450EE3  +
push eax  +
call sub_44E600  +
mov [esi+8] eax +
mov eax [esp+2Ch] +
push eax  +
call sub_44E600  +
push ebp  +
mov [esi+38h] eax +
call sub_44E600  +
add esp 0Ch +
mov [esi+3Ch] eax +
mov eax [esp+30h] +
mov [esi+2Ch] eax +
mov eax [esp+38h] +
mov [esi+34h] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_450F1E  +
mov ecx [esp+10h] +
test ecx ecx +
jz loc_450F12  +
push 0FFFFFFFFh  +
push eax  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_450F1B  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+30h] eax +
push esi  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push dword ptr [esi+8]  +
push dword ptr [esp+2Ch]  +
call loc_44FBD0  +
add esp 14h +
test eax eax +
jns loc_450F61  +
push 0  +
push ebp  +
push dword ptr [esp+2Ch]  +
push offset aAttributeSOfEl  +
push 1F5h  +
push ebx  +
push edi  +
call sub_452620  +
push esi  +
call sub_452690  +
add esp 20h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
push 1  +
push ebp  +
push ebx  +
call sub_452C30  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_451033  +
cmp dword ptr [esp+2Ch] 2 +
jnz loc_450FB8  +
push 1  +
push ebp  +
push 0  +
call sub_453770  +
add esp 0Ch +
test eax eax +
jz loc_450FB8  +
push 0  +
push dword ptr [esp+28h]  +
push dword ptr [esp+28h]  +
push offset aElementSHasToo  +
push 208h  +
push ebx  +
push edi  +
call sub_452540  +
add esp 1Ch +
test edi edi +
jz loc_450FB8  +
mov dword ptr [edi+24h] 0 +
push offset aXmlns  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_45102A  +
mov eax [esi+38h] +
test eax eax +
jz loc_450FE5  +
push offset aXmlns  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_45102A  +
mov edi [ebp+2Ch] +
test edi edi +
jz loc_45102A  +
push offset aXmlns  +
push dword ptr [edi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_45101D  +
mov eax [esi+38h] +
test eax eax +
jz loc_45104B  +
push offset aXmlns  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45104B  +
mov eax [edi+24h] +
test eax eax +
jz loc_45104B  +
mov edi eax +
test edi edi +
jnz loc_450FF0  +
mov eax [ebp+2Ch] +
mov [esi+24h] eax +
mov [ebp+2Ch] esi +
mov [esi+14h] ebx +
mov eax [ebx+10h] +
test eax eax +
jnz loc_451056  +
pop edi  +
pop ebp  +
mov [ebx+0Ch] esi +
mov eax esi +
mov [ebx+10h] esi +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [edi+24h] +
mov [esi+24h] eax +
mov [edi+24h] esi +
jmp loc_451033  +
***
mov [eax+18h] esi +
mov eax [ebx+10h] +
pop edi  +
mov [esi+1Ch] eax +
mov eax esi +
pop ebp  +
mov [ebx+10h] esi +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [esp+18h] +
xor esi esi +
xor ecx ecx +
xor edx edx +
test eax eax +
jz loc_45109B  +
mov edi [eax+1Ch] +
mov esi [eax+4] +
mov edx [eax] +
cmp edi 0ABCD1234h +
jz loc_451090  +
cmp edi 0ABCD1235h +
jnz loc_45109B  +
sub eax edx +
dec eax  +
cmp eax 0F8h +
cmovbe ecx edx +
push offset aInternalAttrib  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push ecx  +
push edx  +
push esi  +
push 0  +
call sub_43A650  +
push dword ptr [esp+7Ch]  +
call sub_452950  +
add esp 48h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
***
sub esp 0Ch +
push ebx  +
mov ebx [esp+10h+arg_4] +
mov [esp+10h+var_8] 0 +
test ebx ebx +
jnz loc_45110B  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
push esi  +
mov esi [esp+14h+arg_8] +
test esi esi +
jnz loc_45111C  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [esp+14h+arg_C] +
dec eax  +
push ebp  +
push edi  +
cmp eax 3 +
ja loc_451479  +
jmp ds:off_4514E4[eax*4]  +
mov ebp [esp+1Ch+arg_10] +
test ebp ebp +
jz loc_4511D1  +
push 0  +
push offset aXmladdelementd  +
push 1  +
push [esp+28h+arg_0]  +
call sub_4524C0  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov ebp [esp+1Ch+arg_10] +
test ebp ebp +
jz loc_4511D1  +
push 0  +
push offset aXmladdelemen_0  +
push 1  +
push [esp+28h+arg_0]  +
call sub_4524C0  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov ebp [esp+1Ch+arg_10] +
test ebp ebp +
jnz loc_4511D1  +
push ebp  +
push offset aXmladdelemen_1  +
push 1  +
push [esp+28h+arg_0]  +
call sub_4524C0  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov ebp [esp+1Ch+arg_10] +
test ebp ebp +
jnz loc_4511D1  +
push ebp  +
push offset aXmladdelemen_2  +
push 1  +
push [esp+28h+arg_0]  +
call sub_4524C0  +
add esp 10h +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
lea eax [esp+1Ch+arg_4] +
push eax  +
push esi  +
call sub_4253A0  +
mov edi eax +
add esp 8 +
mov eax [ebx+28h] +
test edi edi +
mov [esp+1Ch+var_C] eax +
cmovnz esi edi +
mov [esp+1Ch+arg_8] esi +
test eax eax +
jnz loc_451256  +
mov eax [ebx+20h] +
xor ecx ecx +
test eax eax +
jz loc_451201  +
mov ecx [eax+50h] +
push ecx  +
push 0  +
call sub_450180  +
add esp 8 +
mov [esp+1Ch+var_C] eax +
mov [ebx+28h] eax +
test eax eax +
jnz loc_451256  +
push offset aXmladdelemen_3  +
push [esp+20h+arg_0]  +
call sub_453E00  +
add esp 8 +
test edi edi +
jz loc_451236  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_4514D7  +
push eax  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [ebx+20h] +
test eax eax +
jz loc_4512B1  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_4512B1  +
push [esp+1Ch+arg_4]  +
push esi  +
push dword ptr [eax+28h]  +
call sub_450460  +
add esp 0Ch +
mov [esp+1Ch+var_4] eax +
test eax eax +
jz loc_4512B1  +
cmp dword ptr [eax+24h] 0 +
jnz loc_4512B1  +
mov ecx [eax+2Ch] +
mov dword ptr [eax+2Ch] 0 +
mov eax [ebx+20h] +
push 0  +
push [esp+20h+arg_4]  +
mov [esp+24h+var_8] ecx +
mov eax [eax+2Ch] +
push esi  +
push dword ptr [eax+28h]  +
call sub_450640  +
push [esp+2Ch+var_4]  +
call sub_4528D0  +
add esp 14h +
push [esp+1Ch+arg_4]  +
push esi  +
push [esp+24h+var_C]  +
call sub_450460  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_451315  +
cmp dword ptr [esi+24h] 0 +
jz loc_4512F2  +
push 0  +
push 0  +
push [esp+24h+arg_8]  +
push offset aRedefinition_0  +
push 1FDh  +
push ebx  +
push [esp+34h+arg_0]  +
call sub_452540  +
add esp 1Ch +
jmp loc_451228  +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_451401  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov [esp+1Ch+arg_4] 0 +
jmp loc_451401  +
push 38h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451330  +
push offset aMallocFailed  +
jmp loc_45121C  +
push 38h  +
push 0  +
push esi  +
call sub_48CF40  +
push [esp+28h+arg_8]  +
mov dword ptr [esi+4] 0Fh +
call sub_44E600  +
add esp 10h +
mov [esi+8] eax +
test eax eax +
jnz loc_451399  +
push offset aMallocFailed  +
push [esp+20h+arg_0]  +
call sub_453E00  +
add esp 8 +
test edi edi +
jz loc_451373  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_451385  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
push esi  +
mov [esi+30h] eax +
push [esp+20h+arg_4]  +
push [esp+24h+arg_8]  +
push [esp+28h+var_C]  +
call sub_44FBB0  +
add esp 10h +
test eax eax +
jz loc_4513FA  +
push 0  +
push 0  +
push [esp+24h+arg_8]  +
push offset aRedefinition_0  +
push 1FDh  +
push ebx  +
push [esp+34h+arg_0]  +
call sub_452540  +
push esi  +
call sub_4528D0  +
add esp 20h +
test edi edi +
jz loc_4514D7  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [esp+1Ch+var_8] +
mov [esi+2Ch] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+24h] eax +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jz loc_451431  +
mov eax [eax+1Ch] +
cmp eax 0ABCD1234h +
jz loc_451421  +
cmp eax 0ABCD1235h +
jnz loc_451431  +
mov [esi+28h] ebp +
test ebp ebp +
jz loc_451440  +
mov dword ptr [ebp+14h] 1 +
jmp loc_451440  +
push ebp  +
push dword ptr [ebx+20h]  +
call sub_451A40  +
add esp 8 +
mov [esi+28h] eax +
mov [esi+14h] ebx +
mov eax [ebx+20h] +
mov [esi+20h] eax +
mov eax [ebx+10h] +
test eax eax +
jnz loc_451455  +
mov [ebx+0Ch] esi +
jmp loc_45145E  +
mov [eax+18h] esi +
mov eax [ebx+10h] +
mov [esi+1Ch] eax +
mov [ebx+10h] esi +
test edi edi +
jz loc_45146F  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebp  +
mov eax esi +
pop esi  +
pop ebx  +
add esp 0Ch +
retn   +
mov eax [esp+1Ch+arg_0] +
xor esi esi +
xor ecx ecx +
xor edx edx +
test eax eax +
jz loc_4514AA  +
mov edi [eax+1Ch] +
mov esi [eax+4] +
mov edx [eax] +
cmp edi 0ABCD1234h +
jz loc_45149F  +
cmp edi 0ABCD1235h +
jnz loc_4514AA  +
sub eax edx +
dec eax  +
cmp eax 0F8h +
cmovbe ecx edx +
push offset aInternalElem_1  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push ecx  +
push edx  +
push esi  +
push 0  +
call sub_43A650  +
add esp 44h +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
***
test ebx ebx +
jnz loc_45150D  +
xor eax eax +
pop ebx  +
retn   +
push ebp  +
mov ebp [esp+4+arg_8] +
test ebp ebp +
jnz loc_45151B  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
mov edi [esp+8+arg_C] +
test edi edi +
jz loc_451557  +
mov eax [ebx+40h] +
mov [esp+8+arg_4] eax +
test eax eax +
jnz loc_45155D  +
push dword ptr [ebx+50h]  +
push eax  +
call sub_450180  +
add esp 8 +
mov [esp+8+arg_4] eax +
mov [ebx+40h] eax +
test eax eax +
jnz loc_45155D  +
push offset aXmladdidTableC  +
push [esp+0Ch+arg_0]  +
call sub_453E00  +
add esp 8 +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
push 18h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451587  +
push offset aMallocFailed  +
push [esp+10h+arg_0]  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push ebp  +
call sub_44E600  +
mov [esi+4] eax +
add esp 4 +
mov eax [esp+0Ch+arg_0] +
mov [esi+14h] ebx +
test eax eax +
jz loc_4515DC  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_4515DC  +
mov eax [ebx+50h] +
test eax eax +
jz loc_4515C5  +
push 0FFFFFFFFh  +
push dword ptr [edi+8]  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
mov [esi+0Ch] eax +
mov dword ptr [esi+8] 0 +
jmp loc_4515E6  +
push dword ptr [edi+8]  +
call sub_44E600  +
add esp 4 +
mov [esi+0Ch] eax +
mov dword ptr [esi+8] 0 +
jmp loc_4515E6  +
mov [esi+8] edi +
mov dword ptr [esi+0Ch] 0 +
push dword ptr [edi+14h]  +
call sub_423210  +
push esi  +
push ebp  +
push [esp+18h+arg_4]  +
mov [esi+10h] eax +
call sub_44FB90  +
add esp 10h +
test eax eax +
jns loc_451636  +
mov eax [esp+0Ch+arg_0] +
test eax eax +
jz loc_451626  +
push 0  +
push 0  +
push ebp  +
push offset aIdSAlreadyDefi  +
push 201h  +
push dword ptr [edi+14h]  +
push eax  +
call sub_452540  +
add esp 1Ch +
push esi  +
call sub_452990  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
mov eax esi +
mov dword ptr [edi+28h] 2 +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
test esi esi +
jnz loc_45165D  +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_8] +
test edi edi +
jnz loc_45166B  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push ebp  +
mov ebp [esp+8+arg_C] +
test ebp ebp +
jnz loc_451680  +
cmp [esp+8+arg_10] ebp +
jnz loc_451680  +
pop ebp  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esi+24h] +
test ebx ebx +
jnz loc_4516C0  +
mov ecx [esi+20h] +
xor eax eax +
test ecx ecx +
jz loc_451694  +
mov eax [ecx+50h] +
push eax  +
push 0  +
call sub_450180  +
mov ebx eax +
add esp 8 +
mov [esi+24h] ebx +
test ebx ebx +
jnz loc_4516C0  +
push offset aXmladdnotation  +
push [esp+10h+arg_0]  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
retn   +
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4516E9  +
push offset aMallocFailed  +
push [esp+10h+arg_0]  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
push edi  +
mov dword ptr [esi+8] 0 +
call sub_44E600  +
mov [esi] eax +
add esp 4 +
mov eax [esp+0Ch+arg_10] +
test eax eax +
jz loc_451716  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
test ebp ebp +
jz loc_451726  +
push ebp  +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
push esi  +
push edi  +
push ebx  +
call sub_44FB90  +
add esp 0Ch +
test eax eax +
jz loc_451757  +
push edi  +
push offset aXmladdnotati_0  +
push 20Eh  +
push 0  +
call sub_4524C0  +
push esi  +
call sub_452A20  +
add esp 14h +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
retn   +
pop ebx  +
pop ebp  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jnz loc_45176D  +
xor eax eax +
pop esi  +
retn   +
push ebp  +
mov ebp [esp+4+arg_8] +
test ebp ebp +
jnz loc_45177B  +
pop ebp  +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+8+arg_C] +
test edi edi +
jnz loc_45178A  +
pop edi  +
pop ebp  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esi+44h] +
test ebx ebx +
jnz loc_4517BF  +
push dword ptr [esi+50h]  +
push ebx  +
call sub_450180  +
mov ebx eax +
add esp 8 +
mov [esi+44h] ebx +
test ebx ebx +
jnz loc_4517BF  +
push offset aXmladdrefTable  +
push [esp+10h+arg_0]  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebx  +
pop edi  +
pop ebp  +
pop esi  +
retn   +
push 14h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4517E8  +
push offset aMallocFailed  +
push [esp+10h+arg_0]  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebx  +
pop edi  +
pop ebp  +
pop esi  +
retn   +
push ebp  +
call sub_44E600  +
mov [esi+4] eax +
add esp 4 +
mov eax [esp+0Ch+arg_0] +
test eax eax +
jz loc_451819  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_451819  +
push dword ptr [edi+8]  +
call sub_44E600  +
add esp 4 +
mov [esi+0Ch] eax +
mov dword ptr [esi+8] 0 +
jmp loc_451823  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] edi +
push dword ptr [edi+14h]  +
call sub_423210  +
push ebp  +
push ebx  +
mov [esi+10h] eax +
call sub_450440  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_4518A4  +
push offset sub_4126F0  +
push offset loc_452A90  +
call sub_46F530  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_45185D  +
push offset aXmladdrefRefer  +
jmp loc_4518B7  +
push edi  +
push ebp  +
push ebx  +
call sub_44FB90  +
add esp 0Ch +
test eax eax +
jns loc_4518A4  +
push edi  +
call sub_46F5E0  +
push offset aXmladdrefRef_0  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
jmp loc_4518E2  +
push esi  +
push edi  +
call sub_46F470  +
add esp 8 +
test eax eax +
jz loc_451915  +
push offset aXmladdrefRef_0  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
mov eax [esi+4] +
test eax eax +
jz loc_4518F3  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_451904  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop ebx  +
pop edi  +
pop ebp  +
pop esi  +
retn   +
pop ebx  +
pop edi  +
pop ebp  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
push 40h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45195E  +
push offset aMallocFailed  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aMallocFailed  +
push eax  +
push eax  +
push 3  +
push 2  +
push 17h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
push ebp  +
push edi  +
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+20h] +
add esp 0Ch +
mov dword ptr [esi+4] 10h +
mov eax [edi+28h] +
mov [esi+28h] eax +
mov eax [edi+2Ch] +
mov [esi+2Ch] eax +
mov ebp [edi+34h] +
test ebp ebp +
jnz loc_451990  +
xor ebx ebx +
jmp loc_4519BB  +
push dword ptr [ebp+4]  +
call sub_451E00  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4519BB  +
mov eax [ebp+0] +
test eax eax +
jz loc_4519B5  +
push eax  +
call sub_451CF0  +
add esp 4 +
mov [ebx] eax +
jmp loc_4519BB  +
mov dword ptr [ebx] 0 +
mov [esi+34h] ebx +
mov eax [edi+3Ch] +
test eax eax +
jz loc_4519D1  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+3Ch] eax +
mov eax [edi+8] +
test eax eax +
jz loc_4519E4  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+38h] +
test eax eax +
jz loc_4519F7  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+38h] eax +
mov eax [edi+30h] +
pop edi  +
pop ebp  +
pop ebx  +
test eax eax +
jz loc_451A0D  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+30h] eax +
mov eax esi +
pop esi  +
retn   +
***
call sub_450060  +
add esp 8 +
retn   +
***
mov edi [esp+arg_4] +
xor ebx ebx +
test edi edi +
jnz loc_451A51  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_451A5D  +
mov ebx [esi+50h] +
push ebp  +
push 1Ch  +
call off_4EE2E8  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_451A9E  +
push offset aMallocFailed  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aMallocFailed  +
push eax  +
push eax  +
push 3  +
push 2  +
push 17h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [ebp+0] xmm0 +
movq qword ptr [ebp+10h] xmm0 +
mov dword ptr [ebp+18h] 0 +
mov eax [edi] +
mov [ebp+0] eax +
mov eax [edi+4] +
mov [ebp+4] eax +
mov eax [edi+8] +
test eax eax +
jz loc_451AE1  +
test ebx ebx +
jz loc_451AD5  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_451ADE  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebp+8] eax +
mov eax [edi+18h] +
test eax eax +
jz loc_451B06  +
test ebx ebx +
jz loc_451AFA  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_451B03  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [ebp+18h] eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_451B1A  +
push eax  +
push esi  +
call sub_451A40  +
add esp 8 +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_451B24  +
mov [eax+14h] ebp +
mov edi [edi+10h] +
test edi edi +
jz loc_451BFB  +
mov [esp+8+arg_4] ebp +
push 1Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_451BEC  +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+18h] 0 +
mov ecx [edi] +
mov [esi] ecx +
mov eax [edi+4] +
mov [esi+4] eax +
mov eax [esp+8+arg_4] +
mov [eax+10h] esi +
mov eax [edi+8] +
test eax eax +
jz loc_451B90  +
test ebx ebx +
jz loc_451B84  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_451B8D  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+18h] +
test eax eax +
jz loc_451BB5  +
test ebx ebx +
jz loc_451BA9  +
push 0FFFFFFFFh  +
push eax  +
push ebx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_451BB2  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_451BCC  +
push eax  +
push [esp+0Ch+arg_0]  +
call sub_451A40  +
add esp 8 +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_451BD6  +
mov [eax+14h] ebp +
mov edi [edi+10h] +
mov [esp+8+arg_4] esi +
test edi edi +
jnz loc_451B33  +
mov eax ebp +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
push offset aMallocFailed  +
push 0  +
call sub_453E00  +
add esp 8 +
mov eax ebp +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push esi  +
push 38h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451C4E  +
push offset aMallocFailed  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aMallocFailed  +
push eax  +
push eax  +
push 3  +
push 2  +
push 17h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
push 38h  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+18h] +
add esp 0Ch +
mov dword ptr [esi+4] 0Fh +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax [edi+8] +
test eax eax +
jz loc_451C82  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
jmp loc_451C89  +
mov dword ptr [esi+8] 0 +
mov eax [edi+30h] +
test eax eax +
jz loc_451C9E  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+30h] eax +
jmp loc_451CA5  +
mov dword ptr [esi+30h] 0 +
push dword ptr [edi+28h]  +
push 0  +
call sub_451A40  +
add esp 8 +
mov [esi+28h] eax +
mov dword ptr [esi+2Ch] 0 +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
call sub_450060  +
add esp 8 +
retn   +
***
test edi edi +
jnz loc_451CFD  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push dword ptr [edi+4]  +
call sub_451E00  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451D12  +
pop esi  +
pop edi  +
retn   +
mov eax [edi] +
test eax eax +
jz loc_451D28  +
push eax  +
call sub_451CF0  +
add esp 4 +
mov [esi] eax +
mov eax esi +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451D7E  +
push offset aMallocFailed  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aMallocFailed  +
push eax  +
push eax  +
push 3  +
push 2  +
push 17h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+0Ch] +
mov eax [edi] +
test eax eax +
jz loc_451D96  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi] eax +
jmp loc_451D9C  +
mov dword ptr [esi] 0 +
mov eax [edi+4] +
test eax eax +
jz loc_451DB1  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
jmp loc_451DB8  +
mov dword ptr [esi+4] 0 +
mov eax [edi+8] +
pop edi  +
test eax eax +
jz loc_451DD0  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax esi +
pop esi  +
retn   +
***
mov dword ptr [esi+8] 0 +
mov eax esi +
pop esi  +
retn   +
***
call sub_450060  +
add esp 8 +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_451E3E  +
push offset aMallocFailed  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aMallocFailed  +
push eax  +
push eax  +
push 3  +
push 2  +
push 17h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_0] +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
test eax eax +
jz loc_451E59  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jz loc_452063  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_452062  +
push offset aAttlist  +
push esi  +
call sub_422040  +
push dword ptr [edi+3Ch]  +
push esi  +
call sub_422020  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
mov eax [edi+38h] +
add esp 18h +
test eax eax +
jz loc_451EC8  +
push eax  +
push esi  +
call sub_422020  +
push offset word_4BC858  +
push esi  +
call sub_422040  +
add esp 10h +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
mov eax [edi+28h] +
add esp 8 +
dec eax  +
cmp eax 9 +
ja loc_451F97  +
jmp ds:off_452068[eax*4]  +
push offset aCdata_1  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aId_0  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aIdref  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aIdrefs  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aEntity  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aEntities  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aNmtoken_0  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset aNmtokens  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_451FC7  +
push offset asc_4C00D0  +
push esi  +
call sub_422040  +
push dword ptr [edi+34h]  +
push esi  +
call sub_4523B0  +
add esp 10h +
jmp loc_451FC7  +
push offset aNotation  +
jmp loc_451F7C  +
push offset aInternalAttrib  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
mov eax [edi+2Ch] +
dec eax  +
cmp eax 3 +
ja loc_452007  +
jmp ds:off_452090[eax*4]  +
push offset aRequired  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_452037  +
push offset aImplied  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_452037  +
push offset aFixed  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_452037  +
push offset aInternalAttr_0  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
cmp dword ptr [edi+30h] 0 +
jz loc_452054  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
push dword ptr [edi+30h]  +
push esi  +
call loc_422060  +
add esp 10h +
push offset asc_4BFF1C  +
push esi  +
call sub_422040  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
test edi edi +
jz loc_45223C  +
cmp [esp+arg_8] 0 +
push esi  +
mov esi [esp+4+arg_0] +
jz loc_4520C7  +
push offset word_4BFDA4  +
push esi  +
call sub_422040  +
add esp 8 +
mov eax [edi] +
dec eax  +
cmp eax 3 +
ja loc_4521B4  +
jmp ds:off_452240[eax*4]  +
push offset dword_4BFDA8  +
push esi  +
call sub_422040  +
add esp 8 +
jmp loc_4521E4  +
mov eax [edi+18h] +
test eax eax +
jz loc_452109  +
push eax  +
push esi  +
call sub_422020  +
push offset word_4BC858  +
push esi  +
call sub_422040  +
add esp 10h +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
add esp 8 +
jmp loc_4521E4  +
mov eax [edi+0Ch] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_45212D  +
cmp ecx 3 +
jz loc_45212D  +
push 0  +
jmp loc_45212F  +
push 1  +
push eax  +
push esi  +
call sub_4520A0  +
add esp 0Ch +
push offset dword_4BFDB0  +
push esi  +
call sub_422040  +
mov eax [edi+10h] +
add esp 8 +
mov ecx [eax] +
cmp ecx 4 +
jz loc_45216A  +
cmp ecx 3 +
jnz loc_45215C  +
cmp dword ptr [eax+4] 1 +
jnz loc_45216A  +
push 0  +
push eax  +
push esi  +
call sub_4520A0  +
add esp 0Ch +
jmp loc_4521E4  +
push 1  +
push eax  +
push esi  +
call sub_4520A0  +
add esp 0Ch +
jmp loc_4521E4  +
mov eax [edi+0Ch] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_45218B  +
cmp ecx 3 +
jz loc_45218B  +
push 0  +
jmp loc_45218D  +
push 1  +
push eax  +
push esi  +
call sub_4520A0  +
add esp 0Ch +
push offset dword_4BFDB4  +
push esi  +
call sub_422040  +
mov eax [edi+10h] +
add esp 8 +
mov ecx [eax] +
cmp ecx 3 +
jz loc_45216A  +
cmp ecx 4 +
jmp loc_452154  +
push offset aInternalElemen  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
cmp [esp+4+arg_8] 0 +
jz loc_4521F9  +
push offset word_4BFDB8  +
push esi  +
call sub_422040  +
add esp 8 +
mov eax [edi+4] +
sub eax 2 +
jz loc_45222D  +
sub eax 1 +
jz loc_45221C  +
sub eax 1 +
jnz loc_45223B  +
push offset word_4BFDBC  +
push esi  +
call sub_422040  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
push offset word_4DE9E0  +
push esi  +
call sub_422040  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
push offset word_4BC78C  +
push esi  +
call sub_422040  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jz loc_452391  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_452390  +
mov eax [edi+24h] +
dec eax  +
cmp eax 3 +
ja loc_452360  +
jmp ds:off_452394[eax*4]  +
push offset aElement  +
push esi  +
call sub_422040  +
mov eax [edi+30h] +
add esp 8 +
test eax eax +
jz loc_4522A8  +
push eax  +
push esi  +
call sub_422020  +
push offset word_4BC858  +
push esi  +
call sub_422040  +
add esp 10h +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
push offset aEmpty  +
push esi  +
call sub_422040  +
add esp 10h +
pop edi  +
pop esi  +
retn   +
push offset aElement  +
push esi  +
call sub_422040  +
mov eax [edi+30h] +
add esp 8 +
test eax eax +
jz loc_4522EC  +
push eax  +
push esi  +
call sub_422020  +
push offset word_4BC858  +
push esi  +
call sub_422040  +
add esp 10h +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
push offset aAny  +
push esi  +
call sub_422040  +
add esp 10h +
pop edi  +
pop esi  +
retn   +
push offset aElement  +
push esi  +
call sub_422040  +
mov eax [edi+30h] +
add esp 8 +
test eax eax +
jz loc_452330  +
push eax  +
push esi  +
call sub_422020  +
push offset word_4BC858  +
push esi  +
call sub_422040  +
add esp 10h +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
push 1  +
push dword ptr [edi+28h]  +
push esi  +
call sub_4520A0  +
push offset asc_4BFF1C  +
push esi  +
call sub_422040  +
add esp 24h +
pop edi  +
pop esi  +
retn   +
push offset aInternalElem_0  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop edi  +
pop esi  +
retn   +
***
test edi edi +
jz loc_4523F6  +
push esi  +
mov esi [esp+4+arg_4] +
nop   +
test esi esi +
jz loc_4523F5  +
push dword ptr [esi+4]  +
push edi  +
call sub_422020  +
add esp 8 +
cmp dword ptr [esi] 0 +
jz loc_4523E7  +
push offset dword_4BFDB4  +
push edi  +
call sub_422040  +
mov esi [esi] +
add esp 8 +
jmp loc_4523C0  +
push offset word_4BFDB8  +
push edi  +
call sub_422040  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jz loc_452478  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_452477  +
push offset aNotation_0  +
push esi  +
call sub_422040  +
push dword ptr [edi]  +
push esi  +
call sub_422020  +
add esp 10h +
cmp dword ptr [edi+4] 0 +
jz loc_452452  +
push offset aPublic_1  +
push esi  +
call sub_422040  +
push dword ptr [edi+4]  +
push esi  +
call loc_422060  +
add esp 10h +
cmp dword ptr [edi+8] 0 +
jz loc_452469  +
push offset asc_4BF8BC  +
jmp loc_452457  +
push offset aSystem_0  +
push esi  +
call sub_422040  +
push dword ptr [edi+8]  +
push esi  +
call loc_422060  +
add esp 10h +
push offset asc_4C0194  +
push esi  +
call sub_422040  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push dword ptr [esp+4]  +
push dword ptr [esp+0Ch]  +
call sub_452400  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
xor edx edx +
push esi  +
xor esi esi +
xor ecx ecx +
test eax eax +
jz loc_4524F1  +
cmp dword ptr [eax+1Ch] 0ABCD1234h +
mov esi [eax+4] +
mov ecx [eax] +
jz loc_4524E6  +
cmp dword ptr [eax+1Ch] 0ABCD1235h +
jnz loc_4524F1  +
sub eax ecx +
dec eax  +
cmp eax 0F8h +
cmovbe edx ecx +
mov eax [esp+4+arg_C] +
test eax eax +
jz loc_452509  +
push eax  +
push [esp+8+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
jmp loc_45251C  +
push [esp+4+arg_8]  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push [esp+2Ch+arg_4]  +
push 17h  +
push 0  +
push edx  +
push ecx  +
push esi  +
push 0  +
call sub_43A650  +
add esp 44h +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
xor edx edx +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
test eax eax +
jz loc_452573  +
mov ecx [eax+1Ch] +
mov edi [eax+4] +
mov edx [eax] +
cmp ecx 0ABCD1234h +
jz loc_452568  +
cmp ecx 0ABCD1235h +
jnz loc_452573  +
sub eax edx +
dec eax  +
cmp eax 0F8h +
cmovbe esi edx +
mov ecx [esp+8+arg_18] +
mov eax [esp+8+arg_10] +
push ecx  +
push [esp+0Ch+arg_14]  +
push eax  +
push [esp+14h+arg_C]  +
push 0  +
push 0  +
push ecx  +
push eax  +
push eax  +
push 0  +
push 0  +
push 2  +
push [esp+38h+arg_8]  +
push 17h  +
push [esp+40h+arg_4]  +
push esi  +
push edx  +
push edi  +
push 0  +
call sub_43A650  +
add esp 4Ch +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
xor edi edi +
xor esi esi +
test eax eax +
jz loc_4525E4  +
mov ecx [eax+1Ch] +
mov ebx [eax+4] +
mov esi [eax] +
cmp ecx 0ABCD1234h +
jz loc_4525D9  +
cmp ecx 0ABCD1235h +
jnz loc_4525E4  +
sub eax esi +
dec eax  +
cmp eax 0F8h +
cmovbe edi esi +
mov edx [esp+0Ch+arg_18] +
mov eax [esp+0Ch+arg_14] +
mov ecx [esp+0Ch+arg_10] +
push edx  +
push eax  +
push ecx  +
push [esp+18h+arg_C]  +
push 0  +
push eax  +
push 0  +
push edx  +
push ecx  +
push 0  +
push 0  +
push 2  +
push [esp+3Ch+arg_8]  +
push 17h  +
push [esp+44h+arg_4]  +
push edi  +
push esi  +
push ebx  +
push 0  +
call sub_43A650  +
add esp 4Ch +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
xor edx edx +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
test eax eax +
jz loc_452653  +
mov ecx [eax+1Ch] +
mov edi [eax+8] +
mov edx [eax] +
cmp ecx 0ABCD1234h +
jz loc_452648  +
cmp ecx 0ABCD1235h +
jnz loc_452653  +
sub eax edx +
dec eax  +
cmp eax 0F8h +
cmovbe esi edx +
mov ecx [esp+8+arg_18] +
mov eax [esp+8+arg_10] +
push ecx  +
push [esp+0Ch+arg_14]  +
push eax  +
push [esp+14h+arg_C]  +
push 0  +
push 0  +
push ecx  +
push eax  +
push eax  +
push 0  +
push 0  +
push 1  +
push [esp+38h+arg_8]  +
push 17h  +
push [esp+40h+arg_4]  +
push esi  +
push edx  +
push edi  +
push 0  +
call sub_43A650  +
add esp 4Ch +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_4527B5  +
push edi  +
mov edi [esi+20h] +
test edi edi +
jz loc_4526AA  +
mov edi [edi+50h] +
jmp loc_4526AC  +
xor edi edi +
push ebx  +
push esi  +
call sub_4262D0  +
mov ebx [esi+34h] +
add esp 4 +
test ebx ebx +
jz loc_4526E7  +
mov eax [ebx] +
test eax eax +
jz loc_4526CC  +
push eax  +
call sub_452950  +
add esp 4 +
mov eax [ebx+4] +
test eax eax +
jz loc_4526DD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+3Ch] +
pop ebx  +
test edi edi +
jz loc_452769  +
test eax eax +
jz loc_45270D  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45270D  +
push dword ptr [esi+3Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45272E  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45272E  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+38h] +
test eax eax +
jz loc_45274F  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45274F  +
push dword ptr [esi+38h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+30h] +
test eax eax +
jz loc_4527AA  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4527AA  +
push dword ptr [esi+30h]  +
jmp loc_4527A1  +
test eax eax +
jz loc_452777  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_452788  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+30h] +
test eax eax +
jz loc_452799  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+38h] +
test eax eax +
jz loc_4527AA  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
push ebp  +
mov ebp [esp+8] +
push esi  +
push edi  +
xor edi edi +
test ebp ebp +
jz loc_4527F0  +
mov edi [ebp+50h] +
mov esi [esp+14h] +
test esi esi +
jz loc_4528C8  +
push ebx  +
mov eax [esi] +
mov ebx [esi+10h] +
dec eax  +
cmp eax 3 +
ja loc_452897  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_452820  +
push eax  +
push ebp  +
call loc_4527E0  +
add esp 8 +
mov eax [esi+8] +
test edi edi +
jz loc_45285F  +
test eax eax +
jz loc_452845  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_452845  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_45287E  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45287E  +
push dword ptr [esi+18h]  +
jmp loc_452875  +
test eax eax +
jz loc_45286D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_45287E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov esi ebx +
test ebx ebx +
jnz loc_452800  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push offset aInternalElemen  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_452929  +
push esi  +
call sub_4262D0  +
push dword ptr [esi+28h]  +
push dword ptr [esi+20h]  +
call loc_4527E0  +
mov eax [esi+8] +
add esp 0Ch +
test eax eax +
jz loc_4528FE  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+30h] +
test eax eax +
jz loc_45290F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+34h] +
test eax eax +
jz loc_45291F  +
push eax  +
call loc_46E9D0  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
test esi esi +
jz loc_452983  +
mov eax [esi] +
test eax eax +
jz loc_452968  +
push eax  +
call sub_452950  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_452979  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jz loc_4529FA  +
mov eax [esi+14h] +
test eax eax +
jz loc_4529A6  +
mov edi [eax+50h] +
mov eax [esi+4] +
test eax eax +
jz loc_4529CB  +
test edi edi +
jz loc_4529BF  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4529CB  +
push dword ptr [esi+4]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4529F0  +
test edi edi +
jz loc_4529E4  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4529F0  +
push dword ptr [esi+0Ch]  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
test esi esi +
jz loc_452A65  +
mov eax [esi] +
test eax eax +
jz loc_452A39  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_452A4A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_452A5B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
push esi  +
push dword ptr [esp+8]  +
call sub_46F460  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_452ACF  +
mov eax [esi+4] +
test eax eax +
jz loc_452AB4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_452AC5  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz locret_452AF1  +
mov [esp+4] eax +
jmp sub_46F5E0  +
***
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
mov [esp+4+var_4] 0 +
test eax eax +
jnz loc_452B32  +
pop ecx  +
retn   +
push esi  +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_452B3F  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
push edi  +
lea eax [esp+0Ch+var_4] +
push eax  +
push [esp+10h+arg_8]  +
call sub_4253A0  +
add esp 8 +
mov edi eax +
push [esp+0Ch+arg_4]  +
test edi edi +
jz loc_452B8D  +
push [esp+10h+var_4]  +
push edi  +
push esi  +
call loc_450480  +
mov esi eax +
add esp 10h +
mov eax [esp+0Ch+var_4] +
test eax eax +
jz loc_452B7D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push 0  +
push [esp+14h+arg_8]  +
push esi  +
call loc_450480  +
add esp 10h +
mov esi eax +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
mov [esp+4+var_4] 0 +
push esi  +
test eax eax +
jz loc_452C21  +
mov esi [esp+8+arg_4] +
test esi esi +
jz loc_452C21  +
push ebx  +
mov ebx [eax+28h] +
test ebx ebx +
jnz loc_452BD7  +
pop ebx  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
push edi  +
lea eax [esp+10h+var_4] +
push eax  +
push esi  +
call sub_4253A0  +
push [esp+18h+var_4]  +
mov edi eax +
test edi edi +
cmovnz esi edi +
push esi  +
push ebx  +
call sub_450460  +
mov ecx [esp+24h+var_4] +
add esp 14h +
mov esi eax +
test ecx ecx +
jz loc_452C0C  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_452C1A  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
***
mov esi [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
test esi esi +
jz loc_452C7B  +
cmp dword ptr [esi+28h] 0 +
jnz loc_452C80  +
mov eax [esi+20h] +
xor ecx ecx +
test eax eax +
jz loc_452C54  +
mov ecx [eax+50h] +
cmp [esp+8+arg_8] 0 +
jz loc_452C7B  +
push ecx  +
push 0  +
call sub_450180  +
add esp 8 +
mov [esi+28h] eax +
test eax eax +
jnz loc_452C80  +
push offset aElementTableAl  +
push eax  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
mov esi [esi+28h] +
lea eax [esp+8+var_4] +
push ebx  +
mov ebx [esp+0Ch+arg_4] +
push edi  +
push eax  +
push ebx  +
mov [esp+18h+arg_0] esi +
call sub_4253A0  +
push [esp+18h+var_4]  +
mov edi eax +
test edi edi +
cmovnz ebx edi +
push ebx  +
push esi  +
call sub_450460  +
mov esi eax +
add esp 14h +
test esi esi +
jnz loc_452D1E  +
cmp [esp+10h+arg_8] eax +
jz loc_452D1E  +
push 38h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_452CDF  +
push offset aMallocFailed  +
push eax  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
push 38h  +
push 0  +
push esi  +
call sub_48CF40  +
push ebx  +
mov dword ptr [esi+4] 0Fh +
call sub_44E600  +
mov [esi+8] eax +
push [esp+20h+var_4]  +
call sub_44E600  +
push esi  +
mov [esi+30h] eax +
mov dword ptr [esi+24h] 0 +
push [esp+28h+var_4]  +
push ebx  +
push [esp+30h+arg_0]  +
call sub_44FBB0  +
add esp 24h +
mov eax [esp+10h+var_4] +
test eax eax +
jz loc_452D30  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_452D3E  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_452D5B  +
xor eax eax +
retn   +
mov eax [eax+2Ch] +
test eax eax +
jz loc_452D58  +
push [esp+arg_4]  +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push eax  +
call loc_450480  +
add esp 10h +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_452D8B  +
xor eax eax +
retn   +
mov eax [eax+28h] +
test eax eax +
jz loc_452D88  +
mov [esp+arg_0] eax +
jmp sub_450460  +
***
test esi esi +
jnz loc_452DAD  +
xor eax eax +
pop esi  +
retn   +
mov eax [esp+arg_4] +
test eax eax +
jz loc_452DA9  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_452DA9  +
push eax  +
push ecx  +
call sub_450440  +
add esp 8 +
test eax eax +
jz loc_452DA9  +
mov eax [eax+8] +
test eax eax +
cmovz eax esi +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test eax eax +
jz loc_452F00  +
test byte ptr [eax+5Ch] 4 +
jz loc_452F00  +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_452E46  +
cmp esi 41h +
jl loc_452E0D  +
cmp esi 5Ah +
jle loc_452E3F  +
cmp esi 61h +
jl loc_452E17  +
cmp esi 7Ah +
jle loc_452E3F  +
cmp esi 0C0h +
jl loc_452E27  +
cmp esi 0D6h +
jle loc_452E3F  +
cmp esi 0D8h +
jl loc_452E37  +
cmp esi 0F6h +
jle loc_452E3F  +
cmp esi 0F8h +
jl loc_452E58  +
mov eax 1 +
pop esi  +
retn   +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_452E3F  +
cmp esi 100h +
jl loc_452E9C  +
cmp esi 4E00h +
jl loc_452E70  +
cmp esi 9FA5h +
jle loc_452E3F  +
cmp esi 3007h +
jz loc_452E3F  +
cmp esi 3021h +
jl loc_452E88  +
cmp esi 3029h +
jle loc_452E3F  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_452E3F  +
jmp loc_452EA4  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_452E3F  +
cmp esi 2Eh +
jz loc_452E3F  +
cmp esi 2Dh +
jz loc_452E3F  +
cmp esi 5Fh +
jz loc_452E3F  +
cmp esi 3Ah +
jz loc_452E3F  +
cmp esi 100h +
jl loc_452EE6  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_452E3F  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_452EF1  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_453059  +
mov eax 1 +
pop esi  +
retn   +
mov eax [esp+4+arg_4] +
cmp eax 61h +
jl loc_452F12  +
cmp eax 7Ah +
jle loc_452E3F  +
cmp eax 41h +
jl loc_452F20  +
cmp eax 5Ah +
jle loc_452E3F  +
cmp eax 30h +
jl loc_452F2E  +
cmp eax 39h +
jle loc_452E3F  +
cmp eax 5Fh +
jz loc_452E3F  +
cmp eax 3Ah +
jz loc_452E3F  +
cmp eax 2Dh +
jz loc_452E3F  +
cmp eax 2Eh +
jz loc_452E3F  +
cmp eax 0B7h +
jz loc_452E3F  +
cmp eax 0C0h +
jl loc_452F6F  +
cmp eax 0D6h +
jle loc_452E3F  +
cmp eax 0D8h +
jl loc_452F81  +
cmp eax 0F6h +
jle loc_452E3F  +
cmp eax 0F8h +
jl loc_452F93  +
cmp eax 2FFh +
jle loc_452E3F  +
cmp eax 300h +
jl loc_452FA5  +
cmp eax 36Fh +
jle loc_452E3F  +
cmp eax 370h +
jl loc_452FB7  +
cmp eax 37Dh +
jle loc_452E3F  +
cmp eax 37Fh +
jl loc_452FC9  +
cmp eax 1FFFh +
jle loc_452E3F  +
cmp eax 200Ch +
jl loc_452FDB  +
cmp eax 200Dh +
jle loc_452E3F  +
cmp eax 203Fh +
jl loc_452FED  +
cmp eax 2040h +
jle loc_452E3F  +
cmp eax 2070h +
jl loc_452FFF  +
cmp eax 218Fh +
jle loc_452E3F  +
cmp eax 2C00h +
jl loc_453011  +
cmp eax 2FEFh +
jle loc_452E3F  +
cmp eax 3001h +
jl loc_453023  +
cmp eax 0D7FFh +
jle loc_452E3F  +
cmp eax 0F900h +
jl loc_453035  +
cmp eax 0FDCFh +
jle loc_452E3F  +
cmp eax 0FDF0h +
jl loc_453047  +
cmp eax 0FFFDh +
jle loc_452E3F  +
cmp eax 10000h +
jl loc_453059  +
cmp eax 0EFFFFh +
jle loc_452E3F  +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push esi  +
test eax eax +
jz loc_45311D  +
test byte ptr [eax+5Ch] 4 +
jz loc_45311D  +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_4530C6  +
cmp esi 41h +
jl loc_45308D  +
cmp esi 5Ah +
jle loc_4530BF  +
cmp esi 61h +
jl loc_453097  +
cmp esi 7Ah +
jle loc_4530BF  +
cmp esi 0C0h +
jl loc_4530A7  +
cmp esi 0D6h +
jle loc_4530BF  +
cmp esi 0D8h +
jl loc_4530B7  +
cmp esi 0F6h +
jle loc_4530BF  +
cmp esi 0F8h +
jl loc_4530D8  +
mov eax 1 +
pop esi  +
retn   +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4530BF  +
cmp esi 100h +
jl loc_453108  +
cmp esi 4E00h +
jl loc_4530F0  +
cmp esi 9FA5h +
jle loc_4530BF  +
cmp esi 3007h +
jz loc_4530BF  +
cmp esi 3021h +
jl loc_453108  +
cmp esi 3029h +
jle loc_4530BF  +
cmp esi 5Fh +
jz loc_4530BF  +
cmp esi 3Ah +
jnz loc_453217  +
mov eax 1 +
pop esi  +
retn   +
mov eax [esp+4+arg_4] +
cmp eax 61h +
jl loc_45312B  +
cmp eax 7Ah +
jle loc_4530BF  +
cmp eax 41h +
jl loc_453135  +
cmp eax 5Ah +
jle loc_4530BF  +
cmp eax 5Fh +
jz loc_4530BF  +
cmp eax 3Ah +
jz loc_4530BF  +
cmp eax 0C0h +
jl loc_453151  +
cmp eax 0D6h +
jle loc_4530BF  +
cmp eax 0D8h +
jl loc_453163  +
cmp eax 0F6h +
jle loc_4530BF  +
cmp eax 0F8h +
jl loc_453175  +
cmp eax 2FFh +
jle loc_4530BF  +
cmp eax 370h +
jl loc_453187  +
cmp eax 37Dh +
jle loc_4530BF  +
cmp eax 37Fh +
jl loc_453199  +
cmp eax 1FFFh +
jle loc_4530BF  +
cmp eax 200Ch +
jl loc_4531AB  +
cmp eax 200Dh +
jle loc_4530BF  +
cmp eax 2070h +
jl loc_4531BD  +
cmp eax 218Fh +
jle loc_4530BF  +
cmp eax 2C00h +
jl loc_4531CF  +
cmp eax 2FEFh +
jle loc_4530BF  +
cmp eax 3001h +
jl loc_4531E1  +
cmp eax 0D7FFh +
jle loc_4530BF  +
cmp eax 0F900h +
jl loc_4531F3  +
cmp eax 0FDCFh +
jle loc_4530BF  +
cmp eax 0FDF0h +
jl loc_453205  +
cmp eax 0FFFDh +
jle loc_4530BF  +
cmp eax 10000h +
jl loc_453217  +
cmp eax 0EFFFFh +
jle loc_4530BF  +
xor eax eax +
pop esi  +
retn   +
***
sub esp 74h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+74h+var_4] eax +
push ebp  +
mov ebp [esp+78h+arg_8] +
push esi  +
mov esi [esp+7Ch+arg_4] +
mov [esp+7Ch+var_70] esi +
push edi  +
mov edi [esp+80h+arg_0] +
mov [esp+80h+var_74] edi +
test ebp ebp +
jz loc_45344A  +
mov eax [ebp+8] +
test eax eax +
jz loc_45344A  +
mov ecx [ebp+24h] +
push ebx  +
test ecx ecx +
jz loc_4532D3  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_4532D3  +
mov edx offset aId +
mov bl [eax] +
cmp bl [edx] +
jnz loc_453295  +
test bl bl +
jz loc_453291  +
mov bl [eax+1] +
cmp bl [edx+1] +
jnz loc_453295  +
add eax 2 +
add edx 2 +
test bl bl +
jnz loc_453275  +
xor eax eax +
jmp loc_45329A  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_4532D0  +
mov eax offset aXml_1 +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_4532C3  +
test dl dl +
jz loc_4532BF  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_4532C3  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_4532A3  +
xor eax eax +
jmp loc_4532C8  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_453432  +
mov eax [ebp+8] +
test edi edi +
jz loc_4532E9  +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_4532FE  +
cmp dword ptr [edi+30h] 0 +
jnz loc_4532FE  +
cmp dword ptr [edi+4] 0Dh +
jz loc_453304  +
pop ebx  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+74h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 74h +
retn   +
cmp dword ptr [edi+4] 0Dh +
jnz loc_453361  +
push eax  +
push offset aId  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_453432  +
push dword ptr [ebp+8]  +
push offset aName_1  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4532E9  +
test esi esi +
jz loc_453432  +
push offset aA  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_453432  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+74h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 74h +
retn   +
test esi esi +
jz loc_4532E9  +
mov eax [esi+24h] +
xor ebx ebx +
test eax eax +
jz loc_45338C  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_45338C  +
push 32h  +
lea ecx [esp+88h+var_38] +
push ecx  +
push eax  +
push dword ptr [esi+8]  +
call sub_4221A0  +
add esp 10h +
mov edi eax +
jmp loc_45338F  +
mov edi [esi+8] +
mov eax [ebp+24h] +
test eax eax +
jz loc_4533B4  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4533B4  +
push 32h  +
lea ecx [esp+88h+var_6C] +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
call sub_4221A0  +
add esp 10h +
mov esi eax +
jmp loc_4533B7  +
mov esi [ebp+8] +
test edi edi +
jz loc_4533EE  +
test esi esi +
jz loc_4533EE  +
mov eax [esp+84h+var_74] +
push esi  +
push edi  +
push dword ptr [eax+2Ch]  +
call sub_452B20  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_4533EE  +
mov eax [esp+84h+var_74] +
mov eax [eax+30h] +
test eax eax +
jz loc_4533EE  +
push esi  +
push edi  +
push eax  +
call sub_452B20  +
add esp 0Ch +
mov ebx eax +
lea eax [esp+84h+var_6C] +
cmp esi eax +
jz loc_453405  +
cmp esi [ebp+8] +
jz loc_453405  +
push esi  +
call off_4EE2F4  +
add esp 4 +
lea eax [esp+84h+var_38] +
cmp edi eax +
jz loc_453420  +
mov eax [esp+84h+var_70] +
cmp edi [eax+8] +
jz loc_453420  +
push edi  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_4532E9  +
cmp dword ptr [ebx+28h] 2 +
jnz loc_4532E9  +
pop ebx  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebp  +
mov ecx [esp+74h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 74h +
retn   +
mov ecx [esp+80h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 74h +
retn   +
***
test esi esi +
jz loc_4534B3  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_4534B3  +
push [esp+arg_4]  +
push eax  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jnz loc_453499  +
mov eax [esi+30h] +
test eax eax +
jz loc_4534B3  +
push [esp+arg_4]  +
push eax  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jz loc_4534B3  +
mov eax [eax+24h] +
cmp eax 4 +
ja loc_4534AC  +
jmp ds:off_4534B8[eax*4]  +
xor eax eax +
pop esi  +
retn   +
mov eax 1 +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
test edi edi +
jnz loc_4534DD  +
xor eax eax +
pop edi  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jnz loc_4534ED  +
mov esi [edi+20h] +
test esi esi +
jz loc_4534FF  +
mov eax [esi+2Ch] +
test eax eax +
jnz loc_4534F9  +
cmp [esi+30h] eax +
jz loc_4534FF  +
cmp dword ptr [esi+4] 0Dh +
jnz loc_453504  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
push ebx  +
mov ebx [esp+8+arg_4] +
test ebx ebx +
jz loc_453547  +
push dword ptr [edi+8]  +
push dword ptr [ebx+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jnz loc_45353A  +
mov eax [esi+30h] +
test eax eax +
jz loc_453547  +
push dword ptr [edi+8]  +
push dword ptr [ebx+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jz loc_453547  +
mov eax [eax+28h] +
cmp eax 3 +
jz loc_45354D  +
cmp eax 4 +
jz loc_45354D  +
pop ebx  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
pop ebx  +
pop esi  +
mov eax 1 +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
push ebx  +
push ebp  +
xor ebx ebx +
push edi  +
test eax eax +
jz loc_453570  +
mov ebx [eax+50h] +
mov ebp [esp+0Ch+arg_8] +
lea eax [ebp-1] +
cmp eax 3 +
ja loc_453698  +
jmp ds:off_4536D0[eax*4]  +
mov edi [esp+0Ch+arg_4] +
test edi edi +
jnz loc_4535CE  +
push offset aXmlnewelementc  +
jmp loc_4535A3  +
mov edi [esp+0Ch+arg_4] +
test edi edi +
jz loc_4535CE  +
push offset aXmlnewelemen_0  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
push esi  +
push 1Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4535F5  +
push offset aMallocFailed  +
push eax  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
movq qword ptr [esi+10h] xmm0 +
mov dword ptr [esi+18h] 0 +
mov [esi] ebp +
mov dword ptr [esi+4] 1 +
test edi edi +
jz loc_453691  +
lea eax [esp+10h+arg_0] +
push eax  +
push edi  +
call sub_425440  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jnz loc_453655  +
test ebx ebx +
jnz loc_45363F  +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
call sub_44F4D0  +
add esp 0Ch +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push [esp+10h+arg_0]  +
push edi  +
test ebx ebx +
jnz loc_453679  +
call sub_44E8A0  +
push ebp  +
mov [esi+18h] eax +
call sub_44E600  +
add esp 0Ch +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push ebx  +
call sub_44F4D0  +
push 0FFFFFFFFh  +
push ebp  +
push ebx  +
mov [esi+18h] eax +
call sub_44F4D0  +
add esp 18h +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push offset aInternalElemen  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_4536EC  +
or eax 0FFFFFFFFh +
retn   +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jnz loc_4536FA  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push ebx  +
mov ebx [eax+40h] +
test ebx ebx +
jnz loc_453708  +
pop ebx  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push esi  +
push 1  +
push dword ptr [edi+0Ch]  +
push eax  +
call sub_424AB0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_45375D  +
push esi  +
push ebx  +
call sub_450440  +
add esp 8 +
test eax eax +
jz loc_453753  +
cmp [eax+8] edi +
jnz loc_453753  +
push offset sub_452990  +
push esi  +
push ebx  +
call sub_450620  +
push esi  +
call off_4EE2F4  +
add esp 10h +
mov dword ptr [edi+28h] 0 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
***
push edi  +
xor edi edi +
test ebx ebx +
jnz loc_453781  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
mov esi [ebx+2Ch] +
test esi esi +
jz loc_4537C7  +
push ebp  +
mov ebp [esp+0Ch+arg_8] +
nop   +
cmp dword ptr [esi+28h] 2 +
jnz loc_4537BF  +
inc edi  +
cmp edi 1 +
jle loc_4537BF  +
test ebp ebp +
jz loc_4537BF  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [ebx+8]  +
push offset aElementSHasT_0  +
push 208h  +
push ebx  +
push [esp+24h+arg_0]  +
call sub_452540  +
add esp 1Ch +
mov esi [esi+24h] +
test esi esi +
jnz loc_453790  +
pop ebp  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp [esp+10h] +
test ebp ebp +
jz loc_453B46  +
push ebx  +
mov ebx [esp+0Ch] +
mov ecx ebx +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4537E7  +
push esi  +
mov esi [esp+14h] +
sub ecx edx +
push edi  +
mov edi esi +
sub edi ecx +
mov [esp+1Ch] edi +
cmp edi 32h +
jge loc_453836  +
cmp edi 4 +
jle loc_453B43  +
cmp byte ptr [ecx+ebx-1] 2Eh +
jz loc_453B43  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_453818  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
pop edi  +
pop esi  +
mov [ebx+4] al +
pop ebx  +
pop ebp  +
retn   +
***
cmp dword ptr [esp+20h] 0 +
jz loc_453857  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453840  +
mov ax ds:word_4BFDA4 +
mov [edi] ax +
mov edi [esp+1Ch] +
mov eax [ebp+0] +
dec eax  +
cmp eax 3 +
ja loc_453ABC  +
jmp ds:off_453B48[eax*4]  +
lea ecx [ebx-1] +
nop   +
mov al [ecx+1] +
lea ecx [ecx+1] +
test al al +
jnz loc_453870  +
mov eax ds:dword_4BFDA8 +
mov [ecx] eax +
mov eax ds:dword_4BFDAC +
mov [ecx+4] eax +
jmp loc_453ABC  +
mov eax [ebp+18h] +
test eax eax +
jz loc_453913  +
push eax  +
call sub_44E660  +
add eax 0Ah +
add esp 4 +
cmp edi eax +
jge loc_4538C4  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_4538A6  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
pop edi  +
pop esi  +
mov [ebx+4] al +
pop ebx  +
pop ebp  +
retn   +
***
mov edx [ebp+18h] +
mov esi edx +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453900  +
mov ax ds:word_4BC858 +
mov [edi] ax +
push dword ptr [ebp+8]  +
call sub_44E660  +
add eax 0Ah +
add esp 4 +
cmp [esp+1Ch] eax +
jge loc_453946  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_453928  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
pop edi  +
pop esi  +
mov [ebx+4] al +
pop ebx  +
pop ebp  +
retn   +
***
mov edx [ebp+8] +
test edx edx +
jz loc_453ABC  +
mov esi edx +
mov al [edx] +
inc edx  +
test al al +
jnz loc_453953  +
sub edx esi +
lea edi [ebx-1] +
nop   +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_453960  +
mov ecx edx +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
jmp loc_453ABC  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_45398E  +
cmp ecx 3 +
jz loc_45398E  +
push 0  +
jmp loc_453990  +
push 1  +
push eax  +
push esi  +
push ebx  +
call loc_4537D0  +
mov ecx ebx +
add esp 10h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4539A0  +
sub ecx edx +
mov eax esi +
sub eax ecx +
cmp eax 32h +
jge loc_4539E5  +
cmp eax 4 +
jle loc_453B43  +
cmp byte ptr [ecx+ebx-1] 2Eh +
jz loc_453B43  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_4539C7  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
pop edi  +
pop esi  +
mov [ebx+4] al +
pop ebx  +
pop ebp  +
retn   +
***
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_4539E8  +
mov eax ds:dword_4BFDB0 +
mov [edi] eax +
mov eax [ebp+10h] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_453A0D  +
cmp dword ptr [eax+4] 1 +
jz loc_453AAF  +
cmp ecx 2 +
jz loc_453AAF  +
push 1  +
jmp loc_453AB1  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
cmp ecx 4 +
jz loc_453A30  +
cmp ecx 3 +
jz loc_453A30  +
push 0  +
jmp loc_453A32  +
push 1  +
push eax  +
push esi  +
push ebx  +
call loc_4537D0  +
mov ecx ebx +
add esp 10h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_453A42  +
sub ecx edx +
mov eax esi +
sub eax ecx +
cmp eax 32h +
jge loc_453A8E  +
cmp eax 4 +
jle loc_453B43  +
cmp byte ptr [ecx+ebx-1] 2Eh +
jz loc_453B43  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_453A70  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
pop edi  +
pop esi  +
mov [ebx+4] al +
pop ebx  +
pop ebp  +
retn   +
***
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453A91  +
mov eax ds:dword_4BFDB4 +
mov [edi] eax +
mov eax [ebp+10h] +
mov ecx [eax] +
cmp ecx 3 +
jmp loc_453A01  +
***
push 0  +
push eax  +
push esi  +
push ebx  +
call loc_4537D0  +
add esp 10h +
cmp dword ptr [esp+20h] 0 +
jz loc_453AD9  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453AC6  +
mov ax ds:word_4BFDB8 +
mov [edi] ax +
mov eax [ebp+4] +
sub eax 2 +
jz loc_453B28  +
sub eax 1 +
jz loc_453B08  +
sub eax 1 +
jnz loc_453B43  +
dec ebx  +
mov al [ebx+1] +
inc ebx  +
test al al +
jnz loc_453AF0  +
mov ax ds:word_4BFDBC +
mov edi ebx +
mov [edi] ax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
dec ebx  +
mov al [ebx+1] +
inc ebx  +
test al al +
jnz loc_453B10  +
mov ax ds:word_4DE9E0 +
mov edi ebx +
mov [edi] ax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
dec ebx  +
mov al [ebx+1] +
inc ebx  +
test al al +
jnz loc_453B30  +
mov ax ds:word_4BC78C +
mov edi ebx +
mov [edi] ax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi [esp+14h] +
test esi esi +
jz loc_453DCC  +
cmp dword ptr [esp+18h] 0 +
push ebx  +
mov ebx [esp+10h] +
push edi  +
jz loc_453B93  +
lea edi [ebx-1] +
nop   +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453B80  +
mov ax ds:word_4BFDA4 +
mov [edi] ax +
push ebp  +
mov ebp ebx +
lea ecx [ebp+1] +
movzx eax ds:byte_453DE4[eax] +
jmp ds:off_453DD0[eax*4]  +
mov eax [esi+24h] +
test eax eax +
jz loc_453C4B  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_453C4B  +
push eax  +
call sub_44E660  +
add eax 0Ah +
add esp 4 +
cmp edi eax +
jl loc_453D59  +
mov eax [esi+24h] +
mov edx [eax+0Ch] +
mov esi edx +
mov al [edx] +
inc edx  +
test al al +
jnz loc_453C04  +
sub edx esi +
lea edi [ebx-1] +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_453C10  +
mov ecx edx +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453C30  +
mov ax ds:word_4BC858 +
mov esi [esp+20h] +
mov [edi] ax +
mov edi [esp+10h] +
push dword ptr [esi+8]  +
call sub_44E660  +
add eax 0Ah +
add esp 4 +
cmp edi eax +
jl loc_453D7C  +
mov edx [esi+8] +
mov esi edx +
mov al [edx] +
inc edx  +
test al al +
jnz loc_453C66  +
sub edx esi +
lea edi [ebx-1] +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_453C72  +
mov ecx edx +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov esi [esp+20h] +
cmp dword ptr [esi+18h] 0 +
jz loc_453D23  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453CA0  +
jmp loc_453D1A  +
push esi  +
call sub_4237C0  +
add esp 4 +
test eax eax +
jnz loc_453D23  +
lea ecx [ebx-1] +
mov al [ecx+1] +
lea ecx [ecx+1] +
test al al +
jnz loc_453CC0  +
mov eax ds:dword_4C0BF4 +
mov [ecx] eax +
mov ax ds:word_4C0BF8 +
mov [ecx+4] ax +
cmp dword ptr [esi+18h] 0 +
jz loc_453D23  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453CE4  +
jmp loc_453D1A  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453CF3  +
mov eax ds:dword_4C0BFC +
mov [edi] eax +
cmp dword ptr [esi+18h] 0 +
jz loc_453D23  +
lea edi [ebx-1] +
mov al [edi+1] +
lea edi [edi+1] +
test al al +
jnz loc_453D10  +
mov ax word ptr ds:asc_4BF8BC +
mov [edi] ax +
mov esi [esi+18h] +
mov [esp+20h] esi +
test esi esi +
jnz loc_453B94  +
cmp [esp+24h] esi +
jz loc_453DC9  +
dec ebx  +
mov al [ebx+1] +
inc ebx  +
test al al +
jnz loc_453D40  +
mov ax ds:word_4BFDB8 +
mov edi ebx +
pop ebp  +
mov [edi] ax +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
***
mov eax [esp+1Ch] +
sub eax ebp +
cmp eax 4 +
jle loc_453DC9  +
cmp byte ptr [ebx+ebp-1] 2Eh +
jz loc_453DC9  +
dec ebx  +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_453D70  +
jmp loc_453DBA  +
mov eax [esp+1Ch] +
sub eax ebp +
cmp eax 4 +
jle loc_453DC9  +
cmp byte ptr [ebx+ebp-1] 2Eh +
jz loc_453DC9  +
dec ebx  +
nop   +
mov al [ebx+1] +
lea ebx [ebx+1] +
test al al +
jnz loc_453D90  +
jmp loc_453DBA  +
mov eax ds:dword_4BFDC0 +
mov [ebx] eax +
mov al ds:byte_4BFDC4 +
mov [ebx+4] al +
pop ebp  +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
***
mov eax [esp+arg_0] +
xor edx edx +
push esi  +
xor esi esi +
xor ecx ecx +
test eax eax +
jz loc_453E31  +
cmp dword ptr [eax+1Ch] 0ABCD1234h +
mov esi [eax+4] +
mov ecx [eax] +
jz loc_453E26  +
cmp dword ptr [eax+1Ch] 0ABCD1235h +
jnz loc_453E31  +
sub eax ecx +
dec eax  +
cmp eax 0F8h +
cmovbe edx ecx +
mov eax [esp+4+arg_4] +
test eax eax +
jz loc_453E63  +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push 2  +
push 17h  +
push 0  +
push edx  +
push ecx  +
push esi  +
push 0  +
call sub_43A650  +
add esp 44h +
pop esi  +
retn   +
push offset aMemoryAlloca_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2  +
push 17h  +
push 0  +
push edx  +
push ecx  +
push esi  +
push 0  +
call sub_43A650  +
add esp 40h +
pop esi  +
retn   +
***
sub esp 44h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+44h+var_4] eax +
push ebx  +
mov ebx [esp+48h+arg_8] +
push esi  +
mov esi [esp+4Ch+arg_4] +
push edi  +
mov edi [esp+50h+arg_0] +
test edi edi +
jnz loc_453F1B  +
xor ecx ecx +
xor edx edx +
test esi esi +
jz loc_453EDC  +
mov eax [esi+1Ch] +
mov edi [esi+4] +
mov edx [esi] +
cmp eax 0ABCD1234h +
jz loc_453ECF  +
cmp eax 0ABCD1235h +
jnz loc_453EDC  +
sub esi edx +
lea eax [esi-1] +
cmp eax 0F8h +
cmovbe ecx edx +
push 0  +
push 0  +
push ebx  +
push offset aFoundNullConte  +
push 0  +
push 0  +
push 0  +
push ebx  +
push ebx  +
push 0  +
push 0  +
push 2  +
push 1  +
push 17h  +
push 0  +
push ecx  +
push edx  +
push edi  +
push 0  +
call sub_43A650  +
add esp 4Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov eax [edi] +
dec eax  +
push ebp  +
cmp eax 3 +
ja loc_454228  +
jmp ds:off_454250[eax*4]  +
push 0  +
push 0  +
push ebx  +
push offset aFoundPcdataInC  +
push 1  +
push 0  +
push esi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov ebp [esi+3Ch] +
lea eax [esp+54h+var_38] +
push 32h  +
push eax  +
push dword ptr [edi+18h]  +
push dword ptr [edi+8]  +
call sub_4221A0  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jnz loc_453F9C  +
push offset aBuildingConten  +
push esi  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov eax [edi+4] +
dec eax  +
cmp eax 3 +
ja loc_45402C  +
jmp ds:off_454260[eax*4]  +
push 0  +
push ebx  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B610  +
add esp 14h +
mov [esi+3Ch] eax +
jmp loc_45402C  +
push 0  +
push ebx  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B610  +
push eax  +
push ebp  +
push dword ptr [esi+38h]  +
mov [esi+3Ch] eax +
call sub_46B580  +
jmp loc_454029  +
push 0  +
push ebx  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B610  +
push 0  +
push ebx  +
push eax  +
push eax  +
push dword ptr [esi+38h]  +
mov [esi+3Ch] eax +
call sub_46B610  +
add esp 28h +
jmp loc_45402C  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B580  +
push 0  +
push ebx  +
push eax  +
push eax  +
push dword ptr [esi+38h]  +
mov [esi+3Ch] eax +
call sub_46B610  +
add esp 20h +
lea eax [esp+54h+var_38] +
cmp ebx eax +
jz loc_454210  +
cmp ebx [edi+8] +
jz loc_454210  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov eax 1 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov ebp [edi+4] +
mov eax [esi+3Ch] +
mov [esp+54h+var_44] eax +
cmp ebp 1 +
jz loc_454087  +
push 0  +
push eax  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 0Ch +
mov [esp+54h+var_44] eax +
mov [esi+3Ch] eax +
push ebx  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_453E90  +
mov edi [edi+10h] +
add esp 0Ch +
cmp dword ptr [edi] 3 +
jnz loc_4540A2  +
cmp dword ptr [edi+4] 1 +
jz loc_454087  +
push ebx  +
push esi  +
push edi  +
call sub_453E90  +
mov ebx [esi+3Ch] +
push 0  +
push ebx  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 18h +
mov [esi+3Ch] eax +
sub ebp 2 +
jz loc_45410F  +
sub ebp 1 +
jz loc_4540DC  +
sub ebp 1 +
jnz loc_454210  +
mov edi [esp+54h+var_44] +
push edi  +
push ebx  +
jmp loc_454205  +
mov edi [esp+54h+var_44] +
push eax  +
push edi  +
push dword ptr [esi+38h]  +
call sub_46B580  +
push edi  +
push ebx  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 18h +
mov eax 1 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov edi [esp+54h+var_44] +
push eax  +
push edi  +
jmp loc_454205  +
mov ebp [edi+4] +
mov [esp+54h+var_3C] ebp +
cmp ebp 4 +
jz loc_45412B  +
cmp ebp 3 +
jnz loc_45413E  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 0Ch +
mov [esi+3Ch] eax +
mov eax [esi+3Ch] +
push dword ptr [esi+38h]  +
mov [esp+58h+var_44] eax +
call sub_46B5E0  +
mov ebp [esp+58h+var_44] +
add esp 4 +
mov [esp+54h+var_40] eax +
push ebx  +
mov [esi+3Ch] ebp +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_453E90  +
push [esp+60h+var_40]  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B580  +
mov edi [edi+10h] +
add esp 18h +
cmp dword ptr [edi] 4 +
jnz loc_454185  +
cmp dword ptr [edi+4] 1 +
jz loc_454158  +
push ebx  +
mov eax ebp +
push esi  +
push edi  +
mov [esi+3Ch] eax +
call sub_453E90  +
mov edi [esp+60h+var_40] +
push edi  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B580  +
push 0  +
push edi  +
push dword ptr [esi+38h]  +
call sub_46B580  +
mov ebp [esp+78h+var_3C] +
add esp 24h +
mov [esi+3Ch] eax +
sub ebp 2 +
jz loc_454200  +
sub ebp 1 +
jz loc_4541CD  +
sub ebp 1 +
jnz loc_454210  +
push [esp+54h+var_44]  +
push edi  +
jmp loc_454205  +
mov ebx [esp+54h+var_44] +
push eax  +
push ebx  +
push dword ptr [esi+38h]  +
call sub_46B580  +
push ebx  +
push edi  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 18h +
mov eax 1 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
push eax  +
push [esp+58h+var_44]  +
push dword ptr [esi+38h]  +
call sub_46B580  +
add esp 0Ch +
pop ebp  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
push ebx  +
push offset aContentmodelBr  +
push 1  +
push esi  +
call sub_4524C0  +
mov ecx [esp+64h+var_4] +
add esp 10h +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
***
mov eax 138Ch +
call sub_489360  +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+arg_1384] eax +
push esi  +
mov esi [esp+4+arg_138C] +
push edi  +
mov edi [esp+8+arg_1390] +
test esi esi +
jz loc_4542CB  +
test edi edi +
jz loc_4542CB  +
cmp dword ptr [edi+4] 0Fh +
jnz loc_4542CB  +
cmp dword ptr [edi+24h] 4 +
jnz loc_4543B3  +
mov eax [edi+34h] +
test eax eax +
jz loc_4542E4  +
push eax  +
call sub_46F370  +
add esp 4 +
test eax eax +
jnz loc_4543B3  +
mov [esi+24h] eax +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+arg_1384] +
xor ecx esp +
call sub_488C1C  +
add esp 138Ch +
retn   +
call sub_46CDF0  +
mov [esi+38h] eax +
test eax eax +
jnz loc_454308  +
push eax  +
push eax  +
push dword ptr [edi+8]  +
push offset aCannotCreateAu  +
push 1  +
push edi  +
push esi  +
call sub_452540  +
add esp 1Ch +
jmp loc_4542CB  +
push eax  +
call sub_46B570  +
mov [esi+3Ch] eax +
push dword ptr [edi+8]  +
push esi  +
push dword ptr [edi+28h]  +
call sub_453E90  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
call sub_46B690  +
push dword ptr [esi+38h]  +
call sub_46B540  +
push eax  +
mov [edi+34h] eax +
call sub_46F370  +
add esp 20h +
cmp eax 1 +
jz loc_45439A  +
push 1  +
push dword ptr [edi+28h]  +
lea eax [esp+10h] +
mov byte ptr [esp+10h] 0 +
push 1388h  +
push eax  +
call loc_4537D0  +
push 0  +
lea eax [esp+1Ch] +
push eax  +
push dword ptr [edi+8]  +
push offset aContentModelOf  +
push 1F9h  +
push edi  +
push esi  +
call sub_452540  +
push dword ptr [esi+38h]  +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+3Ch] 0 +
call sub_46CDD0  +
add esp 30h +
mov dword ptr [esi+38h] 0 +
jmp loc_4542CB  +
push dword ptr [esi+38h]  +
mov dword ptr [esi+3Ch] 0 +
call sub_46CDD0  +
add esp 4 +
mov dword ptr [esi+38h] 0 +
mov ecx [esp+8+arg_1384] +
mov eax 1 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 138Ch +
retn   +
***
sub esp 48h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+44h] eax +
mov eax [esp+4Ch] +
push ebx  +
mov ebx [esp+58h] +
push ebp  +
mov ebp [esp+58h] +
mov [esp+14h] eax +
mov eax [esp+64h] +
mov [esp+10h] eax +
mov dword ptr [esp+0Ch] 0 +
push edi  +
mov edi [esp+64h] +
mov [esp+0Ch] edi +
test ebp ebp +
jnz loc_454421  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
test ebx ebx +
jz loc_45440D  +
test edi edi +
jz loc_45440D  +
test eax eax +
jz loc_45440D  +
mov eax [ebx+24h] +
push esi  +
test eax eax +
jz loc_4544B9  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4544B9  +
push 32h  +
lea ecx [esp+24h] +
push ecx  +
push eax  +
push dword ptr [ebx+8]  +
call sub_4221A0  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_4545BA  +
push dword ptr [esp+10h]  +
push edi  +
push dword ptr [ebp+2Ch]  +
call sub_452B20  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_45449A  +
mov eax [ebp+30h] +
test eax eax +
jz loc_45449A  +
push dword ptr [esp+10h]  +
push edi  +
push eax  +
call sub_452B20  +
mov esi eax +
add esp 0Ch +
xor eax eax +
mov ecx 1 +
test esi esi +
cmovnz eax ecx +
mov [esp+14h] eax +
lea eax [esp+20h] +
cmp edi eax +
jz loc_4544B1  +
cmp edi [ebx+8] +
jz loc_4544B1  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov edi [esp+10h] +
test esi esi +
jnz loc_4544FD  +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_4544D3  +
push edi  +
push dword ptr [ebx+8]  +
push eax  +
call sub_452B20  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_4544FD  +
mov eax [ebp+30h] +
test eax eax +
jz loc_4545BA  +
push edi  +
push dword ptr [ebx+8]  +
push eax  +
call sub_452B20  +
mov esi eax +
add esp 0Ch +
test esi esi +
jz loc_4545BA  +
mov dword ptr [esp+14h] 1 +
cmp dword ptr [esi+28h] 1 +
jz loc_4545BA  +
push dword ptr [esp+18h]  +
call sub_44E600  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4545BA  +
mov edx [esp+18h] +
mov ecx esi +
mov eax edx +
cmp byte ptr [edx] 20h +
jnz loc_454536  +
mov dl [eax] +
test dl dl +
jz loc_454560  +
cmp dl 20h +
jnz loc_454556  +
inc eax  +
cmp byte ptr [eax] 20h +
jz loc_454545  +
cmp byte ptr [eax] 0 +
jz loc_454560  +
mov byte ptr [ecx] 20h +
inc ecx  +
jmp loc_45455A  +
mov [ecx] dl +
inc ecx  +
inc eax  +
mov dl [eax] +
test dl dl +
jnz loc_454540  +
mov byte ptr [ecx] 0 +
cmp dword ptr [ebp+28h] 0 +
jz loc_4545A5  +
cmp dword ptr [esp+14h] 1 +
jnz loc_4545A5  +
push esi  +
push dword ptr [esp+1Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4545A5  +
push eax  +
push dword ptr [ebx+8]  +
push edi  +
mov edi [esp+28h] +
push offset aStandaloneSOnS  +
push 212h  +
push ebx  +
push edi  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [edi+24h] 0 +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
mov ecx [esp+54h] +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push ebp  +
push esi  +
jz loc_4546D1  +
mov ebp [esp+0Ch+arg_4] +
test ebp ebp +
jz loc_4546D1  +
mov esi [esp+0Ch+arg_8] +
test esi esi +
jz loc_4546D1  +
cmp dword ptr [esi+8] 0 +
jz loc_4546D1  +
push ebx  +
push edi  +
mov edi [esp+14h+arg_C] +
test edi edi +
jz loc_454610  +
mov dword ptr [edi] 0 +
mov eax [esi+24h] +
test eax eax +
jz loc_45466C  +
mov ecx [eax+0Ch] +
mov [esp+14h+var_4] ecx +
test ecx ecx +
jz loc_45466C  +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_45464B  +
mov eax [eax+28h] +
test eax eax +
jz loc_45464B  +
push ecx  +
push dword ptr [esi+8]  +
push eax  +
call sub_450460  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_4546C9  +
mov ecx [esp+14h+var_4] +
mov eax [ebp+30h] +
test eax eax +
jz loc_45466C  +
mov eax [eax+28h] +
test eax eax +
jz loc_45466C  +
push ecx  +
push dword ptr [esi+8]  +
push eax  +
call sub_450460  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_454699  +
push dword ptr [esi+8]  +
push dword ptr [ebp+2Ch]  +
call sub_452BB0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_4546C9  +
mov eax [ebp+30h] +
test eax eax +
jz loc_4546AB  +
push dword ptr [esi+8]  +
push eax  +
call sub_452BB0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_4546AB  +
test edi edi +
jz loc_4546C9  +
mov dword ptr [edi] 1 +
mov eax ebx +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
push 0  +
push 0  +
push dword ptr [esi+8]  +
push offset aNoDeclaratio_0  +
push 216h  +
push esi  +
push [esp+2Ch+arg_0]  +
call sub_452540  +
add esp 1Ch +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
pop ecx  +
retn   +
pop esi  +
xor eax eax +
pop ebp  +
pop ecx  +
retn   +
***
sub esp 38h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+38h+var_4] eax +
push ebx  +
mov ebx [esp+3Ch+arg_0] +
push ebp  +
mov ebp [esp+40h+arg_8] +
push esi  +
mov esi [esp+44h+arg_C] +
push edi  +
mov edi [esp+48h+arg_4] +
test ebx ebx +
jnz loc_45471B  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+38h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
test edi edi +
jz loc_454706  +
test ebp ebp +
jz loc_454706  +
test esi esi +
jz loc_454706  +
mov eax [edi+24h] +
test eax eax +
jz loc_454763  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_454763  +
push 32h  +
lea ecx [esp+4Ch+var_38] +
push ecx  +
push eax  +
push dword ptr [edi+8]  +
call sub_4221A0  +
add esp 10h +
test eax eax +
jz loc_454706  +
lea ecx [esp+48h+var_38] +
cmp eax ecx +
jz loc_454763  +
cmp eax [edi+8] +
jz loc_454763  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebp  +
push dword ptr [edi+8]  +
push dword ptr [ebx+2Ch]  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jnz loc_454792  +
mov eax [ebx+30h] +
test eax eax +
jz loc_454706  +
push ebp  +
push dword ptr [edi+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
test eax eax +
jz loc_454706  +
cmp dword ptr [eax+28h] 1 +
jz loc_454706  +
push esi  +
call sub_44E600  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_454706  +
cmp byte ptr [esi] 20h +
jnz loc_4547BA  +
inc esi  +
cmp byte ptr [esi] 20h +
jz loc_4547B4  +
mov cl [esi] +
test cl cl +
jz loc_4547E0  +
cmp cl 20h +
jnz loc_4547D6  +
inc esi  +
cmp byte ptr [esi] 20h +
jz loc_4547C5  +
cmp byte ptr [esi] 0 +
jz loc_4547E0  +
mov byte ptr [eax] 20h +
inc eax  +
jmp loc_4547DA  +
mov [eax] cl +
inc eax  +
inc esi  +
mov cl [esi] +
test cl cl +
jnz loc_4547C0  +
mov ecx [esp+48h+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov byte ptr [eax] 0 +
xor ecx esp +
mov eax edx +
call sub_488C1C  +
add esp 38h +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_454934  +
mov eax [esi+28h] +
push ebx  +
push edi  +
mov edi [esp+14h] +
cmp eax 5 +
jl loc_454879  +
cmp eax 6 +
jle loc_454825  +
cmp eax 0Ah +
jnz loc_454879  +
mov ecx [esi+30h] +
test ecx ecx +
jz loc_45484A  +
push ecx  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [edi+20h]  +
push edi  +
call loc_454B50  +
add esp 14h +
test eax eax +
jnz loc_45484A  +
cmp dword ptr [edi+24h] 1 +
jnz loc_45484A  +
mov [edi+24h] eax +
mov ebx [esi+34h] +
test ebx ebx +
jz loc_454879  +
push dword ptr [ebx+4]  +
push dword ptr [esi+28h]  +
push dword ptr [esi+8]  +
push dword ptr [edi+20h]  +
push edi  +
call loc_454B50  +
add esp 14h +
test eax eax +
jnz loc_454873  +
cmp dword ptr [edi+24h] 1 +
jnz loc_454873  +
mov [edi+24h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_454851  +
cmp dword ptr [esi+28h] 0Ah +
jnz loc_454932  +
mov eax [esi+3Ch] +
mov ebx [esi+20h] +
test eax eax +
jnz loc_4548A4  +
push dword ptr [esi+8]  +
push offset aXmlvalidateatt  +
push 1  +
push edi  +
call sub_4524C0  +
add esp 10h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
test ebx ebx +
jz loc_4548CA  +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jnz loc_4548E7  +
push dword ptr [esi+3Ch]  +
push dword ptr [ebx+30h]  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jnz loc_4548E7  +
mov eax [esi+14h] +
test eax eax +
jz loc_454915  +
cmp dword ptr [eax+4] 0Eh +
jnz loc_454915  +
push dword ptr [esi+3Ch]  +
push eax  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jz loc_454915  +
cmp dword ptr [eax+24h] 1 +
jnz loc_454932  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+8]  +
push offset aNotationAttr_0  +
push 1FEh  +
push 0  +
push edi  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [edi+24h] 0 +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+8]  +
push offset aAttributeSCoul  +
push 216h  +
push 0  +
push edi  +
call sub_452540  +
add esp 1Ch +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push edi  +
mov edi [esp+10h] +
mov ebx 1 +
test edi edi +
jnz loc_454954  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
cmp dword ptr [edi+2Ch] 0 +
jnz loc_454960  +
cmp dword ptr [edi+30h] 0 +
jz loc_45494F  +
push esi  +
mov esi [esp+18h] +
test esi esi +
jz loc_454B28  +
mov eax [esi+30h] +
push ebp  +
mov ebp [esp+14h] +
test eax eax +
jz loc_4549AA  +
push eax  +
push dword ptr [esi+28h]  +
push edi  +
call sub_454D40  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_4549A7  +
push eax  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+8]  +
push offset aSyntaxOfDefaul  +
push 1F4h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
and ebx 1 +
cmp dword ptr [esi+28h] 2 +
jnz loc_454ADA  +
mov eax [esi+2Ch] +
cmp eax 3 +
jz loc_4549DF  +
cmp eax 2 +
jz loc_4549DF  +
push 0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+8]  +
push offset aIdAttributeSOf  +
push 200h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
xor ebx ebx +
cmp dword ptr [esi+28h] 2 +
jnz loc_454ADA  +
push dword ptr [esi+3Ch]  +
push dword ptr [edi+2Ch]  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jz loc_454A18  +
mov eax [eax+2Ch] +
xor ecx ecx +
test eax eax +
jz loc_454A12  +
cmp dword ptr [eax+28h] 2 +
jnz loc_454A0B  +
inc ecx  +
mov eax [eax+24h] +
test eax eax +
jnz loc_454A04  +
mov [esp+18h] ecx +
jmp loc_454A47  +
mov eax [edi+2Ch] +
mov dword ptr [esp+18h] 0 +
test eax eax +
jz loc_454A66  +
lea ecx [esp+18h] +
push ecx  +
push offset loc_454B30  +
push dword ptr [esi+3Ch]  +
push 0  +
push 0  +
push dword ptr [eax+2Ch]  +
call sub_4507E0  +
mov ecx [esp+30h] +
add esp 18h +
cmp ecx 1 +
jle loc_454A66  +
push dword ptr [esi+8]  +
push ecx  +
push dword ptr [esi+3Ch]  +
push offset aElementSHasDId  +
push 202h  +
push esi  +
push ebp  +
call sub_4525B0  +
jmp loc_454AD7  +
mov eax [edi+30h] +
test eax eax +
jz loc_454ADA  +
push dword ptr [esi+3Ch]  +
xor edi edi +
push eax  +
call sub_452BB0  +
add esp 8 +
test eax eax +
jz loc_454AB3  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_454A94  +
cmp dword ptr [eax+28h] 2 +
jnz loc_454A8D  +
inc edi  +
mov eax [eax+24h] +
test eax eax +
jnz loc_454A86  +
cmp edi 1 +
jle loc_454AB3  +
push dword ptr [esi+8]  +
push edi  +
push dword ptr [esi+3Ch]  +
push offset aElementSHasD_0  +
push 202h  +
push esi  +
push ebp  +
call sub_4525B0  +
jmp loc_454AD7  +
mov eax [esp+18h] +
add eax edi +
cmp eax 1 +
jle loc_454ADA  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [esi+3Ch]  +
push offset aElementSHasIdA  +
push 202h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
cmp dword ptr [esi+30h] 0 +
jz loc_454B27  +
mov edi [esi+34h] +
test edi edi +
jz loc_454B27  +
push dword ptr [esi+30h]  +
push dword ptr [edi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_454B27  +
mov edi [edi] +
test edi edi +
jnz loc_454AF0  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+30h]  +
push offset aDefaultValueSF  +
push 1F6h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
xor ebx ebx +
pop ebp  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+4] +
cmp dword ptr [eax+28h] 2 +
jnz locret_454B40  +
mov eax [esp+8] +
inc dword ptr [eax]  +
retn   +
***
mov eax [esp+10h] +
push ebp  +
mov ebp 1 +
push esi  +
push edi  +
sub eax 5 +
jz loc_454CB3  +
sub eax ebp +
jz loc_454BE0  +
sub eax 4 +
jnz loc_454D2B  +
mov esi [esp+14h] +
mov edi [esp+20h] +
mov eax [esi+2Ch] +
test eax eax +
jz loc_454B9A  +
mov eax [eax+24h] +
test eax eax +
jz loc_454B9A  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_454D2B  +
mov eax [esi+30h] +
test eax eax +
jz loc_454BBA  +
mov eax [eax+24h] +
test eax eax +
jz loc_454BBA  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_454D2B  +
push 0  +
push edi  +
push dword ptr [esp+20h]  +
push offset aNotationAttrib  +
push 219h  +
push esi  +
push dword ptr [esp+28h]  +
call sub_452540  +
add esp 1Ch +
xor ebp ebp +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push dword ptr [esp+20h]  +
call sub_44E600  +
add esp 4 +
mov [esp+1Ch] eax +
test eax eax +
jnz loc_454BF8  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
cmp byte ptr [eax] 0 +
mov esi eax +
jz loc_454CA3  +
push ebx  +
cmp byte ptr [esi] 0 +
mov edi esi +
jz loc_454C28  +
mov al [esi] +
cmp al 20h +
jz loc_454C28  +
cmp al 9 +
jb loc_454C1E  +
cmp al 0Ah +
jbe loc_454C28  +
cmp al 0Dh +
jz loc_454C28  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_454C10  +
mov bl [esi] +
push edi  +
push dword ptr [esp+1Ch]  +
mov byte ptr [esi] 0 +
call sub_458150  +
add esp 8 +
test eax eax +
jnz loc_454C50  +
push eax  +
push edi  +
push dword ptr [esp+24h]  +
push offset aEntitiesAttrib  +
push 217h  +
jmp loc_454C67  +
cmp dword ptr [eax+30h] 3 +
jz loc_454C7A  +
push 0  +
push edi  +
push dword ptr [esp+24h]  +
push offset aEntitiesAttr_0  +
push 1FFh  +
mov eax [esp+2Ch] +
push eax  +
push dword ptr [esp+2Ch]  +
call sub_452540  +
add esp 1Ch +
xor ebp ebp +
test bl bl +
jz loc_454C9E  +
mov [esi] bl +
mov al [esi] +
cmp al 20h +
jz loc_454C92  +
cmp al 9 +
jb loc_454C8E  +
cmp al 0Ah +
jbe loc_454C92  +
cmp al 0Dh +
jnz loc_454C95  +
inc esi  +
jmp loc_454C80  +
***
cmp byte ptr [esi] 0 +
jnz loc_454C04  +
mov eax [esp+20h] +
pop ebx  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi [esp+20h] +
mov esi [esp+14h] +
push edi  +
push esi  +
call sub_458150  +
add esp 8 +
test eax eax +
jnz loc_454D05  +
cmp [esi+28h] ebp +
jnz loc_454CDF  +
push edi  +
push esi  +
mov [esi+28h] eax +
call sub_458150  +
add esp 8 +
test eax eax +
jnz loc_454D05  +
push 0  +
push edi  +
push dword ptr [esp+20h]  +
push offset aEntityAttribut  +
push 217h  +
push esi  +
push dword ptr [esp+28h]  +
call sub_452540  +
add esp 1Ch +
xor ebp ebp +
mov eax ebp +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
cmp dword ptr [eax+30h] 3 +
jz loc_454D2B  +
push 0  +
push edi  +
push dword ptr [esp+20h]  +
push offset aEntityAttrib_0  +
push 1FFh  +
push esi  +
push dword ptr [esp+28h]  +
call sub_452540  +
add esp 1Ch +
xor ebp ebp +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
retn   +
***
mov eax [esp+arg_4] +
add eax 0FFFFFFFEh +
cmp eax 8 +
ja loc_454D97  +
jmp ds:off_454DA0[eax*4]  +
push [esp+arg_8]  +
push [esp+4+arg_0]  +
call loc_455650  +
add esp 8 +
retn   +
push [esp+arg_8]  +
push [esp+4+arg_0]  +
call sub_4555C0  +
add esp 8 +
retn   +
push [esp+arg_8]  +
push [esp+4+arg_0]  +
call loc_455A60  +
add esp 8 +
retn   +
push [esp+arg_8]  +
push [esp+4+arg_0]  +
call sub_455760  +
add esp 8 +
retn   +
mov eax 1 +
retn   +
***
test edi edi +
jnz loc_454E0D  +
xor eax eax +
pop edi  +
retn   +
mov ecx [esp+arg_4] +
push esi  +
test ecx ecx +
jnz loc_454E6E  +
mov eax [edi+1Ch] +
mov esi [edi+4] +
mov edx [edi] +
cmp eax 0ABCD1234h +
jz loc_454E2C  +
cmp eax 0ABCD1235h +
jnz loc_454E39  +
sub edi edx +
lea eax [edi-1] +
cmp eax 0F8h +
cmovbe ecx edx +
push offset aXmlvalidatedoc  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 209h  +
push 17h  +
push 0  +
push ecx  +
push edx  +
push esi  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov esi [edi+1Ch] +
push edi  +
mov dword ptr [edi+1Ch] 0 +
mov eax [ecx+44h] +
push offset loc_454DD0  +
push eax  +
mov [edi+20h] ecx +
mov dword ptr [edi+24h] 1 +
call sub_4507B0  +
mov eax [edi+24h] +
add esp 0Ch +
mov [edi+1Ch] esi +
pop esi  +
pop edi  +
retn   +
***
mov edi [esp+arg_4] +
test edi edi +
jz loc_454F3E  +
mov esi [esp+arg_0] +
test esi esi +
jz loc_454F3E  +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_454EC6  +
cmp dword ptr [edi+30h] 0 +
jz loc_454F3E  +
push ebx  +
mov [esi+20h] edi +
mov dword ptr [esi+24h] 1 +
mov ebx [edi+2Ch] +
test ebx ebx +
jz loc_454F04  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_454EEE  +
push esi  +
push offset loc_454800  +
push eax  +
call sub_4507B0  +
add esp 0Ch +
mov eax [ebx+30h] +
test eax eax +
jz loc_454F04  +
push esi  +
push offset loc_455B80  +
push eax  +
call sub_4507B0  +
add esp 0Ch +
mov edi [edi+30h] +
pop ebx  +
test edi edi +
jz loc_454F38  +
mov eax [edi+2Ch] +
test eax eax +
jz loc_454F22  +
push esi  +
push offset loc_454800  +
push eax  +
call sub_4507B0  +
add esp 0Ch +
mov eax [edi+30h] +
test eax eax +
jz loc_454F38  +
push esi  +
push offset loc_455B80  +
push eax  +
call sub_4507B0  +
add esp 0Ch +
mov eax [esi+24h] +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
test ebx ebx +
jnz loc_454F5D  +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+4] +
cmp eax 13h +
jz loc_455051  +
cmp eax 14h +
jz loc_455051  +
cmp eax 12h +
jz loc_455051  +
push ebp  +
mov ebp [esp+4+arg_4] +
test ebp ebp +
jz loc_454F90  +
cmp dword ptr [ebp+2Ch] 0 +
jnz loc_454F95  +
cmp dword ptr [ebp+30h] 0 +
jnz loc_454F95  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
cmp eax 5 +
jnz loc_454FA2  +
pop ebp  +
mov eax 1 +
pop ebx  +
retn   +
push esi  +
push edi  +
push ebx  +
push ebp  +
push [esp+14h+arg_0]  +
call loc_4561A0  +
mov esi eax +
add esp 0Ch +
and esi 1 +
cmp dword ptr [ebx+4] 1 +
jnz loc_45502C  +
mov edi [ebx+2Ch] +
test edi edi +
jz loc_454FFE  +
push 0  +
push dword ptr [edi+0Ch]  +
push ebp  +
call sub_424AB0  +
push eax  +
push edi  +
push ebx  +
push ebp  +
push [esp+28h+arg_0]  +
mov [esp+2Ch+arg_8] eax +
call loc_455C40  +
and esi eax +
add esp 20h +
mov eax [esp+0Ch+arg_8] +
test eax eax +
jz loc_454FF7  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov edi [edi+18h] +
test edi edi +
jnz loc_454FC4  +
mov edi [ebx+30h] +
test edi edi +
jz loc_45502C  +
push dword ptr [edi+8]  +
mov eax [ebx+24h] +
push edi  +
test eax eax +
jnz loc_455013  +
push eax  +
jmp loc_455016  +
push dword ptr [eax+0Ch]  +
push ebx  +
push ebp  +
push [esp+20h+arg_0]  +
call loc_4569B0  +
mov edi [edi] +
add esp 18h +
and esi eax +
test edi edi +
jnz loc_455005  +
mov edi [ebx+0Ch] +
test edi edi +
jz loc_45504A  +
push edi  +
push ebp  +
push [esp+14h+arg_0]  +
call sub_454F50  +
mov edi [edi+18h] +
add esp 0Ch +
and esi eax +
test edi edi +
jnz loc_455033  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax 1 +
pop ebx  +
retn   +
***
mov eax 2758h +
call sub_489360  +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+2754h] eax +
mov eax [esp+2760h] +
push ebx  +
mov ebx [esp+2768h] +
mov [esp+4] eax +
mov eax [esp+2770h] +
mov [esp+8] eax +
push esi  +
mov esi [esp+2764h] +
push edi  +
mov edi 1 +
test ebx ebx +
jz loc_455347  +
test eax eax +
jz loc_455347  +
test esi esi +
jz loc_455347  +
cmp dword ptr [ebx+34h] 0 +
mov eax [ebx+28h] +
mov [esp+14h] eax +
mov eax [ebx+8] +
mov [esp+18h] eax +
jnz loc_4550DC  +
push ebx  +
push esi  +
call sub_454270  +
add esp 8 +
mov edi eax +
mov eax [ebx+34h] +
test eax eax +
jz loc_455347  +
push eax  +
call sub_46F370  +
add esp 4 +
test eax eax +
jz loc_455347  +
push ebp  +
push 0  +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+18h] 0 +
push 0  +
push dword ptr [ebx+34h]  +
call sub_46EC90  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jz loc_455185  +
mov eax [esp+10h] +
mov edi eax +
test eax eax +
jz loc_45516D  +
mov eax [edi+4] +
dec eax  +
cmp eax 4 +
ja loc_455279  +
jmp ds:off_455364[eax*4]  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_455279  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_455279  +
push edi  +
push esi  +
call sub_450C10  +
mov eax [edi+0Ch] +
add esp 8 +
mov edi [eax+0Ch] +
test edi edi +
jnz loc_455130  +
push 0  +
push 0  +
push ebp  +
call sub_46E100  +
add esp 0Ch +
mov edi eax +
push ebp  +
call loc_46E810  +
add esp 4 +
cmp dword ptr [esp+2778h] 0 +
pop ebp  +
jz loc_4552FD  +
cmp edi 1 +
jz loc_4552FD  +
cmp edi 0FFFFFFFDh +
jz loc_455302  +
push 1  +
push dword ptr [esp+18h]  +
lea eax [esp+13E0h] +
mov byte ptr [esp+13E0h] 0 +
push 1388h  +
push eax  +
call loc_4537D0  +
push 1  +
push dword ptr [esp+20h]  +
lea eax [esp+68h] +
mov byte ptr [esp+68h] 0 +
push 1388h  +
push eax  +
call loc_453B60  +
mov eax [esp+38h] +
add esp 20h +
test eax eax +
jz loc_4552D3  +
lea ecx [esp+50h] +
push ecx  +
lea ecx [esp+13DCh] +
push ecx  +
push eax  +
push offset aElementSConten  +
jmp loc_4552E7  +
push edi  +
call sub_4237C0  +
add esp 4 +
test eax eax +
jnz loc_455279  +
xor edi edi +
jmp loc_45517C  +
***
mov eax [edi+24h] +
test eax eax +
jz loc_45526B  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_45526B  +
push 32h  +
lea ecx [esp+24h] +
push ecx  +
push eax  +
push dword ptr [edi+8]  +
call sub_4221A0  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jz loc_4552CB  +
push 0  +
push ebx  +
push ebp  +
call sub_46E100  +
lea eax [esp+2Ch] +
add esp 0Ch +
cmp ebx eax +
jz loc_455279  +
cmp ebx [edi+8] +
jz loc_455279  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
jmp loc_455279  +
push 0  +
push dword ptr [edi+8]  +
push ebp  +
call sub_46E100  +
add esp 0Ch +
mov edi [edi+18h] +
test edi edi +
jnz loc_455130  +
mov ecx [esi+10h] +
test ecx ecx +
jle loc_45516D  +
dec ecx  +
mov [esi+10h] ecx +
test ecx ecx +
jle loc_4552A3  +
mov eax [esi+18h] +
mov eax [eax+ecx*4-4] +
mov [esi+0Ch] eax +
jmp loc_4552AA  +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+18h] +
mov edi [eax+ecx*4] +
mov dword ptr [eax+ecx*4] 0 +
test edi edi +
jz loc_45516D  +
mov edi [edi+18h] +
test edi edi +
jz loc_455284  +
jmp loc_455130  +
***
or edi 0FFFFFFFFh +
jmp loc_45517C  +
***
push 0  +
lea eax [esp+54h] +
push eax  +
lea eax [esp+13E0h] +
push eax  +
push offset aElementContent  +
push 1F8h  +
push dword ptr [esp+24h]  +
push esi  +
call sub_452540  +
add esp 1Ch +
xor edi edi +
jmp loc_455307  +
cmp edi 0FFFFFFFDh +
jnz loc_455307  +
mov edi 1 +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_45532D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+18h] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+2754h] +
xor ecx esp +
call sub_488C1C  +
add esp 2758h +
retn   +
***
mov ecx [esp+2760h] +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 2758h +
retn   +
***
push ecx  +
mov eax [esp+0Ch] +
push esi  +
mov esi 1 +
mov [esp+4] esi +
test eax eax +
jnz loc_455398  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
***
cmp dword ptr [eax+2Ch] 0 +
jnz loc_4553A4  +
cmp dword ptr [eax+30h] 0 +
jz loc_455393  +
push edi  +
mov edi [esp+18h] +
test edi edi +
jz loc_455541  +
cmp dword ptr [edi+24h] 3 +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
jnz loc_455495  +
mov ebp [edi+28h] +
test ebp ebp +
jz loc_455495  +
push offset aDefinitionOfSH  +
jmp loc_45545D  +
push ebx  +
push eax  +
push dword ptr [edi+8]  +
push offset aDefinitionOf_0  +
push 1F7h  +
push edi  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+10h] 0 +
mov esi [esi+10h] +
test esi esi +
jnz near ptr dword_4553D0+30h  +
mov esi [esp+10h] +
mov ebx [esp+18h] +
mov ebp [ebp+10h] +
test ebp ebp +
jnz near ptr dword_4553D0  +
mov eax [esp+1Ch] +
push dword ptr [edi+8]  +
push dword ptr [eax+2Ch]  +
call sub_452BB0  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_4554E8  +
cmp ebp edi +
jz loc_4554E8  +
mov eax [ebp+30h] +
mov ecx [edi+30h] +
cmp eax ecx +
jz loc_4554C5  +
push ecx  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4554E8  +
cmp dword ptr [ebp+24h] 0 +
jz loc_4554E8  +
push 0  +
push 0  +
push dword ptr [edi+8]  +
push offset aRedefinition_0  +
push 1FDh  +
push edi  +
push ebx  +
call sub_452540  +
add esp 1Ch +
xor esi esi +
mov eax [esp+1Ch] +
push dword ptr [edi+8]  +
push dword ptr [eax+30h]  +
call sub_452BB0  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_45553F  +
cmp ebp edi +
jz loc_45553F  +
mov eax [ebp+30h] +
mov ecx [edi+30h] +
cmp eax ecx +
jz loc_45551C  +
push ecx  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45553F  +
cmp dword ptr [ebp+24h] 0 +
jz loc_45553F  +
push 0  +
push 0  +
push dword ptr [edi+8]  +
push offset aRedefinition_0  +
push 1FDh  +
push edi  +
push ebx  +
call sub_452540  +
add esp 1Ch +
xor esi esi +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ecx  +
retn   +
***
push ebx  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45547E  +
mov eax [ebp+0Ch] +
push dword ptr [eax+18h]  +
push dword ptr [esi+18h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45547E  +
mov eax [ebp+0Ch] +
mov eax [eax+18h] +
test eax eax +
jnz loc_45558A  +
push eax  +
push ebx  +
push dword ptr [edi+8]  +
push offset aDefinitionOf_1  +
jmp loc_455594  +
push ebx  +
push eax  +
push dword ptr [edi+8]  +
push offset aDefinitionOf_2  +
mov ebx [esp+28h] +
push 1F7h  +
push edi  +
push ebx  +
call sub_452540  +
add esp 1Ch +
xor esi esi +
mov [esp+10h] esi +
jmp loc_455486  +
***
test esi esi +
jnz loc_4555CD  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
lea eax [esp+4+arg_4] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
mov ebx [esp+10h+arg_0] +
add esi [esp+10h+arg_4] +
push eax  +
push ebx  +
call sub_453060  +
add esp 14h +
test eax eax +
jnz loc_4555F4  +
pop ebx  +
pop esi  +
retn   +
push edi  +
lea eax [esp+8+arg_4] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
add esi [esp+14h+arg_4] +
mov edi eax +
push edi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jz loc_455637  +
lea eax [esp+8+arg_4] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
add esi [esp+14h+arg_4] +
mov edi eax +
push edi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jnz loc_455616  +
xor eax eax +
test edi edi +
pop edi  +
pop ebx  +
setz al  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jnz loc_45565D  +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
lea eax [esp+10h] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
mov ebx [esp+18h] +
add esi [esp+1Ch] +
push eax  +
push ebx  +
call sub_453060  +
add esp 14h +
test eax eax +
jnz loc_455684  +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
lea eax [esp+14h] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
add esi [esp+20h] +
mov edi eax +
push edi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jz loc_4556C7  +
lea eax [esp+14h] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
add esi [esp+20h] +
mov edi eax +
push edi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jnz loc_4556A6  +
cmp edi 20h +
jnz loc_455746  +
xor eax eax +
test edi edi +
pop edi  +
pop ebx  +
setz al  +
pop esi  +
retn   +
***
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jnz loc_45576D  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
push edi  +
lea eax [esp+8+arg_4] +
push eax  +
push esi  +
push 0  +
call sub_45CBC0  +
mov edi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
add edi esi +
push eax  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jnz loc_455798  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
lea eax [esp+8+arg_4] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+14h+arg_4] +
add esp 0Ch +
mov esi eax +
test ebx ebx +
jz loc_4558E2  +
test byte ptr [ebx+5Ch] 4 +
jz loc_4558E2  +
cmp esi 100h +
jge loc_455806  +
cmp esi 41h +
jl loc_4557D2  +
cmp esi 5Ah +
jle loc_455798  +
cmp esi 61h +
jl loc_4557DC  +
cmp esi 7Ah +
jle loc_455798  +
cmp esi 0C0h +
jl loc_4557EC  +
cmp esi 0D6h +
jle loc_455798  +
cmp esi 0D8h +
jl loc_4557FC  +
cmp esi 0F6h +
jle loc_455798  +
cmp esi 0F8h +
jl loc_455818  +
jmp loc_455798  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_455798  +
cmp esi 100h +
jl loc_45586C  +
cmp esi 4E00h +
jl loc_455834  +
cmp esi 9FA5h +
jle loc_455798  +
cmp esi 3007h +
jz loc_455798  +
cmp esi 3021h +
jl loc_455854  +
cmp esi 3029h +
jle loc_455798  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_455798  +
jmp loc_455878  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_455798  +
cmp esi 2Eh +
jz loc_455798  +
cmp esi 2Dh +
jz loc_455798  +
cmp esi 5Fh +
jz loc_455798  +
cmp esi 3Ah +
jz loc_455798  +
cmp esi 100h +
jl loc_4558CA  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_455798  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_4558D5  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_455A51  +
jmp loc_455798  +
cmp esi 61h +
jl loc_4558F0  +
cmp esi 7Ah +
jle loc_455798  +
cmp esi 41h +
jl loc_4558FE  +
cmp esi 5Ah +
jle loc_455798  +
cmp esi 30h +
jl loc_45590C  +
cmp esi 39h +
jle loc_455798  +
cmp esi 5Fh +
jz loc_455798  +
cmp esi 3Ah +
jz loc_455798  +
cmp esi 2Dh +
jz loc_455798  +
cmp esi 2Eh +
jz loc_455798  +
cmp esi 0B7h +
jz loc_455798  +
cmp esi 0C0h +
jl loc_455950  +
cmp esi 0D6h +
jle loc_455798  +
cmp esi 0D8h +
jl loc_455964  +
cmp esi 0F6h +
jle loc_455798  +
cmp esi 0F8h +
jl loc_455978  +
cmp esi 2FFh +
jle loc_455798  +
cmp esi 300h +
jl loc_45598C  +
cmp esi 36Fh +
jle loc_455798  +
cmp esi 370h +
jl loc_4559A0  +
cmp esi 37Dh +
jle loc_455798  +
cmp esi 37Fh +
jl loc_4559B4  +
cmp esi 1FFFh +
jle loc_455798  +
cmp esi 200Ch +
jl loc_4559C8  +
cmp esi 200Dh +
jle loc_455798  +
cmp esi 203Fh +
jl loc_4559DC  +
cmp esi 2040h +
jle loc_455798  +
cmp esi 2070h +
jl loc_4559F0  +
cmp esi 218Fh +
jle loc_455798  +
cmp esi 2C00h +
jl loc_455A04  +
cmp esi 2FEFh +
jle loc_455798  +
cmp esi 3001h +
jl loc_455A18  +
cmp esi 0D7FFh +
jle loc_455798  +
cmp esi 0F900h +
jl loc_455A2C  +
cmp esi 0FDCFh +
jle loc_455798  +
cmp esi 0FDF0h +
jl loc_455A40  +
cmp esi 0FFFDh +
jle loc_455798  +
lea eax [esi-10000h] +
cmp eax 0DFFFFh +
jbe loc_455798  +
xor eax eax +
test esi esi +
pop edi  +
pop ebx  +
setz al  +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+0Ch] +
test edi edi +
jnz loc_455A6D  +
xor eax eax +
pop edi  +
retn   +
***
push esi  +
lea eax [esp+10h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+1Ch] +
mov esi eax +
add esp 0Ch +
cmp esi 100h +
jge loc_455AA0  +
cmp esi 20h +
jz loc_455A6E  +
cmp esi 9 +
jl loc_455A9B  +
cmp esi 0Ah +
jle loc_455A6E  +
cmp esi 0Dh +
jz loc_455A6E  +
push ebx  +
mov ebx [esp+10h] +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 8 +
test eax eax +
jz loc_455B71  +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 8 +
test eax eax +
jz loc_455AE6  +
lea eax [esp+14h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+20h] +
mov esi eax +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jnz loc_455AC5  +
cmp esi 20h +
jnz loc_455B66  +
lea eax [esp+14h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+20h] +
mov esi eax +
add esp 0Ch +
cmp esi 20h +
jz loc_455AF0  +
test esi esi +
jz loc_455B77  +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 8 +
test eax eax +
jz loc_455B71  +
lea eax [esp+14h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+20h] +
mov esi eax +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jz loc_455B61  +
nop   +
lea eax [esp+14h] +
push eax  +
push edi  +
push 0  +
call sub_45CBC0  +
add edi [esp+20h] +
mov esi eax +
push esi  +
push ebx  +
call sub_452DE0  +
add esp 14h +
test eax eax +
jnz loc_455B40  +
cmp esi 20h +
jz loc_455AF0  +
xor eax eax +
test esi esi +
pop ebx  +
pop esi  +
setz al  +
pop edi  +
retn   +
***
pop ebx  +
pop esi  +
xor eax eax +
pop edi  +
retn   +
***
pop ebx  +
pop esi  +
mov eax 1 +
pop edi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz locret_455BB4  +
cmp dword ptr [eax+30h] 3 +
jnz locret_455BB4  +
mov ecx [eax+28h] +
test ecx ecx +
jz locret_455BB4  +
push esi  +
mov esi [esp+0Ch] +
push ecx  +
push dword ptr [eax+20h]  +
push esi  +
call sub_455BC0  +
add esp 0Ch +
cmp eax 1 +
jz loc_455BB3  +
mov dword ptr [esi+24h] 0 +
pop esi  +
retn   +
***
push edi  +
test esi esi +
jz loc_455C38  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_455C38  +
mov edi [esp+4+arg_8] +
test edi edi +
jz loc_455C38  +
mov eax [eax+24h] +
test eax eax +
jz loc_455BEE  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_455C30  +
mov eax [esi+30h] +
test eax eax +
jz loc_455C0A  +
mov eax [eax+24h] +
test eax eax +
jz loc_455C0A  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_455C30  +
mov eax [esp+4+arg_0] +
test eax eax +
jz loc_455C30  +
push 0  +
push 0  +
push edi  +
push offset aNotationSIsNot  +
push 219h  +
push esi  +
push eax  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
retn   +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
sub esp 4Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+48h] eax +
mov eax [esp+50h] +
push ebx  +
mov ebx [esp+60h] +
push ebp  +
mov ebp [esp+60h] +
push esi  +
mov esi [esp+6Ch] +
push edi  +
mov edi [esp+64h] +
mov [esp+18h] eax +
mov [esp+10h] edi +
mov [esp+1Ch] esi +
mov dword ptr [esp+14h] 1 +
test edi edi +
jz loc_455E22  +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_455C92  +
cmp dword ptr [edi+30h] 0 +
jz loc_455E22  +
test ebp ebp +
jz loc_455E22  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_455E22  +
test ebx ebx +
jz loc_455E22  +
cmp dword ptr [ebx+8] 0 +
jz loc_455E22  +
mov eax [ebp+24h] +
test eax eax +
jz loc_455D85  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_455D85  +
push 32h  +
lea edx [esp+28h] +
push edx  +
push eax  +
push ecx  +
call sub_4221A0  +
add esp 10h +
mov [esp+20h] eax +
test eax eax +
jz loc_455E22  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_455D2C  +
push dword ptr [ecx+0Ch]  +
push dword ptr [ebx+8]  +
push eax  +
push dword ptr [edi+2Ch]  +
call sub_452D50  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_455D5E  +
mov eax [esp+10h] +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_455D5E  +
mov eax [ebx+24h] +
push dword ptr [eax+0Ch]  +
push dword ptr [ebx+8]  +
push dword ptr [esp+28h]  +
push ecx  +
call sub_452D50  +
add esp 10h +
jmp loc_455D5C  +
push dword ptr [ebx+8]  +
push eax  +
push dword ptr [edi+2Ch]  +
call sub_452B20  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_455D5E  +
mov eax [esp+10h] +
mov eax [eax+30h] +
test eax eax +
jz loc_455D5E  +
push dword ptr [ebx+8]  +
push dword ptr [esp+24h]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
mov edi eax +
mov eax [esp+20h] +
lea ecx [esp+24h] +
cmp eax ecx +
jz loc_455D79  +
cmp eax [ebp+8] +
jz loc_455D79  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jnz loc_455E37  +
mov edi [esp+10h] +
mov eax [ebx+24h] +
test eax eax +
jz loc_455DCC  +
push dword ptr [eax+0Ch]  +
push dword ptr [ebx+8]  +
push dword ptr [ebp+8]  +
push dword ptr [edi+2Ch]  +
call sub_452D50  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_455E37  +
mov eax [esp+10h] +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_455E03  +
mov eax [ebx+24h] +
push dword ptr [eax+0Ch]  +
push dword ptr [ebx+8]  +
push dword ptr [ebp+8]  +
push ecx  +
call sub_452D50  +
add esp 10h +
jmp loc_455DFD  +
push dword ptr [ebx+8]  +
push dword ptr [ebp+8]  +
push dword ptr [edi+2Ch]  +
call sub_452B20  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_455E37  +
mov eax [esp+10h] +
mov eax [eax+30h] +
test eax eax +
jz loc_455E03  +
push dword ptr [ebx+8]  +
push dword ptr [ebp+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
mov edi eax +
test edi edi +
jnz loc_455E37  +
push 0  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push offset aNoDeclarationF  +
push 215h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+48h] +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
mov eax [edi+28h] +
push esi  +
mov [ebx+28h] eax +
push dword ptr [edi+28h]  +
push dword ptr [esp+18h]  +
call sub_454D40  +
add esp 0Ch +
test eax eax +
jnz loc_455E77  +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push offset aSyntaxOfValueF  +
push 1F6h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
cmp dword ptr [edi+2Ch] 4 +
jnz loc_455EB5  +
push dword ptr [edi+30h]  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_455EB5  +
push dword ptr [edi+30h]  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push offset aValueForAttrib  +
push 1F4h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
cmp dword ptr [edi+28h] 2 +
jnz loc_455ED5  +
push ebx  +
push esi  +
push dword ptr [esp+18h]  +
push dword ptr [esp+24h]  +
call sub_451500  +
add esp 10h +
neg eax  +
sbb eax eax +
and [esp+14h] eax +
mov eax [edi+28h] +
cmp eax 3 +
jz loc_455EE2  +
cmp eax 4 +
jnz loc_455EFC  +
push ebx  +
push esi  +
push dword ptr [esp+18h]  +
push dword ptr [esp+24h]  +
call sub_451760  +
add esp 10h +
neg eax  +
sbb eax eax +
and [esp+14h] eax +
cmp dword ptr [edi+28h] 0Ah +
jnz loc_455FC2  +
mov eax [esp+10h] +
mov esi [edi+34h] +
mov ecx [eax+2Ch] +
test ecx ecx +
jz loc_455F30  +
mov ecx [ecx+24h] +
test ecx ecx +
jz loc_455F30  +
push dword ptr [esp+1Ch]  +
push ecx  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_455F78  +
mov eax [esp+10h] +
mov eax [eax+30h] +
test eax eax +
jz loc_455F4F  +
mov eax [eax+24h] +
test eax eax +
jz loc_455F4F  +
push dword ptr [esp+1Ch]  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_455F78  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push dword ptr [esp+24h]  +
push offset aValueSForAttri  +
push 219h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
test esi esi +
jz loc_455F99  +
push dword ptr [esp+1Ch]  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_455FC2  +
mov esi [esi] +
test esi esi +
jnz loc_455F80  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push dword ptr [esp+24h]  +
push offset aValueSForAtt_0  +
push 20Fh  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
cmp dword ptr [edi+28h] 9 +
jnz loc_456015  +
mov esi [edi+34h] +
test esi esi +
jz loc_455FE9  +
nop   +
push dword ptr [esp+1Ch]  +
push dword ptr [esi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456015  +
mov esi [esi] +
test esi esi +
jnz loc_455FD0  +
push dword ptr [ebp+8]  +
mov esi [esp+20h] +
push dword ptr [ebx+8]  +
push esi  +
push offset aValueSForAtt_1  +
push 1F6h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
jmp loc_456019  +
mov esi [esp+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jnz loc_456057  +
push esi  +
push dword ptr [edi+30h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456057  +
push dword ptr [edi+30h]  +
push dword ptr [ebp+8]  +
push dword ptr [ebx+8]  +
push offset aValueForAttr_0  +
push 1F6h  +
push ebp  +
push dword ptr [esp+30h]  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+14h] 0 +
push esi  +
push dword ptr [edi+28h]  +
push dword ptr [ebx+8]  +
push dword ptr [esp+1Ch]  +
push dword ptr [esp+28h]  +
call loc_454B50  +
mov ecx [esp+6Ch] +
add esp 14h +
and eax [esp+14h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
push ebx  +
push esi  +
mov esi [esp+0Ch] +
mov ebx 1 +
push edi  +
test esi esi +
jz loc_45617A  +
cmp dword ptr [esp+14h] 0 +
jz loc_45617A  +
mov edi [esp+18h] +
test edi edi +
jz loc_45617A  +
cmp [edi+4] ebx +
jnz loc_45617A  +
mov edi [edi+0Ch] +
test edi edi +
jz loc_45614E  +
nop   +
mov eax [edi+4] +
add eax 0FFFFFFFDh +
cmp eax 5 +
ja loc_45614C  +
jmp ds:off_456180[eax*4]  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_456105  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_456105  +
push edi  +
push esi  +
call sub_450C10  +
mov eax [edi+0Ch] +
add esp 8 +
mov edi [eax+0Ch] +
test edi edi +
jnz loc_4560D0  +
jmp loc_45614E  +
mov edi [edi+18h] +
test edi edi +
jnz loc_4560D0  +
mov ecx [esi+10h] +
test ecx ecx +
jle loc_45614E  +
dec ecx  +
mov [esi+10h] ecx +
test ecx ecx +
jle loc_45612B  +
mov eax [esi+18h] +
mov eax [eax+ecx*4-4] +
mov [esi+0Ch] eax +
jmp loc_456132  +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+18h] +
mov edi [eax+ecx*4] +
mov dword ptr [eax+ecx*4] 0 +
test edi edi +
jz loc_45614E  +
mov edi [edi+18h] +
test edi edi +
jz loc_456110  +
jmp loc_4560D0  +
***
xor ebx ebx +
mov ecx [esi+18h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+10h] 0 +
test ecx ecx +
jz loc_456174  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+18h] 0 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 48h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+44h] eax +
push ebp  +
mov ebp [esp+58h] +
push esi  +
mov esi [esp+58h] +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp+10h] 0 +
push edi  +
mov edi [esp+58h] +
mov [esp+10h] edi +
test esi esi +
jz loc_456217  +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_4561E1  +
cmp dword ptr [esi+30h] 0 +
jz loc_456217  +
test ebp ebp +
jz loc_456217  +
mov eax [ebp+4] +
dec eax  +
cmp eax 13h +
ja loc_456939  +
movzx eax ds:byte_456988[eax] +
jmp ds:off_456964[eax*4]  +
push 0  +
push 0  +
push 0  +
push offset aAttributeEleme  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
cmp dword ptr [ebp+0Ch] 0 +
jz loc_45625C  +
push 0  +
push 0  +
push 0  +
push offset aTextElementHas  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
cmp dword ptr [ebp+24h] 0 +
jz loc_45628D  +
push 0  +
push 0  +
push 0  +
push offset aTextElementH_0  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
cmp dword ptr [ebp+28h] 0 +
jnz loc_4562BE  +
push 0  +
push 0  +
push 0  +
push offset aTextElementH_1  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
pop edi  +
pop esi  +
mov eax 1 +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push 0  +
push 0  +
push 0  +
push offset aEntityElementN  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push 0  +
push 0  +
push 0  +
push offset aNotationElemen  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push 0  +
push 0  +
push 0  +
push offset aDocumentElemen  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push 0  +
push 0  +
push 0  +
push offset aHtmlDocumentNo  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push ebx  +
lea eax [esp+18h] +
push eax  +
push ebp  +
push esi  +
push edi  +
call sub_4545D0  +
mov ebx eax +
add esp 10h +
mov [esp+1Ch] ebx +
test ebx ebx +
jz loc_4563D4  +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_456687  +
mov eax [ebx+24h] +
cmp eax 4 +
ja loc_456687  +
jmp ds:off_45699C[eax*4]  +
push 0  +
push 0  +
push dword ptr [ebp+8]  +
push offset aNoDeclaratio_0  +
push 216h  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
pop ebx  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
cmp dword ptr [ebp+0Ch] 0 +
jz loc_456687  +
push 0  +
push 0  +
push dword ptr [ebp+8]  +
push offset aElementSWasDec  +
push 210h  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_45668C  +
mov eax [ebx+28h] +
test eax eax +
jz loc_456460  +
cmp dword ptr [eax] 1 +
jnz loc_456460  +
push ebp  +
push esi  +
push edi  +
call loc_456090  +
mov ecx eax +
add esp 0Ch +
mov [esp+10h] ecx +
test ecx ecx +
jnz loc_45668C  +
push eax  +
push eax  +
push dword ptr [ebp+8]  +
push offset aElementSWasD_0  +
push 211h  +
push ebp  +
push edi  +
call sub_452540  +
mov ecx [esp+2Ch] +
add esp 1Ch +
jmp loc_45668C  +
mov edi [ebp+0Ch] +
mov [esp+18h] edi +
test edi edi +
jz loc_456683  +
nop   +
cmp dword ptr [edi+4] 1 +
jnz loc_456591  +
mov eax [edi+24h] +
mov ebx [edi+8] +
test eax eax +
jz loc_456558  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456558  +
push 32h  +
lea ecx [esp+24h] +
push ecx  +
push eax  +
push ebx  +
call sub_4221A0  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_4563D4  +
mov eax [esp+1Ch] +
mov esi [eax+28h] +
test esi esi +
jz loc_456535  +
mov eax [esi] +
cmp eax 2 +
jnz loc_4564CD  +
push edi  +
push dword ptr [esi+8]  +
jmp loc_4564E2  +
cmp eax 4 +
jnz loc_456502  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_456502  +
cmp dword ptr [eax] 2 +
jnz loc_4564F0  +
push edi  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456535  +
jmp loc_4564F9  +
test eax eax +
jz loc_456502  +
cmp dword ptr [eax] 1 +
jnz loc_456502  +
mov esi [esi+10h] +
test esi esi +
jnz loc_4564C0  +
jmp loc_456535  +
push offset aInternalMixedS  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 207h  +
push 17h  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
lea eax [esp+20h] +
cmp edi eax +
jz loc_456550  +
mov eax [esp+18h] +
cmp edi [eax+8] +
jz loc_456550  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov edi [esp+18h] +
test esi esi +
jnz loc_456591  +
mov eax [esp+1Ch] +
mov esi [eax+28h] +
test esi esi +
jz loc_4565C1  +
mov eax [esi] +
cmp eax 2 +
jnz loc_456570  +
push ebx  +
push dword ptr [esi+8]  +
jmp loc_456585  +
cmp eax 4 +
jnz loc_4565E6  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4565E6  +
cmp dword ptr [eax] 2 +
jnz loc_4565B1  +
push ebx  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4565BA  +
mov ecx [esp+10h] +
mov edi [edi+18h] +
mov [esp+18h] edi +
test edi edi +
jnz loc_456470  +
mov ebx [esp+1Ch] +
mov edi [esp+14h] +
jmp loc_45668C  +
test eax eax +
jz loc_4565E6  +
cmp dword ptr [eax] 1 +
jnz loc_4565E6  +
mov esi [esi+10h] +
test esi esi +
jnz loc_456563  +
push 0  +
push dword ptr [ebp+8]  +
push ebx  +
push offset aElementSIsNotD  +
push 203h  +
push ebp  +
push dword ptr [esp+2Ch]  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_456595  +
***
push 0  +
push offset aInternalMixedS  +
push 207h  +
push dword ptr [esp+20h]  +
call sub_4524C0  +
add esp 10h +
jmp loc_456591  +
***
cmp dword ptr [esi+28h] 1 +
jnz loc_456664  +
cmp dword ptr [esp+18h] 1 +
jnz loc_456664  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_456664  +
cmp dword ptr [edx+4] 3 +
jnz loc_45663A  +
mov ecx [edx+28h] +
mov al [ecx] +
cmp al 20h +
jz loc_456632  +
cmp al 9 +
jb loc_45662E  +
cmp al 0Ah +
jbe loc_456632  +
cmp al 0Dh +
jnz loc_456635  +
inc ecx  +
jmp loc_456620  +
***
cmp byte ptr [ecx] 0 +
jz loc_456643  +
mov edx [edx+18h] +
test edx edx +
jnz loc_456614  +
jmp loc_456664  +
push 0  +
push 0  +
push dword ptr [ebp+8]  +
push offset aStandaloneSDec  +
push 214h  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
mov [esp+10h] eax +
push ebp  +
push 1  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push edi  +
call loc_455060  +
mov ecx [esp+24h] +
add esp 14h +
test eax eax +
cmovle ecx eax +
mov [esp+10h] ecx +
jmp loc_45668C  +
mov edi [esp+14h] +
mov ecx 1 +
mov esi [ebx+2Ch] +
test esi esi +
jz loc_4568EB  +
mov eax [esi+2Ch] +
cmp eax 2 +
jnz loc_456836  +
or edi 0FFFFFFFFh +
cmp dword ptr [esi+38h] 0 +
jnz loc_456715  +
push offset aXmlns  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_456715  +
mov eax [ebp+30h] +
test eax eax +
jz loc_4566E0  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_4568D8  +
mov eax [eax] +
test eax eax +
jnz loc_4566D0  +
mov eax [esi+38h] +
mov edi [esp+14h] +
test eax eax +
jnz loc_456810  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [ebp+8]  +
push offset aElementSDoesNo  +
push 206h  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_4568E0  +
push offset aXmlns  +
push dword ptr [esi+38h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45674E  +
mov edi [ebp+30h] +
test edi edi +
jz loc_4566E0  +
push dword ptr [edi+0Ch]  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4568D8  +
mov edi [edi] +
test edi edi +
jnz loc_456730  +
jmp loc_4566E0  +
***
mov ebx [ebp+2Ch] +
test ebx ebx +
jz loc_4566E0  +
push dword ptr [esi+8]  +
push dword ptr [ebx+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4567A7  +
mov ecx [esi+38h] +
test ecx ecx +
jz loc_4568D8  +
mov eax [ebx+24h] +
test eax eax +
jnz loc_456788  +
mov eax [ebp+24h] +
test eax eax +
jnz loc_456788  +
test edi edi +
jns loc_4567A7  +
xor edi edi +
jmp loc_4567A7  +
push ecx  +
push dword ptr [eax+0Ch]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4568D8  +
cmp edi 1 +
mov eax 1 +
cmovl edi eax +
mov ebx [ebx+18h] +
test ebx ebx +
jnz loc_456755  +
cmp edi 0FFFFFFFFh +
jz loc_4566E0  +
test edi edi +
jnz loc_4567E1  +
push dword ptr [esi+8]  +
mov edi [esp+18h] +
push dword ptr [esi+38h]  +
push dword ptr [ebp+8]  +
push offset aElementSRequir  +
push 20Ch  +
push ebp  +
push edi  +
call sub_452620  +
add esp 1Ch +
jmp loc_4568DC  +
cmp edi 1 +
mov edi [esp+14h] +
jnz loc_4568DC  +
push dword ptr [esi+8]  +
push dword ptr [esi+38h]  +
push dword ptr [ebp+8]  +
push offset aElementSRequ_0  +
push 1FAh  +
push ebp  +
push edi  +
call sub_452620  +
add esp 1Ch +
jmp loc_4568DC  +
push dword ptr [esi+8]  +
push eax  +
push dword ptr [ebp+8]  +
push offset aElementSDoes_0  +
push 206h  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_4568E0  +
cmp eax 4 +
jnz loc_4568E0  +
cmp dword ptr [esi+38h] 0 +
jnz loc_4568A5  +
push offset aXmlns  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4568A5  +
mov eax [ebp+30h] +
test eax eax +
jz loc_4568DC  +
cmp dword ptr [eax+0Ch] 0 +
jz loc_456872  +
mov eax [eax] +
test eax eax +
jnz loc_456864  +
jmp loc_4568DC  +
push dword ptr [eax+8]  +
push dword ptr [esi+30h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4568DC  +
push eax  +
push eax  +
push dword ptr [ebp+8]  +
push offset aElementSNamesp  +
push 1FBh  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_4568E0  +
push offset aXmlns  +
push dword ptr [esi+38h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4568DC  +
mov edi [ebp+30h] +
test edi edi +
jz loc_4568D8  +
push dword ptr [edi+0Ch]  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456900  +
mov edi [edi] +
test edi edi +
jnz loc_4568C0  +
mov edi [esp+14h] +
mov ecx [esp+10h] +
mov esi [esi+24h] +
test esi esi +
jnz loc_4566A0  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ecx +
pop ebp  +
mov ecx [esp+44h] +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
push dword ptr [edi+8]  +
push dword ptr [esi+30h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4568D8  +
push eax  +
push dword ptr [edi+0Ch]  +
mov edi [esp+1Ch] +
push dword ptr [ebp+8]  +
push offset aElementSName_0  +
push 1FCh  +
push ebp  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor ecx ecx +
mov [esp+10h] ecx +
jmp loc_4568E0  +
***
push 0  +
push 0  +
push 0  +
push offset aUnknownElement  +
push 1  +
push ebp  +
push edi  +
call sub_452540  +
mov ecx [esp+6Ch] +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 48h +
retn   +
***
sub esp 4Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+48h] eax +
mov eax [esp+60h] +
mov ecx [esp+5Ch] +
push ebx  +
mov ebx [esp+58h] +
mov [esp+0Ch] ebx +
mov [esp+4] eax +
mov dword ptr [esp+10h] 1 +
push ebp  +
mov ebp [esp+58h] +
push esi  +
mov esi [esp+64h] +
push edi  +
mov edi [esp+74h] +
mov [esp+14h] edi +
test ebx ebx +
jz loc_456A42  +
cmp dword ptr [ebx+2Ch] 0 +
jnz loc_4569FE  +
cmp dword ptr [ebx+30h] 0 +
jz loc_456A42  +
test esi esi +
jz loc_456A42  +
mov edx [esi+8] +
test edx edx +
jz loc_456A42  +
test eax eax +
jz loc_456A42  +
cmp dword ptr [eax+8] 0 +
jz loc_456A42  +
test ecx ecx +
jz loc_456AFC  +
push 32h  +
lea eax [esp+28h] +
push eax  +
push ecx  +
push edx  +
call sub_4221A0  +
add esp 10h +
mov [esp+20h] eax +
test eax eax +
jnz loc_456A57  +
push offset aValidatingName  +
push ebp  +
call sub_453E00  +
add esp 8 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+48h] +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
mov ecx [esp+10h] +
push offset aXmlns  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_456AA0  +
push ecx  +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_452D50  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jnz loc_456AD1  +
mov eax [esp+18h] +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_456AD1  +
mov eax [esp+10h] +
push offset aXmlns  +
push dword ptr [eax+0Ch]  +
push dword ptr [esp+28h]  +
push ecx  +
call sub_452D50  +
add esp 10h +
jmp loc_456ACF  +
push eax  +
push dword ptr [ebx+2Ch]  +
call sub_452B20  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_456AD1  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_456AD1  +
push offset aXmlns  +
push dword ptr [esp+24h]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
mov ebx eax +
mov eax [esp+20h] +
lea ecx [esp+24h] +
cmp eax ecx +
jz loc_456AEC  +
cmp eax [esi+8] +
jz loc_456AEC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jnz loc_456BE8  +
mov ebx [esp+18h] +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
push offset aXmlns  +
test eax eax +
jz loc_456B46  +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [ebx+2Ch]  +
call sub_452D50  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jnz loc_456BE8  +
mov eax [esp+18h] +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_456B80  +
mov eax [esp+10h] +
push offset aXmlns  +
push dword ptr [eax+0Ch]  +
push dword ptr [esi+8]  +
push ecx  +
call sub_452D50  +
add esp 10h +
jmp loc_456B7A  +
push dword ptr [esi+8]  +
push dword ptr [ebx+2Ch]  +
call sub_452B20  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jnz loc_456BE8  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_456B80  +
push offset aXmlns  +
push dword ptr [esi+8]  +
push eax  +
call sub_452B20  +
add esp 0Ch +
mov ebx eax +
test ebx ebx +
jnz loc_456BE8  +
mov eax [esp+10h] +
push 0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456BBA  +
push dword ptr [esi+8]  +
push eax  +
push offset aNoDeclaratio_1  +
push 215h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+48h] +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
push 0  +
push dword ptr [esi+8]  +
push offset aNoDeclaratio_2  +
push 215h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+48h] +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
push edi  +
push dword ptr [ebx+28h]  +
push dword ptr [esp+20h]  +
call sub_454D40  +
add esp 0Ch +
test eax eax +
jnz loc_456C35  +
mov eax [esp+10h] +
push 0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456C14  +
push dword ptr [esi+8]  +
push eax  +
push offset aSyntaxOfValu_0  +
jmp loc_456C1E  +
push 0  +
push dword ptr [esi+8]  +
push offset aSyntaxOfValu_1  +
push 204h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+1Ch] 0 +
cmp dword ptr [ebx+2Ch] 4 +
jnz loc_456C88  +
push dword ptr [ebx+30h]  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456C88  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456C64  +
push dword ptr [ebx+30h]  +
push dword ptr [esi+8]  +
push eax  +
push offset aValueForAttr_1  +
jmp loc_456C71  +
push 0  +
push dword ptr [ebx+30h]  +
push dword ptr [esi+8]  +
push offset aValueForAttr_2  +
push 1F4h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+1Ch] 0 +
cmp dword ptr [ebx+28h] 2 +
jnz loc_456CA8  +
push dword ptr [esp+10h]  +
push edi  +
push dword ptr [esp+20h]  +
push ebp  +
call sub_451500  +
add esp 10h +
neg eax  +
sbb eax eax +
and [esp+1Ch] eax +
mov eax [ebx+28h] +
cmp eax 3 +
jz loc_456CB5  +
cmp eax 4 +
jnz loc_456CCF  +
push dword ptr [esp+10h]  +
push edi  +
push dword ptr [esp+20h]  +
push ebp  +
call sub_451760  +
add esp 10h +
neg eax  +
sbb eax eax +
and [esp+1Ch] eax +
cmp dword ptr [ebx+28h] 0Ah +
jnz loc_456DC8  +
mov eax [esp+18h] +
mov edi [ebx+34h] +
mov ecx [eax+2Ch] +
test ecx ecx +
jz loc_456D03  +
mov ecx [ecx+24h] +
test ecx ecx +
jz loc_456D03  +
push dword ptr [esp+14h]  +
push ecx  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_456D61  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_456D22  +
mov eax [eax+24h] +
test eax eax +
jz loc_456D22  +
push dword ptr [esp+14h]  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_456D61  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456D3C  +
push dword ptr [esi+8]  +
push eax  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_2  +
jmp loc_456D4A  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_3  +
push 219h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+1Ch] 0 +
test edi edi +
jz loc_456D89  +
push dword ptr [esp+14h]  +
push dword ptr [edi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456DC8  +
mov edi [edi] +
test edi edi +
jnz loc_456D70  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456DA3  +
push dword ptr [esi+8]  +
push eax  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_4  +
jmp loc_456DB1  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_5  +
push 20Fh  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+1Ch] 0 +
cmp dword ptr [ebx+28h] 9 +
jnz loc_456E38  +
mov edi [ebx+34h] +
test edi edi +
jz loc_456DF9  +
push dword ptr [esp+14h]  +
push dword ptr [edi+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456E38  +
mov edi [edi] +
test edi edi +
jnz loc_456DE0  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456E13  +
push dword ptr [esi+8]  +
push eax  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_6  +
jmp loc_456E21  +
push 0  +
push dword ptr [esi+8]  +
push dword ptr [esp+1Ch]  +
push offset aValueSForAtt_7  +
push 1F6h  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esp+1Ch] 0 +
cmp dword ptr [ebx+2Ch] 4 +
mov edi [esp+14h] +
jnz loc_456E8B  +
push edi  +
push dword ptr [ebx+30h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_456E8B  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456E6B  +
push dword ptr [ebx+30h]  +
push dword ptr [esi+8]  +
push eax  +
push offset aValueForAttr_3  +
jmp loc_456E78  +
push 0  +
push dword ptr [ebx+30h]  +
push dword ptr [esi+8]  +
push offset aValueForAttr_4  +
push 1FCh  +
push esi  +
push ebp  +
call sub_452540  +
add esp 1Ch +
xor esi esi +
jmp loc_456E8F  +
mov esi [esp+1Ch] +
mov eax [esp+10h] +
push edi  +
push dword ptr [ebx+28h]  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_456EA1  +
push eax  +
jmp loc_456EA6  +
push offset aXmlns  +
push dword ptr [esp+24h]  +
push ebp  +
call loc_454B50  +
mov ecx [esp+6Ch] +
add esp 14h +
and esi eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 4Ch +
retn   +
***
push ecx  +
mov eax [esp+8] +
test eax eax +
jz loc_457131  +
push edi  +
mov edi [eax+8] +
mov [esp+4] edi +
test edi edi +
jnz loc_456EF2  +
cmp [eax+0Ch] edi +
jz loc_457130  +
push ebx  +
push ebp  +
push esi  +
test edi edi +
jnz loc_456FE3  +
push dword ptr [esp+20h]  +
call sub_44E600  +
add esp 4 +
mov [esp+10h] eax +
test eax eax +
jnz loc_456F1E  +
mov eax [esp+1Ch] +
pop esi  +
pop ebp  +
pop ebx  +
mov [eax+24h] edi +
pop edi  +
pop ecx  +
retn   +
***
cmp byte ptr [eax] 0 +
mov esi eax +
jz loc_457123  +
cmp byte ptr [esi] 0 +
mov ebp esi +
jz loc_456F4F  +
mov al [esi] +
cmp al 20h +
jz loc_456F4F  +
cmp al 9 +
jb loc_456F45  +
cmp al 0Ah +
jbe loc_456F4F  +
cmp al 0Dh +
jz loc_456F4F  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_456F37  +
mov eax [esp+1Ch] +
mov bl [esi] +
mov byte ptr [esi] 0 +
mov edi [eax+20h] +
test edi edi +
jz loc_456F80  +
mov eax [edi+40h] +
test eax eax +
jz loc_456F80  +
push ebp  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jz loc_456F80  +
mov eax [eax+8] +
test eax eax +
cmovz eax edi +
test eax eax +
jnz loc_456FAB  +
mov eax [esp+18h] +
push ebp  +
mov ebp [esp+20h] +
push dword ptr [eax+10h]  +
push dword ptr [eax+0Ch]  +
push offset aAttributeSLine  +
push 218h  +
push 0  +
push ebp  +
call sub_4525B0  +
add esp 1Ch +
mov dword ptr [ebp+24h] 0 +
test bl bl +
jz loc_456FCF  +
mov [esi] bl +
mov al [esi] +
cmp al 20h +
jz loc_456FC3  +
cmp al 9 +
jb loc_456FBF  +
cmp al 0Ah +
jbe loc_456FC3  +
cmp al 0Dh +
jnz loc_456FC6  +
inc esi  +
jmp loc_456FB1  +
***
cmp byte ptr [esi] 0 +
jnz loc_456F30  +
mov eax [esp+10h] +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
mov eax [edi+28h] +
cmp eax 3 +
jnz loc_457033  +
mov esi [esp+1Ch] +
mov edi [esp+20h] +
push edi  +
push dword ptr [esi+20h]  +
call sub_452DA0  +
add esp 8 +
test eax eax +
jnz loc_45712D  +
push eax  +
mov eax [esp+14h] +
push edi  +
push dword ptr [eax+8]  +
push offset aIdrefAttribute  +
push 218h  +
push dword ptr [eax+14h]  +
push esi  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [esi+24h] 0 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
cmp eax 4 +
jnz loc_45712D  +
push dword ptr [esp+20h]  +
call sub_44E600  +
add esp 4 +
mov [esp+18h] eax +
test eax eax +
jnz loc_45706F  +
mov esi [esp+1Ch] +
push offset aIdrefsSplit  +
push esi  +
call sub_453E00  +
add esp 8 +
mov dword ptr [esi+24h] 0 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
cmp byte ptr [eax] 0 +
mov esi eax +
jz loc_457123  +
ja near ptr loc_4570E3+3  +
push offset aIdrefsAttribut  +
push 218h  +
push dword ptr [edi+14h]  +
push ebp  +
call sub_452540  +
add esp 1Ch +
mov dword ptr [ebp+24h] 0 +
test bl bl +
jz loc_45711F  +
mov [esi] bl +
mov al [esi] +
cmp al 20h +
jz loc_457113  +
cmp al 9 +
jb loc_45710F  +
cmp al 0Ah +
jbe loc_457113  +
cmp al 0Dh +
jnz loc_457116  +
inc esi  +
jmp loc_457101  +
***
cmp byte ptr [esi] 0 +
jnz near ptr dword_45707C+4  +
mov eax [esp+18h] +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
sub esp 3Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+3Ch+var_4] eax +
push ebx  +
mov ebx [esp+40h+arg_4] +
push edi  +
mov edi [esp+44h+arg_0] +
test ebx ebx +
jnz loc_45716F  +
pop edi  +
xor eax eax +
pop ebx  +
mov ecx [esp+3Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 3Ch +
retn   +
push esi  +
push ebx  +
call sub_422980  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4572A7  +
mov eax [esi+8] +
test eax eax +
jz loc_4572A7  +
mov ecx [ebx+2Ch] +
push ebp  +
test ecx ecx +
jz loc_45728F  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_45728F  +
push eax  +
push ecx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_45728F  +
mov eax [esi+24h] +
test eax eax +
jz loc_457230  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_457230  +
push 32h  +
lea ecx [esp+50h+var_38] +
push ecx  +
push eax  +
push dword ptr [esi+8]  +
call sub_4221A0  +
mov ebp eax +
add esp 10h +
test ebp ebp +
jnz loc_4571FD  +
push eax  +
push edi  +
call sub_453E00  +
add esp 8 +
xor eax eax +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
mov ecx [esp+3Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 3Ch +
retn   +
mov eax [ebx+2Ch] +
push ebp  +
push dword ptr [eax+8]  +
call sub_44E370  +
lea ecx [esp+54h+var_38] +
mov [esp+54h+var_3C] eax +
add esp 8 +
cmp ebp ecx +
jz loc_45722B  +
cmp ebp [esi+8] +
jz loc_45722B  +
push ebp  +
call off_4EE2F4  +
mov eax [esp+50h+var_3C] +
add esp 4 +
cmp eax 1 +
jz loc_45728F  +
mov eax [ebx+2Ch] +
push offset aHtml  +
push dword ptr [eax+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45725B  +
push offset aHtml_0  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_45728F  +
mov eax [ebx+2Ch] +
push 0  +
push dword ptr [eax+8]  +
push dword ptr [esi+8]  +
push offset aRootAndDtdName  +
push 213h  +
push esi  +
push edi  +
call sub_452540  +
add esp 1Ch +
xor eax eax +
pop ebp  +
pop esi  +
pop edi  +
pop ebx  +
mov ecx [esp+3Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 3Ch +
retn   +
pop ebp  +
pop esi  +
pop edi  +
mov eax 1 +
pop ebx  +
mov ecx [esp+3Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 3Ch +
retn   +
xor esi esi +
xor edx edx +
xor ecx ecx +
test edi edi +
jz loc_4572D4  +
mov eax [edi+1Ch] +
mov esi [edi+4] +
mov ecx [edi] +
cmp eax 0ABCD1234h +
jz loc_4572C7  +
cmp eax 0ABCD1235h +
jnz loc_4572D4  +
sub edi ecx +
lea eax [edi-1] +
cmp eax 0F8h +
cmovbe edx ecx +
push offset aNoRootElement  +
push offset unk_4BC790  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 2  +
push 20Dh  +
push 17h  +
push 0  +
push edx  +
push ecx  +
push esi  +
push 0  +
call sub_43A650  +
mov ecx [esp+8Ch+var_4] +
add esp 44h +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 3Ch +
retn   +
***
mov eax [esp+8] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push dword ptr [esp+0Ch]  +
call loc_456ED0  +
add esp 0Ch +
mov eax 1 +
retn   +
***
test esi esi +
jnz loc_457363  +
push esi  +
push offset aXmladddocentit  +
push esi  +
push 209h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov esi [esi+2Ch] +
test esi esi +
jnz loc_457384  +
push esi  +
push offset aXmladddocent_0  +
push esi  +
push 20Ah  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push [esp+arg_14]  +
push [esp+4+arg_10]  +
push [esp+8+arg_C]  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push esi  +
call sub_457480  +
mov ecx eax +
add esp 18h +
test ecx ecx +
jz loc_45735F  +
mov [ecx+14h] esi +
mov eax [esi+20h] +
mov [ecx+20h] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_4573C1  +
mov [esi+0Ch] ecx +
mov eax ecx +
mov [esi+10h] ecx +
pop esi  +
retn   +
mov [eax+18h] ecx +
mov eax [esi+10h] +
mov [ecx+1Ch] eax +
mov eax ecx +
mov [esi+10h] ecx +
pop esi  +
retn   +
***
test esi esi +
jnz loc_457403  +
push esi  +
push offset aXmladddtdentit  +
push esi  +
push 209h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov esi [esi+30h] +
test esi esi +
jnz loc_457424  +
push esi  +
push offset aXmladddtdent_0  +
push esi  +
push 20Ah  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push [esp+arg_14]  +
push [esp+4+arg_10]  +
push [esp+8+arg_C]  +
push [esp+0Ch+arg_8]  +
push [esp+10h+arg_4]  +
push esi  +
call sub_457480  +
mov ecx eax +
add esp 18h +
test ecx ecx +
jz loc_4573FF  +
mov [ecx+14h] esi +
mov eax [esi+20h] +
mov [ecx+20h] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_457461  +
mov [esi+0Ch] ecx +
mov eax ecx +
mov [esi+10h] ecx +
pop esi  +
retn   +
mov [eax+18h] ecx +
mov eax [esi+10h] +
mov [ecx+1Ch] eax +
mov eax ecx +
mov [esi+10h] ecx +
pop esi  +
retn   +
***
push edi  +
xor edi edi +
test ebp ebp +
jnz loc_457491  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
push esi  +
mov esi [esp+8+arg_0] +
test esi esi +
jnz loc_4574A0  +
pop esi  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
mov eax [esi+20h] +
test eax eax +
jz loc_4574AA  +
mov edi [eax+50h] +
mov ecx [esp+8+arg_8] +
push ebx  +
lea eax [ecx-1] +
cmp eax 5 +
ja loc_457535  +
jmp ds:off_457544[eax*4]  +
cmp dword ptr [esi+30h] 0 +
jnz loc_4574D6  +
push edi  +
push 0  +
call sub_450180  +
mov ecx [esp+14h+arg_8] +
add esp 8 +
mov [esi+30h] eax +
mov ebx [esi+30h] +
jmp loc_4574F6  +
cmp dword ptr [esi+3Ch] 0 +
jnz loc_4574F3  +
push edi  +
push 0  +
call sub_450180  +
mov ecx [esp+14h+arg_8] +
add esp 8 +
mov [esi+3Ch] eax +
mov ebx [esi+3Ch] +
test ebx ebx +
jz loc_457535  +
push [esp+0Ch+arg_14]  +
push [esp+10h+arg_10]  +
push [esp+14h+arg_C]  +
push ecx  +
push ebp  +
push edi  +
call sub_457640  +
mov edi eax +
add esp 18h +
test edi edi +
jz loc_457535  +
mov eax [esi+20h] +
push edi  +
push ebp  +
push ebx  +
mov [edi+20h] eax +
call sub_44FB90  +
add esp 0Ch +
test eax eax +
jz loc_45753C  +
push edi  +
call sub_457FD0  +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
pop ebx  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
***
call sub_450060  +
add esp 8 +
retn   +
***
push esi  +
push 4Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4575A9  +
push offset aXmlcopyentityM  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
push 4Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+18h] +
add esp 0Ch +
mov dword ptr [esi+4] 11h +
mov eax [edi+30h] +
mov [esi+30h] eax +
mov eax [edi+8] +
test eax eax +
jz loc_4575DB  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+8] eax +
mov eax [edi+34h] +
test eax eax +
jz loc_4575EE  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+34h] eax +
mov eax [edi+38h] +
test eax eax +
jz loc_457601  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+38h] eax +
mov eax [edi+28h] +
test eax eax +
jz loc_457614  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+28h] eax +
mov eax [edi+24h] +
test eax eax +
jz loc_457627  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+24h] eax +
mov eax [edi+40h] +
pop edi  +
test eax eax +
jz loc_45763B  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+40h] eax +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_457669  +
push offset aXmlcreateentit  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push ebx  +
push edi  +
push 4Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+14h+arg_0] +
add esp 0Ch +
mov eax [esp+8+arg_8] +
mov dword ptr [esi+4] 11h +
mov dword ptr [esi+48h] 0 +
mov [esi+30h] eax +
test edi edi +
jnz loc_4576CB  +
push [esp+8+arg_4]  +
call sub_44E600  +
mov [esi+8] eax +
add esp 4 +
mov eax [esp+8+arg_C] +
test eax eax +
jz loc_4576B8  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+34h] eax +
mov eax [esp+8+arg_10] +
test eax eax +
jz loc_45770B  +
push eax  +
call sub_44E600  +
add esp 4 +
jmp loc_457708  +
push 0FFFFFFFFh  +
push [esp+0Ch+arg_4]  +
push edi  +
call sub_44F4D0  +
mov [esi+8] eax +
add esp 0Ch +
mov eax [esp+8+arg_C] +
test eax eax +
jz loc_4576F4  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call sub_44F4D0  +
add esp 0Ch +
mov [esi+34h] eax +
mov eax [esp+8+arg_10] +
test eax eax +
jz loc_45770B  +
push 0FFFFFFFFh  +
push eax  +
push edi  +
call sub_44F4D0  +
add esp 0Ch +
mov [esi+38h] eax +
mov ebx [esp+8+arg_14] +
test ebx ebx +
jz loc_457747  +
push ebx  +
call sub_44E660  +
add esp 4 +
mov [esi+2Ch] eax +
test edi edi +
jz loc_457738  +
cmp eax 5 +
jge loc_457738  +
push eax  +
push ebx  +
push edi  +
call sub_44F4D0  +
add esp 0Ch +
mov [esi+28h] eax +
jmp loc_457755  +
push eax  +
push ebx  +
call sub_44E8A0  +
add esp 8 +
mov [esi+28h] eax +
jmp loc_457755  +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+28h] 0 +
pop edi  +
pop ebx  +
mov dword ptr [esi+40h] 0 +
mov eax esi +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+44h] 0 +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
cmp dword ptr [edi+0Ch] 2 +
jz loc_45783D  +
push esi  +
mov esi [esp+10h] +
push 25h  +
push esi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_457832  +
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
add esp 8 +
mov ecx esi +
cmp byte ptr [esi] 0 +
jz loc_457821  +
push offset asc_4DFF18  +
push edi  +
call loc_421CC0  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
call loc_422060  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jz loc_457A2C  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_457A2B  +
mov eax [edi+30h] +
dec eax  +
cmp eax 4 +
ja loc_457A13  +
jmp ds:off_457A30[eax*4]  +
push offset aEntity_0  +
push esi  +
call sub_422040  +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
mov eax [edi+24h] +
add esp 18h +
test eax eax +
jnz loc_457977  +
push dword ptr [edi+28h]  +
push esi  +
call loc_457770  +
jmp loc_45797E  +
push offset aEntity_0  +
jmp loc_457997  +
push offset aEntity_0  +
push esi  +
call sub_422040  +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
add esp 10h +
cmp dword ptr [edi+34h] 0 +
jz loc_4578FD  +
push offset aPublic_1  +
push esi  +
call sub_422040  +
push dword ptr [edi+34h]  +
push esi  +
call loc_422060  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
push dword ptr [edi+38h]  +
push esi  +
call loc_422060  +
add esp 20h +
jmp loc_457914  +
push offset aSystem_0  +
push esi  +
call sub_422040  +
push dword ptr [edi+38h]  +
push esi  +
call loc_422060  +
add esp 10h +
cmp dword ptr [edi+28h] 0 +
jz loc_457981  +
push offset aNdata  +
push esi  +
call sub_422040  +
mov eax [edi+24h] +
add esp 8 +
test eax eax +
jz loc_457938  +
push eax  +
push esi  +
call sub_422020  +
jmp loc_45797E  +
push dword ptr [edi+28h]  +
push esi  +
call sub_422020  +
jmp loc_45797E  +
push offset aEntity_1  +
push esi  +
call sub_422040  +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
mov eax [edi+24h] +
add esp 18h +
test eax eax +
jnz loc_457977  +
push dword ptr [edi+28h]  +
push esi  +
call loc_457770  +
jmp loc_45797E  +
push eax  +
push esi  +
call loc_422060  +
add esp 8 +
push offset asc_4BFF1C  +
push esi  +
call sub_422040  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push offset aEntity_1  +
push esi  +
call sub_422040  +
push dword ptr [edi+8]  +
push esi  +
call sub_422020  +
add esp 10h +
cmp dword ptr [edi+34h] 0 +
jz loc_4579EB  +
push offset aPublic_1  +
push esi  +
call sub_422040  +
push dword ptr [edi+34h]  +
push esi  +
call loc_422060  +
push offset asc_4BF8BC  +
push esi  +
call sub_422040  +
push dword ptr [edi+38h]  +
push esi  +
call loc_422060  +
add esp 20h +
push offset asc_4BFF1C  +
push esi  +
call sub_422040  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push offset aSystem_0  +
push esi  +
call sub_422040  +
push dword ptr [edi+38h]  +
push esi  +
call loc_422060  +
add esp 10h +
push offset asc_4BFF1C  +
push esi  +
call sub_422040  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push 0  +
push offset aXmldumpentitie  +
push 0  +
push 217h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
push [esp+8+arg_0]  +
call loc_457A70  +
add esp 0Ch +
retn   +
***
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+28h] eax +
mov eax [esp+30h] +
push edi  +
mov edi [esp+38h] +
mov [esp+0Ch] eax +
mov dword ptr [esp+10h] 0 +
test edi edi +
jnz loc_457AA9  +
xor eax eax +
pop edi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
test eax eax +
jz loc_457ABA  +
xor ecx ecx +
cmp dword ptr [eax+4] 0Dh +
setz cl  +
mov [esp+10h] ecx +
push ebx  +
push ebp  +
mov ebx 3E8h +
push ebx  +
call off_4EE2E8  +
mov ebp eax +
add esp 4 +
mov [esp+0Ch] ebp +
test ebp ebp +
jnz loc_457AFC  +
push offset aXmlencodeentit  +
push eax  +
push eax  +
push 2  +
push 2  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
push esi  +
mov esi ebp +
cmp byte ptr [edi] 0 +
jz loc_457F78  +
mov ecx [esp+48h] +
mov eax esi +
sub eax ebp +
mov [esp+14h] eax +
add eax 64h +
cmp eax ebx +
jbe loc_457B4E  +
lea esi [ebx+ebx] +
cmp esi ebx +
jb loc_457F47  +
push esi  +
push ebp  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jz loc_457F47  +
mov eax [esp+14h] +
mov ebp ecx +
mov ebx esi +
mov [esp+10h] ebp +
lea esi [ecx+eax] +
mov ecx [esp+48h] +
mov al [edi] +
cmp al 3Ch +
jnz loc_457C16  +
cmp dword ptr [esp+1Ch] 0 +
jz loc_457C07  +
test ecx ecx +
jz loc_457C07  +
cmp byte ptr [edi+1] 21h +
jnz loc_457C07  +
cmp byte ptr [edi+2] 2Dh +
jnz loc_457C07  +
cmp byte ptr [edi+3] 2Dh +
jnz loc_457C07  +
push offset asc_4BF914  +
push edi  +
call sub_44E8F0  +
add esp 8 +
mov [esp+14h] eax +
test eax eax +
jz loc_457C07  +
cmp edi eax +
jz loc_457BE9  +
mov cl [edi] +
inc edi  +
mov [esi] cl +
inc esi  +
mov ecx [esp+10h] +
mov ebp esi +
sub ebp ecx +
lea eax [ebp+64h] +
cmp eax ebx +
jbe loc_457BDF  +
lea esi [ebx+ebx] +
cmp esi ebx +
jb loc_457F43  +
push esi  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_457F43  +
mov ebx esi +
mov [esp+10h] eax +
lea esi [eax+ebp] +
cmp edi [esp+14h] +
jnz loc_457BA3  +
mov ebp [esp+10h] +
movzx eax byte ptr [edi] +
mov [esi] al +
movzx eax byte ptr [edi+1] +
mov [esi+1] al +
movzx eax byte ptr [edi+2] +
mov [esi+2] al +
add esi 3 +
add edi 3 +
jmp loc_457AFF  +
***
mov dword ptr [esi] 3B746C26h +
add esi 4 +
inc edi  +
jmp loc_457AFF  +
***
cmp al 3Eh +
jnz loc_457C29  +
mov dword ptr [esi] 3B746726h +
add esi 4 +
inc edi  +
jmp loc_457AFF  +
***
cmp al 26h +
jnz loc_457CC0  +
cmp dword ptr [esp+1Ch] 0 +
jz loc_457CAD  +
test ecx ecx +
jz loc_457CAD  +
cmp byte ptr [edi+1] 7Bh +
jnz loc_457CAD  +
push 7Dh  +
push edi  +
call sub_48D0A0  +
add esp 8 +
test eax eax +
jz loc_457CAD  +
mov al [edi] +
cmp al 7Dh +
jz loc_457CA2  +
mov ecx [esp+10h] +
mov [esi] al +
inc edi  +
inc esi  +
mov ebp esi +
sub ebp ecx +
lea eax [ebp+64h] +
cmp eax ebx +
jbe loc_457C98  +
lea esi [ebx+ebx] +
cmp esi ebx +
jb loc_457F43  +
push esi  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_457F43  +
mov ecx eax +
mov ebx esi +
mov [esp+10h] ecx +
lea esi [eax+ebp] +
mov al [edi] +
cmp al 7Dh +
jnz loc_457C60  +
mov ebp [esp+10h] +
mov al [edi] +
mov [esi] al +
inc esi  +
inc edi  +
jmp loc_457AFF  +
***
mov dword ptr [esi] 706D6126h +
mov byte ptr [esi+4] 3Bh +
add esi 5 +
inc edi  +
jmp loc_457AFF  +
***
cmp al 20h +
jb loc_457CC8  +
cmp al 80h +
jb loc_457CA4  +
cmp al 0Ah +
jz loc_457CA4  +
cmp al 9 +
jz loc_457CA4  +
mov edx [esp+1Ch] +
test edx edx +
jz loc_457CDC  +
cmp al 0Dh +
jz loc_457CA4  +
cmp al 80h +
jb loc_457EE6  +
mov ecx [esp+18h] +
test ecx ecx +
jz loc_457CF2  +
cmp dword ptr [ecx+3Ch] 0 +
jnz loc_457CA4  +
test edx edx +
jnz loc_457CA4  +
cmp al 0C0h +
jnb loc_457D73  +
push edx  +
push offset aXmlencodeent_0  +
push edx  +
push 13A8h  +
push 2  +
call sub_43AAC0  +
add esp 14h +
cmp dword ptr [esp+18h] 0 +
jz loc_457D2B  +
push offset aIso88591  +
call sub_44E600  +
mov ecx [esp+1Ch] +
add esp 4 +
mov [ecx+3Ch] eax +
movzx eax byte ptr [edi] +
push eax  +
push offset aD_0  +
lea eax [esp+28h] +
push 0Bh  +
push eax  +
call sub_4213C0  +
mov cl [esp+30h] +
add esp 10h +
mov byte ptr [esp+2Ah] 0 +
test cl cl +
jz loc_457CA7  +
lea edx [esp+20h] +
sub edx esi +
cmp al 0E0h +
jnb loc_457D8B  +
movzx ecx al +
movzx eax byte ptr [edi+1] +
and ecx 1Fh +
mov dword ptr [esp+14h] 2 +
jmp loc_457DDD  +
cmp al 0F0h +
jnb loc_457DAF  +
movzx ecx al +
movzx eax byte ptr [edi+1] +
and ecx 0Fh +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
mov dword ptr [esp+14h] 3 +
movzx eax byte ptr [edi+2] +
jmp loc_457DDD  +
cmp al 0F8h +
jnb loc_457E11  +
movzx ecx al +
movzx eax byte ptr [edi+1] +
and ecx 7 +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
mov dword ptr [esp+14h] 4 +
movzx eax byte ptr [edi+2] +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
movzx eax byte ptr [edi+3] +
and eax 3Fh +
shl ecx 6 +
or ecx eax +
cmp ecx 100h +
jge loc_457E82  +
cmp ecx 9 +
jl loc_457DFF  +
cmp ecx 0Ah +
jle loc_457EAB  +
cmp ecx 0Dh +
jz loc_457EAB  +
cmp ecx 20h +
jge loc_457EAB  +
push 0  +
push offset aXmlencodeent_1  +
push 0  +
push 9  +
push 2  +
call sub_43AAC0  +
add esp 14h +
cmp dword ptr [esp+18h] 0 +
jz loc_457E41  +
push offset aIso88591  +
call sub_44E600  +
mov ecx [esp+1Ch] +
add esp 4 +
mov [ecx+3Ch] eax +
movzx eax byte ptr [edi] +
push eax  +
push offset aD_0  +
lea eax [esp+28h] +
push 0Bh  +
push eax  +
call sub_4213C0  +
mov al [esp+30h] +
lea ecx [esp+30h] +
add esp 10h +
mov byte ptr [esp+2Ah] 0 +
test al al +
jz loc_457CA7  +
nop   +
mov [esi] al +
lea ecx [ecx+1] +
mov al [ecx] +
inc esi  +
test al al +
jnz loc_457E70  +
inc edi  +
jmp loc_457AFF  +
***
cmp ecx 0D7FFh +
jle loc_457EAB  +
cmp ecx 0E000h +
jl loc_457E9A  +
cmp ecx 0FFFDh +
jle loc_457EAB  +
lea eax [ecx-10000h] +
cmp eax 0FFFFFh +
ja loc_457E11  +
push ecx  +
push offset aXX  +
lea eax [esp+28h] +
push 0Bh  +
push eax  +
call sub_4213C0  +
mov al [esp+30h] +
lea ecx [esp+30h] +
add esp 10h +
mov byte ptr [esp+2Ah] 0 +
test al al +
jz loc_457EDD  +
mov [esi] al +
lea ecx [ecx+1] +
mov al [ecx] +
inc esi  +
test al al +
jnz loc_457ED1  +
add edi [esp+14h] +
jmp loc_457AFF  +
***
cmp al 9 +
jb loc_457EEE  +
cmp al 0Ah +
jbe loc_457EFA  +
cmp al 0Dh +
jz loc_457EFA  +
cmp al 20h +
jb loc_457CA7  +
movzx eax al +
push eax  +
push offset aD_0  +
lea eax [esp+34h] +
push 0Bh  +
push eax  +
call sub_4213C0  +
mov cl [esp+3Ch] +
add esp 10h +
mov byte ptr [esp+36h] 0 +
test cl cl +
jz loc_457CA7  +
lea edx [esp+2Ch] +
sub edx esi +
mov al [edx+esi+1] +
mov [esi] cl +
inc esi  +
mov cl al +
test al al +
jnz loc_457F30  +
inc edi  +
jmp loc_457AFF  +
***
mov ebp [esp+10h] +
push offset aXmlencodeent_2  +
push 0  +
push 0  +
push 2  +
push 2  +
call sub_43AAC0  +
push ebp  +
call off_4EE2F4  +
add esp 18h +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
push [esp+8+arg_0]  +
call loc_457A70  +
add esp 0Ch +
retn   +
***
call loc_4501B0  +
add esp 8 +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jz loc_458139  +
mov eax [esi+20h] +
test eax eax +
jz loc_457FEA  +
mov edi [eax+50h] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_458005  +
cmp dword ptr [esi+44h] 1 +
jnz loc_458005  +
cmp esi [eax+14h] +
jnz loc_458005  +
push eax  +
call loc_422E50  +
add esp 4 +
mov eax [esi+8] +
test edi edi +
jz loc_4580CC  +
test eax eax +
jz loc_45802E  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45802E  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+34h] +
test eax eax +
jz loc_45804F  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45804F  +
push dword ptr [esi+34h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+38h] +
test eax eax +
jz loc_458070  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_458070  +
push dword ptr [esi+38h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+40h] +
test eax eax +
jz loc_458091  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_458091  +
push dword ptr [esi+40h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_4580B2  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_4580B2  +
push dword ptr [esi+28h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+24h] +
test eax eax +
jz loc_45812F  +
push eax  +
push edi  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_45812F  +
push dword ptr [esi+24h]  +
jmp loc_458126  +
test eax eax +
jz loc_4580DA  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+34h] +
test eax eax +
jz loc_4580EB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+38h] +
test eax eax +
jz loc_4580FC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+40h] +
test eax eax +
jz loc_45810D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_45811E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+24h] +
test eax eax +
jz loc_45812F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+4+arg_4] +
test esi esi +
jz loc_45819C  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_45817A  +
mov eax [eax+30h] +
test eax eax +
jz loc_45817A  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_4581A5  +
cmp dword ptr [esi+28h] 1 +
jz loc_45819C  +
mov eax [esi+30h] +
test eax eax +
jz loc_45819C  +
mov eax [eax+30h] +
test eax eax +
jz loc_45819C  +
push edi  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_4581A5  +
push edi  +
call sub_458200  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_4581F0  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_4581D8  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4581D8  +
push [esp+arg_4]  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jnz loc_4581F2  +
mov eax [esi+30h] +
test eax eax +
jz loc_4581F0  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_4581F0  +
pop esi  +
mov [esp-4+arg_0] eax +
jmp sub_450440  +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_4582A7  +
movzx eax byte ptr [esi] +
add eax 0FFFFFF9Fh +
cmp eax 10h +
ja loc_4582A7  +
movzx eax ds:byte_4582C0[eax] +
jmp ds:off_4582AC[eax*4]  +
push offset aLt_0  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4582A7  +
mov eax offset unk_4EE158 +
pop esi  +
retn   +
push offset aGt_0  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4582A7  +
mov eax offset unk_4EE1A8 +
pop esi  +
retn   +
push offset aAmp_0  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_458275  +
mov eax offset unk_4EE1F8 +
pop esi  +
retn   +
push offset aApos  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4582A7  +
mov eax offset unk_4EE298 +
pop esi  +
retn   +
push offset aQuot  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4582A7  +
mov eax offset unk_4EE248 +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4582EF  +
mov eax offset off_4EE3B8 +
retn   +
call sub_45E730  +
add eax 0F4h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45830F  +
mov eax offset unk_4EE300 +
retn   +
call sub_45E730  +
add eax 184h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45832F  +
mov eax offset unk_4EE308 +
retn   +
call sub_45E730  +
add eax 188h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45834F  +
mov eax offset off_4EE338 +
retn   +
call sub_45E730  +
add eax 14h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45836F  +
mov eax offset off_4EE3A8 +
retn   +
call sub_45E730  +
add eax 4 +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45838F  +
mov eax offset unk_4F24F0 +
retn   +
call sub_45E730  +
add eax 1BCh +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4583AF  +
mov eax offset unk_4F24C0 +
retn   +
call sub_45E730  +
add eax 190h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4583CF  +
mov eax offset off_4EE320 +
retn   +
call sub_45E730  +
add eax 174h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4583EF  +
mov eax offset unk_4F2510 +
retn   +
call sub_45E730  +
add eax 17Ch +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45840F  +
mov eax offset unk_4EE310 +
retn   +
call sub_45E730  +
add eax 194h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45842F  +
mov eax offset unk_4EE328 +
retn   +
call sub_45E730  +
add eax 1B0h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45844F  +
mov eax offset unk_4EE318 +
retn   +
call sub_45E730  +
add eax 198h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45846F  +
mov eax offset unk_4F6540 +
retn   +
call sub_45E730  +
add eax 1C4h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45848F  +
mov eax offset unk_4F24D8 +
retn   +
call sub_45E730  +
add eax 19Ch +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4584AF  +
mov eax offset unk_4F24C8 +
retn   +
call sub_45E730  +
add eax 1A0h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4584CF  +
mov eax offset unk_4F24B8 +
retn   +
call sub_45E730  +
add eax 1A4h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4584EF  +
mov eax offset unk_4F24F8 +
retn   +
call sub_45E730  +
add eax 1F8h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45850F  +
mov eax offset unk_4F24D0 +
retn   +
call sub_45E730  +
add eax 1A8h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45852F  +
mov eax offset unk_4F24E8 +
retn   +
call sub_45E730  +
add eax 1B8h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45854F  +
mov eax offset unk_4F2520 +
retn   +
call sub_45E730  +
add eax 1ACh +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45856F  +
mov eax offset unk_4F2508 +
retn   +
call sub_45E730  +
add eax 178h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_45858F  +
mov eax offset unk_4F2518 +
retn   +
call sub_45E730  +
add eax 200h +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4585AF  +
mov eax offset unk_4F24E0 +
retn   +
call sub_45E730  +
add eax 18Ch +
retn   +
***
call sub_45E810  +
test eax eax +
jz loc_4585CF  +
mov eax offset off_4EE330 +
retn   +
call sub_45E730  +
add eax 1B4h +
retn   +
***
cmp dword_4F24B0 0 +
jnz locret_4585F3  +
call sub_45E8C0  +
mov dword_4F24B0 eax +
retn   +
***
mov eax dword_4F24B0 +
test eax eax +
jnz loc_458613  +
call sub_45E8C0  +
mov dword_4F24B0 eax +
push esi  +
push eax  +
call sub_45E830  +
mov esi [esp+8+arg_0] +
lea eax [esi+84h] +
push eax  +
call sub_46F690  +
lea eax [esi+0F4h] +
push eax  +
call sub_46F770  +
mov eax dword_4EE304 +
mov [esi+184h] eax +
mov eax dword_4EE30C +
mov [esi+188h] eax +
lea eax [esi+14h] +
push 1  +
push eax  +
mov dword ptr [esi+180h] 0 +
call sub_46F850  +
mov eax dword_4F24C4 +
mov [esi+190h] eax +
mov eax dword_4EE314 +
mov [esi+194h] eax +
mov eax dword_4EE32C +
mov [esi+1B0h] eax +
mov eax off_4EE334 +
mov [esi+1B4h] eax +
mov eax dword_4EE31C +
mov [esi+198h] eax +
mov eax dword_4F24DC +
mov [esi+19Ch] eax +
mov eax dword_4F24CC +
mov [esi+1A0h] eax +
mov eax dword_4F24BC +
mov [esi+1A4h] eax +
mov eax dword_4F24D4 +
mov [esi+1A8h] eax +
mov eax dword_4F2524 +
mov [esi+1ACh] eax +
mov eax dword_4F24E4 +
mov [esi+18Ch] eax +
mov eax off_4EE324 +
mov [esi+174h] eax +
mov eax dword_4F250C +
mov [esi+178h] eax +
mov eax dword_4F2514 +
mov [esi+17Ch] eax +
mov eax dword_4F251C +
mov [esi+200h] eax +
mov eax dword_4F24EC +
mov [esi+1B8h] eax +
mov eax dword_4F24F4 +
mov [esi+1BCh] eax +
mov eax dword_4F24FC +
mov [esi+1F8h] eax +
mov eax dword_4F2504 +
push 34h  +
mov [esi+1FCh] eax +
lea eax [esi+1C4h] +
push 0  +
push eax  +
mov dword ptr [esi+4] offset sub_4126F0 +
mov dword ptr [esi+8] offset sub_464D00 +
mov dword ptr [esi+0Ch] offset sub_464CC0 +
mov dword ptr [esi+10h] offset sub_464B40 +
mov dword ptr [esi+164h] offset sub_497EC6 +
mov dword ptr [esi+168h] offset sub_49BF60 +
mov dword ptr [esi+1C0h] offset sub_49BF60 +
mov dword ptr [esi+170h] offset sub_49AE6F +
mov dword ptr [esi+16Ch] offset sub_44E600 +
mov dword ptr [esi] offset a20903 +
call sub_48CF40  +
push dword_4F24B0  +
call sub_45E850  +
add esp 24h +
pop esi  +
retn   +
***
mov eax [esp+4] +
push ebx  +
push ebp  +
push esi  +
push edi  +
xor esi esi +
xor ebp ebp +
xor ebx ebx +
xor edi edi +
test eax eax +
jz loc_458BD2  +
cmp [eax] bl +
jz loc_458823  +
push 2Ch  +
call off_4EE2E8  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_4587F1  +
push offset aCreatingUriStr  +
call sub_45B090  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push 2Ch  +
push 0  +
push ebp  +
call sub_48CF40  +
push dword ptr [esp+20h]  +
push ebp  +
call sub_45A2E0  +
add esp 14h +
test eax eax +
jnz loc_458BAB  +
cmp [ebp+0] ebx +
jz loc_458823  +
push dword ptr [esp+14h]  +
call sub_44E600  +
jmp loc_458BA6  +
cmp [esp+18h] ebx +
jz loc_458B9C  +
call sub_458EA0  +
mov ebx eax +
test ebx ebx +
jz loc_458BAB  +
push dword ptr [esp+18h]  +
push ebx  +
call sub_45A2E0  +
add esp 8 +
test eax eax +
jnz loc_458B9C  +
test ebp ebp +
jnz loc_458876  +
mov eax [ebx+20h] +
test eax eax +
jz loc_458869  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov [ebx+20h] esi +
push ebx  +
call loc_45A3E0  +
mov esi eax +
jmp loc_458BB5  +
call sub_458EA0  +
mov edi eax +
test edi edi +
jz loc_458BAB  +
cmp [ebp+0] esi +
jnz loc_458BA0  +
cmp [ebp+18h] esi +
jnz loc_458972  +
cmp [ebp+8] esi +
jnz loc_458972  +
cmp [ebp+0Ch] esi +
jnz loc_458972  +
mov eax [ebx] +
test eax eax +
jz loc_4588BB  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_4588D1  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+8] eax +
jmp loc_4588FF  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4588FF  +
push eax  +
call off_4EE2F8  +
mov [edi+0Ch] eax +
add esp 4 +
mov eax [ebx+10h] +
test eax eax +
jz loc_4588F9  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+10h] eax +
mov eax [ebx+14h] +
mov [edi+14h] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_458913  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+18h] eax +
mov eax [ebp+28h] +
test eax eax +
jz loc_458926  +
push eax  +
call off_4EE2F8  +
mov [edi+28h] eax +
jmp loc_458951  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_458947  +
mov eax [ebx+28h] +
test eax eax +
jz loc_458940  +
push eax  +
call off_4EE2F8  +
mov [edi+28h] eax +
jmp loc_458951  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_458954  +
push eax  +
call off_4EE2F8  +
mov [edi+1Ch] eax +
add esp 4 +
mov eax [ebp+20h] +
test eax eax +
jz loc_458B99  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+20h] eax +
push edi  +
jmp loc_458BA1  +
mov eax [ebx] +
test eax eax +
jz loc_458984  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi] eax +
mov eax [ebp+28h] +
test eax eax +
jz loc_458997  +
push eax  +
call off_4EE2F8  +
mov [edi+28h] eax +
jmp loc_4589A8  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4589AB  +
push eax  +
call off_4EE2F8  +
mov [edi+1Ch] eax +
add esp 4 +
mov eax [ebp+20h] +
test eax eax +
jz loc_4589BF  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+20h] eax +
mov eax [ebp+8] +
test eax eax +
jnz loc_458B4D  +
cmp [ebp+0Ch] esi +
jnz loc_458B49  +
mov eax [ebx+8] +
test eax eax +
jz loc_4589E9  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+8] eax +
jmp loc_458A17  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_458A17  +
push eax  +
call off_4EE2F8  +
mov [edi+0Ch] eax +
add esp 4 +
mov eax [ebx+10h] +
test eax eax +
jz loc_458A11  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+10h] eax +
mov eax [ebx+14h] +
mov [edi+14h] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jz loc_458A36  +
cmp byte ptr [ecx] 2Fh +
jnz loc_458A36  +
push ecx  +
call off_4EE2F8  +
add esp 4 +
mov [edi+18h] eax +
push edi  +
jmp loc_458BA1  +
mov edx 2 +
test ecx ecx +
jz loc_458A4E  +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_458A42  +
sub ecx edx +
lea edx [ecx+2] +
mov ecx [ebx+18h] +
test ecx ecx +
jz loc_458A6D  +
lea eax [ecx+1] +
mov [esp+14h] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_458A60  +
sub ecx [esp+14h] +
add edx ecx +
push edx  +
call off_4EE2EC  +
add esp 4 +
mov [edi+18h] eax +
test eax eax +
jnz loc_458A8D  +
push offset aResolvingUriAg  +
call sub_45B090  +
jmp loc_458BA8  +
mov byte ptr [eax] 0 +
xor edx edx +
mov eax [ebx+18h] +
xor esi esi +
test eax eax +
jz loc_458AEA  +
cmp [eax] dl +
jz loc_458AEA  +
nop   +
mov ecx [ebx+18h] +
cmp byte ptr [ecx+edx] 0 +
lea eax [ecx+edx] +
jz loc_458ABF  +
cmp byte ptr [eax] 2Fh +
jz loc_458ABF  +
inc edx  +
cmp byte ptr [ecx+edx] 0 +
lea eax [ecx+edx] +
jnz loc_458AB0  +
cmp byte ptr [ecx+edx] 0 +
jz loc_458AEA  +
inc edx  +
cmp esi edx +
jge loc_458AE1  +
mov eax [ebx+18h] +
cmp byte ptr [edx+eax] 0 +
jnz loc_458AA0  +
mov eax [edi+18h] +
mov byte ptr [esi+eax] 0 +
mov eax [ebp+18h] +
test eax eax +
jz loc_458B34  +
cmp byte ptr [eax] 0 +
jz loc_458B34  +
xor edx edx +
test esi esi +
jnz loc_458B11  +
cmp [ebx+0Ch] edx +
jz loc_458B11  +
mov eax [edi+18h] +
lea esi [edx+1] +
mov byte ptr [eax] 2Fh +
mov eax [ebp+18h] +
mov cl [eax] +
test cl cl +
jz loc_458B34  +
mov eax [edi+18h] +
mov byte ptr [esi+eax] 0 +
push dword ptr [edi+18h]  +
call loc_458FA0  +
add esp 4 +
push edi  +
jmp loc_458BA1  +
test eax eax +
jz loc_458B5C  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+8] eax +
jmp loc_458B85  +
push dword ptr [ebp+0Ch]  +
call off_4EE2F8  +
mov [edi+0Ch] eax +
add esp 4 +
mov eax [ebp+10h] +
test eax eax +
jz loc_458B7F  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [edi+10h] eax +
mov eax [ebp+14h] +
mov [edi+14h] eax +
mov eax [ebp+18h] +
test eax eax +
jz loc_458B99  +
push eax  +
call off_4EE2F8  +
mov [edi+18h] eax +
add esp 4 +
push edi  +
jmp loc_458BA1  +
test ebp ebp +
jz loc_458BB8  +
push ebp  +
call loc_45A3E0  +
mov esi eax +
add esp 4 +
test ebp ebp +
jz loc_458BB8  +
push ebp  +
call sub_458EE0  +
add esp 4 +
test ebx ebx +
jz loc_458BC5  +
push ebx  +
call sub_458EE0  +
add esp 4 +
test edi edi +
jz loc_458BD2  +
push edi  +
call sub_458EE0  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
test esi esi +
jnz loc_458BED  +
xor eax eax +
pop esi  +
retn   +
mov al [esi] +
cmp al 5Ch +
jnz loc_458C0E  +
cmp [esi+1] al +
jnz loc_458C0E  +
cmp byte ptr [esi+2] 3Fh +
jnz loc_458C0E  +
cmp [esi+3] al +
jnz loc_458C0E  +
push esi  +
call sub_44E600  +
add esp 4 +
pop esi  +
retn   +
cmp al 2Fh +
jnz loc_458C22  +
cmp byte ptr [esi+1] 2Fh +
lea eax [esi+1] +
jnz loc_458C22  +
cmp byte ptr [esi+2] 2Fh +
cmovnz esi eax +
push esi  +
call sub_45A210  +
add esp 4 +
test eax eax +
jz loc_458C40  +
push eax  +
call sub_458EE0  +
push esi  +
call sub_44E600  +
add esp 8 +
pop esi  +
retn   +
push edi  +
push offset asc_4C149C  +
push esi  +
call sub_44E8F0  +
mov edx eax +
add esp 8 +
test edx edx +
jz loc_458CAA  +
sub edx esi +
lea ecx [edx-1] +
cmp ecx 13h +
ja loc_458CAA  +
xor ecx ecx +
test edx edx +
jle loc_458C7B  +
mov al [ecx+esi] +
cmp al 61h +
jb loc_458C70  +
cmp al 7Ah +
jbe loc_458C76  +
sub al 41h +
cmp al 19h +
ja loc_458CAA  +
inc ecx  +
cmp ecx edx +
jl loc_458C65  +
push offset a?__  +
push esi  +
call loc_45B0F0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_458CAA  +
push edi  +
call sub_45A210  +
add esp 4 +
test eax eax +
jz loc_458CAA  +
push eax  +
call sub_458EE0  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
push ebx  +
push 2Ch  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_458CCF  +
push offset aCreatingUriStr  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push ebp  +
push 2Ch  +
push 0  +
push ebx  +
call sub_48CF40  +
push esi  +
call sub_44E660  +
mov ebp eax +
add esp 10h +
cmp ebp 2 +
jle loc_458D70  +
test esi esi +
jz loc_458D70  +
mov cl [esi] +
cmp cl 61h +
jb loc_458CFE  +
cmp cl 7Ah +
jbe loc_458D08  +
cmp cl 41h +
jb loc_458D70  +
cmp cl 5Ah +
ja loc_458D70  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_458D70  +
mov al [esi+2] +
cmp al 2Fh +
jz loc_458D19  +
cmp al 5Ch +
jnz loc_458D70  +
push offset aFile  +
call sub_44E600  +
mov [ebx] eax +
lea eax [ebp+2] +
push eax  +
call off_4EE2EC  +
add esp 8 +
mov [ebx+18h] eax +
test eax eax +
jz loc_458D82  +
mov byte ptr [eax] 2Fh +
lea eax [ebp+1] +
mov edi [ebx+18h] +
push eax  +
inc edi  +
push esi  +
push edi  +
call sub_49BF70  +
add esp 0Ch +
cmp byte ptr [edi] 0 +
jz loc_458D61  +
cmp byte ptr [edi] 5Ch +
jnz loc_458D5B  +
mov byte ptr [edi] 2Fh +
inc edi  +
cmp byte ptr [edi] 0 +
jnz loc_458D53  +
cmp dword ptr [ebx] 0 +
jnz loc_458D92  +
push dword ptr [ebx+18h]  +
call sub_44E600  +
jmp loc_458D98  +
push esi  +
call sub_44E600  +
mov edi eax +
add esp 4 +
mov [ebx+18h] edi +
test edi edi +
jnz loc_458D4E  +
push ebx  +
call sub_458EE0  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push ebx  +
call loc_45A3E0  +
add esp 4 +
mov esi eax +
push ebx  +
call sub_458EE0  +
add esp 4 +
mov eax esi +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_458E93  +
mov eax [esi] +
test eax eax +
jz loc_458DCD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [esi] 0 +
test eax eax +
jz loc_458DE4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+10h] +
mov dword ptr [esi+0Ch] 0 +
test eax eax +
jz loc_458DFC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
mov dword ptr [esi+10h] 0 +
test eax eax +
jz loc_458E14  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_458E2C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
mov dword ptr [esi+20h] 0 +
test eax eax +
jz loc_458E44  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
mov dword ptr [esi+4] 0 +
test eax eax +
jz loc_458E5C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+1Ch] +
mov dword ptr [esi+8] 0 +
test eax eax +
jz loc_458E74  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
mov dword ptr [esi+1Ch] 0 +
test eax eax +
jz loc_458E8C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+28h] 0 +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_458EC3  +
push offset aCreatingUriStr  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
push 2Ch  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jz loc_458F8F  +
mov eax [esi] +
test eax eax +
jz loc_458EFD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_458F0E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_458F1F  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_458F30  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+20h] +
test eax eax +
jz loc_458F41  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_458F52  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_458F63  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+1Ch] +
test eax eax +
jz loc_458F74  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_458F85  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_458FAE  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
cmp byte ptr [esi] 2Fh +
mov eax esi +
jnz loc_458FBB  +
inc eax  +
cmp byte ptr [eax] 2Fh +
jz loc_458FB5  +
cmp byte ptr [eax] 0 +
jz loc_45912E  +
mov cl [eax] +
push ebx  +
mov ebx eax +
test cl cl +
jz loc_459020  +
cmp cl 2Eh +
jnz loc_458FF0  +
mov dl [eax+1] +
cmp dl 2Fh +
jnz loc_458FEC  +
add eax 2 +
cmp [eax] dl +
jnz loc_45901A  +
inc eax  +
cmp byte ptr [eax] 2Fh +
jz loc_458FE4  +
jmp loc_45901A  +
test dl dl +
jz loc_459020  +
cmp cl 2Fh +
jz loc_459004  +
test cl cl +
jz loc_459020  +
inc eax  +
mov [ebx] cl +
inc ebx  +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_458FF5  +
cmp byte ptr [eax+1] 2Fh +
lea ecx [eax+1] +
jnz loc_459014  +
mov eax ecx +
cmp byte ptr [eax] 2Fh +
jz loc_459004  +
mov cl [eax] +
mov [ebx] cl +
inc ebx  +
inc eax  +
mov cl [eax] +
test cl cl +
jnz loc_458FD0  +
mov byte ptr [ebx] 0 +
mov edx esi +
cmp byte ptr [esi] 2Fh +
jnz loc_459036  +
cmp byte ptr [edx] 0 +
jz loc_45912D  +
push edi  +
mov ah [edx] +
mov ecx edx +
cmp ah 2Fh +
jz loc_459060  +
mov al ah +
test al al +
jz loc_4590E2  +
mov al [ecx+1] +
inc ecx  +
cmp al 2Fh +
jnz loc_459050  +
cmp byte ptr [ecx] 0 +
jz loc_4590E2  +
inc ecx  +
cmp ah 2Eh +
jnz loc_459077  +
cmp [edx+1] ah +
jnz loc_459077  +
lea eax [edx+3] +
cmp ecx eax +
jz loc_4590D8  +
cmp byte ptr [ecx] 2Eh +
jnz loc_4590D8  +
cmp byte ptr [ecx+1] 2Eh +
jnz loc_4590D8  +
mov al [ecx+2] +
cmp al 2Fh +
jz loc_45908D  +
test al al +
jnz loc_4590D8  +
test al al +
jz loc_4590DF  +
mov edi edx +
add ecx 3 +
mov al [ecx] +
lea edi [edi+1] +
mov [edi-1] al +
lea ecx [ecx+1] +
test al al +
jnz loc_459096  +
mov eax edx +
cmp eax esi +
jbe loc_4590B3  +
dec eax  +
cmp byte ptr [eax] 2Fh +
jz loc_4590A7  +
cmp eax esi +
jz loc_459040  +
mov edx eax +
cmp eax esi +
jbe loc_459040  +
cmp byte ptr [edx-1] 2Fh +
lea eax [edx-1] +
jz loc_459040  +
mov edx eax +
cmp edx esi +
ja loc_4590C0  +
jmp loc_459040  +
***
mov edx ecx +
jmp loc_459040  +
***
mov byte ptr [edx] 0 +
mov byte ptr [ebx] 0 +
cmp byte ptr [esi] 2Fh +
pop edi  +
jnz loc_45912D  +
mov eax esi +
cmp byte ptr [eax+1] 2Eh +
jnz loc_459112  +
cmp byte ptr [eax+2] 2Eh +
jnz loc_459112  +
mov dl [eax+3] +
lea ecx [eax+3] +
cmp dl 2Fh +
jz loc_45910B  +
test dl dl +
jnz loc_459112  +
mov eax ecx +
cmp byte ptr [eax] 2Fh +
jz loc_4590F0  +
cmp eax esi +
jz loc_45912D  +
mov cl [eax] +
test cl cl +
jz loc_45912A  +
sub eax esi +
nop   +
mov [esi] cl +
inc esi  +
mov cl [eax+esi] +
test cl cl +
jnz loc_459120  +
mov byte ptr [esi] 0 +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+4+arg_0] +
mov eax [esi] +
mov [esp+4+arg_4] eax +
lea eax [esp+4+arg_4] +
push eax  +
push edi  +
call sub_45A0E0  +
add esp 8 +
test eax eax +
jnz loc_45916E  +
mov eax [esp+4+arg_4] +
cmp byte ptr [eax] 40h +
jnz loc_45916E  +
inc eax  +
jmp loc_459170  +
mov eax [esi] +
mov [esp+4+arg_4] eax +
lea eax [esp+4+arg_4] +
push eax  +
push edi  +
call sub_459560  +
add esp 8 +
test eax eax +
jnz loc_4591AE  +
mov eax [esp+4+arg_4] +
cmp byte ptr [eax] 3Ah +
jnz loc_4591AA  +
inc eax  +
mov [esp+4+arg_4] eax +
lea eax [esp+4+arg_4] +
push eax  +
push edi  +
call sub_459A50  +
add esp 8 +
test eax eax +
jnz loc_4591AE  +
mov eax [esp+4+arg_4] +
mov [esi] eax +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov eax [edi] +
mov cl [eax] +
cmp cl 30h +
jl loc_459254  +
cmp cl 39h +
jg loc_459254  +
mov dl [eax+1] +
push ebx  +
push esi  +
cmp dl 30h +
jl loc_45924B  +
cmp dl 39h +
jg loc_45924B  +
cmp cl 30h +
jz loc_459203  +
mov bl [eax+2] +
cmp bl 30h +
jl loc_4591F8  +
cmp bl 39h +
jle loc_459203  +
pop esi  +
add eax 2 +
mov [edi] eax +
xor eax eax +
pop ebx  +
pop edi  +
retn   +
cmp cl 31h +
jnz loc_459215  +
mov bl [eax+2] +
cmp bl 30h +
jl loc_459215  +
cmp bl 39h +
jle loc_459237  +
cmp cl 32h +
jnz loc_459242  +
cmp dl 34h +
jg loc_45922C  +
mov cl [eax+2] +
cmp cl 30h +
jl loc_45922C  +
cmp cl 39h +
jle loc_459237  +
cmp dl 35h +
jnz loc_459242  +
cmp byte ptr [eax+2] 30h +
jl loc_459242  +
pop esi  +
add eax 3 +
mov [edi] eax +
xor eax eax +
pop ebx  +
pop edi  +
retn   +
pop esi  +
pop ebx  +
mov eax 1 +
pop edi  +
retn   +
pop esi  +
inc eax  +
mov [edi] eax +
xor eax eax +
pop ebx  +
pop edi  +
retn   +
mov eax 1 +
pop edi  +
retn   +
***
test ebx ebx +
jnz loc_45926E  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
push esi  +
mov esi [ebx] +
push edi  +
mov edi [esp+8+arg_0] +
mov al [esi] +
cmp al 61h +
jl loc_459284  +
cmp al 7Ah +
jle loc_459368  +
cmp al 41h +
jl loc_459290  +
cmp al 5Ah +
jle loc_459368  +
cmp al 30h +
jl loc_45929C  +
cmp al 39h +
jle loc_459368  +
cmp al 2Dh +
jz loc_459368  +
cmp al 2Eh +
jz loc_459368  +
cmp al 5Fh +
jz loc_459368  +
cmp al 7Eh +
jz loc_459368  +
cmp al 25h +
jnz loc_459302  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_4592CD  +
cmp cl 39h +
jle loc_4592E1  +
cmp cl 61h +
jl loc_4592D7  +
cmp cl 66h +
jle loc_4592E1  +
cmp cl 41h +
jl loc_459302  +
cmp cl 46h +
jg loc_459302  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_4592EE  +
cmp cl 39h +
jle loc_459368  +
cmp cl 61h +
jl loc_4592F8  +
cmp cl 66h +
jle loc_459368  +
cmp cl 41h +
jl loc_459302  +
cmp cl 46h +
jle loc_459368  +
cmp al 21h +
jz loc_459368  +
cmp al 24h +
jz loc_459368  +
cmp al 26h +
jz loc_459368  +
cmp al 28h +
jz loc_459368  +
cmp al 29h +
jz loc_459368  +
cmp al 2Ah +
jz loc_459368  +
cmp al 2Bh +
jz loc_459368  +
cmp al 2Ch +
jz loc_459368  +
cmp al 3Bh +
jz loc_459368  +
cmp al 3Dh +
jz loc_459368  +
cmp al 27h +
jz loc_459368  +
cmp al 3Ah +
jz loc_459368  +
cmp al 40h +
jz loc_459368  +
cmp al 2Fh +
jz loc_459368  +
cmp al 3Fh +
jz loc_459368  +
cmp al 5Bh +
jz loc_459368  +
cmp al 5Dh +
jz loc_459368  +
test edi edi +
jz loc_4593BB  +
test byte ptr [edi+24h] 1 +
jz loc_45937A  +
cmp al 7Bh +
jz loc_459368  +
cmp al 7Dh +
jz loc_459368  +
cmp al 7Ch +
jz loc_459368  +
cmp al 5Ch +
jz loc_459368  +
cmp al 5Eh +
jz loc_459368  +
cmp al 60h +
jnz loc_45937A  +
cmp al 25h +
jnz loc_459374  +
add esi 3 +
jmp loc_459276  +
inc esi  +
jmp loc_459276  +
mov eax [edi+20h] +
test eax eax +
jz loc_45938B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_4593AC  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+20h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+20h] eax +
pop edi  +
mov [ebx] esi +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
push edi  +
mov esi [ebx] +
mov [esp+8+arg_4] esi +
mov al [esi] +
cmp al 2Fh +
jnz loc_459450  +
cmp byte ptr [esi+1] 2Fh +
lea eax [esp+8+arg_4] +
push eax  +
jnz loc_459438  +
add esi 2 +
mov [esp+0Ch+arg_4] esi +
mov esi [esp+0Ch+arg_0] +
push esi  +
call sub_459140  +
add esp 8 +
test eax eax +
jnz loc_459553  +
cmp [esi+0Ch] eax +
jnz loc_459416  +
mov dword ptr [esi+14h] 0FFFFFFFFh +
lea eax [esp+8+arg_4] +
push eax  +
push esi  +
call loc_459770  +
add esp 8 +
test eax eax +
jnz loc_459553  +
mov eax [esp+8+arg_4] +
pop edi  +
mov [ebx] eax +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
push [esp+0Ch+arg_0]  +
call sub_459810  +
add esp 8 +
test eax eax +
jz loc_45954B  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
cmp al 61h +
jl loc_45945C  +
cmp al 7Ah +
jle loc_459536  +
cmp al 41h +
jl loc_459468  +
cmp al 5Ah +
jle loc_459536  +
cmp al 30h +
jl loc_459474  +
cmp al 39h +
jle loc_459536  +
cmp al 2Dh +
jz loc_459536  +
cmp al 2Eh +
jz loc_459536  +
cmp al 5Fh +
jz loc_459536  +
cmp al 7Eh +
jz loc_459536  +
cmp al 25h +
jnz loc_4594DA  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_4594A5  +
cmp cl 39h +
jle loc_4594B9  +
cmp cl 61h +
jl loc_4594AF  +
cmp cl 66h +
jle loc_4594B9  +
cmp cl 41h +
jl loc_4594DA  +
cmp cl 46h +
jg loc_4594DA  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_4594C6  +
cmp cl 39h +
jle loc_459536  +
cmp cl 61h +
jl loc_4594D0  +
cmp cl 66h +
jle loc_459536  +
cmp cl 41h +
jl loc_4594DA  +
cmp cl 46h +
jle loc_459536  +
cmp al 21h +
jz loc_459536  +
cmp al 24h +
jz loc_459536  +
cmp al 26h +
jz loc_459536  +
cmp al 28h +
jz loc_459536  +
cmp al 29h +
jz loc_459536  +
cmp al 2Ah +
jz loc_459536  +
cmp al 2Bh +
jz loc_459536  +
cmp al 2Ch +
jz loc_459536  +
cmp al 3Bh +
jz loc_459536  +
cmp al 3Dh +
jz loc_459536  +
cmp al 27h +
jz loc_459536  +
cmp al 3Ah +
jz loc_459536  +
cmp al 40h +
jz loc_459536  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_45954F  +
mov eax [edi+18h] +
test eax eax +
jz loc_459527  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [edi+18h] 0 +
xor eax eax +
pop edi  +
mov [ebx] esi +
pop esi  +
pop ebx  +
retn   +
lea eax [esp+8+arg_4] +
push eax  +
push [esp+0Ch+arg_0]  +
call sub_459990  +
add esp 8 +
test eax eax +
jnz loc_459553  +
mov esi [esp+8+arg_4] +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebp [esp+arg_4] +
push esi  +
mov esi [ebp+0] +
mov ebx esi +
mov [esp+4+arg_4] esi +
mov al [esi] +
cmp al 5Bh +
jnz loc_459600  +
mov al [esi+1] +
inc esi  +
cmp al 5Dh +
jz loc_45958E  +
test al al +
jz loc_4595F2  +
mov al [esi+1] +
inc esi  +
cmp al 5Dh +
jnz loc_459582  +
inc esi  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_45975B  +
mov eax [edi+8] +
test eax eax +
jz loc_4595AD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+0Ch] +
mov dword ptr [edi+8] 0 +
test eax eax +
jz loc_4595C5  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp esi ebx +
jz loc_459754  +
mov eax esi +
sub eax ebx +
test byte ptr [edi+24h] 2 +
jz loc_45973B  +
push eax  +
push ebx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+0Ch] eax +
mov [ebp+0] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
cmp byte ptr [esi] 5Dh +
jz loc_45958E  +
pop esi  +
pop ebp  +
mov eax 1 +
pop ebx  +
retn   +
cmp al 30h +
jl loc_459675  +
cmp al 39h +
jg loc_459675  +
lea eax [esp+4+arg_4] +
push eax  +
call sub_4591C0  +
add esp 4 +
test eax eax +
jnz loc_459675  +
mov eax [esp+4+arg_4] +
cmp byte ptr [eax] 2Eh +
jnz loc_459675  +
inc eax  +
mov [esp+4+arg_4] eax +
lea eax [esp+4+arg_4] +
push eax  +
call sub_4591C0  +
add esp 4 +
test eax eax +
jnz loc_459675  +
mov eax [esp+4+arg_4] +
cmp byte ptr [eax] 2Eh +
jnz loc_459675  +
lea eax [esp+4+arg_4] +
push eax  +
call sub_4591C0  +
add esp 4 +
test eax eax +
jnz loc_459675  +
mov eax [esp+4+arg_4] +
cmp byte ptr [eax] 2Eh +
jnz loc_459675  +
lea eax [esp+4+arg_4] +
push eax  +
call sub_4591C0  +
add esp 4 +
test eax eax +
jnz loc_459675  +
mov esi [esp+4+arg_4] +
jmp loc_45958F  +
mov al [esi] +
cmp al 61h +
jl loc_459683  +
cmp al 7Ah +
jle loc_459729  +
cmp al 41h +
jl loc_45968F  +
cmp al 5Ah +
jle loc_459729  +
cmp al 30h +
jl loc_45969B  +
cmp al 39h +
jle loc_459729  +
cmp al 2Dh +
jz loc_459729  +
cmp al 2Eh +
jz loc_459729  +
cmp al 5Fh +
jz loc_459729  +
cmp al 7Eh +
jz loc_459729  +
cmp al 25h +
jnz loc_4596F9  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_4596C4  +
cmp cl 39h +
jle loc_4596D8  +
cmp cl 61h +
jl loc_4596CE  +
cmp cl 66h +
jle loc_4596D8  +
cmp cl 41h +
jl loc_4596F9  +
cmp cl 46h +
jg loc_4596F9  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_4596E5  +
cmp cl 39h +
jle loc_459729  +
cmp cl 61h +
jl loc_4596EF  +
cmp cl 66h +
jle loc_459729  +
cmp cl 41h +
jl loc_4596F9  +
cmp cl 46h +
jle loc_459729  +
cmp al 21h +
jz loc_459729  +
cmp al 24h +
jz loc_459729  +
cmp al 26h +
jz loc_459729  +
cmp al 28h +
jz loc_459729  +
cmp al 29h +
jz loc_459729  +
cmp al 2Ah +
jz loc_459729  +
cmp al 2Bh +
jz loc_459729  +
cmp al 2Ch +
jz loc_459729  +
cmp al 3Bh +
jz loc_459729  +
cmp al 3Dh +
jz loc_459729  +
cmp al 27h +
jnz loc_45958F  +
cmp al 25h +
jnz loc_459735  +
add esi 3 +
jmp loc_459675  +
inc esi  +
jmp loc_459675  +
push 0  +
push eax  +
push ebx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+0Ch] eax +
mov [ebp+0] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov dword ptr [edi+0Ch] 0 +
pop edi  +
mov [ebp+0] esi +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebx  +
mov ebx [esp+0Ch] +
push esi  +
mov esi [ebx] +
cmp byte ptr [esi] 2Fh +
jnz loc_4597A3  +
push 1  +
lea eax [esp+14h] +
inc esi  +
push 0  +
push eax  +
mov [esp+1Ch] esi +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_459805  +
mov esi [esp+10h] +
cmp byte ptr [esi] 2Fh +
jz loc_459780  +
push edi  +
mov edi [esp+10h] +
test edi edi +
jz loc_459800  +
mov eax [edi+18h] +
test eax eax +
jz loc_4597BD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
cmp ecx esi +
jz loc_4597F9  +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_4597E2  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov dword ptr [edi+18h] 0 +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [ebx] +
cmp byte ptr [eax] 2Fh +
jz loc_459823  +
mov eax 1 +
pop ebx  +
retn   +
push esi  +
inc eax  +
push 0  +
mov [esp+8+arg_4] eax +
lea eax [esp+8+arg_4] +
push 0  +
push eax  +
call sub_459E90  +
mov esi [esp+10h+arg_4] +
add esp 0Ch +
test eax eax +
jnz loc_45986A  +
cmp byte ptr [esi] 2Fh +
jnz loc_45986A  +
push 1  +
lea eax [esp+8+arg_4] +
inc esi  +
push 0  +
push eax  +
mov [esp+10h+arg_4] esi +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_4598CC  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 2Fh +
jz loc_459847  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_4598C7  +
mov eax [edi+18h] +
test eax eax +
jz loc_459884  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
cmp esi ecx +
jz loc_4598C0  +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_4598A9  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov dword ptr [edi+18h] 0 +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0  +
push 3Ah  +
mov eax [ebx] +
mov [esp+8+arg_4] eax +
lea eax [esp+8+arg_4] +
push eax  +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_459986  +
push esi  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 2Fh +
jnz loc_459923  +
nop   +
push 1  +
lea eax [esp+8+arg_4] +
inc esi  +
push 0  +
push eax  +
mov [esp+10h+arg_4] esi +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_459985  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 2Fh +
jz loc_459900  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_459980  +
mov eax [edi+18h] +
test eax eax +
jz loc_45993D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
cmp esi ecx +
jz loc_459979  +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_459962  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov dword ptr [edi+18h] 0 +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0  +
push 0  +
mov eax [ebx] +
mov [esp+8+arg_4] eax +
lea eax [esp+8+arg_4] +
push eax  +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_459A46  +
push esi  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 2Fh +
jnz loc_4599E3  +
nop   +
push 1  +
lea eax [esp+8+arg_4] +
inc esi  +
push 0  +
push eax  +
mov [esp+10h+arg_4] esi +
call sub_459E90  +
add esp 0Ch +
test eax eax +
jnz loc_459A45  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 2Fh +
jz loc_4599C0  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_459A40  +
mov eax [edi+18h] +
test eax eax +
jz loc_4599FD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
cmp esi ecx +
jz loc_459A39  +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_459A22  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+18h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov dword ptr [edi+18h] 0 +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edx [edi] +
mov al [edx] +
cmp al 30h +
jl loc_459AA0  +
cmp al 39h +
jg loc_459AA0  +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_459A71  +
mov dword ptr [esi+14h] 0 +
mov al [edx] +
cmp al 30h +
jl loc_459A99  +
cmp al 39h +
jg loc_459A99  +
test esi esi +
jz loc_459A91  +
mov ecx [esi+14h] +
movsx eax al +
lea ecx [ecx+ecx*4] +
lea eax [eax+ecx*2] +
add eax 0FFFFFFD0h +
mov [esi+14h] eax +
mov al [edx+1] +
inc edx  +
cmp al 30h +
jge loc_459A77  +
pop esi  +
mov [edi] edx +
xor eax eax +
pop edi  +
retn   +
mov eax 1 +
pop edi  +
retn   +
***
test ebx ebx +
jnz loc_459ABE  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
push esi  +
mov esi [ebx] +
push edi  +
mov edi [esp+8+arg_0] +
mov al [esi] +
cmp al 61h +
jl loc_459AD4  +
cmp al 7Ah +
jle loc_459BBC  +
cmp al 41h +
jl loc_459AE0  +
cmp al 5Ah +
jle loc_459BBC  +
cmp al 30h +
jl loc_459AEC  +
cmp al 39h +
jle loc_459BBC  +
cmp al 2Dh +
jz loc_459BBC  +
cmp al 2Eh +
jz loc_459BBC  +
cmp al 5Fh +
jz loc_459BBC  +
cmp al 7Eh +
jz loc_459BBC  +
cmp al 25h +
jnz loc_459B52  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_459B1D  +
cmp cl 39h +
jle loc_459B31  +
cmp cl 61h +
jl loc_459B27  +
cmp cl 66h +
jle loc_459B31  +
cmp cl 41h +
jl loc_459B52  +
cmp cl 46h +
jg loc_459B52  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_459B3E  +
cmp cl 39h +
jle loc_459BBC  +
cmp cl 61h +
jl loc_459B48  +
cmp cl 66h +
jle loc_459BBC  +
cmp cl 41h +
jl loc_459B52  +
cmp cl 46h +
jle loc_459BBC  +
cmp al 21h +
jz loc_459BBC  +
cmp al 24h +
jz loc_459BBC  +
cmp al 26h +
jz loc_459BBC  +
cmp al 28h +
jz loc_459BBC  +
cmp al 29h +
jz loc_459BBC  +
cmp al 2Ah +
jz loc_459BBC  +
cmp al 2Bh +
jz loc_459BBC  +
cmp al 2Ch +
jz loc_459BBC  +
cmp al 3Bh +
jz loc_459BBC  +
cmp al 3Dh +
jz loc_459BBC  +
cmp al 27h +
jz loc_459BBC  +
cmp al 3Ah +
jz loc_459BBC  +
cmp al 40h +
jz loc_459BBC  +
cmp al 2Fh +
jz loc_459BBC  +
cmp al 3Fh +
jz loc_459BBC  +
test edi edi +
jz loc_459C2A  +
test byte ptr [edi+24h] 1 +
jz loc_459BCE  +
cmp al 7Bh +
jz loc_459BBC  +
cmp al 7Dh +
jz loc_459BBC  +
cmp al 7Ch +
jz loc_459BBC  +
cmp al 5Ch +
jz loc_459BBC  +
cmp al 5Eh +
jz loc_459BBC  +
cmp al 5Bh +
jz loc_459BBC  +
cmp al 5Dh +
jz loc_459BBC  +
cmp al 60h +
jnz loc_459BCE  +
cmp al 25h +
jnz loc_459BC8  +
add esi 3 +
jmp loc_459AC6  +
inc esi  +
jmp loc_459AC6  +
mov eax [edi+1Ch] +
test eax eax +
jz loc_459BDF  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_459BF7  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
jmp loc_459C03  +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+1Ch] eax +
mov eax [edi+28h] +
test eax eax +
jz loc_459C17  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+28h] eax +
pop edi  +
mov [ebx] esi +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
push edi  +
mov al [esi] +
cmp al 2Fh +
jnz loc_459C9F  +
cmp byte ptr [esi+1] 2Fh +
lea eax [esp+4+arg_4] +
mov edi [esp+4+arg_0] +
push eax  +
push edi  +
jnz loc_459C8C  +
add esi 2 +
mov [esp+0Ch+arg_4] esi +
call sub_459140  +
add esp 8 +
test eax eax +
jnz loc_459DF1  +
lea eax [esp+4+arg_4] +
push eax  +
push edi  +
call loc_459770  +
add esp 8 +
test eax eax +
jz loc_459D95  +
pop edi  +
pop esi  +
retn   +
call sub_459810  +
add esp 8 +
test eax eax +
jz loc_459D95  +
pop edi  +
pop esi  +
retn   +
cmp al 61h +
jl loc_459CAB  +
cmp al 7Ah +
jle loc_459D7F  +
cmp al 41h +
jl loc_459CB7  +
cmp al 5Ah +
jle loc_459D7F  +
cmp al 30h +
jl loc_459CC3  +
cmp al 39h +
jle loc_459D7F  +
cmp al 2Dh +
jz loc_459D7F  +
cmp al 2Eh +
jz loc_459D7F  +
cmp al 5Fh +
jz loc_459D7F  +
cmp al 7Eh +
jz loc_459D7F  +
cmp al 25h +
jnz loc_459D29  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_459CF4  +
cmp cl 39h +
jle loc_459D08  +
cmp cl 61h +
jl loc_459CFE  +
cmp cl 66h +
jle loc_459D08  +
cmp cl 41h +
jl loc_459D29  +
cmp cl 46h +
jg loc_459D29  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_459D15  +
cmp cl 39h +
jle loc_459D7F  +
cmp cl 61h +
jl loc_459D1F  +
cmp cl 66h +
jle loc_459D7F  +
cmp cl 41h +
jl loc_459D29  +
cmp cl 46h +
jle loc_459D7F  +
cmp al 21h +
jz loc_459D7F  +
cmp al 24h +
jz loc_459D7F  +
cmp al 26h +
jz loc_459D7F  +
cmp al 28h +
jz loc_459D7F  +
cmp al 29h +
jz loc_459D7F  +
cmp al 2Ah +
jz loc_459D7F  +
cmp al 2Bh +
jz loc_459D7F  +
cmp al 2Ch +
jz loc_459D7F  +
cmp al 3Bh +
jz loc_459D7F  +
cmp al 3Dh +
jz loc_459D7F  +
cmp al 27h +
jz loc_459D7F  +
cmp al 3Ah +
jz loc_459D7F  +
cmp al 40h +
jz loc_459D7F  +
mov edi [esp+4+arg_0] +
test edi edi +
jz loc_459D99  +
mov eax [edi+18h] +
test eax eax +
jz loc_459D76  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [edi+18h] 0 +
jmp loc_459D99  +
mov edi [esp+4+arg_0] +
lea eax [esp+4+arg_4] +
push eax  +
push edi  +
call sub_4598D0  +
add esp 8 +
test eax eax +
jnz loc_459DF1  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 3Fh +
jnz loc_459DB9  +
lea eax [esp+4+arg_4] +
inc esi  +
push eax  +
push edi  +
mov [esp+0Ch+arg_4] esi +
call sub_459AB0  +
add esp 8 +
test eax eax +
jnz loc_459DF1  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 23h +
jnz loc_459DD9  +
lea eax [esp+4+arg_4] +
inc esi  +
push eax  +
push edi  +
mov [esp+0Ch+arg_4] esi +
call sub_459260  +
add esp 8 +
test eax eax +
jnz loc_459DF1  +
mov esi [esp+4+arg_4] +
cmp byte ptr [esi] 0 +
jz loc_459DEF  +
push edi  +
call sub_458DB0  +
add esp 4 +
mov eax 1 +
pop edi  +
pop esi  +
retn   +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
test ebx ebx +
jnz loc_459E0E  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
push esi  +
mov esi [ebx] +
mov al [esi] +
cmp al 61h +
jl loc_459E1B  +
cmp al 7Ah +
jle loc_459E23  +
cmp al 41h +
jl loc_459E7E  +
cmp al 5Ah +
jg loc_459E7E  +
mov al [esi+1] +
inc esi  +
cmp al 61h +
jl loc_459E2F  +
cmp al 7Ah +
jle loc_459E23  +
cmp al 41h +
jl loc_459E37  +
cmp al 5Ah +
jle loc_459E23  +
cmp al 30h +
jl loc_459E3F  +
cmp al 39h +
jle loc_459E23  +
cmp al 2Bh +
jz loc_459E23  +
cmp al 2Dh +
jz loc_459E23  +
cmp al 2Eh +
jz loc_459E23  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_459E76  +
mov eax [edi] +
test eax eax +
jz loc_459E64  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi] eax +
pop edi  +
mov [ebx] esi +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
pop esi  +
mov eax 2 +
pop ebx  +
retn   +
***
mov edx [esi] +
lea eax [esp+arg_4] +
push eax  +
push esi  +
call sub_459E00  +
add esp 8 +
test eax eax +
jnz loc_45A0D2  +
mov eax [esp+arg_4] +
cmp byte ptr [eax] 3Ah +
jnz loc_45A0C9  +
inc eax  +
mov [esp+arg_4] eax +
lea eax [esp+arg_4] +
push eax  +
push esi  +
call sub_4593D0  +
add esp 8 +
test eax eax +
jnz loc_45A0D2  +
mov eax [esp+arg_4] +
cmp byte ptr [eax] 3Fh +
jnz loc_45A09B  +
inc eax  +
mov [esp+arg_4] eax +
lea eax [esp+arg_4] +
push eax  +
push esi  +
call sub_459AB0  +
add esp 8 +
test eax eax +
jnz loc_45A0D2  +
mov eax [esp+arg_4] +
cmp byte ptr [eax] 23h +
jnz loc_45A0BB  +
inc eax  +
mov [esp+arg_4] eax +
lea eax [esp+arg_4] +
push eax  +
push esi  +
call sub_459260  +
add esp 8 +
test eax eax +
jnz loc_45A0D2  +
mov eax [esp+arg_4] +
cmp byte ptr [eax] 0 +
jz loc_45A0D0  +
push esi  +
call sub_458DB0  +
add esp 4 +
mov eax 1 +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi [ebx] +
mov al [esi] +
cmp al 61h +
jl loc_45A0F6  +
cmp al 7Ah +
jle loc_45A198  +
cmp al 41h +
jl loc_45A102  +
cmp al 5Ah +
jle loc_45A198  +
cmp al 30h +
jl loc_45A10E  +
cmp al 39h +
jle loc_45A198  +
cmp al 2Dh +
jz loc_45A198  +
cmp al 2Eh +
jz loc_45A198  +
cmp al 5Fh +
jz loc_45A198  +
cmp al 7Eh +
jz loc_45A198  +
cmp al 25h +
jnz loc_45A168  +
mov cl [esi+1] +
cmp cl 30h +
jl loc_45A133  +
cmp cl 39h +
jle loc_45A147  +
cmp cl 61h +
jl loc_45A13D  +
cmp cl 66h +
jle loc_45A147  +
cmp cl 41h +
jl loc_45A168  +
cmp cl 46h +
jg loc_45A168  +
mov cl [esi+2] +
cmp cl 30h +
jl loc_45A154  +
cmp cl 39h +
jle loc_45A198  +
cmp cl 61h +
jl loc_45A15E  +
cmp cl 66h +
jle loc_45A198  +
cmp cl 41h +
jl loc_45A168  +
cmp cl 46h +
jle loc_45A198  +
cmp al 21h +
jz loc_45A198  +
cmp al 24h +
jz loc_45A198  +
cmp al 26h +
jz loc_45A198  +
cmp al 28h +
jz loc_45A198  +
cmp al 29h +
jz loc_45A198  +
cmp al 2Ah +
jz loc_45A198  +
cmp al 2Bh +
jz loc_45A198  +
cmp al 2Ch +
jz loc_45A198  +
cmp al 3Bh +
jz loc_45A198  +
cmp al 3Dh +
jz loc_45A198  +
cmp al 27h +
jz loc_45A198  +
cmp al 3Ah +
jnz loc_45A1AA  +
cmp al 25h +
jnz loc_45A1A4  +
add esi 3 +
jmp loc_45A0E8  +
inc esi  +
jmp loc_45A0E8  +
cmp byte ptr [esi] 40h +
jnz loc_45A201  +
push edi  +
mov edi [esp+8+arg_0] +
test edi edi +
jz loc_45A1F9  +
mov eax [edi+10h] +
test eax eax +
jz loc_45A1C9  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [ebx] +
mov eax esi +
sub eax ecx +
test byte ptr [edi+24h] 2 +
jz loc_45A1EA  +
push eax  +
push ecx  +
call sub_44E8A0  +
add esp 8 +
mov [edi+10h] eax +
mov [ebx] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push 0  +
push eax  +
push ecx  +
call loc_45B280  +
add esp 0Ch +
mov [edi+10h] eax +
pop edi  +
mov [ebx] esi +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
***
cmp [esp+arg_0] 0 +
jnz loc_45A21A  +
xor eax eax +
retn   +
push esi  +
push 2Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45A23D  +
push offset aCreatingUriStr  +
call sub_45B090  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
push 2Ch  +
push 0  +
push esi  +
call sub_48CF40  +
push [esp+10h+arg_0]  +
push esi  +
call sub_45A2E0  +
add esp 14h +
test eax eax +
jz loc_45A239  +
push esi  +
call sub_458EE0  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
***
cmp [esp+arg_0] 0 +
jnz loc_45A27A  +
xor eax eax +
retn   +
push esi  +
push 2Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45A29D  +
push offset aCreatingUriStr  +
call sub_45B090  +
add esp 4 +
mov eax esi +
pop esi  +
retn   +
push 2Ch  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
cmp [esp+4+arg_4] 0 +
jz loc_45A2B5  +
or dword ptr [esi+24h] 2 +
push [esp+4+arg_0]  +
push esi  +
call sub_45A2E0  +
add esp 8 +
test eax eax +
jz loc_45A299  +
push esi  +
call sub_458EE0  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
***
test edi edi +
sub esp 2Ch +
push esi  +
mov esi [esp+30h+arg_0] +
test esi esi +
jnz loc_45A343  +
xor eax eax +
pop esi  +
add esp 2Ch +
retn   +
push esi  +
call sub_45A210  +
add esp 4 +
test eax eax +
jz loc_45A364  +
push eax  +
call sub_458EE0  +
push esi  +
call sub_44E600  +
add esp 8 +
pop esi  +
add esp 2Ch +
retn   +
push edi  +
push esi  +
call sub_458BE0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_45A37A  +
pop edi  +
pop esi  +
add esp 2Ch +
retn   +
push edi  +
call sub_45A210  +
add esp 4 +
test eax eax +
jz loc_45A398  +
push eax  +
call sub_458EE0  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
add esp 2Ch +
retn   +
cmp byte ptr [edi] 0 +
mov eax edi +
jz loc_45A3AE  +
nop   +
cmp byte ptr [eax] 5Ch +
jnz loc_45A3A8  +
mov byte ptr [eax] 2Fh +
inc eax  +
cmp byte ptr [eax] 0 +
jnz loc_45A3A0  +
push 2Ch  +
lea eax [esp+38h+var_2C] +
push 0  +
push eax  +
call sub_48CF40  +
lea eax [esp+40h+var_2C] +
mov [esp+40h+var_14] edi +
push eax  +
call loc_45A3E0  +
push edi  +
mov esi eax +
call off_4EE2F4  +
add esp 14h +
mov eax esi +
pop edi  +
pop esi  +
add esp 2Ch +
retn   +
***
sub esp 10h +
push ebx  +
mov ebx [esp+18h] +
test ebx ebx +
jnz loc_45A3F3  +
xor eax eax +
pop ebx  +
add esp 10h +
retn   +
***
push ebp  +
push edi  +
mov ebp 50h +
push 51h  +
mov [esp+10h] ebp +
call off_4EE2EC  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_45A425  +
push offset aSavingUri  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov ebx [ebx] +
push esi  +
xor esi esi +
test ebx ebx +
jz loc_45A492  +
cmp byte ptr [ebx] 0 +
jz loc_45A48D  +
cmp esi ebp +
jl loc_45A461  +
cmp ebp 100000h +
jg loc_45A634  +
add ebp ebp +
lea eax [ebp+1] +
push eax  +
push edi  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_45A613  +
mov [esp+10h] ebp +
mov edi eax +
mov al [ebx] +
inc ebx  +
mov [esi+edi] al +
inc esi  +
cmp byte ptr [ebx] 0 +
jnz loc_45A433  +
cmp esi ebp +
jl loc_45A48D  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov byte ptr [esi+edi] 3Ah +
inc esi  +
mov ebx [esp+24h] +
mov dword ptr [esp+18h] 37h +
mov ecx [ebx+4] +
mov [esp+1Ch] ecx +
test ecx ecx +
jz loc_45A671  +
cmp byte ptr [ecx] 0 +
jz loc_45AE62  +
lea edx [esi+3] +
mov [esp+14h] edx +
cmp edx ebp +
jl loc_45A4E8  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+1Ch] +
mov edx [esp+14h] +
mov al [ecx] +
cmp al 3Bh +
jz loc_45A655  +
cmp al 2Fh +
jz loc_45A655  +
cmp al 3Fh +
jz loc_45A655  +
cmp al 3Ah +
jz loc_45A655  +
cmp al 40h +
jz loc_45A655  +
cmp al 26h +
jz loc_45A655  +
cmp al 3Dh +
jz loc_45A655  +
cmp al 2Bh +
jz loc_45A655  +
cmp al 24h +
jz loc_45A655  +
cmp al 2Ch +
jz loc_45A655  +
cmp al 5Bh +
jz loc_45A655  +
cmp al 5Dh +
jz loc_45A655  +
cmp al 61h +
jl loc_45A556  +
cmp al 7Ah +
jle loc_45A655  +
cmp al 41h +
jl loc_45A562  +
cmp al 5Ah +
jle loc_45A655  +
cmp al 30h +
jl loc_45A56E  +
cmp al 39h +
jle loc_45A655  +
cmp al 2Dh +
jz loc_45A655  +
cmp al 5Fh +
jz loc_45A655  +
cmp al 2Eh +
jz loc_45A655  +
cmp al 21h +
jz loc_45A655  +
cmp al 7Eh +
jz loc_45A655  +
cmp al 2Ah +
jz loc_45A655  +
cmp al 27h +
jz loc_45A655  +
cmp al 28h +
jz loc_45A655  +
cmp al 29h +
jz loc_45A655  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+1Ch] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45A5D6  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+14h] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+1Ch] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45A65F  +
push offset aSavingUri  +
call sub_45B090  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
push offset aReachingArbitr  +
call sub_45B090  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+1Ch] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+14h] edx +
jnz loc_45A4C0  +
jmp loc_45AE5E  +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_45A8E2  +
cmp dword ptr [ebx+14h] 0FFFFFFFFh +
jz loc_45A8E2  +
cmp dword ptr [ebx+8] 0 +
jz loc_45A8AD  +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45A6B2  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov word ptr [esi+edi] 2F2Fh +
add esi 2 +
mov ecx [ebx+8] +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
jz loc_45A800  +
lea edx [esi+3] +
mov [esp+1Ch] edx +
cmp edx ebp +
jl loc_45A6FA  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
mov al [ecx] +
cmp al 61h +
jl loc_45A708  +
cmp al 7Ah +
jle loc_45A7E5  +
cmp al 41h +
jl loc_45A714  +
cmp al 5Ah +
jle loc_45A7E5  +
cmp al 30h +
jl loc_45A720  +
cmp al 39h +
jle loc_45A7E5  +
cmp al 2Dh +
jz loc_45A7E5  +
cmp al 5Fh +
jz loc_45A7E5  +
cmp al 2Eh +
jz loc_45A7E5  +
cmp al 21h +
jz loc_45A7E5  +
cmp al 7Eh +
jz loc_45A7E5  +
cmp al 2Ah +
jz loc_45A7E5  +
cmp al 27h +
jz loc_45A7E5  +
cmp al 28h +
jz loc_45A7E5  +
cmp al 29h +
jz loc_45A7E5  +
cmp al 24h +
jz loc_45A7E5  +
cmp al 2Ch +
jz loc_45A7E5  +
cmp al 3Bh +
jz loc_45A7E5  +
cmp al 3Ah +
jz loc_45A7E5  +
cmp al 40h +
jz loc_45A7E5  +
cmp al 26h +
jz loc_45A7E5  +
cmp al 3Dh +
jz loc_45A7E5  +
cmp al 2Bh +
jz loc_45A7E5  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+14h] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45A7A8  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+1Ch] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+14h] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45A7EF  +
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+1Ch] edx +
jnz loc_45A6D2  +
mov ebx [esp+24h] +
mov ecx [ebx+18h] +
mov [esp+14h] ecx +
test ecx ecx +
jz loc_45AC4F  +
mov edx [ebx] +
test edx edx +
jz loc_45AB15  +
cmp byte ptr [ecx] 2Fh +
jnz loc_45AB15  +
mov al [ecx+1] +
lea ebx [ecx+1] +
cmp al 61h +
jl loc_45A830  +
cmp al 7Ah +
jle loc_45A840  +
cmp al 41h +
jl loc_45AB11  +
cmp al 5Ah +
jg loc_45AB11  +
cmp byte ptr [ecx+2] 3Ah +
jnz loc_45AB11  +
push offset aFile  +
push edx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_45AB0D  +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45A883  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov eax [esp+14h] +
mov ecx ebx +
movzx eax byte ptr [eax] +
mov [esi+edi] al +
movzx eax byte ptr [ecx] +
mov [esi+edi+1] al +
movzx eax byte ptr [ecx+1] +
mov [esi+edi+2] al +
add esi 3 +
add ecx 2 +
mov [esp+14h] ecx +
jmp loc_45AB11  +
cmp dword ptr [ebx] 0 +
jz loc_45A800  +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45A800  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
jmp loc_45A800  +
***
lea eax [esi+3] +
cmp eax ebp +
jl loc_45A905  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov word ptr [esi+edi] 2F2Fh +
add esi 2 +
mov ecx [ebx+10h] +
mov [esp+14h] ecx +
test ecx ecx +
jz loc_45AA7A  +
cmp byte ptr [ecx] 0 +
jz loc_45AA52  +
lea edx [esi+3] +
mov [esp+1Ch] edx +
cmp edx ebp +
jl loc_45A958  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
mov al [ecx] +
cmp al 61h +
jl loc_45A966  +
cmp al 7Ah +
jle loc_45AA37  +
cmp al 41h +
jl loc_45A972  +
cmp al 5Ah +
jle loc_45AA37  +
cmp al 30h +
jl loc_45A97E  +
cmp al 39h +
jle loc_45AA37  +
cmp al 2Dh +
jz loc_45AA37  +
cmp al 5Fh +
jz loc_45AA37  +
cmp al 2Eh +
jz loc_45AA37  +
cmp al 21h +
jz loc_45AA37  +
cmp al 7Eh +
jz loc_45AA37  +
cmp al 2Ah +
jz loc_45AA37  +
cmp al 27h +
jz loc_45AA37  +
cmp al 28h +
jz loc_45AA37  +
cmp al 29h +
jz loc_45AA37  +
cmp al 3Bh +
jz loc_45AA37  +
cmp al 3Ah +
jz loc_45AA37  +
cmp al 26h +
jz loc_45AA37  +
cmp al 3Dh +
jz loc_45AA37  +
cmp al 2Bh +
jz loc_45AA37  +
cmp al 24h +
jz loc_45AA37  +
cmp al 2Ch +
jz loc_45AA37  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+14h] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45A9FA  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+1Ch] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+14h] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45AA41  +
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+1Ch] edx +
jnz loc_45A930  +
mov ebx [esp+24h] +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45AA75  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov byte ptr [esi+edi] 40h +
inc esi  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_45A7FC  +
cmp byte ptr [ebx] 0 +
jz loc_45AABC  +
mov ebx [esp+24h] +
cmp dword ptr [ebx+14h] 0 +
jle loc_45A800  +
lea eax [esi+0Ah] +
cmp eax ebp +
jl loc_45AAED  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
push dword ptr [ebx+14h]  +
mov eax ebp +
sub eax esi +
push offset aD_1  +
push eax  +
lea eax [esi+edi] +
push eax  +
call sub_4213C0  +
add esp 10h +
add esi eax +
jmp loc_45A800  +
***
mov ecx [esp+14h] +
mov ebx [esp+24h] +
cmp byte ptr [ecx] 0 +
jz loc_45AC4F  +
lea edx [esi+3] +
mov [esp+1Ch] edx +
cmp edx ebp +
jl loc_45AB4D  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
mov al [ecx] +
cmp al 61h +
jl loc_45AB5B  +
cmp al 7Ah +
jle loc_45AC34  +
cmp al 41h +
jl loc_45AB67  +
cmp al 5Ah +
jle loc_45AC34  +
cmp al 30h +
jl loc_45AB73  +
cmp al 39h +
jle loc_45AC34  +
cmp al 2Dh +
jz loc_45AC34  +
cmp al 5Fh +
jz loc_45AC34  +
cmp al 2Eh +
jz loc_45AC34  +
cmp al 21h +
jz loc_45AC34  +
cmp al 7Eh +
jz loc_45AC34  +
cmp al 2Ah +
jz loc_45AC34  +
cmp al 27h +
jz loc_45AC34  +
cmp al 28h +
jz loc_45AC34  +
cmp al 29h +
jz loc_45AC34  +
cmp al 2Fh +
jz loc_45AC34  +
cmp al 3Bh +
jz loc_45AC34  +
cmp al 40h +
jz loc_45AC34  +
cmp al 26h +
jz loc_45AC34  +
cmp al 3Dh +
jz loc_45AC34  +
cmp al 2Bh +
jz loc_45AC34  +
cmp al 24h +
jz loc_45AC34  +
cmp al 2Ch +
jz loc_45AC34  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+14h] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45ABF7  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+1Ch] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+14h] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45AC3E  +
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+1Ch] edx +
jnz loc_45AB25  +
mov ebx [esp+24h] +
cmp dword ptr [ebx+28h] 0 +
jz loc_45ACCF  +
lea ebx [esi+1] +
cmp ebx ebp +
jl loc_45AC78  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov byte ptr [esi+edi] 3Fh +
mov esi ebx +
mov ebx [esp+24h] +
mov ebx [ebx+28h] +
cmp byte ptr [ebx] 0 +
jz loc_45AE5E  +
lea eax [esi+1] +
mov [esp+1Ch] eax +
cmp eax ebp +
jl loc_45ACB5  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov al [ebx] +
inc ebx  +
mov [esi+edi] al +
inc esi  +
mov eax [esp+1Ch] +
inc eax  +
cmp byte ptr [ebx] 0 +
mov [esp+1Ch] eax +
jnz loc_45AC95  +
jmp loc_45AE5E  +
cmp dword ptr [ebx+1Ch] 0 +
jz loc_45AE62  +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45ACFC  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov byte ptr [esi+edi] 3Fh +
inc esi  +
mov ecx [ebx+1Ch] +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
jz loc_45AE62  +
lea edx [esi+3] +
mov [esp+1Ch] edx +
cmp edx ebp +
jl loc_45AD40  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+14h] +
mov edx [esp+1Ch] +
mov al [ecx] +
cmp al 61h +
jl loc_45AD4E  +
cmp al 7Ah +
jle loc_45AE47  +
cmp al 41h +
jl loc_45AD5A  +
cmp al 5Ah +
jle loc_45AE47  +
cmp al 30h +
jl loc_45AD66  +
cmp al 39h +
jle loc_45AE47  +
cmp al 2Dh +
jz loc_45AE47  +
cmp al 5Fh +
jz loc_45AE47  +
cmp al 2Eh +
jz loc_45AE47  +
cmp al 21h +
jz loc_45AE47  +
cmp al 7Eh +
jz loc_45AE47  +
cmp al 2Ah +
jz loc_45AE47  +
cmp al 27h +
jz loc_45AE47  +
cmp al 28h +
jz loc_45AE47  +
cmp al 29h +
jz loc_45AE47  +
cmp al 3Bh +
jz loc_45AE47  +
cmp al 2Fh +
jz loc_45AE47  +
cmp al 3Fh +
jz loc_45AE47  +
cmp al 3Ah +
jz loc_45AE47  +
cmp al 40h +
jz loc_45AE47  +
cmp al 26h +
jz loc_45AE47  +
cmp al 3Dh +
jz loc_45AE47  +
cmp al 2Bh +
jz loc_45AE47  +
cmp al 24h +
jz loc_45AE47  +
cmp al 2Ch +
jz loc_45AE47  +
cmp al 5Bh +
jz loc_45AE47  +
cmp al 5Dh +
jz loc_45AE47  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+14h] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45AE0A  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+1Ch] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+14h] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45AE51  +
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+14h] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+1Ch] edx +
jnz loc_45AD18  +
mov ebx [esp+24h] +
cmp dword ptr [ebx+20h] 0 +
jz loc_45AFFA  +
lea eax [esi+3] +
cmp eax ebp +
jl loc_45AE8F  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov byte ptr [esi+edi] 23h +
inc esi  +
mov ecx [ebx+20h] +
mov [esp+1Ch] ecx +
cmp byte ptr [ecx] 0 +
jz loc_45AFFA  +
lea edx [esi+3] +
mov [esp+24h] edx +
cmp edx ebp +
jl loc_45AED8  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B010  +
mov ebp [esp+10h] +
mov edi eax +
mov ecx [esp+1Ch] +
mov edx [esp+24h] +
mov al [ecx] +
cmp al 61h +
jl loc_45AEE6  +
cmp al 7Ah +
jle loc_45AFE3  +
cmp al 41h +
jl loc_45AEF2  +
cmp al 5Ah +
jle loc_45AFE3  +
cmp al 30h +
jl loc_45AEFE  +
cmp al 39h +
jle loc_45AFE3  +
cmp al 2Dh +
jz loc_45AFE3  +
cmp al 5Fh +
jz loc_45AFE3  +
cmp al 2Eh +
jz loc_45AFE3  +
cmp al 21h +
jz loc_45AFE3  +
cmp al 7Eh +
jz loc_45AFE3  +
cmp al 2Ah +
jz loc_45AFE3  +
cmp al 27h +
jz loc_45AFE3  +
cmp al 28h +
jz loc_45AFE3  +
cmp al 29h +
jz loc_45AFE3  +
cmp al 3Bh +
jz loc_45AFE3  +
cmp al 2Fh +
jz loc_45AFE3  +
cmp al 3Fh +
jz loc_45AFE3  +
cmp al 3Ah +
jz loc_45AFE3  +
cmp al 40h +
jz loc_45AFE3  +
cmp al 26h +
jz loc_45AFE3  +
cmp al 3Dh +
jz loc_45AFE3  +
cmp al 2Bh +
jz loc_45AFE3  +
cmp al 24h +
jz loc_45AFE3  +
cmp al 2Ch +
jz loc_45AFE3  +
cmp al 5Bh +
jz loc_45AFE3  +
cmp al 5Dh +
jz loc_45AFE3  +
movzx ebx al +
inc ecx  +
mov eax ebx +
mov [esp+1Ch] ecx +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
and ebx 8000000Fh +
jns loc_45AFA6  +
dec ebx  +
or ebx 0FFFFFFF0h +
inc ebx  +
mov edx [esp+24h] +
cmp eax 9 +
mov ecx 30h +
mov byte ptr [esi+edi] 25h +
cmovg ecx [esp+18h] +
add cl al +
cmp ebx 9 +
mov [esi+edi+1] cl +
mov eax 30h +
mov ecx 37h +
cmovg eax ecx +
mov ecx [esp+1Ch] +
add al bl +
mov [esi+edi+2] al +
add esi 3 +
add edx 3 +
jmp loc_45AFED  +
mov [esi+edi] al +
inc edx  +
inc esi  +
inc ecx  +
mov [esp+1Ch] ecx +
cmp byte ptr [ecx] 0 +
mov [esp+24h] edx +
jnz loc_45AEB0  +
cmp esi ebp +
jl loc_45B026  +
lea eax [esp+10h] +
push eax  +
push edi  +
call sub_45B040  +
add esp 8 +
test eax eax +
jnz loc_45B024  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov edi eax +
mov byte ptr [esi+edi] 0 +
mov eax edi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov eax [esi] +
cmp eax 100000h +
jle loc_45B05F  +
push offset aReachingArbitr  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
push edi  +
lea edi [eax+eax] +
lea eax [edi+1] +
push eax  +
push [esp+8+arg_0]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_45B08A  +
push offset aSavingUri  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
mov [esi] edi +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_45B0C4  +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push 2  +
push 1Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
push offset aMemoryAlloca_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2  +
push 1Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 40h +
retn   +
***
sub esp 8 +
push edi  +
mov edi [esp+10h] +
test edi edi +
jnz loc_45B103  +
xor eax eax +
pop edi  +
add esp 8 +
retn   +
***
cmp byte ptr [edi] 0 +
jnz loc_45B116  +
push edi  +
call sub_44E600  +
add esp 4 +
pop edi  +
add esp 8 +
retn   +
***
push ebx  +
push edi  +
call sub_44E660  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jg loc_45B12E  +
pop ebx  +
xor eax eax +
pop edi  +
add esp 8 +
retn   +
***
add ebx 14h +
push ebp  +
push ebx  +
mov [esp+10h] ebx +
mov [esp+1Ch] ebx +
call off_4EE2EC  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_45B160  +
push offset aEscapingUriVal  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
add esp 8 +
retn   +
***
push esi  +
xor esi esi +
cmp byte ptr [edi] 0 +
jz loc_45B270  +
mov eax ebx +
sub eax esi +
cmp eax 3 +
jg loc_45B199  +
lea eax [esp+1Ch] +
push eax  +
push ebp  +
call sub_45B040  +
add esp 8 +
test eax eax +
jz loc_45B252  +
mov ebp eax +
mov eax [esp+1Ch] +
mov [esp+10h] eax +
mov bl [edi] +
mov [esp+14h] bl +
cmp bl 40h +
jz loc_45B23D  +
cmp bl 61h +
jb loc_45B1B6  +
cmp bl 7Ah +
jbe loc_45B23D  +
cmp bl 41h +
jb loc_45B1C0  +
cmp bl 5Ah +
jbe loc_45B23D  +
cmp bl 30h +
jb loc_45B1CA  +
cmp bl 39h +
jbe loc_45B23D  +
cmp bl 2Dh +
jz loc_45B23D  +
cmp bl 5Fh +
jz loc_45B23D  +
cmp bl 2Eh +
jz loc_45B23D  +
cmp bl 21h +
jz loc_45B23D  +
cmp bl 7Eh +
jz loc_45B23D  +
cmp bl 2Ah +
jz loc_45B23D  +
cmp bl 27h +
jz loc_45B23D  +
cmp bl 28h +
jz loc_45B23D  +
cmp bl 29h +
jz loc_45B23D  +
push dword ptr [esp+14h]  +
push dword ptr [esp+24h]  +
call sub_44E580  +
add esp 8 +
test eax eax +
jnz loc_45B23D  +
mov al bl +
mov byte ptr [esi+ebp] 25h +
shr al 4 +
cmp al 9 +
ja loc_45B21C  +
add al 30h +
jmp loc_45B21E  +
add al 37h +
mov [esi+ebp+1] al +
and bl 0Fh +
add esi 2 +
cmp bl 9 +
ja loc_45B235  +
add bl 30h +
mov [esi+ebp] bl +
jmp loc_45B242  +
add bl 37h +
mov [esi+ebp] bl +
jmp loc_45B242  +
mov al [edi] +
mov [esi+ebp] al +
inc edi  +
inc esi  +
cmp byte ptr [edi] 0 +
jz loc_45B270  +
mov ebx [esp+10h] +
jmp loc_45B170  +
***
push offset aEscapingUriVal  +
call sub_45B090  +
push ebp  +
call off_4EE2F4  +
add esp 8 +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 8 +
retn   +
***
mov byte ptr [esi+ebp] 0 +
mov eax ebp +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 8 +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_45B28D  +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+10h] +
test edi edi +
jg loc_45B2AB  +
mov edi esi +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_45B2A0  +
sub edi ecx +
test edi edi +
jns loc_45B2B2  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+18h] +
test ebx ebx +
jnz loc_45B2E1  +
lea eax [edi+1] +
push eax  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_45B2E1  +
push offset aUnescapingUriV  +
call sub_45B090  +
add esp 4 +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov ecx ebx +
test edi edi +
jle loc_45B3D3  +
cmp edi 2 +
jle loc_45B3C4  +
cmp byte ptr [esi] 25h +
jnz loc_45B3C4  +
mov al [esi+1] +
lea edx [esi+1] +
cmp al 30h +
jl loc_45B310  +
cmp al 39h +
jle loc_45B322  +
cmp al 61h +
jl loc_45B318  +
cmp al 66h +
jle loc_45B322  +
sub al 41h +
cmp al 5 +
ja loc_45B3C4  +
mov al [esi+2] +
cmp al 30h +
jl loc_45B32D  +
cmp al 39h +
jle loc_45B33F  +
cmp al 61h +
jl loc_45B335  +
cmp al 66h +
jle loc_45B33F  +
sub al 41h +
cmp al 5 +
ja loc_45B3C4  +
mov esi edx +
mov al [esi] +
cmp al 30h +
jl loc_45B34F  +
cmp al 39h +
jg loc_45B34F  +
sub al 30h +
jmp loc_45B365  +
cmp al 61h +
jl loc_45B35B  +
cmp al 66h +
jg loc_45B35B  +
sub al 57h +
jmp loc_45B365  +
cmp al 41h +
jl loc_45B367  +
cmp al 46h +
jg loc_45B367  +
sub al 37h +
mov [ecx] al +
mov dl [esi+1] +
cmp dl 30h +
jl loc_45B388  +
cmp dl 39h +
jg loc_45B388  +
mov al [ecx] +
add esi 2 +
sub al 3 +
sub edi 3 +
shl al 4 +
add al dl +
mov [ecx] al +
inc ecx  +
jmp loc_45B3CB  +
cmp dl 61h +
jl loc_45B3A6  +
cmp dl 66h +
jg loc_45B3A6  +
mov al [ecx] +
add esi 2 +
shl al 4 +
sub edi 3 +
sub al 57h +
add al dl +
mov [ecx] al +
inc ecx  +
jmp loc_45B3CB  +
cmp dl 41h +
jl loc_45B3BB  +
cmp dl 46h +
jg loc_45B3BB  +
mov al [ecx] +
shl al 4 +
sub al 37h +
add al dl +
mov [ecx] al +
add esi 2 +
sub edi 3 +
inc ecx  +
jmp loc_45B3CB  +
mov al [esi] +
inc esi  +
mov [ecx] al +
inc ecx  +
dec edi  +
test edi edi +
jg loc_45B2F0  +
mov eax ebx +
mov byte ptr [ecx] 0 +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jnz loc_45B3E9  +
retn   +
mov ecx [esp+arg_0] +
push ebx  +
push esi  +
push edi  +
cmp ecx 10000h +
jnb loc_45B42F  +
mov esi [eax] +
test esi esi +
jz loc_45B429  +
mov ebx [eax+8] +
xor edi edi +
add esi 0FFFFFFFFh +
js loc_45B429  +
lea eax [esi+edi] +
cdq   +
sub eax edx +
sar eax 1 +
cmp cx [ebx+eax*4] +
jnb loc_45B41B  +
lea esi [eax-1] +
jmp loc_45B425  +
cmp cx [ebx+eax*4+2] +
jbe loc_45B465  +
lea edi [eax+1] +
cmp edi esi +
jle loc_45B408  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
mov esi [eax+4] +
test esi esi +
jz loc_45B429  +
mov ebx [eax+0Ch] +
xor edi edi +
add esi 0FFFFFFFFh +
js loc_45B429  +
lea eax [esi+edi] +
cdq   +
sub eax edx +
sar eax 1 +
cmp ecx [ebx+eax*8] +
jnb loc_45B452  +
lea esi [eax-1] +
jmp loc_45B45B  +
cmp ecx [ebx+eax*8+4] +
jbe loc_45B465  +
lea edi [eax+1] +
cmp edi esi +
jle loc_45B440  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_45B492  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_45B48F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_45B4E0  +
mov [esi+54h] edx +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 3  +
push edx  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
test esi esi +
jz loc_45B4E0  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_45B4E0  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jnz loc_45B4F9  +
retn   +
mov ecx [esp+arg_8] +
cmp ecx 80h +
jl loc_45B510  +
push ecx  +
push eax  +
call sub_45B520  +
add esp 8 +
retn   +
mov [eax] cl +
mov eax 1 +
retn   +
***
test esi esi +
jnz loc_45B52D  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
cmp ebx 80h +
jl loc_45B5CF  +
push edi  +
mov edi esi +
cmp ebx 800h +
jge loc_45B557  +
mov eax ebx +
sar eax 6 +
or al 0C0h +
mov [esi] al +
inc esi  +
xor ecx ecx +
jmp loc_45B584  +
cmp ebx 10000h +
jge loc_45B56D  +
mov eax ebx +
mov ecx 6 +
sar eax 0Ch +
or al 0E0h +
jmp loc_45B581  +
cmp ebx 110000h +
jge loc_45B59E  +
mov eax ebx +
mov ecx 0Ch +
sar eax 12h +
or al 0F0h +
mov [esi] al +
inc esi  +
mov edx ebx +
sar edx cl +
and dl 3Fh +
or dl 80h +
mov [esi] dl +
inc esi  +
sub ecx 6 +
jns loc_45B584  +
sub esi edi +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
push ebx  +
push offset aInternalErrorX  +
push 0  +
push ebx  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 9  +
push 1  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
mov [esi] bl +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
sub esp 0A0h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0A0h+var_4] eax +
push ebx  +
mov ebx [esp+0A4h+arg_4] +
push edi  +
mov edi [esp+0A8h+arg_0] +
test edi edi +
jz loc_45B61C  +
test ebx ebx +
jz loc_45B61C  +
mov edx [edi+24h] +
test edx edx +
jz loc_45B61C  +
cmp dword ptr [edi+0ACh] 0FFFFFFFFh +
jnz loc_45B635  +
pop edi  +
xor eax eax +
pop ebx  +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
mov ecx [edx+10h] +
mov al [ecx] +
cmp al 20h +
jb loc_45B668  +
cmp al 7Fh +
ja loc_45B668  +
mov dword ptr [ebx] 1 +
mov eax [edi+24h] +
pop edi  +
pop ebx  +
mov eax [eax+10h] +
movzx eax byte ptr [eax] +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
cmp dword ptr [edi+100h] 1 +
jnz loc_45B95B  +
mov ah [ecx] +
mov [esp+0A8h+var_9D] ah +
test ah ah +
jns loc_45B8C8  +
push esi  +
test ah 40h +
jz loc_45B829  +
cmp ah 0C0h +
jz loc_45B829  +
cmp byte ptr [ecx+1] 0 +
jnz loc_45B6B4  +
push 0FAh  +
push edx  +
call sub_45CA50  +
mov edx [edi+24h] +
add esp 8 +
mov ah [esp+0ACh+var_9D] +
mov ecx [edx+10h] +
mov al [ecx+1] +
and al 0C0h +
cmp al 80h +
jnz loc_45B829  +
mov al ah +
and al 0E0h +
cmp al 0E0h +
jnz loc_45B79B  +
cmp byte ptr [ecx+2] 0 +
jnz loc_45B6EB  +
push 0FAh  +
push edx  +
call sub_45CA50  +
mov edx [edi+24h] +
add esp 8 +
mov ah [esp+0ACh+var_9D] +
mov ecx [edx+10h] +
mov al [ecx+2] +
and al 0C0h +
cmp al 80h +
jnz loc_45B829  +
mov al ah +
and al 0F0h +
cmp al 0F0h +
jnz loc_45B76F  +
cmp byte ptr [ecx+3] 0 +
jnz loc_45B71E  +
push 0FAh  +
push edx  +
call sub_45CA50  +
mov eax [edi+24h] +
add esp 8 +
mov ecx [eax+10h] +
mov ah [esp+0ACh+var_9D] +
and ah 0F8h +
cmp ah 0F0h +
jnz loc_45B829  +
mov al [ecx+3] +
and al 0C0h +
cmp al 80h +
jnz loc_45B829  +
mov dword ptr [ebx] 4 +
movzx esi byte ptr [ecx] +
movzx eax byte ptr [ecx+1] +
and esi 7 +
shl esi 6 +
and eax 3Fh +
or esi eax +
movzx eax byte ptr [ecx+2] +
shl esi 6 +
and eax 3Fh +
or esi eax +
movzx eax byte ptr [ecx+3] +
shl esi 6 +
and eax 3Fh +
or esi eax +
cmp esi 10000h +
jmp loc_45B7B9  +
mov dword ptr [ebx] 3 +
movzx esi byte ptr [ecx] +
movzx eax byte ptr [ecx+1] +
and esi 0Fh +
shl esi 6 +
and eax 3Fh +
or esi eax +
movzx eax byte ptr [ecx+2] +
shl esi 6 +
and eax 3Fh +
or esi eax +
cmp esi 800h +
jmp loc_45B7B9  +
mov dword ptr [ebx] 2 +
movzx esi byte ptr [ecx] +
movzx eax byte ptr [ecx+1] +
and esi 1Fh +
shl esi 6 +
and eax 3Fh +
or esi eax +
cmp esi 80h +
jb loc_45B829  +
cmp esi 100h +
jnb loc_45B7D9  +
cmp esi 9 +
jb loc_45B7CD  +
cmp esi 0Ah +
jbe loc_45B80F  +
cmp esi 0Dh +
jz loc_45B80F  +
cmp esi 20h +
jb loc_45B7FE  +
jmp loc_45B80F  +
cmp esi 0D7FFh +
jbe loc_45B80F  +
cmp esi 0E000h +
jb loc_45B7F1  +
cmp esi 0FFFDh +
jbe loc_45B80F  +
lea eax [esi-10000h] +
cmp eax 0FFFFFh +
jbe loc_45B80F  +
push esi  +
push offset aChar0xXOutOfAl  +
push 9  +
push edi  +
call sub_45B970  +
add esp 10h +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
mov eax [edi+24h] +
mov ecx [eax+10h] +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 4 +
jge loc_45B859  +
pop esi  +
pop edi  +
mov dword ptr [ebx] 0 +
xor eax eax +
pop ebx  +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
movzx eax byte ptr [ecx+3] +
push eax  +
movzx eax byte ptr [ecx+2] +
push eax  +
movzx eax byte ptr [ecx+1] +
push eax  +
movzx eax byte ptr [ecx] +
push eax  +
push offset aBytes0x02x0x02  +
lea eax [esp+0C0h+var_9C] +
push 95h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0CCh+var_9C] +
push eax  +
push offset aInputIsNotProp  +
push 9  +
push edi  +
call sub_45B470  +
mov dword ptr [edi+100h] 0Ah +
add esp 30h +
mov dword ptr [ebx] 1 +
mov eax [edi+24h] +
pop esi  +
pop edi  +
mov eax [eax+10h] +
pop ebx  +
movzx eax byte ptr [eax] +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
mov dword ptr [ebx] 1 +
mov ecx [edi+24h] +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0 +
jnz loc_45B8E7  +
push 0FAh  +
push ecx  +
call sub_45CA50  +
add esp 8 +
mov eax [edi+24h] +
mov ecx [eax+10h] +
cmp byte ptr [ecx] 0 +
jnz loc_45B909  +
cmp [eax+14h] ecx +
jbe loc_45B909  +
push 0  +
push offset aChar0x0OutOfAl  +
push 9  +
push edi  +
call sub_45B970  +
add esp 10h +
mov eax [edi+24h] +
mov ecx [eax+10h] +
mov dl [ecx] +
cmp dl 0Dh +
jnz loc_45B941  +
cmp byte ptr [ecx+1] 0Ah +
jnz loc_45B925  +
inc dword ptr [edi+0C8h]  +
inc dword ptr [eax+10h]  +
pop edi  +
mov eax 0Ah +
pop ebx  +
mov ecx [esp+0A0h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0A0h +
retn   +
mov ecx [esp+0A8h+var_4] +
pop edi  +
pop ebx  +
xor ecx esp +
movzx eax dl +
call sub_488C1C  +
add esp 0A0h +
retn   +
mov dword ptr [ebx] 1 +
jmp loc_45B909  +
***
mov ecx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_45B992  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_45B98F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_45B9DC  +
mov [esi+54h] ecx +
mov eax [esp+4+arg_C] +
push eax  +
push [esp+8+arg_8]  +
push 0  +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push ecx  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
test esi esi +
jz loc_45B9DC  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_45B9DC  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
test esi esi +
jz loc_45BA02  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_45B9FB  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_45BA4D  +
mov dword ptr [esi+54h] 1 +
mov eax [esp+arg_8] +
push eax  +
push [esp+4+arg_4]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push 1  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
test esi esi +
jz loc_45BA4D  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
jnz loc_45BA4D  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_45BA85  +
cmp dword ptr [eax+0D4h] 0 +
jz loc_45BA6A  +
cmp dword ptr [eax+0ACh] 0FFFFFFFFh +
jz locret_45BAE2  +
mov dword ptr [eax+54h] 2 +
mov dword ptr [eax+0ACh] 0FFFFFFFFh +
mov dword ptr [eax+0D4h] 1 +
mov ecx [esp+arg_4] +
test ecx ecx +
jz loc_45BAB8  +
push ecx  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push ecx  +
push 0  +
push 0  +
push 3  +
push 2  +
push 1  +
push 0  +
push eax  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
push offset aMemoryAlloca_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 2  +
push 1  +
push 0  +
push eax  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 40h +
retn   +
***
test esi esi +
jz loc_45BB6A  +
mov eax [esi+4] +
test eax eax +
jz loc_45BB0A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45BB1B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+2Ch] +
test eax eax +
jz loc_45BB2C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+30h] +
test eax eax +
jz loc_45BB3D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_45BB51  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_45BB51  +
push ecx  +
call eax  +
add esp 4 +
mov eax [esi] +
test eax eax +
jz loc_45BB60  +
push eax  +
call sub_45F7D0  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_45BDE5  +
push edi  +
call sub_426860  +
add esp 4 +
test eax eax +
jz loc_45BBA3  +
mov eax [edi+0F4h] +
test eax eax +
jz loc_45BBB7  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+0C4h] +
test eax eax +
jz loc_45BBCB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+40h] +
test eax eax +
jz loc_45BBDC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+1CCh] +
test eax eax +
jz loc_45BBF0  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+30h] +
test eax eax +
jz loc_45BC01  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+14h] +
test eax eax +
jz loc_45BC12  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+18h] +
test eax eax +
jz loc_45BC23  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+0E0h] +
test eax eax +
jz loc_45BC37  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+0E4h] +
test eax eax +
jz loc_45BC4B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [edi] 0 +
push esi  +
jz loc_45BC66  +
mov esi [edi] +
call sub_458340  +
cmp esi eax +
jz loc_45BC66  +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+0B4h] +
test eax eax +
jz loc_45BC7A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+84h] +
test eax eax +
jz loc_45BC8E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+12Ch] +
test eax eax +
jz loc_45BCA2  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+128h] +
test eax eax +
jz loc_45BCB5  +
push eax  +
call sub_44F150  +
add esp 4 +
mov eax [edi+150h] +
test eax eax +
jz loc_45BCC9  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+158h] +
test eax eax +
jz loc_45BCDD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+154h] +
test eax eax +
jz loc_45BCF1  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+15Ch] +
test eax eax +
jz loc_45BD0A  +
push off_4EE2F4  +
push eax  +
call loc_4501B0  +
add esp 8 +
mov eax [edi+160h] +
test eax eax +
jz loc_45BD1F  +
push 0  +
push eax  +
call loc_4501B0  +
add esp 8 +
mov eax [edi+174h] +
test eax eax +
jz loc_45BD43  +
mov esi [eax+18h] +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax esi +
test esi esi +
jnz loc_45BD30  +
mov eax [edi+17Ch] +
test eax eax +
jz loc_45BD63  +
mov esi [eax+18h] +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax esi +
test esi esi +
jnz loc_45BD50  +
mov eax [edi+188h] +
pop esi  +
test eax eax +
jz loc_45BD78  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+190h] +
test eax eax +
jz loc_45BD8C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+198h] +
test eax eax +
jz loc_45BDA0  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+19Ch] +
test eax eax +
jz loc_45BDB4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+1A0h] +
test eax eax +
jz loc_45BDC8  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+11Ch] +
test eax eax +
jz loc_45BDDB  +
push eax  +
call sub_465F80  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_45BE0C  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
retn   +
***
test esi esi +
jnz loc_45BE3E  +
push esi  +
push offset aGotNullParserC  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push 3  +
push 1  +
push 1  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_43A650  +
add esp 44h +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
call sub_463330  +
cmp dword ptr [esi+128h] 0 +
jnz loc_45BE57  +
call sub_44F090  +
mov [esi+128h] eax +
mov eax [esi+128h] +
test eax eax +
jnz loc_45BE75  +
push offset aCannotInitiali  +
push 0  +
call sub_45BA50  +
add esp 8 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push 989680h  +
push eax  +
call sub_44FB50  +
add esp 8 +
cmp dword ptr [esi] 0 +
jnz loc_45BE9C  +
push 80h  +
call off_4EE2E8  +
add esp 4 +
mov [esi] eax +
test eax eax +
jz loc_45BE61  +
push 2  +
push dword ptr [esi]  +
call sub_465C10  +
add esp 8 +
mov dword ptr [esi+130h] 0 +
cmp dword ptr [esi+30h] 0 +
mov dword ptr [esi+12Ch] 0 +
jnz loc_45BF03  +
push 14h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+30h] eax +
mov dword ptr [esi+2Ch] 5 +
test eax eax +
jnz loc_45BF03  +
push offset aCannotInitiali  +
push eax  +
call sub_45BA50  +
add esp 8 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
or eax 0FFFFFFFFh +
mov dword ptr [esi+24h] 0 +
pop esi  +
retn   +
push esi  +
call sub_426860  +
add esp 4 +
test eax eax +
jz loc_45BF23  +
push eax  +
call sub_45BAF0  +
push esi  +
call sub_426860  +
add esp 8 +
test eax eax +
jnz loc_45BF10  +
cmp dword ptr [esi+40h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov dword ptr [esi+58h] 0 +
mov dword ptr [esi+5Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+60h] 0 +
mov dword ptr [esi+0ACh] 0 +
mov dword ptr [esi+0B0h] 0 +
mov dword ptr [esi+0B4h] 0 +
jnz loc_45BFC4  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+40h] eax +
mov dword ptr [esi+3Ch] 0Ah +
test eax eax +
jnz loc_45BFC4  +
push offset aCannotInitiali  +
push eax  +
call sub_45BA50  +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+34h] 0 +
jmp loc_45BEE6  +
cmp dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+34h] 0 +
jnz loc_45C03D  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+0C4h] eax +
mov dword ptr [esi+0C0h] 0Ah +
test eax eax +
jnz loc_45C03D  +
push offset aCannotInitiali  +
push eax  +
call sub_45BA50  +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+0BCh] 0 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0B8h] 0 +
jmp loc_45BEE6  +
cmp dword ptr [esi+0F4h] 0 +
mov dword ptr [esi+0BCh] 0 +
mov dword ptr [esi+0B8h] 0 +
jnz loc_45C075  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+0F4h] eax +
mov dword ptr [esi+0F0h] 0Ah +
mov eax [esi+0F4h] +
test eax eax +
jnz loc_45C0E0  +
push offset aCannotInitiali  +
push eax  +
call sub_45BA50  +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+0BCh] 0 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0B8h] 0 +
mov dword ptr [esi+0ECh] 0 +
mov dword ptr [esi+0F0h] 0 +
mov dword ptr [esi+0E8h] 0 +
jmp loc_45BEE6  +
mov dword ptr [esi+0ECh] 1 +
mov dword ptr [esi+0F0h] 0Ah +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esi+0F4h] +
mov [esi+0E8h] eax +
mov [esi+4] esi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
mov dword ptr [esi+164h] 1 +
mov dword ptr [esi+64h] 1 +
call sub_4584A0  +
mov eax [eax] +
mov [esi+114h] eax +
test eax eax +
jz loc_45C140  +
or dword ptr [esi+168h] 4 +
call sub_4583A0  +
mov eax [eax] +
mov [esi+68h] eax +
call sub_458500  +
mov eax [eax] +
mov [esi+10Ch] eax +
test eax eax +
jz loc_45C165  +
or dword ptr [esi+168h] 80h +
call sub_458480  +
mov eax [eax] +
mov [esi+118h] eax +
call sub_458440  +
mov eax [eax] +
mov [esi+0D0h] eax +
test eax eax +
jnz loc_45C196  +
mov eax [esi] +
mov dword ptr [eax+48h] offset nullsub_1 +
or dword ptr [esi+168h] 100h +
cmp dword ptr [esi+68h] 0 +
mov dword ptr [esi+88h] 0ABCD1234h +
mov [esi+6Ch] esi +
mov dword ptr [esi+70h] offset loc_43B000 +
mov dword ptr [esi+74h] offset loc_43B170 +
jz loc_45C1D8  +
call sub_458400  +
xor edx edx +
mov ecx offset loc_43B170 +
cmp [eax] edx +
mov [esi+80h] edx +
cmovz ecx edx +
or dword ptr [esi+168h] 10h +
mov [esi+74h] ecx +
call sub_4585A0  +
mov eax [eax] +
mov [esi+10h] eax +
test eax eax +
jz loc_45C1ED  +
or dword ptr [esi+168h] 2 +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+0C8h] 0 +
mov dword ptr [esi+0CCh] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+0F8h] 0 +
mov dword ptr [esi+100h] 1 +
mov dword ptr [esi+11Ch] 0 +
mov dword ptr [esi+1B8h] 0 +
mov dword ptr [esi+1BCh] 0 +
mov dword ptr [esi+1D4h] 0 +
mov dword ptr [esi+1D0h] 1 +
add esi 48h +
push esi  +
call sub_45BDF0  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
***
test edi edi +
jnz loc_45C28F  +
push edi  +
push offset aXmlnewentityin  +
push [esp+8+arg_0]  +
call sub_45B9E0  +
add esp 0Ch +
xor eax eax +
pop edi  +
retn   +
push esi  +
call sub_4584C0  +
cmp dword ptr [eax] 0 +
jz loc_45C2B7  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+8]  +
push offset aNewInputFromEn  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
cmp dword ptr [edi+28h] 0 +
jnz loc_45C34A  +
mov eax [edi+30h] +
dec eax  +
cmp eax 5 +
ja loc_45C345  +
jmp ds:off_45C3A4[eax*4]  +
push dword ptr [edi+8]  +
push offset aCannotParseEnt  +
push [esp+0Ch+arg_0]  +
call sub_45B9E0  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push [esp+4+arg_0]  +
push dword ptr [edi+34h]  +
push dword ptr [edi+40h]  +
call sub_45FCE0  +
add esp 0Ch +
pop esi  +
pop edi  +
retn   +
push dword ptr [edi+8]  +
push offset aInternalEntity  +
push [esp+0Ch+arg_0]  +
call sub_45B9E0  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push dword ptr [edi+8]  +
push offset aInternalParame  +
push [esp+0Ch+arg_0]  +
call sub_45B9E0  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push dword ptr [edi+8]  +
push offset aPredefinedEn_0  +
push [esp+0Ch+arg_0]  +
call sub_45B9E0  +
add esp 0Ch +
pop esi  +
xor eax eax +
pop edi  +
retn   +
push [esp+4+arg_0]  +
call sub_45C4E0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_45C345  +
mov eax [edi+40h] +
test eax eax +
jz loc_45C36F  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
mov eax [edi+28h] +
mov [esi+0Ch] eax +
cmp dword ptr [edi+2Ch] 0 +
jnz loc_45C389  +
push dword ptr [edi+28h]  +
call sub_44E660  +
add esp 4 +
mov [edi+2Ch] eax +
mov eax [edi+28h] +
mov [esi+10h] eax +
mov ecx [edi+2Ch] +
mov [esi+18h] ecx +
mov eax [edi+28h] +
add eax ecx +
mov [esi+14h] eax +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
call sub_4584C0  +
mov ebx [esp+arg_4] +
cmp dword ptr [eax] 0 +
jz loc_45C3EB  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push ebx  +
push offset aNewInputFromFi  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
mov esi [esp+arg_0] +
test esi esi +
jnz loc_45C3F8  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
push 0  +
push ebx  +
call sub_4605F0  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_45C438  +
test ebx ebx +
jnz loc_45C423  +
push ebx  +
push offset aFailedToLoad_0  +
push esi  +
call sub_45EF50  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
push ebx  +
push offset aFailedToLoadEx  +
push esi  +
call sub_45EF50  +
add esp 0Ch +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
call sub_45C4E0  +
add esp 4 +
test eax eax +
jz loc_45C432  +
push eax  +
push esi  +
mov [eax] edi +
call sub_45F280  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_45C432  +
mov eax [edi+4] +
test eax eax +
jnz loc_45C461  +
push ebx  +
jmp loc_45C462  +
push eax  +
call sub_44E600  +
add esp 4 +
mov ebx eax +
push ebp  +
push ebx  +
call loc_4604E0  +
mov ebp eax +
add esp 4 +
mov eax [edi+4] +
test eax eax +
jz loc_45C489  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call sub_458BE0  +
add esp 4 +
mov [edi+4] eax +
test ebx ebx +
jz loc_45C4A3  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi] +
mov [edi+8] ebp +
push edi  +
push dword ptr [eax+10h]  +
call sub_45DDF0  +
add esp 8 +
cmp dword ptr [esi+0B4h] 0 +
jnz loc_45C4D0  +
test ebp ebp +
jz loc_45C4D0  +
push ebp  +
call sub_44E600  +
add esp 4 +
mov [esi+0B4h] eax +
pop ebp  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45C507  +
push offset aCouldnTAllocat  +
push [esp+4+arg_0]  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esp+0Ch+arg_0] +
add esp 0Ch +
mov dword ptr [esi+1Ch] 1 +
mov dword ptr [esi+20h] 1 +
mov dword ptr [esi+34h] 0FFFFFFFFh +
test ecx ecx +
jz loc_45C540  +
mov eax [ecx+1D0h] +
mov [esi+38h] eax +
inc dword ptr [ecx+1D0h]  +
mov eax esi +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45C577  +
push offset aCannotAllocate  +
push eax  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 1D8h  +
push 0  +
push esi  +
call sub_48CF40  +
push esi  +
call sub_45BE10  +
add esp 10h +
test eax eax +
jns loc_45C59E  +
push esi  +
call loc_45BB70  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
mov eax esi +
pop esi  +
retn   +
***
sub esp 9Ch +
test esi esi +
jz loc_45C9CB  +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jz loc_45C9CA  +
mov eax [ebx] +
push ebp  +
push edi  +
push eax  +
lea edi [esi+48h] +
push edi  +
call sub_45C9D0  +
mov edx [esi+4Ch] +
mov ebp eax +
add esp 8 +
cmp ebp edx +
jnb loc_45C91E  +
mov ecx [esi+50h] +
test ecx ecx +
jz loc_45C91E  +
lea eax ds:0[ebp*4] +
add eax ebp +
lea ecx [ecx+eax*4] +
mov eax [ebx] +
cmp [ecx] eax +
jnz loc_45C91E  +
movups xmm0 oword ptr [ebx] +
pop edi  +
pop ebp  +
movups oword ptr [ecx] xmm0 +
mov eax [ebx+10h] +
pop ebx  +
mov [ecx+10h] eax +
pop esi  +
retn   +
mov ecx [edi] +
lea eax [edx+1] +
cmp eax ecx +
ja loc_45C92D  +
cmp dword ptr [esi+50h] 0 +
jnz loc_45C97C  +
test ecx ecx +
jnz loc_45C937  +
mov dword ptr [edi] 2 +
mov eax [edi] +
mov ecx [esi+50h] +
lea eax [eax+eax*4] +
shl eax 3 +
push eax  +
test ecx ecx +
jnz loc_45C952  +
call off_4EE2E8  +
add esp 4 +
jmp loc_45C95C  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_45C973  +
push offset aFailedToAlloca  +
push esi  +
call sub_45BA50  +
add esp 8 +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
mov [esi+50h] eax +
mov eax [edi] +
add eax eax +
mov [edi] eax +
mov edx [esi+4Ch] +
cmp ebp edx +
jz loc_45C9AA  +
cmp edx ebp +
jbe loc_45C9AA  +
lea edi [edx+edx*4] +
shl edi 2 +
sub edx ebp +
nop   +
mov ecx [esi+50h] +
add ecx edi +
add edi 0FFFFFFECh +
movups xmm0 oword ptr [ecx-14h] +
movups oword ptr [ecx] xmm0 +
mov eax [ecx-4] +
mov [ecx+10h] eax +
sub edx 1 +
jnz loc_45C990  +
mov eax [esi+50h] +
lea ecx ds:0[ebp*4] +
movups xmm0 oword ptr [ebx] +
add ecx ebp +
pop edi  +
lea ecx [eax+ecx*4] +
movups oword ptr [ecx] xmm0 +
mov eax [ebx+10h] +
mov [ecx+10h] eax +
inc dword ptr [esi+4Ch]  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
push ebx  +
xor ebx ebx +
push ebp  +
test ecx ecx +
jz loc_45CA3B  +
mov ebp [esp+8+arg_4] +
test ebp ebp +
jz loc_45CA3B  +
push esi  +
push edi  +
mov edi [ecx+4] +
lea esi [ebx+1] +
xor eax eax +
cmp edi esi +
jb loc_45CA36  +
test ebx ebx +
jnz loc_45CA25  +
mov ecx [ecx+8] +
mov eax edi +
sub eax esi +
shr eax 1 +
add eax esi +
lea edx [eax+eax*4] +
mov ecx [ecx+edx*4-14h] +
cmp ebp ecx +
jnz loc_45CA13  +
mov ebx 1 +
jmp loc_45CA1D  +
jnb loc_45CA1A  +
lea edi [eax-1] +
jmp loc_45CA1D  +
lea esi [eax+1] +
mov ecx [esp+10h+arg_0] +
cmp esi edi +
jbe loc_45C9F2  +
test eax eax +
jz loc_45CA36  +
mov ecx [ecx+8] +
lea edx [eax+eax*4] +
cmp [ecx+edx*4-14h] ebp +
jb loc_45CA36  +
dec eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
test esi esi +
jz loc_45CA66  +
cmp [esp+arg_4] 0 +
jl loc_45CA66  +
mov eax [esi] +
test eax eax +
jnz loc_45CA6B  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_45CA66  +
push edi  +
mov edi [esi+10h] +
test edi edi +
jz loc_45CA81  +
mov eax [eax+10h] +
test eax eax +
jnz loc_45CA87  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push eax  +
sub edi ecx +
call sub_45E180  +
lea ecx [edi+0FAh] +
add esp 4 +
cmp eax ecx +
ja loc_45CAE6  +
mov eax [esi] +
cmp dword ptr [eax+4] 0 +
jz loc_45CAE6  +
push [esp+4+arg_4]  +
push eax  +
call sub_460680  +
mov ecx [esi] +
mov edi eax +
push dword ptr [ecx+10h]  +
call sub_45D810  +
mov edx [esi+0Ch] +
add esp 0Ch +
cmp edx eax +
jz loc_45CAD1  +
mov ecx [esi+10h] +
sub ecx edx +
mov [esi+0Ch] eax +
add eax ecx +
mov [esi+10h] eax +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45DA10  +
add esp 4 +
mov [esi+14h] eax +
mov eax edi +
pop edi  +
pop esi  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_45CBB8  +
mov eax [esi] +
test eax eax +
jz loc_45CBB8  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_45CBB8  +
cmp dword ptr [esi+10h] 0 +
jz loc_45CBB8  +
mov eax [eax+10h] +
test eax eax +
jz loc_45CBB8  +
push eax  +
call sub_45D810  +
mov ecx [esi+10h] +
add esp 4 +
sub ecx eax +
cmp ecx 0FAh +
jbe loc_45CB67  +
lea eax [ecx-50h] +
push eax  +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45E0A0  +
add esp 8 +
test eax eax +
jz loc_45CB57  +
sub [esi+10h] eax +
add [esi+24h] eax +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45DA10  +
add esp 4 +
mov [esi+14h] eax +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45E180  +
add esp 4 +
cmp eax 0FAh +
ja loc_45CBB8  +
push 1F4h  +
push dword ptr [esi]  +
call sub_460810  +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45D810  +
mov edx [esi+0Ch] +
add esp 0Ch +
cmp edx eax +
jz loc_45CBA8  +
mov ecx [esi+10h] +
sub ecx edx +
mov [esi+0Ch] eax +
add eax ecx +
mov [esi+10h] eax +
mov eax [esi] +
push dword ptr [eax+10h]  +
call sub_45DA10  +
add esp 4 +
mov [esi+14h] eax +
pop esi  +
retn   +
***
sub esp 9Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+9Ch+var_4] eax +
push ebx  +
mov ebx [esp+0A0h+arg_0] +
push esi  +
mov esi [esp+0A4h+arg_8] +
push edi  +
test esi esi +
jz loc_45CDBC  +
mov edi [esp+0A8h+arg_4] +
test edi edi +
jz loc_45CDBC  +
test ebx ebx +
jz loc_45CC0D  +
cmp dword ptr [ebx+100h] 1 +
jnz loc_45CD95  +
mov cl [edi] +
test cl cl +
jns loc_45CD95  +
mov al [edi+1] +
and al 0C0h +
cmp al 80h +
jnz loc_45CD3F  +
mov al cl +
and al 0E0h +
cmp al 0E0h +
jnz loc_45CCA1  +
mov al [edi+2] +
and al 0C0h +
cmp al 80h +
jnz loc_45CD3F  +
mov al cl +
and al 0F0h +
cmp al 0F0h +
jnz loc_45CC83  +
and cl 0F8h +
cmp cl al +
jnz loc_45CD3F  +
mov al [edi+3] +
and al 0C0h +
cmp al 80h +
jnz loc_45CD3F  +
mov dword ptr [esi] 4 +
movzx esi byte ptr [edi] +
movzx eax byte ptr [edi+1] +
and esi 7 +
and eax 3Fh +
shl esi 6 +
or esi eax +
movzx eax byte ptr [edi+2] +
and eax 3Fh +
shl esi 6 +
or esi eax +
movzx eax byte ptr [edi+3] +
jmp loc_45CCB1  +
mov dword ptr [esi] 3 +
movzx esi byte ptr [edi] +
movzx eax byte ptr [edi+1] +
and esi 0Fh +
and eax 3Fh +
shl esi 6 +
or esi eax +
movzx eax byte ptr [edi+2] +
jmp loc_45CCB1  +
mov dword ptr [esi] 2 +
movzx esi byte ptr [edi] +
movzx eax byte ptr [edi+1] +
and esi 1Fh +
and eax 3Fh +
shl esi 6 +
or esi eax +
cmp esi 100h +
jnb loc_45CCEF  +
cmp esi 9 +
jb loc_45CCCB  +
cmp esi 0Ah +
jbe loc_45CD25  +
cmp esi 0Dh +
jz loc_45CD25  +
cmp esi 20h +
jb loc_45CD14  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
cmp esi 0D7FFh +
jbe loc_45CD25  +
cmp esi 0E000h +
jb loc_45CD07  +
cmp esi 0FFFDh +
jbe loc_45CD25  +
lea eax [esi-10000h] +
cmp eax 0FFFFFh +
jbe loc_45CD25  +
push esi  +
push offset aChar0xXOutOfAl  +
push 9  +
push ebx  +
call sub_45B970  +
add esp 10h +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
test ebx ebx +
jz loc_45CDB6  +
mov eax [ebx+24h] +
test eax eax +
jz loc_45CDB6  +
mov ecx [eax+10h] +
mov eax [eax+14h] +
sub eax ecx +
cmp eax 4 +
jl loc_45CDB6  +
movzx eax byte ptr [ecx+3] +
push eax  +
movzx eax byte ptr [ecx+2] +
push eax  +
movzx eax byte ptr [ecx+1] +
push eax  +
movzx eax byte ptr [ecx] +
push eax  +
push offset aBytes0x02x0x02  +
lea eax [esp+0BCh+var_9C] +
push 95h  +
push eax  +
call sub_4213C0  +
push 0  +
lea eax [esp+0C8h+var_9C] +
push eax  +
push offset aInputIsNotProp  +
push 9  +
push ebx  +
call sub_45B470  +
add esp 30h +
mov dword ptr [esi] 1 +
movzx eax byte ptr [edi] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [esp+9Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
mov dword ptr [esi] 0 +
mov ecx [esp+0A8h+var_4] +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 9Ch +
retn   +
***
push edi  +
or edi 0FFFFFFFFh +
test esi esi +
jnz loc_45CDF2  +
or eax edi +
pop edi  +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+8+arg_4] +
lea eax [ebx+1] +
cmp eax 17h +
ja loc_45CE95  +
movzx eax ds:byte_45CFC0[eax] +
jmp ds:off_45CFA4[eax*4]  +
push 0  +
push 0  +
push offset aEncodingUnknow  +
push 1Fh  +
push esi  +
call sub_45B470  +
add esp 14h +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov ecx [esi+24h] +
mov dword ptr [esi+100h] 1 +
test ecx ecx +
jz loc_45CE57  +
mov eax [ecx+10h] +
cmp byte ptr [eax] 0EFh +
jnz loc_45CE57  +
cmp byte ptr [eax+1] 0BBh +
jnz loc_45CE57  +
cmp byte ptr [eax+2] 0BFh +
jnz loc_45CE57  +
add eax 3 +
mov [ecx+10h] eax +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_45CE82  +
mov eax [ecx+10h] +
test eax eax +
jz loc_45CE82  +
cmp byte ptr [eax] 0EFh +
jnz loc_45CE82  +
cmp byte ptr [eax+1] 0BBh +
jnz loc_45CE82  +
cmp byte ptr [eax+2] 0BFh +
jnz loc_45CE82  +
add eax 3 +
mov [ecx+10h] eax +
mov edi 5Ah +
jmp loc_45CE95  +
mov edi 0B4h +
jmp loc_45CE95  +
mov edi 2Dh +
push ebx  +
call sub_462180  +
add esp 4 +
test eax eax +
jnz loc_45CF68  +
lea eax [ebx-4] +
cmp eax 12h +
ja loc_45CF61  +
movzx eax ds:byte_45D004[eax] +
jmp ds:off_45CFD8[eax*4]  +
pop ebx  +
pop edi  +
mov dword ptr [esi+100h] 1 +
xor eax eax +
pop esi  +
retn   +
push 0  +
push offset aUsc4LittleEndi  +
jmp loc_45CF51  +
push 0  +
push offset aUsc4BigEndian  +
jmp loc_45CF51  +
push 0  +
push offset aEbcdic  +
jmp loc_45CF51  +
push 0  +
push offset aUcs42143  +
jmp loc_45CF51  +
push 0  +
push offset aUcs43412  +
jmp loc_45CF51  +
push 0  +
push offset aUcs2  +
jmp loc_45CF51  +
cmp dword ptr [esi+28h] 1 +
jnz loc_45CF2C  +
cmp dword ptr [esi+18h] 0 +
jnz loc_45CF2C  +
mov eax [esi+24h] +
test eax eax +
jz loc_45CF2C  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_45CF2C  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov [esi+100h] ebx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push 0  +
push offset aIso2022Jp  +
jmp loc_45CF51  +
push 0  +
push offset aShift_jis  +
jmp loc_45CF51  +
push 0  +
push offset aEucJp  +
push offset aEncodingNotSup  +
push 20h  +
push esi  +
call sub_45B470  +
add esp 14h +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
push eax  +
push esi  +
mov dword ptr [esi+100h] 1 +
call sub_45D2D0  +
mov edi eax +
add esp 0Ch +
test edi edi +
js loc_45CF8C  +
cmp dword ptr [esi+54h] 1773h +
jnz loc_45CF9C  +
push esi  +
call sub_439DB0  +
add esp 4 +
mov dword ptr [esi+54h] 1773h +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_45D040  +
add esp 10h +
retn   +
***
push esi  +
mov esi [esp+10h] +
test esi esi +
jnz loc_45D04E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+10h] +
test edi edi +
jz loc_45D270  +
mov eax [edi] +
test eax eax +
jz loc_45D253  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_45D083  +
cmp ecx esi +
jz loc_45D07E  +
push ecx  +
call sub_461820  +
mov eax [edi] +
add esp 4 +
mov [eax+0Ch] esi +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov [eax+0Ch] esi +
mov eax [edi] +
push ebx  +
push dword ptr [eax+10h]  +
call sub_45DCD0  +
add esp 4 +
test eax eax +
jnz loc_45D24D  +
mov eax [esi] +
test eax eax +
jz loc_45D1BB  +
mov edx offset aUtf16le +
mov ecx eax +
mov bl [ecx] +
cmp bl [edx] +
jnz loc_45D0D0  +
test bl bl +
jz loc_45D0CC  +
mov bl [ecx+1] +
cmp bl [edx+1] +
jnz loc_45D0D0  +
add ecx 2 +
add edx 2 +
test bl bl +
jnz loc_45D0B0  +
xor ecx ecx +
jmp loc_45D0D5  +
sbb ecx ecx +
or ecx 1 +
test ecx ecx +
jz loc_45D109  +
mov ecx offset aUtf16 +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_45D100  +
test dl dl +
jz loc_45D0FC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_45D100  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_45D0E0  +
xor eax eax +
jmp loc_45D105  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_45D11D  +
mov eax [edi+10h] +
cmp byte ptr [eax] 0FFh +
jnz loc_45D11D  +
cmp byte ptr [eax+1] 0FEh +
jnz loc_45D11D  +
add eax 2 +
mov [edi+10h] eax +
mov eax [esi] +
test eax eax +
jz loc_45D1BB  +
mov ecx offset aUtf16be +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_45D150  +
test dl dl +
jz loc_45D14C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_45D150  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_45D130  +
xor eax eax +
jmp loc_45D155  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_45D16D  +
mov eax [edi+10h] +
cmp byte ptr [eax] 0FEh +
jnz loc_45D16D  +
cmp byte ptr [eax+1] 0FFh +
jnz loc_45D16D  +
add eax 2 +
mov [edi+10h] eax +
mov eax [esi] +
test eax eax +
jz loc_45D1BB  +
mov ecx offset aUtf8 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_45D198  +
test dl dl +
jz loc_45D194  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_45D198  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_45D178  +
xor eax eax +
jmp loc_45D19D  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_45D1BB  +
mov eax [edi+10h] +
cmp byte ptr [eax] 0EFh +
jnz loc_45D1BB  +
cmp byte ptr [eax+1] 0BBh +
jnz loc_45D1BB  +
cmp byte ptr [eax+2] 0BFh +
jnz loc_45D1BB  +
add eax 3 +
mov [edi+10h] eax +
mov esi [edi+10h] +
mov eax [edi] +
sub esi [edi+0Ch] +
push esi  +
push dword ptr [eax+10h]  +
call sub_45E0A0  +
mov ecx [edi] +
mov eax [ecx+10h] +
mov [ecx+14h] eax +
call sub_45D830  +
mov ecx [edi] +
mov [ecx+10h] eax +
mov eax [edi] +
mov [eax+20h] esi +
mov eax [edi] +
push dword ptr [eax+14h]  +
call sub_45E180  +
mov esi [esp+1Ch] +
add esp 0Ch +
mov ebx eax +
cmp dword ptr [esi+20h] 0 +
jz loc_45D207  +
push 1  +
push dword ptr [edi]  +
call sub_461A10  +
jmp loc_45D212  +
push dword ptr [esp+1Ch]  +
push dword ptr [edi]  +
call sub_461860  +
add esp 8 +
test eax eax +
jns loc_45D230  +
push 0  +
push offset aSwitchingEncod  +
push esi  +
call sub_45B9E0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov esi [edi] +
push dword ptr [esi+14h]  +
call sub_45E180  +
sub ebx eax +
add [esi+20h] ebx +
mov eax [edi] +
push edi  +
push dword ptr [eax+10h]  +
call sub_45DDF0  +
add esp 0Ch +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
cmp dword ptr [edi+18h] 0 +
jnz loc_45D07E  +
push 0  +
push offset aSwitchingEnc_0  +
push dword ptr [esp+14h]  +
call sub_45B9E0  +
add esp 0Ch +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jz loc_45D2C2  +
push esi  +
mov esi [esp+4+arg_0] +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_45D2AD  +
push 0FFFFFFFFh  +
push eax  +
push ecx  +
push esi  +
call loc_45D040  +
add esp 10h +
mov dword ptr [esi+100h] 1 +
pop esi  +
retn   +
push 0  +
push offset aXmlswitchtoenc  +
push esi  +
call sub_45B9E0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jz loc_45D314  +
push esi  +
mov esi [esp+4+arg_0] +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_45D2FF  +
push [esp+4+arg_8]  +
push eax  +
push ecx  +
push esi  +
call loc_45D040  +
add esp 10h +
mov dword ptr [esi+100h] 1 +
pop esi  +
retn   +
push 0  +
push offset aXmlswitchtoenc  +
push esi  +
call sub_45B9E0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
push esi  +
test ebx ebx +
jz loc_45D362  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_45D362  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D362  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45D34A  +
cmp eax 7FFFFFFFh +
jnb loc_45D34A  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45D35C  +
cmp eax 7FFFFFFFh +
jnb loc_45D35C  +
mov [esi+14h] eax +
cmp dword ptr [esi+0Ch] 2 +
jnz loc_45D368  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
push edi  +
mov edi [esp+8+arg_8] +
cmp edi 0FFFFFFFFh +
jl loc_45D3B9  +
test edi edi +
jz loc_45D41C  +
jns loc_45D38B  +
push ebx  +
call sub_44E660  +
mov edi eax +
add esp 4 +
test edi edi +
js loc_45D3B9  +
jz loc_45D41C  +
mov eax [esi+14h] +
add eax 2 +
add eax edi +
cmp eax [esi+18h] +
jbe loc_45D3E5  +
cmp dword ptr [esi+0Ch] 5 +
jnz loc_45D3C0  +
cmp eax 989680h +
jb loc_45D3C0  +
push offset aBufferErrorTex  +
push esi  +
call sub_45DD10  +
add esp 8 +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
push eax  +
push esi  +
call loc_45DE60  +
add esp 8 +
test eax eax +
jnz loc_45D3E5  +
push offset aGrowingBuffer  +
push esi  +
call sub_45DD10  +
add esp 8 +
mov eax 2 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esi+14h] +
add eax [esi] +
push edi  +
push ebx  +
push eax  +
call loc_48B430  +
add [esi+14h] edi +
mov edx 7FFFFFFFh +
mov eax [esi] +
add esp 0Ch +
mov ecx [esi+14h] +
mov byte ptr [ecx+eax] 0 +
mov eax edx +
cmp [esi+18h] eax +
cmovb eax [esi+18h] +
cmp [esi+14h] edx +
mov [esi+8] eax +
cmovb edx [esi+14h] +
mov [esi+4] edx +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
test esi esi +
jz loc_45D469  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D469  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45D451  +
cmp eax 7FFFFFFFh +
jnb loc_45D451  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45D463  +
cmp eax 7FFFFFFFh +
jnb loc_45D463  +
mov [esi+14h] eax +
cmp dword ptr [esi+0Ch] 2 +
jnz loc_45D46E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jnz loc_45D47D  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
mov edi [esp+8+arg_8] +
cmp edi 0FFFFFFFFh +
jl loc_45D4F6  +
test edi edi +
jz loc_45D563  +
jns loc_45D49E  +
push ebx  +
call sub_44E660  +
mov edi eax +
add esp 4 +
test edi edi +
jle loc_45D4F6  +
cmp dword ptr [esi+0Ch] 3 +
jnz loc_45D4CE  +
mov edx [esi+10h] +
test edx edx +
jz loc_45D4CE  +
mov ecx [esi] +
mov eax ecx +
sub eax edx +
cmp eax edi +
jbe loc_45D4CE  +
push edi  +
sub ecx edi +
push ebx  +
push ecx  +
mov [esi] ecx +
call loc_48B430  +
add [esi+14h] edi +
add esp 0Ch +
add [esi+18h] edi +
jmp loc_45D548  +
mov eax [esi+14h] +
add eax 2 +
add eax edi +
cmp eax [esi+18h] +
jbe loc_45D522  +
cmp dword ptr [esi+0Ch] 5 +
jnz loc_45D4FD  +
cmp eax 989680h +
jb loc_45D4FD  +
push offset aBufferErrorTex  +
push esi  +
call sub_45DD10  +
add esp 8 +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push eax  +
push esi  +
call loc_45DE60  +
add esp 8 +
test eax eax +
jnz loc_45D522  +
push offset aGrowingBuffer  +
push esi  +
call sub_45DD10  +
add esp 8 +
mov eax 2 +
pop edi  +
pop ebx  +
pop esi  +
retn   +
push dword ptr [esi+14h]  +
mov eax [esi] +
push eax  +
add eax edi +
push eax  +
call loc_48B430  +
push edi  +
push ebx  +
push dword ptr [esi]  +
call loc_48B430  +
mov eax [esi] +
add esp 18h +
add [esi+14h] edi +
mov ecx [esi+14h] +
mov byte ptr [ecx+eax] 0 +
mov edi 7FFFFFFFh +
mov eax edi +
cmp [esi+18h] eax +
cmovb eax [esi+18h] +
cmp [esi+14h] edi +
mov [esi+8] eax +
cmovb edi [esi+14h] +
mov [esi+4] edi +
pop edi  +
pop ebx  +
xor eax eax +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_45D5E7  +
cmp dword ptr [edx+20h] 0 +
jnz loc_45D5E7  +
mov eax [edx+8] +
cmp [edx+18h] eax +
jz loc_45D590  +
cmp eax 7FFFFFFFh +
jnb loc_45D590  +
mov [edx+18h] eax +
mov eax [edx+4] +
cmp [edx+14h] eax +
jz loc_45D5A2  +
cmp eax 7FFFFFFFh +
jnb loc_45D5A2  +
mov [edx+14h] eax +
mov ecx [edx+14h] +
push esi  +
mov esi [esp+4+arg_4] +
push edi  +
mov edi [edx+18h] +
mov eax edi +
sub eax ecx +
cmp esi eax +
ja loc_45D5E1  +
add esi ecx +
mov ecx 7FFFFFFFh +
mov eax ecx +
mov [edx+14h] esi +
cmp edi eax +
cmovb eax edi +
cmp esi ecx +
mov [edx+8] eax +
cmovb ecx esi +
mov [edx+4] ecx +
cmp edi esi +
jbe loc_45D5E1  +
mov eax [edx] +
pop edi  +
mov byte ptr [esi+eax] 0 +
xor eax eax +
pop esi  +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_45D629  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45D629  +
mov eax [ecx+8] +
cmp [ecx+18h] eax +
jz loc_45D610  +
cmp eax 7FFFFFFFh +
jnb loc_45D610  +
mov [ecx+18h] eax +
mov eax [ecx+4] +
cmp [ecx+14h] eax +
jz loc_45D622  +
cmp eax 7FFFFFFFh +
jnb loc_45D622  +
mov [ecx+14h] eax +
mov eax [ecx+18h] +
sub eax [ecx+14h] +
retn   +
xor eax eax +
retn   +
***
test esi esi +
jz loc_45D6E7  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D6E7  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45D659  +
cmp eax 7FFFFFFFh +
jnb loc_45D659  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45D66B  +
cmp eax 7FFFFFFFh +
jnb loc_45D66B  +
mov [esi+14h] eax +
push edi  +
mov edi [esi+1Ch] +
test edi edi +
jnz loc_45D681  +
push esi  +
call sub_45DAC0  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [esi+14h] 7FFFFFFFh +
jbe loc_45D69E  +
push offset aUsedSizeTooBig  +
push esi  +
call sub_45DDC0  +
mov dword ptr [edi+4] 7FFFFFFFh +
jmp loc_45D6B2  +
cmp dword ptr [esi+18h] 7FFFFFFFh +
jbe loc_45D6BC  +
push offset aAllocatedSizeT  +
push esi  +
call sub_45DDC0  +
mov dword ptr [edi+8] 7FFFFFFFh +
add esp 8 +
mov eax [esi+14h] +
mov [edi+4] eax +
mov eax [esi+18h] +
mov [edi+8] eax +
mov ecx [esi+0Ch] +
mov [edi+0Ch] ecx +
mov ecx [esi] +
mov [edi] ecx +
mov ecx [esi+10h] +
push esi  +
mov [edi+10h] ecx +
call off_4EE2F4  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_45D729  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D729  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45D711  +
cmp eax 7FFFFFFFh +
jnb loc_45D711  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45D723  +
cmp eax 7FFFFFFFh +
jnb loc_45D723  +
mov [esi+14h] eax +
cmp dword ptr [esi+0Ch] 2 +
jnz loc_45D72E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jnz loc_45D73D  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp byte ptr [edi] 0 +
jz loc_45D76E  +
mov eax [esi+14h] +
add eax 0Ah +
cmp eax [esi+18h] +
jb loc_45D75B  +
push eax  +
push esi  +
call loc_45DE60  +
add esp 8 +
test eax eax +
jz loc_45D797  +
mov edx [esi+14h] +
mov al [edi] +
inc edi  +
mov ecx [esi] +
mov [edx+ecx] al +
inc dword ptr [esi+14h]  +
cmp byte ptr [edi] 0 +
jnz loc_45D742  +
mov eax [esi] +
mov edx 7FFFFFFFh +
mov ecx [esi+14h] +
pop edi  +
mov byte ptr [ecx+eax] 0 +
mov eax edx +
cmp [esi+18h] eax +
cmovb eax [esi+18h] +
cmp [esi+14h] edx +
mov [esi+8] eax +
cmovb edx [esi+14h] +
xor eax eax +
mov [esi+4] edx +
pop esi  +
retn   +
push offset aGrowingBuffer  +
push esi  +
call sub_45DD10  +
add esp 8 +
mov eax 2 +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_45D7FF  +
cmp dword ptr [eax+20h] 0 +
jnz loc_45D7FF  +
mov ecx [eax+8] +
cmp [eax+18h] ecx +
jz loc_45D7D1  +
cmp ecx 7FFFFFFFh +
jnb loc_45D7D1  +
mov [eax+18h] ecx +
mov ecx [eax+4] +
cmp [eax+14h] ecx +
jz loc_45D7E4  +
cmp ecx 7FFFFFFFh +
jnb loc_45D7E4  +
mov [eax+14h] ecx +
cmp dword ptr [eax+0Ch] 2 +
jz loc_45D7FF  +
mov ecx [esp+arg_4] +
test ecx ecx +
jz loc_45D7FF  +
push 0FFFFFFFFh  +
push ecx  +
push eax  +
call sub_45D320  +
add esp 0Ch +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_45D821  +
cmp dword ptr [eax+20h] 0 +
jnz loc_45D821  +
mov eax [eax] +
retn   +
xor eax eax +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45D859  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
call sub_458320  +
mov eax [eax] +
mov [esi+18h] eax +
call sub_458320  +
mov eax [eax] +
mov [esi+8] eax +
call sub_458300  +
push dword ptr [esi+18h]  +
mov eax [eax] +
mov [esi+0Ch] eax +
call off_4EE2EC  +
add esp 4 +
mov [esi] eax +
test eax eax +
jnz loc_45D8D3  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
add esp 14h +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D8C5  +
mov dword ptr [esi+20h] 2 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
mov byte ptr [eax] 0 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45D919  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+1Ch] 0 +
call sub_458300  +
mov eax [eax] +
mov [esi+0Ch] eax +
mov eax [esp+arg_0] +
test eax eax +
jz loc_45D94C  +
add eax 2 +
jmp loc_45D94E  +
xor eax eax +
mov [esi+18h] eax +
mov [esi+8] eax +
test eax eax +
jz loc_45D9A4  +
push eax  +
call off_4EE2EC  +
add esp 4 +
mov [esi] eax +
test eax eax +
jnz loc_45D996  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
add esp 14h +
cmp dword ptr [esi+20h] 0 +
jnz loc_45D988  +
mov dword ptr [esi+20h] 2 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
mov byte ptr [eax] 0 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
pop esi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov dword ptr [esi+10h] 0 +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_45D9CB  +
xor eax eax +
retn   +
cmp dword ptr [ecx+0Ch] 2 +
jz loc_45D9C8  +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_45D9C8  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45D9C8  +
mov eax [ecx] +
mov dword ptr [ecx] 0 +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+14h] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_45DA48  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45DA48  +
mov eax [ecx+8] +
cmp [ecx+18h] eax +
jz loc_45DA30  +
cmp eax 7FFFFFFFh +
jnb loc_45DA30  +
mov [ecx+18h] eax +
mov eax [ecx+4] +
cmp [ecx+14h] eax +
jz loc_45DA42  +
cmp eax 7FFFFFFFh +
jnb loc_45DA42  +
mov [ecx+14h] eax +
mov eax [ecx+14h] +
add eax [ecx] +
retn   +
xor eax eax +
retn   +
***
test esi esi +
jz loc_45DAB8  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45DAB8  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45DA71  +
cmp eax 7FFFFFFFh +
jnb loc_45DA71  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45DA83  +
cmp eax 7FFFFFFFh +
jnb loc_45DA83  +
mov [esi+14h] eax +
mov ecx [esi+14h] +
mov eax [esp+arg_4] +
cmp eax ecx +
ja loc_45DAB8  +
sub ecx eax +
mov edx 7FFFFFFFh +
mov eax [esi] +
mov [esi+14h] ecx +
mov byte ptr [ecx+eax] 0 +
mov eax edx +
cmp [esi+18h] eax +
cmovb eax [esi+18h] +
cmp [esi+14h] edx +
mov [esi+8] eax +
cmovb edx [esi+14h] +
xor eax eax +
mov [esi+4] edx +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
test esi esi +
jz loc_45DAF7  +
mov eax [esi+0Ch] +
cmp eax 3 +
jnz loc_45DAD8  +
mov ecx [esi+10h] +
test ecx ecx +
jnz loc_45DAE3  +
mov ecx [esi] +
test ecx ecx +
jz loc_45DAED  +
cmp eax 2 +
jz loc_45DAED  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_45DB2D  +
push 24h  +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_45DB31  +
push offset aCreatingBuffer  +
push eax  +
push eax  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+4] +
mov [ecx+14h] eax +
mov eax [esi+8] +
mov [ecx+18h] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov [ecx+1Ch] esi +
mov dword ptr [ecx+20h] 0 +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+10h] +
mov [ecx+10h] eax +
mov eax ecx +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test esi esi +
jz loc_45DBAD  +
mov eax [esp+arg_4] +
test eax eax +
js loc_45DBAD  +
jnz loc_45DB97  +
xor eax eax +
pop esi  +
retn   +
push eax  +
push esi  +
call sub_45DBC0  +
add esp 8 +
or ecx 0FFFFFFFFh +
cmp dword ptr [esi+20h] 0 +
cmovnz eax ecx +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
test esi esi +
jz loc_45DBFB  +
cmp dword ptr [esi+20h] 0 +
jnz loc_45DBFB  +
mov eax [esi+8] +
cmp [esi+18h] eax +
jz loc_45DBE1  +
cmp eax 7FFFFFFFh +
jnb loc_45DBE1  +
mov [esi+18h] eax +
mov eax [esi+4] +
cmp [esi+14h] eax +
jz loc_45DBF3  +
cmp eax 7FFFFFFFh +
jnb loc_45DBF3  +
mov [esi+14h] eax +
mov eax [esi+0Ch] +
cmp eax 2 +
jnz loc_45DBFF  +
xor eax eax +
pop esi  +
retn   +
mov edx [esi+14h] +
push ebx  +
mov ebx [esp+4+arg_4] +
push edi  +
mov edi [esi+18h] +
lea ecx [edx+ebx] +
cmp ecx edi +
jnb loc_45DC1A  +
sub edi edx +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
cmp edi ebx +
jbe loc_45DC22  +
add edi edi +
jmp loc_45DC25  +
lea edi [ecx+64h] +
cmp eax 5 +
jnz loc_45DC48  +
cmp ecx 989680h +
jnb loc_45DC96  +
cmp dword ptr [esi+18h] 989680h +
jnb loc_45DC96  +
cmp edi 989680h +
jb loc_45DC48  +
mov edi 989680h +
cmp eax 3 +
jnz loc_45DCAA  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_45DCAA  +
mov ebx [esi] +
sub ebx ecx +
lea eax [ebx+edi] +
push eax  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_45DCBA  +
mov [esi+10h] eax +
add eax ebx +
mov edx 7FFFFFFFh +
mov [esi+18h] edi +
mov ecx edx +
mov [esi] eax +
cmp edi ecx +
cmovb ecx edi +
mov [esi+8] ecx +
mov ecx [esi+14h] +
cmp ecx edx +
cmovb edx ecx +
sub edi ecx +
mov eax edi +
mov [esi+4] edx +
pop edi  +
pop ebx  +
pop esi  +
retn   +
push offset aBufferErrorTex  +
push esi  +
call sub_45DD10  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
push edi  +
push dword ptr [esi]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_45DC6F  +
push offset aGrowingBuffer  +
push esi  +
call sub_45DD10  +
add esp 8 +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_45DD0B  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45DD0B  +
mov eax [ecx+8] +
cmp [ecx+18h] eax +
jz loc_45DCF0  +
cmp eax 7FFFFFFFh +
jnb loc_45DCF0  +
mov [ecx+18h] eax +
mov eax [ecx+4] +
cmp [ecx+14h] eax +
jz loc_45DD02  +
cmp eax 7FFFFFFFh +
jnb loc_45DD02  +
mov [ecx+14h] eax +
xor eax eax +
cmp [ecx+14h] eax +
setz al  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
push 0  +
push 2  +
push 1Dh  +
call sub_43AAC0  +
mov eax [esp+14h+arg_0] +
add esp 14h +
test eax eax +
jz locret_45DD39  +
cmp dword ptr [eax+20h] 0 +
jnz locret_45DD39  +
mov dword ptr [eax+20h] 2 +
retn   +
***
mov eax [esp+arg_0] +
push edi  +
xor edi edi +
test eax eax +
jz loc_45DDA7  +
cmp [eax+20h] edi +
jnz loc_45DDA7  +
mov ecx [eax+8] +
cmp [eax+18h] ecx +
jz loc_45DD63  +
cmp ecx 7FFFFFFFh +
jnb loc_45DD63  +
mov [eax+18h] ecx +
mov ecx [eax+4] +
cmp [eax+14h] ecx +
jz loc_45DD76  +
cmp ecx 7FFFFFFFh +
jnb loc_45DD76  +
mov [eax+14h] ecx +
push esi  +
mov esi [esp+8+arg_4] +
test esi esi +
jz loc_45DD99  +
mov ecx [esi] +
test ecx ecx +
jz loc_45DD99  +
mov edx [esi+4] +
test edx edx +
jz loc_45DD99  +
push edx  +
push ecx  +
push eax  +
call sub_45D320  +
add esp 0Ch +
mov edi eax +
push esi  +
call sub_45DAC0  +
add esp 4 +
mov eax edi +
pop esi  +
pop edi  +
retn   +
push [esp+4+arg_4]  +
call sub_45DAC0  +
add esp 4 +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
***
push 0  +
push 1B58h  +
push 1Dh  +
call sub_43AAC0  +
mov eax [esp+14h+arg_0] +
add esp 14h +
test eax eax +
jz locret_45DDEC  +
cmp dword ptr [eax+20h] 0 +
jnz locret_45DDEC  +
mov dword ptr [eax+20h] 1B58h +
retn   +
***
mov edx [esp+arg_4] +
test edx edx +
jz loc_45DE3D  +
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_45DE3D  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45DE3D  +
mov eax [ecx+8] +
cmp [ecx+18h] eax +
jz loc_45DE18  +
cmp eax 7FFFFFFFh +
jnb loc_45DE18  +
mov [ecx+18h] eax +
mov eax [ecx+4] +
cmp [ecx+14h] eax +
jz loc_45DE2A  +
cmp eax 7FFFFFFFh +
jnb loc_45DE2A  +
mov [ecx+14h] eax +
mov eax [ecx] +
mov [edx+10h] eax +
mov [edx+0Ch] eax +
mov eax [ecx+14h] +
add eax [ecx] +
mov [edx+14h] eax +
xor eax eax +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jz loc_45DEB9  +
cmp dword ptr [edi+20h] 0 +
jnz loc_45DEB9  +
mov eax [edi+8] +
cmp [edi+18h] eax +
jz loc_45DE81  +
cmp eax 7FFFFFFFh +
jnb loc_45DE81  +
mov [edi+18h] eax +
mov eax [edi+4] +
cmp [edi+14h] eax +
jz loc_45DE93  +
cmp eax 7FFFFFFFh +
jnb loc_45DE93  +
mov [edi+14h] eax +
mov ecx [edi+0Ch] +
cmp ecx 2 +
jz loc_45DEB9  +
mov eax [esp+0Ch] +
cmp ecx 5 +
jnz loc_45DEBD  +
cmp eax 989680h +
jb loc_45DEBD  +
push offset aBufferErrorTex  +
push edi  +
call sub_45DD10  +
add esp 8 +
xor eax eax +
pop edi  +
retn   +
***
push esi  +
mov esi [edi+18h] +
cmp eax esi +
jnb loc_45DECD  +
pop esi  +
mov eax 1 +
pop edi  +
retn   +
***
cmp ecx 4 +
ja loc_45DF33  +
jmp ds:off_45E024[ecx*4]  +
test esi esi +
jz loc_45DEE1  +
add esi esi +
jmp loc_45DEE4  +
lea esi [eax+0Ah] +
cmp eax esi +
jbe loc_45DF36  +
cmp esi 7FFFFFFFh +
ja loc_45DF20  +
add esi esi +
cmp eax esi +
ja loc_45DEE8  +
jmp loc_45DF36  +
cmp dword ptr [edi+14h] 1000h +
jnb loc_45DF05  +
mov esi eax +
jmp loc_45DF36  +
add esi esi +
cmp eax esi +
jbe loc_45DF36  +
cmp esi 7FFFFFFFh +
ja loc_45DF20  +
add esi esi +
cmp eax esi +
ja loc_45DF10  +
jmp loc_45DF36  +
push offset aGrowingBuffer  +
push edi  +
call sub_45DD10  +
add esp 8 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
lea esi [eax+0Ah] +
push ebx  +
cmp ecx 3 +
jnz loc_45DF8A  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_45DF8A  +
mov eax [edi] +
mov ebx eax +
sub ebx ecx +
cmp ebx esi +
jbe loc_45DF6B  +
push dword ptr [edi+14h]  +
push eax  +
push ecx  +
call loc_48B430  +
mov ecx [edi+10h] +
add esp 0Ch +
mov eax [edi+14h] +
mov [edi] ecx +
mov byte ptr [ecx+eax] 0 +
add [edi+18h] ebx +
jmp loc_45DFE9  +
lea eax [ebx+esi] +
push eax  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_45E00E  +
mov [edi+10h] eax +
add eax ebx +
mov [edi] eax +
jmp loc_45DFE9  +
mov ecx [edi] +
push esi  +
test ecx ecx +
jnz loc_45DF9E  +
call off_4EE2EC  +
add esp 4 +
mov ebx eax +
jmp loc_45DFE3  +
mov eax [edi+18h] +
sub eax [edi+14h] +
cmp eax 64h +
jnb loc_45DFB7  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
mov ebx eax +
jmp loc_45DFE3  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_45E00E  +
push dword ptr [edi+14h]  +
push dword ptr [edi]  +
push ebx  +
call loc_48C9C0  +
push dword ptr [edi]  +
call off_4EE2F4  +
mov eax [edi+14h] +
add esp 10h +
mov byte ptr [ebx+eax] 0 +
test ebx ebx +
jz loc_45E00E  +
mov [edi] ebx +
mov ecx 7FFFFFFFh +
mov [edi+18h] esi +
mov eax ecx +
cmp esi eax +
pop ebx  +
cmovb eax esi +
cmp [edi+14h] ecx +
mov [edi+8] eax +
mov eax 1 +
cmovb ecx [edi+14h] +
pop esi  +
mov [edi+4] ecx +
pop edi  +
retn   +
***
push offset aGrowingBuffer  +
push edi  +
call sub_45DD10  +
add esp 8 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jz loc_45E084  +
cmp dword ptr [ecx+20h] 0 +
jnz loc_45E084  +
mov eax [ecx+0Ch] +
cmp eax 2 +
jz loc_45E084  +
cmp eax 3 +
jz loc_45E084  +
mov eax [esp+arg_4] +
test eax eax +
jz loc_45E088  +
cmp eax 1 +
jz loc_45E088  +
cmp eax 4 +
jz loc_45E088  +
cmp eax 2 +
jz loc_45E088  +
cmp eax 5 +
jz loc_45E088  +
cmp eax 3 +
jnz loc_45E084  +
mov [ecx+0Ch] eax +
mov eax [ecx] +
mov [ecx+10h] eax +
or eax 0FFFFFFFFh +
retn   +
mov [ecx+0Ch] eax +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_45E095  +
mov [ecx+0Ch] eax +
xor eax eax +
retn   +
***
test edi edi +
jz loc_45E17B  +
cmp dword ptr [edi+20h] 0 +
jnz loc_45E17B  +
mov eax [edi+8] +
cmp [edi+18h] eax +
jz loc_45E0C9  +
cmp eax 7FFFFFFFh +
jnb loc_45E0C9  +
mov [edi+18h] eax +
mov eax [edi+4] +
cmp [edi+14h] eax +
jz loc_45E0DB  +
cmp eax 7FFFFFFFh +
jnb loc_45E0DB  +
mov [edi+14h] eax +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jz loc_45E0EB  +
mov eax [edi+14h] +
cmp ebx eax +
jbe loc_45E0F0  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
mov ecx [edi+0Ch] +
sub eax ebx +
mov [edi+14h] eax +
push esi  +
cmp ecx 2 +
jz loc_45E124  +
cmp ecx 3 +
jnz loc_45E109  +
cmp dword ptr [edi+10h] 0 +
jnz loc_45E124  +
mov ecx [edi] +
push eax  +
lea eax [ecx+ebx] +
push eax  +
push ecx  +
call loc_48B430  +
mov ecx [edi+14h] +
add esp 0Ch +
mov eax [edi] +
mov byte ptr [ecx+eax] 0 +
jmp loc_45E15A  +
add [edi] ebx +
sub [edi+18h] ebx +
mov edx [edi] +
cmp ecx 3 +
jnz loc_45E15A  +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_45E15A  +
mov esi edx +
sub esi ecx +
cmp esi [edi+18h] +
jb loc_45E15A  +
push eax  +
push edx  +
push ecx  +
call loc_48B430  +
mov ecx [edi+10h] +
add esp 0Ch +
mov eax [edi+14h] +
mov [edi] ecx +
mov byte ptr [ecx+eax] 0 +
add [edi+18h] esi +
mov esi 7FFFFFFFh +
mov eax ebx +
mov ecx esi +
cmp [edi+18h] ecx +
cmovb ecx [edi+18h] +
cmp [edi+14h] esi +
mov [edi+8] ecx +
cmovb esi [edi+14h] +
mov [edi+4] esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_45E1B8  +
cmp dword ptr [eax+20h] 0 +
jnz loc_45E1B8  +
mov ecx [eax+8] +
cmp [eax+18h] ecx +
jz loc_45E1A1  +
cmp ecx 7FFFFFFFh +
jnb loc_45E1A1  +
mov [eax+18h] ecx +
mov ecx [eax+4] +
cmp [eax+14h] ecx +
jz loc_45E1B4  +
cmp ecx 7FFFFFFFh +
jnb loc_45E1B4  +
mov [eax+14h] ecx +
mov eax [eax+14h] +
retn   +
xor eax eax +
retn   +
***
test edi edi +
jz loc_45E2E2  +
cmp dword ptr [edi+20h] 0 +
jnz loc_45E2E2  +
mov eax [edi+8] +
cmp [edi+18h] eax +
jz loc_45E1E9  +
cmp eax 7FFFFFFFh +
jnb loc_45E1E9  +
mov [edi+18h] eax +
mov eax [edi+4] +
cmp [edi+14h] eax +
jz loc_45E1FB  +
cmp eax 7FFFFFFFh +
jnb loc_45E1FB  +
mov [edi+14h] eax +
cmp dword ptr [edi+0Ch] 2 +
jz loc_45E2E2  +
push esi  +
mov esi [esp+4+arg_4] +
push 22h  +
push esi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_45E2BD  +
push 27h  +
push esi  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_45E298  +
push offset asc_4DFF18  +
push edi  +
call sub_45D6F0  +
add esp 8 +
mov ecx esi +
cmp byte ptr [esi] 0 +
jz loc_45E285  +
cmp byte ptr [esi] 22h +
jnz loc_45E26E  +
cmp ecx esi +
jz loc_45E259  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push 6  +
push offset aQuot_0  +
push edi  +
call sub_45D320  +
add esp 0Ch +
inc esi  +
mov ecx esi +
jmp loc_45E26F  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_45E241  +
cmp ecx esi +
jz loc_45E285  +
sub esi ecx +
push esi  +
push ecx  +
push edi  +
call sub_45D320  +
add esp 0Ch +
push offset asc_4DFF18  +
push edi  +
call sub_45D6F0  +
add esp 8 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push offset asc_4BC884  +
push edi  +
call sub_45D6F0  +
push esi  +
push edi  +
call sub_45D7B0  +
push offset asc_4BC884  +
push edi  +
call sub_45D6F0  +
add esp 18h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push offset asc_4DFF18  +
push edi  +
call sub_45D6F0  +
push esi  +
push edi  +
call sub_45D7B0  +
push offset asc_4DFF18  +
push edi  +
call sub_45D6F0  +
add esp 18h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+28h] eax +
mov eax [esp+34h] +
push ebx  +
mov ebx [esp+34h] +
mov [esp+8] eax +
mov [esp+4] ebx +
push ebp  +
mov ebp [esp+44h] +
mov [esp+14h] ebp +
push esi  +
mov esi [esp+44h] +
mov edx esi +
mov [esp+20h] edx +
mov [esp+14h] esi +
test ebx ebx +
jz loc_45E4FD  +
test eax eax +
jz loc_45E4FD  +
test ebp ebp +
jz loc_45E4FD  +
test esi esi +
jnz loc_45E35C  +
mov [eax] esi +
xor eax eax +
mov [ebp+0] esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
mov ebp [ebp+0] +
mov eax [eax] +
add ebp esi +
add eax ebx +
mov [esp+1Ch] eax +
push edi  +
cmp esi ebp +
jnb loc_45E47D  +
movzx eax byte ptr [esi] +
inc esi  +
cmp eax 80h +
jnb loc_45E381  +
xor edi edi +
jmp loc_45E3C1  +
cmp eax 0C0h +
jb loc_45E4D1  +
cmp eax 0E0h +
jnb loc_45E39D  +
and eax 1Fh +
mov edi 1 +
jmp loc_45E3C1  +
cmp eax 0F0h +
jnb loc_45E3AE  +
and eax 0Fh +
mov edi 2 +
jmp loc_45E3C1  +
cmp eax 0F8h +
jnb loc_45E4D1  +
and eax 7 +
mov edi 3 +
mov ecx ebp +
sub ecx esi +
cmp ecx edi +
jl loc_45E47D  +
test edi edi +
jz loc_45E3F0  +
cmp esi ebp +
jnb loc_45E3F0  +
movzx edx byte ptr [esi] +
inc esi  +
mov ecx edx +
and cl 0C0h +
cmp cl 80h +
jnz loc_45E3F0  +
and edx 3Fh +
shl eax 6 +
or eax edx +
sub edi 1 +
jnz loc_45E3D1  +
cmp eax 80h +
jnb loc_45E406  +
lea ecx [ebx+1] +
cmp ecx [esp+20h] +
jnb loc_45E47D  +
mov [ebx] al +
mov ebx ecx +
jmp loc_45E46F  +
xor edx edx +
xor ecx ecx +
cmp ds:dword_4C2B10[ecx] eax +
jnb loc_45E4AA  +
add ecx 0Ch +
inc edx  +
cmp ecx 0BDCh +
jb loc_45E410  +
push eax  +
push offset aU_0  +
lea eax [esp+30h] +
push 10h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea ecx [esp+28h] +
mov edi ecx +
lea edx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_45E446  +
sub edi edx +
lea eax [edi+2] +
add eax ebx +
cmp eax [esp+20h] +
jnb loc_45E47D  +
push edi  +
mov byte ptr [ebx] 26h +
inc ebx  +
push ecx  +
push ebx  +
call loc_48C9C0  +
add ebx edi +
add esp 0Ch +
mov byte ptr [ebx] 3Bh +
inc ebx  +
mov edx esi +
mov [esp+24h] edx +
cmp esi ebp +
jb loc_45E372  +
mov eax [esp+14h] +
sub ebx [esp+10h] +
mov ecx [esp+1Ch] +
pop edi  +
mov [eax] ebx +
mov eax [esp+20h] +
sub eax [esp+14h] +
pop esi  +
pop ebp  +
mov [ecx] eax +
xor eax eax +
pop ebx  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
lea ecx [edx+edx*2] +
cmp ds:dword_4C2B10[ecx*4] eax +
lea ecx dword_4C2B10[ecx*4] +
ja loc_45E428  +
test ecx ecx +
jz loc_45E428  +
mov ecx [ecx+4] +
jmp loc_45E441  +
***
mov eax [esp+14h] +
sub ebx [esp+10h] +
mov ecx [esp+1Ch] +
sub edx [esp+18h] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov eax 0FFFFFFFEh +
pop ebp  +
mov [ecx] edx +
pop ebx  +
mov ecx [esp+28h] +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
mov ecx [esp+34h] +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 2Ch +
retn   +
***
xor edx edx +
cmp dword_4F2528 edx +
jnz locret_45E580  +
push edi  +
xor eax eax +
mov ecx 64h +
mov edi offset unk_4F2530 +
stos   +
pop edi  +
cmp ds:off_4C4E00 eax +
jz loc_45E576  +
mov ecx offset unk_4F2530 +
cmp ecx offset unk_4F26BC +
jge loc_45E576  +
lea eax off_4C4E00[edx*4] +
mov [ecx] eax +
add ecx 4 +
cmp dword ptr [eax] 0 +
jz loc_45E56B  +
inc edx  +
cmp ds:off_4C4E00[edx*4] 0 +
jnz loc_45E560  +
inc edx  +
cmp ds:off_4C4E00[edx*4] 0 +
jnz loc_45E547  +
mov dword_4F2528 1 +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E5B4  +
push offset aHtmlDocumentCr  +
push eax  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 60h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esp+0Ch+arg_4] +
add esp 0Ch +
mov eax [esp+arg_0] +
mov dword ptr [esi+4] 0Dh +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov [esi+20h] esi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+28h] 1 +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+40h] 0 +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4Ch] 1 +
mov dword ptr [esi+5Ch] 0A0h +
test ecx ecx +
jnz loc_45E63C  +
test eax eax +
jz loc_45E64C  +
push eax  +
push ecx  +
push offset aHtml_0  +
push esi  +
call sub_422790  +
add esp 10h +
mov eax esi +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
push ds:off_4C4110[esi]  +
push ebx  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_45E685  +
add esi 24h +
inc edi  +
cmp esi 0CF0h +
jb loc_45E660  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
lea eax [edi+edi*8] +
pop edi  +
pop esi  +
lea eax off_4C4110[eax*4] +
pop ebx  +
retn   +
***
cmp lpCriticalSection 0 +
push esi  +
jnz loc_45E702  +
push 18h  +
call sub_49BF60  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E6D6  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlglobalinitm  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
pop esi  +
retn   +
push esi  +
call ds:InitializeCriticalSection  +
mov ecx esi +
mov edx offset lpCriticalSection +
xor eax eax +
cmpxchg [edx] ecx +
cmp lpCriticalSection esi +
jz loc_45E702  +
push esi  +
call ds:DeleteCriticalSection  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax lpCriticalSection +
push eax  +
call ds:EnterCriticalSection  +
pop esi  +
retn   +
***
cmp lpCriticalSection 0 +
jz locret_45E725  +
mov eax lpCriticalSection +
push eax  +
call ds:LeaveCriticalSection  +
retn   +
***
call sub_45E920  +
push dwTlsIndex  +
call ds:TlsGetValue  +
test eax eax +
jz loc_45E74F  +
mov eax [eax] +
test eax eax +
jnz locret_45E7E4  +
push edi  +
call sub_45E870  +
mov edi eax +
test edi edi +
jnz loc_45E75D  +
pop edi  +
retn   +
push esi  +
push 0Ch  +
call sub_49BF60  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E79F  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlgetglobalst  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
lea eax [edi+1C4h] +
push eax  +
call sub_43B810  +
push edi  +
call sub_497EC6  +
add esp 10h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
push offset stru_4F26D8  +
mov [esi] edi +
call ds:EnterCriticalSection  +
mov eax dword_4F26C0 +
test eax eax +
jz loc_45E7B8  +
mov [eax+4] esi +
push esi  +
push dwTlsIndex  +
mov [esi+8] eax +
mov dword ptr [esi+4] 0 +
mov dword_4F26C0 esi +
call ds:TlsSetValue  +
push offset stru_4F26D8  +
call ds:LeaveCriticalSection  +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
retn   +
***
call sub_45E920  +
call ds:__imp_GetCurrentThreadId  +
xor ecx ecx +
cmp dword_4F26D4 eax +
setz cl  +
mov eax ecx +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_45E842  +
push 0FFFFFFFFh  +
push dword ptr [eax]  +
call ds:WaitForSingleObject  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_45E860  +
push dword ptr [eax]  +
call ds:ReleaseMutex  +
retn   +
***
call sub_49BF60  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E8A2  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aXmlgetglobalst  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
push 204h  +
push 0  +
push esi  +
call sub_48CF40  +
push esi  +
call sub_458600  +
add esp 10h +
mov eax esi +
pop esi  +
retn   +
***
call sub_49BF60  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E8D3  +
pop esi  +
retn   +
push 0  +
push 0  +
push 0  +
call ds:CreateMutexA  +
mov [esi] eax +
mov eax esi +
pop esi  +
retn   +
***
call sub_49BF60  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45E903  +
pop esi  +
retn   +
push esi  +
call ds:InitializeCriticalSection  +
mov dword ptr [esi+18h] 0 +
mov eax esi +
pop esi  +
retn   +
***
cmp dword_4F26C4 0 +
jnz locret_45E980  +
mov eax 1 +
xadd dword_4F26C8 eax +
inc eax  +
cmp eax 1 +
jnz loc_45E962  +
call ds:TlsAlloc  +
mov dwTlsIndex eax +
call ds:__imp_GetCurrentThreadId  +
mov dword_4F26D4 eax +
call sub_44EBC0  +
mov dword_4F26C4 1 +
retn   +
cmp dword_4F26C4 0 +
jnz locret_45E980  +
push esi  +
mov esi ds:Sleep +
push 0  +
call esi  +
cmp dword_4F26C4 0 +
jz loc_45E972  +
pop esi  +
retn   +
***
test esi esi +
jz loc_45E9A3  +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [esi+18h]  +
pop esi  +
retn   +
***
mov ecx [esp+lpCriticalSection] +
test ecx ecx +
jz locret_45E9CA  +
mov eax [ecx+18h] +
test eax eax +
jz locret_45E9CA  +
dec eax  +
push ecx  +
mov [ecx+18h] eax +
call ds:LeaveCriticalSection  +
retn   +
***
cmp [esp+arg_4] 0 +
mov eax offset aWb_0 +
mov ecx offset aRb_0 +
cmovz eax ecx +
mov [esp+arg_4] eax +
jmp loc_49C243  +
***
push edi  +
mov ecx [esp+arg_4] +
test ecx ecx +
jnz loc_45EEAA  +
call sub_497984  +
cmp dword ptr [eax] 0 +
jnz loc_45EABF  +
xor ecx ecx +
xor edx edx +
jmp loc_45EEC1  +
call sub_497984  +
cmp dword ptr [eax] 0Dh +
jnz loc_45EAD3  +
mov ecx 5DDh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 0Bh +
jnz loc_45EAE7  +
mov ecx 5DEh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 9 +
jnz loc_45EAFB  +
mov ecx 5DFh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 68h +
jnz loc_45EB0F  +
mov ecx 5E0h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 10h +
jnz loc_45EB23  +
mov ecx 5E1h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 69h +
jnz loc_45EB37  +
mov ecx 5E2h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 0Ah +
jnz loc_45EB4B  +
mov ecx 5E3h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 24h +
jnz loc_45EB5F  +
mov ecx 5E4h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 21h +
jnz loc_45EB73  +
mov ecx 5E5h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 11h +
jnz loc_45EB87  +
mov ecx 5E6h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 0Eh +
jnz loc_45EB9B  +
mov ecx 5E7h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1Bh +
jnz loc_45EBAF  +
mov ecx 5E8h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 70h +
jnz loc_45EBC3  +
mov ecx 5E9h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 4 +
jnz loc_45EBD7  +
mov ecx 5EAh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 16h +
jnz loc_45EBEB  +
mov ecx 5EBh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 5 +
jnz loc_45EBFF  +
mov ecx 5ECh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 15h +
jnz loc_45EC13  +
mov ecx 5EDh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 18h +
jnz loc_45EC27  +
mov ecx 5EEh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1Fh +
jnz loc_45EC3B  +
mov ecx 5EFh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 73h +
jnz loc_45EC4F  +
mov ecx 5F0h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 26h +
jnz loc_45EC63  +
mov ecx 5F1h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 17h +
jnz loc_45EC77  +
mov ecx 5F2h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 13h +
jnz loc_45EC8B  +
mov ecx 5F3h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 2 +
jnz loc_45EC9F  +
mov ecx 5F4h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 8 +
jnz loc_45ECB3  +
mov ecx 5F5h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 27h +
jnz loc_45ECC7  +
mov ecx 5F6h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 0Ch +
jnz loc_45ECDB  +
mov ecx 5F7h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1Ch +
jnz loc_45ECEF  +
mov ecx 5F8h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 28h +
jnz loc_45ED03  +
mov ecx 5F9h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 14h +
jnz loc_45ED17  +
mov ecx 5FAh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 29h +
jnz loc_45ED2B  +
mov ecx 5FBh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 81h +
jnz loc_45ED42  +
mov ecx 5FCh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 19h +
jnz loc_45ED56  +
mov ecx 5FDh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 6 +
jnz loc_45ED6A  +
mov ecx 5FEh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1 +
jnz loc_45ED7E  +
mov ecx 5FFh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 20h +
jnz loc_45ED92  +
mov ecx 600h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 22h +
jnz loc_45EDA6  +
mov ecx 601h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1Eh +
jnz loc_45EDBA  +
mov ecx 602h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 1Dh +
jnz loc_45EDCE  +
mov ecx 603h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 3 +
jnz loc_45EDE2  +
mov ecx 604h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 8Ah +
jnz loc_45EDF9  +
mov ecx 605h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 12h +
jnz loc_45EE0D  +
mov ecx 606h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 80h +
jnz loc_45EE24  +
mov ecx 60Eh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 71h +
jnz loc_45EE35  +
mov ecx 60Fh +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 6Bh +
jnz loc_45EE46  +
mov ecx 610h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 8Ah +
jz loc_45EDEF  +
call sub_497984  +
cmp dword ptr [eax] 76h +
jnz loc_45EE64  +
mov ecx 611h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 64h +
jnz loc_45EE75  +
mov ecx 612h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 70h +
jz loc_45EBB9  +
call sub_497984  +
cmp dword ptr [eax] 67h +
jnz loc_45EE94  +
mov ecx 613h +
jmp loc_45EEB4  +
call sub_497984  +
cmp dword ptr [eax] 66h +
jnz loc_45EEA5  +
mov ecx 614h +
jmp loc_45EEB4  +
mov ecx 5DCh +
xor edx edx +
cmp ecx 5DCh +
jl loc_45EEC1  +
lea eax [ecx-5DCh] +
cmp eax 39h +
sbb edx edx +
and edx eax +
push [esp+arg_8]  +
push off_4EE588[edx*4]  +
push 0  +
push ecx  +
push [esp+10h+arg_0]  +
call sub_43AAC0  +
add esp 14h +
retn   +
***
test edi edi +
jz loc_45EF49  +
push ebx  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push edi  +
push 8  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
mov ebx eax +
test ebx ebx +
jz loc_45EF44  +
lea eax [ebx+ebx] +
push esi  +
push eax  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_45EF3A  +
push ebx  +
push esi  +
push 0FFFFFFFFh  +
push edi  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_45EF3E  +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
retn   +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
xor eax eax +
pop edi  +
retn   +
***
mov ecx [esp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor edi edi +
lea esi [ebx+2] +
test ecx ecx +
jz loc_45EF9C  +
cmp [ecx+0D4h] edx +
jz loc_45EF75  +
cmp dword ptr [ecx+0ACh] 0FFFFFFFFh +
jz loc_45EFC8  +
mov eax [ecx] +
test eax eax +
jz loc_45EF9C  +
cmp [ecx+68h] edx +
jz loc_45EF85  +
mov edx [eax+58h] +
jmp loc_45EF8D  +
mov edx [eax+54h] +
mov esi 1 +
cmp dword ptr [eax+6Ch] 0DEEDBEAFh +
jnz loc_45EF99  +
mov ebx [eax+7Ch] +
mov edi [ecx+4] +
mov eax [esp+0Ch+arg_8] +
push eax  +
push [esp+10h+arg_4]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push esi  +
push 60Dh  +
push 8  +
push 0  +
push ecx  +
push edi  +
push edx  +
push ebx  +
call sub_43A650  +
add esp 44h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
cmp dword_4F26F8 ebx +
jnz loc_45EFE1  +
call sub_460850  +
mov ebp [esp+4+arg_0] +
test ebp ebp +
jnz loc_45EFEE  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
push esi  +
push edi  +
mov edi dword_4F26F4 +
sub edi 1 +
js loc_45F074  +
mov esi edi +
shl esi 4 +
add esi offset dword_4F2708 +
mov eax [esi] +
test eax eax +
jz loc_45F025  +
push ebp  +
call eax  +
add esp 4 +
test eax eax +
jz loc_45F025  +
mov eax [esi+4] +
push ebp  +
call eax  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_45F031  +
sub esi 10h +
sub edi 1 +
jns loc_45F006  +
test ebx ebx +
jz loc_45F074  +
push [esp+0Ch+arg_4]  +
call sub_45F130  +
mov esi eax +
shl edi 4 +
add esp 4 +
test esi esi +
jz loc_45F061  +
mov [esi] ebx +
mov ecx dword_4F2710[edi] +
mov [esi+4] ecx +
mov eax dword_4F2714[edi] +
pop edi  +
mov [esi+8] eax +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov eax dword_4F2714[edi] +
push ebx  +
call eax  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45F0A9  +
push offset aCreatingOutput  +
push eax  +
push eax  +
push 2  +
push 8  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
movups oword ptr [esi+10h] xmm0 +
call sub_45D830  +
mov [esi+10h] eax +
test eax eax +
jnz loc_45F0CD  +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
push 3  +
push eax  +
call sub_45E040  +
mov eax [esp+8+arg_0] +
add esp 8 +
mov [esi+0Ch] eax +
test eax eax +
jz loc_45F104  +
push 0FA0h  +
call sub_45D8F0  +
add esp 4 +
mov [esi+14h] eax +
test eax eax +
jz loc_45F0BF  +
push 1  +
push esi  +
call sub_461BD0  +
add esp 8 +
jmp loc_45F10B  +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+4] 0 +
mov eax esi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov dword ptr [esi+18h] 0 +
pop esi  +
retn   +
***
call off_4EE2E8  +
sub esp 34h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+34h+var_4] eax +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_45F217  +
xor eax eax +
mov ecx [esp+34h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 34h +
retn   +
cmp byte ptr [eax] 5Ch +
jnz loc_45F242  +
cmp byte ptr [eax+1] 5Ch +
jnz loc_45F242  +
cmp byte ptr [eax+2] 3Fh +
jnz loc_45F242  +
cmp byte ptr [eax+3] 5Ch +
jnz loc_45F242  +
mov eax 1 +
mov ecx [esp+34h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 34h +
retn   +
lea ecx [esp+34h+var_34] +
push ecx  +
push eax  +
call off_4EE578  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_45F206  +
mov eax [esp+34h+var_2E] +
mov ecx [esp+34h+var_4] +
and eax 0F000h +
sub eax 4000h +
neg eax  +
sbb eax eax +
xor ecx esp +
add eax 2 +
call sub_488C1C  +
add esp 34h +
retn   +
***
test esi esi +
jz loc_45F3C0  +
mov eax [esi] +
test eax eax +
jz loc_45F3C0  +
cmp dword ptr [eax+4] offset loc_45FB60 +
jnz loc_45F3C0  +
mov eax [eax] +
test eax eax +
jz loc_45F3C0  +
push eax  +
call sub_4716B0  +
add esp 4 +
cmp eax 190h +
jl loc_45F2ED  +
mov eax [esi+4] +
test eax eax +
jz loc_45F2CD  +
push eax  +
push offset aFailedToLoadHt  +
jmp loc_45F2D4  +
push 0  +
push offset aFailedToLoad_1  +
push [esp+8+arg_0]  +
call sub_45EF50  +
add esp 0Ch +
push esi  +
call sub_45BAF0  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
mov eax [esi] +
push edi  +
push dword ptr [eax]  +
call sub_470F10  +
mov edi eax +
push offset aXml  +
push edi  +
call sub_44E8F0  +
add esp 0Ch +
test eax eax +
jnz loc_45F31D  +
push offset aXml_0  +
push edi  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jz loc_45F374  +
mov eax [esi] +
push dword ptr [eax]  +
call sub_4707D0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_45F374  +
push edi  +
call loc_462010  +
add esp 4 +
test eax eax +
jz loc_45F34C  +
push eax  +
push esi  +
push [esp+0Ch+arg_0]  +
call sub_45D020  +
add esp 0Ch +
jmp loc_45F362  +
push 0  +
push edi  +
push offset aUnknownEncodin  +
push 1Fh  +
push [esp+14h+arg_0]  +
call sub_45B470  +
add esp 14h +
cmp dword ptr [esi+2Ch] 0 +
jnz loc_45F374  +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+2Ch] eax +
mov eax [esi] +
push dword ptr [eax]  +
call sub_4716A0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_45F3BB  +
mov eax [esi+4] +
test eax eax +
jz loc_45F397  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45F3AF  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+8] 0 +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
mov eax esi +
pop esi  +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx eax +
push ebx  +
push ebp  +
mov ebp [esp+10h] +
mov ebx [edx] +
push esi  +
mov esi [esp+18h] +
add ebx esi +
push edi  +
mov edi [ebp+0] +
add edi eax +
mov [esp+14h] ecx +
mov [esp+1Ch] esi +
cmp esi ebx +
jnb loc_45F482  +
mov ecx edi +
sub ecx eax +
cmp eax edi +
jnb loc_45F47A  +
mov dl [esi] +
cmp dl 3Ch +
jnz loc_45F421  +
cmp ecx 4 +
jl loc_45F47A  +
mov dword ptr [eax] 3B746C26h +
add eax 4 +
sub ecx 4 +
jmp loc_45F475  +
cmp dl 3Eh +
jnz loc_45F439  +
cmp ecx 4 +
jl loc_45F47A  +
mov dword ptr [eax] 3B746726h +
add eax 4 +
sub ecx 4 +
jmp loc_45F475  +
cmp dl 26h +
jnz loc_45F455  +
cmp ecx 5 +
jl loc_45F47A  +
mov dword ptr [eax] 706D6126h +
mov byte ptr [eax+4] 3Bh +
add eax 5 +
sub ecx 5 +
jmp loc_45F475  +
cmp dl 0Dh +
jnz loc_45F471  +
cmp ecx 5 +
jl loc_45F47A  +
mov dword ptr [eax] 33312326h +
mov byte ptr [eax+4] 3Bh +
add eax 5 +
sub ecx 5 +
jmp loc_45F475  +
mov [eax] dl +
inc eax  +
dec ecx  +
inc esi  +
cmp esi ebx +
jb loc_45F403  +
mov edx [esp+20h] +
mov ecx [esp+14h] +
sub esi [esp+1Ch] +
sub eax ecx +
mov [ebp+0] eax +
xor eax eax +
pop edi  +
mov [edx] esi +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_45F4AE  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
push 1  +
call sub_4975B1  +
add esp 4 +
cmp esi eax +
jz loc_45F504  +
push 2  +
call sub_4975B1  +
add esp 4 +
cmp esi eax +
jz loc_45F504  +
push 0  +
call sub_4975B1  +
add esp 4 +
cmp esi eax +
jz loc_45F522  +
push esi  +
call sub_49732B  +
add esp 4 +
lea esi [eax+1] +
neg esi  +
sbb esi esi +
neg esi  +
sub esi 1 +
jns loc_45F500  +
push offset aFclose  +
push 0  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
call sub_49725C  +
add esp 4 +
test eax eax +
jns loc_45F522  +
push offset aFflush  +
push 0  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+0Ch] +
push edi  +
call sub_45F620  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45F56A  +
push eax  +
push eax  +
push edi  +
call loc_45B280  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_45F568  +
push edi  +
call sub_45F620  +
push edi  +
mov esi eax +
call off_4EE2F4  +
add esp 8 +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
mov dl [ecx] +
cmp dl [eax] +
jnz loc_45F5A0  +
test dl dl +
jz loc_45F59C  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_45F5A0  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_45F580  +
xor eax eax +
jmp loc_45F5A5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_45F5B7  +
pop esi  +
mov dword ptr [esp+4] 1 +
jmp sub_4975B1  +
***
push 11h  +
push offset aFileLocalhost  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45F5D0  +
add esi 11h +
jmp loc_45F5E7  +
push 8  +
push offset aFile_0  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45F5E7  +
add esi 8 +
test esi esi +
jnz loc_45F5EF  +
xor eax eax +
pop esi  +
retn   +
***
push edi  +
push 1  +
push esi  +
call off_4EE57C  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_45F60E  +
push esi  +
push eax  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_45F62D  +
xor eax eax +
pop esi  +
retn   +
mov ecx offset byte_4DEA2C +
mov eax esi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_45F654  +
test dl dl +
jz loc_45F650  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_45F654  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_45F634  +
xor eax eax +
jmp loc_45F659  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_45F667  +
pop esi  +
mov [esp-4+arg_0] eax +
jmp sub_4975B1  +
push 11h  +
push offset aFileLocalhost  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45F680  +
add esi 11h +
jmp loc_45F6B0  +
push 8  +
push offset aFile_0  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45F699  +
add esi 8 +
jmp loc_45F6B0  +
push 6  +
push offset aFile_1  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45F6B0  +
add esi 6 +
push esi  +
call sub_45F1F0  +
add esp 4 +
test eax eax +
jz loc_45F629  +
push edi  +
push 0  +
push esi  +
call off_4EE57C  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_45F6E0  +
push esi  +
push eax  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_45F72C  +
mov ecx [esp+8] +
test ecx ecx +
jz loc_45F72C  +
push esi  +
push eax  +
push dword ptr [esp+14h]  +
push 1  +
push ecx  +
call sub_49C451  +
mov esi eax +
add esp 10h +
test esi esi +
jns loc_45F728  +
push offset aFread  +
push 0  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
mov eax esi +
pop esi  +
retn   +
***
or eax 0FFFFFFFFh +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_45F785  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_45F785  +
push edi  +
push esi  +
push 1  +
push dword ptr [esp+1Ch]  +
push eax  +
call sub_4978B3  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_45F77B  +
push esi  +
call sub_49C25A  +
add esp 4 +
test eax eax +
jz loc_45F77B  +
push offset aFwrite  +
push edi  +
push 8  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
***
imul edi [esp+14h] +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esi+4] +
test eax eax +
jz loc_45F7A6  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45F7B6  +
push eax  +
call sub_45FE60  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_45F82F  +
mov eax [esi+14h] +
test eax eax +
jz loc_45F7F0  +
push eax  +
call sub_45DAC0  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_45F800  +
push eax  +
call sub_461820  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45F80E  +
push dword ptr [esi]  +
call eax  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_45F825  +
push eax  +
call sub_45DAC0  +
add esp 4 +
mov dword ptr [esi+10h] 0 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
jmp loc_471E10  +
***
push 6  +
push offset aFtp  +
push dword ptr [esp+0Ch]  +
call sub_44E680  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
jmp loc_472C20  +
***
mov eax [esp+8] +
test eax eax +
jz loc_45F89D  +
mov ecx [esp+0Ch] +
test ecx ecx +
js loc_45F89D  +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
jmp loc_472D50  +
***
or eax 0FFFFFFFFh +
retn   +
***
push dword ptr [esp+4]  +
call sub_470470  +
add esp 4 +
xor eax eax +
retn   +
***
push offset aPut  +
push dword ptr [esp+8]  +
call sub_45F8E0  +
add esp 8 +
retn   +
***
sub esp 204h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+204h+var_4] eax +
push ebx  +
mov ebx [esp+208h+arg_4] +
push ebp  +
push edi  +
mov edi [esp+210h+arg_0] +
or ebp 0FFFFFFFFh +
mov [esp+210h+var_204] offset aTextXml +
test edi edi +
jz loc_45FA5D  +
test ebx ebx +
jz loc_45FA5D  +
push esi  +
mov esi [edi+8] +
push dword ptr [esi+10h]  +
call sub_45D810  +
push dword ptr [esi+10h]  +
mov [esp+21Ch+var_200] eax +
call sub_45E180  +
mov ecx eax +
add esp 8 +
mov eax [esp+214h+var_200] +
mov [esp+214h+var_1FC] ecx +
test eax eax +
jnz loc_45F98C  +
push dword ptr [edi+4]  +
lea eax [esp+218h+var_1F8] +
push offset aDataToUri  +
push ebx  +
push offset aErrorRetrievin  +
push offset aXmliohttpclose  +
push 1F4h  +
push eax  +
call sub_44E3B0  +
lea eax [esp+230h+var_1F8] +
push eax  +
push off_4EE640  +
push 0  +
push 60Ah  +
push 8  +
call sub_43AAC0  +
add esp 30h +
jmp loc_45FA17  +
push ecx  +
push 0  +
lea ecx [esp+21Ch+var_204] +
push ecx  +
push eax  +
push ebx  +
push dword ptr [edi+4]  +
call sub_470980  +
mov esi eax +
add esp 18h +
test esi esi +
jz loc_45FA17  +
push esi  +
call sub_4716B0  +
mov ecx eax +
add esp 4 +
lea eax [ecx-0C8h] +
cmp eax 63h +
ja loc_45F9C1  +
xor ebp ebp +
jmp loc_45FA04  +
push ecx  +
push offset aFailed_HttpRet  +
push dword ptr [edi+4]  +
lea eax [esp+220h+var_1F8] +
push offset aBytesToUri  +
push [esp+224h+var_1FC]  +
push ebx  +
push offset aXmliohttpclo_0  +
push 1F4h  +
push eax  +
call sub_44E3B0  +
lea eax [esp+238h+var_1F8] +
push eax  +
push off_4EE640  +
push 0  +
push 60Ah  +
push 8  +
call sub_43AAC0  +
add esp 38h +
push esi  +
call sub_470470  +
push [esp+218h+var_204]  +
call off_4EE2F4  +
add esp 8 +
mov eax [edi+4] +
pop esi  +
test eax eax +
jz loc_45FA29  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ecx [edi+8] +
test ecx ecx +
jz loc_45FA39  +
push ecx  +
call sub_45FE60  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax ebp +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+204h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 204h +
retn   +
mov ecx [esp+210h+var_4] +
or eax 0FFFFFFFFh +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 204h +
retn   +
***
push 0  +
push dword ptr [esp+8]  +
call sub_45FAC0  +
add esp 8 +
retn   +
***
push 7  +
push offset aHttp  +
push dword ptr [esp+0Ch]  +
call sub_44E680  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
push 0  +
push dword ptr [esp+8]  +
call sub_470F20  +
add esp 8 +
retn   +
***
cmp [esp+arg_0] 0 +
jnz loc_45FACA  +
xor eax eax +
retn   +
push esi  +
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_45FAF3  +
push offset aCreatingHttpOu  +
push eax  +
push eax  +
push 2  +
push 8  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push [esp+4+arg_0]  +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
call sub_44E600  +
add esp 4 +
mov [esi+4] eax +
test eax eax +
jnz loc_45FB31  +
push offset aCopyingUri  +
push eax  +
push eax  +
push 2  +
push 8  +
call sub_43AAC0  +
push esi  +
call sub_45F790  +
add esp 18h +
xor eax eax +
pop esi  +
retn   +
push 0  +
call sub_45F080  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_45FB4D  +
push esi  +
call sub_45F790  +
add esp 4 +
xor esi esi +
mov eax esi +
pop esi  +
retn   +
***
mov eax [esp+8] +
test eax eax +
jz loc_45FB7D  +
mov ecx [esp+0Ch] +
test ecx ecx +
js loc_45FB7D  +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
jmp loc_470F50  +
***
or eax 0FFFFFFFFh +
retn   +
***
sub esp 1F8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1F8h+var_4] eax +
mov eax [esp+1F8h+arg_4] +
push edi  +
mov edi [esp+1FCh+arg_0] +
test edi edi +
jz loc_45FC35  +
mov ecx [edi+8] +
test ecx ecx +
jz loc_45FC35  +
test eax eax +
jz loc_45FC35  +
push esi  +
mov esi [esp+200h+arg_8] +
test esi esi +
jle loc_45FC1C  +
push eax  +
push esi  +
push ecx  +
call sub_460010  +
mov esi eax +
add esp 0Ch +
test esi esi +
jns loc_45FC1C  +
push dword ptr [edi+4]  +
lea eax [esp+204h+var_1F8] +
push offset aErrorSendingDo  +
push offset aErrorAppending  +
push offset aXmliohttpwrite  +
push 1F4h  +
push eax  +
call sub_44E3B0  +
lea eax [esp+218h+var_1F8] +
push eax  +
push off_4EE640  +
push 0  +
push 60Ah  +
push 8  +
call sub_43AAC0  +
add esp 2Ch +
mov eax esi +
pop esi  +
pop edi  +
mov ecx [esp+1F8h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
mov ecx [esp+1FCh+var_4] +
or eax 0FFFFFFFFh +
pop edi  +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
sub esp 98h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+98h+var_4] eax +
cmp dword_4F26F0 0 +
jnz loc_45FCBD  +
lea eax [esp+98h+var_98] +
mov [esp+98h+var_98] 94h +
push eax  +
call ds:GetVersionExA  +
test eax eax +
jz loc_45FC9F  +
cmp [esp+98h+var_88] 2 +
jnz loc_45FC9F  +
mov off_4EE578 offset loc_460B30 +
mov off_4EE57C offset sub_460AD0 +
jmp loc_45FCB3  +
mov off_4EE578 offset sub_45E9F0 +
mov off_4EE57C offset sub_45E9D0 +
mov dword_4F26F0 1 +
mov ecx [esp+98h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 98h +
retn   +
***
test esi esi +
jz loc_45FD3E  +
push esi  +
call sub_45FD60  +
add esp 4 +
test eax eax +
jnz loc_45FD3E  +
push edi  +
push esi  +
call sub_458BE0  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_45FD1E  +
push offset aBuildingCanoni  +
push eax  +
push eax  +
push 2  +
push 8  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push edi  +
call off_4EE580  +
push edi  +
mov esi eax +
call off_4EE2F4  +
add esp 10h +
mov eax esi +
pop edi  +
pop esi  +
retn   +
push [esp+arg_8]  +
push [esp+4+arg_4]  +
push esi  +
call off_4EE580  +
add esp 0Ch +
pop esi  +
retn   +
***
test esi esi +
jnz loc_45FD6D  +
xor eax eax +
pop esi  +
retn   +
push 11h  +
push offset aFileLocalhost  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45FD8F  +
add esi 11h +
push esi  +
call sub_45F1F0  +
add esp 4 +
pop esi  +
retn   +
push 8  +
push offset aFile_0  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_45FDA6  +
add esi 8 +
push esi  +
call sub_45F1F0  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+8+arg_0] +
push ebx  +
push [esp+0Ch+arg_4]  +
push edi  +
call sub_4609D0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_45FDE5  +
mov esi edi +
test edi edi +
jz loc_45FE0D  +
push 6  +
push offset aFtp  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jz loc_45FE31  +
push 7  +
push offset aHttp  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jz loc_45FE31  +
push ebx  +
push [esp+0Ch+arg_4]  +
push esi  +
call sub_45EA00  +
add esp 0Ch +
mov ebx eax +
cmp esi edi +
jz loc_45FE2B  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
push esi  +
push off_4EE634  +
push 0  +
push 607h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
cmp esi edi +
jz loc_45FE57  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jnz loc_45FE72  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp [esi+4] edi +
jz loc_45FE80  +
push esi  +
call sub_45FF00  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_45FE90  +
push dword ptr [esi]  +
call eax  +
add esp 4 +
mov edi eax +
mov eax [esi+14h] +
push ebx  +
mov ebx [esi+18h] +
test eax eax +
jz loc_45FEAB  +
push eax  +
call sub_45DAC0  +
add esp 4 +
mov dword ptr [esi+14h] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_45FEBB  +
push eax  +
call sub_461820  +
add esp 4 +
mov eax [esi+10h] +
test eax eax +
jz loc_45FED2  +
push eax  +
call sub_45DAC0  +
add esp 4 +
mov dword ptr [esi+10h] 0 +
or eax 0FFFFFFFFh +
cmp dword ptr [esi+1Ch] 0 +
push esi  +
cmovnz edi eax +
call off_4EE2F4  +
add esp 4 +
test edi edi +
cmovz edi ebx +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jz loc_45FFA3  +
cmp [esi+1Ch] edi +
jnz loc_45FFA3  +
cmp [esi+14h] edi +
jz loc_45FF34  +
cmp [esi+0Ch] edi +
jz loc_45FF34  +
push 0  +
push esi  +
call sub_461BD0  +
add esp 8 +
test eax eax +
js loc_45FF83  +
jnz loc_45FF23  +
mov eax [esi+14h] +
test eax eax +
jz loc_45FFA9  +
cmp [esi+0Ch] edi +
jz loc_45FFA9  +
cmp [esi+4] edi +
jz loc_45FF7B  +
push eax  +
call sub_45E180  +
add esp 4 +
push eax  +
push dword ptr [esi+14h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov edi eax +
add esp 0Ch +
test edi edi +
js loc_45FFEA  +
push edi  +
push dword ptr [esi+14h]  +
call sub_45E0A0  +
add esp 8 +
add [esi+18h] edi +
mov eax edi +
pop edi  +
pop esi  +
retn   +
push 0  +
push off_4EE638  +
push 0  +
push 608h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 608h +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp [esi+4] edi +
jz loc_45FF7B  +
push dword ptr [esi+10h]  +
call sub_45E180  +
add esp 4 +
push eax  +
push dword ptr [esi+10h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov edi eax +
add esp 0Ch +
test edi edi +
js loc_45FFEA  +
push edi  +
push dword ptr [esi+10h]  +
call sub_45E0A0  +
add esp 8 +
mov eax edi +
add [esi+18h] edi +
pop edi  +
pop esi  +
retn   +
push 0  +
push off_4EE63C  +
push 0  +
push 609h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 609h +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov esi [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
test esi esi +
jz loc_4601B8  +
cmp dword ptr [esi+1Ch] 0 +
jnz loc_4601B8  +
push ebx  +
mov ebx [esp+0Ch+arg_4] +
test ebx ebx +
jns loc_46003F  +
pop ebx  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
push ebp  +
push edi  +
mov eax 3E80h +
mov edi ebx +
cmp ebx eax +
cmovg edi eax +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4600B0  +
cmp dword ptr [esi+14h] 0 +
jnz loc_460061  +
call sub_45D830  +
mov [esi+14h] eax +
push edi  +
push [esp+18h+arg_8]  +
push dword ptr [esi+10h]  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_46017D  +
push dword ptr [esi+10h]  +
call sub_45E180  +
add esp 4 +
cmp eax 0FA0h +
jnb loc_460093  +
cmp edi ebx +
jz loc_4601AE  +
push 0  +
push esi  +
call sub_461BD0  +
add esp 8 +
test eax eax +
jns loc_4600AB  +
cmp eax 0FFFFFFFDh +
jnz loc_46015D  +
push dword ptr [esi+14h]  +
jmp loc_4600CB  +
push edi  +
push [esp+18h+arg_8]  +
push dword ptr [esi+10h]  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_46017D  +
push dword ptr [esi+10h]  +
call sub_45E180  +
add [esp+18h+arg_8] edi +
mov ebp eax +
add esp 4 +
sub ebx edi +
cmp ebp 0FA0h +
jge loc_4600EB  +
test ebx ebx +
jle loc_4601AE  +
cmp dword ptr [esi+4] 0 +
jz loc_460145  +
cmp dword ptr [esi+0Ch] 0 +
push ebp  +
jz loc_46011A  +
push dword ptr [esi+14h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov edi eax +
add esp 0Ch +
test edi edi +
js loc_460186  +
push edi  +
push dword ptr [esi+14h]  +
jmp loc_46013A  +
push dword ptr [esi+10h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov edi eax +
add esp 0Ch +
test edi edi +
js loc_460186  +
push edi  +
push dword ptr [esi+10h]  +
call sub_45E0A0  +
add esp 8 +
add [esi+18h] edi +
mov eax [esp+14h+var_4] +
add eax ebp +
mov [esp+14h+var_4] eax +
test ebx ebx +
jg loc_460041  +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
push 0  +
push off_4EE638  +
push 0  +
push 608h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 608h +
pop edi  +
pop ebp  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
push 0  +
push off_4EE640  +
push 0  +
push 60Ah  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 60Ah +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
mov eax [esp+14h+var_4] +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
pop ecx  +
retn   +
***
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+18h+arg_0] +
xor ebx ebx +
mov [esp+18h+var_8] ebx +
test esi esi +
jz loc_460482  +
cmp [esi+1Ch] ebx +
jnz loc_460482  +
mov ebp [esp+18h+arg_4] +
test ebp ebp +
jz loc_460482  +
mov eax [esi+10h] +
test eax eax +
jz loc_460482  +
push eax  +
call sub_45DB70  +
add esp 4 +
cmp eax 2 +
jz loc_460482  +
push edi  +
mov edi ebp +
lea ecx [edi+1] +
mov al [edi] +
inc edi  +
test al al +
jnz loc_460210  +
sub edi ecx +
jns loc_460225  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
cmp [esi+1Ch] ebx +
jnz loc_46044D  +
mov eax [esp+1Ch+arg_8] +
mov ecx offset loc_45F3D0 +
test eax eax +
cmovz eax ecx +
mov [esp+1Ch+arg_8] eax +
push dword ptr [esi+10h]  +
mov [esp+20h+var_4] ebx +
mov [esp+20h+var_C] edi +
call sub_45D5F0  +
dec eax  +
add esp 4 +
mov [esp+1Ch+arg_0] eax +
cmp eax 28h +
jge loc_46027A  +
push 64h  +
push dword ptr [esi+10h]  +
call sub_45DB80  +
add esp 8 +
test eax eax +
js loc_46044D  +
or eax 0FFFFFFFFh +
jmp loc_460417  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_46030E  +
cmp dword ptr [esi+14h] 0 +
jnz loc_460292  +
call sub_45D830  +
mov [esi+14h] eax +
lea eax [esp+1Ch+var_C] +
push eax  +
push ebp  +
lea eax [esp+24h+arg_0] +
push eax  +
push dword ptr [esi+10h]  +
call sub_45DA10  +
add esp 4 +
push eax  +
call [esp+2Ch+arg_8]  +
add esp 10h +
test eax eax +
js loc_46044D  +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jz loc_46044D  +
push eax  +
push dword ptr [esi+10h]  +
call sub_45D570  +
push dword ptr [esi+10h]  +
call sub_45E180  +
add esp 0Ch +
cmp eax 0FA0h +
jnb loc_4602E9  +
cmp [esp+1Ch+var_C] edi +
jz loc_460478  +
push 0  +
push esi  +
call sub_461BD0  +
add esp 8 +
test eax eax +
jns loc_460301  +
cmp eax 0FFFFFFFDh +
jnz loc_46042D  +
push dword ptr [esi+14h]  +
call sub_45E180  +
add esp 4 +
jmp loc_460354  +
lea eax [esp+1Ch+var_C] +
push eax  +
push ebp  +
lea eax [esp+24h+arg_0] +
push eax  +
push dword ptr [esi+10h]  +
call sub_45DA10  +
add esp 4 +
push eax  +
call [esp+2Ch+arg_8]  +
add esp 10h +
test eax eax +
js loc_46044D  +
mov eax [esp+1Ch+arg_0] +
test eax eax +
jz loc_46044D  +
push eax  +
push dword ptr [esi+10h]  +
call sub_45D570  +
push dword ptr [esi+10h]  +
call sub_45E180  +
add esp 0Ch +
mov ebp eax +
mov eax [esp+1Ch+var_C] +
add [esp+1Ch+arg_4] eax +
sub edi eax +
cmp ebp 0FA0h +
jge loc_460370  +
test edi edi +
jle loc_460478  +
cmp dword ptr [esi+4] 0 +
jz loc_4603E7  +
cmp dword ptr [esi+0Ch] 0 +
push ebp  +
jz loc_4603B2  +
push dword ptr [esi+14h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
js loc_460458  +
push ebx  +
push dword ptr [esi+14h]  +
call sub_45E0A0  +
add esp 8 +
add [esi+18h] ebx +
mov ebx [esp+1Ch+var_8] +
jmp loc_460409  +
push dword ptr [esi+10h]  +
call sub_45D810  +
add esp 4 +
push eax  +
push dword ptr [esi]  +
mov eax [esi+4] +
call eax  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
js loc_460458  +
push ebx  +
push dword ptr [esi+10h]  +
call sub_45E0A0  +
add esp 8 +
add [esi+18h] ebx +
mov ebx [esp+1Ch+var_8] +
jmp loc_460409  +
push dword ptr [esi+10h]  +
call sub_45D5F0  +
add esp 4 +
cmp eax 0FA0h +
jnb loc_460409  +
push 0FA0h  +
push dword ptr [esi+10h]  +
call sub_45DB80  +
add esp 8 +
mov eax [esp+1Ch+var_4] +
add ebx ebp +
mov ebp [esp+1Ch+arg_4] +
mov [esp+1Ch+var_8] ebx +
test edi edi +
jle loc_460478  +
cmp eax ebx +
jnz loc_460240  +
pop edi  +
pop esi  +
pop ebp  +
mov eax ebx +
pop ebx  +
add esp 0Ch +
retn   +
push 0  +
push off_4EE638  +
push 0  +
push 608h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 608h +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 0Ch +
retn   +
push 0  +
push off_4EE640  +
push 0  +
push 60Ah  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 60Ah +
pop edi  +
pop esi  +
pop ebp  +
mov eax ebx +
pop ebx  +
add esp 0Ch +
retn   +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 0Ch +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_4604D1  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_4604D1  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jnz loc_4604AC  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov ecx esi +
push edi  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4604B2  +
sub ecx edi +
pop edi  +
test ecx ecx +
jle loc_4604CD  +
push esi  +
push ecx  +
push edx  +
call sub_460010  +
add esp 0Ch +
pop esi  +
retn   +
mov eax ecx +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
sub esp 404h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+400h] eax +
push esi  +
xor esi esi +
push edi  +
mov edi [esp+410h] +
cmp dword_4F26F8 esi +
jnz loc_46050C  +
call sub_460850  +
test edi edi +
jnz loc_460529  +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+400h] +
xor ecx esp +
call sub_488C1C  +
add esp 404h +
retn   +
***
push 3FFh  +
lea eax [esp+0Ch] +
push edi  +
push eax  +
call sub_49BF70  +
lea ecx [esp+14h] +
mov byte ptr [esp+413h] 0 +
add esp 0Ch +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_460550  +
sub ecx edx +
lea eax [esp+8] +
add eax ecx +
lea ecx [esp+8] +
cmp eax ecx +
jbe loc_46057C  +
mov cl [eax] +
cmp cl 2Fh +
jz loc_4605A8  +
cmp cl 5Ch +
jz loc_46057C  +
dec eax  +
lea ecx [esp+8] +
cmp eax ecx +
ja loc_460567  +
mov cl [eax] +
cmp cl 2Fh +
jz loc_4605A8  +
cmp cl 5Ch +
jz loc_4605A8  +
lea eax [esp+8] +
push 400h  +
push eax  +
call sub_4A63F9  +
add esp 8 +
test eax eax +
jz loc_4605CA  +
mov byte ptr [esp+407h] 0 +
jmp loc_4605BA  +
lea ecx [esp+8] +
cmp eax ecx +
jnz loc_4605B7  +
mov byte ptr [esp+9] 0 +
jmp loc_4605BA  +
mov byte ptr [eax] 0 +
lea eax [esp+8] +
push eax  +
call off_4EE2F8  +
mov esi eax +
add esp 4 +
mov ecx [esp+408h] +
mov eax esi +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 404h +
retn   +
***
call sub_4584E0  +
cmp dword ptr [eax] 0 +
jz loc_460603  +
call sub_4584E0  +
mov eax [eax] +
jmp eax  +
jmp sub_45EFD0  +
***
cmp [esp+arg_4] 0 +
jg loc_46061A  +
xor eax eax +
retn   +
push edi  +
mov edi [esp+4+arg_0] +
test edi edi +
jnz loc_460627  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push [esp+8+arg_8]  +
call sub_45F130  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_46066D  +
push [esp+8+arg_4]  +
mov [esi] edi +
push edi  +
push dword ptr [esi+10h]  +
mov dword ptr [esi+4] offset sub_4126F0 +
mov dword ptr [esi+8] 0 +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jz loc_46066D  +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jz loc_4607FE  +
cmp dword ptr [esi+1Ch] 0 +
jnz loc_4607FE  +
push edi  +
mov edi [esp+4+arg_4] +
cmp edi 0FA0h +
jg loc_4606AF  +
cmp edi 4 +
mov eax 0FA0h +
cmovnz edi eax +
push dword ptr [esi+10h]  +
call sub_45D5F0  +
add esp 4 +
test eax eax +
jnz loc_4606E2  +
push eax  +
push off_4EE648  +
push eax  +
push 60Ch  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 60Ch +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
lea eax [edi+1] +
push eax  +
push dword ptr [esi+10h]  +
call sub_45DB80  +
add esp 8 +
test eax eax +
jns loc_460717  +
push offset aGrowingInputBu  +
push 0  +
push 0  +
push 2  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 2 +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
retn   +
push ebx  +
push dword ptr [esi+10h]  +
call sub_45DA10  +
mov ecx [esi+4] +
add esp 4 +
mov ebx eax +
test ecx ecx +
jz loc_4607D7  +
push edi  +
push ebx  +
push dword ptr [esi]  +
call ecx  +
mov edi eax +
add esp 0Ch +
test edi edi +
jg loc_460746  +
mov dword ptr [esi+4] offset sub_4126F0 +
js loc_4607A8  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4607C5  +
cmp dword ptr [esi+14h] 0 +
jnz loc_46075C  +
call sub_45D830  +
mov [esi+14h] eax +
push edi  +
push ebx  +
push dword ptr [esi+14h]  +
call sub_45D320  +
add esp 0Ch +
test eax eax +
jnz loc_4607A8  +
push dword ptr [esi+14h]  +
call sub_45E180  +
push 1  +
push esi  +
mov ebx eax +
call sub_461A10  +
mov edi eax +
add esp 0Ch +
test edi edi +
jns loc_4607AF  +
push 0  +
push off_4EE638  +
push 0  +
push 608h  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 608h +
pop ebx  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push dword ptr [esi+14h]  +
call sub_45E180  +
add esp 4 +
sub ebx eax +
add [esi+20h] ebx +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push edi  +
push dword ptr [esi+10h]  +
call sub_45D570  +
add esp 8 +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push 0  +
push off_4EE644  +
push 0  +
push 60Bh  +
push 8  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+1Ch] 60Bh +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_460840  +
cmp dword ptr [eax+1Ch] 0 +
jnz loc_460840  +
cmp dword ptr [eax+4] 0 +
jz loc_46082D  +
mov [esp+arg_0] eax +
jmp sub_460680  +
push dword ptr [eax+10h]  +
call sub_45DB70  +
sub eax 2 +
add esp 4 +
neg eax  +
sbb eax eax +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
cmp dword_4F26F8 0 +
jnz locret_460921  +
call sub_45FC50  +
mov ecx dword_4F26F4 +
cmp ecx 0Fh +
jge loc_460917  +
mov eax ecx +
inc ecx  +
shl eax 4 +
mov dword_4F26F4 ecx +
mov dword_4F2708[eax] offset sub_410B20 +
mov dword_4F270C[eax] offset loc_45F530 +
mov dword_4F2710[eax] offset loc_45F6F0 +
mov dword_4F2714[eax] offset loc_45F4A0 +
cmp ecx 0Fh +
jge loc_460917  +
mov eax ecx +
inc ecx  +
shl eax 4 +
mov dword_4F26F4 ecx +
mov dword_4F2708[eax] offset loc_45FA90 +
mov dword_4F270C[eax] offset loc_45FAB0 +
mov dword_4F2710[eax] offset loc_45FB60 +
mov dword_4F2714[eax] offset loc_45F8B0 +
cmp ecx 0Fh +
jge loc_460917  +
mov eax ecx +
shl eax 4 +
inc ecx  +
mov dword_4F26F4 ecx +
mov dword_4F2708[eax] offset loc_45F850 +
mov dword_4F270C[eax] offset loc_45F870 +
mov dword_4F2710[eax] offset loc_45F880 +
mov dword_4F2714[eax] offset loc_45F840 +
mov dword_4F26F8 1 +
retn   +
***
cmp dword_4F2700 0 +
jnz locret_4609C4  +
call sub_45FC50  +
mov ecx dword_4F26FC +
cmp ecx 0Fh +
jge loc_4609BA  +
mov eax ecx +
inc ecx  +
shl eax 4 +
mov dword_4F26FC ecx +
mov dword_4F27F8[eax] offset sub_410B20 +
mov dword_4F27FC[eax] offset dword_45F570 +
mov dword_4F2800[eax] offset loc_45F730 +
mov dword_4F2804[eax] offset loc_45F4A0 +
cmp ecx 0Fh +
jge loc_4609BA  +
mov eax ecx +
shl eax 4 +
inc ecx  +
mov dword_4F26FC ecx +
mov dword_4F27F8[eax] offset loc_45FA90 +
mov dword_4F27FC[eax] offset loc_45FA80 +
mov dword_4F2800[eax] offset sub_45FB90 +
mov dword_4F2804[eax] offset loc_45F8C0 +
mov dword_4F2700 1 +
retn   +
***
xor esi esi +
call sub_465FA0  +
mov edi eax +
test edi edi +
jz loc_460AC8  +
push ebx  +
mov ebx [esp+4+arg_0] +
push ebx  +
call sub_45FD60  +
add esp 4 +
test eax eax +
jnz loc_460AC2  +
mov ecx [esp+4+arg_4] +
push ebp  +
mov ebp [esp+8+arg_8] +
test ebp ebp +
jz loc_460A2F  +
mov eax [ebp+11Ch] +
test eax eax +
jz loc_460A2F  +
cmp edi 3 +
jz loc_460A1A  +
cmp edi 2 +
jnz loc_460A2F  +
push ebx  +
push ecx  +
push eax  +
call sub_4662A0  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_460A5C  +
mov ecx [esp+8+arg_4] +
cmp edi 3 +
jz loc_460A39  +
cmp edi 1 +
jnz loc_460A49  +
push ebx  +
push ecx  +
call sub_466440  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_460A5C  +
test ebx ebx +
jz loc_460ABB  +
push ebx  +
call sub_44E600  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_460ABB  +
push esi  +
call sub_45FD60  +
add esp 4 +
test eax eax +
jnz loc_460ABB  +
test ebp ebp +
jz loc_460A91  +
mov eax [ebp+11Ch] +
test eax eax +
jz loc_460A91  +
cmp edi 3 +
jz loc_460A81  +
cmp edi 2 +
jnz loc_460A91  +
push esi  +
push eax  +
call sub_466330  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_460AAA  +
cmp edi 3 +
jz loc_460A9B  +
cmp edi 1 +
jnz loc_460ABB  +
push esi  +
call sub_466470  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_460ABB  +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov eax ebx +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push [esp+lpMultiByteStr]  +
call sub_45EEE0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_460B12  +
cmp [esp+arg_4] 0 +
mov eax offset aRb +
mov ecx offset aWb +
cmovz ecx eax +
push ecx  +
push esi  +
call sub_49C221  +
push esi  +
mov ebx eax +
call off_4EE2F4  +
add esp 0Ch +
test ebx ebx +
jz loc_460B12  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
cmp [esp+arg_4] 0 +
mov eax offset aWb_0 +
mov ecx offset aRb_0 +
cmovz eax ecx +
pop esi  +
pop ebx  +
mov [esp-8+arg_4] eax +
jmp loc_49C243  +
***
push esi  +
push edi  +
push dword ptr [esp+0Ch]  +
call sub_45EEE0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_460B63  +
push dword ptr [esp+10h]  +
push esi  +
call sub_496F96  +
push esi  +
mov edi eax +
call off_4EE2F4  +
add esp 0Ch +
test edi edi +
js loc_460B63  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
pop edi  +
pop esi  +
jmp sub_496F36  +
***
retn   +
***
lea eax [esp+arg_8] +
push eax  +
push 0  +
push [esp+8+arg_4]  +
push 0FFFFFFFFh  +
push [esp+10h+arg_0]  +
call sub_460B70  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4A0EF1  +
add esp 1Ch +
retn   +
***
cmp dword_4F28E8 0 +
jz loc_460BBD  +
or eax 0FFFFFFFFh +
retn   +
mov dword_4F28E8 1 +
call sub_45E8C0  +
push offset aXml_mem_breakp  +
mov dword_4F28F8 eax +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_460BF5  +
push offset unk_4F2900  +
push offset aUd  +
push eax  +
call sub_460B80  +
add esp 0Ch +
push offset aXml_mem_trace  +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_460C19  +
push offset unk_4F2904  +
push offset aP  +
push eax  +
call sub_460B80  +
add esp 0Ch +
xor eax eax +
retn   +
***
push ecx  +
mov edx [esp+14h] +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
mov ebp [esp+14h] +
mov ecx [edx] +
mov eax ecx +
push esi  +
mov esi [esp+14h] +
mov ebp [ebp+0] +
add ebp esi +
mov [esp+14h] esi +
push edi  +
mov edi ebx +
and eax 80000001h +
jns loc_460C50  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
cmp eax 1 +
jnz loc_460C5A  +
lea eax [ecx-1] +
mov [edx] eax +
mov eax [edx] +
mov ecx ebx +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [ecx+eax*2] +
mov [esp+10h] eax +
cmp ecx eax +
jnb loc_460D82  +
mov ecx dword_4EE66C +
test ecx ecx +
jz loc_460C8A  +
movzx eax byte ptr [edi] +
movzx edx byte ptr [edi+1] +
shl eax 8 +
or edx eax +
jmp loc_460C8D  +
movzx edx word ptr [edi] +
mov eax edx +
add edi 2 +
and eax 0FC00h +
cmp eax 0D800h +
jnz loc_460CE9  +
cmp edi [esp+10h] +
jnb loc_460D63  +
test ecx ecx +
jz loc_460CBA  +
movzx eax byte ptr [edi] +
movzx ecx byte ptr [edi+1] +
shl eax 8 +
or ecx eax +
jmp loc_460CBD  +
movzx ecx word ptr [edi] +
mov eax ecx +
add edi 2 +
and eax 0FC00h +
cmp eax 0DC00h +
jnz loc_460D63  +
and edx 3FFh +
and ecx 3FFh +
shl edx 0Ah +
or edx ecx +
add edx 10000h +
cmp esi ebp +
jnb loc_460D82  +
cmp edx 80h +
jnb loc_460D07  +
mov [esi] dl +
mov ebx edi +
inc esi  +
cmp edi [esp+10h] +
jmp loc_460C6C  +
***
mov eax edx +
cmp edx 800h +
jnb loc_460D1F  +
shr eax 6 +
and al 1Fh +
or al 0C0h +
mov [esi] al +
inc esi  +
xor ecx ecx +
jmp loc_460D44  +
cmp edx 10000h +
jnb loc_460D35  +
shr eax 0Ch +
mov ecx 6 +
and al 0Fh +
or al 0E0h +
jmp loc_460D41  +
shr eax 12h +
mov ecx 0Ch +
and al 7 +
or al 0F0h +
mov [esi] al +
inc esi  +
cmp esi ebp +
jnb loc_460D58  +
mov eax edx +
shr eax cl +
and al 3Fh +
or al 80h +
mov [esi] al +
inc esi  +
sub ecx 6 +
jns loc_460D44  +
cmp edi [esp+10h] +
mov ebx edi +
jmp loc_460C6C  +
***
mov eax [esp+1Ch] +
sub esi [esp+18h] +
sub ebx [esp+20h] +
pop edi  +
mov [eax] esi +
mov eax [esp+20h] +
pop esi  +
pop ebp  +
mov [eax] ebx +
mov eax 0FFFFFFFEh +
pop ebx  +
pop ecx  +
retn   +
***
mov ecx [esp+1Ch] +
sub esi [esp+18h] +
mov eax [esp+24h] +
sub ebx [esp+20h] +
pop edi  +
mov [ecx] esi +
pop esi  +
mov [eax] ebx +
mov eax [ecx] +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
push ecx  +
mov eax [esp+0Ch] +
mov edx [esp+14h] +
push ebx  +
push ebp  +
mov ebx [eax] +
mov ecx [edx] +
mov eax ecx +
mov ebp [esp+18h] +
push esi  +
mov esi [esp+14h] +
add ebx esi +
mov [esp+14h] esi +
push edi  +
mov edi ebp +
and eax 80000001h +
jns loc_460DCF  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
cmp eax 1 +
jnz loc_460DD9  +
lea eax [ecx-1] +
mov [edx] eax +
mov eax [edx] +
mov ecx edi +
cdq   +
sub eax edx +
sar eax 1 +
lea eax [ecx+eax*2] +
mov [esp+10h] eax +
cmp ecx eax +
jnb loc_460F16  +
mov edx [esp+1Ch] +
mov eax esi +
sub eax [esp+18h] +
mov ecx dword_4EE66C +
add eax 5 +
cmp eax [edx] +
jge loc_460F16  +
test ecx ecx +
jz loc_460E15  +
movzx edx word ptr [edi] +
jmp loc_460E21  +
movzx edx byte ptr [edi+1] +
movzx eax byte ptr [edi] +
shl edx 8 +
or edx eax +
mov eax edx +
add edi 2 +
and eax 0FC00h +
cmp eax 0D800h +
jnz loc_460E7D  +
cmp edi [esp+10h] +
jnb loc_460F16  +
test ecx ecx +
jz loc_460E45  +
movzx ecx word ptr [edi] +
jmp loc_460E51  +
movzx ecx byte ptr [edi+1] +
movzx eax byte ptr [edi] +
shl ecx 8 +
or ecx eax +
mov eax ecx +
add edi 2 +
and eax 0FC00h +
cmp eax 0DC00h +
jnz loc_460EF7  +
and edx 3FFh +
and ecx 3FFh +
shl edx 0Ah +
or edx ecx +
add edx 10000h +
cmp esi ebx +
jnb loc_460F16  +
cmp edx 80h +
jnb loc_460E9B  +
mov [esi] dl +
mov ebp edi +
inc esi  +
cmp edi [esp+10h] +
jmp loc_460DEB  +
***
mov eax edx +
cmp edx 800h +
jnb loc_460EB3  +
shr eax 6 +
and al 1Fh +
or al 0C0h +
mov [esi] al +
inc esi  +
xor ecx ecx +
jmp loc_460ED8  +
cmp edx 10000h +
jnb loc_460EC9  +
shr eax 0Ch +
mov ecx 6 +
and al 0Fh +
or al 0E0h +
jmp loc_460ED5  +
shr eax 12h +
mov ecx 0Ch +
and al 7 +
or al 0F0h +
mov [esi] al +
inc esi  +
cmp esi ebx +
jnb loc_460EEC  +
mov eax edx +
shr eax cl +
and al 3Fh +
or al 80h +
mov [esi] al +
inc esi  +
sub ecx 6 +
jns loc_460ED8  +
cmp edi [esp+10h] +
mov ebp edi +
jmp loc_460DEB  +
***
mov eax [esp+1Ch] +
sub esi [esp+18h] +
mov ecx [esp+24h] +
sub ebp [esp+20h] +
pop edi  +
mov [eax] esi +
mov eax 0FFFFFFFEh +
pop esi  +
mov [ecx] ebp +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [esp+1Ch] +
sub esi [esp+18h] +
mov ecx [esp+24h] +
sub ebp [esp+20h] +
pop edi  +
mov [eax] esi +
pop esi  +
mov [ecx] ebp +
mov eax [eax] +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [esp+0Ch] +
test eax eax +
jnz loc_460F83  +
mov ecx [esp+8] +
cmp dword ptr [ecx] 2 +
jl loc_460F70  +
mov eax [esp+4] +
mov word ptr [eax] 0FEFFh +
mov eax [esp+10h] +
mov dword ptr [ecx] 2 +
mov dword ptr [eax] 0 +
mov eax 2 +
retn   +
***
mov eax [esp+10h] +
mov dword ptr [ecx] 0 +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
mov [esp+0Ch] eax +
jmp loc_461190  +
sub esp 10h +
push ebx  +
push ebp  +
mov ebp [esp+1Ch] +
push esi  +
mov esi ebp +
mov [esp+0Ch] esi +
push edi  +
mov edi [esp+2Ch] +
mov ebx edi +
mov [esp+2Ch] ebx +
mov [esp+14h] edi +
test ebp ebp +
jz loc_461182  +
mov eax [esp+28h] +
test eax eax +
jz loc_461182  +
mov ecx [esp+30h] +
test ecx ecx +
jz loc_461182  +
test edi edi +
jnz loc_460FE1  +
mov [eax] edi +
xor eax eax +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov eax [eax] +
mov ecx [ecx] +
cdq   +
add ecx edi +
sub eax edx +
mov [esp+1Ch] ecx +
sar eax 1 +
lea eax ds:0[eax*2] +
add eax ebp +
mov [esp+18h] eax +
cmp edi ecx +
jnb loc_461140  +
mov ebp esi +
mov edx ebx +
add ebp 2 +
movzx eax byte ptr [edi] +
inc edi  +
cmp eax 80h +
jnb loc_46101F  +
xor ebx ebx +
jmp loc_46105F  +
cmp eax 0C0h +
jb loc_46115F  +
cmp eax 0E0h +
jnb loc_46103B  +
and eax 1Fh +
mov ebx 1 +
jmp loc_46105F  +
cmp eax 0F0h +
jnb loc_46104C  +
and eax 0Fh +
mov ebx 2 +
jmp loc_46105F  +
cmp eax 0F8h +
jnb loc_46115F  +
and eax 7 +
mov ebx 3 +
sub ecx edi +
cmp ecx ebx +
jl loc_461138  +
test ebx ebx +
jz loc_461094  +
mov esi [esp+1Ch] +
cmp edi esi +
jnb loc_461090  +
movzx edx byte ptr [edi] +
inc edi  +
mov ecx edx +
and cl 0C0h +
cmp cl 80h +
jnz loc_461090  +
and edx 3Fh +
shl eax 6 +
or eax edx +
sub ebx 1 +
jnz loc_461071  +
mov esi [esp+10h] +
cmp eax 10000h +
jnb loc_4610CB  +
cmp esi [esp+18h] +
jnb loc_461138  +
cmp dword_4EE66C 0 +
jz loc_4610C0  +
mov ecx eax +
mov [esi+1] al +
shr ecx 8 +
mov [esi] cl +
add esi 2 +
add ebp 2 +
jmp loc_461122  +
mov [esi] ax +
add esi 2 +
add ebp 2 +
jmp loc_461122  +
cmp eax 110000h +
jnb loc_461138  +
cmp ebp [esp+18h] +
jnb loc_461138  +
sub eax 10000h +
mov ecx eax +
and eax 3FFh +
shr ecx 0Ah +
or eax 0DC00h +
or ecx 0D800h +
cmp dword_4EE66C 0 +
jz loc_461115  +
movzx edx cx +
mov ecx edx +
mov [esi+1] dl +
shr ecx 8 +
mov [esi] cl +
mov ecx eax +
shr ecx 8 +
mov [esi+2] cl +
mov [esi+3] al +
jmp loc_46111C  +
mov [esi] cx +
mov [esi+2] ax +
add esi 4 +
add ebp 4 +
mov ecx [esp+1Ch] +
mov edx edi +
mov [esp+10h] esi +
mov [esp+2Ch] edx +
cmp edi ecx +
jb loc_461010  +
mov ebx [esp+2Ch] +
mov ebp [esp+24h] +
mov eax [esp+28h] +
sub esi ebp +
mov ecx [esp+30h] +
and esi 0FFFFFFFEh +
sub ebx [esp+14h] +
pop edi  +
mov [eax] esi +
pop esi  +
mov [ecx] ebx +
mov eax [eax] +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
sub esi [esp+24h] +
mov eax [esp+28h] +
mov ecx [esp+30h] +
sar esi 1 +
sub edx [esp+14h] +
pop edi  +
mov [eax] esi +
mov eax 0FFFFFFFEh +
pop esi  +
pop ebp  +
mov [ecx] edx +
pop ebx  +
add esp 10h +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 10h +
retn   +
***
sub esp 10h +
push ebx  +
push ebp  +
mov ebp [esp+1Ch] +
push esi  +
mov esi ebp +
mov [esp+0Ch] esi +
push edi  +
mov edi [esp+2Ch] +
mov ebx edi +
mov [esp+2Ch] ebx +
mov [esp+14h] edi +
test ebp ebp +
jz loc_46137D  +
mov eax [esp+28h] +
test eax eax +
jz loc_46137D  +
mov ecx [esp+30h] +
test ecx ecx +
jz loc_46137D  +
test edi edi +
jnz loc_4611E1  +
mov [eax] edi +
xor eax eax +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
mov eax [eax] +
mov ecx [ecx] +
cdq   +
add ecx edi +
sub eax edx +
mov [esp+1Ch] ecx +
sar eax 1 +
lea eax ds:0[eax*2] +
add eax ebp +
mov [esp+18h] eax +
cmp edi ecx +
jnb loc_46133A  +
mov ebp esi +
mov edx ebx +
add ebp 2 +
movzx eax byte ptr [edi] +
inc edi  +
cmp eax 80h +
jnb loc_46121F  +
xor ebx ebx +
jmp loc_46125F  +
cmp eax 0C0h +
jb loc_461359  +
cmp eax 0E0h +
jnb loc_46123B  +
and eax 1Fh +
mov ebx 1 +
jmp loc_46125F  +
cmp eax 0F0h +
jnb loc_46124C  +
and eax 0Fh +
mov ebx 2 +
jmp loc_46125F  +
cmp eax 0F8h +
jnb loc_461359  +
and eax 7 +
mov ebx 3 +
sub ecx edi +
cmp ecx ebx +
jl loc_461332  +
test ebx ebx +
jz loc_461294  +
mov esi [esp+1Ch] +
cmp edi esi +
jnb loc_461290  +
movzx edx byte ptr [edi] +
inc edi  +
mov ecx edx +
and cl 0C0h +
cmp cl 80h +
jnz loc_461290  +
and edx 3Fh +
shl eax 6 +
or eax edx +
sub ebx 1 +
jnz loc_461271  +
mov esi [esp+10h] +
cmp eax 10000h +
jnb loc_4612C9  +
cmp esi [esp+18h] +
jnb loc_461332  +
cmp dword_4EE66C 0 +
jz loc_4612B9  +
mov [esi] ax +
add esi 2 +
add ebp 2 +
jmp loc_46131C  +
mov [esi] al +
shr eax 8 +
mov [esi+1] al +
add esi 2 +
add ebp 2 +
jmp loc_46131C  +
cmp eax 110000h +
jnb loc_461332  +
cmp ebp [esp+18h] +
jnb loc_461332  +
sub eax 10000h +
mov ecx eax +
and eax 3FFh +
shr ecx 0Ah +
or eax 0DC00h +
or ecx 0D800h +
cmp dword_4EE66C 0 +
jz loc_461302  +
mov [esi] cx +
mov [esi+2] ax +
jmp loc_461316  +
movzx ecx cx +
mov [esi] cl +
shr ecx 8 +
mov [esi+1] cl +
mov [esi+2] al +
shr eax 8 +
mov [esi+3] al +
add esi 4 +
add ebp 4 +
mov ecx [esp+1Ch] +
mov edx edi +
mov [esp+10h] esi +
mov [esp+2Ch] edx +
cmp edi ecx +
jb loc_461210  +
mov ebx [esp+2Ch] +
mov ebp [esp+24h] +
mov eax [esp+28h] +
sub esi ebp +
mov ecx [esp+30h] +
and esi 0FFFFFFFEh +
sub ebx [esp+14h] +
pop edi  +
mov [eax] esi +
pop esi  +
mov [ecx] ebx +
mov eax [eax] +
pop ebp  +
pop ebx  +
add esp 10h +
retn   +
***
sub esi [esp+24h] +
mov eax [esp+28h] +
and esi 0FFFFFFFEh +
mov ecx [esp+30h] +
sub edx [esp+14h] +
pop edi  +
mov [eax] esi +
mov eax 0FFFFFFFEh +
pop esi  +
pop ebp  +
mov [ecx] edx +
pop ebx  +
add esp 10h +
retn   +
***
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 10h +
retn   +
***
mov ecx [esp+4] +
push ebx  +
push edi  +
test ecx ecx +
jz loc_4613DA  +
mov edx [esp+14h] +
test edx edx +
jz loc_4613DA  +
mov edi [esp+10h] +
test edi edi +
jz loc_4613DA  +
mov ebx [esp+18h] +
test ebx ebx +
jz loc_4613DA  +
push esi  +
mov esi [edi] +
cmp esi [ebx] +
cmovg esi [ebx] +
test esi esi +
jns loc_4613C5  +
pop esi  +
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push edx  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
mov [edi] esi +
mov [ebx] esi +
mov eax [edi] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
pop edi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
sub esp 8 +
mov edx [esp+14h] +
push ebx  +
mov ebx [esp+10h] +
mov [esp+18h] ebx +
mov [esp+10h] edx +
push esi  +
mov esi edx +
mov [esp+8] esi +
push edi  +
test ebx ebx +
jz loc_461520  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_461520  +
mov edi [esp+24h] +
test edi edi +
jz loc_461520  +
test edx edx +
jnz loc_46142D  +
mov [ecx] edx +
xor eax eax +
mov [edi] edx +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [ecx] +
push ebp  +
mov ebp [edi] +
add eax ebx +
add ebp edx +
mov [esp+14h] eax +
cmp edx ebp +
jnb loc_4614E9  +
movzx eax byte ptr [edx] +
inc edx  +
cmp eax 80h +
jnb loc_461451  +
xor edi edi +
jmp loc_46148D  +
cmp eax 0C0h +
jb loc_4614FF  +
cmp eax 0E0h +
jnb loc_46146D  +
and eax 1Fh +
mov edi 1 +
jmp loc_46148D  +
cmp eax 0F0h +
jnb loc_46147E  +
and eax 0Fh +
mov edi 2 +
jmp loc_46148D  +
cmp eax 0F8h +
jnb loc_4614FF  +
and eax 7 +
mov edi 3 +
mov ecx ebp +
sub ecx edx +
cmp ecx edi +
jl loc_4614E1  +
test edi edi +
jz loc_4614C3  +
cmp edx ebp +
jnb loc_4614BF  +
movzx esi byte ptr [edx] +
inc edx  +
mov ecx esi +
and cl 0C0h +
cmp cl 80h +
jnz loc_4614BF  +
and esi 3Fh +
shl eax 6 +
or eax esi +
sub edi 1 +
jnz loc_4614A0  +
mov esi [esp+10h] +
cmp eax 80h +
jnb loc_4614FF  +
cmp ebx [esp+14h] +
jnb loc_4614E1  +
mov [ebx] al +
mov esi edx +
inc ebx  +
mov [esp+10h] esi +
cmp edx ebp +
jb loc_461442  +
mov ecx [esp+20h] +
mov edi [esp+28h] +
sub ebx [esp+24h] +
sub esi [esp+1Ch] +
mov [ecx] ebx +
pop ebp  +
mov [edi] esi +
mov eax [ecx] +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [esp+20h] +
sub ebx [esp+24h] +
sub esi [esp+1Ch] +
pop ebp  +
mov [eax] ebx +
mov eax [esp+24h] +
pop edi  +
mov [eax] esi +
mov eax 0FFFFFFFEh +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 8 +
mov edx [esp+14h] +
push ebx  +
mov ebx [esp+10h] +
mov [esp+18h] ebx +
mov [esp+10h] edx +
push esi  +
mov esi edx +
mov [esp+8] esi +
push edi  +
test ebx ebx +
jz loc_461695  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_461695  +
mov edi [esp+24h] +
test edi edi +
jz loc_461695  +
test edx edx +
jnz loc_46157D  +
mov [ecx] edx +
xor eax eax +
mov [edi] edx +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [ecx] +
push ebp  +
mov ebp [edi] +
add eax ebx +
add ebp edx +
mov [esp+14h] eax +
cmp edx ebp +
jnb loc_461639  +
movzx eax byte ptr [edx] +
inc edx  +
cmp eax 80h +
jnb loc_4615A1  +
xor edi edi +
jmp loc_4615E1  +
cmp eax 0C0h +
jb loc_461674  +
cmp eax 0E0h +
jnb loc_4615BD  +
and eax 1Fh +
mov edi 1 +
jmp loc_4615E1  +
cmp eax 0F0h +
jnb loc_4615CE  +
and eax 0Fh +
mov edi 2 +
jmp loc_4615E1  +
cmp eax 0F8h +
jnb loc_461674  +
and eax 7 +
mov edi 3 +
mov ecx ebp +
sub ecx edx +
cmp ecx edi +
jl loc_461631  +
test edi edi +
jz loc_461613  +
cmp edx ebp +
jnb loc_46160F  +
movzx esi byte ptr [edx] +
inc edx  +
mov ecx esi +
and cl 0C0h +
cmp cl 80h +
jnz loc_46164F  +
and esi 3Fh +
shl eax 6 +
or eax esi +
sub edi 1 +
jnz loc_4615F0  +
mov esi [esp+10h] +
cmp eax 0FFh +
ja loc_461674  +
cmp ebx [esp+14h] +
jnb loc_461631  +
mov [ebx] al +
mov esi edx +
inc ebx  +
mov [esp+10h] esi +
cmp edx ebp +
jb loc_461592  +
mov ecx [esp+20h] +
mov edi [esp+28h] +
sub ebx [esp+24h] +
sub esi [esp+1Ch] +
mov [ecx] ebx +
pop ebp  +
mov [edi] esi +
mov eax [ecx] +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [esp+20h] +
sub ebx [esp+24h] +
mov ecx [esp+28h] +
pop ebp  +
mov [eax] ebx +
mov eax [esp+0Ch] +
sub eax [esp+18h] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax 0FFFFFFFEh +
pop ebx  +
add esp 8 +
retn   +
***
mov eax [esp+20h] +
sub ebx [esp+24h] +
mov ecx [esp+28h] +
sub esi [esp+1Ch] +
pop ebp  +
mov [eax] ebx +
mov eax 0FFFFFFFEh +
pop edi  +
mov [ecx] esi +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 8 +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
push ebx  +
mov ebx [esp+14h] +
push ebp  +
push esi  +
push edi  +
mov edi [esp+18h] +
mov esi edx +
mov ebx [ebx] +
add ebx edx +
mov [esp+14h] eax +
mov [esp+1Ch] edx +
mov ecx [edi] +
add ecx eax +
mov [esp+18h] ecx +
cmp edx ebx +
jnb loc_4616F7  +
mov ebp 5 +
sub ebp eax +
lea ecx [eax+ebp] +
cmp ecx [edi] +
jge loc_4616F7  +
movzx ecx byte ptr [edx] +
inc edx  +
cmp eax [esp+18h] +
jnb loc_4616F7  +
cmp ecx 80h +
jnb loc_46170E  +
mov [eax] cl +
mov esi edx +
inc eax  +
cmp edx ebx +
jb loc_4616D5  +
sub eax [esp+14h] +
sub esi [esp+1Ch] +
mov [edi] eax +
mov eax [esp+20h] +
mov [eax] esi +
mov eax [edi] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub eax [esp+14h] +
sub esi [esp+1Ch] +
mov [edi] eax +
mov eax [esp+20h] +
pop edi  +
mov [eax] esi +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov ecx [esp+arg_0] +
test ecx ecx +
jnz loc_46182C  +
or eax 0FFFFFFFFh +
retn   +
cmp dword ptr [ecx] 0 +
jz loc_461828  +
mov edx dword_4F291C +
test edx edx +
jz loc_461853  +
push esi  +
mov esi dword_4F2920 +
xor eax eax +
test esi esi +
jle loc_461852  +
cmp ecx [edx+eax*4] +
jz loc_461852  +
inc eax  +
cmp eax esi +
jl loc_461848  +
pop esi  +
xor eax eax +
retn   +
***
sub esp 44h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+44h+var_4] eax +
push ebx  +
mov ebx [esp+48h+arg_0] +
push ebp  +
push esi  +
mov esi 0FFFFFFFEh +
test ebx ebx +
jz loc_4619F9  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_4619F9  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_4619F9  +
mov eax [ebx+14h] +
mov [esp+50h+var_3C] eax +
test eax eax +
jz loc_4619F9  +
push edi  +
push eax  +
call sub_45E180  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_4618C9  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
push ebp  +
call sub_45D5F0  +
mov ecx [esp+58h+arg_4] +
add esp 4 +
dec eax  +
test ecx ecx +
js loc_4618E3  +
cmp edi ecx +
jbe loc_4618ED  +
mov edi ecx +
jmp loc_4618ED  +
mov ecx 0B4h +
cmp edi ecx +
cmova edi ecx +
lea ecx [edi+edi] +
cmp ecx eax +
jb loc_461905  +
push ecx  +
push ebp  +
call sub_45DB80  +
push ebp  +
call sub_45D5F0  +
add esp 0Ch +
dec eax  +
mov ebx [ebx+0Ch] +
mov ecx 168h +
cmp eax ecx +
mov [esp+54h+var_44] edi +
mov edi [esp+54h+var_3C] +
cmova eax ecx +
mov [esp+54h+var_40] eax +
cmp dword ptr [ebx+4] 0 +
jz loc_46199E  +
lea eax [esp+54h+var_44] +
push eax  +
push edi  +
call sub_45D810  +
add esp 4 +
push eax  +
lea eax [esp+5Ch+var_40] +
push eax  +
push ebp  +
call sub_45DA10  +
add esp 4 +
push eax  +
mov eax [ebx+4] +
call eax  +
push [esp+64h+var_44]  +
mov esi eax +
push edi  +
call sub_45E0A0  +
push [esp+6Ch+var_40]  +
push ebp  +
call sub_45D570  +
add esp 20h +
cmp esi 0FFFFFFFEh +
jz loc_46199E  +
cmp esi 0FFFFFFFDh +
jnz loc_461981  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
xor eax eax +
cmp esi 0FFFFFFFFh +
pop edi  +
cmovz esi eax +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
push edi  +
call sub_45D810  +
movzx ecx byte ptr [eax+3] +
push ecx  +
movzx ecx byte ptr [eax+2] +
push ecx  +
movzx ecx byte ptr [eax+1] +
movzx eax byte ptr [eax] +
push ecx  +
push eax  +
push offset a0x02x0x02x0x02  +
lea eax [esp+6Ch+var_38] +
push 31h  +
push eax  +
call sub_4213C0  +
lea eax [esp+74h+var_38] +
mov [esp+74h+var_7] 0 +
push eax  +
push offset aInputConversio  +
push 1773h  +
call sub_461FD0  +
add esp 2Ch +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov ecx [esp+50h+var_4] +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
***
sub esp 44h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+44h+var_4] eax +
push ebx  +
mov ebx [esp+48h+arg_0] +
push ebp  +
push esi  +
mov esi 0FFFFFFFEh +
test ebx ebx +
jz loc_461BAC  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_461BAC  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_461BAC  +
mov eax [ebx+14h] +
mov [esp+50h+var_3C] eax +
test eax eax +
jz loc_461BAC  +
push edi  +
push eax  +
call sub_45E180  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_461A79  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
cmp edi 10000h +
jbe loc_461A8E  +
cmp [esp+54h+arg_4] 0 +
mov eax 10000h +
cmovz edi eax +
push ebp  +
call sub_45D5F0  +
add esp 4 +
test eax eax +
jz loc_461A9C  +
dec eax  +
lea ecx [edi+edi] +
cmp ecx eax +
jb loc_461AB8  +
push ecx  +
push ebp  +
call sub_45DB80  +
push ebp  +
call sub_45D5F0  +
add esp 0Ch +
test eax eax +
jz loc_461AB8  +
dec eax  +
cmp eax 20000h +
jbe loc_461ACC  +
cmp [esp+54h+arg_4] 0 +
mov ecx 20000h +
cmovz eax ecx +
mov ebx [ebx+0Ch] +
mov [esp+54h+var_40] edi +
mov edi [esp+54h+var_3C] +
mov [esp+54h+var_44] eax +
cmp dword ptr [ebx+4] 0 +
jz loc_461B48  +
lea eax [esp+54h+var_40] +
push eax  +
push edi  +
call sub_45D810  +
add esp 4 +
push eax  +
lea eax [esp+5Ch+var_44] +
push eax  +
push ebp  +
call sub_45DA10  +
add esp 4 +
push eax  +
mov eax [ebx+4] +
call eax  +
push [esp+64h+var_40]  +
mov esi eax +
push edi  +
call sub_45E0A0  +
push [esp+6Ch+var_44]  +
push ebp  +
call sub_45D570  +
add esp 20h +
cmp esi 0FFFFFFFEh +
jz loc_461B48  +
xor eax eax +
cmp esi 0FFFFFFFDh +
pop edi  +
cmovz esi eax +
mov eax [esp+50h+var_44] +
test eax eax +
cmovnz esi eax +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
push edi  +
call sub_45D810  +
movzx ecx byte ptr [eax+3] +
push ecx  +
movzx ecx byte ptr [eax+2] +
push ecx  +
movzx ecx byte ptr [eax+1] +
movzx eax byte ptr [eax] +
push ecx  +
push eax  +
push offset a0x02x0x02x0x02  +
lea eax [esp+6Ch+var_38] +
push 31h  +
push eax  +
call sub_4213C0  +
lea eax [esp+74h+var_38] +
mov [esp+74h+var_7] 0 +
push eax  +
push offset aInputConversio  +
push 1773h  +
call sub_461FD0  +
mov eax [esp+80h+var_44] +
add esp 2Ch +
test eax eax +
cmovnz esi eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+44h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
mov ecx [esp+50h+var_4] +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 44h +
retn   +
***
sub esp 64h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+64h+var_4] eax +
push ebx  +
mov ebx [esp+68h+arg_0] +
xor eax eax +
mov [esp+68h+var_58] ebx +
mov [esp+68h+var_5C] eax +
push ebp  +
push edi  +
test ebx ebx +
jz loc_461E7F  +
cmp [ebx+0Ch] eax +
jz loc_461E7F  +
mov edi [ebx+10h] +
test edi edi +
jz loc_461E7F  +
mov ebp [ebx+14h] +
test ebp ebp +
jz loc_461E7F  +
push esi  +
push ebp  +
call sub_45D5F0  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_461C27  +
dec esi  +
cmp [esp+74h+arg_4] 0 +
jnz loc_461E26  +
push edi  +
call sub_45E180  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_461E6A  +
cmp ebx 10000h +
mov eax 10000h +
cmova ebx eax +
lea eax ds:0[ebx*4] +
cmp eax esi +
jb loc_461C71  +
push eax  +
push ebp  +
call sub_45DB80  +
push ebp  +
call sub_45D5F0  +
add esp 0Ch +
lea esi [eax-1] +
cmp esi 40000h +
mov [esp+74h+var_60] ebx +
mov ebx [esp+74h+var_58] +
mov eax 40000h +
cmova esi eax +
mov [esp+74h+var_64] esi +
mov esi [ebx+0Ch] +
cmp dword ptr [esi+8] 0 +
jz loc_461DFC  +
lea eax [esp+74h+var_60] +
push eax  +
push edi  +
call sub_45D810  +
add esp 4 +
push eax  +
lea eax [esp+7Ch+var_64] +
push eax  +
push ebp  +
call sub_45DA10  +
add esp 4 +
push eax  +
mov eax [esi+8] +
call eax  +
add esp 10h +
mov esi eax +
cmp [esp+74h+var_64] 0 +
jle loc_461CDE  +
push [esp+74h+var_60]  +
push edi  +
call sub_45E0A0  +
push [esp+7Ch+var_64]  +
push ebp  +
call sub_45D570  +
add esp 10h +
test esi esi +
js loc_461CED  +
mov eax esi +
shl eax 5 +
add ebx eax +
mov [esp+74h+var_58] ebx +
cmp esi 0FFFFFFFEh +
jnz loc_461DE7  +
push edi  +
call sub_45E180  +
push edi  +
mov [esp+7Ch+var_54] eax +
call sub_45D810  +
lea ecx [esp+7Ch+var_54] +
mov [esp+7Ch+var_50] eax +
push ecx  +
push eax  +
call sub_44E240  +
mov edx [esp+84h+var_5C] +
add esp 10h +
test edx edx +
jz loc_461D28  +
mov ecx [esp+74h+var_64] +
cmp ecx edx +
jl loc_461D61  +
test eax eax +
jle loc_461D92  +
push eax  +
push offset aD_0  +
lea eax [esp+7Ch+var_4C] +
push 14h  +
push eax  +
call sub_4213C0  +
push [esp+84h+var_54]  +
mov [esp+88h+var_5C] eax +
push edi  +
call sub_45E0A0  +
push 0FFFFFFFFh  +
lea eax [esp+90h+var_4C] +
push eax  +
push edi  +
call sub_45D430  +
add esp 24h +
jmp loc_461C17  +
push ecx  +
push ebp  +
call sub_45DA50  +
mov eax [esp+7Ch+var_5C] +
sub eax [esp+7Ch+var_64] +
push eax  +
push edi  +
call sub_45E0A0  +
add esp 10h +
or esi 0FFFFFFFFh +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+64h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 64h +
retn   +
mov ebx [esp+74h+var_50] +
movzx eax byte ptr [ebx+3] +
push eax  +
movzx eax byte ptr [ebx+2] +
push eax  +
movzx eax byte ptr [ebx+1] +
push eax  +
movzx eax byte ptr [ebx] +
push eax  +
push offset a0x02x0x02x0x02  +
lea eax [esp+88h+var_38] +
push 31h  +
push eax  +
call sub_4213C0  +
lea eax [esp+90h+var_38] +
mov [esp+90h+var_7] 0 +
push eax  +
push offset aOutputConversi  +
push 1773h  +
call sub_461FD0  +
push edi  +
call sub_45DB70  +
add esp 2Ch +
cmp eax 2 +
jz loc_461DE7  +
mov byte ptr [ebx] 20h +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+64h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 64h +
retn   +
push 0  +
push offset aXmlcharencoutf  +
push 1774h  +
call sub_461FD0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
mov ecx [esp+64h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 64h +
retn   +
mov [esp+74h+var_60] 0 +
mov [esp+74h+var_64] esi +
mov esi [ebx+0Ch] +
cmp dword ptr [esi+8] 0 +
jz loc_461E6A  +
lea eax [esp+74h+var_60] +
push eax  +
push 0  +
lea eax [esp+7Ch+var_64] +
push eax  +
push ebp  +
call sub_45DA10  +
add esp 4 +
push eax  +
mov eax [esi+8] +
call eax  +
add esp 10h +
test eax eax +
jle loc_461E6A  +
push [esp+74h+var_64]  +
push ebp  +
call sub_45D570  +
add esp 8 +
pop esi  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+64h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 64h +
retn   +
mov ecx [esp+70h+var_4] +
or eax 0FFFFFFFFh +
pop edi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 64h +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_461EA9  +
retn   +
mov edx [esp+arg_4] +
push ebx  +
cmp edx 4 +
jl loc_461F82  +
mov cl [eax] +
test cl cl +
jnz loc_461ED4  +
cmp [eax+1] cl +
jnz loc_461ED4  +
cmp [eax+2] cl +
jnz loc_461ED4  +
cmp byte ptr [eax+3] 3Ch +
jnz loc_461ED4  +
mov eax 5 +
pop ebx  +
retn   +
cmp cl 3Ch +
jnz loc_461EF2  +
cmp byte ptr [eax+1] 0 +
jnz loc_461EF2  +
cmp byte ptr [eax+2] 0 +
jnz loc_461EF2  +
cmp byte ptr [eax+3] 0 +
jnz loc_461EF2  +
mov eax 4 +
pop ebx  +
retn   +
test cl cl +
jnz loc_461F27  +
mov bl [eax+1] +
test bl bl +
jnz loc_461F0F  +
cmp byte ptr [eax+2] 3Ch +
jnz loc_461F0F  +
cmp [eax+3] bl +
jnz loc_461F0F  +
mov eax 7 +
pop ebx  +
retn   +
cmp bl 3Ch +
jnz loc_461F27  +
cmp byte ptr [eax+2] 0 +
jnz loc_461F27  +
cmp byte ptr [eax+3] 0 +
jnz loc_461F27  +
mov eax 8 +
pop ebx  +
retn   +
cmp cl 4Ch +
jnz loc_461F45  +
cmp byte ptr [eax+1] 6Fh +
jnz loc_461F45  +
cmp byte ptr [eax+2] 0A7h +
jnz loc_461F45  +
cmp byte ptr [eax+3] 94h +
jnz loc_461F45  +
mov eax 6 +
pop ebx  +
retn   +
cmp cl 3Ch +
jnz loc_461F6D  +
mov bl [eax+1] +
cmp bl 3Fh +
jnz loc_461F5E  +
cmp byte ptr [eax+2] 78h +
jnz loc_461F5E  +
cmp byte ptr [eax+3] 6Dh +
jz loc_461F98  +
test bl bl +
jnz loc_461F6D  +
cmp byte ptr [eax+2] 3Fh +
jnz loc_461F6D  +
cmp [eax+3] bl +
jz loc_461FC3  +
test cl cl +
jnz loc_461F82  +
cmp byte ptr [eax+1] 3Ch +
jnz loc_461F82  +
cmp [eax+2] cl +
jnz loc_461F82  +
cmp byte ptr [eax+3] 3Fh +
jz loc_461FB1  +
cmp edx 3 +
jl loc_461F9F  +
cmp byte ptr [eax] 0EFh +
jnz loc_461F9F  +
cmp byte ptr [eax+1] 0BBh +
jnz loc_461F9F  +
cmp byte ptr [eax+2] 0BFh +
jnz loc_461F9F  +
mov eax 1 +
pop ebx  +
retn   +
cmp edx 2 +
jl loc_461FCA  +
mov cl [eax] +
cmp cl 0FEh +
jnz loc_461FB8  +
cmp byte ptr [eax+1] 0FFh +
jnz loc_461FB8  +
mov eax 3 +
pop ebx  +
retn   +
cmp cl 0FFh +
jnz loc_461FCA  +
cmp byte ptr [eax+1] 0FEh +
jnz loc_461FCA  +
mov eax 2 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+arg_8] +
push eax  +
push [esp+4+arg_4]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 3  +
push [esp+28h+arg_0]  +
push 1Bh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
sub esp 68h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+64h] eax +
push ebx  +
push ebp  +
mov ebp [esp+74h] +
push esi  +
push edi  +
cmp dword_4F291C 0 +
jnz loc_462034  +
call sub_462540  +
test ebp ebp +
jz loc_46215A  +
cmp byte ptr [ebp+0] 0 +
jz loc_46215A  +
push ebp  +
call loc_462450  +
add esp 4 +
mov edi ebp +
test eax eax +
cmovnz edi eax +
lea eax [esp+10h] +
mov ebx edi +
xor esi esi +
sub ebx eax +
lea eax [ebx+esi] +
movsx eax byte ptr [esp+eax+10h] +
push eax  +
call sub_49AE3F  +
add esp 4 +
mov [esp+esi+10h] al +
test al al +
jz loc_46207F  +
inc esi  +
cmp esi 63h +
jl loc_462060  +
cmp esi 64h +
jnb loc_462172  +
mov eax dword_4F291C +
mov byte ptr [esp+esi+10h] 0 +
test eax eax +
jz loc_4620E3  +
mov ebx dword_4F2920 +
xor esi esi +
test ebx ebx +
jle loc_4620E3  +
mov eax [eax+esi*4] +
lea ecx [esp+10h] +
mov eax [eax] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_4620D0  +
test dl dl +
jz loc_4620CC  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_4620D0  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_4620B0  +
xor eax eax +
jmp loc_4620D5  +
sbb eax eax +
or eax 1 +
test eax eax +
mov eax dword_4F291C +
jz loc_462144  +
inc esi  +
cmp esi ebx +
jl loc_4620A2  +
push ebp  +
call loc_462790  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_46212F  +
push eax  +
call sub_462370  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_46212F  +
mov ecx ebp +
mov al [edi] +
cmp al [ecx] +
jnz loc_462122  +
test al al +
jz loc_46211E  +
mov al [edi+1] +
cmp al [ecx+1] +
jnz loc_462122  +
add edi 2 +
add ecx 2 +
test al al +
jnz loc_462102  +
xor eax eax +
jmp loc_462127  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462026  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+64h] +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
mov eax [eax+esi*4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+64h] +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
mov ecx [esp+74h] +
mov eax dword_4F2924 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
call sub_48927F  +
cmp dword_4F291C 0 +
jnz loc_46218E  +
call sub_462540  +
mov eax [esp+arg_0] +
inc eax  +
cmp eax 16h +
ja loc_462304  +
jmp ds:off_462308[eax*4]  +
mov eax dword_4F2908 +
retn   +
mov eax dword_4F290C +
retn   +
push offset aEbcdic  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aEbcdic_0  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aEbcdicUs  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aIbm037  +
call loc_462010  +
add esp 4 +
test eax eax +
jz loc_462304  +
retn   +
push offset aIso10646Ucs4  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aUcs4  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aUcs4_0  +
jmp loc_4621F3  +
push offset aIso10646Ucs2  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aUcs2_0  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aUcs2  +
jmp loc_4621F3  +
push offset aIso88591  +
jmp loc_4621F3  +
push offset aIso88592  +
jmp loc_4621F3  +
push offset aIso88593  +
jmp loc_4621F3  +
push offset aIso88594  +
jmp loc_4621F3  +
push offset aIso88595  +
jmp loc_4621F3  +
push offset aIso88596  +
jmp loc_4621F3  +
push offset aIso88597  +
jmp loc_4621F3  +
push offset aIso88598  +
jmp loc_4621F3  +
push offset aIso88599  +
jmp loc_4621F3  +
push offset aIso2022Jp  +
jmp loc_4621F3  +
push offset aShiftJis  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aShift_jis_0  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
push offset aShift_jis  +
jmp loc_4621F3  +
push offset aEucJp  +
call loc_462010  +
add esp 4 +
test eax eax +
jnz locret_462306  +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
inc eax  +
cmp eax 17h +
ja loc_4623E7  +
jmp ds:off_4623EC[eax*4]  +
mov eax offset aUtf8 +
retn   +
mov eax offset aUtf16 +
retn   +
mov eax offset aEbcdic +
retn   +
mov eax offset aIso10646Ucs4 +
retn   +
mov eax offset aIso10646Ucs2 +
retn   +
mov eax offset aIso88591 +
retn   +
mov eax offset aIso88592 +
retn   +
mov eax offset aIso88593 +
retn   +
mov eax offset aIso88594 +
retn   +
mov eax offset aIso88595 +
retn   +
mov eax offset aIso88596 +
retn   +
mov eax offset aIso88597 +
retn   +
mov eax offset aIso88598 +
retn   +
mov eax offset aIso88599 +
retn   +
mov eax offset aIso2022Jp +
retn   +
mov eax offset aShiftJis_0 +
retn   +
mov eax offset aEucJp +
retn   +
xor eax eax +
retn   +
***
sub esp 68h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+64h] eax +
push edi  +
mov edi [esp+70h] +
test edi edi +
jnz loc_462479  +
xor eax eax +
pop edi  +
mov ecx [esp+64h] +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
cmp dword_4F2910 0 +
jz loc_462467  +
push esi  +
lea eax [esp+8] +
xor esi esi +
sub edi eax +
lea eax [edi+esi] +
movsx eax byte ptr [esp+eax+8] +
push eax  +
call sub_49AE3F  +
add esp 4 +
mov [esp+esi+8] al +
test al al +
jz loc_4624AF  +
inc esi  +
cmp esi 63h +
jl loc_462490  +
cmp esi 64h +
jnb loc_462533  +
push ebx  +
mov ebx dword_4F2914 +
mov byte ptr [esp+esi+0Ch] 0 +
xor esi esi +
push ebp  +
test ebx ebx +
jle loc_462507  +
mov ebp dword_4F2910 +
lea edi [ebp+4] +
mov ecx [edi] +
lea eax [esp+10h] +
mov dl [ecx] +
cmp dl [eax] +
jnz loc_4624F6  +
test dl dl +
jz loc_4624F2  +
mov dl [ecx+1] +
cmp dl [eax+1] +
jnz loc_4624F6  +
add ecx 2 +
add eax 2 +
test dl dl +
jnz loc_4624D6  +
xor eax eax +
jmp loc_4624FB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_46251C  +
inc esi  +
add edi 8 +
cmp esi ebx +
jl loc_4624D0  +
pop ebp  +
pop ebx  +
pop esi  +
xor eax eax +
pop edi  +
mov ecx [esp+64h] +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
mov eax [ebp+esi*8+0] +
mov ecx [esp+74h] +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
xor ecx esp +
call sub_488C1C  +
add esp 68h +
retn   +
***
call sub_48927F  +
cmp dword_4F291C 0 +
jnz locret_46262F  +
push 0C8h  +
call off_4EE2E8  +
add esp 4 +
mov dword_4F291C eax +
mov dword_4EE66C 1 +
test eax eax +
jnz loc_462582  +
push offset aXmlinitcharenc  +
push eax  +
push eax  +
push 2  +
push 1Bh  +
call sub_43AAC0  +
add esp 14h +
retn   +
push offset loc_461390  +
push offset loc_461390  +
push offset aUtf8  +
call loc_462630  +
push offset loc_461190  +
push offset loc_460DA0  +
push offset aUtf16le  +
call loc_462630  +
push offset loc_460F90  +
push offset loc_460C20  +
push offset aUtf16be  +
mov dword_4F2908 eax +
call loc_462630  +
push offset loc_460F40  +
push offset loc_460DA0  +
push offset aUtf16  +
mov dword_4F290C eax +
call loc_462630  +
push offset loc_461530  +
push offset dword_461730  +
push offset aIso88591  +
call loc_462630  +
push offset loc_4613E0  +
push offset loc_4616A0  +
push offset aAscii  +
call loc_462630  +
add esp 48h +
push offset loc_4613E0  +
push offset loc_4616A0  +
push offset aUsAscii  +
call loc_462630  +
push offset loc_45E2F0  +
push 0  +
push offset aHtml  +
call loc_462630  +
add esp 18h +
retn   +
***
sub esp 1F8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1F4h] eax +
push edi  +
mov edi [esp+200h] +
push edi  +
call loc_462450  +
add esp 4 +
test eax eax +
cmovnz edi eax +
test edi edi +
jnz loc_462699  +
push edi  +
push offset aXmlnewcharenco  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push 3  +
push 1770h  +
push 1Bh  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
push esi  +
lea eax [esp+8] +
xor esi esi +
sub edi eax +
lea eax [edi+esi] +
movsx eax byte ptr [esp+eax+8] +
push eax  +
call sub_49AE3F  +
add esp 4 +
mov [esp+esi+8] al +
test al al +
jz loc_4626C4  +
inc esi  +
cmp esi 1F3h +
jl loc_4626A2  +
cmp esi 1F4h +
jnb loc_462788  +
lea eax [esp+8] +
mov byte ptr [esp+esi+8] 0 +
push eax  +
call off_4EE2F8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_462715  +
push offset aXmlnewcharen_0  +
push eax  +
push eax  +
push 2  +
push 1Bh  +
call sub_43AAC0  +
add esp 14h +
pop esi  +
xor eax eax +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
push 0Ch  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_462742  +
push edi  +
call off_4EE2F4  +
push offset aXmlnewcharen_0  +
push esi  +
push esi  +
push 2  +
push 1Bh  +
call sub_43AAC0  +
add esp 18h +
jmp loc_4626FC  +
***
mov eax [esp+208h] +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
mov [esi+4] eax +
mov eax [esp+20Ch] +
push esi  +
mov [esi+8] eax +
mov [esi] edi +
call sub_462F90  +
mov ecx [esp+200h] +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
call sub_48927F  +
sub esp 1F8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+1F4h] eax +
push edi  +
mov edi [esp+200h] +
test edi edi +
jnz loc_4627C8  +
xor eax eax +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
push esi  +
push edi  +
call loc_462450  +
add esp 4 +
test eax eax +
cmovnz edi eax +
lea eax [esp+8] +
xor esi esi +
sub edi eax +
nop   +
lea eax [edi+esi] +
movsx eax byte ptr [esp+eax+8] +
push eax  +
call sub_49AE3F  +
add esp 4 +
mov [esp+esi+8] al +
test al al +
jz loc_462802  +
inc esi  +
cmp esi 1F3h +
jl loc_4627E0  +
cmp esi 1F4h +
jnb loc_462F7B  +
mov byte ptr [esp+esi+8] 0 +
lea eax [esp+8] +
mov ecx offset unk_4DE8C5 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462840  +
test dl dl +
jz loc_46283C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462840  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462820  +
xor eax eax +
jmp loc_462845  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462860  +
pop esi  +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aUtf8 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462890  +
test dl dl +
jz loc_46288C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462890  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462870  +
xor eax eax +
jmp loc_462895  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4628CB  +
mov ecx offset aUtf8_0 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4628C2  +
test dl dl +
jz loc_4628BE  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4628C2  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4628A2  +
xor eax eax +
jmp loc_4628C7  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_4628E7  +
pop esi  +
mov eax 1 +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aUtf16 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462910  +
test dl dl +
jz loc_46290C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462910  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4628F0  +
xor eax eax +
jmp loc_462915  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_46294B  +
mov ecx offset aUtf16_0 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462942  +
test dl dl +
jz loc_46293E  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462942  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462922  +
xor eax eax +
jmp loc_462947  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462967  +
pop esi  +
mov eax 2 +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso10646Ucs2 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462990  +
test dl dl +
jz loc_46298C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462990  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462970  +
xor eax eax +
jmp loc_462995  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4629FD  +
mov ecx offset aUcs2_0 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4629C2  +
test dl dl +
jz loc_4629BE  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4629C2  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4629A2  +
xor eax eax +
jmp loc_4629C7  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4629FD  +
mov ecx offset aUcs2 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4629F4  +
test dl dl +
jz loc_4629F0  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4629F4  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_4629D4  +
xor eax eax +
jmp loc_4629F9  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462A19  +
pop esi  +
mov eax 9 +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso10646Ucs4 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462A42  +
test dl dl +
jz loc_462A3E  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462A42  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462A22  +
xor eax eax +
jmp loc_462A47  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462AAF  +
mov ecx offset aUcs4 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462A74  +
test dl dl +
jz loc_462A70  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462A74  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462A54  +
xor eax eax +
jmp loc_462A79  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462AAF  +
mov ecx offset aUcs4_0 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462AA6  +
test dl dl +
jz loc_462AA2  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462AA6  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462A86  +
xor eax eax +
jmp loc_462AAB  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462ACB  +
pop esi  +
mov eax 4 +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88591 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462AF4  +
test dl dl +
jz loc_462AF0  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462AF4  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462AD4  +
xor eax eax +
jmp loc_462AF9  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462B61  +
mov ecx offset aIsoLatin1 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462B26  +
test dl dl +
jz loc_462B22  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462B26  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462B06  +
xor eax eax +
jmp loc_462B2B  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462B61  +
mov ecx offset aIsoLatin1_0 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462B58  +
test dl dl +
jz loc_462B54  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462B58  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462B38  +
xor eax eax +
jmp loc_462B5D  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462B7D  +
pop esi  +
mov eax 0Ah +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88592 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462BA6  +
test dl dl +
jz loc_462BA2  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462BA6  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462B86  +
xor eax eax +
jmp loc_462BAB  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462C19  +
mov ecx offset aIsoLatin2 +
lea eax [esp+8] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462BD8  +
test dl dl +
jz loc_462BD4  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462BD8  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462BB8  +
xor eax eax +
jmp loc_462BDD  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_462C19  +
mov ecx offset aIsoLatin2_0 +
lea eax [esp+8] +
pop esi  +
mov eax 0Bh +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88593 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462C60  +
test dl dl +
jz loc_462C5C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462C60  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462C40  +
xor eax eax +
jmp loc_462C65  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462C85  +
pop esi  +
mov eax 0Ch +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88594 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462CB0  +
test dl dl +
jz loc_462CAC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462CB0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462C90  +
xor eax eax +
jmp loc_462CB5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462CD5  +
pop esi  +
mov eax 0Dh +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88595 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462D00  +
test dl dl +
jz loc_462CFC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462D00  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462CE0  +
xor eax eax +
jmp loc_462D05  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462D25  +
pop esi  +
mov eax 0Eh +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88596 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462D50  +
test dl dl +
jz loc_462D4C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462D50  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462D30  +
xor eax eax +
jmp loc_462D55  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462D75  +
pop esi  +
mov eax 0Fh +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88597 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462DA0  +
test dl dl +
jz loc_462D9C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462DA0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462D80  +
xor eax eax +
jmp loc_462DA5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462DC5  +
pop esi  +
mov eax 10h +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88598 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462DF0  +
test dl dl +
jz loc_462DEC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462DF0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462DD0  +
xor eax eax +
jmp loc_462DF5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462E15  +
pop esi  +
mov eax 11h +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso88599 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462E40  +
test dl dl +
jz loc_462E3C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462E40  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462E20  +
xor eax eax +
jmp loc_462E45  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462E65  +
pop esi  +
mov eax 12h +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aIso2022Jp +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462E90  +
test dl dl +
jz loc_462E8C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462E90  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462E70  +
xor eax eax +
jmp loc_462E95  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462EB5  +
pop esi  +
mov eax 13h +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aShift_jis_0 +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462EE0  +
test dl dl +
jz loc_462EDC  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462EE0  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462EC0  +
xor eax eax +
jmp loc_462EE5  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_462F05  +
pop esi  +
mov eax 14h +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
mov ecx offset aEucJp +
lea eax [esp+8] +
nop   +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_462F52  +
test dl dl +
jz loc_462F2C  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_462F52  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_462F10  +
xor ecx ecx +
or eax 0FFFFFFFFh +
test ecx ecx +
mov edx 15h +
pop esi  +
cmovz eax edx +
pop edi  +
mov ecx [esp+1F4h] +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
sbb ecx ecx +
mov edx 15h +
or ecx 1 +
or eax 0FFFFFFFFh +
test ecx ecx +
mov ecx [esp+1FCh] +
pop esi  +
cmovz eax edx +
pop edi  +
xor ecx esp +
call sub_488C1C  +
add esp 1F8h +
retn   +
***
call sub_48927F  +
mov eax dword_4F291C +
test eax eax +
jnz loc_462FA3  +
call sub_462540  +
mov eax dword_4F291C +
mov edx [esp+arg_0] +
test edx edx +
jz loc_462FE9  +
test eax eax +
jz loc_462FE9  +
mov ecx dword_4F2920 +
cmp ecx 32h +
jl loc_462FDE  +
push offset aMax_encoding_h  +
push offset aXmlregistercha  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aMax_encoding_h  +
push 0  +
push 0  +
push 3  +
push 1772h  +
jmp loc_463005  +
mov [eax+ecx*4] edx +
inc ecx  +
mov dword_4F2920 ecx +
retn   +
push 0  +
push offset aXmlregisterc_0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 3  +
push 1771h  +
push 1Bh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
call sub_4582E0  +
push eax  +
call sub_464D60  +
pop ecx  +
retn   +
***
sub esp 50h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+4Ch] eax +
push ebx  +
mov ebx [esp+60h] +
push ebp  +
mov ebp [esp+5Ch] +
push esi  +
mov esi [esp+6Ch] +
push edi  +
mov eax [ebp+8] +
mov edi [esp+68h] +
push ebx  +
push edi  +
push dword ptr [eax+2Ch]  +
mov [esp+1Ch] ebp +
mov [esp+30h] edi +
mov [esp+2Ch] ebx +
mov [esp+20h] esi +
mov dword ptr [esp+28h] 1 +
call sub_452D80  +
add esp 0Ch +
mov [esp+18h] eax +
test eax eax +
jnz loc_4630A6  +
mov eax [ebp+8] +
push ebx  +
push edi  +
push dword ptr [eax+30h]  +
call sub_452D80  +
add esp 0Ch +
mov [esp+18h] eax +
mov dword ptr [esp+1Ch] 0 +
test eax eax +
jz loc_463319  +
mov ebx [eax+2Ch] +
mov eax [ebp+8] +
cmp dword ptr [eax+28h] 1 +
jnz loc_4631C9  +
cmp dword ptr [eax+30h] 0 +
jz loc_4631C9  +
cmp dword ptr [ebp+68h] 0 +
jz loc_4631C9  +
test ebx ebx +
jz loc_4631C9  +
cmp dword ptr [ebx+30h] 0 +
jz loc_4631AA  +
push dword ptr [ebx+38h]  +
mov eax [ebp+8] +
push dword ptr [ebx+8]  +
push dword ptr [ebx+3Ch]  +
push dword ptr [eax+30h]  +
call sub_452D50  +
add esp 10h +
cmp eax ebx +
jnz loc_4631AA  +
push dword ptr [ebx+38h]  +
mov eax [ebp+8] +
push dword ptr [ebx+8]  +
push dword ptr [ebx+3Ch]  +
push dword ptr [eax+2Ch]  +
call sub_452D50  +
add esp 10h +
test eax eax +
jnz loc_4631AA  +
mov eax [ebx+38h] +
test eax eax +
jz loc_463140  +
push eax  +
call sub_44E600  +
push offset word_4BC858  +
push eax  +
call sub_44E540  +
push dword ptr [ebx+8]  +
push eax  +
call sub_44E540  +
add esp 14h +
jmp loc_46314B  +
push dword ptr [ebx+8]  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
test ebp ebp +
jz loc_4631B7  +
test esi esi +
jz loc_46317E  +
mov esi [esi] +
test esi esi +
jz loc_46317E  +
mov edi [esp+14h] +
nop   +
push ebp  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46317A  +
mov esi [edi+8] +
add edi 8 +
test esi esi +
jnz loc_463160  +
jmp loc_46317E  +
test esi esi +
jnz loc_463198  +
push dword ptr [ebx+3Ch]  +
push ebp  +
push offset aStandaloneAt_1  +
push 21Ah  +
push dword ptr [esp+20h]  +
call sub_43A4F0  +
add esp 14h +
push ebp  +
call off_4EE2F4  +
mov ebp [esp+14h] +
add esp 4 +
mov esi [esp+14h] +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_4630D2  +
jmp loc_4631C9  +
mov ebp [esp+10h] +
push offset aXmlsax2start_0  +
push ebp  +
call sub_464870  +
add esp 8 +
mov edi [esp+18h] +
mov edi [edi+2Ch] +
test edi edi +
jz loc_4632D2  +
cmp dword ptr [edi+30h] 0 +
jz loc_4632C3  +
mov eax [edi+38h] +
test eax eax +
jz loc_463203  +
push offset aXmlns  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46322A  +
cmp dword ptr [edi+38h] 0 +
jnz loc_46321D  +
push offset aXmlns  +
push dword ptr [edi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46322A  +
test byte ptr [ebp+114h] 4 +
jz loc_4632C3  +
push dword ptr [edi+38h]  +
mov eax [ebp+8] +
push dword ptr [edi+8]  +
push dword ptr [edi+3Ch]  +
push dword ptr [eax+2Ch]  +
call sub_452D50  +
add esp 10h +
cmp eax edi +
jz loc_463249  +
test eax eax +
jnz loc_4632C3  +
push 32h  +
lea eax [esp+2Ch] +
push eax  +
push dword ptr [edi+38h]  +
push dword ptr [edi+8]  +
call sub_4221A0  +
mov ebp eax +
add esp 10h +
test ebp ebp +
jz loc_463308  +
test esi esi +
jz loc_463294  +
mov esi [esi] +
test esi esi +
jz loc_463294  +
mov ebx [esp+14h] +
push ebp  +
push esi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_463290  +
mov esi [ebx+8] +
add ebx 8 +
test esi esi +
jnz loc_463276  +
jmp loc_463294  +
test esi esi +
jnz loc_4632A8  +
push dword ptr [esp+20h]  +
push dword ptr [edi+30h]  +
push ebp  +
push dword ptr [esp+1Ch]  +
call loc_4635F0  +
add esp 10h +
lea eax [esp+28h] +
cmp ebp eax +
jz loc_4632BF  +
cmp ebp [edi+8] +
jz loc_4632BF  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
mov ebp [esp+10h] +
mov edi [edi+24h] +
mov esi [esp+14h] +
test edi edi +
jnz loc_4631E0  +
cmp dword ptr [esp+1Ch] 1 +
jnz loc_463319  +
push dword ptr [esp+20h]  +
mov eax [ebp+8] +
push dword ptr [esp+28h]  +
push dword ptr [eax+30h]  +
call sub_452D80  +
add esp 0Ch +
mov [esp+18h] eax +
mov dword ptr [esp+1Ch] 0 +
test eax eax +
jz loc_463319  +
mov esi [esp+14h] +
jmp loc_4630A6  +
***
push offset aXmlsax2start_0  +
push dword ptr [esp+14h]  +
call sub_464870  +
add esp 8 +
mov ecx [esp+5Ch] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 50h +
retn   +
***
push eax  +
call sub_465C10  +
add esp 8 +
retn   +
***
mov edx [esp+arg_4] +
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_463372  +
cmp dword ptr [esi+0D4h] 0 +
jz loc_46336F  +
cmp dword ptr [esi+0ACh] 0FFFFFFFFh +
jz loc_4633C7  +
mov [esi+54h] edx +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 3  +
push edx  +
push 1  +
push 0  +
push esi  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
test esi esi +
jz loc_4633C7  +
cmp dword ptr [esi+120h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+64h] 0 +
jnz loc_4633C7  +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
push esi  +
mov esi [esp+4+arg_4] +
test edx edx +
jz loc_4633F2  +
cmp dword ptr [edx+0D4h] 0 +
jz loc_4633EF  +
cmp dword ptr [edx+0ACh] 0FFFFFFFFh +
jz loc_463422  +
mov [edx+54h] esi +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 2  +
push esi  +
push 3  +
push 0  +
push edx  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
push esi  +
mov esi [esp+4+arg_4] +
test edx edx +
jz loc_463452  +
cmp dword ptr [edx+0D4h] 0 +
jz loc_46344F  +
cmp dword ptr [edx+0ACh] 0FFFFFFFFh +
jz loc_463482  +
mov [edx+54h] esi +
mov ecx [esp+4+arg_10] +
mov eax [esp+4+arg_C] +
push ecx  +
push eax  +
push [esp+0Ch+arg_8]  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 1  +
push esi  +
push 3  +
push 0  +
push edx  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
pop esi  +
retn   +
***
mov edi [esp+8+arg_0] +
mov [esp+8+var_4] 0 +
test edi edi +
jz loc_4635E2  +
cmp dword ptr [edi+8] 0 +
jz loc_4635E2  +
push ebx  +
mov ebx [esp+0Ch+arg_8] +
push ebp  +
push esi  +
push offset aXmlId  +
push ebx  +
call sub_44E370  +
mov ebp [esp+1Ch+arg_C] +
add esp 8 +
test eax eax +
jz loc_4634EF  +
cmp ebp 2 +
jz loc_4634EF  +
mov esi [edi+64h] +
push 0  +
push 0  +
push offset aXmlIdAttribu_0  +
push 21Ch  +
push edi  +
call sub_43A4F0  +
add esp 14h +
mov [edi+64h] esi +
lea eax [esp+14h+var_4] +
push eax  +
push ebx  +
push edi  +
call loc_439A20  +
mov esi eax +
mov dword ptr [edi+90h] 1 +
mov eax [edi+0D8h] +
add esp 0Ch +
cmp eax 1 +
jnz loc_463533  +
push [esp+14h+arg_18]  +
mov eax [edi+8] +
push [esp+18h+arg_14]  +
push [esp+1Ch+arg_10]  +
push ebp  +
push [esp+24h+var_4]  +
push esi  +
push [esp+2Ch+arg_4]  +
push dword ptr [eax+2Ch]  +
jmp loc_463558  +
cmp eax 2 +
jnz loc_4635C3  +
push [esp+14h+arg_18]  +
mov eax [edi+8] +
push [esp+18h+arg_14]  +
push [esp+1Ch+arg_10]  +
push ebp  +
push [esp+24h+var_4]  +
push esi  +
push [esp+2Ch+arg_4]  +
push dword ptr [eax+30h]  +
lea ebx [edi+6Ch] +
push ebx  +
call loc_450CB0  +
add esp 24h +
mov ecx eax +
cmp dword ptr [edi+90h] 0 +
jnz loc_463576  +
mov dword ptr [edi+64h] 0 +
test ecx ecx +
jz loc_46359D  +
cmp dword ptr [edi+68h] 0 +
jz loc_46359D  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_46359D  +
mov eax [edi+8] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_46359D  +
push ecx  +
push eax  +
push ebx  +
call loc_454940  +
add esp 0Ch +
and [edi+64h] eax +
mov eax [esp+14h+var_4] +
test eax eax +
jz loc_4635AF  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test esi esi +
jz loc_4635DF  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
push 0  +
push esi  +
push offset aSax_xmlsax2att  +
push 1  +
push edi  +
call sub_463350  +
push [esp+28h+arg_18]  +
call sub_452950  +
add esp 18h +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx [esp+14h] +
push esi  +
mov esi [esp+14h] +
push edi  +
cmp dword ptr [esi+20h] 0 +
jz loc_463617  +
push ebx  +
call sub_44E600  +
add esp 4 +
mov dword ptr [esp+18h] 0 +
jmp loc_463696  +
lea eax [esp+18h] +
push eax  +
push ebx  +
push esi  +
call loc_439A20  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_463CDF  +
cmp byte ptr [edi] 0 +
jnz loc_463698  +
push offset aXmlns  +
push dword ptr [esp+1Ch]  +
call sub_44E370  +
add esp 8 +
push 0  +
push ebx  +
test eax eax +
jz loc_46365C  +
push offset aInvalidNamespa  +
push 23h  +
push esi  +
call sub_4633D0  +
jmp loc_463669  +
push offset aAvoidAttribute  +
push 6Ah  +
push esi  +
call sub_463430  +
mov eax [esp+2Ch] +
add esp 14h +
test eax eax +
jz loc_46367E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
mov dword ptr [esp+1Ch] 0 +
call off_4EE2F4  +
push ebx  +
call sub_44E600  +
add esp 8 +
mov edi eax +
test edi edi +
jz loc_463CDF  +
cmp dword ptr [esi+20h] 0 +
push ebp  +
mov ebp [esp+24h] +
jz loc_4636CF  +
test ebp ebp +
jnz loc_4636CF  +
push ebx  +
call sub_46ACD0  +
add esp 4 +
test eax eax +
jz loc_4636CF  +
push ebx  +
call sub_44E600  +
mov edx eax +
add esp 4 +
mov [esp+14h] edx +
mov ebp edx +
jmp loc_463708  +
push ebp  +
push ebx  +
push dword ptr [esi+34h]  +
lea eax [esi+6Ch] +
mov dword ptr [esi+90h] 1 +
push dword ptr [esi+8]  +
push eax  +
call loc_4543D0  +
add esp 14h +
mov edx eax +
cmp dword ptr [esi+90h] 1 +
mov [esp+14h] edx +
jz loc_463703  +
mov dword ptr [esi+64h] 0 +
test edx edx +
cmovnz ebp edx +
mov ecx [esi+20h] +
mov eax [esp+1Ch] +
test ecx ecx +
jnz loc_4639D7  +
test eax eax +
jnz loc_463845  +
cmp byte ptr [edi] 78h +
jnz loc_463845  +
cmp byte ptr [edi+1] 6Dh +
jnz loc_463845  +
cmp byte ptr [edi+2] 6Ch +
jnz loc_463845  +
cmp byte ptr [edi+3] 6Eh +
jnz loc_463845  +
cmp byte ptr [edi+4] 73h +
jnz loc_463845  +
cmp [edi+5] al +
jnz loc_463845  +
cmp [esi+10h] eax +
jnz loc_46379C  +
inc dword ptr [esi+0F8h]  +
push eax  +
push eax  +
push eax  +
push 1  +
push ebp  +
push esi  +
call sub_439DD0  +
dec dword ptr [esi+0F8h]  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_46379E  +
push offset aXmlsax2start_0  +
push esi  +
call sub_464870  +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov ebx ebp +
cmp byte ptr [ebx] 0 +
jz loc_4637FE  +
push ebx  +
call sub_45A210  +
add esp 4 +
mov [esp+10h] eax +
test eax eax +
jnz loc_4637D1  +
mov eax [esi] +
test eax eax +
jz loc_4637FE  +
mov eax [eax+54h] +
test eax eax +
jz loc_4637FE  +
push ebx  +
push offset aXmlnsSNotAVali  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
jmp loc_4637FE  +
cmp dword ptr [eax] 0 +
jnz loc_4637F5  +
mov ecx [esi] +
test ecx ecx +
jz loc_4637F5  +
mov ecx [ecx+54h] +
test ecx ecx +
jz loc_4637F5  +
push ebx  +
push offset aXmlnsUriSIsNot  +
push dword ptr [esi+4]  +
call ecx  +
mov eax [esp+1Ch] +
add esp 0Ch +
push eax  +
call sub_458EE0  +
add esp 4 +
push 0  +
push ebx  +
push dword ptr [esi+34h]  +
call sub_423F60  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jz loc_4639A5  +
cmp dword ptr [esi+68h] 0 +
jz loc_4639A5  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4639A5  +
mov eax [esi+8] +
test eax eax +
jz loc_4639A5  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_4639A5  +
push ebx  +
jmp loc_46398D  +
test ecx ecx +
jnz loc_4639D7  +
test eax eax +
jz loc_463AF0  +
cmp byte ptr [eax] 78h +
jnz loc_4639D7  +
cmp byte ptr [eax+1] 6Dh +
jnz loc_4639D7  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_4639D7  +
cmp byte ptr [eax+3] 6Eh +
jnz loc_4639D7  +
cmp byte ptr [eax+4] 73h +
jnz loc_4639D7  +
cmp [eax+5] cl +
jnz loc_4639D7  +
cmp [esi+10h] ecx +
jnz loc_4638DC  +
inc dword ptr [esi+0F8h]  +
push ecx  +
push ecx  +
push ecx  +
push 1  +
push ebp  +
push esi  +
call sub_439DD0  +
dec dword ptr [esi+0F8h]  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_4638DE  +
push offset aXmlsax2start_0  +
push esi  +
call sub_464870  +
push dword ptr [esp+24h]  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
add esp 10h +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
mov ebx ebp +
cmp byte ptr [ebx] 0 +
jnz loc_4638F9  +
push 0  +
push edi  +
push offset aEmptyNamespace  +
push 0CCh  +
push esi  +
call sub_4633D0  +
add esp 14h +
cmp dword ptr [esi+10Ch] 0 +
jz loc_463950  +
cmp byte ptr [ebx] 0 +
jz loc_463950  +
push ebx  +
call sub_45A210  +
add esp 4 +
mov [esp+10h] eax +
test eax eax +
jnz loc_46392C  +
push ebp  +
push edi  +
push offset aXmlnsSSNotAVal  +
push 63h  +
push esi  +
call sub_463430  +
add esp 14h +
jmp loc_463950  +
cmp dword ptr [eax] 0 +
jnz loc_463947  +
push ebp  +
push edi  +
push offset aXmlnsSUriSIsNo  +
push 64h  +
push esi  +
call sub_463430  +
mov eax [esp+24h] +
add esp 14h +
push eax  +
call sub_458EE0  +
add esp 4 +
push edi  +
push ebx  +
push dword ptr [esi+34h]  +
call sub_423F60  +
push dword ptr [esp+28h]  +
mov [esp+20h] eax +
call off_4EE2F4  +
mov ecx [esp+20h] +
add esp 10h +
test ecx ecx +
jz loc_4639A5  +
cmp dword ptr [esi+68h] 0 +
jz loc_4639A5  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4639A5  +
mov eax [esi+8] +
test eax eax +
jz loc_4639A5  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_4639A5  +
push ebp  +
push ecx  +
push dword ptr [esp+30h]  +
push dword ptr [esi+34h]  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call loc_4569B0  +
add esp 18h +
and [esi+64h] eax +
push edi  +
call off_4EE2F4  +
mov eax [esp+18h] +
add esp 4 +
test eax eax +
jz loc_4639C1  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp ebx ebp +
jz loc_4639CF  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
test eax eax +
jz loc_463AF0  +
push eax  +
push dword ptr [esi+34h]  +
push dword ptr [esi+8]  +
call sub_424DE0  +
add esp 0Ch +
mov [esp+10h] eax +
test eax eax +
jnz loc_463A10  +
push edi  +
push dword ptr [esp+20h]  +
push offset aNamespacePre_2  +
push 0C9h  +
push esi  +
call sub_4633D0  +
add esp 14h +
jmp loc_463A5E  +
mov eax [esi+34h] +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_463A5A  +
mov ebx [esp+20h] +
mov eax [esp+10h] +
push 0  +
push edi  +
push eax  +
push dword ptr [esi+34h]  +
call sub_4240B0  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_463B14  +
cmp dword ptr [esi+10h] 0 +
jnz loc_463AF7  +
cmp dword ptr [esi+20h] 0 +
jnz loc_463AF7  +
push ebp  +
push dword ptr [esi+8]  +
call loc_425820  +
add esp 8 +
mov [edi+0Ch] eax +
test eax eax +
jz loc_463B14  +
push edi  +
push offset aAttributeSInSR  +
push 2Ah  +
push esi  +
call sub_4633D0  +
add esp 14h +
mov dword ptr [esi+0Ch] 0 +
cmp dword ptr [esi+120h] 0 +
jnz loc_463CAF  +
mov dword ptr [esi+0D4h] 1 +
jmp loc_463CAF  +
xor eax eax +
jmp loc_463A62  +
***
test ebp ebp +
jz loc_463B14  +
push ebp  +
push dword ptr [esi+8]  +
call sub_423D80  +
add esp 8 +
mov [edi+0Ch] eax +
mov [edi+10h] eax +
test eax eax +
jz loc_463B14  +
mov [eax+14h] edi +
cmp dword ptr [esi+20h] 0 +
jnz loc_463BF3  +
cmp dword ptr [esi+68h] 0 +
jz loc_463BF3  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_463BF3  +
mov eax [esi+8] +
test eax eax +
jz loc_463BF3  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_463BF3  +
cmp dword ptr [esi+10h] 0 +
jnz loc_463BD9  +
inc dword ptr [esi+0F8h]  +
push 0  +
push 0  +
push 0  +
push 1  +
push ebp  +
push esi  +
call sub_439DD0  +
dec dword ptr [esi+0F8h]  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_463B91  +
push ebp  +
push edi  +
push dword ptr [esi+34h]  +
lea eax [esi+6Ch] +
push dword ptr [esi+8]  +
push eax  +
call loc_455C40  +
add esp 14h +
and [esi+64h] eax +
jmp loc_463CAF  +
push ebx  +
push dword ptr [esp+24h]  +
push dword ptr [esi+34h]  +
push dword ptr [esi+8]  +
call sub_4546E0  +
mov ebp eax +
add esp 10h +
test ebp ebp +
jz loc_463BB6  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov ebx ebp +
push ebx  +
push edi  +
push dword ptr [esi+34h]  +
lea eax [esi+6Ch] +
push dword ptr [esi+8]  +
push eax  +
call loc_455C40  +
and [esi+64h] eax +
push ebx  +
call off_4EE2F4  +
add esp 18h +
jmp loc_463CAF  +
push ebp  +
push edi  +
push dword ptr [esi+34h]  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call loc_455C40  +
add esp 14h +
and [esi+64h] eax +
jmp loc_463CAF  +
test byte ptr [esi+114h] 8 +
jnz loc_463CAF  +
mov eax [esi+10h] +
test eax eax +
jnz loc_463C15  +
cmp dword ptr [esi+60h] 2 +
jnz loc_463C22  +
test eax eax +
jz loc_463CAF  +
cmp dword ptr [esi+0D8h] 0 +
jnz loc_463CAF  +
push offset aXmlId  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_463C69  +
push 1  +
push ebp  +
call loc_426430  +
add esp 8 +
test eax eax +
jz loc_463C59  +
push 0  +
push ebp  +
push offset aXmlIdAttribute  +
push 21Bh  +
push esi  +
call sub_43A4F0  +
add esp 14h +
push edi  +
push ebp  +
push dword ptr [esi+8]  +
lea eax [esi+6Ch] +
push eax  +
call sub_451500  +
jmp loc_463CAC  +
push edi  +
push dword ptr [esi+34h]  +
push dword ptr [esi+8]  +
call sub_453220  +
add esp 0Ch +
push edi  +
test eax eax +
jz loc_463C8C  +
push ebp  +
push dword ptr [esi+8]  +
lea eax [esi+6Ch] +
push eax  +
call sub_451500  +
jmp loc_463CAC  +
push dword ptr [esi+34h]  +
push dword ptr [esi+8]  +
call sub_4534D0  +
add esp 0Ch +
test eax eax +
jz loc_463CAF  +
push edi  +
push ebp  +
push dword ptr [esi+8]  +
lea eax [esi+6Ch] +
push eax  +
call sub_451760  +
add esp 10h +
mov eax [esp+14h] +
test eax eax +
jz loc_463CC1  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+1Ch] +
test eax eax +
jz loc_4639CF  +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
push offset aXmlsax2start_0  +
push esi  +
call sub_464870  +
mov eax [esp+20h] +
add esp 8 +
test eax eax +
jz loc_4639D0  +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
pop ebx  +
add esp 8 +
retn   +
***
sub esp 48h +
test esi esi +
jz loc_464174  +
push dword ptr [esi+34h]  +
call sub_4231F0  +
add esp 4 +
test eax eax +
jz loc_464158  +
cmp dword ptr [eax+4] 4 +
jnz loc_464158  +
pop esi  +
mov [esp-4+arg_0] eax +
jmp sub_426090  +
push [esp+arg_8]  +
push [esp+4+arg_4]  +
push dword ptr [esi+8]  +
call sub_423810  +
push eax  +
push dword ptr [esi+34h]  +
call sub_421400  +
add esp 14h +
pop esi  +
retn   +
***
test esi esi +
jz loc_4642AC  +
push edi  +
mov edi [esi+34h] +
test edi edi +
jz loc_4642AB  +
mov edi [edi+10h] +
test edi edi +
jnz loc_4641F6  +
mov edi [esp+4+arg_8] +
push edi  +
push [esp+8+arg_4]  +
push esi  +
call sub_465930  +
mov edx eax +
add esp 0Ch +
test edx edx +
jz loc_4641E5  +
mov ecx [esi+34h] +
mov [ecx+0Ch] edx +
mov ecx [esi+34h] +
mov [ecx+10h] edx +
mov ecx [esi+34h] +
mov [edx+14h] ecx +
mov eax [esi+34h] +
mov eax [eax+20h] +
mov [edx+20h] eax +
lea eax [edi+1] +
mov [esi+104h] edi +
pop edi  +
mov [esi+108h] eax +
pop esi  +
retn   +
push offset aXmlsax2charact  +
push esi  +
call sub_464870  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [edi+4] 3 +
jnz loc_464387  +
cmp dword ptr [edi+8] offset aText +
jnz loc_464387  +
mov edx [esi+108h] +
test edx edx +
jz loc_46433C  +
mov ecx [edi+28h] +
push ebx  +
lea ebx [edi+2Ch] +
cmp ecx ebx +
jnz loc_464234  +
push ecx  +
call sub_44E600  +
mov dword ptr [ebx] 0 +
jmp loc_46425A  +
mov eax [esi+104h] +
inc eax  +
cmp edx eax +
jnz loc_464260  +
push ecx  +
push dword ptr [esi+128h]  +
call loc_44F780  +
add esp 8 +
test eax eax +
jz loc_464260  +
push dword ptr [edi+28h]  +
call sub_44E600  +
mov [edi+28h] eax +
add esp 4 +
mov ecx [edi+28h] +
test ecx ecx +
jnz loc_464279  +
push offset aXmlsax2chara_0  +
push esi  +
call sub_464870  +
add esp 8 +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov edx [esi+104h] +
mov ebx [esp+8+arg_8] +
push ebp  +
lea ebp [edx+ebx] +
cmp ebp 989680h +
jbe loc_4642AE  +
test dword ptr [esi+168h] 80000h +
jnz loc_4642AE  +
push offset aXmlsax2chara_1  +
push esi  +
call sub_464870  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
or eax 0FFFFFFFFh +
sub eax ebx +
cmp edx eax +
ja loc_464329  +
mov eax [esi+108h] +
lea edx [eax+ebx] +
cmp edx 7FFFFFFFh +
ja loc_464329  +
cmp ebp eax +
jl loc_4642FA  +
lea ebp [edx+edx] +
push ebp  +
push ecx  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4642F1  +
push offset aXmlsax2charact  +
push esi  +
call sub_464870  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov [esi+108h] ebp +
mov [edi+28h] eax +
mov eax [esi+104h] +
add eax [edi+28h] +
push ebx  +
push [esp+10h+arg_4]  +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
add [esi+104h] ebx +
mov ecx [esi+104h] +
mov eax [edi+28h] +
pop ebp  +
pop ebx  +
pop edi  +
mov byte ptr [ecx+eax] 0 +
pop esi  +
retn   +
push offset aXmlsax2chara_2  +
push esi  +
call sub_464870  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push [esp+4+arg_8]  +
push [esp+8+arg_4]  +
push edi  +
call sub_426090  +
add esp 0Ch +
test eax eax +
jz loc_46435F  +
push offset aXmlsax2charact  +
push esi  +
call sub_464870  +
add esp 8 +
mov eax [esi+34h] +
cmp dword ptr [eax+0Ch] 0 +
jz loc_4642AB  +
push dword ptr [edi+28h]  +
call sub_44E660  +
add esp 4 +
mov [esi+104h] eax +
inc eax  +
mov [esi+108h] eax +
pop edi  +
pop esi  +
retn   +
mov edi [esp+4+arg_8] +
push edi  +
push [esp+8+arg_4]  +
push esi  +
call sub_465930  +
add esp 0Ch +
test eax eax +
jz loc_4642AB  +
push eax  +
push dword ptr [esi+34h]  +
call sub_421400  +
mov eax [esi+34h] +
add esp 8 +
cmp dword ptr [eax+0Ch] 0 +
jz loc_4642AB  +
mov [esi+104h] edi +
lea eax [edi+1] +
pop edi  +
mov [esi+108h] eax +
pop esi  +
retn   +
***
test esi esi +
jz loc_464473  +
push edi  +
push [esp+4+arg_4]  +
mov edi [esi+34h] +
push dword ptr [esi+8]  +
call sub_423A90  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jz loc_464472  +
cmp dword ptr [esi+118h] 0 +
jz loc_46441E  +
mov eax [esi+24h] +
test eax eax +
jz loc_46441E  +
cmp dword ptr [eax+1Ch] 0FFFFh +
jge loc_464415  +
mov ax [eax+1Ch] +
jmp loc_46441A  +
mov eax 0FFFFh +
mov [ecx+38h] ax +
mov eax [esi+0D8h] +
push ecx  +
cmp eax 1 +
jnz loc_46443B  +
mov eax [esi+8] +
push dword ptr [eax+2Ch]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp eax 2 +
jnz loc_464451  +
mov eax [esi+8] +
push dword ptr [eax+30h]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
test edi edi +
jnz loc_464463  +
push dword ptr [esi+8]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [edi+4] 1 +
push edi  +
jz loc_464430  +
call sub_421970  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
mov edx [esp+arg_8] +
push edi  +
mov edi [esp+4+arg_4] +
mov eax edi +
cmp edi edx +
jnb loc_46449C  +
nop   +
mov cl [eax] +
inc eax  +
cmp cl 26h +
jz loc_4644A0  +
cmp eax edx +
jb loc_464490  +
xor eax eax +
pop edi  +
retn   +
push esi  +
mov esi [esp+8+arg_0] +
sub edx edi +
push 0  +
push 0  +
push 0  +
inc dword ptr [esi+0F8h]  +
push 1  +
push edx  +
push edi  +
push esi  +
call loc_439E10  +
dec dword ptr [esi+0F8h]  +
add esp 1Ch +
pop esi  +
pop edi  +
retn   +
***
test esi esi +
jz loc_46456F  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_46456F  +
mov eax [esi+0D8h] +
push edi  +
cmp eax 1 +
jnz loc_464505  +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push dword ptr [ecx+2Ch]  +
jmp loc_464519  +
cmp eax 2 +
jnz loc_464558  +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push dword ptr [ecx+30h]  +
lea edi [esi+6Ch] +
push edi  +
call sub_4510F0  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jnz loc_46452E  +
mov [esi+64h] eax +
cmp dword ptr [esi+68h] 0 +
jz loc_46456E  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_46456E  +
mov eax [esi+8] +
test eax eax +
jz loc_46456E  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_46456E  +
push ecx  +
push eax  +
push edi  +
call loc_455380  +
add esp 0Ch +
and [esi+64h] eax +
pop edi  +
pop esi  +
retn   +
push 0  +
push [esp+8+arg_4]  +
push offset aSax_xmlsax2ele  +
push 1  +
push esi  +
call sub_463350  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_464624  +
cmp dword ptr [esi+68h] 0 +
jz loc_4645B6  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4645B6  +
mov eax [esi+8] +
test eax eax +
jz loc_4645B6  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_4645B6  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call sub_454E00  +
add esp 8 +
and [esi+64h] eax +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_4645D4  +
mov eax [esi+8] +
test eax eax +
jz loc_4645D4  +
cmp dword ptr [eax+3Ch] 0 +
jnz loc_4645D4  +
mov [eax+3Ch] ecx +
mov dword ptr [esi+18h] 0 +
mov eax [esi+30h] +
test eax eax +
jz loc_46460A  +
cmp dword ptr [esi+28h] 0 +
jle loc_46460A  +
mov eax [eax] +
test eax eax +
jz loc_46460A  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_46460A  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_46460A  +
cmp dword ptr [ecx+3Ch] 0 +
jnz loc_46460A  +
push eax  +
call sub_44E600  +
mov ecx [esi+8] +
add esp 4 +
mov [ecx+3Ch] eax +
mov ecx [esi+100h] +
test ecx ecx +
jz loc_464624  +
mov eax [esi+8] +
test eax eax +
jz loc_464624  +
cmp dword ptr [eax+4Ch] 0 +
jnz loc_464624  +
mov [eax+4Ch] ecx +
pop esi  +
retn   +
***
test esi esi +
jz loc_4646C1  +
push edi  +
mov edi [esi+34h] +
test edi edi +
jz loc_464683  +
cmp dword ptr [esi+44h] 0 +
jz loc_464683  +
mov eax [esi+24h] +
mov ecx [eax+10h] +
sub ecx [eax+0Ch] +
mov eax [esi+1C0h] +
mov [eax+0Ch] ecx +
mov eax [esi+24h] +
mov ecx [esi+1C0h] +
mov eax [eax+1Ch] +
mov [ecx+10h] eax +
mov eax [esi+1C0h] +
mov [eax] edi +
push dword ptr [esi+1C0h]  +
push esi  +
call sub_45C8C0  +
add esp 8 +
cmp dword ptr [esi+68h] 0 +
mov dword ptr [esi+108h] 0FFFFFFFFh +
jz loc_4646B7  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4646B7  +
mov eax [esi+8] +
test eax eax +
jz loc_4646B7  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_4646B7  +
push edi  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call loc_4561A0  +
add esp 0Ch +
and [esi+64h] eax +
push esi  +
call sub_4269F0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
mov esi [esp+18h+arg_0] +
test esi esi +
jz loc_46474E  +
cmp dword ptr [esi+44h] 0 +
push edi  +
mov edi [esi+34h] +
jz loc_464710  +
test edi edi +
jz loc_464710  +
mov ecx [esi+24h] +
mov eax [ecx+10h] +
sub eax [ecx+0Ch] +
mov [esp+1Ch+var_8] eax +
mov eax [ecx+1Ch] +
mov [esp+1Ch+var_4] eax +
lea eax [esp+1Ch+var_14] +
push eax  +
push esi  +
mov [esp+24h+var_14] edi +
call sub_45C8C0  +
add esp 8 +
cmp dword ptr [esi+68h] 0 +
mov dword ptr [esi+108h] 0FFFFFFFFh +
jz loc_464744  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_464744  +
mov eax [esi+8] +
test eax eax +
jz loc_464744  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_464744  +
push edi  +
push eax  +
lea eax [esi+6Ch] +
push eax  +
call loc_4561A0  +
add esp 0Ch +
and [esi+64h] eax +
push esi  +
call sub_4269F0  +
add esp 4 +
pop edi  +
pop esi  +
add esp 14h +
retn   +
***
test esi esi +
jz loc_464861  +
mov eax [esi+0D8h] +
push ebx  +
push ebp  +
push edi  +
cmp eax 1 +
jnz loc_4647C4  +
push [esp+0Ch+arg_14]  +
mov edi [esp+10h+arg_10] +
mov ebp [esp+10h+arg_4] +
push edi  +
push [esp+14h+arg_C]  +
push [esp+18h+arg_8]  +
push ebp  +
push dword ptr [esi+8]  +
call sub_457340  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_464818  +
cmp [esi+10Ch] eax +
jz loc_46485E  +
push ebp  +
push offset aEntitySAlready  +
push 6Bh  +
push esi  +
call sub_465D20  +
add esp 10h +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
cmp eax 2 +
jnz loc_464848  +
push [esp+0Ch+arg_14]  +
mov edi [esp+10h+arg_10] +
mov ebp [esp+10h+arg_4] +
push edi  +
push [esp+14h+arg_C]  +
push [esp+18h+arg_8]  +
push ebp  +
push dword ptr [esi+8]  +
call sub_4573E0  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_464818  +
cmp [esi+10Ch] eax +
jz loc_46485E  +
mov eax [esi] +
test eax eax +
jz loc_46485E  +
mov eax [eax+54h] +
test eax eax +
jz loc_46485E  +
push ebp  +
push offset aEntitySAlrea_0  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ebx+40h] 0 +
jnz loc_46485E  +
test edi edi +
jz loc_46485E  +
mov eax [esi+24h] +
test eax eax +
jz loc_464830  +
mov eax [eax+4] +
test eax eax +
jnz loc_464836  +
mov eax [esi+0B4h] +
push eax  +
push edi  +
call loc_4587B0  +
add esp 8 +
mov [ebx+40h] eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
push 0  +
push [esp+10h+arg_4]  +
push offset aSax_xmlsax2ent  +
push 68h  +
push esi  +
call sub_463350  +
add esp 14h +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
xor ecx ecx +
test esi esi +
jz loc_4648E5  +
mov eax [esi] +
mov dword ptr [esi+54h] 2 +
test eax eax +
jz loc_464894  +
cmp dword ptr [eax+6Ch] 0DEEDBEAFh +
jnz loc_464894  +
mov ecx [eax+7Ch] +
push 0  +
push offset aOutOfMemory  +
push [esp+8+arg_4]  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aOutOfMemory  +
push 0  +
push 0  +
push 2  +
push 2  +
push 1  +
push 0  +
push esi  +
push dword ptr [esi+6Ch]  +
push dword ptr [esi+70h]  +
push ecx  +
call sub_43A650  +
add esp 48h +
mov dword ptr [esi+54h] 2 +
mov dword ptr [esi+0ACh] 0FFFFFFFFh +
mov dword ptr [esi+0D4h] 1 +
pop esi  +
retn   +
push 0  +
push offset aOutOfMemory  +
push [esp+8+arg_4]  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aOutOfMemory  +
push 0  +
push 0  +
push 2  +
push 2  +
push 1  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 48h +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
mov esi [esp+18h+arg_0] +
test esi esi +
jz loc_464B32  +
push ebx  +
mov ebx [esp+1Ch+arg_C] +
push ebp  +
mov ebp [esp+20h+arg_8] +
test ebp ebp +
jnz loc_464946  +
test ebx ebx +
jz loc_464B30  +
cmp dword ptr [esi+68h] 0 +
jnz loc_464959  +
cmp dword ptr [esi+114h] 0 +
jz loc_464B30  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_464B30  +
cmp dword ptr [esi+8] 0 +
jz loc_464B30  +
mov eax [esi] +
test eax eax +
jz loc_464B30  +
mov eax [eax+10h] +
test eax eax +
jz loc_464B30  +
push edi  +
push ebx  +
push ebp  +
push dword ptr [esi+4]  +
call eax  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_464B2F  +
push ebx  +
push ebp  +
push [esp+2Ch+arg_4]  +
push dword ptr [esi+8]  +
call sub_423DA0  +
mov eax [esi+24h] +
mov [esp+34h+arg_0] eax +
mov eax [esi+28h] +
mov [esp+34h+var_14] eax +
mov eax [esi+2Ch] +
mov [esp+34h+var_10] eax +
mov eax [esi+30h] +
mov [esp+34h+var_C] eax +
mov eax [esi+100h] +
mov [esp+34h+var_8] eax +
mov eax [esi+18h] +
push 14h  +
mov [esp+38h+var_4] eax +
mov dword ptr [esi+18h] 0 +
call off_4EE2E8  +
add esp 14h +
mov [esi+30h] eax +
test eax eax +
jnz loc_464A2E  +
push offset aXmlsax2externa  +
push esi  +
call sub_464870  +
mov eax [esp+2Ch+arg_0] +
add esp 8 +
mov [esi+24h] eax +
mov eax [esp+24h+var_14] +
mov [esi+28h] eax +
mov eax [esp+24h+var_10] +
mov [esi+2Ch] eax +
mov eax [esp+24h+var_C] +
pop edi  +
mov [esi+30h] eax +
mov eax [esp+20h+var_8] +
pop ebp  +
mov [esi+100h] eax +
mov eax [esp+1Ch+var_4] +
pop ebx  +
mov [esi+18h] eax +
pop esi  +
add esp 14h +
retn   +
push edi  +
push esi  +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 5 +
mov dword ptr [esi+24h] 0 +
call sub_4397C0  +
mov eax [esi+24h] +
add esp 8 +
cmp dword ptr [eax+18h] 4 +
jl loc_464A6A  +
push 4  +
push dword ptr [eax+10h]  +
call sub_461EA0  +
push eax  +
push esi  +
call sub_45CDE0  +
add esp 10h +
cmp dword ptr [edi+4] 0 +
jnz loc_464A7C  +
push ebx  +
call sub_458BE0  +
add esp 4 +
mov [edi+4] eax +
mov dword ptr [edi+1Ch] 1 +
mov dword ptr [edi+20h] 1 +
mov eax [esi+24h] +
push ebx  +
push ebp  +
push esi  +
mov eax [eax+10h] +
mov [edi+0Ch] eax +
mov eax [esi+24h] +
mov eax [eax+10h] +
mov [edi+10h] eax +
mov dword ptr [edi+28h] 0 +
call loc_432330  +
add esp 0Ch +
cmp dword ptr [esi+28h] 1 +
jle loc_464AC3  +
push esi  +
call loc_439740  +
add esp 4 +
cmp dword ptr [esi+28h] 1 +
jg loc_464AB4  +
push dword ptr [esi+24h]  +
call sub_45BAF0  +
push dword ptr [esi+30h]  +
call off_4EE2F4  +
mov eax [esp+2Ch+arg_0] +
add esp 8 +
mov ecx [esi+18h] +
mov [esi+24h] eax +
mov eax [esp+24h+var_14] +
mov [esi+28h] eax +
mov eax [esp+24h+var_10] +
mov [esi+2Ch] eax +
mov eax [esp+24h+var_C] +
mov [esi+30h] eax +
mov eax [esp+24h+var_8] +
mov [esi+100h] eax +
test ecx ecx +
jz loc_464B28  +
mov eax [esi+128h] +
test eax eax +
jz loc_464B1C  +
push ecx  +
push eax  +
call loc_44F780  +
add esp 8 +
test eax eax +
jnz loc_464B28  +
push dword ptr [esi+18h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+24h+var_4] +
mov [esi+18h] eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
add esp 14h +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464B53  +
mov eax [eax+24h] +
test eax eax +
jz loc_464B53  +
mov eax [eax+20h] +
retn   +
xor eax eax +
retn   +
***
test edi edi +
jnz loc_464B6D  +
xor eax eax +
pop edi  +
retn   +
cmp dword ptr [edi+0D8h] 0 +
push ebx  +
mov ebx [esp+4+arg_4] +
jnz loc_464B8C  +
push ebx  +
call sub_458200  +
add esp 4 +
test eax eax +
jnz loc_464C96  +
mov eax [edi+8] +
push ebp  +
push esi  +
test eax eax +
jz loc_464C06  +
cmp dword ptr [eax+28h] 1 +
jnz loc_464C06  +
cmp dword ptr [edi+0D8h] 2 +
push ebx  +
jnz loc_464BC0  +
mov dword ptr [eax+28h] 0 +
push dword ptr [edi+8]  +
call sub_458150  +
mov ecx [edi+8] +
mov dword ptr [ecx+28h] 1 +
jmp loc_464C0D  +
push eax  +
call sub_458150  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_464C16  +
mov eax [edi+8] +
push ebx  +
mov [eax+28h] esi +
push dword ptr [edi+8]  +
call sub_458150  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_464BFA  +
push 0  +
push ebx  +
push offset aEntitySDocumen  +
push 67h  +
push edi  +
call sub_463350  +
add esp 14h +
mov eax [edi+8] +
mov dword ptr [eax+28h] 1 +
jmp loc_464C12  +
push ebx  +
push eax  +
call sub_458150  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_464C92  +
cmp dword ptr [edi+68h] 0 +
jnz loc_464C22  +
cmp dword ptr [edi+10h] 0 +
jz loc_464C92  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_464C92  +
cmp dword ptr [esi+30h] 2 +
jnz loc_464C92  +
mov ebp [edi+1B8h] +
lea eax [esp+0Ch+arg_0] +
push eax  +
push dword ptr [esi+34h]  +
push dword ptr [esi+40h]  +
push edi  +
call loc_42D390  +
add esp 10h +
test eax eax +
jnz loc_464C99  +
push [esp+0Ch+arg_0]  +
push esi  +
call sub_4215A0  +
add esp 8 +
mov dword ptr [esi+44h] 1 +
cmp dword ptr [esi+48h] 0 +
jnz loc_464C92  +
mov eax [edi+1B8h] +
sub eax ebp +
lea eax ds:2[eax*2] +
mov [esi+48h] eax +
mov eax [esi+28h] +
test eax eax +
jz loc_464C92  +
push 3Ch  +
push eax  +
call sub_44E580  +
add esp 8 +
test eax eax +
jz loc_464C92  +
or dword ptr [esi+48h] 1 +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
push 0  +
push ebx  +
push offset aFailureToProce  +
push 68h  +
push edi  +
call sub_463350  +
add esp 14h +
mov dword ptr [edi+68h] 0 +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464CD3  +
mov eax [eax+24h] +
test eax eax +
jz loc_464CD3  +
mov eax [eax+1Ch] +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_464CE9  +
retn   +
push [esp+arg_4]  +
push dword ptr [eax+8]  +
call sub_4581B0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464D13  +
mov eax [eax+24h] +
test eax eax +
jz loc_464D13  +
mov eax [eax+4] +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464D38  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_464D38  +
xor eax eax +
cmp [ecx+30h] eax +
setnz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464D58  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_464D58  +
xor eax eax +
cmp [ecx+2Ch] eax +
setnz al  +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_464E39  +
cmp dword ptr [eax+6Ch] 0 +
jnz locret_464E39  +
mov dword ptr [eax] offset sub_464E40 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] offset sub_464B60 +
mov dword ptr [eax+60h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] offset nullsub_1 +
mov dword ptr [eax+30h] offset sub_465100 +
mov dword ptr [eax+34h] offset sub_464580 +
mov dword ptr [eax+38h] offset loc_465210 +
mov dword ptr [eax+3Ch] offset sub_464630 +
mov dword ptr [eax+40h] 0 +
mov dword ptr [eax+44h] offset sub_464180 +
mov dword ptr [eax+64h] offset sub_464130 +
mov dword ptr [eax+48h] offset nullsub_1 +
mov dword ptr [eax+4Ch] offset sub_464FA0 +
mov dword ptr [eax+50h] offset sub_4643D0 +
mov dword ptr [eax+54h] offset sub_43B2B0 +
mov dword ptr [eax+58h] offset sub_43AD10 +
mov dword ptr [eax+5Ch] offset sub_43AD10 +
mov dword ptr [eax+6Ch] 1 +
retn   +
***
test esi esi +
jz loc_464EB4  +
mov eax [esi+8] +
test eax eax +
jz loc_464EB4  +
push edi  +
push eax  +
call sub_4231C0  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_464E7F  +
cmp dword ptr [esi+20h] 0 +
jnz loc_464EB3  +
push edi  +
call sub_4262D0  +
push edi  +
call sub_422B70  +
mov eax [esi+8] +
add esp 8 +
mov dword ptr [eax+2Ch] 0 +
push [esp+4+arg_C]  +
push [esp+8+arg_8]  +
push [esp+0Ch+arg_4]  +
push dword ptr [esi+8]  +
call sub_422790  +
mov ecx [esi+8] +
add esp 10h +
mov [ecx+2Ch] eax +
mov eax [esi+8] +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_464EB3  +
push offset aXmlsax2interna  +
push esi  +
call sub_464870  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_464ED9  +
mov ecx [eax+8] +
test ecx ecx +
jz loc_464ED9  +
xor eax eax +
cmp dword ptr [ecx+28h] 1 +
setz al  +
retn   +
xor eax eax +
retn   +
***
test esi esi +
jz loc_464F9A  +
mov eax [esi+8] +
test eax eax +
jz loc_464F9A  +
mov ecx [esp+arg_C] +
push edi  +
mov edi [esp+4+arg_8] +
test edi edi +
jnz loc_464F21  +
test ecx ecx +
jnz loc_464F21  +
push ecx  +
push [esp+8+arg_4]  +
push offset aSax_xmlsax2not  +
push 69h  +
push esi  +
call sub_463350  +
add esp 14h +
pop edi  +
pop esi  +
retn   +
mov edx [esi+0D8h] +
push ebx  +
cmp edx 1 +
jnz loc_464F38  +
push ecx  +
push edi  +
push [esp+10h+arg_4]  +
push dword ptr [eax+2Ch]  +
jmp loc_464F46  +
cmp edx 2 +
jnz loc_464F82  +
push ecx  +
push edi  +
push [esp+10h+arg_4]  +
push dword ptr [eax+30h]  +
lea ebx [esi+6Ch] +
push ebx  +
call sub_451650  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jnz loc_464F5B  +
mov [esi+64h] eax +
cmp dword ptr [esi+68h] 0 +
jz loc_464F98  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_464F98  +
mov eax [esi+8] +
cmp dword ptr [eax+2Ch] 0 +
jz loc_464F98  +
push ecx  +
push eax  +
push ebx  +
call sub_410B20  +
add esp 0Ch +
and [esi+64h] eax +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push 0  +
push [esp+0Ch+arg_4]  +
push offset aSax_xmlsax2n_0  +
push 69h  +
push esi  +
call sub_463350  +
add esp 14h +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_465047  +
push edi  +
push [esp+4+arg_8]  +
mov edi [esi+34h] +
push [esp+8+arg_4]  +
push dword ptr [esi+8]  +
call sub_423BE0  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jz loc_465046  +
cmp dword ptr [esi+118h] 0 +
jz loc_464FF2  +
mov eax [esi+24h] +
test eax eax +
jz loc_464FF2  +
cmp dword ptr [eax+1Ch] 0FFFFh +
jge loc_464FE9  +
mov ax [eax+1Ch] +
jmp loc_464FEE  +
mov eax 0FFFFh +
mov [ecx+38h] ax +
mov eax [esi+0D8h] +
push ecx  +
cmp eax 1 +
jnz loc_46500F  +
mov eax [esi+8] +
push dword ptr [eax+2Ch]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp eax 2 +
jnz loc_465025  +
mov eax [esi+8] +
push dword ptr [eax+30h]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
test edi edi +
jnz loc_465037  +
push dword ptr [esi+8]  +
call sub_421400  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [edi+4] 1 +
push edi  +
jz loc_465004  +
call sub_421970  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_465092  +
mov eax [esp+arg_4] +
push edi  +
push eax  +
push dword ptr [esi+8]  +
cmp byte ptr [eax] 23h +
jnz loc_46506E  +
call sub_423890  +
jmp loc_465073  +
call sub_424430  +
add esp 8 +
mov edi eax +
push edi  +
push dword ptr [esi+34h]  +
call sub_421400  +
add esp 8 +
test eax eax +
jnz loc_465091  +
push edi  +
call sub_422CB0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_4650AD  +
xor eax eax +
pop esi  +
retn   +
mov eax [esi+24h] +
test eax eax +
jz loc_4650BB  +
mov eax [eax+4] +
test eax eax +
jnz loc_4650C1  +
mov eax [esi+0B4h] +
push edi  +
push eax  +
push [esp+8+arg_8]  +
call loc_4587B0  +
push esi  +
push [esp+10h+arg_4]  +
mov edi eax +
push edi  +
call sub_45FCE0  +
add esp 14h +
mov esi eax +
test edi edi +
jz loc_4650EC  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jz loc_465203  +
cmp dword ptr [esi+20h] 0 +
push edi  +
jz loc_465149  +
cmp dword ptr [esi+8] 0 +
jnz loc_465129  +
push 0  +
push 0  +
call sub_45E590  +
add esp 8 +
mov [esi+8] eax +
mov eax [esi+8] +
test eax eax +
jz loc_4651F4  +
mov dword ptr [eax+5Ch] 80h +
mov ecx [esi+8] +
mov eax [esi+168h] +
mov [ecx+58h] eax +
jmp loc_4651C1  +
push dword ptr [esi+14h]  +
call sub_4239C0  +
mov edi eax +
add esp 4 +
mov [esi+8] edi +
test edi edi +
jz loc_4651F4  +
mov dword ptr [edi+5Ch] 0 +
test dword ptr [esi+168h] 20000h +
jz loc_46517B  +
mov dword ptr [edi+5Ch] 4 +
mov eax [esi+168h] +
mov [edi+58h] eax +
mov eax [esi+18h] +
test eax eax +
jz loc_465199  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [edi+3Ch] eax +
jmp loc_4651A0  +
mov dword ptr [edi+3Ch] 0 +
mov eax [esi+1Ch] +
mov [edi+28h] eax +
cmp dword ptr [esi+16Ch] 0 +
jz loc_4651C1  +
mov eax [esi+128h] +
push eax  +
mov [edi+50h] eax +
call sub_44FAE0  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_465202  +
cmp dword ptr [eax+48h] 0 +
jnz loc_465202  +
mov eax [esi+24h] +
test eax eax +
jz loc_465202  +
mov eax [eax+4] +
test eax eax +
jz loc_465202  +
push eax  +
call sub_45A330  +
mov ecx [esi+8] +
add esp 4 +
mov [ecx+48h] eax +
mov eax [esi+8] +
cmp dword ptr [eax+48h] 0 +
jnz loc_465202  +
push offset aXmlsax2startdo  +
push esi  +
call sub_464870  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_46551D  +
push edi  +
mov edi [esp+14h] +
test edi edi +
jz loc_46551C  +
mov eax [esi+8] +
test eax eax +
jz loc_46551C  +
cmp dword ptr [esi+68h] 0 +
push ebx  +
mov ebx [esi+34h] +
jz loc_465280  +
cmp dword ptr [eax+30h] 0 +
jnz loc_465280  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_465265  +
cmp dword ptr [eax+24h] 0 +
jnz loc_465280  +
cmp dword ptr [eax+28h] 0 +
jnz loc_465280  +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_465280  +
cmp dword ptr [eax+30h] 0 +
jnz loc_465280  +
push 0  +
push 0  +
push offset aValidationFail  +
push 5Eh  +
push esi  +
call sub_43A4F0  +
add esp 14h +
mov dword ptr [esi+68h] 0 +
push ebp  +
lea eax [esp+18h] +
push eax  +
push edi  +
push esi  +
call loc_439A20  +
push 0  +
mov edi eax +
push edi  +
push 0  +
push dword ptr [esi+8]  +
call loc_423B40  +
mov ebp eax +
add esp 1Ch +
mov [esp+10h] ebp +
test ebp ebp +
jnz loc_4652CF  +
mov eax [esp+18h] +
test eax eax +
jz loc_4652BB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push offset aXmlsax2start_0  +
push esi  +
call sub_464870  +
add esp 8 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
mov eax [esi+8] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_4652E5  +
push ebp  +
push eax  +
call sub_421400  +
add esp 8 +
jmp loc_4652EA  +
test ebx ebx +
cmovz ebx ecx +
cmp dword ptr [esi+118h] 0 +
mov dword ptr [esi+108h] 0FFFFFFFFh +
jz loc_46531C  +
mov eax [esi+24h] +
test eax eax +
jz loc_46531C  +
cmp dword ptr [eax+1Ch] 0FFFFh +
jge loc_465313  +
mov ax [eax+1Ch] +
jmp loc_465318  +
mov eax 0FFFFh +
mov [ebp+38h] ax +
push ebp  +
push esi  +
call sub_426A40  +
add esp 8 +
test ebx ebx +
jz loc_465341  +
cmp dword ptr [ebx+4] 1 +
push ebp  +
push ebx  +
jnz loc_465339  +
call sub_421400  +
jmp loc_46533E  +
call sub_421970  +
add esp 8 +
cmp dword ptr [esi+20h] 0 +
mov ebp [esp+20h] +
jnz loc_465369  +
mov eax [esi+8] +
cmp dword ptr [eax+2Ch] 0 +
jnz loc_46535A  +
cmp dword ptr [eax+30h] 0 +
jz loc_465369  +
push ebp  +
push dword ptr [esp+1Ch]  +
push edi  +
push esi  +
call loc_463030  +
add esp 10h +
test ebp ebp +
jz loc_4653BC  +
cmp dword ptr [esi+20h] 0 +
mov eax [ebp+0] +
mov ecx [ebp+4] +
jnz loc_4653BC  +
test eax eax +
jz loc_4653BC  +
lea edi [ebp+8] +
test ecx ecx +
jz loc_4653BC  +
cmp byte ptr [eax] 78h +
jnz loc_4653B0  +
cmp byte ptr [eax+1] 6Dh +
jnz loc_4653B0  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_4653B0  +
cmp byte ptr [eax+3] 6Eh +
jnz loc_4653B0  +
cmp byte ptr [eax+4] 73h +
jnz loc_4653B0  +
push dword ptr [esp+18h]  +
push ecx  +
push eax  +
push esi  +
call loc_4635F0  +
add esp 10h +
mov eax [edi] +
mov ecx [edi+4] +
add edi 8 +
test eax eax +
jnz loc_465380  +
push dword ptr [esp+18h]  +
push dword ptr [esp+14h]  +
push dword ptr [esi+8]  +
call sub_424DE0  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_4653EB  +
test ebx ebx +
jz loc_4653EB  +
push dword ptr [esp+18h]  +
push ebx  +
push dword ptr [esi+8]  +
call sub_424DE0  +
add esp 0Ch +
mov edi eax +
mov eax [esp+18h] +
test eax eax +
jz loc_46541D  +
test edi edi +
jnz loc_465421  +
push eax  +
push edi  +
push dword ptr [esp+18h]  +
call sub_423F60  +
push 0  +
push dword ptr [esp+28h]  +
mov edi eax +
push offset aNamespacePre_3  +
push 0C9h  +
push esi  +
call sub_463430  +
add esp 20h +
test edi edi +
jz loc_465440  +
mov eax [edi+8] +
test eax eax +
jz loc_465440  +
cmp byte ptr [eax] 0 +
jnz loc_465433  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_465440  +
push edi  +
push dword ptr [esp+14h]  +
call sub_425140  +
add esp 8 +
test ebp ebp +
jz loc_4654BA  +
cmp dword ptr [esi+20h] 0 +
mov eax [ebp+0] +
mov ecx [ebp+4] +
jz loc_465472  +
test eax eax +
jz loc_4654BA  +
lea edi [ebp+8] +
push 0  +
push ecx  +
push eax  +
push esi  +
call loc_4635F0  +
mov eax [edi] +
lea edi [edi+8] +
mov ecx [edi-4] +
add esp 10h +
test eax eax +
jnz loc_465457  +
jmp loc_4654BA  +
test eax eax +
jz loc_4654BA  +
lea edi [ebp+8] +
test ecx ecx +
jz loc_4654BA  +
cmp byte ptr [eax] 78h +
jnz loc_4654A1  +
cmp byte ptr [eax+1] 6Dh +
jnz loc_4654A1  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_4654A1  +
cmp byte ptr [eax+3] 6Eh +
jnz loc_4654A1  +
cmp byte ptr [eax+4] 73h +
jz loc_4654AE  +
push 0  +
push ecx  +
push eax  +
push esi  +
call loc_4635F0  +
add esp 10h +
mov eax [edi] +
mov ecx [edi+4] +
add edi 8 +
test eax eax +
jnz loc_465480  +
cmp dword ptr [esi+68h] 0 +
jz loc_465508  +
cmp dword ptr [esi+88h] 0ABCD1234h +
jnz loc_465508  +
push dword ptr [esi+8]  +
lea edi [esi+6Ch] +
push edi  +
call sub_454EA0  +
add esp 8 +
test eax eax +
jg loc_4654E6  +
mov dword ptr [esi+64h] 0 +
jns loc_4654EF  +
mov dword ptr [esi+0Ch] 0 +
push dword ptr [esi+8]  +
push edi  +
call sub_457140  +
add esp 8 +
mov dword ptr [esi+88h] 0ABCD1235h +
and [esi+64h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_46551A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
sub esp 8 +
push ebp  +
push esi  +
mov esi [esp+14h] +
xor ebp ebp +
mov dword ptr [esp+8] 0 +
test esi esi +
jz loc_465926  +
mov eax [esi+34h] +
mov [esp+14h] eax +
cmp [esi+68h] ebp +
jz loc_465584  +
mov eax [esi+8] +
cmp [eax+30h] ebp +
jnz loc_465584  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_46556A  +
cmp [eax+24h] ebp +
jnz loc_465584  +
cmp [eax+28h] ebp +
jnz loc_465584  +
cmp [eax+2Ch] ebp +
jnz loc_465584  +
cmp [eax+30h] ebp +
jnz loc_465584  +
push 0  +
push 0  +
push offset aValidationFail  +
push 20Ah  +
push esi  +
call sub_43A4F0  +
add esp 14h +
mov [esi+68h] ebp +
mov eax [esp+1Ch] +
push ebx  +
test eax eax +
jz loc_4655C9  +
cmp [esp+24h] ebp +
jnz loc_4655C9  +
mov ebx [esp+1Ch] +
cmp [esi+16Ch] ebp +
jz loc_4655B7  +
push ebx  +
push eax  +
push dword ptr [esi+128h]  +
call loc_44F7D0  +
add esp 0Ch +
test eax eax +
jz loc_4655CD  +
mov ebx eax +
jmp loc_4655CD  +
push 0  +
push 0  +
push eax  +
push ebx  +
call sub_4221A0  +
add esp 10h +
mov ebp eax +
jmp loc_4655CD  +
mov ebx [esp+1Ch] +
push edi  +
mov edi [esi+174h] +
test edi edi +
jz loc_46564A  +
mov eax [edi+18h] +
dec dword ptr [esi+170h]  +
push 3Ch  +
push 0  +
push edi  +
mov [esi+174h] eax +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [edi+4] 1 +
cmp dword ptr [esi+16Ch] 0 +
jz loc_465609  +
mov [edi+8] ebx +
jmp loc_465628  +
test ebp ebp +
jnz loc_46561B  +
push ebx  +
call sub_44E600  +
add esp 4 +
mov [edi+8] eax +
jmp loc_46561E  +
mov [edi+8] ebp +
cmp dword ptr [edi+8] 0 +
jz loc_465807  +
cmp dword_4F2460 0 +
jz loc_465680  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_465680  +
call sub_458520  +
push edi  +
mov eax [eax] +
call eax  +
add esp 4 +
jmp loc_465680  +
cmp dword ptr [esi+16Ch] 0 +
push 0  +
jz loc_465658  +
push ebx  +
jmp loc_465669  +
test ebp ebp +
jnz loc_465668  +
push ebx  +
push ebp  +
push dword ptr [esi+8]  +
call sub_423AB0  +
jmp loc_465673  +
push ebp  +
push 0  +
push dword ptr [esi+8]  +
call loc_423B40  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_465807  +
cmp dword ptr [esi+118h] 0 +
jz loc_4656A8  +
mov eax [esi+24h] +
test eax eax +
jz loc_4656A8  +
cmp dword ptr [eax+1Ch] 0FFFFh +
jge loc_46569F  +
mov ax [eax+1Ch] +
jmp loc_4656A4  +
mov eax 0FFFFh +
mov [edi+38h] ax +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_4656BB  +
push edi  +
push dword ptr [esi+8]  +
call sub_421400  +
add esp 8 +
cmp dword ptr [esp+2Ch] 0 +
jle loc_46574E  +
mov ebx [esp+30h] +
push edi  +
push esi  +
mov dword ptr [esi+108h] 0FFFFFFFFh +
call sub_426A40  +
mov ecx [esp+24h] +
add esp 8 +
test ecx ecx +
jz loc_465785  +
cmp dword ptr [ecx+4] 1 +
push edi  +
push ecx  +
jnz loc_465779  +
call sub_421400  +
jmp loc_46577E  +
call sub_421970  +
mov ecx [esp+24h] +
add esp 8 +
mov eax [esp+38h] +
test eax eax +
jz loc_46579E  +
test byte ptr [esi+114h] 4 +
jnz loc_46579E  +
mov ebp [esp+34h] +
sub ebp eax +
jmp loc_4657A2  +
mov ebp [esp+34h] +
cmp dword ptr [esp+28h] 0 +
jz loc_465840  +
cmp dword ptr [edi+24h] 0 +
jnz loc_465840  +
mov ebx [esp+24h] +
push ebx  +
push ecx  +
push dword ptr [esi+8]  +
call sub_424DE0  +
add esp 0Ch +
mov [edi+24h] eax +
test eax eax +
jnz loc_4657F1  +
push offset aXml_1  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4657F1  +
push ebx  +
push edi  +
push dword ptr [esi+8]  +
call sub_424DE0  +
add esp 0Ch +
mov [edi+24h] eax +
cmp dword ptr [edi+24h] 0 +
jnz loc_465840  +
push ebx  +
push 0  +
push edi  +
call sub_423F60  +
add esp 0Ch +
test eax eax +
jnz loc_46581D  +
push offset aXmlsax2startel  +
push esi  +
call sub_464870  +
add esp 8 +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 8 +
retn   +
***
push 0  +
test ebx ebx +
jz loc_46582B  +
push ebx  +
push offset aNamespacePrefi  +
jmp loc_465832  +
push 0  +
push offset aNamespaceDefau  +
push 0C9h  +
push esi  +
call sub_463430  +
add esp 14h +
test ebp ebp +
jle loc_4658D6  +
mov edi [esp+3Ch] +
add edi 10h +
nop   +
mov eax [edi-0Ch] +
test eax eax +
jz loc_4658B6  +
cmp dword ptr [edi-8] 0 +
jnz loc_4658B6  +
cmp dword ptr [esi+16Ch] 0 +
jz loc_465886  +
push dword ptr [edi-10h]  +
push eax  +
push dword ptr [esi+128h]  +
call loc_44F7D0  +
add esp 0Ch +
test eax eax +
jz loc_4658B6  +
push dword ptr [edi]  +
push dword ptr [edi-4]  +
push 0  +
push eax  +
jmp loc_4658C1  +
push 0  +
push 0  +
push eax  +
push dword ptr [edi-10h]  +
call sub_4221A0  +
mov ebx eax +
add esp 10h +
test ebx ebx +
jz loc_4658B6  +
push dword ptr [edi]  +
push dword ptr [edi-4]  +
push 0  +
push ebx  +
push esi  +
call sub_463D10  +
push ebx  +
call off_4EE2F4  +
add esp 18h +
jmp loc_4658CA  +
push dword ptr [edi]  +
push dword ptr [edi-4]  +
push dword ptr [edi-0Ch]  +
push dword ptr [edi-10h]  +
push esi  +
call sub_463D10  +
add esp 14h +
add edi 14h +
sub ebp 1 +
jnz loc_465850  +
cmp dword ptr [esi+68h] 0 +
jz loc_465924  +
cmp dword ptr [esi+88h] 0ABCD1234h +
jnz loc_465924  +
push dword ptr [esi+8]  +
lea edi [esi+6Ch] +
push edi  +
call sub_454EA0  +
add esp 8 +
test eax eax +
jg loc_465902  +
mov dword ptr [esi+64h] 0 +
jns loc_46590B  +
mov dword ptr [esi+0Ch] 0 +
push dword ptr [esi+8]  +
push edi  +
call sub_457140  +
add esp 8 +
mov dword ptr [esi+88h] 0ABCD1235h +
and [esi+64h] eax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
add esp 8 +
retn   +
***
mov edi [esp+arg_0] +
mov esi [edi+174h] +
test esi esi +
jz loc_465951  +
mov eax [esi+18h] +
dec dword ptr [edi+170h]  +
mov [edi+174h] eax +
jmp loc_46595E  +
push 3Ch  +
call off_4EE2E8  +
add esp 4 +
mov esi eax +
test esi esi +
jnz loc_465975  +
push offset aXmlsax2charact  +
push edi  +
call sub_45BA50  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
push ebx  +
push ebp  +
push 3Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov ebx [esp+14h+arg_8] +
add esp 0Ch +
cmp dword ptr [edi+16Ch] 0 +
mov ebp [esp+8+arg_4] +
jz loc_465A3D  +
mov cl [ebx+ebp] +
cmp ebx 8 +
jge loc_4659C9  +
test dword ptr [edi+168h] 10000h +
jz loc_4659C9  +
push ebx  +
lea eax [esi+2Ch] +
push ebp  +
push eax  +
mov [esp+14h+arg_0] eax +
call loc_48C9C0  +
mov eax [esp+14h+arg_0] +
add esp 0Ch +
mov byte ptr [eax+ebx] 0 +
jmp loc_465A3F  +
cmp ebx 3 +
jg loc_4659F6  +
cmp cl 22h +
jz loc_4659E4  +
cmp cl 27h +
jz loc_4659E4  +
cmp cl 3Ch +
jnz loc_4659F6  +
cmp byte ptr [ebx+ebp+1] 21h +
jz loc_4659F6  +
push ebx  +
push ebp  +
push dword ptr [edi+128h]  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_465A3F  +
mov al [ebp+0] +
cmp al 20h +
jz loc_465A09  +
cmp al 9 +
jb loc_465A05  +
cmp al 0Ah +
jbe loc_465A09  +
cmp al 0Dh +
jnz loc_465A3D  +
cmp ebx 3Ch +
jge loc_465A3D  +
cmp cl 3Ch +
jnz loc_465A3D  +
cmp byte ptr [ebx+ebp+1] 21h +
jz loc_465A3D  +
mov ecx 1 +
cmp ebx ecx +
jle loc_4659E4  +
mov al [ecx+ebp] +
cmp al 20h +
jz loc_465A36  +
cmp al 9 +
jb loc_465A32  +
cmp al 0Ah +
jbe loc_465A36  +
cmp al 0Dh +
jnz loc_465A3D  +
inc ecx  +
cmp ecx ebx +
jl loc_465A23  +
jmp loc_4659E4  +
xor eax eax +
mov dword ptr [esi+4] 3 +
mov dword ptr [esi+8] offset aText +
test eax eax +
jnz loc_465A7E  +
push ebx  +
push ebp  +
call sub_44E8A0  +
add esp 8 +
mov [esi+28h] eax +
test eax eax +
jnz loc_465A81  +
push offset aXmlsax2textnod  +
push edi  +
call sub_464870  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
mov [esi+28h] eax +
cmp dword ptr [edi+118h] 0 +
jz loc_465AC2  +
mov eax [edi+24h] +
test eax eax +
jz loc_465AC2  +
cmp dword ptr [eax+1Ch] 0FFFFh +
jge loc_465AA4  +
mov ax [eax+1Ch] +
mov [esi+38h] ax +
jmp loc_465AC2  +
mov eax 0FFFFh +
mov [esi+38h] ax +
test dword ptr [edi+168h] 400000h +
jz loc_465AC2  +
mov eax [edi+24h] +
mov eax [eax+1Ch] +
mov [esi+34h] eax +
cmp dword_4F2460 0 +
jz loc_465AE2  +
call sub_458520  +
cmp dword ptr [eax] 0 +
jz loc_465AE2  +
call sub_458520  +
push esi  +
mov eax [eax] +
call eax  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jz loc_465C03  +
mov eax [esi+0D8h] +
push ebx  +
push ebp  +
push edi  +
cmp eax 1 +
jnz loc_465B68  +
push [esp+0Ch+arg_10]  +
mov edi [esp+10h+arg_C] +
mov ebp [esp+10h+arg_4] +
push edi  +
push [esp+14h+arg_8]  +
push 3  +
push ebp  +
push dword ptr [esi+8]  +
call sub_457340  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_465BBA  +
cmp [esi+10Ch] eax +
jz loc_465C00  +
mov eax [esi] +
test eax eax +
jz loc_465C00  +
mov eax [eax+54h] +
test eax eax +
jz loc_465C00  +
push ebp  +
push offset aEntitySAlready  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
cmp eax 2 +
jnz loc_465BEA  +
push [esp+0Ch+arg_10]  +
mov edi [esp+10h+arg_C] +
mov ebp [esp+10h+arg_4] +
push edi  +
push [esp+14h+arg_8]  +
push 3  +
push ebp  +
push dword ptr [esi+8]  +
call sub_4573E0  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_465BBA  +
cmp [esi+10Ch] eax +
jz loc_465C00  +
mov eax [esi] +
test eax eax +
jz loc_465C00  +
mov eax [eax+54h] +
test eax eax +
jz loc_465C00  +
push ebp  +
push offset aEntitySAlrea_0  +
push dword ptr [esi+4]  +
call eax  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
cmp dword ptr [ebx+40h] 0 +
jnz loc_465C00  +
test edi edi +
jz loc_465C00  +
mov eax [esi+24h] +
test eax eax +
jz loc_465BD2  +
mov eax [eax+4] +
test eax eax +
jnz loc_465BD8  +
mov eax [esi+0B4h] +
push eax  +
push edi  +
call loc_4587B0  +
add esp 8 +
mov [ebx+40h] eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
push 0  +
push [esp+10h+arg_4]  +
push offset aSax_xmlsax2unp  +
push 1  +
push esi  +
call sub_463350  +
add esp 14h +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_465D41  +
cmp dword ptr [ecx+0D4h] 0 +
jz loc_465D3E  +
cmp dword ptr [ecx+0ACh] 0FFFFFFFFh +
jz locret_465D6D  +
mov [ecx+54h] edx +
mov eax [esp+arg_C] +
push eax  +
push [esp+4+arg_8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 1  +
push edx  +
push 1  +
push 0  +
push ecx  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
push ebp  +
mov ebp [esp+4+arg_4] +
push edi  +
xor edi edi +
test ebp ebp +
jnz loc_465D85  +
test ebx ebx +
jz loc_465D8D  +
mov eax [esp+8+arg_0] +
test eax eax +
jnz loc_465D93  +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
cmp dword_4F2928 edi +
jz loc_465DDE  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
test ebp ebp +
jz loc_465DCA  +
test ebx ebx +
jz loc_465DC2  +
push ebx  +
push ebp  +
push offset aResolvePubidSS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
jmp loc_465DD9  +
push ebp  +
push offset aResolvePubidS  +
jmp loc_465DD0  +
push ebx  +
push offset aResolveSysidS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
mov eax [esp+0Ch+arg_0] +
pop esi  +
cmp dword ptr [eax] 1 +
push ebx  +
push ebp  +
jnz loc_465DFF  +
push dword ptr [eax+3Ch]  +
call sub_466020  +
mov edi eax +
add esp 0Ch +
cmp edi 0FFFFFFFFh +
jnz loc_465E17  +
xor edi edi +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
push eax  +
call sub_4664A0  +
add esp 0Ch +
test eax eax +
jz loc_465E17  +
push eax  +
call sub_44E600  +
add esp 4 +
mov edi eax +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
***
mov ebp [esp+arg_4] +
push edi  +
xor edi edi +
test ebp ebp +
jz loc_465EB1  +
mov ebx [esp+4+arg_0] +
test ebx ebx +
jz loc_465EB1  +
cmp dword_4F2928 edi +
jz loc_465E5E  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push ebp  +
push offset aResolveUriS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
cmp dword ptr [ebx] 1 +
jnz loc_465E7E  +
push ebp  +
push dword ptr [ebx+3Ch]  +
call sub_4661D0  +
mov edi eax +
add esp 8 +
cmp edi 0FFFFFFFFh +
jnz loc_465EAB  +
xor edi edi +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
mov eax [ebx+34h] +
test eax eax +
jz loc_465EAB  +
push ebp  +
push eax  +
call sub_450440  +
add esp 8 +
test eax eax +
jz loc_465EAB  +
cmp dword ptr [eax+0Ch] 0Dh +
jnz loc_465EAB  +
mov eax [eax+18h] +
test eax eax +
jz loc_465EAB  +
push eax  +
call sub_44E600  +
add esp 4 +
mov edi eax +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
retn   +
pop edi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
cmp dword_4F2938 0 +
mov edx [esp+arg_18] +
mov ecx [esp+arg_14] +
mov eax [esp+arg_10] +
push edx  +
push ecx  +
push eax  +
push [esp+0Ch+arg_C]  +
push 0  +
push 0  +
push edx  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 2  +
push [esp+30h+arg_8]  +
push 14h  +
push [esp+38h+arg_4]  +
push [esp+3Ch+arg_0]  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 4Ch +
retn   +
***
cmp dword_4F2938 0 +
retn   +
***
cmp [esp+arg_0] 0 +
jnz loc_465FBA  +
xor eax eax +
retn   +
push esi  +
push edi  +
mov edi [esp+8+arg_4] +
push edi  +
call loc_466390  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_465FD7  +
xor edi edi +
cmp byte ptr [esi] 0 +
cmovnz edi esi +
push edi  +
push [esp+0Ch+arg_0]  +
call sub_450440  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_466004  +
cmp dword ptr [edi+0Ch] 0Eh +
jnz loc_466004  +
test esi esi +
jz loc_465FFE  +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+18h] +
pop edi  +
pop esi  +
retn   +
test esi esi +
jz loc_466012  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov edi [esp+arg_0] +
xor ebp ebp +
test edi edi +
jnz loc_466031  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jnz loc_466046  +
cmp [esp+4+arg_8] ebp +
jnz loc_466046  +
pop ebx  +
pop edi  +
xor eax eax +
pop ebp  +
retn   +
push esi  +
push ebx  +
call loc_466390  +
mov esi eax +
add esp 4 +
mov [esp+8+arg_0] esi +
test esi esi +
jz loc_466061  +
xor ebx ebx +
cmp [esi] bl +
cmovnz ebx esi +
push 0Dh  +
push offset aUrnPublicid  +
push ebx  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_4660BB  +
push ebx  +
call loc_4664F0  +
add esp 4 +
mov ebp eax +
cmp dword_4F2928 0 +
jz loc_4660B4  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
test ebp ebp +
jnz loc_4660A1  +
push ebx  +
push offset aPublicUrnIdSEx  +
jmp loc_4660A7  +
push ebp  +
push offset aPublicUrnIdExp  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov esi [esp+14h+arg_0] +
add esp 0Ch +
push [esp+8+arg_8]  +
push ebp  +
jmp loc_466137  +
push 0Dh  +
push offset aUrnPublicid  +
push [esp+10h+arg_8]  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_466165  +
push [esp+8+arg_8]  +
call loc_4664F0  +
add esp 4 +
mov ebp eax +
cmp dword_4F2928 0 +
jz loc_46611B  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
test ebp ebp +
jnz loc_466108  +
push [esp+8+arg_8]  +
push offset aSystemUrnIdSEx  +
jmp loc_46610E  +
push ebp  +
push offset aSystemUrnIdExp  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov esi [esp+14h+arg_0] +
add esp 0Ch +
test ebx ebx +
jnz loc_466123  +
push ebx  +
push ebp  +
jmp loc_466137  +
push ebp  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_466135  +
push 0  +
jmp loc_466136  +
push ebp  +
push ebx  +
push edi  +
call sub_466020  +
add esp 0Ch +
mov edi eax +
test ebp ebp +
jz loc_466150  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
test esi esi +
jz loc_46615E  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+0Ch] 1 +
jnz loc_4661A2  +
cmp dword ptr [edi+8] 0 +
jnz loc_46617A  +
push edi  +
call sub_466F00  +
add esp 4 +
mov eax [edi+8] +
test eax eax +
jz loc_4661A2  +
push [esp+8+arg_8]  +
push ebx  +
push eax  +
call loc_4666A0  +
mov ebp eax +
add esp 0Ch +
test ebp ebp +
jnz loc_4661AC  +
mov ecx [edi+8] +
test ecx ecx +
jz loc_4661A2  +
cmp dword ptr [ecx+24h] 32h +
jg loc_4661AA  +
mov edi [edi] +
test edi edi +
jnz loc_466165  +
jmp loc_4661AC  +
xor ebp ebp +
test esi esi +
jz loc_4661BA  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
pop ebx  +
pop edi  +
mov eax ebp +
pop ebp  +
retn   +
***
push edi  +
xor edi edi +
test esi esi +
jnz loc_4661E1  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx [esp+8+arg_4] +
test ebx ebx +
jnz loc_4661F0  +
pop ebx  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
push 0Dh  +
push offset aUrnPublicid  +
push ebx  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jnz loc_466262  +
push ebp  +
push ebx  +
call loc_4664F0  +
add esp 4 +
mov ebp eax +
cmp dword_4F2928 edi +
jz loc_46623F  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
test ebp ebp +
jnz loc_466230  +
push ebx  +
push offset aUrnIdSExpanded  +
jmp loc_466236  +
push ebp  +
push offset aUrnIdExpandedT  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
push 0  +
push ebp  +
push esi  +
call sub_466020  +
add esp 0Ch +
mov esi eax +
test ebp ebp +
jz loc_46625B  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
pop ebp  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
cmp dword ptr [esi+0Ch] 1 +
jnz loc_46628E  +
cmp dword ptr [esi+8] 0 +
jnz loc_466277  +
push esi  +
call sub_466F00  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_46628E  +
push ebx  +
push eax  +
call loc_466B80  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_466294  +
mov esi [esi] +
test esi esi +
jnz loc_466262  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
cmp dword_4F2938 0 +
jnz loc_4662AE  +
call sub_467180  +
push ebx  +
mov ebx [esp+4+arg_4] +
push edi  +
mov edi [esp+8+arg_8] +
test ebx ebx +
jnz loc_4662C0  +
test edi edi +
jz loc_466324  +
cmp dword_4F2928 0 +
jz loc_466308  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
test ebx ebx +
jz loc_4662F8  +
test edi edi +
jz loc_4662F0  +
push edi  +
push ebx  +
push offset aLocalResolvePu  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
jmp loc_466307  +
push ebx  +
push offset aLocalResolve_0  +
jmp loc_4662FE  +
push edi  +
push offset aLocalResolveSy  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
mov eax [esp+8+arg_0] +
test eax eax +
jz loc_466324  +
push edi  +
push ebx  +
push eax  +
call sub_466020  +
add esp 0Ch +
test eax eax +
jz loc_466324  +
cmp eax 0FFFFFFFFh +
jnz loc_466326  +
xor eax eax +
pop edi  +
pop ebx  +
retn   +
***
cmp dword_4F2938 0 +
jnz loc_46633E  +
call sub_467180  +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_466388  +
cmp dword_4F2928 0 +
jz loc_46636D  +
push esi  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push edi  +
push offset aResolveUriS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
mov eax [esp+4+arg_0] +
test eax eax +
jz loc_466388  +
push edi  +
push eax  +
call sub_4661D0  +
add esp 8 +
test eax eax +
jz loc_466388  +
cmp eax 0FFFFFFFFh +
jnz loc_46638A  +
xor eax eax +
pop edi  +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
mov edi 1 +
test esi esi +
jnz loc_4663A4  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
cmp byte ptr [esi] 0 +
mov edx edi +
mov ecx esi +
jz loc_4663E5  +
test edi edi +
jz loc_4663E5  +
mov al [ecx] +
cmp al 20h +
jz loc_4663CA  +
cmp al 9 +
jb loc_4663C2  +
cmp al 0Ah +
jbe loc_4663D5  +
cmp al 0Dh +
jz loc_4663D5  +
xor edx edx +
jmp loc_4663D7  +
test edx edx +
jnz loc_4663D5  +
mov edx 1 +
jmp loc_4663D7  +
xor edi edi +
inc ecx  +
cmp byte ptr [ecx] 0 +
jnz loc_4663B0  +
test edi edi +
jz loc_4663E5  +
test edx edx +
jz loc_46639F  +
push esi  +
call sub_44E600  +
xor edx edx +
add esp 4 +
mov edi eax +
mov ecx edi +
cmp [esi] dl +
jz loc_46642F  +
push ebx  +
lea ebx [edx+1] +
mov al [esi] +
cmp al 20h +
jz loc_466423  +
cmp al 9 +
jb loc_46640E  +
cmp al 0Ah +
jbe loc_466423  +
cmp al 0Dh +
jz loc_466423  +
test edx edx +
jz loc_46641C  +
mov byte ptr [ecx] 20h +
inc ecx  +
xor edx edx +
mov al [esi] +
mov [ecx] al +
inc ecx  +
jmp loc_466428  +
cmp ecx edi +
cmovnz edx ebx +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_466400  +
pop ebx  +
mov eax edi +
mov byte ptr [ecx] 0 +
pop edi  +
pop esi  +
retn   +
***
cmp dword_4F2938 0 +
jnz loc_46644E  +
call sub_467180  +
push [esp+arg_4]  +
push [esp+4+arg_0]  +
push dword_4F2930  +
call sub_465D70  +
add esp 0Ch +
retn   +
***
cmp dword_4F2938 0 +
jnz loc_46647E  +
call sub_467180  +
push [esp+arg_0]  +
push dword_4F2930  +
call sub_465E20  +
add esp 8 +
retn   +
***
mov ecx [esi+34h] +
test ecx ecx +
jz loc_4664EC  +
mov eax [esp+arg_4] +
test eax eax +
jz loc_4664C2  +
push eax  +
push ecx  +
call sub_465FB0  +
add esp 8 +
test eax eax +
jnz loc_4664EE  +
mov eax [esp+arg_8] +
test eax eax +
jz loc_4664EC  +
mov ecx [esi+34h] +
test ecx ecx +
jz loc_4664EC  +
push eax  +
push ecx  +
call sub_450440  +
add esp 8 +
test eax eax +
jz loc_4664EC  +
cmp dword ptr [eax+0Ch] 0Dh +
jnz loc_4664EC  +
mov eax [eax+18h] +
test eax eax +
jnz loc_4664EE  +
xor eax eax +
pop esi  +
retn   +
***
sub esp 7D4h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+7D0h] eax +
push esi  +
push edi  +
mov edi [esp+7E0h] +
xor esi esi +
push 0Dh  +
push offset aUrnPublicid  +
push edi  +
call sub_44E840  +
add esp 0Ch +
test eax eax +
jz loc_46653C  +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+7D0h] +
xor ecx esp +
call sub_488C1C  +
add esp 7D4h +
retn   +
***
mov al [edi+0Dh] +
add edi 0Dh +
test al al +
jz loc_466668  +
lea eax [esp+8] +
mov byte ptr [esp+esi+8] 0 +
push eax  +
call sub_44E600  +
mov ecx [esp+7DCh] +
add esp 4 +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 7D4h +
retn   +
***
sub esp 0E8h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0E4h] eax +
mov edx [esp+0F0h] +
xor ecx ecx +
push ebx  +
mov ebx [esp+0F8h] +
push ebp  +
push esi  +
mov esi [esp+0F8h] +
mov eax [esi+24h] +
lea ebp [esi+24h] +
mov [esp+18h] edx +
mov [esp+1Ch] ebx +
mov [esp+14h] ecx +
cmp eax 32h +
jle loc_466727  +
mov eax [esi+10h] +
push ecx  +
push ecx  +
push eax  +
push offset aDetectedRecurs  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push eax  +
push ecx  +
push ecx  +
push 2  +
push 676h  +
push 14h  +
push ecx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
call sub_43A650  +
add esp 4Ch +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+0E4h] +
xor ecx esp +
call sub_488C1C  +
add esp 0E8h +
retn   +
***
inc eax  +
mov [ebp+0] eax +
push edi  +
test ebx ebx +
jz loc_466968  +
xor edx edx +
mov [esp+24h] ecx +
mov [esp+10h] edx +
mov edi esi +
mov [esp+14h] ecx +
mov eax [edi+0Ch] +
add eax 0FFFFFFFDh +
cmp eax 6 +
ja loc_46676E  +
jmp ds:off_466B5C[eax*4]  +
push dword ptr [edi+10h]  +
push ebx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46685A  +
mov ecx [esp+18h] +
mov edx [esp+10h] +
mov eax [esp+14h] +
mov edi [edi] +
test edi edi +
jnz loc_466744  +
test edx edx +
jz loc_466896  +
cmp dword_4F2928 edi +
jz loc_4667B1  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
mov ecx [esp+10h] +
push dword ptr [ecx+10h]  +
push offset aUsingRewriting  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov edx [esp+1Ch] +
add esp 0Ch +
push dword ptr [edx+18h]  +
call sub_44E600  +
add esp 4 +
test eax eax +
jz loc_4667D0  +
mov ecx [esp+24h] +
add ecx ebx +
push ecx  +
push eax  +
call sub_44E540  +
add esp 8 +
dec dword ptr [ebp+0]  +
jmp loc_466B40  +
push dword ptr [edi+10h]  +
call sub_44E660  +
add esp 4 +
mov [esp+28h] eax +
cmp eax [esp+24h] +
jle loc_46676A  +
push eax  +
push dword ptr [edi+10h]  +
push ebx  +
call sub_44E840  +
mov ecx [esp+24h] +
add esp 0Ch +
test eax eax +
jnz loc_46676E  +
mov eax [esp+28h] +
mov edx edi +
mov [esp+24h] eax +
mov [esp+10h] edx +
jmp loc_466772  +
***
push dword ptr [edi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [edi+10h]  +
push ebx  +
call sub_44E840  +
mov ecx [esp+28h] +
add esp 10h +
mov edx [esp+10h] +
test eax eax +
mov eax [esp+14h] +
jnz loc_466776  +
inc eax  +
mov [esp+14h] eax +
jmp loc_466776  +
***
inc ecx  +
mov [esp+18h] ecx +
jmp loc_46676E  +
***
cmp dword_4F2928 0 +
jz loc_466883  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+18h]  +
push dword ptr [edi+10h]  +
push offset aFoundSystemMat  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
dec dword ptr [ebp+0]  +
push dword ptr [edi+18h]  +
call sub_44E600  +
add esp 4 +
jmp loc_466B40  +
test eax eax +
jz loc_466964  +
xor ebx ebx +
cmp dword ptr [esi+0Ch] 9 +
jnz loc_46694F  +
push dword ptr [esi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esp+2Ch]  +
call sub_44E840  +
add esp 10h +
test eax eax +
jnz loc_46694F  +
xor edi edi +
test ebx ebx +
jle loc_4668EE  +
push dword ptr [esp+edi*4+2Ch]  +
push dword ptr [esi+18h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4668EA  +
inc edi  +
cmp edi ebx +
jl loc_4668D0  +
jmp loc_4668EE  +
cmp edi ebx +
jl loc_46694F  +
cmp ebx 32h +
jge loc_4668FB  +
mov eax [esi+18h] +
mov [esp+ebx*4+2Ch] eax +
inc ebx  +
cmp dword ptr [esi+8] 0 +
jnz loc_466910  +
push esi  +
call sub_466F00  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jz loc_46694F  +
cmp dword_4F2928 0 +
jz loc_466936  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+18h]  +
push offset aTryingSystemDe  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
push dword ptr [esp+20h]  +
push 0  +
push dword ptr [esi+8]  +
call sub_466020  +
add esp 0Ch +
test eax eax +
jnz loc_4667D0  +
mov esi [esi] +
test esi esi +
jnz loc_4668A0  +
dec dword ptr [ebp+0]  +
or eax 0FFFFFFFFh +
jmp loc_466B40  +
mov edx [esp+1Ch] +
test edx edx +
jz loc_466AF5  +
mov edi esi +
xor ebx ebx +
mov eax [edi+0Ch] +
sub eax 3 +
jz loc_4669CF  +
sub eax 2 +
jz loc_4669AF  +
sub eax 3 +
jnz loc_4669C3  +
push dword ptr [edi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [edi+10h]  +
push dword ptr [esp+28h]  +
call sub_44E840  +
add esp 10h +
test eax eax +
jnz loc_4669BF  +
cmp dword ptr [edi+1Ch] 1 +
mov edx [esp+1Ch] +
jnz loc_4669C3  +
inc ebx  +
jmp loc_4669C3  +
push dword ptr [edi+10h]  +
push edx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4669DD  +
mov edx [esp+1Ch] +
mov edi [edi] +
test edi edi +
jz loc_466A16  +
mov ecx [esp+18h] +
jmp loc_466974  +
***
cmp dword ptr [esp+20h] 0 +
jnz loc_4669C3  +
inc ecx  +
mov [esp+18h] ecx +
jmp loc_4669C3  +
***
cmp dword_4F2928 0 +
jz loc_466A03  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+10h]  +
push offset aFoundPublicMat  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
dec dword ptr [ebp+0]  +
push dword ptr [edi+18h]  +
call sub_44E600  +
add esp 4 +
jmp loc_466B40  +
test ebx ebx +
jz loc_466AF1  +
xor ebx ebx +
cmp dword ptr [esi+0Ch] 8 +
jnz loc_466ADF  +
cmp dword ptr [esi+1Ch] 1 +
jnz loc_466ADF  +
push dword ptr [esi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esp+28h]  +
call sub_44E840  +
add esp 10h +
test eax eax +
jnz loc_466ADF  +
xor edi edi +
test ebx ebx +
jle loc_466A7E  +
jl loc_466ADF  +
cmp ebx 32h +
jge loc_466A8B  +
mov eax [esi+18h] +
mov [esp+ebx*4+2Ch] eax +
inc ebx  +
cmp dword ptr [esi+8] 0 +
jnz loc_466AA0  +
push esi  +
call sub_466F00  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jz loc_466ADF  +
cmp dword_4F2928 0 +
jz loc_466AC6  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+18h]  +
push offset aTryingPublicDe  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
push 0  +
push dword ptr [esp+20h]  +
push dword ptr [esi+8]  +
call sub_466020  +
add esp 0Ch +
test eax eax +
jnz loc_4667D0  +
mov esi [esi] +
test esi esi +
jnz loc_466A20  +
dec dword ptr [ebp+0]  +
or eax 0FFFFFFFFh +
jmp loc_466B40  +
mov ebx [esp+20h] +
cmp dword ptr [esp+18h] 0 +
jz loc_466B3B  +
mov edi [esp+1Ch] +
cmp dword ptr [esi+0Ch] 3 +
jnz loc_466B35  +
cmp dword ptr [esi+8] 0 +
jnz loc_466B15  +
push esi  +
call sub_466F00  +
add esp 4 +
mov eax [esi+8] +
test eax eax +
jz loc_466B35  +
push ebx  +
push edi  +
push eax  +
call sub_466020  +
add esp 0Ch +
test eax eax +
jnz loc_4667D0  +
cmp dword ptr [ebp+0] 32h +
jg loc_466B3E  +
mov esi [esi] +
test esi esi +
jnz loc_466B00  +
dec dword ptr [ebp+0]  +
xor eax eax +
mov ecx [esp+0F4h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 0E8h +
retn   +
***
sub esp 0DCh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0D8h] eax +
push ebx  +
push ebp  +
mov ebp [esp+0ECh] +
xor ecx ecx +
push esi  +
mov esi [esp+0ECh] +
xor ebx ebx +
xor edx edx +
mov [esp+0Ch] ecx +
mov [esp+14h] ebx +
mov [esp+18h] edx +
test esi esi +
jz loc_466BED  +
test ebp ebp +
jz loc_466BED  +
cmp dword ptr [esi+24h] 32h +
jle loc_466C07  +
mov eax [esi+10h] +
push edx  +
push edx  +
push eax  +
push offset aDetectedRecurs  +
push edx  +
push edx  +
push edx  +
push edx  +
push eax  +
push edx  +
push edx  +
push 2  +
push 676h  +
push 14h  +
push edx  +
push esi  +
push edx  +
push edx  +
push edx  +
call sub_43A650  +
add esp 4Ch +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
mov ecx [esp+0D8h] +
xor ecx esp +
call sub_488C1C  +
add esp 0DCh +
retn   +
***
xor edx edx +
push edi  +
mov edi esi +
mov [esp+14h] edx +
mov eax [edi+0Ch] +
add eax 0FFFFFFFDh +
cmp eax 9 +
ja loc_466CEC  +
movzx eax ds:byte_466E70[eax] +
jmp ds:off_466E5C[eax*4]  +
push dword ptr [edi+10h]  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_466CE4  +
cmp dword_4F2928 0 +
jz loc_466C67  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+10h]  +
push offset aFoundUriMatchS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
push dword ptr [edi+18h]  +
call sub_44E600  +
add esp 4 +
jmp loc_466E42  +
push dword ptr [edi+10h]  +
call sub_44E660  +
mov ebx eax +
add esp 4 +
cmp ebx [esp+1Ch] +
jle loc_466CE0  +
push ebx  +
push dword ptr [edi+10h]  +
push ebp  +
call sub_44E840  +
mov ecx [esp+1Ch] +
add esp 0Ch +
mov edx [esp+14h] +
test eax eax +
jnz loc_466CDA  +
mov [esp+1Ch] ebx +
mov ebx edi +
mov [esp+18h] ebx +
jmp loc_466CEC  +
push dword ptr [edi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [edi+10h]  +
push ebp  +
call sub_44E840  +
add esp 10h +
test eax eax +
jnz loc_466CE4  +
mov edx [esp+14h] +
inc edx  +
mov [esp+14h] edx +
jmp loc_466CE8  +
inc ecx  +
mov [esp+10h] ecx +
jmp loc_466CEC  +
mov ebx [esp+18h] +
jmp loc_466CEC  +
mov ebx [esp+18h] +
mov edx [esp+14h] +
mov ecx [esp+10h] +
mov edi [edi] +
test edi edi +
jnz loc_466C10  +
test ebx ebx +
jz loc_466D47  +
cmp dword_4F2928 edi +
jz loc_466D1F  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [ebx+10h]  +
push offset aUsingRewriting  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
push dword ptr [ebx+18h]  +
call sub_44E600  +
add esp 4 +
test eax eax +
jz loc_466E42  +
mov ecx [esp+1Ch] +
add ecx ebp +
push ecx  +
push eax  +
call sub_44E540  +
add esp 8 +
jmp loc_466E42  +
test edx edx +
jz loc_466E06  +
xor ebx ebx +
mov eax [esi+0Ch] +
cmp eax 9 +
jz loc_466D62  +
cmp eax 0Ch +
jnz loc_466DF7  +
push dword ptr [esi+10h]  +
call sub_44E660  +
push eax  +
push dword ptr [esi+10h]  +
push ebp  +
call sub_44E840  +
add esp 10h +
test eax eax +
jnz loc_466DF7  +
xor edi edi +
test ebx ebx +
jle loc_466D9F  +
push dword ptr [esp+edi*4+20h]  +
push dword ptr [esi+18h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_466D9B  +
inc edi  +
cmp edi ebx +
jl loc_466D81  +
jmp loc_466D9F  +
cmp edi ebx +
jl loc_466DF7  +
cmp ebx 32h +
jge loc_466DAC  +
mov eax [esi+18h] +
mov [esp+ebx*4+20h] eax +
inc ebx  +
cmp dword ptr [esi+8] 0 +
jnz loc_466DC1  +
push esi  +
call sub_466F00  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jz loc_466DF7  +
cmp dword_4F2928 0 +
jz loc_466DE7  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+18h]  +
push offset aTryingUriDeleg  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
push ebp  +
push dword ptr [esi+8]  +
call sub_4661D0  +
add esp 8 +
test eax eax +
jnz loc_466E42  +
mov esi [esi] +
test esi esi +
jnz loc_466D51  +
or eax 0FFFFFFFFh +
jmp loc_466E42  +
test ecx ecx +
jz loc_466E40  +
xor eax eax +
mov ecx [esp+0E8h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 0DCh +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_466EBE  +
push offset aAllocatingCata  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aAllocatingCata  +
push eax  +
push eax  +
push 2  +
push 2  +
push 14h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esp+0Ch+arg_0] +
add esp 0Ch +
mov eax [esp+arg_4] +
mov [esi] ecx +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0Ah +
mov [esi+38h] eax +
cmp ecx 2 +
jnz loc_466EF8  +
push 0Ah  +
call sub_450110  +
add esp 4 +
mov [esi+34h] eax +
mov eax esi +
pop esi  +
retn   +
***
test edi edi +
jnz loc_466F0E  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
cmp dword ptr [edi+18h] 0 +
jz loc_466F09  +
push dword_4F2934  +
call sub_45E990  +
add esp 4 +
cmp dword ptr [edi+8] 0 +
jz loc_466F3A  +
push dword_4F2934  +
call sub_45E9B0  +
add esp 4 +
xor eax eax +
pop edi  +
retn   +
mov eax dword_4F292C +
push ebx  +
push esi  +
test eax eax +
jz loc_466FEC  +
push dword ptr [edi+18h]  +
push eax  +
call sub_450440  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_466FC6  +
cmp dword_4F2928 0 +
jz loc_466F81  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+18h]  +
push offset aFoundSInFileHa  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
cmp dword ptr [edi+0Ch] 1 +
jnz loc_466FA8  +
mov eax [ebx+8] +
push dword_4F2934  +
mov [edi+8] eax +
mov dword ptr [edi+20h] 0 +
call sub_45E9B0  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
push dword_4F2934  +
mov [edi+8] ebx +
mov dword ptr [edi+20h] 0 +
call sub_45E9B0  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
cmp dword_4F2928 0 +
jz loc_466FEC  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+18h]  +
push offset aSNotFoundInFil  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
push dword ptr [edi+18h]  +
push dword ptr [edi+1Ch]  +
call sub_4675D0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_46701C  +
push dword_4F2934  +
mov dword ptr [edi+0Ch] 2 +
call sub_45E9B0  +
add esp 4 +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
pop edi  +
retn   +
cmp dword ptr [edi+0Ch] 1 +
jnz loc_46702A  +
mov eax [ebx+8] +
mov [edi+8] eax +
jmp loc_46702D  +
mov [edi+8] ebx +
mov eax dword_4F292C +
mov dword ptr [ebx+20h] 1 +
test eax eax +
jnz loc_467050  +
push 0Ah  +
call sub_450110  +
add esp 4 +
mov dword_4F292C eax +
test eax eax +
jz loc_467088  +
cmp dword_4F2928 0 +
jz loc_46707B  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push dword ptr [edi+18h]  +
push offset aSAddedToFileHa  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
mov eax dword_4F292C +
add esp 0Ch +
push ebx  +
push dword ptr [edi+18h]  +
push eax  +
call sub_44FB90  +
add esp 0Ch +
push dword_4F2934  +
call sub_45E9B0  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
push esi  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_467172  +
push ebx  +
push edi  +
nop   +
cmp dword ptr [esi+20h] 1 +
mov ebx [esi] +
jz loc_467166  +
cmp dword_4F2928 0 +
jz loc_467129  +
cmp dword ptr [esi+10h] 0 +
jz loc_4670EA  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+10h]  +
push offset aFreeCatalogEnt  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
jmp loc_467129  +
cmp dword ptr [esi+14h] 0 +
jz loc_46710F  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push dword ptr [esi+14h]  +
push offset aFreeCatalogEnt  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 0Ch +
jmp loc_467129  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push offset aFreeCatalogE_0  +
push dword ptr [eax]  +
mov eax [edi] +
call eax  +
add esp 8 +
mov eax [esi+10h] +
test eax eax +
jz loc_46713A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+14h] +
test eax eax +
jz loc_46714B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_46715C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov esi ebx +
test ebx ebx +
jnz loc_4670B0  +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 104h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+104h+var_4] eax +
cmp dword_4F2938 0 +
jnz loc_46735E  +
push esi  +
push offset aXml_debug_cata  +
call sub_497C99  +
mov ecx dword_4F2928 +
test eax eax +
mov esi 1 +
cmovnz ecx esi +
mov dword_4F2928 ecx +
call sub_45E8F0  +
push eax  +
mov dword_4F2934 eax +
mov dword_4F2938 esi +
call sub_45E990  +
push offset aXml_debug_cata  +
call sub_497C99  +
mov ecx dword_4F2928 +
add esp 0Ch +
test eax eax +
cmovnz ecx esi +
cmp dword_4F2930 0 +
mov dword_4F2928 ecx +
jnz loc_46734F  +
push offset aXml_catalog_fi  +
call sub_497C99  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4672AE  +
push offset ModuleName  +
call GetModuleHandleA  +
test eax eax +
jnz loc_467232  +
push eax  +
call GetModuleHandleA  +
test eax eax +
jz loc_4672A9  +
push 0FFh  +
lea ecx [esp+10Ch+Filename] +
push ecx  +
push eax  +
call GetModuleFileNameA  +
test eax eax +
jz loc_4672A9  +
lea ecx [esp+108h+Filename] +
add ecx eax +
cmp byte ptr [ecx] 5Ch +
jz loc_46725F  +
lea eax [esp+108h+Filename] +
cmp ecx eax +
jbe loc_46725F  +
dec ecx  +
cmp byte ptr [ecx] 5Ch +
jnz loc_467251  +
lea eax [esp+108h+Filename] +
cmp ecx eax +
jz loc_4672A9  +
lea eax [esp+103h] +
sub eax ecx +
push eax  +
push offset a__EtcCatalog  +
push ecx  +
call sub_49BF70  +
lea eax [esp+114h+Filename] +
push eax  +
call sub_458BE0  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_4672A9  +
push 0FFh  +
push esi  +
push offset aFileEtcXmlCata  +
call sub_49BF70  +
push esi  +
call off_4EE2F4  +
add esp 10h +
mov esi offset aFileEtcXmlCata +
push ebp  +
push dword_4EE77C  +
push 1  +
call sub_466E80  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_46734E  +
cmp byte ptr [esi] 0 +
push ebx  +
lea ebx [ebp+3Ch] +
jz loc_467347  +
push edi  +
mov al [esi] +
cmp al 20h +
jz loc_4672E5  +
cmp al 9 +
jl loc_4672E1  +
cmp al 0Ah +
jle loc_4672E5  +
cmp al 0Dh +
jnz loc_4672E8  +
inc esi  +
jmp loc_4672D3  +
mov al [esi] +
test al al +
jz loc_467346  +
mov ecx esi +
cmp al 20h +
jz loc_467308  +
cmp al 9 +
jl loc_4672FC  +
cmp al 0Ah +
jle loc_467308  +
cmp al 0Dh +
jz loc_467308  +
mov al [esi+1] +
inc esi  +
test al al +
jnz loc_4672F0  +
mov eax esi +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_467341  +
push 0  +
push dword_4EE77C  +
push edi  +
push 0  +
push 0  +
push 1  +
call sub_467380  +
test eax eax +
mov [ebx] eax +
push edi  +
cmovnz ebx eax +
call off_4EE2F4  +
add esp 1Ch +
cmp byte ptr [esi] 0 +
jnz loc_4672D3  +
pop edi  +
mov dword_4F2930 ebp +
pop ebx  +
pop ebp  +
push dword_4F2934  +
call sub_45E9B0  +
add esp 4 +
pop esi  +
mov ecx [esp+104h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 104h +
retn   +
***
push 2Ch  +
xor ebx ebx +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4673C2  +
push offset aAllocatingCa_0  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aAllocatingCa_0  +
push eax  +
push eax  +
push 2  +
push 2  +
push 14h  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
mov eax [esp+arg_0] +
mov [esi] ebx +
mov [esi+4] ebx +
mov [esi+8] ebx +
mov [esi+0Ch] eax +
push edi  +
cmp eax 5 +
jz loc_4673E2  +
cmp eax 8 +
jz loc_4673E2  +
mov edi [esp+4+arg_4] +
jmp loc_4673FD  +
mov edi [esp+4+arg_4] +
push edi  +
call loc_466390  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_4673FD  +
xor edi edi +
cmp byte ptr [ebx] 0 +
cmovnz edi ebx +
test edi edi +
jz loc_46740F  +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+10h] eax +
jmp loc_467416  +
mov dword ptr [esi+10h] 0 +
test ebx ebx +
jz loc_467424  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov edi [esp+4+arg_8] +
test edi edi +
jz loc_46743A  +
push edi  +
call sub_44E600  +
add esp 4 +
mov [esi+14h] eax +
jmp loc_467441  +
mov dword ptr [esi+14h] 0 +
mov eax [esp+4+arg_C] +
test eax eax +
jnz loc_467454  +
mov eax edi +
test edi edi +
jnz loc_467454  +
mov [esi+18h] edi +
jmp loc_467460  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [esi+18h] eax +
mov eax [esp+4+arg_10] +
mov [esi+1Ch] eax +
mov eax [esp+4+arg_14] +
mov [esi+28h] eax +
mov eax esi +
pop edi  +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
pop esi  +
pop ebx  +
retn   +
***
push edi  +
xor edi edi +
call sub_45C550  +
mov esi eax +
test esi esi +
jnz loc_4674C3  +
call sub_458340  +
cmp [eax+58h] edi +
jz loc_4674BD  +
call sub_458340  +
push offset aOutOfMemory  +
push esi  +
mov eax [eax+58h] +
call eax  +
add esp 8 +
pop edi  +
xor eax eax +
pop esi  +
pop ecx  +
retn   +
push ebp  +
mov ebp [esp+10h+arg_0] +
push 0  +
push ebp  +
call sub_4605F0  +
add esp 8 +
mov [esp+10h+var_4] eax +
test eax eax +
jnz loc_4674EB  +
push esi  +
call loc_45BB70  +
add esp 4 +
xor eax eax +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push ebx  +
push esi  +
call sub_45C4E0  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jnz loc_46750C  +
push esi  +
call loc_45BB70  +
add esp 4 +
xor eax eax +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push ebp  +
call sub_458BE0  +
mov [ebx+4] eax +
mov eax [esp+18h+var_4] +
mov [ebx] eax +
push ebx  +
push dword ptr [eax+10h]  +
call sub_45DDF0  +
push ebx  +
push esi  +
call sub_4268B0  +
add esp 14h +
cmp [esi+0B4h] edi +
jnz loc_467541  +
push ebp  +
call loc_4604E0  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+0B4h] 0 +
jnz loc_467554  +
test edi edi +
jz loc_467554  +
mov [esi+0B4h] edi +
push esi  +
mov dword ptr [esi+64h] 0 +
mov dword ptr [esi+68h] 0 +
mov dword ptr [esi+114h] 0 +
mov dword ptr [esi+10Ch] 0 +
mov dword ptr [esi+16Ch] 1 +
call sub_42DDC0  +
add esp 4 +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4675A3  +
mov edi [esi+8] +
push esi  +
call loc_45BB70  +
add esp 4 +
mov eax edi +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
push dword ptr [esi+8]  +
xor edi edi +
call sub_4229F0  +
add esp 4 +
mov [esi+8] edi +
push esi  +
call loc_45BB70  +
add esp 4 +
mov eax edi +
pop ebx  +
pop ebp  +
pop edi  +
pop esi  +
pop ecx  +
retn   +
***
test ebx ebx +
jnz loc_4675DD  +
xor eax eax +
pop ebx  +
retn   +
push ebp  +
push esi  +
push ebx  +
call sub_467490  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jnz loc_467617  +
cmp dword_4F2928 eax +
jz loc_467611  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push ebx  +
push offset aFailedToParseC  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 0Ch +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
cmp dword_4F2928 0 +
push edi  +
jz loc_467644  +
call sub_4583C0  +
mov edi eax +
call sub_4583E0  +
push ebx  +
mov esi eax +
call GetCurrentThreadId  +
push eax  +
mov eax [edi] +
push offset aDParsingCatalo  +
push dword ptr [esi]  +
call eax  +
add esp 10h +
push ebp  +
call sub_422980  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_467755  +
push offset aCatalog  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467755  +
mov eax [esi+24h] +
test eax eax +
jz loc_467755  +
mov eax [eax+8] +
test eax eax +
jz loc_467755  +
push offset aUrnOasisNamesT  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467755  +
push 0  +
push [esp+10h+arg_0]  +
push 0  +
push ebx  +
push 0  +
push 1  +
call sub_467380  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz loc_4676C6  +
push ebp  +
call sub_4229F0  +
add esp 4 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push offset aPrefer  +
push esi  +
call sub_423450  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_467736  +
push offset aSystem  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4676F6  +
mov [esp+0Ch+arg_0] 2 +
jmp loc_46772C  +
push offset aPublic  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467712  +
mov [esp+0Ch+arg_0] 1 +
jmp loc_46772C  +
push 0  +
push 0  +
push edi  +
push offset aInvalidValueFo  +
push 674h  +
push esi  +
push 0  +
call sub_465F40  +
add esp 1Ch +
push edi  +
call off_4EE2F4  +
add esp 4 +
push 0  +
push ebx  +
push [esp+14h+arg_0]  +
push dword ptr [esi+0Ch]  +
call loc_4677A0  +
push ebp  +
call sub_4229F0  +
add esp 14h +
mov eax ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push 0  +
push 0  +
push ebx  +
push offset aFileSIsNotAnXm  +
push 0  +
push 0  +
push 0  +
push 0  +
push ebx  +
push 0  +
push 0  +
push 2  +
push 675h  +
push 14h  +
push ebp  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
push ebp  +
call sub_4229F0  +
add esp 50h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+10h] +
test esi esi +
jz loc_467AC1  +
push ebx  +
mov ebx [esp+20h] +
push ebp  +
mov ebp [esp+1Ch] +
push edi  +
mov eax [esi+24h] +
test eax eax +
jz loc_467AB3  +
mov eax [eax+8] +
test eax eax +
jz loc_467AB3  +
push offset aUrnOasisNamesT  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467AB3  +
push offset aGroup_0  +
push dword ptr [esi+8]  +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov [esp+24h] edi +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4678DA  +
push offset aPrefer  +
push esi  +
mov dword ptr [esp+18h] 0 +
call sub_423450  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_467894  +
push offset aSystem  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46784A  +
mov dword ptr [esp+1Ch] 2 +
jmp loc_467882  +
push offset aPublic  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467866  +
mov dword ptr [esp+1Ch] 1 +
jmp loc_467882  +
push 0  +
push 0  +
push edi  +
push offset aInvalidValueFo  +
push 674h  +
push esi  +
push dword ptr [esp+3Ch]  +
call sub_465F40  +
add esp 1Ch +
push edi  +
call off_4EE2F4  +
mov eax [esp+20h] +
add esp 4 +
mov [esp+10h] eax +
push offset aId  +
push esi  +
call sub_423450  +
push offset aHttpWww_w3_org  +
push offset aBase  +
push esi  +
mov edi eax +
call sub_423420  +
push ebx  +
push dword ptr [esp+28h]  +
mov [esp+30h] eax +
push 0  +
push eax  +
push edi  +
push 4  +
call sub_467380  +
push edi  +
mov ebx eax +
call off_4EE2F4  +
mov edi [esp+4Ch] +
add esp 30h +
jmp loc_467A60  +
push offset aPublic  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467906  +
push ebx  +
push ebp  +
push offset aUri_0  +
push offset aPublicid  +
push offset aPublic  +
push 5  +
jmp loc_467A55  +
push offset aSystem  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467932  +
push ebx  +
push ebp  +
push offset aUri_0  +
push offset aSystemid  +
push offset aSystem  +
push 6  +
jmp loc_467A55  +
push offset aRewritesystem  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46795E  +
push ebx  +
push ebp  +
push offset aRewriteprefix  +
push offset aSystemidstarts  +
push offset aRewritesystem  +
push 7  +
jmp loc_467A55  +
push offset aDelegatepublic  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46798A  +
push ebx  +
push ebp  +
push offset aCatalog  +
push offset aPublicidstarts  +
push offset aDelegatepublic  +
push 8  +
jmp loc_467A55  +
push offset aDelegatesystem  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4679B6  +
push ebx  +
push ebp  +
push offset aCatalog  +
push offset aSystemidstarts  +
push offset aDelegatesystem  +
push 9  +
jmp loc_467A55  +
push offset aUri_0  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_4679DF  +
push ebx  +
push ebp  +
push offset aUri_0  +
push offset aName_1  +
push offset aUri_0  +
push 0Ah  +
jmp loc_467A55  +
push offset aRewriteuri  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467A08  +
push ebx  +
push ebp  +
push offset aRewriteprefix  +
push offset aUristartstring  +
push offset aRewriteuri  +
push 0Bh  +
jmp loc_467A55  +
push offset aDelegateuri  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467A31  +
push ebx  +
push ebp  +
push offset aCatalog  +
push offset aUristartstring  +
push offset aDelegateuri  +
push 0Ch  +
jmp loc_467A55  +
push offset aNextcatalog  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_467AB3  +
push ebx  +
push ebp  +
push offset aCatalog  +
push 0  +
push offset aNextcatalog  +
push 3  +
push esi  +
call sub_467AD0  +
add esp 1Ch +
mov ebx eax +
test ebx ebx +
jz loc_467A9D  +
mov ecx [esp+24h] +
test ecx ecx +
jz loc_467A89  +
mov [ebx+4] ecx +
mov eax [ecx+8] +
test eax eax +
jnz loc_467A7B  +
mov [ecx+8] ebx +
jmp loc_467A89  +
cmp dword ptr [eax] 0 +
jz loc_467A87  +
mov eax [eax] +
cmp dword ptr [eax] 0 +
jnz loc_467A80  +
mov [eax] ebx +
cmp dword ptr [ebx+0Ch] 4 +
jnz loc_467A9D  +
push ebx  +
push ecx  +
push edi  +
push dword ptr [esi+0Ch]  +
call loc_4677A0  +
add esp 10h +
mov eax [esp+14h] +
test eax eax +
jz loc_467AAF  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov ebx [esp+28h] +
mov esi [esi+18h] +
test esi esi +
jnz loc_4677C0  +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
add esp 8 +
retn   +
***
mov ebx [esp+8+arg_C] +
push ebp  +
mov ebp [esp+0Ch+arg_8] +
push esi  +
mov esi [esp+10h+arg_0] +
push edi  +
xor edi edi +
mov [esp+14h+var_4] 1 +
test ebx ebx +
jz loc_467B28  +
push ebx  +
push esi  +
call sub_423450  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_467B28  +
push eax  +
push ebx  +
push ebp  +
push offset aSEntryLacksS  +
push eax  +
push eax  +
push eax  +
push ebx  +
push ebp  +
push eax  +
push eax  +
push 2  +
push 672h  +
push 14h  +
push esi  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 4Ch +
mov [esp+14h+var_4] edi +
push [esp+14h+arg_10]  +
push esi  +
call sub_423450  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_467B66  +
push eax  +
mov eax [esp+18h+arg_10] +
push eax  +
push ebp  +
push offset aSEntryLacksS  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push ebp  +
push ebx  +
push ebx  +
push 2  +
push 672h  +
push 14h  +
push esi  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_43A650  +
add esp 4Ch +
jmp loc_467B6D  +
cmp [esp+14h+var_4] 0 +
jnz loc_467B91  +
test edi edi +
jz loc_467B7B  +
push edi  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_467B89  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
pop ecx  +
retn   +
push esi  +
push dword ptr [esi+20h]  +
call near ptr dword_42477C+14h  +
push eax  +
push ebx  +
mov [esp+24h+var_4] eax +
call loc_4587B0  +
add esp 10h +
mov [esp+14h+arg_C] eax +
test eax eax +
jz loc_467C0D  +
cmp dword_4F2928 1 +
jle loc_467BEE  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push [esp+14h+arg_C]  +
test edi edi +
jz loc_467BDF  +
push edi  +
push ebp  +
push offset aFoundSSS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 14h +
jmp loc_467BEE  +
push ebp  +
push offset aFoundSS  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
push [esp+14h+arg_18]  +
mov ebp [esp+18h+arg_C] +
push [esp+18h+arg_14]  +
push ebp  +
push ebx  +
push edi  +
push [esp+28h+arg_4]  +
call sub_467380  +
add esp 18h +
mov esi eax +
jmp loc_467C44  +
mov eax [esp+14h+arg_10] +
push ebx  +
push eax  +
push ebp  +
push offset aSEntrySBroken?  +
push 0  +
push 0  +
push ebx  +
push eax  +
push ebp  +
push 0  +
push 0  +
push 2  +
push 673h  +
push 14h  +
push esi  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
mov ebp [esp+60h+arg_C] +
add esp 4Ch +
xor esi esi +
test edi edi +
jz loc_467C52  +
push edi  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
mov eax [esp+18h+var_4] +
add esp 4 +
test eax eax +
jz loc_467C6E  +
push eax  +
call off_4EE2F4  +
add esp 4 +
test ebp ebp +
jz loc_467C7C  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push 2  +
push 2  +
push 0Dh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_467D4A  +
cmp dword ptr [esi+8] 0 +
jz loc_467D40  +
push edi  +
xor edi edi +
cmp [esi] edi +
jle loc_467D33  +
mov eax [esi+8] +
push dword ptr [eax+edi*4]  +
call sub_445600  +
inc edi  +
add esp 4 +
cmp edi [esi] +
jl loc_467D20  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test edi edi +
jz loc_467E65  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_467E64  +
push ebx  +
push ebp  +
mov ebp [edi] +
xor edx edx +
test ebp ebp +
jle loc_467DB4  +
mov ebx [edi+8] +
mov ecx [ebx] +
cmp ecx esi +
jz loc_467DF2  +
test ecx ecx +
jz loc_467DAC  +
mov eax [ecx] +
cmp eax [esi] +
jnz loc_467DAC  +
cmp eax 6 +
jnz loc_467DAC  +
mov eax [ecx+1Ch] +
cmp eax [esi+1Ch] +
jnz loc_467DAC  +
mov eax [ecx+20h] +
cmp eax [esi+20h] +
jnz loc_467DAC  +
mov eax [ecx+24h] +
cmp eax [esi+24h] +
jnz loc_467DAC  +
mov eax [ecx+28h] +
cmp eax [esi+28h] +
jz loc_467DF2  +
inc edx  +
add ebx 4 +
cmp edx ebp +
jl loc_467D77  +
mov eax [edi+4] +
test eax eax +
jnz loc_467E00  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [edi+8] eax +
test eax eax +
jz loc_467E1D  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
pop ebp  +
movups oword ptr [eax+10h] xmm0 +
pop ebx  +
movq qword ptr [eax+20h] xmm0 +
mov ecx [edi] +
mov eax [edi+8] +
mov dword ptr [edi+4] 0Ah +
mov [eax+ecx*4] esi +
inc dword ptr [edi]  +
pop esi  +
pop edi  +
retn   +
push esi  +
call sub_445600  +
add esp 4 +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp ebp eax +
jnz loc_467E58  +
add eax eax +
mov [edi+4] eax +
shl eax 2 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_467E55  +
push offset aAddingLocation  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aAddingLocation  +
push 0  +
push 0  +
push 2  +
push 2  +
push 0Dh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
pop ebp  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [edi+8] eax +
mov ecx [edi] +
mov eax [edi+8] +
pop ebp  +
pop ebx  +
mov [eax+ecx*4] esi +
inc dword ptr [edi]  +
pop esi  +
pop edi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_467EAE  +
push offset aAllocatingLoca  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aAllocatingLoca  +
push eax  +
push eax  +
push 2  +
push 2  +
push 0Dh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_0] +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jz loc_467F10  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [esi+8] eax +
test eax eax +
jnz loc_467EF0  +
push offset aAllocatingLoca  +
call sub_467CD0  +
push esi  +
call off_4EE2F4  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov ecx [esi] +
mov eax [esi+8] +
mov dword ptr [esi+4] 0Ah +
mov [eax+ecx*4] edi +
inc dword ptr [esi]  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jnz loc_467F2D  +
xor eax eax +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
test eax eax +
jz loc_468068  +
push ebx  +
xor ebx ebx +
mov [esp+0Ch] ebx +
cmp [eax] ebx +
jle loc_468067  +
push ebp  +
push esi  +
mov eax [ebx] +
cmp eax esi +
jz loc_468003  +
test eax eax +
jz loc_467FA9  +
mov ecx [eax] +
cmp ecx [esi] +
jnz loc_467FA9  +
cmp ecx 6 +
jnz loc_467FA9  +
mov ecx [eax+1Ch] +
cmp ecx [esi+1Ch] +
jnz loc_467FA9  +
mov ecx [eax+20h] +
cmp ecx [esi+20h] +
jnz loc_467FA9  +
mov ecx [eax+24h] +
cmp ecx [esi+24h] +
jnz loc_467FA9  +
mov eax [eax+28h] +
cmp eax [esi+28h] +
jz loc_468003  +
inc edx  +
add ebx 4 +
cmp edx ebp +
jl loc_467F70  +
mov ebx [esp+14h] +
mov eax [edi+4] +
test eax eax +
jnz loc_46802A  +
push 28h  +
call off_4EE2E8  +
add esp 4 +
mov [edi+8] eax +
test eax eax +
jnz loc_468012  +
push offset aAddingLocation  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset aAddingLocation  +
push 0  +
push 0  +
push 2  +
push 2  +
push 0Dh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
jmp loc_468054  +
push esi  +
call sub_445600  +
mov ebx [esp+18h] +
add esp 4 +
jmp loc_468054  +
xorps xmm0 xmm0 +
movups oword ptr [eax] xmm0 +
movups oword ptr [eax+10h] xmm0 +
movq qword ptr [eax+20h] xmm0 +
mov dword ptr [edi+4] 0Ah +
jmp loc_46804A  +
cmp ebp eax +
jnz loc_46804A  +
add eax eax +
mov [edi+4] eax +
shl eax 2 +
push eax  +
push dword ptr [edi+8]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_467FCE  +
mov [edi+8] eax +
mov ecx [edi] +
mov eax [edi+8] +
mov [eax+ecx*4] esi +
inc dword ptr [edi]  +
mov eax [esp+18h] +
inc ebx  +
mov [esp+14h] ebx +
cmp ebx [eax] +
jl near ptr dword_467F4C+4  +
pop esi  +
pop ebp  +
pop ebx  +
mov eax edi +
pop edi  +
retn   +
***
test edi edi +
jnz loc_46807D  +
xor eax eax +
pop edi  +
retn   +
push ebx  +
mov ebx [esp+4+arg_8] +
test ebx ebx +
jnz loc_46808B  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
push ebp  +
mov ebp [esp+8+arg_4] +
test ebp ebp +
js loc_46809B  +
cmp [esp+8+arg_C] 0 +
jge loc_4680A1  +
pop ebp  +
pop ebx  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_4680C7  +
push offset aAllocatingRang  +
call sub_467CD0  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+18h+arg_C] +
push esi  +
mov dword ptr [esi] 6 +
mov [esi+1Ch] edi +
mov [esi+20h] ebp +
mov [esi+24h] ebx +
mov [esi+28h] eax +
call sub_468210  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
retn   +
***
test ebx ebx +
jnz loc_46810D  +
xor eax eax +
pop ebx  +
retn   +
push edi  +
mov edi [esp+4+arg_4] +
test edi edi +
jz loc_468127  +
mov eax [edi] +
cmp eax 1 +
jz loc_46812C  +
cmp eax 4 +
jle loc_468127  +
cmp eax 6 +
jle loc_468134  +
pop edi  +
xor eax eax +
pop ebx  +
retn   +
mov eax [edi+4] +
cmp dword ptr [eax] 0 +
jle loc_468127  +
push esi  +
push 30h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_468159  +
push offset aAllocatingRang  +
call sub_467CD0  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov dword ptr [esi] 6 +
add esp 0Ch +
mov [esi+1Ch] ebx +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov eax [edi] +
sub eax 1 +
jz loc_4681E7  +
sub eax 4 +
jz loc_4681CC  +
sub eax 1 +
jz loc_4681B1  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push 24Eh  +
push offset a__Xpointer_c  +
push offset aInternalErrorA  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 10h +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov eax [edi+24h] +
mov [esi+24h] eax +
mov eax [edi+28h] +
push esi  +
mov [esi+28h] eax +
call sub_468210  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov eax [edi+1Ch] +
mov [esi+24h] eax +
mov eax [edi+20h] +
push esi  +
mov [esi+28h] eax +
call sub_468210  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
retn   +
mov eax [edi+4] +
push esi  +
mov ecx [eax] +
mov eax [eax+8] +
mov eax [eax+ecx*4-4] +
mov [esi+24h] eax +
mov dword ptr [esi+28h] 0FFFFFFFFh +
call sub_468210  +
add esp 4 +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
test esi esi +
jz loc_468254  +
cmp dword ptr [esi] 6 +
jnz loc_468254  +
mov eax [esi+24h] +
test eax eax +
jz loc_468254  +
push dword ptr [esi+28h]  +
push eax  +
push dword ptr [esi+20h]  +
push dword ptr [esi+1Ch]  +
call sub_467C90  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jnz loc_468254  +
mov ecx [esi+1Ch] +
mov eax [esi+24h] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
mov [esi+24h] ecx +
mov ecx [esi+20h] +
mov [esi+20h] eax +
mov [esi+28h] ecx +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_46829E  +
push offset aAllocatingLoca  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aAllocatingLoca  +
push eax  +
push eax  +
push 2  +
push 2  +
push 0Dh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push 30h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_0] +
add esp 0Ch +
mov [esi+1Ch] eax +
mov eax esi +
mov dword ptr [esi] 7 +
pop esi  +
retn   +
***
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4682E4  +
cmp al 9 +
jb loc_4682E0  +
cmp al 0Ah +
jbe loc_4682E4  +
cmp al 0Dh +
jnz loc_4682EF  +
test al al +
jz loc_4682D0  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4682D0  +
***
push esi  +
call loc_469120  +
mov ebx eax +
add esp 4 +
mov eax [esi] +
test ebx ebx +
jnz loc_468332  +
cmp byte ptr [eax] 2Ah +
jnz loc_4684A3  +
push ebx  +
push ebx  +
push 4  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_46848D  +
mov eax [esi] +
cmp [eax] bl +
jz loc_46848D  +
inc eax  +
mov [esi] eax +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
cmp byte ptr [eax] 3Ah +
jnz loc_4684AE  +
inc eax  +
mov [esi] eax +
mov al [eax] +
cmp al 20h +
jz loc_468491  +
cmp al 9 +
jb loc_468354  +
cmp al 0Ah +
jbe loc_468491  +
cmp al 0Dh +
jz loc_468491  +
push edi  +
push esi  +
call loc_469360  +
add esp 4 +
mov edi eax +
cmp byte ptr [ebx] 78h +
mov [esp+14h] edi +
jnz loc_4683B2  +
cmp byte ptr [ebx+1] 6Dh +
jnz loc_4683B2  +
cmp byte ptr [ebx+2] 6Ch +
jnz loc_4683B2  +
cmp byte ptr [ebx+3] 0 +
jnz loc_4683B2  +
mov eax [esi+10h] +
mov eax [eax+4] +
test eax eax +
jz loc_4683A1  +
push 0FFFFFFFFh  +
push offset aHttpWww_w3_org  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
mov ebp eax +
jmp loc_46841C  +
push offset aHttpWww_w3_org  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
jmp loc_46841C  +
xor edi edi +
cmp edi [esi+1Ch] +
jge loc_46840B  +
mov eax [esi+18h] +
push ebx  +
push dword ptr [eax+edi*8+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_4683DC  +
inc edi  +
cmp edi [esi+1Ch] +
jl loc_4683C0  +
jmp loc_468406  +
mov eax [esi+10h] +
mov ecx [eax+4] +
mov eax [esi+18h] +
test ecx ecx +
jz loc_4683F9  +
push 0FFFFFFFFh  +
push dword ptr [eax+edi*8]  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_468404  +
push dword ptr [eax+edi*8]  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
cmp edi [esi+1Ch] +
jl loc_468418  +
mov edi [esp+14h] +
mov dword ptr [esi+8] 1 +
jmp loc_46845E  +
mov edi [esp+14h] +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_46842F  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jnz loc_46844A  +
mov eax [esi] +
cmp byte ptr [eax] 2Ah +
jnz loc_468441  +
inc eax  +
push ebp  +
mov [esi] eax +
push edi  +
jmp loc_46844C  +
mov dword ptr [esi+8] 1 +
jmp loc_46845E  +
push ebp  +
push edi  +
push 4  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jz loc_46848C  +
test ebp ebp +
jz loc_468475  +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468475  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
test edi edi +
jz loc_46848C  +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_46848C  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax [esi+10h] +
cmp [eax+4] ebp +
jnz loc_4684A3  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+8] 1 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push 0  +
push ebx  +
push 4  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4684EA  +
cmp al 9 +
jb loc_4684E6  +
cmp al 0Ah +
jbe loc_4684EA  +
cmp al 0Dh +
jnz loc_4684F5  +
test al al +
jz loc_4684D6  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4684D6  +
***
cmp byte ptr [ecx] 2Fh +
jz loc_4686EB  +
mov eax [esi+10h] +
or dword ptr [eax+10h] 200h +
mov eax [esi] +
cmp byte ptr [eax] 2Eh +
jnz loc_4685EF  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_46852A  +
cmp al 9 +
jb loc_468526  +
cmp al 0Ah +
jbe loc_46852A  +
cmp al 0Dh +
jnz loc_468533  +
test al al +
jz loc_468516  +
lea eax [ecx+1] +
jmp loc_468514  +
***
mov al [ecx] +
test al al +
jnz loc_468556  +
push 0  +
push 0  +
push 2  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_4686EB  +
pop edi  +
pop esi  +
retn   +
***
cmp al 2Fh +
jnz loc_4686EB  +
lea eax [ecx+1] +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468577  +
cmp al 9 +
jb loc_468573  +
cmp al 0Ah +
jbe loc_468577  +
cmp al 0Dh +
jnz loc_46857D  +
test al al +
jz loc_468563  +
jmp loc_46855E  +
***
mov eax ecx +
cmp byte ptr [eax] 2Fh +
jnz loc_4685E4  +
mov al [eax-1] +
cmp al 20h +
jz loc_4686EB  +
cmp al 9 +
jb loc_46859B  +
cmp al 0Ah +
jbe loc_4686EB  +
cmp al 0Dh +
jz loc_4686EB  +
push 0  +
push 0  +
push 6  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_4686EB  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4685C7  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4685DB  +
cmp al 9 +
jb loc_4685D7  +
cmp al 0Ah +
jbe loc_4685DB  +
cmp al 0Dh +
jnz loc_4685E4  +
test al al +
jz loc_4685C7  +
lea eax [ecx+1] +
jmp loc_4685C5  +
***
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4686EB  +
push esi  +
call loc_4689B0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4686EB  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468616  +
cmp al 9 +
jb loc_468612  +
cmp al 0Ah +
jbe loc_468616  +
cmp al 0Dh +
jnz loc_468621  +
test al al +
jz loc_468602  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_468602  +
***
mov eax ecx +
cmp byte ptr [eax] 2Fh +
jnz loc_4686E6  +
mov edi [esi+10h] +
mov eax [edi+18h] +
cmp [edi+14h] eax +
jl loc_46865D  +
lea eax [eax+eax*2] +
shl eax 3 +
push eax  +
push dword ptr [edi+1Ch]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jz loc_4686EB  +
mov [edi+1Ch] eax +
mov eax [edi+18h] +
add eax eax +
mov [edi+18h] eax +
mov eax [edi+14h] +
lea ecx [eax+eax*2] +
mov eax [edi+1Ch] +
mov dword ptr [eax+ecx*4] 5 +
mov eax [edi+14h] +
lea ecx [eax+eax*2] +
mov eax [edi+1Ch] +
mov dword ptr [eax+ecx*4+4] 0 +
mov eax [edi+14h] +
lea ecx [eax+eax*2] +
mov eax [edi+1Ch] +
mov dword ptr [eax+ecx*4+8] 0 +
inc dword ptr [edi+14h]  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4686A0  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4686B4  +
cmp al 9 +
jb loc_4686B0  +
cmp al 0Ah +
jbe loc_4686B4  +
cmp al 0Dh +
jnz loc_4686BD  +
test al al +
jz loc_4686A0  +
lea eax [ecx+1] +
jmp loc_46869A  +
***
mov eax ecx +
mov al [eax] +
cmp al 2Fh +
jz loc_4686EB  +
test al al +
jz loc_4686EB  +
push esi  +
call loc_4689B0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jz loc_468602  +
pop edi  +
mov dword ptr [esi+8] 1 +
pop esi  +
retn   +
***
cmp byte ptr [eax] 0 +
jz loc_4686F2  +
mov dword ptr [esi+8] 1 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468719  +
cmp al 9 +
jb loc_468715  +
cmp al 0Ah +
jbe loc_468719  +
cmp al 0Dh +
jnz loc_468724  +
test al al +
jz loc_468705  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_468705  +
***
mov eax [esi] +
mov al [eax] +
cmp al 2Fh +
jnz loc_468738  +
mov eax [esi+10h] +
or dword ptr [eax+10h] 100h +
jmp loc_46874F  +
cmp al 2Eh +
jz loc_468745  +
mov eax [esi+10h] +
test byte ptr [eax+10h] 7 +
jz loc_46874F  +
mov eax [esi+10h] +
or dword ptr [eax+10h] 200h +
mov eax [esi] +
mov cl [eax] +
cmp cl 2Fh +
jnz loc_46878D  +
cmp [eax+1] cl +
jnz loc_46878D  +
push 0  +
push 0  +
push 6  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_4689AC  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_468781  +
inc eax  +
mov [esi] eax +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4687FE  +
inc eax  +
mov [esi] eax +
jmp loc_4687FE  +
cmp cl 2Eh +
jnz loc_4687FE  +
cmp byte ptr [eax+1] 2Fh +
jnz loc_4687FE  +
cmp byte ptr [eax+2] 2Fh +
jnz loc_4687FE  +
push 0  +
push 0  +
push 6  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_4689AC  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4687C2  +
inc eax  +
mov [esi] eax +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4687CC  +
inc eax  +
mov [esi] eax +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4687D6  +
inc eax  +
mov [esi] eax +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4687EA  +
cmp al 9 +
jb loc_4687E6  +
cmp al 0Ah +
jbe loc_4687EA  +
cmp al 0Dh +
jnz loc_4687F3  +
test al al +
jz loc_4687D6  +
lea eax [ecx+1] +
jmp loc_4687D4  +
***
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4689A5  +
mov eax [esi] +
mov cl [eax] +
cmp cl 40h +
jnz loc_468855  +
inc eax  +
push esi  +
mov [esi] eax +
call near ptr dword_4682C0  +
add esp 4 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468827  +
cmp al 9 +
jb loc_468823  +
cmp al 0Ah +
jbe loc_468827  +
cmp al 0Dh +
jnz loc_468832  +
test al al +
jz loc_468813  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_468813  +
***
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_46899E  +
push esi  +
call loc_4689B0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4689AC  +
jmp loc_46899E  +
cmp cl 2Fh +
jnz loc_4688A8  +
push 0  +
push 0  +
push 1  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jnz loc_4689AC  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_468880  +
inc eax  +
mov [esi] eax +
nop   +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468894  +
cmp al 9 +
jb loc_468890  +
cmp al 0Ah +
jbe loc_468894  +
cmp al 0Dh +
jnz loc_46889D  +
test al al +
jz loc_468880  +
lea eax [ecx+1] +
jmp loc_46887C  +
***
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4689A5  +
push esi  +
call loc_4689B0  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
jnz loc_4689AC  +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4688D4  +
cmp al 9 +
jb loc_4688D0  +
cmp al 0Ah +
jbe loc_4688D4  +
cmp al 0Dh +
jnz loc_4688DF  +
test al al +
jz loc_4688C0  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4688C0  +
***
mov eax [esi] +
cmp byte ptr [eax] 2Fh +
jnz loc_46899E  +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_4689AC  +
mov dword ptr [esi+8] 1 +
pop esi  +
retn   +
***
push ebx  +
push ebp  +
push esi  +
mov esi [esp+10h] +
xor ebp ebp +
xor ebx ebx +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_4689D4  +
cmp al 9 +
jb loc_4689D0  +
cmp al 0Ah +
jbe loc_4689D4  +
cmp al 0Dh +
jnz loc_4689DF  +
test al al +
jz loc_4689C0  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_4689C0  +
***
mov ecx [esi] +
mov al [ecx] +
cmp al 2Eh +
jnz loc_468A02  +
push 0  +
push 0  +
push 2  +
push dword ptr [esi+10h]  +
lea eax [ecx+1] +
push esi  +
mov [esi] eax +
call sub_4695B0  +
add esp 14h +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
cmp al 40h +
jnz loc_468A2C  +
mov eax [esi+10h] +
test byte ptr [eax+10h] 2 +
jz loc_468A1A  +
mov dword ptr [esi+8] 1 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
lea eax [ecx+1] +
push esi  +
mov [esi] eax +
call near ptr dword_4682C0  +
add esp 4 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push edi  +
push esi  +
call loc_469120  +
mov edi eax +
add esp 4 +
mov eax [esi] +
test edi edi +
jz loc_468BF3  +
mov al [eax] +
cmp al 20h +
jz loc_468A54  +
cmp al 9 +
jb loc_468A50  +
cmp al 0Ah +
jbe loc_468A54  +
cmp al 0Dh +
jnz loc_468A7F  +
mov ebx 1 +
mov ecx [esi] +
mov al [ecx] +
cmp al 20h +
jz loc_468A74  +
cmp al 9 +
jb loc_468A70  +
cmp al 0Ah +
jbe loc_468A74  +
cmp al 0Dh +
jnz loc_468A7F  +
test al al +
jz loc_468A60  +
lea eax [ecx+1] +
mov [esi] eax +
jmp loc_468A60  +
***
mov ecx [esi] +
mov al [ecx] +
cmp al 3Ah +
jnz loc_468DD0  +
inc ecx  +
mov [esi] ecx +
mov al [ecx] +
cmp al 3Ah +
jz loc_468BB1  +
test ebx ebx +
jnz loc_468DD4  +
cmp al 20h +
jz loc_468DD4  +
cmp al 9 +
jb loc_468AB4  +
cmp al 0Ah +
jbe loc_468DD4  +
cmp al 0Dh +
jz loc_468DD4  +
push esi  +
call loc_469360  +
add esp 4 +
mov ebx eax +
cmp byte ptr [edi] 78h +
mov [esp+14h] ebx +
jnz loc_468B11  +
cmp byte ptr [edi+1] 6Dh +
jnz loc_468B11  +
cmp byte ptr [edi+2] 6Ch +
jnz loc_468B11  +
cmp byte ptr [edi+3] 0 +
jnz loc_468B11  +
mov eax [esi+10h] +
mov eax [eax+4] +
test eax eax +
jz loc_468B00  +
push 0FFFFFFFFh  +
push offset aHttpWww_w3_org  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
mov ebp eax +
jmp loc_468B77  +
push offset aHttpWww_w3_org  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
jmp loc_468B77  +
xor ebx ebx +
cmp ebx [esi+1Ch] +
jge loc_468B63  +
mov eax [esi+18h] +
push edi  +
push dword ptr [eax+ebx*8+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_468B34  +
inc ebx  +
cmp ebx [esi+1Ch] +
jl loc_468B18  +
jmp loc_468B5E  +
mov eax [esi+10h] +
mov ecx [eax+4] +
mov eax [esi+18h] +
test ecx ecx +
jz loc_468B51  +
push 0FFFFFFFFh  +
push dword ptr [eax+ebx*8]  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_468B5C  +
push dword ptr [eax+ebx*8]  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
cmp ebx [esi+1Ch] +
jl loc_468B73  +
mov ebx [esp+14h] +
mov dword ptr [esi+8] 1 +
jmp loc_468CCB  +
mov ebx [esp+14h] +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468B8A  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor edi edi +
test ebx ebx +
jnz loc_468BA8  +
mov eax [esi] +
cmp byte ptr [eax] 2Ah +
jnz loc_468D76  +
push 0  +
inc eax  +
push ebp  +
mov [esi] eax +
push 7  +
jmp loc_468CB7  +
push ebp  +
push ebx  +
push 2  +
jmp loc_468CB7  +
test al al +
jz loc_468BBA  +
lea eax [ecx+1] +
mov [esi] eax +
push offset aChild  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_468D89  +
mov eax [esi+10h] +
cmp [eax+4] ebp +
jnz loc_468BE2  +
push edi  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call loc_469360  +
mov edi eax +
add esp 4 +
mov eax [esi] +
test edi edi +
jnz loc_468C16  +
cmp byte ptr [eax] 2Ah +
jnz loc_468DB6  +
push 0  +
push 0  +
push 8  +
push dword ptr [esi+10h]  +
inc eax  +
push esi  +
mov [esi] eax +
call sub_4695B0  +
add esp 14h +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
cmp byte ptr [eax] 3Ah +
jnz loc_468D82  +
inc eax  +
mov [esi] eax +
mov al [eax] +
cmp al 20h +
jz loc_468DD4  +
cmp al 9 +
jb loc_468C38  +
cmp al 0Ah +
jbe loc_468DD4  +
cmp al 0Dh +
jz loc_468DD4  +
push esi  +
call loc_469360  +
add esp 4 +
mov ebx eax +
cmp byte ptr [edi] 78h +
mov [esp+14h] ebx +
jnz loc_468D18  +
cmp byte ptr [edi+1] 6Dh +
jnz loc_468D18  +
cmp byte ptr [edi+2] 6Ch +
jnz loc_468D18  +
cmp byte ptr [edi+3] 0 +
jnz loc_468D18  +
mov eax [esi+10h] +
mov eax [eax+4] +
test eax eax +
jz loc_468D06  +
push 0FFFFFFFFh  +
push offset aHttpWww_w3_org  +
push eax  +
call sub_44F4D0  +
add esp 0Ch +
mov ebp eax +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468CA9  +
push edi  +
call off_4EE2F4  +
add esp 4 +
xor edi edi +
test ebx ebx +
jz loc_468B90  +
push ebp  +
push ebx  +
push 3  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jz loc_468E09  +
test ebp ebp +
jz loc_468CE2  +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468CE2  +
push ebp  +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jz loc_468DF2  +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468DF2  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
jmp loc_468DF2  +
push offset aHttpWww_w3_org  +
call sub_44E600  +
add esp 4 +
jmp loc_468C94  +
***
xor ebx ebx +
cmp ebx [esi+1Ch] +
jge loc_468B63  +
mov eax [esi+18h] +
push edi  +
push dword ptr [eax+ebx*8+4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_468D3F  +
inc ebx  +
cmp ebx [esi+1Ch] +
jl loc_468D23  +
jmp loc_468D69  +
mov eax [esi+10h] +
mov ecx [eax+4] +
mov eax [esi+18h] +
test ecx ecx +
jz loc_468D5C  +
push 0FFFFFFFFh  +
push dword ptr [eax+ebx*8]  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
jmp loc_468D67  +
push dword ptr [eax+ebx*8]  +
call sub_44E600  +
add esp 4 +
mov ebp eax +
cmp ebx [esi+1Ch] +
mov ebx [esp+14h] +
jl loc_468C96  +
mov dword ptr [esi+8] 1 +
jmp loc_468CCB  +
***
push 0  +
push edi  +
push 3  +
jmp loc_468DE2  +
push offset aAttribute  +
push edi  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_468DD4  +
mov eax [esi+10h] +
cmp [eax+4] ebp +
jnz loc_468DAD  +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+10h] +
test byte ptr [eax+10h] 2 +
jz loc_468DC2  +
pop edi  +
mov dword ptr [esi+8] 1 +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push esi  +
call near ptr dword_4682C0  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
cmp al 2Ah +
jnz loc_468DDD  +
mov dword ptr [esi+8] 1 +
jmp loc_468DF2  +
push 0  +
push edi  +
push 2  +
push dword ptr [esi+10h]  +
push esi  +
call sub_4695B0  +
add esp 14h +
test eax eax +
jz loc_468E09  +
test edi edi +
jz loc_468E09  +
mov eax [esi+10h] +
cmp dword ptr [eax+4] 0 +
jnz loc_468E09  +
push edi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
test esi esi +
jz loc_468EF5  +
mov eax [esi+8] +
test eax eax +
jz loc_468E2D  +
push eax  +
call sub_468E10  +
add esp 4 +
push edi  +
mov edi [esi+20h] +
test edi edi +
jz loc_468E5F  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_468E46  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi] +
test eax eax +
jz loc_468E55  +
push eax  +
call sub_44F150  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_468E70  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+1Ch] 0 +
jz loc_468EC5  +
cmp dword ptr [esi+4] 0 +
jnz loc_468EB9  +
push ebx  +
xor ebx ebx +
cmp [esi+14h] ebx +
jle loc_468EB8  +
push ebp  +
xor ebp ebp +
mov edi [esi+1Ch] +
mov eax [edi+ebp+4] +
test eax eax +
jz loc_468E9C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+ebp+8] +
test eax eax +
jz loc_468EAE  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc ebx  +
add ebp 0Ch +
cmp ebx [esi+14h] +
jl loc_468E87  +
pop ebp  +
pop ebx  +
push dword ptr [esi+1Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
pop edi  +
test eax eax +
jz loc_468ED6  +
push eax  +
call sub_44F150  +
add esp 4 +
movaps xmm0 oword ptr ds:oword_4CAB30 +
movups oword ptr [esi] xmm0 +
push esi  +
movups oword ptr [esi+10h] xmm0 +
mov dword ptr [esi+20h] 0FFFFFFFFh +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
test ebx ebx +
jz loc_468FFA  +
push ebp  +
push esi  +
push edi  +
mov esi ebx +
lea eax [ebx+8] +
mov ebx [eax] +
mov [esp+14h] ebx +
mov dword ptr [eax] 0 +
mov edi [esi+20h] +
test edi edi +
jz loc_468F52  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_468F39  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi] +
test eax eax +
jz loc_468F48  +
push eax  +
call sub_44F150  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_468F63  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+1Ch] 0 +
jz loc_468FC0  +
cmp dword ptr [esi+4] 0 +
jnz loc_468FB4  +
xor ebx ebx +
cmp [esi+14h] ebx +
jle loc_468FB0  +
xor ebp ebp +
mov edi [esi+1Ch] +
mov eax [edi+ebp+4] +
test eax eax +
jz loc_468F95  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+ebp+8] +
test eax eax +
jz loc_468FA7  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc ebx  +
add ebp 0Ch +
cmp ebx [esi+14h] +
jl loc_468F80  +
mov ebx [esp+14h] +
push dword ptr [esi+1Ch]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+4] +
test eax eax +
jz loc_468FD0  +
push eax  +
call sub_44F150  +
add esp 4 +
movaps xmm0 oword ptr ds:oword_4CAB30 +
movups oword ptr [esi] xmm0 +
push esi  +
movups oword ptr [esi+10h] xmm0 +
mov dword ptr [esi+20h] 0FFFFFFFFh +
call off_4EE2F4  +
add esp 4 +
test ebx ebx +
jnz loc_468F10  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_469034  +
push edi  +
pop esi  +
retn   +
***
test esi esi +
jnz loc_46904D  +
xor eax eax +
pop esi  +
retn   +
push 20h  +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_469049  +
mov edx [esp+arg_8] +
xorps xmm0 xmm0 +
mov eax [esp+arg_4] +
movups oword ptr [ecx] xmm0 +
movups oword ptr [ecx+10h] xmm0 +
mov [ecx+0Ch] eax +
mov [ecx] esi +
mov [ecx+4] esi +
test edx edx +
jz loc_469093  +
xor eax eax +
cmp [edx] eax +
jz loc_469089  +
inc eax  +
cmp dword ptr [edx+eax*8] 0 +
jnz loc_469082  +
mov [ecx+1Ch] eax +
mov eax ecx +
mov [ecx+18h] edx +
pop esi  +
retn   +
mov dword ptr [ecx+1Ch] 0 +
mov eax ecx +
mov [ecx+18h] edx +
pop esi  +
retn   +
***
mov edi [esp+arg_0] +
mov eax 4 +
cmp edi eax +
push 14h  +
cmovl edi eax +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4690FE  +
mov eax edi +
xorps xmm0 xmm0 +
shl eax 4 +
movups oword ptr [esi] xmm0 +
push eax  +
mov dword ptr [esi+10h] 0 +
call off_4EE2E8  +
add esp 4 +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_469103  +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+14h] +
mov ecx [edi] +
mov al [ecx] +
cmp al 20h +
jz loc_46913C  +
cmp al 9 +
jb loc_469138  +
cmp al 0Ah +
jbe loc_46913C  +
cmp al 0Dh +
jnz loc_469147  +
test al al +
jz loc_469128  +
lea eax [ecx+1] +
mov [edi] eax +
jmp loc_469128  +
***
lea eax [esp+14h] +
mov ebp ecx +
push eax  +
push ebp  +
push 0  +
mov ebx ebp +
call sub_45CBC0  +
mov esi eax +
add esp 0Ch +
cmp esi 100h +
jge loc_46920D  +
cmp esi 41h +
jl loc_469173  +
cmp esi 5Ah +
jle loc_4691B0  +
cmp esi 61h +
jl loc_46917D  +
cmp esi 7Ah +
jle loc_4691B0  +
cmp esi 0C0h +
jl loc_46918D  +
cmp esi 0D6h +
jle loc_4691B0  +
cmp esi 0D8h +
jl loc_46919D  +
cmp esi 0F6h +
jle loc_4691B0  +
cmp esi 0F8h +
jl loc_46921F  +
cmp esi 100h +
jge loc_46926B  +
cmp esi 41h +
jl loc_4691CA  +
cmp esi 5Ah +
jle loc_469315  +
cmp esi 61h +
jl loc_4691D8  +
cmp esi 7Ah +
jle loc_469315  +
cmp esi 0C0h +
jl loc_4691EC  +
cmp esi 0D6h +
jle loc_469315  +
cmp esi 0D8h +
jl loc_469200  +
cmp esi 0F6h +
jle loc_469315  +
cmp esi 0F8h +
jl loc_469281  +
jmp loc_469315  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4691B0  +
cmp esi 100h +
jl loc_46925B  +
cmp esi 4E00h +
jl loc_46923B  +
cmp esi 9FA5h +
jle loc_4691B0  +
cmp esi 3007h +
jz loc_4691B0  +
cmp esi 3021h +
jl loc_46925B  +
cmp esi 3029h +
jle loc_4691B0  +
cmp esi 5Fh +
jz loc_4691B0  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469315  +
cmp esi 100h +
jl loc_4692C5  +
cmp esi 4E00h +
jl loc_469299  +
cmp esi 9FA5h +
jle loc_469315  +
cmp esi 3007h +
jz loc_469315  +
cmp esi 3021h +
jl loc_4692B1  +
cmp esi 3029h +
jle loc_469315  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469315  +
jmp loc_4692CD  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_469315  +
cmp esi 2Eh +
jz loc_469315  +
cmp esi 2Dh +
jz loc_469315  +
cmp esi 5Fh +
jz loc_469315  +
cmp esi 100h +
jl loc_469306  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469315  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_469311  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_469330  +
add ebx [esp+14h] +
lea eax [esp+14h] +
push eax  +
push ebx  +
push 0  +
call sub_45CBC0  +
add esp 0Ch +
mov esi eax +
jmp loc_4691B0  +
***
mov ecx [edi+0Ch] +
mov eax ebx +
sub eax ebp +
push eax  +
push ebp  +
test ecx ecx +
jz loc_46934D  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
call sub_44E8A0  +
add esp 8 +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+14h] +
mov ecx [edi] +
mov al [ecx] +
cmp al 20h +
jz loc_46937C  +
cmp al 9 +
jb loc_469378  +
cmp al 0Ah +
jbe loc_46937C  +
cmp al 0Dh +
jnz loc_469387  +
test al al +
jz loc_469368  +
lea eax [ecx+1] +
mov [edi] eax +
jmp loc_469368  +
***
lea eax [esp+14h] +
mov ebp ecx +
push eax  +
push ebp  +
push 0  +
mov ebx ebp +
call sub_45CBC0  +
mov esi eax +
add esp 0Ch +
cmp esi 100h +
jge loc_469451  +
cmp esi 41h +
jl loc_4693B3  +
cmp esi 5Ah +
jle loc_4693F0  +
cmp esi 61h +
jl loc_4693BD  +
cmp esi 7Ah +
jle loc_4693F0  +
cmp esi 0C0h +
jl loc_4693CD  +
cmp esi 0D6h +
jle loc_4693F0  +
cmp esi 0D8h +
jl loc_4693DD  +
cmp esi 0F6h +
jle loc_4693F0  +
cmp esi 0F8h +
jl loc_469463  +
cmp esi 100h +
jge loc_4694B8  +
cmp esi 41h +
jl loc_46940A  +
cmp esi 5Ah +
jle loc_469562  +
cmp esi 61h +
jl loc_469418  +
cmp esi 7Ah +
jle loc_469562  +
cmp esi 0C0h +
jl loc_46942C  +
cmp esi 0D6h +
jle loc_469562  +
cmp esi 0D8h +
jl loc_469440  +
cmp esi 0F6h +
jle loc_469562  +
cmp esi 0F8h +
jl loc_4694CE  +
jmp loc_469562  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_4693F0  +
cmp esi 100h +
jl loc_46949F  +
cmp esi 4E00h +
jl loc_46947F  +
cmp esi 9FA5h +
jle loc_4693F0  +
cmp esi 3007h +
jz loc_4693F0  +
cmp esi 3021h +
jl loc_46949F  +
cmp esi 3029h +
jle loc_4693F0  +
cmp esi 5Fh +
jz loc_4693F0  +
cmp esi 3Ah +
jz loc_4693F0  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
***
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469562  +
cmp esi 100h +
jl loc_469512  +
cmp esi 4E00h +
jl loc_4694E6  +
cmp esi 9FA5h +
jle loc_469562  +
cmp esi 3007h +
jz loc_469562  +
cmp esi 3021h +
jl loc_4694FE  +
cmp esi 3029h +
jle loc_469562  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469562  +
jmp loc_46951A  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_469562  +
cmp esi 2Eh +
jz loc_469562  +
cmp esi 2Dh +
jz loc_469562  +
cmp esi 5Fh +
jz loc_469562  +
cmp esi 100h +
jl loc_469553  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_469562  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_46955E  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jz loc_46957D  +
add ebx [esp+14h] +
lea eax [esp+14h] +
push eax  +
push ebx  +
push 0  +
call sub_45CBC0  +
add esp 0Ch +
mov esi eax +
jmp loc_4693F0  +
***
mov ecx [edi+0Ch] +
mov eax ebx +
sub eax ebp +
push eax  +
push ebp  +
test ecx ecx +
jz loc_46959A  +
push ecx  +
call sub_44F4D0  +
add esp 0Ch +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
call sub_44E8A0  +
add esp 8 +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax [esi+18h] +
cmp [esi+14h] eax +
jl loc_4695E4  +
lea eax [eax+eax*2] +
shl eax 3 +
push eax  +
push dword ptr [esi+1Ch]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_4695D9  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+1Ch] eax +
mov eax [esi+18h] +
add eax eax +
mov [esi+18h] eax +
mov eax [esi+14h] +
mov ecx [esi+1Ch] +
lea edx [eax+eax*2] +
mov eax [esp+arg_8] +
mov [ecx+edx*4] eax +
mov eax [esi+14h] +
mov ecx [esi+1Ch] +
lea edx [eax+eax*2] +
mov eax [esp+arg_C] +
mov [ecx+edx*4+4] eax +
mov eax [esi+14h] +
mov ecx [esi+1Ch] +
lea edx [eax+eax*2] +
mov eax [esp+arg_10] +
mov [ecx+edx*4+8] eax +
xor eax eax +
inc dword ptr [esi+14h]  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz loc_469645  +
cmp dword ptr [eax+20h] 0 +
jz loc_469645  +
test dword ptr [eax+10h] 100h +
jnz loc_46963F  +
mov eax [eax+8] +
test eax eax +
jnz loc_469628  +
retn   +
mov eax 1 +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
push ebx  +
push edi  +
mov edi [esp+0Ch] +
xor ebx ebx +
test edi edi +
jz loc_4696FF  +
cmp [edi+20h] ebx +
jz loc_4696FF  +
push ebp  +
push esi  +
mov ebp [edi+20h] +
test ebp ebp +
jz loc_4696EF  +
push 20h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4696EF  +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push 20h  +
movups oword ptr [esi+10h] xmm0 +
call off_4EE2E8  +
add esp 4 +
mov [esi+14h] eax +
test eax eax +
jz loc_4696E5  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 4 +
mov dword ptr [esi+10h] 0 +
mov [esi+4] ebp +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
test ebx ebx +
jnz loc_4696CB  +
mov ebx esi +
jmp loc_4696D1  +
mov eax [ebx] +
mov [esi] eax +
mov [ebx] esi +
mov ecx [edi+10h] +
mov [esi+18h] ecx +
mov edi [edi+8] +
test edi edi +
jnz loc_469670  +
pop esi  +
pop ebp  +
pop edi  +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call loc_469000  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push edi  +
mov edi [esp+0Ch] +
xor esi esi +
test edi edi +
jz loc_469759  +
mov eax [edi+20h] +
test eax eax +
jz loc_469759  +
mov edx [eax+4] +
xor ecx ecx +
test edx edx +
jle loc_469740  +
mov eax [eax+0Ch] +
test byte ptr [eax] 1 +
jnz loc_469751  +
inc ecx  +
add eax 10h +
cmp ecx edx +
jl loc_469733  +
mov edi [edi+8] +
cmp edx esi +
cmovg esi edx +
test edi edi +
jnz loc_469720  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
pop edi  +
mov eax 0FFFFFFFEh +
pop esi  +
retn   +
***
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esp+4] +
mov edx 0BC614Eh +
test eax eax +
jz loc_469790  +
mov ecx [eax+20h] +
test ecx ecx +
jz loc_469790  +
mov ecx [ecx+4] +
cmp ecx edx +
cmovl edx ecx +
test edx edx +
jz loc_46978D  +
mov eax [eax+8] +
test eax eax +
jnz loc_469770  +
mov eax edx +
retn   +
***
xor eax eax +
retn   +
***
or eax 0FFFFFFFFh +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_4697B0  +
or eax 0FFFFFFFFh +
retn   +
cmp dword ptr [eax+20h] 0 +
jz loc_4697C3  +
mov eax [eax+8] +
test eax eax +
jnz loc_4697B0  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
sub esp 0Ch +
push ebp  +
push esi  +
mov esi [esp+18h] +
xor ebp ebp +
push edi  +
xor edi edi +
mov [esp+0Ch] ebp +
mov [esp+14h] edi +
mov dword ptr [esp+10h] 1 +
test esi esi +
jnz loc_4697FB  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
add esp 0Ch +
retn   +
***
cmp byte ptr [esi] 0 +
push ebx  +
mov ebx esi +
jz loc_469A14  +
mov ebp [esp+2Ch] +
mov al [ebx] +
mov dword ptr [esp+20h] 0 +
test al al +
jz loc_46982C  +
nop   +
cmp al 7Ch +
jz loc_46987D  +
mov al [ebx+1] +
inc ebx  +
test al al +
jnz loc_469820  +
test esi esi +
jz loc_469A7E  +
push 20h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jz loc_469A7E  +
mov ecx [esp+24h] +
xorps xmm0 xmm0 +
movups oword ptr [edi] xmm0 +
movups oword ptr [edi+10h] xmm0 +
mov [edi+0Ch] ecx +
mov [edi] esi +
mov [edi+4] esi +
test ebp ebp +
jz loc_4698AC  +
xor eax eax +
cmp [ebp+0] eax +
jz loc_469878  +
mov [edi+1Ch] eax +
jmp loc_4698B3  +
cmp byte ptr [ebx] 0 +
jz loc_46982C  +
mov eax ebx +
sub eax esi +
push eax  +
push esi  +
call sub_44E8A0  +
add esp 8 +
mov [esp+20h] eax +
test eax eax +
jz loc_4698A9  +
mov ecx [esp+24h] +
push ebp  +
push ecx  +
push eax  +
call sub_469040  +
add esp 0Ch +
mov edi eax +
inc ebx  +
jmp loc_4698B6  +
mov dword ptr [edi+1Ch] 0 +
mov [edi+18h] ebp +
test edi edi +
jz loc_469A7E  +
push 24h  +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_469A66  +
xorps xmm0 xmm0 +
movups oword ptr [esi] xmm0 +
push 78h  +
movups oword ptr [esi+10h] xmm0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+18h] 0Ah +
call off_4EE2E8  +
add esp 4 +
mov [esi+1Ch] eax +
test eax eax +
jz loc_469A5C  +
mov eax [esp+24h] +
test eax eax +
jz loc_469915  +
push eax  +
mov [esi+4] eax +
call sub_44FAE0  +
add esp 4 +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_469923  +
mov [esp+10h] esi +
jmp loc_46992C  +
mov eax [ecx+8] +
mov [esi+8] eax +
mov [ecx+8] esi +
mov eax [esp+28h] +
mov [esi+10h] eax +
mov [edi+10h] esi +
test byte ptr [esi+10h] 6 +
push edi  +
jz loc_469944  +
call loc_4684D0  +
jmp loc_469949  +
call loc_468700  +
add esp 4 +
cmp dword ptr [edi+8] 0 +
jnz loc_469A66  +
movaps xmm0 oword ptr ds:oword_4CAB30 +
movups oword ptr [edi] xmm0 +
push edi  +
movups oword ptr [edi+10h] xmm0 +
call off_4EE2F4  +
xor edi edi +
add esp 4 +
cmp [esp+14h] edi +
jz loc_469997  +
mov eax [esp+18h] +
test eax eax +
jnz loc_469A1E  +
mov eax [esi+10h] +
and eax 300h +
mov [esp+18h] eax +
push esi  +
call sub_469C60  +
add esp 4 +
push esi  +
call loc_469AB0  +
add esp 4 +
test eax eax +
js loc_469A7E  +
mov eax [esp+20h] +
test eax eax +
jz loc_4699BA  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp byte ptr [ebx] 0 +
mov esi ebx +
jnz loc_469810  +
mov ebp [esp+10h] +
cmp [esp+14h] edi +
jnz loc_469A14  +
mov esi ebp +
test ebp ebp +
jz loc_469A14  +
mov edi [esi+20h] +
test edi edi +
jz loc_469A0D  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_4699ED  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi] +
test eax eax +
jz loc_4699FC  +
push eax  +
call sub_44F150  +
add esp 4 +
push edi  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+20h] 0 +
mov esi [esi+8] +
test esi esi +
jnz loc_4699D5  +
pop ebx  +
pop edi  +
pop esi  +
mov eax ebp +
pop ebp  +
add esp 0Ch +
retn   +
***
cmp eax 100h +
jnz loc_469A3B  +
test dword ptr [esi+10h] 200h +
jz loc_46998E  +
mov [esp+14h] edi +
jmp loc_469997  +
***
cmp eax 200h +
jnz loc_46998E  +
test dword ptr [esi+10h] 100h +
jz loc_46998E  +
mov [esp+14h] edi +
jmp loc_469997  +
***
push esi  +
call off_4EE2F4  +
add esp 4 +
movaps xmm0 oword ptr ds:oword_4CAB30 +
movups oword ptr [edi] xmm0 +
push edi  +
movups oword ptr [edi+10h] xmm0 +
call off_4EE2F4  +
add esp 4 +
mov ebp [esp+10h] +
test ebp ebp +
jz loc_469A8F  +
push ebp  +
call sub_468E10  +
add esp 4 +
mov eax [esp+20h] +
test eax eax +
jz loc_469AA1  +
push eax  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
pop edi  +
pop esi  +
xor eax eax +
pop ebp  +
add esp 0Ch +
retn   +
***
push esi  +
mov esi [esp+8] +
push edi  +
mov ecx [esi+14h] +
test ecx ecx +
jle loc_469B00  +
mov eax [esi+1Ch] +
cmp dword ptr [eax] 6 +
jnz loc_469B00  +
mov edi 1 +
cmp ecx edi +
jle loc_469AFD  +
mov edx 0Ch +
mov ecx [esi+1Ch] +
lea edx [edx+0Ch] +
inc edi  +
mov eax [edx+ecx-8] +
mov [edx+ecx-14h] eax +
mov ecx [esi+1Ch] +
mov eax [edx+ecx-4] +
mov [edx+ecx-10h] eax +
mov ecx [esi+1Ch] +
mov eax [edx+ecx-0Ch] +
mov [edx+ecx-18h] eax +
cmp edi [esi+14h] +
jl loc_469AD3  +
dec dword ptr [esi+14h]  +
mov eax [esi+18h] +
cmp [esi+14h] eax +
jl loc_469B30  +
lea eax [eax+eax*2] +
shl eax 3 +
push eax  +
push dword ptr [esi+1Ch]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_469B25  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov [esi+1Ch] eax +
mov eax [esi+18h] +
add eax eax +
mov [esi+18h] eax +
push ebx  +
mov ebx [esi+14h] +
dec ebx  +
mov dword ptr [esp+10h] 0 +
test ebx ebx +
jle loc_469BAB  +
lea edi [ebx+ebx*2] +
push ebp  +
shl edi 2 +
xor ebp ebp +
mov eax [esi+14h] +
pop ebx  +
pop edi  +
lea ecx [eax+eax*2] +
mov eax [esi+1Ch] +
mov dword ptr [eax+ecx*4+4] 0 +
mov eax [esi+14h] +
lea ecx [eax+eax*2] +
mov eax [esi+1Ch] +
mov dword ptr [eax+ecx*4+8] 0 +
mov eax [esi+14h] +
lea ecx [eax+eax*2] +
mov eax [esi+1Ch] +
mov dword ptr [eax+ecx*4] 0 +
xor eax eax +
inc dword ptr [esi+14h]  +
pop esi  +
retn   +
***
mov eax [esi+8] +
cmp [esi+4] eax +
jl loc_469C21  +
shl eax 5 +
push eax  +
push dword ptr [esi+0Ch]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_469C16  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+0Ch] eax +
mov eax [esi+8] +
add eax eax +
mov [esi+8] eax +
mov eax [esi+4] +
mov ecx eax +
inc eax  +
shl ecx 4 +
add ecx [esi+0Ch] +
mov [esi+4] eax +
mov eax [esp+arg_10] +
mov [ecx] eax +
mov eax [esp+arg_4] +
mov [ecx+4] eax +
mov eax [esp+arg_8] +
mov [ecx+8] eax +
mov eax [esp+arg_C] +
mov [ecx+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
retn   +
***
sub esp 14h +
push ebx  +
push ebp  +
mov ebp [esp+1Ch+arg_0] +
or eax 0FFFFFFFFh +
push edi  +
xor edi edi +
mov [esp+20h+var_10] eax +
xor ebx ebx +
mov [esp+20h+var_14] edi +
test ebp ebp +
jz loc_469CA8  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_469CA8  +
mov ecx [ebp+14h] +
cmp ecx 1 +
jnz loc_469CC5  +
cmp dword ptr [eax] 2 +
jnz loc_469CC5  +
cmp [eax+4] ebx +
jnz loc_469CC5  +
cmp [eax+8] ebx +
jnz loc_469CC5  +
push ebx  +
call sub_4690B0  +
add esp 4 +
test eax eax +
jnz loc_469CB2  +
pop edi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 14h +
retn   +
or dword ptr [eax+10h] 4000h +
pop edi  +
mov [ebp+20h] eax +
xor eax eax +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
inc eax  +
push esi  +
push eax  +
call sub_4690B0  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_469CE8  +
pop esi  +
pop edi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 14h +
retn   +
mov eax [ebp+4] +
test eax eax +
jz loc_469CFA  +
push eax  +
mov [esi] eax +
call sub_44FAE0  +
add esp 4 +
xor edx edx +
test dword ptr [ebp+10h] 100h +
mov [esp+24h+arg_0] edx +
jz loc_469D10  +
or dword ptr [esi+10h] 8000h +
cmp [ebp+14h] edx +
jle loc_469D7E  +
mov eax [ebp+1Ch] +
lea ecx [edx+edx*2] +
movq xmm0 qword ptr [eax+ecx*4] +
mov ecx [eax+ecx*4+8] +
movq [esp+24h+var_C] xmm0 +
mov eax dword ptr [esp+24h+var_C] +
dec eax  +
cmp eax 7 +
ja loc_469D6C  +
jmp ds:off_469EE8[eax*4]  +
test edx edx +
jnz loc_469DB3  +
mov eax 1 +
mov [esp+24h+var_14] eax +
jmp loc_469D70  +
push ebx  +
push 1  +
push dword ptr [esp+2Ch+var_C+4]  +
push 0  +
push esi  +
call sub_469BF0  +
mov edi eax +
add esp 14h +
test edi edi +
js loc_469DB3  +
mov [esp+24h+var_10] edi +
xor ebx ebx +
mov edx [esp+24h+arg_0] +
mov eax [esp+24h+var_14] +
inc edx  +
mov [esp+24h+arg_0] edx +
cmp edx [ebp+14h] +
jl loc_469D15  +
test eax eax +
jnz loc_469DAA  +
test byte ptr [ebp+10h] 7 +
jnz loc_469DAA  +
mov eax [esi+10h] +
test eax 10000h +
jnz loc_469D96  +
or eax 10000h +
mov [esi+10h] eax +
cmp dword ptr [esi+4] 0 +
jle loc_469DAA  +
mov ecx [esi+0Ch] +
mov eax [ecx] +
test al 1 +
jnz loc_469DAA  +
or eax 1 +
mov [ecx] eax +
cmp [esi+4] edi +
jg loc_469EC4  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_469DC4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi] +
test eax eax +
jz loc_469DD3  +
push eax  +
call sub_44F150  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
or ebx 8 +
or eax 0FFFFFFFFh +
push ebx  +
push 2  +
push ecx  +
push dword ptr [esp+30h+var_C+4]  +
mov [esp+34h+var_10] eax +
push esi  +
call sub_469BF0  +
mov edi eax +
add esp 14h +
xor ebx ebx +
test edi edi +
js loc_469DB3  +
jmp loc_469D68  +
mov eax dword ptr [esp+24h+var_C+4] +
test eax eax +
jnz loc_469E7C  +
test ecx ecx +
jnz loc_469E7C  +
mov eax [esp+24h+arg_0] +
inc eax  +
cmp [ebp+14h] eax +
jnz loc_469D68  +
test bl 1 +
jz loc_469D68  +
or dword ptr [esi+10h] 4000h +
or ebx 10h +
push ebx  +
push 64h  +
push ecx  +
push ecx  +
push esi  +
call sub_469BF0  +
mov edi eax +
add esp 14h +
test edi edi +
js loc_469DB3  +
mov ecx [esp+24h+var_10] +
xor ebx ebx +
mov edx [esp+24h+arg_0] +
cmp ecx 0FFFFFFFFh +
jz loc_469D6C  +
mov eax [esi+0Ch] +
add ecx ecx +
or dword ptr [eax+ecx*8] 20h +
or eax 0FFFFFFFFh +
mov [esp+24h+var_10] eax +
jmp loc_469D6C  +
push ebx  +
push 1  +
push ecx  +
push eax  +
jmp loc_469D53  +
push ebx  +
push 1  +
push ecx  +
push dword ptr [esp+30h+var_C+4]  +
jmp loc_469D53  +
push ebx  +
push 1  +
push 0  +
jmp loc_469D51  +
test bl 1 +
jnz loc_469D6C  +
mov eax [esi+10h] +
or ebx 1 +
test eax 10000h +
jnz loc_469D6C  +
or eax 10000h +
mov [esi+10h] eax +
jmp loc_469D6C  +
mov eax [esi+0Ch] +
add edi edi +
or dword ptr [eax+edi*8] 2 +
cmp [esp+24h+var_14] 0 +
jz loc_469EDA  +
mov eax [esi+0Ch] +
or dword ptr [eax] 4 +
mov [ebp+20h] esi +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
pop ebx  +
add esp 14h +
retn   +
***
xor eax eax +
push edi  +
mov edx [esi+8] +
test edx edx +
jle loc_469F31  +
mov edi [esi+14h] +
mov ecx edi +
cmp dword ptr [ecx] 0 +
jl loc_469F52  +
inc eax  +
add ecx 8 +
cmp eax edx +
jl loc_469F24  +
mov eax [esi+0Ch] +
cmp edx eax +
jl loc_469F72  +
shl eax 4 +
push eax  +
push dword ptr [esi+14h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_469F67  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov ecx [esp+4+arg_4] +
mov [edi+eax*8] ecx +
mov edx [esi+14h] +
mov ecx [esp+4+arg_8] +
pop edi  +
pop esi  +
mov [edx+eax*8+4] ecx +
retn   +
mov [esi+14h] eax +
mov eax [esi+0Ch] +
add eax eax +
mov [esi+0Ch] eax +
mov edx [esi+8] +
mov ecx [esi+14h] +
mov eax [esp+4+arg_4] +
pop edi  +
mov [ecx+edx*8] eax +
mov edx [esi+8] +
mov ecx [esi+14h] +
mov eax [esp+arg_8] +
mov [ecx+edx*8+4] eax +
inc dword ptr [esi+8]  +
mov eax [esi+8] +
dec eax  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jnz loc_469FAC  +
or eax 0FFFFFFFFh +
retn   +
***
push esi  +
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_46A020  +
add esp 10h +
retn   +
***
sub esp 28h +
push ebp  +
push esi  +
mov esi [esp+34h] +
xor ecx ecx +
xor eax eax +
mov [esp+8] ecx +
xor ebp ebp +
mov [esp+14h] eax +
test esi esi +
jz loc_46A4C7  +
cmp [esi+8] eax +
jl loc_46A4C7  +
push ebx  +
mov ebx [esp+40h] +
push edi  +
mov edi [esp+48h] +
mov edx [esi+4] +
mov [esp+3Ch] edx +
cmp edi 1 +
jnz loc_46A0DB  +
cmp dword ptr [esp+40h] 0 +
jnz loc_46A0DB  +
test ebx ebx +
jnz loc_46A0DB  +
mov [esi+8] ebx +
mov [esi+10h] ebx +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
test dword ptr [edx+10h] 8000h +
jz loc_46A0D2  +
mov eax [edx+4] +
test eax eax +
jnz loc_46A091  +
mov [esp+10h] edi +
mov ecx edi +
jmp loc_46A268  +
cmp eax 1 +
jnz loc_46A0B5  +
mov eax [edx+0Ch] +
cmp dword ptr [eax+0Ch] 64h +
jnz loc_46A0B5  +
test byte ptr [eax] 1 +
jz loc_46A0B5  +
mov dword ptr [esp+10h] 1 +
mov ecx [esp+10h] +
jmp loc_46A268  +
mov eax [edx+0Ch] +
test byte ptr [eax] 4 +
jz loc_46A0D2  +
push 0  +
push 0  +
push esi  +
call sub_469F10  +
add esp 0Ch +
test eax eax +
jns loc_46A0D2  +
inc dword ptr [esp+1Ch]  +
mov ecx [esp+10h] +
jmp loc_46A268  +
cmp dword ptr [edx+4] 0 +
jnz loc_46A114  +
mov eax [esi+18h] +
test al 1 +
jz loc_46A0F1  +
mov ecx [esp+10h] +
jmp loc_46A268  +
cmp edi 2 +
jz loc_46A108  +
test al 7 +
jz loc_46A100  +
cmp dword ptr [esi+10h] 0 +
jnz loc_46A108  +
mov dword ptr [esp+10h] 1 +
inc dword ptr [esi+10h]  +
mov ecx [esp+10h] +
jmp loc_46A264  +
cmp dword ptr [esi+1Ch] 0FFFFFFFFh +
jz loc_46A126  +
inc dword ptr [esi+10h]  +
mov ecx [esp+10h] +
jmp loc_46A264  +
cmp edi 1 +
jz loc_46A145  +
cmp edi 2 +
jz loc_46A145  +
test dword ptr [edx+10h] 4000h +
jnz loc_46A145  +
inc dword ptr [esi+10h]  +
mov ecx [esp+10h] +
jmp loc_46A264  +
mov eax [esi+8] +
xor ecx ecx +
mov [esp+18h] ecx +
mov [esp+24h] eax +
test eax eax +
jle loc_46A226  +
and al 48h +
inc dword ptr [esi+10h]  +
mov eax [edx+0Ch] +
mov ecx [esi+10h] +
movups xmm0 oword ptr [eax] +
movd ebx xmm0 +
movups oword ptr [esp+28h] xmm0 +
test bl 4 +
jnz loc_46A25C  +
mov eax [esi+18h] +
test al 7 +
jz loc_46A3A5  +
cmp ecx 1 +
jnz loc_46A38F  +
test al 6 +
jz loc_46A3A5  +
mov ecx [esp+10h] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
mov esi [esi] +
test esi esi +
jnz loc_46A052  +
mov eax [esp+1Ch] +
or edx 0FFFFFFFFh +
pop edi  +
test eax eax +
pop ebx  +
cmovg ecx edx +
pop esi  +
mov eax ecx +
pop ebp  +
add esp 28h +
retn   +
***
test bl 1 +
jnz loc_46A3A5  +
cmp ecx 2 +
jnz loc_46A25C  +
test al 6 +
jz loc_46A25C  +
mov eax [esp+34h] +
cmp eax edi +
jz loc_46A3BF  +
cmp edi 2 +
jz loc_46A25C  +
cmp eax 64h +
jnz loc_46A25C  +
xor edi edi +
cmp eax 64h +
jnz loc_46A3D3  +
mov ebp ebx +
lea edi [eax-63h] +
and ebp 2 +
jmp loc_46A45B  +
mov edx [esp+2Ch] +
test edx edx +
jnz loc_46A403  +
mov eax [esp+30h] +
test eax eax +
jnz loc_46A3ED  +
mov ebp ebx +
lea edi [edx+1] +
and ebp 2 +
jmp loc_46A45B  +
mov ecx [esp+44h] +
test ecx ecx +
jz loc_46A452  +
push ecx  +
push eax  +
call sub_44E370  +
add esp 8 +
mov edi eax +
jmp loc_46A452  +
mov ebp [esp+30h] +
xor ecx ecx +
test ebp ebp +
setnz cl  +
xor eax eax +
cmp [esp+44h] eax +
setnz al  +
cmp ecx eax +
jnz loc_46A452  +
mov ecx [esp+40h] +
test ecx ecx +
jz loc_46A452  +
mov al [edx] +
cmp al [ecx] +
jnz loc_46A452  +
push ecx  +
push edx  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46A452  +
mov eax [esp+44h] +
cmp ebp eax +
jz loc_46A44D  +
push eax  +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46A452  +
mov edi 1 +
mov ebp ebx +
and ebp 2 +
test edi edi +
jz loc_46A490  +
test ebp ebp +
jz loc_46A46A  +
mov ecx 1 +
mov [esp+10h] ecx +
jmp loc_46A494  +
push dword ptr [esi+10h]  +
push 1  +
push esi  +
call sub_469F10  +
mov eax [esp+1Ch] +
add esp 0Ch +
cmp eax 1 +
jz loc_46A490  +
test bl 20h +
mov ecx 1 +
cmovnz eax ecx +
mov [esp+10h] eax +
mov ecx [esp+10h] +
mov eax [esp+3Ch] +
test dword ptr [eax+10h] 10000h +
jnz loc_46A260  +
test edi edi +
jz loc_46A4B1  +
test ebp ebp +
jz loc_46A260  +
mov eax [esi+10h] +
mov [esi+1Ch] eax +
jmp loc_46A260  +
***
pop edi  +
pop ebx  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebp  +
add esp 28h +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_46A4F0  +
or eax 0FFFFFFFFh +
retn   +
mov ecx [eax+4] +
test dword ptr [ecx+10h] 4000h +
jnz loc_46A503  +
mov eax [eax] +
test eax eax +
jnz loc_46A4F0  +
retn   +
mov eax 1 +
retn   +
***
sub esp 8 +
push esi  +
mov esi [esp+18h] +
test esi esi +
jz loc_46A74B  +
push ebp  +
mov ebp [esp+14h] +
push offset asc_4BF8BC  +
push ebp  +
call sub_460490  +
mov eax [esi+24h] +
add esp 8 +
test eax eax +
jz loc_46A556  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_46A556  +
push eax  +
push ebp  +
call sub_460490  +
push offset word_4BC858  +
push ebp  +
call sub_460490  +
add esp 10h +
push dword ptr [esi+8]  +
push ebp  +
call sub_460490  +
add esp 8 +
cmp dword ptr [esi+0Ch] 0 +
jz loc_46A74A  +
push dword ptr [esi+8]  +
call sub_46ACD0  +
add esp 4 +
test eax eax +
jnz loc_46A74A  +
push ebx  +
push eax  +
push dword ptr [esi+0Ch]  +
push dword ptr [esp+24h]  +
call sub_424AB0  +
mov ebx eax +
add esp 0Ch +
mov [esp+10h] ebx +
test ebx ebx +
jz loc_46A73B  +
push offset asc_4BF068  +
push ebp  +
call sub_460490  +
add esp 8 +
cmp dword ptr [esi+24h] 0 +
jnz loc_46A71E  +
mov eax [esi+14h] +
test eax eax +
jz loc_46A71E  +
cmp dword ptr [eax+24h] 0 +
jnz loc_46A71E  +
push offset aHref  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A63A  +
push offset aAction  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A63A  +
push offset aSrc  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A63A  +
push offset aName_1  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46A71E  +
mov eax [esi+14h] +
push offset aA  +
push dword ptr [eax+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46A71E  +
push edi  +
push offset asc_4DFF18  +
push dword ptr [ebp+10h]  +
mov edi ebx +
call sub_45D6F0  +
add esp 8 +
mov al [edi] +
cmp al 20h +
jz loc_46A662  +
cmp al 9 +
jb loc_46A65E  +
cmp al 0Ah +
jbe loc_46A662  +
cmp al 0Dh +
jnz loc_46A665  +
inc edi  +
jmp loc_46A650  +
***
push offset asc_4BF90C  +
push edi  +
xor esi esi +
call sub_44E8F0  +
mov ebx eax +
add esp 8 +
mov [esp+10h] ebx +
test ebx ebx +
jz loc_46A696  +
push offset asc_4BF914  +
push edi  +
call sub_44E8F0  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_46A696  +
mov byte ptr [ebx] 0 +
push offset a@?  +
push edi  +
call loc_45B0F0  +
add esp 8 +
mov [esp+24h] eax +
test eax eax +
jz loc_46A6C4  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
push dword ptr [esp+2Ch]  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_46A6D0  +
push edi  +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
add esp 8 +
test esi esi +
jz loc_46A6F8  +
push dword ptr [esp+10h]  +
mov byte ptr [ebx] 3Ch +
mov bl [esi+3] +
mov byte ptr [esi+3] 0 +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
add esp 8 +
mov [esi+3] bl +
lea edi [esi+3] +
jmp loc_46A665  +
***
push offset asc_4DFF18  +
push dword ptr [ebp+10h]  +
call sub_45D6F0  +
mov ebx [esp+1Ch] +
add esp 8 +
pop edi  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
pop ebp  +
pop esi  +
add esp 8 +
retn   +
***
push ebx  +
push dword ptr [ebp+10h]  +
call sub_45E1C0  +
add esp 8 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
pop ebx  +
pop ebp  +
pop esi  +
add esp 8 +
retn   +
***
push offset asc_4CABC0  +
push ebp  +
call sub_460490  +
add esp 8 +
pop ebx  +
pop ebp  +
pop esi  +
add esp 8 +
retn   +
***
sub esp 0Ch +
push ebx  +
mov ebx [esp+1Ch] +
test ebx ebx +
jz loc_46A994  +
push ebp  +
mov ebp [esp+18h] +
push esi  +
push edi  +
push offset asc_4BF8BC  +
push ebp  +
call sub_460490  +
mov eax [ebx+24h] +
add esp 8 +
test eax eax +
jz loc_46A798  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_46A798  +
push eax  +
push ebp  +
call sub_460490  +
push offset word_4BC858  +
push ebp  +
call sub_460490  +
add esp 10h +
push dword ptr [ebx+8]  +
push ebp  +
call sub_460490  +
add esp 8 +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_46A982  +
push dword ptr [ebx+8]  +
call sub_46ACD0  +
add esp 4 +
test eax eax +
jnz loc_46A982  +
push eax  +
push dword ptr [ebx+0Ch]  +
push dword ptr [esp+2Ch]  +
call sub_424AB0  +
mov esi eax +
add esp 0Ch +
mov [esp+18h] esi +
test esi esi +
jz loc_46A974  +
push offset asc_4BF068  +
push ebp  +
call sub_460490  +
add esp 8 +
cmp dword ptr [ebx+24h] 0 +
jnz loc_46A95C  +
mov eax [ebx+14h] +
test eax eax +
jz loc_46A95C  +
cmp dword ptr [eax+24h] 0 +
jnz loc_46A95C  +
push offset aHref  +
push dword ptr [ebx+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A87B  +
push offset aAction  +
push dword ptr [ebx+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A87B  +
push offset aSrc  +
push dword ptr [ebx+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46A87B  +
push offset aName_1  +
push dword ptr [ebx+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46A95C  +
mov eax [ebx+14h] +
push offset aA  +
push dword ptr [eax+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46A95C  +
push offset asc_4DFF18  +
push dword ptr [ebp+10h]  +
call sub_45D6F0  +
add esp 8 +
mov al [esi] +
cmp al 20h +
jz loc_46A8A2  +
cmp al 9 +
jb loc_46A89E  +
cmp al 0Ah +
jbe loc_46A8A2  +
cmp al 0Dh +
jnz loc_46A8A5  +
inc esi  +
jmp loc_46A890  +
***
push offset asc_4BF90C  +
push esi  +
xor edi edi +
call sub_44E8F0  +
mov ebx eax +
add esp 8 +
mov [esp+14h] ebx +
test ebx ebx +
jz loc_46A8D6  +
push offset asc_4BF914  +
push esi  +
call sub_44E8F0  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_46A8D6  +
mov byte ptr [ebx] 0 +
push offset a@?  +
push esi  +
call loc_45B0F0  +
add esp 8 +
mov [esp+10h] eax +
test eax eax +
jz loc_46A904  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
push dword ptr [esp+18h]  +
call off_4EE2F4  +
add esp 0Ch +
jmp loc_46A910  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
add esp 8 +
test edi edi +
jz loc_46A938  +
push dword ptr [esp+14h]  +
mov byte ptr [ebx] 3Ch +
mov bl [edi+3] +
mov byte ptr [edi+3] 0 +
push dword ptr [ebp+10h]  +
call sub_45D7B0  +
add esp 8 +
mov [edi+3] bl +
lea esi [edi+3] +
jmp loc_46A8A5  +
***
push offset asc_4DFF18  +
push dword ptr [ebp+10h]  +
call sub_45D6F0  +
mov esi [esp+20h] +
add esp 8 +
mov ebx [esp+28h] +
push esi  +
call off_4EE2F4  +
add esp 4 +
jmp loc_46A982  +
push esi  +
push dword ptr [ebp+10h]  +
call sub_45E1C0  +
add esp 8 +
push esi  +
call off_4EE2F4  +
add esp 4 +
jmp loc_46A982  +
push offset asc_4CABC0  +
push ebp  +
call sub_460490  +
add esp 8 +
mov ebx [ebx+18h] +
mov [esp+28h] ebx +
test ebx ebx +
jnz loc_46A767  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
***
mov edi [esp+arg_0] +
test edi edi +
jz loc_46AA01  +
push esi  +
mov esi [esp+4+arg_4] +
test esi esi +
jz loc_46AA00  +
cmp dword ptr [esi+2Ch] 0 +
push ebx  +
mov ebx [esi+4] +
mov dword ptr [esi+4] 0Dh +
jz loc_46A9D4  +
push 0  +
push esi  +
push edi  +
call sub_46AA10  +
add esp 0Ch +
mov eax [esi+0Ch] +
test eax eax +
jz loc_46A9EE  +
push [esp+8+arg_C]  +
push [esp+0Ch+arg_8]  +
push eax  +
push esi  +
push edi  +
call sub_46B1D0  +
add esp 14h +
push offset asc_4BECCC  +
push edi  +
call sub_460490  +
add esp 8 +
mov [esi+4] ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_4] +
push edi  +
mov edi [eax+2Ch] +
test edi edi +
jnz loc_46AA34  +
push edi  +
push offset aHtmlHasNoDocty  +
push eax  +
push 57Ah  +
push 7  +
call sub_43AAC0  +
add esp 14h +
pop edi  +
retn   +
push esi  +
mov esi [esp+8+arg_0] +
push offset aDoctype  +
push esi  +
call sub_460490  +
push dword ptr [edi+8]  +
push esi  +
call sub_460490  +
add esp 10h +
cmp dword ptr [edi+34h] 0 +
jz loc_46AA7C  +
push offset aPublic_1  +
push esi  +
call sub_460490  +
push dword ptr [edi+34h]  +
push dword ptr [esi+10h]  +
call sub_45E1C0  +
add esp 10h +
cmp dword ptr [edi+38h] 0 +
jz loc_46AAAE  +
push offset asc_4BF8BC  +
jmp loc_46AA9A  +
mov eax [edi+38h] +
test eax eax +
jz loc_46AAAE  +
push offset aAboutLegacyCom  +
push eax  +
call sub_44E5B0  +
add esp 8 +
test eax eax +
jz loc_46AAAE  +
push offset aSystem_0  +
push esi  +
call sub_460490  +
push dword ptr [edi+38h]  +
push dword ptr [esi+10h]  +
call sub_45E1C0  +
add esp 10h +
push offset asc_4BFF1C  +
push esi  +
call sub_460490  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_46AACD  +
xor eax eax +
pop esi  +
retn   +
***
mov esi [esi+0Ch] +
test esi esi +
jz loc_46AAC9  +
cmp dword ptr [esi+4] 1 +
jnz loc_46AB1B  +
mov eax [esi+8] +
test eax eax +
jz loc_46AB1B  +
push offset aHtml_0  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46AB26  +
push offset aHead  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46AB6E  +
push offset aMeta  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46AB71  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46AAD4  +
xor eax eax +
pop esi  +
retn   +
***
mov esi [esi+0Ch] +
test esi esi +
jz loc_46AAC9  +
cmp dword ptr [esi+4] 1 +
jnz loc_46AB63  +
mov eax [esi+8] +
test eax eax +
jz loc_46AB63  +
push offset aHead  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46AB6E  +
push offset aMeta  +
push dword ptr [esi+8]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46AB71  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46AB30  +
xor eax eax +
pop esi  +
retn   +
***
mov esi [esi+0Ch] +
push ebx  +
push ebp  +
push edi  +
test esi esi +
jz loc_46AC30  +
cmp dword ptr [esi+4] 1 +
jnz loc_46AC25  +
mov eax [esi+8] +
test eax eax +
jz loc_46AC25  +
push offset aMeta  +
push eax  +
call sub_44E370  +
add esp 8 +
test eax eax +
jz loc_46AC25  +
mov edi [esi+2Ch] +
xor ebx ebx +
mov [esp+14h] ebx +
test edi edi +
jz loc_46AC25  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_46AC1E  +
cmp dword ptr [eax+4] 3 +
jnz loc_46AC1E  +
cmp dword ptr [eax+18h] 0 +
jnz loc_46AC1E  +
mov ebp [eax+28h] +
push offset aHttpEquiv  +
push dword ptr [edi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46ABFA  +
push offset aContentType  +
push ebp  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46ABFA  +
mov dword ptr [esp+14h] 1 +
jmp loc_46AC1A  +
test ebp ebp +
jz loc_46AC13  +
push offset aContent  +
push dword ptr [edi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
cmovz ebx ebp +
cmp dword ptr [esp+14h] 0 +
jz loc_46AC1E  +
test ebx ebx +
jnz loc_46AC37  +
mov edi [edi+18h] +
test edi edi +
jnz loc_46ABB4  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46AB80  +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
push offset aCharset  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jnz loc_46ACA8  +
push offset aCharset_0  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jnz loc_46ACA8  +
push offset aCharset_1  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jnz loc_46ACA8  +
push offset aCharset_2  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jnz loc_46ACA3  +
push offset aCharset_3  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jnz loc_46ACA3  +
push offset aCharset_4  +
push ebx  +
call sub_44E8F0  +
add esp 8 +
test eax eax +
jz loc_46AC32  +
add eax 9 +
jmp loc_46ACAB  +
add eax 8 +
test eax eax +
jz loc_46AC32  +
nop   +
mov cl [eax] +
cmp cl 20h +
jz loc_46ACC0  +
cmp cl 9 +
jnz loc_46AC32  +
inc eax  +
jmp loc_46ACB0  +
***
push edi  +
cmp off_4EE788 esi +
jz loc_46AD06  +
mov edi [esp+4+arg_0] +
mov eax offset off_4EE788 +
push edi  +
push dword ptr [eax]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46AD0B  +
inc esi  +
cmp off_4EE788[esi*4] 0 +
lea eax off_4EE788[esi*4] +
jnz loc_46ACE5  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
pop edi  +
mov eax 1 +
pop esi  +
retn   +
***
mov esi [esp+arg_8] +
test esi esi +
jz loc_46B039  +
push edi  +
mov edi [esp+4+arg_0] +
test edi edi +
jz loc_46B038  +
mov eax [esi+4] +
cmp eax 0Eh +
jz loc_46B038  +
cmp eax 0Dh +
jz loc_46B1B0  +
cmp eax 9 +
jz loc_46B1B0  +
cmp eax 2 +
jnz loc_46AD77  +
push [esp+4+arg_C]  +
push esi  +
push [esp+0Ch+arg_4]  +
push edi  +
call loc_46A510  +
add esp 10h +
pop edi  +
pop esi  +
retn   +
cmp eax 3 +
jnz loc_46AE09  +
cmp dword ptr [esi+28h] 0 +
jz loc_46B038  +
mov eax [esi+8] +
cmp eax offset aText +
jz loc_46AD9B  +
cmp eax offset aTextnoenc +
jz loc_46ADCD  +
mov eax [esi+14h] +
test eax eax +
jz loc_46ADDC  +
push offset aScript  +
push dword ptr [eax+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46ADCD  +
mov eax [esi+14h] +
push offset aStyle  +
push dword ptr [eax+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46ADDC  +
push dword ptr [esi+28h]  +
push edi  +
call sub_460490  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
push dword ptr [esi+28h]  +
push [esp+8+arg_4]  +
call sub_457F90  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_46B038  +
push esi  +
push edi  +
call sub_460490  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
pop edi  +
pop esi  +
retn   +
cmp eax 8 +
jnz loc_46AE3D  +
cmp dword ptr [esi+28h] 0 +
jz loc_46B038  +
push offset asc_4BF90C  +
push edi  +
call sub_460490  +
push dword ptr [esi+28h]  +
push edi  +
call sub_460490  +
push offset asc_4BF914  +
push edi  +
call sub_460490  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
cmp eax 7 +
jnz loc_46AE91  +
cmp dword ptr [esi+8] 0 +
jz loc_46B038  +
push offset a?_0  +
push edi  +
call sub_460490  +
push dword ptr [esi+8]  +
push edi  +
call sub_460490  +
add esp 10h +
cmp dword ptr [esi+28h] 0 +
jz loc_46AE80  +
push offset asc_4BF8BC  +
push edi  +
call sub_460490  +
push dword ptr [esi+28h]  +
push edi  +
call sub_460490  +
add esp 10h +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp eax 5 +
jnz loc_46AEBB  +
push offset asc_4BF898  +
push edi  +
call sub_460490  +
push dword ptr [esi+8]  +
push edi  +
call sub_460490  +
push offset asc_4BF89C  +
push edi  +
call sub_460490  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
cmp eax 4 +
jnz loc_46AED8  +
mov eax [esi+28h] +
test eax eax +
jz loc_46B038  +
push eax  +
push edi  +
call sub_460490  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
cmp dword ptr [esi+24h] 0 +
push ebx  +
jnz loc_46AEEE  +
push dword ptr [esi+8]  +
call loc_45E650  +
add esp 4 +
mov ebx eax +
jmp loc_46AEF0  +
xor ebx ebx +
push offset asc_4BF92C  +
push edi  +
call sub_460490  +
mov eax [esi+24h] +
add esp 8 +
test eax eax +
jz loc_46AF21  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_46AF21  +
push eax  +
push edi  +
call sub_460490  +
push offset word_4BC858  +
push edi  +
call sub_460490  +
add esp 10h +
push dword ptr [esi+8]  +
push edi  +
call sub_460490  +
mov eax [esi+30h] +
add esp 8 +
test eax eax +
jz loc_46AF3E  +
push eax  +
push edi  +
call sub_44DBF0  +
add esp 8 +
mov eax [esi+2Ch] +
test eax eax +
jz loc_46AF57  +
push [esp+8+arg_C]  +
push eax  +
push [esp+10h+arg_4]  +
push edi  +
call loc_46A750  +
add esp 10h +
test ebx ebx +
jz loc_46AF79  +
cmp byte ptr [ebx+7] 0 +
jz loc_46AF79  +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 8 +
cmp [esp+8+arg_10] 0 +
jmp loc_46B14F  +
cmp dword ptr [esi+4] 1 +
jz loc_46AF89  +
cmp dword ptr [esi+28h] 0 +
jnz loc_46B03B  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_46B03B  +
test ebx ebx +
jz loc_46AFD3  +
cmp byte ptr [ebx+6] 0 +
jz loc_46AFD3  +
push offset aHtml_0  +
push dword ptr [ebx]  +
call sub_44E5B0  +
add esp 8 +
test eax eax +
jz loc_46AFD3  +
push offset aBody  +
push dword ptr [ebx]  +
call sub_44E5B0  +
add esp 8 +
test eax eax +
jz loc_46AFD3  +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 8 +
jmp loc_46B01B  +
push offset asc_4CABC4  +
push edi  +
call sub_460490  +
mov eax [esi+24h] +
add esp 8 +
test eax eax +
jz loc_46B004  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_46B004  +
push eax  +
push edi  +
call sub_460490  +
push offset word_4BC858  +
push edi  +
call sub_460490  +
add esp 10h +
push dword ptr [esi+8]  +
push edi  +
call sub_460490  +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 10h +
cmp [esp+8+arg_10] 0 +
jz loc_46B037  +
mov eax [esi+18h] +
test eax eax +
jz loc_46B037  +
test ebx ebx +
jz loc_46B037  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_46B16A  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 8 +
cmp dword ptr [esi+4] 1 +
jz loc_46B060  +
mov eax [esi+28h] +
test eax eax +
jz loc_46B060  +
push eax  +
push edi  +
call sub_460490  +
add esp 8 +
mov eax [esi+0Ch] +
push ebp  +
mov ebp [esp+0Ch+arg_10] +
test eax eax +
jz loc_46B0FC  +
test ebp ebp +
jz loc_46B0AA  +
test ebx ebx +
jz loc_46B0AA  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_46B0AA  +
mov ecx [eax+4] +
cmp ecx 3 +
jz loc_46B0AA  +
cmp ecx 5 +
jz loc_46B0AA  +
cmp eax [esi+10h] +
jz loc_46B0AA  +
mov eax [esi+8] +
test eax eax +
jz loc_46B0AA  +
cmp byte ptr [eax] 70h +
jz loc_46B0AA  +
push offset asc_4BECCC  +
push edi  +
call sub_460490  +
add esp 8 +
push ebp  +
push [esp+10h+arg_C]  +
push dword ptr [esi+0Ch]  +
push [esp+18h+arg_4]  +
push edi  +
call sub_46B1D0  +
add esp 14h +
test ebp ebp +
jz loc_46B0FC  +
test ebx ebx +
jz loc_46B0FC  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_46B0FC  +
mov ecx [esi+10h] +
mov eax [ecx+4] +
cmp eax 3 +
jz loc_46B0FC  +
cmp eax 5 +
jz loc_46B0FC  +
cmp [esi+0Ch] ecx +
jz loc_46B0FC  +
mov eax [esi+8] +
test eax eax +
jz loc_46B0FC  +
cmp byte ptr [eax] 70h +
jz loc_46B0FC  +
push offset asc_4BECCC  +
push edi  +
call sub_460490  +
add esp 8 +
push offset asc_4BF934  +
push edi  +
call sub_460490  +
mov eax [esi+24h] +
add esp 8 +
test eax eax +
jz loc_46B12D  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_46B12D  +
push eax  +
push edi  +
call sub_460490  +
push offset word_4BC858  +
push edi  +
call sub_460490  +
add esp 10h +
push dword ptr [esi+8]  +
push edi  +
call sub_460490  +
push offset asc_4BF8EC  +
push edi  +
call sub_460490  +
add esp 10h +
test ebp ebp +
pop ebp  +
jz loc_46B037  +
test ebx ebx +
jz loc_46B037  +
cmp byte ptr [ebx+0Ah] 0 +
jnz loc_46B037  +
mov eax [esi+18h] +
test eax eax +
jz loc_46B037  +
mov eax [eax+4] +
cmp eax 3 +
jz loc_46B037  +
cmp eax 5 +
jz loc_46B037  +
mov eax [esi+14h] +
test eax eax +
jz loc_46B037  +
mov eax [eax+8] +
test eax eax +
jz loc_46B037  +
cmp byte ptr [eax] 70h +
jz loc_46B037  +
push offset asc_4BECCC  +
push edi  +
call sub_460490  +
add esp 8 +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push 1  +
push [esp+8+arg_C]  +
push esi  +
push edi  +
call sub_46A9A0  +
add esp 10h +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_46B202  +
push ebx  +
mov ebx [esp+4+arg_C] +
push ebp  +
mov ebp [esp+8+arg_4] +
push edi  +
mov edi [esp+0Ch+arg_10] +
push edi  +
push ebx  +
push esi  +
push ebp  +
push [esp+1Ch+arg_0]  +
call sub_46AD20  +
mov esi [esi+18h] +
add esp 14h +
test esi esi +
jnz loc_46B1E8  +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 78h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+74h] eax +
push ebx  +
mov ebx [esp+84h] +
push ebp  +
mov ebp [esp+84h] +
mov [esp+14h] ebp +
mov [esp+10h] ebx +
mov dword ptr [esp+8] 0 +
mov byte ptr [esp+18h] 0 +
test ebp ebp +
jnz loc_46B25B  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
mov ecx [esp+74h] +
xor ecx esp +
call sub_488C1C  +
add esp 78h +
retn   +
***
push offset aHtml_0  +
push ebx  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B247  +
test ebx ebx +
jz loc_46B28B  +
push ebx  +
push offset aTextHtmlCharse  +
lea eax [esp+20h] +
push 64h  +
push eax  +
call sub_4213C0  +
add esp 10h +
mov byte ptr [esp+7Bh] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
test esi esi +
jz loc_46B2E2  +
cmp dword ptr [esi+4] 1 +
jnz loc_46B2DB  +
mov eax [esi+8] +
test eax eax +
jz loc_46B2DB  +
push offset aHtml_0  +
push eax  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B2F8  +
push offset aHead  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B345  +
push offset aMeta  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B354  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46B294  +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
mov ecx [esp+74h] +
xor ecx esp +
call sub_488C1C  +
add esp 78h +
retn   +
***
mov esi [esi+0Ch] +
test esi esi +
jz loc_46B2E2  +
nop   +
cmp dword ptr [esi+4] 1 +
jnz loc_46B333  +
mov eax [esi+8] +
test eax eax +
jz loc_46B333  +
push offset aHead  +
push eax  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B345  +
push offset aMeta  +
push dword ptr [esi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jz loc_46B33C  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46B300  +
jmp loc_46B2E2  +
***
mov eax [esi+14h] +
mov [esp+10h] eax +
jmp loc_46B354  +
mov [esp+10h] esi +
mov esi [esi+0Ch] +
test esi esi +
jz loc_46B42E  +
test esi esi +
jz loc_46B42E  +
cmp dword ptr [esi+4] 1 +
jnz loc_46B41B  +
mov eax [esi+8] +
test eax eax +
jz loc_46B41B  +
push offset aMeta  +
push eax  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46B41B  +
mov edi [esi+2Ch] +
xor ecx ecx +
xor ebp ebp +
mov [esp+14h] ecx +
test edi edi +
jz loc_46B41B  +
nop   +
mov eax [edi+0Ch] +
test eax eax +
jz loc_46B40C  +
cmp dword ptr [eax+4] 3 +
jnz loc_46B40C  +
cmp dword ptr [eax+18h] 0 +
jnz loc_46B40C  +
mov ebx [eax+28h] +
push offset aHttpEquiv  +
push dword ptr [edi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46B3E7  +
push offset aContentType  +
push ebx  +
call sub_44E470  +
add esp 8 +
test eax eax +
jnz loc_46B3E7  +
mov ecx 1 +
mov [esp+14h] ecx +
jmp loc_46B408  +
test ebx ebx +
jz loc_46B400  +
push offset aContent  +
push dword ptr [edi+8]  +
call sub_44E470  +
add esp 8 +
test eax eax +
cmovz ebp ebx +
mov ecx [esp+14h] +
test ecx ecx +
jz loc_46B40C  +
test ebp ebp +
jnz loc_46B413  +
mov edi [edi+18h] +
test edi edi +
jnz loc_46B3A0  +
test ecx ecx +
jz loc_46B41B  +
test ebp ebp +
jnz loc_46B466  +
mov esi [esi+18h] +
test esi esi +
jnz loc_46B360  +
mov ebx [esp+18h] +
mov ebp [esp+1Ch] +
test ebx ebx +
jz loc_46B4F4  +
mov ebx [esp+10h] +
test ebx ebx +
jz loc_46B4F4  +
push 0  +
push offset aMeta  +
push 0  +
push ebp  +
call sub_423AB0  +
add esp 10h +
mov esi eax +
mov eax [ebx+0Ch] +
push esi  +
test eax eax +
jnz loc_46B4C8  +
push ebx  +
call sub_421400  +
jmp loc_46B4CE  +
mov eax [esp+18h] +
test eax eax +
jnz loc_46B492  +
push esi  +
call sub_4262D0  +
push esi  +
call sub_422CB0  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+74h] +
xor ecx esp +
call sub_488C1C  +
add esp 78h +
retn   +
***
push eax  +
push ebp  +
call sub_44E4C0  +
add esp 8 +
test eax eax +
jnz loc_46B4F4  +
lea eax [esp+20h] +
push eax  +
push offset aContent  +
push esi  +
call sub_425280  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov ecx [esp+74h] +
xor ecx esp +
call sub_488C1C  +
add esp 78h +
retn   +
***
push eax  +
call sub_421790  +
add esp 8 +
push offset aContentType  +
push offset aHttpEquiv  +
push esi  +
call sub_4240E0  +
lea eax [esp+2Ch] +
push eax  +
push offset aContent  +
push esi  +
call sub_4240E0  +
add esp 18h +
mov ecx [esp+84h] +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 78h +
retn   +
***
push 1  +
call sub_4975B1  +
add esp 4 +
lea ecx [esp+arg_4] +
push ecx  +
push 0  +
push esi  +
push eax  +
call sub_41E490  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_49A75C  +
add esp 18h +
pop esi  +
retn   +
***
test esi esi +
jz loc_46B560  +
cmp dword ptr [esi+8] 0 +
jnz loc_46B560  +
push esi  +
call sub_46BFE0  +
push esi  +
call loc_46DAC0  +
add esp 8 +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_46B579  +
retn   +
mov eax [eax+10h] +
retn   +
***
test esi esi +
jz loc_46B5D6  +
cmp [esp+arg_4] 0 +
jz loc_46B5D6  +
push ebx  +
push edi  +
mov edi [esp+8+arg_8] +
mov ebx edi +
test edi edi +
jnz loc_46B5B1  +
push esi  +
call sub_46EE80  +
mov ebx eax +
push ebx  +
push esi  +
call sub_46F1B0  +
add esp 0Ch +
mov [esi+18h] ebx +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push [esp+18h+arg_4]  +
push esi  +
call sub_46EF00  +
add esp 18h +
test edi edi +
jnz loc_46B5D0  +
mov eax [esi+18h] +
pop edi  +
pop ebx  +
pop esi  +
retn   +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
test edi edi +
jnz loc_46B5ED  +
xor eax eax +
pop edi  +
retn   +
push esi  +
push edi  +
call sub_46EE80  +
mov esi eax +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 0Ch +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
mov esi [esp+arg_0] +
test esi esi +
jz loc_46B682  +
cmp [esp+arg_4] 0 +
jz loc_46B682  +
mov ebx [esp+arg_C] +
test ebx ebx +
jz loc_46B682  +
push edi  +
push 5  +
push esi  +
call sub_46EC00  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_46B66B  +
mov eax [esp+4+arg_10] +
push ebx  +
mov [edi+3Ch] eax +
call sub_44E600  +
mov ebx [esp+8+arg_8] +
push edi  +
push ebx  +
push [esp+10h+arg_4]  +
mov [edi+14h] eax +
push esi  +
call sub_46C500  +
add esp 14h +
test eax eax +
jns loc_46B671  +
push edi  +
call sub_46E760  +
add esp 4 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
jnz loc_46B67C  +
mov eax [esi+18h] +
pop edi  +
pop esi  +
pop ebx  +
retn   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
cmp [esp+arg_0] 0 +
jz loc_46B6A8  +
mov eax [esp+arg_4] +
test eax eax +
jz loc_46B6A8  +
mov dword ptr [eax] 2 +
xor eax eax +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
mov edx [esp+arg_0] +
cmp edx 1 +
jz loc_46B876  +
cmp edx 2 +
jz loc_46B876  +
cmp edx 3 +
jz loc_46B876  +
cmp edx 4 +
jz loc_46B876  +
cmp edx 5 +
jz loc_46B876  +
cmp edx 6 +
jz loc_46B876  +
mov ecx [esp+arg_4] +
cmp ecx 1 +
jz loc_46B876  +
cmp ecx 2 +
jz loc_46B876  +
cmp ecx 3 +
jz loc_46B876  +
cmp ecx 4 +
jz loc_46B876  +
cmp ecx 5 +
jz loc_46B876  +
cmp ecx 6 +
jz loc_46B876  +
cmp edx ecx +
jz loc_46B876  +
jle loc_46B734  +
mov eax edx +
mov edx ecx +
mov ecx eax +
add edx 0FFFFFFF9h +
cmp edx 80h +
ja loc_46B876  +
movzx eax ds:byte_46B8B4[edx] +
jmp ds:off_46B87C[eax*4]  +
cmp ecx 8 +
jz loc_46B793  +
cmp ecx 64h +
jl loc_46B760  +
cmp ecx 69h +
jle loc_46B793  +
cmp ecx 6Eh +
jl loc_46B76A  +
cmp ecx 71h +
jle loc_46B793  +
cmp ecx 6Ah +
jl loc_46B774  +
cmp ecx 6Dh +
jle loc_46B793  +
cmp ecx 72h +
jl loc_46B77E  +
cmp ecx 79h +
jle loc_46B793  +
cmp ecx 7Eh +
jl loc_46B876  +
cmp ecx 82h +
jg loc_46B876  +
xor eax eax +
retn   +
cmp ecx 0Ah +
jz loc_46B793  +
cmp ecx 6Eh +
jl loc_46B7A5  +
cmp ecx 71h +
jle loc_46B793  +
cmp ecx 6Ah +
jl loc_46B7AF  +
cmp ecx 6Dh +
jle loc_46B793  +
cmp ecx 7Ah +
jl loc_46B7B9  +
cmp ecx 7Dh +
jle loc_46B793  +
cmp ecx 72h +
jl loc_46B7C3  +
cmp ecx 79h +
jle loc_46B793  +
cmp ecx 7Eh +
jl loc_46B7D0  +
cmp ecx 82h +
jle loc_46B793  +
cmp ecx 83h +
jl loc_46B876  +
cmp ecx 87h +
jg loc_46B876  +
xor eax eax +
retn   +
cmp ecx 0Ch +
jz loc_46B793  +
cmp ecx 6Ah +
jl loc_46B7FA  +
cmp ecx 6Dh +
jle loc_46B793  +
cmp ecx 72h +
jl loc_46B804  +
cmp ecx 79h +
jle loc_46B793  +
cmp ecx 7Ah +
jl loc_46B7C3  +
cmp ecx 7Dh +
jmp loc_46B7C1  +
cmp ecx 0Eh +
jz loc_46B793  +
cmp ecx 0Fh +
jz loc_46B793  +
cmp ecx 64h +
jl loc_46B7F0  +
cmp ecx 69h +
jle loc_46B793  +
jmp loc_46B7F0  +
cmp ecx 0Eh +
jmp loc_46B7EE  +
xor eax eax +
cmp ecx 69h +
setle al  +
retn   +
xor eax eax +
cmp ecx 6Dh +
setle al  +
retn   +
xor eax eax +
cmp ecx 71h +
setle al  +
retn   +
xor eax eax +
cmp ecx 79h +
setle al  +
retn   +
xor eax eax +
cmp ecx 7Dh +
setle al  +
retn   +
xor eax eax +
cmp ecx 82h +
setle al  +
retn   +
xor eax eax +
cmp ecx 87h +
setle al  +
retn   +
mov eax 1 +
retn   +
***
push ebx  +
mov ebx [esp+8] +
mov ecx 1 +
push edi  +
mov edi [esp+10h] +
cmp ebx edi +
jnz loc_46B958  +
pop edi  +
mov eax ecx +
pop ebx  +
retn   +
***
test ebx ebx +
jz loc_46BA78  +
test edi edi +
jz loc_46BA78  +
mov eax [ebx+4] +
cmp eax 6 +
jz loc_46B953  +
mov edx [edi+4] +
cmp edx 6 +
jz loc_46B953  +
cmp eax edx +
jle loc_46B982  +
mov eax ebx +
mov ebx edi +
mov edi eax +
push ebp  +
mov ebp [edi+4] +
push esi  +
mov esi [ebx+4] +
cmp esi ebp +
jz loc_46B9A2  +
push ebp  +
push esi  +
call sub_46B6B0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jz loc_46BA67  +
mov eax 1 +
sub esi 2 +
jz loc_46BA28  +
sub esi eax +
jz loc_46B9E1  +
sub esi 2 +
jnz loc_46BA69  +
cmp [esp+1Ch] esi +
jnz loc_46B9CF  +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [edi+14h] +
setnz cl  +
jmp loc_46BA52  +
push dword ptr [edi+14h]  +
push dword ptr [ebx+14h]  +
call sub_46F260  +
add esp 8 +
mov ecx eax +
jmp loc_46BA52  +
cmp ebp 3 +
jnz loc_46BA52  +
xor ebp ebp +
cmp [ebx+34h] ebp +
jle loc_46BA1D  +
xor esi esi +
cmp [edi+34h] esi +
jle loc_46BA17  +
mov eax [ebx+38h] +
mov ecx [eax+ebp*4] +
mov eax [edi+38h] +
push dword ptr [eax+esi*4]  +
push ecx  +
call sub_46BA80  +
add esp 8 +
cmp eax 1 +
jz loc_46BA21  +
inc esi  +
cmp esi [edi+34h] +
jl loc_46B9F7  +
inc ebp  +
cmp ebp [ebx+34h] +
jl loc_46B9F0  +
xor ecx ecx +
jmp loc_46BA52  +
mov ecx 1 +
jmp loc_46BA52  +
cmp ebp 2 +
jnz loc_46BA3A  +
mov eax [ebx+20h] +
xor ecx ecx +
cmp eax [edi+20h] +
setz cl  +
jmp loc_46BA52  +
push dword ptr [ebx+20h]  +
push edi  +
call loc_46CF80  +
mov ecx eax +
add esp 8 +
test ecx ecx +
mov eax 1 +
cmovs ecx eax +
mov eax [ebx+1Ch] +
cmp eax [edi+1Ch] +
jz loc_46BA63  +
xor eax eax +
test ecx ecx +
setz al  +
mov ecx eax +
test ecx ecx +
jnz loc_46BA6E  +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
mov eax 1 +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn   +
***
pop edi  +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
mov eax [ebx+4] +
cmp eax 3 +
jz loc_46BD27  +
mov esi [esp+4+arg_4] +
mov ecx [esi+4] +
cmp ecx 3 +
jz loc_46BD27  +
cmp ecx 4 +
jz loc_46BD27  +
cmp eax 4 +
jz loc_46BD27  +
cmp eax 5 +
jz loc_46BD27  +
cmp ecx 5 +
jz loc_46BD27  +
cmp eax ecx +
jle loc_46BAD0  +
mov eax ebx +
mov ebx esi +
mov esi eax +
mov eax [ebx+4] +
cmp eax 6 +
jz loc_46BBF0  +
mov ecx [esi+4] +
cmp ecx 6 +
jz loc_46BBF0  +
cmp eax 1 +
jz loc_46BD0F  +
cmp ecx 1 +
jz loc_46BD0F  +
cmp eax ecx +
jnz loc_46BB22  +
cmp eax 2 +
jnz loc_46BBF0  +
mov eax [ebx+0Ch] +
cmp eax [esi+8] +
jl loc_46BB1B  +
mov eax [esi+0Ch] +
cmp eax [ebx+8] +
jge loc_46BBF0  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 2 +
jnz loc_46BB92  +
push ebp  +
xor ebp ebp +
cmp [ebx] ebp +
jnz loc_46BB34  +
cmp [esi] ebp +
jnz loc_46BB38  +
jmp loc_46BB3D  +
cmp [esi] ebp +
jnz loc_46BB3D  +
mov ebp 1 +
push edi  +
mov edi [ebx+8] +
cmp edi [ebx+0Ch] +
jg loc_46BB79  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push 0  +
push edi  +
push dword ptr [esi+4]  +
call sub_46D150  +
add esp 18h +
test eax eax +
js loc_46BB8A  +
cmp ebp 1 +
jnz loc_46BB6A  +
test eax eax +
jmp loc_46BB71  +
test ebp ebp +
jnz loc_46BB73  +
cmp eax 1 +
jz loc_46BB80  +
inc edi  +
cmp edi [ebx+0Ch] +
jle loc_46BB46  +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
pop edi  +
pop ebp  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
pop edi  +
pop ebp  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
cmp eax 88h +
jz loc_46BD07  +
cmp ecx 88h +
jz loc_46BD07  +
cmp eax 64h +
jl loc_46BCB2  +
cmp ecx 64h +
jl loc_46BCB2  +
add eax 0FFFFFF9Ch +
xor edx edx +
cmp eax 1Fh +
ja loc_46BCA3  +
movzx eax ds:byte_46BD50[eax] +
jmp ds:off_46BD30[eax*4]  +
cmp ecx 65h +
jz loc_46BBF0  +
cmp ecx 66h +
jz loc_46BBF0  +
cmp ecx 67h +
jz loc_46BBF0  +
cmp ecx 68h +
jz loc_46BBF0  +
cmp ecx 69h +
jnz loc_46BBF5  +
mov edx 1 +
cmp dword ptr [ebx] 0 +
jnz loc_46BD14  +
cmp dword ptr [esi] 0 +
jnz loc_46BD19  +
pop esi  +
mov eax edx +
pop ebx  +
retn   +
cmp ecx 6Bh +
jz loc_46BBF0  +
cmp ecx 6Ch +
jz loc_46BBF0  +
cmp ecx 6Dh +
jmp loc_46BBEE  +
cmp ecx 6Fh +
jz loc_46BBF0  +
cmp ecx 70h +
jz loc_46BBF0  +
cmp ecx 71h +
jmp loc_46BBEE  +
cmp ecx 73h +
jz loc_46BBF0  +
cmp ecx 74h +
jz loc_46BBF0  +
cmp ecx 75h +
jz loc_46BBF0  +
cmp ecx 76h +
jz loc_46BBF0  +
cmp ecx 77h +
jz loc_46BBF0  +
cmp ecx 78h +
jz loc_46BBF0  +
cmp ecx 79h +
jmp loc_46BBEE  +
cmp ecx 7Bh +
jz loc_46BBF0  +
cmp ecx 7Ch +
jz loc_46BBF0  +
cmp ecx 7Dh +
jmp loc_46BBEE  +
cmp ecx 7Fh +
jz loc_46BBF0  +
cmp ecx 80h +
jz loc_46BBF0  +
cmp ecx 81h +
jz loc_46BBF0  +
cmp ecx 82h +
jmp loc_46BBEE  +
cmp ecx 84h +
jz loc_46BBF0  +
cmp ecx 85h +
jz loc_46BBF0  +
cmp ecx 86h +
jmp loc_46BBEE  +
cmp ecx 88h +
jge loc_46BD07  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 7 +
jnz loc_46BCC3  +
cmp ecx 8 +
jnz loc_46BCC3  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 9 +
jnz loc_46BCD4  +
cmp ecx 0Ah +
jnz loc_46BCD4  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 0Bh +
jnz loc_46BCE5  +
cmp ecx 0Ch +
jnz loc_46BCE5  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 0Dh +
jnz loc_46BCF6  +
cmp ecx 0Eh +
jnz loc_46BCF6  +
xor edx edx +
jmp loc_46BBF5  +
cmp eax 0Fh +
jnz loc_46BD07  +
cmp ecx 10h +
jnz loc_46BD07  +
xor edx edx +
jmp loc_46BBF5  +
pop esi  +
mov eax 1 +
pop ebx  +
retn   +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
cmp dword ptr [esi] 0 +
jnz loc_46BD22  +
xor eax eax +
test edx edx +
setz al  +
mov edx eax +
pop esi  +
mov eax edx +
pop ebx  +
retn   +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
pop es  +
pop es  +
pop es  +
pop es  +
pop es  +
add [edi] eax +
pop es  +
pop es  +
add al [edi] +
pop es  +
pop es  +
add eax [edi] +
pop es  +
pop es  +
pop es  +
pop es  +
pop es  +
pop es  +
add al 7 +
pop es  +
pop es  +
add eax 7070707h +
push es  +
sub esp 18h +
push edi  +
mov edi [esp+20h] +
mov ecx 1 +
mov dword ptr [esp+8] 1 +
mov eax [edi+44h] +
cmp eax 0FFFFFFFFh +
jnz loc_46BF83  +
test [edi+4Ch] cl +
mov eax 0 +
push ebx  +
cmovnz ecx eax +
mov [esp+1Ch] ecx +
xor ecx ecx +
push ebp  +
push esi  +
mov [esp+20h] ecx +
cmp [edi+30h] eax +
jle loc_46BE87  +
mov eax [edi+34h] +
mov ecx [eax+ecx*4] +
mov [esp+10h] ecx +
test ecx ecx +
jz loc_46BE75  +
mov eax [ecx+18h] +
cmp eax 2 +
jl loc_46BE75  +
xor edx edx +
mov [esp+18h] edx +
test eax eax +
jle loc_46BE75  +
xor eax eax +
mov [esp+1Ch] eax +
mov edi [ecx+1Ch] +
add edi eax +
cmp dword ptr [edi] 0 +
jz loc_46BE5C  +
cmp dword ptr [edi+4] 0FFFFFFFFh +
jz loc_46BE5C  +
test edx edx +
jle loc_46BE5C  +
xor ebx ebx +
mov ebp edx +
mov esi [ecx+1Ch] +
add esi ebx +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jz loc_46BE4C  +
mov ecx [esi] +
test ecx ecx +
jz loc_46BE48  +
cmp [edi+4] eax +
jnz loc_46BE48  +
push dword ptr [esp+24h]  +
push ecx  +
push dword ptr [edi]  +
call sub_46C3B0  +
add esp 0Ch +
test eax eax +
jz loc_46BE48  +
mov eax [edi+8] +
cmp eax [esi+8] +
jnz loc_46BE48  +
mov eax [edi+0Ch] +
mov ecx [esp+10h] +
cmp eax [esi+0Ch] +
jnz loc_46BE4C  +
mov dword ptr [esi+4] 0FFFFFFFFh +
jmp loc_46BE4C  +
mov ecx [esp+10h] +
add ebx 14h +
sub ebp 1 +
jnz loc_46BE00  +
mov edx [esp+18h] +
mov eax [esp+1Ch] +
inc edx  +
add eax 14h +
mov [esp+18h] edx +
mov [esp+1Ch] eax +
cmp edx [ecx+18h] +
jl loc_46BDE4  +
mov edi [esp+2Ch] +
mov ecx [esp+20h] +
inc ecx  +
mov [esp+20h] ecx +
cmp ecx [edi+30h] +
jl loc_46BDB2  +
xor edx edx +
mov [esp+24h] edx +
cmp [edi+30h] edx +
jle loc_46BF79  +
mov eax [edi+34h] +
mov edx [eax+edx*4] +
mov [esp+20h] edx +
test edx edx +
jz loc_46BF67  +
mov ecx [edx+18h] +
cmp ecx 2 +
jl loc_46BF67  +
xor eax eax +
xor ebp ebp +
mov [esp+10h] eax +
mov [esp+1Ch] ebp +
test ecx ecx +
jle loc_46BF67  +
xor ecx ecx +
mov [esp+18h] ecx +
nop   +
mov esi [edx+1Ch] +
add esi ecx +
cmp dword ptr [esi] 0 +
jz loc_46BF47  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_46BF47  +
test ebp ebp +
jle loc_46BF47  +
xor ebx ebx +
mov edi [edx+1Ch] +
mov edx [edi+ebx+4] +
cmp edx 0FFFFFFFFh +
jz loc_46BF2F  +
mov eax [edi+ebx] +
test eax eax +
jz loc_46BF88  +
push 1  +
push eax  +
push dword ptr [esi]  +
call loc_46B940  +
add esp 0Ch +
test eax eax +
jz loc_46BFC2  +
mov eax esi +
mov dword ptr [esi+10h] 1 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [edi+ebx+10h] 1 +
mov [esp+10h] eax +
mov edi [esp+2Ch] +
mov edx [esp+20h] +
add ebx 14h +
sub ebp 1 +
jnz loc_46BEE6  +
mov ebp [esp+1Ch] +
mov ecx [esp+18h] +
inc ebp  +
add ecx 14h +
mov [esp+1Ch] ebp +
mov [esp+18h] ecx +
cmp ebp [edx+18h] +
jl loc_46BED0  +
test eax eax +
jz loc_46BF67  +
mov dword ptr [eax+10h] 2 +
mov edx [esp+24h] +
inc edx  +
mov [esp+24h] edx +
cmp edx [edi+30h] +
jl loc_46BE96  +
mov eax [esp+14h] +
pop esi  +
pop ebp  +
mov [edi+44h] eax +
pop ebx  +
pop edi  +
add esp 18h +
retn   +
***
mov ecx [esi+4] +
mov edi [esp+2Ch] +
cmp ecx 0FFFFFFFFh +
jz loc_46BFCB  +
mov eax [edi+34h] +
push 0  +
push edx  +
push dword ptr [eax+ecx*4]  +
push edi  +
call sub_46C8E0  +
mov ecx eax +
add esp 10h +
mov [esp+14h] ecx +
test ecx ecx +
jnz loc_46BFCB  +
mov eax esi +
mov dword ptr [esi+10h] 1 +
mov [esp+10h] eax +
jmp loc_46BF33  +
***
mov eax [esp+10h] +
jmp loc_46BF2F  +
***
mov eax [esp+10h] +
jmp loc_46BF33  +
***
mov esi [esp+8+arg_0] +
cmp dword ptr [esi+34h] 0 +
jz loc_46C25F  +
push ebx  +
push edi  +
push esi  +
call loc_46C270  +
xor ebx ebx +
add esp 4 +
cmp [esi+30h] ebx +
jle loc_46C04D  +
mov eax [esi+34h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_46C047  +
cmp dword ptr [edi] 5 +
jnz loc_46C047  +
mov eax [edi+1Ch] +
test eax eax +
jz loc_46C022  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+28h] +
test eax eax +
jz loc_46C033  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
call off_4EE2F4  +
mov eax [esi+34h] +
add esp 4 +
mov dword ptr [eax+ebx*4] 0 +
inc ebx  +
cmp ebx [esi+30h] +
jl loc_46C002  +
mov edx [esi+30h] +
sub edx 1 +
mov [esp+10h+var_4] 0 +
push ebp  +
mov [esp+14h+arg_0] edx +
js loc_46C14F  +
mov eax [esi+34h] +
mov edi [eax+edx*4] +
test edi edi +
jz loc_46C0F3  +
mov eax [edi+18h] +
test eax eax +
jnz loc_46C086  +
cmp dword ptr [edi] 2 +
jz loc_46C086  +
mov dword ptr [edi] 4 +
xor ebp ebp +
test eax eax +
jle loc_46C0F3  +
xor ebx ebx +
nop   +
mov eax [edi+1Ch] +
cmp dword ptr [ebx+eax] 0 +
jnz loc_46C0EA  +
mov ecx [ebx+eax+4] +
test ecx ecx +
js loc_46C0EA  +
cmp ecx edx +
jnz loc_46C0AF  +
mov dword ptr [ebx+eax+4] 0FFFFFFFFh +
jmp loc_46C0EA  +
cmp dword ptr [ebx+eax+0Ch] 0 +
jge loc_46C0EA  +
mov dword ptr [ebx+eax+4] 0FFFFFFFEh +
mov eax [edi+1Ch] +
mov dword ptr [edi+4] 1 +
mov [esp+14h+var_4] 1 +
push dword ptr [ebx+eax+8]  +
push ecx  +
push edx  +
push esi  +
call sub_46C9A0  +
mov edx [esp+24h+arg_0] +
add esp 10h +
mov dword ptr [edi+4] 0 +
inc ebp  +
add ebx 14h +
cmp ebp [edi+18h] +
jl loc_46C090  +
sub edx 1 +
mov [esp+14h+arg_0] edx +
jns loc_46C066  +
cmp [esp+14h+var_4] 0 +
jz loc_46C14F  +
xor ebx ebx +
cmp [esi+30h] ebx +
jle loc_46C14F  +
nop   +
mov eax [esi+34h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_46C149  +
xor ecx ecx +
cmp [edi+18h] ecx +
jle loc_46C149  +
xor edx edx +
mov eax [edi+1Ch] +
add eax edx +
cmp dword ptr [eax] 0 +
jnz loc_46C140  +
cmp dword ptr [eax+0Ch] 0 +
jge loc_46C140  +
cmp dword ptr [eax+4] 0 +
jl loc_46C140  +
mov dword ptr [eax+4] 0FFFFFFFFh +
inc ecx  +
add edx 14h +
cmp ecx [edi+18h] +
jl loc_46C123  +
inc ebx  +
cmp ebx [esi+30h] +
jl loc_46C110  +
xor ecx ecx +
cmp [esi+30h] ecx +
jle loc_46C16D  +
mov eax [esi+34h] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_46C167  +
mov dword ptr [eax+0Ch] 0 +
inc ecx  +
cmp ecx [esi+30h] +
jl loc_46C156  +
mov eax [esi+34h] +
mov edi [eax] +
test edi edi +
jz loc_46C209  +
mov dword ptr [edi+0Ch] 1 +
xor ecx ecx +
mov dword ptr [edi+0Ch] 2 +
xor ebp ebp +
cmp [edi+18h] ecx +
jle loc_46C1D5  +
xor edx edx +
mov eax [edi+1Ch] +
mov ebx [edx+eax+4] +
test ebx ebx +
js loc_46C1C8  +
cmp dword ptr [edx+eax] 0 +
jnz loc_46C1AB  +
cmp dword ptr [edx+eax+0Ch] 0 +
jl loc_46C1C8  +
mov eax [esi+34h] +
mov eax [eax+ebx*4] +
test eax eax +
jz loc_46C1C8  +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_46C1C8  +
mov dword ptr [eax+0Ch] 1 +
mov eax [esi+34h] +
mov ebp [eax+ebx*4] +
inc ecx  +
add edx 14h +
cmp ecx [edi+18h] +
jl loc_46C193  +
test ebp ebp +
jnz loc_46C1FF  +
mov edi [esi+30h] +
mov edx 1 +
cmp edi edx +
jle loc_46C1FF  +
mov eax [esi+34h] +
add eax 4 +
mov ecx [eax] +
test ecx ecx +
jz loc_46C1F3  +
cmp dword ptr [ecx+0Ch] 1 +
jz loc_46C1FD  +
inc edx  +
add eax 4 +
cmp edx edi +
jl loc_46C1E7  +
jmp loc_46C1FF  +
mov ebp ecx +
mov edi ebp +
test ebp ebp +
jnz loc_46C181  +
xor ebx ebx +
pop ebp  +
cmp [esi+30h] ebx +
jle loc_46C25D  +
mov eax [esi+34h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_46C257  +
cmp dword ptr [edi+0Ch] 0 +
jnz loc_46C257  +
mov eax [edi+1Ch] +
test eax eax +
jz loc_46C232  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [edi+28h] +
test eax eax +
jz loc_46C243  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
call off_4EE2F4  +
mov eax [esi+34h] +
add esp 4 +
mov dword ptr [eax+ebx*4] 0 +
inc ebx  +
cmp ebx [esi+30h] +
jl loc_46C211  +
pop edi  +
pop ebx  +
pop esi  +
pop ecx  +
retn   +
***
sub esp 10h +
push esi  +
mov esi [esp+18h] +
xor edx edx +
mov [esp+0Ch] edx +
cmp [esi+30h] edx +
jle loc_46C3AB  +
push ebx  +
push ebp  +
push edi  +
mov eax [esp+arg_0] +
xor ecx ecx +
mov edx [esp+arg_4] +
cmp eax edx +
jnz loc_46C3C4  +
mov eax 1 +
retn   +
test eax eax +
jz loc_46C422  +
test edx edx +
jz loc_46C422  +
push esi  +
mov esi [eax+4] +
cmp esi [edx+4] +
jz loc_46C3D9  +
xor eax eax +
pop esi  +
retn   +
dec esi  +
cmp esi 4 +
ja loc_46C41E  +
jmp ds:off_46C428[esi*4]  +
cmp [esp+4+arg_8] ecx +
jnz loc_46C3FB  +
mov eax [eax+14h] +
xor ecx ecx +
cmp eax [edx+14h] +
pop esi  +
setz cl  +
mov eax ecx +
retn   +
push dword ptr [edx+14h]  +
push dword ptr [eax+14h]  +
call sub_44E370  +
add esp 8 +
mov ecx eax +
pop esi  +
retn   +
mov eax [eax+20h] +
xor ecx ecx +
cmp eax [edx+20h] +
pop esi  +
setz cl  +
mov eax ecx +
retn   +
xor ecx ecx +
mov eax ecx +
pop esi  +
retn   +
xor eax eax +
retn   +
***
push edi  +
mov edi [esp+4+arg_0] +
test esi esi +
jnz loc_46C463  +
push edi  +
call sub_46EE80  +
mov esi eax +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 0Ch +
mov [edi+18h] esi +
push 0FFFFFFFFh  +
push [esp+8+arg_C]  +
push esi  +
push 0  +
push [esp+14h+arg_4]  +
push edi  +
call sub_46EF00  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+4+arg_0] +
test esi esi +
jnz loc_46C4A3  +
push edi  +
call sub_46EE80  +
mov esi eax +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 0Ch +
mov [edi+18h] esi +
push [esp+4+arg_C]  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push [esp+14h+arg_4]  +
push edi  +
call sub_46EF00  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+4+arg_0] +
test esi esi +
jnz loc_46C4E3  +
push edi  +
call sub_46EE80  +
mov esi eax +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 0Ch +
mov [edi+18h] esi +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push [esp+14h+arg_4]  +
push edi  +
call sub_46EF00  +
add esp 18h +
pop edi  +
pop esi  +
retn   +
***
test ebx ebx +
jnz loc_46C54B  +
mov eax [esp+arg_0] +
push offset aGenrateTransit  +
push offset aFailedToCompil  +
push ebx  +
mov edx [eax] +
mov ecx [eax+4] +
sub ecx edx +
mov dword ptr [eax+8] 5AAh +
push ecx  +
push ebx  +
push edx  +
push offset aGenrateTransit  +
push ebx  +
push ebx  +
push 3  +
push 5AAh  +
push 0Eh  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_43A650  +
add esp 44h +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
cmp dword ptr [ebx+4] 4 +
push ebp  +
push esi  +
push edi  +
jnz loc_46C766  +
mov ebp [esp+0Ch+arg_0] +
push ebx  +
push ebp  +
call sub_46CE90  +
add esp 8 +
test eax eax +
js loc_46C8BC  +
mov edi [esp+0Ch+arg_8] +
mov [esp+0Ch+arg_C] edi +
test edi edi +
jz loc_46C592  +
mov eax [ebx+2Ch] +
cmp eax edi +
jz loc_46C592  +
cmp dword ptr [ebx+8] 8 +
jz loc_46C592  +
push edi  +
push eax  +
push ebp  +
call sub_46C4C0  +
add esp 0Ch +
mov eax [ebx+8] +
add eax 0FFFFFFFDh +
cmp eax 5 +
ja loc_46C75F  +
jmp ds:off_46C8C4[eax*4]  +
mov dword ptr [ebx+8] 2 +
test edi edi +
jnz loc_46C5EC  +
mov edi [ebx+24h] +
push ebp  +
call sub_46EE80  +
mov esi eax +
push esi  +
push ebp  +
call sub_46F1B0  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push 0  +
push edi  +
push ebp  +
mov [ebp+18h] esi +
call sub_46EF00  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+2Ch]  +
push ebp  +
call sub_46C4C0  +
add esp 30h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push edi  +
push dword ptr [ebx+24h]  +
push ebp  +
call sub_46C4C0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push dword ptr [ebx+2Ch]  +
mov dword ptr [ebx+8] 2 +
push dword ptr [ebx+24h]  +
push ebp  +
call sub_46C4C0  +
push dword ptr [ebx+24h]  +
push dword ptr [ebx+2Ch]  +
push ebp  +
call sub_46C4C0  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push dword ptr [ebx+24h]  +
mov dword ptr [ebx+8] 2 +
push dword ptr [ebx+2Ch]  +
push ebp  +
call sub_46C4C0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
test edi edi +
jnz loc_46C660  +
push ebp  +
call sub_46EE80  +
mov edi eax +
push edi  +
push ebp  +
mov [esp+18h+arg_C] edi +
call sub_46F1B0  +
add esp 0Ch +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_46C6FC  +
cmp dword ptr [ebx+28h] 0 +
jnz loc_46C6FC  +
push ebx  +
push ebp  +
call sub_46D950  +
add esp 8 +
test eax eax +
jz loc_46C8BC  +
push eax  +
push 0  +
mov dword ptr [eax+8] 2 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
push dword ptr [ebx+24h]  +
push ebp  +
call sub_46C500  +
add esp 10h +
test eax eax +
js loc_46C8BC  +
mov edi [ebp+18h] +
push ebp  +
call sub_46EB30  +
mov ecx [ebp+40h] +
mov esi eax +
mov edx [ebx+0Ch] +
dec edx  +
push esi  +
mov [ecx+esi*8] edx +
mov ecx [ebx+10h] +
mov eax [ebp+40h] +
dec ecx  +
mov [eax+esi*8+4] ecx +
push dword ptr [ebx+2Ch]  +
push edi  +
push ebp  +
call sub_46C440  +
push esi  +
push [esp+24h+arg_C]  +
push edi  +
push ebp  +
call sub_46C480  +
mov edi [esp+30h+arg_C] +
push edi  +
push dword ptr [ebx+24h]  +
push ebp  +
call sub_46C4C0  +
add esp 30h +
jmp loc_46C747  +
push ebp  +
call sub_46EB30  +
mov ecx [ebp+40h] +
mov esi eax +
mov edx [ebx+0Ch] +
dec edx  +
push esi  +
mov [ecx+esi*8] edx +
mov ecx [ebx+10h] +
mov eax [ebp+40h] +
dec ecx  +
mov [eax+esi*8+4] ecx +
push dword ptr [ebx+24h]  +
push dword ptr [ebx+2Ch]  +
push ebp  +
call sub_46C440  +
push esi  +
push edi  +
push dword ptr [ebx+2Ch]  +
push ebp  +
call sub_46C480  +
add esp 24h +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_46C747  +
push edi  +
push dword ptr [ebx+28h]  +
push ebp  +
call sub_46C4C0  +
add esp 0Ch +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+8] 2 +
mov [ebp+18h] edi +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
cmp dword ptr [ebx+0Ch] 0 +
jnz loc_46C7BF  +
cmp dword ptr [ebx+10h] 0 +
jnz loc_46C7BF  +
cmp dword ptr [ebx+8] 8 +
jnz loc_46C7BF  +
mov esi [esp+0Ch+arg_8] +
mov edi [esp+0Ch+arg_0] +
test esi esi +
jnz loc_46C7A1  +
push edi  +
call sub_46EE80  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_46C8BC  +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 8 +
push esi  +
push [esp+10h+arg_4]  +
push edi  +
call sub_46C4C0  +
push ebx  +
mov [edi+18h] esi +
call sub_46E760  +
add esp 10h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
mov esi [esp+0Ch+arg_8] +
mov edi [esp+0Ch+arg_0] +
test esi esi +
jnz loc_46C7E8  +
push edi  +
call sub_46EE80  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_46C8BC  +
push esi  +
push edi  +
call sub_46F1B0  +
add esp 8 +
mov eax [ebx+8] +
mov [esp+0Ch+arg_C] esi +
cmp eax 4 +
jz loc_46C7F9  +
cmp eax 5 +
jnz loc_46C820  +
push edi  +
call sub_46EE80  +
mov ebp eax +
add esp 4 +
test ebp ebp +
jz loc_46C8BC  +
push ebp  +
push edi  +
call sub_46F1B0  +
push esi  +
push ebp  +
push edi  +
call sub_46C4C0  +
add esp 14h +
mov esi ebp +
push ebx  +
push edi  +
call sub_46CE90  +
add esp 8 +
test eax eax +
js loc_46C8BC  +
mov ebp [esp+0Ch+arg_4] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push ebp  +
push edi  +
call sub_46EF00  +
mov eax [esp+24h+arg_C] +
add esp 18h +
mov [edi+18h] eax +
mov eax [ebx+8] +
sub eax 3 +
jz loc_46C8A3  +
sub eax 1 +
jz loc_46C87D  +
sub eax 1 +
jnz loc_46C8B5  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push esi  +
push edi  +
mov dword ptr [ebx+8] 2 +
call sub_46EF00  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push esi  +
push ebp  +
push edi  +
mov dword ptr [ebx+8] 2 +
call sub_46C4C0  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push esi  +
push edi  +
call sub_46EF00  +
add esp 24h +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
push esi  +
push ebp  +
push edi  +
mov dword ptr [ebx+8] 2 +
call sub_46C4C0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn   +
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov edi [esi+34h] +
mov ecx [edi+ebx*4] +
mov [esp+8+arg_0] ecx +
test ecx ecx +
jz loc_46CA96  +
mov eax [esp+8+arg_8] +
mov edi [edi+eax*4] +
test edi edi +
jz loc_46CA96  +
mov eax [edi+4] +
cmp eax 1 +
jz loc_46CA96  +
cmp eax 2 +
jz loc_46CA96  +
cmp dword ptr [edi] 2 +
mov dword ptr [edi+4] 2 +
jnz loc_46C9F3  +
mov dword ptr [ecx] 2 +
push ebp  +
xor ebp ebp +
cmp [edi+18h] ebp +
jle loc_46CA8E  +
xor ecx ecx +
mov [esp+0Ch+arg_4] ecx +
mov eax [edi+1Ch] +
add eax ecx +
mov ecx [eax+4] +
test ecx ecx +
js loc_46CA79  +
mov edx [eax] +
test edx edx +
jnz loc_46CA55  +
cmp ecx ebx +
jz loc_46CA79  +
mov edx [eax+0Ch] +
test edx edx +
js loc_46CA2F  +
mov eax [esi+34h] +
push edx  +
push 0FFFFFFFFh  +
push dword ptr [eax+ecx*4]  +
push 0  +
jmp loc_46CA6C  +
mov eax [eax+8] +
test eax eax +
js loc_46CA44  +
push eax  +
push ecx  +
push ebx  +
push esi  +
call sub_46C9A0  +
add esp 10h +
jmp loc_46CA79  +
push [esp+0Ch+arg_C]  +
push ecx  +
push ebx  +
push esi  +
call sub_46C9A0  +
add esp 10h +
jmp loc_46CA79  +
mov eax [eax+8] +
push 0FFFFFFFFh  +
test eax eax +
js loc_46CA61  +
push eax  +
jmp loc_46CA65  +
push [esp+10h+arg_C]  +
mov eax [esi+34h] +
push dword ptr [eax+ecx*4]  +
push edx  +
push [esp+1Ch+arg_0]  +
push esi  +
call sub_46EF00  +
add esp 18h +
mov ecx [esp+0Ch+arg_4] +
inc ebp  +
add ecx 14h +
mov [esp+0Ch+arg_4] ecx +
cmp ebp [edi+18h] +
jl loc_46CA05  +
mov dword ptr [edi+4] 0 +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ecx [esi+24h] +
test ecx ecx +
jg loc_46CAB4  +
mov dword ptr [esi] 0FFFFFFFFh +
pop esi  +
retn   +
mov edx [esi+28h] +
dec ecx  +
mov [esi+24h] ecx +
shl ecx 4 +
add edx ecx +
mov eax [edx] +
mov [esi+14h] eax +
mov eax [edx+4] +
mov [esi+38h] eax +
mov eax [edx+8] +
mov [esi+18h] eax +
mov eax [esi+8] +
mov eax [eax+14h] +
test eax eax +
jle loc_46CB17  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_46CB02  +
push offset aExecSaveAlloca  +
push 2  +
call sub_4975B1  +
add esp 4 +
push eax  +
call sub_43AB50  +
add esp 8 +
mov dword ptr [esi] 0FFFFFFFAh +
pop esi  +
retn   +
mov ecx [esi+2Ch] +
test ecx ecx +
jz loc_46CB17  +
shl eax 2 +
push eax  +
push edx  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
pop esi  +
retn   +
***
mov eax [esi+58h] +
cmp eax 989680h +
jg loc_46CCCA  +
push edi  +
mov edi [esi+20h] +
inc eax  +
mov [esi+58h] eax +
test edi edi +
jnz loc_46CB94  +
push 40h  +
mov dword ptr [esi+20h] 4 +
call off_4EE2E8  +
mov ecx eax +
add esp 4 +
mov [esi+28h] ecx +
test ecx ecx +
jnz loc_46CB88  +
push offset aSavingRegexp  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aSavingRegexp  +
push eax  +
push eax  +
push 3  +
push 2  +
push 0Eh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
mov [esi+20h] edi +
pop edi  +
pop esi  +
retn   +
mov eax [esi+20h] +
shl eax 4 +
push eax  +
push 0  +
push ecx  +
jmp loc_46CBFF  +
cmp [esi+24h] edi +
jl loc_46CC07  +
lea eax [edi+edi] +
mov [esi+20h] eax +
shl eax 4 +
push eax  +
push dword ptr [esi+28h]  +
call off_4EE2F0  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jnz loc_46CBEB  +
push offset aSavingRegexp  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aSavingRegexp  +
push eax  +
push eax  +
push 3  +
push 2  +
push 0Eh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
mov eax [esi+20h] +
add esp 44h +
cdq   +
sub eax edx +
sar eax 1 +
pop edi  +
mov [esi+20h] eax +
pop esi  +
retn   +
mov eax [esi+20h] +
sub eax edi +
mov [esi+28h] ecx +
shl eax 4 +
push eax  +
shl edi 4 +
push 0  +
add edi ecx +
push edi  +
call sub_48CF40  +
add esp 0Ch +
mov edx [esi+24h] +
mov ecx [esi+28h] +
add edx edx +
mov eax [esi+14h] +
mov [ecx+edx*8] eax +
mov edx [esi+24h] +
mov ecx [esi+28h] +
add edx edx +
mov eax [esi+38h] +
mov [ecx+edx*8+4] eax +
mov ecx [esi+24h] +
mov eax [esi+28h] +
add ecx ecx +
mov edx [esi+18h] +
inc edx  +
mov [eax+ecx*8+8] edx +
mov eax [esi+8] +
mov edx [eax+14h] +
test edx edx +
jle loc_46CCC6  +
mov ecx [esi+24h] +
mov eax [esi+28h] +
add ecx ecx +
mov ecx [eax+ecx*8+0Ch] +
test ecx ecx +
jnz loc_46CCB0  +
lea eax ds:0[edx*4] +
push eax  +
call off_4EE2E8  +
mov edx [esi+24h] +
add esp 4 +
mov ecx [esi+28h] +
add edx edx +
mov [ecx+edx*8+0Ch] eax +
mov ecx [esi+24h] +
mov eax [esi+28h] +
add ecx ecx +
mov ecx [eax+ecx*8+0Ch] +
test ecx ecx +
jnz loc_46CCB0  +
push offset aSavingRegexp  +
push offset aMemoryAllocati  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push offset aSavingRegexp  +
push ecx  +
push ecx  +
push 3  +
push 2  +
push 0Eh  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi] 0FFFFFFFBh +
pop edi  +
pop esi  +
retn   +
mov eax [esi+8] +
mov eax [eax+14h] +
shl eax 2 +
push eax  +
push dword ptr [esi+2Ch]  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
inc dword ptr [esi+24h]  +
pop edi  +
pop esi  +
retn   +
***
mov ecx [esi+30h] +
test ecx ecx +
jnz loc_46CD2A  +
push 20h  +
mov dword ptr [esi+30h] 4 +
call off_4EE2E8  +
add esp 4 +
mov [esi+44h] eax +
test eax eax +
jnz loc_46CD84  +
push offset aPushingInputSt  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aPushingInputSt  +
push eax  +
push eax  +
push 3  +
push 2  +
push 0Eh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+30h] 0 +
pop esi  +
retn   +
mov eax [esi+34h] +
inc eax  +
cmp eax ecx +
jl loc_46CD84  +
lea eax [ecx+ecx] +
mov [esi+30h] eax +
shl eax 3 +
push eax  +
push dword ptr [esi+44h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46CD81  +
push offset aPushingInputSt  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aPushingInputSt  +
push eax  +
push eax  +
push 3  +
push 2  +
push 0Eh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
mov eax [esi+30h] +
add esp 44h +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+30h] eax +
pop esi  +
retn   +
mov [esi+44h] eax +
push [esp+arg_4]  +
call sub_44E600  +
mov edx [esi+34h] +
add esp 4 +
mov ecx [esi+44h] +
mov [ecx+edx*8] eax +
mov edx [esi+34h] +
mov ecx [esi+44h] +
mov eax [esp+arg_8] +
mov [ecx+edx*8+4] eax +
inc dword ptr [esi+34h]  +
mov ecx [esi+34h] +
mov eax [esi+44h] +
mov dword ptr [eax+ecx*8] 0 +
mov ecx [esi+34h] +
mov eax [esi+44h] +
pop esi  +
mov dword ptr [eax+ecx*8+4] 0 +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_46CDE1  +
mov [esp+arg_0] eax +
jmp loc_46E8D0  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_46CE50  +
push 50h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ecx [esi] +
mov [esi+4] ecx +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+48h] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+44h] 0FFFFFFFFh +
push esi  +
mov dword ptr [esi+14h] 0 +
call sub_46EE80  +
add esp 10h +
mov [esi+18h] eax +
mov [esi+10h] eax +
test eax eax +
jnz loc_46CE54  +
push esi  +
call loc_46E8D0  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
mov dword ptr [eax] 1 +
push dword ptr [esi+10h]  +
push esi  +
call sub_46F1B0  +
add esp 8 +
test eax eax +
jns loc_46CE7F  +
push dword ptr [esi+10h]  +
call sub_46EAF0  +
push esi  +
call loc_46E8D0  +
add esp 8 +
xor eax eax +
pop esi  +
retn   +
mov dword ptr [esi+4Ch] 0 +
mov eax esi +
pop esi  +
retn   +
***
test edi edi +
jnz loc_46CEDB  +
mov eax [esp+arg_0] +
push offset aAtomPushAtomIs  +
push offset aFailedToCompil  +
push edi  +
mov edx [eax] +
mov ecx [eax+4] +
sub ecx edx +
mov dword ptr [eax+8] 5AAh +
push ecx  +
push edi  +
push edx  +
push offset aAtomPushAtomIs  +
push edi  +
push edi  +
push 3  +
push 5AAh  +
push 0Eh  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_43A650  +
add esp 44h +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
mov eax [esi+20h] +
test eax eax +
jnz loc_46CF1B  +
push 10h  +
mov dword ptr [esi+20h] 4 +
call off_4EE2E8  +
add esp 4 +
mov [esi+28h] eax +
test eax eax +
jnz loc_46CF5B  +
push offset aPushingAtom  +
push esi  +
call sub_46F320  +
add esp 8 +
mov dword ptr [esi+20h] 0 +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
cmp [esi+24h] eax +
jl loc_46CF5B  +
add eax eax +
mov [esi+20h] eax +
shl eax 2 +
push eax  +
push dword ptr [esi+28h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46CF58  +
push offset aAllocatingCoun  +
push esi  +
call sub_46F320  +
mov eax [esi+20h] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+20h] eax +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
mov [esi+28h] eax +
mov eax [esi+24h] +
mov [edi] eax +
mov ecx [esi+24h] +
mov eax [esi+28h] +
mov [eax+ecx*4] edi +
xor eax eax +
inc dword ptr [esi+24h]  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+8] +
xor edx edx +
push esi  +
test ebx ebx +
jz loc_46CFAC  +
mov esi [esp+10h] +
cmp esi 100h +
jge loc_46CFB2  +
cmp esi 9 +
jl loc_46CFA2  +
cmp esi 0Ah +
jle loc_46CFD7  +
cmp esi 0Dh +
jz loc_46CFD7  +
cmp esi 20h +
jge loc_46CFD7  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp esi 0D7FFh +
jle loc_46CFD7  +
cmp esi 0E000h +
jl loc_46CFCA  +
cmp esi 0FFFDh +
jle loc_46CFD7  +
lea eax [esi-10000h] +
cmp eax 0FFFFFh +
ja loc_46CFAC  +
mov ecx [ebx+4] +
lea eax [ecx-1] +
cmp eax 87h +
ja loc_46D0AA  +
movzx eax ds:byte_46D0C8[eax] +
jmp ds:off_46D0B0[eax*4]  +
xor eax eax +
cmp esi [ebx+20h] +
pop esi  +
setz al  +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
xor ebp ebp +
xor edi edi +
cmp [ebx+34h] edx +
jle loc_46D06C  +
mov eax [ebx+38h] +
mov eax [eax+edi*4] +
push dword ptr [eax+10h]  +
mov ecx [eax] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push 0  +
push esi  +
push dword ptr [eax+4]  +
cmp ecx 2 +
jnz loc_46D03F  +
call sub_46D150  +
add esp 18h +
test eax eax +
jz loc_46D066  +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
retn   +
***
test ecx ecx +
jz loc_46D054  +
call sub_46D150  +
add esp 18h +
test eax eax +
jnz loc_46D038  +
lea ebp [eax+1] +
jmp loc_46D066  +
call sub_46D150  +
add esp 18h +
test eax eax +
mov eax 1 +
cmovnz ebp eax +
inc edi  +
cmp edi [ebx+34h] +
jl loc_46D010  +
pop edi  +
mov eax ebp +
pop ebp  +
pop esi  +
pop ebx  +
retn   +
***
push offset aTodoXml_regexp  +
call sub_46B510  +
add esp 4 +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
***
push dword ptr [ebx+14h]  +
push 0  +
push 0  +
push 0  +
push esi  +
push ecx  +
call sub_46D150  +
add esp 18h +
mov edx eax +
cmp dword ptr [ebx+1Ch] 0 +
jz loc_46D0AA  +
xor ecx ecx +
test edx edx +
setz cl  +
mov edx ecx +
pop esi  +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
xor ecx ecx +
dec eax  +
push esi  +
cmp eax 87h +
ja loc_46D696  +
movzx eax ds:byte_46D774[eax] +
jmp ds:off_46D6AC[eax*4]  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov eax [esp+4+arg_4] +
cmp eax 0Ah +
jz loc_46D1CD  +
cmp eax 0Dh +
jz loc_46D1CD  +
mov ecx 1 +
jmp loc_46D696  +
mov eax [esp+4+arg_4] +
cmp eax [esp+4+arg_C] +
jl loc_46D1CD  +
cmp eax [esp+4+arg_10] +
jg loc_46D1CD  +
mov ecx 1 +
jmp loc_46D696  +
xor eax eax +
cmp [esp+4+arg_8] eax +
setz al  +
mov [esp+4+arg_8] eax +
mov eax [esp+4+arg_4] +
cmp eax 0Ah +
jz loc_46D184  +
cmp eax 0Dh +
jz loc_46D184  +
cmp eax 9 +
jz loc_46D184  +
cmp eax 20h +
jz loc_46D184  +
xor ecx ecx +
jmp loc_46D696  +
xor eax eax +
cmp [esp+4+arg_8] eax +
setz al  +
mov [esp+4+arg_8] eax +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_46D23B  +
cmp esi 41h +
jl loc_46D1F7  +
cmp esi 5Ah +
jle loc_46D184  +
cmp esi 61h +
jl loc_46D201  +
cmp esi 7Ah +
jle loc_46D184  +
cmp esi 0C0h +
jl loc_46D215  +
cmp esi 0D6h +
jle loc_46D184  +
cmp esi 0D8h +
jl loc_46D229  +
cmp esi 0F6h +
jle loc_46D184  +
cmp esi 0F8h +
jl loc_46D251  +
mov ecx 1 +
jmp loc_46D696  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_46D184  +
cmp esi 100h +
jl loc_46D28D  +
cmp esi 4E00h +
jl loc_46D26D  +
cmp esi 9FA5h +
jle loc_46D184  +
cmp esi 3007h +
jz loc_46D184  +
cmp esi 3021h +
jl loc_46D28D  +
cmp esi 3029h +
jle loc_46D184  +
cmp esi 5Fh +
jz loc_46D184  +
cmp esi 3Ah +
jz loc_46D184  +
xor ecx ecx +
jmp loc_46D696  +
xor eax eax +
cmp [esp+4+arg_8] eax +
setz al  +
mov [esp+4+arg_8] eax +
mov esi [esp+4+arg_4] +
cmp esi 100h +
jge loc_46D315  +
cmp esi 41h +
jl loc_46D2CD  +
cmp esi 5Ah +
jle loc_46D184  +
cmp esi 61h +
jl loc_46D2DB  +
cmp esi 7Ah +
jle loc_46D184  +
cmp esi 0C0h +
jl loc_46D2EF  +
cmp esi 0D6h +
jle loc_46D184  +
cmp esi 0D8h +
jl loc_46D303  +
cmp esi 0F6h +
jle loc_46D184  +
cmp esi 0F8h +
jl loc_46D32B  +
mov ecx 1 +
jmp loc_46D696  +
push offset asc_4C14B0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_46D184  +
cmp esi 100h +
jl loc_46D37F  +
cmp esi 4E00h +
jl loc_46D347  +
cmp esi 9FA5h +
jle loc_46D184  +
cmp esi 3007h +
jz loc_46D184  +
cmp esi 3021h +
jl loc_46D367  +
cmp esi 3029h +
jle loc_46D184  +
push offset unk_4C14E0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_46D184  +
jmp loc_46D38B  +
lea eax [esi-30h] +
cmp eax 9 +
jbe loc_46D184  +
cmp esi 2Eh +
jz loc_46D184  +
cmp esi 2Dh +
jz loc_46D184  +
cmp esi 5Fh +
jz loc_46D184  +
cmp esi 3Ah +
jz loc_46D184  +
cmp esi 100h +
jl loc_46D3DD  +
push offset unk_4C14D0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
test eax eax +
jnz loc_46D184  +
push offset unk_4C14F0  +
push esi  +
call sub_45B3E0  +
add esp 8 +
jmp loc_46D3E8  +
xor eax eax +
cmp esi 0B7h +
setz al  +
test eax eax +
jnz loc_46D184  +
xor ecx ecx +
jmp loc_46D696  +
xor eax eax +
cmp [esp+4+arg_8] eax +
setz al  +
mov [esp+4+arg_8] eax +
push [esp+4+arg_4]  +
call sub_474490  +
add esp 4 +
jmp loc_46D694  +
xor eax eax +
cmp [esp+4+arg_8] eax +
setz al  +
mov [esp+4+arg_8] eax +
mov esi [esp+4+arg_4] +
push esi  +
call sub_474530  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_46D696  +
push esi  +
call sub_474740  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_46D696  +
push esi  +
call sub_474230  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474310  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4743B0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474330  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474390  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474350  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474370  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4743D0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474450  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4743F0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474410  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474470  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4744B0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474510  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474530  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474550  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4745B0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474680  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4745D0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474620  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4745F0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474660  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474740  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474780  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474760  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474770  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4746A0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474700  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4746C0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_4746E0  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474720  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474230  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474250  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474270  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_4]  +
call sub_474290  +
add esp 4 +
jmp loc_46D694  +
push [esp+4+arg_14]  +
push [esp+8+arg_4]  +
call sub_474810  +
add esp 8 +
mov ecx eax +
cmp [esp+4+arg_8] 0 +
jz loc_46D6A6  +
xor eax eax +
test ecx ecx +
pop esi  +
setz al  +
retn   +
mov eax ecx +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [esp+10h+arg_4] +
mov esi [eax+38h] +
mov [esp+10h+var_4] esi +
test edi edi +
jz loc_46D93A  +
mov edx [edi+28h] +
test edx edx +
jz loc_46D93A  +
mov ebx [edi+34h] +
test ebx ebx +
jz loc_46D93A  +
mov ecx [esp+10h+arg_8] +
test ecx ecx +
jnz loc_46D84E  +
mov ecx [edi+30h] +
xor eax eax +
inc ecx  +
imul ecx esi +
pop edi  +
pop esi  +
pop ebx  +
cmp dword ptr [edx+ecx*4] 2 +
setz al  +
pop ecx  +
retn   +
mov eax [edi+30h] +
push ebp  +
xor ebp ebp +
test eax eax +
jle loc_46D92F  +
inc eax  +
imul eax esi +
inc eax  +
lea eax [edx+eax*4] +
mov [esp+14h+arg_4] eax +
mov esi [eax] +
test esi esi +
jle loc_46D88B  +
cmp esi [edi+24h] +
jg loc_46D88B  +
push ecx  +
push dword ptr [ebx]  +
dec esi  +
call sub_46F260  +
add esp 8 +
test eax eax +
jnz loc_46D8D6  +
mov eax [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
inc ebp  +
add eax 4 +
add ebx 4 +
mov [esp+14h+arg_4] eax +
cmp ebp [edi+30h] +
jl loc_46D868  +
mov ebx [esp+14h+arg_0] +
mov ebp [esp+14h+arg_8] +
mov esi [esp+14h+var_4] +
mov eax [ebx+50h] +
test eax eax +
jz loc_46D8B8  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebp  +
call sub_44E600  +
add esp 4 +
mov [ebx+48h] esi +
mov [ebx+50h] eax +
or eax 0FFFFFFFFh +
mov dword ptr [ebx] 0FFFFFFFFh +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
retn   +
mov ebx [esp+14h+arg_0] +
mov edx [ebx+0Ch] +
mov [ebx+38h] esi +
test edx edx +
jz loc_46D90B  +
mov ecx [edi+2Ch] +
test ecx ecx +
jz loc_46D90B  +
mov eax [edi+30h] +
imul eax [esp+14h+var_4] +
push [esp+14h+arg_C]  +
add eax ebp +
mov ebp [esp+18h+arg_8] +
push dword ptr [ecx+eax*4]  +
push ebp  +
push dword ptr [ebx+10h]  +
call edx  +
add esp 10h +
jmp loc_46D90F  +
mov ebp [esp+14h+arg_8] +
mov ecx [edi+30h] +
mov eax [edi+28h] +
inc ecx  +
imul ecx esi +
mov ecx [eax+ecx*4] +
cmp ecx 4 +
jz loc_46D8A3  +
pop ebp  +
xor eax eax +
cmp ecx 2 +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
pop ecx  +
retn   +
mov ebx [esp+14h+arg_0] +
mov ebp ecx +
jmp loc_46D8A7  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_46D9AB  +
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46D975  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aCopyingAtom  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aCopyingAtom  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push ebx  +
push ebp  +
push edi  +
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov ebx [esp+18h+arg_4] +
add esp 0Ch +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+34h] +
test eax eax +
jle loc_46DA47  +
shl eax 2 +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esi+38h] eax +
test eax eax +
jnz loc_46DA13  +
push offset aCopyingAtom  +
push [esp+10h+arg_0]  +
call sub_46F320  +
add esp 8 +
push esi  +
call sub_46E760  +
add esp 4 +
xor eax eax +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
retn   +
xor edi edi +
cmp [ebx+34h] edi +
jle loc_46DA47  +
mov ebp [esp+0Ch+arg_0] +
nop   +
mov eax [ebx+38h] +
push dword ptr [eax+edi*4]  +
push ebp  +
call sub_46DA50  +
mov ecx [esi+38h] +
add esp 8 +
mov [ecx+edi*4] eax +
mov eax [esi+38h] +
cmp dword ptr [eax+edi*4] 0 +
jz loc_46DA03  +
inc edi  +
mov [esi+34h] edi +
cmp edi [ebx+34h] +
jl loc_46DA20  +
pop edi  +
pop ebp  +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jnz loc_46DA5D  +
xor eax eax +
pop esi  +
retn   +
push edi  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push [esp+14h+arg_0]  +
call sub_46EE00  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_46DAA9  +
mov eax [esi+10h] +
test eax eax +
jz loc_46DAAE  +
push eax  +
call sub_44E600  +
add esp 4 +
mov [edi+10h] eax +
test eax eax +
jnz loc_46DAAE  +
push offset aAllocatingRang  +
push [esp+8+arg_0]  +
call sub_46F320  +
push edi  +
call sub_46E9A0  +
add esp 0Ch +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
sub esp 38h +
push edi  +
push 38h  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
mov [esp+28h] edi +
test edi edi +
jnz loc_46DB25  +
mov eax [esp+40h] +
xor ecx ecx +
test eax eax +
jz loc_46DAEC  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aCompilingRegex  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aCompilingRegex  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop edi  +
add esp 38h +
retn   +
***
push ebx  +
push 38h  +
push 0  +
push edi  +
call sub_48CF40  +
mov ebx [esp+50h] +
add esp 0Ch +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+30h] +
mov [edi+4] eax +
mov eax [ebx+34h] +
mov [edi+8] eax +
mov eax [ebx+24h] +
mov [edi+0Ch] eax +
mov eax [ebx+28h] +
mov [edi+10h] eax +
mov eax [ebx+3Ch] +
mov [edi+14h] eax +
mov eax [ebx+40h] +
mov [edi+18h] eax +
mov eax [ebx+44h] +
mov [edi+1Ch] eax +
cmp dword ptr [edi+1Ch] 0FFFFFFFFh +
mov eax [ebx+4Ch] +
mov [edi+20h] eax +
jnz loc_46DB7A  +
push edi  +
call sub_46F370  +
add esp 4 +
cmp dword ptr [edi+1Ch] 0 +
push ebp  +
push esi  +
jz loc_46E058  +
cmp dword ptr [edi+14h] 0 +
jnz loc_46E058  +
cmp dword ptr [ebx+48h] 0 +
jnz loc_46E058  +
mov eax [edi+10h] +
test eax eax +
jz loc_46E058  +
mov eax [eax] +
test eax eax +
jz loc_46E058  +
cmp dword ptr [eax+4] 5 +
jnz loc_46E058  +
mov eax [edi+4] +
xor ebp ebp +
shl eax 2 +
push eax  +
mov dword ptr [esp+2Ch] 0 +
call off_4EE2E8  +
mov esi eax +
add esp 4 +
mov [esp+10h] esi +
test esi esi +
jnz loc_46DBFC  +
push offset aCompilingRegex  +
push ebx  +
call sub_46F320  +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 38h +
retn   +
***
xor ecx ecx +
cmp [edi+4] ecx +
jle loc_46DC27  +
xor ebp ebp +
mov eax [edi+8] +
cmp dword ptr [eax+ecx*4] 0 +
jz loc_46DC14  +
mov [esi+ecx*4] ebp +
inc ebp  +
jmp loc_46DC1B  +
mov dword ptr [esi+ecx*4] 0FFFFFFFFh +
inc ecx  +
cmp ecx [edi+4] +
jl loc_46DC05  +
mov [esp+28h] ebp +
xor ebp ebp +
mov eax [edi+0Ch] +
shl eax 2 +
push eax  +
call off_4EE2E8  +
mov ebx eax +
add esp 4 +
mov [esp+14h] ebx +
test ebx ebx +
jnz loc_46DC55  +
push offset aCompilingRegex  +
push dword ptr [esp+50h]  +
call sub_46F320  +
push esi  +
jmp loc_46DD79  +
mov eax [edi+0Ch] +
shl eax 2 +
push eax  +
call off_4EE2E8  +
add esp 4 +
mov [esp+18h] eax +
test eax eax +
jnz loc_46DC9D  +
push offset aCompilingRegex  +
push dword ptr [esp+50h]  +
call sub_46F320  +
push ebx  +
call off_4EE2F4  +
push esi  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
add esp 14h +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 38h +
retn   +
***
xor eax eax +
mov [esp+30h] eax +
cmp [edi+0Ch] eax +
jle loc_46DD40  +
lea ebx ds:0[eax*4] +
mov eax [edi+10h] +
mov [esp+24h] ebx +
mov ebx [ebx+eax] +
cmp dword ptr [ebx+4] 5 +
jnz loc_46DDC8  +
cmp dword ptr [ebx+8] 2 +
jnz loc_46DDC8  +
mov ebx [ebx+14h] +
xor esi esi +
test ebp ebp +
jle loc_46DCF9  +
nop   +
mov eax [esp+14h] +
push ebx  +
push dword ptr [eax+esi*4]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46DD1B  +
inc esi  +
cmp esi ebp +
jl loc_46DCE0  +
mov eax [esp+24h] +
mov esi [esp+18h] +
push ebx  +
mov [eax+esi] ebp +
call sub_44E600  +
mov ebx [esp+18h] +
add esp 4 +
mov [ebx+ebp*4] eax +
test eax eax +
jz loc_46DD93  +
inc ebp  +
jmp loc_46DD2E  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+ecx] esi +
cmp esi ebp +
jge loc_46DCFD  +
mov ebx [esp+14h] +
mov eax [esp+30h] +
inc eax  +
mov [esp+30h] eax +
cmp eax [edi+0Ch] +
jl loc_46DCB0  +
mov eax [esp+28h] +
lea esi [ebp+1] +
inc eax  +
imul esi eax +
shl esi 2 +
push esi  +
call off_4EE2E8  +
add esp 4 +
mov [esp+24h] eax +
test eax eax +
jnz loc_46DE23  +
push dword ptr [esp+10h]  +
call off_4EE2F4  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
push ebx  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 38h +
retn   +
***
xor esi esi +
test ebp ebp +
jle loc_46DDB1  +
push dword ptr [ebx+esi*4]  +
call off_4EE2F4  +
inc esi  +
add esp 4 +
cmp esi ebp +
jl loc_46DDA0  +
push dword ptr [esp+18h]  +
call off_4EE2F4  +
push ebx  +
call off_4EE2F4  +
push dword ptr [esp+18h]  +
jmp loc_46DD79  +
***
push dword ptr [esp+10h]  +
call off_4EE2F4  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 8 +
xor esi esi +
test ebp ebp +
jle loc_46DE05  +
mov edi [esp+14h] +
push dword ptr [edi+esi*4]  +
call off_4EE2F4  +
inc esi  +
add esp 4 +
cmp esi ebp +
jl loc_46DDF0  +
mov edi [esp+34h] +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
push edi  +
call off_4EE2F4  +
add esp 8 +
xor eax eax +
pop esi  +
pop ebp  +
pop ebx  +
pop edi  +
add esp 38h +
retn   +
***
push esi  +
push 0  +
push eax  +
call sub_48CF40  +
xor ecx ecx +
xor edx edx +
add esp 0Ch +
mov [esp+1Ch] edx +
mov [esp+30h] ecx +
cmp [edi+4] ecx +
jle loc_46DF95  +
mov eax [esp+10h] +
mov ecx [eax+ecx*4] +
cmp ecx 0FFFFFFFFh +
jz loc_46DF83  +
mov eax [edi+8] +
lea esi [ebp+1] +
mov ebx [esp+30h] +
mov edx [esp+24h] +
imul esi ecx +
mov dword ptr [esp+3Ch] 0 +
mov ebx [eax+ebx*4] +
mov [esp+44h] ebx +
mov [esp+20h] esi +
mov eax [ebx] +
mov [edx+esi*4] eax +
cmp dword ptr [ebx+18h] 0 +
mov edx [esp+1Ch] +
jle loc_46DF7F  +
imul ecx ebp +
xor eax eax +
mov [esp+2Ch] eax +
mov [esp+40h] ecx +
mov ebx [ebx+1Ch] +
add ebx eax +
cmp dword ptr [ebx+4] 0FFFFFFFFh +
jz loc_46DF4E  +
mov ecx [ebx] +
test ecx ecx +
jz loc_46DF4E  +
cmp dword ptr [ecx+3Ch] 0 +
mov edi [esp+18h] +
mov eax [ecx] +
mov eax [edi+eax*4] +
mov edi [esp+34h] +
mov [esp+38h] eax +
jz loc_46DF00  +
test edx edx +
jnz loc_46DF00  +
mov esi ebp +
imul esi [esp+28h] +
shl esi 2 +
push esi  +
call off_4EE2E8  +
add esp 4 +
mov [esp+1Ch] eax +
test eax eax +
jz loc_46DF6E  +
push esi  +
push 0  +
push eax  +
call sub_48CF40  +
mov esi [esp+2Ch] +
add esp 0Ch +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov edx [esp+24h] +
mov ecx [ecx+eax*4] +
mov eax [esp+38h] +
add eax esi +
lea esi [edx+eax*4] +
mov edx [esi+4] +
lea eax [ecx+1] +
test edx edx +
jz loc_46DF2F  +
cmp edx eax +
jnz loc_46E092  +
mov edx [esp+1Ch] +
jmp loc_46DF4A  +
mov edx [esp+1Ch] +
mov [esi+4] eax +
test edx edx +
jz loc_46DF4A  +
mov eax [ebx] +
mov ecx [esp+38h] +
add ecx [esp+40h] +
mov eax [eax+3Ch] +
mov [edx+ecx*4] eax +
mov esi [esp+20h] +
mov eax [esp+3Ch] +
mov ebx [esp+44h] +
inc eax  +
add dword ptr [esp+2Ch] 14h +
mov [esp+3Ch] eax +
cmp eax [ebx+18h] +
jge loc_46DF7F  +
mov eax [esp+2Ch] +
jmp loc_46DEA0  +
***
push offset aCompilingRegex  +
push dword ptr [esp+50h]  +
call sub_46F320  +
add esp 8 +
mov eax [esp+10h] +
mov ecx [esp+30h] +
inc ecx  +
mov [esp+30h] ecx +
cmp ecx [edi+4] +
jl loc_46DE50  +
cmp dword ptr [edi+8] 0 +
mov dword ptr [edi+1Ch] 1 +
jz loc_46DFD0  +
xor esi esi +
cmp [edi+4] esi +
jle loc_46DFC4  +
mov eax [edi+8] +
push dword ptr [eax+esi*4]  +
call sub_46EAF0  +
inc esi  +
add esp 4 +
cmp esi [edi+4] +
jl loc_46DFB0  +
push dword ptr [edi+8]  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [edi+10h] 0 +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+4] 0 +
jz loc_46E010  +
xor esi esi +
cmp [edi+0Ch] esi +
jle loc_46E004  +
mov eax [edi+10h] +
push dword ptr [eax+esi*4]  +
call sub_46E760  +
inc esi  +
add esp 4 +
cmp esi [edi+0Ch] +
jl loc_46DFF0  +
push dword ptr [edi+10h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esp+24h] +
push dword ptr [esp+10h]  +
mov [edi+28h] eax +
mov eax [esp+20h] +
mov [edi+2Ch] eax +
mov eax [esp+18h] +
mov [edi+34h] eax +
mov eax [esp+2Ch] +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi+0Ch] 0 +
mov [edi+30h] ebp +
mov [edi+24h] eax +
call off_4EE2F4  +
push dword ptr [esp+1Ch]  +
call off_4EE2F4  +
add esp 8 +
mov ebx [esp+4Ch] +
pop esi  +
pop ebp  +
mov dword ptr [ebx] 0 +
mov eax edi +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+34h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov dword ptr [ebx+40h] 0 +
pop ebx  +
pop edi  +
add esp 38h +
retn   +
***
mov eax [esp+1Ch] +
mov dword ptr [edi+1Ch] 0 +
test eax eax +
jz loc_46E0AB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push dword ptr [esp+24h]  +
call off_4EE2F4  +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
push dword ptr [esp+20h]  +
call off_4EE2F4  +
add esp 0Ch +
xor esi esi +
test ebp ebp +
jle loc_46E0EB  +
mov edi [esp+14h] +
push dword ptr [edi+esi*4]  +
call off_4EE2F4  +
inc esi  +
add esp 4 +
cmp esi ebp +
jl loc_46E0D6  +
mov edi [esp+34h] +
push dword ptr [esp+14h]  +
call off_4EE2F4  +
add esp 4 +
jmp loc_46E054  +
***
push [esp+8+arg_4]  +
push [esp+0Ch+arg_0]  +
call loc_46E120  +
add esp 10h +
retn   +
***
sub esp 1Ch +
push ebx  +
push esi  +
mov esi [esp+28h] +
xor edx edx +
mov [esp+1Ch] edx +
mov ebx 1 +
mov [esp+10h] ebx +
test esi esi +
jnz loc_46E145  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
add esp 1Ch +
retn   +
***
mov eax [esi+8] +
test eax eax +
jz loc_46E13C  +
mov ecx [esi] +
test ecx ecx +
jz loc_46E15A  +
pop esi  +
mov eax ecx +
pop ebx  +
add esp 1Ch +
retn   +
***
cmp [eax+28h] edx +
jz loc_46E177  +
push dword ptr [esp+30h]  +
push dword ptr [esp+30h]  +
push eax  +
push esi  +
call sub_46D800  +
add esp 10h +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
push edi  +
mov edi [esp+30h] +
mov [esp+2Ch] edi +
test edi edi +
jnz loc_46E1A5  +
mov eax [esi+14h] +
cmp dword ptr [eax] 2 +
jnz loc_46E195  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
add esp 1Ch +
retn   +
***
mov ecx [esp+34h] +
mov edx ebx +
mov [esp+20h] edx +
mov [esp+0Ch] ecx +
jmp loc_46E1D9  +
cmp [esi+34h] edx +
jle loc_46E1D1  +
push dword ptr [esp+34h]  +
push edi  +
push esi  +
call sub_46CCD0  +
mov ecx [esi+38h] +
add esp 0Ch +
mov eax [esi+44h] +
xor edx edx +
mov edi [eax+ecx*8] +
mov ecx [eax+ecx*8+4] +
mov [esp+2Ch] edi +
mov [esp+0Ch] ecx +
jmp loc_46E1D9  +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esi] +
test eax eax +
jnz loc_46E68A  +
push ebp  +
test edi edi +
jnz loc_46E206  +
cmp edx 1 +
jnz loc_46E67A  +
mov eax [esi+14h] +
cmp dword ptr [eax] 2 +
jz loc_46E67A  +
cmp [esi+2Ch] edi +
jz loc_46E6D4  +
mov ecx [esi+14h] +
mov eax [esi+18h] +
mov dword ptr [esi+1Ch] 0 +
cmp eax [ecx+18h] +
jge loc_46E6BB  +
mov ebp [esi+18h] +
mov ebx [esi+14h] +
lea ecx ds:0[ebp*4] +
mov eax [ebx+1Ch] +
add ecx ebp +
lea ecx [eax+ecx*4] +
mov eax [ecx+4] +
mov [esp+1Ch] ecx +
test eax eax +
js loc_46E633  +
mov edx [ecx] +
mov ecx [ecx+0Ch] +
mov [esp+14h] edx +
cmp ecx 123457h +
jnz loc_46E317  +
mov ebp [esp+30h] +
test ebp ebp +
jnz loc_46E270  +
cmp [esp+24h] ebp +
jnz loc_46E373  +
jmp loc_46E62F  +
xor edx edx +
mov [esp+20h] edx +
cmp [ebx+18h] edx +
jle loc_46E62F  +
xor ecx ecx +
mov [esp+28h] ecx +
mov eax [esi+14h] +
mov edi [eax+1Ch] +
add edi ecx +
mov ecx [edi+8] +
test ecx ecx +
js loc_46E2F6  +
cmp edi [esp+1Ch] +
jz loc_46E2F6  +
mov eax [esi+8] +
mov eax [eax+18h] +
lea ebx [eax+ecx*8] +
mov eax [esi+2Ch] +
mov ebp [eax+ecx*4] +
cmp ebp [ebx+4] +
jge loc_46E2CF  +
mov eax [edi] +
test eax eax +
jz loc_46E2CF  +
push dword ptr [eax+14h]  +
push dword ptr [esp+34h]  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46E62F  +
mov edx [esp+20h] +
cmp ebp [ebx] +
jl loc_46E2F6  +
cmp ebp [ebx+4] +
jge loc_46E2F6  +
mov eax [edi] +
test eax eax +
jz loc_46E2F6  +
push dword ptr [eax+14h]  +
mov ebp [esp+34h] +
push ebp  +
call sub_44E370  +
add esp 8 +
test eax eax +
jnz loc_46E36F  +
mov edx [esp+20h] +
mov eax [esi+14h] +
inc edx  +
mov ecx [esp+28h] +
add ecx 14h +
mov [esp+20h] edx +
mov [esp+28h] ecx +
cmp edx [eax+18h] +
jl loc_46E285  +
jmp loc_46E62F  +
cmp ecx 123456h +
jnz loc_46E47F  +
mov ebp [ebx+18h] +
xor edi edi +
test ebp ebp +
jle loc_46E647  +
mov eax [esi+14h] +
mov ecx [eax+1Ch] +
mov edx [ecx+8] +
test edx edx +
js loc_46E363  +
cmp ecx [esp+1Ch] +
jz loc_46E363  +
mov eax [esi+8] +
mov eax [eax+18h] +
lea ebx [eax+edx*8] +
mov eax [esi+2Ch] +
mov eax [eax+edx*4] +
cmp eax [ebx] +
jl loc_46E62F  +
cmp eax [ebx+4] +
jg loc_46E62F  +
inc edi  +
add ecx 14h +
cmp edi ebp +
jl loc_46E336  +
mov ebp [esp+30h] +
mov edx [esp+14h] +
mov eax [esi+0Ch] +
mov ebx [esp+10h] +
test eax eax +
jz loc_46E395  +
test edx edx +
jz loc_46E395  +
test ebx ebx +
jz loc_46E395  +
push ebx  +
push dword ptr [edx+3Ch]  +
push dword ptr [edx+14h]  +
push dword ptr [esi+10h]  +
call eax  +
add esp 10h +
mov eax [esi+14h] +
mov ecx [esi+18h] +
inc ecx  +
cmp [eax+18h] ecx +
jle loc_46E3BB  +
cmp dword ptr [esi+34h] 0 +
jg loc_46E3B2  +
push ebx  +
push ebp  +
push esi  +
call sub_46CCD0  +
add esp 0Ch +
push esi  +
call sub_46CB20  +
add esp 4 +
mov ebx [esp+1Ch] +
mov ecx [ebx+8] +
test ecx ecx +
js loc_46E3CC  +
mov eax [esi+2Ch] +
inc dword ptr [eax+ecx*4]  +
mov ecx [ebx+0Ch] +
test ecx ecx +
js loc_46E3E5  +
cmp ecx 123456h +
jge loc_46E3E5  +
mov eax [esi+2Ch] +
mov dword ptr [eax+ecx*4] 0 +
mov eax [esi+8] +
mov ecx [ebx+4] +
mov eax [eax+8] +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_46E432  +
cmp dword ptr [eax] 4 +
jnz loc_46E432  +
mov eax [esi+50h] +
test eax eax +
jz loc_46E40B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebp  +
call sub_44E600  +
mov [esi+50h] eax +
mov eax [esi+14h] +
mov [esi+4Ch] eax +
mov eax [esi+8] +
mov eax [eax+14h] +
shl eax 2 +
push eax  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+54h]  +
call loc_48C9C0  +
add esp 10h +
mov eax [esi+8] +
mov ecx [ebx+4] +
mov eax [eax+8] +
mov eax [eax+ecx*4] +
mov [esi+14h] eax +
mov dword ptr [esi+18h] 0 +
cmp dword ptr [ebx] 0 +
jz loc_46E660  +
mov eax [esi+44h] +
test eax eax +
jz loc_46E650  +
inc dword ptr [esi+38h]  +
mov ecx [esi+38h] +
cmp ecx [esi+34h] +
jge loc_46E650  +
mov edx [eax+ecx*8] +
mov eax [eax+ecx*8+4] +
mov [esp+30h] edx +
mov [esp+10h] eax +
jmp loc_46E660  +
test ecx ecx +
js loc_46E4A7  +
mov eax [esi+2Ch] +
mov edx [eax+ecx*4] +
mov eax [esi+8] +
mov eax [eax+18h] +
cmp edx [eax+ecx*8] +
jl loc_46E633  +
cmp edx [eax+ecx*8+4] +
jle loc_46E36B  +
jmp loc_46E633  +
test edx edx +
jz loc_46E699  +
test edi edi +
jz loc_46E633  +
push edi  +
push dword ptr [edx+14h]  +
call sub_46F260  +
mov edi eax +
add esp 8 +
mov eax [esp+14h] +
cmp dword ptr [eax+1Ch] 0 +
jz loc_46E4E3  +
xor ecx ecx +
test edi edi +
setz cl  +
cmp dword ptr [esp+3Ch] 0 +
mov edi ecx +
jz loc_46E62F  +
cmp edi 1 +
jnz loc_46E62B  +
mov eax [esp+1Ch] +
mov edx [eax+8] +
test edx edx +
js loc_46E50D  +
mov eax [esi+8] +
mov ecx [eax+18h] +
mov eax [esi+2Ch] +
mov eax [eax+edx*4] +
cmp eax [ecx+edx*8+4] +
jge loc_46E62F  +
mov edx [esp+14h] +
cmp dword ptr [edx+0Ch] 0 +
jle loc_46E647  +
cmp dword ptr [edx+10h] 0 +
jle loc_46E647  +
mov ebx [esp+1Ch] +
mov eax [esi+8] +
mov ecx [ebx+4] +
mov eax [eax+8] +
mov ebx [esi+14h] +
mov eax [eax+ecx*4] +
mov [esp+28h] eax +
lea eax [ebp+1] +
cmp [ebx+18h] eax +
jle loc_46E568  +
cmp dword ptr [esi+34h] 0 +
jg loc_46E55B  +
push dword ptr [esp+10h]  +
push dword ptr [esp+34h]  +
push esi  +
call sub_46CCD0  +
add esp 0Ch +
push esi  +
call sub_46CB20  +
mov edx [esp+18h] +
add esp 4 +
mov ebp [esp+30h] +
mov dword ptr [esi+1Ch] 1 +
mov ecx [esi+1Ch] +
cmp ecx [edx+10h] +
jz loc_46E608  +
inc dword ptr [esi+38h]  +
mov edx [esi+38h] +
mov eax [esi+44h] +
mov ebp [eax+edx*8] +
mov eax [eax+edx*8+4] +
mov [esp+30h] ebp +
mov [esp+10h] eax +
test ebp ebp +
jz loc_46E5FE  +
mov eax [esp+14h] +
cmp ecx [eax+0Ch] +
jl loc_46E5DF  +
cmp dword ptr [esi+34h] 0 +
mov edi [esi+18h] +
mov ebx [esi+14h] +
mov eax [esp+28h] +
mov dword ptr [esi+18h] 0FFFFFFFFh +
mov [esi+14h] eax +
jg loc_46E5CC  +
push dword ptr [esp+10h]  +
push ebp  +
push esi  +
call sub_46CCD0  +
add esp 0Ch +
push esi  +
call sub_46CB20  +
mov eax [esp+18h] +
add esp 4 +
mov [esi+18h] edi +
mov [esi+14h] ebx +
push dword ptr [eax+14h]  +
push ebp  +
call sub_44E370  +
inc dword ptr [esi+1Ch]  +
mov edi eax +
mov edx [esp+1Ch] +
add esp 8 +
cmp edi 1 +
jnz loc_46E608  +
jmp loc_46E573  +
***
lea eax [edx-1] +
mov edx [esp+14h] +
mov [esi+38h] eax +
mov eax [esi+1Ch] +
cmp eax [edx+0Ch] +
jl loc_46E6CC  +
test edi edi +
js loc_46E6CC  +
jz loc_46E6CC  +
cmp edi 1 +
jz loc_46E373  +
test edi edi +
js loc_46E691  +
mov edi [esp+30h] +
inc dword ptr [esi+18h]  +
mov eax [esi+14h] +
mov ecx [esi+18h] +
cmp ecx [eax+18h] +
jl loc_46E220  +
jmp loc_46E6B7  +
mov ebp [esp+30h] +
jmp loc_46E373  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+30h] 0 +
mov ebx 1 +
mov [esp+18h] ebx +
mov edi [esp+30h] +
cmp dword ptr [esi] 0 +
mov edx [esp+24h] +
jz loc_46E1E4  +
mov eax [esi] +
pop ebp  +
test eax eax +
jnz loc_46E68A  +
mov ecx [esi+14h] +
cmp dword ptr [ecx] 2 +
setz al  +
pop edi  +
pop esi  +
pop ebx  +
add esp 1Ch +
retn   +
***
mov dword ptr [esi] 0FFFFFFFCh +
jmp loc_46E6B7  +
push offset aEpsilonTransit  +
push 2  +
call sub_4975B1  +
add esp 4 +
push eax  +
call sub_43AB50  +
add esp 8 +
mov dword ptr [esi] 0FFFFFFFEh +
mov ebx [esp+18h] +
cmp dword ptr [esi+18h] 0 +
jnz loc_46E6D0  +
mov eax [esi+14h] +
cmp dword ptr [eax+18h] 0 +
jnz loc_46E669  +
jmp loc_46E6D0  +
mov ebx [esp+18h] +
mov edi [esp+30h] +
test ebx ebx +
jz loc_46E722  +
mov eax [esi+14h] +
test eax eax +
jz loc_46E722  +
cmp dword ptr [eax] 4 +
jz loc_46E722  +
mov eax [esi+50h] +
xor ebx ebx +
mov [esp+18h] ebx +
test eax eax +
jz loc_46E6FB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push edi  +
call sub_44E600  +
mov [esi+50h] eax +
mov eax [esi+14h] +
mov [esi+4Ch] eax +
mov eax [esi+8] +
mov eax [eax+14h] +
shl eax 2 +
push eax  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+54h]  +
call loc_48C9C0  +
add esp 10h +
push esi  +
mov dword ptr [esi+4] 0 +
call sub_46CAA0  +
mov ecx [esi+44h] +
add esp 4 +
test ecx ecx +
jz loc_46E66D  +
cmp dword ptr [esi] 0 +
jnz loc_46E670  +
mov eax [esi+38h] +
mov edi [ecx+eax*8] +
mov ecx [ecx+eax*8+4] +
mov [esp+30h] edi +
mov [esp+10h] ecx +
jmp loc_46E66D  +
***
test esi esi +
jz loc_46E806  +
push edi  +
xor edi edi +
cmp [esi+34h] edi +
jle loc_46E7A2  +
push ebx  +
mov eax [esi+38h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_46E79B  +
mov eax [ebx+10h] +
test eax eax +
jz loc_46E791  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
cmp edi [esi+34h] +
jl loc_46E776  +
pop ebx  +
mov eax [esi+38h] +
pop edi  +
test eax eax +
jz loc_46E7B4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+4] 5 +
jnz loc_46E7E2  +
mov eax [esi+14h] +
test eax eax +
jz loc_46E7CB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+4] 5 +
jnz loc_46E7E2  +
mov eax [esi+18h] +
test eax eax +
jz loc_46E7E2  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+4] 88h +
jnz loc_46E7FC  +
mov eax [esi+14h] +
test eax eax +
jz loc_46E7FC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_46E8C2  +
cmp dword ptr [esi+28h] 0 +
push edi  +
jz loc_46E85F  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_46E853  +
xor edi edi +
cmp [esi+20h] edi +
jle loc_46E853  +
push ebx  +
xor ebx ebx +
mov eax [esi+28h] +
mov eax [eax+ebx+0Ch] +
test eax eax +
jz loc_46E849  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
add ebx 10h +
cmp edi [esi+20h] +
jl loc_46E834  +
pop ebx  +
push dword ptr [esi+28h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+2Ch] +
test eax eax +
jz loc_46E870  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+44h] 0 +
jz loc_46E8A6  +
xor edi edi +
cmp [esi+34h] edi +
jle loc_46E89A  +
mov eax [esi+44h] +
mov eax [eax+edi*8] +
test eax eax +
jz loc_46E894  +
push eax  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
cmp edi [esi+34h] +
jl loc_46E880  +
push dword ptr [esi+44h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+50h] +
pop edi  +
test eax eax +
jz loc_46E8B8  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_46E99C  +
mov eax [esi] +
test eax eax +
jz loc_46E8ED  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+34h] 0 +
push edi  +
jz loc_46E949  +
xor edi edi +
cmp [esi+30h] edi +
jle loc_46E93D  +
push ebx  +
mov eax [esi+34h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_46E936  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_46E91B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [ebx+28h] +
test eax eax +
jz loc_46E92C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
cmp edi [esi+30h] +
jl loc_46E900  +
pop ebx  +
push dword ptr [esi+34h]  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+28h] 0 +
jz loc_46E980  +
xor edi edi +
cmp [esi+24h] edi +
jle loc_46E974  +
mov eax [esi+28h] +
push dword ptr [eax+edi*4]  +
call sub_46E760  +
inc edi  +
add esp 4 +
cmp edi [esi+24h] +
jl loc_46E960  +
push dword ptr [esi+28h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+40h] +
pop edi  +
test eax eax +
jz loc_46E992  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
test esi esi +
jz loc_46E9C4  +
mov eax [esi+10h] +
test eax eax +
jz loc_46E9BA  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jz loc_46EAEC  +
mov eax [esi] +
test eax eax +
jz loc_46E9ED  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+8] 0 +
push edi  +
jz loc_46EA49  +
xor edi edi +
cmp [esi+4] edi +
jle loc_46EA3D  +
push ebx  +
mov eax [esi+8] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_46EA36  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_46EA1B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [ebx+28h] +
test eax eax +
jz loc_46EA2C  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push ebx  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
cmp edi [esi+4] +
jl loc_46EA00  +
pop ebx  +
push dword ptr [esi+8]  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+10h] 0 +
jz loc_46EA80  +
xor edi edi +
cmp [esi+0Ch] edi +
jle loc_46EA74  +
mov eax [esi+10h] +
push dword ptr [eax+edi*4]  +
call sub_46E760  +
inc edi  +
add esp 4 +
cmp edi [esi+0Ch] +
jl loc_46EA60  +
push dword ptr [esi+10h]  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_46EA91  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_46EAA2  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+2Ch] +
test eax eax +
jz loc_46EAB3  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp dword ptr [esi+34h] 0 +
jz loc_46EAE1  +
xor edi edi +
cmp [esi+30h] edi +
jle loc_46EAD5  +
mov eax [esi+34h] +
push dword ptr [eax+edi*4]  +
call off_4EE2F4  +
inc edi  +
add esp 4 +
cmp edi [esi+30h] +
jl loc_46EAC0  +
push dword ptr [esi+34h]  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_46EB25  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_46EB0A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_46EB1B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi+38h] +
test eax eax +
jnz loc_46EB91  +
push 20h  +
mov dword ptr [esi+38h] 4 +
call off_4EE2E8  +
add esp 4 +
mov [esi+40h] eax +
test eax eax +
jnz loc_46EBD0  +
push offset aAllocatingCoun  +
push offset aMemoryAllocati  +
push eax  +
push eax  +
push eax  +
push dword ptr [esi]  +
mov dword ptr [esi+8] 2 +
push offset aAllocatingCoun  +
push eax  +
push eax  +
push 3  +
push 2  +
push 0Eh  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+38h] 0 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
cmp [esi+3Ch] eax +
jl loc_46EBD0  +
add eax eax +
mov [esi+38h] eax +
shl eax 3 +
push eax  +
push dword ptr [esi+40h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46EBCD  +
push offset aAllocatingCoun  +
push esi  +
call sub_46F320  +
mov eax [esi+38h] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+38h] eax +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
mov [esi+40h] eax +
mov ecx [esi+3Ch] +
mov eax [esi+40h] +
mov dword ptr [eax+ecx*8] 0FFFFFFFFh +
mov ecx [esi+3Ch] +
mov eax [esi+40h] +
mov dword ptr [eax+ecx*8+4] 0FFFFFFFFh +
mov eax [esi+3Ch] +
lea ecx [eax+1] +
mov [esi+3Ch] ecx +
pop esi  +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_46EC5B  +
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46EC25  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aAllocatingAtom  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aAllocatingAtom  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push 40h  +
push 0  +
push esi  +
call sub_48CF40  +
mov eax [esp+0Ch+arg_4] +
add esp 0Ch +
mov [esi+4] eax +
mov eax esi +
mov dword ptr [esi+8] 2 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
pop esi  +
retn   +
***
test edi edi +
mov ecx eax +
add esp 4 +
test ecx ecx +
jnz loc_46EE57  +
mov eax [esp+arg_0] +
test eax eax +
jz loc_46EE22  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aAllocatingRang  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aAllocatingRang  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
retn   +
mov eax [esp+arg_4] +
mov [ecx] eax +
mov eax [esp+arg_8] +
mov [ecx+4] eax +
mov eax [esp+arg_C] +
mov [ecx+8] eax +
mov eax [esp+arg_10] +
mov [ecx+0Ch] eax +
mov eax ecx +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_46EEDB  +
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46EEA5  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aAllocatingStat  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aAllocatingStat  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
xor eax eax +
pop esi  +
retn   +
push 2Ch  +
push 0  +
push esi  +
call sub_48CF40  +
add esp 0Ch +
mov dword ptr [esi] 3 +
mov dword ptr [esi+4] 0 +
mov eax esi +
pop esi  +
retn   +
***
test esi esi +
jnz loc_46EF48  +
mov eax [esp+arg_0] +
push offset aAddStateStateI  +
push offset aFailedToCompil  +
push esi  +
mov edx [eax] +
mov ecx [eax+4] +
sub ecx edx +
mov dword ptr [eax+8] 5AAh +
push ecx  +
push esi  +
push edx  +
push offset aAddStateStateI  +
push esi  +
push esi  +
push 3  +
push 5AAh  +
push 0Eh  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_43A650  +
add esp 44h +
pop esi  +
retn   +
push edi  +
mov edi [esp+4+arg_C] +
test edi edi +
jnz loc_46EF6D  +
mov eax [esp+4+arg_0] +
push offset aAddStateTarget  +
push eax  +
mov dword ptr [eax+8] 5AAh +
call sub_46F2D0  +
add esp 8 +
pop edi  +
pop esi  +
retn   +
mov ecx [esi+18h] +
push ebx  +
mov ebx [esp+8+arg_14] +
push ebp  +
mov ebp [esp+0Ch+arg_10] +
lea edx [ecx-1] +
test edx edx +
js loc_46EFB9  +
mov ecx [esi+1Ch] +
lea eax [edx+edx*4] +
lea eax [ecx+eax*4] +
mov ecx [esp+0Ch+arg_8] +
nop   +
cmp [eax] ecx +
jnz loc_46EFAE  +
mov ecx [eax+4] +
cmp ecx [edi+10h] +
jnz loc_46EFAA  +
cmp [eax+8] ebp +
jnz loc_46EFAA  +
cmp [eax+0Ch] ebx +
jz loc_46F0D3  +
mov ecx [esp+0Ch+arg_8] +
sub eax 14h +
sub edx 1 +
jns loc_46EF90  +
mov ecx [esi+18h] +
mov eax [esi+14h] +
test eax eax +
jnz loc_46F031  +
push 0A0h  +
mov dword ptr [esi+14h] 8 +
call off_4EE2E8  +
add esp 4 +
mov [esi+1Ch] eax +
test eax eax +
jnz loc_46F075  +
mov eax [esp+0Ch+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46EFF3  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aAddingTransiti  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aAddingTransiti  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+14h] 0 +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
cmp ecx eax +
jl loc_46F075  +
add eax eax +
mov [esi+14h] eax +
lea eax [eax+eax*4] +
shl eax 2 +
push eax  +
push dword ptr [esi+1Ch]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46F072  +
push offset aAddingTransiti  +
push [esp+10h+arg_0]  +
call sub_46F320  +
mov eax [esi+14h] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
pop ebp  +
pop ebx  +
pop edi  +
mov [esi+14h] eax +
pop esi  +
retn   +
mov [esi+1Ch] eax +
mov eax [esi+18h] +
mov edx [esp+0Ch+arg_8] +
lea ecx [eax+eax*4] +
mov eax [esi+1Ch] +
mov [eax+ecx*4] edx +
mov eax [esi+18h] +
mov ecx [esi+1Ch] +
lea edx [eax+eax*4] +
mov eax [edi+10h] +
mov [ecx+edx*4+4] eax +
mov eax [esi+18h] +
lea ecx [eax+eax*4] +
mov eax [esi+1Ch] +
mov [eax+ecx*4+8] ebp +
mov eax [esi+18h] +
lea ecx [eax+eax*4] +
mov eax [esi+1Ch] +
mov [eax+ecx*4+0Ch] ebx +
mov eax [esi+18h] +
lea ecx [eax+eax*4] +
mov eax [esi+1Ch] +
mov dword ptr [eax+ecx*4+10h] 0 +
push dword ptr [esi+10h]  +
inc dword ptr [esi+18h]  +
push edi  +
push [esp+14h+arg_0]  +
call sub_46F0E0  +
add esp 0Ch +
pop ebp  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi+20h] +
test eax eax +
jnz loc_46F157  +
push 20h  +
mov dword ptr [esi+20h] 8 +
call off_4EE2E8  +
add esp 4 +
mov [esi+28h] eax +
test eax eax +
jnz loc_46F196  +
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46F11C  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
push offset aAddingTransiti  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push offset aAddingTransiti  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
mov dword ptr [esi+20h] 0 +
pop esi  +
retn   +
cmp [esi+24h] eax +
jl loc_46F196  +
add eax eax +
mov [esi+20h] eax +
shl eax 2 +
push eax  +
push dword ptr [esi+28h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46F193  +
push offset aAddingTransiti  +
push [esp+4+arg_0]  +
call sub_46F320  +
mov eax [esi+20h] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+20h] eax +
pop esi  +
retn   +
mov [esi+28h] eax +
mov edx [esi+24h] +
mov ecx [esi+28h] +
mov eax [esp+arg_8] +
mov [ecx+edx*4] eax +
inc dword ptr [esi+24h]  +
pop esi  +
retn   +
***
test edi edi +
jnz loc_46F1BE  +
or eax 0FFFFFFFFh +
pop edi  +
retn   +
push esi  +
mov esi [esp+4+arg_0] +
mov eax [esi+2Ch] +
test eax eax +
jnz loc_46F1FE  +
push 10h  +
mov dword ptr [esi+2Ch] 4 +
call off_4EE2E8  +
add esp 4 +
mov [esi+34h] eax +
test eax eax +
jnz loc_46F23E  +
push offset aAddingState  +
push esi  +
call sub_46F320  +
add esp 8 +
mov dword ptr [esi+2Ch] 0 +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
cmp [esi+30h] eax +
jl loc_46F23E  +
add eax eax +
mov [esi+2Ch] eax +
shl eax 2 +
push eax  +
push dword ptr [esi+34h]  +
call off_4EE2F0  +
add esp 8 +
test eax eax +
jnz loc_46F23B  +
push offset aAddingState  +
push esi  +
call sub_46F320  +
mov eax [esi+2Ch] +
add esp 8 +
cdq   +
sub eax edx +
sar eax 1 +
mov [esi+2Ch] eax +
or eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
mov [esi+34h] eax +
mov eax [esi+30h] +
mov [edi+10h] eax +
mov ecx [esi+30h] +
mov eax [esi+34h] +
mov [eax+ecx*4] edi +
xor eax eax +
inc dword ptr [esi+30h]  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
cmp edx eax +
jnz loc_46F272  +
mov eax 1 +
retn   +
test edx edx +
jnz loc_46F279  +
xor eax eax +
retn   +
test eax eax +
jz loc_46F276  +
push ebx  +
nop   +
mov cl [eax] +
cmp [edx] cl +
jz loc_46F2B9  +
cmp cl 2Ah +
jnz loc_46F291  +
mov ecx eax +
mov eax edx +
mov edx ecx +
mov cl [eax] +
test cl cl +
jz loc_46F2C9  +
mov bl [edx] +
test bl bl +
jz loc_46F2C9  +
inc edx  +
cmp bl 2Ah +
jnz loc_46F2C9  +
cmp cl 7Ch +
jz loc_46F2BB  +
mov cl [eax+1] +
inc eax  +
test cl cl +
jnz loc_46F2A3  +
xor eax eax +
cmp [edx] al +
pop ebx  +
setz al  +
retn   +
inc edx  +
inc eax  +
cmp byte ptr [eax] 0 +
jnz loc_46F280  +
xor eax eax +
cmp [edx] al +
pop ebx  +
setz al  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
xor edx edx +
xor ecx ecx +
test eax eax +
jz loc_46F2EA  +
mov ecx [eax+4] +
mov edx [eax] +
sub ecx edx +
mov dword ptr [eax+8] 5AAh +
mov eax [esp+arg_4] +
push eax  +
push offset aFailedToCompil  +
push 0  +
push ecx  +
push 0  +
push edx  +
push eax  +
push 0  +
push 0  +
push 3  +
push 5AAh  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
mov eax [esp+arg_0] +
xor ecx ecx +
test eax eax +
jz loc_46F333  +
mov ecx [eax] +
mov dword ptr [eax+8] 2 +
mov eax [esp+arg_4] +
push eax  +
push offset aMemoryAllocati  +
push 0  +
push 0  +
push 0  +
push ecx  +
push eax  +
push 0  +
push 0  +
push 3  +
push 2  +
push 0Eh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_43A650  +
add esp 44h +
retn   +
***
test ebp ebp +
jnz loc_46F37E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jnz loc_46F435  +
push ebx  +
push esi  +
call sub_46CDF0  +
mov ebx eax +
cmp dword ptr [ebx+34h] 0 +
jz loc_46F3EA  +
push edi  +
xor edi edi +
cmp [ebx+30h] edi +
jle loc_46F3DD  +
mov eax [ebx+34h] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_46F3D7  +
mov eax [esi+1Ch] +
test eax eax +
jz loc_46F3BC  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+28h] +
test eax eax +
jz loc_46F3CD  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
inc edi  +
cmp edi [ebx+30h] +
jl loc_46F3A1  +
push dword ptr [ebx+34h]  +
call off_4EE2F4  +
add esp 4 +
pop edi  +
mov eax [ebp+0Ch] +
mov [ebx+24h] eax +
mov eax [ebp+10h] +
mov [ebx+28h] eax +
mov eax [ebp+4] +
mov [ebx+30h] eax +
mov eax [ebp+8] +
mov [ebx+34h] eax +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov eax [ebp+20h] +
push ebx  +
mov [ebx+4Ch] eax +
call loc_46BD70  +
push ebx  +
mov esi eax +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+34h] 0 +
call loc_46E8D0  +
add esp 8 +
mov [ebp+1Ch] esi +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov ecx [esp+4] +
mov edx [esp+8] +
cmp ecx edx +
jnb loc_46F450  +
or eax 0FFFFFFFFh +
retn   +
***
xor eax eax +
cmp ecx edx +
setnz al  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_46F469  +
retn   +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_46F47E  +
mov eax 1 +
retn   +
push esi  +
push edi  +
mov edi [esp+8+arg_4] +
push edi  +
push eax  +
call loc_46F610  +
push 0Ch  +
mov esi eax +
call off_4EE2E8  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jnz loc_46F4C0  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aCannotInitia_0  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
mov eax 1 +
pop edi  +
pop esi  +
retn   +
mov [ecx+8] edi +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi] +
pop edi  +
mov [eax+4] ecx +
xor eax eax +
mov [esi] ecx +
mov [ecx+4] esi +
pop esi  +
retn   +
***
test ebx ebx +
jz loc_46F521  +
mov eax [ebx] +
push esi  +
mov esi [eax] +
cmp esi eax +
jz loc_46F520  +
push edi  +
mov eax [esi+4] +
mov edi [esi] +
mov [eax] edi +
mov ecx [esi] +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [ebx+4] +
test eax eax +
jz loc_46F50F  +
push esi  +
call eax  +
add esp 4 +
push esi  +
call off_4EE2F4  +
add esp 4 +
mov esi edi +
cmp edi [ebx] +
jnz loc_46F4F3  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 0Ch  +
call off_4EE2E8  +
mov edi eax +
add esp 4 +
test edi edi +
jnz loc_46F562  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aCannotInitia_1  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
add esp 8 +
xor eax eax +
pop edi  +
pop esi  +
retn   +
xorps xmm0 xmm0 +
movq qword ptr [edi] xmm0 +
push 0Ch  +
mov dword ptr [edi+8] 0 +
call off_4EE2E8  +
add esp 4 +
mov [edi] eax +
test eax eax +
jnz loc_46F5A7  +
call sub_4583C0  +
mov esi eax +
call sub_4583E0  +
push offset aCannotInitia_2  +
push dword ptr [eax]  +
mov eax [esi] +
call eax  +
push edi  +
call off_4EE2F4  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
retn   +
mov [eax] eax +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov dword ptr [eax+8] 0 +
mov eax [esp+arg_0] +
test eax eax +
jz loc_46F5C2  +
mov [edi+4] eax +
mov eax [esp+arg_4] +
mov ecx offset loc_46F440 +
test eax eax +
cmovnz ecx eax +
mov eax edi +
mov [edi+8] ecx +
pop edi  +
pop esi  +
retn   +
***
test esi esi +
jz loc_46F601  +
push esi  +
call sub_46F4E0  +
push dword ptr [esi]  +
call off_4EE2F4  +
push esi  +
call off_4EE2F4  +
add esp 0Ch +
pop esi  +
retn   +
***
push edi  +
mov edi [esp+8] +
test edi edi +
jnz loc_46F61D  +
xor eax eax +
pop edi  +
retn   +
***
mov eax [edi] +
push esi  +
mov esi [eax+4] +
cmp esi eax +
jz loc_46F648  +
push ebx  +
mov ebx [esp+14h] +
mov eax [edi+8] +
push ebx  +
push dword ptr [esi+8]  +
call eax  +
add esp 8 +
test eax eax +
jle loc_46F647  +
mov esi [esi+4] +
cmp esi [edi] +
jnz loc_46F630  +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
retn   +
***
test edi edi +
jz loc_46F686  +
push ebx  +
mov ebx [esp+4+arg_4] +
test ebx ebx +
jz loc_46F685  +
mov eax [edi] +
push esi  +
mov esi [eax] +
cmp esi eax +
jz loc_46F684  +
push ebp  +
mov ebp [esp+0Ch+arg_8] +
push ebp  +
push dword ptr [esi+8]  +
call ebx  +
add esp 8 +
test eax eax +
jz loc_46F683  +
mov esi [esi] +
cmp esi [edi] +
jnz loc_46F670  +
pop ebp  +
pop esi  +
pop ebx  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+6Ch] 1 +
jz locret_46F761  +
mov dword ptr [eax] offset sub_464E40 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax+4] offset sub_464EC0 +
mov dword ptr [eax+8] offset sub_464D40 +
mov dword ptr [eax+0Ch] offset sub_464D20 +
mov dword ptr [eax+10h] offset sub_4650A0 +
mov dword ptr [eax+14h] offset sub_464B60 +
mov dword ptr [eax+60h] 0 +
mov dword ptr [eax+18h] offset sub_464760 +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] offset nullsub_1 +
mov dword ptr [eax+30h] offset sub_465100 +
mov dword ptr [eax+34h] offset sub_464580 +
mov dword ptr [eax+38h] offset loc_465210 +
mov dword ptr [eax+3Ch] offset sub_464630 +
mov dword ptr [eax+40h] offset sub_465050 +
mov dword ptr [eax+44h] offset sub_464180 +
mov dword ptr [eax+64h] 0 +
mov dword ptr [eax+48h] offset nullsub_1 +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] offset sub_4643D0 +
mov dword ptr [eax+54h] offset sub_43B2B0 +
mov dword ptr [eax+58h] offset sub_43AD10 +
mov dword ptr [eax+5Ch] offset sub_43AD10 +
mov dword ptr [eax+6Ch] 1 +
retn   +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+6Ch] 1 +
jz locret_46F841  +
mov dword ptr [eax] offset sub_464E40 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] offset sub_464B60 +
mov dword ptr [eax+60h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+24h] 0 +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] offset nullsub_1 +
mov dword ptr [eax+30h] offset sub_465100 +
mov dword ptr [eax+34h] offset sub_464580 +
mov dword ptr [eax+38h] offset loc_465210 +
mov dword ptr [eax+3Ch] offset sub_464630 +
mov dword ptr [eax+40h] 0 +
mov dword ptr [eax+44h] offset sub_464180 +
mov dword ptr [eax+64h] offset sub_464130 +
mov dword ptr [eax+48h] offset nullsub_1 +
mov dword ptr [eax+4Ch] offset sub_464FA0 +
mov dword ptr [eax+50h] offset sub_4643D0 +
mov dword ptr [eax+54h] offset sub_43B2B0 +
mov dword ptr [eax+58h] offset sub_43AD10 +
mov dword ptr [eax+5Ch] offset sub_43AD10 +
mov dword ptr [eax+6Ch] 1 +
retn   +
***
mov ecx [esp+arg_0] +
cmp dword ptr [ecx+6Ch] 1 +
jz locret_46F924  +
xor edx edx +
mov dword ptr [ecx] offset sub_464E40 +
cmp [esp+arg_4] edx +
mov eax offset sub_43B2B0 +
mov dword ptr [ecx+68h] offset sub_464920 +
cmovz eax edx +
mov dword ptr [ecx+4] offset sub_464EC0 +
mov dword ptr [ecx+8] offset sub_464D40 +
mov dword ptr [ecx+0Ch] offset sub_464D20 +
mov dword ptr [ecx+10h] offset sub_4650A0 +
mov dword ptr [ecx+14h] offset sub_464B60 +
mov dword ptr [ecx+60h] offset sub_464CE0 +
mov dword ptr [ecx+18h] offset sub_464760 +
mov dword ptr [ecx+20h] offset sub_463490 +
mov dword ptr [ecx+24h] offset sub_4644D0 +
mov dword ptr [ecx+1Ch] offset sub_464EE0 +
mov dword ptr [ecx+28h] offset sub_465AF0 +
mov dword ptr [ecx+2Ch] offset nullsub_1 +
mov dword ptr [ecx+30h] offset sub_465100 +
mov dword ptr [ecx+34h] offset sub_464580 +
mov dword ptr [ecx+38h] offset loc_465210 +
mov dword ptr [ecx+3Ch] offset sub_464630 +
mov dword ptr [ecx+40h] offset sub_465050 +
mov dword ptr [ecx+44h] offset sub_464180 +
mov dword ptr [ecx+64h] offset sub_464130 +
mov dword ptr [ecx+48h] offset sub_464180 +
mov dword ptr [ecx+4Ch] offset sub_464FA0 +
mov [ecx+54h] eax +
mov dword ptr [ecx+58h] offset sub_43AD10 +
mov dword ptr [ecx+5Ch] offset sub_43AD10 +
mov dword ptr [ecx+6Ch] 1 +
retn   +
***
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+18h] +
test edi edi +
jz loc_46F9AA  +
mov eax [edi+18h] +
mov ebp [edi+0Ch] +
push 20h  +
push 1  +
mov ebx [eax+4] +
call sub_49874B  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_46F9BC  +
push 10h  +
push 1  +
call sub_49874B  +
add esp 8 +
test eax eax +
jz loc_46F9B3  +
mov [eax+4] ebx +
mov ecx 2 +
mov [eax] cx +
mov cx [esp+14h] +
mov [eax+2] cx +
mov dword ptr [esi+4] 2 +
mov dword ptr [esi+8] 2 +
mov [esi+0Ch] ebp +
mov dword ptr [esi+10h] 10h +
mov [esi+18h] eax +
mov eax [edi+1Ch] +
mov [esi+1Ch] eax +
mov [edi+1Ch] esi +
mov edi [esi+1Ch] +
test edi edi +
jnz loc_46F940  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn 8  +
***
push esi  +
call sub_497EC6  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
mov eax 8 +
pop ebx  +
retn 8  +
***
push esi  +
mov esi [esp+8] +
push edi  +
mov edi esi +
test esi esi +
jz loc_46FA12  +
mov eax [esi+14h] +
test eax eax +
jz loc_46F9F0  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov eax [esi+18h] +
test eax eax +
jz loc_46FA00  +
push eax  +
call sub_497EC6  +
add esp 4 +
mov esi [esi+1Ch] +
push edi  +
call sub_497EC6  +
add esp 4 +
mov edi esi +
test esi esi +
jnz loc_46F9E0  +
pop edi  +
pop esi  +
retn 4  +
***
sub esp 1Ch +
mov edx [esp+1Ch+name] +
push ebx  +
push ebp  +
push esi  +
xor ebx ebx +
xor esi esi +
push edi  +
mov edi [esp+2Ch+arg_C] +
xor ebp ebp +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_C] ebx +
mov [esp+2Ch+var_1C] ebp +
mov [esp+2Ch+var_4] ebx +
mov [esp+2Ch+var_8] ebx +
mov [esp+2Ch+var_14] ebx +
mov [esp+2Ch+var_10] ebx +
mov [edi] ebx +
cmp [esp+2Ch+cp] ebx +
jnz loc_46FA6C  +
test edx edx +
jnz loc_46FA6C  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 2AF9h +
pop ebx  +
add esp 1Ch +
retn 10h  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_46FB05  +
cmp [eax+10h] ebx +
jnz loc_46FB5C  +
cmp [eax+14h] ebx +
jnz loc_46FB5C  +
cmp [eax+18h] ebx +
jnz loc_46FB5C  +
cmp [eax+1Ch] ebx +
jnz loc_46FB5C  +
mov ecx [eax] +
mov [esp+2Ch+var_18] ecx +
test cl 2 +
jz loc_46FABE  +
mov ecx [esp+2Ch+cp] +
test ecx ecx +
jnz loc_46FABE  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 2726h +
pop ebx  +
add esp 1Ch +
retn 10h  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_46FAD9  +
cmp ecx 2 +
jz loc_46FAD9  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 273Fh +
pop ebx  +
add esp 1Ch +
retn 10h  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_46FAFE  +
cmp ebx 1 +
jz loc_46FAFE  +
cmp ebx 2 +
jz loc_46FAFE  +
cmp ebx 3 +
jz loc_46FAFE  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 273Ch +
pop ebx  +
add esp 1Ch +
retn 10h  +
mov eax [eax+0Ch] +
mov [esp+2Ch+var_C] eax +
test edx edx +
jz loc_46FC03  +
push 0Ah  +
lea eax [esp+30h+var_8] +
push eax  +
push edx  +
call sub_4A1148  +
movzx ebp ax +
add esp 0Ch +
mov eax [esp+2Ch+var_8] +
mov [esp+2Ch+var_1C] ebp +
cmp byte ptr [eax] 0 +
jnz loc_46FB6B  +
push ebp  +
call ds:htons  +
movzx eax ax +
movzx ebp ax +
mov [esp+2Ch+var_10] eax +
mov [esp+2Ch+var_1C] ebp +
test ebx ebx +
jnz loc_46FC03  +
mov [esp+2Ch+var_14] 1 +
mov ebx 1 +
jmp loc_46FC03  +
pop edi  +
pop esi  +
pop ebp  +
mov eax 2AFBh +
pop ebx  +
add esp 1Ch +
retn 10h  +
mov eax ds:getservbyname +
test ebx ebx +
jz loc_46FB79  +
cmp ebx 2 +
jnz loc_46FB9C  +
push offset proto  +
push [esp+30h+name]  +
call eax  +
test eax eax +
jz loc_46FB97  +
movzx eax word ptr [eax+8] +
movzx ebp ax +
mov [esp+2Ch+var_10] eax +
mov [esp+2Ch+var_1C] ebp +
mov eax ds:getservbyname +
test ebx ebx +
jz loc_46FBA5  +
cmp ebx 1 +
jnz loc_46FBC0  +
push offset aTcp  +
push [esp+30h+name]  +
call eax  +
test eax eax +
jz loc_46FBC0  +
movzx eax word ptr [eax+8] +
mov ebp eax +
mov [esp+2Ch+var_1C] ebp +
jmp loc_46FBC2  +
xor eax eax +
test bp bp +
jnz loc_46FBE0  +
pop edi  +
pop esi  +
test ebx ebx +
mov eax 2AF9h +
mov ecx 277Dh +
pop ebp  +
cmovnz eax ecx +
pop ebx  +
add esp 1Ch +
retn 10h  +
test ebx ebx +
jnz loc_46FC03  +
test ax ax +
setz bl  +
inc ebx  +
test ax ax +
jz loc_46FBFF  +
mov [esp+2Ch+var_14] 1 +
cmp word ptr [esp+2Ch+var_10] si +
jnz loc_46FC03  +
mov [esp+2Ch+var_14] esi +
mov eax [esp+2Ch+cp] +
test eax eax +
jz loc_46FC4F  +
lea ecx [esp+2Ch+var_4] +
push ecx  +
push eax  +
call sub_4702F0  +
test eax eax +
jnz loc_46FC49  +
mov eax [esp+2Ch+var_18] +
test al 4 +
jz loc_46FC2C  +
mov esi 2AF9h +
jmp loc_46FCC6  +
mov ecx [esp+2Ch+cp] +
and eax 2 +
push edi  +
push eax  +
push ebp  +
push [esp+38h+var_C]  +
push ebx  +
push ecx  +
call sub_4700D0  +
mov esi eax +
test esi esi +
jnz loc_46FCC6  +
jmp loc_46FCAE  +
mov ebp [esp+2Ch+var_4] +
jmp loc_46FC67  +
test byte ptr [esp+2Ch+var_18] 1 +
mov ecx esi +
mov eax 7F000001h +
cmovnz eax ecx +
push eax  +
call ds:htonl  +
mov ebp eax +
push ebp  +
push [esp+30h+var_1C]  +
push [esp+34h+var_C]  +
push ebx  +
call sub_470270  +
mov [edi] eax +
test eax eax +
jnz loc_46FC83  +
mov esi 8 +
jmp loc_46FCC6  +
mov ecx [esp+2Ch+cp] +
test ecx ecx +
jz loc_46FCAE  +
or dword ptr [eax] 4 +
test byte ptr [esp+2Ch+var_18] 2 +
jz loc_46FCAE  +
push ebp  +
call ds:inet_ntoa  +
push eax  +
call sub_470420  +
mov ecx [edi] +
mov [ecx+14h] eax +
mov eax [edi] +
cmp [eax+14h] esi +
jz loc_46FC7C  +
cmp [esp+2Ch+var_14] 0 +
jz loc_46FCD3  +
push dword ptr [edi]  +
push [esp+30h+var_10]  +
call loc_46F930  +
mov esi eax +
test esi esi +
jz loc_46FCD3  +
push dword ptr [edi]  +
call loc_46F9D0  +
mov dword ptr [edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
pop ebx  +
add esp 1Ch +
retn 10h  +
***
sub esp 18h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+18h+var_4] eax +
mov eax ds:dword_4CAE04 +
mov edx [esp+18h+arg_8] +
mov ecx [esp+18h+arg_10] +
push ebx  +
mov ebx [esp+1Ch+arg_18] +
push esi  +
mov esi [esp+20h+arg_0] +
mov [esp+20h+var_C] eax +
mov ax ds:word_4CAE08 +
mov [esp+20h+var_14] edx +
mov [esp+20h+var_10] ecx +
mov [esp+20h+var_8] ax +
test esi esi +
jz loc_46FF1D  +
cmp [esp+20h+arg_4] 10h +
jb loc_46FF1D  +
cmp word ptr [esi] 2 +
jz loc_46FD4D  +
pop esi  +
mov eax 273Fh +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
push ebp  +
mov ebp [esp+24h+arg_C] +
push edi  +
mov edi [esp+28h+arg_14] +
test edx edx +
jz loc_46FD5F  +
test ebp ebp +
jnz loc_46FD6F  +
test ecx ecx +
jz loc_46FE8C  +
test edi edi +
jz loc_46FE8C  +
mov eax ebx +
and eax 6 +
cmp al 6 +
jnz loc_46FD92  +
pop edi  +
pop ebp  +
pop esi  +
mov eax 2726h +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
test ecx ecx +
jz loc_46FE1C  +
test edi edi +
jz loc_46FE1C  +
movzx ebp word ptr [esi+2] +
test bl 8 +
jnz loc_46FDCD  +
test bl 10h +
mov ecx 0 +
mov eax offset proto +
cmovz eax ecx +
push eax  +
push ebp  +
call ds:getservbyport  +
test eax eax +
jz loc_46FDCD  +
mov eax [eax] +
test eax eax +
jz loc_46FDCD  +
mov edx eax +
jmp loc_46FDF0  +
push ebp  +
call ds:ntohs  +
movzx eax ax +
push eax  +
push offset unk_4CAE0C  +
lea eax [esp+30h+var_C] +
push 6  +
push eax  +
call sub_41E4E0  +
lea edx [esp+38h+var_C] +
add esp 10h +
mov ecx edx +
lea ebp [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_46FDF5  +
sub ecx ebp +
cmp edi ecx +
jbe loc_46FF03  +
push edx  +
push edi  +
push [esp+30h+var_10]  +
call sub_4A102D  +
mov ebp [esp+34h+arg_C] +
add esp 0Ch +
mov edx [esp+28h+var_14] +
test edx edx +
jz loc_46FEEC  +
test ebp ebp +
jz loc_46FEEC  +
mov eax [esi+4] +
mov dword ptr [esp+28h+in.S_un] eax +
test bl 2 +
jz loc_46FE3E  +
push eax  +
jmp loc_46FEC4  +
push 2  +
push 4  +
lea eax [esp+30h+in] +
push eax  +
call ds:gethostbyaddr  +
test eax eax +
jz loc_46FE70  +
mov esi [eax] +
test esi esi +
jz loc_46FE70  +
test bl 1 +
jz loc_46FECC  +
push 2Eh  +
push esi  +
call sub_48D0A0  +
add esp 8 +
test eax eax +
jz loc_46FECC  +
mov byte ptr [eax] 0 +
jmp loc_46FECC  +
test bl 4 +
jz loc_46FEC0  +
call ds:WSAGetLastError  +
sub eax 2AF9h +
jz loc_46FE8C  +
sub eax 1 +
jz loc_46FEA6  +
sub eax 1 +
jz loc_46FF03  +
pop edi  +
pop ebp  +
pop esi  +
mov eax 2AF9h +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
pop edi  +
pop ebp  +
pop esi  +
mov eax 2AFAh +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
push dword ptr [esp+28h+in.S_un]  +
call ds:inet_ntoa  +
mov esi eax +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_46FED1  +
sub ecx edx +
cmp ebp ecx +
jbe loc_46FF03  +
push esi  +
push ebp  +
push [esp+30h+var_14]  +
call sub_4A102D  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop esi  +
xor eax eax +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
pop edi  +
pop ebp  +
pop esi  +
mov eax 2AFBh +
pop ebx  +
mov ecx [esp+18h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
mov ecx [esp+20h+var_4] +
mov eax 2AFBh +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 18h +
retn 1Ch  +
***
sub esp 230h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+230h+var_4] eax +
cmp dword_4F31EC 0 +
mov [esp+230h+lpProcName] offset aGetaddrinfo +
mov [esp+230h+var_22C] offset sub_46FA20 +
mov [esp+230h+var_228] offset aGetnameinfo +
mov [esp+230h+var_224] offset sub_46FCE0 +
mov [esp+230h+var_220] offset aFreeaddrinfo +
mov [esp+230h+var_21C] offset loc_46F9D0 +
jnz loc_4700A7  +
push 104h  +
lea eax [esp+234h+Buffer] +
push eax  +
call ds:GetSystemDirectoryA  +
test eax eax +
jz loc_47009D  +
push ebx  +
push ebp  +
push esi  +
push edi  +
lea eax [esp+240h+Buffer] +
push eax  +
lea eax [esp+244h+LibFileName] +
push 10Ch  +
push eax  +
call sub_4A102D  +
push offset aWs2_32  +
lea eax [esp+250h+LibFileName] +
push 10Ch  +
push eax  +
call sub_4A1087  +
mov esi ds:LoadLibraryA +
lea eax [esp+258h+LibFileName] +
add esp 18h +
push eax  +
call esi  +
mov ebp ds:FreeLibrary +
mov edi eax +
mov ebx ds:GetProcAddress +
test edi edi +
jz loc_47001B  +
push offset aGetaddrinfo  +
push edi  +
call ebx  +
test eax eax +
jnz loc_470062  +
push edi  +
call ebp  +
lea eax [esp+240h+Buffer] +
push eax  +
lea eax [esp+244h+LibFileName] +
push 10Ch  +
push eax  +
call sub_4A102D  +
push offset aWship6  +
lea eax [esp+250h+LibFileName] +
push 10Ch  +
push eax  +
call sub_4A1087  +
add esp 18h +
lea eax [esp+240h+LibFileName] +
push eax  +
call esi  +
mov edi eax +
test edi edi +
jz loc_470099  +
push offset aGetaddrinfo  +
push edi  +
call ebx  +
test eax eax +
jz loc_470096  +
xor esi esi +
push [esp+esi*8+240h+lpProcName]  +
push edi  +
call ebx  +
mov [esp+esi*8+240h+var_22C] eax +
test eax eax +
jz loc_470096  +
inc esi  +
cmp esi 3 +
jl loc_470064  +
mov eax [esp+240h+var_22C] +
mov off_4EE808 eax +
mov eax [esp+240h+var_224] +
mov off_4EE810 eax +
mov eax [esp+240h+var_21C] +
mov off_4EE818 eax +
jmp loc_470099  +
push edi  +
call ebp  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
mov dword_4F31EC 1 +
movzx eax [esp+230h+arg_0] +
mov ecx [esp+230h+var_4] +
xor ecx esp +
mov eax off_4EE808[eax*8] +
call sub_488C1C  +
add esp 230h +
retn 4  +
***
sub esp 81Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+81Ch+var_4] eax +
push ebx  +
mov ebx [esp+820h+arg_14] +
lea eax [esp+820h+var_80C] +
push ebp  +
push esi  +
mov esi [esp+828h+arg_0] +
push edi  +
push 401h  +
xor edi edi +
mov [esp+830h+name] esi +
push edi  +
push eax  +
mov [esp+838h+var_818] ebx +
call sub_48CF40  +
push 401h  +
lea eax [esp+83Ch+var_408] +
push edi  +
push eax  +
call sub_48CF40  +
push 400h  +
push esi  +
lea eax [esp+84Ch+var_80C] +
push 401h  +
push eax  +
mov [esp+854h+var_81C] eax +
lea ebp [esp+854h+var_408] +
call sub_4985ED  +
add esp 28h +
mov eax ebp +
push ebx  +
push eax  +
push [esp+834h+arg_C]  +
push [esp+838h+arg_8]  +
push [esp+83Ch+arg_4]  +
push esi  +
call sub_470340  +
mov esi eax +
test esi esi +
jnz loc_470254  +
nop   +
cmp dword ptr [ebx] 0 +
jnz loc_4701F9  +
mov ecx ebp +
lea edx [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470180  +
sub ecx edx +
jz loc_4701F2  +
mov esi [esp+82Ch+var_81C] +
mov ecx ebp +
mov eax esi +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_4701B3  +
test dl dl +
jz loc_4701AF  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_4701B3  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_470193  +
xor eax eax +
jmp loc_4701B8  +
sbb eax eax +
or eax 1 +
test eax eax +
jz loc_4701F2  +
inc edi  +
cmp edi 10h +
jz loc_4701F2  +
push ebx  +
mov eax esi +
mov [esp+830h+var_81C] ebp +
push eax  +
push [esp+834h+arg_C]  +
mov ebp eax +
push [esp+838h+arg_8]  +
push [esp+83Ch+arg_4]  +
push [esp+840h+name]  +
call sub_470340  +
mov esi eax +
test esi esi +
jz loc_470170  +
jmp loc_470252  +
mov eax 2AFBh +
jmp loc_470254  +
test esi esi +
jnz loc_470252  +
cmp [esp+82Ch+arg_10] esi +
jz loc_470252  +
test ebp ebp +
jnz loc_47020E  +
xor edi edi +
jmp loc_47023F  +
mov ecx ebp +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470213  +
sub ecx edx +
lea ebx [ecx+1] +
push ebx  +
push 1  +
call sub_49874B  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_47023B  +
push ebp  +
push ebx  +
push edi  +
call sub_4A102D  +
add esp 0Ch +
mov ebx [esp+82Ch+var_818] +
mov ecx [ebx] +
mov eax 8 +
mov [ecx+14h] edi +
mov ecx [ebx] +
cmp dword ptr [ecx+14h] 0 +
cmovz esi eax +
mov eax esi +
mov ecx [esp+82Ch+var_4] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 81Ch +
retn 18h  +
***
push 1  +
call sub_49874B  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_47029E  +
push 10h  +
push 1  +
call sub_49874B  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jnz loc_4702A4  +
push esi  +
call sub_497EC6  +
add esp 4 +
xor eax eax +
pop esi  +
retn 10h  +
mov eax 2 +
mov [ecx] ax +
mov ax [esp+arg_8] +
mov [ecx+2] ax +
mov eax [esp+arg_C] +
mov [ecx+4] eax +
mov eax [esp+arg_0] +
mov [esi+8] eax +
mov eax [esp+arg_4] +
mov [esi+0Ch] eax +
mov eax esi +
mov dword ptr [esi+4] 2 +
mov dword ptr [esi+10h] 10h +
mov [esi+18h] ecx +
pop esi  +
retn 10h  +
***
xor edx edx +
mov ecx esi +
mov al [esi] +
test al al +
jz loc_47032F  +
nop   +
cmp al 2Eh +
jnz loc_470305  +
inc edx  +
mov al [ecx+1] +
inc ecx  +
test al al +
jnz loc_470300  +
cmp edx 3 +
jnz loc_47032F  +
push esi  +
call ds:inet_addr  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_47032F  +
mov eax [esp+arg_4] +
pop esi  +
mov [eax] ecx +
mov eax 1 +
retn 8  +
xor eax eax +
pop esi  +
retn 8  +
***
mov eax [esp+arg_10] +
push ebx  +
push edi  +
mov edi [esp+8+arg_14] +
push [esp+8+name]  +
mov dword ptr [edi] 0 +
mov byte ptr [eax] 0 +
call ds:gethostbyname  +
mov ebx eax +
test ebx ebx +
jz loc_4703CF  +
cmp word ptr [ebx+8] 2 +
push ebp  +
push esi  +
jnz loc_4703A2  +
cmp word ptr [ebx+0Ah] 4 +
jnz loc_4703A2  +
mov esi [ebx+0Ch] +
mov eax [esi] +
test eax eax +
jz loc_4703A2  +
mov ebp [esp+10h+arg_8] +
push dword ptr [eax]  +
push [esp+14h+arg_C]  +
push ebp  +
push [esp+1Ch+arg_4]  +
call sub_470270  +
mov [edi] eax +
test eax eax +
jz loc_4703C3  +
add esi 4 +
lea edi [eax+1Ch] +
mov eax [esi] +
test eax eax +
jnz loc_470380  +
push 400h  +
push dword ptr [ebx]  +
push 401h  +
push [esp+1Ch+arg_10]  +
call sub_4985ED  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
retn 18h  +
pop esi  +
pop ebp  +
pop edi  +
mov eax 8 +
pop ebx  +
retn 18h  +
call ds:WSAGetLastError  +
add eax 0FFFFD507h +
cmp eax 3 +
ja loc_4703E6  +
jmp ds:off_470404[eax*4]  +
pop edi  +
mov eax 2AF9h +
pop ebx  +
retn 18h  +
pop edi  +
mov eax 2AFAh +
pop ebx  +
retn 18h  +
pop edi  +
mov eax 2AFBh +
pop ebx  +
retn 18h  +
***
test esi esi +
jnz loc_47042F  +
xor eax eax +
pop esi  +
retn 4  +
mov ecx esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470434  +
sub ecx edx +
push ebx  +
push edi  +
lea ebx [ecx+1] +
push ebx  +
push 1  +
call sub_49874B  +
mov edi eax +
add esp 8 +
test edi edi +
jnz loc_470459  +
pop edi  +
pop ebx  +
pop esi  +
retn 4  +
push esi  +
push ebx  +
push edi  +
call sub_4A102D  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
retn 4  +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_470481  +
mov [esp+arg_0] eax +
jmp sub_4707E0  +
retn   +
***
sub esp 21Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+21Ch+var_4] eax +
push esi  +
push edi  +
mov edi [esp+224h+arg_0] +
push 6  +
push 1  +
push 2  +
call ds:socket  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_4704D6  +
push offset aSocketFailed_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
jmp loc_47063E  +
lea eax [esp+224h+optlen] +
mov [esp+224h+optlen] 1 +
push eax  +
push 8004667Eh  +
push esi  +
call ds:ioctlsocket  +
inc eax  +
neg eax  +
push 10h  +
sbb eax eax +
neg eax  +
push edi  +
dec eax  +
push esi  +
mov dword ptr [esp+230h+optval] eax +
call ds:connect  +
cmp eax 0FFFFFFFFh +
jnz loc_470526  +
call ds:WSAGetLastError  +
cmp eax 70h +
jz loc_470526  +
cmp eax 2733h +
jz loc_470526  +
push offset aErrorConnectin  +
jmp loc_47062B  +
mov eax dword_4EE800 +
mov [esp+224h+timeout.tv_sec] eax +
lea eax [esp+224h+timeout] +
push eax  +
lea eax [esp+228h+exceptfds] +
mov [esp+228h+timeout.tv_usec] 0 +
push eax  +
lea eax [esp+22Ch+writefds] +
mov [esp+22Ch+writefds.fd_array] esi +
push eax  +
push 0  +
lea eax [esi+1] +
mov [esp+234h+writefds.fd_count] 1 +
push eax  +
mov [esp+238h+exceptfds.fd_array] esi +
mov [esp+238h+exceptfds.fd_count] 1 +
call ds:select  +
cmp eax 0FFFFFFFFh +
jz loc_470626  +
test eax eax +
jz loc_47061F  +
lea eax [esp+224h+writefds] +
push eax  +
push esi  +
call __WSAFDIsSet  +
test eax eax +
jnz loc_4705AC  +
lea eax [esp+224h+exceptfds] +
push eax  +
push esi  +
call __WSAFDIsSet  +
test eax eax +
jnz loc_4705AC  +
push offset aSelectFailed  +
jmp loc_47062B  +
lea eax [esp+224h+optlen] +
mov [esp+224h+optlen] 4 +
push eax  +
lea eax [esp+228h+optval] +
push eax  +
push 1007h  +
push 0FFFFh  +
push esi  +
call ds:getsockopt  +
test eax eax +
jns loc_4705DA  +
push offset aGetsockoptFail  +
jmp loc_47062B  +
cmp dword ptr [esp+224h+optval] 0 +
jz loc_470606  +
push offset aErrorConnect_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
push esi  +
call ds:closesocket  +
call sub_497984  +
mov ecx dword ptr [esp+224h+optval] +
mov [eax] ecx +
jmp loc_47063E  +
pop edi  +
mov eax esi +
pop esi  +
mov ecx [esp+21Ch+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 21Ch +
retn   +
push offset aConnectAttempt  +
jmp loc_47062B  +
push offset aConnectFailed  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
push esi  +
call ds:closesocket  +
mov ecx [esp+224h+var_4] +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 21Ch +
retn   +
***
sub esp 38h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+34h] eax +
mov eax dword_4F31F0 +
xorps xmm0 xmm0 +
mov dword ptr [esp] 0 +
push esi  +
mov esi [esp+40h] +
movups oword ptr [esp+8] xmm0 +
mov dword ptr [esp+10h] 1 +
movups oword ptr [esp+28h] xmm0 +
movups oword ptr [esp+18h] xmm0 +
test eax eax +
jnz loc_4706A8  +
push eax  +
call sub_46FF50  +
mov dword_4F31F0 eax +
lea ecx [esp+4] +
push ecx  +
lea ecx [esp+0Ch] +
push ecx  +
push 0  +
push esi  +
call eax  +
mov esi eax +
push esi  +
call ds:WSASetLastError  +
test esi esi +
jz loc_4706E8  +
push offset aGetaddrinfoFai  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+34h] +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
***
mov esi [esp+4] +
push ebx  +
push ebp  +
push edi  +
test esi esi +
jz loc_470766  +
mov ebx [esp+50h] +
mov ebp ds:htons +
cmp dword ptr [esi+4] 2 +
jnz loc_47073F  +
mov eax [esi+10h] +
cmp eax 10h +
ja loc_4707AD  +
push eax  +
push dword ptr [esi+18h]  +
lea eax [esp+3Ch] +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
push ebx  +
call ebp  +
mov [esp+36h] ax +
lea eax [esp+34h] +
push eax  +
call sub_470490  +
mov edi eax +
add esp 4 +
cmp edi 0FFFFFFFFh +
jnz loc_47077C  +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_470700  +
mov esi [esp+10h] +
test esi esi +
jz loc_470766  +
mov eax dword_4F31F4 +
test eax eax +
jnz loc_470763  +
push 2  +
call sub_46FF50  +
mov dword_4F31F4 eax +
push esi  +
call eax  +
pop edi  +
pop ebp  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+34h] +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
***
mov eax dword_4F31F4 +
mov esi [esp+10h] +
test eax eax +
jnz loc_470795  +
push 2  +
call sub_46FF50  +
mov dword_4F31F4 eax +
push esi  +
call eax  +
mov ecx [esp+44h] +
mov eax edi +
pop edi  +
pop ebp  +
pop ebx  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 38h +
retn   +
***
push offset aAddressSizeMis  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
mov esi [esp+1Ch] +
add esp 0Ch +
jmp loc_47074E  +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_4707D9  +
retn   +
mov eax [eax+54h] +
retn   +
***
test esi esi +
sub esp 194h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+194h+var_4] eax +
cmp dword_4F31E0 0 +
jnz loc_470963  +
lea eax [esp+194h+var_194] +
push eax  +
push 101h  +
call ds:WSAStartup  +
test eax eax +
jnz loc_470963  +
cmp dword_4F31E4 eax +
jnz loc_470959  +
push offset aNo_proxy  +
mov dword_4F31E8 50h +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_47092E  +
cmp byte ptr [eax] 2Ah +
jnz loc_47092E  +
cmp byte ptr [eax+1] 0 +
jz loc_470959  +
push offset aHttp_proxy  +
call sub_497C99  +
add esp 4 +
test eax eax +
jnz loc_470950  +
push offset aHttp_proxy_0  +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_470959  +
push eax  +
call sub_471AD0  +
add esp 4 +
mov dword_4F31E0 1 +
mov ecx [esp+194h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
push 0  +
push [esp+0Ch+arg_C]  +
push [esp+10h+arg_8]  +
push [esp+14h+arg_4]  +
push [esp+18h+arg_0]  +
call loc_4709B0  +
add esp 1Ch +
retn   +
***
sub esp 0Ch +
push ebx  +
push edi  +
mov edi [esp+18h] +
xor ebx ebx +
mov dword ptr [esp+10h] 0 +
mov [esp+8] ebx +
test edi edi +
jnz loc_4709D3  +
pop edi  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
***
mov eax [esp+1Ch] +
mov ecx offset aGet +
test eax eax +
push ebp  +
cmovnz ecx eax +
mov [esp+10h] ecx +
call sub_4708D0  +
mov ebp [esp+24h] +
push esi  +
push 5Ch  +
call off_4EE2E8  +
add esp 4 +
mov esi eax +
test ebx ebx +
jnz loc_470A36  +
test esi esi +
jz loc_470EEE  +
push 5Ch  +
push ebx  +
push esi  +
call sub_48CF40  +
push edi  +
push esi  +
mov dword ptr [esi+8] 50h +
mov [esi+3Ch] ebx +
mov dword ptr [esi+14h] 0FFFFFFFFh +
mov dword ptr [esi+44h] 0FFFFFFFFh +
call sub_471BA0  +
add esp 14h +
jmp loc_470A78  +
test esi esi +
jz loc_470EEE  +
push 5Ch  +
push 0  +
push esi  +
call sub_48CF40  +
push ebx  +
push esi  +
mov dword ptr [esi+8] 50h +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+14h] 0FFFFFFFFh +
mov dword ptr [esi+44h] 0FFFFFFFFh +
call sub_471BA0  +
push ebx  +
call off_4EE2F8  +
add esp 18h +
mov [esi+4Ch] eax +
mov eax [esi] +
test eax eax +
jz loc_470EE2  +
mov ecx offset aHttp_0 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_470AA7  +
test dl dl +
jz loc_470AA3  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_470AA7  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_470A87  +
xor eax eax +
jmp loc_470AAC  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_470EE2  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_470EC6  +
mov edx dword_4F31E4 +
test edx edx +
jz loc_470AE9  +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470AD0  +
push dword_4F31E8  +
sub ecx edi +
push edx  +
lea edi ds:10h[ecx*2] +
jmp loc_470AFD  +
mov edi ecx +
lea edx [edi+1] +
nop   +
mov al [edi] +
inc edi  +
test al al +
jnz loc_470AF0  +
push dword ptr [esi+8]  +
sub edi edx +
push ecx  +
call loc_470660  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jz loc_470EA5  +
mov [esi+14h] eax +
test ebp ebp +
jnz loc_470B1B  +
mov [esp+38h] ebp +
jmp loc_470B1E  +
add edi 24h +
mov eax [esp+34h] +
test eax eax +
jz loc_470B3E  +
mov ecx eax +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470B30  +
sub ecx edx +
add edi 2 +
add edi ecx +
mov ebx [esp+2Ch] +
test ebx ebx +
jz loc_470B5E  +
mov ecx [ebx] +
test ecx ecx +
jz loc_470B5E  +
lea edx [ecx+1] +
nop   +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470B50  +
sub ecx edx +
add edi 10h +
add edi ecx +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_470B74  +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470B68  +
sub ecx edx +
inc edi  +
add edi ecx +
mov ecx [esp+14h] +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_470B80  +
sub ecx edx +
mov edx [esi+0Ch] +
lea ebx [edx+1] +
nop   +
mov al [edx] +
inc edx  +
test al al +
jnz loc_470B90  +
sub edx ebx +
lea ebp [ecx+18h] +
add ebp edx +
add ebp edi +
cmp dword ptr [esi+8] 50h +
jz loc_470BB6  +
lea eax [ebp+0Ch] +
add ebp 6 +
cmp dword_4F31E4 0 +
cmovnz ebp eax +
push ebp  +
call off_4EE2EC  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_470E80  +
cmp dword_4F31E4 0 +
push dword ptr [esi+0Ch]  +
jz loc_470C0F  +
mov eax [esi+8] +
cmp eax 50h +
jz loc_470BF7  +
push eax  +
push dword ptr [esi+4]  +
push dword ptr [esp+20h]  +
push offset aSHttpSDS  +
push ebp  +
push ebx  +
call sub_4213C0  +
add esp 1Ch +
jmp loc_470C22  +
push dword ptr [esi+4]  +
push dword ptr [esp+1Ch]  +
push offset aSHttpSS  +
push ebp  +
push ebx  +
call sub_4213C0  +
add esp 18h +
jmp loc_470C22  +
push dword ptr [esp+18h]  +
push offset aSS_0  +
push ebp  +
push ebx  +
call sub_4213C0  +
add esp 14h +
lea edi [ebx+eax] +
mov eax [esi+10h] +
test eax eax +
jz loc_470C44  +
push eax  +
mov eax ebx +
sub eax edi +
push offset a?S  +
add eax ebp +
push eax  +
push edi  +
call sub_4213C0  +
add esp 10h +
add edi eax +
mov eax [esi+8] +
cmp eax 50h +
jnz loc_470C66  +
push dword ptr [esi+4]  +
mov eax ebx +
sub eax edi +
push offset aHttp1_0HostS  +
add eax ebp +
push eax  +
push edi  +
call sub_4213C0  +
add esp 10h +
jmp loc_470C7F  +
push eax  +
push dword ptr [esi+4]  +
mov eax ebx +
sub eax edi +
push offset aHttp1_0HostSD  +
add eax ebp +
push eax  +
push edi  +
call sub_4213C0  +
add esp 14h +
add edi eax +
mov eax [esp+2Ch] +
test eax eax +
jz loc_470CA7  +
mov eax [eax] +
test eax eax +
jz loc_470CA7  +
push eax  +
mov eax ebx +
sub eax edi +
push offset aContentTypeS  +
add eax ebp +
push eax  +
push edi  +
call sub_4213C0  +
add esp 10h +
add edi eax +
mov eax [esp+34h] +
test eax eax +
jz loc_470CC7  +
push eax  +
mov eax ebx +
sub eax edi +
push offset unk_4BC790  +
add eax ebp +
push eax  +
push edi  +
call sub_4213C0  +
add esp 10h +
add edi eax +
mov eax ebx +
sub eax edi +
add eax ebp +
cmp dword ptr [esp+28h] 0 +
jz loc_470CE9  +
push dword ptr [esp+38h]  +
push offset aContentLengthD  +
push eax  +
push edi  +
call sub_4213C0  +
add esp 10h +
jmp loc_470CF8  +
push offset asc_4CB104  +
push eax  +
push edi  +
call sub_4213C0  +
add esp 0Ch +
mov ecx ebx +
mov [esi+1Ch] ebx +
mov [esi+20h] ebx +
mov dword ptr [esi+18h] 1 +
lea edx [ecx+1] +
add esp 4 +
cmp dword ptr [esi+4Ch] 0 +
jz loc_470E19  +
mov eax [esi+3Ch] +
cmp eax 12Ch +
jl loc_470E19  +
cmp eax 190h +
jge loc_470E19  +
push esi  +
call loc_471490  +
add esp 4 +
test eax eax +
jg loc_470DA2  +
mov edi [esp+18h] +
cmp edi 0Ah +
jge loc_470DF0  +
mov ecx [esp+10h] +
inc edi  +
mov [esp+18h] edi +
test ecx ecx +
jz loc_470DCF  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
push dword ptr [esi+4Ch]  +
call off_4EE2F8  +
mov ebx eax +
push esi  +
mov [esp+18h] ebx +
call sub_4707E0  +
mov edi [esp+28h] +
add esp 8 +
jmp loc_4709F0  +
***
push esi  +
call sub_4707E0  +
mov ecx [esp+14h] +
add esp 4 +
test ecx ecx +
jz loc_470F03  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
mov ebx [esp+2Ch] +
test ebx ebx +
jz loc_470E3C  +
mov eax [esi+48h] +
test eax eax +
jz loc_470E36  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [ebx] eax +
jmp loc_470E3C  +
mov dword ptr [ebx] 0 +
mov eax [esp+30h] +
mov ecx [esp+10h] +
test eax eax +
jz loc_470E68  +
test ecx ecx +
jz loc_470E58  +
mov [eax] ecx +
mov eax esi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
mov dword ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
test ecx ecx +
jz loc_470E76  +
push ecx  +
call off_4EE2F4  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
push esi  +
call sub_4707E0  +
push offset aAllocatingHead  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
add esp 18h +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
push esi  +
call sub_4707E0  +
add esp 4 +
test ebx ebx +
jz loc_470F03  +
push ebx  +
call off_4EE2F4  +
add esp 4 +
xor eax eax +
pop esi  +
pop ebp  +
pop edi  +
pop ebx  +
add esp 0Ch +
retn   +
***
push offset aFailedToIdenti  +
push 7E6h  +
push 0Ah  +
call sub_45EAA0  +
push esi  +
call sub_4707E0  +
add esp 10h +
jmp loc_470EAE  +
***
push offset aNotAValidHttpU  +
push 7E4h  +
jmp loc_470ED0  +
***
push offset aAllocatingCont  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
add esp 14h +
pop esi  +
pop ebp  +
pop edi  +
xor eax eax +
pop ebx  +
add esp 0Ch +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_470F19  +
retn   +
mov eax [eax+58h] +
retn   +
***
mov eax [esp+arg_4] +
test eax eax +
jz loc_470F2E  +
mov dword ptr [eax] 0 +
push 0  +
push 0  +
push 0  +
push eax  +
push 0  +
push 0  +
push [esp+18h+arg_0]  +
call loc_4709B0  +
add esp 1Ch +
retn   +
***
sub esp 11Ch +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+118h] eax +
mov eax [esp+124h] +
mov ecx [esp+128h] +
push esi  +
mov esi [esp+124h] +
mov [esp+0Ch] eax +
mov [esp+4] ecx +
test esi esi +
jnz loc_470F9F  +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+118h] +
xor ecx esp +
call sub_488C1C  +
add esp 11Ch +
retn   +
***
test eax eax +
jz loc_470F86  +
test ecx ecx +
jg loc_470FBF  +
xor eax eax +
pop esi  +
mov ecx [esp+118h] +
xor ecx esp +
call sub_488C1C  +
add esp 11Ch +
retn   +
***
mov eax [esi+2Ch] +
sub eax [esi+30h] +
cmp eax ecx +
jge loc_4711A1  +
push ebx  +
push ebp  +
push edi  +
test byte ptr [esi+18h] 2 +
jz loc_47119E  +
adc eax offset off_4EE2EC +
add esp 4 +
mov [esi+24h] eax +
test eax eax +
jz loc_471145  +
mov dword ptr [esi+34h] 0FDE8h +
mov [esi+30h] eax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov edx [esi+24h] +
mov ecx [esi+30h] +
lea eax [edx+1000h] +
cmp ecx eax +
jbe loc_47103C  +
mov eax [esi+2Ch] +
mov edi ecx +
sub eax ecx +
sub edi edx +
push eax  +
push ecx  +
push edx  +
call loc_48B430  +
sub [esi+30h] edi +
add esp 0Ch +
sub [esi+28h] edi +
sub [esi+2Ch] edi +
mov edx [esi+34h] +
mov ebx [esi+24h] +
mov edi [esi+2Ch] +
lea ecx [edx+ebx] +
lea eax [edi+1000h] +
cmp ecx eax +
jnb loc_471091  +
mov eax [esi+30h] +
sub edi ebx +
mov ebp [esi+28h] +
sub eax ebx +
mov [esp+14h] eax +
sub ebp ebx +
lea eax [edx+edx] +
push eax  +
push ebx  +
mov [esi+34h] eax +
call off_4EE2F0  +
add esp 8 +
mov [esi+24h] eax +
test eax eax +
jz loc_471163  +
lea ecx [eax+edi] +
mov [esi+2Ch] ecx +
lea ecx [eax+ebp] +
add eax [esp+14h] +
mov [esi+28h] ecx +
mov [esi+30h] eax +
push 0  +
push 1000h  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+14h]  +
call ds:recv  +
mov [esi+38h] eax +
test eax eax +
jg loc_471130  +
jz loc_47119E  +
cmp eax 0FFFFFFFFh +
jnz loc_4710DF  +
call ds:WSAGetLastError  +
cmp eax 70h +
jg loc_4710D4  +
jz loc_4710DF  +
cmp eax 0Bh +
jz loc_4710DF  +
cmp eax 6Ch +
jmp loc_47118B  +
sub eax 2733h +
jnz loc_471188  +
mov eax dword_4EE800 +
lea ecx [esp+1Ch] +
push ecx  +
push 0  +
mov [esp+24h] eax +
lea ecx [esp+2Ch] +
mov eax [esi+14h] +
push 0  +
mov [esp+34h] eax +
inc eax  +
push ecx  +
push eax  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 1 +
call ds:select  +
cmp eax 1 +
jge loc_471124  +
call sub_497984  +
cmp dword ptr [eax] 4 +
jnz loc_47119E  +
test byte ptr [esi+18h] 2 +
jnz near ptr dword_470FDC+4  +
jmp loc_47119E  +
add [esi+2Ch] eax +
mov eax [esi+2Ch] +
sub eax [esi+30h] +
cmp eax [esp+10h] +
jl loc_470FD0  +
jmp loc_47119E  +
push offset aAllocatingInpu  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
jmp loc_47119E  +
push offset aAllocatingIn_0  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
push ebx  +
call off_4EE2F4  +
add esp 18h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
jmp loc_47119E  +
sub eax 17h +
jz loc_47119E  +
push offset aRecvFailed_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
pop edi  +
pop ebp  +
pop ebx  +
mov edx [esi+30h] +
mov ecx [esi+2Ch] +
mov eax [esp+4] +
sub ecx edx +
cmp ecx eax +
cmovl eax ecx +
push eax  +
push edx  +
push dword ptr [esp+14h]  +
mov [esp+10h] eax +
call loc_48C9C0  +
mov eax [esp+10h] +
add esp 0Ch +
add [esi+30h] eax +
mov ecx [esp+11Ch] +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 11Ch +
retn   +
***
adc eax offset off_4EE2EC +
add esp 4 +
mov [esi+24h] eax +
test eax eax +
jz loc_4713F4  +
mov dword ptr [esi+34h] 0FDE8h +
mov [esi+30h] eax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov edx [esi+24h] +
mov ecx [esi+30h] +
lea eax [edx+1000h] +
cmp ecx eax +
jbe loc_47129C  +
mov eax [esi+2Ch] +
mov edi ecx +
sub eax ecx +
sub edi edx +
push eax  +
push ecx  +
push edx  +
call loc_48B430  +
sub [esi+30h] edi +
add esp 0Ch +
sub [esi+28h] edi +
sub [esi+2Ch] edi +
mov edx [esi+34h] +
mov ebx [esi+24h] +
mov edi [esi+2Ch] +
lea ecx [edx+ebx] +
lea eax [edi+1000h] +
cmp ecx eax +
jnb loc_4712F1  +
mov eax [esi+30h] +
sub edi ebx +
mov ebp [esi+28h] +
sub eax ebx +
mov [esp+18h] eax +
sub ebp ebx +
lea eax [edx+edx] +
push eax  +
push ebx  +
mov [esi+34h] eax +
call off_4EE2F0  +
add esp 8 +
mov [esi+24h] eax +
test eax eax +
jz loc_471414  +
lea ecx [eax+edi] +
mov [esi+2Ch] ecx +
lea ecx [eax+ebp] +
add eax [esp+18h] +
mov [esi+28h] ecx +
mov [esi+30h] eax +
push 0  +
push 1000h  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+14h]  +
call ds:recv  +
mov [esi+38h] eax +
test eax eax +
jg loc_4713A4  +
jz loc_47138A  +
cmp eax 0FFFFFFFFh +
jnz loc_47133B  +
call ds:WSAGetLastError  +
cmp eax 70h +
jg loc_471330  +
jz loc_47133B  +
cmp eax 0Bh +
jz loc_47133B  +
cmp eax 6Ch +
jmp loc_47143E  +
sub eax 2733h +
jnz loc_47143B  +
mov eax dword_4EE800 +
lea ecx [esp+1Ch] +
push ecx  +
push 0  +
mov [esp+24h] eax +
lea ecx [esp+2Ch] +
mov eax [esi+14h] +
push 0  +
mov [esp+34h] eax +
inc eax  +
push ecx  +
push eax  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 1 +
call ds:select  +
cmp eax 1 +
jge loc_471380  +
call sub_497984  +
cmp dword ptr [eax] 4 +
jnz loc_47138A  +
test byte ptr [esi+18h] 2 +
jnz near ptr dword_471200+40h  +
mov edx [esp+10h] +
lea eax [esp+128h] +
cmp edx eax +
jnz loc_471459  +
xor eax eax +
jmp loc_47146D  +
add [esi+2Ch] eax +
cmp eax 0FFFFFFFFh +
jz loc_471455  +
mov edx [esp+10h] +
mov ebx [esp+14h] +
mov ecx [esi+30h] +
movzx eax byte ptr [ecx] +
mov [edx] al +
lea eax [ecx+1] +
mov [esi+30h] eax +
mov al [edx] +
cmp al 0Ah +
jz loc_471459  +
cmp al 0Dh +
jz loc_4713DE  +
inc edx  +
inc ebx  +
mov [esp+10h] edx +
mov [esp+14h] ebx +
cmp ebx 0FFFh +
jl near ptr dword_471200+24h  +
mov byte ptr [esp+1127h] 0 +
jmp loc_47145C  +
push offset aAllocatingInpu  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
xor eax eax +
jmp loc_47146D  +
push offset aAllocatingIn_0  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
push ebx  +
call off_4EE2F4  +
add esp 18h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
xor eax eax +
jmp loc_47146D  +
sub eax 17h +
jz loc_47138A  +
push offset aRecvFailed_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
xor eax eax +
jmp loc_47146D  +
mov byte ptr [edx] 0 +
lea eax [esp+128h] +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov ecx [esp+1128h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 111Ch +
retn   +
***
sub esp 114h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+110h] eax +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+124h] +
push edi  +
test byte ptr [esi+18h] 2 +
jz loc_47160A  +
cmp dword ptr [esi+24h] 0 +
jnz loc_4714EF  +
push 0FDE8h  +
call off_4EE2EC  +
add esp 4 +
mov [esi+24h] eax +
test eax eax +
jz loc_471625  +
mov dword ptr [esi+34h] 0FDE8h +
mov [esi+30h] eax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov edx [esi+24h] +
mov ecx [esi+30h] +
lea eax [edx+1000h] +
cmp ecx eax +
jbe loc_47151C  +
mov eax [esi+2Ch] +
mov edi ecx +
sub eax ecx +
sub edi edx +
push eax  +
push ecx  +
push edx  +
call loc_48B430  +
sub [esi+30h] edi +
add esp 0Ch +
sub [esi+28h] edi +
sub [esi+2Ch] edi +
mov edx [esi+34h] +
mov edi [esi+24h] +
mov ebx [esi+2Ch] +
lea ecx [edx+edi] +
lea eax [ebx+1000h] +
cmp ecx eax +
jnb loc_471571  +
mov eax [esi+30h] +
sub ebx edi +
mov ebp [esi+28h] +
sub eax edi +
mov [esp+10h] eax +
sub ebp edi +
lea eax [edx+edx] +
push eax  +
push edi  +
mov [esi+34h] eax +
call off_4EE2F0  +
add esp 8 +
mov [esi+24h] eax +
test eax eax +
jz loc_471646  +
lea ecx [eax+ebx] +
mov [esi+2Ch] ecx +
lea ecx [eax+ebp] +
add eax [esp+10h] +
mov [esi+28h] ecx +
mov [esi+30h] eax +
push 0  +
push 1000h  +
push dword ptr [esi+2Ch]  +
push dword ptr [esi+14h]  +
call ds:recv  +
mov [esi+38h] eax +
test eax eax +
jg loc_471689  +
jz loc_47160A  +
cmp eax 0FFFFFFFFh +
jnz loc_4715BB  +
call ds:WSAGetLastError  +
cmp eax 70h +
jg loc_4715B0  +
jz loc_4715BB  +
cmp eax 0Bh +
jz loc_4715BB  +
cmp eax 6Ch +
jmp loc_471671  +
sub eax 2733h +
jnz loc_47166E  +
mov eax dword_4EE800 +
lea ecx [esp+14h] +
push ecx  +
push 0  +
mov [esp+1Ch] eax +
lea ecx [esp+24h] +
mov eax [esi+14h] +
push 0  +
mov [esp+2Ch] eax +
inc eax  +
push ecx  +
push eax  +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+30h] 1 +
call ds:select  +
cmp eax 1 +
jge loc_471600  +
call sub_497984  +
cmp dword ptr [eax] 4 +
jnz loc_47160A  +
test byte ptr [esi+18h] 2 +
jnz loc_4714C0  +
xor eax eax +
mov ecx [esp+120h] +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
xor ecx esp +
call sub_488C1C  +
add esp 114h +
retn   +
***
push offset aAllocatingInpu  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
add esp 14h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
jmp loc_47160C  +
***
push offset aAllocatingIn_0  +
push 0  +
push 0  +
push 2  +
push 0Ah  +
call sub_43AAC0  +
push edi  +
call off_4EE2F4  +
add esp 18h +
mov dword ptr [esi+38h] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
jmp loc_47160C  +
***
sub eax 17h +
jz loc_47160A  +
push offset aRecvFailed_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
jmp loc_47160C  +
***
add [esi+2Ch] eax +
jmp loc_47160C  +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_4716A9  +
retn   +
mov eax [eax+4Ch] +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jnz loc_4716BC  +
or eax 0FFFFFFFFh +
retn   +
mov eax [eax+3Ch] +
retn   +
***
push esi  +
mov esi [esp+0Ch] +
test esi esi +
jz loc_471ABF  +
push ebx  +
push edi  +
push 5  +
push offset aHttp_1  +
push esi  +
call sub_49A970  +
add esp 0Ch +
test eax eax +
jnz loc_4717A7  +
mov al [esi+5] +
lea edx [esi+5] +
xor edi edi +
xor ebx ebx +
cmp al 30h +
jl loc_47170C  +
cmp al 39h +
jg loc_47170C  +
movsx eax al +
lea edi [edi+edi*4] +
inc edx  +
lea edi [edi-18h] +
lea edi [eax+edi*2] +
mov al [edx] +
cmp al 30h +
jge loc_4716F5  +
cmp byte ptr [edx] 2Eh +
jnz loc_47173E  +
mov al [edx+1] +
inc edx  +
cmp al 30h +
jl loc_471743  +
cmp al 39h +
jg loc_47172A  +
lea edi [edi+edi*4] +
movsx eax al +
lea edi [edi-18h] +
inc edx  +
lea edi [eax+edi*2] +
mov al [edx] +
cmp al 30h +
jl loc_471743  +
cmp al 39h +
jg loc_471743  +
mov al [edx+1] +
inc edx  +
cmp al 30h +
jge loc_471730  +
jmp loc_471743  +
lea edi [edi+edi*4] +
add edi edi +
mov al [edx] +
cmp al 20h +
jz loc_471751  +
cmp al 9 +
jnz loc_471ABD  +
mov al [edx] +
cmp al 20h +
jz loc_47175B  +
cmp al 9 +
jnz loc_47175E  +
inc edx  +
jmp loc_471751  +
***
mov al [edx] +
cmp al 30h +
jl loc_471ABD  +
cmp al 39h +
jg loc_471ABD  +
cmp al 39h +
jg loc_471787  +
movsx eax al +
lea ebx [ebx+ebx*4] +
inc edx  +
lea ebx [ebx-18h] +
lea ebx [eax+ebx*2] +
mov al [edx] +
cmp al 30h +
jge loc_471770  +
mov al [edx] +
test al al +
jz loc_471799  +
cmp al 20h +
jz loc_471799  +
cmp al 9 +
jnz loc_471ABD  +
mov eax [esp+10h] +
mov [eax+40h] edi +
pop edi  +
mov [eax+3Ch] ebx +
pop ebx  +
pop esi  +
retn   +
***
push 0Dh  +
push offset aContentType_0  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_471891  +
add esi 0Dh +
mov al [esi] +
cmp al 20h +
jz loc_4717CC  +
cmp al 9 +
jnz loc_4717CF  +
inc esi  +
jmp loc_4717C2  +
***
mov ebx [esp+10h] +
mov eax [ebx+48h] +
test eax eax +
jz loc_4717E4  +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F8  +
mov [ebx+48h] eax +
add esp 4 +
mov al [esi] +
mov edi esi +
test al al +
jz loc_471818  +
cmp al 20h +
jz loc_471818  +
cmp al 9 +
jz loc_471818  +
cmp al 3Bh +
jz loc_471818  +
cmp al 2Ch +
jz loc_471818  +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_471800  +
mov eax [ebx+58h] +
test eax eax +
jz loc_471829  +
push eax  +
call off_4EE2F4  +
add esp 4 +
sub edi esi +
push edi  +
push esi  +
call sub_44E8A0  +
push offset aCharset  +
push dword ptr [ebx+48h]  +
mov [ebx+58h] eax +
call sub_44E8F0  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_471ABD  +
mov cl [edi+8] +
add edi 8 +
mov esi edi +
test cl cl +
jz loc_47195C  +
nop   +
cmp cl 20h +
jz loc_47195C  +
cmp cl 9 +
jz loc_47195C  +
cmp cl 3Bh +
jz loc_47195C  +
cmp cl 2Ch +
jz loc_47195C  +
mov cl [esi+1] +
inc esi  +
test cl cl +
jnz loc_471860  +
jmp loc_47195C  +
push 0Ch  +
push offset aContenttype  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_471980  +
mov ebx [esp+10h] +
add esi 0Ch +
cmp [ebx+48h] eax +
jnz loc_471ABD  +
mov al [esi] +
cmp al 20h +
jz loc_4718CA  +
cmp al 9 +
jnz loc_4718CD  +
inc esi  +
jmp loc_4718C0  +
***
push esi  +
call off_4EE2F8  +
mov [ebx+48h] eax +
add esp 4 +
mov al [esi] +
mov edi esi +
test al al +
jz loc_4718FA  +
cmp al 20h +
jz loc_4718FA  +
cmp al 9 +
jz loc_4718FA  +
cmp al 3Bh +
jz loc_4718FA  +
cmp al 2Ch +
jz loc_4718FA  +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_4718E2  +
mov eax [ebx+58h] +
test eax eax +
jz loc_47190B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
sub edi esi +
push edi  +
push esi  +
call sub_44E8A0  +
push offset aCharset  +
push dword ptr [ebx+48h]  +
mov [ebx+58h] eax +
call sub_44E8F0  +
mov edi eax +
add esp 10h +
test edi edi +
jz loc_471ABD  +
mov cl [edi+8] +
add edi 8 +
mov esi edi +
test cl cl +
jz loc_47195C  +
cmp cl 20h +
jz loc_47195C  +
cmp cl 9 +
jz loc_47195C  +
cmp cl 3Bh +
jz loc_47195C  +
cmp cl 2Ch +
jz loc_47195C  +
mov cl [esi+1] +
inc esi  +
test cl cl +
jnz loc_471940  +
mov eax [ebx+54h] +
test eax eax +
jz loc_47196D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
sub esi edi +
push esi  +
push edi  +
call sub_44E8A0  +
add esp 8 +
mov [ebx+54h] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 9  +
push offset aLocation  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_4719F3  +
add esi 9 +
mov al [esi] +
cmp al 20h +
jz loc_4719A1  +
cmp al 9 +
jnz loc_4719A4  +
inc esi  +
jmp loc_471997  +
***
mov edi [esp+10h] +
mov eax [edi+4Ch] +
test eax eax +
jz loc_4719B9  +
push eax  +
call off_4EE2F4  +
add esp 4 +
cmp byte ptr [esi] 2Fh +
jnz loc_4719E2  +
push offset aHttp  +
call sub_44E600  +
push dword ptr [edi+4]  +
push eax  +
call sub_44E540  +
push esi  +
push eax  +
call sub_44E540  +
add esp 14h +
mov [edi+4Ch] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
call off_4EE2F8  +
add esp 4 +
mov [edi+4Ch] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 11h  +
push offset aWwwAuthenticat  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_471A43  +
add esi 11h +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F8  +
add esp 4 +
mov [edi+50h] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 13h  +
push offset aProxyAuthentic  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_471A93  +
add esi 13h +
push eax  +
call off_4EE2F4  +
add esp 4 +
push esi  +
call off_4EE2F8  +
add esp 4 +
mov [edi+50h] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push 0Fh  +
push offset aContentLength  +
push esi  +
call sub_44E680  +
add esp 0Ch +
test eax eax +
jnz loc_471ABD  +
push 0Ah  +
push eax  +
lea eax [esi+0Fh] +
push eax  +
call sub_4A111C  +
mov ecx [esp+1Ch] +
add esp 0Ch +
mov [ecx+44h] eax +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
mov eax dword_4F31E4 +
test eax eax +
jz loc_471AED  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword_4F31E4 0 +
mov eax [esp+arg_0] +
mov dword_4F31E8 0 +
test eax eax +
jz locret_471B9D  +
push esi  +
push 1  +
push eax  +
call sub_45A270  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_471B7B  +
mov ecx [esi] +
test ecx ecx +
jz loc_471B7B  +
mov edx offset aHttp_0 +
mov al [ecx] +
cmp al [edx] +
jnz loc_471B40  +
test al al +
jz loc_471B3C  +
mov al [ecx+1] +
cmp al [edx+1] +
jnz loc_471B40  +
add ecx 2 +
add edx 2 +
test al al +
jnz loc_471B20  +
xor eax eax +
jmp loc_471B45  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_471B7B  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_471B7B  +
push eax  +
call off_4EE2F8  +
mov ecx dword_4F31E8 +
mov dword_4F31E4 eax +
mov eax [esi+14h] +
test eax eax +
push esi  +
cmovnz ecx eax +
mov dword_4F31E8 ecx +
call sub_458EE0  +
add esp 8 +
pop esi  +
retn   +
push offset aSyntaxError  +
push 7E4h  +
push 0Ah  +
call sub_45EAA0  +
add esp 0Ch +
test esi esi +
jz loc_471B9C  +
push esi  +
call sub_458EE0  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi] +
test eax eax +
jz loc_471BBB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_471BD3  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_471BEB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esi+10h] +
test eax eax +
jz loc_471C03  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+10h] 0 +
mov eax [esp+arg_4] +
test eax eax +
jz loc_471CCF  +
push edi  +
push 1  +
push eax  +
call sub_45A270  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_471CCE  +
mov eax [edi] +
test eax eax +
jz loc_471CC5  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_471CC5  +
push eax  +
call off_4EE2F8  +
mov [esi] eax +
add esp 4 +
mov edx [edi+0Ch] +
test edx edx +
jz loc_471C7F  +
cmp byte ptr [edx] 5Bh +
jnz loc_471C7F  +
mov ecx edx +
push ebx  +
lea ebx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_471C57  +
sub ecx ebx +
pop ebx  +
cmp ecx 2 +
jle loc_471C7F  +
cmp byte ptr [edx+ecx-1] 5Dh +
jnz loc_471C7F  +
lea eax [ecx-2] +
push eax  +
lea eax [edx+1] +
push eax  +
call sub_44E140  +
add esp 8 +
jmp loc_471C89  +
push edx  +
call off_4EE2F8  +
add esp 4 +
mov [esi+4] eax +
mov eax [edi+18h] +
test eax eax +
jz loc_471C96  +
push eax  +
jmp loc_471C9B  +
push offset asc_4DE990  +
call off_4EE2F8  +
mov [esi+0Ch] eax +
add esp 4 +
mov eax [edi+1Ch] +
test eax eax +
jz loc_471CBB  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov [esi+10h] eax +
mov eax [edi+14h] +
test eax eax +
jz loc_471CC5  +
mov [esi+8] eax +
push edi  +
call sub_458EE0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
sub esp 114h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+110h] eax +
mov ecx [esp+11Ch] +
push ebp  +
mov ebp [esp+11Ch] +
push esi  +
xor esi esi +
mov [esp+8] ecx +
test byte ptr [ebp+18h] 1 +
jz loc_471DF2  +
test ecx ecx +
jz loc_471DF2  +
push edi  +
mov edi [esp+12Ch] +
test edi edi +
jle loc_471DD8  +
push ebx  +
mov ebx ds:WSAGetLastError +
push 0  +
mov eax edi +
sub eax esi +
push eax  +
lea eax [ecx+esi] +
push eax  +
push dword ptr [ebp+14h]  +
call ds:send  +
test eax eax +
jle loc_471D4F  +
add esi eax +
jmp loc_471D9A  +
cmp eax 0FFFFFFFFh +
jnz loc_471D64  +
call ebx  +
cmp eax 0Bh +
jz loc_471D64  +
call ebx  +
cmp eax 2733h +
jnz loc_471DA4  +
mov eax dword_4EE800 +
lea ecx [esp+14h] +
push ecx  +
push 0  +
mov [esp+1Ch] eax +
lea ecx [esp+24h] +
mov eax [ebp+14h] +
push ecx  +
mov [esp+2Ch] eax +
inc eax  +
push 0  +
push eax  +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+30h] 1 +
call ds:select  +
cmp esi edi +
jge loc_471DBD  +
mov ecx [esp+10h] +
jmp loc_471D33  +
***
push offset aSendFailed_0  +
push 0  +
push 0Ah  +
call sub_45EAA0  +
or eax 0FFFFFFFFh +
add esp 0Ch +
test esi esi +
cmovz esi eax +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_488C1C  +
add esp 114h +
retn   +
***
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
mov ecx [esp+110h] +
xor ecx esp +
call sub_488C1C  +
add esp 114h +
retn   +
***
mov ecx [esp+118h] +
mov eax esi +
pop esi  +
pop ebp  +
xor ecx esp +
call sub_488C1C  +
add esp 114h +
retn   +
***
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
sub esp 214h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+214h+var_4] eax +
push esi  +
mov esi [esp+218h+arg_0] +
test esi esi +
jz loc_471F4D  +
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jz loc_471F4D  +
push edi  +
push dword ptr [esi+30h]  +
mov edi ds:closesocket +
call edi  +
mov eax [esi+2Ch] +
lea ecx [esp+21Ch+timeout] +
push ecx  +
lea ecx [esp+220h+exceptfds] +
mov [esp+220h+readfds.fd_array] eax +
push ecx  +
push 0  +
lea ecx [esp+228h+readfds] +
mov [esp+228h+exceptfds.fd_array] eax +
push ecx  +
inc eax  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
push eax  +
mov [esp+230h+timeout.tv_sec] 0Fh +
mov [esp+230h+timeout.tv_usec] 0 +
mov [esp+230h+readfds.fd_count] 1 +
mov [esp+230h+exceptfds.fd_count] 1 +
call ds:select  +
test eax eax +
js loc_471F27  +
jnz loc_471F19  +
push dword ptr [esi+2Ch]  +
call edi  +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
pop edi  +
xor eax eax +
pop esi  +
mov ecx [esp+214h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 214h +
retn   +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 2 +
jz loc_471F00  +
push dword ptr [esi+2Ch]  +
call edi  +
pop edi  +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+214h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 214h +
retn   +
mov ecx [esp+218h+var_4] +
or eax 0FFFFFFFFh +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 214h +
retn   +
***
sub esp 194h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+190h] eax +
push esi  +
mov esi [esp+19Ch] +
test esi esi +
jnz loc_471FA9  +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
cmp dword ptr [esi+4] 0 +
jz loc_471F90  +
mov eax dword_4F31FC +
push edi  +
mov edi dword_4F3200 +
test eax eax +
jnz loc_471FC2  +
mov edi [esi+8] +
test edi edi +
mov ecx 15h +
push ebx  +
cmovz edi ecx +
lea ebx [esi+18h] +
xorps xmm0 xmm0 +
movups oword ptr [ebx] xmm0 +
test eax eax +
jz loc_471FDD  +
push eax  +
jmp loc_471FE0  +
push dword ptr [esi+4]  +
call ds:gethostbyname  +
mov ecx eax +
test ecx ecx +
jnz loc_472017  +
push offset aGethostbynameF  +
push eax  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
cmp word ptr [ecx+0Ah] 4 +
jbe loc_47204A  +
push offset aGethostbynameA  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
mov eax 2 +
mov [ebx] ax +
movsx eax word ptr [ecx+0Ah] +
push eax  +
mov eax [ecx+0Ch] +
push dword ptr [eax]  +
lea eax [esi+1Ch] +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
push edi  +
call ds:htons  +
push 0  +
push 1  +
push 2  +
mov [esi+1Ah] ax +
call ds:socket  +
mov [esi+2Ch] eax +
cmp eax 0FFFFFFFFh +
jnz loc_4720B3  +
push offset aSocketFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
push 10h  +
push ebx  +
push eax  +
call ds:connect  +
test eax eax +
jns loc_4720CD  +
push offset aFailedToCrea_0  +
push 0  +
jmp loc_4722C1  +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 2 +
jnz loc_4722CB  +
cmp dword_4F31FC 0 +
jz loc_47226F  +
mov eax dword_4F3204 +
mov ebx ds:send +
test eax eax +
jz loc_4721EA  +
push eax  +
push offset aUserS  +
lea eax [esp+14h] +
push 190h  +
push eax  +
call sub_4213C0  +
lea ecx [esp+1Ch] +
mov byte ptr [esp+1ABh] 0 +
add esp 10h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472126  +
push 0  +
sub ecx edx +
lea eax [esp+10h] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ebx  +
mov edi eax +
test edi edi +
js loc_4723EE  +
push esi  +
call loc_472DB0  +
add esp 4 +
sub eax 1 +
jz loc_4721EA  +
sub eax 1 +
jz loc_472188  +
sub eax 1 +
jnz loc_4722CB  +
mov eax dword_4F3208 +
test eax eax +
jnz loc_472191  +
push offset aPassAnonymous@  +
lea eax [esp+10h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 0Ch +
jmp loc_4721A9  +
mov eax dword_4F3208 +
test eax eax +
jz loc_4721EA  +
push eax  +
push offset aPassS  +
lea eax [esp+14h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea ecx [esp+0Ch] +
mov byte ptr [esp+19Bh] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4721B8  +
push 0  +
sub ecx edx +
lea eax [esp+10h] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ebx  +
mov edi eax +
test edi edi +
js loc_4723EE  +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 3 +
jg loc_4722CB  +
mov eax dword_4F320C +
test eax eax +
js loc_4722CB  +
cmp eax 1 +
jle loc_47220A  +
cmp eax 2 +
jz loc_4722FF  +
jmp loc_4722CB  +
push dword ptr [esi+4]  +
lea eax [esp+10h] +
push offset aSiteS  +
push 190h  +
push eax  +
call sub_4213C0  +
lea ecx [esp+1Ch] +
mov byte ptr [esp+1ABh] 0 +
add esp 10h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472233  +
push 0  +
sub ecx edx +
lea eax [esp+10h] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ebx  +
mov edi eax +
test edi edi +
js loc_4723EE  +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 2 +
jnz loc_4722F6  +
mov dword_4F320C 1 +
push esi  +
call sub_4731D0  +
add esp 4 +
test eax eax +
js loc_4722CB  +
push esi  +
call loc_472DB0  +
add esp 4 +
sub eax 2 +
jz loc_47244A  +
sub eax 1 +
jnz loc_4722CB  +
push esi  +
call sub_473100  +
add esp 4 +
test eax eax +
js loc_4722CB  +
push esi  +
call loc_472DB0  +
add esp 4 +
sub eax 2 +
jz loc_47244A  +
sub eax 1 +
jnz loc_4722CB  +
push offset aFtpServerAskin  +
push 7D2h  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+2Ch]  +
call ds:closesocket  +
pop ebx  +
pop edi  +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
cmp dword_4F320C 1 +
jz loc_4722CB  +
mov eax [esi+10h] +
push dword ptr [esi+4]  +
test eax eax +
jnz loc_472322  +
push offset aUserAnonymous@  +
lea eax [esp+14h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 10h +
jmp loc_47233A  +
push eax  +
push offset aUserS@S  +
lea eax [esp+18h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 14h +
lea ecx [esp+0Ch] +
mov byte ptr [esp+19Bh] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472350  +
push 0  +
sub ecx edx +
lea eax [esp+10h] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ebx  +
mov edi eax +
test edi edi +
js loc_4723EE  +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 1 +
jz loc_472440  +
cmp eax 2 +
jz loc_472440  +
mov eax [esi+14h] +
test eax eax +
jnz loc_4723AB  +
push offset aPassAnonymous@  +
lea eax [esp+10h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 0Ch +
jmp loc_4723C3  +
push eax  +
push offset aPassS  +
lea eax [esp+14h] +
push 190h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea ecx [esp+0Ch] +
mov byte ptr [esp+19Bh] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4723D2  +
push 0  +
sub ecx edx +
lea eax [esp+10h] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ebx  +
mov edi eax +
test edi edi +
jns loc_472429  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+2Ch]  +
call ds:closesocket  +
pop ebx  +
mov eax edi +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
pop edi  +
pop esi  +
mov ecx [esp+190h] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 1 +
jz loc_472440  +
cmp eax 2 +
jnz loc_4722CB  +
mov dword_4F320C 2 +
mov ecx [esp+19Ch] +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
test esi esi +
jz loc_4724E6  +
mov eax [esi+4] +
test eax eax +
jz loc_47248A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi] +
test eax eax +
jz loc_47249A  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_4724AB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov eax [esi+2Ch] +
mov dword ptr [esi+28h] 1 +
cmp eax 0FFFFFFFFh +
jz loc_4724C1  +
push eax  +
call ds:closesocket  +
push esi  +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
mov dword ptr [esi+440h] 0FFFFFFFFh +
mov dword ptr [esi+444h] 0FFFFFFFFh +
call off_4EE2F4  +
add esp 4 +
pop esi  +
retn   +
***
sub esp 100h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+100h+var_4] eax +
push esi  +
mov esi [esp+104h+arg_0] +
test esi esi +
jz loc_47254F  +
push 6  +
push 1  +
xorps xmm0 xmm0 +
push 2  +
movups oword ptr [esp+110h+name.sa_family] xmm0 +
call ds:socket  +
mov [esi+30h] eax +
mov ecx 2 +
mov [esp+104h+name.sa_family] cx +
mov [esp+104h+namelen] 10h +
cmp eax 0FFFFFFFFh +
jnz loc_472568  +
push offset aSocketFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+100h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
cmp dword ptr [esi+28h] 0 +
push edi  +
jz loc_47270F  +
push offset aPasv  +
lea eax [esp+10Ch+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
lea ecx [esp+114h+buf] +
add esp 0Ch +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472591  +
push 0  +
sub ecx edx +
lea eax [esp+10Ch+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
test eax eax +
js loc_4727D6  +
push esi  +
call loc_472DB0  +
mov edi ds:closesocket +
add esp 4 +
cmp eax 2 +
jz loc_4725E3  +
push dword ptr [esi+30h]  +
cmp eax 5 +
jz loc_4727EA  +
call edi  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
mov dword ptr [esi+28h] 0 +
mov eax [esi+448h] +
lea ecx [esi+3Ch] +
add ecx eax +
nop   +
mov al [ecx] +
cmp al 30h +
jl loc_4725FA  +
cmp al 39h +
jle loc_472601  +
test al al +
jz loc_472601  +
inc ecx  +
jmp loc_4725F0  +
lea eax [esp+108h+var_D8] +
push eax  +
lea eax [esp+10Ch+var_DC] +
push eax  +
lea eax [esp+110h+var_E0] +
push eax  +
lea eax [esp+114h+var_E4] +
push eax  +
lea eax [esp+118h+var_E8] +
push eax  +
lea eax [esp+11Ch+var_EC] +
push eax  +
push offset aUUUUUU  +
push ecx  +
call sub_460B80  +
add esp 20h +
cmp eax 6 +
jz loc_472676  +
push offset aInvalidAnswerT  +
push 7D0h  +
push 9  +
call sub_45EAA0  +
mov eax [esi+30h] +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_4727F7  +
push eax  +
call edi  +
pop edi  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+100h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
movzx eax byte ptr [esp+108h+var_EC] +
push [esp+108h+namelen]  +
mov [esp+10Ch+var_D4] al +
movzx eax byte ptr [esp+10Ch+var_E8] +
mov [esp+39h] al +
movzx eax byte ptr [esp+10Ch+var_E4] +
mov [esp+10Ch+var_D2] al +
movzx eax byte ptr [esp+10Ch+var_E0] +
mov [esp+10Ch+var_D1] al +
movzx eax byte ptr [esp+10Ch+var_DC] +
mov byte ptr [esp+10Ch+var_D0] al +
movzx eax byte ptr [esp+10Ch+var_D8] +
mov byte ptr [esp+10Ch+var_D0+1] al +
mov eax dword ptr [esp+10Ch+var_D4] +
mov dword ptr [esp+10Ch+name.sa_data+2] eax +
mov ax [esp+10Ch+var_D0] +
mov word ptr [esp+10Ch+name.sa_data] ax +
lea eax [esp+10Ch+name] +
push eax  +
push dword ptr [esi+30h]  +
call ds:connect  +
test eax eax +
jns loc_47281F  +
push offset aFailedToCrea_1  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+30h]  +
call edi  +
pop edi  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+100h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
mov edi ds:getsockname +
lea ecx [esp+108h+namelen] +
push ecx  +
lea ecx [esp+10Ch+name] +
push ecx  +
push eax  +
call edi  +
push [esp+108h+namelen]  +
xor eax eax +
mov word ptr [esp+10Ch+name.sa_data] ax +
lea eax [esp+10Ch+name] +
push eax  +
push dword ptr [esi+30h]  +
call ds:bind  +
test eax eax +
jns loc_472749  +
push offset aBindFailed  +
jmp loc_4727DB  +
lea eax [esp+108h+namelen] +
push eax  +
lea eax [esp+10Ch+name] +
push eax  +
push dword ptr [esi+30h]  +
call edi  +
push 1  +
push dword ptr [esi+30h]  +
call ds:listen  +
test eax eax +
jns loc_47276E  +
push offset aListenFailed  +
jmp loc_4727DB  +
movzx eax [esp+108h+name.sa_data+1] +
push eax  +
movzx eax [esp+10Ch+name.sa_data] +
push eax  +
movzx eax [esp+110h+name.sa_data+5] +
push eax  +
movzx eax [esp+114h+name.sa_data+4] +
push eax  +
movzx eax [esp+118h+name.sa_data+3] +
push eax  +
movzx eax [esp+11Ch+name.sa_data+2] +
push eax  +
push offset aPortDDDDDD  +
lea eax [esp+124h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
lea ecx [esp+12Ch+buf] +
mov [esp+12Ch+var_5] 0 +
add esp 24h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4727B8  +
push 0  +
sub ecx edx +
lea eax [esp+10Ch+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
test eax eax +
jns loc_472811  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+30h]  +
call ds:closesocket  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+100h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 2 +
jnz loc_4727E7  +
mov eax [esi+30h] +
mov ecx [esp+108h+var_4] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 100h +
retn   +
***
test esi esi +
jz loc_47290B  +
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jz loc_47290B  +
mov eax [esi+440h] +
test eax eax +
js loc_47290B  +
cmp eax 400h +
jg loc_47290B  +
mov ecx [esi+444h] +
test ecx ecx +
js loc_47290B  +
cmp ecx 400h +
jg loc_47290B  +
cmp eax ecx +
jg loc_47290B  +
test eax eax +
jle loc_4728BD  +
sub ecx eax +
add eax 3Ch +
push ecx  +
add eax esi +
push eax  +
lea eax [esi+3Ch] +
push eax  +
call loc_48B430  +
mov eax [esi+440h] +
add esp 0Ch +
sub [esi+444h] eax +
mov dword ptr [esi+440h] 0 +
mov eax 400h +
sub eax [esi+444h] +
jnz loc_4728CC  +
pop esi  +
retn   +
push 0  +
push eax  +
mov eax [esi+440h] +
add eax 3Ch +
add eax esi +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:recv  +
mov ecx eax +
test ecx ecx +
jns loc_472910  +
push offset aRecvFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+2Ch]  +
call ds:closesocket  +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
add [esi+444h] ecx +
mov eax [esi+444h] +
mov byte ptr [eax+esi+3Ch] 0 +
mov eax ecx +
pop esi  +
retn   +
***
sub esp 130h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+130h+var_4] eax +
push esi  +
mov esi [esp+134h+arg_0] +
push edi  +
mov edi [esp+138h+arg_4] +
test esi esi +
jz loc_4729CF  +
test edi edi +
jnz loc_472961  +
cmp [esi+0Ch] edi +
jz loc_4729CF  +
push esi  +
call sub_4724F0  +
add esp 4 +
mov [esi+30h] eax +
cmp eax 0FFFFFFFFh +
jz loc_4729CF  +
push offset aTypeI  +
lea eax [esp+13Ch+buf] +
push 12Ch  +
push eax  +
call sub_4213C0  +
lea ecx [esp+144h+buf] +
add esp 0Ch +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472990  +
push 0  +
sub ecx edx +
lea eax [esp+13Ch+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
test eax eax +
jns loc_4729E9  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push dword ptr [esi+30h]  +
call ds:closesocket  +
mov dword ptr [esi+30h] 0FFFFFFFFh +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
mov ecx [esp+130h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 130h +
retn   +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 2 +
jnz loc_4729BF  +
lea eax [esp+138h+buf] +
test edi edi +
jnz loc_472A04  +
push dword ptr [esi+0Ch]  +
jmp loc_472A05  +
push edi  +
push offset aRetrS  +
push 12Ch  +
push eax  +
call sub_4213C0  +
lea ecx [esp+148h+buf] +
mov [esp+148h+var_5] 0 +
add esp 10h +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472A27  +
push 0  +
sub ecx edx +
lea eax [esp+13Ch+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
test eax eax +
js loc_4729AE  +
push esi  +
call loc_472DB0  +
add esp 4 +
cmp eax 1 +
jnz loc_4729BF  +
mov eax [esi+30h] +
mov ecx [esp+138h+var_4] +
pop edi  +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 130h +
retn   +
***
sub esp 194h +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+194h+var_4] eax +
cmp dword_4F31F8 0 +
jnz loc_472B53  +
lea eax [esp+194h+var_194] +
push eax  +
push 101h  +
call ds:WSAStartup  +
test eax eax +
jnz loc_472B53  +
push offset aNo_proxy  +
mov dword_4F3200 15h +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_472ADE  +
cmp byte ptr [eax] 2Ah +
jnz loc_472ADE  +
cmp byte ptr [eax+1] 0 +
jz loc_472B53  +
push offset aFtp_proxy  +
call sub_497C99  +
add esp 4 +
test eax eax +
jnz loc_472B00  +
push offset aFtp_proxy_0  +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_472B09  +
push eax  +
call sub_472F00  +
add esp 4 +
push offset aFtp_proxy_user  +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_472B29  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov dword_4F3204 eax +
push offset aFtp_proxy_pass  +
call sub_497C99  +
add esp 4 +
test eax eax +
jz loc_472B49  +
push eax  +
call off_4EE2F8  +
add esp 4 +
mov dword_4F3208 eax +
mov dword_4F31F8 1 +
mov ecx [esp+194h+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 194h +
retn   +
***
call off_4EE2E8  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_472B9C  +
push offset aAllocatingFtpC  +
push eax  +
push eax  +
push 2  +
push 9  +
call sub_43AAC0  +
add esp 14h +
xor eax eax +
pop esi  +
retn   +
push ebx  +
push edi  +
push 44Ch  +
push 0  +
push esi  +
call sub_48CF40  +
mov edi [esp+14h+arg_0] +
push 0  +
push 0  +
push edi  +
mov dword ptr [esi+8] 15h +
mov dword ptr [esi+28h] 1 +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+440h] 0 +
mov dword ptr [esi+444h] 0 +
mov dword ptr [esi+2Ch] 0FFFFFFFFh +
call loc_45B280  +
mov ebx eax +
add esp 18h +
test ebx ebx +
jz loc_472C09  +
push ebx  +
push esi  +
call sub_472FD0  +
push ebx  +
call off_4EE2F4  +
add esp 0Ch +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
test edi edi +
jz loc_472C17  +
push edi  +
push esi  +
call sub_472FD0  +
add esp 8 +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
call sub_472470  +
add esp 4 +
xor eax eax +
pop esi  +
retn   +
***
sub esp 0CCh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0CCh+var_4] eax +
push esi  +
mov esi [esp+0D0h+arg_0] +
test esi esi +
jz loc_472D29  +
cmp dword ptr [esi+2Ch] 0FFFFFFFFh +
jz loc_472D29  +
push offset aQuit  +
lea eax [esp+0D4h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
lea ecx [esp+0DCh+buf] +
add esp 0Ch +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_472CC8  +
push 0  +
sub ecx edx +
lea eax [esp+0D4h+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
mov esi eax +
test esi esi +
jns loc_472D11  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
mov eax esi +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
xor eax eax +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
mov ecx [esp+0D0h+var_4] +
or eax 0FFFFFFFFh +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
***
push esi  +
mov esi [esp+8] +
test esi esi +
jnz loc_472D5E  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [esi+30h] +
cmp eax 0FFFFFFFFh +
jnz loc_472D6A  +
xor eax eax +
pop esi  +
retn   +
***
mov ecx [esp+0Ch] +
test ecx ecx +
jz loc_472D59  +
mov edx [esp+10h] +
test edx edx +
jle loc_472D66  +
push edi  +
push 0  +
push edx  +
push ecx  +
push eax  +
call ds:recv  +
mov edi eax +
test edi edi +
jg loc_472DA8  +
jns loc_472D9F  +
push offset aRecvFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
push esi  +
call sub_471E60  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
mov ebx [esp+0Ch] +
mov dword ptr [esp+4] 0FFFFFFFFh +
test ebx ebx +
jz loc_472EF6  +
cmp dword ptr [ebx+2Ch] 0FFFFFFFFh +
jz loc_472EF6  +
push ebp  +
push esi  +
push edi  +
push ebx  +
call sub_472840  +
add esp 4 +
test eax eax +
js loc_472EED  +
mov ebp [ebx+444h] +
test ebp ebp +
jnz loc_472DF6  +
test eax eax +
jz loc_472EED  +
mov eax [ebx+440h] +
lea esi [ebx+3Ch] +
add eax 3Ch +
add esi ebp +
add eax ebx +
cmp eax esi +
jnb loc_472E8F  +
nop   +
mov ecx esi +
sub ecx eax +
cmp ecx 3 +
jl loc_472E70  +
mov cl [eax] +
cmp cl 30h +
jl loc_472E70  +
cmp cl 39h +
jg loc_472E70  +
movsx edx cl +
mov cl [eax+1] +
sub edx 30h +
cmp cl 30h +
jl loc_472E70  +
cmp cl 39h +
jg loc_472E70  +
movsx ecx cl +
lea edx [edx+edx*4] +
lea edx [edx-18h] +
lea edx [ecx+edx*2] +
mov cl [eax+2] +
cmp cl 30h +
jl loc_472E70  +
cmp cl 39h +
jg loc_472E70  +
movsx ecx cl +
lea edx [edx+edx*4] +
lea ecx [ecx+edx*2] +
add ecx 0FFFFFFD0h +
cmp byte ptr [eax+3] 2Dh +
jnz loc_472E65  +
neg ecx  +
test ecx ecx +
jg loc_472EBD  +
cmp byte ptr [eax] 0Ah +
jz loc_472E85  +
inc eax  +
cmp eax esi +
jb loc_472E70  +
mov [ebx+440h] ebp +
jmp loc_472DD3  +
***
cmp byte ptr [eax] 0Dh +
jz loc_472E8B  +
inc eax  +
cmp eax esi +
jb loc_472E10  +
mov ebp [esp+10h] +
test ebp ebp +
js loc_472DD3  +
sub eax ebx +
sub eax 3Ch +
mov [ebx+440h] eax +
mov eax 51EB851Fh +
imul  ebp +
pop edi  +
sar edx 5 +
pop esi  +
mov eax edx +
shr eax 1Fh +
pop ebp  +
add eax edx +
pop ebx  +
pop ecx  +
retn   +
***
mov [esp+10h] ecx +
add eax 3 +
mov ecx eax +
sub ecx ebx +
sub ecx 3Ch +
mov [ebx+448h] ecx +
cmp eax esi +
jnb loc_472EDF  +
cmp byte ptr [eax] 0Ah +
jz loc_472EE4  +
inc eax  +
cmp eax esi +
jb loc_472ED5  +
cmp byte ptr [eax] 0Ah +
jnz loc_472EE5  +
inc eax  +
cmp byte ptr [eax] 0Dh +
jnz loc_472E8F  +
inc eax  +
jmp loc_472E8F  +
***
pop edi  +
pop esi  +
pop ebp  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
or eax 0FFFFFFFFh +
pop ebx  +
pop ecx  +
retn   +
***
mov eax dword_4F31FC +
test eax eax +
jz loc_472F1D  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword_4F31FC 0 +
mov eax [esp+arg_0] +
mov dword_4F3200 0 +
test eax eax +
jz locret_472FCD  +
push esi  +
push 1  +
push eax  +
call sub_45A270  +
mov esi eax +
add esp 8 +
test esi esi +
jz loc_472FAB  +
mov ecx [esi] +
test ecx ecx +
jz loc_472FAB  +
mov edx offset aFtp_0 +
mov al [ecx] +
cmp al [edx] +
jnz loc_472F70  +
test al al +
jz loc_472F6C  +
mov al [ecx+1] +
cmp al [edx+1] +
jnz loc_472F70  +
add ecx 2 +
add edx 2 +
test al al +
jnz loc_472F50  +
xor eax eax +
jmp loc_472F75  +
sbb eax eax +
or eax 1 +
test eax eax +
jnz loc_472FAB  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_472FAB  +
push eax  +
call off_4EE2F8  +
mov ecx dword_4F3200 +
mov dword_4F31FC eax +
mov eax [esi+14h] +
test eax eax +
push esi  +
cmovnz ecx eax +
mov dword_4F3200 ecx +
call sub_458EE0  +
add esp 8 +
pop esi  +
retn   +
push offset aSyntaxError  +
push 7D3h  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
test esi esi +
jz loc_472FCC  +
push esi  +
call sub_458EE0  +
add esp 4 +
pop esi  +
retn   +
***
mov eax [esi] +
test eax eax +
jz loc_472FEB  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_473003  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov eax [esi+0Ch] +
test eax eax +
jz loc_47301B  +
push eax  +
call off_4EE2F4  +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov eax [esp+arg_4] +
test eax eax +
jz loc_4730EF  +
push edi  +
push 1  +
push eax  +
call sub_45A270  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_4730EE  +
mov eax [edi] +
test eax eax +
jz loc_4730E5  +
cmp dword ptr [edi+0Ch] 0 +
jz loc_4730E5  +
push eax  +
call off_4EE2F8  +
mov [esi] eax +
push dword ptr [edi+0Ch]  +
call off_4EE2F8  +
mov [esi+4] eax +
add esp 8 +
mov eax [edi+18h] +
test eax eax +
jz loc_473073  +
push eax  +
jmp loc_473078  +
push offset asc_4DE990  +
call off_4EE2F8  +
mov [esi+0Ch] eax +
add esp 4 +
mov eax [edi+14h] +
test eax eax +
jz loc_47308E  +
mov [esi+8] eax +
mov eax [edi+10h] +
test eax eax +
jz loc_4730E5  +
push ebx  +
push 3Ah  +
push eax  +
call sub_48D0A0  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_4730C3  +
push dword ptr [edi+10h]  +
call off_4EE2F8  +
add esp 4 +
mov [esi+10h] eax +
pop ebx  +
push edi  +
call sub_458EE0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
mov ecx [edi+10h] +
mov eax ebx +
sub eax ecx +
push eax  +
push ecx  +
call sub_44E8A0  +
mov [esi+10h] eax +
lea eax [ebx+1] +
push eax  +
call off_4EE2F8  +
add esp 0Ch +
mov [esi+14h] eax +
pop ebx  +
push edi  +
call sub_458EE0  +
add esp 4 +
pop edi  +
pop esi  +
retn   +
***
sub esp 0CCh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0CCh+var_4] eax +
push esi  +
mov esi [esp+0D0h+arg_0] +
mov eax [esi+14h] +
test eax eax +
jnz loc_47313C  +
push offset aPassAnonymous@  +
lea eax [esp+0D4h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
add esp 0Ch +
jmp loc_473154  +
push eax  +
push offset aPassS  +
lea eax [esp+0D8h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea ecx [esp+0D0h+buf] +
mov [esp+0D0h+var_5] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_473163  +
push 0  +
sub ecx edx +
lea eax [esp+0D4h+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
mov esi eax +
test esi esi +
jns loc_4731AC  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
mov eax esi +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
mov ecx [esp+0D0h+var_4] +
xor eax eax +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
***
sub esp 0CCh +
mov eax dword_4EEF3C +
xor eax esp +
mov [esp+0CCh+var_4] eax +
push esi  +
mov esi [esp+0D0h+arg_0] +
mov eax [esi+10h] +
test eax eax +
jnz loc_47320C  +
push offset aUserAnonymous  +
lea eax [esp+0D4h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
add esp 0Ch +
jmp loc_473224  +
push eax  +
push offset aUserS  +
lea eax [esp+0D8h+buf] +
push 0C8h  +
push eax  +
call sub_4213C0  +
add esp 10h +
lea ecx [esp+0D0h+buf] +
mov [esp+0D0h+var_5] 0 +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_473233  +
push 0  +
sub ecx edx +
lea eax [esp+0D4h+buf] +
push ecx  +
push eax  +
push dword ptr [esi+2Ch]  +
call ds:send  +
mov esi eax +
test esi esi +
jns loc_47327C  +
push offset aSendFailed  +
push 0  +
push 9  +
call sub_45EAA0  +
add esp 0Ch +
mov eax esi +
pop esi  +
mov ecx [esp+0CCh+var_4] +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
mov ecx [esp+0D0h+var_4] +
xor eax eax +
pop esi  +
xor ecx esp +
call sub_488C1C  +
add esp 0CCh +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFFA00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2AFh +
add eax 0FFFF04B0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 8Fh +
add eax 0FFFF0190h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFFAD0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 6Fh +
add eax 0FFFFDE70h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax 7Fh +
cmp eax [esp+arg_0] +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF680h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFDA80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFCF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFCE60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFDB00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFD800h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE8C0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFE3000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFCD00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFF01D0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1FFh +
add eax 0FFFF0700h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 21Fh +
add eax 0FFFD0800h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFD180h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFFD000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 51FFh +
add eax 0FFFFB200h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 19BFh +
add eax 0FFFFCC00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0A6DFh +
add eax 0FFFE0000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFEC60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 6Fh +
add eax 0FFFFFD00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFDF30h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFF01E0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFFDC00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFDF60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFEF800h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFFC00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFFB00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFEFC00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF700h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0BFh +
add eax 0FFFFD900h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 9Fh +
add eax 0FFFFDBA0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFCE00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 17Fh +
add eax 0FFFFEE00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 6Fh +
add eax 0FFFFE000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFDA60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFEF60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFEFCD0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFE100h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 8Fh +
add eax 0FFFFFC90h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF580h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF600h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0EFh +
add eax 0FFFF0100h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFCED0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFEF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2BAFh +
add eax 0FFFF5400h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE8E0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 6Fh +
add eax 0FFFFFA70h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFF2480h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 37Fh +
add eax 0FFFF2800h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFCFC0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFFDB0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFFD010h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFFCE70h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0DFh +
add eax 0FFFFD100h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF380h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFCF60h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFFCE10h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFE880h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE620h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF180h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFFF80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFFF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0CFh +
add eax 0FFFFFE80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFE200h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFFDF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFFE700h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFEFF80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFF0000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3FFh +
add eax 0FFFF2400h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF300h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3FFh +
add eax 0FFFE2C00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFDE00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFD840h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFD680h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFDA00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFD500h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFDD00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0AFh +
add eax 0FFFFE800h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFE2F00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 9Fh +
add eax 0FFFFF000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFFDEB0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE980h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFEFD00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFDBC0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF500h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFEFB80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFE300h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0E000h +
jl loc_473E22  +
cmp eax 0F8FFh +
jle loc_473E3C  +
cmp eax 0F0000h +
jl loc_473E30  +
cmp eax 0FFFFFh +
jle loc_473E3C  +
add eax 0FFF00000h +
cmp eax 0FFFFh +
ja loc_473E42  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 18FFh +
add eax 0FFFF2000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFFE960h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFEFBB0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF280h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFF01B0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFFFD50h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFF0010h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFDF90h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFFD810h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFD700h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFD600h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFFFh +
add eax 0FFF10000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFFFh +
add eax 0FFF00000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFFF900h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE900h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFFE8A0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFF20000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 2Fh +
add eax 0FFFFE6B0h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 5Fh +
add eax 0FFFE2D00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF480h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF400h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFFF880h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 7Fh +
add eax 0FFFFF200h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0FFh +
add eax 0FFFFF100h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 1Fh +
add eax 0FFFEFC80h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 27Fh +
add eax 0FFFFEC00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0Fh +
add eax 0FFFF0200h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 0EFh +
add eax 0FFF1FF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFF5B70h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 48Fh +
add eax 0FFFF6000h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFFB240h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
js loc_47425D  +
cmp eax 1Fh +
jle loc_474265  +
add eax 0FFFFFF81h +
cmp eax 20h +
ja loc_47426B  +
mov eax 1 +
retn   +
xor eax eax +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0E000h +
jz loc_4742C1  +
cmp eax 0F8FFh +
jz loc_4742C1  +
cmp eax 0F0000h +
jz loc_4742C1  +
cmp eax 0FFFFDh +
jz loc_4742C1  +
cmp eax 100000h +
jz loc_4742C1  +
cmp eax 10FFFDh +
jz loc_4742C1  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0D800h +
jz loc_474301  +
cmp eax 0DB7Fh +
jl loc_4742E9  +
cmp eax 0DB80h +
jle loc_474301  +
cmp eax 0DBFFh +
jl loc_4742F7  +
cmp eax 0DC00h +
jle loc_474301  +
cmp eax 0DFFFh +
jz loc_474301  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 488h +
jl loc_474422  +
cmp eax 489h +
jle loc_474448  +
cmp eax 6DEh +
jz loc_474448  +
cmp eax 20DDh +
jl loc_474437  +
cmp eax 20E0h +
jle loc_474448  +
cmp eax 20E2h +
jl loc_474445  +
cmp eax 20E4h +
jle loc_474448  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 16EEh +
jl loc_4744C2  +
cmp eax 16F0h +
jle loc_4744FD  +
cmp eax 2160h +
jl loc_4744D0  +
cmp eax 2183h +
jle loc_4744FD  +
cmp eax 3007h +
jz loc_4744FD  +
cmp eax 3021h +
jl loc_4744E5  +
cmp eax 3029h +
jle loc_4744FD  +
cmp eax 3038h +
jl loc_4744F3  +
cmp eax 303Ah +
jle loc_4744FD  +
cmp eax 1034Ah +
jz loc_4744FD  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 5Fh +
jz loc_4745A2  +
cmp eax 203Fh +
jl loc_474567  +
cmp eax 2040h +
jle loc_4745A2  +
cmp eax 2054h +
jz loc_4745A2  +
cmp eax 30FBh +
jz loc_4745A2  +
cmp eax 0FE33h +
jl loc_474583  +
cmp eax 0FE34h +
jle loc_4745A2  +
cmp eax 0FE4Dh +
jl loc_474591  +
cmp eax 0FE4Fh +
jle loc_4745A2  +
cmp eax 0FF3Fh +
jz loc_4745A2  +
cmp eax 0FF65h +
jz loc_4745A2  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0BBh +
jz loc_474613  +
cmp eax 2019h +
jz loc_474613  +
cmp eax 201Dh +
jz loc_474613  +
cmp eax 203Ah +
jz loc_474613  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0ABh +
jz loc_474651  +
cmp eax 2018h +
jz loc_474651  +
cmp eax 201Bh +
jl loc_474640  +
cmp eax 201Ch +
jle loc_474651  +
cmp eax 201Fh +
jz loc_474651  +
cmp eax 2039h +
jz loc_474651  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
call sub_45B3E0  +
add esp 8 +
retn   +
***
xor eax eax +
cmp [esp+arg_0] 2028h +
setz al  +
retn   +
***
xor eax eax +
cmp [esp+arg_0] 2029h +
setz al  +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 20h +
jz loc_4747C4  +
cmp eax 0A0h +
jz loc_4747C4  +
cmp eax 1680h +
jz loc_4747C4  +
cmp eax 180Eh +
jz loc_4747C4  +
cmp eax 2000h +
jl loc_4747AC  +
cmp eax 200Ah +
jle loc_4747C4  +
cmp eax 202Fh +
jz loc_4747C4  +
cmp eax 205Fh +
jz loc_4747C4  +
cmp eax 3000h +
jz loc_4747C4  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 3Fh +
add eax 0FFFEFF00h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx 4Fh +
add eax 0FFFF0500h +
cmp ecx eax +
sbb eax eax +
inc eax  +
retn   +
***
call sub_474840  +
add esp 8 +
test eax eax +
jnz loc_474829  +
or eax 0FFFFFFFFh +
retn   +
push [esp+arg_0]  +
call eax  +
add esp 4 +
retn   +
***
mov eax [esp+arg_0] +
push 0FFFFFFFFh  +
push offset loc_4BA0EB  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
lea esi [edi+4] +
mov dword ptr [esi] offset off_4CE82C +
xor eax eax +
mov dword ptr [edi] offset off_4CE838 +
mov [edi+0Ch] ax +
lea ecx [edi+18h] +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE844 +
mov dword ptr [edi+8] 0 +
mov byte ptr [edi+0Eh] 1 +
mov [edi+10h] ecx +
mov [edi+14h] eax +
mov [ebp+var_4] 0 +
mov dword ptr [ecx] 0 +
call sub_47EE60  +
mov [eax] esi +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub ecx 4 +
jmp sub_474980  +
***
push 0FFFFFFFFh  +
push offset loc_4BA116  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [edi] offset off_4CE838 +
mov dword ptr [edi+4] offset off_4CE844 +
call loc_474BA0  +
mov esi [edi+14h] +
call sub_47EE60  +
lea ecx [esi+4] +
neg esi  +
sbb esi esi +
and esi ecx +
test [ebp+arg_0] 1 +
mov [eax] esi +
mov dword ptr [edi+4] offset off_4CE824 +
jz loc_4749ED  +
push 218h  +
push edi  +
call sub_488C60  +
add esp 8 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE824 +
jz loc_474A2D  +
push 4  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
jz loc_474A9E  +
cmp word ptr [esi+0Ch] 7Fh +
jnz loc_474A82  +
push 200h  +
call sub_488C2D  +
mov ecx eax +
add esp 4 +
mov [ebp+var_4] ecx +
test ecx ecx +
jz loc_474A72  +
mov dword ptr [ecx] 0 +
jmp loc_474A74  +
xor ecx ecx +
mov eax [esi+10h] +
mov [ecx] eax +
xor eax eax +
mov [esi+10h] ecx +
mov [esi+0Ch] ax +
movsx edx word ptr [esi+0Ch] +
mov ecx [esi+10h] +
mov eax [ebp+arg_0] +
mov [ecx+edx*4+4] eax +
inc word ptr [esi+0Ch]  +
inc dword ptr [esi+8]  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx [ebp+arg_0] +
call sub_479590  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA140  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
test esi esi +
jz loc_474B12  +
cmp dword ptr [esi+4] 80000000h +
jnb loc_474B12  +
mov [ebp+var_4] 0 +
call sub_47EE60  +
push esi  +
mov ecx [eax] +
lea eax [ecx-4] +
neg ecx  +
sbb ecx ecx +
and ecx eax +
jnz loc_474B26  +
push esi  +
push offset aIvcautorelease  +
call sub_47A700  +
add esp 0Ch +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
call sub_474A40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [esi+14h] 0 +
jnz loc_474B94  +
call loc_474BA0  +
mov byte ptr [esi+0Eh] 0 +
pop esi  +
retn   +
mov eax [esi] +
push 1  +
call dword ptr [eax]  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp-4] esi +
mov ebx [esi+10h] +
mov dword ptr [esi+10h] 0 +
call sub_47EE60  +
mov edi eax +
mov ecx [edi] +
test ecx ecx +
jz loc_474BD7  +
add ecx 0FFFFFFFCh +
jz loc_474BD7  +
cmp esi ecx +
jz loc_474BD7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
jmp loc_474BC0  +
***
movsx edi word ptr [esi+0Ch] +
test edi edi +
jle loc_474BF6  +
lea esi [ebx+4] +
mov ecx [esi] +
call sub_479590  +
lea esi [esi+4] +
sub edi 1 +
jnz loc_474BE7  +
mov esi [ebx] +
test esi esi +
jz loc_474C13  +
push 200h  +
push ebx  +
call sub_488C60  +
add esp 8 +
mov ebx esi +
mov edi 7Fh +
jmp loc_474BE0  +
***
mov ecx [ebp-4] +
xor eax eax +
pop edi  +
pop esi  +
mov dword ptr [ecx+18h] 0 +
mov [ecx+0Ch] ax +
mov [ecx+8] eax +
lea eax [ecx+18h] +
mov [ecx+10h] eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA172  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_47EE60  +
mov esi [eax] +
lea ecx [esi-4] +
neg esi  +
sbb esi esi +
and esi ecx +
jz loc_474C92  +
cmp byte ptr [esi+0Eh] 0 +
jnz loc_474C92  +
mov byte ptr [esi+0Eh] 1 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 218h  +
call sub_488C2D  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_474CC5  +
push esi  +
mov ecx eax +
call sub_4748E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_474D0B  +
mov eax [edi] +
mov ecx edi +
push dword ptr [ebp+8]  +
call dword ptr [eax+10h]  +
push edi  +
push dword ptr [ebp+8]  +
push eax  +
call sub_47ECA0  +
add esp 0Ch +
mov ecx eax +
mov edx [eax] +
pop edi  +
pop ebp  +
jmp dword ptr [edx+14h]  +
***
call sub_47C0A0  +
push edi  +
mov edi ecx +
mov eax 1 +
xchg eax [edi] +
cmp eax 1 +
jnz loc_474D8F  +
push ebx  +
mov ebx ds:SwitchToThread +
push esi  +
rcr dword ptr [esi+5Bh] cl +
pop edi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA1A0  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-10h] ebx +
mov eax [ebp+8] +
mov [ebp-1Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp-18h] eax +
mov dword ptr [ebp-24h] offset off_4CE8BC +
lea ecx [ebp-24h] +
mov dword ptr [ebp-4] 0 +
call sub_4785D0  +
mov edi eax +
mov [ebp-14h] ebx +
mov ecx ebx +
and edi 1FFh +
call loc_474D40  +
mov esi [ebp-10h] +
mov ecx edi +
shl ecx 4 +
add ebx 8 +
add ebx ecx +
mov byte ptr [ebp-4] 1 +
mov eax [ebx+8] +
test eax eax +
jz loc_474E9D  +
mov ecx [ebp-18h] +
cmp ecx [ebx+0Ch] +
jnz loc_474E85  +
mov edx [ebp-1Ch] +
lea esi [ecx+1] +
sub esi 4 +
jb loc_474E41  +
mov ecx [edx] +
cmp ecx [eax] +
jnz loc_474E4A  +
add edx 4 +
add eax 4 +
sub esi 4 +
jnb loc_474E30  +
cmp esi 0FFFFFFFCh +
jz loc_474EEF  +
mov cl [edx] +
cmp cl [eax] +
jnz loc_474E7F  +
cmp esi 0FFFFFFFDh +
jz loc_474EEF  +
mov cl [edx+1] +
cmp cl [eax+1] +
jnz loc_474E7F  +
cmp esi 0FFFFFFFEh +
jz loc_474EEF  +
mov cl [edx+2] +
cmp cl [eax+2] +
jnz loc_474E7F  +
cmp esi 0FFFFFFFFh +
jz loc_474EEF  +
mov cl [edx+3] +
cmp cl [eax+3] +
jz loc_474EEF  +
mov ecx [ebp-18h] +
mov esi [ebp-10h] +
inc edi  +
and edi 1FFh +
mov ebx edi +
shl ebx 4 +
add ebx 8 +
add ebx esi +
mov eax [ebx+8] +
test eax eax +
jnz loc_474E20  +
cmp dword ptr [esi+4] 180h +
jge loc_474EF4  +
movzx eax ds:byte_4CF59D +
push eax  +
push ebx  +
push 10h  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp-14h] eax +
test eax eax +
jz loc_474ED2  +
mov ecx [ebp+8] +
mov [eax+8] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] offset off_4CE8BC +
inc dword ptr [esi+4]  +
xor ecx ecx +
xchg ecx [esi] +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov esi [ebp-10h] +
jmp loc_474ED5  +
***
push offset aLiteralCacheOv  +
push offset aVcfoundationIm  +
call sub_47ECE0  +
push [ebp+arg_4]  +
mov ecx offset unk_4F3210 +
push [ebp+arg_0]  +
call loc_474DA0  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA1D0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_474F67  +
call sub_47C0A0  +
push ecx  +
lea ecx [ebp+var_28] +
call sub_47AC20  +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] 0 +
call dword ptr [eax+24h]  +
push 0  +
mov ebx eax +
push 0  +
push ebx  +
call ds:GetEnvironmentVariableW  +
mov edi eax +
test edi edi +
jnz loc_474FD2  +
call ds:GetLastError  +
mov ecx eax +
sub ecx 0CBh +
jz loc_474FC5  +
sub ecx 1Fh +
jz loc_474FB2  +
push esi  +
push offset aGetenvironment  +
push eax  +
call loc_480DD0  +
push 0  +
push offset unk_4DE8C5  +
call sub_474F10  +
add esp 8 +
mov esi eax +
jmp loc_47500E  +
lea ecx [ebp+var_28] +
call sub_47AC40  +
mov eax [ebp+arg_4] +
jmp loc_475018  +
lea eax [edi-1] +
push eax  +
lea ecx [ebp+var_24] +
call sub_47F5F0  +
mov ecx [ebp+var_20] +
xor edx edx +
mov eax [ebp+var_1C] +
push edi  +
mov byte ptr [ebp+var_4] 1 +
mov [ecx+eax*2] dx +
push [ebp+var_20]  +
push ebx  +
call loc_4802C0  +
add esp 0Ch +
lea ecx [ebp+var_24] +
push eax  +
call sub_47FDE0  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_47F670  +
lea ecx [ebp+var_28] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-20Ch] +
push 0  +
push 1Ah  +
push eax  +
call sub_480910  +
add esp 0Ch +
test eax eax +
jz loc_47509C  +
lea eax [ebp-20Ch] +
push eax  +
call sub_478790  +
add esp 4 +
test esi esi +
jz loc_47508B  +
push esi  +
push eax  +
call loc_479750  +
add esp 8 +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aGetappdatadire  +
call loc_479FD0  +
mov eax [ecx] +
call dword ptr [eax+3Ch]  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_4750C9  +
push ecx  +
push eax  +
call loc_479750  +
add esp 8 +
pop ebp  +
retn 4  +
***
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5218 +
cmp eax [ecx+4] +
jg loc_4750F2  +
mov eax offset off_4EEEE8 +
retn   +
push offset dword_4F5218  +
call sub_489058  +
add esp 4 +
cmp dword_4F5218 0FFFFFFFFh +
jnz loc_4750EC  +
push offset loc_4BBDB0  +
call sub_488F0F  +
push offset dword_4F5218  +
call sub_489019  +
add esp 8 +
jmp loc_4750EC  +
***
sub esp 20Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+var_20C] +
push eax  +
push 0  +
call loc_4803C0  +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_4787D0  +
mov ecx [ebp+var_4] +
add esp 14h +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_474F10  +
add esp 8 +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA208  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-18h] ebx +
push ebx  +
lea ecx [ebp-1Ch] +
call sub_47AC20  +
cmp dword ptr [ebx+8] 0 +
mov dword ptr [ebp-4] 0 +
jnz loc_475252  +
lea eax [ebp-10h] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call loc_480090  +
mov esi eax +
mov [ebp-14h] esi +
call sub_480C90  +
push eax  +
push 1  +
push esi  +
call sub_47ECA0  +
push dword ptr [ebp-10h]  +
call sub_47BCF0  +
xor esi esi +
add esp 18h +
mov edi eax +
cmp [ebp-10h] esi +
jle loc_475234  +
mov ebx [ebp-14h] +
push dword ptr [ebx+esi*4]  +
call sub_478790  +
add esp 4 +
mov [ebp-14h] eax +
mov eax [edi] +
lea ecx [ebp-14h] +
push ecx  +
push 1  +
mov ecx edi +
call dword ptr [eax+30h]  +
inc esi  +
cmp esi [ebp-10h] +
jl loc_475210  +
mov ebx [ebp-18h] +
mov ecx [ebx+8] +
cmp ecx edi +
jz loc_475252  +
call sub_474AB0  +
test edi edi +
jz loc_47524D  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_47524F  +
xor eax eax +
mov [ebx+8] eax +
mov esi [ebx+8] +
lea ecx [ebp-1Ch] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jz loc_4752D0  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_4752D5  +
push 2  +
call sub_4975B1  +
add esp 4 +
mov ecx edi +
push eax  +
mov eax [edi] +
call dword ptr [eax+24h]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
call sub_4A12B3  +
add esp 0Ch +
test eax eax +
jz loc_4752DA  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
call sub_47C0A0  +
call sub_497984  +
push edi  +
push esi  +
push offset a_wfreopen@@Std  +
push dword ptr [eax]  +
call loc_47F380  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jz loc_475330  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_475335  +
push 0  +
call sub_4975B1  +
add esp 4 +
mov ecx edi +
push eax  +
mov eax [edi] +
call dword ptr [eax+24h]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
call sub_4A12B3  +
add esp 0Ch +
test eax eax +
jz loc_47533A  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
call sub_47C0A0  +
call sub_497984  +
push edi  +
push esi  +
push offset a_wfreopen@@S_0  +
push dword ptr [eax]  +
call loc_47F380  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jz loc_475390  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_475395  +
push 1  +
call sub_4975B1  +
add esp 4 +
mov ecx edi +
push eax  +
mov eax [edi] +
call dword ptr [eax+24h]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
call sub_4A12B3  +
add esp 0Ch +
test eax eax +
jz loc_47539A  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
call sub_47C0A0  +
call sub_497984  +
push edi  +
push esi  +
push offset a_wfreopen@@S_1  +
push dword ptr [eax]  +
call loc_47F380  +
push 0FFFFFFFFh  +
push offset loc_4BA238  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_4753DF  +
call sub_47C0A0  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov ecx [ebp+arg_4] +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_4753FD  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
jmp loc_4753FF  +
xor eax eax +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
call loc_480680  +
add esp 8 +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BA238  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_47545F  +
call sub_47C0A0  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] 0 +
call dword ptr [eax+24h]  +
push eax  +
call loc_480620  +
add esp 4 +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA278  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
push ecx  +
lea ecx [ebp+var_20] +
call sub_47AC20  +
push 0  +
mov [ebp+var_4] 0 +
call sub_47C740  +
add esp 4 +
mov ebx eax +
call loc_4802A0  +
mov [ebp+var_1C] eax +
mov esi eax +
mov byte ptr [ebp+var_4] 1 +
cmp word ptr [esi] 0 +
jz loc_47559C  +
push 3Dh  +
push esi  +
call sub_48D5A1  +
mov edi eax +
add esp 8 +
test edi edi +
jz loc_475569  +
cmp edi esi +
jz loc_475569  +
mov ecx edi +
lea eax [ebp+var_18] +
sub ecx esi +
sar ecx 1 +
push ecx  +
push esi  +
push eax  +
call loc_477CC0  +
add esp 0Ch +
lea eax [edi+2] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call loc_477C70  +
add esp 8 +
push [ebp+var_14]  +
mov eax [ebx] +
mov ecx ebx +
push [ebp+var_18]  +
mov byte ptr [ebp+var_4] 3 +
call dword ptr [eax+24h]  +
mov ecx [ebp+var_14] +
test ecx ecx +
jz loc_475559  +
call sub_479590  +
mov ecx [ebp+var_18] +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_475569  +
call sub_479590  +
mov eax esi +
lea edx [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_475570  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2] +
add esi 2 +
jmp loc_4754F5  +
push [ebp+var_1C]  +
call ds:FreeEnvironmentStringsW  +
push 0  +
push 0  +
call sub_48D64F  +
push [ebp+var_1C]  +
call ds:FreeEnvironmentStringsW  +
lea ecx [ebp+var_20] +
call sub_47AC40  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA2A8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
push 0  +
call loc_480480  +
mov esi eax +
add esp 8 +
lea ecx [esi-1] +
push ecx  +
lea ecx [ebp+var_24] +
call sub_47F5F0  +
mov edx [ebp+var_20] +
xor eax eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_4] 0 +
mov [edx+ecx*2] ax +
push [ebp+var_20]  +
push esi  +
call loc_480480  +
add esp 8 +
lea ecx [ebp+var_24] +
push eax  +
call sub_47FDE0  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_47F670  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi ecx +
push 0  +
push 0Bh  +
push offset aUserprofile  +
mov esi [edi] +
call sub_474F10  +
add esp 8 +
mov ecx edi +
push eax  +
call dword ptr [esi+28h]  +
pop edi  +
pop esi  +
test eax eax +
jnz locret_4756A2  +
push 3  +
push offset off_4CEA24  +
call sub_474F10  +
add esp 8 +
retn   +
***
sub esp 20Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+var_20C] +
mov [ebp+var_20C] 101h +
push eax  +
lea eax [ebp+var_208] +
push eax  +
call loc_4804E0  +
lea eax [ebp+var_208] +
push eax  +
call sub_478790  +
mov ecx [ebp+var_4] +
add esp 0Ch +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA2E0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_47AC20  +
push 0  +
push 0  +
mov [ebp+var_4] 0 +
call loc_480270  +
mov esi eax +
add esp 8 +
lea ecx [esi-1] +
push ecx  +
lea ecx [ebp+var_24] +
call sub_47F5F0  +
mov edx [ebp+var_20] +
xor eax eax +
mov ecx [ebp+var_1C] +
mov byte ptr [ebp+var_4] 1 +
mov [edx+ecx*2] ax +
push [ebp+var_20]  +
push esi  +
call loc_480270  +
add esp 8 +
lea ecx [ebp+var_24] +
push eax  +
call sub_47FDE0  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_47F670  +
lea ecx [ebp+var_28] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp sub_47F670  +
***
push esi  +
mov esi ecx +
call sub_47F670  +
test [ebp+arg_0] 1 +
jz loc_4757DF  +
push 214h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+8] +
call sub_47F670  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47582D  +
test al 4 +
jnz loc_47581F  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 21Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
mov esi [edi] +
call dword ptr [esi+18h]  +
push eax  +
mov ecx edi +
call dword ptr [esi+4Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_475886  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov edx [edi] +
mov ecx edi +
push eax  +
push 0  +
push esi  +
call dword ptr [edx+8]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
mov eax [esi+8] +
lea ecx [esi+8] +
push [ebp+arg_0]  +
call dword ptr [eax+0Ch]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
call loc_47FC80  +
pop ebp  +
retn 0Ch  +
***
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
call loc_47FCD0  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_47591B  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_475903  +
sub eax edx +
mov ecx edi +
mov edx [edi] +
push eax  +
push esi  +
call dword ptr [edx+10h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push esi  +
push edi  +
mov edi ecx +
lea eax [ebp+arg_0] +
push 1  +
push eax  +
mov esi [edi] +
call dword ptr [esi+18h]  +
push eax  +
mov ecx edi +
call dword ptr [esi+40h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call loc_481890  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+0Ch] +
mov edx [ecx+10h] +
push esi  +
xor esi esi +
mov [eax+edx*2] si +
mov eax [ecx+0Ch] +
pop esi  +
retn   +
***
mov dword ptr [ecx+10h] 0 +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA335  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_4] +
mov [ebp+var_10] 0 +
test edi edi +
jns loc_4759DA  +
push edi  +
call loc_47C0B0  +
push 21Ch  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+arg_4] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_475A24  +
push 0FFh  +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_4CEA80 +
call sub_47F5C0  +
mov dword ptr [esi+8] offset off_4CEA68 +
mov byte ptr [ebp+var_4] 2 +
test edi edi +
jle loc_475A26  +
push edi  +
lea ecx [esi+8] +
call sub_47FDC0  +
jmp loc_475A26  +
xor esi esi +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 8 +
mov [ebp+var_4] 0 +
call sub_475A60  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push dword ptr [ecx+8]  +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
call sub_47FA80  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call loc_47FB00  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_475B2F  +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_475B34  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
mov [ebp-4] eax +
mov dword ptr [ebp+0Ch] 0 +
call dword ptr [edx+18h]  +
push eax  +
push 0  +
push edi  +
lea eax [ebp-0Ch] +
mov ecx esi +
push eax  +
call loc_477FC0  +
mov edi [eax] +
mov ecx [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_475B23  +
push dword ptr [ebp-33h]  +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
call sub_47C0A0  +
push ebp  +
mov ebp esp +
mov eax [ecx+10h] +
mov edx [ebp+8] +
cmp edx eax +
jnb loc_475B58  +
mov eax [ecx+0Ch] +
mov ax [eax+edx*2] +
pop ebp  +
retn 4  +
***
push eax  +
push edx  +
call loc_47C080  +
int 3  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_475B89  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov edx [edi] +
mov ecx edi +
push eax  +
push 0  +
push esi  +
push dword ptr [ebp+8]  +
call dword ptr [edx+48h]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
test esi esi +
jz loc_475BB9  +
xor eax eax +
cmp [esi] ax +
jz loc_475BAA  +
inc eax  +
cmp word ptr [esi+eax*2] 0 +
jnz loc_475BA2  +
mov edx [ecx] +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
call dword ptr [edx+40h]  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
push esi  +
push [ebp+arg_C]  +
mov esi ecx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
lea ecx [esi+8] +
push [ebp+arg_0]  +
call loc_47FC80  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call loc_47FCD0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call loc_47FD30  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx] +
push esi  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_0]  +
mov esi eax +
mov ecx esi +
mov edi [esi] +
call dword ptr [edi+18h]  +
push eax  +
mov ecx esi +
call dword ptr [edi+4Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_4759A0  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_475C8F  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea ecx [esi+8] +
call loc_47FE30  +
mov eax esi +
pop esi  +
retn   +
***
mov edx [ebp+arg_4] +
push esi  +
cmp word ptr [edx] 0 +
jnz loc_475CF1  +
xor eax eax +
jmp loc_475D05  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_475CF6  +
sub eax esi +
sar eax 1 +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx+14h] 8 +
lea esi [ecx+10h] +
jb loc_475D13  +
mov ecx [ecx] +
push eax  +
push edx  +
push dword ptr [esi]  +
push ecx  +
call sub_40D8F0  +
add esp 10h +
test eax eax +
setz al  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA369  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-10h] 0 +
mov esi [ebp+8] +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_475D86  +
mov eax [esi] +
jmp loc_475D88  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov edi [ebp+10h] +
mov eax [ebp+0Ch] +
mov [ebp-4] ecx +
mov dword ptr [ebp-10h] 1 +
mov ebx [eax+10h] +
cmp [edi] cx +
jz loc_475DBF  +
mov ecx edi +
lea edx [ecx+2] +
retf 0F9D1h  +
***
lea eax [ecx+ebx] +
mov ebx [esi+10h] +
cmp ebx eax +
ja loc_475DF1  +
cmp [esi+14h] eax +
jz loc_475DF1  +
push 1  +
push eax  +
mov ecx esi +
call loc_40BE70  +
test al al +
jz loc_475DF1  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] ebx +
jb loc_475DE9  +
mov eax [esi] +
jmp loc_475DEB  +
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call loc_40C5C0  +
cmp word ptr [edi] 0 +
jnz loc_475E09  +
xor ecx ecx +
jmp loc_475E1F  +
mov ecx edi +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_475E10  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx esi +
call loc_40C9D0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_4] +
sub ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+8] +
sub esi [edi] +
cmp esi ebx +
jnb loc_475EA2  +
mov eax esi +
xor edx edx +
shr eax 1 +
mov ecx eax +
add eax esi +
not ecx  +
cmp ecx esi +
mov esi ebx +
mov ecx edi +
cmovnb edx eax +
cmp edx ebx +
cmovnb esi edx +
call loc_414900  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
test esi esi +
jz loc_475EA2  +
push esi  +
mov ecx edi +
call loc_4039B0  +
mov [edi] eax +
mov [edi+4] eax +
mov eax [edi] +
add eax esi +
mov [edi+8] eax +
mov esi [edi] +
push ebx  +
push [ebp+arg_0]  +
push esi  +
call loc_48B430  +
add esp 0Ch +
lea eax [ebx+esi] +
mov [edi+4] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4BA390  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
lea eax [ebp+arg_8] +
push eax  +
lea ecx [ebp+arg_0] +
call sub_477930  +
test al al +
jnz loc_476053  +
mov edx [ebp+arg_0] +
cmp [ebp+arg_4] al +
jnz loc_475F4F  +
test edx edx +
jz loc_475F46  +
mov eax [edx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_475F2D  +
mov eax [edx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_475F2D  +
movzx eax byte ptr [ecx] +
jmp loc_475F37  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+18h]  +
mov edx [ebp+arg_0] +
cmp eax 0FFFFFFFFh +
setz cl  +
test cl cl +
jnz loc_475F46  +
mov [ebp+arg_5] al +
jmp loc_475F4B  +
xor edx edx +
mov [ebp+arg_0] edx +
mov [ebp+arg_4] 1 +
mov ecx [esi+10h] +
mov eax ecx +
mov bl [ebp+arg_5] +
not eax  +
cmp eax 1 +
ja loc_475F68  +
push offset aStringTooLong  +
call sub_489DF7  +
lea edi [ecx+1] +
cmp edi 0FFFFFFFEh +
jbe loc_475F7A  +
push offset aStringTooLong  +
call sub_489DF7  +
cmp [esi+14h] edi +
jnb loc_475F8A  +
push ecx  +
push edi  +
mov ecx esi +
call sub_4037F0  +
jmp loc_475FA0  +
test edi edi +
jnz loc_475FA7  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_475F9B  +
mov eax [esi] +
jmp loc_475F9D  +
mov eax esi +
mov byte ptr [eax] 0 +
mov edx [ebp+arg_0] +
test edi edi +
jz loc_475FCF  +
cmp dword ptr [esi+14h] 10h +
mov ecx [esi+10h] +
jb loc_475FB4  +
mov eax [esi] +
jmp loc_475FB6  +
mov eax esi +
mov [eax+ecx] bl +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_475FC6  +
mov eax [esi] +
jmp loc_475FC8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_47600B  +
mov eax [edx+1Ch] +
cmp dword ptr [eax] 0 +
jz loc_475FF6  +
mov ecx [edx+2Ch] +
mov eax [ecx] +
test eax eax +
jle loc_475FF6  +
dec eax  +
mov [ecx] eax +
mov ecx [edx+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_475FFD  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+1Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_47600B  +
mov [ebp+arg_4] 0 +
jmp loc_475EF7  +
mov [ebp+arg_0] 0 +
mov [ebp+arg_4] 1 +
jmp loc_475EF7  +
mov esi [ebp-14h] +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_476031  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call loc_403650  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_476047  +
mov esi [esi] +
push 0  +
push 0  +
mov byte ptr [esi] 0 +
call sub_48D64F  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_4BA3B8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push [ebp+var_2C]  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
push [ebp+arg_14]  +
mov [ebp+var_18] 0 +
push [ebp+arg_10]  +
mov byte ptr [ebp+var_28] 0 +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_475EC0  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
sub edx eax +
cmp dword ptr [esi+14h] 10h +
mov [ebp+var_4] 0 +
jb loc_4760DE  +
mov ecx [esi] +
jmp loc_4760E0  +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
lea edi [ebp+var_28] +
sub eax ecx +
push edi  +
push edx  +
push eax  +
mov ecx esi +
call loc_40F7E0  +
mov ecx [ebp+var_14] +
cmp ecx 10h +
jb loc_476107  +
inc ecx  +
push ecx  +
push [ebp+var_28]  +
mov ecx edi +
call loc_403650  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
push 0FFFFFFFFh  +
push offset loc_4BA412  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
cmp [ebp+arg_C] 0 +
mov [ebp+var_10] 0 +
jz loc_476184  +
mov dword ptr [edi] offset unk_4DF2C0 +
mov dword ptr [edi+70h] offset off_4CEEBC +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [edi] +
lea esi [edi+10h] +
push 0  +
push esi  +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4CEEC4 +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-18h] +
mov [ecx+edi-4] eax +
mov eax [edi] +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
mov ecx [eax+4] +
add ecx edi +
call sub_413530  +
mov eax [edi] +
mov [ebp+var_4] 2 +
mov [ebp+arg_C] esi +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_4CEF4C +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_413470  +
lea eax [esi+4] +
mov dword ptr [esi] offset off_4CEF0C +
mov [esi+0Ch] eax +
lea ecx [esi+8] +
lea eax [esi+14h] +
mov byte ptr [esi+48h] 0 +
mov [esi+1Ch] eax +
lea eax [esi+18h] +
mov [esi+20h] eax +
lea eax [esi+24h] +
mov [esi+2Ch] eax +
lea eax [esi+28h] +
mov [esi+30h] eax +
mov byte ptr [esi+3Dh] 0 +
mov [esi+10h] ecx +
mov dword ptr [ecx] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov dword ptr [esi+4Ch] 0 +
mov eax dword_4F64DC +
mov [esi+40h] eax +
mov eax dword_4F64E0 +
mov [esi+44h] eax +
mov dword ptr [esi+38h] 0 +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
mov ecx esi +
or eax 1 +
mov byte ptr [ebp+var_4] 3 +
push eax  +
push [ebp+arg_0]  +
call sub_4779D0  +
test eax eax +
jnz loc_4762F5  +
mov eax [edi] +
mov edx [eax+4] +
mov eax [edx+edi+0Ch] +
add edx edi +
or eax 2 +
mov ecx eax +
or ecx 4 +
cmp dword ptr [edx+38h] 0 +
cmovnz ecx eax +
mov eax [edx+10h] +
and ecx 17h +
mov [edx+0Ch] ecx +
and eax ecx +
jz loc_4762F5  +
test al 4 +
jz loc_4762D9  +
call sub_413730  +
push offset aIos_baseBadbit  +
push eax  +
push 1  +
lea ecx [ebp+var_28] +
call sub_411040  +
push offset unk_4EC0EC  +
lea eax [ebp+var_28] +
mov [ebp+var_28] offset off_4CEE9C +
push eax  +
call sub_48D64F  +
test al 2 +
jz loc_4762E9  +
call sub_413730  +
push offset aIos_baseFailbi  +
jmp loc_4762B9  +
call sub_413730  +
push offset aIos_baseEofbit  +
jmp loc_4762B9  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
push 0FFFFFFFFh  +
push offset loc_4BA4DE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [edi] offset off_4CEF54 +
test ecx ecx +
jz loc_4763A5  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_4763A7  +
xor eax eax +
mov [edi+8] eax +
push 0  +
push 0  +
xorps xmm0 xmm0 +
mov byte ptr [ebp+var_4] 1 +
push 1  +
lea esi [edi+18h] +
movsd qword ptr [edi+10h] xmm0 +
push 1  +
mov [ebp+arg_0] esi +
call loc_480150  +
mov [esi] eax +
push 0  +
push 0  +
push 1  +
lea esi [edi+1Ch] +
mov byte ptr [ebp+var_4] 2 +
push 1  +
mov [ebp+arg_0] esi +
call loc_480150  +
add esp 20h +
mov [esi] eax +
mov eax [ebp+arg_4] +
mov ecx edi +
mov [edi+20h] eax +
call sub_474AB0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA489  +
mov eax large fs:0 +
push eax  +
sub esp 250h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-24Ch] edi +
mov ebx [ebp+8] +
mov [ebp-254h] edi +
mov dword ptr [ebp-4] 0 +
mov dword ptr [edi] offset off_4CEF54 +
test ebx ebx +
jz loc_476469  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
jmp loc_47646B  +
xor eax eax +
mov [edi+8] eax +
push 0  +
push 0  +
xorps xmm0 xmm0 +
mov byte ptr [ebp-4] 1 +
push 1  +
lea esi [edi+18h] +
movsd qword ptr [edi+10h] xmm0 +
push 1  +
mov [ebp-24Ch] esi +
call loc_480150  +
mov [esi] eax +
push 0  +
push 0  +
push 1  +
lea esi [edi+1Ch] +
mov byte ptr [ebp-4] 2 +
push 1  +
mov [ebp-24Ch] esi +
call loc_480150  +
add esp 20h +
mov [esi] eax +
mov dword ptr [edi+20h] 0 +
mov ecx [ebp+0Ch] +
mov edx ecx +
push 0  +
and edx 1 +
mov byte ptr [ebp-4] 4 +
shl edx 1Fh +
push 40000000h  +
push 3  +
mov eax edx +
or eax 40000000h +
and cl 2 +
push 0  +
cmovz eax edx +
mov ecx ebx +
push 0  +
push eax  +
mov eax [ebx] +
call dword ptr [eax+24h]  +
push eax  +
call loc_480180  +
mov ecx [edi+20h] +
add esp 1Ch +
mov esi eax +
cmp ecx 0FFFFFFFFh +
jz loc_47650A  +
push ecx  +
call ds:CloseHandle  +
mov dword ptr [edi+20h] 0FFFFFFFFh +
push offset aCom_adobe_ad_0  +
mov [edi+20h] esi +
call loc_4794B0  +
add esp 4 +
mov ecx ebx +
push eax  +
lea eax [ebp-25Ch] +
push eax  +
call sub_477F90  +
cmp dword ptr [ebp-25Ch] 0FFFFFFFFh +
jz loc_4766CD  +
lea eax [ebp-250h] +
push eax  +
push dword ptr [edi+20h]  +
call ds:GetNamedPipeServerProcessId  +
push dword ptr [ebp-250h]  +
mov dword ptr [ebp-24Ch] 104h +
push 0  +
push 410h  +
call ds:OpenProcess  +
mov esi eax +
test esi esi +
jz loc_4766B5  +
lea eax [ebp-24Ch] +
push eax  +
lea eax [ebp-218h] +
push eax  +
push 0  +
push esi  +
call ds:QueryFullProcessImageNameW  +
push esi  +
mov esi ds:CloseHandle +
call esi  +
lea eax [ebp-248h] +
push eax  +
call sub_476CF0  +
add esp 4 +
push offset WindowName  +
lea ecx [ebp-230h] +
mov byte ptr [ebp-4] 5 +
call loc_40D700  +
cmp word ptr [ebp-218h] 0 +
mov byte ptr [ebp-4] 6 +
jnz loc_4765C2  +
xor ecx ecx +
jmp loc_4765DF  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4765D0  +
sub ecx edx +
sar ecx 1 +
cmp dword ptr [ebp-234h] 8 +
lea eax [ebp-248h] +
push ecx  +
cmovnb eax [ebp-248h] +
lea ecx [ebp-218h] +
push ecx  +
push dword ptr [ebp-238h]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
test eax eax +
jz loc_47665A  +
lea eax [ebp-230h] +
push eax  +
call sub_477500  +
add esp 4 +
test al al +
jz loc_47663B  +
lea eax [ebp-230h] +
push eax  +
lea eax [ebp-218h] +
push eax  +
call sub_40D8A0  +
add esp 8 +
test al al +
jnz loc_47665A  +
push offset aPipeWasCreated  +
call sub_47A700  +
mov eax [edi+20h] +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_47665A  +
push eax  +
call esi  +
mov dword ptr [edi+20h] 0FFFFFFFFh +
mov eax [ebp-21Ch] +
cmp eax 8 +
jb loc_476678  +
inc eax  +
lea ecx [ebp-230h] +
push eax  +
push dword ptr [ebp-230h]  +
call loc_40C2A0  +
xor eax eax +
mov dword ptr [ebp-21Ch] 7 +
mov [ebp-230h] ax +
mov eax [ebp-234h] +
mov dword ptr [ebp-220h] 0 +
cmp eax 8 +
jb loc_4766CD  +
inc eax  +
lea ecx [ebp-248h] +
push eax  +
push dword ptr [ebp-248h]  +
call loc_40C2A0  +
jmp loc_4766CD  +
mov ecx [edi+20h] +
cmp ecx 0FFFFFFFFh +
jz loc_4766CD  +
mov esi ds:CloseHandle +
push ecx  +
call esi  +
mov dword ptr [edi+20h] 0FFFFFFFFh +
mov ecx edi +
call sub_474AB0  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BA4DE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [edi] offset off_4CF034 +
test ecx ecx +
jz loc_476747  +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
jmp loc_476749  +
xor eax eax +
mov [edi+8] eax +
mov eax [ebp+arg_4] +
lea esi [edi+18h] +
push 0  +
mov [edi+0Ch] eax +
mov eax [ebp+arg_8] +
push 0  +
mov [edi+10h] eax +
mov eax [ebp+arg_C] +
push 0  +
push 1  +
mov byte ptr [ebp+var_4] 1 +
mov [edi+14h] eax +
mov [ebp+arg_0] esi +
call loc_480150  +
add esp 10h +
mov [esi] eax +
push [ebp+arg_10]  +
mov byte ptr [edi+1Ch] 0 +
xorps xmm0 xmm0 +
mov dword ptr [edi+20h] 0FFFFFFFFh +
mov ecx edi +
movups oword ptr [edi+24h] xmm0 +
mov byte ptr [ebp+var_4] 2 +
mov dword ptr [edi+34h] 0 +
call loc_476AA0  +
mov ecx edi +
call sub_474AB0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_4B74E0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push dword ptr [esi+18h]  +
mov dword ptr [esi] offset off_4CF034 +
call loc_4806B0  +
add esp 4 +
lea ecx [ebp+var_10] +
push esi  +
call sub_47AC20  +
mov eax [esi+20h] +
cmp eax 0FFFFFFFFh +
jz loc_476816  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+20h] 0FFFFFFFFh +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax [esi+18h] +
cmp eax 0FFFFFFFFh +
jz loc_476834  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+18h] 0FFFFFFFFh +
mov ecx [esi+8] +
test ecx ecx +
jz loc_476840  +
call sub_479590  +
mov dword ptr [esi] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_479ED0  +
test [ebp+arg_0] 1 +
jz loc_47687C  +
push 10h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi ds:CloseHandle +
mov eax [esi+20h] +
cmp eax 0FFFFFFFFh +
jz loc_4768AF  +
push eax  +
call edi  +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov eax [esi+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_4768C1  +
push eax  +
call edi  +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov eax [esi+18h] +
cmp eax 0FFFFFFFFh +
jz loc_4768D3  +
push eax  +
call edi  +
mov dword ptr [esi+18h] 0FFFFFFFFh +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4768DF  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47690C  +
test al 4 +
jnz loc_476901  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push 28h  +
push esi  +
call nullsub_1  +
add esp 8 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_4767C0  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_476951  +
test al 4 +
jnz loc_476946  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 38h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA517  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov ecx [esi+20h] +
mov [ebp+var_4] 0 +
cmp ecx 0FFFFFFFFh +
jnz loc_4769AB  +
push offset aIvcpipeserverA  +
call loc_47A1B0  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_476A48  +
mov eax [esi+18h] +
push 0FFFFFFFFh  +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
push 0  +
push eax  +
push 2  +
mov [ebp+var_18] ecx +
call loc_480870  +
add esp 10h +
cmp eax 102h +
ja loc_4769F9  +
jz loc_4769EF  +
test eax eax +
jz loc_4769A1  +
add eax 0FFFFFF80h +
cmp eax 1 +
ja loc_4769FE  +
push offset aAbandonedMutex  +
call loc_47A1B0  +
push offset aTimeoutDidNotC  +
call loc_47A1B0  +
cmp eax 0FFFFFFFFh +
jz loc_476A37  +
push 0  +
lea eax [ebp+NumberOfBytesTransferred] +
push eax  +
lea eax [esi+24h] +
push eax  +
push dword ptr [esi+20h]  +
call ds:GetOverlappedResult  +
test eax eax +
jnz loc_476A48  +
call ds:GetLastError  +
mov edi eax +
cmp edi 217h +
jz loc_476A48  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+18h]  +
push edi  +
push offset aConnectnamedpi  +
call loc_480FC0  +
call ds:GetLastError  +
push eax  +
push offset aConnectnamed_0  +
call loc_480FC0  +
push 28h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+NumberOfBytesTransferred] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_476A6E  +
push dword ptr [esi+20h]  +
mov ecx eax +
push dword ptr [esi+8]  +
call sub_476360  +
mov edi eax +
jmp loc_476A70  +
xor edi edi +
push 0  +
mov ecx esi +
mov byte ptr [ebp+var_4] 0 +
call loc_476AA0  +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
cmp byte ptr [ebp+8] 0 +
mov edx 40000003h +
push ebx  +
push esi  +
push edi  +
push 0  +
mov edi ecx +
mov eax 40080003h +
push 0FFFFFFFFh  +
cmovz eax edx +
push dword ptr [edi+10h]  +
mov ecx [edi+8] +
push dword ptr [edi+0Ch]  +
push 0FFh  +
push dword ptr [edi+14h]  +
push eax  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push eax  +
call loc_4801C0  +
add esp 20h +
mov [edi+20h] eax +
lea ecx [edi+24h] +
push ecx  +
push eax  +
call ds:ConnectNamedPipe  +
mov esi eax +
call ds:GetLastError  +
push offset aNamedpipeCreat  +
mov ebx eax +
call sub_47A680  +
add esp 4 +
test esi esi +
jnz loc_476B39  +
cmp ebx 217h +
jz loc_476B21  +
cmp ebx 3E5h +
jnz loc_476B39  +
mov byte ptr [edi+1Ch] 0 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push offset aClientConnecte  +
call sub_47A680  +
add esp 4 +
mov byte ptr [edi+1Ch] 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+18h]  +
call ds:GetLastError  +
push eax  +
push offset aConnectnamedpi  +
call loc_480FC0  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push 1  +
push 0FFFFFFFFh  +
push offset asc_4CED64  +
mov ecx esi +
mov [ebp+var_24] ebx +
call loc_40D760  +
cmp eax 0FFFFFFFFh +
jz loc_476BC7  +
push 0FFFFFFFFh  +
inc eax  +
mov ecx esi +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call sub_40BB20  +
mov ebx 1 +
cmp dword ptr [eax+14h] 8 +
lea ecx [eax+10h] +
jb loc_476BAE  +
mov eax [eax] +
push 12h  +
push offset aAdobeipcbrok_3  +
push dword ptr [ecx]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
mov [ebp+var_1D] bl +
test eax eax +
jz loc_476BCB  +
mov [ebp+var_1D] 0 +
test bl 1 +
jz loc_476BE8  +
mov eax [ebp+var_8] +
and ebx 0FFFFFFFEh +
cmp eax 8 +
jb loc_476BE8  +
inc eax  +
lea ecx [ebp+var_1C] +
push eax  +
push [ebp+var_1C]  +
call loc_40C2A0  +
cmp [ebp+var_1D] 0 +
jz loc_476C00  +
pop esi  +
mov al 1 +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
push 1  +
push 0FFFFFFFFh  +
push offset asc_4CED90  +
mov ecx esi +
call loc_40D760  +
cmp eax 0FFFFFFFFh +
jz loc_476C4C  +
push 0FFFFFFFFh  +
inc eax  +
mov ecx esi +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call sub_40BB20  +
or ebx 2 +
cmp dword ptr [eax+14h] 8 +
lea ecx [eax+10h] +
jb loc_476C32  +
mov eax [eax] +
push 12h  +
push offset aAdobeipcbrok_4  +
push dword ptr [ecx]  +
push eax  +
call sub_40D8F0  +
add esp 10h +
mov [ebp+var_1D] 1 +
test eax eax +
jz loc_476C50  +
mov [ebp+var_1D] 0 +
test bl 2 +
jz loc_476C6A  +
mov eax [ebp+var_8] +
cmp eax 8 +
jb loc_476C6A  +
inc eax  +
lea ecx [ebp+var_1C] +
push eax  +
push [ebp+var_1C]  +
call loc_40C2A0  +
cmp [ebp+var_1D] 0 +
mov ecx [ebp+var_4] +
setnz al  +
xor ecx ebp +
pop esi  +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+20h] +
cmp eax 0FFFFFFFFh +
jz loc_476CA9  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+20h] 0FFFFFFFFh +
pop esi  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
push dword ptr [esi+18h]  +
call loc_4806B0  +
add esp 4 +
lea ecx [ebp+var_4] +
push esi  +
call sub_47AC20  +
mov eax [esi+20h] +
cmp eax 0FFFFFFFFh +
jz loc_476CE1  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+20h] 0FFFFFFFFh +
lea ecx [ebp+var_4] +
call sub_47AC40  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA5D5  +
mov eax large fs:0 +
push eax  +
mov eax 101F4h +
call sub_489360  +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
xor eax eax +
mov [ebp+var_10148] 0 +
mov [ebp+var_5C] 7 +
mov [ebp+var_60] 0 +
mov word ptr [ebp+var_70] ax +
push offset aCommonprogra_0  +
mov [ebp+var_4] eax +
call sub_497C8E  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_476D8D  +
cmp word ptr [edx] 0 +
jnz loc_476D6D  +
xor ecx ecx +
push ecx  +
push edx  +
lea ecx [ebp+var_70] +
call loc_40BB60  +
jmp loc_476D9E  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_476D72  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp+var_70] +
call loc_40BB60  +
jmp loc_476D9E  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_4F521C  +
lea ecx [ebp+var_70] +
call loc_40BF90  +
push offset aAdobeVulcanS_0  +
lea eax [ebp+var_70] +
push eax  +
lea eax [ebp+var_B8] +
push eax  +
call loc_475D30  +
add esp 0Ch +
xor eax eax +
mov byte ptr [ebp+var_4] 1 +
push eax  +
push offset unk_4CEBC4  +
lea ecx [ebp+var_58] +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
call loc_40BB60  +
cmp [ebp+var_A4] 8 +
lea eax [ebp+var_B8] +
mov byte ptr [ebp+var_4] 2 +
cmovnb eax [ebp+var_B8] +
push eax  +
lea eax [ebp+var_10130] +
push eax  +
call loc_477C70  +
add esp 8 +
mov ecx [ebp+var_10130] +
mov byte ptr [ebp+var_4] 3 +
mov eax [ecx] +
call dword ptr [eax+14h]  +
lea ecx [ebp+var_E8] +
push ecx  +
push eax  +
call sub_496F36  +
add esp 8 +
test eax eax +
jnz loc_477233  +
mov ecx [ebp+var_10130] +
push 1  +
push 40h  +
push 1  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push eax  +
lea ecx [ebp+var_10200] +
call sub_476130  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
push 2  +
push 0  +
push 0  +
lea ecx [ebp+var_10200] +
mov byte ptr [ebp+var_4] 5 +
call sub_4145B0  +
lea eax [ebp+var_D0] +
push eax  +
lea ecx [ebp+var_10200] +
call sub_4144D0  +
mov esi [ebp+var_30] +
mov ecx [eax+8] +
add ecx [eax] +
cmp esi ecx +
ja loc_476EB3  +
cmp [ebp+var_2C] ecx +
jz loc_476EB3  +
push 1  +
push ecx  +
lea ecx [ebp+var_40] +
call sub_4036A0  +
test al al +
jz loc_476EB3  +
cmp [ebp+var_2C] 10h +
lea eax [ebp+var_40] +
mov [ebp+var_30] esi +
cmovnb eax [ebp+var_40] +
mov byte ptr [esi+eax] 0 +
push 0  +
push 0  +
push 0  +
lea ecx [ebp+var_10200] +
call sub_4145B0  +
mov eax [ebp+var_10200] +
lea ecx [ebp+var_40] +
mov word ptr [ebp+var_10134] 1 +
push [ebp+var_10134]  +
mov eax [eax+4] +
push 0  +
mov edi [ebp+eax+var_101C8] +
test edi edi +
mov eax [ebp+var_30] +
setz byte ptr [ebp+var_1013C]  +
cmp [ebp+var_2C] 10h +
push [ebp+var_1013C]  +
cmovnb ecx [ebp+var_40] +
add eax ecx +
lea ecx [ebp+var_40] +
cmp [ebp+var_2C] 10h +
push edi  +
cmovnb ecx [ebp+var_40] +
push eax  +
push ecx  +
lea ecx [ebp+var_40] +
call sub_476070  +
lea eax [ebp+var_100F0] +
mov [ebp+var_1012C] 0 +
mov [ebp+var_100FC] eax +
lea ecx [ebp+var_100F0] +
neg eax  +
mov [ebp+var_10128] 0 +
and eax 3 +
mov [ebp+var_1011C] 0 +
add eax ecx +
mov [ebp+var_10118] 0 +
mov [ebp+var_100F8] eax +
lea eax [ebp+var_F0] +
mov [ebp+var_10114] 0 +
mov [ebp+var_1010C] 0 +
mov [ebp+var_F0] 0 +
mov [ebp+var_EC] 0 +
mov [ebp+var_100F4] eax +
mov [ebp+var_10144] 0 +
mov [ebp+var_10140] 0 +
mov [ebp+var_1013C] 0 +
cmp [ebp+var_2C] 10h +
lea ecx [ebp+var_10144] +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 7 +
cmovnb eax [ebp+var_40] +
push ecx  +
push eax  +
lea eax [ebp+var_1012C] +
push eax  +
call loc_4773C0  +
add esp 0Ch +
test al al +
jz loc_4771E3  +
push 1  +
push 0  +
push offset aSpecifierman_0  +
lea ecx [ebp+var_1012C] +
call loc_414450  +
push 1  +
push 0  +
push offset aPath_0  +
mov ecx eax +
call loc_414450  +
mov ecx offset unk_4F64E4 +
mov eax [eax+4] +
test eax eax +
cmovnz ecx eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402FD0  +
push 1  +
push 0FFFFFFFFh  +
push offset asc_4CEBE4  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 8 +
call sub_40C120  +
push eax  +
push 0  +
lea eax [ebp+var_D0] +
push eax  +
lea ecx [ebp+var_28] +
call sub_40BD20  +
mov esi eax +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_47707B  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_477060  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov eax [ebp+var_BC] +
mov byte ptr [ebp+var_4] 8 +
cmp eax 10h +
jb loc_47709D  +
inc eax  +
lea ecx [ebp+var_D0] +
push eax  +
push [ebp+var_D0]  +
call loc_403650  +
push 1  +
push 0FFFFFFFFh  +
push offset asc_4CEBE8  +
lea ecx [ebp+var_28] +
call sub_40C120  +
push eax  +
push 0  +
lea eax [ebp+var_D0] +
push eax  +
lea ecx [ebp+var_28] +
call sub_40BD20  +
mov esi eax +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_4770F9  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_4770DE  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call loc_403650  +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_4033D0  +
mov eax [ebp+var_BC] +
mov byte ptr [ebp+var_4] 8 +
cmp eax 10h +
jb loc_47711B  +
inc eax  +
lea ecx [ebp+var_D0] +
push eax  +
push [ebp+var_D0]  +
call loc_403650  +
push 1Ah  +
push offset aIpcboxAdobeipc  +
lea ecx [ebp+var_28] +
call loc_406A00  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_10134] +
push offset aS_0  +
push eax  +
call sub_477DB0  +
add esp 0Ch +
mov ecx [ebp+var_10134] +
mov byte ptr [ebp+var_4] 0Bh +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push eax  +
lea ecx [ebp+var_88] +
call loc_40D700  +
cmp [ebp+var_14] 10h +
lea ecx [ebp+var_E8] +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 0Ch +
cmovnb eax [ebp+var_28] +
push ecx  +
push eax  +
call sub_496F36  +
add esp 8 +
test eax eax +
jnz loc_47719A  +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+var_88] +
push eax  +
lea ecx [ebp+var_58] +
call loc_40BF90  +
mov eax [ebp+var_74] +
cmp eax 8 +
jb loc_4771B5  +
inc eax  +
lea ecx [ebp+var_88] +
push eax  +
push [ebp+var_88]  +
call loc_40C2A0  +
mov ecx [ebp+var_10134] +
xor eax eax +
mov [ebp+var_74] 7 +
mov [ebp+var_78] 0 +
mov word ptr [ebp+var_88] ax +
test ecx ecx +
jz loc_4771DB  +
call sub_479590  +
lea ecx [ebp+var_28] +
call sub_402F10  +
lea ecx [ebp+var_10144] +
call loc_414900  +
lea ecx [ebp+var_100FC] +
mov byte ptr [ebp+var_4] 0Dh +
call loc_414850  +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_477212  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call loc_403650  +
lea ecx [ebp+var_10200] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 3 +
call sub_4119F0  +
lea eax [ebp+var_58] +
push offset unk_4CEC0C  +
push eax  +
call sub_475CE0  +
add esp 8 +
test al al +
jz loc_4772E0  +
push offset aAdobeAdobeDesk  +
lea eax [ebp+var_70] +
push eax  +
lea eax [ebp+var_A0] +
push eax  +
call loc_475D30  +
cmp [ebp+var_8C] 8 +
lea eax [ebp+var_A0] +
mov byte ptr [ebp+var_4] 0Eh +
cmovnb eax [ebp+var_A0] +
push eax  +
lea eax [ebp+var_10134] +
push eax  +
call loc_477C70  +
add esp 14h +
mov ecx [ebp+var_10134] +
mov byte ptr [ebp+var_4] 0Fh +
test ecx ecx +
jz loc_4772D1  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
lea ecx [ebp+var_E8] +
push ecx  +
push eax  +
call sub_496F36  +
add esp 8 +
test eax eax +
jnz loc_4772C2  +
push 0FFFFFFFFh  +
push eax  +
lea eax [ebp+var_A0] +
push eax  +
lea ecx [ebp+var_58] +
call loc_40BF90  +
mov ecx [ebp+var_10134] +
test ecx ecx +
jz loc_4772D1  +
call sub_479590  +
lea ecx [ebp+var_A0] +
mov byte ptr [ebp+var_4] 3 +
call sub_40BC60  +
push 0FFFFFFFFh  +
push 0  +
push offset dword_4F5234  +
lea ecx [ebp+var_70] +
call loc_40C5C0  +
lea eax [ebp+var_58] +
push offset unk_4CEC7C  +
push eax  +
call sub_475CE0  +
add esp 8 +
mov dword ptr [ebx+14h] 7 +
mov dword ptr [ebx+10h] 0 +
mov ecx ebx +
test al al +
jz loc_477320  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+var_70] +
jmp loc_477328  +
xor eax eax +
mov [ebx] ax +
lea eax [ebp+var_58] +
push eax  +
call sub_40C0B0  +
mov ecx [ebp+var_10130] +
test ecx ecx +
jz loc_47733D  +
call sub_479590  +
lea ecx [ebp+var_58] +
call sub_40BC60  +
lea ecx [ebp+var_B8] +
call sub_40BC60  +
lea ecx [ebp+var_70] +
call sub_40BC60  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
call loc_4808A0  +
add esp 8 +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA600  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_47744A  +
mov ecx edx +
mov dword ptr [ebp-4] 0 +
lea esi [ecx+1] +
mov eax offset loc_47744A +
retn   +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push edi  +
mov edi ecx +
mov dword ptr [ebp-18h] 0 +
mov eax [edi+18h] +
lea ebx [edi+18h] +
xorps xmm0 xmm0 +
movups oword ptr [ebp-14h] xmm0 +
mov [ebp-8] eax +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [edi+20h]  +
call ds:ReadFile  +
test eax eax +
jz loc_4774A7  +
mov eax [ebp-4] +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call ds:GetLastError  +
cmp eax 3E5h +
jnz loc_4774D9  +
push ebx  +
mov ecx edi +
call loc_477810  +
push 1  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-18h] +
push eax  +
push dword ptr [edi+20h]  +
call ds:GetOverlappedResult  +
test eax eax +
jnz loc_47749C  +
call ds:GetLastError  +
cmp eax 6Dh +
jnz loc_4774E8  +
pop edi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push eax  +
push offset aReadfile  +
call loc_480FC0  +
push 0FFFFFFFFh  +
push offset loc_4BA62B  +
mov eax large fs:0 +
push eax  +
sub esp 24Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea eax [ebp+Data] +
push 208h  +
push 0  +
push eax  +
mov [ebp+hKey] 0 +
mov [ebp+Type] 1 +
call sub_48CF40  +
add esp 0Ch +
mov [ebp+cbData] 104h +
lea eax [ebp+hKey] +
push eax  +
push 20119h  +
push 0  +
push offset aSoftwareAdob_0  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_4775BE  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push offset aAdobeipcbrok_5  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
test eax eax +
jz loc_4775C5  +
call ds:RegCloseKey  +
xor al al +
jmp loc_477663  +
call ds:RegCloseKey  +
cmp word ptr [ebp+Data] 0 +
jnz loc_4775D9  +
xor ecx ecx +
jmp loc_4775F1  +
lea ecx [ebp+Data] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4775E2  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Data] +
mov ecx esi +
push eax  +
call loc_40BB60  +
cmp dword ptr [esi+14h] 8 +
jb loc_47760A  +
mov eax [esi] +
jmp loc_47760C  +
mov eax esi +
push eax  +
lea eax [ebp+var_250] +
push eax  +
call loc_477C70  +
push esi  +
mov [ebp+var_4] 0 +
call sub_476B60  +
add esp 0Ch +
test al al +
jz loc_477650  +
mov ecx [ebp+var_250] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
lea ecx [ebp+var_248] +
push ecx  +
push eax  +
call sub_496F36  +
add esp 8 +
test eax eax +
jnz loc_477650  +
mov bl 1 +
jmp loc_477652  +
xor bl bl +
mov ecx [ebp+var_250] +
test ecx ecx +
jz loc_477661  +
call sub_479590  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
push 0  +
push 0  +
lea eax [ebp+OutBufferSize] +
push eax  +
push 0  +
push dword ptr [ecx+20h]  +
call sub_4803F0  +
mov eax [ebp+OutBufferSize] +
add esp 14h +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
movsd xmm1 qword ptr [ebp+8] +
xorps xmm0 xmm0 +
comisd xmm0 xmm1 +
ja loc_4776DC  +
movsd qword ptr [ecx+10h] xmm1 +
mov eax ecx +
pop ebp  +
retn 8  +
***
push offset aTimeout0  +
call loc_47A130  +
push 0FFFFFFFFh  +
push offset loc_4BA66F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_47771E  +
call sub_47C0A0  +
push 28h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_477752  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call loc_476410  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA69F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_47779E  +
call sub_47C0A0  +
cmp [ebp+arg_4] 0 +
jge loc_4777AE  +
push offset aSendbuffersize  +
call loc_47A130  +
cmp [ebp+arg_8] 0 +
jge loc_4777BE  +
push offset aRecvbuffersize  +
call loc_47A130  +
push 38h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4777F9  +
push 1  +
push 0  +
push [ebp+arg_8]  +
mov ecx eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_476700  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
movsd xmm1 qword ptr [esi+10h] +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jp loc_47782D  +
or eax 0FFFFFFFFh +
jmp loc_47783D  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
call sub_4800C0  +
add esp 8 +
mov ecx [ebp+8] +
push eax  +
push dword ptr [ecx]  +
call loc_4808A0  +
add esp 8 +
cmp eax 102h +
jz loc_477857  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+1Ch]  +
push offset aPipeOperationT  +
call sub_4822E0  +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi ecx +
mov dword ptr [ebp-28h] 0 +
mov eax [esi+1Ch] +
lea ebx [esi+1Ch] +
xorps xmm0 xmm0 +
movups oword ptr [ebp-24h] xmm0 +
mov [ebp-18h] eax +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [esi+20h]  +
call ds:WriteFile  +
test eax eax +
jz loc_4778B7  +
mov eax [ebp-4] +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call ds:GetLastError  +
cmp eax 3E5h +
jnz loc_4778E9  +
push ebx  +
mov ecx esi +
call loc_477810  +
push 1  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-28h] +
push eax  +
push dword ptr [esi+20h]  +
call ds:GetOverlappedResult  +
test eax eax +
jnz loc_4778AC  +
call ds:GetLastError  +
cmp eax 0E8h +
jnz loc_47791E  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
push 9  +
push offset aWritefile  +
call sub_474F10  +
add esp 8 +
lea ecx [ebp-14h] +
push eax  +
call sub_482220  +
push offset unk_4E9ABC  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push eax  +
push offset aWritefile  +
call loc_480FC0  +
push esi  +
push edi  +
mov edi ecx +
cmp byte ptr [edi+4] 0 +
jnz loc_477972  +
mov ecx [edi] +
test ecx ecx +
jz loc_477968  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_477959  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_477959  +
movzx eax byte ptr [edx] +
jmp loc_47795E  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_477968  +
mov [edi+5] al +
jmp loc_47796E  +
mov dword ptr [edi] 0 +
mov byte ptr [edi+4] 1 +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jnz loc_4779B0  +
mov ecx [esi] +
test ecx ecx +
jz loc_4779A6  +
mov eax [ecx+1Ch] +
mov edx [eax] +
test edx edx +
jz loc_477997  +
mov eax [ecx+2Ch] +
cmp dword ptr [eax] 0 +
jle loc_477997  +
movzx eax byte ptr [edx] +
jmp loc_47799C  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
cmp eax 0FFFFFFFFh +
jz loc_4779A6  +
mov [esi+5] al +
jmp loc_4779AC  +
mov dword ptr [esi] 0 +
mov byte ptr [esi+4] 1 +
cmp dword ptr [edi] 0 +
jnz loc_4779C2  +
cmp dword ptr [esi] 0 +
jz loc_4779C7  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
cmp dword ptr [esi] 0 +
jz loc_4779BA  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA6CE  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_477A93  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_48A51A  +
add esp 0Ch +
test eax eax +
jz loc_477A93  +
push 1  +
push eax  +
mov ecx esi +
call sub_413160  +
lea eax [ebp+var_14] +
mov ecx esi +
push eax  +
call sub_413420  +
push eax  +
mov [ebp+var_4] 0 +
call sub_413790  +
mov edi eax +
add esp 4 +
mov ecx edi +
mov edx [edi] +
mov edx [edx+0Ch] +
call edx  +
test al al +
jz loc_477A55  +
mov dword ptr [esi+38h] 0 +
jmp loc_477A5F  +
mov ecx esi +
mov [esi+38h] edi +
call sub_4133C0  +
mov ecx [ebp+var_10] +
mov [ebp+var_4] 1 +
test ecx ecx +
jz loc_477A7E  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_477A7E  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push ebx  +
mov ebx ecx +
mov ecx [ebx+84h] +
test ecx ecx +
jz loc_477B22  +
mov eax [ebx+88h] +
add eax [ebp+arg_0] +
pop ebx  +
mov ax [ecx+eax*2] +
pop ebp  +
retn 4  +
mov ecx [ebp+arg_0] +
cmp ecx [ebx+94h] +
jnb loc_477B35  +
cmp ecx [ebx+90h] +
jnb loc_477B6E  +
push esi  +
mov esi [ebx+88h] +
push edi  +
mov [ebx+90h] ecx +
lea edi [ecx+40h] +
mov eax [ebx+8Ch] +
cmp eax edi +
cmovb edi eax +
add esi ecx +
mov [ebx+94h] edi +
sub edi ecx +
mov ecx [ebx+80h] +
push edi  +
push esi  +
push ebx  +
mov edx [ecx] +
call dword ptr [edx+1Ch]  +
mov ecx [ebp+arg_0] +
pop edi  +
pop esi  +
sub ecx [ebx+90h] +
mov ax [ebx+ecx*2] +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [ebx] +
call dword ptr [eax+28h]  +
test eax eax +
jnz loc_477BC4  +
mov eax [ebx] +
mov ecx ebx +
push esi  +
push edi  +
call dword ptr [eax+18h]  +
mov edi eax +
call sub_47BF80  +
push eax  +
lea ecx ds:2[edi*2] +
push ecx  +
call loc_474CE0  +
mov edx [ebx] +
add esp 8 +
mov esi eax +
mov ecx ebx +
push edi  +
push 0  +
push esi  +
call dword ptr [edx+1Ch]  +
xor eax eax +
mov [esi+edi*2] ax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_477BF5  +
push esi  +
push eax  +
push ecx  +
call sub_4823E0  +
add esp 8 +
mov esi eax +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push ecx  +
push esi  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call loc_477C30  +
add esp 8 +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_477C26  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test esi esi +
jz loc_477C62  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
push eax  +
push 0  +
push esi  +
call sub_4824B0  +
mov ecx [ebp+8] +
add esp 0Ch +
mov [ecx] eax +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_477CAC  +
xor eax eax +
cmp [ecx] ax +
jz loc_477C98  +
inc eax  +
cmp word ptr [ecx+eax*2] 0 +
jnz loc_477C90  +
push eax  +
push ecx  +
push dword ptr [ebp+8]  +
call loc_477CC0  +
mov eax [ebp+8] +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+10h] +
mov ecx [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test eax eax +
jz loc_477CDB  +
js loc_477CF0  +
test ecx ecx +
jz loc_477CF0  +
push eax  +
push ecx  +
call sub_482550  +
mov ecx [ebp+8] +
add esp 8 +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push eax  +
call sub_47C030  +
push 0FFFFFFFFh  +
push offset loc_4BB11B  +
mov eax large fs:0 +
push eax  +
sub esp 21Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+var_224] +
mov edi [ebp+arg_4] +
mov esi [ebp+arg_8] +
push 0FFh  +
mov [ebp+var_228] 0 +
call sub_47F5C0  +
mov [ebp+var_224] offset off_4CEA68 +
push esi  +
push edi  +
lea ecx [ebp+var_224] +
mov [ebp+var_4] 0 +
call loc_481890  +
push ebx  +
lea ecx [ebp+var_224] +
call sub_475A60  +
lea ecx [ebp+var_224] +
call sub_47F670  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_8] +
mov [ebp+var_4] 0 +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_477D00  +
mov eax [ebp+arg_0] +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_477E1E  +
mov edx [ebp+10h] +
test edx edx +
jz loc_477E23  +
xor eax eax +
cmp [ecx] ax +
jz loc_477E08  +
inc eax  +
cmp word ptr [ecx+eax*2] 0 +
jnz loc_477E00  +
push edx  +
push eax  +
push ecx  +
call sub_4825B0  +
mov ecx [ebp+8] +
add esp 0Ch +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
call sub_47C0A0  +
push ecx  +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
call sub_481250  +
push eax  +
push 20h  +
lea eax [ebp+var_24] +
mov ecx edi +
push eax  +
call dword ptr [esi+30h]  +
lea eax [ebp+var_24] +
push 0  +
push eax  +
call sub_4A1A34  +
mov ecx [ebp+var_4] +
add esp 8 +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 134h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push edi  +
mov edi ecx +
cmp edi eax +
jnz loc_477EC0  +
mov al 1 +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_477F6F  +
mov edx [edi] +
mov ecx edi +
push ebx  +
call dword ptr [edx+18h]  +
mov edx [esi] +
mov ecx esi +
mov ebx eax +
call dword ptr [edx+18h]  +
cmp ebx eax +
jnz loc_477F5A  +
push edi  +
lea ecx [ebp-134h] +
call sub_477AB0  +
push esi  +
lea ecx [ebp-9Ch] +
call sub_477AB0  +
xor esi esi +
test ebx ebx +
jle loc_477F45  +
push esi  +
lea ecx [ebp-9Ch] +
call sub_477B00  +
push esi  +
lea ecx [ebp-134h] +
mov di ax +
call sub_477B00  +
cmp ax di +
jnz loc_477F5A  +
inc esi  +
cmp esi ebx +
jl loc_477F20  +
pop ebx  +
pop esi  +
mov al 1 +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop ebx  +
pop esi  +
xor al al +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp-4] +
xor al al +
pop esi  +
xor ecx ebp +
pop edi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+18h]  +
push eax  +
push 0  +
push [ebp+arg_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call loc_477FC0  +
mov eax [ebp+arg_0] +
pop edi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 154h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
mov [ebp-140h] eax +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov edx [ebp+10h] +
mov ecx eax +
mov ebx [ebp+14h] +
mov [ebp-154h] edx +
mov [ebp-13Ch] ebx +
mov [ebp-150h] ebx +
cmp edx ecx +
ja loc_478249  +
sub eax edx +
cmp ebx eax +
ja loc_478249  +
test esi esi +
jz loc_478244  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+18h]  +
mov ebx eax +
mov [ebp-148h] ebx +
cmp ebx [ebp-13Ch] +
jle loc_47805A  +
mov eax [ebp-140h] +
pop edi  +
pop esi  +
pop ebx  +
mov dword ptr [eax] 0FFFFFFFFh +
mov dword ptr [eax+4] 0 +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [edi] +
mov ecx edi +
mov [ebp-0B4h] edi +
call dword ptr [eax+28h]  +
mov [ebp-0B0h] eax +
mov ecx esi +
mov eax [ebp+10h] +
mov [ebp-0ACh] eax +
mov eax [ebp+14h] +
mov [ebp-0A8h] eax +
mov eax [esi] +
mov dword ptr [ebp-0A4h] 0 +
mov dword ptr [ebp-0A0h] 0 +
mov [ebp-1Ch] esi +
call dword ptr [eax+28h]  +
mov [ebp-18h] eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+18h]  +
xor edx edx +
mov [ebp-138h] eax +
xor edi edi +
mov [ebp-10h] eax +
mov eax [ebp-13Ch] +
xor ecx ecx +
mov [ebp-14h] edi +
mov [ebp-0Ch] edx +
mov [ebp-8] edx +
mov [ebp-14Ch] ecx +
test eax eax +
jle loc_478034  +
xor esi esi +
test ebx ebx +
jle loc_478207  +
mov eax 40h +
mov ebx ecx +
sub eax ecx +
mov [ebp-150h] eax +
mov ecx [ebp-0B0h] +
test ecx ecx +
jz loc_478108  +
mov eax [ebp-0ACh] +
add eax ebx +
movzx eax word ptr [ecx+eax*2] +
jmp loc_478171  +
cmp ebx [ebp-0A0h] +
jnb loc_478118  +
cmp ebx [ebp-0A4h] +
jnb loc_478161  +
mov ecx [ebp-0B4h] +
lea edi [ebx+40h] +
cmp [ebp-0A8h] edi +
mov edx [ebp-0ACh] +
cmovb edi [ebp-0A8h] +
add edx ebx +
mov [ebp-0A0h] edi +
sub edi ebx +
push edi  +
mov [ebp-0A4h] ebx +
mov eax [ecx] +
push edx  +
lea edx [ebp-134h] +
push edx  +
call dword ptr [eax+1Ch]  +
mov eax [ebp-10h] +
mov edx [ebp-0Ch] +
mov edi [ebp-14h] +
mov [ebp-138h] eax +
mov eax ebx +
sub eax [ebp-0A4h] +
movzx eax word ptr [ebp+eax*2-134h] +
mov ecx [ebp-18h] +
mov [ebp-144h] eax +
test ecx ecx +
jz loc_478187  +
lea eax [edi+esi] +
movzx eax word ptr [ecx+eax*2] +
jmp loc_4781DE  +
cmp esi [ebp-8] +
jnb loc_478190  +
cmp esi edx +
jnb loc_4781CF  +
mov edi [ebp-150h] +
mov ecx [ebp-1Ch] +
add edi ebx +
cmp [ebp-138h] edi +
mov edx [ebp-14h] +
cmovb edi [ebp-138h] +
add edx esi +
mov [ebp-8] edi +
sub edi esi +
push edi  +
mov [ebp-0Ch] esi +
mov eax [ecx] +
push edx  +
lea edx [ebp-9Ch] +
push edx  +
call dword ptr [eax+1Ch]  +
mov eax [ebp-10h] +
mov edx [ebp-0Ch] +
mov [ebp-138h] eax +
mov edi [ebp-14h] +
mov eax esi +
sub eax edx +
movzx eax word ptr [ebp+eax*2-9Ch] +
cmp [ebp-144h] ax +
jnz loc_4781F5  +
inc esi  +
inc ebx  +
cmp esi [ebp-148h] +
jl loc_4780F0  +
mov ebx [ebp-148h] +
mov ecx [ebp-14Ch] +
mov eax [ebp-13Ch] +
cmp esi ebx +
jz loc_47821F  +
inc ecx  +
mov [ebp-14Ch] ecx +
cmp ecx eax +
jl loc_4780D3  +
jmp loc_478034  +
***
mov eax [ebp+10h] +
add eax ecx +
mov ecx [ebp-140h] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
mov [ecx+4] ebx +
mov ecx [ebp-4] +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_47C0A0  +
push ecx  +
lea eax [ebp-154h] +
push eax  +
call loc_47C050  +
push ecx  +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_478292  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_4782D3  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
push 0  +
push [ebp+arg_0]  +
call dword ptr [edx+1Ch]  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov esi [ebp+0Ch] +
mov edx eax +
mov ecx [ebp+10h] +
mov [ebp-8] esi +
mov [ebp-4] ecx +
cmp esi edx +
ja loc_47838D  +
sub eax esi +
cmp ecx eax +
ja loc_47838D  +
mov ebx [ebp+8] +
test ecx ecx +
jz loc_478335  +
js loc_478386  +
test ebx ebx +
jz loc_478386  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+28h]  +
test eax eax +
jz loc_47835F  +
mov ecx [ebp+10h] +
add ecx ecx +
push ecx  +
mov ecx [ebp+0Ch] +
lea eax [eax+ecx*2] +
push eax  +
push ebx  +
call loc_48C9C0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
xor esi esi +
cmp [ebp+10h] esi +
jbe loc_478356  +
mov eax [ebp+0Ch] +
mov ecx edi +
mov edx [edi] +
add eax esi +
push eax  +
call dword ptr [edx+20h]  +
mov [ebx+esi*2] ax +
inc esi  +
cmp esi [ebp+10h] +
jb loc_478366  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push ecx  +
call sub_47C030  +
push edx  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
push ebp  +
mov ebp esp +
sub esp 134h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_47849E  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov edx [edi] +
mov ecx edi +
mov ebx eax +
call dword ptr [edx+18h]  +
cmp ebx eax +
jle loc_4783EC  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [edi] +
mov ecx edi +
mov [ebp-0B4h] edi +
call dword ptr [eax+28h]  +
mov [ebp-0B0h] eax +
mov ecx esi +
mov eax [esi] +
mov dword ptr [ebp-0ACh] 0 +
mov [ebp-0A8h] ebx +
mov dword ptr [ebp-0A4h] 0 +
mov dword ptr [ebp-0A0h] 0 +
mov [ebp-1Ch] esi +
call dword ptr [eax+28h]  +
mov [ebp-18h] eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+18h]  +
xor esi esi +
mov dword ptr [ebp-14h] 0 +
mov [ebp-10h] eax +
mov dword ptr [ebp-0Ch] 0 +
mov dword ptr [ebp-8] 0 +
test ebx ebx +
jle loc_478489  +
push esi  +
lea ecx [ebp-9Ch] +
call sub_477B00  +
push esi  +
lea ecx [ebp-134h] +
mov di ax +
call sub_477B00  +
cmp ax di +
jnz loc_4783D7  +
inc esi  +
cmp esi ebx +
jl loc_478460  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_4785BE  +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov edx [esi] +
mov ecx esi +
mov [ebp-138h] eax +
call dword ptr [edx+18h]  +
mov ebx eax +
mov eax [ebp-138h] +
cmp ebx eax +
jle loc_478506  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub eax ebx +
mov [ebp-0B4h] edi +
mov [ebp-138h] eax +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+28h]  +
mov [ebp-0B0h] eax +
mov ecx esi +
mov eax [ebp-138h] +
mov [ebp-0ACh] eax +
mov eax [esi] +
mov [ebp-0A8h] ebx +
mov dword ptr [ebp-0A4h] 0 +
mov dword ptr [ebp-0A0h] 0 +
mov [ebp-1Ch] esi +
call dword ptr [eax+28h]  +
mov [ebp-18h] eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+18h]  +
xor esi esi +
mov dword ptr [ebp-14h] 0 +
mov [ebp-10h] eax +
mov dword ptr [ebp-0Ch] 0 +
mov dword ptr [ebp-8] 0 +
test ebx ebx +
jle loc_4785A9  +
push esi  +
lea ecx [ebp-9Ch] +
call sub_477B00  +
push esi  +
lea ecx [ebp-134h] +
mov di ax +
call sub_477B00  +
cmp ax di +
jnz loc_4784F1  +
inc esi  +
cmp esi ebx +
jl loc_478580  +
mov ecx [ebp-4] +
mov al 1 +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ecx] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_28] ecx +
call dword ptr [eax+18h]  +
mov ecx [ebp+var_28] +
lea edx [ebp+var_24] +
mov edi eax +
mov ebx 10h +
cmp edi ebx +
mov esi edi +
mov eax [ecx] +
cmovb ebx edi +
cmp edi 10h +
ja loc_47860F  +
push edi  +
push 0  +
push edx  +
call dword ptr [eax+1Ch]  +
jmp loc_478629  +
push 8  +
push 0  +
push edx  +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+var_28] +
lea eax [edi-8] +
push 8  +
push eax  +
lea eax [ebp+var_14] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+1Ch]  +
xor eax eax +
test ebx ebx +
jz loc_478642  +
nop   +
movzx edx word ptr [ebp+eax*2+var_24] +
inc eax  +
imul esi esi +
add esi edx +
cmp eax ebx +
jb loc_478630  +
and edi 1Fh +
mov eax esi +
mov ecx edi +
shl eax cl +
mov ecx [ebp+var_4] +
add eax esi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
call dword ptr [eax+18h]  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
call sub_475C60  +
add esp 4 +
mov ecx eax +
call sub_475840  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
call sub_481250  +
push eax  +
push 20h  +
lea eax [ebp-24h] +
mov ecx edi +
push eax  +
call dword ptr [esi+30h]  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_4A1A34  +
add esp 8 +
lea eax [ebp-24h] +
pop edi  +
pop esi  +
cmp [ebp-28h] eax +
jz loc_4786DF  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aStrtod  +
fstp  st +
call loc_47F530  +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
call sub_481250  +
push eax  +
push 20h  +
lea eax [ebp-24h] +
mov ecx edi +
push eax  +
call dword ptr [esi+30h]  +
push dword ptr [ebp+8]  +
lea eax [ebp-28h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
call sub_4A10F0  +
add esp 0Ch +
lea ecx [ebp-24h] +
pop edi  +
pop esi  +
cmp [ebp-28h] ecx +
jz loc_478744  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aStrtoll  +
call loc_47F530  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call loc_477C30  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47877F  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call loc_477C70  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_4787BF  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call loc_477CC0  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_478802  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_474F10  +
add esp 8 +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+8] +
push edi  +
mov eax [ebx] +
mov edi [ebp+0Ch] +
sub edi esi +
call dword ptr [eax+18h]  +
mov [ebp-8] esi +
mov [ebp-4] edi +
cmp esi eax +
ja loc_478869  +
mov ecx eax +
sub ecx esi +
cmp edi ecx +
ja loc_478869  +
push edi  +
push esi  +
push ebx  +
call sub_4824B0  +
add esp 0Ch +
mov esi eax +
mov ecx esi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push eax  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
sub esp 8 +
push 0FFFFFFFFh  +
push ecx  +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call loc_477DE0  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_4789A2  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA730  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ecx+8] +
lea esi [ecx+0Ch] +
add eax 3 +
mov dword ptr [ecx] offset off_4CF1E8 +
xor edx edx +
xor edi edi +
lea eax [ecx+eax*4] +
mov ebx eax +
sub ebx esi +
add ebx 3 +
shr ebx 2 +
cmp esi eax +
cmova ebx edx +
test ebx ebx +
jz loc_478A2C  +
mov ecx [esi] +
call sub_479590  +
inc edi  +
lea esi [esi+4] +
cmp edi ebx +
jnz loc_478A02  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov dword ptr [ecx] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_4789B0  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_478A81  +
test al 4 +
jnz loc_478A76  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 0Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+14h]  +
push eax  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call loc_478EE0  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
pop esi  +
setnz al  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push ecx  +
lea eax [ebp-4] +
push eax  +
call loc_478B40  +
add esp 8 +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp-4] +
test ecx ecx +
jz loc_478AE6  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+0Ch] +
mov edx [ebp+10h] +
mov dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_478B1C  +
js loc_478B36  +
test edx edx +
jz loc_478B36  +
xor eax eax +
test ecx ecx +
jle loc_478B1C  +
cmp dword ptr [edx+eax*4] 0 +
jz loc_478B31  +
inc eax  +
cmp eax ecx +
jl loc_478B11  +
push edx  +
push ecx  +
call sub_478C60  +
mov ecx [ebp+8] +
add esp 8 +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push edx  +
push ecx  +
call sub_47C030  +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test esi esi +
jz loc_478B70  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push esi  +
push eax  +
call loc_478B80  +
mov ecx [ebp+8] +
add esp 8 +
mov [ecx] eax +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
movzx eax ds:byte_4CF59C +
push eax  +
lea ecx ds:0[esi*4] +
push ecx  +
push 0Ch  +
mov [ebp+8] ecx +
call sub_47ABD0  +
mov ebx eax +
mov [ebp+8] eax +
add esp 0Ch +
test ebx ebx +
jz loc_478BDA  +
mov dword ptr [ebx] offset off_4CF1E8 +
mov [ebx+8] esi +
jmp loc_478BDF  +
xor ebx ebx +
mov [ebp+8] ebx +
mov [ebp-10h] ebx +
mov ecx [ebp+0Ch] +
lea esi [ebx+0Ch] +
push esi  +
mov dword ptr [ebp-4] 0 +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov eax [ebx+8] +
xor edx edx +
add eax 3 +
xor edi edi +
lea eax [ebx+eax*4] +
mov ecx eax +
sub ecx esi +
add ecx 3 +
shr ecx 2 +
cmp esi eax +
cmova ecx edx +
mov [ebp+0Ch] ecx +
test ecx ecx +
jz loc_478C44  +
mov ebx ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
movzx eax ds:byte_4CF59C +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push eax  +
lea edi ds:0[esi*4] +
push edi  +
push 0Ch  +
mov [ebp+arg_0] edi +
call sub_47ABD0  +
mov ebx eax +
mov [ebp+arg_0] eax +
add esp 0Ch +
test ebx ebx +
jz loc_478C9B  +
mov dword ptr [ebx] offset off_4CF1E8 +
mov [ebx+8] esi +
jmp loc_478CA0  +
xor ebx ebx +
mov [ebp+arg_0] ebx +
push edi  +
push [ebp+arg_4]  +
lea esi [ebx+0Ch] +
push esi  +
call loc_48C9C0  +
mov eax [ebx+8] +
xor edx edx +
add eax 3 +
add esp 0Ch +
xor edi edi +
lea eax [ebx+eax*4] +
mov ecx eax +
sub ecx esi +
add ecx 3 +
shr ecx 2 +
cmp esi eax +
cmova ecx edx +
mov [ebp+var_4] ecx +
test ecx ecx +
jz loc_478CEE  +
mov ebx ecx +
mov ecx [esi] +
call sub_4795C0  +
inc edi  +
lea esi [esi+4] +
cmp edi ebx +
jnz loc_478CD5  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push ebx  +
mov edi ecx +
call sub_479560  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push off_4EEEF4  +
mov [ebp+arg_0] eax +
push ebx  +
call sub_481870  +
xor esi esi +
add esp 0Ch +
cmp [ebp+arg_0] esi +
jle loc_478D51  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+2Ch]  +
push eax  +
push esi  +
push off_4EEEF8  +
push ebx  +
call sub_481870  +
inc esi  +
add esp 10h +
cmp esi [ebp+arg_0] +
jl loc_478D32  +
push off_4EEEFC  +
push ebx  +
call sub_481870  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov eax [ebp+8] +
push edi  +
mov edi ecx +
mov [ebp-8] edi +
cmp edi eax +
jnz loc_478D8C  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push 0  +
push offset off_4EFD10  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
mov [ebp+8] esi +
test esi esi +
jz loc_478E12  +
mov edx [edi] +
mov ecx edi +
push ebx  +
call dword ptr [edx+14h]  +
mov edx [esi] +
mov ebx eax +
mov ecx esi +
mov [ebp-4] ebx +
call dword ptr [edx+14h]  +
cmp eax ebx +
jnz loc_478E07  +
xor esi esi +
test ebx ebx +
jle loc_478DFC  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+2Ch]  +
mov edi eax +
mov eax [ebp+8] +
push esi  +
mov ecx eax +
mov edx [eax] +
mov ebx [edi] +
call dword ptr [edx+2Ch]  +
push eax  +
mov eax [ebx+4] +
mov ecx edi +
call eax  +
test al al +
jz loc_478E07  +
mov edi [ebp-8] +
inc esi  +
cmp esi [ebp-4] +
jl loc_478DD0  +
pop ebx  +
pop esi  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop ebx  +
pop esi  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop esi  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+14h]  +
mov edx [esi] +
mov ecx esi +
push eax  +
push 0  +
push [ebp+arg_0]  +
call dword ptr [edx+28h]  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ecx+8] +
mov eax [ebp+8] +
cmp eax edx +
jnb loc_478E55  +
mov eax [ecx+eax*4+0Ch] +
pop ebp  +
retn 4  +
***
push edx  +
push eax  +
call loc_47C080  +
push ebp  +
mov ebp esp +
sub esp 8 +
mov edx [ebp+10h] +
push ebx  +
mov ebx ecx +
mov [ebp-4] edx +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov esi [ebx+8] +
mov [ebp-8] edi +
cmp edi esi +
ja loc_478EBB  +
mov eax esi +
sub eax edi +
cmp edx eax +
ja loc_478EBB  +
mov ecx [ebp+8] +
test edx edx +
jz loc_478E93  +
js loc_478EB4  +
test ecx ecx +
jz loc_478EB4  +
lea eax ds:0[edx*4] +
add edi 3 +
push eax  +
lea eax [ebx+edi*4] +
push eax  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push edx  +
call sub_47C030  +
push esi  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
jmp dword ptr [eax+14h]  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov eax [ebx] +
call dword ptr [eax+14h]  +
mov esi [ebp+0Ch] +
mov ecx eax +
mov edx [ebp+10h] +
mov [ebp-8] esi +
mov [ebp-4] edx +
cmp esi ecx +
ja loc_478F44  +
sub eax esi +
cmp edx eax +
ja loc_478F44  +
lea edi [edx+esi] +
cmp esi edi +
jge loc_478F2D  +
nop   +
mov eax [ebx] +
mov ecx ebx +
push esi  +
call dword ptr [eax+2Ch]  +
push dword ptr [ebp+8]  +
mov ecx eax +
mov edx [eax] +
mov eax [edx+4] +
call eax  +
test al al +
jnz loc_478F39  +
inc esi  +
cmp esi edi +
jl loc_478F10  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
push ecx  +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call loc_478AF0  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_478F82  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4750D0  +
push 0FFFFFFFFh  +
push offset loc_4BA767  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0Ch  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
test esi esi +
jz loc_47900D  +
mov dword ptr [esi] offset off_4CF21C +
mov ecx esi +
mov dword ptr [esi+8] 0 +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+arg_0]  +
call sub_482A80  +
add esp 4 +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov esi [edi] +
call dword ptr [esi+14h]  +
push eax  +
mov ecx edi +
call dword ptr [esi+18h]  +
pop edi  +
pop esi  +
retn   +
***
mov eax [ecx] +
push esi  +
mov esi [ecx+8] +
call dword ptr [eax+1Ch]  +
movsd xmm0 ds:qword_4CF278 +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
push eax  +
push [ebp+arg_0]  +
push esi  +
call sub_4828C0  +
add esp 14h +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push esi  +
push [ebp+arg_0]  +
mov esi [ecx+8] +
call dword ptr [eax+18h]  +
movsd xmm0 [ebp+arg_8] +
sub esp 8 +
movsd [esp+0Ch+var_10+4] xmm0 +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_4828C0  +
add esp 14h +
pop esi  +
pop ebp  +
retn 10h  +
***
call sub_4750D0  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi+8] +
cmp ecx esi +
jz loc_47910F  +
call sub_474AB0  +
test esi esi +
jz loc_47910A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov [edi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
mov [edi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
mov [ebp-4] ecx +
push esi  +
push edi  +
test ebx ebx +
jz loc_47918A  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov edi eax +
mov ecx ebx +
mov eax [ebx] +
push edi  +
call dword ptr [eax+20h]  +
lea esi [eax+1] +
call sub_47BF80  +
push eax  +
push esi  +
call loc_474CE0  +
mov edx [ebp-4] +
lea ecx [ebp+8] +
add esp 8 +
mov [ebp-8] eax +
mov edx [edx] +
push ecx  +
lea ecx [esi-1] +
push ecx  +
mov ecx [ebp-4] +
push eax  +
push 0  +
push ebx  +
push edi  +
push 0  +
call dword ptr [edx+2Ch]  +
cmp edi eax +
pop edi  +
pop esi  +
pop ebx  +
jnz loc_47918F  +
mov eax [ebp+8] +
mov ecx [ebp-8] +
mov byte ptr [eax+ecx] 0 +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push offset aIvcstringCstri  +
call loc_479FD0  +
push 0FFFFFFFFh  +
push offset loc_4BA798  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+var_24] +
mov edi [ebp+arg_4] +
mov esi [ebp+arg_C] +
push 0  +
mov [ebp+var_28] 0 +
call sub_47F5F0  +
push esi  +
push [ebp+arg_8]  +
lea ecx [ebp+var_24] +
mov [ebp+var_4] 0 +
push edi  +
call loc_47F730  +
push ebx  +
lea ecx [ebp+var_24] +
call sub_475A60  +
lea ecx [ebp+var_24] +
call sub_47F670  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0BCh +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+18h] +
push ebx  +
push esi  +
mov esi [ebp+20h] +
mov [ebp-0A0h] eax +
mov eax [ecx] +
push edi  +
mov edi [ebp+10h] +
mov [ebp-0A4h] ecx +
mov [ebp-0B8h] edi +
mov [ebp-0BCh] esi +
call dword ptr [eax+18h]  +
mov edx [ebp+8] +
mov ecx eax +
mov ebx [ebp+0Ch] +
mov [ebp-0B4h] edx +
mov [ebp-0B0h] ebx +
cmp edx ecx +
ja loc_47940E  +
sub eax edx +
cmp ebx eax +
ja loc_47940E  +
mov ebx [ebp+1Ch] +
mov eax [ebp-0A0h] +
test ebx ebx +
jz loc_4792AD  +
js loc_479402  +
test eax eax +
jz loc_479402  +
test edi edi +
jz loc_479409  +
mov ecx [ebp-0A4h] +
mov dword ptr [esi] 0 +
mov [ebp-0A8h] eax +
mov dword ptr [ebp-0B0h] 0 +
mov eax [ecx] +
mov [ebp-1Ch] ecx +
call dword ptr [eax+28h]  +
mov edx [ebp+8] +
xor ecx ecx +
mov esi [ebp+0Ch] +
mov [ebp-18h] eax +
mov [ebp-14h] edx +
mov [ebp-10h] esi +
mov dword ptr [ebp-0Ch] 0 +
mov [ebp-8] ecx +
mov [ebp-0A4h] edx +
test eax eax +
jz loc_479303  +
lea ecx [eax+edx*2] +
jmp loc_479338  +
test ecx ecx +
jnz loc_479330  +
mov edx 40h +
mov [ebp-0Ch] ecx +
mov ecx [ebp-1Ch] +
cmp esi edx +
cmovb edx esi +
push edx  +
push dword ptr [ebp-0A4h]  +
mov [ebp-8] edx +
lea edx [ebp-9Ch] +
mov eax [ecx] +
push edx  +
call dword ptr [eax+1Ch]  +
mov ecx [ebp-8] +
mov esi ecx +
lea ecx [ebp-9Ch] +
cmp dword ptr [ebp-0A0h] 0 +
jz loc_479365  +
mov eax [edi] +
lea edx [ebp-0ACh] +
push edx  +
push ebx  +
push dword ptr [ebp-0A8h]  +
push dword ptr [ebp+14h]  +
push esi  +
push ecx  +
mov ecx edi +
call dword ptr [eax+10h]  +
mov edi eax +
mov eax [ebp-0ACh] +
jmp loc_47937F  +
mov edx [ebp-0B8h] +
mov edi esi +
push dword ptr [ebp+14h]  +
push esi  +
mov eax [edx] +
push ecx  +
mov ecx edx +
call dword ptr [eax+18h]  +
mov [ebp-0ACh] eax +
mov ecx [ebp-0BCh] +
sub ebx eax +
mov edx [ebp-0B0h] +
add [ebp-0A8h] eax +
add edx edi +
mov [ebp-0B0h] edx +
add [ecx] eax +
cmp edi esi +
jnz loc_4793ED  +
cmp dword ptr [ebp-18h] 0 +
jnz loc_4793ED  +
mov ecx [ebp-8] +
mov [ebp-0Ch] ecx +
lea esi [ecx+40h] +
cmp [ebp-10h] esi +
cmovb esi [ebp-10h] +
mov [ebp-8] esi +
cmp esi ecx +
jz loc_4793ED  +
mov edx [ebp-14h] +
sub esi ecx +
add edx ecx +
mov ecx [ebp-1Ch] +
push esi  +
push edx  +
lea edx [ebp-9Ch] +
mov eax [ecx] +
push edx  +
call dword ptr [eax+1Ch]  +
mov ecx [ebp-8] +
mov esi [ebp-10h] +
mov edx [ebp-14h] +
mov eax [ebp-18h] +
mov edi [ebp-0B8h] +
jmp loc_4792F4  +
***
mov ecx [ebp-4] +
mov eax edx +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push eax  +
push ebx  +
call sub_47C030  +
call sub_47C0A0  +
push ecx  +
lea eax [ebp-0B4h] +
push eax  +
call loc_47C050  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov ecx [ebp+arg_4] +
mov esi eax +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_4] +
mov edx [edi] +
dec ecx  +
push eax  +
push ecx  +
push ebx  +
push 0  +
push [ebp+arg_8]  +
mov ecx edi +
push esi  +
push 0  +
call dword ptr [edx+2Ch]  +
cmp esi eax +
mov eax [ebp+var_4] +
mov byte ptr [eax+ebx] 0 +
jz loc_479462  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
lea eax [ebp+var_4] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_4791A0  +
add esp 10h +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_4794A5  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
call sub_481770  +
mov edx [ebp+8] +
mov esi eax +
test edx edx +
jz loc_479501  +
mov eax edx +
push edi  +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_4794C8  +
sub eax edi +
push esi  +
push eax  +
push edx  +
lea eax [ebp+8] +
push eax  +
call sub_4791A0  +
add esp 10h +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+8] +
pop edi  +
test ecx ecx +
jz loc_4794FC  +
call sub_479590  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
mov edi ecx +
mov esi [edi] +
call sub_481770  +
push eax  +
mov ecx edi +
call dword ptr [esi+34h]  +
pop edi  +
pop esi  +
retn   +
***
test ecx ecx +
jz loc_479544  +
push ecx  +
call sub_48DC31  +
push eax  +
call sub_482CB0  +
add esp 8 +
retn   +
push 9  +
push offset aNullptr  +
call sub_474F10  +
add esp 8 +
retn   +
***
push ecx  +
push ecx  +
push offset aP_0  +
push [ebp+arg_0]  +
call sub_481870  +
add esp 10h +
pop ebp  +
retn 4  +
***
cmp ecx [ebp+arg_0] +
setz al  +
pop ebp  +
retn 4  +
***
test ecx ecx +
jz locret_4795B2  +
cmp dword ptr [ecx+4] 80000000h +
lea edx [ecx+4] +
jnb locret_4795B2  +
or eax 0FFFFFFFFh +
xadd [edx] eax +
dec eax  +
test eax eax +
jg locret_4795B2  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
test ecx ecx +
jz loc_4795D3  +
cmp dword ptr [ecx+4] 80000000h +
lea eax [ecx+4] +
jnb loc_4795D3  +
inc dword ptr [eax]  +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA6FB  +
mov eax large fs:0 +
push eax  +
sub esp 218h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 0FFh  +
lea ecx [ebp+var_224] +
call sub_47F5C0  +
mov [ebp+var_224] offset off_4CEA68 +
mov eax [esi] +
lea ecx [ebp+var_224] +
push ecx  +
mov ecx esi +
mov [ebp+var_4] 0 +
call dword ptr [eax+0Ch]  +
push [ebp+var_21C]  +
lea ecx [ebp+var_224] +
call sub_47FDE0  +
lea ecx [ebp+var_224] +
mov esi eax +
call sub_47F670  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_479697  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi] 0FFFFFFFFh +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA7C8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_4796D6  +
call sub_47C0A0  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push 0  +
push 0  +
mov edi eax +
push 0  +
push edi  +
call loc_480380  +
mov esi eax +
add esp 10h +
lea ecx [esi-1] +
push ecx  +
lea ecx [ebp+var_24] +
call sub_47F5F0  +
mov edx [ebp+var_20] +
xor eax eax +
mov ecx [ebp+var_1C] +
push eax  +
mov [ebp+var_4] 0 +
mov [edx+ecx*2] ax +
push [ebp+var_20]  +
push esi  +
push edi  +
call loc_480380  +
add esp 10h +
lea ecx [ebp+var_24] +
push eax  +
call sub_47FDE0  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_47F670  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
test eax eax +
jz loc_4797D4  +
test esi esi +
jz loc_4797D9  +
push eax  +
call sub_479B60  +
push esi  +
mov edi eax +
call sub_479B60  +
mov esi eax +
add esp 8 +
mov ecx esi +
mov edx [esi] +
call dword ptr [edx+24h]  +
mov edx [edi] +
mov ecx edi +
push eax  +
call dword ptr [edx+24h]  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_480970  +
add esp 0Ch +
test eax eax +
jz loc_4797DE  +
lea eax [ebp-20Ch] +
push eax  +
call loc_479B20  +
lea eax [ebp-20Ch] +
push eax  +
call sub_478790  +
mov ecx [ebp-4] +
add esp 8 +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
call sub_47C0A0  +
push esi  +
push edi  +
push offset aPathcombine@@F  +
call loc_479FD0  +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
test esi esi +
jz loc_479887  +
mov ecx esi +
call sub_478660  +
test al al +
jz loc_47982A  +
call sub_478810  +
pop esi  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
lea eax [ebp-20Ch] +
push eax  +
call sub_480940  +
add esp 8 +
test eax eax +
jz loc_47988C  +
lea eax [ebp-20Ch] +
push eax  +
call loc_479B20  +
lea eax [ebp-20Ch] +
push eax  +
call sub_480A30  +
lea eax [ebp-20Ch] +
push eax  +
call sub_480A60  +
lea eax [ebp-20Ch] +
push eax  +
call sub_478790  +
mov ecx [ebp-4] +
add esp 10h +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push offset aPathcanonicali  +
call loc_479FD0  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz sub_47C0A0  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push eax  +
call sub_4809A0  +
add esp 4 +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_47991E  +
mov eax [ecx] +
push esi  +
call dword ptr [eax+24h]  +
push eax  +
call sub_4809D0  +
mov esi eax +
add esp 4 +
mov ecx esi +
lea eax [ecx+2] +
mov dx [ecx] +
add ecx 2 +
test dx dx +
jnz loc_4798F0  +
sub ecx eax +
sar ecx 1 +
jz loc_479911  +
movzx eax word ptr [esi+ecx*2-2] +
cmp eax 5Ch +
jz loc_479910  +
cmp eax 2Fh +
jnz loc_479911  +
dec ecx  +
push ecx  +
push esi  +
call sub_4787D0  +
add esp 8 +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz sub_47C0A0  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push eax  +
call sub_480A00  +
add esp 4 +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
test esi esi +
jz loc_47999F  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
call sub_480A00  +
add esp 4 +
test eax eax +
jnz loc_47999C  +
push esi  +
call sub_4796A0  +
add esp 4 +
mov ecx eax +
mov edx [eax] +
push 0  +
push 0  +
call dword ptr [edx+24h]  +
push eax  +
call loc_4805F0  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_479A09  +
lea eax [ebp-28h] +
push eax  +
mov eax [ecx] +
push 0  +
call dword ptr [eax+24h]  +
push eax  +
call loc_480300  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-14h]  +
call sub_4800F0  +
add esp 0Ch +
fstp  qword ptr [ebp-30h] +
movsd xmm0 qword ptr [ebp-30h] +
movsd qword ptr [esp] xmm0 +
call sub_482FD0  +
mov ecx [ebp-4] +
add esp 8 +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push 0FFFFFFFFh  +
push offset loc_4BA7F8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_479A43  +
call sub_47C0A0  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+24h] +
call eax  +
push 0  +
push 80h  +
push 3  +
push 0  +
push 3  +
push 80000000h  +
push eax  +
call loc_480180  +
mov esi eax +
add esp 1Ch +
mov [ebp+var_10] esi +
cmp [ebp+arg_4] 0 +
mov [ebp+var_4] 0 +
jz loc_479A9A  +
lea eax [ebp+var_24] +
mov [ebp+var_24] 0 +
push eax  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
xorps xmm0 xmm0 +
push 0  +
push esi  +
movups oword ptr [ebp+var_20] xmm0 +
call loc_480540  +
add esp 14h +
push esi  +
call loc_480340  +
add esp 4 +
mov [ebp+arg_0] eax +
test edx edx +
jl loc_479AC0  +
jg loc_479AB3  +
cmp eax 7FFFFFFFh +
jbe loc_479AC0  +
push edx  +
push eax  +
push edi  +
push offset aFile@TooLargeS  +
call loc_479FD0  +
push eax  +
call sub_482EB0  +
mov edi eax +
add esp 4 +
mov ecx edi +
mov edx [edi] +
mov edx [edx+1Ch] +
call edx  +
push 0  +
push [ebp+arg_0]  +
push eax  +
push esi  +
call loc_480580  +
add esp 10h +
cmp [ebp+arg_4] 0 +
jz loc_479AFA  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0  +
push 0  +
push esi  +
call sub_4807E0  +
add esp 14h +
cmp esi 0FFFFFFFFh +
jz loc_479B06  +
push esi  +
call ds:CloseHandle  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 2Fh  +
push dword ptr [ebp+8]  +
call sub_48D5A1  +
add esp 8 +
test eax eax +
jz loc_479B56  +
push esi  +
mov esi 5Ch +
jmp loc_479BB4  +
***
pop ebp  +
retn   +
***
mov eax large fs:2Ch +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479C32  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479C34  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479C45  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF4B0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479C82  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479C84  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479C95  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF44C +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi] offset off_4CEDD8 +
test ecx ecx +
jz loc_479CCA  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479CCC  +
xor eax eax +
mov [esi+4] eax +
lea eax [esi+8] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479D12  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479D14  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479D25  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF460 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479D62  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479D64  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479D75  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF474 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479DB2  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479DB4  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479DC5  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF438 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479E02  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479E04  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479E15  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF424 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479E52  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479E54  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479E65  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF488 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_479EA2  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479EA4  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_479EB5  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CF49C +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [esi+8] +
test ecx ecx +
jz loc_479EE5  +
call sub_479590  +
mov ecx [esi+4] +
pop esi  +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [esi+8] +
test ecx ecx +
jz loc_479F18  +
call sub_479590  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_479F24  +
call sub_479590  +
test [ebp+arg_0] 1 +
jz loc_479F35  +
push 0Ch  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
call dword ptr [eax+8]  +
mov edx [edi] +
mov esi eax +
push esi  +
mov ecx edi +
call dword ptr [edx+4]  +
push eax  +
mov eax offset a@_2 +
test esi esi +
mov ecx offset a@Trace@ +
push edi  +
cmovz ecx eax +
push ecx  +
push [ebp+arg_0]  +
call sub_47A9E0  +
add esp 14h +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx [ebp+8] +
mov dword ptr [ebp-0Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_479FAB  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_479FAD  +
xor eax eax +
mov [ebp-8] eax +
lea eax [ebp-4] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
lea eax [ebp-0Ch] +
push offset unk_4E9C34  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA828  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
call sub_477D00  +
add esp 0Ch +
push dword ptr [ebp-10h]  +
mov dword ptr [ebp-4] 0 +
call loc_479F90  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push dword ptr [ebp+8]  +
call sub_482CB0  +
push eax  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-10h] +
push offset aCannotCastTo@  +
push eax  +
call sub_477DB0  +
add esp 14h +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-1Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_47A0FE  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47A100  +
xor eax eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-1Ch] offset off_4CF44C +
lea eax [ebp-1Ch] +
push offset unk_4E9CC8  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-1Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_47A184  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47A186  +
xor eax eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-1Ch] offset off_4CF460 +
lea eax [ebp-1Ch] +
push offset unk_4E9D04  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-1Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_47A204  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47A206  +
xor eax eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-1Ch] offset off_4CF474 +
lea eax [ebp-1Ch] +
push offset unk_4E9D40  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
call sub_478810  +
mov dword ptr [ebp-0Ch] offset off_4CEDD8 +
test eax eax +
jz loc_47A24F  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_47A251  +
xor eax eax +
mov [ebp-8] eax +
lea eax [ebp-4] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-0Ch] offset off_4CF438 +
lea eax [ebp-0Ch] +
push offset unk_4E9C8C  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push 0Dh  +
push offset aOutOfMemory_0  +
call sub_474F10  +
add esp 8 +
mov dword ptr [ebp-0Ch] offset off_4CEDD8 +
test eax eax +
jz loc_47A2A9  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_47A2AB  +
xor eax eax +
mov [ebp-8] eax +
lea eax [ebp-4] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-0Ch] offset off_4CF424 +
lea eax [ebp-0Ch] +
push offset unk_4E9C50  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+10h] +
add eax ecx +
push eax  +
push ecx  +
push dword ptr [ebp+8]  +
push offset aIndexOutOfBoun  +
call loc_47A300  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-1Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_47A354  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47A356  +
xor eax eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-1Ch] offset off_4CF488 +
lea eax [ebp-1Ch] +
push offset unk_4E9D7C  +
push eax  +
call sub_48D64F  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-10h] +
push eax  +
call sub_477D00  +
add esp 0Ch +
mov ecx [ebp-10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-1Ch] offset off_4CEDD8 +
test ecx ecx +
jz loc_47A3D4  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47A3D6  +
xor eax eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push 0  +
push eax  +
call sub_4831A0  +
add esp 8 +
mov dword ptr [ebp-1Ch] offset off_4CF49C +
lea eax [ebp-1Ch] +
push offset unk_4E9DB8  +
push eax  +
call sub_48D64F  +
push 0FFFFFFFFh  +
push offset loc_4BA8A5  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5274 +
cmp eax [ecx+4] +
jle loc_47A4B4  +
push offset dword_4F5274  +
call sub_489058  +
add esp 4 +
cmp dword_4F5274 0FFFFFFFFh +
jnz loc_47A4B4  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5260  +
push 10h  +
mov [ebp+var_4] 0 +
mov [ebp+var_10] offset byte_4CF59D +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_14] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_47A4A0  +
mov ecx eax +
call sub_47A560  +
jmp loc_47A4A2  +
xor eax eax +
push offset dword_4F5274  +
mov dword_4F5270 eax +
call sub_489019  +
add esp 4 +
mov eax dword_4F5270 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4BA8F8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi] offset off_4CF4C8 +
mov dword ptr [esi+8] 3 +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4CF530 +
call sub_482120  +
mov edi eax +
test edi edi +
jz loc_47A5CC  +
mov ecx edi +
call sub_4795C0  +
mov [esi+0Ch] edi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov dword ptr [esi+0Ch] 0 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp sub_47F690  +
***
push esi  +
mov esi ecx +
call sub_47F690  +
test [ebp+arg_0] 1 +
jz loc_47A61F  +
push 414h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_47A642  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47A66E  +
test al 4 +
jnz loc_47A663  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_4F525C +
push esi  +
mov esi [ebp+arg_0] +
test eax eax +
jnz loc_47A69A  +
call sub_47A410  +
mov dword_4F525C eax +
mov edx [eax] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
push 4  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_4F525C +
test eax eax +
jnz locret_47A6C3  +
call sub_47A410  +
mov dword_4F525C eax +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_479560  +
mov eax [esi+8] +
mov ecx esi +
push eax  +
call sub_47AB20  +
push eax  +
push offset aLevelS  +
push [ebp+arg_0]  +
call sub_481870  +
add esp 0Ch +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_4F525C +
push esi  +
mov esi [ebp+arg_0] +
test eax eax +
jnz loc_47A71A  +
call sub_47A410  +
mov dword_4F525C eax +
mov edx [eax] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
push 1  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_4F525C +
push esi  +
mov esi [ebp+arg_0] +
test eax eax +
jnz loc_47A74A  +
call sub_47A410  +
mov dword_4F525C eax +
mov edx [eax] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
push 0  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA92F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_47A78E  +
call sub_47C0A0  +
push 10h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47A7C2  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_47A4D0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax dword_4F525C +
push esi  +
mov esi [ebp+arg_0] +
test eax eax +
jnz loc_47A7FA  +
call sub_47A410  +
mov dword_4F525C eax +
mov edx [eax] +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
push 3  +
mov ecx eax +
call dword ptr [edx+1Ch]  +
pop esi  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
lea edx [ebp+arg_C] +
push edx  +
push [ebp+arg_8]  +
mov eax [ecx] +
push [ebp+arg_4]  +
call dword ptr [eax+1Ch]  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA95B  +
mov eax large fs:0 +
push eax  +
sub esp 438h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_444] esi +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov [ebp+var_440] ecx +
mov ecx [ebp+arg_8] +
mov [ebp+var_438] eax +
mov [ebp+var_43C] ecx +
cmp eax [esi+8] +
jg loc_47A95F  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
push [ebp+var_438]  +
movzx ebx [ebp+SystemTime.wSecond] +
mov ecx esi +
movzx edi [ebp+SystemTime.wMilliseconds] +
call sub_47AB20  +
push 3FFh  +
lea ecx [ebp+var_434] +
mov esi eax +
call sub_47F640  +
mov [ebp+var_434] offset off_4CF558 +
movzx eax [ebp+SystemTime.wMinute] +
push esi  +
push edi  +
push ebx  +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_434] +
mov [ebp+var_4] 0 +
push offset a04d02d02d02d02  +
push eax  +
call sub_481870  +
add esp 28h +
lea ecx [ebp+var_434] +
push [ebp+var_43C]  +
push [ebp+var_440]  +
call loc_481890  +
lea eax [ebp+var_434] +
push offset asc_4BECCC  +
push eax  +
call sub_481870  +
mov esi [ebp+var_444] +
add esp 8 +
mov edx [ebp+var_42C] +
mov eax [ebp+var_430] +
mov ecx [esi+0Ch] +
push edx  +
mov byte ptr [eax+edx] 0 +
push [ebp+var_430]  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [esi+0Ch] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
lea ecx [ebp+var_434] +
call sub_47F690  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax dword_4F525C +
test eax eax +
jnz loc_47A996  +
call sub_47A410  +
mov dword_4F525C eax +
push [ebp+arg_4]  +
mov edx [eax] +
mov ecx eax +
push [ebp+arg_0]  +
call dword ptr [edx+18h]  +
pop ebp  +
retn   +
***
mov eax dword_4F525C +
test eax eax +
jnz loc_47A9C6  +
call sub_47A410  +
mov dword_4F525C eax +
push [ebp+arg_8]  +
mov edx [eax] +
mov ecx eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [edx+1Ch]  +
pop ebp  +
retn   +
***
mov eax dword_4F525C +
test eax eax +
jnz loc_47A9F6  +
call sub_47A410  +
mov dword_4F525C eax +
mov edx [eax] +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call dword ptr [edx+1Ch]  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp eax [ecx+8] +
jg loc_47AA2D  +
push [ebp+arg_4]  +
push offset unk_4CF550  +
push eax  +
push ecx  +
call sub_47A810  +
add esp 10h +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BA9A9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor eax eax +
mov [ebp+var_10] 0 +
cmp [ebp+arg_8] al +
mov esi [ebp+arg_0] +
setz al  +
mov [ebp+var_4] 0 +
lea eax ds:216h[eax*8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_483410  +
add esp 0Ch +
mov ecx [esi] +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov eax [ecx] +
mov eax [eax+30h] +
call eax  +
test eax eax +
jnz loc_47AABE  +
test edx edx +
jnz loc_47AABE  +
mov ecx [esi] +
push 3  +
push offset aQ  +
mov edx [ecx] +
call dword ptr [edx+14h]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jz loc_47AB01  +
mov edi dword_4F525C +
mov ecx esi +
call sub_4795C0  +
mov dword_4F525C esi +
test edi edi +
jz loc_47AAFD  +
mov ecx edi +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_479590  +
***
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
mov eax [ebp+arg_0] +
mov [ecx+8] eax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
inc eax  +
cmp eax 7 +
ja loc_47AB7B  +
jmp ds:off_47AB84[eax*4]  +
mov eax offset unk_4CF4E8 +
pop ebp  +
retn 4  +
mov eax offset aFatal +
pop ebp  +
retn 4  +
mov eax offset aError_1 +
pop ebp  +
retn 4  +
mov eax offset aWarn +
pop ebp  +
retn 4  +
mov eax offset aInfo +
pop ebp  +
retn 4  +
mov eax offset aDebug +
pop ebp  +
retn 4  +
mov eax offset aTrace +
pop ebp  +
retn 4  +
mov eax offset off_4CB358 +
pop ebp  +
retn 4  +
mov eax offset unk_4DE8C5 +
pop ebp  +
retn 4  +
***
push [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add eax [ebp+arg_4] +
push 1  +
push eax  +
call sub_49874B  +
add esp 8 +
test eax eax +
jz loc_47ABF1  +
mov dword ptr [eax+4] 1 +
pop ebp  +
retn   +
jmp loc_47A280  +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax+4] 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov dword ptr [eax+4] 80000000h +
pop ebp  +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_47ACE0  +
add esp 4 +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test esi esi +
jz loc_47AC73  +
push edi  +
mov edi offset unk_4F5278 +
mov ecx edi +
call loc_474D40  +
add dword ptr [esi+8] 0FFFFFFFFh +
jnz loc_47AC61  +
mov dword ptr [esi+4] 0 +
xor eax eax +
xchg eax [edi] +
dec dword ptr [esi+2Ch]  +
lea eax [esi+0Ch] +
push eax  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
retn   +
***
mov eax [esi] +
mov dword_4F527C eax +
cmp dword ptr [esi+4] 0 +
jnz loc_47ACC5  +
lea ecx [esi+0Ch] +
call sub_483660  +
push 34h  +
push esi  +
call sub_488C60  +
mov eax dword_4F527C +
add esp 8 +
mov esi eax +
test esi esi +
jnz loc_47ACA0  +
xor eax eax +
xchg eax [edi] +
pop edi  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA9D0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_47AD69  +
push eax  +
mov [ebp+var_4] 0 +
call sub_47AD80  +
mov edi eax +
add esp 4 +
lea esi [edi+0Ch] +
push esi  +
call ds:EnterCriticalSection  +
inc dword ptr [esi+20h]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push [ebp+var_14]  +
push offset aVcfoundationTh  +
call loc_47ED20  +
push [ebp+var_18]  +
push offset aVcfoundationTh  +
call loc_47ED70  +
push offset aVcfoundationTh  +
call sub_47ED00  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_4BAA3F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp dword_4F527C 0 +
jnz loc_47AEDA  +
mov edi 5 +
push 34h  +
call sub_488C2D  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_47AEC1  +
mov ecx dword_4F527C +
mov [esi] ecx +
lea ecx [esi+0Ch] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
call sub_4835D0  +
mov dword_4F527C esi +
mov [ebp+var_4] 0FFFFFFFFh +
sub edi 1 +
jnz loc_47AE83  +
push offset byte_47AC80  +
call sub_488F0F  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAA60  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp dword ptr [ecx] 0 +
jz loc_47AF3A  +
mov eax [ecx] +
mov [ebp+var_4] 0 +
cmp dword ptr [eax+30h] 0 +
jle loc_47AF3A  +
push dword ptr [eax+28h]  +
call loc_4806B0  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAA80  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp dword ptr [ecx] 0 +
jz loc_47AFC3  +
mov ecx [ecx] +
push 0FFFFFFFFh  +
add ecx 0Ch +
mov [ebp+var_4] 0 +
call sub_4836B0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAAA0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
cmp dword ptr [ecx] 0 +
jz loc_47B04E  +
mov ecx [ecx] +
sub esp 8 +
movsd xmm0 [ebp+arg_0] +
add ecx 0Ch +
mov [ebp+var_4] 0 +
movsd [esp+30h+var_30] xmm0 +
call sub_4837B0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_47B0E4  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_47B0D4  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov edx [edi] +
mov ecx edi +
push eax  +
mov eax [edx+20h] +
call eax  +
test al al +
jz loc_47B0DC  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_47B0B2  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
neg eax  +
sbb eax eax +
inc eax  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAAD3  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_14] ebx +
mov edi [ebp+arg_0] +
lea eax [ebx+8] +
push edi  +
mov ecx eax +
mov [ebp+var_4] 0 +
mov dword ptr [ebx] offset off_4CF8BC +
mov [ebp+var_10] eax +
call sub_4838D0  +
mov byte ptr [ebp+var_4] 1 +
test edi edi +
jle loc_47B18F  +
mov esi [ebp+arg_C] +
mov eax [ebp+arg_8] +
add esi 0FFFFFFFCh +
mov ecx [ebp+arg_4] +
mov ebx [ebp+var_10] +
push eax  +
push ecx  +
mov ecx ebx +
call sub_4839B0  +
mov ecx [esi+4] +
lea esi [esi+8] +
mov eax [esi] +
sub edi 1 +
jnz loc_47B162  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BAB03  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-18h] edi +
mov esi [ebp+8] +
lea eax [edi+8] +
push esi  +
mov ecx eax +
mov dword ptr [ebp-4] 0 +
mov dword ptr [edi] offset off_4CF8BC +
mov [ebp-10h] eax +
call sub_4838D0  +
mov byte ptr [ebp-4] 1 +
test esi esi +
jle loc_47B244  +
mov ebx [ebp+0Ch] +
mov edi [ebp-10h] +
mov eax [ebx] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+14h]  +
push dword ptr [ebp-10h]  +
mov ecx edi +
push dword ptr [ebp-14h]  +
call sub_4839B0  +
sub esi 1 +
jnz loc_47B210  +
mov eax [ebp-18h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BAAD3  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-14h] ebx +
mov edi [ebp+10h] +
lea eax [ebx+8] +
push edi  +
mov ecx eax +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebx] offset off_4CF8BC +
mov [ebp-10h] eax +
call sub_4838D0  +
mov byte ptr [ebp-4] 1 +
test edi edi +
jle loc_47B2EC  +
mov ebx [ebp+0Ch] +
mov esi [ebp+8] +
sub ebx esi +
push dword ptr [ebx+esi]  +
mov ecx [ebp-10h] +
push dword ptr [esi]  +
call sub_4839B0  +
lea esi [esi+4] +
sub edi 1 +
jnz loc_47B2C0  +
mov eax [ebp-14h] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call sub_47B350  +
add esp 8 +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47B336  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4795C0  +
mov eax esi +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAB2F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_4] +
mov [ebp+var_10] 0 +
test esi esi +
jnz loc_47B389  +
call sub_47C0A0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push 20h  +
mov ebx eax +
call sub_47ABB0  +
mov edi eax +
add esp 4 +
mov [ebp+arg_4] edi +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_47B3C0  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+20h]  +
push eax  +
push ebx  +
mov ecx edi +
call loc_47B1B0  +
mov ecx eax +
jmp loc_47B3C2  +
xor ecx ecx +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAB5F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_C] +
mov ebx [ebp+arg_8] +
mov edi [ebp+arg_4] +
mov [ebp+var_10] 0 +
test esi esi +
jz loc_47B452  +
js loc_47B478  +
test edi edi +
jz loc_47B478  +
xor eax eax +
test esi esi +
jle loc_47B431  +
cmp dword ptr [edi+eax*4] 0 +
jz loc_47B43C  +
inc eax  +
cmp eax esi +
jl loc_47B426  +
test ebx ebx +
jnz loc_47B441  +
push ebx  +
push esi  +
call sub_47C030  +
call sub_47C0A0  +
xor eax eax +
test esi esi +
jle loc_47B452  +
cmp dword ptr [ebx+eax*4] 0 +
jz loc_47B43C  +
inc eax  +
cmp eax esi +
jl loc_47B447  +
push 20h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+arg_C] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47B47F  +
push esi  +
push ebx  +
push edi  +
mov ecx eax +
call loc_47B260  +
mov ecx eax +
jmp loc_47B481  +
push edi  +
push esi  +
call sub_47C030  +
xor ecx ecx +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAB8F  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor esi esi +
mov [ebp+var_10] 0 +
cmp [ebp+arg_4] esi +
jz loc_47B4EC  +
cmp [ebp+arg_8] esi +
jz loc_47B4EC  +
mov eax [ebp+arg_C] +
cmp [eax] esi +
jz loc_47B4E9  +
lea eax [eax+4] +
inc esi  +
cmp dword ptr [eax] 0 +
jnz loc_47B4E0  +
shr esi 1 +
inc esi  +
push 20h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47B52C  +
push [ebp+arg_C]  +
mov ecx eax +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_47B100  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_C] +
mov [ebp+var_4] 0 +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_47B4A0  +
mov eax [ebp+arg_0] +
add esp 10h +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
push edi  +
call sub_479560  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push eax  +
push off_4EEF00  +
push edi  +
call sub_481870  +
mov eax [esi] +
add esp 0Ch +
mov ecx esi +
call dword ptr [eax+20h]  +
mov esi eax +
mov ecx esi +
mov eax [esi] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_47B5ED  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push off_4EEF04  +
push edi  +
call sub_481870  +
mov eax [esi] +
add esp 10h +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_47B5C0  +
push off_4EEF08  +
mov ecx edi +
call loc_4758F0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
add ecx 8 +
jmp sub_483C10  +
***
mov eax [ebp+arg_0] +
sub esp 8 +
push edi  +
mov edi ecx +
cmp edi eax +
jnz loc_47B639  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebx  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_47B6CC  +
mov edx [ebx] +
mov ecx ebx +
push esi  +
call dword ptr [edx+14h]  +
mov edx [edi] +
mov ecx edi +
mov esi eax +
call dword ptr [edx+14h]  +
cmp esi eax +
jnz loc_47B6C1  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_47B6B6  +
mov eax [edi] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx edi +
call dword ptr [eax+14h]  +
mov eax [ebp+var_4] +
mov ecx ebx +
push [ebp+var_8]  +
mov esi [eax] +
mov eax [ebx] +
call dword ptr [eax+18h]  +
mov ecx [ebp+var_4] +
push eax  +
mov eax [esi+4] +
call eax  +
test al al +
jz loc_47B6C1  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_47B682  +
pop esi  +
pop ebx  +
mov al 1 +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
pop esi  +
pop ebx  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
pop ebx  +
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
add ecx 8 +
pop ebp  +
jmp sub_483C60  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
lea eax [ebp+var_4] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_47B3E0  +
add esp 10h +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47B725  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call sub_47B4A0  +
add esp 10h +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47B766  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
push edi  +
push 0  +
mov esi ecx +
call sub_47C740  +
mov edx [esi] +
add esp 4 +
mov ecx esi +
mov edi eax +
call dword ptr [edx+20h]  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_47B7C5  +
mov eax [esi] +
lea ecx [ebp-8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
push dword ptr [ebp-4]  +
mov eax [edi] +
mov ecx edi +
push dword ptr [ebp-8]  +
call dword ptr [eax+24h]  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_47B7A0  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5290 +
cmp eax [ecx+4] +
jle loc_47B7F2  +
jmp loc_47B7FB  +
mov eax dword_4F528C +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F5290  +
call sub_489058  +
add esp 4 +
cmp dword_4F5290 0FFFFFFFFh +
jnz loc_47B7F2  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5280  +
push 0Ch  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_47B83B  +
mov dword ptr [eax] offset off_4CF8E4 +
mov byte ptr [eax+8] 1 +
jmp loc_47B83F  +
xor eax eax +
jmp $+2  +
push offset dword_4F5290  +
mov dword_4F528C eax +
call sub_489019  +
add esp 4 +
jmp loc_47B7F2  +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F52A4 +
cmp eax [ecx+4] +
jle loc_47B882  +
jmp loc_47B88B  +
mov eax dword_4F52A0 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F52A4  +
call sub_489058  +
add esp 4 +
cmp dword_4F52A4 0FFFFFFFFh +
jnz loc_47B882  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5294  +
push 0Ch  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_47B8CB  +
mov dword ptr [eax] offset off_4CF8E4 +
mov byte ptr [eax+8] 0 +
jmp loc_47B8CF  +
xor eax eax +
jmp $+2  +
push offset dword_4F52A4  +
mov dword_4F52A0 eax +
call sub_489019  +
add esp 4 +
jmp loc_47B882  +
***
cmp [ebp+arg_0] 0 +
jz loc_47B8FF  +
pop ebp  +
jmp sub_47B7D0  +
pop ebp  +
jmp sub_47B860  +
***
retn   +
***
cmp byte ptr [ecx+8] 0 +
mov edx offset aFalse +
mov ecx [ebp+arg_0] +
mov eax offset aTrue +
cmovz eax edx +
push eax  +
call loc_4758F0  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA730  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_10] eax +
mov esi [eax+8] +
xor ecx ecx +
mov dword ptr [eax] offset off_4CF8FC +
xor edi edi +
mov eax [eax+0Ch] +
lea eax [esi+eax*4] +
mov ebx eax +
sub ebx esi +
add ebx 3 +
shr ebx 2 +
cmp esi eax +
cmova ebx ecx +
test ebx ebx +
jz loc_47B9D0  +
mov ecx [esi] +
call sub_479590  +
inc edi  +
lea esi [esi+4] +
cmp edi ebx +
jnz loc_47B9C1  +
mov esi [ebp+var_10] +
push dword ptr [esi+8]  +
call sub_47BF70  +
add esp 4 +
mov dword ptr [esi] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_47B970  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_47BA31  +
test al 4 +
jnz loc_47BA26  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_47BA6B  +
js loc_47BAAD  +
test ebx ebx +
jz loc_47BAAD  +
xor eax eax +
test esi esi +
jle loc_47BA6B  +
nop   +
cmp dword ptr [ebx+eax*4] 0 +
jz loc_47BAA8  +
inc eax  +
cmp eax esi +
jl loc_47BA60  +
push dword ptr [edi+0Ch]  +
push esi  +
call sub_47BB30  +
xor eax eax +
mov [ebp+8] eax +
test esi esi +
jle loc_47BA9F  +
mov ecx [ebx+eax*4] +
call sub_4795C0  +
mov edx [edi+0Ch] +
mov ecx [edi+8] +
mov [ecx+edx*4] eax +
mov eax [ebp+8] +
inc dword ptr [edi+0Ch]  +
inc eax  +
mov [ebp+8] eax +
cmp eax esi +
jl loc_47BA80  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
push ebx  +
push esi  +
call sub_47C030  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test eax eax +
js loc_47BB24  +
push 14h  +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov [ebp+0Ch] ecx +
test ecx ecx +
jz loc_47BB19  +
mov eax [ebp+8] +
mov dword ptr [ecx] offset off_4CF8FC +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
xor ecx ecx +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
call loc_47C0B0  +
sub esp 0Ch +
mov eax ecx +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [eax+8] +
mov edx [eax+0Ch] +
mov [ebp+var_8] eax +
mov eax [eax+10h] +
sub eax edx +
mov [ebp+var_4] esi +
cmp ebx eax +
jle loc_47BBDA  +
lea eax [edx+ebx] +
mov ecx 8 +
cmp eax ecx +
cmovg ecx eax +
dec ecx  +
bsr eax ecx +
jz loc_47BB6E  +
lea ecx [eax+1] +
jmp loc_47BB70  +
xor ecx ecx +
mov eax 1 +
shl eax cl +
mov [ebp+var_C] eax +
shl eax 2 +
push edi  +
push eax  +
call sub_47BF90  +
mov edi [ebp+arg_4] +
mov ebx eax +
lea esi ds:0[edi*4] +
push esi  +
push [ebp+var_4]  +
push ebx  +
call loc_48B430  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_4] +
add eax esi +
mov ecx [ecx+0Ch] +
sub ecx edi +
shl ecx 2 +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax edi +
lea eax [ebx+eax*4] +
push eax  +
call loc_48B430  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_C] +
push [ebp+var_4]  +
mov [ecx+10h] eax +
mov [ecx+8] ebx +
call sub_47BF70  +
add esp 20h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
cmp ecx edx +
jz loc_47BBFA  +
sub edx ecx +
lea eax [esi+ecx*4] +
shl edx 2 +
push edx  +
push eax  +
lea eax [ebx+ecx] +
lea eax [esi+eax*4] +
push eax  +
call loc_48B430  +
add esp 0Ch +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ecx+0Ch] +
mov edx [ebp+8] +
cmp edx eax +
jnb loc_47BC27  +
mov eax [ecx+8] +
mov eax [eax+edx*4] +
pop ebp  +
retn 4  +
***
push eax  +
push edx  +
call loc_47C080  +
push ebp  +
mov ebp esp +
sub esp 8 +
mov edx [ebp+10h] +
push ebx  +
mov ebx ecx +
mov [ebp-4] edx +
mov ecx [ebp+0Ch] +
push esi  +
push edi  +
mov esi [ebx+0Ch] +
mov [ebp-8] ecx +
cmp ecx esi +
ja loc_47BC92  +
mov eax esi +
sub eax ecx +
cmp edx eax +
ja loc_47BC92  +
mov edi [ebp+8] +
test edx edx +
jz loc_47BC63  +
js loc_47BC8B  +
test edi edi +
jz loc_47BC8B  +
xor ecx ecx +
test edx edx +
jz loc_47BC82  +
mov esi [ebp+0Ch] +
shl esi 2 +
nop   +
mov eax [ebx+8] +
lea esi [esi+4] +
mov eax [esi+eax-4] +
mov [edi+ecx*4] eax +
inc ecx  +
cmp ecx edx +
jb loc_47BC70  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push edi  +
push edx  +
call sub_47C030  +
push esi  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov eax [esi+0Ch] +
inc eax  +
cmp edi eax +
jnb loc_47BCD9  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_47BCE0  +
push edi  +
push 1  +
call sub_47BB30  +
mov ecx [ebp+0Ch] +
call sub_4795C0  +
mov ecx [esi+8] +
mov [ecx+edi*4] eax +
mov eax esi +
inc dword ptr [esi+0Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push eax  +
push edi  +
call loc_47C080  +
call sub_47C0A0  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call loc_47BAD0  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47BD1F  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov edx [ebp+8] +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ecx+0Ch] +
mov [ebp-4] ecx +
mov [ebp-0Ch] edx +
mov [ebp-8] ebx +
push edi  +
cmp edx esi +
ja loc_47BDCA  +
mov eax esi +
sub eax edx +
cmp ebx eax +
ja loc_47BDCA  +
mov ecx [ecx+8] +
lea eax [ebx+edx] +
xor edi edi +
lea eax [ecx+eax*4] +
lea esi [ecx+edx*4] +
mov ebx eax +
sub ebx esi +
xor ecx ecx +
add ebx 3 +
shr ebx 2 +
cmp esi eax +
cmova ebx ecx +
test ebx ebx +
jz loc_47BD92  +
mov ebx [ebp-4] +
mov esi [ebp+0Ch] +
mov eax [ebx+0Ch] +
mov ecx [ebx+8] +
sub eax esi +
sub eax edx +
shl eax 2 +
push eax  +
lea eax [esi+edx] +
lea eax [ecx+eax*4] +
push eax  +
lea eax [ecx+edx*4] +
push eax  +
call loc_48B430  +
mov eax [ebp+0Ch] +
add esp 0Ch +
sub [ebx+0Ch] eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
lea eax [ebp-0Ch] +
push eax  +
call loc_47C050  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edi [ebp+8] +
mov eax [ebx+0Ch] +
cmp edi eax +
jnb loc_47BE1A  +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_47BE21  +
mov eax [ebx+8] +
mov esi [eax+edi*4] +
call sub_4795C0  +
mov edx [ebx+8] +
mov ecx esi +
mov [edx+edi*4] eax +
call sub_479590  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
push eax  +
push edi  +
call loc_47C080  +
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
js loc_47BE94  +
mov eax [edi] +
call dword ptr [eax+14h]  +
mov ebx eax +
cmp esi ebx +
jz loc_47BE89  +
jge loc_47BE63  +
mov eax [edi] +
sub ebx esi +
push ebx  +
push esi  +
mov ecx edi +
call dword ptr [eax+3Ch]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_484380  +
mov [ebp-4] eax +
cmp ebx esi +
jge loc_47BE89  +
sub esi ebx +
mov [ebp+8] eax +
lea ecx [ebp+8] +
mov eax [edi] +
push ecx  +
push 1  +
mov ecx edi +
call dword ptr [eax+30h]  +
mov eax [ebp-4] +
sub esi 1 +
jnz loc_47BE71  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
call loc_47C0B0  +
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F52B4 +
cmp eax [ecx+4] +
jle loc_47BEC2  +
jmp loc_47BECB  +
mov eax dword_4F52B0 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F52B4  +
call sub_489058  +
add esp 4 +
cmp dword_4F52B4 0FFFFFFFFh +
jnz loc_47BEC2  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F52A8  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_47BF07  +
mov dword ptr [eax] offset off_4CF940 +
jmp loc_47BF0B  +
xor eax eax +
jmp $+2  +
push offset dword_4F52B4  +
mov dword_4F52B0 eax +
call sub_489019  +
add esp 4 +
jmp loc_47BEC2  +
***
push ebp  +
mov ebp esp +
push 1  +
push dword ptr [ebp+8]  +
call sub_49874B  +
add esp 8 +
test eax eax +
jnz loc_47BF39  +
cmp [ebp+8] eax +
jnz loc_47BF3D  +
pop ebp  +
retn 4  +
***
call loc_47A280  +
push [ebp+arg_0]  +
call sub_497EC6  +
add esp 4 +
pop ebp  +
retn 4  +
***
push 1  +
push [ebp+arg_0]  +
call sub_49874B  +
add esp 8 +
test eax eax +
jnz loc_47BFAD  +
cmp [ebp+arg_0] eax +
jnz loc_47A280  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
test eax eax +
jz loc_47BFCE  +
test ecx ecx +
jnz loc_47BFCE  +
push eax  +
call sub_497EC6  +
add esp 4 +
xor eax eax +
pop ebp  +
retn   +
push ecx  +
push eax  +
call sub_49AE6F  +
add esp 8 +
test eax eax +
jz loc_47A280  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
test eax eax +
jz loc_47C010  +
test ecx ecx +
jnz loc_47C010  +
push eax  +
call sub_497EC6  +
add esp 4 +
xor eax eax +
pop ebp  +
retn 8  +
***
push ecx  +
push eax  +
call sub_49AE6F  +
add esp 8 +
test eax eax +
jnz loc_47C00C  +
call loc_47A280  +
cmp [ebp+arg_0] 0 +
jge loc_47C043  +
push offset aLength0  +
call loc_47A130  +
jmp loc_47A230  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov edx [ebp+0Ch] +
mov ecx [eax] +
cmp ecx edx +
jnb loc_47C066  +
mov eax [eax+4] +
add eax ecx +
jmp loc_47C068  +
mov eax ecx +
push edx  +
push 0  +
push eax  +
call loc_47A2E0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push 0  +
push dword ptr [ebp+8]  +
call loc_47A2E0  +
push offset aSize0  +
call loc_47A130  +
push ecx  +
push ebx  +
push esi  +
mov esi offset unk_4F52B8 +
mov ebx ecx +
push edi  +
mov [ebp+var_4] esi +
or edi 0FFFFFFFFh +
movzx eax ds:byte_4CF59D +
push eax  +
push esi  +
push 10h  +
call sub_47AC10  +
mov ecx eax +
add esp 0Ch +
mov [ebp+var_4] ecx +
test ecx ecx +
jz loc_47C0FF  +
mov eax edi +
mov dword ptr [ecx] offset off_4CF988 +
cdq   +
mov [ecx+8] eax +
mov [ecx+0Ch] edx +
add esi 10h +
inc edi  +
mov [ebp+var_4] esi +
cmp edi 0Ah +
jl loc_47C0D4  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47C152  +
test al 4 +
jnz loc_47C147  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 8 +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
ucomisd xmm0 [ebp+arg_4] +
lahf   +
test ah 44h +
jp loc_47C192  +
mov ecx offset unk_4F52C8 +
call sub_4795C0  +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_4F52C8 +
mov esp ebp +
pop ebp  +
retn   +
push 10h  +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov [ebp+var_8] ecx +
test ecx ecx +
jz loc_47C1BE  +
mov eax [ebp+arg_0] +
movsd xmm0 [ebp+arg_4] +
mov dword ptr [ecx] offset off_4CF9B8 +
movsd qword ptr [ecx+8] xmm0 +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
cdq   +
push edi  +
mov esi eax +
mov [ebp+var_4] 0 +
mov edi edx +
add eax 1 +
mov ecx edi +
adc ecx 0 +
test ecx ecx +
ja loc_47C20C  +
jb loc_47C1F8  +
cmp eax 0Ah +
ja loc_47C20C  +
mov eax [ebp+arg_0] +
shl esi 4 +
add esi offset unk_4F52C8 +
pop edi  +
mov [eax] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 10h  +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov [ebp+arg_4] ecx +
test ecx ecx +
jz loc_47C236  +
mov eax [ebp+arg_0] +
mov [ecx+0Ch] edi +
pop edi  +
mov [ecx+8] esi +
mov dword ptr [ecx] offset off_4CF988 +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
mov ecx esi +
push edi  +
mov edi [ebp+arg_8] +
add ecx 1 +
mov eax edi +
mov [ebp+var_4] 0 +
adc eax 0 +
test eax eax +
ja loc_47C28C  +
jb loc_47C278  +
cmp ecx 0Ah +
ja loc_47C28C  +
mov eax [ebp+arg_0] +
shl esi 4 +
add esi offset unk_4F52C8 +
pop edi  +
mov [eax] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 10h  +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov [ebp+arg_8] ecx +
test ecx ecx +
jz loc_47C2B6  +
mov eax [ebp+arg_0] +
mov [ecx+0Ch] edi +
pop edi  +
mov [ecx+8] esi +
mov dword ptr [ecx] offset off_4CF988 +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
movsd xmm0 qword ptr [ecx+8] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
push offset aF  +
push [ebp+arg_0]  +
call sub_481870  +
add esp 10h +
pop ebp  +
retn 4  +
***
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push dword ptr [ecx+0Ch]  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_24] +
push dword ptr [ecx+8]  +
push offset aLld  +
push 20h  +
push eax  +
call sub_481FE0  +
add esp 14h +
lea eax [ebp+var_24] +
mov ecx esi +
push eax  +
call loc_4758F0  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
retn   +
***
sub esp 8 +
mov edx [ecx+0Ch] +
mov ecx [ecx+8] +
call sub_4896E0  +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
mov esi ecx +
cmp esi eax +
jnz loc_47C3D9  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push ebx  +
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_47C4B2  +
mov edx [esi] +
mov ecx esi +
mov edx [edx+1Ch] +
call edx  +
test al al +
jnz loc_47C444  +
mov eax [ebx] +
mov ecx ebx +
mov eax [eax+1Ch] +
call eax  +
test al al +
jnz loc_47C444  +
mov eax [esi] +
mov ecx esi +
push edi  +
mov eax [eax+14h] +
call eax  +
mov esi [ebx] +
mov ecx ebx +
mov edi eax +
mov [ebp+arg_0] edx +
mov esi [esi+14h] +
call esi  +
cmp edi eax +
pop edi  +
jnz loc_47C4A8  +
cmp [ebp+arg_0] edx +
jnz loc_47C4A8  +
pop ebx  +
mov eax 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+18h] +
call eax  +
mov eax [ebx] +
mov ecx ebx +
fstp  [ebp+var_8] +
mov eax [eax+18h] +
call eax  +
movsd xmm0 [ebp+var_8] +
sub esp 8 +
fstp  [ebp+var_10] +
movsd [esp+20h+var_20] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jz loc_47C498  +
movsd xmm0 [ebp+var_10] +
sub esp 8 +
movsd [esp+20h+var_20] xmm0 +
call sub_49AAD7  +
add esp 8 +
test eax eax +
jz loc_47C498  +
pop ebx  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
movsd xmm0 [ebp+var_8] +
ucomisd xmm0 [ebp+var_10] +
lahf   +
test ah 44h +
jnp loc_47C437  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
pop ebx  +
xor al al +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 18h +
movsd xmm0 qword ptr [ecx+8] +
andps xmm0 oword ptr ds:oword_4E1070 +
push esi  +
sub esp 8 +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
movsd [ebp+var_10] xmm0 +
fstp  [esp+24h+var_24] +
call sub_4A0F30  +
fst  [ebp+var_18] +
fld  ds:dbl_4CF9E0 +
add esp 8 +
call sub_49B13A  +
fstp  [ebp+var_8] +
movsd xmm0 [ebp+var_8] +
call sub_489571  +
movsd xmm0 [ebp+var_10] +
mov esi eax +
subsd xmm0 [ebp+var_18] +
mulsd xmm0 ds:dbl_4CF9E0 +
call sub_489571  +
add eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+0Ch] +
push esi  +
mov esi [ecx+8] +
cdq   +
xor eax edx +
xor esi edx +
sub esi edx +
sbb eax edx +
mov eax esi +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
cdq   +
push esi  +
push edx  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_47C250  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_47C581  +
call sub_479590  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
retn   +
***
mov eax [ecx+8] +
cdq   +
cmp [ecx+8] eax +
jnz loc_47C5B1  +
cmp [ecx+0Ch] edx +
jnz loc_47C5B1  +
xor al al +
retn   +
mov al 1 +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push [ebp+arg_0]  +
push eax  +
call sub_47C250  +
add esp 0Ch +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47C5F2  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
movsd xmm0 qword ptr [ecx+8] +
jmp sub_48958F  +
***
mov eax [ecx+8] +
mov edx [ecx+0Ch] +
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
lea ecx [esi+8] +
call sub_483970  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47C66A  +
test al 4 +
jnz loc_47C65F  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 20h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call sub_4839B0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
lea ecx [esi+8] +
call sub_483A40  +
mov eax esi +
pop esi  +
retn   +
***
add ecx 8 +
pop ebp  +
jmp sub_483A50  +
***
push 0FFFFFFFFh  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_47C6C0  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47C76F  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea ecx [esi+8] +
call loc_483EE0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call sub_483FB0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
lea ecx [esi+8] +
call sub_484060  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov [ebp+var_4] esi +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_4CFA28 +
mov [esi+8] edx +
mov [esi+0Ch] edi +
mov dword ptr [esi+10h] 0 +
test edx edx +
jz loc_47C821  +
mov ecx [esi+10h] +
mov eax [edi+ecx*4] +
test eax eax +
jz loc_47C817  +
cmp eax 0FFFFFFFFh +
jnz loc_47C821  +
lea eax [ecx+1] +
mov [esi+10h] eax +
cmp eax edx +
jb loc_47C808  +
mov ecx esi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47C872  +
test al 4 +
jnz loc_47C867  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push dword ptr [esi+8]  +
lea ecx [esi+0Ch] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4CFA58 +
call sub_484A50  +
push dword ptr [esi+8]  +
call sub_497EC6  +
mov eax [ebp+arg_0] +
add esp 4 +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47C901  +
test al 4 +
jnz loc_47C8F6  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
push dword ptr [edi+8]  +
lea ecx [edi+0Ch] +
call sub_484770  +
mov ecx edi +
mov esi eax +
call sub_47C950  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BABF0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov eax [esi+10h] +
lea eax [eax+eax*2] +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
cmp [esi+0Ch] eax +
jle loc_47C9CE  +
mov eax [esi+10h] +
lea ebx [eax+eax] +
lea eax ds:0[ebx*4] +
push eax  +
call sub_47BF90  +
add esp 4 +
mov [ebp+var_4] 0 +
mov edi eax +
lea ecx [esi+0Ch] +
mov [ebp+var_14] edi +
push ebx  +
push edi  +
push dword ptr [esi+8]  +
call sub_484950  +
push dword ptr [esi+8]  +
call sub_497EC6  +
add esp 4 +
mov [esi+8] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAC27  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_4] +
mov [ebp+var_14] 0 +
test ecx ecx +
jns loc_47CA4B  +
push ecx  +
call loc_47C0B0  +
cmp ecx 10h +
mov [ebp+var_10] 10h +
lea edx [ebp+var_10] +
lea eax [ebp+arg_4] +
cmovle eax edx +
mov eax [eax] +
lea ecx ds:0[eax*4] +
mov eax 55555556h +
imul  ecx +
mov eax edx +
shr eax 1Fh +
dec eax  +
add eax edx +
bsr eax eax +
jz loc_47CA80  +
lea ecx [eax+1] +
jmp loc_47CA82  +
xor ecx ecx +
mov edi 1 +
push 14h  +
shl edi cl +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+arg_4] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_47CACC  +
lea eax ds:0[edi*4] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
mov dword ptr [esi] offset off_4CFA58 +
call sub_47BF90  +
mov [esi+8] eax +
add esp 4 +
mov dword ptr [esi+0Ch] 0 +
mov [esi+10h] edi +
jmp loc_47CACE  +
xor esi esi +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ecx+8]  +
add ecx 0Ch +
push [ebp+arg_0]  +
call sub_484890  +
pop ebp  +
retn 4  +
***
push dword ptr [ecx+8]  +
add ecx 0Ch +
push [ebp+arg_0]  +
call loc_484910  +
pop ebp  +
retn 4  +
***
mov eax [ecx+10h] +
cmp eax [ecx+8] +
setnz al  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
push edi  +
push 14h  +
mov edi [esi+8] +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_4] eax +
test eax eax +
jz loc_47CB6D  +
push dword ptr [esi+10h]  +
mov ecx eax +
push edi  +
call sub_47C7E0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ebx  +
retn   +
***
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
add ecx 0Ch +
call sub_4849E0  +
pop ebp  +
retn 4  +
***
push [ebp+arg_0]  +
push dword ptr [ecx+8]  +
add ecx 0Ch +
call sub_484AA0  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push dword ptr [ebp+8]  +
lea eax [ebp-4] +
push eax  +
call sub_47CA10  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp-4] +
test ecx ecx +
jz loc_47CC3F  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
push dword ptr [edi+8]  +
lea ecx [edi+0Ch] +
call sub_484B20  +
mov ecx edi +
mov esi eax +
call sub_47C950  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
sub ecx 8 +
jmp sub_47CD20  +
***
push esi  +
call loc_4808A0  +
xor ecx ecx +
add esp 8 +
cmp eax 102h +
setz al  +
retn   +
***
push esi  +
mov esi ecx +
call ds:__imp_GetCurrentThreadId  +
cmp [esi+1Ch] eax +
jz loc_47CDBF  +
movsd xmm0 [ebp+arg_0] +
sub esp 8 +
movsd [esp+0Ch+var_C] xmm0 +
call sub_4800C0  +
push eax  +
push dword ptr [esi+18h]  +
call loc_4808A0  +
add esp 10h +
pop esi  +
pop ebp  +
retn 8  +
***
call ds:__imp_GetCurrentThreadId  +
cmp [esi+1Ch] eax +
jz loc_47CDEB  +
push 0FFFFFFFFh  +
push dword ptr [esi+18h]  +
call loc_4808A0  +
add esp 8 +
pop esi  +
retn   +
***
jmp dword ptr [eax+24h]  +
***
push 0FFFFFFFFh  +
push offset loc_4BAC92  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset unk_4F536C  +
push 20h  +
call sub_47AC00  +
add esp 8 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47CE4F  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_47CC80  +
mov esi eax +
jmp loc_47CE51  +
xor esi esi +
mov ecx esi +
call sub_4795C0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BACBF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 20h  +
call sub_47ABB0  +
mov edi eax +
add esp 4 +
mov [ebp+var_10] edi +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_47CF0C  +
push [ebp+arg_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_484BE0  +
lea esi [edi+1Ch] +
mov dword ptr [edi] offset off_4CFA9C +
mov ecx edi +
mov dword ptr [edi+8] offset off_4CFAD8 +
mov dword ptr [edi+18h] 0FFFFFFFFh +
mov dword ptr [esi] 0 +
call sub_4795C0  +
push esi  +
push 0  +
push edi  +
push offset sub_47D100  +
push [ebp+dwStackSize]  +
push 0  +
call sub_4984A9  +
mov [edi+18h] eax +
add esp 18h +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB30F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 20h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47CF74  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_47CC80  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push dword ptr [ecx+18h]  +
call loc_4804B0  +
add esp 4 +
add eax 0Fh +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
divsd xmm0 ds:qword_4CFB20 +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
movsd xmm1 qword ptr [ebp+8] +
xorps xmm0 xmm0 +
comisd xmm0 xmm1 +
push esi  +
mov esi ecx +
ja loc_47D01E  +
comisd xmm1 ds:qword_4BF6E0 +
ja loc_47D01E  +
mulsd xmm1 ds:qword_4CFB18 +
sub esp 8 +
addsd xmm1 ds:qword_4E1048 +
movsd qword ptr [ebp+8] xmm1 +
fld  qword ptr [ebp+8] +
fstp  qword ptr [esp] +
call sub_4A0F30  +
call sub_489710  +
mov eax ds:dword_4CFAF4[eax*4] +
push eax  +
push dword ptr [esi+18h]  +
call loc_480720  +
add esp 10h +
pop esi  +
pop ebp  +
retn 8  +
***
sub esp 8 +
movsd qword ptr [esp] xmm1 +
push offset aBadPriorityF  +
call loc_47A130  +
push 0FFFFFFFEh  +
movsd xmm0 [ebp+arg_0] +
sub esp 8 +
movsd [esp+8+var_8] xmm0 +
call sub_4800C0  +
add esp 8 +
push eax  +
call ds:Sleep  +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
call sub_484E90  +
call sub_47EDA0  +
xor eax eax +
pop ebp  +
retn 4  +
***
add ecx 0FFFFFFF8h +
jmp sub_479590  +
***
push 0FFFFFFFFh  +
push offset loc_4BB2E3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_C] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4CFB2C +
test edi edi +
jz loc_47D175  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
movsd xmm0 [ebp+arg_4] +
sub esp 8 +
mov edi [ebp+arg_0] +
mov byte ptr [ebp+var_4] 1 +
mov [esi+0Ch] edi +
mov dword ptr [esi+10h] 0 +
movsd [esp+24h+var_24] xmm0 +
call sub_4800C0  +
add esp 8 +
cmp [ebp+arg_10] 0 +
jz loc_47D1A7  +
mov [esi+10h] eax +
push offset TimerFunc  +
push eax  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+24h]  +
push eax  +
call ds:SetTimer  +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_4B76A0  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp+var_10] +
mov dword ptr [esi] offset off_4CFB2C +
call sub_47AC20  +
mov edi [esi+0Ch] +
mov dword ptr [esi+0Ch] 0 +
mov ecx [esi+8] +
test ecx ecx +
jz loc_47D233  +
call sub_479590  +
mov dword ptr [esi+8] 0 +
lea ecx [ebp+var_10] +
call sub_47AC40  +
test edi edi +
jz loc_47D255  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+24h]  +
push eax  +
call ds:KillTimer  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_47D261  +
call sub_479590  +
mov dword ptr [esi] offset off_4CE8B4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_47D1E0  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_47D2B1  +
test al 4 +
jnz loc_47D2A6  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push edi  +
push esi  +
call sub_47AC20  +
mov edi [esi+0Ch] +
mov dword ptr [esi+0Ch] 0 +
mov ecx [esi+8] +
test ecx ecx +
jz loc_47D2EE  +
call sub_479590  +
mov dword ptr [esi+8] 0 +
lea ecx [ebp+var_4] +
call sub_47AC40  +
test edi edi +
jz loc_47D310  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+24h]  +
push eax  +
call ds:KillTimer  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BACFE  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_1C] ebx +
xor esi esi +
mov [ebp+var_14] esi +
push ebx  +
lea ecx [ebp+var_18] +
mov [ebp+var_4] esi +
call sub_47AC20  +
mov edi [ebx+8] +
test edi edi +
jz loc_47D37B  +
xor ecx ecx +
call sub_474AB0  +
mov ecx edi +
call sub_4795C0  +
mov esi edi +
mov [ebp+var_14] esi +
lea ecx [ebp+var_18] +
call sub_47AC40  +
test esi esi +
jz loc_47D3CE  +
call sub_474B70  +
mov edi eax +
mov [ebp+var_18] edi +
mov eax [esi] +
mov ecx esi +
push ebx  +
mov byte ptr [ebp+var_4] 2 +
call dword ptr [eax+10h]  +
jmp loc_47D3B8  +
mov ecx [ebp+var_20] +
push 1  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax offset loc_47D3AF +
retn   +
mov ebx [ebp+var_1C] +
mov esi [ebp+var_14] +
mov edi [ebp+var_18] +
mov [ebp+var_4] 1 +
mov byte ptr [ebp+var_4] 4 +
test edi edi +
jz loc_47D3CE  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+4]  +
push ebx  +
lea ecx [ebp+var_1C] +
call sub_47AC20  +
mov ecx [ebx+0Ch] +
mov byte ptr [ebp+var_4] 5 +
test ecx ecx +
jz loc_47D3FE  +
mov eax [ebx+10h] +
test eax eax +
jz loc_47D3FE  +
push offset TimerFunc  +
push eax  +
mov eax [ecx] +
push ebx  +
call dword ptr [eax+24h]  +
push eax  +
call ds:SetTimer  +
jmp loc_47D405  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+14h]  +
lea ecx [ebp+var_1C] +
call sub_47AC40  +
test esi esi +
jz loc_47D418  +
mov ecx esi +
call sub_479590  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ecx+10h] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_4CAA90[eax*8] +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push esi  +
call sub_47AC20  +
cmp dword ptr [esi+0Ch] 0 +
lea ecx [ebp+var_4] +
setnz bl  +
call sub_47AC40  +
pop esi  +
mov al bl +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAD2F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_47D710  +
push 14h  +
mov edi eax +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_47D4F3  +
push [ebp+arg_C]  +
movsd xmm0 [ebp+arg_0] +
mov ecx eax +
push [ebp+arg_8]  +
sub esp 8 +
movsd [esp+2Ch+var_2C] xmm0 +
push edi  +
call sub_47D130  +
mov esi eax +
jmp loc_47D4F5  +
xor esi esi +
mov eax [edi] +
mov ecx edi +
push esi  +
mov [ebp+var_4] 0FFFFFFFFh +
call dword ptr [eax+28h]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_8] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+8] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4CFB50 +
test ecx ecx +
jz loc_47D570  +
push 0  +
call loc_47BE30  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_47D57E  +
push 0  +
call loc_47BE30  +
push dword ptr [esi+10h]  +
call ds:DestroyWindow  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_47D593  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_47D59F  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47D5D8  +
test al 4 +
jnz loc_47D5CD  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BAD58  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp+var_14] +
call sub_47AC20  +
cmp dword ptr [esi+0Ch] 0 +
mov [ebp+var_4] 0 +
jnz loc_47D652  +
lea eax [ebp+var_10] +
push 0  +
push eax  +
call loc_47BAD0  +
mov edx [esi+0Ch] +
add esp 8 +
mov ecx [eax] +
mov [esi+0Ch] ecx +
mov [eax] edx +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_47D652  +
call sub_479590  +
mov ecx [esi+0Ch] +
lea edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov [ebp+arg_0] eax +
push edx  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+30h]  +
lea ecx [ebp+var_14] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BAD97  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 20h  +
push offset aVcfoundationSy  +
call sub_474F10  +
add esp 8 +
mov esi eax +
mov [ebp+var_10] esi +
call sub_484FA0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+34h]  +
mov ebx eax +
push esi  +
mov ecx ebx +
mov edx [ebx] +
call dword ptr [edx+18h]  +
mov edi eax +
test edi edi +
jz loc_47D7A0  +
push 0  +
push offset off_4F0428  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jnz loc_47D807  +
push edi  +
push offset off_4F0428  +
call loc_47A0A0  +
push 14h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_47D7EC  +
lea eax [esi+8] +
mov byte ptr [ebp+var_4] 1 +
push 0  +
push eax  +
mov dword ptr [esi] offset off_4CFB50 +
call loc_47BAD0  +
add esp 8 +
mov dword ptr [esi+0Ch] 0 +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
call loc_47D870  +
mov [esi+10h] eax +
jmp loc_47D7EE  +
xor esi esi +
mov edx [ebx] +
mov ecx ebx +
push esi  +
push [ebp+var_10]  +
mov [ebp+var_4] 0FFFFFFFFh +
call dword ptr [edx+2Ch]  +
mov ecx esi +
call sub_479590  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
movsd xmm0 [ebp+arg_0] +
push esi  +
push edi  +
sub esp 8 +
mov edi ecx +
movsd [esp+10h+var_10] xmm0 +
call sub_4800C0  +
add esp 8 +
mov esi eax +
call ds:GetTickCount  +
add esi eax +
mov ecx edi +
push esi  +
call sub_47D8F0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
retn   +
***
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax off_4EEF0C +
xorps xmm0 xmm0 +
push esi  +
movups oword ptr [ebp-10h] xmm0 +
push edi  +
mov [ebp-4] eax +
mov edi ecx +
lea eax [ebp-28h] +
mov dword ptr [ebp-28h] 0 +
push eax  +
mov dword ptr [ebp-24h] offset sub_47DE30 +
movups oword ptr [ebp-20h] xmm0 +
call ds:RegisterClassW  +
push 0  +
push 0  +
push 0  +
push 0FFFFFFFDh  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push offset WindowName  +
push off_4EEF0C  +
push 0  +
call ds:CreateWindowExW  +
mov esi eax +
test esi esi +
jz loc_47D8E2  +
push edi  +
push 0FFFFFFEBh  +
push esi  +
call ds:SetWindowLongW  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4A1A97  +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ds:PeekMessageW +
push edi  +
mov edi ecx +
push 1  +
push 402h  +
push 402h  +
push dword ptr [edi+10h]  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jnz loc_47D901  +
mov ebx ds:TranslateMessage +
push 1  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jz loc_47D96C  +
lea eax [ebp+Msg] +
push eax  +
call ebx  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
mov ecx [ebp+Msg.message] +
cmp ecx 12h +
jz loc_47D984  +
mov eax [ebp+Msg.hwnd] +
cmp eax [edi+10h] +
jnz loc_47D95A  +
cmp ecx 402h +
jz loc_47D984  +
push 1  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jnz loc_47D932  +
push [ebp+arg_0]  +
mov ecx edi +
call loc_47DD00  +
cmp eax 0FFFFFFFFh +
jz loc_47D920  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BADCE  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
call sub_474B70  +
mov esi eax +
mov [ebp+var_18] esi +
mov ecx edi +
mov [ebp+var_4] 0 +
call sub_47DA90  +
test eax eax +
jz loc_47DA11  +
mov edx [eax] +
mov ecx eax +
mov byte ptr [ebp+var_4] 1 +
call dword ptr [edx+10h]  +
jmp loc_47D9DA  +
mov ecx [ebp-1Ch] +
push 1  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov eax offset loc_47DA09 +
retn   +
mov edi [ebp-14h] +
mov esi [ebp-18h] +
jmp loc_47D9DA  +
mov [ebp+var_4] 3 +
test esi esi +
jz loc_47DA23  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push 0Ch  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_47DA78  +
mov ecx esi +
mov dword ptr [esi] offset off_4CFBE0 +
call sub_474AB0  +
mov ecx dword_4F538C +
push 0  +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx dword_4F538C +
xor esi esi +
push esi  +
push esi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAE00  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
push ebx  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov ecx [ebx+8] +
mov [ebp+var_4] 0 +
call sub_47B0F0  +
test al al +
jnz loc_47DB37  +
mov ecx [ebx+8] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
mov edi eax +
test edi edi +
jnz loc_47DAEA  +
xor esi esi +
jmp loc_47DB0E  +
push 0  +
push offset off_4F21BC  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_47DB2C  +
mov ecx esi +
call sub_4795C0  +
mov [ebp+var_14] esi +
mov ecx [ebx+8] +
push 1  +
push 0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ecx] +
call dword ptr [eax+3Ch]  +
mov ecx esi +
call sub_474AB0  +
mov esi eax +
jmp loc_47DB39  +
push edi  +
push offset off_4F21BC  +
call loc_47A0A0  +
xor esi esi +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
push ecx  +
push esi  +
push 0Ch  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_47DB97  +
mov ecx esi +
mov dword ptr [esi] offset off_4CFBF8 +
call sub_474AB0  +
jmp loc_47DB99  +
xor esi esi +
movsd xmm0 ds:qword_4CFC10 +
push 1  +
push esi  +
sub esp 8 +
movsd [esp+18h+var_18] xmm0 +
call sub_47D490  +
add esp 10h +
call sub_47D720  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+20h]  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAE30  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_47DC05  +
call sub_47C0A0  +
cmp [ebp+arg_4] 0 +
jz loc_47DC8A  +
call sub_47D720  +
cmp edi eax +
jnz loc_47DC2E  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
call loc_485330  +
add esp 4 +
lea ecx [ebp+arg_0] +
mov esi eax +
push edi  +
call sub_47AC20  +
mov ecx [edi+8] +
lea eax [ebp+arg_4] +
push eax  +
push 1  +
mov [ebp+var_4] 0 +
mov edx [ecx] +
mov dword ptr [ebp+arg_4] esi +
call dword ptr [edx+30h]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
lea ecx [ebp+arg_0] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_47AC40  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push edi  +
lea ecx [ebp+var_14] +
call sub_47AC20  +
mov ecx [edi+8] +
lea edx [ebp+var_10] +
push edx  +
push 1  +
mov [ebp+var_4] 1 +
mov eax [ecx] +
mov [ebp+var_10] esi +
call dword ptr [eax+30h]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
lea ecx [ebp+var_14] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push 0  +
push 402h  +
push dword ptr [ecx+10h]  +
call ds:PostMessageW  +
test eax eax +
jz loc_47DCE7  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aPostmessage  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BAE58  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+8] +
call ds:PostMessageW  +
test eax eax +
jz loc_47DE17  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aPostmessage  +
call loc_480FC0  +
push 0FFFFFFEBh  +
push [ebp+hWnd]  +
call ds:GetWindowLongW  +
mov ecx [ebp+arg_4] +
cmp ecx 401h +
jz loc_47DE53  +
mov [ebp+arg_4] ecx +
pop ebp  +
jmp ds:DefWindowProcW  +
mov ecx eax +
call sub_47D9A0  +
mov eax 1 +
pop ebp  +
retn 10h  +
***
push ecx  +
push 0FFFFFFFFh  +
call sub_48D64F  +
mov ecx [ebp+8] +
push dword ptr [ebp-14h]  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
mov eax offset loc_47DF3B +
retn   +
***
push ecx  +
push esi  +
push 10h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_47DFB6  +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [esi] offset off_4CFC64 +
test edi edi +
jz loc_47DF9D  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov ecx esi +
mov dword ptr [esi+0Ch] 0 +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push esi  +
call sub_47AC20  +
add dword ptr [esi+0Ch] 0FFFFFFFFh +
pop esi  +
jnz loc_47DFDF  +
lea ecx [ebp+var_4] +
call sub_47AEF0  +
lea ecx [ebp+var_4] +
call sub_47AC40  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_47E00B  +
push eax  +
call sub_485E30  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BAEAE  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-10h] edi +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_47E059  +
call sub_47C0A0  +
call sub_474B70  +
mov esi eax +
mov [ebp-18h] esi +
mov eax [ebx] +
mov ecx ebx +
mov dword ptr [ebp-4] 0 +
call dword ptr [eax+14h]  +
mov ebx 1 +
mov [ebp-14h] eax +
cmp eax ebx +
jle loc_47E0BD  +
mov eax [ebp+8] +
mov ecx eax +
push ebx  +
mov edx [eax] +
call dword ptr [edx+2Ch]  +
mov edi eax +
test edi edi +
jz loc_47E0AC  +
push 0  +
push offset off_4EFBD4  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_47E0CF  +
mov edi [ebp-10h] +
mov ecx edi +
push eax  +
mov edx [edi] +
call dword ptr [edx+18h]  +
inc ebx  +
cmp ebx [ebp-14h] +
jl loc_47E080  +
mov ecx [ebp+8] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
mov ebx eax +
test ebx ebx +
jnz loc_47E0DA  +
jmp loc_47E0F5  +
push edi  +
push offset off_4EFBD4  +
call loc_47A0A0  +
push 0  +
push offset off_4EFBD4  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_47E13A  +
mov edx [edi] +
mov ecx edi +
push eax  +
call dword ptr [edx+14h]  +
test esi esi +
jz loc_47E10D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
xor esi esi +
mov [ebp-18h] esi +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+24h]  +
mov dword ptr [ebp-4] 1 +
test esi esi +
jz loc_47E126  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push offset off_4EFBD4  +
call loc_47A0A0  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_47E180  +
push esi  +
push eax  +
call sub_485FD0  +
push offset aNchostserver  +
mov esi eax +
call sub_4782A0  +
push 1  +
push 0  +
push eax  +
push esi  +
call loc_4850E0  +
add esp 14h +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
test ebx ebx +
jz loc_47E1DB  +
mov esi 1 +
xadd dword_4F5390 esi +
inc esi  +
push ebx  +
call sub_485E30  +
mov edx [ebx] +
mov ecx ebx +
mov edi eax +
call dword ptr [edx+24h]  +
push eax  +
push esi  +
push offset aNchostDD  +
call sub_4782A0  +
push 1  +
push 0  +
push eax  +
push edi  +
call loc_4850E0  +
add esp 1Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push ecx  +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push esi  +
call sub_47AC20  +
cmp dword ptr [esi+0Ch] 0 +
jle loc_47E214  +
lea ecx [ebp+var_4] +
call sub_47AF80  +
cmp dword ptr [esi+0Ch] 0 +
jg loc_47E206  +
lea ecx [ebp+var_4] +
call sub_47AC40  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
jmp CoUninitialize  +
***
push 0FFFFFFFFh  +
push offset loc_4B8A20  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
test ecx ecx +
jz loc_47E27E  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47E2C2  +
test al 4 +
jnz loc_47E2B7  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 0Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BAEE0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_18] 0 +
call sub_4864F0  +
lea ecx [ebp+var_14] +
mov [ebp+var_4] 0 +
call loc_4865A0  +
mov edi eax +
xor esi esi +
test edi edi +
jle loc_47E356  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [ebp+var_14] +
call sub_4867C0  +
push 0  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
call loc_486870  +
test al al +
mov eax [ebp+var_10] +
jnz loc_47E36B  +
mov byte ptr [ebp+var_4] 0 +
test eax eax +
jz loc_47E351  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi edi +
jl loc_47E321  +
push 7  +
push offset aBadXml  +
call sub_474F10  +
add esp 8 +
push eax  +
call loc_479F90  +
mov esi [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi] eax +
test ecx ecx +
jz loc_47E38B  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAEE0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_4] +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_18] 0 +
call sub_4864F0  +
lea ecx [ebp+var_14] +
mov [ebp+var_4] 0 +
call loc_4865A0  +
mov edi eax +
xor esi esi +
test edi edi +
jle loc_47E42A  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [ebp+var_14] +
call sub_4867C0  +
push dword_4F5490  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
call loc_486870  +
test al al +
mov eax [ebp+var_10] +
jnz loc_47E43F  +
mov byte ptr [ebp+var_4] 0 +
test eax eax +
jz loc_47E425  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi edi +
jl loc_47E3F1  +
push 18h  +
push offset aBadXmlNoRootEl  +
call sub_474F10  +
add esp 8 +
push eax  +
call loc_479F90  +
mov esi [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+var_10] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov [esi] eax +
test ecx ecx +
jz loc_47E45F  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BAF0C  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F53A0 +
cmp eax [ecx+4] +
jle loc_47E679  +
push offset dword_4F53A0  +
call sub_489058  +
add esp 4 +
cmp dword_4F53A0 0FFFFFFFFh +
jnz loc_47E679  +
push 0Ch  +
mov [ebp+var_4] 0 +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_1C] esi +
test esi esi +
jz loc_47E50B  +
mov dword ptr [esi] offset off_4CFCB0 +
mov dword ptr [esi+8] offset loc_47E7B0 +
jmp loc_47E50D  +
xor esi esi +
push 0Ch  +
call sub_47ABB0  +
mov edi eax +
add esp 4 +
mov [ebp+var_1C] edi +
test edi edi +
jz loc_47E52F  +
mov dword ptr [edi] offset off_4CFCB0 +
mov dword ptr [edi+8] offset loc_47EA20 +
jmp loc_47E531  +
xor edi edi +
push 0Ch  +
call sub_47ABB0  +
mov ebx eax +
add esp 4 +
mov [ebp+var_1C] ebx +
test ebx ebx +
jz loc_47E553  +
mov dword ptr [ebx] offset off_4CFCB0 +
mov dword ptr [ebx+8] offset loc_47EA00 +
jmp loc_47E555  +
xor ebx ebx +
push 0Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
test eax eax +
jz loc_47E575  +
mov dword ptr [eax] offset off_4CFCB0 +
mov dword ptr [eax+8] offset sub_47EA10 +
jmp loc_47E57C  +
mov [ebp+var_10] 0 +
push 0Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
test eax eax +
jz loc_47E59C  +
mov dword ptr [eax] offset off_4CFCB0 +
mov dword ptr [eax+8] offset sub_47E7F0 +
jmp loc_47E5A3  +
mov [ebp+var_14] 0 +
push 0Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_18] eax +
test eax eax +
jz loc_47E5C3  +
mov dword ptr [eax] offset off_4CFCB0 +
mov dword ptr [eax+8] offset sub_47E7C0 +
jmp loc_47E5CA  +
mov [ebp+var_18] 0 +
push 0Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_47E5EA  +
mov dword ptr [eax] offset off_4CFCB0 +
mov dword ptr [eax+8] offset dword_47E8E0 +
jmp loc_47E5F1  +
mov [ebp+var_1C] 0 +
push 0Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_20] eax +
test eax eax +
jz loc_47E611  +
mov dword ptr [eax] offset off_4CFCB0 +
mov dword ptr [eax+8] offset sub_47E810 +
jmp loc_47E613  +
xor eax eax +
push 0  +
push esi  +
push dword_4F54C0  +
push edi  +
push dword_4F54BC  +
push ebx  +
push dword_4F54B8  +
push [ebp+var_10]  +
push dword_4F54B4  +
push [ebp+var_14]  +
push dword_4F54B0  +
push [ebp+var_18]  +
push dword_4F54AC  +
push [ebp+var_1C]  +
push dword_4F549C  +
push eax  +
push dword_4F5498  +
push offset dword_4F539C  +
call sub_47B550  +
push offset loc_4BBE90  +
call sub_488F0F  +
add esp 4Ch +
push offset dword_4F53A0  +
call sub_489019  +
add esp 4 +
mov eax dword_4F539C +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call sub_47E480  +
mov ecx [ebp+8] +
mov esi eax +
call loc_486930  +
mov edx [esi] +
mov edi eax +
push edi  +
mov ecx esi +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_47E6E2  +
push 0  +
push offset off_4F05D4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_47E6D7  +
pop edi  +
pop esi  +
mov eax [eax+8] +
pop ebp  +
jmp eax  +
***
push esi  +
push offset off_4F05D4  +
call loc_47A0A0  +
push edi  +
push offset aBadXmlUnknownT  +
call loc_479FD0  +
push 0FFFFFFFFh  +
push offset loc_4BAF48  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push [ebp+arg_0]  +
lea eax [ebp+var_14] +
push eax  +
call loc_4865D0  +
lea eax [ebp+var_14] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_47E3A0  +
lea eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_47E2D0  +
lea eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
call loc_47E690  +
mov ecx [ebp+arg_0] +
add esp 14h +
mov byte ptr [ebp+var_4] 1 +
mov esi eax +
test ecx ecx +
jz loc_47E76A  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 0 +
test eax eax +
jz loc_47E77B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_47E78F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
jmp sub_47B950  +
***
mov ecx [ebp+arg_0] +
call loc_486990  +
mov ecx eax +
call loc_478690  +
sub esp 8 +
fstp  [esp+8+var_8] +
call sub_47C350  +
add esp 8 +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
push 0FFFFFFFFh  +
push offset loc_4BAF80  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
call sub_47BCF0  +
mov ecx [ebp+arg_0] +
add esp 4 +
mov edi eax +
lea eax [ebp+var_14] +
push eax  +
call sub_4864F0  +
lea ecx [ebp+var_14] +
mov [ebp+var_4] 0 +
call loc_4865A0  +
mov ebx eax +
xor esi esi +
test ebx ebx +
jle loc_47E8B8  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
lea ecx [ebp+var_14] +
call sub_4867C0  +
push 0  +
lea ecx [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
call loc_486870  +
test al al +
jz loc_47E8A2  +
lea eax [ebp+var_10] +
push eax  +
call loc_47E690  +
add esp 4 +
mov [ebp+var_18] eax +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push 1  +
mov ecx edi +
call dword ptr [eax+30h]  +
mov eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 0 +
test eax eax +
jz loc_47E8B3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
inc esi  +
cmp esi ebx +
jl loc_47E867  +
mov eax [ebp+var_14] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_47E8CC  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
jmp fword ptr (byte_4BBFFF-4BC047h)[eax]  +
***
jmp sub_484380  +
***
mov ecx [ebp+arg_0] +
pop ebp  +
jmp loc_486990  +
***
jmp sub_47B960  +
***
push 0FFFFFFFFh  +
push offset loc_4BAFE8  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_47EA5F  +
call sub_47C0A0  +
push 1  +
push eax  +
call sub_479A10  +
mov esi eax +
add esp 8 +
test esi esi +
jnz loc_47EA75  +
call sub_47C0A0  +
lea ecx [ebp+arg_0+3] +
call loc_486340  +
push esi  +
lea ecx [ebp+arg_0+3] +
mov [ebp+var_4] 0 +
call sub_47E6F0  +
lea ecx [ebp+arg_0+3] +
mov esi eax +
call CoUninitialize  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx+8] +
mov eax [ecx] +
mov eax [eax+10h] +
jmp eax  +
***
sub esp 8 +
push esi  +
mov esi ecx +
lea edx [ebp+var_8] +
push edx  +
mov ecx [esi+8] +
mov eax [ecx] +
call dword ptr [eax+14h]  +
cmp byte ptr [esi+0Ch] 0 +
mov eax [ebp+var_8] +
cmovnz eax [ebp+var_4] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB01F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 10h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_47EB5F  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
mov ecx esi +
mov dword ptr [esi] offset off_4CFD04 +
mov [esi+8] eax +
mov byte ptr [esi+0Ch] 1 +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+8] +
push dword ptr [esi+10h]  +
mov dword ptr [esi] offset off_4CFD24 +
mov [ebp+var_4] 0 +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_47EBC9  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_47EC02  +
test al 4 +
jnz loc_47EBF7  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov edi [ebp+10h] +
mov dword ptr [ebp-4] 0 +
test edi edi +
jz loc_47EC3E  +
js loc_47EC8B  +
test ebx ebx +
jz loc_47EC8B  +
cmp dword ptr [ebp+14h] 0 +
jz loc_47EC92  +
push 14h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+10h] esi +
test esi esi +
jz loc_47EC7D  +
mov ecx [ebp+14h] +
mov dword ptr [esi] offset off_4CFD24 +
call sub_4795C0  +
mov eax [ebp+14h] +
mov [esi+8] eax +
mov eax [ebp+8] +
mov [esi+0Ch] edi +
pop edi  +
mov [esi+10h] ebx +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
xor esi esi +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push edi  +
call sub_47C030  +
call sub_47C0A0  +
push ecx  +
push esi  +
push [ebp+arg_8]  +
lea eax [ebp+var_4] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call loc_47EC20  +
add esp 10h +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_47ECD5  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset aFatalErrorInSS  +
call sub_47A730  +
add esp 0Ch +
jmp sub_4A1ADA  +
***
push [ebp+arg_0]  +
push offset aFatalErrorInS  +
call sub_47A730  +
add esp 8 +
jmp sub_48DE66  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+8]  +
test eax eax +
mov ecx offset aFatalErrorInS@ +
mov eax [edi] +
mov esi offset aFatalErrorIn_0 +
cmovz esi ecx +
mov ecx edi +
call dword ptr [eax+8]  +
push eax  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+4]  +
push eax  +
push edi  +
push dword ptr [ebp+8]  +
push esi  +
call sub_47A730  +
add esp 14h +
call sub_48DE66  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
push offset aFatalErrorIn_1  +
call sub_47A730  +
add esp 10h +
call sub_48DE66  +
push 0FFFFFFFFh  +
call loc_4807B0  +
add esp 8 +
mov eax offset loc_47EE33 +
retn   +
***
push ecx  +
push dword_4F53AC  +
call loc_480770  +
add esp 4 +
test eax eax +
jnz loc_47EEAD  +
push esi  +
push 8  +
call sub_488C2D  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_47EE99  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_47EE9B  +
xor esi esi +
push esi  +
push dword_4F53AC  +
call loc_4807B0  +
add esp 8 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push dword_4F53AC  +
call loc_480770  +
mov esi eax +
add esp 4 +
test esi esi +
jnz loc_47EF0C  +
push 8  +
call sub_488C2D  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_47EEFB  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_47EEFD  +
xor esi esi +
push esi  +
push dword_4F53AC  +
call loc_4807B0  +
add esp 8 +
cmp esi offset dword_4F53A4 +
pop esi  +
setz al  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
mov eax [eax+24h] +
call eax  +
test al al +
jz loc_47EF40  +
mov eax [esi+8] +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
mov ecx esi +
call loc_479120  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jnz loc_47EF66  +
pop edi  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
push 0  +
push offset off_4EFA10  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_47EFEA  +
mov ecx [esi+0Ch] +
cmp ecx [eax+0Ch] +
jnz loc_47EFE2  +
mov edx [esi+8] +
mov esi [eax+8] +
sub ecx 4 +
jb loc_47EFA5  +
mov eax [edx] +
cmp eax [esi] +
jnz loc_47EFAA  +
add edx 4 +
add esi 4 +
sub ecx 4 +
jnb loc_47EF94  +
cmp ecx 0FFFFFFFCh +
jz loc_47EFD7  +
mov al [edx] +
cmp al [esi] +
jnz loc_47EFE2  +
cmp ecx 0FFFFFFFDh +
jz loc_47EFD7  +
mov al [edx+1] +
cmp al [esi+1] +
jnz loc_47EFE2  +
cmp ecx 0FFFFFFFEh +
jz loc_47EFD7  +
mov al [edx+2] +
cmp al [esi+2] +
jnz loc_47EFE2  +
cmp ecx 0FFFFFFFFh +
jz loc_47EFD7  +
mov al [edx+3] +
cmp al [esi+3] +
jnz loc_47EFE2  +
pop edi  +
mov eax 1 +
pop esi  +
pop ebp  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
mov ecx esi +
call loc_477E90  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov edx [ebp+10h] +
push ebx  +
mov ebx ecx +
mov [ebp-4] edx +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebx+0Ch] +
mov [ebp-8] esi +
cmp esi edi +
ja loc_47F056  +
mov eax edi +
sub eax esi +
cmp edx eax +
ja loc_47F056  +
xor ecx ecx +
test edx edx +
jz loc_47F04D  +
mov edi [ebp+8] +
mov dword ptr [ebp-4] 0FFh +
mov eax [ebx+8] +
add eax esi +
movsx ax byte ptr [eax+ecx] +
and ax [ebp-4] +
mov [edi+ecx*2] ax +
inc ecx  +
cmp ecx edx +
jb loc_47F036  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push edi  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
push ebp  +
mov ebp esp +
mov eax [ecx+0Ch] +
mov edx [ebp+8] +
cmp edx eax +
jnb loc_47F088  +
mov eax [ecx+8] +
movzx eax byte ptr [eax+edx] +
pop ebp  +
retn 4  +
***
push eax  +
push edx  +
call loc_47C080  +
int 3  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax ecx +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov edx [eax+0Ch] +
mov [ebp-4] eax +
mov [ebp-0Ch] esi +
push edi  +
mov edi [ebp+0Ch] +
mov [ebp-8] edi +
cmp esi edx +
ja loc_47F152  +
mov eax edx +
sub eax esi +
cmp edi eax +
ja loc_47F152  +
mov edi [ebp+1Ch] +
mov ebx [ebp+18h] +
test edi edi +
jz loc_47F0D1  +
js loc_47F146  +
test ebx ebx +
jz loc_47F146  +
mov esi [ebp+10h] +
test esi esi +
jz loc_47F14D  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+24h] +
call eax  +
test al al +
jz loc_47F126  +
test ebx ebx +
jz loc_47F115  +
mov esi [ebp+0Ch] +
cmp edi esi +
mov ecx [ebp-4] +
cmovb esi edi +
push esi  +
mov ecx [ecx+8] +
add ecx [ebp+8] +
push ecx  +
push ebx  +
call loc_48C9C0  +
mov ecx [ebp+20h] +
add esp 0Ch +
mov eax esi +
pop edi  +
mov [ecx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
mov ecx [ebp+20h] +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
mov [ecx] eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push dword ptr [ebp+20h]  +
mov ecx [ebp-4] +
push edi  +
push ebx  +
push dword ptr [ebp+14h]  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_479230  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 1Ch  +
***
push ebx  +
push edi  +
call sub_47C030  +
call sub_47C0A0  +
push edx  +
lea eax [ebp-0Ch] +
push eax  +
call loc_47C050  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_47F183  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47F185  +
xor eax eax +
mov [esi+4] eax +
mov ebx [edi+8] +
test ebx ebx +
jz loc_47F196  +
mov ecx ebx +
call sub_4795C0  +
mov [esi+8] ebx +
mov dword ptr [esi] offset off_4CFE3C +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CFE50 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_47F1E3  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47F1E5  +
xor eax eax +
mov [esi+4] eax +
mov ebx [edi+8] +
test ebx ebx +
jz loc_47F1F6  +
mov ecx ebx +
call sub_4795C0  +
mov [esi+8] ebx +
mov dword ptr [esi] offset off_4CFE3C +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CFE8C +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_47F243  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47F245  +
xor eax eax +
mov [esi+4] eax +
mov ebx [edi+8] +
test ebx ebx +
jz loc_47F256  +
mov ecx ebx +
call sub_4795C0  +
mov [esi+8] ebx +
mov dword ptr [esi] offset off_4CFE3C +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CFE64 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_47F2A3  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47F2A5  +
xor eax eax +
mov [esi+4] eax +
mov ebx [edi+8] +
test ebx ebx +
jz loc_47F2B6  +
mov ecx ebx +
call sub_4795C0  +
mov [esi+8] ebx +
mov dword ptr [esi] offset off_4CFE3C +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4CFE78 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_47F303  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_47F305  +
xor eax eax +
mov [esi+4] eax +
mov ebx [edi+8] +
test ebx ebx +
jz loc_47F316  +
mov ecx ebx +
call sub_4795C0  +
mov [esi+8] ebx +
mov dword ptr [esi] offset off_4CFE3C +
mov eax [edi+0Ch] +
mov [esi+0Ch] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_479ED0  +
test [ebp+arg_0] 1 +
jz loc_47F36C  +
push 14h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB0B6  +
mov eax large fs:0 +
push eax  +
sub esp 218h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
lea ecx [ebp-220h] +
push 0FFh  +
call sub_47F5C0  +
mov dword ptr [ebp-220h] offset off_4CEA68 +
lea eax [ebp+10h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-220h] +
call loc_481890  +
test esi esi +
jle loc_47F3F8  +
call sub_4A1B1C  +
cmp esi [eax] +
jge loc_47F3F8  +
call sub_4A1B16  +
mov eax [eax+esi*4] +
test eax eax +
jnz loc_47F3FD  +
mov eax offset aNA +
push eax  +
push esi  +
lea eax [ebp-220h] +
push offset aDS  +
push eax  +
call sub_481870  +
add esp 10h +
lea eax [ebp-224h] +
lea ecx [ebp-220h] +
push eax  +
call sub_475A60  +
push esi  +
push dword ptr [ebp-224h]  +
mov byte ptr [ebp-4] 1 +
call loc_47F440  +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
sub esp 14h +
lea eax [ecx-2] +
cmp eax 1Ah +
ja loc_47F4DF  +
movzx eax ds:byte_47F514[eax] +
jmp ds:off_47F500[eax*4]  +
push ecx  +
push offset aPosix  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_486DA0  +
push offset unk_4EA8BC  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aPosix  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_482250  +
push offset unk_4EA918  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aPosix  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_4821F0  +
push offset unk_4EA958  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aPosix  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_482280  +
push offset unk_4EA998  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aPosix  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_486DD0  +
push offset unk_4EA9D8  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
nop   +
add al 4 +
add al 4 +
add al 4 +
add al 4 +
add al 4 +
add [esp+eax] eax +
add al 2 +
add al 4 +
add [esp+eax] al +
add al 4 +
add al 4 +
add al 3 +
int 3  +
push ebp  +
mov ebp esp +
call sub_497984  +
push dword ptr [eax]  +
push dword ptr [ebp+8]  +
call loc_47F550  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB0E8  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+0Ch] +
test esi esi +
jle loc_47F58F  +
call sub_4A1B1C  +
cmp esi [eax] +
jge loc_47F58F  +
call sub_4A1B16  +
mov eax [eax+esi*4] +
test eax eax +
jnz loc_47F594  +
mov eax offset aNA +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
lea eax [ebp+0Ch] +
push offset aSFailedDS  +
push eax  +
call sub_477DB0  +
add esp 14h +
push esi  +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-4] 0 +
call loc_47F440  +
mov dx [ebp+arg_0] +
lea eax [ecx+12h] +
mov [ecx+4] eax +
movzx eax dx +
mov [ecx+0Ch] eax +
mov eax ecx +
mov dword ptr [ecx] offset off_4CFEB0 +
mov dword ptr [ecx+8] 0 +
mov [ecx+10h] dx +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea eax [esi+12h] +
mov dword ptr [esi] offset off_4CFEB0 +
mov [esi+4] eax +
xor eax eax +
mov [esi+10h] ax +
mov eax [ebp+arg_0] +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
test eax eax +
jle loc_47F62C  +
push 0  +
push eax  +
call sub_47FB60  +
mov dword ptr [esi+8] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dx [ebp+arg_0] +
lea eax [ecx+12h] +
mov [ecx+4] eax +
movzx eax dx +
mov [ecx+0Ch] eax +
mov eax ecx +
mov dword ptr [ecx] offset off_4CFEC8 +
mov dword ptr [ecx+8] 0 +
mov [ecx+10h] dx +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
lea eax [ecx+12h] +
mov dword ptr [ecx] offset off_4CFEB0 +
cmp edx eax +
jz locret_47F68A  +
lea eax [edx-10h] +
push eax  +
call sub_47BF70  +
pop ecx  +
retn   +
***
mov edx [ecx+4] +
lea eax [ecx+12h] +
mov dword ptr [ecx] offset off_4CFEC8 +
cmp edx eax +
jz locret_47F6A7  +
push edx  +
call sub_47BF70  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+4] +
lea eax [esi+12h] +
mov dword ptr [esi] offset off_4CFEB0 +
cmp ecx eax +
jz loc_47F6D2  +
lea eax [ecx-10h] +
push eax  +
call sub_47BF70  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_47F6E3  +
push 14h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+4] +
lea eax [esi+12h] +
mov dword ptr [esi] offset off_4CFEC8 +
cmp ecx eax +
jz loc_47F70F  +
push ecx  +
call sub_47BF70  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_47F720  +
push 14h  +
push esi  +
call sub_488C60  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
mov [ebp-4] ecx +
mov ecx [ebp+8] +
push esi  +
push edi  +
test ebx ebx +
jz loc_47F74A  +
js loc_47F7A1  +
test ecx ecx +
jz loc_47F7A1  +
mov esi [ebp+10h] +
test esi esi +
jz loc_47F7A8  +
mov eax [esi] +
push ebx  +
push ecx  +
mov ecx esi +
call dword ptr [eax+1Ch]  +
mov edi eax +
mov eax [ebp-4] +
mov ecx eax +
push dword ptr [eax+8]  +
push edi  +
call sub_47FB60  +
mov eax [ebp-4] +
lea ecx [ebp+0Ch] +
push ecx  +
mov ecx [ebp+10h] +
push edi  +
sub [eax+8] edi +
mov edx [eax+8] +
mov eax [eax+4] +
mov esi [esi] +
lea eax [eax+edx*2] +
push eax  +
push ebx  +
push dword ptr [ebp+8]  +
call dword ptr [esi+14h]  +
mov edx [ebp-4] +
mov ecx [ebp+0Ch] +
pop edi  +
pop esi  +
add [edx+8] ecx +
cmp eax ebx +
pop ebx  +
jnz loc_47F7AD  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ebx  +
call sub_47C030  +
call sub_47C0A0  +
push offset aDecodeFailed  +
call loc_47A130  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov [ebp-4] esi +
push edi  +
test ebx ebx +
jz loc_47F829  +
call sub_481770  +
mov edx [ebx] +
mov edi eax +
lea eax [ebp+8] +
mov ecx ebx +
push eax  +
push 0  +
push 0  +
push 0  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call dword ptr [edx+2Ch]  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_47FC00  +
mov ecx [ebp-4] +
lea eax [ebp+8] +
mov edx [ebp+8] +
mov esi [ebx] +
push eax  +
mov eax [ecx+8] +
add eax [ecx+4] +
mov ecx ebx +
push edx  +
sub eax edx +
push eax  +
push 0  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call dword ptr [esi+2Ch]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_47C0A0  +
push 0FFFFFFFFh  +
push offset loc_4BB11B  +
mov eax large fs:0 +
push eax  +
sub esp 21Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_228] ecx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_8] +
test esi esi +
jz loc_47F87E  +
js loc_47F877  +
test edi edi +
jnz loc_47F87E  +
push edi  +
push esi  +
call sub_47C030  +
test ebx ebx +
jnz loc_47F887  +
call sub_47C0A0  +
call sub_481250  +
cmp ebx eax +
jz loc_47F938  +
call sub_481770  +
cmp ebx eax +
jz loc_47F938  +
lea eax [ebp+var_212] +
mov [ebp+var_21C] 0 +
mov [ebp+var_220] eax +
mov eax 0FFh +
mov [ebp+var_218] 0FFh +
mov [ebp+var_214] ax +
mov [ebp+var_224] offset off_4CEA68 +
push ebx  +
push esi  +
push edi  +
lea ecx [ebp+var_224] +
mov [ebp+var_4] 0 +
call loc_47F730  +
mov edx [ebp+var_21C] +
xor ecx ecx +
mov eax [ebp+var_220] +
push edx  +
mov [eax+edx*2] cx +
mov ecx [ebp+var_228] +
push [ebp+var_220]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp+var_220] +
lea ecx [ebp+var_212] +
mov [ebp+var_224] offset off_4CFEB0 +
cmp eax ecx +
jz loc_47F945  +
add eax 0FFFFFFF0h +
push eax  +
call sub_47BF70  +
add esp 4 +
jmp loc_47F945  +
mov ecx [ebp+var_228] +
push esi  +
push edi  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
mov [ebp-4] ecx +
push esi  +
mov esi [ebp+8] +
push edi  +
test ebx ebx +
jz loc_47F98A  +
js loc_47F9CE  +
test esi esi +
jz loc_47F9CE  +
call sub_481770  +
mov edi eax +
push 0  +
push ebx  +
push esi  +
mov edx [edi] +
mov ecx edi +
call dword ptr [edx+18h]  +
mov ecx [ebp-4] +
mov esi eax +
push esi  +
call sub_47FC00  +
mov edx [ebp-4] +
lea ecx [ebp+0Ch] +
mov eax [edi] +
push ecx  +
push esi  +
mov ecx [edx+8] +
add ecx [edx+4] +
sub ecx esi +
push ecx  +
push 0  +
push ebx  +
push dword ptr [ebp+8]  +
mov ecx edi +
call dword ptr [eax+10h]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
push ebx  +
call sub_47C030  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_47F9F8  +
js loc_47FA2A  +
test esi esi +
jz loc_47FA2A  +
push dword ptr [ebx+8]  +
push edi  +
call sub_47FB60  +
mov ecx [ebx+8] +
mov eax [ebx+4] +
sub ecx edi +
lea ecx [eax+ecx*2] +
test edi edi +
jz loc_47FA23  +
movsx ax byte ptr [esi] +
lea ecx [ecx+2] +
lea esi [esi+1] +
mov [ecx-2] ax +
sub edi 1 +
jnz loc_47FA10  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
call sub_47C030  +
push ebx  +
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
mov [ebp+var_4] 0 +
mov ecx [edi+4] +
lea ebx [edi+12h] +
cmp ecx ebx +
jnz loc_47FABB  +
push [ebp+arg_4]  +
push ecx  +
call sub_482550  +
add esp 8 +
mov dword ptr [edi+8] 0 +
mov ecx eax +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
mov esi [ebp+arg_4] +
add ecx 0FFFFFFF0h +
lea eax ds:12h[esi*2] +
push eax  +
push ecx  +
call sub_47BFB0  +
push esi  +
push eax  +
call sub_482660  +
movzx ecx word ptr [edi+10h] +
add esp 10h +
mov edx eax +
mov [edi+4] ebx +
mov eax [ebp+arg_0] +
mov [edi+0Ch] ecx +
pop esi  +
mov dword ptr [edi+8] 0 +
pop edi  +
mov [eax] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edx [ebx+8] +
mov edi [ebp+0Ch] +
mov [ebp-8] esi +
mov [ebp-4] edi +
cmp esi edx +
ja loc_47FB50  +
mov eax edx +
sub eax esi +
cmp edi eax +
ja loc_47FB50  +
mov ecx [ebx+4] +
lea eax [edi+esi] +
sub edx eax +
add edx edx +
push edx  +
lea eax [ecx+eax*2] +
push eax  +
lea eax [ecx+esi*2] +
push eax  +
call loc_48B430  +
mov eax [ebp+0Ch] +
add esp 0Ch +
sub [ebx+8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edx  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
sub eax ecx +
cmp edi eax +
jle loc_47FBCE  +
push ebx  +
lea ebx [edi+108h] +
add ebx ecx +
lea eax [esi+12h] +
mov ecx [esi+4] +
and ebx 0FFFFFF00h +
cmp ecx eax +
mov [ebp+arg_0] ecx +
lea eax [ebx+ebx] +
push eax  +
jnz loc_47FBB5  +
call sub_47BF90  +
lea ecx [eax+10h] +
mov eax [esi+8] +
add eax eax +
mov [esi+4] ecx +
push eax  +
push [ebp+arg_0]  +
push ecx  +
call loc_48C9C0  +
add esp 10h +
jmp loc_47FBC7  +
lea eax [ecx-10h] +
push eax  +
call sub_47BFB0  +
add esp 8 +
add eax 10h +
mov [esi+4] eax +
lea eax [ebx-9] +
mov [esi+0Ch] eax +
pop ebx  +
mov eax [esi+8] +
mov edx [ebp+arg_4] +
cmp edx eax +
jz loc_47FBF3  +
mov ecx [esi+4] +
sub eax edx +
add eax eax +
push eax  +
lea eax [ecx+edx*2] +
push eax  +
lea eax [edi+edx] +
lea eax [ecx+eax*2] +
push eax  +
call loc_48B430  +
add esp 0Ch +
add [esi+8] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
sub eax ecx +
cmp edi eax +
jle loc_47FC6D  +
push ebx  +
lea ebx [edi+200h] +
add ebx ecx +
lea eax [esi+12h] +
mov ecx [esi+4] +
and ebx 0FFFFFE00h +
mov [ebp+arg_0] ecx +
push ebx  +
cmp ecx eax +
jnz loc_47FC5A  +
call sub_47BF90  +
push dword ptr [esi+8]  +
mov [esi+4] eax +
push [ebp+arg_0]  +
push eax  +
call loc_48C9C0  +
add esp 10h +
lea eax [ebx-1] +
add [esi+8] edi +
mov [esi+0Ch] eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push ecx  +
call sub_47BFB0  +
add esp 8 +
mov [esi+4] eax +
lea eax [ebx-1] +
mov [esi+0Ch] eax +
pop ebx  +
add [esi+8] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+8] +
push edi  +
mov eax [ebx+8] +
inc eax  +
cmp esi eax +
jnb loc_47FCBE  +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_47FCC5  +
push esi  +
push dword ptr [ebp+14h]  +
call sub_47FB60  +
push dword ptr [ebp+14h]  +
mov eax [ebx+4] +
mov ecx edi +
push dword ptr [ebp+10h]  +
mov edx [edi] +
lea eax [eax+esi*2] +
push eax  +
call dword ptr [edx+1Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push eax  +
push esi  +
call loc_47C080  +
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+8] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
inc eax  +
mov [ebp-4] ecx +
cmp edi eax +
jnb loc_47FD1C  +
mov esi [ebp+10h] +
mov ebx [ebp+0Ch] +
test esi esi +
jz loc_47FCF5  +
js loc_47FD23  +
test ebx ebx +
jz loc_47FD23  +
push edi  +
push esi  +
call sub_47FB60  +
lea eax [esi+esi] +
push eax  +
mov eax [ebp-4] +
push ebx  +
mov eax [eax+4] +
lea eax [eax+edi*2] +
push eax  +
call loc_48C9C0  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push eax  +
push edi  +
call loc_47C080  +
push ebx  +
push esi  +
call sub_47C030  +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
mov [ebp-4] esi +
mov ecx [ebp+8] +
mov [ebp-8] ecx +
mov edx [edi+8] +
cmp ecx edx +
ja loc_47FDA6  +
mov eax edx +
sub eax ecx +
cmp esi eax +
ja loc_47FDA6  +
mov esi [ebp+10h] +
test esi esi +
jz loc_47FDA1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov ecx [ebp+0Ch] +
sub ecx eax +
test ecx ecx +
jle loc_47FD79  +
push ecx  +
push dword ptr [ebp+8]  +
mov ecx edi +
call loc_47FB00  +
jmp loc_47FD88  +
jns loc_47FD88  +
push dword ptr [ebp+8]  +
neg ecx  +
push ecx  +
mov ecx edi +
call sub_47FB60  +
mov edx [edi+4] +
mov ecx esi +
mov eax [ebp+8] +
lea eax [edx+eax*2] +
push eax  +
call sub_4782E0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_47C0A0  +
push edx  +
lea eax [ebp-8] +
push eax  +
call loc_47C050  +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+8] +
sub eax esi +
push esi  +
push eax  +
call sub_47FB60  +
mov [edi+8] esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+arg_0] +
push eax  +
call sub_47FA80  +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_47FE0B  +
call sub_479590  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_482010  +
add esp 8 +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+8] +
test esi esi +
jle loc_47FE5A  +
mov eax [edi+4] +
movzx eax word ptr [eax+esi*2-2] +
push eax  +
call sub_4A1A84  +
add esp 4 +
test eax eax +
jz loc_47FE5A  +
dec esi  +
test esi esi +
jg loc_47FE40  +
mov eax [edi+8] +
cmp eax esi +
jz loc_47FE6C  +
sub eax esi +
mov ecx edi +
push eax  +
push esi  +
call loc_47FB00  +
xor esi esi +
cmp [edi+8] esi +
jle loc_47FE9B  +
mov eax [edi+4] +
movzx eax word ptr [eax+esi*2] +
push eax  +
call sub_4A1A84  +
add esp 4 +
test eax eax +
jz loc_47FE8D  +
inc esi  +
cmp esi [edi+8] +
jl loc_47FE73  +
test esi esi +
jz loc_47FE9B  +
push esi  +
push 0  +
mov ecx edi +
call loc_47FB00  +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0A4h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
mov ecx ebx +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 22h  +
mov [ebp-0A4h] esi +
call sub_475930  +
mov eax [esi] +
mov ecx esi +
mov [ebp-20h] esi +
call dword ptr [eax+28h]  +
mov [ebp-1Ch] eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+18h]  +
xor edx edx +
mov [ebp-14h] eax +
xor edi edi +
mov [ebp-10h] edx +
xor ecx ecx +
mov [ebp-18h] edi +
mov [ebp-0Ch] edx +
test eax eax +
jz loc_47FF85  +
mov esi ecx +
inc ecx  +
mov [ebp-8] ecx +
mov ecx [ebp-1Ch] +
test ecx ecx +
jz loc_47FF16  +
lea eax [edi+esi] +
movzx eax word ptr [ecx+eax*2] +
jmp loc_47FF52  +
cmp esi [ebp-0Ch] +
jnb loc_47FF1F  +
cmp esi edx +
jnb loc_47FF48  +
mov ecx [ebp-20h] +
lea edi [esi+40h] +
mov edx [ebp-18h] +
cmp eax edi +
mov [ebp-10h] esi +
cmovb edi eax +
add edx esi +
mov [ebp-0Ch] edi +
sub edi esi +
mov eax [ecx] +
push edi  +
push edx  +
lea edx [ebp-0A0h] +
push edx  +
call dword ptr [eax+1Ch]  +
mov edx [ebp-10h] +
sub esi edx +
movzx eax word ptr [ebp+esi*2-0A0h] +
mov ecx ebx +
cmp ax 22h +
jz loc_47FF5D  +
push eax  +
jmp loc_47FF68  +
push 22h  +
push 5Ch  +
call sub_475930  +
mov ecx eax +
call sub_475930  +
mov ecx [ebp-8] +
mov eax [ebp-14h] +
cmp ecx eax +
jnb loc_47FF7F  +
mov edx [ebp-10h] +
mov edi [ebp-18h] +
jmp loc_47FF00  +
***
mov esi [ebp-0A4h] +
push 1  +
push offset asc_4D06C4  +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call loc_4784B0  +
test al al +
jz loc_47FFA9  +
push 5Ch  +
mov ecx ebx +
call sub_475930  +
push 22h  +
mov ecx ebx +
call sub_475930  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 0  +
call sub_475C60  +
mov edi [ebp+8] +
add esp 4 +
mov ecx edi +
mov ebx eax +
mov edx [edi] +
call dword ptr [edx+14h]  +
xor esi esi +
mov [ebp-4] eax +
test eax eax +
jle loc_48003F  +
test esi esi +
jle loc_480003  +
push 20h  +
mov ecx ebx +
call sub_475930  +
mov eax [edi] +
mov ecx edi +
push esi  +
call dword ptr [eax+2Ch]  +
mov edi eax +
test edi edi +
jz loc_48002C  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_480048  +
push eax  +
push ebx  +
call loc_47FEA0  +
mov edi [ebp+8] +
inc esi  +
add esp 8 +
cmp esi [ebp-4] +
jl loc_47FFF6  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:CloseHandle  +
test eax eax +
jz loc_480072  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aClosehandle  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:CommandLineToArgvW  +
test eax eax +
jz loc_4800A5  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aCommandlinetoa  +
call loc_480FC0  +
movsd xmm0 [ebp+arg_0] +
mulsd xmm0 ds:qword_4D0820 +
comisd xmm0 ds:dbl_4BF6F0 +
jbe loc_4800DF  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
pop ebp  +
jmp sub_489571  +
***
mov eax dword ptr [ebp+arg_0+4] +
movd xmm1 eax +
cvtdq2pd xmm1 xmm1 +
shr eax 1Fh +
addsd xmm1 ds:qword_4CAA90[eax*8] +
mov eax dword ptr [ebp+arg_0] +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
mulsd xmm1 ds:qword_4D0818 +
addsd xmm0 ds:qword_4CAA90[eax*8] +
divsd xmm0 ds:qword_4D0828 +
addsd xmm1 xmm0 +
subsd xmm1 ds:qword_4D0830 +
movsd [ebp+arg_0] xmm1 +
fld  [ebp+arg_0] +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
call ds:CreateEventW  +
test eax eax +
jz loc_48016B  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aCreateevent  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jz loc_4801A5  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aCreatefileSFai  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:CreateNamedPipeW  +
cmp eax 0FFFFFFFFh +
jz loc_4801E8  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aCreatenamedpip  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push ecx  +
call ds:GetCurrentProcess  +
push dword ptr [ebp+14h]  +
lea ecx [ebp-4] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
push eax  +
call ds:DuplicateHandle  +
test eax eax +
jz loc_48022D  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aDuplicatehandl  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:FlushFileBuffers  +
test eax eax +
jz loc_480252  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aFlushfilebuffe  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jz loc_480285  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetcurrentdire  +
call loc_480FC0  +
call ds:GetEnvironmentStringsW  +
test eax eax +
jz loc_4802AB  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetenvironme_0  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetEnvironmentVariableW  +
mov edi eax +
test edi edi +
jnz loc_4802E3  +
call ds:GetLastError  +
test eax eax +
jnz loc_4802E8  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aGetenvironme_1  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_48031A  +
pop esi  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
mov esi eax +
push esi  +
call sub_481030  +
add esp 4 +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
push offset aGetfileattribu  +
push esi  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
sub esp 8 +
lea eax [ebp-8] +
push eax  +
push dword ptr [ebp+8]  +
call ds:GetFileSizeEx  +
test eax eax +
jz loc_480361  +
mov eax [ebp-8] +
mov edx [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetfilesizeex  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+14h] +
lea ecx [ebp-4] +
test eax eax +
cmovnz ecx eax +
push ecx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetFullPathNameW  +
test eax eax +
jz loc_4803A7  +
mov esp ebp +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aGetfullpathnam  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_4803D8  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetmodulefilen  +
call loc_480FC0  +
push [ebp+lpMaxInstances]  +
push [ebp+lpInBufferSize]  +
push [ebp+lpOutBufferSize]  +
push [ebp+lpFlags]  +
push [ebp+hNamedPipe]  +
call ds:GetNamedPipeInfo  +
test eax eax +
jz loc_48040E  +
pop ebp  +
retn   +
call ds:GetLastError  +
push eax  +
push offset aGetnamedpipein  +
call loc_480FC0  +
int 3  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetProcAddress  +
test eax eax +
jz loc_480435  +
pop ebp  +
retn   +
***
push dword ptr [ebp+0Ch]  +
push offset aGetprocaddress  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:GetStdHandle  +
cmp eax 0FFFFFFFFh +
jz loc_480463  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aGetstdhandleDF  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetTempPathW  +
test eax eax +
jz loc_480495  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGettemppath  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:GetThreadPriority  +
cmp eax 7FFFFFFFh +
jz loc_4804C5  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetthreadprior  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:GetUserNameW  +
test eax eax +
jz loc_4804F5  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aGetusername  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push 0  +
push dword ptr [ebp+8]  +
call ds:LoadLibraryExW  +
test eax eax +
jz loc_480527  +
pop ebp  +
retn   +
***
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset aLoadlibraryexS  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:LockFileEx  +
test eax eax +
jz loc_480560  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aLockfileex  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push ecx  +
push dword ptr [ebp+14h]  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:ReadFile  +
test eax eax +
jz loc_4805A5  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aReadfile_0  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:ResetEvent  +
test eax eax +
jz loc_4805D2  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aResetevent  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+10h]  +
call ds:SHCreateDirectoryExW  +
test eax eax +
jnz loc_480608  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aShcreatedirect  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jz loc_480632  +
pop ebp  +
retn   +
***
push dword ptr [ebp+8]  +
push offset aSetcurrentdire  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:SetEndOfFile  +
test eax eax +
jz loc_480662  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aSetendoffile  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:SetEnvironmentVariableW  +
test eax eax +
jz loc_480695  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset aSetenvironment  +
push eax  +
call loc_480DD0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ds:SetEvent  +
test eax eax +
jz loc_4806C2  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aSetevent  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
sub esp 8 +
lea eax [ebp-8] +
push dword ptr [ebp+14h]  +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:SetFilePointerEx  +
test eax eax +
jz loc_48070A  +
mov eax [ebp-8] +
mov edx [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aSetfilepointer  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:SetThreadPriority  +
test eax eax +
jz loc_480735  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aSetthreadprior  +
call loc_480FC0  +
call ds:TlsAlloc  +
cmp eax 0FFFFFFFFh +
jz loc_48075C  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aTlsalloc  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push edi  +
push dword ptr [ebp+8]  +
call ds:TlsGetValue  +
mov edi eax +
test edi edi +
jnz loc_48078D  +
call ds:GetLastError  +
test eax eax +
jnz loc_480792  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aTlsgetvalue  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:TlsSetValue  +
test eax eax +
jz loc_4807C5  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aTlssetvalue  +
call loc_480FC0  +
push [ebp+nNumberOfBytesToUnlockHigh]  +
push [ebp+flProtect]  +
push [ebp+flAllocationType]  +
push [ebp+dwSize]  +
push [ebp+lpAddress]  +
call ds:VirtualAlloc  +
test eax eax +
jz loc_48082B  +
pop ebp  +
retn   +
push [ebp+dwSize]  +
push offset aVirtualallocSi  +
call ds:GetLastError  +
push eax  +
call loc_480DD0  +
int 3  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:VirtualFree  +
test eax eax +
jz loc_480858  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aVirtualfree  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:WaitForMultipleObjects  +
cmp eax 0FFFFFFFFh +
jz loc_48088C  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aWaitforsingleo  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:WaitForSingleObject  +
cmp eax 0FFFFFFFFh +
jz loc_4808B6  +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aWaitforsingl_0  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push ecx  +
push dword ptr [ebp+14h]  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:WriteFile  +
test eax eax +
jz loc_4808F5  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aWritefile_0  +
call loc_480FC0  +
mov eax dword_4F53DC +
test eax eax +
jnz loc_48092E  +
push offset aShgetspecialfo  +
call sub_480A90  +
add esp 4 +
mov dword_4F53DC eax +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53D4 +
test eax eax +
jnz loc_48095E  +
push offset aPathcanonica_0  +
call sub_480B30  +
add esp 4 +
mov dword_4F53D4 eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53CC +
test eax eax +
jnz loc_48098E  +
push offset aPathcombinew  +
call sub_480B30  +
add esp 4 +
mov dword_4F53CC eax +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53C0 +
test eax eax +
jnz loc_4809BE  +
push offset aPathfileexists  +
call sub_480B30  +
add esp 4 +
mov dword_4F53C0 eax +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53C8 +
test eax eax +
jnz loc_4809EE  +
push offset aPathfindfilena  +
call sub_480B30  +
add esp 4 +
mov dword_4F53C8 eax +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53C4 +
test eax eax +
jnz loc_480A1E  +
push offset aPathisdirector  +
call sub_480B30  +
add esp 4 +
mov dword_4F53C4 eax +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53D8 +
test eax eax +
jnz loc_480A4E  +
push offset aPathremoveback  +
call sub_480B30  +
add esp 4 +
mov dword_4F53D8 eax +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov eax dword_4F53D0 +
test eax eax +
jnz loc_480A7E  +
push offset aPathremovefile  +
call sub_480B30  +
add esp 4 +
mov dword_4F53D0 eax +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB16A  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset dword_4F53B8  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov esi dword_4F53B8 +
mov [ebp+var_4] 0 +
test esi esi +
jnz loc_480AFD  +
mov [ebp+var_14] offset dword_4F53BC +
push esi  +
push offset aShell32_dll  +
mov byte ptr [ebp+var_4] 1 +
call loc_480510  +
mov esi offset dword_4F53BC +
mov dword_4F53BC eax +
add esp 8 +
mov dword_4F53B8 esi +
lea ecx [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_47AC40  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call loc_480420  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB1AA  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset dword_4F53B0  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov esi dword_4F53B0 +
mov [ebp+var_4] 0 +
test esi esi +
jnz loc_480B9D  +
mov [ebp+var_14] offset dword_4F53B4 +
push esi  +
push offset aShlwapi_dll  +
mov byte ptr [ebp+var_4] 1 +
call loc_480510  +
mov esi offset dword_4F53B4 +
mov dword_4F53B4 eax +
add esp 8 +
mov dword_4F53B0 esi +
lea ecx [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
call sub_47AC40  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call loc_480420  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F53EC +
cmp eax [ecx+4] +
jle loc_480BF2  +
jmp loc_480BFB  +
mov eax dword_4F53E8 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F53EC  +
call sub_489058  +
add esp 4 +
cmp dword_4F53EC 0FFFFFFFFh +
jnz loc_480BF2  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F53E0  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_480C37  +
mov dword ptr [eax] offset off_4D09E4 +
jmp loc_480C3B  +
xor eax eax +
jmp $+2  +
push offset dword_4F53EC  +
mov dword_4F53E8 eax +
call sub_489019  +
add esp 4 +
jmp loc_480BF2  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 40h  +
call ds:LocalAlloc  +
test eax eax +
jnz loc_480C67  +
cmp [ebp+8] eax +
jnz loc_480C6B  +
pop ebp  +
retn 4  +
***
call loc_47A280  +
push ebp  +
mov ebp esp +
push 40h  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:LocalReAlloc  +
test eax eax +
jnz loc_480CBA  +
cmp [ebp+0Ch] eax +
jnz loc_480CBE  +
pop ebp  +
retn 8  +
***
call loc_47A280  +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_4] esi +
mov dword ptr [esi] offset off_4CEDD8 +
mov ecx [edi+4] +
test ecx ecx +
jz loc_480CF2  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_480CF4  +
xor eax eax +
mov [esi+4] eax +
mov edi [edi+8] +
test edi edi +
jz loc_480D05  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov eax esi +
pop edi  +
mov dword ptr [esi] offset off_4D0A3C +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB1E6  +
mov eax large fs:0 +
push eax  +
sub esp 618h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+8] +
lea ecx [ebp-620h] +
mov edi [ebp+0Ch] +
mov esi [ebp+10h] +
push 0FFh  +
call sub_47F5C0  +
mov dword ptr [ebp-620h] offset off_4CEA68 +
push esi  +
push edi  +
lea ecx [ebp-620h] +
mov dword ptr [ebp-4] 0 +
call loc_481890  +
push 200h  +
lea eax [ebp-40Ch] +
push eax  +
push ebx  +
call loc_481070  +
push eax  +
push ebx  +
lea eax [ebp-620h] +
push offset aDS_0  +
push eax  +
call sub_481870  +
add esp 1Ch +
lea eax [ebp-624h] +
lea ecx [ebp-620h] +
push eax  +
call sub_475A60  +
push ebx  +
push dword ptr [ebp-624h]  +
mov byte ptr [ebp-4] 1 +
call loc_480DF0  +
push ebp  +
mov ebp esp +
lea eax [ebp+10h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_480D20  +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
sub esp 14h +
cmp ecx 274Ch +
jg loc_480EBC  +
jz loc_480EA3  +
lea eax [ecx-2] +
cmp eax 0CCh +
ja loc_480EBC  +
movzx eax ds:byte_480EF0[eax] +
jmp ds:off_480EDC[eax*4]  +
push ecx  +
push offset aWin32  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_486DA0  +
push offset unk_4EA8BC  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aWin32  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_482250  +
push offset unk_4EA918  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aWin32  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_4821F0  +
push offset unk_4EA958  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aWin32  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_482280  +
push offset unk_4EA998  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
push dword ptr [ebp+8]  +
lea ecx [ebp-0Ch] +
call sub_4822B0  +
push offset unk_4EAAEC  +
lea eax [ebp-0Ch] +
push eax  +
call sub_48D64F  +
push ecx  +
push offset aWin32  +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call sub_486DD0  +
push offset unk_4EA9D8  +
lea eax [ebp-14h] +
push eax  +
call sub_48D64F  +
nop   +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB21B  +
mov eax large fs:0 +
push eax  +
sub esp 404h +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi [ebp+0Ch] +
lea eax [ebp-40Ch] +
mov esi [ebp+8] +
push 200h  +
push eax  +
push edi  +
call loc_481070  +
push eax  +
push edi  +
push esi  +
lea eax [ebp-410h] +
push offset aSFailedDS_0  +
push eax  +
call sub_477DB0  +
add esp 20h +
push edi  +
push dword ptr [ebp-410h]  +
mov dword ptr [ebp-4] 0 +
call loc_480DF0  +
sub esp 404h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_404] +
push 200h  +
push ecx  +
push eax  +
call loc_481070  +
push eax  +
call sub_478790  +
mov ecx [ebp+var_4] +
add esp 10h +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push 0  +
push dword ptr [ebp+10h]  +
push esi  +
push 400h  +
push dword ptr [ebp+8]  +
push 0  +
push 1000h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_4810C3  +
lea ecx [esi+eax*2] +
movzx ecx word ptr [ecx-2] +
cmp ecx 0Dh +
jz loc_4810AE  +
cmp ecx 0Ah +
jnz loc_4810BE  +
sub eax 1 +
mov edx 0 +
lea ecx [esi+eax*2] +
mov [ecx] dx +
jnz loc_4810A0  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov eax offset aNA_0 +
pop esi  +
pop ebp  +
retn   +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F53FC +
cmp eax [ecx+4] +
jle loc_4810F2  +
jmp loc_4810FB  +
mov eax dword_4F53F8 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F53FC  +
call sub_489058  +
add esp 4 +
cmp dword_4F53FC 0FFFFFFFFh +
jnz loc_4810F2  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F53F0  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_481137  +
mov dword ptr [eax] offset off_4D0B74 +
jmp loc_48113B  +
xor eax eax +
jmp $+2  +
push offset dword_4F53FC  +
mov dword_4F53F8 eax +
call sub_489019  +
add esp 4 +
jmp loc_4810F2  +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F540C +
cmp eax [ecx+4] +
jle loc_481172  +
jmp loc_48117B  +
mov eax dword_4F5408 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F540C  +
call sub_489058  +
add esp 4 +
cmp dword_4F540C 0FFFFFFFFh +
jnz loc_481172  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5400  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4811B7  +
mov dword ptr [eax] offset off_4D0BAC +
jmp loc_4811BB  +
xor eax eax +
jmp $+2  +
push offset dword_4F540C  +
mov dword_4F5408 eax +
call sub_489019  +
add esp 4 +
jmp loc_481172  +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F541C +
cmp eax [ecx+4] +
jle loc_4811F2  +
jmp loc_4811FB  +
mov eax dword_4F5418 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F541C  +
call sub_489058  +
add esp 4 +
cmp dword_4F541C 0FFFFFFFFh +
jnz loc_4811F2  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5410  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_481237  +
mov dword ptr [eax] offset off_4D0BE4 +
jmp loc_48123B  +
xor eax eax +
jmp $+2  +
push offset dword_4F541C  +
mov dword_4F5418 eax +
call sub_489019  +
add esp 4 +
jmp loc_4811F2  +
***
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_481278  +
mov ecx [ebp+arg_10] +
mov eax [ebp+arg_4] +
pop esi  +
mov [ecx] eax +
pop ebp  +
retn 14h  +
xor edx edx +
cmp [ebp+arg_4] edx +
jbe loc_4812BA  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
mov eax edi +
dec edi  +
test eax eax +
jz loc_4812AC  +
movzx ecx byte ptr [ebx] +
inc edx  +
mov [esi] cx +
inc ebx  +
add esi 2 +
cmp edx [ebp+arg_4] +
jb loc_481287  +
mov ecx [ebp+arg_10] +
mov eax edx +
pop edi  +
pop ebx  +
pop esi  +
mov [ecx] edx +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_10] +
pop edi  +
pop ebx  +
pop esi  +
mov [eax] edx +
mov eax edx +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_10] +
pop esi  +
mov [eax] edx +
mov eax edx +
pop ebp  +
retn 14h  +
***
push ecx  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_4] ecx +
test eax eax +
jz loc_4813D4  +
mov edx [ebp+arg_8] +
push edi  +
lea edi [esi+2] +
push ebx  +
cmp esi [ebp+arg_C] +
jnb loc_4813D2  +
movzx ebx byte ptr [ecx] +
dec eax  +
mov [ebp+arg_8] ebx +
movsx ebx ds:byte_4D0A50[ebx] +
cmp ebx eax +
ja loc_4813D2  +
sub eax ebx +
mov [ebp+arg_4] eax +
xor eax eax +
cmp ebx 3 +
ja loc_481352  +
jmp ds:off_4813E8[ebx*4]  +
mov eax [ebp+arg_8] +
inc ecx  +
mov [ebp+var_4] ecx +
shl eax 6 +
movzx ecx byte ptr [ecx] +
add eax ecx +
mov ecx [ebp+var_4] +
inc ecx  +
shl eax 6 +
mov [ebp+var_4] ecx +
movzx ecx byte ptr [ecx] +
add eax ecx +
mov ecx [ebp+var_4] +
inc ecx  +
shl eax 6 +
mov [ebp+var_4] ecx +
movzx ecx byte ptr [ecx] +
add eax ecx +
inc [ebp+var_4]  +
sub eax ds:dword_4D0B50[ebx*4] +
cmp eax 0FFFFh +
ja loc_48136E  +
test edx edx +
jz loc_481384  +
mov [edx] ax +
inc esi  +
add edx 2 +
inc edi  +
jmp loc_4813BB  +
cmp eax 10FFFFh +
jbe loc_481388  +
test edx edx +
jz loc_481384  +
mov eax 0FFFDh +
mov [edx] ax +
add edx 2 +
inc esi  +
inc edi  +
jmp loc_4813BB  +
test edx edx +
jz loc_4813B5  +
cmp edi [ebp+arg_C] +
ja loc_4813CA  +
sub eax 10000h +
mov ecx eax +
and eax 3FFh +
shr ecx 0Ah +
sub eax 2400h +
sub ecx 2800h +
mov [edx] cx +
mov [edx+2] ax +
add edx 4 +
add esi 2 +
add edi 2 +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4813D2  +
mov ecx [ebp+var_4] +
jmp loc_4812F0  +
or ecx 0FFFFFFFFh +
sub ecx ebx +
add [ebp+var_4] ecx +
pop ebx  +
pop edi  +
mov ecx [ebp+arg_10] +
mov eax [ebp+var_4] +
sub eax [ebp+arg_0] +
mov [ecx] esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ecx  +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
call dword ptr [eax+14h]  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
call dword ptr [eax+30h]  +
mov ecx [ebp+arg_0] +
push eax  +
call loc_475860  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_C] +
mov edx eax +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jbe loc_4814A6  +
movzx ecx [ebp+arg_18] +
push ebx  +
mov ebx [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_2] cx +
movzx ecx word ptr [edi] +
lea edi [edi+2] +
cmp cx [ebp+var_2] +
jbe loc_48148A  +
mov al [ebp+arg_8] +
test al al +
jz loc_4814A1  +
movzx ecx al +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_48149A  +
mov eax ebx +
dec ebx  +
test eax eax +
jz loc_4814A1  +
mov eax [ebp+arg_C] +
mov [edx] cl +
inc esi  +
inc edx  +
cmp esi [ebp+arg_4] +
jb loc_481471  +
mov eax [ebp+arg_C] +
pop edi  +
pop ebx  +
mov ecx [ebp+arg_14] +
sub edx eax +
mov eax esi +
pop esi  +
mov [ecx] edx +
mov esp ebp +
pop ebp  +
retn   +
***
push 7Fh  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_481450  +
add esp 1Ch +
pop ebp  +
retn 18h  +
***
push 0FFh  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_481450  +
add esp 1Ch +
pop ebp  +
retn 18h  +
***
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
test ebx ebx +
jz loc_481662  +
cmp edi [ebp+arg_10] +
jnb loc_481662  +
mov edx [ebp+arg_0] +
movzx ecx word ptr [edx+esi*2] +
inc esi  +
lea eax [ecx-0D800h] +
cmp eax 3FFh +
ja loc_48157B  +
cmp esi ebx +
jnb loc_48157B  +
movzx eax word ptr [edx+esi*2] +
mov edx 0DC00h +
cmp ax dx +
jb loc_48157B  +
mov edx 0E000h +
cmp ax dx +
jnb loc_48157B  +
add ecx 0FFFF2809h +
shl ecx 0Ah +
add ecx eax +
inc esi  +
cmp ecx 80h +
jnb loc_48158A  +
mov edx 1 +
jmp loc_4815D5  +
cmp ecx 800h +
jnb loc_481599  +
mov edx 2 +
jmp loc_4815D5  +
cmp ecx 10000h +
jnb loc_4815A8  +
mov edx 3 +
jmp loc_4815D5  +
cmp ecx 200000h +
jnb loc_4815B7  +
mov edx 4 +
jmp loc_4815D5  +
cmp ecx 4000000h +
jnb loc_4815C6  +
mov edx 5 +
jmp loc_4815D5  +
mov eax 7FFFFFFFh +
cmp eax ecx +
sbb edx edx +
and edx 0FFFFFFFAh +
add edx 6 +
cmp [ebp+arg_C] 0 +
jz loc_481658  +
mov eax [ebp+arg_10] +
sub eax edi +
cmp eax edx +
jb loc_481670  +
lea eax [edx-1] +
cmp eax 5 +
ja loc_481658  +
jmp ds:off_48168C[eax*4]  +
mov ebx [ebp+arg_C] +
mov al cl +
and al 3Fh +
or al 80h +
shr ecx 6 +
mov [edi+ebx+5] al +
mov ebx [ebp+arg_C] +
mov al cl +
and al 3Fh +
or al 80h +
shr ecx 6 +
mov [edi+ebx+4] al +
mov ebx [ebp+arg_C] +
mov al cl +
and al 3Fh +
or al 80h +
shr ecx 6 +
mov [edi+ebx+3] al +
mov ebx [ebp+arg_C] +
mov al cl +
and al 3Fh +
or al 80h +
shr ecx 6 +
mov [edi+ebx+2] al +
mov ebx [ebp+arg_C] +
mov al cl +
and al 3Fh +
or al 80h +
shr ecx 6 +
mov [edi+ebx+1] al +
mov ebx [ebp+arg_4] +
mov al ds:byte_4D0B68[edx] +
or al cl +
mov ecx [ebp+arg_C] +
mov [edi+ecx] al +
add edi edx +
cmp esi ebx +
jb loc_481535  +
mov eax [ebp+arg_14] +
mov [eax] edi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
cmp ecx 10000h +
sbb ecx ecx +
add ecx 2 +
sub esi ecx +
mov ecx [ebp+arg_14] +
mov eax esi +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
push ecx  +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+10h]  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_474F10  +
call sub_474F10  +
call sub_474F10  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
lea eax [eax+eax*2] +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov [esi+28h] eax +
mov eax [ebp+0Ch] +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0FFFFFFFFh +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov byte ptr [esi+20h] 64h +
mov dword ptr [esi+24h] 0 +
mov [esi+2Ch] eax +
mov byte ptr [esi] 25h +
inc dword ptr [esi+10h]  +
call loc_481C40  +
mov eax [esi+28h] +
mov eax [eax] +
mov al [eax] +
test al al +
jz loc_4817E0  +
cmp al 2Ah +
jz loc_481840  +
sub al 30h +
cmp al 9 +
ja loc_4817E0  +
mov ecx esi +
call loc_481CC0  +
mov [esi+18h] eax +
mov eax [esi+28h] +
mov eax [eax] +
mov al [eax] +
test al al +
jz loc_48181C  +
cmp al 2Eh +
jnz loc_48181C  +
mov eax [esi+10h] +
cmp eax 0Fh +
jge loc_48184A  +
mov byte ptr [eax+esi] 2Eh +
mov eax [esi+28h] +
inc dword ptr [esi+10h]  +
inc dword ptr [eax]  +
mov eax [esi+28h] +
mov eax [eax] +
mov al [eax] +
test al al +
jz loc_481812  +
cmp al 2Ah +
jz loc_481854  +
mov ecx esi +
call loc_481CC0  +
mov [esi+1Ch] eax +
mov ecx esi +
call loc_481D20  +
mov ecx esi +
call loc_481D70  +
mov eax [esi+10h] +
cmp eax 0Fh +
jge loc_48185E  +
mov byte ptr [eax+esi] 0 +
mov eax esi +
inc dword ptr [esi+10h]  +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aNotSupportedAs  +
call loc_47A130  +
push offset aInvalidFormatS  +
call loc_47A130  +
push offset aNotSupported_0  +
call loc_47A130  +
push offset aInvalidFormatS  +
call loc_47A130  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call loc_481890  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_481974  +
mov [ebp-38h] ecx +
mov dl [ecx] +
mov [ebp-3Ch] eax +
lea eax [ecx+1] +
mov [ebp-38h] eax +
test dl dl +
jz loc_481957  +
cmp dl 0Ah +
jnz loc_4818EF  +
mov edx [esi] +
sub eax ecx +
dec eax  +
push eax  +
push ecx  +
mov ecx esi +
call dword ptr [edx+10h]  +
mov eax [esi] +
mov ecx esi +
push 2  +
push offset unk_4D0C18  +
call dword ptr [eax+10h]  +
mov eax [ebp-38h] +
inc eax  +
mov [ebp-38h] eax +
jmp loc_481947  +
cmp dl 25h +
jnz loc_481949  +
mov edx [esi] +
sub eax ecx +
dec eax  +
push eax  +
push ecx  +
mov ecx esi +
call dword ptr [edx+10h]  +
mov eax [ebp-38h] +
mov cl [eax] +
test cl cl +
jz loc_481929  +
cmp cl 25h +
jz loc_481929  +
push esi  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-34h] +
call loc_481780  +
lea eax [ebp-3Ch] +
push eax  +
lea ecx [ebp-34h] +
call sub_481EC0  +
jmp loc_481944  +
inc eax  +
mov [ebp-38h] eax +
movsx ax cl +
lea ecx [ebp-40h] +
push 1  +
push ecx  +
movzx eax ax +
mov ecx esi +
mov [ebp-40h] eax +
mov eax [esi] +
call dword ptr [eax+4]  +
mov eax [ebp-38h] +
mov ecx eax +
mov dl [eax] +
inc eax  +
mov [ebp-38h] eax +
test dl dl +
jnz loc_4818C7  +
mov edx [esi] +
sub eax ecx +
dec eax  +
push eax  +
push ecx  +
mov ecx esi +
call dword ptr [edx+10h]  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
sub esp 104h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax [esi+24h] +
sub eax 0 +
jz loc_4819F4  +
sub eax 1 +
jz loc_4819D4  +
sub eax 1 +
jnz loc_481A20  +
add dword ptr [ecx] 8 +
sub esp 8 +
mov eax [ecx] +
movsd xmm0 qword ptr [eax-8] +
lea eax [ebp+var_104] +
movsd [esp+110h+var_110] xmm0 +
push esi  +
push 100h  +
push eax  +
call sub_481FE0  +
add esp 14h +
jmp loc_481A11  +
add dword ptr [ecx] 4 +
mov eax [ecx] +
mov ecx esi +
push dword ptr [eax-4]  +
call sub_481AB0  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
add dword ptr [ecx] 4 +
mov eax [ecx] +
push dword ptr [eax-4]  +
lea eax [ebp+var_104] +
push esi  +
push 100h  +
push eax  +
call sub_481FE0  +
add esp 10h +
mov ecx [esi+2Ch] +
lea eax [ebp+var_104] +
push eax  +
call loc_4758F0  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_481A5F  +
mov ecx [edx+2Ch] +
push 6  +
push offset aNull_0  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
pop ebp  +
retn 4  +
mov eax [ecx] +
push dword ptr [edx+2Ch]  +
call dword ptr [eax+0Ch]  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_481A8D  +
mov ecx [ecx+2Ch] +
push 6  +
push offset aNull_0  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
pop ebp  +
retn 4  +
push dword ptr [ecx+2Ch]  +
push eax  +
call sub_48DC31  +
add esp 4 +
push eax  +
call sub_482D50  +
add esp 8 +
pop ebp  +
retn 4  +
***
sub esp 104h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_481AED  +
mov ecx [esi+2Ch] +
push 6  +
push offset aNull_0  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
push eax  +
push esi  +
lea eax [ebp+var_104] +
push 100h  +
push eax  +
call sub_481FE0  +
mov ecx [esi+2Ch] +
lea eax [ebp+var_104] +
add esp 10h +
push eax  +
call loc_4758F0  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
test edi edi +
jnz loc_481BD3  +
mov ecx [ebx+2Ch] +
push 6  +
push offset aNull_0  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
push esi  +
mov esi [ebx+1Ch] +
test esi esi +
jns loc_481BEA  +
xor esi esi +
cmp [edi] si +
jz loc_481BEA  +
inc esi  +
cmp word ptr [edi+esi*2] 0 +
jnz loc_481BE2  +
mov ecx [ebx+18h] +
xor edx edx +
sub ecx esi +
cmp [ebx+18h] esi +
cmovle ecx edx +
mov [ebp+arg_0] ecx +
cmp [ebx+14h] dl +
jz loc_481C1A  +
mov ecx [ebx+2Ch] +
push esi  +
push edi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_481E40  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
push ecx  +
mov ecx ebx +
call sub_481E40  +
mov ecx [ebx+2Ch] +
push esi  +
push edi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [ecx+28h] +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz nullsub_4  +
mov eax [ecx+28h] +
xor edx edx +
mov eax [eax] +
cmp [eax] dl +
jz loc_481D08  +
push ebx  +
mov eax [ecx+28h] +
mov eax [eax] +
mov bl [eax] +
lea eax [ebx-30h] +
cmp al 9 +
ja loc_481D07  +
movsx eax bl +
lea edx [edx+edx*4] +
lea edx [edx-18h] +
lea edx [eax+edx*2] +
mov eax [ecx+10h] +
cmp eax 0Fh +
jge loc_481D0B  +
mov [eax+ecx] bl +
mov eax [ecx+28h] +
inc dword ptr [ecx+10h]  +
inc dword ptr [eax]  +
mov eax [ecx+28h] +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jnz loc_481CD0  +
pop ebx  +
mov eax edx +
retn   +
***
push offset aInvalidFormatS  +
call loc_47A130  +
mov eax [ecx+28h] +
mov eax [eax] +
cmp byte ptr [eax] 0 +
jz locret_481D5C  +
retn   +
***
push esi  +
mov esi [ecx+28h] +
mov eax [esi] +
cmp byte ptr [eax] 0 +
jz loc_481DC5  +
mov dl [eax] +
inc eax  +
mov [esi] eax +
movsx eax dl +
add eax 0FFFFFFDAh +
pop esi  +
cmp eax 52h +
ja loc_481DC5  +
movzx eax ds:byte_481DEC[eax] +
jmp ds:off_481DDC[eax*4]  +
mov dword ptr [ecx+24h] 0 +
jmp loc_481DB3  +
mov dword ptr [ecx+24h] 2 +
jmp loc_481DB3  +
mov dword ptr [ecx+24h] 1 +
mov eax [ecx+10h] +
mov [ecx+20h] dl +
cmp eax 0Fh +
jge loc_481DCF  +
mov [eax+ecx] dl +
inc dword ptr [ecx+10h]  +
retn   +
***
push offset aInvalidFormatS  +
call loc_47A130  +
push offset aInvalidFormatS  +
call loc_47A130  +
sub esp 18h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
movups xmm0 oword ptr ds:oword_4D0C84 +
mov al ds:byte_4D0C94 +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov [ebp+var_8] al +
movups oword ptr [ebp+var_18] xmm0 +
test edi edi +
jz loc_481EA3  +
cmp edi 10h +
jl loc_481E96  +
push esi  +
mov esi edi +
shr esi 4 +
mov eax esi +
neg eax  +
shl eax 4 +
add edi eax +
mov ecx [ebx+2Ch] +
lea edx [ebp+var_18] +
push 10h  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
sub esi 1 +
jnz loc_481E82  +
pop esi  +
mov ecx [ebx+2Ch] +
lea edx [ebp+var_18] +
push edi  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
movsx eax byte ptr [ecx+20h] +
add eax 0FFFFFFDAh +
cmp eax 4Dh +
ja loc_481F6B  +
movzx eax ds:byte_481F90[eax] +
jmp ds:off_481F74[eax*4]  +
mov eax [ebp+arg_0] +
add dword ptr [eax] 4 +
mov eax [eax] +
push dword ptr [eax-4]  +
call sub_481A40  +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
add dword ptr [eax] 4 +
mov eax [eax] +
push dword ptr [eax-4]  +
call sub_481A70  +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
add dword ptr [eax] 4 +
mov eax [eax] +
push dword ptr [eax-4]  +
call sub_481B30  +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
add dword ptr [eax] 4 +
mov eax [eax] +
push dword ptr [eax-4]  +
call sub_481BB0  +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
mov edx 0FFh +
add dword ptr [eax] 4 +
mov eax [eax] +
mov ax [eax-4] +
and ax dx +
movzx eax ax +
mov ecx [ecx+2Ch] +
lea edx [ebp+arg_0] +
mov [ebp+arg_0] eax +
push 1  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
pop ebp  +
retn 4  +
mov eax [ebp+arg_0] +
add dword ptr [eax] 4 +
mov eax [eax] +
movzx eax word ptr [eax-4] +
jmp loc_481F48  +
pop ebp  +
jmp sub_481980  +
***
lea eax [ebp+arg_C] +
mov ecx [ebp+cchDest] +
mov eax [ebp+lpDestStr] +
push ecx  +
push eax  +
push ecx  +
push eax  +
push 200h  +
push 0  +
call ds:LCMapStringW  +
pop ebp  +
retn   +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5430 +
cmp eax [ecx+4] +
jle loc_482052  +
jmp loc_48205B  +
mov eax dword_4F542C +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F5430  +
call sub_489058  +
add esp 4 +
cmp dword_4F5430 0FFFFFFFFh +
jnz loc_482052  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5420  +
push 0Ch  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_48209E  +
mov dword ptr [eax] offset off_4D0C9C +
mov dword ptr [eax+8] 0FFFFFFF4h +
jmp loc_4820A2  +
xor eax eax +
jmp $+2  +
push offset dword_4F5430  +
mov dword_4F542C eax +
call sub_489019  +
add esp 4 +
jmp loc_482052  +
***
add esp 4 +
test eax eax +
jz locret_4820D6  +
push eax  +
call loc_480060  +
pop ecx  +
retn   +
***
add esp 4 +
retn   +
***
push dword ptr [ecx+8]  +
call loc_480450  +
add esp 4 +
test eax eax +
jz loc_482117  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call loc_480580  +
add esp 10h +
pop ebp  +
retn 8  +
xor eax eax +
pop ebp  +
retn 8  +
***
push esi  +
push dword ptr [ecx+8]  +
call loc_480450  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_482168  +
push 2  +
push 0  +
push 0  +
push esi  +
call ds:SetFilePointer  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call loc_4808D0  +
add esp 10h +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx ecx +
push edi  +
mov edi [ebp+8] +
test esi esi +
jz loc_4821A3  +
js loc_4821AC  +
test edi edi +
jz loc_4821AC  +
test esi esi +
jz loc_4821A3  +
nop   +
mov eax [ebx] +
mov ecx ebx +
push esi  +
push edi  +
call dword ptr [eax+10h]  +
test eax eax +
jz loc_4821B3  +
add edi eax +
sub esi eax +
jnz loc_482190  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
call sub_47C030  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+24h]  +
push eax  +
push 0Dh  +
push offset aEndOfFile  +
call sub_474F10  +
add esp 8 +
lea ecx [ebp-10h] +
push eax  +
call sub_482220  +
push offset unk_4E9ABC  +
lea eax [ebp-10h] +
push eax  +
call sub_48D64F  +
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
mov [ebp+var_4] esi +
push [ebp+arg_0]  +
call sub_486DD0  +
mov dword ptr [esi] offset off_4CFE8C +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_479CB0  +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax esi +
mov dword ptr [esi] offset off_4CEDEC +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
mov [ebp+var_4] esi +
push [ebp+arg_0]  +
call sub_486DD0  +
mov dword ptr [esi] offset off_4CFE64 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
push [ebp+arg_4]  +
mov [ebp+var_4] esi +
push [ebp+arg_0]  +
call sub_486DD0  +
mov dword ptr [esi] offset off_4CFE78 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_479CB0  +
mov dword ptr [esi] offset off_4D0A3C +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BA858  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+var_10] +
push eax  +
call sub_477D00  +
add esp 0Ch +
push [ebp+var_10]  +
lea ecx [ebp+var_1C] +
mov [ebp+var_4] 0 +
call sub_479CB0  +
push offset unk_4EAAEC  +
lea eax [ebp+var_1C] +
mov [ebp+var_1C] offset off_4D0A3C +
push eax  +
call sub_48D64F  +
int 3  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+14h] +
push dword ptr [esi+10h]  +
mov dword ptr [esi] offset off_4D0D50 +
mov [ebp+var_4] 0 +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_482389  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4823C2  +
test al 4 +
jnz loc_4823B7  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 18h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB248  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
mov ecx ebx +
mov eax [ebx] +
call dword ptr [eax+18h]  +
mov ecx [ebp+arg_4] +
mov esi eax +
mov [ebp+arg_0] esi +
mov eax [ecx] +
call dword ptr [eax+18h]  +
add esi eax +
mov [ebp+var_10] eax +
lea eax ds:12h[esi*2] +
push eax  +
call sub_47ABB0  +
push eax  +
push 10h  +
mov [ebp+var_14] eax +
call sub_47AC00  +
mov edi eax +
add esp 0Ch +
mov [ebp+var_14] edi +
test edi edi +
jz loc_482461  +
xor eax eax +
mov [edi+8] esi +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_4D0D14 +
mov [edi+esi*2+10h] ax +
jmp loc_482463  +
xor edi edi +
mov [ebp+var_14] edi +
push [ebp+arg_0]  +
mov edx [ebx] +
lea eax [edi+10h] +
push 0  +
push eax  +
mov ecx ebx +
mov [ebp+var_4] 0 +
call dword ptr [edx+1Ch]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push [ebp+var_10]  +
add ecx 8 +
mov esi [eax] +
push 0  +
lea edx [edi+ecx*2] +
mov ecx eax +
push edx  +
call dword ptr [esi+1Ch]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB278  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_8] +
lea eax ds:12h[eax*2] +
push eax  +
call sub_47ABB0  +
push eax  +
push 10h  +
mov [ebp+var_10] eax +
call sub_47AC00  +
mov edi eax +
add esp 0Ch +
mov [ebp+var_10] edi +
test edi edi +
jz loc_48251E  +
mov dword ptr [edi] offset off_4D0CD8 +
xor ecx ecx +
mov eax [ebp+arg_8] +
mov [edi+8] eax +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi] offset off_4D0D14 +
mov [edi+eax*2+10h] cx +
jmp loc_482520  +
xor edi edi +
mov [ebp+var_10] edi +
mov ecx [ebp+arg_0] +
lea edx [edi+10h] +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
push [ebp+arg_4]  +
mov esi [ecx] +
push edx  +
call dword ptr [esi+1Ch]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push ecx  +
push esi  +
push 18h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_4825FB  +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
mov [esi+8] eax +
mov eax [ebp+arg_0] +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_4D0D50 +
mov [esi+10h] eax +
test edi edi +
jz loc_4825F0  +
mov ecx edi +
call sub_4795C0  +
mov [esi+14h] edi +
mov eax esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
push esi  +
mov esi [ebp+8] +
cmp esi eax +
jnb loc_48262C  +
mov edx [ecx] +
call dword ptr [edx+24h]  +
mov ax [eax+esi*2] +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
push esi  +
call loc_47C080  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_482651  +
call sub_4785D0  +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
pop esi  +
retn   +
***
push [ebp+arg_0]  +
push 10h  +
call sub_47AC00  +
add esp 8 +
test eax eax +
jz loc_482690  +
mov ecx [ebp+arg_4] +
xor edx edx +
mov [eax+8] ecx +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax] offset off_4D0D14 +
mov [eax+ecx*2+10h] dx +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4826D2  +
test al 4 +
jnz loc_4826C7  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 18h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+0Ch] +
cmp eax [ecx+10h] +
setnz al  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB2AF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 18h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_482776  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
xor ecx ecx +
mov dword ptr [esi] offset off_4D0D8C +
test eax eax +
mov [esi+8] edi +
mov dword ptr [esi+0Ch] 0 +
setns cl  +
mov [esi+10h] eax +
lea ecx ds:0FFFFFFFFh[ecx*2] +
mov [esi+14h] ecx +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov edx [esi+0Ch] +
cmp edx [esi+10h] +
jz loc_4827AC  +
mov ecx [esi+8] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+2Ch]  +
mov ecx [esi+14h] +
add [esi+0Ch] ecx +
pop esi  +
retn   +
***
push offset aCurrent_Limit_  +
call loc_47A1B0  +
push 0FFFFFFFFh  +
push offset loc_4BB2E3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov ecx [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4D0DD8 +
test ecx ecx +
jz loc_482805  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_482807  +
xor eax eax +
mov [esi+8] eax +
mov ecx [ebp+arg_4] +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_48281C  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_48281E  +
xor eax eax +
mov edi [ebp+arg_8] +
mov [esi+0Ch] eax +
test edi edi +
jz loc_48282F  +
mov ecx edi +
call sub_4795C0  +
movsd xmm0 [ebp+arg_C] +
mov ecx esi +
mov [esi+10h] edi +
movsd qword ptr [esi+18h] xmm0 +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_482872  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_48287E  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_48288A  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4828B6  +
test al 4 +
jnz loc_4828AB  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 20h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB30F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_4828EE  +
call sub_47C0A0  +
cmp [ebp+arg_4] 0 +
jnz loc_4828F9  +
call sub_47C0A0  +
cmp [ebp+arg_8] 0 +
jnz loc_482904  +
call sub_47C0A0  +
movsd xmm1 [ebp+arg_C] +
xorps xmm0 xmm0 +
comisd xmm0 xmm1 +
jb loc_482924  +
sub esp 8 +
movsd [esp+1Ch+var_1C] xmm1 +
push offset aBadTimeoutValu  +
call loc_47A130  +
push 20h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_482968  +
movsd xmm0 [ebp+arg_C] +
sub esp 8 +
mov ecx eax +
movsd [esp+28h+var_28] xmm0 +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_4827C0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB338  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push edi  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
cmp [ebp+arg_0] 0 +
mov [ebp+var_4] 0 +
jnz loc_482A23  +
mov ecx edi +
call sub_482B10  +
mov esi eax +
test esi esi +
jnz loc_482A33  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
call loc_487040  +
cvttsd2si eax qword ptr [edi+18h] +
add esp 8 +
xor ebx ebx +
mov dword ptr [ebp+arg_0] eax +
cmp ebx eax +
jge loc_482A12  +
movsd xmm0 ds:qword_4BF6E0 +
sub esp 8 +
movsd [esp+28h+var_28] xmm0 +
call sub_47D0D0  +
add esp 8 +
mov ecx edi +
call sub_482B10  +
mov esi eax +
inc ebx  +
mov eax dword ptr [ebp+arg_0] +
test esi esi +
jz loc_4829E3  +
jmp loc_482A33  +
test esi esi +
jnz loc_482A33  +
mov ecx [edi+10h] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov esi eax +
jmp loc_482A33  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
call loc_487040  +
add esp 8 +
xor esi esi +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 3  +
push dword ptr [ecx+8]  +
call sub_4776F0  +
add esp 10h +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB377  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_482AB0  +
call sub_47C0A0  +
push 0Ch  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_482AF8  +
mov dword ptr [esi] offset off_4D0DC0 +
mov ecx edi +
mov eax [edi] +
mov byte ptr [ebp+var_4] 1 +
call dword ptr [eax+10h]  +
mov ecx esi +
mov [esi+8] eax +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_482B62 +
retn   +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
push 0  +
push [ebp+arg_0]  +
inc eax  +
push [ebp+arg_4]  +
push eax  +
call ds:RtlCaptureStackBackTrace  +
movzx eax ax +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 17Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
cmp dword ptr [ebp+0Ch] 0 +
mov eax [ebp+10h] +
push esi  +
mov esi [ebp+8] +
mov [ebp-160h] eax +
jle loc_482C95  +
push ebx  +
push edi  +
mov ebx 1 +
lea eax [ebp-15Ch] +
mov dword ptr [ebp-15Ch] 58h +
push eax  +
push 0  +
push dword ptr [esi]  +
xorps xmm0 xmm0 +
mov dword ptr [ebp-10Ch] 100h +
mov dword ptr [ebp-17Ch] 18h +
movups oword ptr [ebp-178h] xmm0 +
mov dword ptr [ebp-168h] 0 +
call sub_487380  +
mov edi eax +
lea eax [ebp-17Ch] +
push eax  +
lea eax [ebp-164h] +
push eax  +
push dword ptr [esi]  +
call sub_487400  +
add esp 18h +
test edi edi +
jz loc_482C6F  +
test eax eax +
jz loc_482C6F  +
push dword ptr [ebp-174h]  +
lea eax [ebp-108h] +
push dword ptr [ebp-170h]  +
push eax  +
push dword ptr [esi]  +
push ebx  +
push offset a4dPSSD  +
push dword ptr [ebp-160h]  +
call sub_481870  +
add esp 1Ch +
jmp loc_482C85  +
push dword ptr [esi]  +
push ebx  +
push offset a4dP  +
push dword ptr [ebp-160h]  +
call sub_481870  +
add esp 10h +
add esi 4 +
inc ebx  +
sub dword ptr [ebp+0Ch] 1 +
jnz loc_482BE0  +
pop edi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BA2A8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_24] +
push 0  +
call sub_47F5F0  +
lea eax [esi+4] +
mov [ebp+var_4] 0 +
push offset unk_4F5860  +
push eax  +
call sub_48DEC7  +
push 6  +
mov esi eax +
push offset aClass  +
push esi  +
call sub_49A970  +
add esp 14h +
test eax eax +
jnz loc_482D14  +
add esi 6 +
push esi  +
lea ecx [ebp+var_24] +
call loc_4758F0  +
push [ebp+var_1C]  +
lea ecx [ebp+var_24] +
call sub_47FDE0  +
lea ecx [ebp+var_24] +
mov esi eax +
call sub_47F670  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
add eax 4 +
push offset unk_4F5860  +
push eax  +
call sub_48DEC7  +
push 6  +
mov esi eax +
push offset aClass  +
push esi  +
call sub_49A970  +
add esp 14h +
test eax eax +
jnz loc_482D7E  +
add esi 6 +
mov ecx [ebp+arg_4] +
push esi  +
call loc_4758F0  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+10h]  +
mov dword ptr [esi] offset off_4D0E18 +
call sub_47BF70  +
mov eax [ebp+arg_0] +
add esp 4 +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_482DD3  +
test al 4 +
jnz loc_482DC8  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test eax eax +
js loc_482E34  +
push 14h  +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov [ebp+0Ch] ecx +
test ecx ecx +
jz loc_482E29  +
mov eax [ebp+8] +
mov dword ptr [ecx] offset off_4D0E18 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 0 +
mov dword ptr [ecx+10h] 0 +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
xor ecx ecx +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
call loc_47C0B0  +
push 0FFFFFFFFh  +
push offset loc_4BA9A9  +
mov eax large fs:0 +
push eax  +
push ecx  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push [ebp+arg_4]  +
mov [ebp+var_10] 0 +
mov edi [ebp+arg_0] +
push edi  +
mov [ebp+var_4] 0 +
call loc_482DE0  +
add esp 8 +
mov ecx [edi] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
mov edx [ecx] +
call dword ptr [edx+20h]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_4] +
push eax  +
call sub_482E40  +
add esp 8 +
mov esi [eax] +
mov ecx esi +
mov dword ptr [eax] 0 +
call sub_474AB0  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_482EDF  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
js loc_482F71  +
cmp esi [edi+8] +
jz loc_482F69  +
mov eax [edi+0Ch] +
cmp esi eax +
ja loc_482F10  +
shr eax 1 +
cmp esi eax +
jnb loc_482F4A  +
push ebx  +
mov ebx esi +
test esi esi +
jz loc_482F37  +
lea eax [esi-1] +
bsr eax eax +
jz loc_482F24  +
lea ecx [eax+1] +
jmp loc_482F26  +
xor ecx ecx +
mov ebx 1 +
mov eax 10h +
shl ebx cl +
cmp ebx eax +
cmovb ebx eax +
push ebx  +
push dword ptr [edi+10h]  +
call sub_47BFB0  +
add esp 8 +
mov [edi+0Ch] ebx +
mov [edi+10h] eax +
pop ebx  +
mov ecx [edi+8] +
cmp esi ecx +
jbe loc_482F66  +
mov eax esi +
sub eax ecx +
push eax  +
mov eax [edi+10h] +
add eax ecx +
push 0  +
push eax  +
call sub_48CF40  +
add esp 0Ch +
mov [edi+8] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
call loc_47C0B0  +
sub esp 8 +
push 10h  +
mov [ebp+var_4] 0 +
call sub_47ABB0  +
mov ecx eax +
add esp 4 +
mov eax [ebp+arg_0] +
mov [ebp+var_8] ecx +
test ecx ecx +
jz loc_482FB9  +
movsd xmm0 [ebp+arg_4] +
mov dword ptr [ecx] offset off_4D0E40 +
movsd qword ptr [ecx+8] xmm0 +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn   +
mov dword ptr [eax] 0 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
sub esp 28h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ecx] +
push esi  +
mov esi [ebp+arg_0] +
mov eax [eax+10h] +
call eax  +
call sub_489750  +
mov [ebp+var_28] eax +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_20] +
mov [ebp+var_24] edx +
push 1Ah  +
push eax  +
call sub_4A1CB6  +
mov eax [esi] +
lea ecx [ebp+var_20] +
add esp 0Ch +
push 18h  +
push ecx  +
mov ecx esi +
call dword ptr [eax+10h]  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
sub esp 8 +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
fmul  ds:qword_4D0820 +
fstp  [ebp+var_8] +
movsd xmm1 [ebp+var_8] +
comisd xmm1 ds:qword_4BF6D0 +
jb loc_48312A  +
movsd xmm0 ds:qword_4E1048 +
addsd xmm0 xmm1 +
call sub_48958F  +
mov esp ebp +
pop ebp  +
retn   +
movsd xmm0 ds:qword_4D0E58 +
addsd xmm0 xmm1 +
call sub_48958F  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
fstp  [ebp+var_8] +
movsd xmm0 [ebp+var_8] +
call sub_48958F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_483195  +
test al 4 +
jnz loc_483187  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 8Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB3DA  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 8Ch  +
mov [ebp+var_10] 0 +
call sub_47ABB0  +
mov edi eax +
add esp 4 +
mov [ebp+var_14] edi +
mov [ebp+var_4] 0 +
test edi edi +
jz loc_483237  +
push 80h  +
lea esi [edi+0Ch] +
mov byte ptr [ebp+var_4] 1 +
push 0  +
push esi  +
mov dword ptr [edi] offset off_4D0E64 +
mov dword ptr [edi+8] 0 +
call sub_48CF40  +
mov eax [ebp+arg_4] +
add eax 2 +
push eax  +
push 20h  +
push esi  +
call sub_482B80  +
mov [edi+8] eax +
add esp 18h +
mov eax [ebp+arg_0] +
mov [eax] edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+arg_0]  +
lea eax [ecx+0Ch] +
push dword ptr [ecx+8]  +
push eax  +
call loc_482BA0  +
add esp 0Ch +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB408  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov ebx [ebp+arg_4] +
mov edx ebx +
and edx 100h +
mov [ebp+var_4] 0 +
shl edx 15h +
mov eax ebx +
mov ecx edx +
mov dword ptr [esi] offset off_4D0E78 +
or ecx 80000000h +
mov [esi+8] ebx +
and eax 200h +
mov eax ebx +
cmovz ecx edx +
mov edx ecx +
or edx 8000000h +
and eax 400h +
mov eax ebx +
cmovz edx ecx +
mov ecx edx +
or ecx 10000000h +
and eax 800h +
cmovz ecx edx +
mov [ebp+var_10] ecx +
test bl 10h +
jz loc_483329  +
test bl 20h +
jz loc_483315  +
mov ebx 1 +
jmp loc_48333B  +
test bl 8 +
mov ebx 0 +
setz bl  +
lea ebx ds:2[ebx*2] +
jmp loc_48333B  +
test bl 8 +
mov ebx 0 +
setnz bl  +
lea ebx ds:3[ebx*2] +
mov ecx [ebp+arg_0] +
mov edi [ebp+arg_4] +
and edi 1 +
shl edi 1Fh +
mov eax [ecx] +
call dword ptr [eax+24h]  +
mov edx [ebp+arg_4] +
mov ecx eax +
push 0  +
push [ebp+var_10]  +
mov eax edi +
add esi 0Ch +
push ebx  +
or eax 40000000h +
mov [ebp+arg_0] esi +
push 0  +
and dl 2 +
push 7  +
cmovz eax edi +
push eax  +
push ecx  +
call loc_480180  +
mov [esi] eax +
add esp 1Ch +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_4833BC  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4833E8  +
test al 4 +
jnz loc_4833DD  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_483409  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+0Ch] 0FFFFFFFFh +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB43F  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_4] 0 +
mov [ebp+var_10] 0 +
jnz loc_483447  +
call sub_47C0A0  +
push 10h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_14] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_483482  +
push [ebp+arg_8]  +
mov ecx eax +
push [ebp+arg_4]  +
call sub_483280  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ecx  +
retn   +
***
mov eax [ebp+arg_8] +
push esi  +
mov esi ecx +
sub eax 1 +
jz loc_4834CE  +
sub eax 1 +
jz loc_4834C7  +
xor eax eax +
jmp loc_4834D3  +
mov eax 2 +
jmp loc_4834D3  +
mov eax 1 +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [esi+0Ch]  +
call loc_4806E0  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0  +
push dword ptr [ecx+0Ch]  +
call loc_4806E0  +
add esp 10h +
retn   +
***
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+0Ch]  +
call loc_480580  +
add esp 10h +
pop ebp  +
retn 8  +
***
add esp 4 +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp+var_4] esi +
mov eax [esi] +
mov eax [eax+2Ch] +
call eax  +
mov esi [esi] +
mov ebx eax +
mov ecx [ebp+var_4] +
mov edi edx +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [esi+28h]  +
mov esi [ebp+var_4] +
push dword ptr [esi+0Ch]  +
call loc_480650  +
mov eax [esi] +
add esp 4 +
mov ecx esi +
push 0  +
push edi  +
push ebx  +
call dword ptr [eax+28h]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
test byte ptr [esi+8] 4 +
jz loc_4835AD  +
push 2  +
push 0  +
push 0  +
push dword ptr [esi+0Ch]  +
call loc_4806E0  +
add esp 10h +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [esi+0Ch]  +
call loc_4808D0  +
add esp 10h +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BB46B  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
push 0  +
push 0  +
push 0  +
lea esi [edi+18h] +
push 0  +
mov [ebp+var_14] esi +
call loc_480150  +
mov [esi] eax +
push 0  +
push 0  +
push 0  +
lea esi [edi+1Ch] +
mov [ebp+var_4] 0 +
push 1  +
mov [ebp+var_14] esi +
call loc_480150  +
add esp 20h +
mov [esi] eax +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
push edi  +
call ds:InitializeCriticalSection  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
call ds:DeleteCriticalSection  +
mov eax [esi+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_483680  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+1Ch] 0FFFFFFFFh +
mov eax [esi+18h] +
cmp eax 0FFFFFFFFh +
jz loc_483696  +
push eax  +
call ds:CloseHandle  +
mov dword ptr [esi+18h] 0FFFFFFFFh +
pop esi  +
retn   +
***
mov eax [ecx] +
dec dword ptr [eax]  +
retn   +
***
push 0FFFFFFFFh  +
movsd xmm0 [ebp+arg_0] +
push esi  +
sub esp 8 +
mov esi ecx +
movsd [esp+0Ch+var_C] xmm0 +
call sub_4800C0  +
add esp 8 +
mov ecx esi +
push eax  +
call sub_4836B0  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [ebp+arg_4] +
test edx edx +
jz loc_483802  +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test eax eax +
jz loc_4837F9  +
mov ecx [esi] +
mov [eax] ecx +
add eax 4 +
sub edx 1 +
jnz loc_4837F1  +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB4D6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov eax [ebp+arg_0] +
mov [edi] eax +
mov dword ptr [edi+4] 0 +
mov esi [ebp+arg_8] +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_48385B  +
mov ecx esi +
call sub_4795C0  +
mov [edi+8] esi +
mov esi [ebp+arg_4] +
push 0  +
push offset off_4EF9E4  +
push offset off_4F1B20  +
push 0  +
push esi  +
mov byte ptr [ebp+var_4] 1 +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_483893  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov ecx [edi+4] +
mov esi eax +
call sub_474AB0  +
jmp loc_4838AA  +
mov ecx [edi+4] +
cmp ecx esi +
jz loc_4838AD  +
call sub_474AB0  +
test esi esi +
jz loc_4838AA  +
mov ecx esi +
call sub_4795C0  +
mov [edi+4] esi +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
movd xmm0 [ebp+arg_0] +
mov eax 8 +
cvtdq2pd xmm0 xmm0 +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_4] edi +
mov [ebp+var_4] 0 +
divsd xmm0 ds:qword_4D0EF8 +
mov dword ptr [edi] 0 +
cvttsd2si edx xmm0 +
cmp edx eax +
jle loc_48390C  +
add eax eax +
cmp eax edx +
jl loc_483906  +
lea ecx [ebp+var_4] +
mov dword ptr [edi+4] 0 +
push ecx  +
push eax  +
lea ecx [edi+4] +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
call sub_484120  +
mov eax [edi+8] +
sub eax [edi+4] +
sar eax 2 +
dec eax  +
mov [edi+10h] eax +
mov eax [edi+8] +
sub eax [edi+4] +
sar eax 2 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
mulsd xmm0 ds:qword_4D0EF8 +
cvttsd2si eax xmm0 +
mov [edi+14h] eax +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_483B70  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4839A6  +
mov eax [esi+0Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
lea ecx [esi+4] +
call loc_403440  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+8]  +
mov edx eax +
shl edx 9 +
not edx  +
add eax edx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov eax ecx +
shl eax 4 +
add eax ecx +
mov ecx [ebx+10h] +
mov esi eax +
shr esi 0Ah +
xor esi eax +
mov eax [ebx+8] +
sub eax [ebx+4] +
and ecx esi +
sar eax 2 +
mov [ebp+arg_0] esi +
cmp ecx eax +
jnb loc_4839FD  +
mov eax [ebx+4] +
lea esi [eax+ecx*4] +
jmp loc_4839FF  +
xor esi esi +
mov esi [esi] +
test esi esi +
jz loc_483A1B  +
mov eax [edi] +
mov ecx edi +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_483A32  +
mov esi [esi] +
test esi esi +
jnz loc_483A05  +
push [ebp+arg_4]  +
mov ecx ebx +
push edi  +
push [ebp+arg_0]  +
call sub_483AC0  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 8  +
test esi esi +
jz loc_483A1B  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn 8  +
***
sub esp 8 +
mov eax [ecx+8] +
sub eax [ecx+4] +
push ebx  +
push esi  +
sar eax 2 +
push edi  +
xor edi edi +
mov [ebp+var_4] ecx +
mov [ebp+var_8] eax +
test eax eax +
jle loc_483AA7  +
mov ebx [ebp+arg_0] +
mov eax [ecx+8] +
sub eax [ecx+4] +
sar eax 2 +
cmp edi eax +
jge loc_483AA1  +
mov esi [ecx+4] +
mov esi [esi+edi*4] +
test esi esi +
jz loc_483AA1  +
mov eax [ebx] +
mov ecx ebx +
push dword ptr [esi+8]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_483AB2  +
mov esi [esi] +
test esi esi +
jnz loc_483A88  +
mov ecx [ebp+var_4] +
inc edi  +
cmp edi [ebp+var_8] +
jl loc_483A71  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB50F  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
cmp eax [esi+14h] +
jl loc_483AFE  +
mov eax [esi+8] +
sub eax [esi+4] +
sar eax 2 +
add eax eax +
push eax  +
call sub_483D30  +
mov eax [esi+8] +
sub eax [esi+4] +
mov ecx [esi+10h] +
and ecx [ebp+arg_0] +
sar eax 2 +
cmp ecx eax +
jnb loc_483B19  +
mov eax [esi+4] +
lea edi [eax+ecx*4] +
jmp loc_483B1B  +
xor edi edi +
push 0Ch  +
call sub_488C2D  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_483B46  +
push [ebp+arg_8]  +
mov ecx eax +
push [ebp+arg_4]  +
push dword ptr [edi]  +
call sub_483810  +
mov [edi] eax +
jmp loc_483B4C  +
mov dword ptr [edi] 0 +
inc dword ptr [esi]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ecx+8] +
mov edx eax +
push esi  +
mov esi [ecx+4] +
sub edx esi +
add edx 3 +
mov [ebp-0Ch] ecx +
xor ecx ecx +
shr edx 2 +
push edi  +
xor edi edi +
mov [ebp-4] esi +
cmp esi eax +
mov [ebp-8] ecx +
cmova edx edi +
mov [ebp-10h] edx +
test edx edx +
jz loc_483BFB  +
push ebx  +
mov edi [esi] +
test edi edi +
jz loc_483BE6  +
mov esi [ebp-0Ch] +
mov ecx [edi+8] +
mov ebx [edi] +
test ecx ecx +
jz loc_483BBE  +
call sub_479590  +
mov ecx [edi+4] +
test ecx ecx +
jz loc_483BCA  +
call sub_479590  +
push 0Ch  +
push edi  +
call sub_488C60  +
dec dword ptr [esi]  +
add esp 8 +
mov edi ebx +
test ebx ebx +
jnz loc_483BB0  +
mov esi [ebp-4] +
mov ecx [ebp-8] +
mov edx [ebp-10h] +
inc ecx  +
mov dword ptr [esi] 0 +
add esi 4 +
mov [ebp-8] ecx +
mov [ebp-4] esi +
cmp ecx edx +
jnz loc_483BA2  +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+8]  +
mov edx eax +
shl edx 9 +
not edx  +
add eax edx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov edx ecx +
shl edx 4 +
add edx ecx +
mov ecx [esi+10h] +
mov eax edx +
shr eax 0Ah +
xor edx eax +
mov eax [esi+8] +
sub eax [esi+4] +
and ecx edx +
sar eax 2 +
cmp ecx eax +
jnb loc_483CA9  +
mov eax [esi+4] +
lea esi [eax+ecx*4] +
jmp loc_483CAB  +
xor esi esi +
mov esi [esi] +
test esi esi +
jz loc_483CC7  +
mov eax [edi] +
mov ecx edi +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_483CCF  +
mov esi [esi] +
test esi esi +
jnz loc_483CB1  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
test esi esi +
jz loc_483CC7  +
mov eax [esi+8] +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+10h] 0 +
setnz al  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_483D19  +
mov edx [ecx+8] +
mov ecx [ecx+4] +
push esi  +
mov esi [ebp+8] +
mov [esi] ecx +
mov ecx eax +
mov [esi+4] edx +
call loc_484280  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aIteratorAtEnd  +
call loc_47A1B0  +
push 0FFFFFFFFh  +
push offset loc_4BB538  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_20] ebx +
mov esi [ebp+arg_0] +
lea eax [ebp+var_14] +
push eax  +
push esi  +
lea ecx [ebp+var_2C] +
mov [ebp+var_14] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
call sub_484120  +
lea eax [esi-1] +
mov [ebp+var_4] 0 +
mov esi [ebx+4] +
lea edi [ebx+4] +
mov [ebp+var_14] eax +
xor ecx ecx +
mov eax [ebx+8] +
mov edx eax +
sub edx esi +
mov [ebp+var_1C] edi +
add edx 3 +
mov [ebp+arg_0] esi +
xor ebx ebx +
shr edx 2 +
cmp esi eax +
mov [ebp+var_10] ecx +
cmova edx ebx +
mov ebx [ebp+var_2C] +
mov [ebp+var_18] edx +
test edx edx +
jz loc_483E22  +
mov edi [esi] +
test edi edi +
jz loc_483E11  +
mov esi [ebp+var_14] +
nop   +
mov ecx [edi+4] +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
shl ecx 9 +
not ecx  +
add eax ecx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov eax ecx +
shl eax 4 +
add eax ecx +
mov ecx [edi] +
mov edx eax +
shr edx 0Ah +
xor edx eax +
and edx esi +
mov eax [ebx+edx*4] +
mov [edi] eax +
mov [ebx+edx*4] edi +
mov edi ecx +
test ecx ecx +
jnz loc_483DD0  +
mov esi [ebp+arg_0] +
mov ecx [ebp+var_10] +
mov edx [ebp+var_18] +
inc ecx  +
add esi 4 +
mov [ebp+arg_0] esi +
mov [ebp+var_10] ecx +
cmp ecx edx +
jnz loc_483DC5  +
mov edi [ebp+var_1C] +
lea eax [ebp+var_2C] +
cmp edi eax +
jz loc_483E40  +
mov eax [edi] +
mov [edi] ebx +
mov ebx eax +
mov eax [ebp+var_28] +
mov [edi+4] eax +
mov ecx [edi+8] +
mov eax [ebp+var_24] +
mov [edi+8] eax +
jmp loc_483E43  +
mov ecx [ebp+var_24] +
mov eax [edi+4] +
sub eax [edi] +
mov edx [ebp+var_20] +
sar eax 2 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
mulsd xmm0 ds:qword_4D0EF8 +
cvttsd2si eax xmm0 +
mov [edx+14h] eax +
mov eax [ebp+var_14] +
mov [edx+10h] eax +
test ebx ebx +
jz loc_483EC6  +
sub ecx ebx +
sar ecx 2 +
cmp ecx 3FFFFFFFh +
jbe loc_483E81  +
call sub_495911  +
lea eax ds:0[ecx*4] +
cmp eax 1000h +
jb loc_483EBD  +
test bl 1Fh +
jz loc_483E99  +
call sub_495911  +
mov eax [ebx-4] +
cmp eax ebx +
jb loc_483EA5  +
call sub_495911  +
sub ebx eax +
cmp ebx 4 +
jnb loc_483EB1  +
call sub_495911  +
cmp ebx 23h +
jbe loc_483EBB  +
call sub_495911  +
mov ebx eax +
push ebx  +
call sub_47BF70  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
mov ecx ebx +
push edi  +
mov eax [ebx] +
mov [ebp-4] esi +
call dword ptr [eax+8]  +
mov edx eax +
shl edx 9 +
not edx  +
add eax edx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov edx ecx +
shl edx 4 +
add edx ecx +
mov ecx [esi+10h] +
mov eax edx +
shr eax 0Ah +
xor edx eax +
mov eax [esi+8] +
sub eax [esi+4] +
and ecx edx +
sar eax 2 +
cmp ecx eax +
jnb loc_483F2E  +
mov eax [esi+4] +
lea eax [eax+ecx*4] +
jmp loc_483F30  +
xor eax eax +
mov esi [eax] +
xor edi edi +
mov [ebp+8] eax +
test esi esi +
jz loc_483F9F  +
mov eax [ebx] +
mov ecx ebx +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_483F61  +
mov edi esi +
mov esi [esi] +
test esi esi +
jnz loc_483F40  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [esi+8] +
mov ebx [esi] +
test ecx ecx +
jz loc_483F6F  +
call sub_479590  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_483F7B  +
call sub_479590  +
push 0Ch  +
push esi  +
call sub_488C60  +
mov eax [ebp-4] +
add esp 8 +
dec dword ptr [eax]  +
test edi edi +
jz loc_483F9A  +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+8] +
mov [eax] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+8]  +
mov edx eax +
shl edx 9 +
not edx  +
add eax edx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov edx ecx +
shl edx 4 +
add edx ecx +
mov ecx [esi+10h] +
mov eax edx +
shr eax 0Ah +
xor edx eax +
mov eax [esi+8] +
sub eax [esi+4] +
and ecx edx +
sar eax 2 +
cmp ecx eax +
jnb loc_483FF9  +
mov eax [esi+4] +
lea esi [eax+ecx*4] +
jmp loc_483FFB  +
xor esi esi +
mov esi [esi] +
test esi esi +
jz loc_484051  +
mov eax [edi] +
mov ecx edi +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_48401D  +
mov esi [esi] +
test esi esi +
jnz loc_484001  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
test esi esi +
jz loc_484051  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_484034  +
call sub_479590  +
mov dword ptr [esi+8] 0 +
mov ecx [esi+8] +
mov edi [ebp+arg_4] +
cmp ecx edi +
jz loc_484051  +
call sub_474AB0  +
test edi edi +
jz loc_48404E  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+8]  +
mov edx eax +
shl edx 9 +
not edx  +
add eax edx +
mov ecx eax +
shr ecx 0Eh +
xor ecx eax +
mov eax ecx +
shl eax 4 +
add eax ecx +
mov ecx [ebx+10h] +
mov esi eax +
shr esi 0Ah +
xor esi eax +
mov eax [ebx+8] +
sub eax [ebx+4] +
and ecx esi +
sar eax 2 +
mov [ebp+arg_0] esi +
cmp ecx eax +
jnb loc_4840AD  +
mov eax [ebx+4] +
lea esi [eax+ecx*4] +
jmp loc_4840AF  +
xor esi esi +
mov esi [esi] +
test esi esi +
jz loc_4840CB  +
mov eax [edi] +
mov ecx edi +
push dword ptr [esi+4]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_4840E0  +
mov esi [esi] +
test esi esi +
jnz loc_4840B5  +
push [ebp+arg_4]  +
mov ecx ebx +
push edi  +
push [ebp+arg_0]  +
call sub_483AC0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
test esi esi +
jz loc_4840CB  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_4840F7  +
call sub_479590  +
mov dword ptr [esi+8] 0 +
mov ecx [esi+8] +
mov edi [ebp+arg_4] +
cmp ecx edi +
jz loc_4840D9  +
call sub_474AB0  +
test edi edi +
jz loc_484111  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BB560  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov edi [ebp+arg_0] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jz loc_4841B6  +
cmp edi 3FFFFFFFh +
jbe loc_48417D  +
push offset aVectorTTooLong  +
call sub_489DF7  +
push edi  +
call loc_484210  +
push [ebp+arg_0]  +
mov [esi] eax +
lea ecx ds:0[edi*4] +
mov [esi+4] eax +
mov eax [esi] +
push esi  +
push [ebp+arg_4]  +
add eax ecx +
mov [ebp+var_4] 0 +
mov [esi+8] eax +
mov ebx [esi] +
push edi  +
push ebx  +
call sub_4837E0  +
lea eax [ebx+edi*4] +
add esp 14h +
mov [esi+4] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jnz loc_48421E  +
pop ebp  +
retn 4  +
***
cmp eax 3FFFFFFFh +
ja loc_484261  +
shl eax 2 +
cmp eax 1000h +
jb loc_484252  +
lea ecx [eax+23h] +
cmp ecx eax +
jbe loc_484266  +
push ecx  +
call sub_488C2D  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_48426B  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
mov [eax-4] ecx +
pop ebp  +
retn 4  +
***
push eax  +
call sub_488C2D  +
add esp 4 +
test eax eax +
jnz loc_48421A  +
jmp loc_484270  +
call sub_489DDA  +
call sub_489DDA  +
call sub_495911  +
call sub_495911  +
mov edx ecx +
mov eax [edx+10h] +
test eax eax +
jz loc_484292  +
mov eax [eax] +
mov [edx+10h] eax +
test eax eax +
jnz locret_4842D8  +
push esi  +
mov esi [edx+8] +
push edi  +
mov edi [esi+8] +
sub edi [esi+4] +
inc dword ptr [edx+0Ch]  +
mov eax [edx+0Ch] +
sar edi 2 +
cmp eax edi +
jge loc_4842D6  +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5440 +
cmp eax [ecx+4] +
jle loc_484302  +
jmp loc_48430B  +
mov eax dword_4F543C +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F5440  +
call sub_489058  +
add esp 4 +
cmp dword_4F5440 0FFFFFFFFh +
jnz loc_484302  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5434  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_484347  +
mov dword ptr [eax] offset off_4D0F04 +
jmp loc_48434B  +
xor eax eax +
jmp $+2  +
push offset dword_4F5440  +
mov dword_4F543C eax +
call sub_489019  +
add esp 4 +
jmp loc_484302  +
***
mov ecx [ebp+arg_0] +
push offset aNull_1  +
call loc_4758F0  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea eax [esi+10h] +
mov [ebp+var_4] 0 +
push eax  +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_4D0F44 +
call sub_484A50  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_484407  +
test al 4 +
jnz loc_4843FC  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
lea ecx ds:0[eax*4] +
mov eax 55555556h +
imul  ecx +
mov eax edx +
shr eax 1Fh +
dec eax  +
add eax edx +
bsr eax eax +
jz loc_48444E  +
lea ecx [eax+1] +
jmp loc_484450  +
xor ecx ecx +
movzx eax ds:byte_4CF59C +
push esi  +
mov esi 1 +
shl esi cl +
push eax  +
lea ecx ds:0[esi*4] +
push ecx  +
push 10h  +
mov [ebp+arg_4] ecx +
call sub_47ABD0  +
mov ecx eax +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov [ebp+arg_4] ecx +
test ecx ecx +
jz loc_484498  +
mov dword ptr [ecx] offset off_4D0F44 +
mov [ecx+0Ch] esi +
mov dword ptr [ecx+8] 0 +
mov [eax] ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov dword ptr [eax] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
push [ebp+arg_0]  +
call dword ptr [eax+28h]  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
call loc_484500  +
add esp 8 +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_4844F6  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
test eax eax +
jz loc_484526  +
push eax  +
call sub_484530  +
mov ecx [ebp+8] +
add esp 4 +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push 0FFFFFFFFh  +
push offset loc_4BB5B8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+14h]  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_484420  +
add esp 8 +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] 0 +
call dword ptr [eax+18h]  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_4845B2  +
mov esi [ebp+arg_0] +
lea eax [esi+8] +
lea ebx [esi+10h] +
mov esi eax +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+14h]  +
push eax  +
push ebx  +
mov ecx esi +
call sub_484770  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_484595  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push ebx  +
mov esi ecx +
call sub_479560  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push eax  +
push off_4EEF10  +
push ebx  +
call sub_481870  +
mov eax [esi] +
add esp 0Ch +
mov ecx esi +
xor edi edi +
call dword ptr [eax+18h]  +
mov esi eax +
mov ecx esi +
mov eax [esi] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_484636  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push eax  +
push edi  +
push off_4EEF14  +
push ebx  +
call sub_481870  +
mov eax [esi] +
add esp 10h +
mov ecx esi +
inc edi  +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_484610  +
push off_4EEF18  +
mov ecx ebx +
call loc_4758F0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
mov ebx ecx +
cmp ebx eax +
jnz loc_484664  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 4  +
***
push edi  +
push 0  +
push offset off_4F0260  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_4846E2  +
mov edx [edi] +
mov ecx edi +
push esi  +
call dword ptr [edx+14h]  +
mov edx [ebx] +
mov ecx ebx +
mov esi eax +
call dword ptr [edx+14h]  +
cmp esi eax +
jnz loc_4846D9  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+18h]  +
mov esi eax +
mov ecx esi +
mov edx [esi] +
mov edx [edx+10h] +
call edx  +
test al al +
jz loc_4846D0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
mov edx [edi] +
mov ecx edi +
push eax  +
call dword ptr [edx+28h]  +
test eax eax +
jz loc_4846D9  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_4846B0  +
pop esi  +
pop edi  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 4  +
***
pop esi  +
pop edi  +
xor al al +
pop ebx  +
pop ebp  +
retn 4  +
***
pop edi  +
xor al al +
pop ebx  +
pop ebp  +
retn 4  +
***
lea eax [ecx+10h] +
add ecx 8 +
push eax  +
push [ebp+arg_0]  +
call sub_484890  +
pop ebp  +
retn 4  +
***
lea eax [ecx+10h] +
add ecx 8 +
push eax  +
push [ebp+arg_0]  +
call loc_484910  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push 14h  +
mov esi ecx +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_4] eax +
test eax eax +
jz loc_48475B  +
push dword ptr [esi+0Ch]  +
lea ecx [esi+10h] +
push ecx  +
mov ecx eax +
call sub_47C7E0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push edi  +
mov edi [ebp+arg_4] +
mov ebx ecx +
push eax  +
push edi  +
push esi  +
call loc_4847F0  +
cmp eax 0FFFFFFFFh +
jnz loc_4847E2  +
push 0  +
push offset off_4EF9E4  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_4847C6  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx eax +
mov eax [ebp+var_4] +
pop edi  +
mov [esi+eax*4] ecx +
mov eax ecx +
inc dword ptr [ebx]  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx edi +
call sub_4795C0  +
mov ecx eax +
mov eax [ebp+var_4] +
pop edi  +
mov [esi+eax*4] ecx +
mov eax ecx +
inc dword ptr [ebx]  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax [esi+eax*4] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ecx+4] +
mov ecx [ebp+0Ch] +
dec esi  +
push edi  +
mov [ebp-4] esi +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov edi [ebp+10h] +
mov ecx eax +
shr ecx 8 +
xor ecx eax +
shr ecx 0Ch +
xor eax ecx +
mov dword ptr [edi] 0FFFFFFFFh +
mov ebx eax +
shr ebx 3 +
xor ebx eax +
shr ebx 4 +
xor ebx eax +
mov eax [ebp-4] +
and ebx esi +
mov esi ebx +
nop   +
mov ecx [ebp+8] +
mov ecx [ecx+esi*4] +
test ecx ecx +
jz loc_48486C  +
cmp ecx 0FFFFFFFFh +
jnz loc_484847  +
cmp [edi] ecx +
jnz loc_484858  +
mov [edi] esi +
jmp loc_484858  +
mov eax [ecx] +
push dword ptr [ebp+0Ch]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_484861  +
mov eax [ebp-4] +
inc esi  +
and esi eax +
cmp esi ebx +
jnz loc_484830  +
jmp loc_48487F  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp dword ptr [edi] 0FFFFFFFFh +
jnz loc_484873  +
mov [edi] esi +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push offset aSetOverflow  +
call loc_47A1B0  +
push ecx  +
push ebx  +
push esi  +
mov esi [ecx+4] +
mov ecx [ebp+arg_0] +
dec esi  +
push edi  +
mov [ebp+var_4] esi +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
shr ecx 8 +
xor ecx eax +
shr ecx 0Ch +
xor eax ecx +
mov ecx [ebp+arg_4] +
mov ebx eax +
shr ebx 3 +
xor ebx eax +
shr ebx 4 +
xor ebx eax +
mov eax [ebp+var_4] +
and ebx esi +
mov esi ebx +
mov edi [ecx+esi*4] +
test edi edi +
jz loc_4848F1  +
cmp edi 0FFFFFFFFh +
jz loc_4848EA  +
mov eax [edi] +
mov ecx edi +
push [ebp+arg_0]  +
mov eax [eax+4] +
call eax  +
test al al +
jnz loc_4848FC  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
inc esi  +
and esi eax +
cmp esi ebx +
jnz loc_4848C8  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
test edx edx +
jz loc_484944  +
mov eax [ebp+0Ch] +
mov ecx [ecx+4] +
push esi  +
lea esi [eax+ecx*4] +
cmp esi eax +
jz loc_48493F  +
mov ecx [eax] +
test ecx ecx +
jz loc_484938  +
cmp ecx 0FFFFFFFFh +
jz loc_484938  +
mov [edx] ecx +
add edx 4 +
add eax 4 +
cmp eax esi +
jnz loc_484928  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_47C0A0  +
push ecx  +
mov eax [ecx+4] +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_4] ecx +
lea eax [ebx+eax*4] +
mov [ebp+arg_0] eax +
cmp eax ebx +
jz loc_4849CE  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebx] +
test edi edi +
jz loc_4849B5  +
cmp edi 0FFFFFFFFh +
jz loc_4849B5  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+8]  +
mov edx [ebp+arg_8] +
mov ecx eax +
shr ecx 8 +
dec edx  +
xor ecx eax +
shr ecx 0Ch +
xor eax ecx +
mov ecx eax +
shr ecx 3 +
xor ecx eax +
shr ecx 4 +
xor ecx eax +
and ecx edx +
cmp dword ptr [esi+ecx*4] 0 +
jz loc_4849AF  +
inc ecx  +
and ecx edx +
cmp dword ptr [esi+ecx*4] 0 +
jnz loc_4849A6  +
mov eax [ebp+arg_0] +
mov [esi+ecx*4] edi +
add ebx 4 +
cmp ebx eax +
jnz loc_484970  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
pop edi  +
pop esi  +
mov [eax+4] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov [ecx+4] edx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov ebx ecx +
push edi  +
call loc_4847F0  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_484A41  +
mov ecx [edi+esi*4] +
call sub_479590  +
mov dword ptr [edi+esi*4] 0FFFFFFFFh +
mov eax [ebx+4] +
dec dword ptr [ebx]  +
dec eax  +
cmp esi eax +
jge loc_484A36  +
cmp dword ptr [edi+esi*4+4] 0 +
jnz loc_484A36  +
test esi esi +
jle loc_484A36  +
cmp dword ptr [edi+esi*4] 0FFFFFFFFh +
jnz loc_484A36  +
mov dword ptr [edi+esi*4] 0 +
dec esi  +
test esi esi +
jg loc_484A24  +
pop edi  +
pop esi  +
mov al 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov ebx [edi+4] +
cmp [edi] esi +
jz loc_484A8B  +
mov eax [ebp+arg_0] +
cmp esi ebx +
jnb loc_484A8B  +
mov ecx [eax+esi*4] +
test ecx ecx +
jz loc_484A85  +
cmp ecx 0FFFFFFFFh +
jz loc_484A7E  +
call sub_479590  +
dec dword ptr [edi]  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+esi*4] 0 +
inc esi  +
cmp dword ptr [edi] 0 +
jnz loc_484A64  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
lea eax [ebp+var_4] +
push edi  +
mov edi [ebp+arg_0] +
push eax  +
push esi  +
push edi  +
call loc_4847F0  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_484ACA  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
push 0  +
push offset off_4EF9E4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_484AEE  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_484AF5  +
mov ecx esi +
call sub_4795C0  +
mov ecx [edi+ebx*4] +
mov esi eax +
cmp ecx 0FFFFFFFFh +
jz loc_484B04  +
call sub_479590  +
mov [edi+ebx*4] esi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
lea eax [ebp+var_4] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push eax  +
push esi  +
push ebx  +
mov edi ecx +
call loc_4847F0  +
mov [ebp+arg_4] eax +
push 0  +
push offset off_4EF9E4  +
push offset off_4F1B20  +
push 0  +
push esi  +
cmp eax 0FFFFFFFFh +
jnz loc_484B95  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_484B79  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
mov ecx eax +
mov eax [ebp+var_4] +
mov [ebx+eax*4] ecx +
mov eax ecx +
inc dword ptr [edi]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx esi +
call sub_4795C0  +
mov ecx eax +
mov eax [ebp+var_4] +
mov [ebx+eax*4] ecx +
mov eax ecx +
inc dword ptr [edi]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_484BAA  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_484BB1  +
mov ecx esi +
call sub_4795C0  +
mov edi [ebp+arg_4] +
mov esi eax +
mov ecx [ebx+edi*4] +
cmp ecx 0FFFFFFFFh +
jz loc_484BC3  +
call sub_479590  +
mov [ebx+edi*4] esi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BB5F3  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
mov dword ptr [esi+8] offset off_4CE82C +
mov ecx [ebp+arg_4] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_4D1004 +
mov dword ptr [esi+8] offset off_4D1040 +
test ecx ecx +
jz loc_484C37  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_484C39  +
xor eax eax +
mov edi [ebp+arg_0] +
mov [esi+0Ch] eax +
test edi edi +
jz loc_484C4A  +
mov ecx edi +
call sub_4795C0  +
mov [esi+10h] edi +
mov eax esi +
mov dword ptr [esi+14h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4BB644  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea edi [esi+8] +
mov [ebp+var_4] 0 +
mov dword ptr [edi] offset off_4CE82C +
mov ecx [ebp+arg_0] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [esi] offset off_4D1004 +
mov dword ptr [edi] offset off_4D1040 +
test ecx ecx +
jz loc_484CC8  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_484CCA  +
xor eax eax +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov byte ptr [ebp+var_4] 4 +
call sub_47EE60  +
mov [eax+4] edi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_4D1004 +
sub ecx 8 +
jmp sub_484D50  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4D1004 +
mov dword ptr [esi+8] offset off_4D1040 +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_484D6F  +
call sub_479590  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_484D7B  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_484D87  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi+8] offset off_4CE824 +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_484DBA  +
test al 4 +
jnz loc_484DAF  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 18h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] 0 +
mov eax 1 +
xadd dword_4F5444 eax +
inc eax  +
push eax  +
push offset aVcthreadD  +
push [ebp+arg_0]  +
call sub_477DB0  +
mov eax [ebp+arg_0] +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB668  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov ecx [esi+0Ch] +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_484E6F  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov esi eax +
test esi esi +
jz loc_484E71  +
mov ecx esi +
call sub_4795C0  +
mov ecx esi +
call sub_474AB0  +
mov ecx esi +
call sub_479590  +
jmp loc_484E71  +
xor esi esi +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax [ebp-14h] +
mov ecx [ebp-20h] +
mov esi [eax+0Ch] +
mov eax [ecx] +
call dword ptr [eax+4]  +
push eax  +
push esi  +
push offset aStdExceptionIn  +
call sub_47A700  +
add esp 0Ch +
mov eax offset loc_484F32 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB6C8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_47EE60  +
call sub_47EE60  +
mov ecx [eax+4] +
lea eax [ecx-8] +
neg ecx  +
sbb ecx ecx +
and ecx eax +
jnz loc_485044  +
call sub_47EEC0  +
test al al +
jz loc_48500A  +
push 4  +
push offset aMain  +
call sub_474F10  +
push eax  +
call sub_47CE00  +
add esp 0Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+var_10] +
push eax  +
call sub_484DD0  +
push dword ptr [eax]  +
mov [ebp+var_4] 0 +
call sub_47CF20  +
mov ecx [ebp+var_10] +
add esp 8 +
mov esi eax +
test ecx ecx +
jz loc_485046  +
call sub_479590  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB6F8  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_485092  +
call sub_47C0A0  +
push edi  +
lea ecx [ebp+arg_0] +
call sub_47AC20  +
mov ecx [edi+0Ch] +
mov [ebp+var_4] 0 +
cmp ecx esi +
jz loc_4850B8  +
call sub_474AB0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov [edi+0Ch] eax +
lea ecx [ebp+arg_0] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_485110  +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_485115  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push ecx  +
push eax  +
call sub_47CE70  +
add esp 10h +
mov esi eax +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
call sub_47C0A0  +
push ecx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
jnz loc_485165  +
push edi  +
lea eax [ebp+var_4] +
push 0  +
push eax  +
call sub_47C6C0  +
mov ecx [esi+14h] +
add esp 8 +
mov edi [eax] +
cmp ecx edi +
jz loc_485158  +
call sub_474AB0  +
test edi edi +
jz loc_485155  +
mov ecx edi +
call sub_4795C0  +
mov [esi+14h] edi +
mov ecx [ebp+var_4] +
pop edi  +
test ecx ecx +
jz loc_485165  +
call sub_479590  +
mov eax [esi+14h] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
test ecx ecx +
jz loc_485182  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_4851AE  +
test al 4 +
jnz loc_4851A3  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 14h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push esi  +
call sub_47AC20  +
lea ecx [ebp+var_4] +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi+0Ch] 1 +
call sub_47AEF0  +
lea ecx [ebp+var_4] +
call sub_47AC40  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB728  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-18h] esi +
push esi  +
lea ecx [ebp-14h] +
call sub_47AC20  +
cmp dword ptr [esi+10h] 0 +
mov dword ptr [ebp-4] 0 +
jnz loc_4852A2  +
cmp byte ptr [esi+0Ch] 0 +
jnz loc_4852A2  +
call sub_484FA0  +
lea ecx [ebp-14h] +
mov [esi+10h] eax +
call sub_47AC40  +
mov ecx [esi+8] +
mov dword ptr [ebp-4] 1 +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push esi  +
lea ecx [ebp-14h] +
call sub_47AC20  +
lea ecx [ebp-14h] +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi+0Ch] 1 +
call sub_47AEF0  +
lea ecx [ebp-14h] +
call sub_47AC40  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp-18h] +
call sub_4851C0  +
push 0  +
push 0  +
call sub_48D64F  +
push offset aAlreadyRunning  +
call loc_47A1B0  +
push 0FFFFFFFFh  +
push offset loc_4BB668  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push esi  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
mov [ebp+var_4] 0 +
call sub_484FA0  +
cmp [esi+10h] eax +
jnz loc_4852FA  +
push offset aDeadlockPreven  +
call loc_47A1B0  +
cmp byte ptr [esi+0Ch] 0 +
jnz loc_48530E  +
lea ecx [ebp+var_10] +
call sub_47AF80  +
cmp byte ptr [esi+0Ch] 0 +
jz loc_485300  +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
test edi edi +
jz loc_48537F  +
push 14h  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+8] esi +
test esi esi +
jz loc_485377  +
mov ecx edi +
mov dword ptr [esi] offset off_4D104C +
call sub_4795C0  +
mov [esi+8] edi +
mov ecx esi +
mov byte ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
call sub_47C0A0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB784  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-10h] edi +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [edi] offset off_4D10C8 +
mov [edi+8] eax +
test ecx ecx +
jz loc_4853DC  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_4853DE  +
xor eax eax +
mov [edi+0Ch] eax +
mov ebx [ebp+10h] +
mov byte ptr [ebp-4] 1 +
test ebx ebx +
jz loc_4853F5  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
jmp loc_4853F7  +
xor eax eax +
mov [edi+10h] eax +
push 0  +
mov byte ptr [ebp-4] 2 +
call sub_47C740  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_485417  +
mov ecx esi +
call sub_4795C0  +
jmp loc_485419  +
xor esi esi +
mov [edi+14h] esi +
xorps xmm0 xmm0 +
mov byte ptr [ebp-4] 3 +
push 0  +
push offset unk_4DE8C5  +
mov byte ptr [edi+18h] 1 +
movsd qword ptr [edi+20h] xmm0 +
call sub_474F10  +
add esp 8 +
test eax eax +
jz loc_485448  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_48544A  +
xor eax eax +
mov [edi+28h] eax +
mov eax [ebp+14h] +
xorps xmm0 xmm0 +
mov [edi+3Ch] eax +
mov ecx edi +
mov eax [ebp+18h] +
mov byte ptr [ebp-4] 4 +
movsd qword ptr [edi+30h] xmm0 +
mov byte ptr [edi+38h] 1 +
mov [edi+40h] eax +
call sub_474AB0  +
push 5  +
push offset aEvent  +
call sub_474F10  +
mov edx [ebx] +
add esp 8 +
mov ecx ebx +
push eax  +
call dword ptr [edx+18h]  +
mov ebx eax +
test ebx ebx +
jz loc_485505  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push ebx  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_485526  +
push 4  +
push offset aMode  +
call sub_474F10  +
mov edx [esi] +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edx+18h]  +
mov esi eax +
test esi esi +
jz loc_485505  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_48551B  +
mov esi [ebx] +
push 0Ch  +
push offset aAsynchronous  +
call sub_474F10  +
add esp 8 +
mov ecx ebx +
push eax  +
mov eax [esi+4] +
call eax  +
test al al +
jz loc_485505  +
mov byte ptr [edi+38h] 0 +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push ebx  +
push offset off_4F2170  +
call loc_47A0A0  +
push 0FFFFFFFFh  +
push offset loc_4B9D94  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4D112C +
test edi edi +
jz loc_485585  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_485596  +
mov ecx edi +
call sub_4795C0  +
mov [esi+0Ch] edi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov ecx [esi+8] +
mov byte ptr [ebp+var_4] 4 +
mov dword ptr [esi+18h] 0 +
call sub_47DE70  +
mov ecx esi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4B8A20  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_485632  +
call sub_479590  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_48563E  +
call sub_479590  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_48564A  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_485656  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_485682  +
test al 4 +
jnz loc_485677  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 48h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+0Ch] +
mov dword ptr [esi] offset off_4D112C +
mov [ebp+var_4] 0 +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov ecx [esi+8] +
call sub_47DFC0  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_4856DE  +
call sub_479590  +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_4856EA  +
call sub_479590  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_4856F6  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_485702  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_48573B  +
test al 4 +
jnz loc_485730  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 1Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB7AF  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-14h] ecx +
mov edi [ebp+8] +
mov ecx edi +
push 0  +
mov dword ptr [ebp-4] 0 +
mov eax [edi] +
call dword ptr [eax+2Ch]  +
mov esi eax +
test esi esi +
jnz loc_48579B  +
xor ebx ebx +
jmp loc_4857BC  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov ebx eax +
add esp 14h +
test ebx ebx +
jz loc_485848  +
mov eax [edi] +
mov ecx edi +
push 1  +
call dword ptr [eax+2Ch]  +
mov esi eax +
test esi esi +
jnz loc_4857CF  +
xor edi edi +
jmp loc_4857EC  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_48583D  +
push 48h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_485827  +
push dword ptr [ebp+10h]  +
mov ecx eax +
push dword ptr [ebp+0Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp-14h]  +
call loc_485390  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
push offset off_4F2170  +
call loc_47A0A0  +
push esi  +
push offset off_4F1AF4  +
call loc_47A0A0  +
push dword ptr [ebp+8]  +
push offset aVcnativeBadReq  +
call loc_479FD0  +
mov edi ecx +
push 8000h  +
push dword ptr [edi+0Ch]  +
call loc_487710  +
push 8000h  +
push dword ptr [edi+0Ch]  +
mov esi eax +
call sub_487970  +
push eax  +
push esi  +
call loc_486030  +
mov ecx [edi+10h] +
mov esi eax +
add esp 18h +
cmp ecx esi +
jz loc_4858BA  +
call sub_474AB0  +
test esi esi +
jz loc_4858B5  +
mov ecx esi +
call sub_4795C0  +
jmp loc_4858B7  +
xor esi esi +
mov [edi+10h] esi +
mov esi [edi+10h] +
call sub_486140  +
push eax  +
push esi  +
call loc_4860F0  +
mov ecx [edi+14h] +
mov esi eax +
add esp 8 +
cmp ecx esi +
jz loc_4858F0  +
call sub_474AB0  +
test esi esi +
jz loc_4858EB  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
mov [edi+14h] eax +
pop edi  +
pop esi  +
retn   +
xor eax eax +
mov [edi+14h] eax +
pop edi  +
pop esi  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0  +
push offset off_4F0CC4  +
push offset off_4F128C  +
mov edi ecx +
push 0  +
push esi  +
mov [ebp+var_4] edi +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_485933  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_48593A  +
mov ecx esi +
call sub_479F40  +
mov [ebp+arg_0] eax +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+4]  +
mov ecx [edi+14h] +
mov ebx eax +
mov edx [ecx] +
call dword ptr [edx+34h]  +
push [ebp+arg_0]  +
mov esi eax +
push 9  +
push offset aErrreason  +
mov edi [esi] +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+24h]  +
mov esi eax +
push ebx  +
push 6  +
push offset aErrwhy  +
mov edi [esi] +
call sub_474F10  +
add esp 8 +
mov ecx esi +
push eax  +
call dword ptr [edi+24h]  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax+18h] 0 +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_4859BD  +
sub eax 1 +
jnz loc_4859B7  +
mov eax [ecx+40h] +
pop ebp  +
retn 4  +
xor eax eax +
pop ebp  +
retn 4  +
mov eax [ecx+3Ch] +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB7EC  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-10h] ebx +
call sub_474B70  +
mov esi eax +
mov [ebp-18h] esi +
mov ecx [ebx+10h] +
mov dword ptr [ebp-4] 0 +
mov eax [ecx] +
call dword ptr [eax+14h]  +
push 0  +
push offset off_4EFD10  +
push offset off_4F1B20  +
mov edi eax +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
mov [ebp-14h] eax +
push 0  +
test eax eax +
jz loc_485B74  +
mov ecx [ebx+10h] +
mov edx [ecx] +
call dword ptr [edx+1Ch]  +
mov ecx [ebx+10h] +
mov edi eax +
push 1  +
mov edx [ecx] +
call dword ptr [edx+1Ch]  +
push eax  +
push edi  +
push dword ptr [ebp-14h]  +
mov ecx ebx +
call loc_485750  +
mov edi eax +
mov ecx edi +
mov [ebp-14h] edi +
mov edx [edi] +
mov edx [edx+2Ch] +
call edx  +
test al al +
jz loc_485AC5  +
mov ecx [ebx+8] +
push edi  +
call sub_47DE90  +
mov eax [edi] +
mov ecx edi +
mov eax [eax+20h] +
call eax  +
mov edx [edi] +
mov ecx edi +
mov bl al +
call dword ptr [edx+1Ch]  +
xor ecx ecx +
mov edi eax +
test bl bl +
setz cl  +
push ecx  +
call sub_47C550  +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
push eax  +
push 2  +
mov [ebp-1Ch] edi +
call sub_478F50  +
mov edi [ebp-10h] +
add esp 0Ch +
mov ecx [edi+10h] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+10h]  +
mov ecx [edi+10h] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
jmp loc_485B4A  +
push 0  +
call sub_47C740  +
mov ebx eax +
add esp 4 +
test ebx ebx +
jz loc_485ADE  +
mov ecx ebx +
call sub_4795C0  +
jmp loc_485AE0  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
mov edi [ebx] +
push 0  +
mov byte ptr [ebp-4] 1 +
call sub_47C550  +
add esp 4 +
push eax  +
push 6  +
push offset aStatus  +
call sub_474F10  +
add esp 8 +
mov ecx ebx +
push eax  +
call dword ptr [edi+2Ch]  +
push 0  +
call sub_47C550  +
mov [ebp-28h] eax +
lea eax [ebp-28h] +
push eax  +
push 2  +
mov [ebp-24h] ebx +
call sub_478F50  +
mov edi [ebp-10h] +
add esp 0Ch +
mov ecx [edi+10h] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+10h]  +
mov ecx [edi+10h] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
push dword ptr [ebp-14h]  +
mov ecx [edi+8] +
call sub_47DE90  +
mov ecx ebx +
call sub_479590  +
inc dword ptr [edi+18h]  +
mov dword ptr [ebp-4] 3 +
test esi esi +
jz loc_485B60  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
mov al 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset off_4F0BB4  +
push offset off_4F1B20  +
push 0  +
push edi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_485BC0  +
push offset aVcnativeReceiv  +
call sub_47A7E0  +
add esp 4 +
mov dword ptr [ebp-4] 2 +
test esi esi +
jz loc_485BAC  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+4]  +
xor al al +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push offset aVcnativeBadReq  +
call loc_479FD0  +
mov eax [ecx+8] +
mov eax [eax+8] +
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB81E  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov ecx [edi+8] +
call sub_41ACE0  +
mov esi eax +
mov ecx esi +
mov [ebp+var_18] esi +
mov eax [esi] +
call dword ptr [eax+14h]  +
mov [ebp+var_4] 0 +
mov ecx edi +
mov byte ptr [ebp+var_4] 1 +
call sub_485870  +
mov ecx edi +
call loc_4859D0  +
test al al +
jnz loc_485C46  +
jmp loc_485C71  +
mov eax [ebp+var_14] +
mov ecx [eax+8] +
call sub_41ACE0  +
push [ebp+var_1C]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+20h]  +
mov eax offset loc_485C6E +
retn   +
mov esi [ebp+var_18] +
mov eax [esi] +
mov ecx esi +
mov [ebp+var_4] 3 +
call dword ptr [eax+1Ch]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB840  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov eax dword_4F5448 +
sub esp 8 +
movsd xmm0 [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax dword_4F544C +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov [ebp+var_18] eax +
movsd [esp+3Ch+var_3C] xmm0 +
call sub_47C350  +
add esp 8 +
mov [ebp+var_14] eax +
lea eax [ebp+var_18] +
push 2  +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_47B6F0  +
add esp 0Ch +
mov edi eax +
push 2  +
call sub_47C550  +
add esp 4 +
mov dword ptr [ebp+arg_8] eax +
lea eax [ebp+arg_8] +
mov dword ptr [ebp+arg_8+4] edi +
push eax  +
push 2  +
call sub_478F50  +
mov ecx [esi+10h] +
add esp 8 +
mov edx [ecx] +
push eax  +
call dword ptr [edx+10h]  +
mov ecx [esi+10h] +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_485DFE  +
movsd xmm1 qword ptr [ebp+0Ch] +
xorps xmm0 xmm0 +
comisd xmm0 xmm1 +
ja loc_485E03  +
comisd xmm1 ds:qword_4BF6E0 +
ja loc_485E03  +
mov ecx [esi+28h] +
cmp ecx edi +
jz loc_485DB4  +
call sub_474AB0  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
movsd xmm1 qword ptr [ebp+0Ch] +
mov [esi+28h] eax +
movsd qword ptr [esi+30h] xmm1 +
call sub_487480  +
fstp  qword ptr [ebp-8] +
movsd xmm1 qword ptr [ebp-8] +
movaps xmm0 xmm1 +
subsd xmm0 qword ptr [esi+20h] +
comisd xmm0 ds:qword_4D11A8 +
jbe loc_485DF6  +
movsd xmm0 qword ptr [ebp+0Ch] +
sub esp 8 +
mov ecx [esi+8] +
movsd qword ptr [esi+20h] xmm1 +
movsd qword ptr [esp] xmm0 +
push dword ptr [esi+28h]  +
push esi  +
call sub_485CA0  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_47C0A0  +
sub esp 8 +
movsd qword ptr [esp] xmm1 +
push offset aNcommBadProgre  +
call loc_47A130  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB98F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 1Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_485E8B  +
push [ebp+arg_0]  +
mov ecx eax +
push esi  +
call sub_485540  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_485EB2  +
call sub_479590  +
mov ecx [esi+8] +
test ecx ecx +
jz loc_485EBE  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_485EEA  +
test al 4 +
jnz loc_485EDF  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 10h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov ecx [esi+0Ch] +
mov eax [ecx] +
mov eax [eax+14h] +
call eax  +
test al al +
jz loc_485FC6  +
mov ecx esi +
call sub_485F00  +
mov ecx [esi+0Ch] +
mov eax [ecx] +
mov eax [eax+14h] +
call eax  +
test al al +
jnz loc_485FB1  +
pop esi  +
retn   +
***
push ecx  +
push esi  +
push edi  +
push 10h  +
mov edi ecx +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_486021  +
mov dword ptr [esi] offset off_4D11B4 +
test edi edi +
jz loc_485FFC  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_48600D  +
mov ecx edi +
call sub_4795C0  +
mov ecx esi +
mov [esi+0Ch] edi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+0Ch] +
lea ecx [ebp-0Ch] +
push edi  +
mov edi [ebp+8] +
push 8  +
mov eax [esi] +
push ecx  +
mov ecx esi +
mov dword ptr [ebp-0Ch] 434E4356h +
mov dword ptr [ebp-8] 2C010000h +
call dword ptr [eax+14h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
push 8  +
lea eax [ebp-14h] +
mov ecx edi +
push eax  +
call loc_482170  +
cmp byte ptr [ebp-14h] 56h +
jnz loc_4860DB  +
cmp byte ptr [ebp-13h] 43h +
jnz loc_4860DB  +
cmp byte ptr [ebp-12h] 4Eh +
jnz loc_4860DB  +
cmp byte ptr [ebp-11h] 43h +
jnz loc_4860DB  +
movzx ecx byte ptr [ebp-10h] +
movzx eax byte ptr [ebp-0Fh] +
shl ecx 8 +
or ecx eax +
movzx eax byte ptr [ebp-0Eh] +
shl ecx 8 +
or ecx eax +
movzx eax byte ptr [ebp-0Dh] +
shl ecx 8 +
or ecx eax +
cmp ecx 12Ch +
jnz loc_4860D0  +
push esi  +
push edi  +
call sub_487AE0  +
mov ecx [ebp-4] +
add esp 8 +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push offset aConnectionHand  +
call loc_479FD0  +
push offset aBadNcommStream  +
call loc_479FD0  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
call dword ptr [eax+10h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
mov esi eax +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_48612F  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push offset aBadHandshake@  +
call loc_479FD0  +
call sub_4750D0  +
mov edi eax +
mov ecx edi +
mov edx [edi] +
call dword ptr [edx+24h]  +
push eax  +
call loc_4798D0  +
mov edx [edi] +
add esp 4 +
mov ecx edi +
mov esi eax +
call dword ptr [edx+10h]  +
mov edi eax +
push edi  +
push esi  +
push offset a@D  +
call sub_4782A0  +
add esp 0Ch +
mov esi eax +
push 0  +
push edi  +
call sub_47C550  +
add esp 4 +
push eax  +
push 3  +
push offset aPid  +
call sub_474F10  +
add esp 8 +
push eax  +
push esi  +
push 9  +
push offset aClientId  +
call sub_474F10  +
add esp 8 +
push eax  +
push 12Ch  +
call sub_47C550  +
add esp 4 +
push eax  +
push 8  +
push offset aProtocol  +
call sub_474F10  +
add esp 8 +
push eax  +
push 12Ch  +
call sub_47C550  +
add esp 4 +
push eax  +
push 7  +
push offset aVersion_0  +
call sub_474F10  +
add esp 8 +
push eax  +
call sub_47B730  +
add esp 24h +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
push ecx  +
mov edx esp +
mov dword ptr [edi] 0 +
mov esi [eax] +
mov [edx] esi +
test esi esi +
jz loc_486212  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov ecx edi +
call sub_4862C0  +
test eax eax +
jns loc_486224  +
cmp eax 80004002h +
jnz loc_48622E  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push eax  +
call sub_48B080  +
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F5480 +
cmp eax [ecx+4] +
jle loc_486262  +
jmp loc_48626B  +
mov eax dword_4F547C +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F5480  +
call sub_489058  +
add esp 4 +
cmp dword_4F5480 0FFFFFFFFh +
jnz loc_486262  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F5474  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_4862A7  +
mov dword ptr [eax] offset off_4D132C +
jmp loc_4862AB  +
xor eax eax +
jmp $+2  +
push offset dword_4F5480  +
mov dword_4F547C eax +
call sub_489019  +
add esp 4 +
jmp loc_486262  +
***
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
test eax eax +
jz loc_486303  +
push ebx  +
lea ecx [ebp+var_4] +
mov [ebp+var_4] 0 +
mov edx [eax] +
push ecx  +
push offset unk_4D1308  +
push eax  +
call dword ptr [edx]  +
mov ecx [esi] +
xor ebx ebx +
mov edi eax +
test edi edi +
cmovns ebx [ebp+var_4] +
test ecx ecx +
jz loc_4862FB  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_0] +
mov [esi] ebx +
pop ebx  +
jmp loc_48631D  +
mov ecx [esi] +
test ecx ecx +
jz loc_486318  +
mov dword ptr [esi] 0 +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebp+arg_0] +
mov edi 80004002h +
test eax eax +
jz loc_486327  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
push 0  +
push 0  +
mov esi ecx +
call ds:CoInitializeEx  +
test eax eax +
jns loc_486358  +
cmp eax 80010106h +
jnz loc_48635C  +
mov eax esi +
pop esi  +
retn   +
***
push eax  +
push offset aCoinitializeex  +
call loc_479FD0  +
mov ecx [ecx] +
test ecx ecx +
jz locret_48637C  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
push ecx  +
call ds:VariantClear  +
retn   +
***
jmp fword ptr (byte_4BBFFF-4BC05Fh)[eax]  +
***
push eax  +
sub esp 18h +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov edx [esi] +
test edx edx +
jnz loc_4863E8  +
push 80004003h  +
call sub_48B080  +
mov eax [edx] +
lea ecx [ebp-14h] +
push ecx  +
push edx  +
call dword ptr [eax+28h]  +
test eax eax +
js loc_4864D1  +
cmp dword ptr [ebp-14h] 1 +
jnz loc_4864D1  +
mov dword ptr [ebp-10h] 0 +
lea eax [ebp-24h] +
mov dword ptr [ebp-4] 0 +
push eax  +
call ds:VariantInit  +
mov esi [esi] +
mov byte ptr [ebp-4] 1 +
test esi esi +
jnz loc_486430  +
push 80004003h  +
call sub_48B080  +
mov eax [ebp-10h] +
test eax eax +
jz loc_48643D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-10h] 0 +
mov eax [esi] +
push ecx  +
push offset unk_4CFC9C  +
push esi  +
call dword ptr [eax]  +
test eax eax +
js loc_48649D  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
mov ecx [ebp-10h] +
mov edx eax +
test ecx ecx +
jnz loc_486471  +
push 80004003h  +
call sub_48B080  +
mov eax [ecx] +
lea esi [ebp-24h] +
push esi  +
push edx  +
push ecx  +
call dword ptr [eax+0B0h]  +
test eax eax +
js loc_48649D  +
mov eax 1 +
cmp ax [ebp-24h] +
jz loc_48649D  +
push dword ptr [ebp-1Ch]  +
call sub_478790  +
add esp 4 +
mov esi eax +
jmp loc_48649F  +
xor esi esi +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
mov eax [ebp-10h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_4864BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BB8F8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
mov ecx [ecx] +
mov [ebp+var_4] 0 +
test ecx ecx +
jnz loc_48653C  +
push 80004003h  +
call sub_48B080  +
mov [ebp+var_10] 0 +
lea edx [ebp+var_10] +
mov eax [ecx] +
push edx  +
push ecx  +
call dword ptr [eax+30h]  +
mov eax [ebp+var_10] +
mov esi eax +
test eax eax +
jz loc_48655F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+var_10] +
mov edi [ebp+arg_0] +
mov [edi] esi +
test esi esi +
jz loc_486577  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_486588  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ecx] +
test ecx ecx +
jz loc_4865BB  +
mov eax [ecx] +
lea edx [ebp-4] +
push edx  +
push ecx  +
call dword ptr [eax+20h]  +
mov eax [ebp-4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004003h  +
call sub_48B080  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB8C8  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-18h] +
mov dword ptr [ebp-4] 0 +
push eax  +
push offset unk_4D12F8  +
push 17h  +
push 0  +
push offset unk_4CFC8C  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
js loc_48665A  +
push dword ptr [ebp-18h]  +
call ds:OleRun  +
mov esi eax +
test esi esi +
js loc_48664D  +
mov eax [ebp-18h] +
lea edx [ebp-14h] +
push edx  +
push offset unk_4D1318  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-18h] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
test esi esi +
jns loc_486670  +
mov dword ptr [ebp-14h] 0 +
test esi esi +
jns loc_486670  +
push esi  +
push offset aFailedToInstan  +
call loc_479FD0  +
mov esi [ebp+0Ch] +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+14h]  +
mov edx [esi] +
mov ecx esi +
mov edi eax +
call dword ptr [edx+18h]  +
mov esi eax +
call sub_481710  +
mov edx eax +
cmp esi 3 +
jl loc_4866BA  +
movsx ecx byte ptr [edi] +
cmp ecx 0EFh +
jnz loc_4866BA  +
movsx ecx byte ptr [edi+1] +
cmp ecx 0BBh +
jnz loc_4866BA  +
movsx eax byte ptr [edi+2] +
cmp eax 0BFh +
jnz loc_4866BA  +
call sub_481770  +
mov edx eax +
push edx  +
push esi  +
push edi  +
call sub_479470  +
mov ecx [ebp-14h] +
add esp 0Ch +
mov ebx eax +
test ecx ecx +
jnz loc_4866D8  +
push 80004003h  +
call sub_48B080  +
mov eax [ecx] +
push 0  +
push ecx  +
call dword ptr [eax+118h]  +
mov eax [ebp-14h] +
test eax eax +
jnz loc_4866F4  +
push 80004003h  +
call sub_48B080  +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+120h]  +
mov eax [ebp-14h] +
test eax eax +
jnz loc_486710  +
push 80004003h  +
call sub_48B080  +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+110h]  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_48672C  +
push 80004003h  +
call sub_48B080  +
mov edi [esi] +
lea eax [ebp-10h] +
push eax  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+24h]  +
push eax  +
push esi  +
call dword ptr [edi+104h]  +
test eax eax +
js loc_4867A1  +
cmp word ptr [ebp-10h] 0 +
jz loc_4867A1  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp+0Ch] +
call loc_4861F0  +
mov esi [ebp+8] +
mov eax [ebp+0Ch] +
mov [esi] eax +
test eax eax +
jz loc_486777  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_486777  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-14h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
test ecx ecx +
jz loc_48678B  +
mov edx [ecx] +
push ecx  +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset aFailedToParseX  +
call loc_479FD0  +
push 0FFFFFFFFh  +
push offset loc_4BB8F8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
mov ecx [ecx] +
mov [ebp+var_4] 0 +
test ecx ecx +
jnz loc_48680C  +
push 80004003h  +
call sub_48B080  +
lea edx [ebp+var_10] +
mov [ebp+var_10] 0 +
mov eax [ecx] +
push edx  +
push [ebp+arg_4]  +
push ecx  +
call dword ptr [eax+1Ch]  +
mov eax [ebp+var_10] +
mov esi eax +
test eax eax +
jz loc_486832  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax [ebp+var_10] +
mov edi [ebp+arg_0] +
mov [edi] esi +
test esi esi +
jz loc_48684A  +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov eax [ebp+var_10] +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_48685B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi ecx +
mov edx [edi] +
test edx edx +
jz loc_486910  +
mov eax [edx] +
lea ecx [ebp-4] +
push ecx  +
push edx  +
call dword ptr [eax+28h]  +
test eax eax +
js loc_486907  +
cmp dword ptr [ebp-4] 1 +
jnz loc_486907  +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov bl 1 +
test esi esi +
jz loc_4868FC  +
mov ecx [edi] +
mov dword ptr [ebp+8] 0 +
test ecx ecx +
jz loc_48691A  +
mov eax [ecx] +
lea edx [ebp+8] +
push edx  +
push ecx  +
call dword ptr [eax+0A4h]  +
test eax eax +
js loc_4868F1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+18h]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+24h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_4A1D46  +
add esp 0Ch +
test eax eax +
jnz loc_4868F1  +
push dword ptr [ebp+8]  +
call ds:__imp_SysFreeString  +
pop esi  +
mov al bl +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push dword ptr [ebp+8]  +
xor bl bl +
call ds:__imp_SysFreeString  +
pop esi  +
mov al bl +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
xor al al +
pop edi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 80004003h  +
call sub_48B080  +
push 80004003h  +
call sub_48B080  +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ecx] +
mov dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_486970  +
mov eax [ecx] +
lea edx [ebp-4] +
push edx  +
push ecx  +
call dword ptr [eax+0A4h]  +
test eax eax +
js loc_486967  +
call sub_486240  +
push eax  +
push dword ptr [ebp-4]  +
call sub_478970  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_478810  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004003h  +
call sub_48B080  +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ecx] +
mov dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_4869CD  +
mov eax [ecx] +
lea edx [ebp-4] +
push edx  +
push ecx  +
call dword ptr [eax+68h]  +
test eax eax +
js loc_4869C4  +
call sub_486240  +
push eax  +
push dword ptr [ebp-4]  +
call sub_478970  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_478810  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004003h  +
call sub_48B080  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
call dword ptr [eax+18h]  +
push eax  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call loc_486A30  +
add esp 0Ch +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_486A25  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+10h] +
mov dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
test ebx ebx +
jz loc_486A56  +
js loc_486AD7  +
test edi edi +
jz loc_486AD7  +
cmp ebx 20000h +
jb loc_486A91  +
call sub_4889E0  +
mov edi eax +
push ebx  +
mov ecx edi +
mov edx [edi] +
call dword ptr [edx+10h]  +
push ebx  +
push dword ptr [ebp+0Ch]  +
mov esi eax +
push esi  +
call loc_48C9C0  +
push edi  +
push ebx  +
push esi  +
mov esi [ebp+8] +
push esi  +
call loc_47EC20  +
add esp 1Ch +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebx+10h] +
push eax  +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+10h] esi +
test esi esi +
jz loc_486AC9  +
push ebx  +
lea ecx [esi+10h] +
mov dword ptr [esi] offset off_4D14EC +
push edi  +
push ecx  +
mov [esi+8] ebx +
call loc_48C9C0  +
mov eax [ebp+8] +
add esp 0Ch +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+8] +
xor esi esi +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push ebx  +
call sub_47C030  +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov [ebp-4] esi +
mov eax [esi] +
inc eax  +
cmp edi eax +
jnb loc_486B2E  +
push dword ptr [esi+4]  +
push 10h  +
call sub_47AC00  +
add esp 8 +
mov [ebp+8] eax +
test eax eax +
jz loc_486B21  +
mov [eax+8] edi +
mov dword ptr [eax] offset off_4D14EC +
pop edi  +
mov dword ptr [esi+4] 0 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
xor eax eax +
pop edi  +
mov [esi+4] eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push eax  +
push edi  +
call loc_47C080  +
push ebx  +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx ecx +
cmp ebx eax +
jnz loc_486C94  +
mov al 1 +
pop ebx  +
pop ebp  +
retn 4  +
push esi  +
push 0  +
push offset off_4F0638  +
push offset off_4F1B20  +
push 0  +
push eax  +
call sub_48DB4F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_486D3A  +
mov edx [ebx] +
mov ecx ebx +
push edi  +
call dword ptr [edx+18h]  +
mov edx [esi] +
mov ecx esi +
mov edi eax +
call dword ptr [edx+18h]  +
cmp edi eax +
jnz loc_486D31  +
mov edx [esi] +
mov ecx esi +
call dword ptr [edx+14h]  +
mov edx [ebx] +
mov ecx ebx +
mov esi eax +
call dword ptr [edx+14h]  +
mov ecx eax +
sub edi 4 +
jb loc_486CF3  +
mov eax [ecx] +
cmp eax [esi] +
jnz loc_486CF8  +
add ecx 4 +
add esi 4 +
sub edi 4 +
jnb loc_486CE2  +
cmp edi 0FFFFFFFCh +
jz loc_486D25  +
mov al [ecx] +
cmp al [esi] +
jnz loc_486D31  +
cmp edi 0FFFFFFFDh +
jz loc_486D25  +
mov al [ecx+1] +
cmp al [esi+1] +
jnz loc_486D31  +
cmp edi 0FFFFFFFEh +
jz loc_486D25  +
mov al [ecx+2] +
cmp al [esi+2] +
jnz loc_486D31  +
cmp edi 0FFFFFFFFh +
jz loc_486D25  +
mov al [ecx+3] +
cmp al [esi+3] +
jnz loc_486D31  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 4  +
pop esi  +
xor al al +
pop ebx  +
pop ebp  +
retn 4  +
***
push edi  +
mov edi ecx +
xor esi esi +
mov eax [edi] +
call dword ptr [eax+14h]  +
mov ebx eax +
mov ecx edi +
mov eax [edi] +
call dword ptr [eax+18h]  +
mov edx 10h +
cmp eax edx +
cmovb edx eax +
test edx edx +
jz loc_486D96  +
movzx ecx byte ptr [ebx] +
shl esi 4 +
add ecx esi +
mov esi ecx +
and esi 0F0000000h +
jz loc_486D8C  +
mov eax esi +
shr eax 18h +
xor ecx eax +
not esi  +
inc ebx  +
and esi ecx +
sub edx 1 +
jnz loc_486D73  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_479CB0  +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+10h] eax +
mov eax esi +
mov dword ptr [esi] offset off_4CFE50 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_479CB0  +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+10h] eax +
mov eax esi +
mov dword ptr [esi] offset off_4CFE3C +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 40h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_40] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_3C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_38] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_34] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_30] eax +
lea eax [ebp+hObject] +
push eax  +
push 20h  +
mov [ebp+hExistingToken] 0 +
mov [ebp+phNewToken] 0 +
mov [ebp+dwProcessId] 0 +
mov [ebp+hObject] 0 +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_486E77  +
call ds:GetLastError  +
xor al al +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+NewState.Privileges] +
mov [ebp+NewState.PrivilegeCount] 1 +
push eax  +
push offset Name  +
push 0  +
call ds:LookupPrivilegeValueW  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+NewState] +
mov [ebp+NewState.Privileges.Attributes] 2 +
push eax  +
push 0  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
mov edi ds:GetLastError +
mov esi eax +
call edi  +
push [ebp+hObject]  +
mov ebx ds:CloseHandle +
call ebx  +
test esi esi +
jz loc_486F12  +
call ds:GetShellWindow  +
mov [ebp+hWnd] eax +
test eax eax +
jnz loc_486EEA  +
lea eax [ebp+hWnd] +
push eax  +
push offset EnumFunc  +
call ds:EnumWindows  +
mov eax [ebp+hWnd] +
test eax eax +
jz loc_486F12  +
lea ecx [ebp+dwProcessId] +
push ecx  +
push eax  +
call ds:GetWindowThreadProcessId  +
mov eax [ebp+dwProcessId] +
test eax eax +
jz loc_486F12  +
push eax  +
push 0  +
push 400h  +
call ds:OpenProcess  +
mov esi eax +
test esi esi +
jnz loc_486F25  +
call edi  +
pop edi  +
pop esi  +
xor al al +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
lea eax [ebp+hExistingToken] +
mov [ebp+var_15] 0 +
push eax  +
push 2  +
push esi  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_486F3E  +
call edi  +
jmp loc_486F80  +
lea eax [ebp+phNewToken] +
push eax  +
push 1  +
push 2  +
push 0  +
push 18Bh  +
push [ebp+hExistingToken]  +
call ds:DuplicateTokenEx  +
test eax eax +
jz loc_486F3A  +
push [ebp+var_30]  +
push [ebp+var_34]  +
push [ebp+var_38]  +
push 0  +
push 0  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
push 0  +
push [ebp+phNewToken]  +
call ds:CreateProcessWithTokenW  +
test eax eax +
jz loc_486F3A  +
mov [ebp+var_15] 1 +
push [ebp+hExistingToken]  +
call ebx  +
push [ebp+phNewToken]  +
call ebx  +
push esi  +
call ebx  +
mov ecx [ebp+var_4] +
mov al [ebp+var_15] +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov ecx [ebp+8] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
push dword ptr [ebp+0Ch]  +
mov esi eax +
call loc_47FFD0  +
add esp 4 +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+24h]  +
mov [ebp-28h] eax +
xorps xmm0 xmm0 +
lea eax [ebp-3Ch] +
mov dword ptr [ebp-3Ch] 3Ch +
push eax  +
mov dword ptr [ebp-38h] 0C400h +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] offset aOpen +
mov [ebp-2Ch] esi +
mov dword ptr [ebp-24h] 0 +
mov dword ptr [ebp-20h] 1 +
movups oword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-4] 0 +
movq qword ptr [ebp-0Ch] xmm0 +
call ds:ShellExecuteExW  +
pop esi  +
test eax eax +
jz loc_487029  +
mov esp ebp +
pop ebp  +
retn   +
***
call ds:GetLastError  +
push eax  +
push offset aShellexecuteex  +
call loc_480FC0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4BB928  +
mov eax large fs:0 +
push eax  +
sub esp 70h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
push 0  +
call loc_487200  +
add esp 4 +
test eax eax +
jnz loc_48708D  +
push edi  +
push esi  +
call loc_486FB0  +
add esp 8 +
jmp loc_487193  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+24h] +
call eax  +
push edi  +
mov esi eax +
call loc_47FFD0  +
add esp 4 +
mov ecx eax +
mov edx [eax] +
mov edx [edx+24h] +
call edx  +
mov edi eax +
mov dword ptr [ebp-14h] 7 +
xor eax eax +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov [ebp-4] eax +
cmp [esi] ax +
jnz loc_4870CC  +
xor ecx ecx +
jmp loc_4870E0  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4870D1  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-28h] +
call loc_40C9D0  +
push 1  +
push offset asc_4D16C4  +
lea ecx [ebp-28h] +
call loc_40C9D0  +
cmp word ptr [edi] 0 +
jnz loc_487103  +
xor ecx ecx +
jmp loc_48711F  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_487110  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [ebp-28h] +
call loc_40C9D0  +
push 44h  +
lea eax [ebp-7Ch] +
push 0  +
push eax  +
call sub_48CF40  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-38h] +
push ecx  +
lea ecx [ebp-7Ch] +
mov dword ptr [ebp-7Ch] 44h +
push ecx  +
lea eax [ebp-28h] +
xorps xmm0 xmm0 +
cmovnb eax [ebp-28h] +
push 0  +
push eax  +
push 0  +
movups oword ptr [ebp-38h] xmm0 +
call sub_486E00  +
add esp 20h +
test al al +
jnz loc_48716E  +
call ds:GetLastError  +
push dword ptr [ebp-38h]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-34h]  +
call esi  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_487193  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call loc_40C2A0  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+hWnd] +
lea eax [ebp+dwProcessId] +
push eax  +
push esi  +
mov [ebp+dwProcessId] 0 +
call ds:GetWindowThreadProcessId  +
push [ebp+dwProcessId]  +
call loc_487200  +
add esp 4 +
test eax eax +
jnz loc_4871E7  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
mov eax 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+8] +
push ebx  +
xor ebx ebx +
mov dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-14h] 0 +
mov [ebp-1Ch] ebx +
mov [ebp-0Ch] ebx +
mov word ptr [ebp-8] 500h +
push esi  +
push edi  +
test eax eax +
jnz loc_487243  +
call ds:GetCurrentProcess  +
mov esi eax +
mov [ebp-18h] esi +
jmp loc_487256  +
push eax  +
push 0  +
push 400h  +
call ds:OpenProcess  +
mov esi eax +
mov [ebp-18h] eax +
mov edi ds:GetLastError +
test esi esi +
jnz loc_48727D  +
call edi  +
cmp eax 5 +
jnz loc_48727D  +
pop edi  +
pop esi  +
mov eax 1 +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp-14h] +
mov [ebp-20h] ebx +
push eax  +
push 8  +
push esi  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_487339  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-10h]  +
push 0  +
push 2  +
push dword ptr [ebp-14h]  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_4872B8  +
call edi  +
cmp eax 7Ah +
jnz loc_487339  +
push dword ptr [ebp-10h]  +
push 40h  +
call ds:GlobalAlloc  +
mov ebx eax +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-10h]  +
push ebx  +
push 2  +
push dword ptr [ebp-14h]  +
call ds:GetTokenInformation  +
test eax eax +
jz loc_487339  +
lea eax [ebp-1Ch] +
push eax  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp-0Ch] +
push eax  +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_487339  +
xor edi edi +
cmp [ebx] edi +
jbe loc_487339  +
lea esi [ebx+8] +
push dword ptr [esi-4]  +
push dword ptr [ebp-1Ch]  +
call ds:EqualSid  +
test eax eax +
jz loc_487325  +
test byte ptr [esi] 4 +
jnz loc_48732F  +
inc edi  +
add esi 8 +
cmp edi [ebx] +
jb loc_487310  +
jmp loc_487336  +
mov dword ptr [ebp-20h] 1 +
mov esi [ebp-18h] +
mov eax [ebp-1Ch] +
test eax eax +
jz loc_487347  +
push eax  +
call ds:FreeSid  +
test ebx ebx +
jz loc_487352  +
push ebx  +
call ds:GlobalFree  +
mov eax [ebp-14h] +
mov edi ds:CloseHandle +
test eax eax +
jz loc_487362  +
push eax  +
call edi  +
test esi esi +
jz loc_487369  +
push esi  +
call edi  +
mov ecx [ebp-4] +
mov eax [ebp-20h] +
xor ecx ebp +
pop edi  +
pop esi  +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB668  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset unk_4F54CC  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
cmp dword_4F54D4 0 +
mov [ebp+var_4] 0 +
jz loc_4873DE  +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
cdq   +
push edx  +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
call dword_4F54D4  +
mov esi eax +
jmp loc_4873E0  +
xor esi esi +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB668  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset unk_4F54CC  +
lea ecx [ebp+var_10] +
call sub_47AC20  +
cmp dword_4F54D8 0 +
mov [ebp+var_4] 0 +
jz loc_48745E  +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
cdq   +
push edx  +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
call dword_4F54D8  +
mov esi eax +
jmp loc_487460  +
xor esi esi +
lea ecx [ebp+var_10] +
call sub_47AC40  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
push [ebp+SystemTimeAsFileTime.dwHighDateTime]  +
push [ebp+SystemTimeAsFileTime.dwLowDateTime]  +
call sub_4800F0  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB586  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea eax [esi+1Ch] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4D1740 +
cmp [esi+0Ch] eax +
jz loc_4874F9  +
call sub_4889E0  +
push dword ptr [esi+0Ch]  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+14h]  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_487505  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_48753E  +
test al 4 +
jnz loc_487533  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
push 1Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+14h] 0FFFFFFFFh +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov ecx [ecx+18h] +
mov eax [ecx] +
jmp dword ptr [eax+1Ch]  +
***
mov ecx [ecx+18h] +
mov eax [ecx] +
jmp dword ptr [eax+24h]  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+10h] 0 +
jl loc_487624  +
mov ebx [ebp+0Ch] +
xor eax eax +
mov [ebp-4] eax +
test ebx ebx +
jz loc_48761C  +
push esi  +
nop   +
mov esi [edi+14h] +
sub esi [edi+10h] +
test esi esi +
jg loc_4875ED  +
mov edx [edi+8] +
mov ecx [edi+18h] +
cmp edx ebx +
jg loc_4875D1  +
mov eax [ecx] +
push ebx  +
push dword ptr [ebp+8]  +
call dword ptr [eax+10h]  +
mov esi eax +
jmp loc_487608  +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+10h] 0 +
mov eax [ecx] +
push edx  +
push dword ptr [edi+0Ch]  +
call dword ptr [eax+10h]  +
mov esi eax +
mov [edi+14h] esi +
mov eax [edi+0Ch] +
cmp ebx esi +
cmovl esi ebx +
add eax [edi+10h] +
push esi  +
push eax  +
push dword ptr [ebp+8]  +
call loc_48C9C0  +
add esp 0Ch +
add [edi+10h] esi +
mov eax [ebp-4] +
test esi esi +
jz loc_48761B  +
add [ebp+8] esi +
add eax esi +
mov [ebp-4] eax +
sub ebx esi +
jnz loc_4875B0  +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push offset aChannelClosed  +
call loc_47A1B0  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
cmp edi 2000h +
jnb loc_4876A3  +
lea eax [edi+1Ch] +
push eax  +
call sub_488C2D  +
push eax  +
push 1Ch  +
mov [ebp+0Ch] eax +
call sub_47AC00  +
mov esi eax +
add esp 0Ch +
mov [ebp+0Ch] esi +
test esi esi +
jz loc_48769B  +
mov [esi+8] edi +
lea eax [esi+1Ch] +
mov edi [ebp+8] +
mov dword ptr [esi] offset off_4D1740 +
mov [esi+0Ch] eax +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
test edi edi +
jz loc_48768B  +
mov ecx edi +
call sub_4795C0  +
mov ecx esi +
mov [esi+18h] edi +
call sub_474AB0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push ebx  +
call sub_4889E0  +
push edi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
push 1Ch  +
mov ebx eax +
call sub_47ABB0  +
mov esi eax +
add esp 4 +
mov [ebp+0Ch] esi +
test esi esi +
jz loc_487706  +
mov dword ptr [esi] offset off_4D1740 +
mov [esi+8] edi +
test ebx ebx +
jnz loc_4876D6  +
lea ebx [esi+1Ch] +
mov edi [ebp+8] +
mov [esi+0Ch] ebx +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
test edi edi +
jz loc_4876F5  +
mov ecx edi +
call sub_4795C0  +
mov ecx esi +
mov [esi+18h] edi +
call sub_474AB0  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
pop ebx  +
xor esi esi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
test ecx ecx +
jz sub_47C0A0  +
mov eax [ebp+0Ch] +
test eax eax +
js loc_487731  +
mov [ebp+0Ch] eax +
mov [ebp+8] ecx +
pop ebp  +
jmp loc_487630  +
***
push eax  +
call loc_47C0B0  +
push 0FFFFFFFFh  +
push offset loc_4BB963  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov dword ptr [edi] offset off_4D1794 +
mov [edi+8] esi +
call sub_4889E0  +
push esi  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov esi [ebp+arg_0] +
mov [edi+0Ch] eax +
mov dword ptr [edi+10h] 0 +
test esi esi +
jz loc_4877B2  +
mov ecx esi +
call sub_4795C0  +
mov [edi+14h] esi +
mov byte ptr [ebp+var_4] 1 +
call sub_4889E0  +
push eax  +
push dword ptr [edi+8]  +
push dword ptr [edi+0Ch]  +
call sub_47ECA0  +
add esp 0Ch +
test eax eax +
jz loc_4877DA  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+10h]  +
jmp loc_4877DC  +
xor eax eax +
mov ecx edi +
mov [edi+18h] eax +
call sub_474AB0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_487812  +
call sub_479590  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_48781E  +
call sub_479590  +
mov eax [ebp+arg_0] +
mov dword ptr [esi] offset off_4CE8B4 +
test al 1 +
jz loc_48784A  +
test al 4 +
jnz loc_48783F  +
push esi  +
call sub_497EC6  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 1Ch  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+0Ch] 0 +
jz loc_48787D  +
mov eax [esi] +
call dword ptr [eax+18h]  +
mov ecx [esi+14h] +
mov eax [ecx] +
call dword ptr [eax+1Ch]  +
mov dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
mov edx [esi+0Ch] +
test edx edx +
jz loc_4878AC  +
cmp dword ptr [esi+10h] 0 +
jbe loc_4878A3  +
mov ecx [esi+14h] +
push dword ptr [esi+10h]  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov dword ptr [esi+10h] 0 +
mov ecx [esi+14h] +
pop esi  +
mov eax [ecx] +
jmp dword ptr [eax+18h]  +
***
push offset aChannelClosed  +
call loc_47A1B0  +
mov ecx [ecx+14h] +
mov eax [ecx] +
jmp dword ptr [eax+24h]  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edx [esi+0Ch] +
test edx edx +
jz loc_487960  +
mov eax [esi+8] +
mov edi [ebp+0Ch] +
mov ebx [esi+10h] +
cmp eax edi +
ja loc_487926  +
test ebx ebx +
jz loc_487911  +
mov ecx [esi+14h] +
push ebx  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov dword ptr [esi+10h] 0 +
mov ecx [esi+14h] +
push edi  +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub eax ebx +
cmp edi eax +
jbe loc_487941  +
test ebx ebx +
jz loc_487941  +
mov ecx [esi+14h] +
push ebx  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov dword ptr [esi+10h] 0 +
mov ecx [esi+10h] +
add ecx [esi+0Ch] +
push edi  +
push dword ptr [ebp+8]  +
push ecx  +
call loc_48C9C0  +
add esp 0Ch +
mov eax edi +
add [esi+10h] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aChannelClosed  +
call loc_47A1B0  +
push 0FFFFFFFFh  +
push offset loc_4BB98F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_48799F  +
call sub_47C0A0  +
mov esi [ebp+arg_4] +
test esi esi +
jns loc_4879AC  +
push esi  +
call loc_47C0B0  +
push 1Ch  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4879DF  +
push esi  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_487750  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB9CE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov edi [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_4D17D8 +
test edi edi +
jz loc_487A45  +
mov ecx edi +
call sub_4795C0  +
mov [esi+8] edi +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_487A56  +
mov ecx edi +
call sub_4795C0  +
mov [esi+0Ch] edi +
mov byte ptr [ebp+var_4] 2 +
call sub_481770  +
mov edi eax +
test edi edi +
jz loc_487A71  +
mov ecx edi +
call sub_4795C0  +
jmp loc_487A73  +
xor edi edi +
mov ecx esi +
mov [esi+10h] edi +
call sub_474AB0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+208h] +
lea edi [esi+8] +
cmp eax edi +
jz loc_487ABA  +
push eax  +
call sub_47BF70  +
add esp 4 +
mov [esi+208h] edi +
pop edi  +
mov dword ptr [esi] 200h +
mov dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
push dword ptr [ecx+4]  +
call sub_497EC6  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB9FF  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_487B0E  +
call sub_47C0A0  +
cmp [ebp+arg_4] 0 +
jnz loc_487B19  +
call sub_47C0A0  +
push 14h  +
call sub_47ABB0  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_487B4D  +
push [ebp+arg_4]  +
mov ecx eax +
push [ebp+arg_0]  +
call sub_487A00  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_488120  +
mov ecx eax +
jmp sub_474AB0  +
***
push ecx  +
mov ecx [ecx+8] +
lea eax [ebp+var_4] +
push 4  +
push eax  +
call loc_482170  +
mov eax [ebp+var_4] +
bswap eax  +
test eax eax +
setnz al  +
movzx eax al +
push eax  +
call sub_47B8F0  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BBA28  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov ecx [ebx+8] +
lea eax [ebp+var_10] +
push 4  +
push eax  +
call loc_482170  +
mov edi [ebp+var_10] +
bswap edi  +
lea esi [edi+3] +
and esi 0FFFFFFFCh +
mov [ebp+var_18] esi +
lea eax [esi+10h] +
push eax  +
call sub_47BF90  +
add esp 4 +
mov [ebp+var_14] eax +
mov ecx [ebx+8] +
add eax 10h +
push esi  +
push eax  +
mov [ebp+var_4] 0 +
call loc_482170  +
push edi  +
lea ecx [ebp+var_18] +
call loc_486AE0  +
push [ebp+var_14]  +
mov esi eax +
call sub_497EC6  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov ecx [ecx+8] +
lea eax [ebp+var_C] +
push esi  +
push 8  +
push eax  +
call loc_482170  +
mov edx [ebp+var_C] +
mov ecx [ebp+var_8] +
bswap edx  +
bswap ecx  +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
call sub_4896E0  +
divsd xmm0 ds:qword_4D0820 +
sub esp 8 +
lea eax [ebp+var_4] +
movsd [esp+20h+var_20] xmm0 +
push eax  +
call sub_482F80  +
add esp 0Ch +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_487C9A  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
push edi  +
mov esi ecx +
lea eax [ebp+var_4] +
push 4  +
push eax  +
mov ecx [esi+8] +
call loc_482170  +
mov edi [ebp+var_4] +
lea eax [ebp+var_4] +
mov ecx [esi+8] +
push 4  +
push eax  +
bswap edi  +
call loc_482170  +
mov esi [ebp+var_4] +
bswap esi  +
test edi edi +
jnz loc_487CF3  +
test esi esi +
jnz loc_487CF3  +
call sub_47C620  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax edi +
and eax 0FFFFFh +
or eax 100000h +
push 0FFFFFFEBh  +
sub esp 8 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_4CAA90[eax*8] +
movsd [esp+2Ch+var_2C] xmm0 +
call sub_4A1D80  +
movd xmm0 esi +
add esp 0Ch +
cvtdq2pd xmm0 xmm0 +
shr esi 1Fh +
push 0FFFFFFCBh  +
sub esp 8 +
fstp  qword ptr [ebp-8] +
addsd xmm0 ds:qword_4CAA90[esi*8] +
movsd [esp+2Ch+var_2C] xmm0 +
call sub_4A1D80  +
fadd  qword ptr [ebp-8] +
mov eax edi +
add esp 0Ch +
shr eax 14h +
and eax 7FFh +
sub eax 3FEh +
push eax  +
sub esp 8 +
fstp  qword ptr [ebp-8] +
movsd xmm0 qword ptr [ebp-8] +
movsd [esp+2Ch+var_2C] xmm0 +
call sub_4A1D80  +
add esp 0Ch +
fstp  qword ptr [ebp-8] +
movsd xmm0 qword ptr [ebp-8] +
test edi edi +
jns loc_487D8C  +
xorps xmm0 oword ptr ds:oword_4BF700 +
sub esp 8 +
lea eax [ebp+var_4] +
movsd [esp+28h+var_2C+4] xmm0 +
push eax  +
call sub_47C160  +
add esp 0Ch +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_487DB4  +
call sub_479590  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push 0FFFFFFFFh  +
push offset loc_4BBA60  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov ecx [ebx+8] +
lea eax [ebp+var_14] +
push 4  +
push eax  +
call loc_482170  +
mov edi [ebp+var_14] +
lea eax [ebp+var_10] +
bswap edi  +
push edi  +
push eax  +
call loc_47BAD0  +
add esp 8 +
mov [ebp+var_4] 0 +
test edi edi +
jle loc_487E8A  +
mov ecx ebx +
call loc_488120  +
mov esi eax +
mov [ebp+var_14] esi +
mov ecx [ebp+var_10] +
lea edx [ebp+var_18] +
push edx  +
push 1  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ecx] +
mov [ebp+var_18] esi +
call dword ptr [eax+30h]  +
mov byte ptr [ebp+var_4] 0 +
test esi esi +
jz loc_487E85  +
mov ecx esi +
call sub_479590  +
sub edi 1 +
jnz loc_487E55  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov ecx [ecx+8] +
lea eax [ebp+var_C] +
push esi  +
push 8  +
push eax  +
call loc_482170  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_8] +
bswap eax  +
push eax  +
bswap ecx  +
mov [ebp+var_8] eax +
lea eax [ebp+var_4] +
push ecx  +
push eax  +
mov [ebp+var_C] ecx +
call sub_47C250  +
add esp 0Ch +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_487EE7  +
call sub_479590  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BBA98  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_18] edi +
mov ecx [edi+8] +
lea eax [ebp+var_14] +
push 4  +
push eax  +
call loc_482170  +
mov ebx [ebp+var_14] +
lea eax [ebp+var_10] +
bswap ebx  +
push ebx  +
push eax  +
call sub_47C6C0  +
add esp 8 +
mov [ebp+var_4] 0 +
test ebx ebx +
jle loc_487F94  +
mov ecx edi +
call loc_488120  +
mov esi eax +
mov [ebp+var_14] esi +
mov ecx edi +
mov byte ptr [ebp+var_4] 1 +
call loc_488120  +
mov edi eax +
mov [ebp+var_1C] edi +
mov ecx [ebp+var_10] +
push edi  +
push esi  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ecx] +
call dword ptr [eax+24h]  +
test edi edi +
jz loc_487F7D  +
mov ecx edi +
call sub_479590  +
mov byte ptr [ebp+var_4] 0 +
test esi esi +
jz loc_487F8C  +
mov ecx esi +
call sub_479590  +
mov edi [ebp+var_18] +
sub ebx 1 +
jnz loc_487F48  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BBACB  +
mov eax large fs:0 +
push eax  +
sub esp 21Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax ecx +
mov [ebp+var_224] eax +
push 4  +
lea ecx [ebp+var_220] +
push ecx  +
mov ecx [eax+8] +
call loc_482170  +
mov ebx [ebp+var_220] +
lea esi [ebp+var_214] +
bswap ebx  +
mov [ebp+var_21C] 200h +
mov [ebp+var_218] 0 +
mov [ebp+var_14] esi +
lea edi [ebx+3] +
and edi 0FFFFFFFCh +
cmp edi 200h +
jbe loc_48805E  +
lea esi [edi+1FFh] +
and esi 0FFFFFE00h +
push esi  +
call sub_47BF90  +
push [ebp+var_21C]  +
lea ecx [ebp+var_214] +
mov [ebp+var_14] eax +
push ecx  +
push eax  +
call loc_48C9C0  +
mov [ebp+var_21C] esi +
add esp 10h +
mov esi [ebp+var_14] +
mov [ebp+var_218] edi +
push edi  +
mov edi [ebp+var_224] +
push esi  +
mov [ebp+var_4] 0 +
mov ecx [edi+8] +
call loc_482170  +
push dword ptr [edi+10h]  +
lea eax [ebp+var_228] +
push ebx  +
push esi  +
push eax  +
call sub_4791A0  +
add esp 10h +
mov esi [eax] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_228] +
test ecx ecx +
jz loc_4880A6  +
call sub_479590  +
mov ecx [ebp+var_14] +
lea eax [ebp+var_214] +
cmp ecx eax +
jz loc_4880BC  +
push ecx  +
call sub_47BF70  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ecx+0Ch] +
mov eax [ecx] +
jmp dword ptr [eax+18h]  +
***
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_488112  +
sub eax 1 +
jnz loc_48810C  +
mov ecx [ecx+0Ch] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
pop ebp  +
retn 4  +
xor eax eax +
pop ebp  +
retn 4  +
mov ecx [ecx+8] +
mov eax [ecx] +
call dword ptr [eax+24h]  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
lea eax [ebp-4] +
push 4  +
push eax  +
mov ecx [esi+8] +
call loc_482170  +
mov eax [ebp-4] +
bswap eax  +
cmp eax 9 +
ja loc_4881BC  +
jmp ds:off_4881CC[eax*4]  +
call sub_484380  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487DC0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487B70  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487CB0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487FB0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487BA0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487E00  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487EF0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487EA0  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx esi +
call sub_487C40  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push eax  +
push offset aVcfoundationIo  +
push offset aSUnknownTypeId  +
call loc_479FD0  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_488369  +
push 0  +
push offset off_4F1AF4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_48823D  +
push eax  +
mov ecx edi +
call sub_488750  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F0638  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_488268  +
push eax  +
mov ecx edi +
call sub_488430  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F2104  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_488293  +
push eax  +
mov ecx edi +
call sub_4886B0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F0088  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_4882BE  +
push eax  +
mov ecx edi +
call sub_4883F0  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F0A44  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_4882E9  +
push eax  +
mov ecx edi +
call sub_488490  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4EFD10  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_488314  +
push eax  +
mov ecx edi +
call loc_488380  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F2170  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_48833F  +
push eax  +
mov ecx edi +
call sub_488610  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_4F0BB4  +
push offset off_4F1B20  +
push 0  +
push esi  +
call sub_48DB4F  +
add esp 14h +
test eax eax +
jz loc_48836E  +
mov ecx edi +
call sub_488690  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_47C0A0  +
push esi  +
push offset aVcserializeUnk  +
call loc_47A130  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov ecx ebx +
mov eax [ebx] +
mov [ebp-4] edi +
call dword ptr [eax+14h]  +
mov ecx [edi+0Ch] +
mov [ebp+8] eax +
bswap eax  +
mov [ebp-8] eax +
lea eax [ebp-0Ch] +
mov dword ptr [ebp-0Ch] 6000000h +
mov edx [ecx] +
push 8  +
push eax  +
call dword ptr [edx+14h]  +
xor esi esi +
cmp [ebp+8] esi +
jbe loc_4883DA  +
mov eax [ebx] +
mov ecx ebx +
mov edi [edi] +
push esi  +
call dword ptr [eax+2Ch]  +
mov ecx [ebp-4] +
push eax  +
call dword ptr [edi+10h]  +
mov edi [ebp-4] +
inc esi  +
cmp esi [ebp+8] +
jb loc_4883C0  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] 2000000h +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+10h] +
call eax  +
mov ecx [esi+0Ch] +
xor edx edx +
test al al +
push 8  +
setnz dl  +
bswap edx  +
mov [ebp+var_4] edx +
lea edx [ebp+var_8] +
mov eax [ecx] +
push edx  +
call dword ptr [eax+14h]  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov eax [ecx] +
call dword ptr [eax+18h]  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov edx ebx +
mov [ebp+var_8] 5000000h +
bswap edx  +
mov [ebp+var_4] edx +
lea eax [ebp+var_8] +
mov edx [ecx] +
push 8  +
push eax  +
call dword ptr [edx+14h]  +
mov ecx [ebp+arg_0] +
lea eax [ebx+3] +
mov esi [esi+0Ch] +
and eax 0FFFFFFFCh +
push eax  +
mov eax [ecx] +
mov edi [esi] +
call dword ptr [eax+14h]  +
push eax  +
mov ecx esi +
call dword ptr [edi+14h]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+14h] +
call eax  +
mov ecx edx +
mov [ebp+var_10] 9000000h +
sar ecx 1Fh +
mov ecx [esi+0Ch] +
bswap edx  +
bswap eax  +
mov [ebp+var_C] edx +
lea edx [ebp+var_10] +
mov [ebp+var_8] eax +
mov eax [ecx] +
push 0Ch  +
push edx  +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 14h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
mov eax [eax+18h] +
call eax  +
fstp  [ebp+var_C] +
movsd xmm0 [ebp+var_C] +
xorps xmm1 xmm1 +
ucomisd xmm0 xmm1 +
lahf   +
test ah 44h +
jp loc_48852C  +
xor eax eax +
xor esi esi +
jmp loc_4885DE  +
xor esi esi +
comisd xmm1 xmm0 +
jbe loc_488540  +
xorps xmm0 oword ptr ds:oword_4BF700 +
mov esi 80000000h +
lea eax [ebp+var_14] +
push eax  +
sub esp 8 +
movsd [esp+28h+var_28] xmm0 +
call sub_49A86C  +
mov eax [ebp+var_14] +
add esp 0Ch +
fstp  [ebp+var_C] +
movsd xmm0 [ebp+var_C] +
add eax 3FEh +
mulsd xmm0 ds:qword_4D1868 +
mov [ebp+var_14] eax +
and eax 7FFh +
push 14h  +
sub esp 8 +
shl eax 14h +
or esi eax +
subsd xmm0 ds:qword_4BF6E0 +
movsd [esp+28h+var_28] xmm0 +
call sub_4A1D80  +
add esp 0Ch +
fstp  [ebp+var_C] +
movsd xmm0 [ebp+var_C] +
call sub_489571  +
movsd xmm1 [ebp+var_C] +
or esi eax +
push 20h  +
sub esp 8 +
movd xmm0 eax +
cvtdq2pd xmm0 xmm0 +
shr eax 1Fh +
addsd xmm0 ds:qword_4CAA90[eax*8] +
subsd xmm1 xmm0 +
movsd [esp+28h+var_28] xmm1 +
call sub_4A1D80  +
add esp 0Ch +
fstp  [ebp+var_C] +
movsd xmm0 [ebp+var_C] +
call sub_489571  +
mov ecx [edi+0Ch] +
lea edx [ebp+var_10] +
bswap eax  +
bswap esi  +
mov [ebp+var_10] 3000000h +
mov dword ptr [ebp+var_C] esi +
mov dword ptr [ebp+var_C+4] eax +
mov eax [ecx] +
push 0Ch  +
push edx  +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov [ebp+var_8] 7000000h +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+14h]  +
mov ecx [edi+0Ch] +
lea edx [ebp+var_8] +
bswap eax  +
mov [ebp+var_4] eax +
push 8  +
mov eax [ecx] +
push edx  +
call dword ptr [eax+14h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
mov esi eax +
mov ecx esi +
mov eax [esi] +
mov eax [eax+10h] +
call eax  +
test al al +
jz loc_488680  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx esi +
call dword ptr [eax+14h]  +
mov eax [edi] +
mov ecx edi +
push [ebp+var_8]  +
call dword ptr [eax+10h]  +
mov eax [edi] +
mov ecx edi +
push [ebp+var_4]  +
call dword ptr [eax+10h]  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+10h] +
call eax  +
test al al +
jnz loc_488654  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ecx+0Ch] +
lea edx [ebp+var_4] +
mov [ebp+var_4] 0 +
push 4  +
push edx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx esi +
mov eax [esi] +
mov eax [eax+1Ch] +
call eax  +
test al al +
jz loc_4886EE  +
push esi  +
mov ecx edi +
call sub_4884F0  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [esi] +
mov ecx esi +
mov eax [eax+20h] +
call eax  +
test al al +
mov ecx esi +
mov eax [esi] +
jz loc_48871C  +
mov eax [eax+14h] +
call eax  +
mov ecx edx +
mov [ebp+var_10] 8000000h +
bswap edx  +
mov [ebp+var_C] edx +
lea edx [ebp+var_10] +
sar ecx 1Fh +
push 0Ch  +
jmp loc_48872B  +
mov [ebp+var_C] 1000000h +
call dword ptr [eax+10h]  +
push 8  +
lea edx [ebp+var_C] +
mov ecx [edi+0Ch] +
bswap eax  +
mov [ebp+var_8] eax +
push edx  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4BBB0B  +
mov eax large fs:0 +
push eax  +
sub esp 220h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_22C] edi +
mov ebx [ebp+arg_0] +
mov ecx ebx +
mov eax [ebx] +
call dword ptr [eax+18h]  +
mov esi eax +
mov [ebp+var_21C] 200h +
lea eax [ebp+var_214] +
mov [ebp+var_224] esi +
mov [ebp+var_14] eax +
mov [ebp+var_218] 200h +
mov eax [ebx] +
lea ecx [ebp+var_220] +
push ecx  +
push 200h  +
lea ecx [ebp+var_214] +
mov [ebp+var_4] 0 +
push ecx  +
push 3Fh  +
push dword ptr [edi+10h]  +
mov ecx ebx +
push esi  +
push 0  +
call dword ptr [eax+2Ch]  +
cmp eax esi +
jnb loc_48888C  +
mov eax [ebx] +
lea ecx [ebp+var_220] +
push ecx  +
push 0  +
push 0  +
push 3Fh  +
push dword ptr [edi+10h]  +
mov ecx ebx +
push esi  +
push 0  +
call dword ptr [eax+2Ch]  +
mov edi [ebp+var_220] +
add edi 3 +
and edi 0FFFFFFFCh +
cmp [ebp+var_21C] edi +
jnb loc_488866  +
mov eax [ebp+var_14] +
lea esi [edi+1FFh] +
and esi 0FFFFFE00h +
lea ecx [ebp+var_214] +
push esi  +
cmp eax ecx +
jnz loc_48884E  +
call sub_47BF90  +
push [ebp+var_21C]  +
lea ecx [ebp+var_214] +
mov [ebp+var_14] eax +
push ecx  +
push eax  +
call loc_48C9C0  +
add esp 10h +
jmp loc_48885A  +
push eax  +
call sub_47BFB0  +
add esp 8 +
mov [ebp+var_14] eax +
mov [ebp+var_21C] esi +
mov esi [ebp+var_224] +
mov eax [ebx] +
lea ecx [ebp+var_220] +
push ecx  +
push edi  +
push [ebp+var_14]  +
mov [ebp+var_218] edi +
mov ecx ebx +
mov edi [ebp+var_22C] +
push 3Fh  +
push dword ptr [edi+10h]  +
push esi  +
push 0  +
call dword ptr [eax+2Ch]  +
mov eax [ebp+var_220] +
lea edx [ebp+var_228] +
mov ecx [edi+0Ch] +
mov [ebp+var_228] 4000000h +
push 8  +
lea esi [eax+3] +
bswap eax  +
mov [ebp+var_224] eax +
and esi 0FFFFFFFCh +
mov eax [ecx] +
push edx  +
call dword ptr [eax+14h]  +
mov ecx [edi+0Ch] +
push esi  +
push [ebp+var_14]  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov eax [ebp+var_14] +
lea ecx [ebp+var_214] +
cmp eax ecx +
jz loc_4888DD  +
push eax  +
call sub_47BF70  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4F54E8 +
cmp eax [ecx+4] +
jle loc_488922  +
jmp loc_48892B  +
mov eax dword_4F54E4 +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_4F54E8  +
call sub_489058  +
add esp 4 +
cmp dword_4F54E8 0FFFFFFFFh +
jnz loc_488922  +
movzx eax ds:byte_4CF59D +
push eax  +
push offset unk_4F54DC  +
push 8  +
call sub_47AC10  +
add esp 0Ch +
mov [ebp+var_4] eax +
test eax eax +
jz loc_488967  +
mov dword ptr [eax] offset off_4D1874 +
jmp loc_48896B  +
xor eax eax +
jmp $+2  +
push offset dword_4F54E8  +
mov dword_4F54E4 eax +
call sub_489019  +
add esp 4 +
jmp loc_488922  +
***
mov eax [ebp+dwSize] +
mov ecx 1 +
push 4  +
test eax eax +
push 3000h  +
cmovnz ecx eax +
push 0  +
push ecx  +
call sub_480810  +
add esp 10h +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4889CA  +
push 8000h  +
push 0  +
push eax  +
call loc_480840  +
add esp 0Ch +
pop ebp  +
retn 4  +
***
call sub_4A2231  +
call sub_489B7E  +
call sub_4126F0  +
push eax  +
call sub_4A3E2B  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_49AFE7  +
test al al +
jnz loc_488BF7  +
push dword ptr [ebp-20h]  +
call sub_49B0C2  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_488C02  +
call sub_49B0A4  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_48996B  +
cmp ecx dword_4EEF3C +
jmp loc_488C51  +
push [ebp+arg_0]  +
test [ebp+arg_0] 1 +
pop ebp  +
mov eax dword_4EEF3C +
mov eax [ebp+arg_0] +
call sub_489D0E  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_489C30  +
call sub_489D0E  +
cmp byte_4F550C 0 +
mov eax dword_4EEF3C +
push [ebp+arg_0]  +
push edi  +
call sub_48909E  +
call sub_48909E  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_4892A4  +
mov ecx [ebp+arg_0] +
int 29h  +
mov dword_4F5638 eax +
mov dword_4F5634 ecx +
mov dword_4F5630 edx +
mov dword_4F562C ebx +
mov dword_4F5628 esi +
mov dword_4F5624 edi +
mov word_4F5650 ss +
mov word_4F5644 cs +
mov word_4F5620 ds +
mov word_4F561C es +
mov word_4F5618 fs +
mov word_4F5614 gs +
pushf   +
pop dword_4F5648  +
mov eax [ebp+0] +
mov dword_4F563C eax +
mov eax [ebp+4] +
mov dword_4F5640 eax +
lea eax [ebp+arg_0] +
mov dword_4F564C eax +
mov eax [ebp+var_31C] +
mov eax dword_4F5640 +
mov dword_4F5544 eax +
mov dword_4F5538 0C0000409h +
mov dword_4F553C 1 +
mov dword_4F5548 1 +
push 4  +
pop eax  +
imul eax eax +
mov ecx [ebp+arg_0] +
mov dword_4F554C[eax] ecx +
push offset ExceptionInfo  +
call sub_48915C  +
mov esp ebp +
pop ebp  +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_489384  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_489374  +
***
mov ecx 1 +
movsd xmm5 ds:qword_4D1BD8 +
jmp loc_4893BB  +
mov ecx 2 +
movsd xmm5 ds:qword_4D1BE0 +
jmp loc_4893BB  +
mov ecx 3 +
movsd xmm5 ds:qword_4D1BD8 +
movd eax xmm0 +
and eax 7FFFFFFFh +
cmp eax 7F800000h +
jnb loc_48951B  +
cvtss2sd xmm0 xmm0 +
***
sub esp 20h +
mov ecx 1 +
movsd xmm5 ds:qword_4D1BD8 +
jmp loc_48959C  +
***
mov ecx 5 +
movsd xmm5 ds:qword_4D1BD8 +
movdqa xmm1 xmm0 +
psrldq xmm1 4 +
movd eax xmm1 +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jnb loc_48951B  +
cmp ecx 1 +
jz loc_4893D3  +
movdqa xmm1 xmm0 +
psllq xmm1 1 +
psrlq xmm1 1 +
movsd xmm2 ds:qword_4D1BE8 +
comisd xmm1 xmm2 +
jbe loc_48960D  +
cmp ecx 4 +
jz loc_4895F9  +
mov edx 1 +
call sub_48952D  +
mov edx 10h +
call sub_48952D  +
jmp loc_48960D  +
mov edx 10h +
call sub_48952D  +
mov edx 1 +
call sub_48952D  +
movsd xmm2 ds:qword_4D1BF0 +
comisd xmm1 xmm2 +
jnb loc_489642  +
xorpd xmm2 xmm2 +
comisd xmm1 xmm2 +
jz loc_489459  +
mov edx 2 +
call sub_48952D  +
mov edx 10h +
call sub_48952D  +
jmp loc_489459  +
movdqa xmm3 xmm0 +
cmp ecx 4 +
jnz loc_48965D  +
movsd xmm2 ds:qword_4D1BD8 +
comisd xmm3 xmm2 +
jb loc_48965D  +
subpd xmm3 xmm2 +
movdqa xmm4 xmm3 +
psllq xmm4 23h +
psrlq xmm4 23h +
movd eax xmm4 +
or eax eax +
jz loc_48967D  +
mov edx 10h +
call sub_48952D  +
comisd xmm0 xmm5 +
jnb loc_48951B  +
movsd xmm2 ds:qword_4D1BD0 +
comisd xmm0 xmm2 +
jb loc_48951B  +
jmp loc_489459  +
***
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
addsd xmm0 ds:qword_4D1BA0[ecx*8] +
test edx edx +
jz locret_4896D6  +
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
shr edx 1Fh +
addsd xmm1 ds:qword_4D1BA0[edx*8] +
mulsd xmm1 ds:qword_4D1BA8 +
addsd xmm0 xmm1 +
retn   +
***
xorps xmm1 xmm1 +
cvtsi2sd xmm1 edx +
xorps xmm0 xmm0 +
cvtsi2sd xmm0 ecx +
shr ecx 1Fh +
mulsd xmm1 ds:qword_4D1BA8 +
addsd xmm0 ds:qword_4D1BA0[ecx*8] +
addsd xmm0 xmm1 +
retn   +
***
cmp dword_4F5858 0 +
jz sub_489750  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
***
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  [esp+20h+var_8] +
fistp  [esp+20h+var_10] +
fild  [esp+20h+var_10] +
mov edx [esp+20h+var_8] +
mov eax dword ptr [esp+20h+var_10] +
test eax eax +
jz loc_4897AF  +
fsubp st(1) st +
test edx edx +
jns loc_489797  +
fstp  [esp+20h+var_20] +
mov ecx [esp+20h+var_20] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+20h+var_10+4] +
adc edx 0 +
jmp locret_4897C3  +
fstp  [esp+20h+var_20] +
mov ecx [esp+20h+var_20] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+20h+var_10+4] +
sbb edx 0 +
jmp locret_4897C3  +
mov edx dword ptr [esp+20h+var_10+4] +
test edx 7FFFFFFFh +
jnz loc_489773  +
fstp  [esp+20h+var_8] +
fstp  [esp+20h+var_8] +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
and dword_4F5858 0 +
sub esp 28h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_4EEF50 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_489958  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_4EEF50 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_4F5858 ebx +
lea edi [ebp-28h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-28h] +
mov ecx [ebp-1Ch] +
mov [ebp-8] eax +
xor ecx 49656E69h +
mov eax [ebp-20h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-24h] +
push 1  +
xor eax 756E6547h +
or ecx eax +
pop eax  +
push 0  +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jnz loc_489895  +
mov eax [ebp-28h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_489884  +
cmp eax 20660h +
jz loc_489884  +
cmp eax 20670h +
jz loc_489884  +
cmp eax 30650h +
jz loc_489884  +
cmp eax 30660h +
jz loc_489884  +
cmp eax 30670h +
jnz loc_489895  +
mov edi dword_4F585C +
or edi 1 +
mov dword_4F585C edi +
jmp loc_48989B  +
mov edi dword_4F585C +
cmp dword ptr [ebp-8] 7 +
mov eax [ebp-1Ch] +
mov [ebp-18h] eax +
mov eax [ebp-20h] +
mov [ebp-4] eax +
mov [ebp-14h] eax +
jl loc_4898E2  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-28h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-24h] +
test eax 200h +
mov [ebp-10h] eax +
mov eax [ebp-4] +
jz loc_4898E2  +
or edi 2 +
mov dword_4F585C edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_489958  +
or dword_4EEF50 4 +
mov dword_4F5858 2 +
test eax 8000000h +
jz loc_489958  +
test eax 10000000h +
jz loc_489958  +
xor ecx ecx +
retn   +
***
sub esp 14h +
push 0  +
call sub_41E490  +
xor eax eax +
sub esp 324h +
retn   +
***
mov eax [ebp+arg_0] +
and dword_4F5868 0 +
mov esi offset unk_4E6398 +
mov esi offset unk_4E63A0 +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
xor eax eax +
push esi  +
push ecx  +
push esi  +
push esi  +
push ecx  +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jnz loc_489E7A  +
call sub_4A6F31  +
jmp loc_489E8E  +
cmp eax 8 +
jge loc_489E8E  +
imul eax eax +
add eax offset stru_4F5878 +
push eax  +
call sub_48A881  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_4B74E0  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_489F6C  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push ebx  +
push esi  +
push ecx  +
call sub_4B6CC7  +
call sub_4B6CC7  +
push 0  +
mov eax [ebp+arg_0] +
push ecx  +
cmp byte_4F5965 0 +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 0  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
pop ebp  +
pop ebp  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
sub esp 14h +
sub esp 14h +
push ebx  +
push [ebp+lpCriticalSection]  +
push 0  +
push [ebp+lpCriticalSection]  +
push [ebp+lpCriticalSection]  +
push 0FFFFFFFFh  +
mov eax dword_4EEF68 +
sub esp 0Ch +
mov eax [ebp+arg_0] +
call ds:GetModuleHandleW  +
push esi  +
push ebx  +
cmp [ebp+arg_0] 0 +
push esi  +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
xor eax eax +
test esi esi +
jz loc_48B06E  +
mov ecx [ebp+arg_4] +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
push 41h  +
pop ebx  +
push 5Ah  +
pop edx  +
sub edi ecx +
mov [ebp+var_4] edx +
jmp loc_48B026  +
push 5Ah  +
pop edx  +
movzx eax word ptr [edi+ecx] +
cmp ax bx +
jb loc_48B03C  +
cmp ax dx +
ja loc_48B03C  +
add eax 20h +
movzx edx ax +
jmp loc_48B03E  +
mov edx eax +
movzx eax word ptr [ecx] +
cmp ax bx +
jb loc_48B052  +
cmp ax word ptr [ebp+var_4] +
ja loc_48B052  +
add eax 20h +
movzx eax ax +
add ecx 2 +
sub esi 1 +
jz loc_48B064  +
test dx dx +
jz loc_48B064  +
cmp dx ax +
jz loc_48B023  +
movzx ecx ax +
movzx eax dx +
pop edi  +
sub eax ecx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi off_4EEFC4 +
mov ecx esi +
push 0  +
push [ebp+arg_0]  +
call j_nullsub_1  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFEh  +
push offset unk_4EB700  +
push offset sub_48DD00  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_4EEF3C +
xor [ebp+var_8] eax +
xor eax ebp +
mov [ebp+var_1C] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_48B0E4  +
xor eax eax +
jmp loc_48B210  +
mov ecx ebx +
lea edx [ecx+1] +
lea esp [esp+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_48B0F0  +
sub ecx edx +
lea eax [ecx+1] +
mov [ebp+cchMultiByte] eax +
cmp eax 7FFFFFFFh +
jbe loc_48B110  +
push 80070057h  +
call sub_48B080  +
push 0  +
push 0  +
push eax  +
push ebx  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
mov edi eax +
mov [ebp+var_24] edi +
test edi edi +
jnz loc_48B141  +
call ds:GetLastError  +
test eax eax +
jle loc_48B13B  +
movzx eax ax +
or eax 80070000h +
push eax  +
call sub_48B080  +
mov [ebp+var_4] 0 +
lea eax [edi+edi] +
cmp edi 1000h +
jge loc_48B169  +
call sub_4B6D40  +
mov [ebp+var_18] esp +
mov esi esp +
mov [ebp+var_20] esi +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_48B19B  +
push eax  +
call sub_49BF60  +
add esp 4 +
mov esi eax +
mov [ebp+var_20] esi +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_48B19B  +
mov eax 1 +
retn   +
mov esp [ebp-18h] +
xor esi esi +
mov [ebp-20h] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ebx [ebp+8] +
mov edi [ebp-24h] +
test esi esi +
jnz loc_48B1A9  +
push 8007000Eh  +
call sub_48B080  +
push edi  +
push esi  +
push [ebp+cchMultiByte]  +
push ebx  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_48B1E6  +
cmp edi 1000h +
jl loc_48B1CE  +
push esi  +
call sub_497EC6  +
add esp 4 +
call ds:GetLastError  +
test eax eax +
jle loc_48B1E0  +
movzx eax ax +
or eax 80070000h +
push eax  +
call sub_48B080  +
push esi  +
call ds:SysAllocString  +
mov ebx eax +
cmp edi 1000h +
jl loc_48B200  +
push esi  +
call sub_497EC6  +
add esp 4 +
test ebx ebx +
jnz loc_48B20E  +
push 8007000Eh  +
call sub_48B080  +
mov eax ebx +
lea esp [ebp-38h] +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_1C] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_4D4D88 +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_48B2BA  +
cmp [ebp+arg_8] 0 +
jz loc_48B2BA  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_4D4D88 +
test ecx ecx +
jz loc_48B2F1  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_48B300  +
push eax  +
call ds:__imp_LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_4D4D88 +
test ecx ecx +
jz loc_48B334  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_48B342  +
push eax  +
call ds:__imp_LocalFree  +
test [ebp+arg_0] 1 +
jz loc_48B353  +
push 10h  +
push edi  +
call sub_488C60  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
sub esp 10h +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_48CF40  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
jmp $+5  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_48B424  +
push dword ptr [esi]  +
call sub_497EC6  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_48B450  +
cmp edi eax +
jb loc_48B6E4  +
cmp ecx 20h +
jb loc_48B92B  +
cmp ecx 80h +
jnb loc_48B474  +
bt dword_4EEF50 1 +
jb loc_48B8FD  +
jmp loc_48B657  +
bt dword_4F585C 1 +
jnb loc_48B487  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_48B4A0  +
bt dword_4EEF50 1 +
jb loc_48B880  +
bt dword_4F585C 0 +
jnb loc_48B657  +
test edi 3 +
jnz loc_48B657  +
test esi 3 +
jnz loc_48B672  +
bt edi 2 +
jnb loc_48B4D9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_48B4F0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_48B55D  +
bt esi 3 +
jnb loc_48B5B6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_48B60C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_48B624  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_48B60C  +
***
bt ecx 2 +
jnb loc_48B637  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_48B64E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_48B694[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_48B672  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_48B65F  +
mov edx ecx +
cmp ecx 20h +
jb loc_48B92B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_48B694[edx*4]  +
jmp dword ptr ds:loc_48B6A4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_48B844  +
bt dword_4EEF50 1 +
jb loc_48B795  +
test edi 3 +
jz loc_48B71D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_48B710  +
cmp ecx 20h +
jb loc_48B844  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_48B740[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_48B7AC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_48B79D  +
cmp ecx 80h +
jb loc_48B81C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_48B7AC  +
cmp ecx 20h +
jb loc_48B844  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_48B821  +
test ecx 0FFFFFFFCh +
jz loc_48B861  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_48B84C  +
test ecx ecx +
jz loc_48B874  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_48B865  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_48B8FD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_48B8A0  +
test ecx ecx +
jz loc_48B960  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_48B92B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_48B910  +
and ecx 1Fh +
jz loc_48B960  +
mov eax ecx +
shr ecx 2 +
jz loc_48B946  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_48B937  +
mov ecx eax +
and ecx 3 +
jz loc_48B960  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_48B94D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
xor ecx ecx +
mov esi eax +
call sub_489C30  +
push esi  +
and dword ptr [ecx+4] 0 +
call sub_489C30  +
mov eax [ebp-2Ch] +
call sub_4B6CFB  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 44h +
push ecx  +
sub esp 18h +
push ebx  +
pop eax  +
mov ecx [ebp+arg_4] +
call sub_489C30  +
mov esp [ebp-18h] +
call sub_489C30  +
mov eax [ebp+arg_0] +
call sub_489C30  +
call sub_48FA51  +
push ebx  +
mov edx [ebp+arg_0] +
call sub_48FA51  +
cmp dword ptr [eax+18h] 0 +
setnz al  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_4F5858 1 +
jb loc_48C85E  +
mov edi [ebp+8] +
ja loc_48C7DD  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_48C7BD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_48C78D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_48C81E  +
xor eax eax +
test edi 0Fh +
jz loc_48C804  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_48C81B  +
inc edi  +
test edi 0Fh +
jnz loc_48C7EF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_48C857  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_48C843  +
bsf edx edi +
add eax edx +
jmp loc_48C81B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_48C881  +
xor eax eax +
jmp loc_48C883  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
mov eax [esp+arg_8] +
push edi  +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
jz loc_48C9B5  +
push dword ptr [esi]  +
call sub_497EC6  +
pop ecx  +
and dword ptr [esi] 0 +
mov byte ptr [esi+4] 0 +
pop esi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_48C9E0  +
cmp edi eax +
jb loc_48CC74  +
cmp ecx 20h +
jb loc_48CEBB  +
cmp ecx 80h +
jnb loc_48CA04  +
bt dword_4EEF50 1 +
jb loc_48CE8D  +
jmp loc_48CBE7  +
bt dword_4F585C 1 +
jnb loc_48CA17  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_48CA30  +
bt dword_4EEF50 1 +
jb loc_48CE10  +
bt dword_4F585C 0 +
jnb loc_48CBE7  +
test edi 3 +
jnz loc_48CBE7  +
test esi 3 +
jnz loc_48CC02  +
bt edi 2 +
jnb loc_48CA69  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_48CA80  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_48CAED  +
bt esi 3 +
jnb loc_48CB46  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_48CB9C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_48CBB4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_48CB9C  +
***
bt ecx 2 +
jnb loc_48CBC7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_48CBDE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_48CC24[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_48CC02  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_48CBEF  +
mov edx ecx +
cmp ecx 20h +
jb loc_48CEBB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_48CC24[edx*4]  +
jmp dword ptr ds:loc_48CC34[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_48CDD4  +
bt dword_4EEF50 1 +
jb loc_48CD25  +
test edi 3 +
jz loc_48CCAD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_48CCA0  +
cmp ecx 20h +
jb loc_48CDD4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_48CCD0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_48CD3C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_48CD2D  +
cmp ecx 80h +
jb loc_48CDAC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_48CD3C  +
cmp ecx 20h +
jb loc_48CDD4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_48CDB1  +
test ecx 0FFFFFFFCh +
jz loc_48CDF1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_48CDDC  +
test ecx ecx +
jz loc_48CE04  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_48CDF5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_48CE10  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_48CF00  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_48CE8D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_48CE30  +
test ecx ecx +
jz loc_48CEF0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_48CEBB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_48CEA0  +
and ecx 1Fh +
jz loc_48CEF0  +
mov eax ecx +
shr ecx 2 +
jz loc_48CED6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_48CEC7  +
mov ecx eax +
and ecx 3 +
jz loc_48CEF0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_48CEDD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_48CF1C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_48CF13  +
shr eax 2 +
jz loc_48CF2E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_48CF21  +
pop ecx  +
jmp loc_48CE1D  +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_48D093  +
imul eax eax +
cmp ecx 20h +
jle loc_48D045  +
cmp ecx 80h +
jl loc_48CFFD  +
bt dword_4F585C 1 +
jnb loc_48CF85  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_4EEF50 1 +
jnb loc_48D045  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jle loc_48CFFD  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_48CFC0  +
jmp loc_48D010  +
bt dword_4EEF50 1 +
jnb loc_48D045  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_48D031  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_48D015  +
test ecx 1Fh +
jz loc_48D093  +
lea edi [ecx+edi-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_48D05B  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_48D04D  +
test ecx 4 +
jz loc_48D06B  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_48D093  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_48D080  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
cmp dword_4F5858 1 +
sub esp 18h +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_48FA51  +
push ecx  +
sub esp 8 +
push ecx  +
sub esp 20h +
push esi  +
push esi  +
mov edx [ebp+arg_0] +
sub esp 14h +
push ecx  +
sub esp 24h +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_489C30  +
mov esp [ebp-18h] +
call sub_489C30  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
push offset aAccessViolatio  +
jmp loc_48DC84  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_48DCDF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_488C1C  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_488C1C  +
***
sub esp 1Ch +
mov esi [eax+4] +
pop ebp  +
mov eax [ebp+arg_0] +
sub esp 0Ch +
call sub_48FA18  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_4EEF3C +
cmp [ebp+arg_0] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_48F990  +
sub eax 1 +
jz loc_48F97F  +
sub eax 1 +
jz loc_48F950  +
sub eax 1 +
jz loc_48F906  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_48F87E  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_48E780  +
mov eax [esi] +
cmp eax [edx] +
jz loc_48E369  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_48E309  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_48E32B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_48E34D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_48E36B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E36B  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_48E3FA  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_48E39A  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_48E3BC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_48E3DE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_48E3FC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E3FC  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_48E48B  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_48E42B  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_48E44D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_48E46F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_48E48D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E48D  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_48E51C  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_48E4BC  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_48E4DE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_48E500  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_48E51E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E51E  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_48E5B2  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_48E552  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_48E574  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_48E596  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_48E5B4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E5B4  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_48E643  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_48E5E3  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_48E605  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_48E627  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_48E645  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E645  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_48E6D4  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_48E674  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_48E696  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_48E6B8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_48E6D6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E6D6  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_48E765  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_48E705  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_48E727  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_48E749  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_48E767  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E767  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_48E2DF  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_48EBA2  +
jmp ds:off_48F998[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_48E821  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_48E7C1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_48E7E3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_48E805  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_48E823  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E823  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_48E8B8  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_48E858  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_48E87A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_48E89C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_48E8BA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E8BA  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_48E94F  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_48E8EF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_48E911  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_48E933  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_48E951  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E951  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_48E9E6  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_48E986  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_48E9A8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_48E9CA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_48E9E8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48E9E8  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_48EA7E  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_48EA1E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_48EA40  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_48EA62  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_48EA80  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EA80  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_48EB15  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_48EAB5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_48EAD7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_48EAF9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_48EB17  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EB17  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_48EB9C  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_48EB44  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_48EB62  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_48EB80  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_48EB9E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EB9E  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_48F992  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_48EC29  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_48EBD1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_48EBEF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_48EC0D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_48EC2B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EC2B  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_48ECC0  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_48EC60  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_48EC82  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_48ECA4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_48ECC2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48ECC2  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_48ED57  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_48ECF7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_48ED19  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_48ED3B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_48ED59  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48ED59  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_48EDEE  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_48ED8E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_48EDB0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_48EDD2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_48EDF0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EDF0  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_48EE85  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_48EE25  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_48EE47  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_48EE69  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_48EE87  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EE87  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_48EF1D  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_48EEBD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_48EEDF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_48EF01  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_48EF1F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EF1F  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_48EFB4  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_48EF54  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_48EF76  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_48EF98  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_48EFB6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EFB6  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_48EBA4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48EBA4  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_48F06E  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_48F00E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_48F030  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_48F052  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_48F070  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F070  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_48F105  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_48F0A5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_48F0C7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_48F0E9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_48F107  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F107  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_48F19C  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_48F13C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_48F15E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_48F180  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_48F19E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F19E  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_48F233  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_48F1D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_48F1F5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_48F217  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_48F235  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F235  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_48F2CA  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_48F26A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_48F28C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_48F2AE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_48F2CC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F2CC  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_48F362  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_48F302  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_48F324  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_48F346  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_48F364  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F364  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_48F3F9  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_48F399  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_48F3BB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_48F3DD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_48F3FB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F3FB  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_48EBA2  +
jmp loc_48F85B  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_48F4A4  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_48F444  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_48F466  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_48F488  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_48F4A6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F4A6  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_48F53B  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_48F4DB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_48F4FD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_48F51F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_48F53D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F53D  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_48F5D2  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_48F572  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_48F594  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_48F5B6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_48F5D4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F5D4  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_48F669  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_48F609  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_48F62B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_48F64D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_48F66B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F66B  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_48F701  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_48F6A1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_48F6C3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_48F6E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_48F703  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F703  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_48F798  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_48F738  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_48F75A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_48F77C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_48F79A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F79A  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_48F82F  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_48F7CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_48F7F1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_48F813  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_48F831  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_48F831  +
xor ecx ecx +
test ecx ecx +
jnz loc_48EBA4  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_48F85B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_48EBA4  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_48EFBE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_48EFB6  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_48F8A1  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_48F8C3  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_48F8E5  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_48F8FF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_48F992  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_48F928  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_48F946  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_48F8ED  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_48F972  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_48F992  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_48F8ED  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_48F8ED  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov eax dword_4EEF3C +
mov eax [ebp+lpMem] +
call sub_48FA5F  +
cmp dword_4EEFE0 0FFFFFFFFh +
mov dword_4EEFE0 eax +
mov eax dword_4EEFE0 +
cmp eax 0FFFFFFFFh +
jz loc_48FB3C  +
push eax  +
call sub_48E135  +
or dword_4EEFE0 0FFFFFFFFh +
pop ecx  +
mov al 1 +
retn   +
***
sub esp 4 +
push ebx  +
push ecx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebp  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_8] +
mov ebp [ebp+var_4] +
call sub_49570C  +
push esi  +
push edi  +
call eax  +
pop edi  +
pop esi  +
mov ebx ebp +
pop ebp  +
mov ecx [ebp+arg_8] +
push ebp  +
mov ebp ebx +
cmp ecx 100h +
jnz loc_48FB7F  +
mov ecx 2 +
push ecx  +
call sub_49570C  +
pop ebp  +
pop ecx  +
pop ebx  +
leave   +
retn 0Ch  +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_48FC65  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_488C1C  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_48FB90  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ebx  +
push esi  +
push ebx  +
push esi  +
mov eax [ebp+arg_0] +
sub esp 2Ch +
sub esp 24h +
or dword ptr [ecx] 0FFFFFFFFh +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
sub esp 20h +
push ecx  +
push ecx  +
push ecx  +
mov edx [ecx] +
mov edx [ecx] +
mov edx [ecx] +
mov edx [ecx] +
push esi  +
push esi  +
push ebx  +
push esi  +
push esi  +
cmp byte ptr [ecx+4] 3 +
cmp dword ptr [edi+4] 0 +
mov eax dword_4F5BC4 +
push esi  +
sub esp 60h +
push esi  +
sub esp 18h +
mov eax dword_4F5BB4 +
mov eax dword_4F5BB4 +
sub esp 10h +
mov ecx dword_4F5BB4 +
sub esp 1Ch +
mov al [ecx] +
push ebx  +
push esi  +
push edi  +
test al al +
jz loc_491B8D  +
and [ebp+var_C] 0 +
mov edi 0FFFF0000h +
and [ebp+var_8] edi +
inc ecx  +
push 4Eh  +
movzx esi al +
or ebx 0FFFFFFFFh +
pop edx  +
mov dword_4F5BB4 ecx +
mov [ebp+var_1] 0 +
cmp esi edx +
ja loc_491869  +
jz loc_491A77  +
lea eax [esi-43h] +
cmp eax 0Ah +
ja loc_491A45  +
movzx eax ds:byte_491BC2[eax] +
jmp ds:off_491BAA[eax*4]  +
push offset aChar  +
lea ecx [ebp+var_C] +
call sub_49008B  +
jmp loc_491A8D  +
push offset aShort  +
jmp loc_491840  +
push offset aInt_0  +
jmp loc_491840  +
push offset aLong  +
jmp loc_491840  +
push offset aFloat  +
jmp loc_491840  +
cmp esi 4Fh +
jz loc_491A6A  +
jbe loc_491A45  +
cmp esi 53h +
jbe loc_491A3E  +
cmp esi 58h +
jz loc_491A34  +
cmp esi 5Fh +
jnz loc_491A45  +
mov bl [ecx] +
inc ecx  +
movzx eax bl +
mov dword_4F5BB4 ecx +
cmp eax edx +
ja loc_49194D  +
jz loc_491946  +
cmp eax 47h +
ja loc_49191D  +
cmp eax 46h +
jnb loc_491916  +
test eax eax +
jz loc_491900  +
cmp eax 24h +
jz loc_4918DE  +
add eax 0FFFFFFBCh +
cmp eax 1 +
ja loc_49199F  +
push offset a__int8  +
lea ecx [ebp+var_C] +
call sub_49008B  +
jmp loc_491A90  +
push [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4917DE  +
push eax  +
push offset a__w64  +
push [ebp+arg_0]  +
call sub_4902CB  +
add esp 14h +
jmp loc_491B9D  +
dec ecx  +
mov dword_4F5BB4 ecx +
lea ecx [ebp+var_C] +
push 1  +
call sub_4900BD  +
jmp loc_491A90  +
push offset a__int16  +
jmp loc_4918D1  +
cmp eax 48h +
jb loc_49199F  +
cmp eax 49h +
jbe loc_49193F  +
cmp eax 4Bh +
jbe loc_491938  +
cmp eax 4Dh +
ja loc_49199F  +
push offset a__int128  +
jmp loc_4918D1  +
push offset a__int64  +
jmp loc_4918D1  +
push offset a__int32  +
jmp loc_4918D1  +
push offset aBool  +
jmp loc_4918D1  +
cmp eax 4Fh +
jz loc_4919D1  +
cmp eax 52h +
jz loc_4919C7  +
cmp eax 53h +
jz loc_4919BD  +
cmp eax 55h +
jz loc_4919B3  +
cmp eax 57h +
jz loc_4919A9  +
add eax 0FFFFFFA8h +
cmp eax 1 +
ja loc_49199F  +
lea eax [ebp+var_1C] +
dec ecx  +
push eax  +
mov dword_4F5BB4 ecx +
call sub_492798  +
pop ecx  +
mov ecx [eax] +
mov edx [eax+4] +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
test ecx ecx +
jnz loc_491A90  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov [eax+4] edx +
jmp loc_491BA0  +
push offset aUnknown  +
jmp loc_4918D1  +
push offset aWchar_t  +
jmp loc_4918D1  +
push offset aChar32_t  +
jmp loc_4918D1  +
push offset aChar16_t  +
jmp loc_4918D1  +
push offset aUnknown_0  +
jmp loc_4918D1  +
push 0FFFFFFFEh  +
pop ebx  +
mov ecx [ebp+arg_4] +
and [ebp+var_C] 0 +
and [ebp+var_8] edi +
mov eax [ecx] +
mov [ebp+var_1C] eax +
mov eax [ecx+4] +
mov [ebp+var_18] eax +
cmp ebx 0FFFFFFFEh +
jnz loc_491B36  +
mov esi 800h +
or eax esi +
mov [ebp+var_18] eax +
lea eax [ebp+var_1C] +
push offset unk_4DE8C5  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_493A97  +
mov edx [ebp+var_10] +
add esp 10h +
test edx esi +
jnz loc_491A2C  +
push offset asc_4D5240  +
lea ecx [ebp+var_14] +
call sub_49042E  +
mov edx [ebp+var_10] +
mov ecx [ebp+var_14] +
jmp loc_491992  +
push offset aVoid  +
jmp loc_491840  +
mov ebx esi +
and ebx 3 +
jmp loc_491A84  +
lea eax [ebp+var_1C] +
dec ecx  +
push eax  +
mov dword_4F5BB4 ecx +
call sub_492798  +
pop ecx  +
mov ecx [eax] +
mov edx [eax+4] +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
test ecx ecx +
jnz loc_491A8D  +
jmp loc_491992  +
push offset aLong_0  +
lea ecx [ebp+var_C] +
call sub_49008B  +
push offset aDouble  +
lea ecx [ebp+var_C] +
call sub_49042E  +
cmp ebx 0FFFFFFFFh +
jnz loc_4919D4  +
mov bl [ebp+var_1] +
sub esi 43h +
jz loc_491AD4  +
push 2  +
pop ecx  +
sub esi ecx +
jz loc_491AC5  +
sub esi ecx +
jz loc_491AC5  +
sub esi ecx +
jz loc_491AC5  +
sub esi ecx +
jz loc_491AC5  +
sub esi 14h +
jnz loc_491AFC  +
movzx eax bl +
sub eax 45h +
jz loc_491AC5  +
sub eax ecx +
jz loc_491AC5  +
sub eax ecx +
jz loc_491AC5  +
sub eax ecx +
jz loc_491AC5  +
sub eax ecx +
jnz loc_491AFC  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push offset aUnsigned  +
jmp loc_491AE1  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push offset aSigned  +
lea ecx [ebp+var_14] +
call sub_48FE20  +
mov ecx eax +
call sub_490313  +
mov eax [ebp+var_1C] +
mov [ebp+var_C] eax +
mov eax [ebp+var_18] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jz loc_491B26  +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push 20h  +
lea ecx [ebp+var_14] +
call sub_48FDA7  +
mov ecx eax +
call sub_490313  +
lea eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+var_C] +
call sub_49039B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov ecx [ebp+var_8] +
mov [eax+4] ecx +
jmp loc_491BA0  +
cmp dword ptr [ecx] 0 +
jnz loc_491B73  +
test bl 1 +
jz loc_491B61  +
push offset aConst  +
lea ecx [ebp+var_C] +
call sub_49008B  +
test bl 2 +
jz loc_491B73  +
push offset aVolatile  +
lea ecx [ebp+var_C] +
call sub_49042E  +
jmp loc_491B73  +
test bl 2 +
jz loc_491B73  +
push offset aVolatile_0  +
lea ecx [ebp+var_C] +
call sub_49008B  +
push offset word_4DE9E0  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
call sub_493A97  +
add esp 10h +
jmp loc_491B9D  +
push [ebp+arg_4]  +
push 1  +
push [ebp+arg_0]  +
call sub_4902EF  +
add esp 0Ch +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
sub esp 54h +
sub esp 10h +
sub esp 18h +
mov eax dword_4F5BC4 +
mov ecx dword_4F5BB4 +
mov ecx dword_4F5BB4 +
mov eax dword_4F5BC4 +
sub esp 18h +
mov eax dword_4F5BB4 +
and [ebp+var_8] 0 +
and [ebp+var_4] 0FFFF0000h +
mov al [eax] +
test al al +
jz loc_49296E  +
movsx eax al +
add eax 0FFFFFFD0h +
cmp eax 7 +
ja loc_49296A  +
jmp ds:off_492981[eax*4]  +
push offset aChar_0  +
jmp loc_492905  +
push offset aShort_0  +
jmp loc_492905  +
push offset aInt  +
jmp loc_492905  +
push offset aLong_0  +
lea ecx [ebp+var_8] +
call sub_49008B  +
mov eax dword_4F5BB4 +
movsx eax byte ptr [eax] +
inc dword_4F5BB4  +
sub eax 31h +
jz loc_492932  +
dec eax  +
sub eax 1 +
jz loc_492932  +
dec eax  +
sub eax 1 +
jz loc_492932  +
dec eax  +
sub eax 1 +
jnz loc_49295A  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aUnsigned  +
lea ecx [ebp+var_18] +
call sub_48FE20  +
mov ecx eax +
call sub_490313  +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov ecx [ebp+var_4] +
mov [eax+4] ecx +
jmp loc_49297B  +
push 2  +
jmp loc_492970  +
push 1  +
mov ecx [ebp+arg_0] +
call sub_48FE5A  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 18h +
mov ecx dword_4F5BB4 +
test edi edi +
cmp dword ptr [ecx+4] 1 +
mov ecx [ecx+4] +
push esi  +
mov edx [ecx+8] +
sub esp 18h +
push esi  +
mov ecx dword_4F5BB4 +
sub esp 28h +
sub esp 10h +
mov eax dword_4F5BB4 +
push ecx  +
push ecx  +
mov eax dword_4F5BB4 +
sub esp 0F4h +
sub esp 18h +
push ecx  +
push edi  +
push ebx  +
cmp dword ptr [ecx+4] 1 +
mov eax [ebp+arg_0] +
mov ecx [ecx+4] +
push ebx  +
push dword ptr [ecx+8]  +
sub esp 10h +
mov eax [ebp+arg_4] +
mov eax dword_4F5BB4 +
sub esp 7Ch +
sub esp 94h +
mov eax dword_4F5BB4 +
sub esp 10h +
mov eax dword_4F5BB4 +
push ecx  +
mov edx dword_4F5BB4 +
push ebx  +
push esi  +
push edi  +
push 2  +
xor ebx ebx +
mov edi 4000h +
pop esi  +
cmp byte ptr [edx] 5Fh +
mov ecx ebx +
jnz loc_494C5F  +
inc edx  +
mov ecx edi +
mov dword_4F5BB4 edx +
mov al [edx] +
cmp al 41h +
jl loc_494C6D  +
cmp al 5Ah +
jle loc_494CF3  +
cmp al 24h +
jnz loc_494EB5  +
inc edx  +
mov [ebp+var_1] bl +
mov dword_4F5BB4 edx +
movsx eax byte ptr [edx] +
cmp eax 42h +
jg loc_494DF6  +
jz loc_494DEB  +
test eax eax +
jz loc_494DE0  +
cmp eax 24h +
jnz loc_494DBE  +
cmp byte ptr [edx+1] 50h +
jnz loc_494CA9  +
inc edx  +
inc edx  +
mov dword_4F5BB4 edx +
movsx eax byte ptr [edx] +
cmp eax 4Ah +
jg loc_494CCF  +
jz loc_494D87  +
sub eax ebx +
jz loc_494D7D  +
sub eax 46h +
jz loc_494CE7  +
sub eax esi +
jmp loc_494CE5  +
cmp eax 4Ch +
jl loc_494D30  +
cmp eax 4Dh +
jle loc_494CE7  +
cmp eax 4Fh +
jle loc_494D87  +
cmp eax 51h +
jnz loc_494D30  +
inc edx  +
mov dword_4F5BB4 edx +
jmp loc_494C4F  +
movsx eax byte ptr [edx] +
or ecx 8000h +
sub eax 41h +
inc edx  +
mov dword_4F5BB4 edx +
test al 1 +
jz loc_494D10  +
or ecx 2000h +
cmp eax 18h +
jge loc_494F38  +
mov edx eax +
or ecx 800h +
and edx 18h +
jz loc_494D42  +
cmp edx 8 +
jz loc_494D3A  +
cmp edx 10h +
jz loc_494D45  +
mov eax 0FFFFh +
jmp loc_494F3A  +
or ecx 80h +
jmp loc_494D45  +
or ecx 40h +
and eax 6 +
sub eax ebx +
jz loc_494F38  +
sub eax esi +
jz loc_494D72  +
sub eax esi +
jz loc_494D67  +
sub eax esi +
jnz loc_494D30  +
or ecx 400h +
jmp loc_494F38  +
or ecx 100h +
jmp loc_494F38  +
or ecx 200h +
jmp loc_494F38  +
mov eax 0FFFEh +
jmp loc_494F3A  +
inc edx  +
mov dword_4F5BB4 edx +
mov al [edx] +
cmp al 30h +
jl loc_494DB4  +
cmp al 39h +
jg loc_494DB4  +
movsx eax al +
add edx 0FFFFFFD1h +
add eax edx +
mov dword_4F5BB4 eax +
call sub_494C38  +
or eax 10000h +
jmp loc_494F3A  +
mov ecx 0FFFFh +
jmp loc_494EA9  +
cmp eax 2Fh +
jle loc_494D30  +
cmp eax 35h +
jle loc_494E31  +
cmp eax 41h +
jnz loc_494D30  +
or ecx 9000h +
jmp loc_494EA9  +
mov ecx 0FFFEh +
dec edx  +
jmp loc_494EA9  +
or ecx 9800h +
jmp loc_494EA9  +
sub eax 43h +
jz loc_494EA3  +
sub eax 1 +
jz loc_494E9B  +
sub eax 1 +
jz loc_494E93  +
sub eax 0Dh +
jnz loc_494D30  +
inc edx  +
mov [ebp+var_1] 1 +
mov dword_4F5BB4 edx +
mov bl [edx] +
cmp bl 30h +
jl loc_494E82  +
cmp bl 35h +
jg loc_494E82  +
movsx eax byte ptr [edx] +
xor ebx ebx +
or ecx 8800h +
sub eax 30h +
cmp [ebp+var_1] bl +
setz bl  +
dec ebx  +
and ebx 100h +
add ebx 500h +
or ebx ecx +
mov ecx ebx +
test al 1 +
jz loc_494E60  +
or ecx 2000h +
and eax 6 +
sub eax 0 +
jz loc_494E7D  +
sub eax esi +
jz loc_494E75  +
sub eax esi +
jz loc_494EA9  +
jmp loc_494D30  +
or ecx 80h +
jmp loc_494EA9  +
or ecx 40h +
jmp loc_494EA9  +
xor eax eax +
test bl bl +
setz al  +
add eax 0FFFEh +
jmp loc_494F3A  +
or ecx 9200h +
jmp loc_494EA9  +
or ecx 9100h +
jmp loc_494EA9  +
or ecx 7C00h +
inc edx  +
mov dword_4F5BB4 edx +
jmp loc_494F38  +
mov al [edx] +
cmp al 30h +
jl loc_494F19  +
cmp al 38h +
jg loc_494F19  +
movsx eax al +
inc edx  +
add eax 0FFFFFFD0h +
mov dword_4F5BB4 edx +
cmp eax 8 +
ja loc_494D30  +
jmp ds:off_494F44[eax*4]  +
mov ecx 800h +
jmp loc_494F38  +
mov ecx 1000h +
jmp loc_494F38  +
mov ecx ebx +
jmp loc_494F38  +
or ecx edi +
jmp loc_494F38  +
or ecx 6000h +
jmp loc_494F38  +
mov ecx 2000h +
jmp loc_494F38  +
or ecx 6800h +
jmp loc_494F38  +
or ecx 7000h +
jmp loc_494F38  +
or ecx 7800h +
jmp loc_494F38  +
cmp al 39h +
jnz loc_494F2B  +
inc edx  +
mov ecx 0FFFDh +
mov dword_4F5BB4 edx +
jmp loc_494F38  +
xor ecx ecx +
test al al +
setnz cl  +
add ecx 0FFFEh +
mov eax ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax dword_4F5BB4 +
push ecx  +
mov ecx [ebp+arg_4] +
sub esp 3Ch +
test edi edi +
mov ecx [ecx+4] +
push ecx  +
mov eax dword_4F5C14 +
mov eax [ebp+arg_8] +
call sub_489C30  +
pop ecx  +
mov edi offset stru_4F5C18 +
imul eax [ebp+arg_0] +
test esi esi +
imul eax [ebp+arg_0] +
add eax offset stru_4F5C18 +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_495618  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_495620  +
push large dword ptr fs:0  +
mov eax dword_4EEF3C +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_4956D7  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_4956AA  +
cmp esi [esp+18h+arg_4] +
jbe loc_4956D7  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_4956D5  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_495715  +
mov eax [ebx+esi*4+8] +
call sub_495734  +
jmp loc_49568E  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_4EEFF0 +
mov ebx offset unk_4EEFF0 +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_49575C  +
push [ebp+arg_0]  +
call sub_489BCB  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_48CF40  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_48CF40  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_495863  +
test edi edi +
jnz loc_495863  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_495863  +
push [ebp+arg_0]  +
call sub_489BCB  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_489C30  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_489C30  +
pop ecx  +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov eax dword_4F5C38 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4A8230  +
call sub_4A8230  +
test eax eax +
jnz loc_497993  +
mov eax offset unk_4EF0A8 +
retn   +
add eax 10h +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
call sub_4A2A5B  +
mov edi eax +
test edi edi +
jz loc_497B7F  +
cmp [ebp+arg_0] 0 +
jz loc_497B7F  +
mov esi [ebp+arg_0] +
xor edx edx +
mov [ebp+var_4] edx +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
cmp ax dx +
jnz loc_497B2C  +
sub esi ecx +
sar esi 1 +
cmp [edi] edx +
jz loc_497B7F  +
mov edx [edi] +
mov ecx edx +
lea eax [ecx+2] +
mov [ebp+var_8] eax +
mov ax [ecx] +
add ecx 2 +
cmp ax word ptr [ebp+var_4] +
jnz loc_497B49  +
sub ecx [ebp+var_8] +
sar ecx 1 +
cmp ecx esi +
jbe loc_497B76  +
cmp word ptr [edx+esi*2] 3Dh +
jnz loc_497B76  +
push esi  +
push [ebp+arg_0]  +
push edx  +
call sub_4AA43D  +
add esp 0Ch +
test eax eax +
jz loc_497B87  +
add edi 4 +
xor eax eax +
cmp [edi] eax +
jnz loc_497B3F  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi] +
lea eax [eax+esi*2] +
add eax 2 +
jmp loc_497B81  +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4B7010  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_4A713D  +
***
push esi  +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_49A392  +
test al al +
jnz loc_499226  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_4992ED  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
or eax 0FFFFFFFFh +
jmp loc_499303  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4992DA  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_4992ED  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_499123  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_499232  +
cmp eax 7 +
ja loc_499242  +
jmp ds:off_499309[eax*4]  +
mov ecx esi +
call sub_4995AA  +
jmp loc_4992D2  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4992DA  +
mov ecx esi +
call sub_49956D  +
jmp loc_4992D2  +
mov ecx esi +
call sub_499E56  +
jmp loc_4992D2  +
mov [esi+28h] ebx +
jmp loc_4992DA  +
mov ecx esi +
call sub_4996FE  +
jmp loc_4992D2  +
mov ecx esi +
call sub_499726  +
jmp loc_4992D2  +
mov ecx esi +
call sub_4999F8  +
test al al +
jz loc_499242  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_499255  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_49924A  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_49A3B3  +
test al al +
jnz loc_499342  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_499418  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
or eax 0FFFFFFFFh +
jmp loc_49942E  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_4993F6  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_499409  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_4990EE  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_49934E  +
cmp eax 7 +
ja loc_49935E  +
jmp ds:off_499431[eax*4]  +
mov ecx esi +
call sub_4995C9  +
jmp loc_4993EE  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_4993F6  +
mov ecx esi +
call sub_49956D  +
jmp loc_4993EE  +
mov ecx esi +
call sub_499E56  +
jmp loc_4993EE  +
mov [esi+28h] ebx +
jmp loc_4993F6  +
mov ecx esi +
call sub_4996FE  +
jmp loc_4993EE  +
mov ecx esi +
call sub_49988F  +
jmp loc_4993EE  +
mov ecx esi +
call sub_499C27  +
test al al +
jz loc_49935E  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_499371  +
inc dword ptr [esi+10h]  +
mov ecx esi +
call sub_49A3CE  +
test al al +
jz loc_49935E  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_499366  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_49A3B3  +
test al al +
jnz loc_49946A  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_499531  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
or eax 0FFFFFFFFh +
jmp loc_499547  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_49951E  +
inc dword ptr [esi+10h]  +
cmp [esi+18h] ebx +
jl loc_499531  +
push dword ptr [esi+1Ch]  +
movzx eax byte ptr [esi+31h] +
mov ecx esi +
push eax  +
call sub_499123  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_499476  +
cmp eax 7 +
ja loc_499486  +
jmp ds:off_49954D[eax*4]  +
mov ecx esi +
call sub_4995C9  +
jmp loc_499516  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_49951E  +
mov ecx esi +
call sub_49956D  +
jmp loc_499516  +
mov ecx esi +
call sub_499E56  +
jmp loc_499516  +
mov [esi+28h] ebx +
jmp loc_49951E  +
mov ecx esi +
call sub_4996FE  +
jmp loc_499516  +
mov ecx esi +
call sub_49988F  +
jmp loc_499516  +
mov ecx esi +
call sub_499C27  +
test al al +
jz loc_499486  +
mov eax [esi+10h] +
mov al [eax] +
mov [esi+31h] al +
test al al +
jnz loc_499499  +
inc dword ptr [esi+10h]  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_49948E  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movsx eax byte ptr [ecx+31h] +
call sub_4995E8  +
call sub_499612  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov al [ecx+31h] +
mov al [ecx+31h] +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+31h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_499EA7  +
jmp ds:off_499EAD[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_499E97  +
push 8  +
jmp loc_499E97  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov eax [ecx] +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_49A892  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
fldz   +
jmp loc_49A963  +
push ebx  +
push esi  +
mov ebx 0FFFFh +
push ebx  +
push 133Fh  +
call sub_4AC5D5  +
fld  [ebp+arg_0] +
mov esi eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+arg_0+6] +
mov eax 7FF0h +
and ecx eax +
cmp cx ax +
jnz loc_49A903  +
or dword ptr [edi] 0FFFFFFFFh +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_4AC4EE  +
pop ecx  +
pop ecx  +
sub eax 1 +
jz loc_49A8F5  +
sub eax 1 +
jz loc_49A8F5  +
sub eax 1 +
jz loc_49A8F5  +
fld  [ebp+arg_0] +
fld  ds:qword_4BF6E0 +
push esi  +
sub esp 10h +
fadd st st(1) +
fstp  qword ptr [esp+8] +
fstp  [esp+28h+var_28] +
push 17h  +
push 8  +
jmp loc_49A939  +
push ebx  +
push esi  +
call sub_4AC5D5  +
fld  [ebp+arg_0] +
pop ecx  +
pop ecx  +
jmp loc_49A961  +
fldz   +
fucomp  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_49A946  +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_49A9F9  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_49A943  +
and dword ptr [edi] 0 +
fld  ds:dbl_4D5DA0 +
push esi  +
sub esp 10h +
fstp  qword ptr [esp+8] +
fld  [ebp+arg_0] +
fstp  [esp+28h+var_28] +
push 17h  +
push 0  +
call sub_4A443A  +
add esp 1Ch +
jmp loc_49A961  +
fld  [ebp+arg_0] +
push edi  +
push ecx  +
push ecx  +
fstp  qword ptr [esp] +
call sub_4AC3EB  +
push ebx  +
push esi  +
fstp  [ebp+var_8] +
call sub_4AC5D5  +
fld  [ebp+var_8] +
add esp 14h +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4B7010  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov ecx eax +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_49B078  +
push esi  +
push offset ProcName  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_49B077  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_4BC358  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_49B087  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_49AE8D  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edx offset unk_4D5DD0 +
fxch  st(1) +
fprem   +
fstsw  ax +
wait   +
sahf   +
jp loc_49B146  +
fstp  st(1) +
retn   +
***
sub esp 8 +
stmxcsr dword ptr [esp+8+var_10+0Ch]  +
mov eax dword ptr [esp+8+var_10+0Ch] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_49B3ED  +
fnstcw  word ptr [esp+8+var_10+8] +
mov ax word ptr [esp+8+var_10+8] +
and ax 7Fh +
cmp ax 7Fh +
jnz loc_49B3ED  +
movlpd oword ptr [esp+8+var_10+8] xmm0 +
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_4D5E20 +
movapd xmm2 oword ptr ds:oword_4D5E30 +
movapd xmm3 oword ptr ds:oword_4D5E90 +
movapd xmm4 oword ptr ds:oword_4D5E40 +
movapd xmm6 oword ptr ds:oword_4D5E50 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_4D89B0[eax] +
movapd xmm7 oword ptr ds:oword_4D85A0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_49B2E1  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_4D5EE0 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_4D5EF0 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4D5F00 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_4D5E60 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_4D5E70[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4D5F10 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
add esp 8 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
retn   +
movlpd xmm0 oword ptr [esp+8+var_10+8] +
xorpd xmm1 xmm1 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_49B345  +
cmp ecx 0FFFFFFFFh +
jz loc_49B360  +
cmp ecx 7FEh +
ja loc_49B376  +
movlpd xmm0 oword ptr [esp+8+var_10+8] +
movapd xmm1 oword ptr ds:oword_4D5E20 +
movapd xmm2 oword ptr ds:oword_4D5E90 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_49B33E  +
add esp 8 +
movlpd xmm0 oword ptr ds:oword_4D5EC0+8 +
retn   +
mov edx 3E9h +
jmp loc_49B394  +
movlpd xmm2 oword ptr ds:oword_4D5E90 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:oword_4D5EC0 +
mov edx 8 +
jmp loc_49B394  +
movlpd xmm1 oword ptr ds:oword_4D5EB0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_49B19B  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_49B3C3  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 18h +
movlpd oword ptr [esp+20h+var_10] xmm1 +
mov [esp+20h+var_14] edx +
mov edx esp +
add edx 10h +
mov [esp+20h+var_18] edx +
add edx 8 +
mov [esp+20h+var_1C] edx +
mov [esp+20h+var_20] edx +
call sub_4ACDC4  +
movlpd xmm0 oword ptr [esp+20h+var_10] +
add esp 20h +
retn   +
movlpd xmm2 oword ptr [esp+8+var_10+8] +
movapd xmm0 xmm2 +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_49B387  +
mov edx 3E9h +
jmp loc_49B394  +
movq qword ptr [esp+8+var_10+8] xmm0 +
call sub_4AD06F  +
fstp  qword ptr [esp+8+var_10+8] +
movq xmm0 qword ptr [esp+8+var_10+8] +
add esp 8 +
retn   +
***
sub esp 10h +
stmxcsr dword ptr [esp+10h+var_10+4]  +
mov eax dword ptr [esp+10h+var_10+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_49BF3B  +
fnstcw  word ptr [esp+10h+var_10] +
mov ax word ptr [esp+10h+var_10] +
and ax 7Fh +
cmp ax 7Fh +
jnz loc_49BF3B  +
movlpd oword ptr [esp+10h+var_10] xmm0 +
movlpd oword ptr [esp+10h+var_10+8] xmm1 +
movlpd xmm7 oword ptr ds:oword_4D5F30 +
movlpd xmm2 oword ptr ds:oword_4D5F40 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4D8DC0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4D8DC0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4D91D0[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_49B787  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_4D5F80+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_4D5F30 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_4D99E0[eax*4] +
mulsd xmm5 ds:qword_4D99E0[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_4D9DF0[eax*4] +
orpd xmm4 oword ptr ds:oword_4D5F40 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_4D5F80+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_4D5F90 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_4DA600[eax*4] +
mulsd xmm2 ds:qword_4DA600[eax*4] +
addpd xmm6 oword ptr ds:oword_4DAE10[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_4D5F80+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_49BB08  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_49BEC4  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4D5F80+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_4DBE20 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_4DBE30 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_49BC62  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4D5F20 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4D5F20 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4DBE40[eax] +
movapd xmm6 oword ptr ds:oword_4D5F60 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4D5F80 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+10h+var_10+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4D5F70 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movlpd xmm3 oword ptr ds:oword_4D5F50 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_49B88E  +
or eax ecx +
cmp eax 0 +
jz loc_49BBDB  +
cmp edx 0 +
jge loc_49B8CA  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_49B9B7  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_49BAC2  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_4D5F50 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_4D5FB0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_49B8CF  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_4D5F30 +
movlpd xmm2 oword ptr ds:oword_4D5F40 +
jmp loc_49B4C3  +
movlpd xmm7 oword ptr [esp+10h+var_10] +
movapd xmm4 xmm7 +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_49BB45  +
ja loc_49BAB0  +
cmp edx 0 +
ja loc_49BAB0  +
jmp loc_49BB45  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_4D5F30 +
movlpd xmm2 oword ptr ds:oword_4D5F40 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_49B955  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_4D5F50 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4D8DC0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4D8DC0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4D91D0[eax*4] +
mov edx 43E7Fh +
jmp loc_49B4C3  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_49B903  +
mov edx dword ptr [esp+10h+var_10+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_49B9A1  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_4D5F40 +
movlpd xmm2 oword ptr [esp+10h+var_10] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_49BC30  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_49BA56  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm3 oword ptr ds:oword_4D5F30 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_49BAB0  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_49BA8F  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_49BA6E  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
movapd xmm2 xmm1 +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_4D5F50 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_49BA6E  +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_49BA62  +
movlpd xmm0 oword ptr ds:oword_4D5FB0 +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4D5FA0+8 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_49BBC0  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+10h+var_10+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_49BBC0  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_49BC30  +
movlpd xmm2 oword ptr [esp+10h+var_10] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_49B955  +
movlpd xmm1 oword ptr ds:oword_4D5F90+8 +
movlpd xmm0 oword ptr ds:unk_4D5FD0 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_49BC30  +
movlpd xmm4 oword ptr [esp+10h+var_10] +
movlpd xmm2 oword ptr [esp+10h+var_10+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_49BB45  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_49BC24  +
cmp edx 0BFF00000h +
jnz loc_49BB45  +
movlpd xmm0 oword ptr ds:oword_4D5F40 +
add esp 10h +
retn   +
movlpd xmm3 oword ptr ds:oword_4D5F30 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_49BBCC  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+10h+var_10] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_49BC24  +
cmp eax 0 +
jz loc_49BBA7  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_49BBC0  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_49BBC0  +
xorpd xmm0 xmm0 +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4D5FA0 +
add esp 10h +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_49BC30  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_4D5F40 +
mov edx 1Ah +
cmp eax 0 +
jz loc_49BC30  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_49BC30  +
jb loc_49BC20  +
cmp ecx 0 +
ja loc_49BC30  +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4D8DC0 +
add esp 10h +
retn   +
sub esp 18h +
movlpd oword ptr [esp+10h] xmm0 +
mov [esp+28h+var_1C] edx +
mov edx esp +
add edx 10h +
mov [esp+28h+var_20] edx +
add edx 10h +
mov [esp+28h+var_24] edx +
sub edx 8 +
mov [esp+28h+var_28] edx +
call sub_4ACDC4  +
movlpd xmm0 oword ptr [esp+10h] +
add esp 28h +
retn   +
cmp eax 0 +
jle loc_49BC8F  +
cmp eax 40000h +
jnb loc_49BE94  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_49BCB5  +
cmp eax 0FFFC0200h +
jle loc_49BE71  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4D5F20 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4D5F20 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4DBE40[eax] +
movapd xmm6 oword ptr ds:oword_4D5F60 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4D5F80 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+18h+var_10+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4D5F70 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_49BE34  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_49BC30  +
mov edx 19h +
cmp eax 0 +
jz loc_49BC30  +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_49BC30  +
mov edx 19h +
cmp eax 0 +
jz loc_49BC30  +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4D5FC0+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_49BC30  +
mov edx 18h +
cmp ecx 0 +
jz loc_49BEB3  +
movlpd xmm0 oword ptr ds:oword_4D5FB0+8 +
mulsd xmm0 qword ptr ds:oword_4D5FC0 +
jmp loc_49BC30  +
movlpd xmm0 oword ptr ds:oword_4D5FC0 +
mulsd xmm0 xmm0 +
jmp loc_49BC30  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_49B615  +
cmp eax 80000000h +
jb loc_49BF0B  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+10h+var_10] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_49BE71  +
jmp loc_49BE94  +
movq qword ptr [esp+10h+var_10] xmm0 +
movq qword ptr [esp+10h+var_10+8] xmm1 +
call sub_4A77F4  +
fstp  qword ptr [esp+10h+var_10] +
movq xmm0 qword ptr [esp+10h+var_10] +
add esp 10h +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_4A76A7  +
***
mov ecx [esp+arg_8] +
call sub_489C30  +
test esi esi +
call sub_489C30  +
test esi esi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_49C155  +
***
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
ja loc_49D077  +
jmp ds:off_49D0B5[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_49C77F  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_49C7C5  +
jmp loc_49CFF0  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800000h +
jmp loc_49D012  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7FFFFFFFh +
jmp loc_49D012  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800001h +
jmp loc_49D012  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 0FFC00000h +
jmp loc_49D017  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 2  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
mov eax [ebp+arg_8] +
mov [eax] ecx +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
xor ecx ecx +
push 3  +
cmp [eax+308h] cl +
setnz cl  +
shl ecx 1Fh +
or ecx 7F800000h +
jmp loc_49D08F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
ja loc_49D17F  +
jmp ds:off_49D1B9[eax*4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_49C7A2  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_49C7E8  +
jmp loc_49D100  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C681  +
pop ecx  +
pop ecx  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C530  +
jmp loc_49D124  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C56F  +
jmp loc_49D124  +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C5AE  +
jmp loc_49D124  +
push [ebp+arg_8]  +
call sub_49C501  +
jmp loc_49D125  +
push [ebp+arg_8]  +
push 0  +
call sub_49C681  +
pop ecx  +
pop ecx  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C681  +
pop ecx  +
pop ecx  +
push 2  +
pop eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
movzx eax byte ptr [eax+308h] +
push eax  +
call sub_49C530  +
pop ecx  +
pop ecx  +
push 3  +
jmp loc_49D19B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
lea ecx [ebp+arg_4] +
push esi  +
push edi  +
call sub_4A0DC6  +
test al al +
jz loc_49D218  +
mov edi [ebp+arg_24] +
test edi edi +
jz loc_49D223  +
cmp edi 2 +
jl loc_49D208  +
cmp edi 24h +
jle loc_49D223  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
xor eax eax +
mov edx eax +
mov esi eax +
jmp loc_49D477  +
push ebx  +
push [ebp+arg_0]  +
lea ecx [ebp+var_40] +
call sub_4965C3  +
xor eax eax +
lea ecx [ebp+arg_4] +
mov [ebp+var_8] eax +
mov esi eax +
mov eax [ebp+arg_14] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_18] +
mov [ebp+var_2C] eax +
call sub_4A03AE  +
mov bl al +
lea eax [ebp+var_3C] +
push eax  +
push 8  +
movzx ecx bl +
push ecx  +
jmp loc_49D26C  +
lea ecx [ebp+arg_4] +
call sub_4A03AE  +
mov bl al +
lea eax [ebp+var_3C] +
push eax  +
push 8  +
movzx eax bl +
push eax  +
mov byte ptr [ebp+var_4] bl +
call sub_4966C4  +
add esp 0Ch +
test eax eax +
jnz loc_49D258  +
cmp [ebp+arg_28] al +
setnz al  +
mov [ebp+var_C] eax +
cmp bl 2Dh +
jnz loc_49D291  +
or eax 2 +
mov [ebp+var_C] eax +
jmp loc_49D296  +
cmp bl 2Bh +
jnz loc_49D2A3  +
lea ecx [ebp+arg_4] +
call sub_4A03AE  +
mov bl al +
mov byte ptr [ebp+var_4] bl +
or ecx 0FFFFFFFFh +
mov [ebp+var_10] ecx +
test edi edi +
jz loc_49D2B2  +
cmp edi 10h +
jnz loc_49D32D  +
mov al bl +
sub al 30h +
cmp al 9 +
ja loc_49D2C2  +
movsx eax bl +
add eax 0FFFFFFD0h +
jmp loc_49D2E4  +
mov al bl +
sub al 61h +
cmp al 19h +
ja loc_49D2D2  +
movsx eax bl +
add eax 0FFFFFFA9h +
jmp loc_49D2E4  +
mov al bl +
sub al 41h +
cmp al 19h +
ja loc_49D2E2  +
movsx eax bl +
add eax 0FFFFFFC9h +
jmp loc_49D2E4  +
mov eax ecx +
test eax eax +
jz loc_49D2F1  +
test edi edi +
jnz loc_49D32D  +
push 0Ah  +
pop edi  +
jmp loc_49D32D  +
lea ecx [ebp+arg_4] +
call sub_4A03AE  +
mov byte ptr [ebp+var_18] al +
cmp al 78h +
jz loc_49D318  +
cmp al 58h +
jz loc_49D318  +
test edi edi +
jnz loc_49D30B  +
push 8  +
pop edi  +
push [ebp+var_18]  +
lea ecx [ebp+arg_4] +
call sub_4A0D4A  +
jmp loc_49D32A  +
test edi edi +
jnz loc_49D31F  +
push 10h  +
pop edi  +
lea ecx [ebp+arg_4] +
call sub_4A03AE  +
mov byte ptr [ebp+var_4] al +
or ecx 0FFFFFFFFh +
mov eax edi +
cdq   +
push edx  +
push eax  +
push ecx  +
push ecx  +
mov [ebp+var_28] eax +
mov [ebp+var_24] edx +
call sub_4B6F70  +
mov [ebp+var_20] ecx +
mov cl byte ptr [ebp+var_4] +
mov [ebp+var_1C] ebx +
mov ebx [ebp+var_C] +
mov [ebp+var_14] eax +
mov [ebp+var_18] edx +
mov al cl +
sub al 30h +
cmp al 9 +
ja loc_49D361  +
movsx edx cl +
add edx 0FFFFFFD0h +
jmp loc_49D384  +
mov al cl +
sub al 61h +
cmp al 19h +
ja loc_49D371  +
movsx edx cl +
add edx 0FFFFFFA9h +
jmp loc_49D384  +
mov al cl +
sub al 41h +
cmp al 19h +
ja loc_49D381  +
movsx edx cl +
add edx 0FFFFFFC9h +
jmp loc_49D384  +
or edx 0FFFFFFFFh +
mov [ebp+var_C] edx +
cmp edx 0FFFFFFFFh +
jz loc_49D3EA  +
cmp edx edi +
jnb loc_49D3EA  +
mov ecx [ebp+var_8] +
or ebx 8 +
cmp esi [ebp+var_18] +
jb loc_49D3C0  +
mov eax [ebp+var_14] +
ja loc_49D3A4  +
cmp ecx eax +
jb loc_49D3C0  +
cmp ecx eax +
jnz loc_49D3BB  +
cmp esi [ebp+var_18] +
jnz loc_49D3BB  +
xor eax eax +
cmp eax [ebp+var_1C] +
jb loc_49D3C0  +
ja loc_49D3BB  +
cmp edx [ebp+var_20] +
jbe loc_49D3C0  +
or ebx 4 +
jmp loc_49D3D8  +
push esi  +
push ecx  +
push [ebp+var_24]  +
push [ebp+var_28]  +
call sub_4B6D70  +
add eax [ebp+var_C] +
mov esi edx +
mov [ebp+var_8] eax +
adc esi 0 +
lea ecx [ebp+arg_4] +
call sub_4A03AE  +
mov cl al +
mov byte ptr [ebp+var_4] cl +
jmp loc_49D351  +
push [ebp+var_4]  +
lea ecx [ebp+arg_4] +
call sub_4A0D4A  +
test bl 8 +
jnz loc_49D411  +
push [ebp+var_2C]  +
lea ecx [ebp+arg_4] +
push [ebp+var_30]  +
call sub_4A078A  +
xor eax eax +
mov [ebp+var_10] eax +
mov esi eax +
jmp loc_49D451  +
mov edi [ebp+var_8] +
push esi  +
push edi  +
push ebx  +
call sub_4959B2  +
add esp 0Ch +
test al al +
jz loc_49D456  +
call sub_497984  +
mov dword ptr [eax] 22h +
test bl 1 +
jnz loc_49D43C  +
or eax 0FFFFFFFFh +
mov edi eax +
mov esi eax +
jmp loc_49D462  +
test bl 2 +
jz loc_49D44C  +
and [ebp+var_10] 0 +
mov esi 80000000h +
jmp loc_49D451  +
mov esi 7FFFFFFFh +
mov edx [ebp+var_10] +
jmp loc_49D464  +
test bl 2 +
jz loc_49D462  +
neg edi  +
adc esi 0 +
neg esi  +
mov edx edi +
cmp [ebp+var_34] 0 +
pop ebx  +
jz loc_49D475  +
mov eax [ebp+var_40] +
and dword ptr [eax+350h] 0FFFFFFFDh +
xor eax eax +
mov edi [ebp+arg_1C] +
test edi edi +
jz loc_49D488  +
mov ecx [ebp+arg_14] +
or ecx [ebp+arg_18] +
jnz loc_49D488  +
mov [edi] al +
mov eax edx +
mov edx esi +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+4] 0 +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte ptr [ecx+4] 0 +
jz loc_49FEF0  +
or eax 0FFFFFFFFh +
mov edx 0FFFFFh +
retn   +
mov eax 7FFFFFh +
xor edx edx +
retn   +
***
mov edi edi +
add dword ptr [ecx+10h] 1 +
mov edx ecx +
lea edx [ecx+20h] +
mov edi edi +
mov eax [ecx+28h] +
cmp byte ptr [ecx+4] 0 +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ebx [esi+8] +
mov ecx ebx +
call sub_4A0DE7  +
test al al +
jnz loc_4A04D3  +
or eax 0FFFFFFFFh +
jmp loc_4A053C  +
push edi  +
lea edi [esi+18h] +
mov ecx edi +
call sub_4A0DAA  +
test al al +
jnz loc_4A04F2  +
or eax 0FFFFFFFFh +
jmp loc_4A053B  +
mov ecx esi +
call sub_4A06EF  +
test al al +
jz loc_4A04FD  +
mov ecx edi +
call sub_49D9C0  +
test al al +
jnz loc_4A04E7  +
cmp dword ptr [esi+74h] 0 +
mov edi [esi+70h] +
jnz loc_4A051C  +
mov ecx ebx +
call sub_4A03E8  +
cmp eax 0FFFFFFFFh +
jnz loc_4A0514  +
or edi eax +
push eax  +
mov ecx ebx +
call sub_4A0D8B  +
mov eax [esi] +
and eax 1 +
or eax 0 +
jz loc_4A0539  +
mov esi [esi+24h] +
test esi esi +
jz loc_4A0539  +
call sub_497984  +
mov [eax] esi +
call sub_495901  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [ecx+40h] +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
call sub_4A076D  +
push [ebp+arg_4]  +
lea eax [ebp-1] +
mov [ebp+var_1] 0 +
push [ebp+arg_0]  +
sub esp 20h +
mov ecx esp +
push eax  +
push dword ptr [esi+34h]  +
lea eax [esi+8] +
push dword ptr [esi+30h]  +
push eax  +
push ecx  +
call sub_49C80B  +
add esp 14h +
push dword ptr [esi+68h]  +
call sub_49D1E1  +
add esp 2Ch +
cmp [ebp+var_1] 0 +
jnz loc_4A0647  +
xor al al +
jmp loc_4A065C  +
cmp byte ptr [esi+2Eh] 0 +
jz loc_4A0651  +
mov al 1 +
jmp loc_4A065C  +
push 1  +
push edx  +
push eax  +
mov ecx esi +
call sub_4A0E7A  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ecx+8] +
mov edi edi +
mov edx [ecx+8] +
mov al [edx] +
cmp al 77h +
jnz loc_4A0B3F  +
lea eax [edx+1] +
mov [ecx+8] eax +
jmp loc_4A0B47  +
cmp al 43h +
jz loc_4A0B47  +
cmp al 53h +
jnz locret_4A0B4B  +
mov byte ptr [ecx+24h] 1 +
retn   +
***
mov edi edi +
mov eax [ecx+20h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Ah +
ja loc_4A0D18  +
jmp ds:off_4A0D1E[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_4A0D08  +
push 8  +
jmp loc_4A0D08  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+8] 0 +
cmp dword ptr [ecx] 0 +
mov eax [ecx+8] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_49C6C0  +
add esp 1Ch +
pop ebp  +
retn   +
***
cmp dword_4F6580 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4AD978  +
call sub_4B7010  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi 0FFFFh +
push edi  +
push 133Fh  +
call sub_4AC5D5  +
fld  [ebp+arg_0] +
mov esi eax +
pop ecx  +
pop ecx  +
movzx ecx word ptr [ebp+arg_0+6] +
mov eax 7FF0h +
and ecx eax +
cmp cx ax +
jnz loc_4A1E1A  +
push ecx  +
push ecx  +
fstp  [esp+1Ch+var_1C] +
call sub_4AC4EE  +
pop ecx  +
pop ecx  +
test eax eax +
jle loc_4A1DEE  +
cmp eax 2 +
jle loc_4A1E27  +
cmp eax 3 +
jnz loc_4A1DEE  +
fild  [ebp+arg_8] +
sub esp 10h +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  [esp+24h+var_1C] +
fld  [ebp+arg_0] +
fstp  [esp+24h+var_24] +
call sub_4A47CA  +
add esp 10h +
jmp loc_4A1F61  +
fld  [ebp+arg_0] +
fld  ds:qword_4BF6E0 +
fadd st st(1) +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
fstp  [esp+30h+var_30] +
push 19h  +
push 8  +
jmp loc_4A1F59  +
fldz   +
fucomp  st(1) +
fnstsw  ax +
test ah 44h +
jp loc_4A1E38  +
fstp  st +
push edi  +
push esi  +
call sub_4AC5D5  +
fld  [ebp+arg_0] +
pop ecx  +
pop ecx  +
jmp loc_4A1F61  +
lea eax [ebp+var_4] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_4AC3EB  +
mov ecx [ebp+arg_8] +
add esp 0Ch +
mov edx [ebp+var_4] +
test ecx ecx +
jns loc_4A1E60  +
mov eax 80000000h +
sub eax ecx +
cmp edx eax +
jl loc_4A1EB8  +
jmp loc_4A1E6F  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp edx eax +
jg loc_4A1F27  +
lea eax [edx+ecx] +
cmp eax 0A00h +
jg loc_4A1F27  +
cmp eax 400h +
jle loc_4A1EB1  +
add eax 0FFFFFA00h +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_4AC4BF  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
jmp loc_4A1F4F  +
cmp eax 0FFFFF603h +
jge loc_4A1EDD  +
fldz   +
fmulp st(1) st +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp+8] +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 12h  +
jmp loc_4A1F59  +
cmp eax 0FFFFFC03h +
jge loc_4A1F0A  +
add eax 600h +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_4AC4BF  +
add esp 0Ch +
push esi  +
sub esp 18h +
fstp  [esp+30h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
jmp loc_4A1ECD  +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+20h+var_24+4] +
call sub_4AC4BF  +
push edi  +
push esi  +
fstp  [ebp+var_C] +
call sub_4AC5D5  +
fld  [ebp+var_C] +
add esp 14h +
jmp loc_4A1F61  +
push esi  +
sub esp 10h +
fstp  [esp+28h+var_24+4] +
fld  ds:dbl_4D84E8 +
fstp  qword ptr [esp] +
call sub_49AA09  +
fstp  [esp+28h+var_24+4] +
fild  [ebp+arg_8] +
fstp  [ebp+var_C] +
fld  [ebp+var_C] +
fstp  qword ptr [esp] +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
fstp  [esp+30h+var_30] +
push 19h  +
push 11h  +
call sub_4A4508  +
add esp 24h +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
movq qword ptr [ecx] xmm1 +
subsd xmm6 xmm1 +
orpd xmm6 xmm4 +
movq qword ptr [esp+4] xmm6 +
fld  qword ptr [esp+4] +
retn   +
***
movq qword ptr [ecx] xmm4 +
fld  qword ptr [esp+4] +
retn   +
***
movq qword ptr [ecx] xmm0 +
cmp edx 800h +
fldz   +
jl locret_4A2048  +
fchs   +
retn   +
***
movq qword ptr [esp+4] xmm0 +
fld  qword ptr [esp+4] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4EEF3C +
mov ecx eax +
xor eax dword_4F5C60 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_4A2240  +
pop ecx  +
mov dword_4F5C60 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4F5D70 +
mov eax dword_4F5D74 +
cmp dword_4F5D70 0 +
cmp dword_4F5D74 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4A29E0  +
mov eax dword_4F5D7C +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
call sub_489C30  +
mov eax [ebp+10h] +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
retn   +
***
mov edi edi +
call sub_489C30  +
pop ecx  +
call sub_489C30  +
mov eax [ebp+10h] +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4AAE89  +
mov [esp+4+var_4] offset unk_4F5DB4 +
call sub_4A2A60  +
mov al 1 +
retn   +
***
call sub_4B194A  +
call sub_4B19CD  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
cmp dword ptr [ebp-20h] 0 +
call sub_489C30  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
retn   +
***
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_4A770D  +
push [ebp+arg_4]  +
call sub_4A76A7  +
pop ecx  +
jmp loc_4A7731  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_4A771E  +
push edi  +
call sub_4A7A05  +
pop ecx  +
jmp loc_4A772E  +
cmp esi 0FFFFFFE0h +
jbe loc_4A7748  +
call sub_497984  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4A3E25  +
test eax eax +
jz loc_4A7723  +
push esi  +
call sub_4A3E74  +
pop ecx  +
test eax eax +
jz loc_4A7723  +
push esi  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_4A7734  +
jmp loc_4A7730  +
***
cmp dword_4F6580 0 +
jz sub_4A77F4  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4A7794  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz sub_4A77F4  +
jmp sub_4B2A09  +
***
jmp loc_4B29F0  +
***
lea edx [esp+arg_8] +
fld  st +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
test edx edx +
jz loc_4A7AA0  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_4A7AA0  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_4A7AB4  +
xor eax eax +
mov [edx] ax +
call sub_497984  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_495901  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
push edi  +
mov edi edx +
sub esi edx +
movzx eax word ptr [esi+edi] +
mov [edi] ax +
lea edi [edi+2] +
test ax ax +
jz loc_4A7ACD  +
sub ecx 1 +
jnz loc_4A7AB9  +
pop edi  +
test ecx ecx +
jnz loc_4A7AE0  +
xor eax eax +
mov [edx] ax +
call sub_497984  +
push 22h  +
jmp loc_4A7AA7  +
xor esi esi +
jmp loc_4A7AAF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_4F5858 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4A7B71  +
mov esi [ebp+8] +
mov edx esi +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_4A7B11  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_4A7B24  +
cmp byte ptr [ecx] 0 +
jz loc_4A7B24  +
inc ecx  +
cmp ecx edi +
jnz loc_4A7B1A  +
sub ecx esi +
cmp ecx edx +
jnz loc_4A7C05  +
mov edi eax +
add ecx esi +
sub edi edx +
mov eax edi +
and eax 1Fh +
sub edi eax +
cmp eax 1 +
jl loc_4A7BEB  +
mov esi [ebp+8] +
mov edx esi +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
cmp eax edx +
jnb loc_4A7B92  +
mov edx eax +
lea edi [edx+esi] +
mov ecx esi +
cmp esi edi +
jz loc_4A7BA5  +
cmp byte ptr [ecx] 0 +
jz loc_4A7BA5  +
inc ecx  +
cmp ecx edi +
jnz loc_4A7B9B  +
sub ecx esi +
cmp ecx edx +
jnz loc_4A7C05  +
mov edi eax +
add ecx esi +
sub edi edx +
pxor xmm1 xmm1 +
mov eax edi +
and eax 0Fh +
sub edi eax +
add edi ecx +
jmp loc_4A7BD2  +
movaps xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4A7BD6  +
add ecx 10h +
cmp ecx edi +
jnz loc_4A7BC0  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_4A7BE3  +
cmp byte ptr [ecx] 0 +
jz loc_4A7BE7  +
inc ecx  +
cmp ecx eax +
jnz loc_4A7BDD  +
sub ecx esi +
jmp loc_4A7C05  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_4A7C03  +
cmp byte ptr [ecx] 0 +
jz loc_4A7C03  +
inc ecx  +
cmp ecx eax +
jnz loc_4A7BF9  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_4F5858 +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4A7CE0  +
test cl 1 +
jz loc_4A7C50  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_4A7C6B  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_4A7C87  +
cmp [edx] di +
jz loc_4A7C87  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_4A7C7A  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_4A7DBA  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
leave   +
lea ecx [edx+ecx*2] +
jmp loc_4A7CB9  +
cmp edx ecx +
jnz near ptr word_4A7CAA  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
lea ecx [eax+ecx*2] +
jmp loc_4A7CD0  +
cmp [edx] di +
jz loc_4A7CD4  +
add edx 2 +
cmp edx ecx +
jnz loc_4A7CC8  +
sub edx eax +
sar edx 1 +
mov edi edi +
call sub_489C30  +
mov eax [ebp+10h] +
call sub_489C30  +
mov eax [ebp+10h] +
call sub_489C30  +
mov eax [ebp+10h] +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_4EF240 eax +
mov eax dword_4EF240 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov ecx [ebp+10h] +
mov edi edi +
push offset aComparestringe  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4A8ADF  +
mov eax dword_4EEF3C +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_4A9C6C  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
mov eax [eax+10h] +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_489C30  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
shr eax 0Dh +
test al 1 +
jz loc_4AA11F  +
mov eax [edi] +
shr eax 6 +
test al 1 +
jz loc_4AA11F  +
push dword ptr [esi+4]  +
call sub_4A7A05  +
pop ecx  +
mov eax 0FFFFFEBFh +
and [edi] eax +
xor eax eax +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+8] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea ecx [ebp+var_10] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
call sub_4965C3  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_4AA687  +
xor esi esi +
jmp loc_4AA714  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_4AA695  +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_4AA6AC  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
mov esi 7FFFFFFFh +
jmp loc_4AA714  +
mov esi 7FFFFFFFh +
cmp eax esi +
jbe loc_4AA6C7  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
jmp loc_4AA714  +
mov edi [ebp+var_C] +
mov ebx [edi+0A4h] +
test ebx ebx +
jnz loc_4AA6E7  +
lea esi [ebp+var_C] +
push esi  +
push eax  +
push edx  +
push ecx  +
call sub_4B3DF3  +
add esp 10h +
mov esi eax +
jmp loc_4AA714  +
push dword ptr [edi+10h]  +
push eax  +
push edx  +
push eax  +
push ecx  +
push 1001h  +
lea eax [ebp+var_C] +
push ebx  +
push eax  +
call sub_4B4152  +
add esp 20h +
test eax eax +
jnz loc_4AA711  +
call sub_497984  +
mov dword ptr [eax] 16h +
jmp loc_4AA714  +
lea esi [eax-2] +
cmp [ebp+var_4] 0 +
jz loc_4AA724  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4AAE89  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
call sub_489C30  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_4EEF3C +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_4965C3  +
push [ebp+arg_20]  +
lea eax [ebp+var_C] +
push [ebp+CodePage]  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+arg_10]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_4AC6D2  +
add esp 24h +
cmp [ebp+var_4] 0 +
jz loc_4AC936  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov esp ebp +
pop ebp  +
retn   +
***
add esp 0FFFFFD30h +
push ebx  +
fstcw  [ebp+var_A4] +
wait   +
push eax  +
push ecx  +
push edx  +
call sub_4A225F  +
cmp al 0 +
pop edx  +
pop ecx  +
pop eax  +
jnz loc_4AC975  +
call sub_4ACC37  +
or [ebp+var_2C8] 3 +
call sub_4ACA0F  +
pop ebx  +
leave   +
retn   +
fxch  st(1) +
fst  [ebp+var_86] +
fxch  st(1) +
fst  [ebp+var_7E] +
jmp loc_4AC961  +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFD30h +
push ebx  +
fstcw  word ptr [ebp-0A4h] +
push eax  +
push ecx  +
push edx  +
call sub_4A225F  +
cmp al 0 +
pop edx  +
pop ecx  +
pop eax  +
jnz loc_4AC9BF  +
call sub_4ACBD0  +
or byte ptr [ebp-2C8h] 1 +
and byte ptr [ebp-2C8h] 0FDh +
call sub_4ACA0F  +
pop ebx  +
leave   +
retn   +
***
fst  qword ptr [ebp-86h] +
jmp loc_4AC9A4  +
***
and byte ptr [ebp-2C8h] 0FEh +
***
cmp dword_4F62F4 0 +
jnz loc_4ACA67  +
fst  qword ptr [ebp-2D0h] +
mov al [ebp-90h] +
or al al +
jz loc_4ACA42  +
cmp al 0FFh +
jz loc_4ACA87  +
cmp al 0FEh +
jz loc_4ACA6F  +
or al al +
jz loc_4ACA67  +
movsx eax al +
mov [ebp-8Eh] eax +
jmp loc_4ACAF4  +
mov ax [ebp-0A4h] +
and ax 20h +
jnz loc_4ACA67  +
fstsw  ax +
and ax 20h +
jz loc_4ACA67  +
mov dword ptr [ebp-8Eh] 8 +
jmp loc_4ACAF4  +
fldcw  word ptr [ebp-0A4h] +
wait   +
retn   +
mov ax [ebp-2CAh] +
and ax 7FF0h +
or ax ax +
jz loc_4ACA9A  +
cmp ax 7FF0h +
jz loc_4ACAC8  +
jmp loc_4ACA42  +
mov ax [ebp-2CAh] +
and ax 7FF0h +
cmp ax 7FF0h +
jz loc_4ACAC8  +
jmp loc_4ACA42  +
mov dword ptr [ebp-8Eh] 4 +
fld  ds:dbl_4D8538 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_4D8528 +
fstsw  ax +
sahf   +
jnb loc_4ACAF4  +
fmul  ds:dbl_4D8548 +
jmp loc_4ACAF4  +
mov dword ptr [ebp-8Eh] 3 +
fld  ds:dbl_4D8530 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_4D8520 +
fstsw  ax +
sahf   +
jbe loc_4ACAF4  +
fmul  ds:dbl_4D8540 +
push esi  +
push edi  +
mov ebx [ebp-94h] +
inc ebx  +
mov [ebp-8Ah] ebx +
test byte ptr [ebp-2C8h] 1 +
jnz loc_4ACB26  +
cld   +
lea esi [ebp+8] +
lea edi [ebp-86h] +
movs   +
movs   +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_4ACB26  +
lea esi [ebp+10h] +
lea edi [ebp-7Eh] +
movs   +
movs   +
fstp  qword ptr [ebp-76h] +
lea eax [ebp-8Eh] +
lea ebx [ebp-0A4h] +
push ebx  +
push eax  +
mov ebx [ebp-94h] +
mov al [ebx+0Eh] +
movsx eax al +
push eax  +
call sub_4B5B2B  +
add esp 0Ch +
pop edi  +
pop esi  +
fld  qword ptr [ebp-76h] +
jmp loc_4ACA67  +
***
add esp 0FFFFFFF4h +
push ebx  +
mov ax word ptr [ebp+arg_0+6] +
mov bx ax +
and ax 7FF0h +
cmp ax 7FF0h +
jnz loc_4ACBBF  +
or bx 7FFFh +
mov [ebp+var_2] bx +
mov eax [ebp+0Ch] +
mov ebx dword ptr [ebp+arg_0] +
shld eax ebx +
mov [ebp-6] eax +
mov [ebp+var_A] ebx +
fld  tbyte ptr [ebp+var_A] +
jmp loc_4ACBC2  +
fld  [ebp+arg_0] +
pop ebx  +
leave   +
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4ACC4E  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4ACC52  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_4D857E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_4ACD96  +
***
retn   +
***
call sub_4ACD96  +
jmp sub_4ACCCA  +
***
fstp  st +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_4ACCE7  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fstp  tbyte ptr [ebp-9Eh] +
fstp  tbyte ptr [ebp-9Eh] +
fstp  st +
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_4D8564 +
or ch ch +
jz loc_4ACDB0  +
fchs   +
or cl cl +
jz locret_4ACDBC  +
fld  ds:dbl_4D8576 +
fmulp st(1) st +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_4F62B4 0 +
push esi  +
push edi  +
jz loc_4ACDF1  +
push dword_4F6584  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_4ACDF6  +
mov edi offset sub_4A228C +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_4ACF23  +
jz loc_4ACF17  +
cmp eax 0Eh +
jg loc_4ACEB8  +
jz loc_4ACEA5  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_4ACE96  +
sub eax 1 +
jz loc_4ACE8D  +
sub eax 5 +
jz loc_4ACE7E  +
sub eax 1 +
jnz loc_4ACFCC  +
mov [ebp+var_20] offset aLog10 +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_4BC358  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4ACFC7  +
call sub_497984  +
mov dword ptr [eax] 21h +
jmp loc_4ACFC7  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset aLog10 +
jmp loc_4ACF91  +
mov [ebp+var_20] offset unk_4D71A0 +
jmp loc_4ACE38  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset unk_4D71A0 +
jmp loc_4ACF91  +
mov [ebp+var_24] 3 +
mov [ebp+var_20] offset unk_4D7198 +
jmp loc_4ACF91  +
sub eax 0Fh +
jz loc_4ACF0E  +
sub eax 9 +
jz loc_4ACF05  +
sub eax 1 +
jnz loc_4ACFCC  +
mov [ebp+var_20] offset unk_4D719C +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_4BC358  +
call edi  +
pop ecx  +
jmp loc_4ACFC7  +
mov [ebp+var_24] 3 +
jmp loc_4ACF8A  +
mov [ebp+var_20] offset unk_4D7198 +
jmp loc_4ACED2  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_4ACFCC  +
sub eax 1Bh +
jz loc_4ACF83  +
sub eax 1 +
jz loc_4ACF77  +
sub eax 15h +
jz loc_4ACF6B  +
sub eax 9 +
jz loc_4ACF5F  +
sub eax 3 +
jz loc_4ACF53  +
sub eax 3ABh +
jz loc_4ACF4C  +
sub eax 1 +
jnz loc_4ACFCC  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_4ACF19  +
mov [ebp+var_20] offset aAsin +
jmp loc_4ACE38  +
mov [ebp+var_20] offset aAcos +
jmp loc_4ACE38  +
mov [ebp+var_20] offset aSqrt +
jmp loc_4ACE38  +
mov [ebp+var_20] offset unk_4D719C +
jmp loc_4ACE38  +
mov [ebp+var_24] 2 +
mov [ebp+var_20] offset unk_4D719C +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_4BC358  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4ACFC7  +
call sub_497984  +
mov dword ptr [eax] 22h +
fld  [ebp+var_C] +
fstp  qword ptr [esi] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_4F6580 0 +
jz sub_4AD06F  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_4AD014  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz sub_4AD06F  +
jmp loc_4B5C58  +
***
cmp dword_4F6580 0 +
lea edx [esp+arg_0] +
jz loc_4AD0CB  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
lea esi [ebp+var_10] +
push 2  +
pop ecx  +
push 20h  +
stos   +
stos   +
mov edi ebx +
movs   +
movs   +
movs   +
mov eax dword_4F5DA0 +
mov esi [ebp+arg_4] +
mov [ebx+4] eax +
pop edi  +
jmp loc_4AD395  +
add esi ecx +
cmp [esi] di +
jz loc_4AD393  +
movzx eax word ptr [esi] +
xor edx edx +
cmp eax 61h +
jz loc_4AD3C5  +
cmp eax 72h +
jz loc_4AD3BA  +
cmp eax 77h +
jnz loc_4AD58D  +
mov dword ptr [ebx] 301h +
jmp loc_4AD3CB  +
mov [ebx] edx +
mov dword ptr [ebx+4] 1 +
jmp loc_4AD3CE  +
mov dword ptr [ebx] 109h +
mov [ebx+4] ecx +
add esi ecx +
mov [ebp-3] dl +
xor ch ch +
mov [ebp+var_4] dl +
mov [ebp+var_2] dl +
mov cl 1 +
mov [ebp+var_1] ch +
movzx eax word ptr [esi] +
test ax ax +
jz loc_4AD4C9  +
cmp eax 53h +
jg loc_4AD461  +
jz loc_4AD44F  +
sub eax edi +
jz loc_4AD4B2  +
sub eax 0Bh +
jz loc_4AD442  +
sub eax 1 +
jz loc_4AD439  +
sub eax 18h +
jz loc_4AD431  +
sub eax 0Ah +
jz loc_4AD424  +
sub eax 4 +
jnz loc_4AD58D  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_4AD43E  +
or dword ptr [ebx] 10h +
jmp loc_4AD458  +
or dword ptr [ebx] 80h +
mov cl 1 +
jmp loc_4AD4B2  +
push ebx  +
call sub_4AD6B0  +
jmp loc_4AD4AC  +
mov ch 1 +
mov [ebp+var_1] ch +
xor cl cl +
jmp loc_4AD4B5  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_4AD74E  +
pop ecx  +
jmp loc_4AD4AC  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_4AD43E  +
or [ebx] edi +
mov dl 1 +
mov [ebp+var_2] dl +
mov cl dl +
jmp loc_4AD4B5  +
sub eax 54h +
jz loc_4AD4A6  +
sub eax 0Eh +
jz loc_4AD49E  +
sub eax 1 +
jz loc_4AD492  +
sub eax 0Bh +
jz loc_4AD486  +
sub eax 6 +
jnz loc_4AD58D  +
push ebx  +
call sub_4AD783  +
jmp loc_4AD4AC  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_4AD72C  +
jmp loc_4AD44C  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_4AD70A  +
jmp loc_4AD44C  +
push ebx  +
call sub_4AD6EA  +
jmp loc_4AD4AC  +
push ebx  +
call sub_4AD6CB  +
mov dl [ebp+var_2] +
pop ecx  +
mov cl al +
mov ch [ebp+var_1] +
xor eax eax +
test cl cl +
setnz al  +
lea esi [esi+eax*2] +
test cl cl +
jnz loc_4AD3E0  +
jmp loc_4AD4CC  +
mov ch [ebp+var_1] +
test ch ch +
jz loc_4AD4D3  +
add esi 2 +
cmp [esi] di +
jz loc_4AD4D0  +
test ch ch +
jnz loc_4AD4F0  +
xor eax eax +
cmp [esi] ax +
jnz loc_4AD58D  +
mov byte ptr [ebx+8] 1 +
jmp loc_4AD59D  +
push 3  +
push offset aCcs  +
push esi  +
call sub_4A1D46  +
add esp 0Ch +
test eax eax +
jnz loc_4AD58D  +
add esi 6 +
jmp loc_4AD510  +
add esi 2 +
cmp [esi] di +
jz loc_4AD50D  +
cmp word ptr [esi] 3Dh +
jnz loc_4AD58D  +
add esi 2 +
cmp [esi] di +
jz loc_4AD51B  +
push 5  +
push offset aUtf8_2  +
push esi  +
call sub_4B5ED0  +
add esp 0Ch +
test eax eax +
jnz loc_4AD542  +
add esi 0Ah +
or dword ptr [ebx] 40000h +
jmp loc_4AD583  +
push 8  +
push offset aUtf16leunico_0  +
push esi  +
call sub_4B5ED0  +
add esp 0Ch +
test eax eax +
jnz loc_4AD561  +
add esi 10h +
or dword ptr [ebx] 20000h +
jmp loc_4AD583  +
push 7  +
push (offset aUtf16leunico_0+10h)  +
push esi  +
call sub_4B5ED0  +
add esp 0Ch +
test eax eax +
jnz loc_4AD58D  +
add esi 0Eh +
or dword ptr [ebx] 10000h +
jmp loc_4AD583  +
add esi 2 +
cmp [esi] di +
jz loc_4AD580  +
jmp loc_4AD4DC  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
push [ebp+arg_4]  +
lea eax [ebp+var_1C] +
push eax  +
call sub_4AD130  +
mov esi eax +
lea edi [ebp+var_10] +
pop ecx  +
pop ecx  +
movs   +
movs   +
movs   +
cmp [ebp+var_8] 0 +
pop edi  +
pop esi  +
jnz loc_4AD5D2  +
xor eax eax +
jmp loc_4AD627  +
push 180h  +
push [ebp+arg_8]  +
lea eax [ebp+var_4] +
push [ebp+var_10]  +
push [ebp+arg_0]  +
push eax  +
call sub_4A6B28  +
add esp 14h +
test eax eax +
jnz loc_4AD5CE  +
mov eax [ebp+arg_C] +
inc dword_4F5C40  +
add eax 0Ch +
mov ecx [ebp+var_C] +
or [eax] ecx +
mov eax [ebp+arg_C] +
xor ecx ecx +
mov [eax+8] ecx +
mov eax [ebp+arg_C] +
mov [eax+1Ch] ecx +
mov eax [ebp+arg_C] +
mov [eax+4] ecx +
mov eax [ebp+arg_C] +
mov [eax] ecx +
mov ecx [ebp+arg_C] +
mov eax [ebp+var_4] +
mov [ecx+10h] eax +
mov eax [ebp+arg_C] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_4B5940  +
mov dword_4F6580 eax +
xor eax eax +
retn   +
***
call sub_489C30  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push 3  +
call sub_4AD8E6  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_4A81AC  +
call sub_4B7010  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_4ADBA1  +
push 3  +
call sub_4A6F1A  +
pop ecx  +
retn   +
***
push esi  +
mov ecx [ebp-24h] +
call ds:off_4BC358  +
call dword ptr [ebp-24h]  +
pop ecx  +
cmp esi edi +
jz loc_4ADBBE  +
cmp esi 0Bh +
jz loc_4ADBBE  +
cmp esi 4 +
jnz loc_4ADBD3  +
mov eax [ebp-30h] +
mov [ebx+4] eax +
cmp esi edi +
jnz loc_4ADBD3  +
call sub_4A81AC  +
mov ecx [ebp-34h] +
mov [eax+8] ecx +
xor eax eax +
call sub_4B7059  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4ADBDB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4ADDC7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_4AE183  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_4AE183  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_4AE199  +
xor eax eax +
mov [edi] ax +
call sub_497984  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_495901  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov edx edi +
xor esi esi +
cmp [edx] si +
jz loc_4AE1AA  +
add edx 2 +
sub ecx 1 +
jnz loc_4AE19D  +
test ecx ecx +
jz loc_4AE17E  +
sub ebx edx +
movzx eax word ptr [ebx+edx] +
mov [edx] ax +
lea edx [edx+2] +
test ax ax +
jz loc_4AE1C4  +
sub ecx 1 +
jnz loc_4AE1B0  +
test ecx ecx +
jnz loc_4AE192  +
xor eax eax +
mov [edi] ax +
call sub_497984  +
push 22h  +
jmp loc_4AE18A  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_4AE2C0  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte_4F62E4 0 +
call sub_489C30  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_4AEFB5  +
xor edi edi +
jmp loc_4AEFEC  +
push ebx  +
push esi  +
call sub_4AEEE7  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax] +
push ebx  +
call sub_4A76A7  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_4AEFDC  +
push ebx  +
push esi  +
push edi  +
call loc_48C9C0  +
add esp 0Ch +
push 0  +
call sub_4A7A05  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_489C30  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea ecx [ebp+var_18] +
call sub_4965C3  +
mov eax [ebp+var_14] +
xor edi edi +
push edi  +
push edi  +
push [ebp+LCType]  +
mov eax [eax+8] +
push [ebp+arg_4]  +
mov [ebp+CodePage] eax +
call sub_4A8EFD  +
mov ebx eax +
test ebx ebx +
jz loc_4B2809  +
lea edx [ebx+ebx] +
lea ecx [edx+8] +
cmp edx ecx +
sbb eax eax +
test eax ecx +
jz loc_4B27CE  +
lea ecx [edx+8] +
cmp edx ecx +
sbb eax eax +
and eax ecx +
lea ecx [edx+8] +
cmp eax 400h +
ja loc_4B27B0  +
cmp edx ecx +
sbb eax eax +
and eax ecx +
call sub_4B6D40  +
mov esi esp +
test esi esi +
jz loc_4B2802  +
mov dword ptr [esi] 0CCCCh +
jmp loc_4B27C9  +
cmp edx ecx +
sbb eax eax +
and eax ecx +
push eax  +
call sub_4A76A7  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_4B2802  +
mov dword ptr [esi] 0DDDDh +
add esi 8 +
jmp loc_4B27D0  +
mov esi edi +
test esi esi +
jz loc_4B2802  +
push ebx  +
push esi  +
push [ebp+LCType]  +
push [ebp+arg_4]  +
call sub_4A8EFD  +
test eax eax +
jz loc_4B2802  +
mov eax [ebp+cchMultiByte] +
push edi  +
push edi  +
push eax  +
neg eax  +
sbb eax eax +
and eax [ebp+arg_C] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
push edi  +
push [ebp+CodePage]  +
call ds:WideCharToMultiByte  +
mov edi eax +
push esi  +
call sub_48AB32  +
pop ecx  +
cmp [ebp+var_C] 0 +
jz loc_4B2819  +
mov eax [ebp+var_18] +
and dword ptr [eax+350h] 0FFFFFFFDh +
mov eax edi +
lea esp [ebp-24h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
push ebx  +
mov ebx [ebp+18h] +
push esi  +
mov esi [ebp+10h] +
push edi  +
xor edi edi +
mov [ebp-90h] ecx +
mov [ebp-88h] esi +
mov [ebx] edi +
cmp eax 1 +
jnz loc_4B294E  +
push 80h  +
lea eax [ebp-84h] +
push eax  +
push dword ptr [ebp+14h]  +
push esi  +
push ecx  +
call sub_4B2734  +
add esp 14h +
mov [ebp-8Ch] eax +
test eax eax +
jz loc_4B28D5  +
push 1  +
push eax  +
call sub_4A713D  +
push edi  +
mov [ebx] eax +
call sub_4A7A05  +
add esp 0Ch +
cmp [ebx] edi +
jz loc_4B29C2  +
mov ecx [ebp-8Ch] +
lea eax [ecx-1] +
push eax  +
lea eax [ebp-84h] +
push eax  +
push ecx  +
push dword ptr [ebx]  +
call sub_4985ED  +
add esp 10h +
test eax eax +
jnz loc_4B29D6  +
xor eax eax +
jmp loc_4B29C5  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_4B29C2  +
push edi  +
push edi  +
push dword ptr [ebp+14h]  +
push esi  +
push dword ptr [ebp-90h]  +
call sub_4B2734  +
add esp 14h +
mov [ebp-8Ch] eax +
test eax eax +
jz loc_4B29C2  +
push 1  +
push eax  +
call sub_4A713D  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_4B2940  +
push dword ptr [ebp-8Ch]  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-88h]  +
push dword ptr [ebp-90h]  +
call sub_4B2734  +
add esp 14h +
test eax eax +
jz loc_4B2940  +
mov eax esi +
mov esi edi +
mov [ebx] eax +
jmp loc_4B2943  +
or edi 0FFFFFFFFh +
push esi  +
call sub_4A7A05  +
pop ecx  +
mov eax edi +
jmp loc_4B29C5  +
cmp eax 2 +
jnz loc_4B298F  +
push edi  +
push edi  +
push dword ptr [ebp+14h]  +
push esi  +
call sub_4A8EFD  +
mov [ebp-8Ch] eax +
test eax eax +
jz loc_4B29C2  +
push 2  +
push eax  +
call sub_4A713D  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_4B2940  +
push dword ptr [ebp-8Ch]  +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-88h]  +
call sub_4A8EFD  +
jmp loc_4B2934  +
***
test eax eax +
jnz loc_4B29C2  +
push 2  +
lea eax [ebp-88h] +
mov [ebp-88h] edi +
push eax  +
mov eax [ebp+14h] +
or eax 20000000h +
push eax  +
push esi  +
call sub_4A8EFD  +
test eax eax +
jz loc_4B29C2  +
mov al [ebp-88h] +
mov [ebx] al +
jmp loc_4B28CE  +
***
or eax 0FFFFFFFFh +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_49592E  +
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_4DD470 +
movlpd xmm2 oword ptr ds:oword_4DD480 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4D8DC0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4D8DC0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4D91D0[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_4B2D57  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_4DD4C0+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_4DD470 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_4D99E0[eax*4] +
mulsd xmm5 ds:qword_4D99E0[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_4D9DF0[eax*4] +
orpd xmm4 oword ptr ds:oword_4DD480 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_4DD4C0+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_4DD4D0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_4DA600[eax*4] +
mulsd xmm2 ds:qword_4DA600[eax*4] +
addpd xmm6 oword ptr ds:oword_4DAE10[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_4DD4C0+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_4B30C8  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_4B348A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4DD4C0+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_4DBE20 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_4DBE30 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_4B320E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4DD460 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4DD460 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4DBE40[eax] +
movapd xmm6 oword ptr ds:oword_4DD4A0 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4DD4C0 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4DD4B0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_4DD490 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_4B2E60  +
or eax ecx +
cmp eax 0 +
jz loc_4B3185  +
cmp edx 0 +
jge loc_4B2E9F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_4B2F88  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_4B3081  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_4DD490 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_4DD4F0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_4B2EA4  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_4DD470 +
movlpd xmm2 oword ptr ds:oword_4DD480 +
jmp loc_4B2A86  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_4B30FD  +
ja loc_4B306F  +
cmp edx 0 +
ja loc_4B306F  +
jmp loc_4B30FD  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_4DD470 +
movlpd xmm2 oword ptr ds:oword_4DD480 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_4B2F2A  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_4DD490 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_4D8DC0[eax*4] +
movlpd xmm5 oword ptr ds:oword_4D8DC0[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_4D91D0[eax*4] +
mov edx 43E7Fh +
jmp loc_4B2A86  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_4B2ED8  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_4B2F77  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_4DD480 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_4B31DE  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_4B3029  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_4DD470 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_4B306F  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_4B3053  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_4B3037  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_4DD490 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_4B3037  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4B3030  +
fld  qword ptr ds:oword_4DD4F0 +
retn   +
fld  ds:dbl_4DD4E8 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4B316F  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_4B316F  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_4B31DE  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_4B2F2A  +
movlpd xmm1 oword ptr ds:oword_4DD4D0+8 +
movlpd xmm0 oword ptr ds:oword_4DD510 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_4B31DE  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_4B30FD  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_4B31DB  +
cmp edx 0BFF00000h +
jnz loc_4B30FD  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_4DD470 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_4B3176  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_4B31DB  +
cmp eax 0 +
jz loc_4B315B  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_4B316F  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_4B316F  +
fldz   +
retn   +
fld  ds:dbl_4DD4E0 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_4B31DE  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_4DD480 +
mov edx 1Ah +
cmp eax 0 +
jz loc_4B31DE  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_4B31DE  +
jb loc_4B31CA  +
cmp ecx 0 +
ja loc_4B31DE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_4ACDC4  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_4B323B  +
cmp eax 40000h +
jnb loc_4B345A  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_4B3261  +
cmp eax 0FFFC0200h +
jle loc_4B3437  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_4DD460 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_4DD460 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_4DBE40[eax] +
movapd xmm6 oword ptr ds:oword_4DD4A0 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4DD4C0 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4DD4B0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_4B33ED  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_4B31DE  +
mov edx 19h +
cmp eax 0 +
jz loc_4B31DE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_4B31DE  +
mov edx 19h +
cmp eax 0 +
jz loc_4B31DE  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4DD500+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_4B31DE  +
mov edx 18h +
cmp ecx 0 +
jz loc_4B3479  +
movlpd xmm0 oword ptr ds:oword_4DD4F0+8 +
mulsd xmm0 qword ptr ds:oword_4DD500 +
jmp loc_4B31DE  +
movlpd xmm0 oword ptr ds:oword_4DD500 +
mulsd xmm0 xmm0 +
jmp loc_4B31DE  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_4B2BD8  +
cmp eax 80000000h +
jb loc_4B34DE  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_4B3437  +
jmp loc_4B345A  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_4B365E  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_4B3544  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_4B354B  +
fscale   +
or ch ch +
jz loc_4B3551  +
fchs   +
jmp loc_4ACCC8  +
***
call sub_4B36A1  +
or eax eax +
jz loc_4B3573  +
xor ch ch +
cmp eax 2 +
jz loc_4B3568  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_4B351D  +
***
jmp loc_4ACCE8  +
***
jmp sub_4ACD83  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_4DD520 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_4B3573  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_4DD52A +
retn   +
***
or cl cl +
jnz loc_4B360B  +
retn   +
***
fldlg2   +
jmp loc_4B35BF  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_4B3573  +
fyl2x   +
retn   +
***
jmp loc_4ACCE8  +
***
call sub_4B36A1  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_4B35E8  +
fldz   +
cmp eax 1 +
jnz locret_4B35E7  +
or ch ch +
jz locret_4B35E7  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_4DD520 +
cmp eax 1 +
jnz locret_4B35E7  +
or ch ch +
jz locret_4B35E7  +
fchs   +
jmp locret_4B35E7  +
***
fstp  st +
***
jmp loc_4ACCD6  +
***
fstp  st +
jmp loc_4ACD85  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_4B3633  +
fstp  st +
fld  ds:tbyte_4DD520 +
or ch ch +
jz locret_4B3632  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_4ACCD6  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_4B36C7  +
fld  st +
fmul  ds:dbl_4DD552 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_4B36CE  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_4B36C6  +
mov eax 2 +
jmp locret_4B36C6  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_4B3966  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_4B3706  +
jmp sub_4ACD96  +
***
retn   +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov [ebp+var_20] eax +
fstp  [ebp+var_8] +
mov [ebp+var_1C] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_C] +
mov [ebp+var_18] eax +
mov [ebp+var_14] ecx +
lea eax [ebp+arg_0] +
lea ecx [ebp+var_20] +
push eax  +
push ecx  +
push edx  +
call sub_4B5B2B  +
add esp 0Ch +
fld  [ebp+var_8] +
cmp word ptr [ebp+arg_0] 27Fh +
jz locret_4B3761  +
fldcw  word ptr [ebp+arg_0] +
leave   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_4B3809  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+4+var_4] 27Fh +
jz loc_4B3819  +
fldcw  [esp+4+var_4] +
pop edx  +
retn   +
***
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_4B3843  +
and ax 20h +
jz loc_4B3840  +
fstsw  ax +
and ax 20h +
jz loc_4B3840  +
mov eax 8 +
call sub_4B3727  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
sub esp 88h +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebx+10h] +
push esi  +
mov esi [ebx+0Ch] +
push edi  +
movzx ecx word ptr [eax] +
mov [ebp+var_84] ecx +
mov eax [esi] +
sub eax 1 +
jz loc_4B5B93  +
sub eax 1 +
jz loc_4B5B8F  +
sub eax 1 +
jz loc_4B5B8B  +
sub eax 1 +
jz loc_4B5B87  +
sub eax 1 +
jz loc_4B5B93  +
sub eax 3 +
jnz loc_4B5BF5  +
push 10h  +
jmp loc_4B5B95  +
push 12h  +
jmp loc_4B5B95  +
push 11h  +
jmp loc_4B5B95  +
push 4  +
jmp loc_4B5B95  +
push 8  +
pop edi  +
push ecx  +
lea eax [esi+18h] +
push eax  +
push edi  +
call sub_4A45EA  +
add esp 0Ch +
test eax eax +
jnz loc_4B5BEF  +
mov ecx [ebx+8] +
cmp ecx 10h +
jz loc_4B5BC0  +
cmp ecx 16h +
jz loc_4B5BC0  +
cmp ecx 1Dh +
jz loc_4B5BC0  +
and [ebp+var_40] 0FFFFFFFEh +
jmp loc_4B5BD2  +
mov eax [ebp+var_40] +
fld  qword ptr [esi+10h] +
and eax 0FFFFFFE3h +
or eax 3 +
fstp  [ebp+var_50] +
mov [ebp+var_40] eax +
lea eax [esi+18h] +
push eax  +
lea eax [esi+8] +
push eax  +
push ecx  +
push edi  +
lea eax [ebp+var_84] +
push eax  +
lea eax [ebp+Arguments] +
push eax  +
call sub_4A47D7  +
add esp 18h +
mov ecx [ebp+var_84] +
push 0FFFFh  +
push ecx  +
call sub_4AC5D5  +
cmp dword ptr [esi] 8 +
pop ecx  +
pop ecx  +
jz loc_4B5C1B  +
call sub_4A225F  +
test al al +
jz loc_4B5C1B  +
push esi  +
call sub_4A228C  +
pop ecx  +
test eax eax +
jnz loc_4B5C23  +
push dword ptr [esi]  +
call sub_4A4AEB  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_4B5C5E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_4DE490 +
movapd xmm2 oword ptr ds:oword_4DE4A0 +
movapd xmm3 oword ptr ds:oword_4DE500 +
movapd xmm4 oword ptr ds:oword_4DE4B0 +
movapd xmm6 oword ptr ds:oword_4DE4C0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_4D89B0[eax] +
movapd xmm7 oword ptr ds:oword_4D85A0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_4B5DB6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_4DE550 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_4DE560 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4DE570 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_4DE4D0 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_4DE4E0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4DE580 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_4DE510 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_4B5E1B  +
cmp ecx 0FFFFFFFFh +
jz loc_4B5E36  +
cmp ecx 7FEh +
ja loc_4B5E4C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_4DE490 +
movapd xmm2 oword ptr ds:oword_4DE500 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_4B5E14  +
fld  ds:dbl_4DE538 +
retn   +
mov edx 3E9h +
jmp loc_4B5E6A  +
movlpd xmm2 oword ptr ds:oword_4DE500 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_4DE530 +
mov edx 8 +
jmp loc_4B5E6A  +
movlpd xmm1 oword ptr ds:oword_4DE520 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4B5C63  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_4B5E97  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_4ACDC4  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_4B5E5D  +
mov edx 3E9h +
jmp loc_4B5E6A  +
***
lea esp [esp+0] +
jmp sub_4B5ED0  +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
fld  [ebp+arg_0] +
frndint   +
fstp  [ebp+var_8] +
fld  [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_4B609F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_4B6327  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_4B62F3  +
jmp loc_4B62D0  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_4BC358  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_4B62E7  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_4B62D0  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_4B631C  +
test eax eax +
jz loc_4B631C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_4B6301  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_4B62C3  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_4B6376  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_4B6375  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_4B6360  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_4EEF3C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ebp+var_104] ecx +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_100] esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_FC] edi +
test ecx ecx +
jnz loc_4B63DD  +
test edx edx +
jz loc_4B63DD  +
call sub_497984  +
mov dword ptr [eax] 16h +
call sub_495901  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_4B63BD  +
test esi esi +
jz loc_4B63BD  +
mov [ebp+var_108] 0 +
cmp edx 2 +
jb loc_4B670A  +
dec edx  +
imul edx edi +
push ebx  +
add edx ecx +
mov [ebp+var_F8] edx +
mov eax edx +
xor edx edx +
sub eax ecx +
div  edi +
lea ebx [eax+1] +
cmp ebx 8 +
ja loc_4B642B  +
push esi  +
push edi  +
push [ebp+var_F8]  +
push ecx  +
call sub_4B62A0  +
add esp 10h +
jmp loc_4B66E2  +
shr ebx 1 +
imul ebx edi +
add ebx ecx +
push ebx  +
push ecx  +
mov ecx esi +
mov [ebp+var_110] ebx +
call ds:off_4BC358  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4B645B  +
push edi  +
push ebx  +
push [ebp+var_104]  +
call sub_4B6340  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push [ebp+var_104]  +
call ds:off_4BC358  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4B648D  +
push edi  +
push [ebp+var_F8]  +
push [ebp+var_104]  +
call sub_4B6340  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push ebx  +
call ds:off_4BC358  +
call esi  +
add esp 8 +
test eax eax +
jle loc_4B64B5  +
push edi  +
push [ebp+var_F8]  +
push ebx  +
call sub_4B6340  +
add esp 0Ch +
mov eax [ebp+var_F8] +
mov edi eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_FC] +
mov [ebp+var_114] eax +
nop   +
cmp ebx esi +
jbe loc_4B650B  +
add esi edx +
mov [ebp+var_10C] esi +
cmp esi ebx +
jnb loc_4B6505  +
mov ecx [ebp+var_100] +
push ebx  +
push esi  +
call ds:off_4BC358  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jle loc_4B64D4  +
cmp ebx esi +
ja loc_4B6542  +
mov eax [ebp+var_F8] +
mov edi [ebp+var_100] +
add esi edx +
cmp esi eax +
ja loc_4B6536  +
push ebx  +
push esi  +
mov ecx edi +
call ds:off_4BC358  +
call edi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jle loc_4B6511  +
mov edi [ebp+var_114] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_100] +
jmp loc_4B6550  +
mov edx [ebp+var_FC] +
sub edi edx +
cmp edi ebx +
jbe loc_4B6575  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_4BC358  +
call esi  +
add esp 8 +
test eax eax +
jg loc_4B6550  +
mov edx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_114] edi +
cmp edi esi +
jb loc_4B65E3  +
mov [ebp+var_118] edx +
mov [ebp+var_11C] edi +
cmp esi edi +
jz loc_4B65C8  +
mov ebx esi +
mov edx edi +
mov esi [ebp+var_118] +
sub ebx edi +
mov al [edx] +
lea edx [edx+1] +
mov cl [ebx+edx-1] +
mov [ebx+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_4B65A1  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_110] +
mov edx [ebp+var_FC] +
mov eax [ebp+var_F8] +
cmp ebx edi +
jnz loc_4B64D0  +
mov ebx esi +
mov [ebp+var_110] ebx +
jmp loc_4B64D0  +
add edi edx +
cmp ebx edi +
jnb loc_4B661B  +
lea esp [esp+0] +
sub edi edx +
cmp edi ebx +
jbe loc_4B661B  +
mov ecx [ebp+var_100] +
push ebx  +
push edi  +
call ds:off_4BC358  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_4B65F0  +
cmp ebx edi +
jb loc_4B664A  +
mov esi [ebp+var_100] +
sub edi edx +
cmp edi [ebp+var_104] +
jbe loc_4B6644  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_4BC358  +
call esi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_4B6621  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov eax edi +
mov ebx [ebp+var_104] +
mov ecx edx +
sub ecx esi +
sub eax ebx +
cmp eax ecx +
jl loc_4B669B  +
cmp ebx edi +
jnb loc_4B667E  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] ebx +
mov [ebp+eax*4+var_7C] edi +
inc eax  +
mov [ebp+var_108] eax +
mov edi [ebp+var_FC] +
cmp esi edx +
jnb loc_4B66D4  +
mov ecx esi +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
jmp loc_4B6405  +
cmp esi edx +
jnb loc_4B66B7  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] esi +
mov [ebp+eax*4+var_7C] edx +
inc eax  +
mov [ebp+var_108] eax +
mov ecx [ebp+var_104] +
mov esi [ebp+var_100] +
cmp ecx edi +
jnb loc_4B66DC  +
mov edx edi +
mov edi [ebp+var_FC] +
jmp loc_4B63FF  +
mov esi [ebp+var_100] +
jmp loc_4B66E2  +
mov edi [ebp+var_FC] +
mov eax [ebp+var_108] +
sub eax 1 +
mov [ebp+var_108] eax +
js loc_4B6709  +
mov ecx [ebp+eax*4+var_F4] +
mov edx [ebp+eax*4+var_7C] +
mov [ebp+var_104] ecx +
jmp loc_4B63FF  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_488C1C  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov edi edi +
mov edi edi +
call sub_4AEC36  +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov eax hObject +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jle loc_4B698C  +
push esi  +
push [ebp+lpSrcStr]  +
call loc_4A7C0B  +
pop ecx  +
cmp eax esi +
pop ecx  +
lea esi [eax+1] +
jl loc_4B698C  +
mov esi eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push esi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_0]  +
call sub_4A9153  +
pop esi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_4B6A11  +
pop ecx  +
test eax eax +
jz loc_4B6A99  +
xor eax eax +
inc eax  +
jmp loc_4B6AC2  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_4B6A2E  +
pop ecx  +
test eax eax +
jnz loc_4B6A94  +
call sub_4B1AC5  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_4F6580 0 +
mov ecx [ebp-0Ch] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_489360  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_489360  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_4B6D89  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_4B6DD2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_4B6E13  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_4B6DE0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4B6E0E  +
cmp edx [esp+arg_4] +
ja loc_4B6E0E  +
jb loc_4B6E0F  +
cmp eax [esp+arg_0] +
jbe loc_4B6E0F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_4B6E5C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_4B6E54  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_4B6E5E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_4B6E44  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_4EC010  +
push offset sub_48DD00  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4EEF3C +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_4B6F30  +
add esp 4 +
test eax eax +
jz loc_4B6F0F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_4B6E20  +
add esp 8 +
test eax eax +
jz loc_4B6F0F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_4B6F44  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_4B6F5F  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_4B6FA1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_4B6FE8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_4B6FAF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4B6FDD  +
cmp edx [esp+arg_4] +
ja loc_4B6FDD  +
jb loc_4B6FE6  +
cmp eax [esp+arg_0] +
jbe loc_4B6FE6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_488C1C  +
jmp sub_489C76  +
***
or eax eax +
jnz loc_4B7091  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_4B70E1  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_4B709F  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_4B70CA  +
cmp edx [esp+arg_4] +
ja loc_4B70CA  +
jb loc_4B70D2  +
cmp eax [esp+arg_0] +
jbe loc_4B70D2  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
cmp cl 40h +
jnb loc_4B710A  +
cmp cl 20h +
jnb loc_4B7100  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_4B712A  +
cmp cl 20h +
jnb loc_4B7120  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_4B7151  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4B716D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4B7189  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_4B71CA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4B7197  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4B71C5  +
cmp edx [esp+arg_4] +
ja loc_4B71C5  +
jb loc_4B71C6  +
cmp eax [esp+arg_0] +
jbe loc_4B71C6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_4B71D4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_4B7204  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4B7220  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4B724C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_4B7293  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4B725A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4B7288  +
cmp edx [esp+arg_4] +
ja loc_4B7288  +
jb loc_4B7291  +
cmp eax [esp+arg_0] +
jbe loc_4B7291  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_4B72A5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_4B72B9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_4B72E0  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4B72FB  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4B731A  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_4B7366  +
jmp loc_4B736D  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4B7328  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_4B7353  +
cmp edx [esp+arg_4] +
ja loc_4B7353  +
jb loc_4B735B  +
cmp eax [esp+arg_0] +
jbe loc_4B735B  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_4B736D  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword_4F5858 2 +
jge loc_4B73AE  +
mov ecx [ebp+8] +
mov edx ecx +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4B7386  +
mov ax [ebp+0Ch] +
sub ecx 2 +
cmp ecx edx +
jz loc_4B73A1  +
cmp [ecx] ax +
jnz loc_4B7395  +
cmp [ecx] ax +
jnz loc_4B73AA  +
mov eax ecx +
jmp loc_4B7410  +
xor eax eax +
jmp loc_4B7410  +
mov edx [ebp+8] +
mov cx [ebp+0Ch] +
jmp loc_4B73C9  +
movzx eax word ptr [edx] +
cmp ax cx +
jnz loc_4B73C1  +
mov esi edx +
test ax ax +
jz loc_4B740E  +
add edx 2 +
lea eax [edx+1] +
test al 0Eh +
jnz loc_4B73B7  +
xor eax eax +
cmp ax cx +
jnz loc_4B73F5  +
mov eax 0FFFF0001h +
movd xmm1 eax +
jmp loc_4B73E5  +
add edx 10h +
movups xmm0 oword ptr [edx] +
movzx eax cx +
movd xmm0 eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E63A8 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 48h +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E63FC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6440 +
jmp sub_48D56B  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
lea ecx [ebp-38h] +
push eax  +
mov ecx [ebp-2Ch] +
push eax  +
mov ecx [ebp-2Ch] +
push eax  +
mov ecx [ebp-2Ch] +
mov ecx [ebp-2Ch] +
push eax  +
mov ecx [ebp-3Ch] +
push eax  +
mov ecx [ebp-3Ch] +
mov ecx [ebp-3Ch] +
add ecx 4 +
jmp sub_40A870  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6468 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-118h] +
lea ecx [ebp-0A0h] +
jmp sub_40A870  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-120h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6508 +
jmp sub_48D56B  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6544 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4B7678  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_402F00  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6578 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6440 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E65A4 +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6630 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
jmp sub_404C90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E665C +
jmp sub_48D56B  +
***
lea ecx [ebp-180h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6690 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 94h +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E66D4 +
jmp sub_48D56B  +
***
lea ecx [ebp-440h] +
lea ecx [ebp-428h] +
lea ecx [ebp-508h] +
mov eax [ebp-514h] +
mov eax [ebp-51Ch] +
push eax  +
mov eax [ebp-514h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-520h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6730 +
jmp sub_48D56B  +
***
lea ecx [ebp-2Ch] +
jmp sub_405780  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E677C +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E67A8 +
jmp sub_48D56B  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
lea ecx [ebp-88h] +
lea ecx [ebp-70h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-0A0h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0B4h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E67DC +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6838 +
jmp sub_48D56B  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6864 +
jmp sub_48D56B  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E68A8 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E68DC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6934 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E698C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
jmp sub_405780  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E69E4 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4B7AC8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_402F10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6A10 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6A3C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6A94 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6AEC +
jmp sub_48D56B  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6B44 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6BA4 +
jmp sub_48D56B  +
***
mov eax [ebp-18h] +
mov ecx [ebp-1Ch] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6BFC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6C64 +
jmp sub_48D56B  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-18h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6CBC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6D1C +
jmp sub_48D56B  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-18h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6D74 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6DD4 +
jmp sub_48D56B  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6E2C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6E8C +
jmp sub_48D56B  +
***
mov eax [ebp+8] +
mov ecx [ebp-10h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6EE4 +
jmp sub_48D56B  +
***
mov ecx [ebp-14h] +
jmp loc_403B40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6F18 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6F78 +
jmp sub_48D56B  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-2Ch] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6FD0 +
jmp sub_48D56B  +
***
lea ecx [ebp-94h] +
lea ecx [ebp-88h] +
jmp sub_40A870  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-98h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7004 +
jmp sub_48D56B  +
***
lea ecx [ebp-0E8h] +
lea ecx [ebp-28h] +
lea ecx [ebp-0D0h] +
mov eax [ebp-0D8h] +
mov eax [ebp-0D8h] +
mov eax [ebp-0D8h] +
and eax 4 +
jz locret_4B7E7A  +
and dword ptr [ebp-0D8h] 0FFFFFFFBh +
lea ecx [ebp-40h] +
jmp sub_402F10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-108h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7038 +
jmp sub_48D56B  +
***
lea ecx [ebp-118h] +
lea ecx [ebp-100h] +
mov eax [ebp-108h] +
mov eax [ebp-108h] +
mov eax [ebp-108h] +
mov eax [ebp-108h] +
and eax 8 +
jz locret_4B7F44  +
and dword ptr [ebp-108h] 0FFFFFFF7h +
lea ecx [ebp-40h] +
jmp sub_402F10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-128h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E708C +
jmp sub_48D56B  +
***
lea ecx [ebp-0B8h] +
lea ecx [ebp-14Ch] +
lea ecx [ebp-130h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-168h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E70E0 +
jmp sub_48D56B  +
***
lea ecx [ebp-0FCh] +
lea ecx [ebp-0E8h] +
mov eax [ebp-0F0h] +
mov eax [ebp-0F0h] +
mov eax [ebp-0F0h] +
and eax 4 +
jz locret_4B8042  +
and dword ptr [ebp-0F0h] 0FFFFFFFBh +
lea ecx [ebp-40h] +
jmp sub_402F10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-110h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E712C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 60h +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7178 +
jmp sub_48D56B  +
***
mov eax [ebp-2Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E71C4 +
jmp sub_48D56B  +
***
lea ecx [ebp-2Ch] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7208 +
jmp sub_48D56B  +
***
lea ecx [ebp-138h] +
lea ecx [ebp-118h] +
mov eax [ebp-124h] +
mov eax [ebp-124h] +
mov eax [ebp-124h] +
mov eax [ebp-124h] +
mov eax [ebp-124h] +
and eax 10h +
jz locret_4B8206  +
and dword ptr [ebp-124h] 0FFFFFFEFh +
lea ecx [ebp-40h] +
jmp sub_402F10  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7234 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
lea ecx [ebp-24h] +
jmp loc_40BA80  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7290 +
jmp sub_48D56B  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-74h] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0FCh] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E72C8 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6440 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7360 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4B8338  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_40BC60  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E73EC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7418 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7480 +
jmp sub_48D56B  +
***
lea ecx [ebp-22Ch] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-250h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7500 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E752C +
jmp sub_48D56B  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7560 +
jmp sub_48D56B  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E75AC +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E75F8 +
jmp sub_48D56B  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7634 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
lea ecx [ebp+0Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7678 +
jmp sub_48D56B  +
***
lea ecx [ebp-88h] +
lea ecx [ebp-58h] +
lea ecx [ebp-70h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E76BC +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7718 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EB20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E774C +
jmp sub_48D56B  +
***
lea ecx [ebp+0Ch] +
jmp loc_40EB20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7778 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-44h] +
lea ecx [ebp-44h] +
jmp loc_40EB20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E77A4 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EB20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E77E8 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-44h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7814 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-18h] +
jmp loc_40EB20  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7850 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7884 +
jmp sub_48D56B  +
***
mov ecx [ebp-138h] +
mov ecx [ebp-138h] +
mov ecx [ebp-138h] +
mov ecx [ebp-138h] +
mov ecx [ebp-138h] +
mov ecx [ebp-138h] +
lea ecx [ebp-28h] +
lea ecx [ebp-130h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-40h] +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-13Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E78F0 +
jmp sub_48D56B  +
***
mov eax [ebp-2Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7978 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E79B4 +
jmp sub_48D56B  +
***
lea ecx [ebp-1Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E79E0 +
jmp sub_48D56B  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7A50 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-24h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7AC8 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 2Ch +
jmp loc_411CF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7B78 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6440 +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7BD4 +
jmp sub_48D56B  +
***
lea ecx [ebp+14h] +
lea ecx [ebp-2Ch] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7C00 +
jmp sub_48D56B  +
***
lea ecx [ebp-2Ch] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7C34 +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7C60 +
jmp sub_48D56B  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7C8C +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7CB8 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4B8B88  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_40BC60  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7CE4 +
jmp sub_48D56B  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
mov eax [ebp-44h] +
lea ecx [ebp-110h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-114h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7D10 +
jmp sub_48D56B  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7D5C +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-38h] +
jmp loc_402F00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7D88 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7DC4 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7E18 +
jmp sub_48D56B  +
***
mov edx [esp+arg_4] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7E44 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7E70 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7E9C +
jmp sub_48D56B  +
***
lea ecx [ebp-1Ch] +
jmp sub_489EBC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7ED0 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
jmp sub_489EBC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7EFC +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7F28 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7F54 +
jmp sub_48D56B  +
***
lea ecx [ebp-88h] +
jmp sub_40A870  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7FAC +
jmp sub_48D56B  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-2Ch] +
jmp loc_414380  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E7FD8 +
jmp sub_48D56B  +
***
lea ecx [ebp-100F4h] +
lea ecx [ebp-100E8h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-8Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-100FCh] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8010 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E80E0 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8124 +
jmp sub_48D56B  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8160 +
jmp sub_48D56B  +
***
lea ecx [ebp-20h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E81D0 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8238 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
jmp sub_4148B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8274 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E82A0 +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E82F8 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
jmp sub_416240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8324 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8350 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-3Ch] +
push eax  +
lea ecx [ebp-34h] +
jmp sub_416240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E83A8 +
jmp sub_48D56B  +
***
lea ecx [ebp-120h] +
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-58h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-120h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E83EC +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_412A10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8440 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_4126D0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E847C +
jmp sub_48D56B  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E84C0 +
jmp sub_48D56B  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8538 +
jmp sub_48D56B  +
***
lea ecx [ebp-4A8h] +
lea ecx [ebp-234h] +
lea ecx [ebp-24Ch] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4B8h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E85B0 +
jmp sub_48D56B  +
***
lea ecx [ebp-150h] +
lea ecx [ebp-0A8h] +
retn   +
***
mov ecx [ebp-4Ch] +
mov ecx [ebp-4Ch] +
mov ecx [ebp-4Ch] +
mov ecx [ebp-4Ch] +
lea ecx [ebp-50h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-60h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8630 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_412A10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E86B8 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp sub_412A10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E86FC +
jmp sub_48D56B  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8740 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
lea ecx [ebp+0Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E87B8 +
jmp sub_48D56B  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E87FC +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
jmp sub_41D630  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8858 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8884 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E88B0 +
jmp sub_48D56B  +
***
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E88DC +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8930 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
pop ecx  +
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E895C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8998 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E89D4 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8A00 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8A58 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8A84 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8AB0 +
jmp sub_48D56B  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8AEC +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8B18 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8B44 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8B9C +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4B992B  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
add ecx 0Ch +
jmp loc_41A9B0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8BD8 +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8C04 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8C30 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8C5C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8C90 +
jmp sub_48D56B  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8CF8 +
jmp sub_48D56B  +
***
mov ecx [ebp-28h] +
push eax  +
mov ecx [ebp-28h] +
mov ecx [ebp-28h] +
mov ecx [ebp-28h] +
add ecx 14h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8D24 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8D70 +
jmp sub_48D56B  +
***
lea ecx [ebp-1Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8DFC +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8E30 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8E64 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 10h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8E98 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8EDC +
jmp sub_48D56B  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 18h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8F44 +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8F88 +
jmp sub_48D56B  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8FB4 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E8FE8 +
jmp sub_48D56B  +
***
lea ecx [ebp-1Ch] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9014 +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9040 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-10h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E906C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E90A0 +
jmp sub_48D56B  +
***
lea ecx [ebp-0C0h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C0h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E90EC +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9120 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9150 +
jmp sub_48D56B  +
***
lea ecx [ebp-30h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E91D8 +
jmp sub_48D56B  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9204 +
jmp sub_48D56B  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-28h] +
lea ecx [ebp-50h] +
lea ecx [ebp-40h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-5Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9250 +
jmp sub_48D56B  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-28h] +
lea ecx [ebp-54h] +
lea ecx [ebp-40h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E92A4 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E92F8 +
jmp sub_48D56B  +
***
push eax  +
mov eax [ebp-10h] +
mov ecx [ebp+8] +
jmp loc_410AC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E932C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-48h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9370 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E93C8 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9420 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-10h] +
jmp loc_41C070  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E944C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp loc_474970  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E952C +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9558 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E94A4 +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9500 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E958C +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-24h] +
jmp sub_47F670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E95C0 +
jmp sub_48D56B  +
***
lea ecx [ebp-1Ch] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E96BC +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9690 +
jmp sub_48D56B  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9608 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
jmp sub_47F670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E96E8 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-24h] +
jmp sub_47F670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9664 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp+0Ch] +
mov ecx [ebp+0Ch] +
add ecx 8 +
jmp loc_4757B0  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4BA368  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_40BC60  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E98A4 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9A98 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_402F10  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9A40 +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_412620  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E98E8 +
jmp sub_48D56B  +
***
mov ecx [ebp-254h] +
mov ecx [ebp-254h] +
mov ecx [ebp-254h] +
mov ecx [ebp-254h] +
mov ecx [ebp-254h] +
lea ecx [ebp-248h] +
lea ecx [ebp-230h] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-260h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E996C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_479680  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E99E0 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9A14 +
jmp sub_48D56B  +
***
lea ecx [ebp-70h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-58h] +
lea ecx [ebp-10130h] +
lea ecx [ebp-10200h] +
lea ecx [ebp-40h] +
lea ecx [ebp-1012Ch] +
lea ecx [ebp-10144h] +
lea ecx [ebp-28h] +
lea ecx [ebp-10134h] +
lea ecx [ebp-88h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-10134h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10204h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E97A0 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9878 +
jmp sub_48D56B  +
***
lea ecx [ebp-250h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-258h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9948 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9750 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E977C +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E991C +
jmp sub_48D56B  +
***
lea ecx [ebp-224h] +
jmp loc_4757B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-220h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9B00 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E6440 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-10h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9B34 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
jmp sub_47F670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9B60 +
jmp sub_48D56B  +
***
lea ecx [ebp-24h] +
jmp sub_47F670  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9BB8 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_479680  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9B8C +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9BE4 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9C10 +
jmp sub_48D56B  +
***
pop ecx  +
mov eax [ebp-10h] +
movzx eax byte ptr [eax] +
push eax  +
push offset unk_4F5260  +
mov eax [ebp-14h] +
push eax  +
call nullsub_1  +
add esp 0Ch +
retn   +
***
mov ecx [ebp-14h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9E90 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9E64 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9E38 +
jmp sub_48D56B  +
***
lea ecx [ebp-434h] +
jmp loc_47A5F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-448h] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9EBC +
jmp sub_48D56B  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4BA9A8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_40EA90  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9EE8 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA0CC +
jmp sub_48D56B  +
***
les ecx [eax] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA130 +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA15C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA054 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9FDC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4E9F64 +
jmp sub_48D56B  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 8 +
jmp sub_483970  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA248 +
jmp sub_48D56B  +
***
mov ecx [ebp-18h] +
mov ecx [ebp-18h] +
add ecx 8 +
jmp sub_483970  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA214 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA1B4 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA188 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA1E0 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp+0Ch] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA27C +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA308 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp+0Ch] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA2B0 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
jmp sub_484D00  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA3AC +
jmp sub_48D56B  +
***
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA334 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA360 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA420 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA3D8 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA4E4 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-14h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA484 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA54C +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA580 +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
lea ecx [ebp-14h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA4B8 +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA5AC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA648 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA5E0 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp sub_47E250  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA754 +
jmp sub_48D56B  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA780 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp+8] +
jmp sub_47E250  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA720 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp sub_47E250  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA6E4 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
jmp sub_47E250  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA6B0 +
jmp sub_48D56B  +
***
lea ecx [ebp+0Bh] +
jmp loc_47E240  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA674 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA7AC +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA838 +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA80C +
jmp sub_48D56B  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-224h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-220h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA898 +
jmp sub_48D56B  +
***
lea ecx [ebp+0Ch] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EA864 +
jmp sub_48D56B  +
***
lea ecx [ebp-224h] +
jmp loc_4757B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-22Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAA00 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAA68 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAA34 +
jmp sub_48D56B  +
***
lea ecx [ebp-620h] +
lea ecx [ebp-624h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-628h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAAC8 +
jmp sub_48D56B  +
***
lea ecx [ebp-410h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-410h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAA94 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAB5C +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAB30 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAB88 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAC1C +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EABE8 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAC48 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp+8] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EABBC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EACA0 +
jmp sub_48D56B  +
***
push eax  +
mov ecx [ebp-14h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EACD4 +
jmp sub_48D56B  +
***
mov ecx [ebp-14h] +
jmp loc_41A9B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAD2C +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAD00 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_479680  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAD58 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
jmp loc_4836A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAD84 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAE68 +
jmp sub_48D56B  +
***
push eax  +
call sub_488C60  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAE08 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAE34 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EADDC +
jmp sub_48D56B  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAEC0 +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAE94 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8 +
jmp loc_474970  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAF20 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAF44 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAF98 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB01C +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAEEC +
jmp sub_48D56B  +
***
lea ecx [ebp+8] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EAFC4 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
jmp sub_47AC40  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB0AC +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 28h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB0D0 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB25C +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB1FC +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB160 +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB1B8 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB2C4 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-24h] +
jmp loc_486390  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB324 +
jmp sub_48D56B  +
***
lea ecx [ebp-14h] +
jmp loc_486370  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB2F0 +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
jmp loc_486370  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB350 +
jmp sub_48D56B  +
***
lea ecx [ebp-28h] +
jmp sub_40BC60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB37C +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB3DC +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB3A8 +
jmp sub_48D56B  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB444 +
jmp sub_48D56B  +
***
push eax  +
call sub_4196B0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB408 +
jmp sub_48D56B  +
***
lea ecx [ebp-18h] +
jmp loc_487AD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB49C +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB4FC +
jmp sub_48D56B  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
jmp loc_40EA90  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB538 +
jmp sub_48D56B  +
***
lea ecx [ebp-21Ch] +
jmp loc_487AA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-22Ch] +
xor ecx eax +
call sub_488C1C  +
mov ecx [edx-4] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB4C8 +
jmp sub_48D56B  +
***
lea ecx [ebp-21Ch] +
jmp loc_487AA0  +
***
lea ecx [ebp-10h] +
jmp sub_489EBC  +
***
lea ecx [ebp-14h] +
jmp sub_489EBC  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB6AC +
jmp sub_48D56B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_488C1C  +
mov eax offset unk_4EB810 +
jmp sub_48D56B  +
***
push offset CriticalSection  +
call ds:DeleteCriticalSection  +
retn   +
***
mov ecx offset dword_4F640C +
inc eax  +
push eax  +
push esi  +
call loc_403650  +
pop esi  +
mov dword_4F6420 0Fh +
mov ecx offset dword_4F640C +
mov dword_4F641C 0 +
mov byte ptr dword_4F640C 0 +
jmp nullsub_1  +
***
mov ecx offset dword_4F63D8 +
inc eax  +
push eax  +
push esi  +
call loc_403650  +
pop esi  +
mov dword_4F63EC 0Fh +
mov ecx offset dword_4F63D8 +
mov dword_4F63E8 0 +
mov byte ptr dword_4F63D8 0 +
jmp nullsub_1  +
***
mov ecx offset dword_4F6424 +
inc eax  +
push eax  +
push esi  +
call loc_40C2A0  +
pop esi  +
xor eax eax +
mov dword_4F6438 7 +
mov dword_4F6434 0 +
mov ecx offset dword_4F6424 +
mov word ptr dword_4F6424 ax +
jmp nullsub_1  +
***
retn   +
***
mov dword_4F6510 offset off_4CE8B4 +
retn   +
***
push offset stru_4F6474  +
call ds:DeleteCriticalSection  +
retn   +
***
mov ecx dword_4F6518 +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push offset stru_4F6490  +
call ds:DeleteCriticalSection  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4B9CF6  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx dword_4F64B0 +
test ecx ecx +
jz loc_4BBD72  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword_4F64B0 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx dword_4F64B8 +
test ecx ecx +
jnz sub_479590  +
retn   +
***
mov ecx dword_4F64C4 +
test ecx ecx +
jnz sub_479590  +
retn   +
***
mov ecx dword_4EEEF0 +
test ecx ecx +
jz loc_4BBDBF  +
call sub_479590  +
mov off_4EEEE8 offset off_4CE8B4 +
retn   +
***
mov ecx offset dword_4F521C +
inc eax  +
push eax  +
push esi  +
call loc_40C2A0  +
pop esi  +
xor eax eax +
mov dword_4F5230 7 +
mov dword_4F522C 0 +
mov ecx offset dword_4F521C +
mov word ptr dword_4F521C ax +
jmp nullsub_1  +
***
mov ecx offset dword_4F5234 +
inc eax  +
push eax  +
push esi  +
call loc_40C2A0  +
pop esi  +
xor eax eax +
mov dword_4F5248 7 +
mov dword_4F5244 0 +
mov ecx offset dword_4F5234 +
mov word ptr dword_4F5234 ax +
jmp nullsub_1  +
***
mov ecx dword_4F539C +
test ecx ecx +
jnz sub_479590  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4BB046  +
mov eax large fs:0 +
push eax  +
mov eax dword_4EEF3C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx dword_4F53A8 +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_4BBEE2  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword_4F53A8 0 +
mov ecx dword_4F53A4 +
test ecx ecx +
jz loc_4BBEFB  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword_4F53A4 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx offset unk_4F5870 +
mov ecx offset unk_4F5964 +
mov ecx offset unk_4F595C +
mov ecx offset unk_4F59E9 +
mov ecx offset unk_4F59E8 +
jmp loc_489E95  +
***
retn   +
***
mov ecx offset unk_4F5B08 +
jmp loc_48B3FB  +
***
