call sub_401371  +
call sub_40594E  +
pop ecx  +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
push offset sub_42E432  +
call sub_403F59  +
push offset sub_42E44A  +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov eax dword_443CC8 +
mov ecx offset unk_442DB0 +
mov ecx offset unk_4439A8 +
pop ecx  +
pop ecx  +
pop ecx  +
mov ecx offset unk_443B00 +
call sub_42D1B2  +
push offset sub_42E4A4  +
call sub_416B5A  +
pop ecx  +
retn   +
***
push 0  +
push esi  +
cmp byte ptr [ecx+8] 0 +
push [ebp+dwBytes]  +
cmp [ebp+lpMem] 0 +
mov eax [ebp+dwFlags] +
push [ebp+lpMem]  +
push esi  +
mov eax dword_443C6C +
mov edx [ebp+arg_0] +
cmp [ebp+lpMem] 0 +
mov edx [ebp+arg_4] +
push esi  +
test edx edx +
js loc_4014E4  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_4014E4  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_4014E4  +
mov eax esi +
mul  [ebp+arg_8] +
test edx edx +
ja loc_4014E4  +
jb loc_4014C4  +
cmp eax 0FFFFFFFFh +
ja loc_4014E4  +
cmp eax 0FFFFFFEFh +
ja loc_4014E4  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push [ebp+dwFlags]  +
call sub_4012F9  +
test eax eax +
jz loc_4014E4  +
lea ecx [esi-1] +
mov [eax+8] ecx +
jmp loc_4014E6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
test [ebp+arg_0] 1 +
and esp 0FFFFFFF8h +
xor eax eax +
mov edx ecx +
mov eax [ebp+arg_0] +
mov ecx [ecx] +
xor eax eax +
mov edx [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
push edi  +
push esi  +
mov eax [ebp+arg_4] +
push esi  +
push ecx  +
int 3  +
***
call sub_42E220  +
call ds:GetLastError  +
mov eax [ebp+arg_0] +
push esi  +
mov eax [ebp+arg_C] +
push ebx  +
push edi  +
push ecx  +
call ds:GetLastError  +
test ecx ecx +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_43B73C +
push esi  +
sub esp 50h +
mov ecx [esi+5Ch] +
push ebx  +
push esi  +
cmp byte ptr [ecx+48h] 0 +
lea ecx [esi+50h] +
push esi  +
lea ebx [ecx+4] +
push esi  +
sub esp 0Ch +
sub esp 10h +
push esi  +
cmp dword ptr [esi+6Ch] 0 +
mov eax [ebp+arg_0] +
xor eax eax +
push esi  +
mov dword ptr [esi] offset off_43B704 +
push esi  +
push edi  +
mov eax [ebp+arg_0] +
sub esp 88h +
sub esp 1Ch +
push esi  +
push esi  +
push ecx  +
cmp byte ptr [ecx+70h] 0 +
push ebx  +
push 10h  +
sub esp 0Ch +
neg esi  +
cmp byte ptr [ecx+70h] 0 +
push esi  +
push esi  +
push esi  +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 24h +
sub esp 1Ch +
push 14h  +
push ecx  +
push ebx  +
push esi  +
mov eax [ebp+TokenHandle] +
cmp dword ptr [esi+8] 0 +
push esi  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push esi  +
call sub_401371  +
lea ecx [esi+10h] +
mov eax dword_444844 +
push ecx  +
sub esp 8Ch +
sub esp 164h +
sub esp 8Ch +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 210h +
sub esp 54h +
call ds:GetTickCount  +
sub esp 0Ch +
sub esp 0DCh +
push edi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 0Ch +
mov edi ecx +
push edi  +
push esi  +
push esi  +
push ebx  +
push esi  +
push ebx  +
mov eax [ebp+arg_4] +
push ecx  +
cmp [ebp+lpString2] 0 +
push esi  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
push ecx  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_0] +
mov eax [ecx] +
mov eax [ebp+arg_0] +
push ebx  +
mov eax [ecx] +
push esi  +
cmp [ebp+arg_0] 0 +
push ebx  +
mov edx [ebp+arg_0] +
sub esp 10h +
sub esp 10h +
sub esp 10h +
sub esp 10h +
push ecx  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
int 3  +
***
push esi  +
mov edx [ecx+8] +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
mov ebx edx +
mov eax [ebp+arg_0] +
sub esp 1Ch +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push edi  +
push edi  +
push ecx  +
push ecx  +
push ebx  +
push ecx  +
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
sub esp 28h +
sub esp 28h +
mov ebx edx +
sub esp 28h +
cmp dword ptr [esi] 0 +
test esi esi +
push esi  +
push ebx  +
push ecx  +
push ecx  +
push ebx  +
push ecx  +
sub esp 0Ch +
push ecx  +
movzx eax word ptr [ecx] +
cmp ecx 80h +
push esi  +
mov edi ecx +
push esi  +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
xor eax eax +
cmp [ebp+lpMultiByteStr] 0 +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push ecx  +
push esi  +
push ecx  +
sub esp 60h +
sub esp 38h +
sub esp 10h +
push ecx  +
sub esp 0Ch +
sub esp 20h +
push ecx  +
call sub_417280  +
sub esp 14h +
push ecx  +
push ecx  +
push ecx  +
cmp dword ptr [esi+0D4h] 0 +
call sub_417280  +
push ecx  +
call sub_417280  +
call sub_417280  +
push ecx  +
call sub_417280  +
push ecx  +
push esi  +
call sub_417280  +
mov edx [ecx+8Ch] +
push esi  +
push esi  +
push ecx  +
test [ebp+arg_0] 1 +
mov al byte ptr [ebp+lpFileName] +
push esi  +
cmp byte ptr [esi+8] 0 +
cmp dword ptr [esi+18h] 0 +
sub esp 24h +
sub esp 0BCh +
push ecx  +
push ecx  +
sub esp 7Ch +
and esp 0FFFFFFF8h +
cmp dword ptr [esi+10h] 0 +
mov eax [ebp+arg_0] +
push ebx  +
sub esp 80h +
sub esp 128h +
mov eax dword_442AA0 +
sub esp 128h +
mov eax dword_442008 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 118h  +
xor edi edi +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
lea eax [ebp+VersionInformation.dwMajorVersion] +
push edi  +
push eax  +
call sub_417440  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jz loc_407265  +
mov ebx [ebp+VersionInformation.dwMajorVersion] +
cmp ebx 6 +
jz loc_40728D  +
cmp ebx 0Ah +
jz loc_40728D  +
cmp ebx 5 +
jnz loc_407265  +
cmp [ebp+VersionInformation.dwMinorVersion] 2 +
jnz loc_407276  +
cmp [ebp+var_6] 1 +
jnz loc_407258  +
call sub_407196  +
cmp eax 9 +
jz loc_407288  +
test dword ptr [ebp-8] 8000h +
jz loc_407303  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4168CD  +
leave   +
retn   +
cmp [ebp+VersionInformation.dwMinorVersion] 1 +
jnz loc_407265  +
test dword ptr [ebp-8] 200h +
jnz loc_407265  +
xor eax eax +
inc eax  +
jmp loc_407267  +
mov eax [ebp+VersionInformation.dwMinorVersion] +
mov ecx offset ModuleName +
mov [ebp+var_124] edi +
mov [ebp+var_128] eax +
call sub_403C83  +
mov esi eax +
test esi esi +
jz loc_407265  +
push offset aGetproductinfo  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_4072D3  +
lea ecx [ebp+var_124] +
push ecx  +
push edi  +
push edi  +
push [ebp+var_128]  +
push ebx  +
call eax  +
mov edi eax +
push esi  +
call ds:FreeLibrary  +
test edi edi +
jz loc_407265  +
mov eax [ebp+var_124] +
cmp eax 1Bh +
ja loc_40730B  +
jz loc_407355  +
dec eax  +
cmp eax 18h +
ja loc_407265  +
movzx eax ds:byte_40736E[eax] +
jmp ds:off_40735E[eax*4]  +
push 2  +
pop eax  +
jmp loc_407267  +
cmp eax 54h +
ja loc_40732B  +
jz loc_407355  +
sub eax 30h +
jz loc_407288  +
sub eax 16h +
jz loc_407355  +
dec eax  +
sub eax 1 +
jz loc_407355  +
jmp loc_407265  +
cmp eax 79h +
jb loc_407265  +
cmp eax 7Ah +
jbe loc_407359  +
cmp eax 7Ch +
jbe loc_407265  +
cmp eax 7Eh +
jbe loc_407355  +
add eax 0FFFFFF7Fh +
cmp eax 1 +
ja loc_407265  +
push 3  +
jmp loc_407305  +
push 4  +
jmp loc_407305  +
***
test [ebp+arg_0] 1 +
cmp dword_443CB0 0 +
push edi  +
push esi  +
push esi  +
cmp dword ptr [esi+4] 0 +
retn   +
***
push [ebp+dwMilliseconds]  +
test eax eax +
lea eax [esi+4] +
push esi  +
lea eax [esi+4] +
lea eax [ecx+4] +
push ecx  +
lea eax [ecx+4] +
push [ebp+lpSubKey]  +
push [ebp+lpValueName]  +
xor eax eax +
push ecx  +
push esi  +
push ecx  +
push esi  +
sub esp 18h +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push 4  +
push esi  +
push [ebp+cbData]  +
sub esp 14h +
sub esp 14h +
sub esp 14h +
sub esp 228h +
sub esp 0Ch +
push ecx  +
push ecx  +
mov eax 8008h +
push ecx  +
sub esp 208h +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 14h +
push ebx  +
push ecx  +
push ecx  +
push ecx  +
mov eax [edi] +
push 18h  +
push esi  +
push esi  +
mov ecx [esi+14h] +
mov esi eax +
sub esp 0Ch +
push ecx  +
sub esp 34h +
push edi  +
call sub_417280  +
sub esp 80Ch +
push ecx  +
push esi  +
add ecx 8 +
mov eax [ecx+28h] +
mov eax [ebp+arg_0] +
and esp 0FFFFFFF8h +
cmp ecx 0FFFFFFFDh +
push esi  +
push ebx  +
push ecx  +
sub ecx 8 +
push ecx  +
mov edi ecx +
sub esp 0Ch +
mov edx [ebp+arg_0] +
push ecx  +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_0] +
mov edi ecx +
push esi  +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
push dword ptr [esi+1Ch]  +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_43CDF0 +
push esi  +
mov edi offset CriticalSection +
mov esi ecx +
push esi  +
push edi  +
sub esp 18h +
sub esp 34h +
sub esp 5Ch +
sub esp 24h +
sub esp 3Ch +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
sub esp 34h +
sub esp 34h +
sub esp 14h +
movzx ecx byte_443F39 +
sub esp 10h +
sub esp 40h +
sub esp 0Ch +
test esi esi +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
mov edx [ecx] +
mov esi ecx +
mov eax [esi+14h] +
mov edx [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov esi ecx +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
int 3  +
***
mov edx [ebp+arg_0] +
sub esp 0Ch +
push ebx  +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
push esi  +
mov eax [ecx+4] +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
sub esp 30h +
sub esp 38h +
cmp edx 0Ah +
ja loc_40B450  +
jmp ds:off_40B460[edx*4]  +
push offset aNormal  +
jmp loc_40B455  +
push offset aErrorOccurredD  +
jmp loc_40B455  +
push offset aExcessiveExecu  +
jmp loc_40B455  +
push offset aCrashingInstru  +
jmp loc_40B455  +
push offset aCrashingInst_0  +
jmp loc_40B455  +
push offset aCrashOccurredN  +
jmp loc_40B455  +
push offset aStackContained  +
jmp loc_40B455  +
push offset aStackPointerOu  +
jmp loc_40B455  +
push offset aImageMappingFo  +
jmp loc_40B455  +
push offset aCrashAttemptin  +
jmp loc_40B455  +
push offset aExecutableMapp  +
jmp loc_40B455  +
push offset aUnknownType  +
call sub_403F59  +
mov eax esi +
pop esi  +
retn   +
***
sub esp 14h +
push ecx  +
mov eax [ebp+arg_4] +
sub esp 48h +
mov eax [esi] +
mov eax [esi] +
push ecx  +
push esi  +
sub esp 18h +
sub esp 0Ch +
sub esp 0Ch +
sub esp 44h +
push esi  +
sub esp 0Ch +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
xor edx edx +
cmp dword ptr [esi] 0 +
mov edx [ecx+4] +
cmp dword ptr [esi] 0 +
mov eax [esi] +
push ebx  +
push ecx  +
sub esp 10h +
sub esp 0Ch +
mov edx [ecx] +
push esi  +
push esi  +
push esi  +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
push 18h  +
push 2E4h  +
push 24h  +
push 30h  +
mov eax [ecx+4] +
sub esp 0Ch +
mov eax [ecx+4] +
sub esp 0Ch +
mov eax [ecx+4] +
sub esp 0Ch +
mov eax [ecx+4] +
sub esp 0Ch +
push esi  +
test [ebp+arg_0] 1 +
mov eax [ecx+4] +
sub esp 24h +
cmp byte ptr [ecx] 4Dh +
and esp 0FFFFFFF8h +
sub esp 10h +
and esp 0FFFFFFF8h +
push esi  +
push esi  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
mov edx [ecx+10h] +
push edi  +
push esi  +
push ecx  +
sub esp 1Ch +
mov ecx [ecx+0Ch] +
mov eax [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_4] +
push ecx  +
sub esp 20h +
sub esp 10h +
push ecx  +
push ecx  +
push ecx  +
sub esp 0Ch +
push esi  +
sub esp 0Ch +
push edi  +
push edi  +
lea eax [ebp+arg_C] +
sub esp 50h +
xor eax eax +
mov eax [ebp+arg_0] +
sub esp 20h +
cmp dword ptr [esi+30h] 0 +
push esi  +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
xor eax eax +
sub esp 34h +
push ecx  +
mov esi ecx +
cmp byte ptr [esi+88h] 0 +
push dword ptr [esi+9Ch]  +
push ecx  +
push ecx  +
mov edi ecx +
push ecx  +
push ecx  +
xor eax eax +
mov eax [ebp+arg_0] +
push ebx  +
push ecx  +
sub esp 30h +
push ecx  +
push esi  +
mov esi ecx +
cmp byte ptr [esi+88h] 0 +
jz loc_40F8CB  +
push dword ptr [esi+9Ch]  +
mov dword ptr [esi+84h] 1 +
call ds:ResetEvent  +
jmp loc_40F98B  +
mov eax [esi+84h] +
dec eax  +
cmp eax 9 +
ja loc_40F981  +
jmp ds:off_40F990[eax*4]  +
call sub_40F35D  +
jmp loc_40F98B  +
call sub_40F3A9  +
jmp loc_40F98B  +
call sub_40F413  +
jmp loc_40F98B  +
call sub_40F465  +
jmp loc_40F98B  +
and [ebp+NumberOfBytesTransferred] 0 +
lea eax [ebp+NumberOfBytesTransferred] +
push 0  +
push eax  +
lea eax [esi+8Ch] +
push eax  +
push dword ptr [esi+3Ch]  +
call ds:GetOverlappedResult  +
test eax eax +
jz loc_40F932  +
cmp [ebp+NumberOfBytesTransferred] 2Ch +
jnz loc_40F932  +
push 6  +
jmp loc_40F934  +
push 0Ah  +
pop eax  +
push eax  +
mov ecx esi +
call sub_40F6F6  +
jmp loc_40F98B  +
call sub_40F4DA  +
jmp loc_40F98B  +
and [ebp+NumberOfBytesTransferred] 0 +
lea eax [ebp+NumberOfBytesTransferred] +
push 0  +
push eax  +
lea eax [esi+8Ch] +
push eax  +
push dword ptr [esi+3Ch]  +
call ds:GetOverlappedResult  +
neg eax  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 0Ah +
jmp loc_40F935  +
call sub_40F5BA  +
jmp loc_40F98B  +
call sub_40F620  +
jmp loc_40F98B  +
call sub_40F68A  +
jmp loc_40F98B  +
mov dword ptr [esi+84h] 1 +
pop esi  +
leave   +
retn   +
***
push ecx  +
mov ecx [ebp+arg_0] +
push esi  +
push esi  +
and esp 0FFFFFFF8h +
sub esp 0D4h +
push ecx  +
mov edx [edi] +
push ebx  +
push ebx  +
push ebx  +
mov ecx [ebp+arg_8] +
sub esp 0Ch +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_4] +
push edi  +
sub esp 36Ch +
sub esp 20h +
sub esp 20h +
push ecx  +
mov esi ecx +
sub esp 70h +
mov edx [ebp+arg_0] +
mov edi ecx +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
push ebx  +
push esi  +
push ebx  +
push ecx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 0Ch +
sub esp 2Ch +
sub esp 10Ch +
mov ecx [ebp+arg_8] +
and esp 0FFFFFFF8h +
push ecx  +
cmp dword ptr [esi] 0 +
sub esp 14h +
mov edx [ebp+arg_0] +
sub esp 154h +
sub esp 1Ch +
sub esp 14h +
push ecx  +
push ecx  +
sub esp 7Ch +
sub esp 3Ch +
sub esp 20h +
push ecx  +
push ebx  +
or edi 0FFFFFFFFh +
sub esp 34h +
push ecx  +
test [ebp+arg_0] 1 +
mov ecx [ecx+4] +
push esi  +
mov esi ecx +
mov edi ecx +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
call sub_401371  +
push eax  +
lea ecx [ebp+var_4] +
call sub_401791  +
lea eax [ebp+var_4] +
mov edx esi +
push eax  +
mov ecx offset aHklmSoftwarePo +
call sub_408E7E  +
pop ecx  +
test eax eax +
js loc_411FE3  +
lea eax [ebp+var_4] +
mov ecx edi +
push eax  +
call sub_4015E6  +
mov ecx [ebp+var_4] +
lea ecx [ecx-10h] +
call sub_4015CE  +
pop edi  +
pop esi  +
leave   +
retn   +
***
sub esp 14h +
sub esp 10h +
sub esp 10h +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
push esi  +
push esi  +
push ecx  +
push esi  +
push esi  +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
cmp byte ptr [ecx+9] 0 +
sub esp 1Ch +
push ecx  +
push esi  +
sub esp 10h +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
sub esp 0E0h +
sub esp 10h +
sub esp 20Ch +
mov edx ecx +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push ecx  +
push esi  +
push esi  +
push esi  +
mov edx [ebp+arg_0] +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push esi  +
push ecx  +
mov ecx [esi+2Ch] +
push esi  +
test ecx ecx +
mov ecx [ecx+0Ch] +
test [ebp+arg_0] 1 +
sub esp 0Ch +
sub esp 0Ch +
mov edx [ebp+arg_0] +
mov eax [ecx+4] +
sub esp 0Ch +
xor eax eax +
sub esp 54h +
sub esp 18h +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push esi  +
call sub_41260A  +
push [ebp+arg_0]  +
call sub_412E9D  +
test al al +
jnz loc_413B0A  +
xor eax eax +
jmp loc_413B59  +
mov dl byte ptr [ebp+arg_0] +
lea ecx [esp+10h+var_8] +
and [esp+10h+var_4] 0 +
mov [esp+10h+var_8] offset off_43C498 +
call sub_413AA5  +
test al al +
jnz loc_413B2E  +
mov esi 80040D80h +
jmp loc_413B4E  +
mov eax [esp+10h+var_8] +
lea ecx [esp+10h+var_8] +
call dword ptr [eax+4]  +
mov cl byte ptr [ebp+arg_0] +
call sub_413A19  +
mov edx [esp+10h+var_8] +
lea ecx [esp+10h+var_8] +
mov esi eax +
call dword ptr [edx+8]  +
lea ecx [esp+10h+var_8] +
call sub_40746A  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [ebp+arg_10] +
sub esp 14h +
push ecx  +
sub esp 254h +
sub esp 18h +
sub esp 28h +
sub esp 2Ch +
sub esp 24h +
push ecx  +
sub esp 34h +
sub esp 14h +
push ecx  +
push esi  +
xor eax eax +
push edi  +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
call sub_401371  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call sub_401791  +
mov eax [edi] +
dec eax  +
cmp eax 1Eh +
ja loc_414A0C  +
jmp ds:off_414A15[eax*4]  +
mov ecx esi +
call sub_40163E  +
jmp loc_414A0C  +
push offset aC  +
lea ecx [ebp+arg_0] +
call sub_403F59  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_414A91  +
mov ecx [ebp+arg_0] +
lea ecx [ecx-10h] +
call sub_4015CE  +
lea eax [ebp+var_4] +
mov ecx esi +
push eax  +
call sub_4015E6  +
mov ecx [ebp+var_4] +
lea ecx [ecx-10h] +
jmp loc_414A07  +
push offset aSvc  +
jmp loc_414885  +
push offset aRegserver  +
jmp loc_414885  +
push offset aUnregserver  +
jmp loc_414885  +
push offset aCrash  +
jmp loc_414885  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414ABE  +
push eax  +
mov ecx esi +
call sub_4015E6  +
mov ecx [ebp+arg_0] +
jmp loc_4148B3  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414CB1  +
jmp loc_4148E2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414D86  +
jmp loc_4148E2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414DD6  +
jmp loc_4148E2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414EE0  +
jmp loc_4148E2  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414F82  +
jmp loc_4148E2  +
push offset aCr  +
jmp loc_414885  +
push offset aEmbedding  +
lea ecx [ebp+arg_0] +
call sub_403F59  +
lea eax [ebp+arg_0] +
jmp loc_4148E2  +
push offset aRegisterproduc  +
lea eax [ebp+arg_0] +
mov ecx edi +
push eax  +
call sub_414BDC  +
jmp loc_414947  +
push offset aUnregisterprod  +
jmp loc_414951  +
push offset aRegsvc  +
jmp loc_414885  +
push offset aUnregsvc  +
jmp loc_414885  +
push offset aCrashhandler  +
jmp loc_414885  +
push offset aBroker  +
jmp loc_41493F  +
push offset aOndemand  +
jmp loc_41493F  +
push offset aMedsvc  +
jmp loc_414885  +
push offset aUninstall  +
jmp loc_414885  +
call sub_401371  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_401791  +
push dword ptr [edi+24h]  +
lea eax [ebp+arg_0] +
push offset aPing  +
push offset aSS_3  +
push eax  +
call sub_4081D1  +
add esp 10h +
jmp loc_414947  +
push offset aHealthcheck  +
lea ecx [ebp+arg_0] +
call sub_403F59  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_414A91  +
mov ecx [ebp+arg_0] +
lea ecx [ecx-10h] +
call sub_4015CE  +
lea eax [ebp+var_4] +
mov ecx esi +
push eax  +
call sub_4015E6  +
mov ecx [ebp+var_4] +
add ecx 0FFFFFFF0h +
call sub_4015CE  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
call sub_401371  +
push ecx  +
push ecx  +
push ecx  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
sub esp 0Ch +
test [ebp+arg_0] 1 +
push esi  +
push ecx  +
push esi  +
push esi  +
lea ecx [esi+40h] +
xor eax eax +
lea ecx [esi+1Ch] +
mov eax ecx +
sub esp 10h +
and esp 0FFFFFFF8h +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
lea eax [ebp+arg_8] +
push ecx  +
sub esp 2Ch +
push ecx  +
push esi  +
push offset stru_443F10  +
push offset sub_415DB3  +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
push ebx  +
push esi  +
mov eax [ebp+arg_4] +
sub esp 90h +
sub esp 23Ch +
push ecx  +
mov edx [edi] +
push 18h  +
push edi  +
int 3  +
***
mov eax [ebp+arg_4] +
push esi  +
push ecx  +
sub esp 88h +
push esi  +
push ecx  +
call sub_416808  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_417440  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
cmp eax [esi+30h] +
jg loc_41689A  +
test eax eax +
js loc_41689A  +
cmp eax [esi+30h] +
jnz loc_41688D  +
mov esi [esi+8] +
jmp loc_41689C  +
push eax  +
lea ecx [esi+2Ch] +
call sub_416841  +
mov esi [eax] +
jmp loc_41689C  +
xor esi esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp ecx dword_442008 +
mov eax dword_442008 +
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
cmp byte_442DF5 0 +
call sub_417280  +
call sub_417089  +
cmp byte_442DF4 0 +
mov eax dword_442008 +
push [ebp+arg_0]  +
push [ebp+arg_0]  +
call sub_41B186  +
call sub_41722B  +
call sub_4171E5  +
push eax  +
call sub_41B40E  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_4171E8  +
test al al +
jz loc_416DB5  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_416D8E  +
call sub_41A72F  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_417328  +
push 0  +
sub esp 324h +
push ebp  +
mov ebp esp +
and dword_44312C 0 +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_44200C ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_417080  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_44200C 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_44312C ebx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-20h] +
mov [ebp-0Ch] eax +
xor edi 756E6547h +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-1Ch] +
xor eax 6C65746Eh +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
or eax [ebp-8] +
or eax edi +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_416FCA  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_416FB9  +
cmp eax 20660h +
jz loc_416FB9  +
cmp eax 20670h +
jz loc_416FB9  +
cmp eax 30650h +
jz loc_416FB9  +
cmp eax 30660h +
jz loc_416FB9  +
cmp eax 30670h +
jnz loc_416FCA  +
mov edi dword_443130 +
or edi 1 +
mov dword_443130 edi +
jmp loc_416FD0  +
mov edi dword_443130 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-1Ch] +
mov [ebp-4] eax +
jl loc_41700E  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_417011  +
or edi 2 +
mov dword_443130 edi +
jmp loc_417011  +
mov ebx [ebp-10h] +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_417080  +
or dword_44200C 4 +
mov dword_44312C 2 +
test eax 8000000h +
jz loc_417080  +
test eax 10000000h +
jz loc_417080  +
xor ecx ecx +
xor eax eax +
sub esp 324h +
sub esp 44h +
test eax eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_443134 0 +
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_442008 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
sub esp 14h +
mov ecx dword_442008 +
retn   +
***
push 0  +
call sub_4056B0  +
xor eax eax +
mov esi offset unk_43F54C +
mov esi offset unk_43F554 +
mov ebx offset unk_43F554 +
cmp esi ebx +
jnb loc_417436  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_41742E  +
mov ecx edi +
call ds:off_42F3DC  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41741E  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_417593  +
imul eax eax +
cmp ecx 20h +
jbe loc_417545  +
cmp ecx 80h +
jb loc_4174FD  +
bt dword_443130 1 +
jnb loc_417485  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_44200C 1 +
jnb loc_417545  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jbe loc_4174FD  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_4174C0  +
jmp loc_417510  +
bt dword_44200C 1 +
jnb loc_417545  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_417531  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_417515  +
test ecx 1Fh +
jz loc_417593  +
lea edi [edi+ecx-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_41755B  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_41754D  +
test ecx 4 +
jz loc_41756B  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_417593  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_417580  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4175C0  +
cmp edi eax +
jb loc_417854  +
cmp ecx 20h +
jb loc_417A9B  +
cmp ecx 80h +
jnb loc_4175E4  +
bt dword_44200C 1 +
jb loc_417A6D  +
jmp loc_4177C7  +
bt dword_443130 1 +
jnb loc_4175F7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_417610  +
bt dword_44200C 1 +
jb loc_4179F0  +
bt dword_443130 0 +
jnb loc_4177C7  +
test edi 3 +
jnz loc_4177C7  +
test esi 3 +
jnz loc_4177E2  +
bt edi 2 +
jnb loc_417649  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_417660  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_4176CD  +
bt esi 3 +
jnb loc_417726  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_41777C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_417794  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_41777C  +
***
bt ecx 2 +
jnb loc_4177A7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_4177BE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_417804[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_4177E2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_4177CF  +
mov edx ecx +
cmp ecx 20h +
jb loc_417A9B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_417804[edx*4]  +
jmp dword ptr ds:loc_417814[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_4179B4  +
bt dword_44200C 1 +
jb loc_417905  +
test edi 3 +
jz loc_41788D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_417880  +
cmp ecx 20h +
jb loc_4179B4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_4178B0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_41791C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_41790D  +
cmp ecx 80h +
jb loc_41798C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_41791C  +
cmp ecx 20h +
jb loc_4179B4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_417991  +
test ecx 0FFFFFFFCh +
jz loc_4179D1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_4179BC  +
test ecx ecx +
jz loc_4179E4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_4179D5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_417A6D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_417A10  +
test ecx ecx +
jz loc_417AD0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_417A9B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_417A80  +
and ecx 1Fh +
jz loc_417AD0  +
mov eax ecx +
shr ecx 2 +
jz loc_417AB6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_417AA7  +
mov ecx eax +
and ecx 3 +
jz loc_417AD0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_417ABD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_418173  +
cmp [ebp+arg_0] 0 +
jnz loc_417B58  +
call sub_417E29  +
call sub_417E80  +
push 0  +
call sub_418141  +
pop ecx  +
mov al 1 +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_417B7F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_4168CD  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_4168CD  +
***
sub esp 1Ch +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_417D64  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
mov edi offset stru_443170 +
test esi esi +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov ecx offset dword_4431AC +
cmp [ebp+arg_0] 0 +
mov eax dword_442008 +
mov dword_4431AC eax +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_418255  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_4168CD  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_418180  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_41846C  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_4182C9  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov eax ds:off_42F3DC +
mov eax ds:off_42F3DC +
cmp eax offset nullsub_1 +
jz loc_418342  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_41833D  +
cmp eax [ecx+4] +
jbe loc_418342  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_418369  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_418371  +
push large dword ptr fs:0  +
mov eax dword_442008 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_418428  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_4183FB  +
cmp esi [esp+18h+arg_4] +
jbe loc_418428  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_418426  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_41846C  +
mov eax [ebx+esi*4+8] +
call sub_41848B  +
jmp loc_4183DF  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_418371 +
jnz locret_41845C  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_41845C  +
mov eax 1 +
retn   +
***
mov ebx offset unk_442030 +
jmp loc_418477  +
***
mov ebx offset unk_442030 +
mov edx dword_4431AC +
mov esi eax +
push [ebp+arg_0]  +
push ecx  +
sub esp 18h +
sub esp 40h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_4168CD  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_4187E8  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_418852  +
jmp loc_418852  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_4195BE  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_418826  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_4186C8  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_4185B2  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4195BE  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_4188B0  +
cmp edi eax +
jb loc_418B44  +
cmp ecx 20h +
jb loc_418D8B  +
cmp ecx 80h +
jnb loc_4188D4  +
bt dword_44200C 1 +
jb loc_418D5D  +
jmp loc_418AB7  +
bt dword_443130 1 +
jnb loc_4188E7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_418900  +
bt dword_44200C 1 +
jb loc_418CE0  +
bt dword_443130 0 +
jnb loc_418AB7  +
test edi 3 +
jnz loc_418AB7  +
test esi 3 +
jnz loc_418AD2  +
bt edi 2 +
jnb loc_418939  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_418950  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_4189BD  +
bt esi 3 +
jnb loc_418A16  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_418A6C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_418A84  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_418A6C  +
***
bt ecx 2 +
jnb loc_418A97  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_418AAE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_418AF4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_418AD2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_418ABF  +
mov edx ecx +
cmp ecx 20h +
jb loc_418D8B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_418AF4[edx*4]  +
jmp dword ptr ds:loc_418B04[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_418CA4  +
bt dword_44200C 1 +
jb loc_418BF5  +
test edi 3 +
jz loc_418B7D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_418B70  +
cmp ecx 20h +
jb loc_418CA4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_418BA0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_418C0C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_418BFD  +
cmp ecx 80h +
jb loc_418C7C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_418C0C  +
cmp ecx 20h +
jb loc_418CA4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_418C81  +
test ecx 0FFFFFFFCh +
jz loc_418CC1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_418CAC  +
test ecx ecx +
jz loc_418CD4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_418CC5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_418D5D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_418D00  +
test ecx ecx +
jz loc_418DC0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_418D8B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_418D70  +
and ecx 1Fh +
jz loc_418DC0  +
mov eax ecx +
shr ecx 2 +
jz loc_418DA6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_418D97  +
mov ecx eax +
and ecx 3 +
jz loc_418DC0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_418DAD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
call sub_417280  +
call sub_417280  +
mov esp [ebp-18h] +
cmp [ebp+arg_18] 0 +
sub esp 68h +
sub esp 38h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
lea eax [ecx+4] +
mov eax [ebp+arg_0] +
push esi  +
call sub_417280  +
mov eax [ebp-30h] +
call sub_42B0BC  +
push 0FFFFFFFFh  +
call sub_417280  +
call sub_417D56  +
cmp dword ptr [eax+18h] 0 +
jle locret_419ABD  +
call sub_417D56  +
dec dword ptr [eax+18h]  +
retn   +
***
sub esp 18h +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [ecx+4] +
test eax eax +
jnz locret_419B98  +
mov eax offset aUnknownExcepti +
retn   +
***
sub esp 4 +
mov esi [eax+4] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
call sub_417280  +
mov esp [ebp-18h] +
mov ecx [ebp+arg_0] +
call sub_417D56  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push edi  +
push esi  +
sub esp 20h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_420511  +
call sub_420511  +
mov edi edi +
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
xor ecx ecx +
cmp eax 0E06D7363h +
setz cl  +
mov [ebp-1Ch] ecx +
mov eax [ebp-1Ch] +
retn   +
***
mov esp [ebp-18h] +
call sub_41B443  +
int 3  +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_42E295  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_442008 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
cmp dword ptr [ebp+10h] 0 +
jnz loc_41A5F3  +
call sub_4171E8  +
test al al +
jz loc_41A5F3  +
push dword ptr [ebp+8]  +
call sub_41A69E  +
pop ecx  +
lea eax [ebp+0Ch] +
mov byte ptr [ebp-0Dh] 0 +
mov [ebp-24h] eax +
lea eax [ebp+10h] +
mov [ebp-20h] eax +
lea eax [ebp-0Dh] +
mov [ebp-1Ch] eax +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-0Eh] +
push 2  +
pop eax  +
mov [ebp-14h] eax +
mov [ebp-18h] eax +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
call sub_41A47C  +
cmp dword ptr [ebp+10h] 0 +
jz loc_41A63D  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
leave   +
retn   +
***
push dword ptr [ebp+8]  +
call sub_41A64B  +
mov edi edi +
call sub_4207E7  +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_42E2B2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_442008 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_41A6FE  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_41A6FE  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_42F3DC  +
call esi  +
cmp [ebp+hLibModule] 0 +
jz loc_41A70D  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
call loc_41A5B4  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_443410 0 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41AC6F  +
mov eax [esi] +
push edi  +
mov edi esi +
jmp loc_41AC63  +
push eax  +
call sub_420048  +
lea edi [edi+4] +
mov eax [edi] +
pop ecx  +
test eax eax +
jnz loc_41AC57  +
push esi  +
call sub_420048  +
pop ecx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax dword_443414 +
jz loc_41ACA6  +
push eax  +
call sub_41AC43  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_41AC8D  +
push dword_443418  +
call sub_41AC43  +
push dword_443414  +
call sub_41AC43  +
add esp 0Ch +
call sub_42B073  +
retn   +
***
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42B088  +
lea eax [ebp+8] +
mov [ebp-18h] eax +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-0Dh] +
push 2  +
pop eax  +
mov [ebp-14h] eax +
mov [ebp-1Ch] eax +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call sub_41ACFE  +
call sub_42B073  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_44344C offset off_442058 +
mov [esp+4+var_4] offset unk_443428 +
call sub_41AFE7  +
pop ecx  +
mov al 1 +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
call sub_421E98  +
mov edi edi +
mov edi edi +
mov eax dword_442008 +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4435CC +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
xor eax eax +
mov ecx offset dword_443440 +
inc eax  +
xchg eax [ecx] +
retn   +
mov edi edi +
mov eax dword_443444 +
mov edi edi +
call sub_417280  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_422097  +
mov edi edi +
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_41FB56  +
test al al +
jz loc_41D9F0  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41DBBA  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_41A12E  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
mov bl [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov [esi+2Dh] bl +
test bl bl +
jz loc_41DBBA  +
mov byte ptr [ebp+var_C] bl +
lea eax [esi+14h] +
mov bh bl +
cmp dword ptr [eax] 0 +
jl loc_41DBBA  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push [ebp+var_C]  +
call sub_41D7A5  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_41DC10  +
movzx eax al +
cmp eax 7 +
ja loc_41D9F0  +
jmp ds:off_41DC30[eax*4]  +
mov edi [esi+8] +
xor eax eax +
mov [esi+38h] al +
mov byte ptr [ebp+var_4] bl +
cmp [edi+14h] al +
jnz loc_41DA6D  +
mov ecx edi +
call sub_41FAE0  +
mov bl [esi+2Dh] +
mov byte ptr [ebp+var_4] bl +
mov bh bl +
push 8000h  +
movsx eax bl +
push eax  +
mov eax [edi+0Ch] +
mov byte ptr [ebp+var_8] bh +
push dword ptr [eax]  +
call sub_41B351  +
add esp 0Ch +
lea edi [esi+14h] +
test eax eax +
jz loc_41DAB6  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
push edi  +
push [ebp+var_4]  +
call sub_41FC46  +
mov eax [esi+0Ch] +
mov cl [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov [esi+2Dh] cl +
test cl cl +
jz loc_41DBD5  +
mov byte ptr [ebp+var_8] cl +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
push edi  +
push [ebp+var_8]  +
call sub_41FC46  +
jmp loc_41DB9E  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_41DB9E  +
movsx eax bl +
sub eax 20h +
jz loc_41DB29  +
sub eax 3 +
jz loc_41DB23  +
sub eax 8 +
jz loc_41DB1D  +
dec eax  +
sub eax 1 +
jz loc_41DB14  +
sub eax 3 +
jnz loc_41DB9E  +
or dword ptr [esi+1Ch] 8 +
jmp loc_41DB9E  +
or dword ptr [esi+1Ch] 4 +
jmp loc_41DB9E  +
or dword ptr [esi+1Ch] 1 +
jmp loc_41DB9E  +
or dword ptr [esi+1Ch] 20h +
jmp loc_41DB9E  +
or dword ptr [esi+1Ch] 2 +
jmp loc_41DB9E  +
cmp bl 2Ah +
jz loc_41DB41  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_41D8B2  +
jmp loc_41DB96  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_41DB5B  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_41DB96  +
and dword ptr [esi+24h] 0 +
jmp loc_41DB9E  +
cmp bl 2Ah +
jz loc_41DB6F  +
lea eax [esi+24h] +
jmp loc_41DB37  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_41DB5B  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_41DB5B  +
mov ecx esi +
call sub_41E3B4  +
jmp loc_41DB96  +
mov ecx esi +
call sub_41E7FE  +
test al al +
jz loc_41D9F0  +
mov eax [esi+0Ch] +
mov bl [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov bh bl +
mov [esi+2Dh] bl +
lea eax [esi+14h] +
mov byte ptr [ebp+var_C] bl +
test bl bl +
jnz loc_41DA1C  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41D9F8  +
mov eax [esi+14h] +
jmp loc_41D9F3  +
mov eax [esi+8] +
xor ebx ebx +
push 16h  +
pop edi  +
mov byte ptr [eax+1Ch] 1 +
mov [eax+18h] edi +
push dword ptr [esi+8]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_41A12E  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov [eax+18h] edi +
push dword ptr [esi+8]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_41A12E  +
add esp 30h +
jmp loc_41D9F0  +
mov ecx [esi+8] +
xor eax eax +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
push dword ptr [esi+8]  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
jmp loc_41D9E8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_41FB8E  +
test al al +
jz loc_41DC9A  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41DE8E  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_41A12E  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
mov bl [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov [esi+2Dh] bl +
test bl bl +
jz loc_41DE8E  +
mov byte ptr [ebp+var_4] bl +
mov bh bl +
cmp dword ptr [esi+14h] 0 +
jl loc_41DE8E  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push [ebp+var_4]  +
call sub_41D7A5  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_41DEE4  +
movzx eax al +
cmp eax 7 +
ja loc_41DC9A  +
jmp ds:off_41DF04[eax*4]  +
mov edi [esi+8] +
xor eax eax +
mov [esi+38h] al +
cmp [edi+14h] al +
jnz loc_41DD0F  +
mov ecx edi +
call sub_41FAE0  +
mov bl [esi+2Dh] +
mov bh bl +
push 8000h  +
movsx eax bl +
push eax  +
mov eax [edi+0Ch] +
push dword ptr [eax]  +
call sub_41B351  +
add esp 0Ch +
lea edi [esi+448h] +
test eax eax +
jz loc_41DD6E  +
mov ecx [edi] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_41DD4A  +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_41DD44  +
inc dword ptr [esi+14h]  +
jmp loc_41DD5A  +
or dword ptr [esi+14h] 0FFFFFFFFh +
jmp loc_41DD5A  +
inc dword ptr [esi+14h]  +
inc dword ptr [ecx+8]  +
mov eax [edi] +
mov eax [eax] +
mov [eax] bl +
mov eax [edi] +
inc dword ptr [eax]  +
mov eax [esi+0Ch] +
mov bh [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov [esi+2Dh] bh +
test bh bh +
jz loc_41DEA9  +
mov ecx [edi] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_41DD8F  +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_41DD86  +
inc dword ptr [esi+14h]  +
jmp loc_41DE75  +
or dword ptr [esi+14h] 0FFFFFFFFh +
jmp loc_41DE75  +
inc dword ptr [esi+14h]  +
inc dword ptr [ecx+8]  +
mov eax [edi] +
mov eax [eax] +
mov [eax] bh +
mov eax [edi] +
inc dword ptr [eax]  +
jmp loc_41DE75  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_41DE75  +
movsx eax bl +
sub eax 20h +
jz loc_41DE00  +
sub eax 3 +
jz loc_41DDFA  +
sub eax 8 +
jz loc_41DDF4  +
dec eax  +
sub eax 1 +
jz loc_41DDEB  +
sub eax 3 +
jnz loc_41DE75  +
or dword ptr [esi+1Ch] 8 +
jmp loc_41DE75  +
or dword ptr [esi+1Ch] 4 +
jmp loc_41DE75  +
or dword ptr [esi+1Ch] 1 +
jmp loc_41DE75  +
or dword ptr [esi+1Ch] 20h +
jmp loc_41DE75  +
or dword ptr [esi+1Ch] 2 +
jmp loc_41DE75  +
cmp bl 2Ah +
jz loc_41DE18  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_41D8B2  +
jmp loc_41DE6D  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_41DE32  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_41DE6D  +
and dword ptr [esi+24h] 0 +
jmp loc_41DE75  +
cmp bl 2Ah +
jz loc_41DE46  +
lea eax [esi+24h] +
jmp loc_41DE0E  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_41DE32  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_41DE32  +
mov ecx esi +
call sub_41E512  +
jmp loc_41DE6D  +
mov ecx esi +
call sub_41EB46  +
test al al +
jz loc_41DC9A  +
mov eax [esi+0Ch] +
mov bl [eax] +
inc eax  +
mov [esi+0Ch] eax +
mov bh bl +
mov [esi+2Dh] bl +
mov byte ptr [ebp+var_4] bl +
test bl bl +
jnz loc_41DCC3  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41DCA2  +
mov eax [esi+14h] +
jmp loc_41DC9D  +
mov eax [esi+8] +
xor ebx ebx +
push 16h  +
pop edi  +
mov byte ptr [eax+1Ch] 1 +
mov [eax+18h] edi +
push dword ptr [esi+8]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_41A12E  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov [eax+18h] edi +
push dword ptr [esi+8]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_41A12E  +
add esp 30h +
jmp loc_41DC9A  +
mov ecx [esi+8] +
xor eax eax +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
push dword ptr [esi+8]  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
jmp loc_41DC92  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_41FB8E  +
test al al +
jz loc_41DF6A  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41E119  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_41A12E  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov [esi+2Eh] cx +
test cx cx +
jz loc_41E119  +
mov edi ecx +
lea eax [esi+14h] +
mov ebx [eax] +
test ebx ebx +
js loc_41E10A  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push edi  +
call sub_41D7E0  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_41E134  +
movzx eax al +
cmp eax 7 +
ja loc_41DF6A  +
jmp ds:off_41E154[eax*4]  +
mov byte ptr [esi+38h] 1 +
mov ecx [esi+448h] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_41DFF2  +
cmp byte ptr [ecx+0Ch] 0 +
lea ecx [esi+14h] +
jz loc_41DFE8  +
lea eax [ebx+1] +
jmp loc_41DFEB  +
or eax 0FFFFFFFFh +
mov [ecx] eax +
jmp loc_41E0EC  +
lea eax [ebx+1] +
mov [esi+14h] eax +
inc dword ptr [ecx+8]  +
lea ecx [esi+448h] +
mov eax [ecx] +
mov eax [eax] +
mov [eax] di +
mov eax [ecx] +
add dword ptr [eax] 2 +
jmp loc_41E0EC  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_41E0EC  +
movzx eax di +
sub eax 20h +
jz loc_41E071  +
sub eax 3 +
jz loc_41E06B  +
sub eax 8 +
jz loc_41E062  +
dec eax  +
sub eax 1 +
jz loc_41E059  +
sub eax 3 +
jnz loc_41E0EC  +
or dword ptr [esi+1Ch] 8 +
jmp loc_41E0EC  +
or dword ptr [esi+1Ch] 4 +
jmp loc_41E0EC  +
or dword ptr [esi+1Ch] 1 +
jmp loc_41E0EC  +
or dword ptr [esi+1Ch] 20h +
jmp loc_41E0EC  +
or dword ptr [esi+1Ch] 2 +
jmp loc_41E0EC  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_41E08C  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_41D92A  +
jmp loc_41E0E4  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_41E0A6  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_41E0E4  +
and dword ptr [esi+24h] 0 +
jmp loc_41E0EC  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_41E0BD  +
lea eax [esi+24h] +
jmp loc_41E082  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_41E0A6  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_41E0A6  +
mov ecx esi +
call sub_41E670  +
jmp loc_41E0E4  +
mov ecx esi +
call sub_41EED4  +
test al al +
jz loc_41DF6A  +
mov eax [esi+0Ch] +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov edi ecx +
mov [esi+2Eh] cx +
lea eax [esi+14h] +
test cx cx +
jnz loc_41DF97  +
mov al [esi+18h] +
test al al +
jz loc_41E119  +
cmp al 7 +
jnz loc_41DF47  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41DF71  +
mov eax [esi+14h] +
jmp loc_41DF6D  +
mov ecx [esi+8] +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
xor ecx ecx +
push dword ptr [esi+8]  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
jmp loc_41DF62  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push dword ptr [esi+8]  +
lea ecx [esi+448h] +
call sub_41FB8E  +
test al al +
jz loc_41E1BA  +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_41E35A  +
mov eax [esi+8] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 16h +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
call sub_41A12E  +
add esp 18h +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
retn   +
mov eax [esi+0Ch] +
and dword ptr [esi+34h] 0 +
mov byte ptr [esi+18h] 0 +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov [esi+2Eh] cx +
test cx cx +
jz loc_41E35A  +
mov edi ecx +
lea eax [esi+14h] +
mov ebx [eax] +
test ebx ebx +
js loc_41E35A  +
movzx eax byte ptr [esi+18h] +
mov ecx esi +
push eax  +
push edi  +
call sub_41D81C  +
mov [esi+18h] al +
cmp al 8 +
jnb loc_41E375  +
movzx eax al +
cmp eax 7 +
ja loc_41E1BA  +
jmp ds:off_41E394[eax*4]  +
mov byte ptr [esi+38h] 1 +
mov ecx [esi+448h] +
mov eax [ecx+8] +
cmp eax [ecx+4] +
jnz loc_41E242  +
cmp byte ptr [ecx+0Ch] 0 +
lea ecx [esi+14h] +
jz loc_41E238  +
lea eax [ebx+1] +
jmp loc_41E23B  +
or eax 0FFFFFFFFh +
mov [ecx] eax +
jmp loc_41E33C  +
lea eax [ebx+1] +
mov [esi+14h] eax +
inc dword ptr [ecx+8]  +
lea ecx [esi+448h] +
mov eax [ecx] +
mov eax [eax] +
mov [eax] di +
mov eax [ecx] +
add dword ptr [eax] 2 +
jmp loc_41E33C  +
and dword ptr [esi+20h] 0 +
and dword ptr [esi+1Ch] 0 +
or dword ptr [esi+24h] 0FFFFFFFFh +
and dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov byte ptr [esi+38h] 0 +
jmp loc_41E33C  +
movzx eax di +
sub eax 20h +
jz loc_41E2C1  +
sub eax 3 +
jz loc_41E2BB  +
sub eax 8 +
jz loc_41E2B2  +
dec eax  +
sub eax 1 +
jz loc_41E2A9  +
sub eax 3 +
jnz loc_41E33C  +
or dword ptr [esi+1Ch] 8 +
jmp loc_41E33C  +
or dword ptr [esi+1Ch] 4 +
jmp loc_41E33C  +
or dword ptr [esi+1Ch] 1 +
jmp loc_41E33C  +
or dword ptr [esi+1Ch] 20h +
jmp loc_41E33C  +
or dword ptr [esi+1Ch] 2 +
jmp loc_41E33C  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_41E2DC  +
lea eax [esi+20h] +
push eax  +
mov ecx esi +
call sub_41D92A  +
jmp loc_41E334  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+20h] eax +
test eax eax +
jns loc_41E2F6  +
or dword ptr [esi+1Ch] 4 +
neg eax  +
mov [esi+20h] eax +
mov al 1 +
jmp loc_41E334  +
and dword ptr [esi+24h] 0 +
jmp loc_41E33C  +
push 2Ah  +
pop eax  +
cmp di ax +
jz loc_41E30D  +
lea eax [esi+24h] +
jmp loc_41E2D2  +
add dword ptr [esi+10h] 4 +
mov eax [esi+10h] +
mov eax [eax-4] +
mov [esi+24h] eax +
test eax eax +
jns loc_41E2F6  +
or dword ptr [esi+24h] 0FFFFFFFFh +
jmp loc_41E2F6  +
mov ecx esi +
call sub_41E670  +
jmp loc_41E334  +
mov ecx esi +
call sub_41EED4  +
test al al +
jz loc_41E1BA  +
mov eax [esi+0Ch] +
movzx ecx word ptr [eax] +
add eax 2 +
mov [esi+0Ch] eax +
mov edi ecx +
mov [esi+2Eh] cx +
lea eax [esi+14h] +
test cx cx +
jnz loc_41E1E7  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_41E1C1  +
mov eax [esi+14h] +
jmp loc_41E1BD  +
mov ecx [esi+8] +
mov byte ptr [ecx+1Ch] 1 +
mov dword ptr [ecx+18h] 16h +
xor ecx ecx +
push dword ptr [esi+8]  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
jmp loc_41E1B2  +
***
mov al [ecx+2Dh] +
mov al [ecx+2Dh] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_41F322  +
movzx eax ds:byte_41F33D[eax] +
jmp ds:off_41F329[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
pop eax  +
pop ebp  +
retn   +
push 4  +
jmp loc_41F317  +
push 8  +
jmp loc_41F317  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+1Ch] +
mov edx [ecx+1Ch] +
mov dword ptr [ecx+28h] 0Ah +
mov dword ptr [ecx+28h] 0Ah +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
add eax 0FFFFFFFEh +
mov [ecx] eax +
mov cx [ebp+arg_0] +
test cx cx +
jz loc_41FAD9  +
cmp [eax] cx +
jz loc_41FAD9  +
call sub_41A2B6  +
mov dword ptr [eax] 16h +
call sub_41A1AB  +
pop ebp  +
retn 4  +
***
mov edi edi +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax ecx +
mov [ebp+var_4] eax +
test ebx ebx +
jz loc_41FDA1  +
mov eax [eax] +
push edi  +
mov edi [eax+4] +
cmp [eax+8] edi +
jnz loc_41FD5E  +
cmp byte ptr [eax+0Ch] 0 +
mov eax [ebp+arg_8] +
jz loc_41FD99  +
jmp loc_41FD91  +
sub edi [eax+8] +
cmp edi ebx +
jb loc_41FD67  +
mov edi ebx +
push esi  +
lea esi [edi+edi] +
push esi  +
push [ebp+arg_0]  +
push dword ptr [eax]  +
call loc_418890  +
mov ecx [ebp+var_4] +
add esp 0Ch +
mov eax [ecx] +
add [eax] esi +
mov eax [ecx] +
pop esi  +
add [eax+8] edi +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 0 +
mov eax [ebp+arg_8] +
jz loc_41FD95  +
add [eax] ebx +
jmp loc_41FDA0  +
cmp edi ebx +
jz loc_41FD9E  +
or dword ptr [eax] 0FFFFFFFFh +
jmp loc_41FDA0  +
add [eax] edi +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
lea ecx [ebp+var_28] +
push esi  +
push [ebp+arg_14]  +
call sub_419E9F  +
push [ebp+arg_18]  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41BBB3  +
add esp 1Ch +
lea ecx [ebp+var_28] +
mov esi eax +
call sub_419EE7  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
test eax eax +
jz loc_420036  +
inc edx  +
sub ebx 1 +
jbe loc_420036  +
test dl 3 +
jnz loc_41FFF0  +
lea eax [ecx+edx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_41FFF0  +
mov eax [ecx+edx] +
cmp eax [edx] +
jnz loc_41FFF0  +
sub ebx 4 +
jbe loc_420036  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_420007  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_442050 +
mov edi edi +
mov edi edi +
mov dword_442050 eax +
mov eax dword_442050 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_0] +
jbe loc_420887  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
pop ecx  +
retn   +
***
cmp byte_4435B4 0 +
call sub_4203C0  +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_442008 +
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov al 1 +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 48h +
lea eax [ebp-48h] +
push eax  +
call ds:GetStartupInfoW  +
cmp word ptr [ebp-16h] 0 +
jz locret_421D5A  +
push ebx  +
mov ebx [ebp-14h] +
test ebx ebx +
jz loc_421D59  +
push esi  +
mov esi [ebx] +
lea eax [ebx+4] +
add eax esi +
mov [ebp-4] eax +
mov eax 2000h +
cmp esi eax +
jl loc_421CE5  +
mov esi eax +
push esi  +
call sub_42297D  +
mov eax dword_4438B0 +
pop ecx  +
cmp esi eax +
jle loc_421CF7  +
mov esi eax +
push edi  +
xor edi edi +
test esi esi +
jz loc_421D57  +
mov eax [ebp-4] +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_421D4C  +
cmp ecx 0FFFFFFFEh +
jz loc_421D4C  +
mov dl [edi+ebx+4] +
test dl 1 +
jz loc_421D4C  +
test dl 8 +
jnz loc_421D26  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_421D49  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_4436B0[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [edi+ebx+4] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_421D01  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_4436B0[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_421D89  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_421D89  +
or byte ptr [esi+28h] 80h +
jmp loc_421DFE  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_421DA4  +
sub eax 1 +
jz loc_421DA0  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_421DA6  +
push 0FFFFFFF5h  +
jmp loc_421DA6  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_421DE0  +
test ebx ebx +
jz loc_421DE0  +
push ebx  +
call ds:GetFileType  +
test eax eax +
jz loc_421DE0  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_421DD5  +
or byte ptr [esi+28h] 40h +
jmp loc_421DFE  +
cmp eax 3 +
jnz loc_421DFE  +
or byte ptr [esi+28h] 8 +
jmp loc_421DFE  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_4438CC +
test eax eax +
jz loc_421DFE  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_421D63  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
pop ecx  +
call sub_417280  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_422276  +
push 3  +
call sub_4207D0  +
pop ecx  +
retn   +
***
call sub_417280  +
mov eax [ebp+10h] +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov eax dword_4438C8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_4227F2  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
nop   +
shr eax 9 +
test al 1 +
jz loc_4227F0  +
push [ebp+arg_8]  +
push esi  +
call sub_4224AC  +
pop ecx  +
pop ecx  +
mov eax 0FFFFFD7Fh +
and [edi] eax +
xor eax eax +
mov [esi+18h] eax +
mov [esi+4] eax +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 38h  +
push 40h  +
call sub_420818  +
mov esi eax +
xor ebx ebx +
mov [ebp+var_8] esi +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_4228F0  +
mov esi ebx +
jmp loc_42293B  +
lea eax [esi+0E00h] +
cmp esi eax +
jz loc_42293B  +
push edi  +
lea edi [esi+20h] +
mov esi eax +
push ebx  +
push 0FA0h  +
lea eax [edi-20h] +
push eax  +
call sub_421B2D  +
or dword ptr [edi-8] 0FFFFFFFFh +
and byte ptr [edi+0Dh] 0F8h +
mov [edi] ebx +
lea edi [edi+38h] +
mov [edi-34h] ebx +
lea eax [edi-20h] +
mov dword ptr [edi-30h] 0A0A0000h +
mov byte ptr [edi-2Ch] 0Ah +
mov [edi-2Ah] ebx +
mov [edi-26h] bl +
cmp eax esi +
jnz loc_422900  +
mov esi [ebp+var_8] +
pop edi  +
push ebx  +
call sub_420048  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call sub_417280  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword_4438DC 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFE0h +
ja loc_422E20  +
test esi esi +
jnz loc_422E0B  +
inc esi  +
jmp loc_422E0B  +
call sub_41B407  +
test eax eax +
jz loc_422E20  +
push esi  +
call sub_421F40  +
pop ecx  +
test eax eax +
jz loc_422E20  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_422DF7  +
jmp loc_422E2D  +
call sub_41A2B6  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_44312C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_422EBB  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_422E5D  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_422E70  +
cmp byte ptr [eax] 0 +
jz loc_422E70  +
inc eax  +
cmp eax ecx +
jnz loc_422E66  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_422F4C  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFE0h +
add edi eax +
cmp eax 1 +
jl loc_422F32  +
mov esi [ebp+8] +
mov edx esi +
mov edi [ebp+0Ch] +
and edx 0Fh +
push 10h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
cmp edi edx +
jnb loc_422EDC  +
mov edx edi +
lea ecx [edx+esi] +
mov eax esi +
cmp esi ecx +
jz loc_422EEF  +
cmp byte ptr [eax] 0 +
jz loc_422EEF  +
inc eax  +
cmp eax ecx +
jnz loc_422EE5  +
mov ecx eax +
sub ecx esi +
cmp ecx edx +
jnz loc_422F4C  +
sub edi edx +
mov ecx eax +
and edi 0FFFFFFF0h +
xorps xmm1 xmm1 +
add edi eax +
cmp eax edi +
jz loc_422F1D  +
movups xmm0 oword ptr [ecx] +
pcmpeqb xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_422F1D  +
add ecx 10h +
cmp ecx edi +
jnz loc_422F07  +
mov eax [ebp+0Ch] +
add eax esi +
jmp loc_422F2A  +
cmp byte ptr [ecx] 0 +
jz loc_422F2E  +
inc ecx  +
cmp ecx eax +
jnz loc_422F24  +
sub ecx esi +
jmp loc_422F4C  +
mov edx [ebp+8] +
mov ecx edx +
mov eax [ebp+0Ch] +
add eax edx +
cmp edx eax +
jz loc_422F4A  +
cmp byte ptr [ecx] 0 +
jz loc_422F4A  +
inc ecx  +
cmp ecx eax +
jnz loc_422F40  +
sub ecx edx +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_44312C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_422FEA  +
mov eax [ebp+8] +
test al 1 +
jz loc_422F83  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_422F7C  +
add ecx 2 +
jmp loc_422F72  +
***
sub ecx eax +
jmp loc_423072  +
mov esi eax +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_422FAF  +
cmp [ecx] dx +
jz loc_422FAF  +
add ecx 2 +
cmp ecx edi +
jnz loc_422FA3  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_423074  +
lea ecx [eax+ecx*2] +
cmp eax 1 +
jl loc_423060  +
mov eax [ebp+8] +
test al 1 +
jz loc_423008  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_422F7C  +
add ecx 2 +
jmp loc_422FFA  +
***
mov esi eax +
and esi 0Fh +
push 10h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_423034  +
cmp [ecx] dx +
jz loc_423034  +
add ecx 2 +
cmp ecx edi +
jnz loc_423028  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_423074  +
lea ecx [eax+ecx*2] +
xorps xmm1 xmm1 +
movaps xmm0 xmm1 +
pcmpeqw xmm0 oword ptr [ecx] +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_423056  +
add ecx 10h +
jmp loc_423042  +
***
cmp [ecx] dx +
jz loc_42306F  +
add ecx 2 +
jmp loc_423056  +
***
mov ecx [ebp+8] +
xor edx edx +
cmp [ecx] dx +
jz loc_42306F  +
add ecx 2 +
jmp loc_423065  +
***
sub ecx [ebp+8] +
sar ecx 1 +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_44312C +
push esi  +
push edi  +
cmp eax 5 +
jl loc_423146  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_4230B8  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_4230D3  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_4230EB  +
cmp [ecx] ax +
jz loc_4230EB  +
add ecx 2 +
cmp ecx edi +
jnz loc_4230DF  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_423224  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_4230B1  +
xor eax eax +
cmp [ecx] ax +
jz loc_4230B1  +
add ecx 2 +
cmp ecx edx +
jnz loc_423169  +
jmp loc_4230B1  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_4231E0  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4231E4  +
add edi 10h +
cmp edi ecx +
jnz loc_4231CE  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_4231FC  +
xor eax eax +
cmp [edi] ax +
jz loc_4231FC  +
add edi 2 +
cmp edi ecx +
jnz loc_4231F0  +
mov ecx edi +
jmp loc_4230B1  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_442008 +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
sub dword ptr [edx+8] 1 +
jns loc_424B5D  +
push [ebp+arg_8]  +
push edx  +
push [ebp+arg_0]  +
call sub_4284B2  +
add esp 0Ch +
pop ebp  +
retn   +
mov eax [edx] +
mov cl byte ptr [ebp+arg_0] +
mov [eax] cl +
inc dword ptr [edx]  +
movzx eax cl +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_442008 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_424BCF  +
test ecx ecx +
jz loc_424BCF  +
call sub_41A2B6  +
mov dword ptr [eax] 16h +
call sub_41A1AB  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4168CD  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_424BAE  +
test ebx ebx +
jz loc_424BAE  +
mov [ebp+var_118] 0 +
cmp ecx 2 +
jb loc_424BBE  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_F8] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
inc eax  +
cmp eax 8 +
ja loc_424CBA  +
cmp ecx esi +
jbe loc_425033  +
lea edx [edi+esi] +
mov [ebp+var_110] edx +
mov eax esi +
mov esi edx +
mov [ebp+var_FC] eax +
cmp esi ecx +
ja loc_424C52  +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_42F3DC  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_424C40  +
mov eax esi +
mov [ebp+var_FC] eax +
jmp loc_424C46  +
mov eax [ebp+var_FC] +
mov ecx [ebp+var_F8] +
add esi edi +
cmp esi ecx +
jbe loc_424C23  +
mov [ebp+var_10C] edi +
mov edx ecx +
cmp eax ecx +
jz loc_424C99  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_FC] eax +
jmp loc_424C70  +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_FC] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_424C70  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_F8] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_110] +
mov [ebp+var_F8] ecx +
cmp ecx esi +
ja loc_424C15  +
jmp loc_425033  +
shr eax 1 +
mov ecx ebx +
imul eax edi +
mov [ebp+var_FC] eax +
lea edi [eax+esi] +
push edi  +
push esi  +
mov [ebp+var_114] edi +
call ds:off_42F3DC  +
call ebx  +
mov esi [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_104] +
jle loc_424D3A  +
mov [ebp+var_10C] esi +
mov [ebp+var_110] edi +
cmp eax edi +
jz loc_424D3A  +
mov ebx [ebp+var_10C] +
mov esi edi +
mov edi [ebp+var_FC] +
jmp loc_424D10  +
mov al [esi] +
mov edx esi +
sub edx edi +
mov cl [edx] +
mov [edx] al +
mov [esi] cl +
inc esi  +
sub ebx 1 +
jnz loc_424D10  +
mov edi [ebp+var_114] +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
mov eax [ebp+var_104] +
push [ebp+var_F8]  +
mov ecx ebx +
push eax  +
call ds:off_42F3DC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
jle loc_424DA1  +
mov eax [ebp+var_104] +
mov [ebp+var_114] esi +
mov esi edx +
cmp eax edx +
jz loc_424DA1  +
mov ebx [ebp+var_114] +
sub eax edx +
mov [ebp+var_110] eax +
mov edx eax +
lea ebx [ebx+0] +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_424D80  +
mov ebx [ebp+var_108] +
mov edx [ebp+var_F8] +
push edx  +
push edi  +
mov ecx ebx +
call ds:off_42F3DC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_424DF5  +
mov ebx eax +
mov esi edx +
cmp edi edx +
jz loc_424DF5  +
mov eax edi +
sub eax edx +
mov [ebp+var_114] eax +
mov edx eax +
mov al [esi] +
lea esi [esi+1] +
mov cl [edx+esi-1] +
mov [edx+esi-1] al +
mov [esi-1] cl +
sub ebx 1 +
jnz loc_424DD4  +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
mov esi [ebp+var_104] +
mov ebx edx +
mov [ebp+var_FC] edx +
cmp edi esi +
jbe loc_424E45  +
jmp loc_424E10  +
add esi eax +
mov [ebp+var_10C] esi +
cmp esi edi +
jnb loc_424E3F  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_42F3DC  +
call [ebp+var_108]  +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_424E10  +
jmp loc_424E81  +
mov edx [ebp+var_F8] +
mov ebx [ebp+var_108] +
jmp loc_424E50  +
add esi eax +
cmp esi edx +
ja loc_424E75  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_42F3DC  +
call ebx  +
mov edx [ebp+var_F8] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jle loc_424E50  +
mov ebx [ebp+var_FC] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_108] +
jmp loc_424E90  +
mov eax [ebp+var_100] +
mov ecx ebx +
sub ebx eax +
mov [ebp+var_FC] ecx +
cmp ebx edi +
jbe loc_424EC3  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_42F3DC  +
call esi  +
add esp 8 +
test eax eax +
jg loc_424E90  +
mov eax [ebp+var_100] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_FC] ebx +
cmp ebx esi +
jb loc_424F1D  +
mov [ebp+var_110] eax +
mov edx ebx +
jz loc_424F08  +
sub esi ebx +
mov ebx eax +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_424EE1  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_FC] +
mov eax [ebp+var_100] +
mov edx [ebp+var_F8] +
cmp edi ebx +
jnz loc_424E03  +
mov edi esi +
jmp loc_424E03  +
cmp edi ecx +
jnb loc_424F5D  +
mov ebx [ebp+var_108] +
jmp loc_424F30  +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx edi +
jbe loc_424F5D  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_42F3DC  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_424F30  +
jmp loc_424FA1  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_104] +
lea esp [esp+0] +
sub ecx eax +
mov [ebp+var_FC] ecx +
cmp ecx esi +
jbe loc_424F9B  +
push edi  +
push ecx  +
mov ecx ebx +
call ds:off_42F3DC  +
call ebx  +
mov ecx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_100] +
jz loc_424F70  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov ecx edx +
mov edi [ebp+var_FC] +
sub ecx esi +
mov eax edi +
sub eax [ebp+var_104] +
cmp eax ecx +
jl loc_424FFA  +
mov eax [ebp+var_104] +
cmp eax edi +
jnb loc_424FDF  +
mov ecx [ebp+var_118] +
mov [ebp+ecx*4+var_7C] eax +
mov [ebp+ecx*4+var_F4] edi +
inc ecx  +
mov [ebp+var_118] ecx +
mov ecx [ebp+var_F8] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_425033  +
mov [ebp+var_104] esi +
jmp loc_424BF2  +
cmp esi edx +
jnb loc_425016  +
mov eax [ebp+var_118] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_118] eax +
mov esi [ebp+var_104] +
cmp esi edi +
jnb loc_42502D  +
mov ecx edi +
mov edi [ebp+var_100] +
jmp loc_424BEC  +
mov edi [ebp+var_100] +
mov eax [ebp+var_118] +
sub eax 1 +
mov [ebp+var_118] eax +
js loc_424BBE  +
mov esi [ebp+eax*4+var_7C] +
mov ecx [ebp+eax*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_424BEC  +
***
add edx 1 +
bts [esp] eax +
jmp loc_425074  +
***
mov edi edi +
mov edi edi +
call sub_421353  +
mov edi edi +
mov edi edi +
call sub_417280  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_42E309  +
mov eax large fs:0 +
push eax  +
sub esp 74h +
mov eax dword_442008 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_4] +
mov edx eax +
mov esi [ebp+arg_8] +
and eax 3Fh +
mov ebx [ebp+arg_10] +
imul ecx eax +
sar edx 6 +
mov [ebp+var_60] esi +
mov [ebp+var_3C] ebx +
mov [ebp+var_50] edx +
mov eax dword_4436B0[edx*4] +
mov [ebp+var_44] ecx +
mov eax [eax+ecx+18h] +
mov [ebp+hFile] eax +
mov eax [ebp+arg_C] +
add eax esi +
mov [ebp+var_54] eax +
call ds:GetConsoleOutputCP  +
cmp byte ptr [ebx+14h] 0 +
mov [ebp+CodePage] eax +
jnz loc_4254FA  +
mov ecx ebx +
call sub_41FAE0  +
mov eax [ebx+0Ch] +
mov esi [ebp+arg_0] +
mov edi esi +
mov eax [eax+8] +
mov [ebp+var_68] eax +
xor eax eax +
stos   +
stos   +
stos   +
mov eax [ebp+var_60] +
mov edx eax +
mov [ebp+var_30] edx +
cmp eax [ebp+var_54] +
jnb loc_425832  +
mov edi [ebp+var_44] +
xor ebx ebx +
mov [ebp+var_48] ebx +
cmp [ebp+var_68] 0FDE9h +
mov al [edx] +
mov [ebp+var_31] al +
mov eax [ebp+var_50] +
mov dword ptr [ebp+WideCharStr] ebx +
mov [ebp+cchWideChar] 1 +
mov ecx dword_4436B0[eax*4] +
mov [ebp+var_4C] ecx +
jnz loc_425683  +
add ecx 2Eh +
mov eax ebx +
add ecx edi +
cmp [ecx] bl +
jz loc_425561  +
inc eax  +
inc ecx  +
cmp eax 5 +
jl loc_425556  +
mov edi [ebp+var_54] +
sub edi edx +
mov [ebp+cchWideChar] eax +
test eax eax +
jz loc_425628  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_44] +
add eax 2Eh +
add eax ecx +
mov [ebp+var_4C] eax +
movzx eax byte ptr [eax] +
movsx eax byte_442788[eax] +
inc eax  +
mov [ebp+var_38] eax +
sub eax [ebp+cchWideChar] +
mov [ebp+var_48] eax +
cmp eax edi +
jg loc_4257B9  +
mov ecx [ebp+cchWideChar] +
mov edi ebx +
mov esi [ebp+var_4C] +
mov al [esi] +
mov byte ptr [ebp+edi+var_18] al +
inc edi  +
inc esi  +
cmp edi ecx +
jl loc_4255A3  +
mov edi [ebp+var_48] +
test edi edi +
jle loc_4255C9  +
push edi  +
lea eax [ebp+var_18] +
add eax ecx +
push edx  +
push eax  +
call loc_418890  +
mov ecx [ebp+cchWideChar] +
add esp 0Ch +
mov edi [ebp+var_44] +
mov edx ebx +
mov esi [ebp+var_50] +
mov eax dword_4436B0[esi*4] +
add eax edi +
mov [eax+edx+2Eh] bl +
inc edx  +
cmp edx ecx +
jl loc_4255D1  +
push [ebp+var_3C]  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_18] +
mov [ebp+var_6C] eax +
lea ecx [ebp+var_78] +
xor eax eax +
mov [ebp+var_78] ebx +
cmp [ebp+var_38] 4 +
push ecx  +
setz al  +
mov [ebp+var_74] ebx +
inc eax  +
push eax  +
mov [ebp+cchWideChar] eax +
lea eax [ebp+var_6C] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_42815D  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_425832  +
mov eax [ebp+var_30] +
add eax [ebp+var_48] +
jmp loc_42567D  +
movzx eax byte ptr [edx] +
movsx ecx byte_442788[eax] +
inc ecx  +
mov [ebp+var_4C] ecx +
cmp ecx edi +
jg loc_4257E8  +
push [ebp+var_3C]  +
xor eax eax +
mov [ebp+var_80] ebx +
cmp ecx 4 +
mov [ebp+var_7C] ebx +
lea ecx [ebp+var_80] +
mov [ebp+var_38] edx +
setz al  +
inc eax  +
push ecx  +
push eax  +
mov [ebp+cchWideChar] eax +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_42815D  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jz loc_425832  +
mov eax [ebp+var_30] +
add eax [ebp+var_4C] +
mov edi [ebp+var_44] +
dec eax  +
jmp loc_425708  +
mov ah [edi+ecx+2Dh] +
test ah 4 +
jz loc_4256AA  +
mov al [edi+ecx+2Eh] +
and ah 0FBh +
push [ebp+var_3C]  +
mov byte ptr [ebp+var_20] al +
mov al [edx] +
mov byte ptr [ebp+var_20+1] al +
mov [edi+ecx+2Dh] ah +
lea eax [ebp+var_20] +
push 2  +
push eax  +
jmp loc_4256F0  +
mov eax [ebp+var_3C] +
movzx ecx byte ptr [edx] +
mov eax [eax+0Ch] +
mov eax [eax] +
cmp [eax+ecx*2] bx +
jge loc_4256EA  +
lea eax [edx+1] +
mov [ebp+var_38] eax +
cmp eax [ebp+var_54] +
jnb loc_425809  +
push [ebp+var_3C]  +
lea eax [ebp+WideCharStr] +
push 2  +
push edx  +
push eax  +
call sub_4249CF  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_425832  +
mov eax [ebp+var_38] +
jmp loc_425708  +
push [ebp+var_3C]  +
push 1  +
push edx  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_4249CF  +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_425832  +
mov eax [ebp+var_30] +
push ebx  +
push ebx  +
inc eax  +
push 5  +
mov [ebp+var_30] eax +
lea eax [ebp+MultiByteStr] +
push eax  +
push [ebp+cchWideChar]  +
lea eax [ebp+WideCharStr] +
push eax  +
push ebx  +
push [ebp+CodePage]  +
call sub_421730  +
add esp 20h +
mov [ebp+var_38] eax +
test eax eax +
jz loc_425832  +
push ebx  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_42582A  +
mov edx [ebp+var_30] +
mov ecx edx +
sub ecx [ebp+var_60] +
mov eax [esi+8] +
add eax ecx +
mov [ebp+var_48] eax +
mov [esi+4] eax +
mov eax [ebp+var_38] +
cmp [ebp+NumberOfBytesWritten] eax +
jb loc_425832  +
cmp [ebp+var_31] 0Ah +
jnz loc_4257AE  +
push 0Dh  +
pop eax  +
push ebx  +
mov word ptr [ebp+var_58] ax +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+var_58] +
push eax  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jz loc_42582A  +
cmp [ebp+NumberOfBytesWritten] 1 +
jb loc_425832  +
inc dword ptr [esi+8]  +
inc dword ptr [esi+4]  +
mov eax [esi+4] +
mov edx [ebp+var_30] +
mov [ebp+var_48] eax +
cmp edx [ebp+var_54] +
jb loc_425526  +
jmp loc_425832  +
test edi edi +
jle loc_4257E3  +
mov eax [ebp+var_30] +
mov esi [ebp+cchWideChar] +
mov edx [ebp+var_50] +
mov edx dword_4436B0[edx*4] +
add edx ecx +
mov cl [ebx+eax] +
add edx ebx +
inc ebx  +
mov [edx+esi+2Eh] cl +
mov ecx [ebp+var_44] +
cmp ebx edi +
jl loc_4257C3  +
mov esi [ebp+arg_0] +
add [esi+4] edi +
jmp loc_425832  +
test edi edi +
jle loc_4257E3  +
mov esi [ebp+var_44] +
mov eax [ebp+var_50] +
mov ecx dword_4436B0[eax*4] +
mov al [ebx+edx] +
add ecx esi +
mov [ecx+ebx+2Eh] al +
inc ebx  +
cmp ebx edi +
jl loc_4257EF  +
jmp loc_4257E0  +
mov eax [ebp+var_4C] +
mov cl [edx] +
mov [edi+eax+2Eh] cl +
mov eax [ebp+var_50] +
mov eax dword_4436B0[eax*4] +
or byte ptr [eax+edi+2Dh] 4 +
mov eax [ebp+var_48] +
inc eax  +
mov [esi+4] eax +
jmp loc_425832  +
call ds:GetLastError  +
mov [esi] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_4168CD  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
pop ecx  +
retn   +
***
mov edi edi +
call sub_417280  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_428F18  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov edi [edi] +
jz loc_42821A  +
mov ebx [ebp+arg_8] +
mov esi [ebp+arg_0] +
test ebx ebx +
jz loc_4281EB  +
push edi  +
lea ecx [ebp-1] +
call sub_4280EE  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push eax  +
lea eax [ebp+var_8] +
push edi  +
push eax  +
call sub_4291ED  +
mov edx eax +
add esp 14h +
cmp edx 0FFFFFFFFh +
jz loc_428202  +
test edx edx +
jz loc_4281F9  +
mov ecx [ebp+var_8] +
cmp ecx 0FFFFh +
jbe loc_4281DE  +
cmp ebx 1 +
jbe loc_4281EB  +
sub ecx 10000h +
dec ebx  +
mov eax ecx +
mov [ebp+var_8] ecx +
shr eax 0Ah +
and ecx 3FFh +
or eax 0D800h +
mov [esi] ax +
add esi 2 +
or ecx 0DC00h +
mov [esi] cx +
add edi edx +
add esi 2 +
sub ebx 1 +
jnz loc_428180  +
mov ebx [ebp+arg_4] +
sub esi [ebp+arg_0] +
sar esi 1 +
mov [ebx] edi +
mov eax esi +
jmp loc_428260  +
xor edi edi +
xor eax eax +
mov [esi] ax +
jmp loc_4281EB  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+arg_10] +
mov byte ptr [eax+1Ch] 1 +
mov dword ptr [eax+18h] 2Ah +
or eax 0FFFFFFFFh +
jmp loc_428260  +
push edi  +
lea ecx [ebp-1] +
xor esi esi +
call sub_4280EE  +
mov ebx [ebp+arg_10] +
jmp loc_428240  +
test eax eax +
jz loc_4281F5  +
cmp eax 4 +
jnz loc_428234  +
inc esi  +
add edi eax +
lea ecx [ebp-1] +
push edi  +
inc esi  +
call sub_4280EE  +
push ebx  +
push [ebp+arg_C]  +
push eax  +
push edi  +
push 0  +
call sub_4291ED  +
add esp 14h +
cmp eax 0FFFFFFFFh +
jnz loc_42822A  +
mov byte ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+18h] 2Ah +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_417280  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_428940  +
pop ecx  +
test eax eax +
jnz loc_4289F0  +
mov eax [ebp+arg_0] +
mov edx [ebp+var_8] +
mov ecx [ebp+var_4] +
mov [eax] edx +
or edx 1Fh +
mov [eax+4] ecx +
lea eax [ebp+var_8] +
push eax  +
mov [ebp+var_8] edx +
call sub_42895D  +
pop ecx  +
test eax eax +
jnz loc_4289F0  +
call sub_4237E2  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
cmp dword_444860 0 +
jz loc_428A3B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_428A30  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_428A3B  +
jmp sub_429780  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_429F08  +
call sub_428A58  +
add esp 0Ch +
retn   +
***
jz loc_428AAB  +
cmp dword_444860 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_4438D0  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
mov edi 1000h +
push edi  +
call sub_420818  +
push 0  +
mov [esi+4] eax +
call sub_420048  +
add esp 0Ch +
lea eax [esi+0Ch] +
cmp dword ptr [esi+4] 0 +
jz loc_4293E9  +
push 40h  +
pop ecx  +
or [eax] ecx +
mov eax [esi+4] +
jmp loc_4293FA  +
mov ecx 400h +
or [eax] ecx +
lea eax [esi+14h] +
push 2  +
mov [esi+4] eax +
pop edi  +
mov [esi+18h] edi +
and dword ptr [esi+8] 0 +
pop edi  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
mov ecx hObject +
mov eax hObject +
mov edi edi +
call sub_417280  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_444860 eax +
xor eax eax +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_42979E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_432E10 +
movapd xmm2 oword ptr ds:oword_432E20 +
movapd xmm3 oword ptr ds:oword_432E80 +
movapd xmm4 oword ptr ds:oword_432E30 +
movapd xmm6 oword ptr ds:oword_432E40 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_433440[eax] +
movapd xmm7 oword ptr ds:oword_433030[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_4298F6  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_432ED0 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_432EE0 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_432EF0 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_432E50 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_432E60[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_432F00 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_432E90 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_42995B  +
cmp ecx 0FFFFFFFFh +
jz loc_429976  +
cmp ecx 7FEh +
ja loc_42998C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_432E10 +
movapd xmm2 oword ptr ds:oword_432E80 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_429954  +
fld  ds:dbl_432EB8 +
retn   +
mov edx 3E9h +
jmp loc_4299AA  +
movlpd xmm2 oword ptr ds:oword_432E80 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_432EB0 +
mov edx 8 +
jmp loc_4299AA  +
movlpd xmm1 oword ptr ds:oword_432EA0 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4297A3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_4299D7  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_42A063  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_42999D  +
mov edx 3E9h +
jmp loc_4299AA  +
***
lea esp [esp+0] +
jmp loc_429A10  +
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_429A65  +
fxch  st(1) +
fyl2x   +
jmp loc_429A3D  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_429B6D  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_429A53  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_429A5A  +
fscale   +
or ch ch +
jz loc_429A60  +
fchs   +
jmp loc_429D34  +
***
call sub_429BB0  +
or eax eax +
jz loc_429A82  +
xor ch ch +
cmp eax 2 +
jz loc_429A77  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_429A1D  +
***
jmp loc_429D6D  +
***
jmp loc_429E30  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_432F10 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_429A82  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_432F1A +
retn   +
***
or cl cl +
jnz loc_429B1A  +
retn   +
***
fldlg2   +
jmp loc_429ACE  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_429A82  +
fyl2x   +
retn   +
***
jmp loc_429D6D  +
***
call sub_429BB0  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_429AF7  +
fldz   +
cmp eax 1 +
jnz locret_429AF6  +
or ch ch +
jz locret_429AF6  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_432F10 +
cmp eax 1 +
jnz locret_429AF6  +
or ch ch +
jz locret_429AF6  +
fchs   +
jmp locret_429AF6  +
***
fstp  st +
***
jmp loc_429D5A  +
***
fstp  st +
jmp loc_429E32  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_429B42  +
fstp  st +
fld  ds:tbyte_432F10 +
or ch ch +
jz locret_429B41  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_429D5A  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_429BD6  +
fld  st +
fmul  ds:dbl_432F42 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_429BDD  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_429BD5  +
mov eax 2 +
jmp locret_429BD5  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_42A374  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_429C15  +
jmp sub_429E43  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_429C37  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_429C3B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_432F9E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_42F3DC  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_429CAC  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_429CB0  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_432F9E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_42F3DC  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_429E43  +
***
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_429E43  +
jmp loc_429D40  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_429D6C  +
fchs   +
retn   +
***
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429D9D  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_432F8E +
retn   +
***
jmp loc_429DB0  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429DDE  +
mov byte ptr [ebp-90h] 0 +
jmp loc_429DE5  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429E25  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_429E25  +
mov byte ptr [ebp-90h] 0 +
jmp loc_429E2C  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_432F84 +
or ch ch +
jz loc_429E60  +
fchs   +
or cl cl +
jz locret_429E6C  +
fld  ds:dbl_432F96 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_429E73  +
fchs   +
retn   +
***
fld  st +
mov edx [esp+arg_0] +
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_429F19  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_429F29  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_429F53  +
and ax 20h +
jz loc_429F50  +
fstsw  ax +
and ax 20h +
jz loc_429F50  +
mov eax 8 +
call sub_42A027  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  [esp+8+var_8] +
mov eax dword ptr [esp+8+var_8+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_429FBA  +
cmp eax 7FF00000h +
jz loc_429FE3  +
mov ax [esp+0] +
cmp ax 27Fh +
jz loc_429FB8  +
and ax 20h +
jnz loc_429FB5  +
fstsw  ax +
and ax 20h +
jz loc_429FB5  +
mov eax 8 +
cmp edx 1Dh +
jz loc_429FAE  +
call sub_42A027  +
pop edx  +
retn   +
call sub_42A010  +
pop edx  +
retn   +
fldcw  word ptr [esp+0] +
pop edx  +
retn   +
fld  ds:dbl_432FDC +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_432FCC +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_429FA2  +
fmul  ds:dbl_432FEC +
jmp loc_429FA2  +
fld  ds:dbl_432FD4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_432FC4 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_429FA2  +
fmul  ds:dbl_432FE4 +
jmp loc_429FA2  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp dword_443900 0 +
push esi  +
push edi  +
jz loc_42A086  +
push dword_44485C  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_42A08B  +
mov edi offset sub_41B1BC +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_42A175  +
jz loc_42A169  +
cmp eax 0Eh +
jg loc_42A107  +
jz loc_42A0F4  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_42A0E5  +
sub eax 1 +
jz loc_42A0D9  +
sub eax 5 +
jz loc_42A0CA  +
sub eax 1 +
jnz loc_42A253  +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_42A1CB  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_42A218  +
mov [ebp+var_1C] offset unk_432FF4 +
jmp loc_42A1CB  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset unk_432FF4 +
jmp loc_42A218  +
mov [ebp+var_20] 3 +
mov [ebp+var_1C] offset aExp +
jmp loc_42A218  +
sub eax 0Fh +
jz loc_42A160  +
sub eax 9 +
jz loc_42A154  +
sub eax 1 +
jnz loc_42A253  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_42F3DC  +
call edi  +
pop ecx  +
jmp loc_42A24E  +
mov [ebp+var_20] 3 +
jmp loc_42A211  +
mov [ebp+var_1C] offset aExp +
jmp loc_42A121  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_42A253  +
sub eax 1Bh +
jz loc_42A20A  +
sub eax 1 +
jz loc_42A1C4  +
sub eax 15h +
jz loc_42A1BB  +
sub eax 9 +
jz loc_42A1B2  +
sub eax 3 +
jz loc_42A1A9  +
sub eax 3ABh +
jz loc_42A1A2  +
sub eax 1 +
jnz loc_42A253  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_42A16B  +
mov [ebp+var_1C] offset aAsin +
jmp loc_42A1CB  +
mov [ebp+var_1C] offset aAcos +
jmp loc_42A1CB  +
mov [ebp+var_1C] offset aSqrt +
jmp loc_42A1CB  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_42F3DC  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_42A24E  +
call sub_41A2B6  +
mov dword ptr [eax] 21h +
jmp loc_42A24E  +
mov [ebp+var_20] 2 +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_42F3DC  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_42A24E  +
call sub_41A2B6  +
mov dword ptr [eax] 22h +
fld  [ebp+var_8] +
fstp  qword ptr [esi] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_42AF6C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_42AF64  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_42AF6E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_42AF54  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_43FC20  +
push offset sub_417BA0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_442008 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_42B040  +
add esp 4 +
test eax eax +
jz loc_42B01F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_42AF30  +
add esp 8 +
test eax eax +
jz loc_42B01F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov ecx [ebp-0Ch] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_442008 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
or eax eax +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_433A0C +
jz loc_42B1B1  +
push 0Ch  +
push esi  +
call sub_416B6F  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_42B1D9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_42B222  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_42B263  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_42B230  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42B25E  +
cmp edx [esp+arg_4] +
ja loc_42B25E  +
jb loc_42B25F  +
cmp eax [esp+arg_0] +
jbe loc_42B25F  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_42B3C0  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_42B3C0  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_42B2C4  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_42B2E0  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_42B30C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_42B353  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_42B31A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42B348  +
cmp edx [esp+arg_4] +
ja loc_42B348  +
jb loc_42B351  +
cmp eax [esp+arg_0] +
jbe loc_42B351  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_42B365  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_42B379  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_42B39A  +
cmp cl 20h +
jnb loc_42B390  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_42B3BA  +
cmp cl 20h +
jnb loc_42B3B0  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_42B3E4  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_42B3D4  +
***
cmp dword_44312C 0 +
jmp loc_42B4B7  +
push 0FFFFFFFFh  +
pop ebp  +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
and dword ptr [ecx+4] 0 +
sub esp 0Ch +
sub esp 0Ch +
push ecx  +
push esi  +
push ecx  +
push esi  +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 0Ch +
push esi  +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_42C9D2  +
sub eax 1 +
jz loc_42C9C4  +
sub eax 1 +
jz loc_42C9AA  +
sub eax 1 +
jz loc_42C97E  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_42C92B  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_42BE13  +
mov eax [esi] +
cmp eax [edx] +
jz loc_42BB50  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_42BB24  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_42BB24  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_42BB34  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BB52  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_42BB52  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BB52  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_42BBB1  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_42BB85  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_42BB85  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_42BB95  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BBB3  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_42BBB3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BBB3  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_42BC12  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_42BBE6  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_42BBE6  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_42BBF6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BC14  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_42BC14  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BC14  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_42BC73  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_42BC47  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_42BC47  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_42BC57  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BC75  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_42BC75  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BC75  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_42BCD5  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_42BCA9  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_42BCA9  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_42BCB9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BCD7  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_42BCD7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BCD7  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_42BD36  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_42BD0A  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_42BD0A  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_42BD1A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BD38  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_42BD38  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BD38  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_42BD97  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_42BD6B  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_42BD6B  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_42BD7B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BD99  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_42BD99  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BD99  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_42BDF8  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_42BDCC  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_42BDCC  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_42BDDC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BDFA  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_42BDFA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BDFA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_42BAFC  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_42C0C7  +
jmp ds:off_42C9D9[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_42BE7E  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_42BE52  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_42BE52  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_42BE62  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BE80  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_42BE80  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BE80  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_42BEDF  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_42BEB3  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_42BEB3  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_42BEC3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BEE1  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_42BEE1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BEE1  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_42BF40  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_42BF14  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_42BF14  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_42BF24  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BF42  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_42BF42  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BF42  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_42BFA1  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_42BF75  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_42BF75  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_42BF85  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42BFA3  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_42BFA3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42BFA3  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_42C003  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_42BFD7  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_42BFD7  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_42BFE7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C005  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_42C005  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C005  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_42C064  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_42C038  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_42C038  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_42C048  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C066  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_42C066  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C066  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_42C0C1  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_42C095  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_42C095  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_42C0A5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C0C3  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_42C0C3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C0C3  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_42C9D4  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_42C128  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_42C0FC  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_42C0FC  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_42C10C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C12A  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_42C12A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C12A  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_42C185  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_42C159  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_42C159  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_42C169  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C187  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_42C187  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C187  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_42C1E6  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_42C1BA  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_42C1BA  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_42C1CA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C1E8  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_42C1E8  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C1E8  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_42C247  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_42C21B  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_42C21B  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_42C22B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C249  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_42C249  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C249  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_42C2A8  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_42C27C  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_42C27C  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_42C28C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C2AA  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_42C2AA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C2AA  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_42C30A  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_42C2DE  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_42C2DE  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_42C2EE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C30C  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_42C30C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C30C  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_42C36B  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_42C33F  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_42C33F  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_42C34F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C36D  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_42C36D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C36D  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_42C0C9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C0C9  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_42C3EF  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_42C3C3  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_42C3C3  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_42C3D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C3F1  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_42C3F1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C3F1  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_42C450  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_42C424  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_42C424  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_42C434  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C452  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_42C452  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C452  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_42C4B1  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_42C485  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_42C485  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_42C495  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C4B3  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_42C4B3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C4B3  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_42C512  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_42C4E6  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_42C4E6  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_42C4F6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C514  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_42C514  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C514  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_42C573  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_42C547  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_42C547  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_42C557  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C575  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_42C575  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C575  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_42C5D5  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_42C5A9  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_42C5A9  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_42C5B9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C5D7  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_42C5D7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C5D7  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_42C636  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_42C60A  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_42C60A  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_42C61A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C638  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_42C638  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C638  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_42C0C7  +
jmp loc_42C908  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_42C6AB  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_42C67F  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_42C67F  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_42C68F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C6AD  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_42C6AD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C6AD  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_42C70C  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_42C6E0  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_42C6E0  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_42C6F0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C70E  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_42C70E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C70E  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_42C76D  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_42C741  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_42C741  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_42C751  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C76F  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_42C76F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C76F  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_42C7CE  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_42C7A2  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_42C7A2  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_42C7B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C7D0  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_42C7D0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C7D0  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_42C830  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_42C804  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_42C804  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_42C814  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C832  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_42C832  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C832  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_42C891  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_42C865  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_42C865  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_42C875  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C893  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_42C893  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C893  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_42C8F2  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_42C8C6  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_42C8C6  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_42C8D6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C8F4  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_42C8F4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42C8F4  +
xor ecx ecx +
test ecx ecx +
jnz loc_42C0C9  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_42C918  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_42C375  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C0C9  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_42C950  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_42C950  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_42C960  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42C97A  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_42C97A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_42C9D4  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_42C99A  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_42C9A0  +
xor ecx ecx +
test edx edx +
jmp loc_42C954  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_42C968  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_42C99A  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_42C968  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_42C968  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esp+8] +
mov edx eax +
shl eax 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov edx [esp+4] +
mov ecx 0Fh +
or eax 0FFFFFFFFh +
and ecx edx +
shl eax cl +
sub edx ecx +
movdqu xmm1 qword ptr [edx] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
por xmm2 xmm1 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_42CAB7  +
or eax 0FFFFFFFFh +
add edx 10h +
jmp loc_42CA93  +
***
bsf eax ecx +
add eax edx +
movd edx xmm3 +
xor ecx ecx +
cmp dl [eax] +
cmovnz eax ecx +
retn   +
***
and eax 81010100h +
jz loc_42CB00  +
and eax 1010100h +
jnz loc_42CB3C  +
and esi 80000000h +
jnz loc_42CB00  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
test al al +
jz loc_42CB3C  +
cmp ah bl +
jz loc_42CB7D  +
test ah ah +
jz loc_42CB3C  +
shr eax 10h +
cmp al bl +
jz loc_42CB76  +
test al al +
jz loc_42CB3C  +
cmp ah bl +
jz loc_42CB6F  +
test ah ah +
jz loc_42CB3C  +
jmp loc_42CB00  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
mov ecx [ebx+8] +
sub esp 1Ch +
cmp dword_44312C 1 +
push esi  +
jge loc_42CBE2  +
movzx eax word ptr [ecx] +
mov edx eax +
test ax ax +
jz loc_42CBD4  +
mov esi eax +
movzx edx si +
cmp si [ebx+0Ch] +
jz loc_42CBD4  +
add ecx 2 +
movzx eax word ptr [ecx] +
mov esi eax +
mov edx eax +
test ax ax +
jnz loc_42CBBC  +
xor eax eax +
cmp dx [ebx+0Ch] +
setnz al  +
dec eax  +
and eax ecx +
jmp loc_42CC4A  +
mov dx [ebx+0Ch] +
movzx eax dx +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm2 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_42CC24  +
movups xmm0 oword ptr [ecx] +
pxor xmm1 xmm1 +
pcmpeqw xmm1 xmm0 +
pcmpeqw xmm0 xmm2 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_42CC38  +
push 10h  +
jmp loc_42CC33  +
movzx eax word ptr [ecx] +
cmp ax dx +
jz loc_42CC48  +
test ax ax +
jz loc_42CC44  +
push 2  +
pop eax  +
add ecx eax +
jmp loc_42CBF7  +
bsf eax eax +
add ecx eax +
xor eax eax +
cmp [ecx] dx +
jmp loc_42CBDA  +
xor eax eax +
jmp loc_42CC4A  +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_44312C 1 +
jb loc_42CD6E  +
mov edi [ebp+8] +
ja loc_42CCED  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_42CCCD  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_42CC9D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_42CD2E  +
xor eax eax +
test edi 0Fh +
jz loc_42CD14  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_42CD2B  +
inc edi  +
test edi 0Fh +
jnz loc_42CCFF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_42CD67  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_42CD53  +
bsf edx edi +
add eax edx +
jmp loc_42CD2B  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx [esp+arg_0] +
call sub_4203C0  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+SystemTimeAsFileTime] +
xor esi esi +
push eax  +
mov [ebp+SystemTimeAsFileTime.dwLowDateTime] esi +
mov [ebp+SystemTimeAsFileTime.dwHighDateTime] esi +
call ds:GetSystemTimeAsFileTime  +
mov ecx [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov eax [ebp+SystemTimeAsFileTime.dwHighDateTime] +
sub ecx 0D53E8000h +
push esi  +
push 989680h  +
sbb eax 19DB1DEh +
push eax  +
push ecx  +
call sub_42D050  +
cmp edx 7 +
jg loc_42D029  +
jl loc_42D025  +
cmp eax 93582AFFh +
ja loc_42D029  +
mov edi edx +
jmp loc_42D030  +
or eax 0FFFFFFFFh +
mov edx eax +
mov edi eax +
mov ecx [ebp+arg_0] +
mov esi eax +
test ecx ecx +
jz loc_42D03E  +
mov [ecx] eax +
mov [ecx+4] edx +
mov edx edi +
mov eax esi +
pop edi  +
pop esi  +
leave   +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_42D071  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_42D08D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_42D0A9  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_42D0EA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_42D0B7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_42D0E5  +
cmp edx [esp+arg_4] +
ja loc_42D0E5  +
jb loc_42D0E6  +
cmp eax [esp+arg_0] +
jbe loc_42D0E6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_42D0F4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
xor eax eax +
push edi  +
mov edi ecx +
inc eax  +
xadd dword_4428B0 eax +
jnz loc_42D1DB  +
push esi  +
mov esi offset stru_4439B0 +
push esi  +
call sub_42D26C  +
add esi 18h +
pop ecx  +
cmp esi offset unk_443A70 +
jl loc_42D1C8  +
pop esi  +
mov eax edi +
pop edi  +
retn   +
***
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call ds:off_42F3DC  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_42D234  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call ds:off_42F3DC  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push [ebp+lpCriticalSection]  +
push 0  +
push 0FFFFFFFFh  +
push offset loc_42E34E  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_442008 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
jmp loc_42D2CD  +
mov eax dword_443B04[ecx*4] +
inc ecx  +
push eax  +
mov dword_44290C ecx +
call ds:DecodePointer  +
mov esi eax +
test esi esi +
jz loc_42D2CD  +
mov ecx esi +
call ds:off_42F3DC  +
call esi  +
mov ecx dword_44290C +
cmp ecx 0Ah +
jb loc_42D2A8  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
pop edi  +
add eax 4 +
jz loc_42D34B  +
mov cl [edx] +
add edx 1 +
xor cl bl +
jz loc_42D386  +
sub eax 1 +
jnz loc_42D33D  +
pop ebx  +
retn   +
***
xor ch bl +
jz loc_42D391  +
shr ecx 10h +
xor cl bl +
jz loc_42D38B  +
xor ch bl +
jz loc_42D385  +
jmp loc_42D34D  +
***
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cdq   +
xor eax edx +
sub eax edx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
mov edx [ebp+0Ch] +
lea ecx [ecx+0] +
mov al [edx] +
or al al +
jz loc_42D3D3  +
add edx 1 +
bts [esp] eax +
jmp loc_42D3C4  +
***
mov esi [ebp+8] +
or ecx 0FFFFFFFFh +
lea ecx [ecx+0] +
add ecx 1 +
mov al [esi] +
or al al +
jz loc_42D3EE  +
add esi 1 +
bt [esp] eax +
jnb loc_42D3DC  +
mov eax ecx +
add esp 20h +
pop esi  +
leave   +
retn   +
***
cmp dword_444860 0 +
jz loc_42D43B  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_42D430  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_42D43B  +
jmp loc_42D680  +
***
sub esp 14h +
fxch  st(1) +
fstp  qword ptr [esp] +
fst  qword ptr [esp+8] +
mov eax [esp+0Ch] +
call sub_42D45D  +
add esp 14h +
retn   +
***
mov ecx eax +
fld  st +
mov dword_443BA4 7080h +
xor eax eax +
mov dword_443BA8 1 +
mov dword_443BAC 0FFFFF1F0h +
mov dword_443BB0 offset off_442A90 +
mov dword_443BB4 offset off_442A98 +
retn   +
***
movlpd xmm0 oword ptr [esp+arg_0] +
movlpd xmm7 oword ptr ds:oword_435760 +
movlpd xmm2 oword ptr ds:oword_435770 +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
pextrw ecx xmm4 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_435810[eax*4] +
movlpd xmm5 oword ptr ds:oword_435810[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_435C20[eax*4] +
mov edx 7FEFh +
sub edx ecx +
sub ecx 10h +
or ecx edx +
cmp ecx 80000000h +
jnb loc_42D9E7  +
mov ecx 0 +
mov edx 3FE7Fh +
movd xmm1 edx +
psubq xmm0 xmm1 +
psrlq xmm0 8 +
cvtdq2pd xmm0 xmm0 +
movlpd xmm1 oword ptr ds:oword_4357B0+8 +
movsd xmm3 xmm7 +
psrlq xmm7 26h +
pextrw eax xmm7 +
andpd xmm4 oword ptr ds:oword_435760 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm3 ds:qword_436430[eax*4] +
mulsd xmm5 ds:qword_436430[eax*4] +
add eax eax +
addpd xmm6 oword ptr ds:oword_436840[eax*4] +
orpd xmm4 oword ptr ds:oword_435770 +
addsd xmm6 xmm0 +
andpd xmm1 xmm4 +
movsd xmm2 xmm3 +
psrlq xmm3 1Fh +
pextrw eax xmm3 +
movlpd xmm0 oword ptr ds:oword_4357B0+8 +
subsd xmm4 xmm1 +
movlpd xmm7 oword ptr ds:oword_4357C0 +
and eax 1FFh +
add eax 1 +
and eax 3FEh +
mulsd xmm5 ds:qword_437050[eax*4] +
mulsd xmm2 ds:qword_437050[eax*4] +
addpd xmm6 oword ptr ds:oword_437860[eax*8] +
andpd xmm0 xmm5 +
subsd xmm5 xmm0 +
addsd xmm7 xmm2 +
movsd xmm3 xmm0 +
mulsd xmm0 xmm1 +
mulsd xmm1 xmm5 +
mulsd xmm3 xmm4 +
subsd xmm2 xmm0 +
mulsd xmm4 xmm5 +
movsd xmm0 xmm6 +
subsd xmm2 xmm1 +
addsd xmm6 xmm7 +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
subsd xmm2 xmm3 +
subsd xmm0 xmm6 +
movlpd xmm3 oword ptr ds:oword_4357B0+8 +
pextrw edx xmm6 +
subsd xmm2 xmm4 +
movsd xmm4 xmm6 +
addsd xmm0 xmm7 +
subsd xmm7 xmm2 +
subsd xmm6 xmm2 +
unpcklpd xmm7 xmm7 +
and eax 7FF0h +
cmp eax 7FF0h +
jnb loc_42DD58  +
and edx 7FF0h +
sub eax 3FF0h +
add eax edx +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jnb loc_42E11A  +
subsd xmm4 xmm6 +
subsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4357B0+8 +
andpd xmm3 xmm1 +
andpd xmm4 xmm6 +
subsd xmm0 xmm2 +
xorpd xmm2 xmm2 +
mov edx 4060h +
pinsrw xmm2 edx +
movsd xmm5 xmm3 +
mulsd xmm3 xmm4 +
subsd xmm6 xmm4 +
subsd xmm1 xmm5 +
mulsd xmm3 xmm2 +
mulsd xmm5 xmm6 +
movapd xmm2 oword ptr ds:oword_438870 +
mulsd xmm4 xmm1 +
cvtsd2si eax xmm3 +
mulsd xmm6 xmm1 +
movapd xmm1 oword ptr ds:oword_438880 +
addsd xmm5 xmm4 +
pshufd xmm4 xmm6 +
addsd xmm5 xmm6 +
mov edx 1FF7Fh +
sub edx eax +
add eax 1E1FFh +
or edx eax +
sub eax 1E1FFh +
cmp edx 0 +
jle loc_42DE9E  +
add ecx eax +
and eax 7Fh +
and ecx 0FFFFFF80h +
add ecx 1FF80h +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_435750 +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_435750 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_438890[eax] +
movapd xmm6 oword ptr ds:oword_435790 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
xorpd xmm7 xmm7 +
mov edx 3F80h +
addsd xmm2 xmm1 +
pinsrw xmm7 edx +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4357B0 +
movd xmm1 ecx +
mulsd xmm2 qword ptr [esp+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4357A0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
addsd xmm0 xmm5 +
sub esp 10h +
addsd xmm0 xmm6 +
addsd xmm0 xmm4 +
addsd xmm0 xmm3 +
movlpd oword ptr [esp+4] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm3 oword ptr ds:oword_435780 +
movd eax xmm1 +
movsd xmm2 xmm1 +
andpd xmm1 xmm3 +
psrlq xmm1 20h +
movd ecx xmm1 +
cmp ecx 7FF00000h +
jnb loc_42DAF0  +
or eax ecx +
cmp eax 0 +
jz loc_42DE15  +
cmp edx 0 +
jge loc_42DB2F  +
neg edx  +
add edx 7FEFh +
psllq xmm3 34h +
orpd xmm2 xmm3 +
mov ecx 3F3h +
movd xmm3 ecx +
psrlq xmm1 14h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
pmaxsw xmm1 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
mov ecx edx +
and edx 7FFFh +
cmp edx 7FF0h +
jnb loc_42DC18  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_42DD11  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_435780 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
movlpd xmm3 oword ptr ds:oword_4357E0 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
mov ecx 3FF01h +
add ecx eax +
and ecx 40000h +
cmp edx 10h +
jb loc_42DB34  +
mov edx 0BFE7Fh +
movlpd xmm3 oword ptr ds:oword_435760 +
movlpd xmm2 oword ptr ds:oword_435770 +
jmp loc_42D716  +
movlpd xmm7 oword ptr [esp+arg_0] +
movlpd xmm4 oword ptr [esp+arg_0] +
movd edx xmm7 +
psrlq xmm7 20h +
movd eax xmm7 +
mov ecx eax +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
jb loc_42DD8D  +
ja loc_42DCFF  +
cmp edx 0 +
ja loc_42DCFF  +
jmp loc_42DD8D  +
mov ecx 0 +
xorpd xmm0 xmm0 +
mov eax 43F0h +
pinsrw xmm0 eax +
movlpd xmm7 oword ptr ds:oword_435760 +
movlpd xmm2 oword ptr ds:oword_435770 +
mulsd xmm0 xmm4 +
movd edx xmm4 +
psrlq xmm4 20h +
movd eax xmm4 +
cmp edx 0 +
jz loc_42DBBA  +
andpd xmm7 xmm0 +
movsd xmm4 xmm0 +
andpd xmm0 oword ptr ds:oword_435780 +
psrlq xmm0 2Ch +
pextrw eax xmm0 +
orpd xmm7 xmm2 +
and eax 0FFh +
add eax 1 +
and eax 1FEh +
mulsd xmm7 qword ptr ds:oword_435810[eax*4] +
movlpd xmm5 oword ptr ds:oword_435810[eax*4] +
add eax eax +
movapd xmm6 oword ptr ds:oword_435C20[eax*4] +
mov edx 43E7Fh +
jmp loc_42D716  +
mov edx eax +
and edx 7FFFFFFFh +
cmp edx 0 +
jnz loc_42DB68  +
mov edx dword ptr [esp+arg_0+0Ch] +
and edx 80000000h +
cmp edx 0 +
jz loc_42DC07  +
shl ecx 0Dh +
and eax ecx +
mov edx 7FF00000h +
or edx eax +
movd xmm0 edx +
psllq xmm0 20h +
movlpd xmm1 oword ptr ds:oword_435770 +
movlpd xmm2 oword ptr [esp+arg_0] +
divsd xmm1 xmm2 +
mov edx 1Bh +
jmp loc_42DE6E  +
shl ecx 0Dh +
and eax ecx +
cmp eax 0 +
jnz loc_42DCB9  +
fldz   +
retn   +
movlpd xmm3 oword ptr ds:oword_435760 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm4 +
pcmpeqd xmm1 xmm3 +
pmovmskb ecx xmm1 +
and ecx 0FFh +
cmp ecx 0FFh +
jnz loc_42DCFF  +
pextrw ecx xmm4 +
and ecx 8000h +
cmp ecx 0 +
jz loc_42DCE3  +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_42DCC7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
mov ecx 3F4h +
movd xmm3 ecx +
andpd xmm1 oword ptr ds:oword_435780 +
psrlq xmm1 34h +
psubd xmm1 xmm3 +
pxor xmm3 xmm3 +
psllq xmm2 xmm1 +
pcmpeqd xmm2 xmm3 +
pmovmskb eax xmm2 +
and eax 0FFh +
cmp eax 0FFh +
jz loc_42DCC7  +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_42DCC0  +
fld  qword ptr ds:oword_4357E0 +
retn   +
fld  ds:dbl_4357D8 +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_42DDFF  +
fldz   +
retn   +
movlpd xmm1 oword ptr [esp+arg_0+8] +
pextrw eax xmm1 +
and eax 8000h +
cmp eax 0 +
jz loc_42DDFF  +
fldz   +
retn   +
addsd xmm4 xmm4 +
movsd xmm0 xmm4 +
mov edx 3EEh +
jmp loc_42DE6E  +
movlpd xmm2 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd edx xmm2 +
and edx 7FFFFFFFh +
or eax edx +
mov ecx 0 +
cmp eax 0 +
jz loc_42DBBA  +
movlpd xmm1 oword ptr ds:oword_4357C0+8 +
movlpd xmm0 oword ptr ds:oword_435800 +
mulsd xmm1 xmm1 +
mov edx 1Ch +
jmp loc_42DE6E  +
movlpd xmm4 oword ptr [esp+arg_0] +
movlpd xmm2 oword ptr [esp+arg_0+8] +
movd eax xmm4 +
cmp eax 0 +
jnz loc_42DD8D  +
psrlq xmm4 20h +
movd edx xmm4 +
cmp edx 3FF00000h +
jz loc_42DE6B  +
cmp edx 0BFF00000h +
jnz loc_42DD8D  +
fld1   +
retn   +
movlpd xmm3 oword ptr ds:oword_435760 +
xorpd xmm1 xmm1 +
andpd xmm3 xmm2 +
pcmpeqd xmm1 xmm3 +
pmovmskb eax xmm1 +
and eax 0FFh +
cmp eax 0FFh +
jnz loc_42DE06  +
pextrw eax xmm2 +
movlpd xmm4 oword ptr [esp+arg_0] +
and eax 8000h +
xor ecx 0BFF00000h +
or edx ecx +
cmp edx 0 +
jz loc_42DE6B  +
cmp eax 0 +
jz loc_42DDEB  +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jb loc_42DDFF  +
fldz   +
retn   +
pextrw eax xmm4 +
and eax 7FF0h +
cmp eax 3FF0h +
jnb loc_42DDFF  +
fldz   +
retn   +
fld  ds:dbl_4357D0 +
retn   +
addsd xmm2 xmm2 +
movsd xmm0 xmm2 +
mov edx 3EEh +
jmp loc_42DE6E  +
movd eax xmm4 +
psrlq xmm4 20h +
movd edx xmm4 +
and edx 7FFFFFFFh +
mov ecx eax +
or eax edx +
movlpd xmm0 oword ptr ds:oword_435770 +
mov edx 1Ah +
cmp eax 0 +
jz loc_42DE6E  +
movd eax xmm4 +
mov edx 1Dh +
and eax 7FFFFFFFh +
cmp eax 7FF00000h +
ja loc_42DE6E  +
jb loc_42DE5A  +
cmp ecx 0 +
ja loc_42DE6E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
fld1   +
retn   +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm0 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 18h +
mov [esp+1Ch+var_18] edx +
sub edx 8 +
mov [esp+1Ch+var_1C] edx +
call sub_42A063  +
fld  qword ptr [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
cmp eax 0 +
jle loc_42DECB  +
cmp eax 40000h +
jnb loc_42E0EA  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 3FF00h +
sub edx 80h +
and edx 0FFFFFF80h +
push edi  +
mov edi 3FF0h +
jmp loc_42DEF1  +
cmp eax 0FFFC0200h +
jle loc_42E0C7  +
push esi  +
mov edx eax +
and eax 7Fh +
add ecx 80h +
and edx 0FFFFFF80h +
add edx 3FE80h +
push edi  +
mov edi 0 +
addsd xmm4 xmm0 +
movsd xmm0 xmm3 +
addsd xmm3 ds:qword_435750 +
mov esi edx +
sub esi 1FF80h +
mulpd xmm2 xmm7 +
subsd xmm3 ds:qword_435750 +
mulpd xmm7 xmm7 +
subsd xmm0 xmm3 +
add eax eax +
add eax eax +
add eax eax +
add eax eax +
movapd xmm3 oword ptr ds:oword_438890[eax] +
movapd xmm6 oword ptr ds:oword_435790 +
mulpd xmm1 xmm7 +
addpd xmm2 xmm1 +
pshufd xmm1 xmm2 +
mulsd xmm2 xmm7 +
addsd xmm2 xmm1 +
addsd xmm2 xmm4 +
movlpd xmm4 oword ptr ds:oword_4357B0 +
movd xmm1 edx +
sub edx 1FF80h +
neg edx  +
sar edx 7 +
add edx 2 +
mov eax edx +
and eax 20h +
add edx eax +
xorpd xmm7 xmm7 +
mov eax 3F80h +
pinsrw xmm7 eax +
mulsd xmm2 qword ptr [esp+8+arg_0+8] +
mulsd xmm0 xmm7 +
psllq xmm1 2Dh +
pshufd xmm1 xmm1 +
movapd xmm7 oword ptr ds:oword_4357A0 +
addsd xmm5 xmm2 +
mulpd xmm3 xmm1 +
addsd xmm0 xmm5 +
unpcklpd xmm0 xmm0 +
mulpd xmm6 xmm0 +
mulsd xmm4 xmm0 +
mulpd xmm0 xmm0 +
addpd xmm7 xmm6 +
mulpd xmm7 xmm0 +
mulsd xmm0 xmm3 +
pshufd xmm6 xmm7 +
mulsd xmm0 xmm7 +
pshufd xmm5 xmm3 +
mulsd xmm6 xmm3 +
mulsd xmm4 xmm3 +
movd xmm7 ecx +
psllq xmm7 2Dh +
movd xmm2 edx +
pcmpeqd xmm1 xmm1 +
psllq xmm1 xmm2 +
addsd xmm0 xmm5 +
addsd xmm0 xmm6 +
andpd xmm1 xmm3 +
addsd xmm0 xmm4 +
xorpd xmm6 xmm6 +
pcmpeqd xmm4 xmm4 +
psllq xmm4 xmm2 +
subsd xmm3 xmm1 +
movsd xmm2 xmm1 +
addsd xmm1 xmm0 +
andpd xmm1 xmm4 +
pinsrw xmm6 edi +
pop edi  +
subsd xmm2 xmm1 +
addsd xmm0 xmm2 +
addsd xmm0 xmm3 +
cmp esi 0 +
jg loc_42E07D  +
pop esi  +
mulsd xmm0 xmm7 +
mulsd xmm1 xmm7 +
addsd xmm0 xmm1 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_42DE6E  +
mov edx 19h +
cmp eax 0 +
jz loc_42DE6E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
pop esi  +
addsd xmm0 xmm1 +
mulsd xmm0 xmm7 +
mulsd xmm6 xmm0 +
addsd xmm0 xmm6 +
pextrw eax xmm0 +
and eax 7FF0h +
mov edx 18h +
cmp eax 7FF0h +
jz loc_42DE6E  +
mov edx 19h +
cmp eax 0 +
jz loc_42DE6E  +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr ds:oword_4357F0+8 +
movd xmm1 ecx +
mulsd xmm0 xmm0 +
psllq xmm1 2Dh +
orpd xmm0 xmm1 +
mov edx 19h +
jmp loc_42DE6E  +
mov edx 18h +
cmp ecx 0 +
jz loc_42E109  +
movlpd xmm0 oword ptr ds:oword_4357E0+8 +
mulsd xmm0 qword ptr ds:oword_4357F0 +
jmp loc_42DE6E  +
movlpd xmm0 oword ptr ds:oword_4357F0 +
mulsd xmm0 xmm0 +
jmp loc_42DE6E  +
pshufd xmm4 xmm1 +
mulpd xmm4 xmm6 +
pextrw eax xmm4 +
and eax 7FF0h +
mov edx 40A0h +
sub edx eax +
sub eax 3C70h +
or edx eax +
cmp edx 80000000h +
jb loc_42D868  +
cmp eax 80000000h +
jb loc_42E16E  +
or ecx 1FF80h +
movd xmm0 ecx +
psllq xmm0 2Dh +
sub esp 10h +
movlpd oword ptr [esp+10h+var_C] xmm0 +
fld  qword ptr [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm4 oword ptr [esp+arg_0] +
pextrw edx xmm4 +
and edx 7FF0h +
sub edx 3FF0h +
pextrw eax xmm1 +
xor eax edx +
and eax 8000h +
cmp eax 0 +
jnz loc_42E0C7  +
jmp loc_42E0EA  +
***
push ecx  +
cmp dword_44312C 1 +
jl loc_42E213  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_42E1BF  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_42E213  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_42E20C  +
test eax 204h +
jnz loc_42E1DB  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_42E20C  +
test eax 408h +
jnz loc_42E1F0  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_42E1FE  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_42E213  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_442008 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4168CD  +
mov eax offset unk_43F71C +
jmp loc_418855  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_4168CD  +
mov eax offset unk_43F818 +
jmp loc_418855  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_4168CD  +
mov eax offset unk_43F7EC +
jmp loc_418855  +
***
jmp loc_418855  +
***
jmp loc_418855  +
***
push esp  +
and al 8 +
lea eax [edx+0Ch] +
mov ecx [edx-84h] +
xor ecx eax +
call sub_4168CD  +
mov ecx [edx-4] +
xor ecx eax +
call sub_4168CD  +
mov eax offset unk_43F7EC +
jmp loc_418855  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4168CD  +
mov eax offset unk_43FC70 +
jmp loc_418855  +
***
mov ecx offset dword_443C70 +
mov ecx dword_443F30 +
mov ecx dword_443F34 +
jmp loc_42E3A5  +
mov ecx offset off_442BF8 +
mov ecx offset off_442B78 +
mov ecx offset off_442BD8 +
mov ecx offset off_442B98 +
mov ecx offset off_442B18 +
mov ecx offset off_442B38 +
mov ecx offset off_442BB8 +
mov ecx offset off_442B58 +
mov ecx offset off_442C18 +
mov ecx dword_444018 +
mov ecx offset off_442C34 +
mov ecx offset off_442C50 +
mov ecx offset off_442C70 +
mov ecx offset off_442C90 +
mov ecx offset unk_442DB0 +
mov ecx offset unk_4439A8 +
mov ecx offset unk_443A94 +
mov ecx offset unk_443A8C +
mov ecx offset unk_443B01 +
mov ecx offset unk_443B00 +
jmp loc_42D1DF  +
***
