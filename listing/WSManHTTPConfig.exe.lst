retf 5BC3h  +
***
retn 7810h  +
***
jmp loc_1007699  +
pop es  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 0  +
lea eax [ebp-1] +
push eax  +
push [ebp+arg_0]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push [ebp+arg_0]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_14] +
cdq   +
mov [ebp+var_9C] eax +
mov [ebp+var_98] edx +
lea eax [ebp+arg_10] +
cdq   +
push ebx  +
push esi  +
xor esi esi +
mov [ebp+var_84] eax +
mov eax [ecx] +
mov [ebp+var_80] edx +
xor edx edx +
push edi  +
mov [ebp+hMem] esi +
mov [ebp+var_88] 1A0000h +
mov [ebp+var_B0] 0FFh +
mov [ebp+var_7C] 2 +
cmp eax esi +
jz loc_1008F30  +
lea edi [ebp+var_7C] +
add ecx 4 +
mov ebx [ecx] +
add esi ebx +
cmp esi ebx +
jb loc_1008F5F  +
inc edx  +
add edi 10h +
mov [ebp+arg_C] edx +
cmp edx 7 +
ja loc_1008ECA  +
cdq   +
mov [edi-4] edx +
mov edx [ebp+arg_C] +
mov [edi-8] eax +
mov [edi] ebx +
add ecx 4 +
mov eax [ecx] +
test eax eax +
jnz loc_1008EA3  +
cmp esi 2000h +
ja loc_1008F5F  +
cmp edx 7 +
jbe loc_1008F30  +
push esi  +
xor ebx ebx +
push ebx  +
call ds:LocalAlloc  +
mov [ebp+hMem] eax +
cmp eax ebx +
jz loc_1008F5F  +
cdq   +
mov [ebp+var_6C] esi +
mov esi [ebp+arg_14] +
mov [ebp+var_74] eax +
mov [ebp+var_70] edx +
jmp loc_1008F1E  +
add esi 4 +
mov edi [esi] +
push edi  +
push eax  +
mov eax [ebp+hMem] +
add eax ebx +
push eax  +
call memcpy  +
add esp 0Ch +
add ebx edi +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_1008F04  +
push 50h  +
pop eax  +
mov word ptr [ebp+var_B4] ax +
jmp loc_1008F3D  +
add edx 4 +
shl edx 4 +
mov word ptr [ebp+var_B4] dx +
lea eax [ebp+var_B4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:EtwLogTraceEvent  +
cmp [ebp+hMem] 0 +
jz loc_1008F5F  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+1Ch] +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1008E49  +
pop ebp  +
retn   +
***
mov edi edi +
push edi  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov edi eax +
test edi edi +
jz loc_1008FFE  +
push esi  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push edi  +
call esi  +
mov off_102B004 eax +
test eax eax +
jnz loc_1008FCF  +
and dword_102C62C eax +
mov off_102B004 offset loc_1008F6D +
jmp loc_1008FEA  +
push offset aTracemessageva  +
push edi  +
mov dword_102C62C 1 +
call esi  +
mov off_102B008 eax +
test eax eax +
jnz loc_1008FF4  +
mov off_102B008 offset sub_1008E49 +
push edi  +
call ds:FreeLibrary  +
pop esi  +
pop edi  +
retn   +
and dword_102C62C 0 +
mov off_102B004 offset loc_1008F6D +
mov off_102B008 offset sub_1008E49 +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1008F91  +
lea eax [ebp+arg_14] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B008  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 18h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov byte ptr [eax+18h] 1 +
mov [eax+19h] cl +
mov [eax+1Ah] dx +
mov [eax+1Ch] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+10h] +
xor edx edx +
push ebx  +
mov [eax] edx +
mov eax [ebp+8] +
sub eax 4 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi esi +
jz loc_10090CA  +
dec eax  +
jz loc_10090C1  +
push 57h  +
pop eax  +
jmp loc_1009138  +
xor ebx ebx +
xor eax eax +
mov [ebp+0Fh] al +
jmp loc_10090F0  +
push dword ptr [ebp+14h]  +
call ds:EtwGetTraceLoggerHandle  +
mov ebx eax +
push edx  +
push ebx  +
mov [ebp-4] edx +
call ds:EtwGetTraceEnableLevel  +
push dword ptr [ebp-4]  +
mov [ebp+0Fh] al +
push ebx  +
call ds:EtwGetTraceEnableFlags  +
mov edx [ebp-4] +
movzx ecx word ptr [esi+1Ah] +
test cl 1 +
jz loc_1009119  +
cmp dword ptr [esi+10h] 0 +
jz loc_1009119  +
mov ecx [esi+10h] +
mov [ecx] ebx +
mov [ecx+4] edx +
movzx ecx byte ptr [ebp+0Fh] +
mov edx [esi+10h] +
mov [edx+0Ch] ecx +
mov ecx [esi+10h] +
mov [ecx+8] eax +
jmp loc_1009136  +
test cl 2 +
jz loc_1009127  +
mov esi [esi+10h] +
test esi esi +
jz loc_1009127  +
mov edi esi +
mov cl [ebp+0Fh] +
mov [edi+10h] ebx +
mov [edi+14h] edx +
mov [edi+19h] cl +
mov [edi+1Ch] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi off_102B00C +
push edi  +
mov edi offset dword_102C628 +
jmp loc_1009183  +
mov eax [edi] +
and [ebp+var_4] 0 +
lea ecx [esi+8] +
push ecx  +
push 0  +
push 0  +
lea ecx [ebp+var_8] +
push ecx  +
push 1  +
push eax  +
push esi  +
push offset loc_100909B  +
add edi 4 +
mov [ebp+var_8] eax +
call ds:EtwRegisterTraceGuidsW  +
mov esi [esi] +
test esi esi +
jnz loc_100915A  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_10091BD  +
push ebx  +
push 54Fh  +
push offset a95  +
push 5Fh  +
push offset aDW7rtmAdminWmi  +
call sub_100A7B1  +
xor al al +
jmp loc_1009262  +
cmp [ebp+arg_0] 2 +
jge loc_10091DB  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGenericCo  +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
jmp loc_10091B6  +
push esi  +
mov esi ds:_wcsicmp +
push edi  +
mov edi [ebp+arg_4] +
push offset aUninstall  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10091FE  +
mov dword ptr [ebx] 1 +
jmp loc_1009240  +
push offset aInstall  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009212  +
and [ebx] eax +
jmp loc_1009240  +
push offset aInstall_iisext  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100922A  +
mov dword ptr [ebx] 2 +
jmp loc_1009240  +
push offset aUninstall_iise  +
push dword ptr [edi+4]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1009244  +
mov dword ptr [ebx] 3 +
mov al 1 +
jmp loc_1009260  +
push dword ptr [edi+4]  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_0  +
push eax  +
call ds:fwprintf  +
add esp 0Ch +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
call ds:CoInitializeEx  +
test eax eax +
jge loc_10092A0  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_1  +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
jmp loc_1009801  +
mov esi ds:SysAllocString +
push offset aName  +
mov [ebp+ppv] ebx +
mov [ebp+var_34] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_4] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_18] ebx +
call esi  +
push offset aWsman  +
mov [ebp+var_38] eax +
call esi  +
push offset aImage  +
mov [ebp+var_3C] eax +
call esi  +
push offset aWindirSystem32  +
mov [ebp+var_44] eax +
call esi  +
mov [ebp+var_48] eax +
cmp [ebp+var_38] ebx +
jz loc_10097E5  +
cmp [ebp+var_3C] ebx +
jz loc_10097E5  +
cmp [ebp+var_44] ebx +
jz loc_10097E5  +
cmp eax ebx +
jz loc_10097E5  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push ebx  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jge loc_1009346  +
cmp [ebp+arg_0] bl +
jz loc_1009685  +
push edi  +
push offset aErrorUnableToC  +
jmp loc_1009671  +
mov eax [ebp+ppv] +
mov ecx [eax] +
mov esi offset aMachineWebroot +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_34] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096E8  +
mov eax [ebp+var_34] +
cmp eax ebx +
jz loc_10096E8  +
mov ecx [eax] +
lea edx [ebp+var_30] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_10096CA  +
mov eax [ebp+var_30] +
cmp eax ebx +
jz loc_10096CA  +
mov ecx [eax] +
lea edx [ebp+var_2C] +
push edx  +
push esi  +
push offset aSystem_webserv  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096C3  +
mov eax [ebp+var_2C] +
cmp eax ebx +
jz loc_10096C3  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096BC  +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_10096BC  +
lea edx [ebp+var_40] +
push edx  +
mov [ebp+var_40] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_10093F8  +
push offset aErrorUnableToG  +
jmp loc_10096ED  +
mov [ebp+var_10] ebx +
cmp [ebp+var_40] ebx +
jbe loc_10094BA  +
push 2  +
pop eax  +
mov word ptr [ebp+var_58] ax +
mov ax word ptr [ebp+var_10] +
lea edx [ebp+var_1C] +
push edx  +
mov [ebp+var_50] ax +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_58] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10094FE  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_20] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jl loc_100952B  +
push 8  +
pop eax  +
mov word ptr [ebp+var_68] ax +
mov eax [ebp+var_38] +
lea edx [ebp+var_18] +
push edx  +
mov [ebp+var_60] eax +
mov eax [ebp+var_20] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_68] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_1009520  +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1009520  +
mov ecx [eax] +
lea edx [ebp+var_78] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10094D8  +
push [ebp+var_3C]  +
push [ebp+var_70]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10094E3  +
inc [ebp+var_10]  +
movzx eax word ptr [ebp+var_10] +
cmp eax [ebp+var_40] +
jb loc_1009404  +
cmp [ebp+arg_0] bl +
jnz loc_1009536  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_1009536  +
push offset aErrorUnableT_0  +
jmp loc_10096ED  +
push edi  +
push offset aErrorUnableToA  +
jmp loc_1009671  +
mov eax [ebp+var_4] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_58] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jge loc_10094BA  +
movzx eax word ptr [ebp+var_10] +
push edi  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push offset aErrorUnableToF  +
push eax  +
call ds:fwprintf  +
add esp 10h +
jmp loc_10096FE  +
push edi  +
push offset aErrorUnableT_1  +
jmp loc_1009671  +
push edi  +
push offset aErrorUnableT_2  +
jmp loc_1009671  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_14] +
push edx  +
push offset dword_1001C58  +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096B4  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_10096B4  +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096AD  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_10096AD  +
push 8  +
pop ecx  +
mov word ptr [ebp+var_68] cx +
mov ecx [ebp+var_38] +
lea edx [ebp+var_24] +
push edx  +
mov [ebp+var_60] ecx +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_68] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10096A6  +
cmp [ebp+var_8] ebx +
jz loc_10096A6  +
push 8  +
pop eax  +
mov word ptr [ebp+var_68] ax +
mov eax [ebp+var_3C] +
mov [ebp+var_60] eax +
mov eax [ebp+var_24] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_68] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jge loc_10095E4  +
push offset aErrorUnableToS  +
jmp loc_10096ED  +
push 8  +
pop eax  +
mov word ptr [ebp+var_68] ax +
mov eax [ebp+var_44] +
lea edx [ebp+var_28] +
push edx  +
mov [ebp+var_60] eax +
mov eax [ebp+var_8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_68] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_100969F  +
cmp [ebp+var_8] ebx +
jz loc_100969F  +
push 8  +
pop eax  +
mov word ptr [ebp+var_68] ax +
mov eax [ebp+var_48] +
mov [ebp+var_60] eax +
mov eax [ebp+var_28] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_68] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jge loc_100964F  +
push offset aErrorUnableT_3  +
jmp loc_10096ED  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jge loc_1009689  +
cmp edi 0B7h +
jz loc_1009685  +
push edi  +
push offset aErrorUnableT_4  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 0Ch +
jmp loc_10096FE  +
xor edi edi +
jmp loc_10096FE  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_10096FE  +
push offset aErrorUnableT_5  +
jmp loc_10096ED  +
push offset aErrorUnableToR  +
jmp loc_10096ED  +
push offset aErrorUnableT_6  +
jmp loc_10096ED  +
push offset aErrorUnableT_7  +
jmp loc_10096ED  +
push edi  +
push offset aErrorUnableT_8  +
jmp loc_1009671  +
push offset aErrorUnableT_9  +
jmp loc_10096ED  +
push offset aErrorUnable_10  +
jmp loc_10096ED  +
mov eax ds:_iob +
add eax 40h +
cmp edi 80070005h +
jnz loc_10096E1  +
push offset aErrorAccessToC  +
jmp loc_10096F5  +
push offset aErrorUnable_11  +
jmp loc_10096F5  +
push offset aErrorUnable_12  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_100970E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] ebx +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_100971E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] ebx +
mov eax [ebp+var_20] +
cmp eax ebx +
jz loc_100972E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_20] ebx +
mov eax [ebp+var_24] +
cmp eax ebx +
jz loc_100973E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_24] ebx +
mov eax [ebp+var_28] +
cmp eax ebx +
jz loc_100974E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_28] ebx +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_100975E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_100976E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_100977E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_2C] +
cmp eax ebx +
jz loc_100978E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_2C] ebx +
mov eax [ebp+var_30] +
cmp eax ebx +
jz loc_100979E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_30] ebx +
mov eax [ebp+var_34] +
cmp eax ebx +
jz loc_10097AE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_34] ebx +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_10097BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] ebx +
push [ebp+var_38]  +
mov esi ds:SysFreeString +
call esi  +
push [ebp+var_3C]  +
call esi  +
push [ebp+var_44]  +
call esi  +
push [ebp+var_48]  +
call esi  +
call ds:CoUninitialize  +
cmp edi ebx +
setl al  +
jmp loc_1009803  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_2  +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
call ds:CoUninitialize  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
call ds:CoInitializeEx  +
test eax eax +
jge loc_1009845  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_1  +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
mov al 1 +
jmp loc_1009ACB  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push ebx  +
push offset rclsid  +
mov [ebp+ppv] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] ebx +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jge loc_10098A0  +
cmp [ebp+arg_0] bl +
jnz loc_1009883  +
xor edi edi +
jmp loc_1009A50  +
mov eax ds:_iob +
push edi  +
add eax 40h +
push offset aErrorUnableToC  +
push eax  +
call ds:fwprintf  +
add esp 0Ch +
jmp loc_1009A50  +
mov eax [ebp+ppv] +
mov ecx [eax] +
mov esi offset aMachineWebroot +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov edi eax +
cmp edi ebx +
jl loc_1009A3A  +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_1009A3A  +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_1009A1C  +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1009A1C  +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
cmp edi ebx +
jl loc_1009A15  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1009A15  +
push 8  +
pop ecx  +
lea edx [ebp+var_14] +
push edx  +
mov word ptr [ebp+var_2C] cx +
mov ecx [eax] +
sub esp 10h +
mov [ebp+var_24] offset aSystem_webse_0 +
mov edi esp +
lea esi [ebp+var_2C] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_1009A0E  +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_1009A0E  +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov edi eax +
cmp edi ebx +
jl loc_1009A07  +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1009A07  +
cmp [ebp+arg_0] bl +
jz loc_10099D1  +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
mov esi offset aSystem_managem +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
test eax eax +
jge loc_10099AF  +
push 8  +
pop eax  +
lea edx [ebp+var_4] +
push edx  +
mov [ebp+var_24] esi +
mov word ptr [ebp+var_2C] ax +
mov eax [ebp+var_C] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_2C] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi ebx +
jl loc_10099CA  +
cmp [ebp+var_4] ebx +
jz loc_10099CA  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push offset aAllow  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_10099F1  +
push offset aErrorUnable_13  +
jmp loc_1009A3F  +
push offset aErrorUnable_14  +
jmp loc_1009A3F  +
push 8  +
pop ecx  +
mov word ptr [ebp+var_2C] cx +
mov ecx [eax] +
sub esp 10h +
mov [ebp+var_24] offset aSystem_managem +
mov edi esp +
lea esi [ebp+var_2C] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+18h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_1009A50  +
push offset aErrorUnableT_5  +
jmp loc_1009A3F  +
push offset aErrorUnable_15  +
jmp loc_1009A3F  +
push offset aErrorUnable_16  +
jmp loc_1009A3F  +
push offset aErrorUnable_17  +
jmp loc_1009A3F  +
mov eax ds:_iob +
add eax 40h +
cmp edi 80070005h +
jnz loc_1009A33  +
push offset aErrorAccessToC  +
jmp loc_1009A47  +
push offset aErrorUnable_11  +
jmp loc_1009A47  +
push offset aErrorUnable_12  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call ds:fwprintf  +
pop ecx  +
pop ecx  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_1009A60  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] ebx +
mov eax [ebp+var_14] +
cmp eax ebx +
jz loc_1009A70  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_14] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_1009A80  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_4] +
cmp eax ebx +
jz loc_1009A90  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] ebx +
mov eax [ebp+var_18] +
cmp eax ebx +
jz loc_1009AA0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] ebx +
mov eax [ebp+var_1C] +
cmp eax ebx +
jz loc_1009AB0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] ebx +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_1009AC0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] ebx +
call ds:CoUninitialize  +
cmp edi ebx +
setl al  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0FFFFFFFFh +
jnz loc_1009AFA  +
push 0  +
push 54Fh  +
push offset a44  +
push 2Ch  +
push offset aDW7rtmAdminW_0  +
call sub_100A7B1  +
mov eax [esi+0Ch] +
pop esi  +
retn   +
***
call __EH_prolog3  +
xor ebx ebx +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
call ds:HeapSetInformation  +
call sub_1008F91  +
mov esi offset unk_102C608 +
push esi  +
call sub_1009073  +
push offset aMicrosoftWinrm  +
mov dword_102C628 offset dword_10013FC +
mov off_102B00C esi +
call sub_1009144  +
lea ecx [ebp-20h] +
call sub_10101B1  +
mov [ebp-4] ebx +
cmp [ebp-20h] ebx +
jz loc_1009B87  +
push dword ptr [ebp-20h]  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_3  +
push eax  +
call ds:fwprintf  +
add esp 0Ch +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_1010210  +
mov eax ebx +
call __EH_epilog3  +
retn   +
push edi  +
lea ecx [ebp-44h] +
call sub_100E3AF  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+8]  +
call sub_1009192  +
test al al +
jnz loc_1009BB6  +
lea ecx [ebp-44h] +
mov [ebp-4] bl +
call sub_100E3A3  +
mov ebx edi +
jmp loc_1009B73  +
cmp dword ptr [ebp-10h] 2 +
jz loc_1009D3A  +
cmp dword ptr [ebp-10h] 3 +
push ebx  +
jz loc_1009D86  +
mov esi offset aWsman_0 +
push esi  +
push offset a47001  +
mov edi offset aHttp +
push edi  +
lea eax [ebp-44h] +
push eax  +
call sub_100C8C4  +
mov [ebp-1Ch] eax +
push ebx  +
push esi  +
push offset a5985  +
push edi  +
lea eax [ebp-44h] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_100C8C4  +
mov [ebp-18h] eax +
push ebx  +
push esi  +
push offset a5986  +
push offset aHttps  +
lea eax [ebp-44h] +
push eax  +
mov byte ptr [ebp-4] 3 +
call sub_100C8C4  +
mov [ebp-14h] eax +
mov byte ptr [ebp-4] 4 +
cmp [ebp-10h] ebx +
jnz loc_1009CC3  +
push ebx  +
mov esi offset aDAGxS158056925 +
push esi  +
push dword ptr [ebp-1Ch]  +
lea eax [ebp-44h] +
push eax  +
call sub_1010253  +
mov edi ds:fwprintf +
test eax eax +
jz loc_1009C6A  +
push ebx  +
push esi  +
push dword ptr [ebp-18h]  +
lea eax [ebp-44h] +
push eax  +
call sub_1010253  +
test eax eax +
jz loc_1009C6A  +
push ebx  +
push esi  +
push dword ptr [ebp-14h]  +
lea eax [ebp-44h] +
push eax  +
call sub_1010253  +
test eax eax +
jnz loc_1009C8E  +
lea ecx [ebp-44h] +
call sub_1009AD7  +
lea ecx [ebp-44h] +
call sub_1009AD7  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_4  +
push eax  +
call edi  +
add esp 0Ch +
push 1  +
lea eax [ebp-44h] +
push eax  +
call sub_10189FD  +
cmp eax ebx +
jnz loc_1009D00  +
lea ecx [ebp-44h] +
call sub_1009AD7  +
lea ecx [ebp-44h] +
call sub_1009AD7  +
push eax  +
mov eax ds:_iob +
add eax 40h +
push offset aWsmanGeneric_5  +
push eax  +
call edi  +
add esp 0Ch +
jmp loc_1009D00  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_1009CE3  +
push dword ptr [ebp-1Ch]  +
call sub_10103D0  +
push dword ptr [ebp-18h]  +
call sub_10103D0  +
push dword ptr [ebp-14h]  +
call sub_10103D0  +
jmp loc_1009D00  +
lea eax [ebp-44h] +
push eax  +
push 54Fh  +
push offset a1011  +
push 3F3h  +
push offset aDW7rtmAdminWmi  +
call sub_100A7B1  +
cmp [ebp-14h] ebx +
jz loc_1009D0E  +
push dword ptr [ebp-14h]  +
call sub_1008E30  +
pop ecx  +
cmp [ebp-18h] ebx +
jz loc_1009D1C  +
push dword ptr [ebp-18h]  +
call sub_1008E30  +
pop ecx  +
cmp [ebp-1Ch] ebx +
jz loc_1009D2A  +
push dword ptr [ebp-1Ch]  +
call sub_1008E30  +
pop ecx  +
lea ecx [ebp-44h] +
mov [ebp-4] bl +
call sub_100E3A3  +
jmp loc_1009B73  +
push edi  +
call sub_100980F  +
cmp al bl +
jz loc_1009D71  +
movzx esi al +
push esi  +
push offset aWsmanGeneric_6  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call ds:fwprintf  +
add esp 0Ch +
lea ecx [ebp-44h] +
mov [ebp-4] bl +
call sub_100E3A3  +
mov ebx esi +
jmp loc_1009B73  +
push edi  +
call sub_100926C  +
cmp al bl +
jz loc_1009D2A  +
movzx esi al +
push esi  +
push offset aWsmanGeneric_7  +
jmp loc_1009D4D  +
call sub_100980F  +
cmp al bl +
jz loc_1009D9A  +
movzx esi al +
push esi  +
push offset aWsmanGeneric_8  +
jmp loc_1009D4D  +
push ebx  +
call sub_100926C  +
cmp al bl +
jz loc_1009D2A  +
movzx esi al +
push esi  +
push offset aWsmanGeneric_9  +
jmp loc_1009D4D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1009DD0  +
test eax eax +
jnz loc_1009DD5  +
mov ecx [esi] +
test ecx ecx +
jz loc_1009DCD  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1009DC1  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_102C654 +
push offset dword_102C644  +
push dword_102C650  +
mov dword_102C644 eax +
push offset dword_102C634  +
push offset dword_102C638  +
push offset dword_102C630  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_102C640 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1009E5D  +
cmp eax esi +
jnz loc_1009E50  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1009E60  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1009E37  +
xor esi esi +
inc esi  +
mov eax dword_102CA98 +
cmp eax esi +
jnz loc_1009E73  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1009EAE  +
mov eax dword_102CA98 +
test eax eax +
jnz loc_1009EA8  +
mov dword_102CA98 esi +
push offset dword_10013B0  +
push offset dword_10013A4  +
call sub_1009DB4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1009EAE  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1009F78  +
mov dword_102C64C esi +
mov eax dword_102CA98 +
cmp eax esi +
jnz loc_1009ED2  +
push offset dword_10013A0  +
push offset dword_10012EC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_102CA98 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1009EDF  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_102CAA0 ebx +
jz loc_1009F00  +
push offset dword_102CAA0  +
call sub_100A2A9  +
pop ecx  +
test eax eax +
jz loc_1009F00  +
push ebx  +
push 2  +
push ebx  +
call dword_102CAA0  +
push dword_102C634  +
push dword_102C638  +
push dword_102C630  +
call sub_1009B04  +
add esp 0Ch +
mov dword_102C648 eax +
cmp dword_102C63C ebx +
jnz loc_1009F5E  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_102C648 eax +
xor ebx ebx +
cmp dword_102C63C ebx +
jnz loc_1009F5E  +
push eax  +
call ds:_exit  +
cmp dword_102C64C ebx +
jnz loc_1009F6C  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_102C648 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1009F97  +
xor eax eax +
jmp loc_1009FE4  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1009F93  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1009FD1  +
cmp ecx 20Bh +
jnz loc_1009F93  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1009F93  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1009FDF  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1009F93  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_102C63C eax +
call sub_100A4E8  +
push eax  +
call ds:__set_app_type  +
or dword_102CA90 0FFFFFFFFh +
or dword_102CA94 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_102C65C +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_102C658 +
mov [eax] ecx +
call sub_100A3D4  +
cmp dword_102B018 0 +
jnz loc_100A03D  +
push offset sub_100A3D4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100A3BC  +
xor eax eax +
retn   +
***
call sub_100A527  +
jmp sub_1009E15  +
***
cmp ecx dword_102B01C +
jnz loc_100A07C  +
retn 0  +
jmp loc_100A5BD  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102B01C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102B01C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102B01C +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102B01C +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_100A071  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_100A071  +
jmp __EH_epilog3  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100A1F0  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100A1F0  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100A1EA  +
cmp eax 19930521h +
jz loc_100A1EA  +
cmp eax 19930522h +
jz loc_100A1EA  +
cmp eax 1994000h +
jnz loc_100A1F0  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_100A1B0+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_100A236  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_100A232  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100A29D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_100A295  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100A29F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_100A285  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_100A220  +
pop ecx  +
test eax eax +
jz loc_100A306  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_100A260  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100A306  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100A30F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100A071  +
push offset dword_102B01C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_100A3DC  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100A4DB  +
cmp ecx 0FFFFFFFFh +
jz loc_100A4DB  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100A4D4  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100A4D4  +
cmp edx 10000000h +
jnb loc_100A4D4  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100A4D4  +
jmp loc_100A4CF  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_100A51D  +
push eax  +
call sub_100A482  +
test eax eax +
jz loc_100A51D  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100A512  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_100A51D  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_102B01C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_100A559  +
test eax ebx +
jz loc_100A559  +
not eax  +
mov dword_102B020 eax +
jmp loc_100A5B4  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100A5A0  +
test dword_102B01C ebx +
jnz loc_100A5A5  +
mov esi 0BB40E64Fh +
mov dword_102B01C esi +
not esi  +
mov dword_102B020 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_102C760 eax +
mov dword_102C75C ecx +
mov dword_102C758 edx +
mov dword_102C754 ebx +
mov dword_102C750 esi +
mov dword_102C74C edi +
mov word_102C778 ss +
mov word_102C76C cs +
mov word_102C748 ds +
mov word_102C744 es +
mov word_102C740 fs +
mov word_102C73C gs +
pushf   +
pop dword_102C770  +
mov eax [ebp+0] +
mov dword_102C764 eax +
mov eax [ebp+4] +
mov dword_102C768 eax +
lea eax [ebp+8] +
mov dword_102C774 eax +
mov eax [ebp-320h] +
mov dword_102C6B0 10001h +
mov eax dword_102C768 +
mov dword_102C66C eax +
mov dword_102C660 0C0000409h +
mov dword_102C664 1 +
mov eax dword_102B01C +
mov [ebp-328h] eax +
mov eax dword_102B020 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_100A70D  +
cmp word ptr [edx] 0 +
jnz loc_100A6F1  +
mov [ebp+arg_14] 0Eh +
jmp loc_100A714  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A6F6  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_14] eax +
jmp loc_100A714  +
mov [ebp+arg_14] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_100A72A  +
cmp word ptr [edx] 0 +
jnz loc_100A72C  +
mov edx offset aNull_0 +
jmp loc_100A72C  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_100A756  +
cmp word ptr [edi] 0 +
jnz loc_100A73D  +
push 0Eh  +
jmp loc_100A758  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A742  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_100A759  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_100A76E  +
cmp word ptr [edi] 0 +
jnz loc_100A76A  +
mov eax offset aNull_0 +
jmp loc_100A770  +
mov eax edi +
jmp loc_100A770  +
mov eax ebx +
push 0  +
push [ebp+arg_14]  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 28h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100A7AB  +
push eax  +
call ds:FreeLibrary  +
retn   +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
xor edi edi +
mov dword ptr [ebp-10h] offset dword_1001C58 +
cmp ebx edi +
jz loc_100A7FE  +
mov esi ebx +
mov [ebp-10h] ebx +
cmp [ebx] di +
jz loc_100A7F6  +
push 7  +
push offset aAdmin  +
push esi  +
call ds:_wcsnicmp  +
add esp 0Ch +
inc esi  +
inc esi  +
mov [ebp-10h] esi +
test eax eax +
jz loc_100A7F6  +
cmp [esi] di +
jnz loc_100A7D7  +
cmp [esi] di +
jnz loc_100A7FE  +
mov [ebp-10h] ebx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100A828  +
test byte ptr [eax+1Ch] 80h +
jz loc_100A828  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-10h]  +
push offset dword_1002A4C  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
mov eax [ebp+18h] +
cmp eax edi +
jz loc_100A83C  +
mov ecx [eax] +
push 4033C3ABh  +
push eax  +
call dword ptr [ecx+28h]  +
pop ecx  +
pop ecx  +
push offset aWer_dll  +
call ds:LoadLibraryW  +
mov ebx eax +
mov [ebp-20h] ebx +
mov [ebp-4] edi +
cmp ebx edi +
jz loc_100A905  +
mov esi ds:GetProcAddress +
push offset aWerreportcreat  +
push ebx  +
call esi  +
push offset aWerreportsetpa  +
push ebx  +
mov [ebp-14h] eax +
call esi  +
push offset aWerreportadddu  +
push ebx  +
mov [ebp+18h] eax +
call esi  +
push offset aWerreportsubmi  +
push ebx  +
mov [ebp-18h] eax +
call esi  +
push offset aWerreportclose  +
push ebx  +
mov [ebp-1Ch] eax +
call esi  +
mov esi eax +
cmp [ebp-14h] edi +
jz loc_100A905  +
cmp [ebp-18h] edi +
jz loc_100A905  +
cmp [ebp+18h] edi +
jz loc_100A905  +
cmp [ebp-1Ch] edi +
jz loc_100A905  +
cmp esi edi +
jz loc_100A905  +
lea eax [ebp+8] +
push eax  +
push edi  +
push edi  +
push offset aWinrmassert  +
mov [ebp+8] edi +
call dword ptr [ebp-14h]  +
test eax eax +
jnz loc_100A905  +
push edi  +
push edi  +
push edi  +
push 2  +
push edi  +
call ds:GetCurrentProcess  +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [ebp-18h]  +
push dword ptr [ebp-10h]  +
push offset aFilename  +
push edi  +
push dword ptr [ebp+8]  +
call dword ptr [ebp+18h]  +
push dword ptr [ebp+10h]  +
push offset aLineNumber  +
push 1  +
push dword ptr [ebp+8]  +
call dword ptr [ebp+18h]  +
push edi  +
push 80h  +
push 2  +
push dword ptr [ebp+8]  +
call dword ptr [ebp-1Ch]  +
push dword ptr [ebp+8]  +
call esi  +
push dword ptr [ebp+14h]  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_100A919  +
push ebx  +
call ds:FreeLibrary  +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100A957  +
cmp word ptr [edx] 0 +
jnz loc_100A93C  +
push 0Eh  +
jmp loc_100A959  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100A942  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_100A95A  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_100A96B  +
cmp word ptr [edx] 0 +
jnz loc_100A970  +
mov edx offset aNull_0 +
jmp loc_100A970  +
mov edx offset aNull +
push 0  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_20] +
xor ecx ecx +
push edi  +
cmp esi ecx +
jz loc_100A9D5  +
cmp [esi] cx +
jnz loc_100A9B6  +
mov [ebp+arg_20] 0Eh +
jmp loc_100A9D0  +
mov eax esi +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx cx +
jnz loc_100A9BB  +
sub eax edi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_20] eax +
push 0Ah  +
pop ebx  +
jmp loc_100A9DB  +
push 0Ah  +
pop ebx  +
mov [ebp+arg_20] ebx +
cmp esi ecx +
jz loc_100A9F2  +
cmp [esi] cx +
jnz loc_100A9ED  +
mov [ebp+var_4] offset aNull_0 +
jmp loc_100A9F9  +
mov [ebp+var_4] esi +
jmp loc_100A9F9  +
mov [ebp+var_4] offset aNull +
mov edi [ebp+arg_1C] +
cmp edi ecx +
jz loc_100AA2A  +
cmp [edi] cx +
jnz loc_100AA0E  +
mov [ebp+arg_1C] 0Eh +
jmp loc_100AA2D  +
mov eax edi +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx cx +
jnz loc_100AA13  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_1C] eax +
jmp loc_100AA2D  +
mov [ebp+arg_1C] ebx +
cmp edi ecx +
jz loc_100AA44  +
cmp [edi] cx +
jnz loc_100AA3F  +
mov [ebp+var_8] offset aNull_0 +
jmp loc_100AA4B  +
mov [ebp+var_8] edi +
jmp loc_100AA4B  +
mov [ebp+var_8] offset aNull +
mov edi [ebp+arg_18] +
cmp edi ecx +
jz loc_100AA7C  +
cmp [edi] cx +
jnz loc_100AA60  +
mov [ebp+arg_18] 0Eh +
jmp loc_100AA7F  +
mov eax edi +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx cx +
jnz loc_100AA65  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_18] eax +
jmp loc_100AA7F  +
mov [ebp+arg_18] ebx +
cmp edi ecx +
jz loc_100AA96  +
cmp [edi] cx +
jnz loc_100AA91  +
mov [ebp+var_C] offset aNull_0 +
jmp loc_100AA9D  +
mov [ebp+var_C] edi +
jmp loc_100AA9D  +
mov [ebp+var_C] offset aNull +
mov esi [ebp+arg_14] +
cmp esi ecx +
jz loc_100AAD5  +
cmp [esi] cx +
jnz loc_100AAAE  +
push 0Eh  +
pop ebx  +
jmp loc_100AAC5  +
mov eax esi +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx cx +
jnz loc_100AAB3  +
sub eax edi +
sar eax 1 +
lea ebx [eax+eax+2] +
cmp esi ecx +
jz loc_100AAD5  +
cmp [esi] cx +
jnz loc_100AADA  +
mov esi offset aNull_0 +
jmp loc_100AADA  +
mov esi offset aNull +
mov edi [ebp+arg_10] +
cmp edi ecx +
jz loc_100AB03  +
cmp [edi] cx +
jnz loc_100AAEA  +
push 0Eh  +
jmp loc_100AB05  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100AAEF  +
sub eax edx +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_100AB06  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_100AB1B  +
cmp word ptr [edi] 0 +
jnz loc_100AB17  +
mov eax offset aNull_0 +
jmp loc_100AB20  +
mov eax edi +
jmp loc_100AB20  +
mov eax offset aNull +
push 0  +
push [ebp+arg_20]  +
push [ebp+var_4]  +
push [ebp+arg_1C]  +
push [ebp+var_8]  +
push [ebp+arg_18]  +
push [ebp+var_C]  +
push ebx  +
push esi  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 40h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi 54Fh +
mov esi offset aDW7rtmAdminW_1 +
jnz loc_100ABB5  +
push 0  +
push edi  +
push offset a125  +
push 7Dh  +
push esi  +
call sub_100A7B1  +
cmp [ebp+arg_4] 0 +
jnz loc_100ABCB  +
push 0  +
push edi  +
push offset a126  +
push 7Eh  +
push esi  +
call sub_100A7B1  +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_100ABF9  +
test dx dx +
jz loc_100ABF5  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_100ABF9  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_100ABD3  +
xor eax eax +
jmp loc_100ABFE  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor ecx ecx +
test eax eax +
setz cl  +
mov eax ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi 54Fh +
mov esi offset aDW7rtmAdminW_1 +
jnz loc_100AC3A  +
push 0  +
push edi  +
push offset a133  +
push 85h  +
push esi  +
call sub_100A7B1  +
cmp [ebp+arg_4] 0 +
jnz loc_100AC53  +
push 0  +
push edi  +
push offset a134  +
push 86h  +
push esi  +
call sub_100A7B1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
neg eax  +
sbb eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi 54Fh +
mov esi offset aDW7rtmAdminW_1 +
jnz loc_100AC9B  +
push 0  +
push edi  +
push offset a150  +
push 96h  +
push esi  +
call sub_100A7B1  +
cmp [ebp+arg_4] 0 +
jnz loc_100ACB4  +
push 0  +
push edi  +
push offset a151  +
push 97h  +
push esi  +
call sub_100A7B1  +
mov eax [ebp+arg_4] +
pop edi  +
lea edx [eax+2] +
pop esi  +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100ACBC  +
sub eax edx +
sar eax 1 +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
inc edi  +
test esi esi +
jz loc_100AD16  +
jmp loc_100AD0C  +
movzx eax word ptr [esi] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_100AD14  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_100ACFB  +
jmp loc_100AD16  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jnz loc_100AD56  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a202  +
push 0CAh  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100ADDD  +
cmp [ebp+arg_4] ebx +
jnz loc_100AD6D  +
push ebx  +
push 54Fh  +
push offset a203  +
push 0CBh  +
jmp loc_100AD45  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100AD95  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100AD95  +
push esi  +
push offset dword_1003218  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100AD9A  +
sub eax edx +
sar eax 1 +
mov [ebp+arg_4] eax +
jz loc_100ADDA  +
push edi  +
xor edi edi +
cmp eax ebx +
jbe loc_100ADD3  +
movzx eax word ptr [esi+edi*2] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jnz loc_100ADCD  +
mov ax [esi+edi*2] +
mov [esi+ebx*2] ax +
inc ebx  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100ADB4  +
xor eax eax +
mov [esi+ebx*2] ax +
pop edi  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_100AE12  +
push ecx  +
push 54Fh  +
push offset a321  +
push 141h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100AE7C  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_100AE36  +
push edi  +
push 54Fh  +
push offset a322  +
push 142h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
jmp loc_100AE72  +
xor eax eax +
cmp [ecx] ax +
jz loc_100AE5F  +
cmp eax 0Ah +
ja loc_100AE72  +
movzx edx word ptr [ecx+eax*2] +
cmp dx 30h +
jb loc_100AE72  +
cmp dx 39h +
ja loc_100AE72  +
inc eax  +
cmp word ptr [ecx+eax*2] 0 +
jnz loc_100AE3D  +
cmp eax 0Ah +
ja loc_100AE72  +
push ecx  +
call ds:_wtoi64  +
pop ecx  +
test edx edx +
jl loc_100AE76  +
jg loc_100AE72  +
cmp eax 0FFFFFFFFh +
jbe loc_100AE76  +
xor eax eax +
jmp loc_100AE7B  +
mov [edi] eax +
xor eax eax +
inc eax  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
inc eax  +
cmp edx eax +
jge loc_100AEB1  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100AED6  +
mov ecx [eax] +
push 1  +
push edx  +
push 4033C387h  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
jmp loc_100AED6  +
mov ecx 0FFFFh +
cmp edx ecx +
jle loc_100AED8  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100AED6  +
push esi  +
mov esi [eax] +
push ecx  +
push edx  +
push 4033C388h  +
push [ebp+arg_8]  +
push eax  +
call dword ptr [esi+1Ch]  +
add esp 14h +
pop esi  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
xor ecx ecx +
cmp ebx ecx +
jnz loc_100AF11  +
push ecx  +
push 54Fh  +
push offset a1142  +
push 476h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100AFAD  +
mov edx [ebp+arg_4] +
cmp edx ecx +
jnz loc_100AF2A  +
push ecx  +
push 54Fh  +
push offset a1143  +
push 477h  +
jmp loc_100AF00  +
movzx eax word ptr [ebx] +
push esi  +
movzx esi word ptr [edx] +
cmp ax si +
jz loc_100AF40  +
movzx ecx si +
movzx eax ax +
sub eax ecx +
jmp loc_100AFAC  +
push edi  +
push 2  +
pop esi  +
cmp si ax +
jnz loc_100AF71  +
cmp [ebp+arg_8] cl +
jz loc_100AF5B  +
movzx eax word ptr [ebx+2] +
movzx ecx word ptr [edx+2] +
cmp ax cx +
jnz loc_100AF83  +
push 4  +
pop ecx  +
lea edi [edx+4] +
lea esi [ebx+4] +
xor eax eax +
cmps   +
jz loc_100AFAB  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
jmp loc_100AFAB  +
cmp [ebp+arg_8] cl +
jz loc_100AF8D  +
movzx eax word ptr [ebx+2] +
movzx ecx word ptr [edx+2] +
cmp ax cx +
jz loc_100AF8D  +
movzx ecx cx +
movzx eax ax +
sub eax ecx +
jmp loc_100AFAB  +
push 10h  +
pop ecx  +
lea edi [edx+8] +
lea esi [ebx+8] +
xor eax eax +
cmps   +
jz loc_100AFA1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_100AFAB  +
mov eax [ebx+18h] +
sub eax [edx+18h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_100AFD2  +
cmp [esi] ax +
jz loc_100AFCE  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_100AFC4  +
test edx edx +
jnz loc_100AFD7  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_100AFE8  +
test eax eax +
jl loc_100AFE5  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100B023  +
cmp [ebp+arg_4] eax +
jz loc_100B01F  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100B01F  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100B002  +
test esi esi +
jnz loc_100B02B  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100B039  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
mov [ebp+dwErrCode] eax +
mov eax off_102B00C +
mov ebx offset off_102B00C +
mov edi offset dword_1003218 +
cmp eax ebx +
jz loc_100B08C  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100B08C  +
push [ebp+dwEventID]  +
movzx ecx [ebp+wType] +
push ecx  +
push edi  +
push 42h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
push offset SourceName  +
push 0  +
call ds:RegisterEventSourceW  +
mov [ebp+hEventLog] eax +
xor eax eax +
cmp [ebp+hEventLog] eax +
jnz loc_100B0D0  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100B121  +
test dword ptr [eax+1Ch] 800h +
jz loc_100B121  +
call esi  +
push eax  +
push [ebp+dwEventID]  +
mov eax off_102B00C +
push edi  +
push 43h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
jmp loc_100B121  +
push eax  +
push [ebp+lpStrings]  +
push eax  +
push dword ptr [ebp+wNumStrings]  +
push eax  +
push [ebp+dwEventID]  +
push eax  +
push dword ptr [ebp+wType]  +
push [ebp+hEventLog]  +
call ds:ReportEventW  +
test eax eax +
jnz loc_100B118  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100B118  +
test dword ptr [eax+1Ch] 800h +
jz loc_100B118  +
call esi  +
push eax  +
push [ebp+dwEventID]  +
mov eax off_102B00C +
push edi  +
push 44h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
push [ebp+hEventLog]  +
call ds:DeregisterEventSource  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpStrings]  +
push dword ptr [ebp+wNumStrings]  +
push [ebp+dwEventID]  +
push 1  +
call sub_100B045  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpStrings]  +
push dword ptr [ebp+wNumStrings]  +
push [ebp+dwEventID]  +
push 4  +
call sub_100B045  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx offset dword_1003218 +
cmp eax esi +
jz loc_100B1A6  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100B1A6  +
push ebx  +
push 52h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor edi edi +
cmp [ebp+arg_0] edi +
jnz loc_100B1CE  +
push edi  +
push 54Fh  +
push offset a3584  +
push 0E00h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100B2CF  +
mov eax [ebp+hMem] +
cmp eax edi +
jnz loc_100B1E9  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3585  +
push 0E01h  +
jmp loc_100B1BD  +
push dword ptr [eax+6Ch]  +
mov [ebp+var_8] edi +
push dword ptr [eax+68h]  +
push offset pszObjId  +
call ds:CertFindExtension  +
cmp eax edi +
jz loc_100B2CC  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+hMem] +
push ecx  +
push edi  +
push 8000h  +
push dword ptr [eax+8]  +
mov [ebp+hMem] edi +
push dword ptr [eax+0Ch]  +
mov [ebp+var_4] edi +
push 0Ch  +
push 10001h  +
call ds:CryptDecodeObjectEx  +
test eax eax +
jz loc_100B29A  +
cmp [ebp+var_4] edi +
jnz loc_100B259  +
mov eax off_102B00C +
cmp eax esi +
jz loc_100B255  +
test dword ptr [eax+1Ch] 800h +
jz loc_100B255  +
push ebx  +
push 53h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 0Dh  +
jmp loc_100B2C4  +
mov ecx [ebp+hMem] +
mov esi [ecx] +
xor eax eax +
xor edx edx +
cmp eax esi +
jnb loc_100B291  +
mov edi [ecx+4] +
cmp dword ptr [edx+edi] 3 +
jz loc_100B275  +
inc eax  +
add edx 0Ch +
jmp loc_100B262  +
imul eax eax +
mov ecx edi +
push dword ptr [eax+ecx+4]  +
call sub_100ACE8  +
mov ecx [ebp+hMem] +
test eax eax +
jnz loc_100B291  +
mov [ebp+var_8] 1 +
push ecx  +
call ds:LocalFree  +
jmp loc_100B2CC  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax esi +
jz loc_100B2C3  +
test dword ptr [eax+1Ch] 800h +
jz loc_100B2C3  +
push edi  +
push ebx  +
push 54h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_100B2F5  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100B300  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+Buffer] +
test edi edi +
jnz loc_100B33B  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a4307  +
push 10D3h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
push 57h  +
pop eax  +
jmp loc_100B3DE  +
cmp dword_102C980 0 +
jz loc_100B352  +
mov eax dword_102C97C +
mov [edi] eax +
xor eax eax +
jmp loc_100B3DE  +
and [ebp+Buffer] 0 +
push esi  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
call NetGetJoinInformation  +
cmp [ebp+Buffer] 0 +
mov esi eax +
jz loc_100B376  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
test esi esi +
jz loc_100B3C1  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100B3A2  +
test dword ptr [eax+1Ch] 800000h +
jz loc_100B3A2  +
push esi  +
push offset dword_1003218  +
push 76h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100B3BD  +
mov ecx [eax] +
push esi  +
push offset aNetgetjoininfo  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
mov eax esi +
jmp loc_100B3DD  +
xor eax eax +
inc eax  +
cmp [ebp+var_4] 3 +
jnz loc_100B3CF  +
mov dword_102C97C eax +
mov dword_102C980 eax +
mov eax dword_102C97C +
mov [edi] eax +
xor eax eax +
pop esi  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_100B41B  +
push [ebp+hObject]  +
call sub_100E568  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memcpy_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call memmove_s  +
mov eax [ebp+arg_0] +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
mov esi ecx +
call ??0exception@@QAE@ABQBD@Z  +
mov dword ptr [esi] offset off_100344C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ??1exception@@UAE@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_100344C +
call ??1exception@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_100B4BD  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ??0exception@@QAE@ABV0@@Z  +
mov dword ptr [esi] offset off_100344C +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ecx+18h] +
lea eax [ecx+4] +
cmp esi 10h +
jb loc_100B500  +
mov edx [eax] +
jmp loc_100B502  +
mov edx eax +
cmp [ebp+arg_0] edx +
jb loc_100B51C  +
cmp esi 10h +
jb loc_100B50E  +
mov eax [eax] +
mov ecx [ecx+14h] +
add ecx eax +
cmp ecx [ebp+arg_0] +
jbe loc_100B51C  +
mov al 1 +
jmp loc_100B51E  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
sub esp 0Ch +
test ecx ecx +
ja loc_100B544  +
xor ecx ecx +
push ecx  +
call sub_1008E15  +
pop ecx  +
leave   +
retn 8  +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  ecx +
cmp eax 1 +
jnb loc_100B539  +
push 0  +
lea ecx [ebp-0Ch] +
call sub_100B46A  +
push offset dword_1027BE4  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B424  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B447  +
add esp 10h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100B5D1  +
cmp edx 7FFFFFFFh +
jbe loc_100B5D6  +
mov eax 80070057h +
test eax eax +
jl loc_100B5EC  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100AFEE  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_100B60E  +
cmp edx esi +
jbe loc_100B613  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_100B62B  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_100AFB7  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_100B62D  +
xor ecx ecx +
test eax eax +
jl loc_100B644  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_100AFEE  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100B665  +
cmp ecx 7FFFFFFFh +
jbe loc_100B66A  +
mov eax 80070057h +
test eax eax +
jl loc_100B6A7  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100B697  +
cmp eax esi +
ja loc_100B697  +
jnz loc_100B6A2  +
jmp loc_100B69C  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_100B6D0  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_100B6D0  +
call sub_100AFB7  +
jmp loc_100B6D5  +
mov eax 80070057h +
test eax eax +
jge loc_100B6E0  +
test edi edi +
jz loc_100B6E0  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
cmp [ebp+pCertContext] ebx +
jnz loc_100B71B  +
push ebx  +
push 54Fh  +
push offset a3514  +
push 0DBAh  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100B8C7  +
cmp [ebp+arg_4] ebx +
jnz loc_100B732  +
push ebx  +
push 54Fh  +
push offset a3515  +
push 0DBBh  +
jmp loc_100B70A  +
push esi  +
mov esi ds:CertGetEnhancedKeyUsage +
push edi  +
lea eax [ebp+pcbUsage] +
push eax  +
push ebx  +
push ebx  +
push [ebp+pCertContext]  +
mov [ebp+var_10] ebx +
mov [ebp+dwErrCode] 32h +
mov [ebp+pcbUsage] ebx +
call esi  +
test eax eax +
jz loc_100B881  +
cmp [ebp+pcbUsage] ebx +
jz loc_100B881  +
push ebx  +
lea eax [ebp-1] +
push eax  +
push [ebp+pcbUsage]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov edi eax +
cmp edi ebx +
jz loc_100B878  +
mov eax [ebp+pcbUsage] +
push eax  +
lea ecx [edi+eax] +
push ebx  +
push edi  +
mov [ebp+var_18] ecx +
call memset  +
mov eax [ebp+pcbUsage] +
add esp 0Ch +
mov [ebp+var_14] eax +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push ebx  +
push [ebp+pCertContext]  +
call esi  +
test eax eax +
jz loc_100B841  +
mov [ebp+pCertContext] ebx +
cmp [edi] ebx +
jz loc_100B86F  +
mov esi off_102B00C +
mov ecx [ebp+pCertContext] +
mov eax [edi+4] +
lea eax [eax+ecx*4] +
mov ecx [ebp+var_18] +
cmp eax ecx +
jnb loc_100B801  +
cmp [eax] ecx +
jnb loc_100B801  +
mov ecx [ebp+arg_4] +
mov eax [eax] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_100B7EF  +
cmp dl bl +
jz loc_100B7EB  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_100B7EF  +
inc eax  +
inc eax  +
inc ecx  +
inc ecx  +
cmp dl bl +
jnz loc_100B7D1  +
xor eax eax +
jmp loc_100B7F4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_100B831  +
mov [ebp+var_10] 1 +
jmp loc_100B86F  +
mov [ebp+dwErrCode] 54Fh +
cmp esi offset off_102B00C +
jz loc_100B831  +
test dword ptr [esi+1Ch] 800h +
jz loc_100B831  +
push offset dword_1003218  +
push 4Fh  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100904C  +
mov esi off_102B00C +
inc [ebp+pCertContext]  +
mov eax [ebp+pCertContext] +
cmp eax [edi] +
jnz loc_100B7B8  +
jmp loc_100B86F  +
mov [ebp+dwErrCode] 54Fh +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100B86F  +
test dword ptr [eax+1Ch] 800h +
jz loc_100B86F  +
push offset dword_1003218  +
push 50h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push edi  +
call sub_1008E30  +
pop ecx  +
jmp loc_100B8B4  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_100B8B4  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100B8B9  +
test dword ptr [eax+1Ch] 400h +
jz loc_100B8B9  +
push [ebp+dwErrCode]  +
push offset dword_1003218  +
push 51h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp [ebp+var_10] ebx +
jnz loc_100B8C2  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_10] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ecx  +
lea ecx [ebp-0Ch] +
call sub_100B4C9  +
push offset dword_1027BE4  +
lea eax [ebp-0Ch] +
push eax  +
call _CxxThrowException  +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100B906  +
push eax  +
push ecx  +
call sub_100B3FF  +
retn   +
***
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100B91C  +
push eax  +
call ds:CertFreeCertificateContext  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_100B93A  +
push eax  +
call ds:CertFreeCertificateContext  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_100B963  +
push eax  +
call ds:FreeLibrary  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ecx+18h] 10h +
mov eax [ebp+arg_0] +
mov [ecx+14h] eax +
jb loc_100B98A  +
mov ecx [ecx+4] +
jmp loc_100B98D  +
add ecx 4 +
mov byte ptr [ecx+eax] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B56E  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B590  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08lx04hx04hx02  +
push 25h  +
push [ebp+arg_4]  +
call sub_100B64F  +
add esp 38h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+Uuid] +
push eax  +
call ds:UuidCreate  +
push esi  +
lea eax [ebp+Uuid] +
push eax  +
call sub_100B9DE  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100A071  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9C8h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov [ebp+var_9A4] edi +
mov [ebp+lpWideCharStr] eax +
cmp edi esi +
jz loc_100BD7E  +
xor ecx ecx +
cmp cx [edi] +
jz loc_100BD7E  +
cmp eax esi +
jnz loc_100BACE  +
push ebx  +
push 54Fh  +
push offset a656  +
push 290h  +
jmp loc_100BD8E  +
lea eax [ebp+var_998] +
push eax  +
push 7FFFFFFFh  +
push edi  +
mov [ebp+dwErrCode] esi +
mov [ebp+var_998] esi +
call sub_100B6AE  +
test eax eax +
jz loc_100BB05  +
push ebx  +
push 54Fh  +
push offset a662  +
push 296h  +
jmp loc_100BD8E  +
push esi  +
push esi  +
mov esi 400h +
push esi  +
lea eax [ebp+MultiByteStr] +
push eax  +
mov eax [ebp+var_998] +
inc eax  +
push eax  +
push edi  +
push 0  +
push 3  +
call ds:WideCharToMultiByte  +
test eax eax +
jnz loc_100BB7B  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BB5B  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BB5B  +
push esi  +
push offset dword_1003218  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test ebx ebx +
jz loc_100BB6F  +
mov eax [ebx] +
push edi  +
push 4033C3B0h  +
push esi  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
jmp loc_100BD98  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
mov [ebp+var_99C] eax +
test eax eax +
jz loc_100BBE5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BBC4  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BBC4  +
push [ebp+var_99C]  +
push offset dword_1003218  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test ebx ebx +
jz loc_100BBDD  +
mov eax [ebx] +
push edi  +
push 4033C3B0h  +
push [ebp+var_99C]  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
push [ebp+var_99C]  +
jmp loc_100BB70  +
and [ebp+var_99C] 0 +
and [ebp+var_998] 0 +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_9C8] +
stos   +
and [ebp+var_9C4] eax +
lea eax [ebp+var_998] +
push eax  +
lea eax [ebp+var_9C8] +
push eax  +
push 0  +
lea eax [ebp+MultiByteStr] +
push eax  +
mov [ebp+var_9C0] 1 +
mov [ebp+var_9BC] 6 +
mov [ebp+var_9C8] 4 +
call ds:getaddrinfo  +
mov edi eax +
test edi edi +
jz loc_100BC8D  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BC6F  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BC6F  +
push edi  +
push offset dword_1003218  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test ebx ebx +
jz loc_100BCD2  +
push [ebp+var_9A4]  +
push 4033C3B0h  +
push edi  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
jmp loc_100BD4F  +
push 2  +
push 0  +
push 0  +
push esi  +
lea eax [ebp+var_404] +
push eax  +
mov eax [ebp+var_998] +
push dword ptr [eax+10h]  +
push dword ptr [eax+18h]  +
call ds:getnameinfo  +
mov edi eax +
test edi edi +
jz loc_100BCDA  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BC6F  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BC6F  +
push edi  +
push offset dword_1003218  +
push 1Bh  +
jmp loc_100BC64  +
mov [ebp+dwErrCode] edi +
jmp loc_100BD4F  +
push esi  +
push [ebp+lpWideCharStr]  +
lea eax [ebp+var_404] +
push esi  +
push eax  +
push 0  +
push 3  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_100BD45  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BD27  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BD27  +
push esi  +
push offset dword_1003218  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test ebx ebx +
jz loc_100BD3C  +
push [ebp+var_9A4]  +
push 4033C3B0h  +
push esi  +
jmp loc_100BC7F  +
and [ebp+dwErrCode] 0 +
jmp loc_100BD4F  +
mov [ebp+var_99C] 1 +
push [ebp+var_998]  +
call ds:freeaddrinfo  +
call ds:WSACleanup  +
cmp [ebp+dwErrCode] 0 +
jz loc_100BD76  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_99C] +
jmp loc_100BD9A  +
push ebx  +
push 54Fh  +
push offset a655  +
push 28Fh  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9CCh +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
xor ebx ebx +
mov [ebp+lpWideCharStr] eax +
mov [ebp+var_9A8] ecx +
mov [ebp+var_9AC] edx +
mov [ebp+var_99C] esi +
cmp eax ebx +
jnz loc_100BE12  +
push esi  +
push 54Fh  +
push offset a987  +
push 3DBh  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100C0C2  +
cmp ecx ebx +
jnz loc_100BE28  +
push esi  +
push 54Fh  +
push offset a988  +
push 3DCh  +
jmp loc_100BE01  +
cmp edx ebx +
jnz loc_100BE3E  +
push esi  +
push 54Fh  +
push offset a989  +
push 3DDh  +
jmp loc_100BE01  +
push edi  +
lea ecx [ebp+var_998] +
push ecx  +
mov edi 7FFFFFFFh +
push edi  +
push eax  +
mov [ebp+var_998] ebx +
call sub_100B6AE  +
test eax eax +
jz loc_100BE6E  +
push esi  +
push 54Fh  +
push offset a994  +
push 3E2h  +
jmp loc_100BEA6  +
mov esi [ebp+var_998] +
lea eax [ebp+var_998] +
push eax  +
push edi  +
push [ebp+var_9A8]  +
mov [ebp+var_998] ebx +
call sub_100B6AE  +
test eax eax +
jz loc_100BEB5  +
push [ebp+var_99C]  +
push 54Fh  +
push offset a1000  +
push 3E8h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
jmp loc_100BFDB  +
push ebx  +
push ebx  +
mov edi 400h +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
inc esi  +
push esi  +
push [ebp+lpWideCharStr]  +
mov esi ds:WideCharToMultiByte +
push ebx  +
push 3  +
call esi  +
test eax eax +
jnz loc_100BF0D  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BFB5  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BFB5  +
push esi  +
push offset dword_1003218  +
push 23h  +
jmp loc_100BFAA  +
push ebx  +
push ebx  +
push edi  +
lea eax [ebp+var_804] +
push eax  +
mov eax [ebp+var_998] +
inc eax  +
push eax  +
push [ebp+var_9A8]  +
push ebx  +
push 3  +
call esi  +
test eax eax +
jnz loc_100BF75  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BF5E  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BF5E  +
push esi  +
push offset dword_1003218  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_99C] +
cmp eax ebx +
jz loc_100BFD4  +
push [ebp+var_9A8]  +
push 4033C3AFh  +
jmp loc_100BFCA  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
mov esi eax +
cmp esi ebx +
jz loc_100BFE2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100BFB5  +
test dword ptr [eax+1Ch] 800h +
jz loc_100BFB5  +
push esi  +
push offset dword_1003218  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_99C] +
cmp eax ebx +
jz loc_100BFD4  +
push [ebp+lpWideCharStr]  +
push 4033C3B0h  +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100C0C1  +
push 8  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_9CC] +
stos   +
lea eax [ebp+var_9A4] +
push eax  +
lea eax [ebp+var_9CC] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
xor edi edi +
lea eax [ebp+MultiByteStr] +
inc edi  +
push eax  +
mov [ebp+var_9A4] ebx +
mov [ebp+var_9C8] ebx +
mov [ebp+var_9C4] edi +
mov [ebp+var_9C0] 6 +
mov [ebp+var_9CC] 4 +
call ds:getaddrinfo  +
mov esi eax +
cmp esi ebx +
jz loc_100C096  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100C068  +
test dword ptr [eax+1Ch] 800h +
jz loc_100C068  +
push esi  +
push offset dword_1003218  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_99C] +
cmp eax ebx +
jz loc_100C087  +
push [ebp+lpWideCharStr]  +
mov ecx [eax] +
push 4033C3B0h  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
mov esi [ebp+var_9A4] +
jmp loc_100C0B2  +
mov esi [ebp+var_9A4] +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
push [ebp+var_9AC]  +
call memcpy  +
add esp 0Ch +
mov ebx edi +
push esi  +
call ds:freeaddrinfo  +
call ds:WSACleanup  +
mov eax ebx +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
cmp edi esi +
jnz loc_100C108  +
push esi  +
push 54Fh  +
push offset a1111  +
push 457h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100C19C  +
cmp [ebp+arg_4] esi +
jnz loc_100C11F  +
push esi  +
push 54Fh  +
push offset a1112  +
push 458h  +
jmp loc_100C0F7  +
push ebx  +
mov ebx [ebp+arg_8] +
cmp ebx esi +
jnz loc_100C139  +
push esi  +
push 54Fh  +
push offset a1113  +
push 459h  +
jmp loc_100C14F  +
cmp [ebp+arg_4] 8 +
jbe loc_100C15B  +
push esi  +
push 54Fh  +
push offset a1114  +
push 45Ah  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
jmp loc_100C1BE  +
cmp [ebp+arg_4] esi +
jbe loc_100C198  +
mov eax [ebp+arg_4] +
dec eax  +
cmp esi eax +
movzx eax byte ptr [esi+edi] +
push eax  +
jnz loc_100C174  +
push offset a02x  +
jmp loc_100C179  +
push offset a02x_0  +
push 8  +
pop eax  +
sub eax esi +
imul eax eax +
push eax  +
push ebx  +
call sub_100B64F  +
add esp 10h +
test eax eax +
jnz loc_100C1A2  +
inc esi  +
add ebx 6 +
cmp esi [ebp+arg_4] +
jb loc_100C160  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_100C1B7  +
and eax 0FFFFh +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100C19B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor ecx ecx +
cmp [ebp+arg_8] ecx +
jnz loc_100C1F5  +
push ecx  +
push 54Fh  +
push offset a1285  +
push 505h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp locret_100C334  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi ecx +
jnz loc_100C20F  +
push ecx  +
push 54Fh  +
push offset a1286  +
push 506h  +
jmp loc_100C23B  +
cmp [ebp+arg_10] ecx +
jnz loc_100C226  +
push ecx  +
push 54Fh  +
push offset a1287  +
push 507h  +
jmp loc_100C23B  +
cmp [ebp+arg_14] ecx +
jnz loc_100C24C  +
push ecx  +
push 54Fh  +
push offset a1288  +
push 508h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100C333  +
mov eax [ebp+arg_18] +
mov [ebp+arg_C] offset dword_1001C58 +
cmp eax ecx +
jz loc_100C25D  +
mov [ebp+arg_C] eax +
push ebx  +
push esi  +
mov esi ds:_wcsicmp +
mov ebx offset aHttp_0 +
push ebx  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100C285  +
mov ebx offset aHttps_0 +
push ebx  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100C285  +
mov ebx edi +
push [ebp+arg_C]  +
and [ebp+var_4] 0 +
push [ebp+arg_14]  +
mov edi offset aLsLsLsLs +
push [ebp+arg_10]  +
push ebx  +
push edi  +
call ds:_scwprintf  +
add esp 14h +
mov esi eax +
inc esi  +
cmp [ebp+arg_0] esi +
jb loc_100C321  +
push [ebp+arg_C]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push ebx  +
push edi  +
push esi  +
push [ebp+arg_4]  +
call sub_100B64F  +
add esp 1Ch +
test eax eax +
jl loc_100C302  +
mov [ebp+var_4] 1 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100C329  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100C329  +
push [ebp+arg_4]  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push ebx  +
push offset dword_1003218  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A994  +
jmp loc_100C329  +
push 0  +
push 54Fh  +
push offset a1328  +
push 530h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100C331  +
push 7Ah  +
call ds:SetLastError  +
mov eax [ebp+arg_8] +
mov [eax] esi +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 1Ch  +
***
adc eax offset CertFreeCertificateChain +
retn   +
***
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100C363  +
push eax  +
call ds:RegCloseKey  +
retn   +
***
and dword ptr [eax] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100B94B  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 32Ch +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
mov edi ecx +
call sub_100B94B  +
mov esi 11Ch +
push esi  +
lea eax [ebp-32Ch] +
push ebx  +
push eax  +
mov [edi+4] ebx +
call memset  +
add esp 0Ch +
lea eax [ebp-32Ch] +
push eax  +
mov [ebp-32Ch] esi +
call ds:GetVersionExW  +
test eax eax +
jnz loc_100C428  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100C421  +
test dword ptr [eax+1Ch] 200h +
jz loc_100C421  +
push offset dword_1003218  +
push 94h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor al al +
jmp loc_100C505  +
cmp dword ptr [ebp-328h] 5 +
jnz loc_100C43F  +
xor eax eax +
inc eax  +
cmp [ebp-324h] eax +
jnz loc_100C43F  +
mov [edi+4] eax +
mov esi 104h +
push esi  +
lea eax [ebp-210h] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_100C421  +
lea eax [ebp-210h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100C45F  +
sub eax edx +
push 5Ch  +
sar eax 1 +
pop ecx  +
cmp cx [ebp+eax*2-212h] +
jnz loc_100C48B  +
mov eax offset aAdvapi32_dll +
cmp [edi+4] ebx +
jnz loc_100C49A  +
mov eax offset aCrypt32_dll +
jmp loc_100C49A  +
mov eax offset aAdvapi32_dll_0 +
cmp [edi+4] ebx +
jnz loc_100C49A  +
mov eax offset aCrypt32_dll_0 +
push eax  +
push esi  +
lea eax [ebp-210h] +
push eax  +
call sub_100B5F5  +
cmp eax ebx +
jge loc_100C4BC  +
push 54Fh  +
call ds:SetLastError  +
jmp loc_100C421  +
***
push ebx  +
push ebx  +
lea eax [ebp-210h] +
push eax  +
call ds:LoadLibraryExW  +
push eax  +
mov ecx edi +
call sub_100C389  +
cmp [edi] ebx +
jnz loc_100C503  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100C421  +
test dword ptr [eax+1Ch] 200h +
jz loc_100C421  +
push offset dword_1003218  +
push 95h  +
jmp loc_100C416  +
***
mov al 1 +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 4  +
***
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100C52B  +
push eax  +
call sub_1008E30  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jz loc_100C565  +
cmp dword ptr [esi+18h] 10h +
jb loc_100C565  +
cmp [ebp+arg_4] 0 +
lea eax [esi+4] +
push edi  +
mov edi [eax] +
jbe loc_100C55D  +
push [ebp+arg_4]  +
push edi  +
push 10h  +
push eax  +
call sub_100B99A  +
push edi  +
call sub_1008E30  +
pop ecx  +
pop edi  +
push [ebp+arg_4]  +
mov ecx esi +
mov dword ptr [esi+18h] 0Fh +
call sub_100B974  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp [esi+14h] edi +
jnb loc_100C596  +
call loc_1024902  +
mov eax [esi+14h] +
sub eax edi +
cmp eax [ebp+arg_4] +
jnb loc_100C5A3  +
mov [ebp+arg_4] eax +
cmp [ebp+arg_4] 0 +
jbe loc_100C5E6  +
mov ecx [esi+18h] +
push ebx  +
lea edx [esi+4] +
cmp ecx 10h +
jb loc_100C5B9  +
mov ebx [edx] +
jmp loc_100C5BB  +
mov ebx edx +
cmp ecx 10h +
jb loc_100C5C2  +
mov edx [edx] +
sub eax [ebp+arg_4] +
add ebx edi +
add ebx [ebp+arg_4] +
push eax  +
push ebx  +
sub ecx edi +
push ecx  +
add edx edi +
push edx  +
call sub_100B9BC  +
mov eax [esi+14h] +
sub eax [ebp+arg_4] +
mov ecx esi +
push eax  +
call sub_100B974  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3_catch  +
mov edi ecx +
mov [ebp-18h] edi +
mov esi [ebp+8] +
or esi 0Fh +
cmp esi 0FFFFFFFEh +
jbe loc_100C614  +
mov esi [ebp+8] +
jmp loc_100C639  +
xor edx edx +
push 3  +
mov eax esi +
pop ebx  +
div  ebx +
mov ecx [edi+18h] +
mov [ebp-14h] ecx +
shr dword ptr [ebp-14h] 1 +
mov edx [ebp-14h] +
cmp eax edx +
jnb loc_100C639  +
push 0FFFFFFFEh  +
pop eax  +
sub eax edx +
cmp ecx eax +
ja loc_100C639  +
lea esi [edx+ecx] +
and dword ptr [ebp-4] 0 +
push 0  +
lea eax [esi+1] +
push eax  +
call loc_100B528  +
mov ebx eax +
jmp loc_100C674  +
mov eax [ebp+8] +
mov [ebp-10h] esp +
mov [ebp+8] eax +
push 0  +
inc eax  +
push eax  +
mov byte ptr [ebp-4] 2 +
call loc_100B528  +
mov [ebp-14h] eax +
mov eax offset loc_100C66B +
retn   +
mov edi [ebp-18h] +
mov esi [ebp+8] +
mov ebx [ebp-14h] +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_100C696  +
cmp dword ptr [edi+18h] 10h +
jb loc_100C685  +
mov eax [edi+4] +
jmp loc_100C688  +
lea eax [edi+4] +
push dword ptr [ebp+0Ch]  +
push eax  +
lea eax [esi+1] +
push eax  +
push ebx  +
call sub_100B99A  +
push 0  +
push 1  +
mov ecx edi +
call sub_100C531  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
mov [edi+4] ebx +
mov [edi+18h] esi +
call sub_100B974  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
mov ebx [ebp+8] +
lea eax [ebp-338h] +
push eax  +
mov [ebp-33Ch] esi +
mov dword ptr [ebp-338h] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jnz loc_100C714  +
call ds:GetLastError  +
jmp loc_100C806  +
cmp dword ptr [ebp-334h] 5 +
ja loc_100C741  +
jnz loc_100C734  +
cmp dword ptr [ebp-330h] 2 +
ja loc_100C741  +
jnz loc_100C734  +
cmp word ptr [ebp-224h] 1 +
jnb loc_100C741  +
push esi  +
push ebx  +
call ds:RegDeleteKeyW  +
jmp loc_100C806  +
mov esi 104h +
push esi  +
lea eax [ebp-21Ch] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jz loc_100C709  +
lea eax [ebp-21Ch] +
lea edx [eax+2] +
xor edi edi +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_100C763  +
sub eax edx +
push 5Ch  +
sar eax 1 +
pop ecx  +
cmp cx [ebp+eax*2-21Eh] +
lea eax [ebp-21Ch] +
jnz loc_100C78B  +
push offset aAdvapi32_dll_1  +
jmp loc_100C790  +
push offset aAdvapi32_dll_2  +
push esi  +
push eax  +
call sub_100B5F5  +
cmp eax edi +
jge loc_100C7B2  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_100C806  +
and eax 0FFFFh +
jmp loc_100C806  +
push edi  +
push edi  +
lea eax [ebp-21Ch] +
push eax  +
call ds:LoadLibraryExW  +
mov esi eax +
mov [ebp-340h] esi +
mov [ebp-4] edi +
cmp esi edi +
jz loc_100C709  +
push offset aRegdeletekeyex  +
push esi  +
call ds:GetProcAddress  +
cmp eax edi +
jnz loc_100C7EC  +
call ds:GetLastError  +
jmp loc_100C7FB  +
push edi  +
push 100h  +
push dword ptr [ebp-33Ch]  +
push ebx  +
call eax  +
push esi  +
mov edi eax +
call ds:FreeLibrary  +
mov eax edi +
call sub_100A18B  +
retn 8  +
***
mov al 1 +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_100C844  +
push eax  +
call ds:FreeLibrary  +
test [ebp+arg_0] 1 +
jz loc_100C851  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0FFFFFFFEh +
jbe loc_100C873  +
call loc_10248C5  +
cmp [esi+18h] edi +
jnb loc_100C885  +
push dword ptr [esi+14h]  +
mov ecx esi +
push edi  +
call sub_100C5F3  +
jmp loc_100C8B1  +
cmp [ebp+arg_4] 0 +
jz loc_100C8A5  +
cmp edi 10h +
jnb loc_100C8A5  +
mov eax [esi+14h] +
cmp edi eax +
jnb loc_100C899  +
mov eax edi +
push eax  +
push 1  +
mov ecx esi +
call sub_100C531  +
jmp loc_100C8B1  +
test edi edi +
jnz loc_100C8B1  +
push edi  +
mov ecx esi +
call sub_100B974  +
xor eax eax +
cmp eax edi +
sbb eax eax +
pop edi  +
neg eax  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
xor esi esi +
cmp ebx esi +
jnz loc_100C8F7  +
push esi  +
push 54Fh  +
push offset a1251  +
push 4E3h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100C958  +
push dword ptr [ebp+18h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+14h]  +
mov [ebp-10h] esi +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
push esi  +
push esi  +
call sub_100C1C7  +
cmp eax esi +
jz loc_100C927  +
push ebx  +
push 54Fh  +
push offset a1257  +
push 4E9h  +
jmp loc_100C8E9  +
mov eax [ebp-10h] +
push 2  +
pop edx  +
xor ecx ecx +
mul  edx +
seto cl  +
push esi  +
neg ecx  +
or eax ecx +
lea ecx [ebp+0Bh] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov edi eax +
mov [ebp-14h] edi +
mov [ebp-4] esi +
cmp edi esi +
jnz loc_100C960  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
push dword ptr [ebp+18h]  +
lea eax [ebp+18h] +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push eax  +
push edi  +
push dword ptr [ebp-10h]  +
call sub_100C1C7  +
test eax eax +
jnz loc_100C956  +
push ebx  +
push 54Fh  +
push offset a1269  +
push 4F5h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
push edi  +
call sub_1008E30  +
pop ecx  +
jmp loc_100C8F3  +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
xor edi edi +
cmp ebx edi +
jnz loc_100C9DE  +
push edi  +
push 54Fh  +
push offset a4108  +
push 100Ch  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100CBE0  +
cmp [ebp+0Ch] edi +
jnz loc_100C9F5  +
push ebx  +
push 54Fh  +
push offset a4109  +
push 100Dh  +
jmp loc_100C9CD  +
mov [ebp-1Ch] edi +
mov [ebp-20h] edi +
mov [ebp-14h] edi +
mov esi ds:CertGetCertificateContextProperty +
lea eax [ebp-20h] +
push eax  +
push edi  +
push 3  +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] edi +
call esi  +
mov [ebp-10h] eax +
cmp eax edi +
jnz loc_100CA2C  +
push ebx  +
push 54Fh  +
push offset a4118  +
push 1016h  +
jmp loc_100C9CD  +
push edi  +
lea eax [ebp+0Bh] +
push eax  +
push dword ptr [ebp-20h]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-14h] +
call sub_101424F  +
cmp [ebp-14h] edi +
jnz loc_100CA51  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
mov [ebp-10h] edi +
cmp [ebp-10h] edi +
jz loc_100CA8D  +
mov eax [ebp-20h] +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [ebp-14h]  +
push 3  +
push dword ptr [ebp+0Ch]  +
call esi  +
mov [ebp-10h] eax +
cmp eax edi +
jnz loc_100CA8D  +
mov esi [ebx] +
add esi 28h +
call ds:GetLastError  +
push eax  +
push offset aCertgetcertifi  +
push 4033C360h  +
push ebx  +
call dword ptr [esi]  +
add esp 10h +
cmp [ebp-10h] edi +
mov [ebp-18h] edi +
mov edi [ebp+10h] +
jz loc_100CB95  +
mov esi ds:CryptBinaryToStringW +
and dword ptr [ebp+8] 0 +
lea eax [ebp+8] +
push eax  +
push 0  +
push 4  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_100CAEF  +
push ebx  +
push 54Fh  +
push offset a4149  +
push 1035h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
cmp dword ptr [ebp-14h] 0 +
jz loc_100C9D7  +
push dword ptr [ebp-14h]  +
call sub_1008E30  +
pop ecx  +
jmp loc_100C9D7  +
mov eax [ebp+8] +
push 2  +
pop edx  +
xor ecx ecx +
mul  edx +
seto cl  +
push 0  +
neg ecx  +
or eax ecx +
lea ecx [ebp+0Fh] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
mov ecx edi +
call sub_101569E  +
cmp dword ptr [edi] 0 +
jnz loc_100CB24  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
and dword ptr [ebp-10h] 0 +
cmp dword ptr [ebp-10h] 0 +
jz loc_100CB95  +
mov eax [ebp+8] +
mov [ebp-18h] eax +
lea eax [ebp-18h] +
push eax  +
push dword ptr [edi]  +
push 4  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-14h]  +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_100CB65  +
mov esi [ebx] +
add esi 28h +
call ds:GetLastError  +
push eax  +
push offset aCryptbinarytos  +
push 4033C360h  +
push ebx  +
call dword ptr [esi]  +
add esp 10h +
jmp loc_100CB95  +
xor edx edx +
xor esi esi +
mov eax [edi] +
movzx ecx word ptr [eax+esi*2] +
push 0Dh  +
pop ebx  +
cmp bx cx +
jz loc_100CB84  +
push 0Ah  +
pop ebx  +
cmp bx cx +
jz loc_100CB84  +
mov [eax+edx*2] cx +
inc edx  +
inc esi  +
cmp esi [ebp-18h] +
jbe loc_100CB69  +
mov eax [edi] +
xor ecx ecx +
mov [eax+edx*2] cx +
mov [ebp-18h] edx +
xor ebx ebx +
cmp [ebp+14h] ebx +
jz loc_100CBCE  +
cmp [ebp-10h] ebx +
jz loc_100CBCE  +
xor esi esi +
mov eax [edi] +
movzx eax word ptr [eax+ebx*2] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jnz loc_100CBC0  +
mov eax [edi] +
mov cx [eax+ebx*2] +
mov [eax+esi*2] cx +
inc esi  +
inc ebx  +
cmp ebx [ebp-18h] +
jbe loc_100CBA3  +
mov eax [edi] +
xor ecx ecx +
mov [eax+esi*2] cx +
cmp dword ptr [ebp-14h] 0 +
jz loc_100CBDD  +
push dword ptr [ebp-14h]  +
call sub_1008E30  +
pop ecx  +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi ecx +
push 0  +
push 1  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1003810 +
call sub_100C531  +
mov ecx esi +
pop esi  +
jmp ??1exception@@UAE@XZ  +
***
cmp dword ptr [ecx+24h] 10h +
jb loc_100CC1B  +
mov eax [ecx+10h] +
retn   +
***
lea eax [ecx+10h] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100CBED  +
test byte ptr [ebp+8] 1 +
jz loc_100CC3E  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov [ebp-10h] ecx +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_100CC84  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100CC84  +
push offset dword_1003218  +
push 85h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
and dword ptr [ebp-8] 0 +
lea eax [ebp-8] +
push eax  +
push 0  +
push 3  +
call ds:GetComputerNameExW  +
mov ebx ds:GetLastError +
mov esi eax +
call ebx  +
mov [ebp-0Ch] eax +
test esi esi +
jnz loc_100CD60  +
cmp eax 0EAh +
jnz loc_100CD60  +
mov eax [ebp-8] +
push 2  +
pop edx  +
xor ecx ecx +
mul  edx +
seto cl  +
push esi  +
neg ecx  +
or eax ecx +
lea ecx [ebp-1] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov esi [ebp-10h] +
add esi 4 +
push eax  +
mov ecx esi +
call sub_101569E  +
mov eax [esi] +
test eax eax +
jnz loc_100CCF3  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_100CD95  +
lea ecx [ebp-8] +
push ecx  +
push eax  +
push 3  +
call ds:GetComputerNameExW  +
test eax eax +
jnz loc_100CD33  +
call ebx  +
mov esi eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_100CD30  +
test dword ptr [eax+1Ch] 800000h +
jz loc_100CD30  +
push esi  +
push offset dword_1003218  +
push 87h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
jmp loc_100CD8D  +
mov eax off_102B00C +
cmp eax edi +
jz loc_100CD5C  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100CD5C  +
push dword ptr [esi]  +
push offset dword_1003218  +
push 88h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov al 1 +
jmp loc_100CD97  +
mov eax off_102B00C +
cmp eax edi +
jz loc_100CD8A  +
test dword ptr [eax+1Ch] 800000h +
jz loc_100CD8A  +
push dword ptr [ebp-0Ch]  +
push offset dword_1003218  +
push 86h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-0Ch]  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax [ecx+4] +
and dword ptr [ecx+4] 0 +
test eax eax +
jz locret_100CDB5  +
push eax  +
call sub_1008E30  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100CDE4  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_100CE1C  +
push dword ptr [ebp+8]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_100CDF5  +
cmp [ebp+0Ch] al +
jz loc_100CDE0  +
mov eax [esi] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100CE11  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100C82C  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
cmp [edi+14h] eax +
jnb loc_100CE40  +
call loc_1024902  +
mov esi [edi+14h] +
mov eax [ebp+arg_4] +
sub esi eax +
cmp [ebp+arg_8] esi +
jnb loc_100CE50  +
mov esi [ebp+arg_8] +
mov ecx ebx +
cmp ebx edi +
jnz loc_100CE6E  +
push 0FFFFFFFFh  +
add esi eax +
push esi  +
call sub_100C580  +
push [ebp+arg_4]  +
mov ecx ebx +
push 0  +
call sub_100C580  +
jmp loc_100CEAE  +
push 0  +
push esi  +
call sub_100C85D  +
test al al +
jz loc_100CEAE  +
cmp dword ptr [edi+18h] 10h +
jb loc_100CE85  +
mov edi [edi+4] +
jmp loc_100CE88  +
add edi 4 +
mov ecx [ebx+18h] +
cmp ecx 10h +
jb loc_100CE95  +
mov eax [ebx+4] +
jmp loc_100CE98  +
lea eax [ebx+4] +
mov edx [ebp+arg_4] +
push esi  +
add edi edx +
push edi  +
push ecx  +
push eax  +
call sub_100B99A  +
push esi  +
mov ecx ebx +
call sub_100B974  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov esi ecx +
call sub_100B4EB  +
test al al +
jz loc_100CEF0  +
cmp dword ptr [esi+18h] 10h +
jb loc_100CEDD  +
mov eax [esi+4] +
jmp loc_100CEE0  +
lea eax [esi+4] +
push [ebp+arg_4]  +
sub edi eax +
push edi  +
push esi  +
mov ecx esi +
call sub_100CE26  +
jmp loc_100CF27  +
push 0  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100C85D  +
test al al +
jz loc_100CF25  +
mov ecx [esi+18h] +
cmp ecx 10h +
jb loc_100CF0D  +
mov eax [esi+4] +
jmp loc_100CF10  +
lea eax [esi+4] +
push [ebp+arg_4]  +
push edi  +
push ecx  +
push eax  +
call sub_100B99A  +
push [ebp+arg_4]  +
mov ecx esi +
call sub_100B974  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100CDA3  +
test [ebp+arg_0] 1 +
jz loc_100CF4C  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
push esi  +
push edi  +
mov eax off_102B00C +
mov edi [ebp+arg_4] +
mov esi offset dword_1003218 +
cmp eax offset off_102B00C +
jz loc_100CF8E  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100CF8E  +
push edi  +
push esi  +
push 55h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
cmp [ebp+arg_0] 0 +
jnz loc_100CFB6  +
push 0  +
push 54Fh  +
push offset a3648  +
push 0E40h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100D3E7  +
test edi edi +
jnz loc_100CFCE  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3649  +
push 0E41h  +
jmp loc_100CFA5  +
push ebx  +
lea eax [ebp+var_40] +
xor ebx ebx +
inc ebx  +
and [ebp+var_3C] 0 +
mov [ebp+var_1C] eax +
mov eax edi +
mov [ebp+pvFindPara] ebx +
mov [ebp+var_40] offset a2_5_4_3 +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_100CFEB  +
sub eax ecx +
sar eax 1 +
add eax eax +
mov [ebp+var_34] edi +
mov [ebp+var_38] eax +
xor eax eax +
lea edi [ebp+var_30] +
stos   +
stos   +
stos   +
stos   +
and [ebp+var_2C] 0 +
push offset pvPara  +
push 20000h  +
xor edi edi +
push edi  +
push edi  +
lea eax [ebp+var_10] +
mov [ebp+var_28] ebx +
push 0Ah  +
mov [ebp+var_10] offset a1_3_6_1_5_5_7_ +
mov [ebp+var_30] 10h +
mov [ebp+var_24] eax +
xor ebx ebx +
call ds:CertOpenStore  +
mov [ebp+hCertStore] eax +
cmp eax edi +
jnz loc_100D0A0  +
mov edi ds:GetLastError +
call edi  +
cmp eax 5 +
jnz loc_100D07E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D074  +
test dword ptr [eax+1Ch] 800h +
jz loc_100D074  +
push esi  +
push 56h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_100D099  +
mov ebx [ebp+arg_0] +
mov esi [ebx] +
add esi 28h +
call edi  +
push eax  +
push offset aCertopenstore  +
push 4033C360h  +
push ebx  +
call dword ptr [esi]  +
add esp 10h +
xor eax eax +
jmp loc_100D3E6  +
mov [ebp+var_C] edi +
mov [ebp+arg_4] edi +
xor edi edi +
cmp [ebp+arg_4] edi +
jz loc_100D0B9  +
push [ebp+arg_4]  +
call ds:CertFreeCertificateChain  +
mov [ebp+arg_4] edi +
push ebx  +
lea eax [ebp+pvFindPara] +
push eax  +
push 30007h  +
push 3  +
push 10001h  +
push [ebp+hCertStore]  +
call ds:CertFindCertificateInStore  +
mov ebx eax +
cmp ebx edi +
jz loc_100D38B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D101  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D101  +
push ebx  +
push esi  +
push 57h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push edi  +
push 1  +
push ebx  +
mov [ebp+var_18] edi +
mov [ebp+var_14] 2 +
mov [ebp+var_4] edi +
call ds:CryptAcquireCertificatePrivateKey  +
mov edi eax +
xor eax eax +
cmp [ebp+var_4] eax +
jz loc_100D149  +
push eax  +
push 54Fh  +
push offset a3734  +
push 0E96h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
cmp edi eax +
jnz loc_100D17A  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D0A6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D0A6  +
call ds:GetLastError  +
push eax  +
push ebx  +
push esi  +
push 58h  +
jmp loc_100D2F2  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
push 90000000h  +
lea ecx [ebp+var_30] +
push ecx  +
push eax  +
push eax  +
push ebx  +
push 1  +
call ds:CertGetCertificateChain  +
test eax eax +
jnz loc_100D1C4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D0A6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D0A6  +
call ds:GetLastError  +
push eax  +
push ebx  +
push esi  +
push 59h  +
jmp loc_100D2F2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D21F  +
mov edi 200000h +
test [eax+1Ch] edi +
jz loc_100D1F4  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx+0Ch]  +
push ebx  +
push esi  +
push 5Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D21F  +
test [eax+1Ch] edi +
jz loc_100D21F  +
mov ecx [ebp+arg_4] +
mov ecx [ecx+10h] +
mov ecx [ecx] +
push dword ptr [ecx+0Ch]  +
push ebx  +
push esi  +
push 5Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax off_102B00C +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+0Ch] 1 +
jnz loc_100D25F  +
mov edx [ecx+10h] +
mov edx [edx] +
cmp dword ptr [edx+0Ch] 1 +
jnz loc_100D25F  +
cmp eax offset off_102B00C +
jz loc_100D0A6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D0A6  +
push ebx  +
push esi  +
push 5Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
jmp loc_100D0A6  +
xor eax eax +
lea edi [ebp+var_54] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_54] +
push eax  +
xor edi edi +
push edi  +
push ecx  +
push 4  +
mov [ebp+var_54] 14h +
call ds:CertVerifyCertificateChainPolicy  +
test eax eax +
jz loc_100D2CA  +
cmp [ebp+var_50] 80092013h +
jz loc_100D307  +
cmp [ebp+var_50] edi +
jz loc_100D32B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D0A6  +
test dword ptr [eax+1Ch] 400000h +
jz loc_100D0A6  +
push [ebp+var_50]  +
push ebx  +
push esi  +
push 5Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
jmp loc_100D0A6  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D0A6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D0A6  +
call ds:GetLastError  +
push eax  +
push ebx  +
push esi  +
push 60h  +
mov eax off_102B00C +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
jmp loc_100D0A6  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D34F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D330  +
push ebx  +
push esi  +
push 5Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D34F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D34F  +
push ebx  +
push esi  +
push 5Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
mov edi [ebp+arg_8] +
push edi  +
push ebx  +
push [ebp+arg_0]  +
call sub_100C9A8  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_100D3BB  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D3BB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D3BB  +
push dword ptr [edi]  +
push esi  +
push 61h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_100D3BB  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D3AE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D3AE  +
push esi  +
push 62h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 80338082h  +
call dword ptr [eax+20h]  +
xor esi esi +
cmp ebx esi +
jz loc_100D3C8  +
push ebx  +
call ds:CertFreeCertificateContext  +
cmp [ebp+arg_4] esi +
jz loc_100D3D9  +
push [ebp+arg_4]  +
call ds:CertFreeCertificateChain  +
mov [ebp+arg_4] esi +
push esi  +
push [ebp+hCertStore]  +
call ds:CertCloseStore  +
mov eax [ebp+var_C] +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov eax off_102B00C +
mov ebx offset off_102B00C +
mov esi offset dword_1003218 +
cmp eax ebx +
jz loc_100D42B  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100D42B  +
push dword ptr [ebp+10h]  +
push esi  +
push 63h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ecx ecx +
mov [ebp-10h] ecx +
xor eax eax +
lea edi [ebp-24h] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp-14h] +
mov [ebp-18h] eax +
lea eax [ebp-10h] +
push eax  +
push ecx  +
push 20000004h  +
lea eax [ebp-24h] +
push eax  +
push ecx  +
push ecx  +
push dword ptr [ebp+10h]  +
mov [ebp-4] ecx +
push dword ptr [ebp+0Ch]  +
mov dword ptr [ebp-14h] offset a1_3_6_1_5_5__0 +
mov dword ptr [ebp-24h] 10h +
mov [ebp-20h] ecx +
mov dword ptr [ebp-1Ch] 1 +
call ds:CertGetCertificateChain  +
test eax eax +
jnz loc_100D4BE  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100D4A9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D4A9  +
call ds:GetLastError  +
push eax  +
push dword ptr [ebp+10h]  +
mov eax off_102B00C +
push esi  +
push 64h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax [ebp-10h] +
and dword ptr [ebp-10h] 0 +
test eax eax +
jz loc_100D64B  +
push eax  +
jmp loc_100D645  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100D53F  +
mov edi 200000h +
test [eax+1Ch] edi +
jz loc_100D4F0  +
mov ecx [ebp-10h] +
push dword ptr [ecx+8]  +
push dword ptr [ecx+4]  +
push dword ptr [ebp+10h]  +
push esi  +
push 65h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FB59  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100D53F  +
test [eax+1Ch] edi +
jz loc_100D515  +
mov ecx [ebp-10h] +
push dword ptr [ecx+0Ch]  +
push dword ptr [ebp+10h]  +
push esi  +
push 66h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100D53F  +
test [eax+1Ch] edi +
jz loc_100D53F  +
mov ecx [ebp-10h] +
mov ecx [ecx+10h] +
mov ecx [ecx] +
push dword ptr [ecx+0Ch]  +
push dword ptr [ebp+10h]  +
push esi  +
push 67h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax off_102B00C +
mov edi [ebp-10h] +
mov ecx [edi+0Ch] +
cmp ecx 1 +
jnz loc_100D57A  +
mov edx [edi+10h] +
mov edx [edx] +
cmp [edx+0Ch] ecx +
jnz loc_100D577  +
cmp eax ebx +
jz loc_100D572  +
test dword ptr [eax+1Ch] 200000h +
jz loc_100D572  +
push dword ptr [ebp+10h]  +
push esi  +
push 68h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+10h] +
jmp loc_100D5DA  +
cmp ecx 1 +
jb loc_100D61B  +
mov ecx [edi+10h] +
mov ecx [ecx] +
cmp dword ptr [ecx+0Ch] 2 +
jb loc_100D61B  +
cmp eax ebx +
jz loc_100D5BE  +
test dword ptr [eax+1Ch] 400000h +
jz loc_100D5BE  +
mov ecx [ecx+10h] +
mov ecx [ecx+4] +
push dword ptr [ecx+8]  +
push dword ptr [ebp+10h]  +
push esi  +
push 69h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov edi [ebp-10h] +
mov eax off_102B00C +
mov ecx [edi+10h] +
mov ecx [ecx] +
mov edx [ecx+10h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+8] 1 +
jz loc_100D606  +
mov edx [edx] +
cmp dword ptr [edx+8] 4 +
jz loc_100D606  +
mov ecx [ecx+4] +
push 1  +
push dword ptr [ebp+14h]  +
push ecx  +
push dword ptr [ebp+8]  +
call sub_100C9A8  +
test eax eax +
mov eax [ebp-10h] +
jz loc_100D4AC  +
and dword ptr [ebp-10h] 0 +
test eax eax +
jz loc_100D602  +
push eax  +
call ds:CertFreeCertificateChain  +
mov al 1 +
jmp loc_100D64D  +
cmp eax ebx +
jz loc_100D63C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_100D63C  +
push dword ptr [ebp+10h]  +
push esi  +
push 6Ah  +
jmp loc_100D62E  +
cmp eax ebx +
jz loc_100D63C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_100D63C  +
push dword ptr [ebp+10h]  +
push esi  +
push 6Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov edi [ebp-10h] +
and dword ptr [ebp-10h] 0 +
test edi edi +
jz loc_100D64B  +
push edi  +
call ds:CertFreeCertificateChain  +
xor al al +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_100B974  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_100CE26  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100D6F9  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_100D731  +
push [ebp+arg_0]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_100D70A  +
cmp [ebp+arg_4] al +
jz loc_100D6F5  +
mov eax [esi] +
mov dword ptr [ebp+arg_4] eax +
mov eax dword ptr [ebp+arg_4] +
mov dword ptr [ebp+arg_4] eax +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_100D726  +
mov ecx dword ptr [ebp+arg_4] +
push 1  +
call sub_100CF32  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
push ebx  +
mov bl [eax] +
inc eax  +
test bl bl +
jnz loc_100D747  +
sub eax edx +
push eax  +
push [ebp+arg_0]  +
call sub_100CEBC  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_100D776  +
push 1  +
call sub_100CF32  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D7B2  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100D7B2  +
push offset dword_1003218  +
push 45h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi [ebp+8] +
xor ebx ebx +
cmp edi ebx +
jnz loc_100D7DC  +
push ebx  +
push 54Fh  +
push offset a3226  +
push 0C9Ah  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100DC85  +
mov esi 10000h +
cmp [ebp+0Ch] esi +
jz loc_100D801  +
cmp dword ptr [ebp+0Ch] 20000h +
jz loc_100D801  +
push edi  +
push 54Fh  +
push offset a3228  +
push 0C9Ch  +
jmp loc_100D7CB  +
mov eax [ebp+14h] +
cmp eax ebx +
jnz loc_100D81A  +
push edi  +
push 54Fh  +
push offset a3229  +
push 0C9Dh  +
jmp loc_100D7CB  +
mov [ebp-18h] eax +
lea eax [ebp-18h] +
mov dword ptr [ebp-28h] 1 +
mov [ebp-24h] eax +
mov [ebp-10h] ebx +
mov eax [ebp+0Ch] +
push offset pvPara  +
or eax 8000h +
push eax  +
push ebx  +
push ebx  +
push 0Ah  +
mov [ebp-4] ebx +
call ds:CertOpenStore  +
mov [ebp-14h] eax +
cmp eax ebx +
jnz loc_100D8AE  +
mov esi ds:GetLastError +
call esi  +
cmp eax 5 +
jnz loc_100D88F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D883  +
test dword ptr [eax+1Ch] 800h +
jz loc_100D883  +
push offset dword_1003218  +
push 46h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_100D7D5  +
mov edi [edi] +
add edi 28h +
call esi  +
push eax  +
push offset aCertopenstore  +
push 4033C360h  +
push dword ptr [ebp+8]  +
call dword ptr [edi]  +
add esp 10h +
jmp loc_100D7D5  +
mov ecx [ebp+10h] +
cmp ecx ebx +
jz loc_100DAFE  +
xor eax eax +
lea edi [ebp-20h] +
stos   +
stos   +
mov eax [ecx] +
mov [ebp-20h] eax +
mov eax [ecx+4] +
push ebx  +
mov [ebp-1Ch] eax +
lea eax [ebp-20h] +
push eax  +
push esi  +
push 20h  +
push 10001h  +
push dword ptr [ebp-14h]  +
call ds:CertFindCertificateInStore  +
push eax  +
lea ecx [ebp-10h] +
call sub_100B922  +
cmp [ebp-10h] ebx +
jz loc_100DC6B  +
mov edi [ebp+14h] +
push edi  +
push dword ptr [ebp-10h]  +
call sub_100B6EA  +
test eax eax +
jnz loc_100D98E  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D937  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100D937  +
push esi  +
push offset dword_1003218  +
push 47h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
lea ecx [ebp-10h] +
call sub_100B922  +
cmp esi 32h +
jnz loc_100D972  +
push 12h  +
mov esi offset a1_3_6_1_5_5_7_ +
pop ecx  +
xor eax eax +
cmps   +
jz loc_100D958  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov ecx [ebp+8] +
mov edx [ecx] +
neg eax  +
sbb eax eax +
and eax 67h +
add eax 803380EEh +
push eax  +
call dword ptr [edx+20h]  +
jmp loc_100DC78  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push offset aCertcheckusage  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
jmp loc_100DC78  +
cmp [ebp+18h] ebx +
jz loc_100DC78  +
mov esi ds:CertGetNameStringW +
xor eax eax +
cmp dword ptr [ebp+0Ch] 20000h +
push ebx  +
setnz al  +
push ebx  +
push ebx  +
push ebx  +
lea eax [eax+eax+6] +
push eax  +
push dword ptr [ebp-10h]  +
mov [ebp+14h] eax +
call esi  +
cmp eax 1 +
jnz loc_100DA0A  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100D9F7  +
test dword ptr [eax+1Ch] 800h +
jz loc_100D9F7  +
cmp dword ptr [ebp+14h] 6 +
mov ecx offset aDns +
jz loc_100D9E4  +
mov ecx offset aUpn +
push ecx  +
push offset dword_1003218  +
push 48h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push ebx  +
lea ecx [ebp-10h] +
call sub_100B922  +
push 80338148h  +
jmp loc_100DC70  +
cmp dword ptr [ebp+0Ch] 20000h +
jnz loc_100DA31  +
push 8  +
pop eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push dword ptr [ebp-10h]  +
mov [ebp+14h] eax +
call esi  +
cmp eax 1 +
jz loc_100DC78  +
mov esi [ebp+8] +
jmp loc_100DA9B  +
mov esi [ebp+8] +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+5Ch]  +
mov eax [ebp-10h] +
push dword ptr [eax+0Ch]  +
push esi  +
call sub_100B172  +
mov edi eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
test eax eax +
jnz loc_100DA93  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100DA8A  +
test dword ptr [eax+1Ch] 800h +
jz loc_100DA8A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
push eax  +
mov eax off_102B00C +
push offset dword_1003218  +
push 49h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
lea ecx [ebp-10h] +
call sub_100B922  +
cmp edi ebx +
jz loc_100DC78  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100DAE7  +
test dword ptr [eax+1Ch] 800h +
jz loc_100DAE7  +
cmp dword ptr [ebp+0Ch] 20000h +
mov edx offset aMachine +
jz loc_100DAC3  +
mov edx offset aUser +
cmp dword ptr [ebp+14h] 6 +
mov ecx offset aDns +
jz loc_100DAD3  +
mov ecx offset aUpn +
push edx  +
push ecx  +
push offset dword_1003218  +
push 4Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
push ebx  +
lea ecx [ebp-10h] +
call sub_100B922  +
mov eax [esi] +
push 80338148h  +
mov ecx esi +
jmp loc_100DC75  +
mov esi [ebp+14h] +
push 17h  +
mov edi offset a1_3_6_1_4_1_31 +
pop ecx  +
xor eax eax +
cmps   +
jz loc_100DB14  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
xor ecx ecx +
cmp eax ebx +
setz cl  +
mov edi ecx +
mov eax [ebp-10h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
push 0A0000h  +
push 20h  +
push 10001h  +
push dword ptr [ebp-14h]  +
mov [ebp-10h] ebx +
call ds:CertFindCertificateInStore  +
push eax  +
lea ecx [ebp-10h] +
call sub_100B922  +
cmp [ebp-10h] ebx +
jz loc_100DC6B  +
cmp [ebp+18h] ebx +
jz loc_100DBB5  +
xor eax eax +
cmp dword ptr [ebp+0Ch] 20000h +
push ebx  +
setnz al  +
push ebx  +
push ebx  +
push ebx  +
lea eax [eax+eax+6] +
mov esi eax +
push esi  +
push dword ptr [ebp-10h]  +
call ds:CertGetNameStringW  +
cmp eax 1 +
jnz loc_100DBB5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100DB1D  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100DB1D  +
mov ecx offset aDns +
cmp esi 6 +
jz loc_100DB9D  +
mov ecx offset aUpn +
push ecx  +
push offset dword_1003218  +
push 4Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_100DB1D  +
cmp edi ebx +
jnz loc_100DC78  +
push offset a1_3_6_1_4_1_31  +
push dword ptr [ebp-10h]  +
call sub_100B6EA  +
cmp eax ebx +
jnz loc_100DBD9  +
call ds:GetLastError  +
cmp eax 32h +
jnz loc_100DC40  +
cmp [ebp+1Ch] ebx +
jz loc_100DC78  +
mov [ebp+14h] ebx +
mov esi [ebp+8] +
lea eax [ebp+14h] +
push eax  +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 1 +
push 1  +
push esi  +
call sub_100D3F2  +
test al al +
jnz loc_100DC19  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+5Ch]  +
mov [ebp-4] bl +
cmp [ebp+14h] ebx +
jz loc_100DB1D  +
push dword ptr [ebp+14h]  +
jmp loc_100DC35  +
push dword ptr [ebp+1Ch]  +
mov esi [ebp+14h] +
push esi  +
call sub_100AC10  +
test eax eax +
jnz loc_100DC5E  +
mov [ebp-4] bl +
cmp esi ebx +
jz loc_100DB1D  +
push esi  +
call sub_1008E30  +
pop ecx  +
jmp loc_100DB1D  +
mov edi [ebp+8] +
mov esi [edi] +
add esi 20h +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call dword ptr [esi]  +
push ebx  +
lea ecx [ebp-10h] +
call sub_100B922  +
jmp loc_100DC78  +
cmp esi ebx +
jz loc_100DC78  +
push esi  +
call sub_1008E30  +
pop ecx  +
jmp loc_100DC78  +
push 80338082h  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
push ebx  +
push dword ptr [ebp-14h]  +
call ds:CertCloseStore  +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0exception@@QAE@XZ  +
push dword ptr [ebp+8]  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1003810 +
call sub_100D65A  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov edi [ebp+8] +
push edi  +
call ??0exception@@QAE@ABV0@@Z  +
and dword ptr [ebp-4] 0 +
add edi 0Ch +
push edi  +
lea ecx [esi+0Ch] +
mov dword ptr [esi] offset off_1003810 +
call sub_100D65A  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100DC92  +
mov dword ptr [esi] offset off_1003964 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp sub_100CBED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1003964 +
call sub_100CBED  +
test byte ptr [ebp+8] 1 +
jz loc_100DD5D  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100DCCC  +
mov dword ptr [esi] offset off_1003964 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100DDC6  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
and dword ptr [ebp-4] 0 +
push 1  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_100D6D0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push 0  +
mov dword ptr [esi+18h] 0Fh +
call sub_100B974  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_100D73B  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_100DCCC  +
push offset dword_1027DD4  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_100DD69  +
push offset dword_1027E0C  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_100DE57  +
push eax  +
push ecx  +
call sub_100D763  +
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
mov [ebp-14h] ebx +
push 0  +
lea eax [ebp-0Dh] +
push eax  +
push 8  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jz loc_100DE8D  +
mov dword ptr [eax] offset off_1003730 +
and dword ptr [eax+4] 0 +
mov esi eax +
jmp loc_100DE8F  +
xor esi esi +
mov [ebp-18h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jnz loc_100DEA6  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor al al +
jmp loc_100DEDE  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [ebx+4]  +
test al al +
jnz loc_100DEBD  +
push 1  +
mov ecx esi +
call sub_100CF32  +
jmp loc_100DEA2  +
push 0  +
push esi  +
push dword ptr [ebp-14h]  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_100DECF  +
xor esi esi +
test esi esi +
jz loc_100DEDC  +
push 1  +
mov ecx esi +
call sub_100CF32  +
mov al 1 +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov ebx [ebp+8] +
xor edi edi +
cmp ebx edi +
jnz loc_100DF21  +
push edi  +
push 54Fh  +
push offset a3157  +
push 0C55h  +
push offset aDW7rtmAdminW_1  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100E040  +
mov esi [ebp+0Ch] +
cmp esi edi +
jnz loc_100DF3A  +
push ebx  +
push 54Fh  +
push offset a3158  +
push 0C56h  +
jmp loc_100DF10  +
mov eax esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_100DF3F  +
sub eax ecx +
lea ecx [ebp-18h] +
push ecx  +
lea ecx [ebp-1Ch] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
sar eax 1 +
push 4  +
push eax  +
push esi  +
mov [ebp-20h] eax +
mov [ebp-1Ch] edi +
mov [ebp-18h] edi +
mov [ebp-14h] edi +
call ds:CryptStringToBinaryW  +
test eax eax +
jnz loc_100DF96  +
call ds:GetLastError  +
cmp eax 0Dh +
jnz loc_100DF84  +
mov eax 803380B7h +
mov ecx [ebx] +
push esi  +
push 4033C3A9h  +
push eax  +
push ebx  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
jmp loc_100DF1A  +
push edi  +
lea eax [ebp-0Dh] +
push eax  +
push 8  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
cmp eax edi +
jz loc_100DFAF  +
mov [eax] edi +
mov [eax+4] edi +
mov esi eax +
jmp loc_100DFB1  +
xor esi esi +
mov [ebp-24h] esi +
mov [ebp-4] edi +
cmp esi edi +
jnz loc_100DFC7  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
jmp loc_100DF1A  +
mov eax [ebp-14h] +
mov [esi] eax +
push edi  +
lea eax [ebp-0Eh] +
push eax  +
push dword ptr [ebp-14h]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
lea ebx [esi+4] +
push eax  +
mov ecx ebx +
call sub_101569E  +
mov ebx [ebx] +
cmp ebx edi +
jnz loc_100E000  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 1  +
mov ecx esi +
call sub_100CF32  +
jmp loc_100DF1A  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push ebx  +
push 4  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp+0Ch]  +
call ds:CryptStringToBinaryW  +
test eax eax +
jnz loc_100E03E  +
mov ebx [ebp+8] +
mov edi [ebx] +
call ds:GetLastError  +
push eax  +
push offset aCryptstringtob  +
push 4033C360h  +
push ebx  +
call dword ptr [edi+28h]  +
add esp 10h +
jmp loc_100DFF2  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100E063  +
push [ebp+arg_0]  +
call sub_100DE5D  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
mov ecx offset dword_102C984 +
call sub_100E04D  +
test eax eax +
jz loc_100E08A  +
mov eax [eax+4] +
jmp loc_100E08C  +
xor eax eax +
pop ebp  +
retn 4  +
***
and dword ptr [ecx+8] 0 +
or dword ptr [ecx+0Ch] 0FFFFFFFFh +
mov eax offset dword_1001C58 +
mov [ecx+14h] eax +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
mov [ecx+20h] eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jz loc_100E0D3  +
mov edx [ecx] +
push 0  +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
call dword ptr [edx+64h]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov [ecx+8] eax +
mov eax [ebp+arg_4] +
mov [ecx+0Ch] eax +
pop ebp  +
retn 10h  +
***
push offset a70  +
push 46h  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
xor eax eax +
inc eax  +
retn 8  +
***
mov eax [ecx] +
push 5  +
call dword ptr [eax+20h]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+10h]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_100E16B  +
movzx eax ax +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+20h]  +
pop ebp  +
retn   +
***
mov eax [ecx] +
push 0Eh  +
call dword ptr [eax+20h]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_100E1D7  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E1BE  +
test dword ptr [eax+1Ch] 800h +
jz loc_100E1BE  +
push offset dword_1003A30  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push esi  +
push 54Fh  +
push offset a116  +
push 74h  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
jmp loc_100E1DE  +
push dword ptr [eax]  +
mov edx [esi] +
call dword ptr [edx+20h]  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
mov eax [ecx] +
push 54Fh  +
call dword ptr [eax+20h]  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_100E253  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E237  +
test dword ptr [eax+1Ch] 800h +
jz loc_100E237  +
push offset dword_1003A30  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push esi  +
push 54Fh  +
push offset a141  +
push 8Dh  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
jmp loc_100E263  +
push dword ptr [eax]  +
mov edx [esi] +
call dword ptr [edx+20h]  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+38h]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_100E27E  +
or dword ptr [ecx+8] 4 +
jmp loc_100E282  +
and dword ptr [ecx+8] 0FFFFFFFBh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100E29C  +
or dword ptr [ecx+8] 1 +
jmp loc_100E2A0  +
and dword ptr [ecx+8] 0FFFFFFFEh +
pop ebp  +
retn 4  +
***
push 0  +
push 54Fh  +
push offset a165  +
push 0A5h  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
xor eax eax +
retn 0Ch  +
***
push 0  +
push 54Fh  +
push (offset dword_10032CC+24h)  +
push 0ADh  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
xor eax eax +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
mov eax [ebp+arg_4] +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_50] +
push eax  +
call sub_100F7F4  +
push [ebp+arg_8]  +
lea eax [ebp+var_40] +
push eax  +
call sub_100F868  +
push [ebp+arg_C]  +
lea eax [ebp+var_30] +
push eax  +
call sub_100F868  +
push [ebp+arg_10]  +
lea eax [ebp+var_20] +
push eax  +
call sub_100F868  +
push [ebp+arg_14]  +
lea eax [ebp+var_10] +
push eax  +
call sub_100F868  +
lea eax [ebp+var_50] +
push eax  +
push 5  +
push [ebp+arg_0]  +
call sub_100FA66  +
leave   +
retn 18h  +
***
add ecx 4 +
push ecx  +
call ds:InterlockedIncrement  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_100E396  +
cmp [ebp+8] eax +
jz loc_100E389  +
push dword ptr [ebp+0Ch]  +
call dword ptr [ebp+8]  +
test esi esi +
jz loc_100E396  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+8]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov dword ptr [ecx] offset off_1003AC8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax offset dword_1001C58 +
lea edx [esi+4] +
and dword ptr [edx] 0 +
push 1  +
mov dword ptr [esi] offset off_1003AD8 +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
call sub_100E095  +
mov al [ebp+arg_0] +
push edx  +
mov [esi+10h] al +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov eax [ecx+8] +
shr eax 1 +
not eax  +
and eax 1 +
retn   +
***
mov eax [ecx+8] +
shr eax 2 +
and eax 1 +
retn   +
***
mov eax [ecx+8] +
and eax 1 +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp byte ptr [esi+10h] 0 +
jz loc_100E45B  +
push edi  +
mov edi offset dword_1003A40 +
push edi  +
call sub_100FAF5  +
test al al +
jz loc_100E45A  +
push dword ptr [esi+20h]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_100E2F3  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jnz loc_100E489  +
push edi  +
push 54Fh  +
push offset a82  +
push 52h  +
push offset aDW7rtmAdminW_3  +
call sub_100A7B1  +
or dword ptr [esi+8] 2 +
mov ecx esi +
mov [esi+0Ch] edi +
call sub_100E42A  +
push dword ptr [esi+0Ch]  +
call ds:SetLastError  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1008E30  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1003AC8 +
jz loc_100E4DD  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E51B  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100E51B  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push offset dword_1003B5C  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E55F  +
test dword ptr [eax+1Ch] 800000h +
jz loc_100E55F  +
call ds:GetLastError  +
push eax  +
push [ebp+arg_0]  +
mov eax off_102B00C +
push offset dword_1003B5C  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E597  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100E597  +
push [ebp+arg_0]  +
push offset dword_1003B5C  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_10] +
test edx edx +
jz loc_100E5D1  +
cmp word ptr [edx] 0 +
jnz loc_100E5B6  +
push 0Eh  +
jmp loc_100E5D3  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100E5BC  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_100E5D4  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_100E5E5  +
cmp word ptr [edx] 0 +
jnz loc_100E5EA  +
mov edx offset aNull_0 +
jmp loc_100E5EA  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
push edx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+lpLCData] ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100E645  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100E645  +
push ecx  +
push offset dword_1003B6C  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
push esi  +
mov esi ds:GetLocaleInfoW +
push edi  +
push 9  +
push [ebp+lpLCData]  +
push 59h  +
push [ebp+Locale]  +
call esi  +
mov ebx 54Fh +
mov edi offset aDW7rtmAdminW_4 +
test eax eax +
jnz loc_100E679  +
push [ebp+arg_4]  +
push ebx  +
push offset a85  +
push 55h  +
push edi  +
call sub_100A7B1  +
mov eax [ebp+lpLCData] +
push 9  +
add eax 12h +
push eax  +
push 5Ah  +
push [ebp+Locale]  +
call esi  +
test eax eax +
jnz loc_100E69E  +
push [ebp+arg_4]  +
push ebx  +
push offset a89  +
push 59h  +
push edi  +
call sub_100A7B1  +
mov eax [ebp+lpLCData] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:_wcsicmp +
push edi  +
mov edi ecx +
push ebx  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_100E6D6  +
add ebx 12h +
add edi 12h +
push ebx  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
test eax eax +
pop edi  +
setl cl  +
pop esi  +
mov al cl +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax ecx +
push 9  +
pop ecx  +
mov edi eax +
movs   +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov [eax+24h] edx +
mov ecx [ecx+4] +
pop edi  +
mov [eax+28h] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov [esi] ecx +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
mov [eax] ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
push 0Bh  +
mov [eax+8] ecx +
pop ecx  +
lea edi [eax+0Ch] +
movs   +
mov cl [ebp+arg_10] +
pop edi  +
mov [eax+38h] cl +
mov byte ptr [eax+39h] 0 +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
and dword ptr [esi+4] 0 +
mov [esi] ecx +
call sub_100FC53  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
lea eax [ebp+arg_3] +
push eax  +
mov eax [ebp+8] +
imul eax eax +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jnz loc_100E7E3  +
lea edi [ebp+arg_3] +
stos   +
mov al byte ptr [ebp+arg_3] +
mov byte ptr [ebp+arg_3] al +
push offset dword_1027BB0  +
lea eax [ebp+arg_3] +
push eax  +
call _CxxThrowException  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx+8] +
push esi  +
mov esi [eax] +
mov [edx+8] esi +
mov esi [eax] +
cmp byte ptr [esi+39h] 0 +
jnz loc_100E808  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_100E81C  +
mov [ecx+4] eax +
jmp loc_100E82A  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_100E827  +
mov [ecx] eax +
jmp loc_100E82A  +
mov [ecx+8] eax +
mov [eax] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_100E844  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+39h] 0 +
jz loc_100E842  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_100E862  +
mov eax ecx +
mov ecx [eax] +
cmp byte ptr [ecx+39h] 0 +
jz loc_100E860  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [edx] +
push esi  +
mov esi [eax+8] +
mov [edx] esi +
mov esi [eax+8] +
cmp byte ptr [esi+39h] 0 +
jnz loc_100E88F  +
mov [esi+4] edx +
mov esi [edx+4] +
mov [eax+4] esi +
mov ecx [ecx+4] +
pop esi  +
cmp edx [ecx+4] +
jnz loc_100E8A3  +
mov [ecx+4] eax +
jmp loc_100E8B2  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_100E8B0  +
mov [ecx+8] eax +
jmp loc_100E8B2  +
mov [ecx] eax +
mov [eax+8] edx +
mov [edx+4] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor edx edx +
cmp [eax+39h] dl +
jz loc_100E8DE  +
push edx  +
push edx  +
push edx  +
push edx  +
push edx  +
call sub_1024B68  +
add esp 14h +
pop esi  +
retn   +
mov ecx [eax+8] +
cmp [ecx+39h] dl +
jnz loc_100E8F7  +
push ecx  +
call sub_100E856  +
jmp loc_100E8FF  +
mov ecx [esi] +
cmp ecx [eax+8] +
jnz loc_100E8FF  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+39h] dl +
jz loc_100E8EE  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100E928  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_100E741  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
xor dl dl +
cmp [eax+39h] dl +
jz loc_100E944  +
mov eax [eax+8] +
jmp loc_100E96A  +
mov ecx [eax] +
cmp [ecx+39h] dl +
jnz loc_100E95B  +
push ecx  +
call sub_100E838  +
jmp loc_100E96A  +
mov ecx [esi] +
cmp ecx [eax] +
jnz loc_100E963  +
mov [esi] eax +
mov eax [eax+4] +
cmp [eax+39h] dl +
jz loc_100E953  +
mov ecx [esi] +
cmp [ecx+39h] dl +
jnz loc_100E96C  +
mov [esi] eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
push 0  +
push 1  +
lea ecx [esi+1] +
call sub_100E7B0  +
push [ebp+arg_10]  +
mov edi eax +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push edi  +
call sub_100E908  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp byte ptr [edi+39h] 0 +
mov ebx ecx +
mov esi edi +
jnz loc_100E9E1  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_100E9AE  +
mov esi [esi] +
lea eax [ebp+arg_0+3] +
push eax  +
push edi  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
cmp byte ptr [esi+39h] 0 +
mov edi esi +
jz loc_100E9C3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push 0  +
mov esi ecx +
call sub_100B94B  +
push 0  +
lea ecx [esi+4] +
call sub_100B94B  +
lea ecx [esi+8] +
mov eax [ecx] +
pop esi  +
pop ebp  +
jmp dword ptr [eax+4]  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov eax [esi] +
push dword ptr [eax+4]  +
call sub_100E9AE  +
mov eax [esi] +
mov [eax+4] eax +
mov eax [esi] +
and dword ptr [edi+8] 0 +
mov [eax] eax +
mov esi [esi] +
pop edi  +
mov [esi+8] esi +
pop esi  +
retn   +
***
jmp sub_100CBED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1003BE4 +
call sub_100CBED  +
test byte ptr [ebp+8] 1 +
jz loc_100EA72  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_100DCCC  +
mov dword ptr [esi] offset off_1003BE4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov edi ecx +
cmp dword ptr [edi+8] 5D1745Ch +
jb loc_100EAE2  +
push offset aMapSetTTooLong  +
lea ecx [ebp-28h] +
call sub_100DDD1  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_100DD0B  +
push offset dword_1027E0C  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov eax [edi+4] +
mov esi [ebp+10h] +
push 0  +
push dword ptr [ebp+14h]  +
push eax  +
push esi  +
push eax  +
call sub_100E973  +
inc dword ptr [edi+8]  +
mov ebx eax +
mov eax [edi+4] +
cmp esi eax +
jnz loc_100EB0E  +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [eax] ebx +
mov eax [edi+4] +
jmp loc_100EB2C  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_100EB21  +
mov [esi] ebx +
mov eax [edi+4] +
cmp esi [eax] +
jnz loc_100EB2F  +
mov [eax] ebx +
jmp loc_100EB2F  +
mov [esi+8] ebx +
mov eax [edi+4] +
cmp esi [eax+8] +
jnz loc_100EB2F  +
mov [eax+8] ebx +
mov esi ebx +
lea eax [ebx+4] +
jmp loc_100EBC9  +
mov ecx [eax] +
mov edx [ecx+4] +
cmp ecx [edx] +
jnz loc_100EB7A  +
mov edx [edx+8] +
cmp byte ptr [edx+38h] 0 +
jz loc_100EB82  +
cmp esi [ecx+8] +
jnz loc_100EB5A  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_100E7EC  +
mov eax [esi+4] +
mov byte ptr [eax+38h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+38h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_100E873  +
jmp loc_100EBC6  +
mov edx [edx] +
cmp byte ptr [edx+38h] 0 +
jnz loc_100EB9A  +
mov byte ptr [ecx+38h] 1 +
mov byte ptr [edx+38h] 1 +
mov ecx [eax] +
mov ecx [ecx+4] +
mov byte ptr [ecx+38h] 0 +
mov eax [eax] +
mov esi [eax+4] +
jmp loc_100EBC6  +
cmp esi [ecx] +
jnz loc_100EBA8  +
mov esi ecx +
push esi  +
mov ecx edi +
call sub_100E873  +
mov eax [esi+4] +
mov byte ptr [eax+38h] 1 +
mov eax [esi+4] +
mov eax [eax+4] +
mov byte ptr [eax+38h] 0 +
mov eax [esi+4] +
push dword ptr [eax+4]  +
mov ecx edi +
call sub_100E7EC  +
lea eax [esi+4] +
mov ecx [eax] +
cmp byte ptr [ecx+38h] 0 +
jz loc_100EB39  +
mov eax [edi+4] +
mov eax [eax+4] +
mov byte ptr [eax+38h] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ecx  +
lea ecx [ebp-28h] +
call sub_100EA7E  +
push offset dword_1027ECC  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
call __EH_prolog3  +
mov [ebp-14h] ecx +
mov edi [ebp+0Ch] +
cmp byte ptr [edi+39h] 0 +
jz loc_100EC60  +
push offset aInvalidMapSetT  +
lea ecx [ebp-30h] +
call sub_100DDD1  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-58h] +
call sub_100DC92  +
push offset dword_1027ECC  +
lea eax [ebp-58h] +
push eax  +
mov dword ptr [ebp-58h] offset off_1003BE4 +
call _CxxThrowException  +
lea ecx [ebp+0Ch] +
call sub_100E8C1  +
mov edx [edi] +
cmp byte ptr [edx+39h] 0 +
jz loc_100EC75  +
mov ebx [edi+8] +
jmp loc_100EC8E  +
mov eax [edi+8] +
cmp byte ptr [eax+39h] 0 +
jz loc_100EC82  +
mov ebx edx +
jmp loc_100EC8E  +
mov eax [ebp+0Ch] +
lea ecx [eax+8] +
mov ebx [ecx] +
cmp eax edi +
jnz loc_100ECF7  +
cmp byte ptr [ebx+39h] 0 +
mov esi [edi+4] +
jnz loc_100EC9A  +
mov [ebx+4] esi +
mov ecx [ebp-14h] +
mov eax [ecx+4] +
cmp [eax+4] edi +
jnz loc_100ECAA  +
mov [eax+4] ebx +
jmp loc_100ECB5  +
cmp [esi] edi +
jnz loc_100ECB2  +
mov [esi] ebx +
jmp loc_100ECB5  +
mov [esi+8] ebx +
mov eax [ecx+4] +
cmp [eax] edi +
jnz loc_100ECD4  +
cmp byte ptr [ebx+39h] 0 +
jz loc_100ECC6  +
mov eax esi +
jmp loc_100ECCF  +
push ebx  +
call sub_100E856  +
mov ecx [ebp-14h] +
mov edx [ecx+4] +
mov [edx] eax +
mov eax [ecx+4] +
cmp [eax+8] edi +
jnz loc_100ED53  +
cmp byte ptr [ebx+39h] 0 +
jz loc_100ECE6  +
mov eax esi +
jmp loc_100ECEF  +
push ebx  +
call sub_100E838  +
mov ecx [ebp-14h] +
mov edx [ecx+4] +
mov [edx+8] eax +
jmp loc_100ED53  +
mov [edx+4] eax +
mov edx [edi] +
mov [eax] edx +
cmp eax [edi+8] +
jnz loc_100ED07  +
mov esi eax +
jmp loc_100ED20  +
cmp byte ptr [ebx+39h] 0 +
mov esi [eax+4] +
jnz loc_100ED13  +
mov [ebx+4] esi +
mov [esi] ebx +
mov edx [edi+8] +
mov [ecx] edx +
mov ecx [edi+8] +
mov [ecx+4] eax +
mov ecx [ebp-14h] +
mov ecx [ecx+4] +
cmp [ecx+4] edi +
jnz loc_100ED30  +
mov [ecx+4] eax +
jmp loc_100ED3E  +
mov ecx [edi+4] +
cmp [ecx] edi +
jnz loc_100ED3B  +
mov [ecx] eax +
jmp loc_100ED3E  +
mov [ecx+8] eax +
mov ecx [edi+4] +
mov [eax+4] ecx +
mov cl [eax+38h] +
mov dl [edi+38h] +
mov [eax+38h] dl +
mov [edi+38h] cl +
mov ecx [ebp-14h] +
cmp byte ptr [edi+38h] 1 +
jnz loc_100EE5D  +
jmp loc_100EE17  +
cmp byte ptr [ebx+38h] 1 +
jnz loc_100EE59  +
mov eax [esi] +
cmp ebx eax +
jnz loc_100EDDE  +
mov eax [esi+8] +
cmp byte ptr [eax+38h] 0 +
jnz loc_100ED8F  +
mov byte ptr [eax+38h] 1 +
push esi  +
mov byte ptr [esi+38h] 0 +
call sub_100E7EC  +
mov eax [esi+8] +
mov ecx [ebp-14h] +
cmp byte ptr [eax+39h] 0 +
jnz loc_100EE12  +
mov edx [eax] +
cmp byte ptr [edx+38h] 1 +
jnz loc_100EDA6  +
mov edx [eax+8] +
cmp byte ptr [edx+38h] 1 +
jz loc_100EE0E  +
mov edx [eax+8] +
cmp byte ptr [edx+38h] 1 +
jnz loc_100EDC5  +
mov edx [eax] +
mov byte ptr [edx+38h] 1 +
push eax  +
mov byte ptr [eax+38h] 0 +
call sub_100E873  +
mov eax [esi+8] +
mov ecx [ebp-14h] +
mov dl [esi+38h] +
mov [eax+38h] dl +
mov byte ptr [esi+38h] 1 +
mov eax [eax+8] +
push esi  +
mov byte ptr [eax+38h] 1 +
call sub_100E7EC  +
jmp loc_100EE59  +
cmp byte ptr [eax+38h] 0 +
jnz loc_100EDF7  +
mov byte ptr [eax+38h] 1 +
push esi  +
mov byte ptr [esi+38h] 0 +
call sub_100E873  +
mov eax [esi] +
mov ecx [ebp-14h] +
cmp byte ptr [eax+39h] 0 +
jnz loc_100EE12  +
mov edx [eax+8] +
cmp byte ptr [edx+38h] 1 +
jnz loc_100EE25  +
mov edx [eax] +
cmp byte ptr [edx+38h] 1 +
jnz loc_100EE25  +
mov byte ptr [eax+38h] 0 +
mov ebx esi +
mov esi [esi+4] +
mov eax [ecx+4] +
cmp ebx [eax+4] +
jnz loc_100ED62  +
jmp loc_100EE59  +
mov edx [eax] +
cmp byte ptr [edx+38h] 1 +
jnz loc_100EE43  +
mov edx [eax+8] +
mov byte ptr [edx+38h] 1 +
push eax  +
mov byte ptr [eax+38h] 0 +
call sub_100E7EC  +
mov eax [esi] +
mov ecx [ebp-14h] +
mov dl [esi+38h] +
mov [eax+38h] dl +
mov byte ptr [esi+38h] 1 +
mov eax [eax] +
push esi  +
mov byte ptr [eax+38h] 1 +
call sub_100E873  +
mov byte ptr [ebx+38h] 1 +
lea eax [ebp-0Dh] +
push eax  +
push edi  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
mov ecx [ebp-14h] +
mov eax [ecx+8] +
test eax eax +
jbe loc_100EE75  +
dec eax  +
mov [ecx+8] eax +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov [eax] ecx +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
mov esi [eax+4] +
mov ebx eax +
mov al 1 +
mov byte ptr [ebp+var_8] al +
jmp loc_100EEC1  +
mov ecx [ebp+arg_4] +
lea eax [esi+0Ch] +
push eax  +
mov ebx esi +
call sub_100E6AD  +
mov byte ptr [ebp+var_8] al +
test al al +
jz loc_100EEBE  +
mov esi [esi] +
jmp loc_100EEC1  +
mov esi [esi+8] +
cmp byte ptr [esi+39h] 0 +
jz loc_100EEA5  +
mov esi ebx +
mov [ebp+var_4] esi +
test al al +
jz loc_100EF00  +
mov eax [edi+4] +
cmp ebx [eax] +
jnz loc_100EEF5  +
push [ebp+arg_4]  +
push ebx  +
push 1  +
lea eax [ebp+arg_4] +
push eax  +
mov ecx edi +
call sub_100EAA0  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
jmp loc_100EF21  +
lea ecx [ebp+var_4] +
call sub_100E931  +
mov esi [ebp+var_4] +
push [ebp+arg_4]  +
lea ecx [esi+0Ch] +
call sub_100E6AD  +
test al al +
jz loc_100EF18  +
push [ebp+arg_4]  +
push ebx  +
push [ebp+var_8]  +
jmp loc_100EEDD  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
jnz loc_100EF53  +
cmp [ebp+arg_8] eax +
jnz loc_100EF53  +
mov ecx esi +
call sub_100EA15  +
mov eax [esi+4] +
mov ecx [eax] +
jmp loc_100EF78  +
cmp ecx [ebp+arg_8] +
jz loc_100EF78  +
push edi  +
mov edi ecx +
lea ecx [ebp+arg_4] +
call sub_100E8C1  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
mov ecx esi +
call sub_100EC16  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jnz loc_100EF59  +
pop edi  +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov ebx [ebp+10h] +
mov edi [ebp+0Ch] +
mov esi ecx +
push esi  +
lea ecx [ebp-44h] +
mov [ebp-4Ch] ebx +
call sub_100E717  +
xor eax eax +
mov [ebp-4] eax +
cmp [esi+8] eax +
jz loc_100EFD0  +
push ebx  +
push 54Fh  +
push offset a269  +
push 10Dh  +
push offset aDW7rtmAdminW_5  +
call sub_100A7B1  +
jmp loc_100F053  +
mov ecx [edi] +
mov [ebp-50h] al +
lea eax [ebp-54h] +
push eax  +
push dword ptr [ebp+8]  +
mov [ebp-54h] ecx +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 1 +
call sub_100E6EB  +
mov ecx [esi+4] +
lea eax [ebp-40h] +
push eax  +
lea eax [ebp-54h] +
push eax  +
call sub_100EE8A  +
mov ecx [ebp-44h] +
mov bl [eax+4] +
mov eax [ecx] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call dword ptr [eax+0Ch]  +
mov al bl +
jmp loc_100F061  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100F018 +
retn   +
jmp loc_100F02D  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100F024 +
retn   +
cmp dword ptr [ebp-48h] 8007000Eh +
jnz loc_100F037  +
mov ecx [ebp-4Ch] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_100F053  +
push dword ptr [ebp-48h]  +
mov eax [ebp-4Ch] +
mov ecx [eax] +
push offset aFunc  +
push 4033C362h  +
push dword ptr [ebp-48h]  +
push eax  +
call dword ptr [ecx+2Ch]  +
add esp 14h +
mov ecx [ebp-44h] +
mov eax [ecx] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call dword ptr [eax+0Ch]  +
xor al al +
call sub_100A19F  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov ecx [eax] +
push eax  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
mov ecx esi +
call sub_100EF2D  +
lea eax [ebp-1] +
push eax  +
push dword ptr [esi+4]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp-4] eax +
mov ecx [ebp+8] +
push esi  +
mov esi dword_102C9A4 +
test esi esi +
jnz loc_100F0E4  +
push esi  +
push 54Fh  +
push offset a206  +
push 0CEh  +
push offset aDW7rtmAdminW_4  +
call sub_100A7B1  +
xor eax eax +
jmp loc_100F140  +
mov eax dword_102C9A0 +
test eax eax +
jnz loc_100F0FF  +
push esi  +
push 54Fh  +
push offset a207  +
push 0CFh  +
jmp loc_100F0D6  +
***
push edi  +
push 10h  +
push 0  +
push ecx  +
mov edi eax +
call ds:wcstoul  +
add esp 0Ch +
push esi  +
push eax  +
lea ecx [ebp-28h] +
mov [ebp-2Ch] eax +
call sub_100E614  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_100F138  +
push esi  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-28h] +
push eax  +
mov ecx edi +
call sub_100EF87  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_100A071  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov [ebp-4] ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
mov esi offset aWsmres_dll +
mov edi offset dword_1003B6C +
cmp eax ebx +
jz loc_100F1B0  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F194  +
push edi  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100F1B0  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F1B0  +
push esi  +
push edi  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov ebx ds:LoadLibraryW +
push esi  +
call ebx  +
mov ecx [ebp-4] +
push eax  +
call sub_100C389  +
mov eax [ebp-4] +
cmp dword ptr [eax] 0 +
jnz loc_100F226  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100F1FA  +
test dword ptr [eax+1Ch] 800h +
jz loc_100F1FA  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push esi  +
push edi  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
call ds:GetLastError  +
test eax eax +
jle loc_100F20E  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
push offset aLoadlibrary  +
push 4033C360h  +
push eax  +
push ecx  +
call dword ptr [edx+2Ch]  +
add esp 14h +
mov eax off_102B00C +
mov esi offset aWinhttp_dll +
cmp eax offset off_102B00C +
jz loc_100F24F  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F24F  +
push esi  +
push edi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov edi [ebp-4] +
push esi  +
add edi 4 +
call ebx  +
push eax  +
mov ecx edi +
call sub_100C389  +
cmp dword ptr [edi] 0 +
jnz loc_100F2C9  +
mov eax off_102B00C +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_100F29B  +
test dword ptr [eax+1Ch] 800h +
jz loc_100F29B  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push esi  +
push offset dword_1003B6C  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
call ds:GetLastError  +
test eax eax +
jle loc_100F2AF  +
and eax 0FFFFh +
or eax 80070000h +
mov edi [ebp+8] +
mov ecx [edi] +
push eax  +
push offset aLoadlibrary  +
push 4033C360h  +
push eax  +
push edi  +
call dword ptr [ecx+2Ch]  +
add esp 14h +
jmp loc_100F2D1  +
mov edi [ebp+8] +
mov ebx offset off_102B00C +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100F2F5  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F2F5  +
push offset dword_1003B6C  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov esi [ebp-4] +
add esi 8 +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax]  +
test al al +
jz loc_100F39B  +
mov dword_102C9A0 esi +
xor esi esi +
push esi  +
push esi  +
push offset loc_100F0A6  +
mov dword_102C9A4 edi +
call ds:EnumUILanguagesW  +
test eax eax +
jnz loc_100F382  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_100F359  +
test dword ptr [eax+1Ch] 800h +
jz loc_100F359  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_1003B6C  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
call ds:GetLastError  +
cmp eax esi +
jle loc_100F36D  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx [edi] +
push eax  +
push offset aEnumsystemloca  +
push 4033C360h  +
push eax  +
push edi  +
call dword ptr [ecx+2Ch]  +
add esp 14h +
mov dword_102C9A4 esi +
mov dword_102C9A0 esi +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100F06E  +
test [ebp+arg_0] 1 +
jz loc_100F3C1  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_100F3E0  +
push 1  +
call sub_100F3A7  +
pop ebp  +
retn 8  +
***
lea eax [ecx+4] +
mov ecx [eax] +
and dword ptr [eax] 0 +
test ecx ecx +
jz locret_100F3FC  +
push ecx  +
push eax  +
call sub_100F3CD  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
mov dword ptr [ebp-4] 1 +
call sub_100F3E9  +
mov eax [esi+4] +
and dword ptr [esi+4] 0 +
mov edi ds:FreeLibrary +
test eax eax +
jz loc_100F436  +
push eax  +
call edi  +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_100F442  +
push eax  +
call edi  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100F402  +
test [ebp+arg_0] 1 +
jz loc_100F467  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100F49C  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_100F4D4  +
push dword ptr [ebp+8]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_100F4AD  +
cmp [ebp+0Ch] al +
jz loc_100F498  +
mov eax [esi] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100F4C9  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100F44D  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [ebp+8] +
mov [esi+4] eax +
mov eax [ebp+0Ch] +
mov dword ptr [esi] 0 +
mov [esi+8] eax +
and dword ptr [ebp-4] 0 +
lea edi [esi+0Ch] +
mov ecx edi +
call sub_100FB92  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call sub_100FC14  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
push esi  +
push (offset byte_100E9EC+1)  +
push offset loc_100F154  +
mov esi ecx +
call sub_100F524  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100F5F3  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F5F3  +
push esi  +
push offset dword_1003C90  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz locret_100F626  +
test dword ptr [eax+1Ch] 1000h +
jz locret_100F626  +
push ecx  +
push offset dword_1003C90  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov [ebp-4] ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx 1000h +
mov edi offset dword_1003C90 +
cmp eax esi +
jz loc_100F665  +
test [eax+1Ch] ebx +
jz loc_100F665  +
push ecx  +
push edi  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-4]  +
push 0  +
push 0  +
push offset dword_1003B4C  +
call ds:EtwEventRegister  +
mov [ebp-8] eax +
test eax eax +
jz loc_100F6AF  +
mov eax off_102B00C +
cmp eax esi +
jz loc_100F6A0  +
test [eax+1Ch] ebx +
jz loc_100F6A0  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
push edi  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov ecx [ebp+8] +
push dword ptr [ebp-8]  +
mov eax [ecx] +
call dword ptr [eax+20h]  +
xor al al +
jmp loc_100F6D0  +
mov eax off_102B00C +
cmp eax esi +
jz loc_100F6CE  +
test [eax+1Ch] ebx +
jz loc_100F6CE  +
push dword ptr [ebp-4]  +
push edi  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
icebp   +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100F709  +
test dword ptr [eax+1Ch] 1000h +
jz loc_100F709  +
push esi  +
push offset dword_1003C90  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [esi] +
mov ecx [esi+4] +
mov edx eax +
or edx ecx +
jz loc_100F723  +
push ecx  +
push eax  +
call ds:EtwEventUnregister  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov al 1 +
pop esi  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
mov ecx [ecx+4] +
mov edx eax +
or edx ecx +
jnz loc_100F75A  +
push edx  +
push 54Fh  +
push offset a566  +
push 236h  +
push offset aDW7rtmAdminW_6  +
call sub_100A7B1  +
jmp loc_100F7A0  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
push ecx  +
push eax  +
call ds:EtwEventWrite  +
test eax eax +
jz loc_100F79F  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_100F79F  +
test dword ptr [ecx+1Ch] 800h +
jz loc_100F79F  +
push eax  +
movzx eax word ptr [esi] +
push eax  +
push offset dword_1003C90  +
push 15h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100AB5B  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ecx] +
mov ecx [ecx+4] +
mov edx eax +
or edx ecx +
jnz loc_100F7D7  +
push edx  +
push 54Fh  +
push offset a613  +
push 265h  +
push offset aDW7rtmAdminW_6  +
call sub_100A7B1  +
xor al al +
jmp loc_100F7EB  +
push [ebp+arg_0]  +
push ecx  +
push eax  +
call ds:EtwEventEnabled  +
xor ecx ecx +
test al al +
setnz cl  +
mov al cl +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetLastError  +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
and dword ptr [ecx+4] 0 +
and dword ptr [ecx+0Ch] 0 +
push eax  +
mov [ecx] edx +
mov dword ptr [ecx+8] 4 +
call ds:SetLastError  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100F5FC  +
test [ebp+arg_0] 1 +
jz loc_100F840  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_100F85F  +
push 1  +
call sub_100F826  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
cmp esi edi +
jnz loc_100F894  +
push edi  +
push 54Fh  +
push offset a179  +
push 0B3h  +
push offset aDW7rtmAdminW_6  +
call sub_100A7B1  +
jmp loc_100F8EC  +
push ebx  +
call ds:GetLastError  +
mov ebx eax +
lea eax [ebp+arg_4] +
push eax  +
push 7FFFFFFFh  +
push esi  +
mov [ebp+arg_4] edi +
call sub_100B6AE  +
test eax eax +
jz loc_100F8CF  +
push edi  +
push 54Fh  +
push offset a185  +
push 0B9h  +
push offset aDW7rtmAdminW_6  +
call sub_100A7B1  +
jmp loc_100F8EB  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+ecx+2] +
push ebx  +
mov [eax] esi +
mov [eax+4] edi +
mov [eax+8] ecx +
mov [eax+0Ch] edi +
call ds:SetLastError  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100F920  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_100F958  +
push dword ptr [ebp+8]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_100F931  +
cmp [ebp+0Ch] al +
jz loc_100F91C  +
mov eax [esi] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp+0Ch] eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_100F94D  +
mov ecx [ebp+0Ch] +
push 1  +
call sub_100F826  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov edi ecx +
push 0  +
lea eax [ebp-0Dh] +
push eax  +
push 8  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jz loc_100F9E8  +
mov ecx eax +
call sub_100F5BF  +
mov esi eax +
jmp loc_100F9EA  +
xor esi esi +
mov [ebp-14h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jnz loc_100FA01  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor al al +
jmp loc_100FA37  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [edi+4]  +
test al al +
jnz loc_100FA18  +
push 1  +
mov ecx esi +
call sub_100F826  +
jmp loc_100F9FD  +
push 0  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_100FA28  +
xor esi esi +
test esi esi +
jz loc_100FA35  +
push 1  +
mov ecx esi +
call sub_100F826  +
mov al 1 +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_100FA5A  +
push [ebp+arg_0]  +
call sub_100F9BE  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
xor edi edi +
cmp [ebp+10h] edi +
jz loc_100FA9D  +
cmp [ebp+0Ch] edi +
jnz loc_100FAA2  +
push edi  +
push 54Fh  +
push offset a61  +
push 3Dh  +
push offset aDW7rtmAdminW_6  +
call sub_100A7B1  +
call __EH_epilog3  +
retn 0Ch  +
cmp [ebp+0Ch] edi +
jnz loc_100FA7E  +
call ds:GetLastError  +
push 1  +
lea ecx [ebp-30h] +
mov esi eax +
call sub_100E3AF  +
lea eax [ebp-30h] +
push eax  +
mov ecx offset dword_102C9D0 +
mov [ebp-4] edi +
call sub_100FA44  +
cmp eax edi +
jnz loc_100FADE  +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
jmp loc_100FA95  +
push dword ptr [ebp+10h]  +
mov ecx eax +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_100F72E  +
jmp loc_100FAC9  +
***
call __EH_prolog3  +
call ds:GetLastError  +
xor ebx ebx +
push ebx  +
lea ecx [ebp-30h] +
mov esi eax +
call sub_100E3AF  +
lea eax [ebp-30h] +
push eax  +
mov ecx offset dword_102C9D0 +
mov [ebp-4] ebx +
call sub_100FA44  +
cmp eax ebx +
jnz loc_100FB46  +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
mov al bl +
call __EH_epilog3  +
retn 4  +
push dword ptr [ebp+8]  +
mov ecx eax +
call sub_100F7A9  +
mov bl al +
jmp loc_100FB29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_18] +
push eax  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
and dword ptr [esi] 0 +
push edi  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1003D50 +
cmp eax edi +
jz loc_100FBCD  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100FBCD  +
push 0  +
lea ecx [esi+4] +
push ecx  +
push esi  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FB59  +
push 80000FA0h  +
lea eax [esi+4] +
push eax  +
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_100FC09  +
call ds:GetLastError  +
mov [esi] eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_100FC09  +
test dword ptr [eax+1Ch] 800h +
jz loc_100FC09  +
push esi  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
mov eax [ecx] +
xor ecx ecx +
test eax eax +
setz cl  +
push esi  +
mov esi ecx +
test esi esi +
jnz loc_100FC2B  +
push eax  +
call ds:SetLastError  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100FC14  +
test eax eax +
jz loc_100FC4C  +
add esi 4 +
push esi  +
call ds:LeaveCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_100FC14  +
test eax eax +
jnz loc_100FC7A  +
push eax  +
push 54Fh  +
push offset a59  +
push 3Bh  +
push offset aDW7rtmAdminW_7  +
call sub_100A7B1  +
pop esi  +
retn   +
add esi 4 +
push esi  +
call ds:EnterCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_100FCBE  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_100FCBE  +
push dword ptr [esi]  +
lea ecx [esi+4] +
push ecx  +
push esi  +
push offset dword_1003D50  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FB59  +
mov ecx esi +
call sub_100FC14  +
test eax eax +
jz loc_100FCD3  +
add esi 4 +
push esi  +
call ds:DeleteCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_18] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_100FD14  +
cmp word ptr [edx] 0 +
jnz loc_100FCF8  +
mov [ebp+arg_18] 0Eh +
jmp loc_100FD1B  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100FCFD  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_18] eax +
jmp loc_100FD1B  +
mov [ebp+arg_18] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_100FD31  +
cmp word ptr [edx] 0 +
jnz loc_100FD33  +
mov edx offset aNull_0 +
jmp loc_100FD33  +
mov edx ebx +
mov edi [ebp+arg_14] +
test edi edi +
jz loc_100FD5D  +
cmp word ptr [edi] 0 +
jnz loc_100FD44  +
push 0Eh  +
jmp loc_100FD5F  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_100FD49  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_100FD60  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_100FD75  +
cmp word ptr [edi] 0 +
jnz loc_100FD71  +
mov eax offset aNull_0 +
jmp loc_100FD77  +
mov eax edi +
jmp loc_100FD77  +
mov eax ebx +
push 0  +
push [ebp+arg_18]  +
push edx  +
push ecx  +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov dword ptr [ecx] offset off_1003E80 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1003E80 +
jz loc_100FDCF  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
xor ecx ecx +
mov dword ptr [eax] offset off_1003E80 +
mov [eax+4] ecx +
mov [ebp-4] ecx +
or dword ptr [eax+10h] 0FFFFFFFFh +
mov dword ptr [eax] offset off_1003E98 +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+14h] ecx +
mov dword ptr [eax+4] 1 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1003E98 +
and dword ptr [ebp-4] 0 +
call sub_10192A5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003E80 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100FE23  +
test byte ptr [ebp+8] 1 +
jz loc_100FE72  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10142A6  +
test [ebp+arg_0] 1 +
jz loc_100FE98  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_100FEB7  +
push 1  +
call sub_100FE7E  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_100FF20  +
push eax  +
push ecx  +
call sub_100FEA4  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_18] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp edx ebx +
jz loc_100FF8E  +
cmp [edx] bx +
jnz loc_100FF72  +
mov [ebp+arg_18] 0Eh +
jmp loc_100FF95  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100FF77  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_18] eax +
jmp loc_100FF95  +
mov [ebp+arg_18] 0Ah +
cmp edx ebx +
jz loc_100FFAC  +
cmp [edx] bx +
jnz loc_100FFA7  +
mov [ebp+var_4] offset aNull_0 +
jmp loc_100FFB3  +
mov [ebp+var_4] edx +
jmp loc_100FFB3  +
mov [ebp+var_4] offset aNull +
mov edi [ebp+arg_14] +
cmp edi ebx +
jz loc_100FFDC  +
cmp [edi] bx +
jnz loc_100FFC3  +
push 0Eh  +
jmp loc_100FFDE  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100FFC8  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax+2] +
jmp loc_100FFDF  +
push 0Ah  +
pop ebx  +
test edi edi +
jz loc_100FFF4  +
cmp word ptr [edi] 0 +
jnz loc_100FFF0  +
mov edx offset aNull_0 +
jmp loc_100FFF9  +
mov edx edi +
jmp loc_100FFF9  +
mov edx offset aNull +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_1010023  +
cmp word ptr [edi] 0 +
jnz loc_101000A  +
push 0Eh  +
jmp loc_1010025  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101000F  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1010026  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_101003B  +
cmp word ptr [edi] 0 +
jnz loc_1010037  +
mov eax offset aNull_0 +
jmp loc_1010040  +
mov eax edi +
jmp loc_1010040  +
mov eax offset aNull +
push 0  +
push [ebp+arg_18]  +
push [ebp+var_4]  +
push ebx  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_10100A9  +
cmp word ptr [edx] 0 +
jnz loc_101008D  +
mov [ebp+arg_14] 0Eh +
jmp loc_10100B0  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1010092  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_14] eax +
jmp loc_10100B0  +
mov [ebp+arg_14] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_10100C6  +
cmp word ptr [edx] 0 +
jnz loc_10100C8  +
mov edx offset aNull_0 +
jmp loc_10100C8  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_10100F2  +
cmp word ptr [edi] 0 +
jnz loc_10100D9  +
push 0Eh  +
jmp loc_10100F4  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10100DE  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_10100F5  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_101010A  +
cmp word ptr [edi] 0 +
jnz loc_1010106  +
mov eax offset aNull_0 +
jmp loc_101010C  +
mov eax edi +
jmp loc_101010C  +
mov eax ebx +
push 0  +
push 4  +
lea esi [ebp+arg_18] +
push esi  +
push [ebp+arg_14]  +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_101016E  +
cmp word ptr [edx] 0 +
jnz loc_1010153  +
push 0Eh  +
jmp loc_1010170  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1010159  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_1010171  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_1010182  +
cmp word ptr [edx] 0 +
jnz loc_1010187  +
mov edx offset aNull_0 +
jmp loc_1010187  +
mov edx offset aNull +
push 0  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 28h +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
inc eax  +
push esi  +
mov word ptr [ebp+var_4] ax +
xor eax eax +
push eax  +
push 2  +
mov word ptr [ebp+var_4+2] ax +
push [ebp+var_4]  +
mov esi ecx +
and dword ptr [esi] 0 +
call ds:HttpInitialize  +
mov [esi] eax +
test eax eax +
jz loc_1010206  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_1010206  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_1010206  +
push eax  +
push offset nullsub_1  +
push 0Ah  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
cmp dword ptr [ecx] 0 +
jnz locret_101024D  +
push 0  +
push 2  +
call ds:HttpTerminate  +
test eax eax +
jz locret_101024D  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz locret_101024D  +
test dword ptr [ecx+1Ch] 400000h +
jz locret_101024D  +
push eax  +
push offset nullsub_1  +
push 0Bh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_101027F  +
push 0  +
push 54Fh  +
push offset a59  +
push 3Bh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp locret_10103C7  +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_10102A7  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a60  +
push 3Ch  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10103C6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_10102CF  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a61  +
push 3Dh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10103C5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10102F8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10102F8  +
push esi  +
push ebx  +
push offset nullsub_1  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
push edi  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
xor edi edi +
push edi  +
push 8  +
lea eax [ebp+var_8] +
push eax  +
push 2  +
push edi  +
mov [ebp+arg_4] 1 +
mov [ebp+var_8] ebx +
mov [ebp+var_4] esi +
call ds:HttpDeleteServiceConfiguration  +
mov esi eax +
cmp esi edi +
jz loc_1010355  +
cmp esi 2 +
jz loc_1010355  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010355  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010355  +
push esi  +
push [ebp+var_8]  +
push offset nullsub_1  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
mov eax [ebp+arg_C] +
cmp eax edi +
jz loc_1010365  +
xor ecx ecx +
cmp esi edi +
setz cl  +
mov [eax] ecx +
push edi  +
push 8  +
lea eax [ebp+var_8] +
push eax  +
push 2  +
push edi  +
call ds:HttpSetServiceConfiguration  +
mov esi eax +
cmp esi edi +
jz loc_10103C1  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10103A6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10103A6  +
push esi  +
push [ebp+var_8]  +
push offset nullsub_1  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push offset aHttpsetservice  +
push 4033C360h  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
mov [ebp+arg_4] edi +
mov eax [ebp+arg_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_10103FD  +
push 0  +
push 54Fh  +
push offset a128  +
push 80h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
jmp locret_10104A2  +
mov eax off_102B00C +
push ebx  +
push esi  +
mov esi offset off_102B00C +
mov ebx offset nullsub_1 +
cmp eax esi +
jz loc_101042C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101042C  +
push [ebp+arg_0]  +
push ebx  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push edi  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
mov eax [ebp+arg_0] +
push 0  +
push 8  +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
push eax  +
push 2  +
push 0  +
call ds:HttpDeleteServiceConfiguration  +
pop edi  +
cmp eax 2 +
jnz loc_1010477  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10104A0  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10104A0  +
push [ebp+arg_0]  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_10104A0  +
test eax eax +
jz loc_10104A0  +
mov ecx off_102B00C +
cmp ecx esi +
jz loc_10104A0  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_10104A0  +
push eax  +
push [ebp+var_8]  +
push ebx  +
push 11h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_100E5A0  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 820h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_18] +
mov [ebp+var_818] esi +
mov [ebp+hKey] eax +
mov [ebp+lpData] ecx +
mov [ebp+var_81C] edi +
test esi esi +
jnz loc_1010503  +
push esi  +
push 54Fh  +
push offset a213  +
push 0D5h  +
jmp loc_10107E3  +
test ebx ebx +
jnz loc_101051C  +
push esi  +
push 54Fh  +
push offset a214  +
push 0D6h  +
jmp loc_10107E3  +
test eax eax +
jnz loc_1010535  +
push esi  +
push 54Fh  +
push offset a215  +
push 0D7h  +
jmp loc_10107E3  +
test ecx ecx +
jnz loc_101054E  +
push esi  +
push 54Fh  +
push offset a216  +
push 0D8h  +
jmp loc_10107E3  +
mov ecx [ebx] +
cmp ecx 0BB8h +
jz loc_10107D3  +
cmp ecx 0BB9h +
jz loc_10107D3  +
test edi edi +
jnz loc_1010581  +
push esi  +
push 54Fh  +
push offset a218  +
push 0DAh  +
jmp loc_10107E3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10105AC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10105AC  +
push dword ptr [ebx+4]  +
push ecx  +
push offset nullsub_1  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
and dword ptr [edi] 0 +
cmp dword ptr [ebx+0Ch] 32h +
mov [ebp+var_808] 1 +
jz loc_1010665  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
push dword ptr [ebx+4]  +
mov [ebp+cbData] 800h +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_1010665  +
mov eax [ebp+Type] +
cmp eax [ebp+dwType] +
jnz loc_1010665  +
mov ecx [ebp+arg_14] +
cmp [ebp+cbData] ecx +
jnz loc_1010665  +
mov edi [ebp+lpData] +
lea esi [ebp+Data] +
xor eax eax +
cmps   +
jz loc_1010624  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_101065F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10107CB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10107A0  +
push dword ptr [ebx+4]  +
push offset nullsub_1  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_101079B  +
mov esi [ebp+var_818] +
mov ecx [ebx] +
mov eax 7E0h +
cmp ecx eax +
jz loc_1010774  +
cmp ecx 7E1h +
jz loc_1010770  +
cmp ecx 3EAh +
jnz loc_10106A2  +
push offset aMaxproviderreq  +
mov eax [esi] +
push 4033C4E4h  +
push 803381AEh  +
push esi  +
call dword ptr [eax+1Ch]  +
jmp loc_1010791  +
cmp ecx 7D0h +
jnz loc_10106B1  +
push offset aMaxconcurrento  +
jmp loc_101068D  +
cmp ecx 0BC3h +
jnz loc_10106C0  +
push offset aMaxshellruntim  +
jmp loc_101068D  +
push [ebp+arg_14]  +
push [ebp+lpData]  +
push [ebp+dwType]  +
push 0  +
push dword ptr [ebx+4]  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov edi eax +
test edi edi +
jz loc_1010738  +
mov eax [esi] +
and [ebp+var_808] 0 +
push edi  +
push offset aRegsetvalueex  +
push 4033C360h  +
push 65Bh  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10107CB  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10107A0  +
push dword ptr [ebx+4]  +
push edi  +
push offset nullsub_1  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
jmp loc_101079B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010762  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010762  +
push dword ptr [ebx+4]  +
push offset nullsub_1  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [ebp+var_81C] +
mov dword ptr [eax] 1 +
jmp loc_101079B  +
cmp ecx eax +
jnz loc_101077B  +
mov eax offset aHttp +
jmp loc_1010780  +
mov eax offset aHttps +
mov ecx [esi] +
push eax  +
push 4033C494h  +
push 8033813Fh  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
and [ebp+var_808] 0 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10107CB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10107CB  +
push [ebp+var_808]  +
push dword ptr [ebx+4]  +
push offset nullsub_1  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
mov eax [ebp+var_808] +
jmp loc_10107EF  +
push esi  +
push 54Fh  +
push offset a217  +
push 0D9h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
push esi  +
cmp [ebp+lpType] ecx +
jnz loc_1010836  +
push [ebp+cbData]  +
mov esi 54Fh +
push esi  +
push offset a331  +
push 14Bh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
mov eax esi +
jmp loc_1010969  +
push edi  +
mov edi [ebp+arg_10] +
cmp edi ecx +
jbe loc_1010872  +
cmp [ebp+lpData] ecx +
jnz loc_1010858  +
push [ebp+cbData]  +
mov esi 54Fh +
push esi  +
push offset a334  +
push 14Eh  +
jmp loc_10108A4  +
cmp [ebp+arg_18] ecx +
jnz loc_1010872  +
push [ebp+cbData]  +
mov esi 54Fh +
push esi  +
push offset a335  +
push 14Fh  +
jmp loc_10108A4  +
cmp [ebp+hKey] ecx +
jnz loc_101088C  +
push [ebp+cbData]  +
mov esi 54Fh +
push esi  +
push offset a337  +
push 151h  +
jmp loc_10108A4  +
cmp [ebp+lpValueName] ecx +
jnz loc_10108B5  +
push [ebp+cbData]  +
mov esi 54Fh +
push esi  +
push offset a338  +
push 152h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
mov eax esi +
jmp loc_1010968  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
mov esi offset nullsub_1 +
cmp eax ebx +
jz loc_10108E5  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10108E5  +
push [ebp+lpValueName]  +
push esi  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
xor ecx ecx +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
mov [ebp+cbData] edi +
push [ebp+lpType]  +
push ecx  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
mov edi eax +
test edi edi +
jnz loc_1010941  +
mov eax [ebp+cbData] +
mov ecx [ebp+arg_18] +
mov [ecx] eax +
cmp [ebp+lpData] edi +
jnz loc_1010965  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1010935  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010935  +
push [ebp+lpValueName]  +
push esi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push 7Ah  +
pop edi  +
push edi  +
call ds:SetLastError  +
jmp loc_1010965  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1010965  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010965  +
push [ebp+lpValueName]  +
push edi  +
push esi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jnz loc_10109A7  +
push edi  +
push 54Fh  +
push offset a512  +
push 200h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1010D08  +
cmp [ebp+arg_4] edi +
jnz loc_10109BE  +
push esi  +
push 54Fh  +
push offset a513  +
push 201h  +
jmp loc_1010996  +
cmp [ebp+dwAceIndex] edi +
jnz loc_10109D5  +
push esi  +
push 54Fh  +
push offset a514  +
push 202h  +
jmp loc_1010996  +
mov eax off_102B00C +
push ebx  +
cmp eax offset off_102B00C +
jz loc_1010A00  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010A00  +
mov ebx offset nullsub_1 +
push ebx  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_1010A05  +
mov ebx offset nullsub_1 +
push edi  +
push [ebp+dwAceIndex]  +
push 1  +
push [ebp+arg_4]  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
mov [ebp+arg_0] eax +
cmp eax edi +
jnz loc_1010A95  +
call ds:GetLastError  +
mov edi eax +
cmp edi 534h +
jnz loc_1010A52  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010A79  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010A79  +
push [ebp+arg_4]  +
push ebx  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_1010A79  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010A79  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010A79  +
push [ebp+arg_4]  +
push edi  +
push ebx  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
mov eax [esi] +
push edi  +
push [ebp+arg_4]  +
push 4033C37Ch  +
push 80338015h  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_1010D04  +
lea eax [ebp+bDaclPresent] +
push eax  +
lea eax [ebp+pGroup] +
push eax  +
mov eax [ebp+dwAceIndex] +
push dword ptr [eax]  +
mov [ebp+pGroup] edi +
mov [ebp+bDaclPresent] edi +
call ds:GetSecurityDescriptorOwner  +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_1010B4B  +
mov ebx 80338015h +
cmp [ebp+pGroup] edi +
jnz loc_1010AD8  +
push [ebp+arg_4]  +
mov eax [esi] +
push 4033C37Dh  +
push ebx  +
push esi  +
mov [ebp+arg_0] edi +
call dword ptr [eax+1Ch]  +
add esp 10h +
cmp [ebp+arg_0] edi +
jz loc_1010D04  +
lea eax [ebp+bDaclPresent] +
push eax  +
lea eax [ebp+pGroup] +
push eax  +
mov eax [ebp+dwAceIndex] +
push dword ptr [eax]  +
mov [ebp+pGroup] edi +
mov [ebp+bDaclPresent] edi +
call ds:GetSecurityDescriptorGroup  +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_1010B4B  +
cmp [ebp+pGroup] edi +
jnz loc_1010B1B  +
push [ebp+arg_4]  +
mov eax [esi] +
push 4033C37Eh  +
push ebx  +
push esi  +
mov [ebp+arg_0] edi +
call dword ptr [eax+1Ch]  +
add esp 10h +
cmp [ebp+arg_0] edi +
jz loc_1010D04  +
lea eax [ebp+bDaclDefaulted] +
push eax  +
lea eax [ebp+pAcl] +
push eax  +
lea eax [ebp+bDaclPresent] +
push eax  +
mov eax [ebp+dwAceIndex] +
push dword ptr [eax]  +
mov [ebp+bDaclPresent] edi +
mov [ebp+pAcl] edi +
mov [ebp+bDaclDefaulted] edi +
call ds:GetSecurityDescriptorDacl  +
mov [ebp+arg_0] eax +
cmp eax edi +
jnz loc_1010B60  +
mov edi [esi] +
add edi 20h +
call ds:GetLastError  +
push eax  +
mov ecx esi +
call dword ptr [edi]  +
jmp loc_1010D04  +
cmp [ebp+bDaclPresent] edi +
jz loc_1010B6A  +
cmp [ebp+pAcl] edi +
jnz loc_1010B7F  +
push [ebp+arg_4]  +
mov eax [esi] +
push 4033C37Fh  +
push ebx  +
push esi  +
mov [ebp+arg_0] edi +
call dword ptr [eax+1Ch]  +
add esp 10h +
cmp [ebp+arg_0] edi +
jz loc_1010D04  +
cmp [ebp+pAcl] edi +
jz loc_1010D04  +
mov [ebp+dwAceIndex] edi +
mov [ebp+var_C] edi +
mov [ebp+pGroup] edi +
mov edi 0FFFFFFFh +
and [ebp+pAce] 0 +
lea eax [ebp+pAce] +
push eax  +
push [ebp+dwAceIndex]  +
push [ebp+pAcl]  +
call ds:GetAce  +
test eax eax +
jz loc_1010CC4  +
mov ecx [ebp+pAce] +
inc [ebp+dwAceIndex]  +
mov [ebp+var_1C] ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010BFC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010BFC  +
movzx edx word ptr [ecx+2] +
movzx ecx byte ptr [ecx] +
push edx  +
push ecx  +
push offset nullsub_1  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov ecx [ebp+pAce] +
mov eax off_102B00C +
mov edx [ebp+var_1C] +
mov dl [edx] +
test dl dl +
jnz loc_1010C2E  +
inc [ebp+var_C]  +
mov [ebp+var_1C] ecx +
cmp eax offset off_102B00C +
jz loc_1010C65  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010C65  +
mov ecx [ecx+4] +
mov edx ecx +
and edx edi +
push edx  +
push edi  +
push ecx  +
push offset nullsub_1  +
push 23h  +
jmp loc_1010C5A  +
cmp dl 1 +
jnz loc_1010CA8  +
inc [ebp+pGroup]  +
mov [ebp+var_1C] ecx +
cmp eax offset off_102B00C +
jz loc_1010C65  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010C65  +
mov ecx [ecx+4] +
mov edx ecx +
and edx edi +
push edx  +
push edi  +
push ecx  +
push offset nullsub_1  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FB59  +
mov eax [ebp+var_1C] +
add eax 4 +
mov ecx [eax] +
test ecx edi +
jnz loc_1010C90  +
test ecx ecx +
jz loc_1010C90  +
cmp [ebp+arg_C] 0 +
jnz loc_1010B9F  +
push offset GenericMapping  +
push eax  +
call ds:MapGenericMask  +
jmp loc_1010B9F  +
push [ebp+arg_4]  +
mov eax [esi] +
and [ebp+arg_0] 0 +
push 4033C381h  +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 10h +
jmp loc_1010CE3  +
mov eax [esi] +
and [ebp+arg_0] 0 +
movzx ecx dl +
push ecx  +
push [ebp+arg_4]  +
push 4033C380h  +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_1010CE3  +
call ds:GetLastError  +
cmp eax 57h +
jz loc_1010CE3  +
mov edi [esi] +
and [ebp+arg_0] 0 +
add edi 20h +
call ds:GetLastError  +
push eax  +
mov ecx esi +
call dword ptr [edi]  +
xor eax eax +
cmp [ebp+var_C] eax +
jnz loc_1010D04  +
cmp [ebp+pGroup] eax +
jnz loc_1010D04  +
push [ebp+arg_4]  +
mov [ebp+arg_0] eax +
mov eax [esi] +
push 4033C37Fh  +
push ebx  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 10h +
mov eax [ebp+arg_0] +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+hKey] edi +
jnz loc_1010D43  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a833  +
push 341h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1010E61  +
cmp [ebp+lpName] edi +
jnz loc_1010D5C  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a834  +
push 342h  +
jmp loc_1010D32  +
push ebx  +
mov ebx [ebp+arg_14] +
cmp ebx edi +
jnz loc_1010D87  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a835  +
push 343h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1010E60  +
push esi  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbName] +
push eax  +
push [ebp+lpName]  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
call ds:RegEnumKeyExW  +
mov esi eax +
mov eax 103h +
cmp esi eax +
jnz loc_1010DB0  +
push eax  +
jmp loc_1010E52  +
cmp esi edi +
jz loc_1010DF9  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010DDC  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010DDC  +
push esi  +
push offset nullsub_1  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_1010E51  +
mov ecx [eax] +
push esi  +
push offset aRegenumkeyex  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
jmp loc_1010E51  +
push offset asc_1004280  +
push [ebp+lpName]  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov [ebx] eax +
cmp eax edi +
jnz loc_1010E5C  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1010E36  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1010E36  +
push offset nullsub_1  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_0] +
mov esi 80338005h +
cmp eax edi +
jz loc_1010E51  +
mov ecx [eax] +
push 4033C44Ah  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
push esi  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1010E5F  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_C0] ecx +
test ecx ecx +
jnz loc_1010EA3  +
push ecx  +
push 54Fh  +
push offset a1296  +
push 510h  +
jmp loc_1010EB7  +
test ebx ebx +
jnz loc_1010EC6  +
push ebx  +
push 54Fh  +
push offset a1297  +
push 511h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
jmp loc_1010FA6  +
mov eax off_102B00C +
push esi  +
push edi  +
mov edi offset off_102B00C +
mov esi offset nullsub_1 +
cmp eax edi +
jz loc_1010EF4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010EF4  +
push ebx  +
push ecx  +
push esi  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
push 38h  +
lea eax [ebp+var_3C] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
lea eax [ebp+var_BC] +
push eax  +
push ebx  +
push [ebp+var_C0]  +
call sub_100BDB0  +
test eax eax +
jz loc_1010FA4  +
push 0  +
lea eax [ebp+var_BC] +
push 38h  +
mov [ebp+var_3C] eax +
lea eax [ebp+var_3C] +
push eax  +
push 1  +
push 0  +
call ds:HttpDeleteServiceConfiguration  +
mov [ebp+var_C4] eax +
cmp eax 2 +
jnz loc_1010F6E  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1010FA4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010F7C  +
push ebx  +
push [ebp+var_C0]  +
push esi  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
cmp [ebp+var_C4] 0 +
jz loc_1010FA4  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1010FA4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1010FA4  +
push [ebp+var_C4]  +
push ebx  +
push [ebp+var_C0]  +
push esi  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101006F  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1010FEA  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1514  +
push 5EAh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101109E  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_1011015  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1515  +
push 5EBh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101109D  +
or dword ptr [edi] 0FFFFFFFFh +
push esi  +
mov esi ds:_wcsicmp +
push offset aHttps  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1011035  +
mov dword ptr [edi] 1 +
jmp loc_1011045  +
push offset aHttp  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101104A  +
and [edi] eax +
xor eax eax +
inc eax  +
jmp loc_101109C  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011072  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1011072  +
push ebx  +
push offset nullsub_1  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [ebp+arg_0] +
mov esi 80338041h +
test eax eax +
jz loc_1011093  +
mov ecx [eax] +
push offset aHttpsHttp  +
push ebx  +
push 4033C3B1h  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
push esi  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
call sub_10250DF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
push [ebp+arg_4]  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_210] +
push eax  +
call sub_10110A8  +
test eax eax +
jz loc_1011157  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10110F6  +
sub eax edx +
sar eax 1 +
push esi  +
mov esi eax +
lea eax [ebp+var_210] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1011110  +
sub eax edx +
sar eax 1 +
cmp esi eax +
pop esi  +
jbe loc_1011157  +
lea eax [ebp+var_210] +
push eax  +
push edi  +
call sub_100AC71  +
test eax eax +
jz loc_1011157  +
lea eax [ebp+var_210] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101113D  +
sub eax edx +
sar eax 1 +
cmp word ptr [edi+eax*2] 5Ch +
jnz loc_1011157  +
xor eax eax +
inc eax  +
jmp loc_1011159  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_100A071  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_101118D  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1929  +
push 789h  +
jmp loc_10111C9  +
cmp [ebp+arg_4] 2 +
jnz loc_101119B  +
mov dword ptr [eax] 3 +
jmp loc_10111B2  +
cmp [ebp+arg_4] 3 +
jnz loc_10111A9  +
mov dword ptr [eax] 4 +
jmp loc_10111B2  +
cmp [ebp+arg_4] 1 +
jnz loc_10111B7  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
jmp loc_10111D5  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1945  +
push 799h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10111EF  +
xor eax eax +
jmp loc_101121A  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1011218  +
push edi  +
mov edi [ebp+arg_4] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_1011217  +
test edi edi +
jz loc_101120D  +
dec dword ptr [edi]  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_10111FB  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_1011235  +
xor eax eax +
jmp loc_1011265  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_1011241  +
xor eax eax +
jmp loc_1011264  +
mov eax [esi] +
push edi  +
lea edi [ebx+eax*2-2] +
jmp loc_101125D  +
movzx eax word ptr [edi] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_1011261  +
dec dword ptr [esi]  +
dec edi  +
dec edi  +
cmp ebx edi +
jb loc_101124A  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+hKey] esi +
jnz loc_101129F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2288  +
push 8F0h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10113A2  +
cmp [ebp+lpSubKey] esi +
jnz loc_10112B8  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2289  +
push 8F1h  +
jmp loc_101128E  +
cmp [ebp+phkResult] esi +
jnz loc_10112D1  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2290  +
push 8F2h  +
jmp loc_101128E  +
push edi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+cbName] +
push eax  +
push [ebp+lpSubKey]  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
call ds:RegEnumKeyExW  +
mov edi eax +
mov eax 103h +
cmp edi eax +
jnz loc_10112FA  +
push eax  +
jmp loc_1011394  +
cmp edi esi +
jz loc_1011335  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011326  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1011326  +
push edi  +
push offset nullsub_1  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
cmp eax esi +
jz loc_1011393  +
push edi  +
push offset aRegenumkeyex  +
jmp loc_1011385  +
push [ebp+phkResult]  +
push 20119h  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
mov edi eax +
cmp edi esi +
jz loc_101139E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011378  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1011378  +
push edi  +
push offset nullsub_1  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
cmp eax esi +
jz loc_1011393  +
push edi  +
push offset aRegopenkeyex  +
mov ecx [eax] +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push edi  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10113A1  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_4] 0 +
jnz loc_10113D8  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1488  +
push 5D0h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp locret_1011431  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10113DE  +
sub eax edx +
sar eax 1 +
jnz loc_101141B  +
mov eax [ebp+arg_0] +
push esi  +
mov esi 80338041h +
test eax eax +
jz loc_101140F  +
mov ecx [eax] +
push offset aTransport  +
push 4033C382h  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
jmp locret_1011431  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_1011425  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1010FBA  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_1011452  +
push eax  +
push esi  +
call sub_100B3FF  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_101143A  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_10114C9  +
push eax  +
push ecx  +
call sub_101F5DD  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_101150C  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a170  +
push 0AAh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov edi [ebp+8] +
push 3  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_1021255  +
mov esi eax +
test esi esi +
jnz loc_101154C  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011502  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011502  +
push dword ptr [ebp+0Ch]  +
push offset nullsub_1  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
jmp loc_1011502  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011576  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011576  +
push dword ptr [ebp+0Ch]  +
push offset nullsub_1  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test byte ptr [esi+0Ch] 2 +
jnz loc_101159E  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a185  +
push 0B9h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
mov eax esi +
jmp loc_1011504  +
push 0  +
push edi  +
call sub_1020F03  +
push eax  +
lea ecx [ebp+8] +
call sub_100FEC0  +
and dword ptr [ebp-4] 0 +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_10115CB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_10114A6  +
jmp loc_1011502  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [esi]  +
push edi  +
call sub_1020487  +
xor esi esi +
test eax eax +
jnz loc_10115EE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_10114A6  +
jmp loc_1011597  +
inc esi  +
jmp loc_10115E0  +
***
call __EH_prolog3  +
xor edi edi +
cmp [ebp+8] edi +
jnz loc_101162A  +
push edi  +
push 54Fh  +
push offset a1117  +
push 45Dh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1011777  +
mov esi [ebp+10h] +
cmp esi edi +
jnz loc_1011645  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1118  +
push 45Eh  +
jmp loc_1011619  +
mov ebx [ebp+14h] +
cmp ebx edi +
jnz loc_1011660  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1119  +
push 45Fh  +
jmp loc_1011619  +
mov eax [ebp+0Ch] +
sub eax 0BBAh +
jz loc_10116BF  +
dec eax  +
jz loc_10116A8  +
dec eax  +
jz loc_1011691  +
dec eax  +
jz loc_101168A  +
dec eax  +
jz loc_10116A8  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1164  +
push 48Ch  +
jmp loc_1011619  +
push offset aWsman_0  +
jmp loc_10116AD  +
push 1  +
push offset aLu  +
push 400h  +
push ebx  +
call sub_100B64F  +
add esp 10h +
jmp loc_10116B8  +
push offset dword_1001C58  +
push 400h  +
push ebx  +
call sub_100B5BB  +
mov esi eax +
jmp loc_1011759  +
call sub_101CB4D  +
push eax  +
lea ecx [ebp+10h] +
call sub_100FEC0  +
mov [ebp-4] edi +
mov ecx [ebp+10h] +
cmp ecx edi +
jnz loc_1011713  +
call ds:GetLastError  +
cmp eax edi +
jle loc_10116EB  +
and eax 0FFFFh +
or eax 80070000h +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
push offset aGetdefaultvalu  +
push 4033C360h  +
push ecx  +
call dword ptr [edx+28h]  +
add esp 10h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_10114A6  +
jmp loc_1011623  +
push edi  +
lea eax [ebp+14h] +
push eax  +
xor eax eax +
cmp [esi+10h] edi +
mov [ebp+14h] edi +
setnz al  +
add eax 7E0h +
push eax  +
push dword ptr [ebp+8]  +
call sub_101CDDF  +
cmp eax edi +
jz loc_1011702  +
push dword ptr [ebp+14h]  +
push offset aLu  +
push 400h  +
push ebx  +
call sub_100B64F  +
add esp 10h +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_10114A6  +
cmp esi edi +
jz loc_1011774  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push offset aGetdefaultvalu  +
push 4033C362h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
xor ebx ebx +
mov [ebp-54h] eax +
mov [ebp-50h] ecx +
cmp eax ebx +
jnz loc_10117C9  +
push edi  +
push 54Fh  +
push offset a1838  +
push 72Eh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call sub_100A18B  +
retn 0Ch  +
cmp ecx ebx +
jnz loc_10117DF  +
push edi  +
push 54Fh  +
push offset a1839  +
push 72Fh  +
jmp loc_10117B5  +
mov [ebp-44h] ebx +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov [ebp-48h] ebx +
call sub_1025149  +
mov esi eax +
cmp esi 6Fh +
jz loc_101182D  +
cmp edi ebx +
jz loc_1011818  +
mov eax [edi] +
push esi  +
push offset aGetadaptersadd  +
push 4033C360h  +
push edi  +
call dword ptr [eax+28h]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-44h] +
call sub_100C51B  +
jmp loc_10117BF  +
push ebx  +
lea eax [ebp-49h] +
push eax  +
push dword ptr [ebp-48h]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-44h] +
call sub_101424F  +
mov esi [ebp-44h] +
cmp esi ebx +
jnz loc_1011859  +
cmp edi ebx +
jz loc_1011855  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
push 0Eh  +
jmp loc_1011819  +
lea eax [ebp-48h] +
push eax  +
push esi  +
push ebx  +
push 0Ch  +
push ebx  +
call sub_1025149  +
mov [ebp-58h] eax +
cmp eax ebx +
jz loc_101188B  +
cmp edi ebx +
jz loc_1011886  +
mov ecx [edi] +
push eax  +
push offset aGetadaptersadd  +
push 4033C360h  +
push edi  +
call dword ptr [ecx+28h]  +
add esp 10h +
push dword ptr [ebp-58h]  +
jmp loc_1011819  +
mov eax [ebp-50h] +
mov [eax] ebx +
jmp loc_10118C1  +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_10118BE  +
lea ecx [ebp-40h] +
push ecx  +
push eax  +
lea eax [esi+2Ch] +
push eax  +
call sub_100C0D7  +
test eax eax +
jz loc_10118C7  +
push dword ptr [ebp-54h]  +
lea eax [ebp-40h] +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10118EE  +
mov esi [esi+8] +
cmp esi ebx +
jnz loc_1011892  +
jmp loc_1011927  +
call ds:GetLastError  +
cmp edi ebx +
jz loc_101181F  +
mov ecx [edi] +
push eax  +
push offset aConvertphysica  +
push 4033C360h  +
push edi  +
call dword ptr [ecx+28h]  +
add esp 10h +
jmp loc_101181F  +
cmp [esi+10h] ebx +
jnz loc_101191E  +
mov esi 8033807Ch +
cmp edi ebx +
jz loc_1011904  +
mov eax [edi] +
push esi  +
mov ecx edi +
call dword ptr [eax+20h]  +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-44h] +
call sub_100C51B  +
mov eax ebx +
jmp loc_10117C1  +
mov eax [ebp-50h] +
mov dword ptr [eax] 1 +
xor ebx ebx +
inc ebx  +
jmp loc_101190B  +
***
call __EH_prolog3  +
mov edi [ebp+10h] +
xor esi esi +
cmp edi esi +
jnz loc_101196A  +
push esi  +
push 54Fh  +
push offset a887  +
push 377h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011991  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011991  +
push offset nullsub_1  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 2  +
pop edx  +
xor ecx ecx +
mov eax 100h +
mov [ebp-14h] eax +
mul  edx +
seto cl  +
push esi  +
neg ecx  +
or eax ecx +
lea ecx [ebp+13h] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov [ebp-4] esi +
cmp [ebp-10h] esi +
jnz loc_10119D9  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_1011960  +
push esi  +
push esi  +
push esi  +
push esi  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:RegEnumKeyExW  +
mov ecx 103h +
cmp eax ecx +
jnz loc_10119FC  +
push ecx  +
jmp loc_10119C5  +
cmp eax esi +
jz loc_1011A1A  +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
mov eax esi +
jmp loc_1011962  +
mov eax [ebp-10h] +
mov [edi+8] eax +
xor eax eax +
inc eax  +
mov [ebp-10h] esi +
mov [edi+0Ch] eax +
mov esi eax +
jmp loc_1011A07  +
***
call __EH_prolog3  +
xor esi esi +
cmp [ebp+8] esi +
jnz loc_1011A69  +
push esi  +
push 54Fh  +
push offset a929  +
push 3A1h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_1011A92  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011A92  +
push offset nullsub_1  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov [ebp-14h] esi +
mov dword ptr [ebp-4] 1 +
mov esi [ebp+10h] +
lea eax [ebp-14h] +
push eax  +
lea ebx [esi+10h] +
push ebx  +
push 100h  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push 0  +
call sub_101126F  +
test eax eax +
jnz loc_1011B02  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_1011AEA  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011AEA  +
push esi  +
push offset nullsub_1  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C353  +
jmp loc_1011A5F  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1011B27  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011B27  +
push ebx  +
push offset nullsub_1  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
and dword ptr [ebp-18h] 0 +
push 0  +
lea eax [ebp+0Bh] +
push eax  +
mov edi 800h +
push edi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov byte ptr [ebp-4] 2 +
xor ebx ebx +
cmp [ebp-10h] ebx +
jnz loc_1011B66  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_1011AF1  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-10h]  +
lea eax [ebp-18h] +
push edi  +
push eax  +
push offset aUri  +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1010805  +
cmp eax ebx +
jz loc_1011BB0  +
push 80338005h  +
call ds:SetLastError  +
xor esi esi +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C353  +
mov eax esi +
jmp loc_1011A61  +
mov eax [ebp-10h] +
mov [esi+8] eax +
xor eax eax +
inc eax  +
mov [esi+0Ch] eax +
mov [ebp-10h] ebx +
mov esi eax +
jmp loc_1011B91  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_1011784  +
test eax eax +
jz loc_1011C0E  +
cmp [ebp+var_4] 0 +
jnz loc_1011C0B  +
push edi  +
mov edi 8033807Bh +
test esi esi +
jz loc_1011BFF  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+20h]  +
push edi  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
jmp loc_1011C0E  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov edx [ebp+8] +
xor ebx ebx +
cmp edx ebx +
jnz loc_1011C4C  +
push ebx  +
push 54Fh  +
push offset a1639  +
push 667h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
jmp loc_1011EDB  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1011C51  +
sub eax esi +
sar eax 1 +
jz loc_1011ED0  +
movzx eax word ptr [edx] +
cmp ax 20h +
jz loc_1011ED0  +
cmp ax 9 +
jz loc_1011ED0  +
mov edi ds:ExpandEnvironmentStringsW +
push ebx  +
push ebx  +
push edx  +
call edi  +
mov esi eax +
cmp esi ebx +
jz loc_1011EDB  +
push 2  +
pop edx  +
xor ecx ecx +
mul  edx +
seto cl  +
push ebx  +
neg ecx  +
or eax ecx +
lea ecx [ebp-0Dh] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-14h] +
call sub_100C374  +
mov [ebp-4] ebx +
cmp [ebp-14h] ebx +
jnz loc_1011CD4  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C51B  +
jmp loc_1011EDB  +
push esi  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+8]  +
call edi  +
cmp eax ebx +
jz loc_1011CC3  +
push 2  +
pop edx  +
xor ecx ecx +
mov eax esi +
mul  edx +
seto cl  +
push ebx  +
neg ecx  +
or eax ecx +
lea ecx [ebp+0Bh] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-18h] +
call sub_100C374  +
mov byte ptr [ebp-4] 1 +
cmp [ebp-18h] ebx +
jnz loc_1011D23  +
push 0Eh  +
call ds:SetLastError  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call sub_100C51B  +
jmp loc_1011CC3  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-18h]  +
mov [ebp-20h] ebx +
push esi  +
push dword ptr [ebp-14h]  +
call ds:GetFullPathNameW  +
cmp eax ebx +
jnz loc_1011D4C  +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1011D16  +
mov eax [ebp-14h] +
mov [ebp-14h] ebx +
mov [ecx] eax +
jmp loc_1011D16  +
dec esi  +
cmp eax esi +
jnz loc_1011EC0  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-14h]  +
call sub_100AC10  +
test eax eax +
jz loc_1011EC0  +
cmp [ebp+14h] ebx +
jz loc_1011DB4  +
push 25h  +
push dword ptr [ebp-18h]  +
call sub_10110C5  +
test eax eax +
jnz loc_1011DB4  +
push 26h  +
push dword ptr [ebp-18h]  +
call sub_10110C5  +
test eax eax +
jnz loc_1011DB4  +
push 80338191h  +
call ds:SetLastError  +
xor esi esi +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C51B  +
mov eax esi +
jmp loc_1011EDD  +
mov esi [ebp-18h] +
cmp [ebp+10h] ebx +
jz loc_1011DD6  +
push ebx  +
push 54Fh  +
push offset a1766  +
push 6E6h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 3 +
push ebx  +
push 80h  +
push 3  +
push ebx  +
push 7  +
mov edi 80000000h +
push edi  +
push esi  +
mov esi ds:CreateFileW +
call esi  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_101143A  +
cmp dword ptr [ebp-1Ch] 0FFFFFFFFh +
jnz loc_1011E98  +
call ds:GetLastError  +
cmp eax 20h +
jnz loc_1011E29  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100B8F6  +
xor esi esi +
inc esi  +
jmp loc_1011D96  +
cmp eax 2 +
jz loc_1011E6D  +
cmp eax 3 +
jz loc_1011E6D  +
cmp eax 7Bh +
jnz loc_1011E3F  +
push 80338191h  +
jmp loc_1011E72  +
cmp eax 5 +
jnz loc_1011E66  +
push ebx  +
push 2000000h  +
push 3  +
push ebx  +
push 7  +
push edi  +
push dword ptr [ebp-18h]  +
call esi  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_101143A  +
cmp dword ptr [ebp-1Ch] 0FFFFFFFFh +
jz loc_1011E78  +
jmp loc_1011E38  +
push 54Fh  +
jmp loc_1011E72  +
push 80338192h  +
call ds:SetLastError  +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_1011E87  +
mov eax [ebp-14h] +
mov [ebp-14h] ebx +
mov [ecx] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100B8F6  +
jmp loc_1011D94  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100B8F6  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C51B  +
xor eax eax +
inc eax  +
jmp loc_1011EDD  +
push 80338191h  +
call ds:SetLastError  +
jmp loc_1011D3B  +
push 80338191h  +
call ds:SetLastError  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
xor ebx ebx +
cmp [ebp+8] ebx +
jnz loc_1011F21  +
push ebx  +
push 54Fh  +
push offset a2346  +
push 92Ah  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov edi [ebp+10h] +
cmp edi ebx +
jnz loc_1011F3A  +
push ebx  +
push 54Fh  +
push offset a2347  +
push 92Bh  +
jmp loc_1011F0D  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011F61  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011F61  +
push offset nullsub_1  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov [ebp+10h] ebx +
mov dword ptr [ebp-4] 1 +
lea eax [ebp+10h] +
push eax  +
lea esi [edi+18h] +
push esi  +
push 100h  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_101126F  +
cmp eax ebx +
jnz loc_1011FCC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011FBB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011FBB  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset nullsub_1  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_100C353  +
jmp loc_1011F17  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1011FF4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1011FF4  +
push esi  +
push offset nullsub_1  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push ebx  +
lea eax [ebp+0Bh] +
push eax  +
mov esi 800h +
push esi  +
mov [ebp-1Ch] ebx +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov byte ptr [ebp-4] 2 +
cmp [ebp-10h] ebx +
jnz loc_101202F  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_1011FBB  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-10h]  +
lea eax [ebp-1Ch] +
push esi  +
push eax  +
push offset aUri  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1010805  +
cmp eax ebx +
jz loc_1012054  +
push 80338005h  +
jmp loc_101201B  +
push ebx  +
lea eax [ebp+0Bh] +
push eax  +
push esi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-14h] +
call sub_100C374  +
mov byte ptr [ebp-4] 3 +
cmp [ebp-14h] ebx +
jnz loc_1012087  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C51B  +
jmp loc_1012021  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-14h]  +
lea eax [ebp-1Ch] +
push esi  +
push eax  +
push offset aSubject  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1010805  +
cmp eax ebx +
jz loc_10120AC  +
push 80338005h  +
jmp loc_1012073  +
push ebx  +
lea eax [ebp+0Bh] +
push eax  +
push esi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-18h] +
call sub_100C374  +
mov byte ptr [ebp-4] 4 +
cmp [ebp-18h] ebx +
jnz loc_10120DF  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-18h] +
call sub_100C51B  +
jmp loc_1012079  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-18h]  +
lea eax [ebp-1Ch] +
push esi  +
push eax  +
push offset aThumbprint  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1010805  +
cmp eax ebx +
jz loc_101213F  +
push 80338005h  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 3 +
lea ecx [ebp-18h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-10h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_100C353  +
mov eax ebx +
jmp loc_1011F19  +
mov eax [ebp-18h] +
mov [edi+10h] eax +
mov eax [ebp-14h] +
mov [edi+0Ch] eax +
mov eax [ebp-10h] +
mov [edi+8] eax +
xor eax eax +
inc eax  +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
mov [edi+14h] eax +
mov ebx eax +
jmp loc_1012108  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1012199  +
push [ebp+arg_8]  +
push 54Fh  +
push offset a1406  +
push 57Eh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101238D  +
push ebx  +
mov ebx [edi+0Ch] +
test ebx ebx +
jnz loc_10121B5  +
push [ebp+arg_8]  +
push 54Fh  +
push offset a1407  +
push 57Fh  +
jmp loc_10121D1  +
mov eax [edi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_10121E2  +
push [ebp+arg_8]  +
push 54Fh  +
push offset a1408  +
push 580h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101238C  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_101220B  +
push [ebp+arg_8]  +
push 54Fh  +
push offset a1409  +
push 581h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
jmp loc_1012389  +
mov ecx offset asc_1003674 +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1012238  +
test dx dx +
jz loc_1012234  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1012238  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1012212  +
xor eax eax +
jmp loc_101223D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_101226E  +
inc eax  +
cmp [ebp+arg_0] eax +
jz loc_101225D  +
mov eax [ebp+arg_8] +
mov esi 80338089h +
test eax eax +
jz loc_1012382  +
push ebx  +
jmp loc_1012373  +
push 2Ah  +
pop ecx  +
mov [esi] cx +
xor ecx ecx +
mov [esi+2] cx +
jmp loc_101238B  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012273  +
sub eax edx +
sar eax 1 +
mov esi eax +
cmp esi 400h +
jb loc_10122A2  +
push [ebp+arg_8]  +
push 54Fh  +
push offset a1433  +
push 599h  +
jmp loc_10121FC  +
cmp [ebp+arg_0] 2 +
jnz loc_10122B9  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ebx  +
call sub_100BA73  +
jmp loc_101238B  +
cmp [ebp+arg_0] 3 +
jnz loc_101233D  +
push ebx  +
mov ebx [ebp+arg_8] +
push ebx  +
call sub_1011BC8  +
test eax eax +
jz loc_1012389  +
push dword ptr [edi+0Ch]  +
inc esi  +
push esi  +
push [ebp+arg_4]  +
call sub_100B5BB  +
mov esi eax +
test esi esi +
jge loc_1012338  +
and eax 1FFF0000h +
movzx edi si +
cmp eax 70000h +
jz loc_10122F5  +
mov edi esi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101231D  +
test dword ptr [eax+1Ch] 800h +
jz loc_101231D  +
push edi  +
push offset nullsub_1  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test ebx ebx +
jz loc_1012335  +
mov eax [ebx] +
push esi  +
push offset aStringcchcopy  +
push 4033C362h  +
push ebx  +
call dword ptr [eax+28h]  +
add esp 10h +
push edi  +
jmp loc_1012383  +
xor eax eax +
inc eax  +
jmp loc_101238B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012364  +
test dword ptr [eax+1Ch] 800h +
jz loc_1012364  +
push offset nullsub_1  +
push 37h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_8] +
mov esi 80338089h +
test eax eax +
jz loc_1012382  +
push dword ptr [edi+0Ch]  +
mov ecx [eax] +
push 4033C3FCh  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jz loc_101250B  +
xor eax eax +
cmp ax [esi] +
jz loc_101250B  +
cmp [ebp+0Ch] edi +
jnz loc_10123D7  +
push dword ptr [ebp+14h]  +
push 54Fh  +
push offset a1351  +
push 547h  +
jmp loc_101251D  +
cmp [ebp+10h] edi +
jnz loc_10123F3  +
push dword ptr [ebp+14h]  +
push 54Fh  +
push offset a1352  +
push 548h  +
jmp loc_101251D  +
lea ecx [ebp-24h] +
call sub_100FDDB  +
mov [ebp-4] edi +
mov ecx offset asc_1003674 +
mov eax esi +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101242B  +
cmp dx di +
jz loc_1012427  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101242B  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_1012405  +
xor eax eax +
jmp loc_1012430  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jnz loc_1012440  +
mov [ebp-18h] esi +
mov dword ptr [ebp-1Ch] 1 +
jmp loc_10124AB  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_1012445  +
mov esi ds:_wcsnicmp +
sub eax edx +
sar eax 1 +
mov edi eax +
cmp edi 3 +
jbe loc_1012485  +
push 3  +
push offset aIp  +
push dword ptr [ebp+8]  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_1012485  +
mov eax [ebp+8] +
add eax 6 +
mov [ebp-18h] eax +
mov dword ptr [ebp-1Ch] 2 +
jmp loc_10124AB  +
cmp edi 4 +
jbe loc_10124D8  +
mov edi [ebp+8] +
push 4  +
push offset aMac  +
push edi  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_10124D8  +
add edi 8 +
mov [ebp-18h] edi +
mov dword ptr [ebp-1Ch] 3 +
push dword ptr [ebp+14h]  +
lea eax [ebp-24h] +
push dword ptr [ebp+10h]  +
push eax  +
call sub_1012169  +
mov esi eax +
test esi esi +
jz loc_10124C8  +
mov eax [ebp-1Ch] +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100FE23  +
mov eax esi +
jmp loc_1012529  +
mov eax [ebp+14h] +
mov esi 80338089h +
test eax eax +
jz loc_10124F6  +
push dword ptr [ebp+8]  +
mov ecx [eax] +
push 4033C3FCh  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_100FE23  +
jmp loc_1012527  +
push dword ptr [ebp+14h]  +
push 54Fh  +
push offset a1350  +
push 546h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80Ch +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_80C] eax +
test eax eax +
jnz loc_1012585  +
push ebx  +
push 54Fh  +
push offset a977  +
push 3D1h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101279C  +
test edi edi +
jnz loc_101259B  +
push ebx  +
push 54Fh  +
push offset a978  +
push 3D2h  +
jmp loc_1012574  +
test esi esi +
jnz loc_10125B1  +
push ebx  +
push 54Fh  +
push offset a979  +
push 3D3h  +
jmp loc_1012574  +
or [ebp+var_808] 0FFFFFFFFh +
lea eax [ebp+var_808] +
push eax  +
push edi  +
push 0  +
call sub_10113AC  +
test eax eax +
jnz loc_1012625  +
call ds:GetLastError  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_10125FB  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_10125FB  +
push eax  +
push offset nullsub_1  +
push 2Ch  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov esi 80338005h +
test ebx ebx +
jz loc_1012619  +
mov eax [ebx] +
push offset aHttpsHttp  +
push edi  +
push 4033C3B1h  +
push esi  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 14h +
push esi  +
call ds:SetLastError  +
jmp loc_101257E  +
mov eax [ebp+var_808] +
push 0  +
mov [esi+10h] eax +
lea eax [ebp+var_804] +
push eax  +
lea edi [esi+8] +
push edi  +
push [ebp+var_80C]  +
call sub_1012397  +
test eax eax +
jnz loc_101269D  +
call ds:GetLastError  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101267A  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101267A  +
push eax  +
push offset nullsub_1  +
push 2Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov esi 80338005h +
test ebx ebx +
jz loc_1012619  +
push [ebp+var_80C]  +
mov eax [ebx] +
push 4033C3FCh  +
push esi  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
jmp loc_1012619  +
lea eax [ebp+var_808] +
push eax  +
push dword ptr [edi]  +
push ebx  +
call sub_101116D  +
test eax eax +
jnz loc_10126ED  +
call ds:GetLastError  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101257E  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101257E  +
push eax  +
push offset nullsub_1  +
push 2Eh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
jmp loc_101257E  +
lea eax [ebp+var_804] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10126F6  +
sub eax edx +
sar eax 1 +
mov edx eax +
mov eax [ebp+var_80C] +
lea ecx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
test di di +
jnz loc_101270F  +
sub eax ecx +
mov ecx [ebp+var_808] +
sar eax 1 +
add edx ecx +
cmp edx eax +
jz loc_101273F  +
push 0  +
push 54Fh  +
push offset a1029  +
push 405h  +
jmp loc_1012574  +
mov edi [ebp+var_80C] +
lea eax [edi+ecx*2] +
lea ecx [ebp+var_804] +
push ecx  +
push eax  +
mov [esi+0Ch] eax +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1012799  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012786  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1012786  +
push offset nullsub_1  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov esi 80338005h +
test ebx ebx +
jz loc_1012619  +
push edi  +
jmp loc_1012689  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+hKey] edi +
jnz loc_10127E0  +
push edi  +
push 54Fh  +
push offset a1064  +
push 428h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1012877  +
cmp [ebp+lpName] edi +
jnz loc_10127F7  +
push edi  +
push 54Fh  +
push offset a1065  +
push 429h  +
jmp loc_10127CF  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jnz loc_1012811  +
push edi  +
push 54Fh  +
push offset a1066  +
push 42Ah  +
jmp loc_1012826  +
cmp [ebp+arg_10] edi +
jnz loc_1012832  +
push edi  +
push 54Fh  +
push offset a1067  +
push 42Bh  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
jmp loc_101286F  +
push esi  +
push [ebp+lpName]  +
push 100h  +
push [ebp+dwIndex]  +
push [ebp+hKey]  +
push edi  +
call sub_1010D13  +
test eax eax +
jz loc_101286F  +
mov eax [esi] +
push [ebp+arg_10]  +
xor ecx ecx +
mov [eax] cx +
mov eax [esi] +
inc eax  +
inc eax  +
push eax  +
push [ebp+lpName]  +
push edi  +
call sub_1012536  +
test eax eax +
jnz loc_1012873  +
mov eax [esi] +
push 2Bh  +
pop ecx  +
mov [eax] cx +
xor eax eax +
jmp loc_1012876  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
call __EH_prolog3_GS  +
mov esi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx [ebp+10h] +
mov [ebp-0F0h] esi +
mov esi [ebp+18h] +
mov [ebp-0F8h] esi +
lea esi [ebp+20h] +
lea edi [ebp-58h] +
movs   +
movs   +
movs   +
xor ebx ebx +
mov [ebp-0E0h] eax +
mov [ebp-0E8h] ecx +
mov [ebp-0ECh] edx +
movs   +
cmp eax ebx +
jnz loc_10128F1  +
push ebx  +
push 54Fh  +
push offset a1186  +
push 4A2h  +
push offset aDW7rtmAdminW_8  +
call sub_100A7B1  +
xor eax eax +
call sub_100A18B  +
retn 28h  +
cmp ecx ebx +
jnz loc_1012907  +
push eax  +
push 54Fh  +
push offset a1187  +
push 4A3h  +
jmp loc_10128DD  +
cmp edx ebx +
jnz loc_101291D  +
push eax  +
push 54Fh  +
push offset a1188  +
push 4A4h  +
jmp loc_10128DD  +
cmp [ebp-0F0h] ebx +
jnz loc_1012937  +
push eax  +
push 54Fh  +
push offset a1189  +
push 4A5h  +
jmp loc_10128DD  +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_1012968  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012968  +
push dword ptr [ebp-0F0h]  +
push edx  +
push ecx  +
push offset nullsub_1  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FF52  +
push 38h  +
lea eax [ebp-48h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [ebp-0E0h]  +
lea eax [ebp-0D8h] +
push eax  +
push dword ptr [ebp-0ECh]  +
push dword ptr [ebp-0E8h]  +
call sub_100BDB0  +
mov [ebp-0DCh] eax +
cmp eax ebx +
jz loc_1012A07  +
push ebx  +
lea eax [ebp-0D8h] +
push 38h  +
mov [ebp-48h] eax +
lea eax [ebp-48h] +
push eax  +
push 1  +
push ebx  +
call ds:HttpDeleteServiceConfiguration  +
mov esi eax +
cmp esi ebx +
jz loc_10129F4  +
cmp esi 2 +
jz loc_10129F4  +
mov eax off_102B00C +
cmp eax edi +
jz loc_10129F4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10129F4  +
push esi  +
push dword ptr [ebp-0ECh]  +
push dword ptr [ebp-0E8h]  +
push offset nullsub_1  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101006F  +
mov eax [ebp-0F8h] +
cmp eax ebx +
jz loc_1012A07  +
xor ecx ecx +
cmp esi ebx +
setz cl  +
mov [eax] ecx +
push dword ptr [ebp-0F0h]  +
push dword ptr [ebp-0E0h]  +
call sub_100DEEB  +
push eax  +
lea ecx [ebp-0E4h] +
call sub_100C374  +
mov [ebp-4] ebx +
cmp [ebp-0E4h] ebx +
jnz loc_1012A45  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E4h] +
call sub_100DE47  +
mov eax ebx +
jmp loc_10128E9  +
mov [ebp-0F4h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp-0DCh] ebx +
jz loc_1012B2F  +
cmp [ebp+1Ch] ebx +
jz loc_1012A9A  +
push ebx  +
push ebx  +
push offset a1_3_6_1_5_5_7_  +
push dword ptr [ebp-0E4h]  +
push 20000h  +
push dword ptr [ebp-0E0h]  +
call sub_100D77F  +
push eax  +
lea ecx [ebp-0F4h] +
call sub_100B922  +
xor eax eax +
cmp [ebp-0F4h] ebx +
setnz al  +
mov [ebp-0DCh] eax +
cmp [ebp-0DCh] ebx +
jz loc_1012B2F  +
mov eax [ebp-0E4h] +
mov ecx [eax] +
mov [ebp-44h] ecx +
mov eax [eax+4] +
mov [ebp-40h] eax +
lea esi [ebp-58h] +
lea edi [ebp-3Ch] +
movs   +
movs   +
push ebx  +
push 38h  +
movs   +
lea eax [ebp-48h] +
push eax  +
push 1  +
movs   +
push ebx  +
mov [ebp-14h] ebx +
call ds:HttpSetServiceConfiguration  +
mov esi eax +
cmp esi ebx +
jz loc_1012B2F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012B0E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012B0E  +
push esi  +
push dword ptr [ebp-0ECh]  +
push dword ptr [ebp-0E8h]  +
push offset nullsub_1  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101006F  +
mov eax [ebp-0E0h] +
mov ecx [eax] +
push esi  +
push offset aHttpsetservice  +
push 4033C360h  +
push esi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
mov [ebp-0DCh] ebx +
mov [ebp-4] bl +
lea ecx [ebp-0F4h] +
call sub_100B90C  +
mov ebx [ebp-0DCh] +
jmp loc_1012A2F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_1C] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1012B87  +
cmp word ptr [edx] 0 +
jnz loc_1012B6B  +
mov [ebp+arg_1C] 0Eh +
jmp loc_1012B8E  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012B70  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_1C] eax +
jmp loc_1012B8E  +
mov [ebp+arg_1C] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_1012BA4  +
cmp word ptr [edx] 0 +
jnz loc_1012BA6  +
mov edx offset aNull_0 +
jmp loc_1012BA6  +
mov edx ebx +
mov edi [ebp+arg_18] +
test edi edi +
jz loc_1012BD0  +
cmp word ptr [edi] 0 +
jnz loc_1012BB7  +
push 0Eh  +
jmp loc_1012BD2  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012BBC  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1012BD3  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1012BE8  +
cmp word ptr [edi] 0 +
jnz loc_1012BE4  +
mov eax offset aNull_0 +
jmp loc_1012BEA  +
mov eax edi +
jmp loc_1012BEA  +
mov eax ebx +
push 0  +
push [ebp+arg_1C]  +
push edx  +
push ecx  +
push eax  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 38h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_20] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1012C5B  +
cmp word ptr [edx] 0 +
jnz loc_1012C3F  +
mov [ebp+arg_20] 0Eh +
jmp loc_1012C62  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012C44  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_20] eax +
jmp loc_1012C62  +
mov [ebp+arg_20] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_1012C78  +
cmp word ptr [edx] 0 +
jnz loc_1012C7A  +
mov edx offset aNull_0 +
jmp loc_1012C7A  +
mov edx ebx +
mov edi [ebp+arg_1C] +
test edi edi +
jz loc_1012CA4  +
cmp word ptr [edi] 0 +
jnz loc_1012C8B  +
push 0Eh  +
jmp loc_1012CA6  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012C90  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1012CA7  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1012CBC  +
cmp word ptr [edi] 0 +
jnz loc_1012CB8  +
mov eax offset aNull_0 +
jmp loc_1012CBE  +
mov eax edi +
jmp loc_1012CBE  +
mov eax ebx +
push 0  +
push [ebp+arg_20]  +
push edx  +
push ecx  +
push eax  +
push 4  +
lea eax [ebp+arg_18] +
push eax  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 40h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_24] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_1012D35  +
cmp word ptr [edx] 0 +
jnz loc_1012D19  +
mov [ebp+arg_24] 0Eh +
jmp loc_1012D3C  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012D1E  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_24] eax +
jmp loc_1012D3C  +
mov [ebp+arg_24] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_1012D52  +
cmp word ptr [edx] 0 +
jnz loc_1012D54  +
mov edx offset aNull_0 +
jmp loc_1012D54  +
mov edx ebx +
mov edi [ebp+arg_20] +
test edi edi +
jz loc_1012D7E  +
cmp word ptr [edi] 0 +
jnz loc_1012D65  +
push 0Eh  +
jmp loc_1012D80  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1012D6A  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_1012D81  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_1012D96  +
cmp word ptr [edi] 0 +
jnz loc_1012D92  +
mov eax offset aNull_0 +
jmp loc_1012D98  +
mov eax edi +
jmp loc_1012D98  +
mov eax ebx +
push 0  +
push [ebp+arg_24]  +
push edx  +
push ecx  +
push eax  +
push 4  +
pop eax  +
push eax  +
lea ecx [ebp+arg_1C] +
push ecx  +
push eax  +
lea ecx [ebp+arg_18] +
push ecx  +
push eax  +
lea ecx [ebp+arg_14] +
push ecx  +
push eax  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 48h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1012E04  +
push 0  +
push 54Fh  +
push offset a3615  +
push 0E1Fh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1012E32  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012E2F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012E2F  +
push ecx  +
push offset dword_10045D4  +
push 86h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_1012E64  +
push esi  +
push 54Fh  +
push offset a4040  +
push 0FC8h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_1012EE2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012E8F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012E8F  +
push ecx  +
push offset dword_10045D4  +
push 92h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+arg_0] +
cmp ecx 5 +
jnz loc_1012EA0  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_1012EE2  +
mov eax 80338005h +
cmp ecx eax +
jnz loc_1012EB6  +
mov ecx [esi] +
push eax  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
jmp loc_1012EE2  +
mov eax 80338000h +
cmp ecx eax +
jnz loc_1012EC9  +
mov edx [esi] +
push eax  +
mov ecx esi +
call dword ptr [edx+20h]  +
jmp loc_1012EE2  +
mov eax [esi] +
push ecx  +
push offset aCconfigmanager  +
push 4033C360h  +
push 54Fh  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012F21  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012F21  +
push ebx  +
push offset dword_10045D4  +
push 93h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+arg_4] +
mov edx offset asc_1003674 +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_1012F4F  +
test ax ax +
jz loc_1012F4B  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_1012F4F  +
add ecx 4 +
add edx 4 +
test ax ax +
jnz loc_1012F29  +
xor eax eax +
jmp loc_1012F54  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
sub esp 10h +
mov esi offset dword_10013EC +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
test eax eax +
jnz loc_1012F80  +
cmp [ebx+248Ch] eax +
setz al  +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push offset a0_0_0_0  +
jmp loc_1012F98  +
xor eax eax +
cmp [ebx+248Ch] eax +
setz al  +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1012881  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1012FDC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1012FDC  +
push ecx  +
push offset dword_10045D4  +
push 94h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+arg_0] +
mov edx offset asc_1003674 +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_101300A  +
test ax ax +
jz loc_1013006  +
mov ax [ecx+2] +
cmp ax [edx+2] +
jnz loc_101300A  +
add ecx 4 +
add edx 4 +
test ax ax +
jnz loc_1012FE4  +
xor eax eax +
jmp loc_101300F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1013024  +
push [ebp+arg_4]  +
push offset a0_0_0_0  +
call sub_1010E6B  +
pop ebp  +
retn 8  +
pop ebp  +
jmp sub_1010E6B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101305F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101305F  +
push ecx  +
push offset dword_10045D4  +
push 95h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101308E  +
cmp [ebp+arg_4] 0 +
jz loc_101308E  +
mov ecx [eax+8] +
cmp ecx 1 +
jz loc_1013079  +
cmp ecx 3 +
jnz loc_1013083  +
push [ebp+arg_4]  +
push offset a0_0_0_0  +
jmp loc_1013089  +
push [ebp+arg_4]  +
push dword ptr [eax+0Ch]  +
call sub_1010E6B  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
mov dword ptr [esi] offset off_1003E80 +
mov [esi+4] eax +
mov [ebp-4] eax +
push 200h  +
push eax  +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [esi+14h] eax +
lea eax [esi+18h] +
push eax  +
mov dword ptr [esi] offset off_10046A8 +
mov dword ptr [esi+4] 2 +
call memset  +
add esp 0Ch +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10046A8 +
and dword ptr [ebp-4] 0 +
call sub_1019246  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003E80 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10130F2  +
test byte ptr [ebp+8] 1 +
jz loc_1013141  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
mov dword ptr [esi] offset off_1003E80 +
mov [esi+4] eax +
mov [ebp-4] eax +
push 200h  +
push eax  +
mov [esi+8] eax +
mov [esi+0Ch] eax +
lea eax [esi+10h] +
push eax  +
mov dword ptr [esi] offset off_10046C0 +
mov dword ptr [esi+4] 3 +
call memset  +
add esp 0Ch +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10046C0 +
and dword ptr [ebp-4] 0 +
call sub_1019282  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003E80 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10131A2  +
test byte ptr [ebp+8] 1 +
jz loc_10131F1  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
xor ecx ecx +
mov dword ptr [eax] offset off_1003E80 +
mov [eax+4] ecx +
mov [ebp-4] ecx +
mov dword ptr [eax] offset off_10046D8 +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax+4] 4 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10046D8 +
and dword ptr [ebp-4] 0 +
call sub_1019282  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003E80 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101323E  +
test byte ptr [ebp+8] 1 +
jz loc_101328D  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_10132F1  +
mov ebx 200000h +
test [eax+1Ch] ebx +
jz loc_10132D6  +
push edi  +
push offset dword_10045D4  +
push 54h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10132F1  +
test [eax+1Ch] ebx +
jz loc_10132F1  +
push offset dword_10045D4  +
push 55h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_1013319  +
push eax  +
push 54Fh  +
push offset a2184  +
push 888h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10133EC  +
mov [ebp+var_C] 1 +
mov [ebp+var_8] eax +
cmp [edi+2408h] eax +
jbe loc_10133E9  +
mov [ebp+var_4] eax +
jmp loc_1013336  +
xor eax eax +
mov esi [edi+240Ch] +
add esi [ebp+var_4] +
cmp [ebp+var_C] eax +
jz loc_10133E9  +
mov ecx [edi+2428h] +
push 0  +
mov [ebp+var_C] eax +
lea eax [ebp+var_C] +
push eax  +
lea ebx [esi+808h] +
push ebx  +
push 400h  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call sub_101E427  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_10133E9  +
lea eax [esi+8] +
push eax  +
push ebx  +
call sub_100AB8E  +
test eax eax +
jz loc_101339C  +
cmp dword ptr [esi+4] 1 +
jnz loc_10133D0  +
mov eax [esi] +
cmp eax 1774h +
jz loc_101339C  +
cmp eax 1773h +
jz loc_101339C  +
and dword ptr [esi+4] 0 +
cmp dword ptr [esi+4] 1 +
jnz loc_10133D0  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10133D0  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10133D0  +
lea ecx [esi+8] +
push ecx  +
push ebx  +
push dword ptr [esi]  +
push offset dword_10045D4  +
push 56h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add [ebp+var_4] 1008h +
cmp eax [edi+2408h] +
jb loc_1013334  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1013429  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013429  +
push esi  +
push offset dword_10045D4  +
push 62h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [esi+2408h] +
xor eax eax +
test ecx ecx +
jbe loc_101344F  +
mov esi [esi+240Ch] +
mov edx esi +
mov edi [edx] +
cmp edi [ebp+arg_0] +
jz loc_1013457  +
inc eax  +
add edx 1008h +
cmp eax ecx +
jb loc_101343D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
imul eax eax +
add eax esi +
jmp loc_1013451  +
***
call __EH_prolog3_GS  +
mov ebx ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov edi offset dword_10045D4 +
cmp eax esi +
jz loc_10134A2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10134A2  +
push ebx  +
push edi  +
push 65h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 1  +
lea ecx [ebp-834h] +
call sub_100E3AF  +
and dword ptr [ebp-4] 0 +
push 1773h  +
mov ecx ebx +
call sub_10133F8  +
test eax eax +
jnz loc_10134E5  +
lea eax [ebp-834h] +
push eax  +
push 54Fh  +
push offset a2646  +
push 0A56h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_101353D  +
add eax 8 +
push eax  +
push offset aMicrosoft_winr  +
lea eax [ebp-810h] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 10h +
test eax eax +
jz loc_101352A  +
mov ecx off_102B00C +
cmp ecx esi +
jz loc_101353D  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101353D  +
push eax  +
push edi  +
push 66h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
jmp loc_101353D  +
lea eax [ebp-810h] +
push eax  +
lea eax [ebp-834h] +
push eax  +
call sub_101BFBE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-834h] +
call sub_100E3A3  +
call sub_100A18B  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
test edi edi +
jnz loc_1013590  +
push edi  +
push 54Fh  +
push offset a3516  +
push 0DBCh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_10135A8  +
push edi  +
push 54Fh  +
push offset a3517  +
push 0DBDh  +
jmp loc_101357C  +
mov eax off_102B00C +
mov ebx offset dword_10045D4 +
cmp eax offset off_102B00C +
jz loc_10135D4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10135D4  +
push esi  +
push ebx  +
push 81h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea ecx [ebp-28h] +
call sub_100FDDB  +
and dword ptr [ebp-4] 0 +
mov ecx [esi+2428h] +
push edi  +
lea eax [ebp-28h] +
push eax  +
call sub_101F246  +
test eax eax +
jnz loc_1013614  +
call ds:GetLastError  +
push edi  +
push eax  +
mov ecx esi +
call sub_1012E3B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_100FE23  +
jmp loc_1013586  +
cmp dword ptr [ebp-20h] 0 +
jnz loc_1013636  +
push edi  +
push 54Fh  +
push offset a3530  +
push 0DCAh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_1013603  +
and dword ptr [ebp-10h] 0 +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-20h]  +
push edi  +
call sub_1018D02  +
test eax eax +
jz loc_1013603  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_1013663  +
push edi  +
push 54Fh  +
push offset a3540  +
push 0DD4h  +
jmp loc_101362A  +
and dword ptr [ebp+8] 0 +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp-18h]  +
push edi  +
call sub_1018CA7  +
test eax eax +
jz loc_1013603  +
cmp dword ptr [ebp+8] 0 +
jnz loc_1013690  +
push edi  +
push 54Fh  +
push offset a3550  +
push 0DDEh  +
jmp loc_101362A  +
push dword ptr [ebp+8]  +
add esi 0C00h +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-10h]  +
push esi  +
push offset aSSSS  +
push 200h  +
push dword ptr [ebp+0Ch]  +
call sub_100B64F  +
mov esi eax +
add esp 1Ch +
test esi esi +
jz loc_1013710  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10136E2  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10136E2  +
push esi  +
push ebx  +
push 82h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [edi] +
push esi  +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_100FE23  +
mov eax esi +
jmp loc_1013588  +
xor esi esi +
inc esi  +
jmp loc_10136FD  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_58] ecx +
mov ecx [ebp+arg_4] +
mov [ebp+var_54] eax +
mov [ebp+var_5C] ecx +
test eax eax +
jnz loc_1013760  +
push eax  +
push 54Fh  +
push offset a3577  +
push 0DF9h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101383F  +
test ecx ecx +
jnz loc_1013776  +
push eax  +
push 54Fh  +
push offset a3578  +
push 0DFAh  +
jmp loc_101374F  +
mov eax off_102B00C +
push ebx  +
push esi  +
push edi  +
mov edi offset off_102B00C +
mov ebx 200000h +
mov esi offset dword_10045D4 +
cmp eax edi +
jz loc_10137AA  +
test [eax+1Ch] ebx +
jz loc_10137AA  +
push [ebp+var_58]  +
push esi  +
push 83h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [ebp+var_50] +
push eax  +
call sub_100BA35  +
mov eax off_102B00C +
cmp eax edi +
jz loc_10137D9  +
test [eax+1Ch] ebx +
jz loc_10137D9  +
lea ecx [ebp+var_50] +
push ecx  +
push [ebp+var_58]  +
push esi  +
push 84h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
lea eax [ebp+var_50] +
push eax  +
push 100h  +
push [ebp+var_5C]  +
call sub_100B5BB  +
mov ebx eax +
test ebx ebx +
jz loc_1013832  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1013814  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1013814  +
push ebx  +
push esi  +
push 85h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi [ebp+var_54] +
mov eax [esi] +
push ebx  +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_1013835  +
mov esi [ebp+var_54] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov ebx ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1013889  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013889  +
push ebx  +
push offset dword_10045D4  +
push 88h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor edi edi +
cmp [ebp+arg_0] edi +
jnz loc_10138B1  +
push edi  +
push 54Fh  +
push offset a3774  +
push 0EBEh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1013ABF  +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_10138CC  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3775  +
push 0EBFh  +
jmp loc_10138A0  +
mov eax [eax+8] +
push esi  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_10138E0  +
mov [ebp+var_1] 0 +
cmp eax 3 +
jnz loc_10138E4  +
mov [ebp+var_1] 1 +
mov [ebp+var_C] edi +
cmp [ebx+2408h] edi +
jbe loc_1013ABC  +
mov [ebp+var_8] edi +
cmp esi edi +
jz loc_1013ABC  +
mov eax [ebx+240Ch] +
mov ecx [ebp+var_8] +
add ecx eax +
cmp [ecx+4] edi +
jz loc_1013AA3  +
mov edx [ecx] +
cmp edx 0BBBh +
jnz loc_1013999  +
cmp [ebx+248Ch] edi +
jnz loc_1013AA3  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+10h] 1 +
jnz loc_1013AA3  +
lea edi [ecx+8] +
push edi  +
add ecx 808h +
push ecx  +
call sub_100AB8E  +
test eax eax +
jnz loc_1013AA1  +
mov eax [ebx+240Ch] +
cmp dword ptr [eax+2014h] 0 +
lea edx [eax+2818h] +
jz loc_1013968  +
lea edx [eax+2018h] +
cmp dword ptr [eax+4024h] 0 +
lea ecx [eax+4828h] +
jz loc_101397D  +
lea ecx [eax+4028h] +
cmp [ebp+var_1] 0 +
jz loc_101398A  +
mov eax offset a0_0_0_0 +
jmp loc_1013990  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
push ecx  +
push eax  +
push edi  +
push edx  +
jmp loc_1013A95  +
cmp edx 0BB9h +
jnz loc_10139B5  +
push edi  +
add ecx 8 +
push ecx  +
push [ebp+arg_0]  +
call sub_10113AC  +
mov esi eax +
jmp loc_1013AA3  +
cmp edx 0BBEh +
jnz loc_1013A41  +
mov edx [ebp+arg_4] +
cmp [edx+10h] edi +
jnz loc_10139F7  +
lea eax [ecx+8] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10139CF  +
sub eax edx +
sar eax 1 +
jz loc_1013AA3  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 803380EBh  +
call dword ptr [eax+20h]  +
xor esi esi +
jmp loc_1013AA3  +
cmp [ebx+248Ch] edi +
jnz loc_1013AA3  +
lea esi [eax+4828h] +
cmp [eax+4024h] edi +
jz loc_1013A17  +
lea esi [eax+4028h] +
lea edx [eax+808h] +
cmp [eax+4] edi +
jz loc_1013A25  +
lea edx [eax+8] +
cmp [ebp+var_1] 0 +
jz loc_1013A32  +
mov eax offset a0_0_0_0 +
jmp loc_1013A38  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
push esi  +
push eax  +
push edx  +
add ecx 8 +
push ecx  +
jmp loc_1013A95  +
cmp edx 0BBAh +
jnz loc_1013AA3  +
mov edx [ebp+arg_4] +
cmp [edx+10h] edi +
jz loc_1013AA3  +
cmp [ebx+248Ch] edi +
jnz loc_1013AA3  +
lea esi [eax+2818h] +
cmp [eax+2014h] edi +
jz loc_1013A6D  +
lea esi [eax+2018h] +
lea edx [eax+808h] +
cmp [eax+4] edi +
jz loc_1013A7B  +
lea edx [eax+8] +
cmp [ebp+var_1] 0 +
jz loc_1013A88  +
mov eax offset a0_0_0_0 +
jmp loc_1013A8E  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
add ecx 8 +
push ecx  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_101B633  +
mov esi eax +
xor edi edi +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add [ebp+var_8] 1008h +
cmp eax [ebx+2408h] +
jb loc_10138F6  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
mov esi offset dword_10045D4 +
cmp eax ebx +
jz loc_1013B0A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013B0A  +
push edi  +
push esi  +
push 89h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jnz loc_1013B32  +
push ecx  +
push 54Fh  +
push offset a3891  +
push 0F33h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1013C74  +
cmp [ebp+arg_4] ecx +
jnz loc_1013B4B  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3892  +
push 0F34h  +
jmp loc_1013B21  +
mov [ebp+arg_4] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_8] ecx +
cmp [edi+2408h] ecx +
jbe loc_1013BF6  +
mov [ebp+var_4] ecx +
mov esi [edi+240Ch] +
add esi [ebp+var_4] +
cmp eax ebx +
jz loc_1013BA7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013BA7  +
lea ecx [esi+8] +
push ecx  +
lea ecx [esi+808h] +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push edi  +
push offset dword_10045D4  +
push 8Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012C21  +
mov eax off_102B00C +
cmp dword ptr [esi+4] 0 +
jz loc_1013BD6  +
mov ecx [esi] +
cmp ecx 1774h +
jnz loc_1013BBF  +
add esi 8 +
mov [ebp+arg_4] esi +
jmp loc_1013BD6  +
cmp ecx 1773h +
jnz loc_1013BD6  +
lea ecx [esi+8] +
add esi 808h +
mov [ebp+var_C] ecx +
mov [ebp+var_10] esi +
inc [ebp+var_8]  +
mov ecx [ebp+var_8] +
add [ebp+var_4] 1008h +
cmp ecx [edi+2408h] +
jb loc_1013B66  +
mov esi offset dword_10045D4 +
xor ecx ecx +
cmp [edi+2488h] ecx +
jz loc_1013C40  +
push [ebp+arg_4]  +
call sub_100ACE8  +
test eax eax +
jz loc_1013C71  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1013C2E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013C2E  +
push edi  +
push esi  +
push 8Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 8033816Bh  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
jmp loc_1013B2B  +
cmp [ebp+var_C] ecx +
jnz loc_1013C7B  +
cmp [ebp+arg_4] ecx +
jnz loc_1013C80  +
cmp eax ebx +
jz loc_1013C6B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013C6B  +
push edi  +
push esi  +
push 8Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ecx ecx +
mov [edi+2484h] ecx +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
cmp [ebp+arg_4] ecx +
jnz loc_1013CA6  +
cmp eax ebx +
jz loc_1013C9F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013C9F  +
push edi  +
push esi  +
push 8Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 8033816Ch  +
jmp loc_1013C33  +
push [ebp+arg_4]  +
call sub_100ACE8  +
test eax eax +
jz loc_1013C71  +
push [ebp+var_10]  +
push [ebp+var_C]  +
call sub_100AC10  +
test eax eax +
jz loc_1013CEE  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1013CE5  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013CE5  +
push edi  +
push esi  +
push 8Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
and dword ptr [edi+2484h] 0 +
jmp loc_1013C71  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1013C2E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013C2E  +
push edi  +
push esi  +
push 8Fh  +
jmp loc_1013C23  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
mov edi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1013D50  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013D50  +
push edi  +
push offset dword_10045D4  +
push 90h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1013D78  +
push ebx  +
push 54Fh  +
push offset a3981  +
push 0F8Dh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1013EC8  +
cmp [ebp+arg_4] ebx +
jnz loc_1013D91  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3982  +
push 0F8Eh  +
jmp loc_1013D67  +
push esi  +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
cmp [edi+2408h] ebx +
jbe loc_1013E0B  +
mov [ebp+var_4] ebx +
mov esi [edi+240Ch] +
add esi [ebp+var_4] +
cmp [edi+2488h] ebx +
jnz loc_1013DCF  +
cmp dword ptr [esi] 0BC7h +
jnz loc_1013DCF  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
lea eax [esi+8] +
push eax  +
call sub_100AC10  +
test eax eax +
jz loc_1013E34  +
cmp [esi+4] ebx +
jz loc_1013DF6  +
cmp dword ptr [esi] 0BC8h +
jnz loc_1013DF6  +
lea eax [esi+8] +
cmp eax ebx +
jz loc_1013E3B  +
xor ecx ecx +
inc ecx  +
push ecx  +
push ebx  +
push ebx  +
push eax  +
mov [ebp+var_C] ecx +
call sub_1011C18  +
test eax eax +
jz loc_1013E59  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add [ebp+var_4] 1008h +
cmp eax [edi+2408h] +
jb loc_1013DA3  +
cmp [edi+2488h] ebx +
jz loc_1013EC4  +
cmp [ebp+var_C] ebx +
jnz loc_1013EC4  +
push 8033815Ah  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
xor eax eax +
jmp loc_1013EC7  +
push 8033816Fh  +
jmp loc_1013E25  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a4006  +
push 0FA6h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_1013E2D  +
call ds:GetLastError  +
mov esi [ebp+arg_0] +
mov edi eax +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+20h]  +
cmp edi 80338192h +
jz loc_1013E7C  +
cmp edi 80338191h +
jnz loc_1013E88  +
mov eax [esi] +
push 8033815Ah  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1013E2D  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1013E2D  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 91h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
jmp loc_1013E2D  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_1013EEB  +
push eax  +
call ds:RegCloseKey  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1025E67  +
mov eax large fs:0 +
push eax  +
mov eax 1624h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov ebx ecx +
xor esi esi +
cmp [ebx+2424h] esi +
jnz loc_1013F76  +
push esi  +
push 54Fh  +
push offset a1372  +
push 55Ch  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10141E4  +
cmp edi esi +
jnz loc_1013F8C  +
push esi  +
push 54Fh  +
push offset a1373  +
push 55Dh  +
jmp loc_1013F65  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1013FB4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1013FB4  +
push ebx  +
push offset dword_10045D4  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebx+2428h] +
push esi  +
lea eax [ebp+var_1630] +
push eax  +
lea eax [ebp+var_1410] +
push eax  +
mov [ebp+var_1630] esi +
mov esi 400h +
push esi  +
push 1773h  +
push edi  +
call sub_101E427  +
mov [ebp+var_162C] eax +
test eax eax +
jz loc_10140C0  +
cmp [ebp+arg_4] 0 +
jnz loc_10140C0  +
lea eax [ebp+var_1410] +
push eax  +
push offset aMicrosoft_winr  +
lea eax [ebp+var_C10] +
push esi  +
push eax  +
call sub_100B64F  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_1014062  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014042  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014042  +
push esi  +
push offset dword_10045D4  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [edi] +
push esi  +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
and [ebp+var_162C] 0 +
cmp [ebp+var_162C] 0 +
jz loc_10140C0  +
lea eax [ebp+var_C10] +
push eax  +
push edi  +
call sub_101BFBE  +
mov [ebp+var_162C] eax +
test eax eax +
jnz loc_10140C0  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10140B6  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10140B6  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+48h]  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 37h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov [ebp+var_162C] 1 +
lea ecx [ebp+var_1628] +
call sub_1013097  +
xor esi esi +
mov [ebp+var_4] esi +
mov ecx [ebx+2428h] +
push edi  +
lea eax [ebp+var_1628] +
push eax  +
call sub_101F0C5  +
test eax eax +
jnz loc_10140F2  +
mov [ebp+var_162C] esi +
jmp loc_10141CF  +
lea eax [ebp+var_1610] +
push eax  +
lea eax [ebp+var_1628] +
push eax  +
push edi  +
call sub_101F17B  +
test eax eax +
jz loc_10140E7  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014132  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1014132  +
push ebx  +
push offset dword_10045D4  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [ebp+var_1610] +
push eax  +
lea eax [ebx+1800h] +
push eax  +
push offset aSS  +
lea eax [ebp+var_410] +
push 200h  +
push eax  +
call sub_100B64F  +
mov esi eax +
add esp 14h +
test esi esi +
jz loc_10141A2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014187  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014187  +
push esi  +
push offset dword_10045D4  +
push 39h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [edi] +
push esi  +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_10141CF  +
push 1  +
lea eax [ebp+var_410] +
push eax  +
push edi  +
call sub_101AE2D  +
mov [ebp+var_162C] eax +
test eax eax +
jz loc_10141CF  +
cmp [ebp+arg_8] 0 +
jz loc_10141CF  +
push edi  +
mov ecx ebx +
call sub_101AF7A  +
mov [ebp+var_162C] eax +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1628] +
call sub_10130F2  +
mov eax [ebp+var_162C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_1014228  +
push eax  +
call ds:LocalFree  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1013ED3  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_1014267  +
push eax  +
call sub_1008E30  +
pop ecx  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_101429B  +
push eax  +
call sub_1008E30  +
pop ecx  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 0Eh +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10142E6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10142E6  +
push esi  +
push offset dword_10045D4  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [esi+246Ch] +
call sub_100C51B  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [esi+2468h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [esi+2464h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+2460h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+2444h] +
call sub_100C353  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+2440h] +
call sub_100C353  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+243Ch] +
call sub_100C353  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+2438h] +
call sub_100C353  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+2434h] +
call sub_100C353  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+2430h] +
call sub_100C353  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+242Ch] +
call sub_100C353  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+2428h] +
call sub_10114A6  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+2410h] +
call sub_100C51B  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+240Ch] +
call sub_1014278  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1019AE7  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
mov esi ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_101440C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101440C  +
push esi  +
push offset dword_10045D4  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ecx ecx +
cmp edi ecx +
jnz loc_1014433  +
push ecx  +
push 54Fh  +
push offset a1050  +
push 41Ah  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101466C  +
cmp [esi+2424h] ecx +
jnz loc_101444D  +
push edi  +
push 54Fh  +
push offset a1051  +
push 41Bh  +
jmp loc_1014422  +
lea eax [esi+2440h] +
mov [ebp-630h] eax +
cmp [eax] ecx +
jz loc_101446F  +
push edi  +
push 54Fh  +
push offset a1052  +
push 41Ch  +
jmp loc_1014422  +
lea ecx [ebp-628h] +
call sub_1013097  +
and dword ptr [ebp-4] 0 +
mov ecx [esi+2428h] +
push edi  +
lea eax [ebp-628h] +
push eax  +
call sub_101F0C5  +
test eax eax +
jz loc_1014652  +
lea eax [ebp-610h] +
push eax  +
push edi  +
mov ecx esi +
call sub_101371A  +
test eax eax +
jz loc_1014652  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10144D5  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10144D5  +
push esi  +
push offset dword_10045D4  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea ecx [ebp-610h] +
push ecx  +
lea eax [esi+1800h] +
push eax  +
push offset aSS  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 14h +
mov [ebp-62Ch] eax +
test eax eax +
jz loc_1014553  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1014530  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014530  +
push dword ptr [ebp-62Ch]  +
push offset dword_10045D4  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-62Ch]  +
mov eax [edi] +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_1014652  +
lea eax [ebp-610h] +
push eax  +
lea eax [ebp-628h] +
push eax  +
push edi  +
call sub_101F17B  +
test eax eax +
jz loc_10145A7  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1014596  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014596  +
lea ecx [ebp-610h] +
push ecx  +
push offset dword_10045D4  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 80338033h  +
mov ecx edi +
call dword ptr [eax+20h]  +
jmp loc_1014652  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+5Ch]  +
and dword ptr [ebp-62Ch] 0 +
lea eax [ebp-634h] +
push eax  +
push 2011Bh  +
lea eax [esi+1800h] +
push eax  +
lea eax [ebp-62Ch] +
push eax  +
lea eax [ebp-410h] +
push eax  +
push edi  +
mov ecx esi +
call sub_101AB14  +
test eax eax +
jz loc_101463D  +
cmp dword ptr [ebp-634h] 2 +
jnz loc_1014626  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1014618  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014618  +
lea ecx [ebp-410h] +
push ecx  +
push offset dword_10045D4  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 80338033h  +
mov ecx edi +
call dword ptr [eax+20h]  +
xor eax eax +
test eax eax +
jz loc_101463D  +
push dword ptr [ebp-62Ch]  +
mov ecx [ebp-630h] +
call sub_1014233  +
jmp loc_1014652  +
cmp dword ptr [ebp-62Ch] 0 +
jz loc_1014652  +
push dword ptr [ebp-62Ch]  +
call ds:RegCloseKey  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-628h] +
call sub_10130F2  +
mov eax esi +
call sub_100A18B  +
retn 4  +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
mov esi ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_10146B7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10146B7  +
push esi  +
push offset dword_10045D4  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ecx ecx +
cmp edi ecx +
jnz loc_10146DE  +
push ecx  +
push 54Fh  +
push offset a1143  +
push 477h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1014917  +
cmp [esi+2424h] ecx +
jnz loc_10146F8  +
push edi  +
push 54Fh  +
push offset a1144  +
push 478h  +
jmp loc_10146CD  +
lea eax [esi+243Ch] +
mov [ebp-628h] eax +
cmp [eax] ecx +
jz loc_101471A  +
push edi  +
push 54Fh  +
push offset a1145  +
push 479h  +
jmp loc_10146CD  +
lea ecx [ebp-620h] +
call sub_101314D  +
and dword ptr [ebp-4] 0 +
mov ecx [esi+2428h] +
push edi  +
lea eax [ebp-620h] +
push eax  +
call sub_101F1B2  +
test eax eax +
jz loc_10148FD  +
lea eax [ebp-610h] +
push eax  +
push edi  +
mov ecx esi +
call sub_101371A  +
test eax eax +
jz loc_10148FD  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1014780  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1014780  +
push esi  +
push offset dword_10045D4  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea ecx [ebp-610h] +
push ecx  +
lea eax [esi+1C00h] +
push eax  +
push offset aSS  +
lea eax [ebp-410h] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 14h +
mov [ebp-624h] eax +
test eax eax +
jz loc_10147FE  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10147DB  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10147DB  +
push dword ptr [ebp-624h]  +
push offset dword_10045D4  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-624h]  +
mov eax [edi] +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_10148FD  +
lea eax [ebp-610h] +
push eax  +
lea eax [ebp-620h] +
push eax  +
push edi  +
call sub_101F10C  +
test eax eax +
jz loc_1014852  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1014841  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014841  +
lea ecx [ebp-610h] +
push ecx  +
push offset dword_10045D4  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 80338033h  +
mov ecx edi +
call dword ptr [eax+20h]  +
jmp loc_10148FD  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+5Ch]  +
and dword ptr [ebp-624h] 0 +
lea eax [ebp-62Ch] +
push eax  +
push 2011Bh  +
lea eax [esi+1C00h] +
push eax  +
lea eax [ebp-624h] +
push eax  +
lea eax [ebp-410h] +
push eax  +
push edi  +
mov ecx esi +
call sub_101AB14  +
test eax eax +
jz loc_10148E8  +
cmp dword ptr [ebp-62Ch] 2 +
jnz loc_10148D1  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10148C3  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10148C3  +
lea ecx [ebp-410h] +
push ecx  +
push offset dword_10045D4  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 80338033h  +
mov ecx edi +
call dword ptr [eax+20h]  +
xor eax eax +
test eax eax +
jz loc_10148E8  +
push dword ptr [ebp-624h]  +
mov ecx [ebp-628h] +
call sub_1014233  +
jmp loc_10148FD  +
cmp dword ptr [ebp-624h] 0 +
jz loc_10148FD  +
push dword ptr [ebp-624h]  +
call ds:RegCloseKey  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-620h] +
call sub_10131A2  +
mov eax esi +
call sub_100A18B  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101495A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101495A  +
push esi  +
push offset dword_10045D4  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov edi [ebp+8] +
xor ebx ebx +
cmp edi ebx +
jnz loc_1014987  +
push ebx  +
push 54Fh  +
push offset a1237  +
push 4D5h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
cmp [esi+2424h] ebx +
jnz loc_10149A1  +
push edi  +
push 54Fh  +
push offset a1238  +
push 4D6h  +
jmp loc_1014973  +
lea eax [esi+2444h] +
mov [ebp-1Ch] eax +
cmp [eax] ebx +
jz loc_10149C0  +
push edi  +
push 54Fh  +
push offset a1239  +
push 4D7h  +
jmp loc_1014973  +
lea ecx [ebp-2Ch] +
call sub_10131FD  +
mov [ebp-4] ebx +
mov ecx [esi+2428h] +
push edi  +
lea eax [ebp-2Ch] +
push eax  +
call sub_101BBA3  +
cmp eax ebx +
jnz loc_10149ED  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call sub_101323E  +
jmp loc_101497D  +
cmp dword ptr [ebp-28h] 4 +
jz loc_1014A0F  +
push edi  +
push 54Fh  +
push offset a1249  +
push 4E1h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_10149DF  +
mov eax [ebp-24h] +
cmp eax ebx +
jnz loc_1014A28  +
push edi  +
push 54Fh  +
push offset a1250  +
push 4E2h  +
jmp loc_1014A03  +
mov [ebp+8] eax +
mov [ebp-10h] ebx +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-10h] +
push eax  +
push 104h  +
push ebx  +
add esi 2000h +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jz loc_1014A71  +
mov ecx [edi] +
push 4033C44Ah  +
push eax  +
push edi  +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call sub_100C353  +
jmp loc_10149DF  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 4 +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push ebx  +
push 2011Bh  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-10h]  +
call ds:RegCreateKeyExW  +
cmp eax ebx +
jz loc_1014ABC  +
mov ecx [edi] +
push eax  +
push offset aRegcreatekeyex  +
push 4033C360h  +
push eax  +
push edi  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C353  +
jmp loc_1014A61  +
cmp dword ptr [ebp-18h] 2 +
jnz loc_1014B04  +
push dword ptr [ebp+8]  +
mov eax [edi] +
push 4033C4CFh  +
push 80338033h  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 10h +
xor esi esi +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C353  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call sub_100C353  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call sub_101323E  +
mov eax esi +
jmp loc_101497F  +
mov eax [ebp-14h] +
mov ecx [ebp-1Ch] +
push eax  +
mov [ebp-14h] ebx +
call sub_1014233  +
xor esi esi +
inc esi  +
jmp loc_1014ADA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1414h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014B66  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1014B66  +
push esi  +
push offset dword_10045D4  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor edi edi +
cmp ebx edi +
jnz loc_1014B8D  +
push edi  +
push 54Fh  +
push offset a1308  +
push 51Ch  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1014D15  +
cmp [esi+2424h] edi +
jnz loc_1014BA7  +
push ebx  +
push 54Fh  +
push offset a1309  +
push 51Dh  +
jmp loc_1014B7C  +
lea eax [esi+2434h] +
mov [ebp+var_1410] eax +
cmp [eax] edi +
jz loc_1014BC9  +
push ebx  +
push 54Fh  +
push offset a1310  +
push 51Eh  +
jmp loc_1014B7C  +
lea eax [ebp+var_404] +
push eax  +
push ebx  +
mov ecx esi +
call sub_1013557  +
mov [ebp+var_1408] eax +
cmp eax edi +
jz loc_1014D0F  +
lea eax [ebp+var_1414] +
push eax  +
push 2011Bh  +
lea eax [esi+0C00h] +
push eax  +
lea eax [ebp+hKey] +
push eax  +
lea eax [ebp+var_404] +
push eax  +
push ebx  +
mov ecx esi +
mov [ebp+hKey] edi +
call sub_101AB14  +
mov [ebp+var_1408] eax +
cmp eax edi +
jz loc_1014CFB  +
cmp [ebp+var_1414] 2 +
jnz loc_1014CE0  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014C5E  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014C5E  +
lea ecx [ebp+var_404] +
push ecx  +
push offset dword_10045D4  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov ecx [esi+2428h] +
push edi  +
lea eax [ebp+var_1408] +
push eax  +
lea eax [ebp+var_1404] +
push eax  +
mov [ebp+var_1408] edi +
mov edi 400h +
push edi  +
push 0BB8h  +
push ebx  +
call sub_101E427  +
test eax eax +
jz loc_1014CD7  +
mov esi [esi+2428h] +
push 0  +
lea eax [ebp+var_1408] +
push eax  +
lea eax [ebp+var_C04] +
push eax  +
push edi  +
push 0BB9h  +
push ebx  +
mov ecx esi +
call sub_101E427  +
test eax eax +
jz loc_1014CD7  +
mov eax [ebx] +
lea ecx [ebp+var_C04] +
push ecx  +
lea ecx [ebp+var_1404] +
push ecx  +
push 4033C3EDh  +
push 80338033h  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 14h +
and [ebp+var_1408] 0 +
xor edi edi +
cmp [ebp+var_1408] edi +
jz loc_1014CFB  +
push [ebp+hKey]  +
mov ecx [ebp+var_1410] +
call sub_1014233  +
jmp loc_1014D0F  +
cmp [ebp+hKey] edi +
jz loc_1014D0F  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_1408] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset word_102609E  +
mov eax large fs:0 +
push eax  +
mov eax 1024h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [ebp+var_1020] ecx +
mov [ebp+var_1014] eax +
mov [ebp+var_102C] esi +
test eax eax +
jnz loc_1014DB3  +
push eax  +
push 54Fh  +
push offset a2238  +
push 8BEh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 8  +
test esi esi +
jnz loc_1014DC9  +
push eax  +
push 54Fh  +
push offset a2239  +
push 8BFh  +
jmp loc_1014D8B  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx 200000h +
cmp eax edi +
jz loc_1014DF9  +
test [eax+1Ch] ebx +
jz loc_1014DF9  +
push ecx  +
push offset dword_10045D4  +
push 58h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
mov ecx [ebp+var_1020] +
cmp dword ptr [ecx+2484h] 0 +
jnz loc_1014E2B  +
cmp eax edi +
jz loc_1014E23  +
test [eax+1Ch] ebx +
jz loc_1014E23  +
push offset dword_10045D4  +
push 59h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
inc eax  +
jmp loc_1014D97  +
cmp eax edi +
jz loc_1014E46  +
test [eax+1Ch] ebx +
jz loc_1014E46  +
push offset dword_10045D4  +
push 5Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+var_1020] +
and dword ptr [esi] 0 +
push 1773h  +
call sub_10133F8  +
mov ecx [ebp+var_1020] +
mov esi eax +
push 1774h  +
mov dword ptr [ebp+var_1024] esi +
call sub_10133F8  +
mov ecx eax +
mov [ebp+var_1018] ecx +
test esi esi +
jnz loc_1014E92  +
push esi  +
push 54Fh  +
push offset a2273  +
push 8E1h  +
jmp loc_1014D8B  +
test ecx ecx +
jnz loc_1014EAB  +
push ecx  +
push 54Fh  +
push offset a2274  +
push 8E2h  +
jmp loc_1014D8B  +
lea eax [ecx+8] +
lea ebx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1014EB1  +
sub eax ebx +
sar eax 1 +
cmp eax 4FFh +
jbe loc_1014F01  +
mov eax off_102B00C +
mov esi 8033816Ah +
cmp eax edi +
jz loc_1014EF0  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014EF0  +
push esi  +
push offset dword_10045D4  +
push 5Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+var_1014] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+20h]  +
jmp loc_1014D95  +
and [ebp+phToken] 0 +
xor ebx ebx +
inc ebx  +
mov [ebp+var_4] ebx +
lea eax [ebp+phToken] +
push eax  +
push 0  +
push 3  +
lea edi [ecx+8] +
push edi  +
add esi 8 +
push offset szDomain  +
push esi  +
mov [ebp+var_1030] esi +
call ds:LogonUserW  +
test eax eax +
jnz loc_1014F8F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014F6B  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014F6B  +
push edi  +
push esi  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 5Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
mov ecx [ebp+var_1014] +
mov eax [ecx] +
push 80338154h  +
call dword ptr [eax+20h]  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+phToken] +
call sub_100B8F6  +
jmp loc_1014D95  +
push esi  +
mov edi offset aMicrosoft_winr +
push edi  +
mov esi 200h +
lea eax [ebp+var_810] +
push esi  +
push eax  +
call sub_100B64F  +
add esp 10h +
mov [ebp+var_1028] eax +
test eax eax +
jz loc_101500B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1014FE2  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1014FE2  +
push [ebp+var_1028]  +
push offset dword_10045D4  +
push 5Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+var_1028]  +
mov eax [ebp+var_1014] +
mov ecx [eax] +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
jmp loc_1014F7B  +
mov eax [ebp+var_1020] +
cmp dword ptr [eax+2488h] 0 +
jz loc_1015040  +
mov eax [ebp+var_102C] +
mov [eax] ebx +
mov eax [ebp+var_1018] +
push 0  +
add eax 8 +
push eax  +
lea eax [ebp+var_810] +
push eax  +
push [ebp+var_1014]  +
jmp loc_101516D  +
mov eax dword ptr [ebp+var_1024] +
add eax 808h +
push eax  +
push [ebp+var_1030]  +
mov dword ptr [ebp+var_1024] eax +
call sub_100AC10  +
test eax eax +
jz loc_1015082  +
mov eax [ebp+var_1018] +
add eax 8 +
push eax  +
lea eax [ebp+var_810] +
push eax  +
push [ebp+var_1014]  +
call sub_101C381  +
jmp loc_1015172  +
push dword ptr [ebp+var_1024]  +
lea eax [ebp+var_1010] +
push edi  +
push esi  +
push eax  +
call sub_100B64F  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_10150FE  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10150C7  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10150C7  +
push esi  +
push offset dword_10045D4  +
push 5Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_1014] +
mov ecx [eax] +
push esi  +
push offset aStringcchprint  +
push 4033C362h  +
push 54Fh  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
xor esi esi +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+phToken] +
call sub_100B8F6  +
mov eax esi +
jmp loc_1014D97  +
mov esi [ebp+var_1014] +
lea eax [ebp+var_1010] +
push eax  +
push esi  +
call sub_101BFBE  +
test eax eax +
jnz loc_1015151  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1015149  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1015149  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 5Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+5Ch]  +
mov eax [ebp+var_102C] +
mov [eax] ebx +
mov eax [ebp+var_1018] +
push 0  +
add eax 8 +
push eax  +
lea eax [ebp+var_810] +
push eax  +
push esi  +
call sub_101BC45  +
mov edx [ebp+var_1018] +
mov ecx 800h +
mov edi ecx +
add edx 8 +
mov byte ptr [edx] 0 +
inc edx  +
dec edi  +
jnz loc_1015182  +
mov edx ecx +
mov ecx [ebp+var_1018] +
add ecx 808h +
mov byte ptr [ecx] 0 +
inc ecx  +
dec edx  +
jnz loc_1015197  +
mov esi eax +
jmp loc_10150E8  +
***
call __EH_prolog3_GS  +
mov ebx [ebp+8] +
mov edi [ebp+10h] +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov [ebp-230h] ecx +
mov [ebp-24Ch] edi +
test ebx ebx +
jnz loc_10151F8  +
push ebx  +
push 54Fh  +
push offset a2781  +
push 0ADDh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
call sub_100A18B  +
retn 0Ch  +
test ecx ecx +
jnz loc_101520E  +
push ebx  +
push 54Fh  +
push offset a2782  +
push 0ADEh  +
jmp loc_10151E4  +
test edi edi +
jnz loc_1015224  +
push ebx  +
push 54Fh  +
push offset a2783  +
push 0ADFh  +
jmp loc_10151E4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1015252  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1015252  +
push esi  +
push offset dword_10045D4  +
push 69h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp-230h] +
mov ecx [ecx+8] +
xor edx edx +
inc edx  +
mov [ebp-250h] ecx +
cmp ecx edx +
jnz loc_1015275  +
mov eax [esi+2430h] +
test eax eax +
jz loc_10152B6  +
mov [edi] eax +
mov eax edx +
jmp loc_10151F0  +
cmp ecx 2 +
jnz loc_1015282  +
mov eax [esi+242Ch] +
jmp loc_1015268  +
cmp ecx 3 +
jnz loc_101528F  +
mov eax [esi+2434h] +
jmp loc_1015268  +
cmp ecx 5 +
jnz loc_101529C  +
mov eax [esi+2440h] +
jmp loc_1015268  +
cmp ecx 6 +
jnz loc_10152A9  +
mov eax [esi+243Ch] +
jmp loc_1015268  +
cmp ecx 7 +
jnz loc_10152B6  +
mov eax [esi+2444h] +
jmp loc_1015268  +
xor eax eax +
mov [ebp-22Ch] eax +
mov [ebp-4] edx +
cmp ecx 3 +
jnz loc_101535A  +
lea ecx [ebp-248h] +
call sub_100FDDB  +
mov byte ptr [ebp-4] 2 +
mov ecx [esi+2428h] +
push ebx  +
lea eax [ebp-248h] +
push eax  +
call sub_101F246  +
test eax eax +
jnz loc_1015322  +
call ds:GetLastError  +
push ebx  +
push eax  +
mov ecx esi +
call sub_1012E3B  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-248h] +
call sub_100FE23  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call sub_100C353  +
jmp loc_10151EE  +
push 0  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-248h] +
push eax  +
push 2001Bh  +
push dword ptr [ebp-230h]  +
mov ecx esi +
call sub_101A3A3  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-248h] +
call sub_100FE23  +
jmp loc_1015573  +
cmp ecx 5 +
jnz loc_10153FC  +
lea ecx [ebp-228h] +
call sub_1013097  +
mov byte ptr [ebp-4] 3 +
mov ecx [esi+2428h] +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_101F0C5  +
test eax eax +
jnz loc_10153AC  +
call ds:GetLastError  +
push ebx  +
push eax  +
mov ecx esi +
call sub_1012E3B  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-228h] +
call sub_10130F2  +
jmp loc_101530E  +
lea eax [ebp-210h] +
push eax  +
lea eax [ebp-228h] +
push eax  +
push ebx  +
call sub_101F17B  +
test eax eax +
jz loc_1015398  +
push 0  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-228h] +
push eax  +
push 2001Bh  +
push dword ptr [ebp-230h]  +
mov ecx esi +
call sub_101A3A3  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-228h] +
call sub_10130F2  +
jmp loc_1015573  +
cmp ecx 6 +
jnz loc_101549E  +
lea ecx [ebp-220h] +
call sub_101314D  +
mov byte ptr [ebp-4] 4 +
mov ecx [esi+2428h] +
push ebx  +
lea eax [ebp-220h] +
push eax  +
call sub_101F1B2  +
test eax eax +
jnz loc_101544E  +
call ds:GetLastError  +
push ebx  +
push eax  +
mov ecx esi +
call sub_1012E3B  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-220h] +
call sub_10131A2  +
jmp loc_101530E  +
lea eax [ebp-210h] +
push eax  +
lea eax [ebp-220h] +
push eax  +
push ebx  +
call sub_101F10C  +
test eax eax +
jz loc_101543A  +
push 0  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-220h] +
push eax  +
push 2001Bh  +
push dword ptr [ebp-230h]  +
mov ecx esi +
call sub_101A3A3  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-220h] +
call sub_10131A2  +
jmp loc_1015573  +
cmp ecx 7 +
jnz loc_1015556  +
lea ecx [ebp-240h] +
call sub_10131FD  +
mov byte ptr [ebp-4] 5 +
mov ecx [esi+2428h] +
push ebx  +
lea eax [ebp-240h] +
push eax  +
call sub_101BBA3  +
test eax eax +
jnz loc_10154E1  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-240h] +
call sub_101323E  +
jmp loc_101530E  +
cmp dword ptr [ebp-23Ch] 4 +
jz loc_1015506  +
push ebx  +
push 54Fh  +
push offset a2897  +
push 0B51h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_10154CD  +
cmp dword ptr [ebp-238h] 0 +
jnz loc_1015521  +
push ebx  +
push 54Fh  +
push offset a2898  +
push 0B52h  +
jmp loc_10154FA  +
push 0  +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-240h] +
push eax  +
push 2001Bh  +
push dword ptr [ebp-230h]  +
mov ecx esi +
call sub_101A3A3  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-240h] +
call sub_101323E  +
jmp loc_1015573  +
push eax  +
lea ecx [ebp-22Ch] +
push ecx  +
push eax  +
push 2001Bh  +
push dword ptr [ebp-230h]  +
mov ecx esi +
call sub_101A3A3  +
mov edi eax +
test edi edi +
jz loc_10155B8  +
cmp edi 5 +
jnz loc_1015588  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
jmp loc_101530E  +
mov eax 80338000h +
cmp edi eax +
jnz loc_101559E  +
mov edx [ebx] +
push eax  +
mov ecx ebx +
call dword ptr [edx+20h]  +
jmp loc_101530E  +
mov eax [ebx] +
push edi  +
push offset aOpenregkey  +
push 4033C360h  +
push edi  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 14h +
jmp loc_101530E  +
mov eax [ebp-22Ch] +
test eax eax +
jnz loc_10155F4  +
push ebx  +
push 54Fh  +
push offset a2921  +
push 0B69h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call sub_100C353  +
mov eax esi +
jmp loc_10151F0  +
mov ecx [ebp-24Ch] +
and dword ptr [ebp-22Ch] 0 +
mov [ecx] eax +
mov ecx [ebp-250h] +
cmp ecx 1 +
jnz loc_1015616  +
lea ecx [esi+2430h] +
jmp loc_1015648  +
cmp ecx 2 +
jnz loc_1015623  +
lea ecx [esi+242Ch] +
jmp loc_1015648  +
cmp ecx 3 +
jnz loc_1015630  +
lea ecx [esi+2434h] +
jmp loc_1015648  +
cmp ecx 6 +
jnz loc_101563D  +
lea ecx [esi+243Ch] +
jmp loc_1015648  +
cmp ecx 7 +
jnz loc_101564E  +
lea ecx [esi+2444h] +
push eax  +
call sub_1014233  +
xor esi esi +
inc esi  +
jmp loc_10155DE  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101424F  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_1019A66  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+240Ch] +
mov [esi+2408h] edi +
call sub_101567B  +
mov byte ptr [ebp-4] 1 +
push edi  +
lea ecx [esi+2410h] +
call sub_100C374  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+2428h] +
mov [esi+2414h] edi +
mov [esi+2418h] edi +
mov [esi+241Ch] edi +
mov [esi+2420h] edi +
mov [esi+2424h] edi +
call sub_1015658  +
mov byte ptr [ebp-4] 3 +
push edi  +
lea ecx [esi+242Ch] +
call sub_101147F  +
mov byte ptr [ebp-4] 4 +
push edi  +
lea ecx [esi+2430h] +
call sub_101147F  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+2434h] +
call sub_100C369  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+2438h] +
call sub_100C369  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+243Ch] +
call sub_100C369  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+2440h] +
call sub_100C369  +
mov byte ptr [ebp-4] 9 +
lea ecx [esi+2444h] +
call sub_100C369  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [esi+2460h] +
mov [esi+2448h] edi +
mov [esi+244Ch] edi +
mov [esi+2450h] edi +
mov [esi+2454h] edi +
mov [esi+2458h] edi +
mov [esi+245Ch] edi +
call sub_100C369  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [esi+2464h] +
call sub_100C369  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [esi+2468h] +
call sub_100C369  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [esi+246Ch] +
call sub_100C369  +
mov byte ptr [ebp-4] 0Eh +
mov [esi+2470h] edi +
mov [esi+2474h] edi +
mov [esi+2478h] edi +
mov [esi+247Ch] edi +
mov [esi+2480h] edi +
mov [esi+2484h] edi +
mov [esi+2488h] edi +
mov [esi+248Ch] edi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101584A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101584A  +
push esi  +
push offset dword_10045D4  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_101588E  +
push 0  +
push 54Fh  +
push offset a2388  +
push 954h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1015964  +
mov eax off_102B00C +
push ebx  +
push edi  +
cmp eax offset off_102B00C +
jz loc_10158D9  +
mov ebx 200000h +
mov edi offset dword_10045D4 +
test [eax+1Ch] ebx +
jz loc_10158BF  +
push esi  +
push edi  +
push 60h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10158D9  +
test [eax+1Ch] ebx +
jz loc_10158D9  +
push edi  +
push 61h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
cmp dword ptr [esi+2448h] 0 +
jnz loc_10158E7  +
xor eax eax +
inc eax  +
jmp loc_1015962  +
push 0BB9h  +
mov ecx esi +
call sub_10133F8  +
push 0BB8h  +
mov ecx esi +
mov [ebp+var_8] eax +
call sub_10133F8  +
push 0BBAh  +
mov ecx esi +
mov edi eax +
call sub_10133F8  +
push 0BBBh  +
mov ecx esi +
mov ebx eax +
call sub_10133F8  +
push 0BBDh  +
mov ecx esi +
mov [ebp+var_10] eax +
call sub_10133F8  +
push 0BBEh  +
mov ecx esi +
mov [ebp+var_4] eax +
call sub_10133F8  +
mov [ebp+var_C] eax +
xor eax eax +
cmp [ebp+var_8] eax +
jnz loc_1015969  +
push eax  +
push 54Fh  +
push offset a2414  +
push 96Eh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
cmp edi eax +
jnz loc_101597F  +
push eax  +
push 54Fh  +
push offset a2415  +
push 96Fh  +
jmp loc_1015956  +
cmp ebx eax +
jnz loc_1015995  +
push eax  +
push 54Fh  +
push offset a2416  +
push 970h  +
jmp loc_1015956  +
cmp [ebp+var_10] eax +
jnz loc_10159AC  +
push eax  +
push 54Fh  +
push offset a2417  +
push 971h  +
jmp loc_1015956  +
cmp [ebp+var_4] eax +
jnz loc_10159C3  +
push eax  +
push 54Fh  +
push offset a2418  +
push 972h  +
jmp loc_1015956  +
cmp [ebp+var_C] eax +
jnz loc_10159DD  +
push eax  +
push 54Fh  +
push offset a2419  +
push 973h  +
jmp loc_1015956  +
lea ecx [edi+808h] +
cmp [edi+4] eax +
jnz loc_10159EC  +
mov edi ecx +
jmp loc_10159EF  +
add edi 8 +
lea eax [esi+244Ch] +
push eax  +
push ecx  +
push [ebp+arg_0]  +
call sub_1018D70  +
test eax eax +
jz loc_1015960  +
lea eax [esi+2450h] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_1018D70  +
test eax eax +
jz loc_1015960  +
lea edx [ebx+808h] +
xor edi edi +
mov [esi+2454h] edx +
mov eax edx +
cmp [ebx+4] edi +
jz loc_1015A37  +
lea eax [ebx+8] +
mov [esi+2458h] eax +
mov eax [ebp+var_4] +
lea ecx [eax+808h] +
cmp [eax+4] edi +
jnz loc_1015A50  +
mov [ebp+var_4] ecx +
jmp loc_1015A56  +
add eax 8 +
mov [ebp+var_4] eax +
mov ebx [ebp+var_8] +
lea eax [ebx+808h] +
cmp [ebx+4] edi +
jnz loc_1015A69  +
mov [ebp+var_8] eax +
jmp loc_1015A6F  +
add ebx 8 +
mov [ebp+var_8] ebx +
push 0  +
push ecx  +
push edx  +
push eax  +
push [ebp+arg_0]  +
lea edi [esi+2460h] +
call sub_100C8C4  +
push eax  +
mov ecx edi +
call sub_101569E  +
push 0  +
push [ebp+var_4]  +
lea ebx [esi+2464h] +
push dword ptr [esi+2458h]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_100C8C4  +
push eax  +
mov ecx ebx +
call sub_101569E  +
cmp dword ptr [edi] 0 +
jz loc_1015AB9  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_1015AC5  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor eax eax +
jmp loc_1015AEB  +
lea eax [ebp+var_10] +
push eax  +
push offset aDAGxS158056925  +
push ebx  +
push [ebp+arg_0]  +
call sub_1010253  +
test eax eax +
jz loc_1015AEB  +
xor ecx ecx +
cmp [ebp+var_10] ecx +
setnz cl  +
inc ecx  +
inc ecx  +
mov [esi+2418h] ecx +
mov ecx [ebp+var_C] +
cmp dword ptr [ecx+4] 0 +
lea ebx [ecx+808h] +
jz loc_1015AFD  +
lea ebx [ecx+8] +
add ecx 808h +
mov [esi+245Ch] ecx +
test eax eax +
jz loc_1015962  +
mov edx offset dword_1001C58 +
mov ecx ebx +
mov di [ecx] +
cmp di [edx] +
jnz loc_1015B3E  +
test di di +
jz loc_1015B3A  +
mov di [ecx+2] +
cmp di [edx+2] +
jnz loc_1015B3E  +
add ecx 4 +
add edx 4 +
test di di +
jnz loc_1015B18  +
xor ecx ecx +
jmp loc_1015B43  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_1015962  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
push dword ptr [esi+2458h]  +
mov ecx esi +
push dword ptr [esi+2450h]  +
push [ebp+arg_0]  +
call sub_1012EEC  +
test eax eax +
jz loc_1015962  +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
setnz cl  +
inc ecx  +
inc ecx  +
mov [esi+241Ch] ecx +
jmp loc_1015962  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push edi  +
mov edi ecx +
cmp [ebp+arg_0] eax +
jnz loc_1015BB8  +
push eax  +
push 54Fh  +
push offset a2733  +
push 0AADh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1015CEC  +
push esi  +
mov esi [ebp+arg_4] +
cmp esi eax +
jnz loc_1015BD4  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2734  +
push 0AAEh  +
jmp loc_1015BEB  +
cmp [ebp+arg_C] eax +
jnz loc_1015BFC  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2735  +
push 0AAFh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1015CEB  +
push ebx  +
mov ebx [ebp+arg_14] +
test ebx ebx +
jnz loc_1015C51  +
mov eax [esi] +
cmp eax 0BB8h +
jz loc_1015C14  +
cmp eax 0BB9h +
jnz loc_1015C28  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2736  +
push 0AB0h  +
jmp loc_1015C40  +
cmp [ebp+arg_18] 0 +
jnz loc_1015C51  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2737  +
push 0AB1h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1015CEA  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1015C8D  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1015C8D  +
mov ecx offset aValidateonly +
test ebx ebx +
jnz loc_1015C74  +
mov ecx offset aForupdate +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push edi  +
push offset dword_10045D4  +
push 68h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012B4D  +
and [ebp+arg_4] 0 +
test ebx ebx +
jz loc_1015CBF  +
cmp dword ptr [edi+2488h] 0 +
jz loc_1015CBF  +
mov eax [esi+8] +
cmp eax 3 +
jz loc_1015CBA  +
cmp eax 4 +
jz loc_1015CBA  +
cmp eax 6 +
jz loc_1015CBA  +
cmp eax 5 +
jz loc_1015CBA  +
cmp eax 7 +
jnz loc_1015CBF  +
xor eax eax +
inc eax  +
jmp loc_1015CEA  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
push [ebp+arg_0]  +
mov ecx edi +
call sub_10151AA  +
test ebx ebx +
jnz loc_1015CEA  +
push [ebp+arg_18]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+dwType]  +
push [ebp+arg_4]  +
push esi  +
push [ebp+arg_0]  +
call sub_10104AB  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] eax +
jnz loc_1015D27  +
push eax  +
push 54Fh  +
push offset a2949  +
push 0B85h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp locret_1015DCA  +
cmp [ebp+arg_4] eax +
jnz loc_1015D40  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a2950  +
push 0B86h  +
jmp loc_1015D16  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_1015D95  +
push esi  +
push edi  +
mov edi 200000h +
mov esi offset dword_10045D4 +
test [eax+1Ch] edi +
jz loc_1015D74  +
push ecx  +
push esi  +
push 6Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1015D93  +
test [eax+1Ch] edi +
jz loc_1015D93  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx]  +
push esi  +
push 6Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
pop edi  +
pop esi  +
push [ebp+arg_10]  +
mov ecx [ebp+var_4] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1019B17  +
pop ebx  +
test eax eax +
jz locret_1015DCA  +
push [ebp+arg_14]  +
mov ecx [ebp+var_4] +
push [ebp+arg_C]  +
lea eax [ebp+arg_8] +
push 4  +
push eax  +
push 4  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1015B88  +
leave   +
retn 18h  +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
mov ebx [ebp+8] +
test ebx ebx +
jnz loc_1015E0A  +
push ebx  +
push 54Fh  +
push offset a2978  +
push 0BA2h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1016081  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1015E22  +
push ebx  +
push 54Fh  +
push offset a2979  +
push 0BA3h  +
jmp loc_1015DF9  +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_1015E75  +
mov ebx 200000h +
mov esi offset dword_10045D4 +
test [eax+1Ch] ebx +
jz loc_1015E53  +
push ecx  +
push esi  +
push 6Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1015E72  +
test [eax+1Ch] ebx +
jz loc_1015E72  +
push dword ptr [ebp+10h]  +
mov ecx [ebp+0Ch] +
push dword ptr [ecx]  +
push esi  +
push 6Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov ebx [ebp+8] +
mov eax [ebp-18h] +
xor ecx ecx +
inc ecx  +
cmp dword ptr [eax+248Ch] 0 +
jz loc_1015E86  +
xor ecx ecx +
mov eax [ebp+0Ch] +
mov eax [eax] +
mov esi 7E5h +
xor edi edi +
cmp eax esi +
jnz loc_1015F45  +
cmp ecx edi +
jz loc_1015EE4  +
lea ecx [ebp-34h] +
call sub_10240B6  +
mov [ebp-4] edi +
cmp [ebp+10h] edi +
lea ecx [ebp-34h] +
setnz al  +
movzx eax al +
push eax  +
call sub_1024648  +
cmp eax edi +
jge loc_1015ED8  +
mov edx [ebx] +
push eax  +
mov ecx ebx +
call dword ptr [edx+20h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
call sub_102480F  +
jmp loc_1015E03  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
call sub_102480F  +
mov eax [ebp+0Ch] +
mov eax [eax] +
cmp eax esi +
jnz loc_1015F45  +
cmp [ebp+10h] edi +
jz loc_1015F45  +
lea ecx [ebp+8] +
call sub_10101B1  +
mov dword ptr [ebp-4] 1 +
cmp [ebp+8] edi +
jz loc_1015F21  +
push dword ptr [ebp+8]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_1010210  +
jmp loc_1015E03  +
lea eax [ebp-20h] +
push eax  +
push offset aDAGxS158056925  +
push offset aHttp80Wsman  +
push ebx  +
call sub_1010253  +
test eax eax +
jz loc_1015F10  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
jmp loc_1016062  +
cmp eax 7E6h +
jnz loc_1016067  +
cmp [ebp+10h] edi +
jz loc_1016067  +
lea ecx [ebp-10h] +
call sub_10101B1  +
mov dword ptr [ebp-4] 2 +
cmp [ebp-10h] edi +
jz loc_1015F80  +
push dword ptr [ebp-10h]  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+20h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
jmp loc_1015F17  +
lea eax [ebp-20h] +
push eax  +
push offset aDAGxS158056925  +
push offset aHttps443Wsman  +
push ebx  +
call sub_1010253  +
test eax eax +
jz loc_1015F77  +
push ebx  +
call sub_100E06F  +
mov esi eax +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_1015F77  +
mov [ebp-14h] edi +
mov byte ptr [ebp-4] 4 +
push 1  +
lea ecx [ebp-44h] +
call sub_100E3AF  +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-14h] +
push eax  +
push esi  +
lea eax [ebp-44h] +
push eax  +
call sub_100CF58  +
test eax eax +
jz loc_1016043  +
mov ecx [ebp-18h] +
lea eax [ebp-1Ch] +
push eax  +
push edi  +
push offset a443  +
mov ebx offset a0_0_0_0 +
push ebx  +
push dword ptr [ebp+8]  +
mov [ebp-1Ch] edi +
call sub_101B144  +
test eax eax +
jz loc_1016040  +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_1016040  +
sub esp 10h +
mov edi esp +
push 0  +
mov esi offset dword_10013EC +
movs   +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-14h]  +
movs   +
push offset a443  +
movs   +
push ebx  +
push dword ptr [ebp+8]  +
movs   +
call sub_1012881  +
test eax eax +
jnz loc_1016040  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-44h] +
call sub_100E3A3  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C51B  +
jmp loc_1015F77  +
mov ebx [ebp+8] +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-44h] +
call sub_100E3A3  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-14h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_1010210  +
push dword ptr [ebp+18h]  +
mov ecx [ebp-18h] +
push dword ptr [ebp+14h]  +
lea eax [ebp+10h] +
push 4  +
push eax  +
push 4  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_1015B88  +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov [ebp+var_4] ecx +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jnz loc_10160BF  +
push ecx  +
push 54Fh  +
push offset a3102  +
push 0C1Eh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp locret_10161AC  +
push esi  +
mov esi [ebp+arg_4] +
cmp esi ecx +
jnz loc_10160EA  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a3103  +
push 0C1Fh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10161AB  +
mov eax off_102B00C +
push ebx  +
mov ebx offset dword_10045D4 +
cmp eax offset off_102B00C +
jz loc_1016130  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016130  +
cmp [ebp+arg_10] ecx +
mov ecx offset aValidateonly +
jnz loc_1016114  +
mov ecx offset aForupdate +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push [ebp+var_4]  +
push ebx  +
push 6Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012B4D  +
mov eax off_102B00C +
mov ecx [ebp+arg_C] +
push edi  +
lea edi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_1016137  +
sub ecx edi +
sar ecx 1 +
cmp dword ptr [esi+0Ch] 32h +
jz loc_101618D  +
mov edi 400h +
cmp ecx edi +
jb loc_101618D  +
cmp eax offset off_102B00C +
jz loc_1016172  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1016172  +
push ebx  +
push 70h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push edi  +
push 4033C45Bh  +
push 80338015h  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
xor eax eax +
jmp loc_10161A9  +
push [ebp+arg_14]  +
lea eax [ecx+ecx+2] +
push [ebp+arg_10]  +
mov ecx [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
push 1  +
push esi  +
push [ebp+arg_0]  +
call sub_1015B88  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 18h  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov ebx [ebp+8] +
xor esi esi +
cmp ebx esi +
jnz loc_10161EE  +
push esi  +
push 54Fh  +
push offset a3134  +
push 0C3Eh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101628C  +
cmp [ebp+0Ch] esi +
jnz loc_1016205  +
push ebx  +
push 54Fh  +
push offset a3135  +
push 0C3Fh  +
jmp loc_10161DD  +
cmp [ebp+10h] esi +
jnz loc_101621C  +
push ebx  +
push 54Fh  +
push offset a3136  +
push 0C40h  +
jmp loc_10161DD  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016244  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016244  +
push ecx  +
push offset dword_10045D4  +
push 71h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov [ebp+8] esi +
mov dword ptr [ebp-4] 1 +
push esi  +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1010973  +
mov edi eax +
cmp [ebp+14h] esi +
jnz loc_101627E  +
cmp edi esi +
jz loc_101627E  +
push dword ptr [ebp+18h]  +
mov ecx [ebp-10h] +
push esi  +
push dword ptr [ebp+10h]  +
push 8  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_101608E  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_1014205  +
mov eax edi +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1026203  +
mov eax large fs:0 +
push eax  +
mov eax 1040h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov edi [ebp+arg_C] +
xor ebx ebx +
mov [ebp+var_1048] eax +
mov [ebp+var_104C] edx +
mov [ebp+var_102C] edi +
cmp esi ebx +
jnz loc_1016329  +
push ebx  +
push 54Fh  +
push offset a4242  +
push 1092h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 10h  +
cmp eax ebx +
jnz loc_101633F  +
push esi  +
push 54Fh  +
push offset a4243  +
push 1093h  +
jmp loc_1016301  +
cmp edx ebx +
jnz loc_1016355  +
push esi  +
push 54Fh  +
push offset a4244  +
push 1094h  +
jmp loc_1016301  +
cmp edi ebx +
jnz loc_101636B  +
push esi  +
push 54Fh  +
push offset a4245  +
push 1095h  +
jmp loc_1016301  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016396  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016396  +
push ecx  +
push offset dword_10045D4  +
push 9Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
call sub_101EFB7  +
push eax  +
lea ecx [ebp+var_1020] +
call sub_100FEC0  +
mov [ebp+var_4] ebx +
cmp [ebp+var_1020] ebx +
jnz loc_10163DB  +
call ds:GetLastError  +
xor esi esi +
cmp eax 103h +
jnz loc_10163C5  +
inc esi  +
mov [edi] ebx +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1020] +
call sub_10114A6  +
mov eax esi +
jmp loc_101630D  +
lea ecx [ebp+var_1044] +
mov [ebp+var_1028] ebx +
call sub_100FDDB  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_1020] +
push esi  +
lea eax [ebp+var_1044] +
push eax  +
call sub_101F246  +
test eax eax +
jz loc_101654B  +
mov edi 400h +
push [ebp+var_1048]  +
lea eax [ebp+var_1044] +
push eax  +
call sub_1019052  +
test al al +
jz loc_1016500  +
mov ecx [ebp+var_1020] +
push ebx  +
lea eax [ebp+var_1028] +
push eax  +
lea eax [ebp+var_101C] +
push eax  +
push edi  +
push 0BB9h  +
push esi  +
call sub_101E427  +
test eax eax +
jz loc_101654B  +
mov ecx [ebp+var_1020] +
push ebx  +
lea eax [ebp+var_1028] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push 6  +
push 0BBAh  +
push esi  +
call sub_101E427  +
test eax eax +
jz loc_101654B  +
mov ecx [ebp+var_1020] +
push ebx  +
lea eax [ebp+var_1028] +
push eax  +
lea eax [ebp+var_81C] +
push eax  +
push edi  +
push 0BBDh  +
push esi  +
call sub_101E427  +
test eax eax +
jz loc_101654B  +
push ebx  +
lea eax [ebp+var_81C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_101C] +
push eax  +
push esi  +
call sub_100C8C4  +
push eax  +
lea ecx [ebp+var_1024] +
call sub_100C374  +
mov byte ptr [ebp+var_4] 2 +
cmp [ebp+var_1024] ebx +
jz loc_1016560  +
push [ebp+var_1024]  +
push [ebp+var_104C]  +
call sub_100AC10  +
test eax eax +
jnz loc_1016571  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1024] +
call sub_100C51B  +
mov ecx [ebp+var_1020] +
call sub_101EFF6  +
test eax eax +
jz loc_101659E  +
mov byte ptr [ebp+var_4] bl +
lea ecx [ebp+var_1044] +
call sub_100FE23  +
lea ecx [ebp+var_1044] +
call sub_100FDDB  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_1020] +
push esi  +
lea eax [ebp+var_1044] +
push eax  +
call sub_101F246  +
test eax eax +
jnz loc_1016410  +
mov byte ptr [ebp+var_4] bl +
lea ecx [ebp+var_1044] +
call sub_100FE23  +
xor esi esi +
jmp loc_10163C5  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1024] +
call sub_100C51B  +
jmp loc_101654B  +
mov eax [ebp+var_102C] +
xor esi esi +
inc esi  +
mov [eax] esi +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_1024] +
call sub_100C51B  +
mov byte ptr [ebp+var_4] bl +
lea ecx [ebp+var_1044] +
call sub_100FE23  +
jmp loc_10163C5  +
call ds:GetLastError  +
cmp eax 103h +
jnz loc_101654B  +
mov byte ptr [ebp+var_4] bl +
lea ecx [ebp+var_1044] +
call sub_100FE23  +
mov edi [ebp+var_102C] +
xor esi esi +
jmp loc_10163C2  +
***
call __EH_prolog3  +
xor esi esi +
cmp [ebp+8] esi +
jnz loc_1016602  +
push esi  +
push 54Fh  +
push offset a4337  +
push 10F1h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
cmp [ebp+0Ch] esi +
jnz loc_101661B  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a4338  +
push 10F2h  +
jmp loc_10165EE  +
push esi  +
push offset aWsman_0  +
push offset a5985  +
push offset aHttp  +
push dword ptr [ebp+8]  +
call sub_100C8C4  +
push eax  +
lea ecx [ebp+8] +
call sub_100C374  +
mov [ebp-4] esi +
cmp [ebp+8] esi +
jnz loc_1016654  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_100C51B  +
mov eax esi +
jmp loc_10165FA  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+0Ch]  +
call sub_100AC10  +
mov esi eax +
jmp loc_1016644  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1026279  +
mov eax large fs:0 +
push eax  +
mov eax 2434h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
mov edi ecx +
xor esi esi +
cmp [edi+2424h] esi +
jnz loc_10166CC  +
push esi  +
push 54Fh  +
push offset a1580  +
push 62Ch  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1016A9D  +
cmp ebx esi +
jnz loc_10166E2  +
push esi  +
push 54Fh  +
push offset a1581  +
push 62Dh  +
jmp loc_10166BB  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101670A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101670A  +
push edi  +
push offset dword_10045D4  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [edi+2428h] +
lea eax [ebp+var_2424] +
push eax  +
push ebx  +
mov [ebp+var_2424] esi +
call sub_101BB25  +
test eax eax +
jz loc_10166C5  +
cmp [ebp+var_2424] esi +
jz loc_1016776  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016756  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1016756  +
push offset dword_10045D4  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebx] +
push 4033C413h  +
mov esi 8033808Ah +
push esi  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 0Ch +
push esi  +
call ds:SetLastError  +
jmp loc_10166C5  +
xor eax eax +
inc eax  +
mov [ebp+var_2414] eax +
mov [ebp+var_2420] esi +
cmp [ebp+arg_4] esi +
jnz loc_1016A56  +
mov word ptr [ebp+var_2418] ax +
push esi  +
xor eax eax +
push 2  +
mov word ptr [ebp+var_2418+2] ax +
push [ebp+var_2418]  +
call ds:HttpInitialize  +
cmp eax esi +
jnz loc_10167BD  +
mov [ebp+var_2420] 1 +
jmp loc_10167F4  +
cmp eax 5 +
jnz loc_10167CB  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+10h]  +
jmp loc_10167EE  +
cmp eax 0Eh +
jnz loc_10167D9  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
jmp loc_10167EE  +
mov ecx [ebx] +
push eax  +
push offset aHttpinitialize  +
push 4033C360h  +
push eax  +
push ebx  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
mov [ebp+var_2414] esi +
lea ecx [ebp+var_2440] +
mov [ebp+var_2418] esi +
call sub_100FDDB  +
mov [ebp+var_4] esi +
cmp [ebp+var_2414] esi +
jz loc_1016959  +
mov ecx [edi+2428h] +
push ebx  +
lea eax [ebp+var_2440] +
push eax  +
call sub_101F246  +
mov [ebp+var_2414] eax +
cmp eax esi +
jz loc_10168EF  +
mov ecx [edi+2428h] +
push esi  +
lea eax [ebp+var_2418] +
push eax  +
lea eax [ebp+var_1410] +
push eax  +
mov esi 400h +
push esi  +
push 0BB9h  +
push ebx  +
call sub_101E427  +
mov [ebp+var_2414] eax +
test eax eax +
jz loc_10168ED  +
mov ecx [edi+2428h] +
push 0  +
lea eax [ebp+var_2418] +
push eax  +
lea eax [ebp+var_810] +
push eax  +
push esi  +
push 0BBAh  +
push ebx  +
call sub_101E427  +
mov [ebp+var_2414] eax +
test eax eax +
jz loc_10168ED  +
mov ecx [edi+2428h] +
push 0  +
lea eax [ebp+var_2418] +
push eax  +
lea eax [ebp+var_1C10] +
push eax  +
push esi  +
push 0BBDh  +
push ebx  +
call sub_101E427  +
mov [ebp+var_2414] eax +
test eax eax +
jz loc_10168ED  +
mov ecx [edi+2428h] +
push 0  +
lea eax [ebp+var_2418] +
push eax  +
lea eax [ebp+var_2410] +
push eax  +
push esi  +
push 0BBEh  +
push ebx  +
call sub_101E427  +
mov [ebp+var_2414] eax +
test eax eax +
jnz loc_1016908  +
xor esi esi +
call ds:GetLastError  +
push ebx  +
push eax  +
mov ecx edi +
call sub_1012E3B  +
cmp [ebp+var_2414] esi +
jz loc_1016959  +
jmp loc_101690A  +
xor esi esi +
mov edx offset dword_1001C58 +
lea eax [ebp+var_2410] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_101693B  +
cmp cx si +
jz loc_1016937  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_101693B  +
add eax 4 +
add edx 4 +
cmp cx si +
jnz loc_1016915  +
xor eax eax +
jmp loc_1016940  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax esi +
jz loc_1016959  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_2440] +
push eax  +
mov ecx edi +
call sub_101302F  +
mov [ebp+var_241C] esi +
mov byte ptr [ebp+var_4] 2 +
cmp [ebp+var_2414] esi +
jz loc_10169F9  +
push esi  +
lea eax [ebp+var_1C10] +
push eax  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_1410] +
push eax  +
push ebx  +
call sub_100C8C4  +
push eax  +
lea ecx [ebp+var_241C] +
call sub_101424F  +
cmp [ebp+var_241C] esi +
jnz loc_10169AC  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0Ch]  +
mov [ebp+var_2414] esi +
cmp [ebp+var_2414] esi +
jz loc_10169F9  +
lea eax [ebp+var_2428] +
push eax  +
push [ebp+var_241C]  +
lea eax [ebp+var_2440] +
push eax  +
push ebx  +
mov ecx edi +
call sub_1016299  +
test eax eax +
jz loc_10169F9  +
cmp [ebp+var_2428] esi +
jnz loc_10169F9  +
push [ebp+var_241C]  +
mov ecx edi +
push ebx  +
call sub_10165CB  +
test eax eax +
jnz loc_10169F9  +
push [ebp+var_241C]  +
call sub_10103D0  +
cmp [ebp+var_2420] esi +
jz loc_1016A38  +
push esi  +
push 2  +
call ds:HttpTerminate  +
cmp eax esi +
jz loc_1016A38  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_1016A38  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_1016A38  +
push eax  +
push offset dword_10045D4  +
push 41h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_241C] +
call sub_100C51B  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_2440] +
call sub_100FE23  +
lea eax [ebp+var_C10] +
push eax  +
push ebx  +
mov ecx edi +
call sub_1013557  +
cmp eax esi +
jz loc_1016A89  +
push 1  +
lea eax [ebp+var_C10] +
push eax  +
push ebx  +
call sub_101AE2D  +
cmp eax esi +
jz loc_1016A89  +
cmp [ebp+arg_8] esi +
jz loc_1016A89  +
push ebx  +
mov ecx edi +
call sub_101AF7A  +
cmp [ebp+var_2414] esi +
jz loc_1016A97  +
mov [ebp+var_2414] eax +
mov eax [ebp+var_2414] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016AF4  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016AF4  +
push esi  +
push offset dword_10045D4  +
push 64h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [esi+2454h] +
test eax eax +
jz loc_1016BAF  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016BAF  +
cmp dword ptr [esi+2418h] 2 +
jnz loc_1016BAF  +
mov eax [esi+2460h] +
mov ecx [esi+2464h] +
push eax  +
push ecx  +
call sub_100AC10  +
test eax eax +
jnz loc_1016BAF  +
cmp [ebp+8] eax +
jnz loc_1016B52  +
push eax  +
push 54Fh  +
push offset a2607  +
push 0A2Fh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_1016BAF  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
and dword ptr [ebp-4] 0 +
mov eax [esi+2460h] +
lea ecx [ebp+8] +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_1016299  +
test eax eax +
jz loc_1016BA3  +
cmp dword ptr [ebp+8] 0 +
jnz loc_1016BA3  +
push dword ptr [esi+2460h]  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_10165CB  +
test eax eax +
jnz loc_1016BA3  +
push dword ptr [esi+2460h]  +
call sub_10103D0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016BF2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016BF2  +
push esi  +
push offset dword_10045D4  +
push 67h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [esi+2418h] 2 +
jnz loc_1016C4E  +
lea edi [esi+2464h] +
push dword ptr [edi]  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_10165CB  +
test eax eax +
jnz loc_1016C27  +
push dword ptr [edi]  +
call sub_10103D0  +
mov eax [esi+2454h] +
test eax eax +
jz loc_1016C4E  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1016C4E  +
mov eax [esi+2460h] +
push ecx  +
push offset aDAGxS158056925  +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_1010253  +
cmp dword ptr [esi+241Ch] 2 +
jnz loc_1016CA0  +
push dword ptr [esi+2458h]  +
mov ecx esi +
push dword ptr [esi+2450h]  +
call sub_1012FAC  +
mov ecx [esi+244Ch] +
test ecx ecx +
jz loc_1016CA0  +
xor eax eax +
cmp ax [ecx] +
jz loc_1016CA0  +
mov eax [esi+2454h] +
test eax eax +
jz loc_1016CA0  +
xor edx edx +
cmp dx [eax] +
jz loc_1016CA0  +
push edx  +
push dword ptr [esi+245Ch]  +
push eax  +
push ecx  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_1012EEC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_1016CE8  +
push ebx  +
push 54Fh  +
push offset a3077  +
push 0C05h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1016D71  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_1016D0E  +
push ebx  +
push 54Fh  +
push offset a3078  +
push 0C06h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1016D70  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016D4C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016D4C  +
cmp [ebp+arg_C] 0 +
mov ecx offset aValidateonly +
jnz loc_1016D33  +
mov ecx offset aForupdate +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push edi  +
push offset dword_10045D4  +
push 6Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012B4D  +
push [ebp+arg_8]  +
mov ecx edi +
push esi  +
push ebx  +
call sub_1019FFD  +
test eax eax +
jz loc_1016D70  +
push [ebp+arg_10]  +
mov ecx edi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 4  +
push esi  +
push ebx  +
call sub_101608E  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_1016D94  +
push eax  +
push esi  +
call sub_100FEA4  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
mov edi [ebp+8] +
xor ebx ebx +
cmp edi ebx +
jnz loc_1016DDE  +
push ebx  +
push 54Fh  +
push offset a3168  +
push 0C60h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1016ECE  +
cmp [ebp+0Ch] ebx +
jnz loc_1016DF5  +
push edi  +
push 54Fh  +
push offset a3169  +
push 0C61h  +
jmp loc_1016DCD  +
cmp [ebp+10h] ebx +
jnz loc_1016E0C  +
push edi  +
push 54Fh  +
push offset a3170  +
push 0C62h  +
jmp loc_1016DCD  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016E34  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016E34  +
push ecx  +
push offset dword_10045D4  +
push 72h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp+10h]  +
xor esi esi +
inc esi  +
call sub_100ACE8  +
test eax eax +
jnz loc_1016EAC  +
mov eax [ebp-14h] +
cmp [eax+248Ch] ebx +
jnz loc_1016EAC  +
push dword ptr [ebp+10h]  +
push edi  +
call sub_100DEEB  +
push eax  +
lea ecx [ebp+8] +
call sub_100C374  +
mov [ebp-4] ebx +
cmp [ebp+8] ebx +
jnz loc_1016E6C  +
xor esi esi +
jmp loc_1016EA0  +
push ebx  +
push ebx  +
push offset a1_3_6_1_5_5_7_  +
push dword ptr [ebp+8]  +
push 20000h  +
push edi  +
call sub_100D77F  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov byte ptr [ebp-4] 1 +
cmp [ebp-10h] ebx +
jnz loc_1016E95  +
xor esi esi +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call sub_100B90C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_100DE47  +
cmp [ebp+14h] ebx +
jnz loc_1016ECC  +
cmp esi ebx +
jz loc_1016ECC  +
push dword ptr [ebp+18h]  +
mov ecx [ebp-14h] +
push ebx  +
push dword ptr [ebp+10h]  +
push 16h  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_101608E  +
mov esi eax +
mov eax esi +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
xor ecx ecx +
mov [ebp+var_4] esi +
cmp ebx ecx +
jnz loc_1016F12  +
push ecx  +
push 54Fh  +
push offset a3221  +
push 0C95h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1017103  +
cmp [ebp+arg_8] ecx +
jnz loc_1016F29  +
push ebx  +
push 54Fh  +
push offset a3222  +
push 0C96h  +
jmp loc_1016F01  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016F64  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1016F64  +
cmp [ebp+arg_C] ecx +
mov ecx offset aValidateonly +
jnz loc_1016F4D  +
mov ecx offset aForupdate +
push ecx  +
push [ebp+arg_4]  +
push esi  +
push offset dword_10045D4  +
push 73h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B8AF  +
push edi  +
push 3Fh  +
push [ebp+arg_4]  +
call sub_10199B1  +
mov edi eax +
test edi edi +
jnz loc_1016F87  +
push ebx  +
push 54Fh  +
push offset a3228  +
push 0C9Ch  +
jmp loc_1016FE9  +
mov ecx [edi+0Ch] +
mov eax ecx +
dec eax  +
jz loc_10170BA  +
dec eax  +
jz loc_101703F  +
dec eax  +
dec eax  +
jz loc_1017028  +
sub eax 4 +
jz loc_1017011  +
sub eax 0Eh +
jz loc_1016FFA  +
sub eax 1Ch +
jz loc_1017028  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1016FD9  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1016FD9  +
push ecx  +
push offset dword_10045D4  +
push 74h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
push 54Fh  +
push offset a3287  +
push 0CD7h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1017102  +
push [ebp+arg_14]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
push ebx  +
call sub_1016DA5  +
jmp loc_10170E6  +
push [ebp+arg_14]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
push ebx  +
call sub_10161B5  +
jmp loc_1017102  +
push [ebp+arg_14]  +
mov ecx esi +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
push ebx  +
call sub_1016CB7  +
jmp loc_10170E6  +
push offset aTrue  +
push [ebp+arg_8]  +
call sub_100AC10  +
test eax eax +
jnz loc_10170A7  +
push offset a1  +
push [ebp+arg_8]  +
call sub_100AB8E  +
test eax eax +
jnz loc_10170A7  +
push offset aFalse  +
push [ebp+arg_8]  +
call sub_100AC10  +
test eax eax +
jnz loc_101709D  +
push offset a0  +
push [ebp+arg_8]  +
call sub_100AB8E  +
test eax eax +
jnz loc_101709D  +
push [ebp+arg_8]  +
mov eax [ebx] +
push 4033C37Ah  +
push 80338041h  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
xor esi esi +
jmp loc_1017100  +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push 0  +
jmp loc_10170AF  +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push 1  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1015DD3  +
jmp loc_10170E6  +
and [ebp+arg_4] 0 +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_8]  +
call sub_100ADE8  +
mov esi eax +
test esi esi +
jz loc_10170EA  +
push [ebp+arg_14]  +
mov ecx [ebp+var_4] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push edi  +
push ebx  +
call sub_1015CF6  +
mov esi eax +
jmp loc_1017100  +
push [ebp+arg_8]  +
mov eax [ebx] +
push 4033C37Bh  +
push 80338041h  +
push ebx  +
call dword ptr [eax+1Ch]  +
add esp 10h +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 838h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx ecx +
mov ecx [ebp+arg_C] +
mov [ebp+var_828] ecx +
push esi  +
mov esi [ebp+arg_0] +
xor ecx ecx +
mov [ebp+var_82C] esi +
mov [ebp+var_820] eax +
cmp [ebx+2424h] ecx +
jnz loc_101716D  +
push ecx  +
push 54Fh  +
push offset a492  +
push 1ECh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1017995  +
cmp esi ecx +
jnz loc_1017183  +
push ecx  +
push 54Fh  +
push offset a493  +
push 1EDh  +
jmp loc_101715C  +
cmp eax ecx +
jnz loc_1017199  +
push esi  +
push 54Fh  +
push offset a494  +
push 1EEh  +
jmp loc_101715C  +
mov eax off_102B00C +
push edi  +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_10171F1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10171C9  +
push ebx  +
push offset dword_10045D4  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax edi +
jz loc_10171F1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10171F1  +
push [ebp+var_820]  +
push [ebp+arg_4]  +
push offset dword_10045D4  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
push 3Fh  +
push [ebp+arg_4]  +
mov [ebp+var_81C] 1 +
call sub_10199B1  +
mov [ebp+var_834] eax +
test eax eax +
jnz loc_1017224  +
push esi  +
push 54Fh  +
push offset a504  +
push 1F8h  +
jmp loc_10176A1  +
cmp dword ptr [eax+0Ch] 32h +
mov edi 400h +
jz loc_101726B  +
mov eax [ebp+var_820] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1017238  +
sub eax edx +
sar eax 1 +
cmp eax edi +
jb loc_101726B  +
mov eax [esi] +
push edi  +
push [ebp+var_828]  +
push 4033C38Bh  +
push 80338035h  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 14h +
and [ebp+var_81C] 0 +
cmp dword ptr [ebx+2470h] 0 +
jz loc_10172FE  +
mov ecx [ebx+2428h] +
and [ebp+var_824] 0 +
lea eax [ebp+var_824] +
push eax  +
push esi  +
call sub_101BB25  +
test eax eax +
jnz loc_101729C  +
and [ebp+var_81C] eax +
cmp [ebp+var_81C] 0 +
jz loc_1017489  +
cmp [ebp+var_824] 0 +
jz loc_10172FE  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10172D9  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10172D9  +
push offset dword_10045D4  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [esi] +
push 4033C413h  +
push 8033808Ah  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 0Ch +
push 8033808Ah  +
call ds:SetLastError  +
and [ebp+var_81C] 0 +
cmp [ebp+var_81C] 0 +
jz loc_1017489  +
cmp [ebp+arg_4] 0BB8h +
jz loc_1017321  +
cmp [ebp+arg_4] 0BB9h +
jnz loc_10173AD  +
cmp dword ptr [ebx+2470h] 1 +
push 0  +
jz loc_1017340  +
push 54Fh  +
push offset a548  +
push 224h  +
jmp loc_10176A1  +
mov ecx [ebx+2428h] +
and [ebp+var_824] 0 +
lea eax [ebp+var_824] +
push eax  +
lea eax [ebp+var_818] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_101E427  +
mov [ebp+var_81C] eax +
test eax eax +
jz loc_101739E  +
lea eax [ebp+var_818] +
push eax  +
push [ebp+var_820]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10173AD  +
mov eax [esi] +
push 4033C414h  +
push esi  +
call dword ptr [eax+28h]  +
and [ebp+var_81C] 0 +
pop ecx  +
pop ecx  +
jmp loc_10173AD  +
call ds:GetLastError  +
push esi  +
push eax  +
mov ecx ebx +
call sub_1012E3B  +
cmp [ebp+var_81C] 0 +
jz loc_1017489  +
mov ecx [ebp+arg_4] +
mov eax 1772h +
cmp ecx 1771h +
jz loc_10173DA  +
cmp ecx eax +
jz loc_10173DA  +
cmp ecx 1770h +
jnz loc_1017489  +
cmp dword ptr [ebx+247Ch] 1 +
jz loc_10173F8  +
push esi  +
push 54Fh  +
push offset a580  +
push 244h  +
jmp loc_10176A1  +
cmp ecx eax +
jnz loc_1017412  +
push esi  +
push [ebp+var_820]  +
call sub_100AD23  +
test eax eax +
jnz loc_1017412  +
and [ebp+var_81C] eax +
and [ebp+var_824] 0 +
cmp [ebp+var_81C] 0 +
jz loc_1017489  +
mov ecx [ebx+2428h] +
push 0  +
lea eax [ebp+var_824] +
push eax  +
lea eax [ebp+var_818] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_101E427  +
mov [ebp+var_81C] eax +
test eax eax +
jz loc_101747A  +
lea eax [ebp+var_818] +
push eax  +
push [ebp+var_820]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1017489  +
mov eax [esi] +
push 80338172h  +
mov ecx esi +
call dword ptr [eax+20h]  +
and [ebp+var_81C] 0 +
jmp loc_1017489  +
call ds:GetLastError  +
push esi  +
push eax  +
mov ecx ebx +
call sub_1012E3B  +
and [ebp+var_838] 0 +
cmp [ebp+var_81C] 0 +
jz loc_101798E  +
mov ecx [ebx+2428h] +
test ecx ecx +
jnz loc_10174BC  +
push esi  +
push 54Fh  +
push offset a624  +
push 270h  +
jmp loc_10176A1  +
lea eax [ebp+var_838] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_101CCFE  +
mov [ebp+var_81C] eax +
test eax eax +
jz loc_101798E  +
cmp [ebp+var_838] 0 +
jz loc_1017643  +
mov ecx [ebx+2428h] +
and [ebp+var_824] 0 +
push 0  +
lea eax [ebp+var_824] +
push eax  +
lea eax [ebp+var_818] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_101E427  +
mov [ebp+var_81C] eax +
test eax eax +
jz loc_1017634  +
push 3Fh  +
push [ebp+arg_4]  +
call sub_10199B1  +
test eax eax +
jnz loc_101753F  +
push esi  +
push 54Fh  +
push offset a649  +
push 289h  +
jmp loc_10176A1  +
cmp dword ptr [eax+0Ch] 2 +
lea eax [ebp+var_818] +
push eax  +
push [ebp+var_820]  +
jnz loc_10175AC  +
call sub_100AC10  +
test eax eax +
jnz loc_1017643  +
push offset a1  +
push [ebp+var_820]  +
call sub_100AC10  +
test eax eax +
jz loc_101758C  +
push offset aTrue  +
lea eax [ebp+var_818] +
push eax  +
call sub_100AC10  +
test eax eax +
jnz loc_1017643  +
push offset a0  +
push [ebp+var_820]  +
call sub_100AC10  +
test eax eax +
jz loc_10175B9  +
push offset aFalse  +
lea eax [ebp+var_818] +
push eax  +
call sub_100AC10  +
test eax eax +
jnz loc_1017643  +
and dword ptr [ebp+var_18] 0 +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
push 0Ah  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+arg_4]  +
call ds:_itow  +
add esp 0Ch +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017602  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1017602  +
push [ebp+arg_4]  +
push offset dword_10045D4  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_828] +
test eax eax +
jnz loc_101760F  +
lea eax [ebp+var_18] +
mov ecx [esi] +
push eax  +
push 4033C411h  +
mov edi 8033808Ah +
push edi  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push edi  +
call ds:SetLastError  +
and [ebp+var_81C] 0 +
jmp loc_1017643  +
call ds:GetLastError  +
push esi  +
push eax  +
mov ecx ebx +
call sub_1012E3B  +
xor edi edi +
cmp [ebp+var_81C] edi +
jz loc_101798E  +
push edi  +
push [ebp+var_828]  +
mov ecx ebx +
push 1  +
push [ebp+var_820]  +
push [ebp+arg_4]  +
push esi  +
call sub_1016EDB  +
mov [ebp+var_81C] eax +
cmp eax edi +
jz loc_101798E  +
mov eax [ebp+var_834] +
cmp dword ptr [eax+0Ch] 32h +
jnz loc_101779A  +
cmp [ebx+2408h] edi +
jz loc_10176B0  +
push esi  +
push 54Fh  +
push offset a696  +
push 2B8h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
jmp loc_101777D  +
mov eax [ebp+var_820] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_10176B9  +
sub eax edx +
sar eax 1 +
lea esi [eax+1] +
push 0  +
lea eax [ebp-82Dh] +
push eax  +
push 2  +
xor ecx ecx +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
lea edi [ebx+2410h] +
push eax  +
mov ecx edi +
call sub_101569E  +
mov edi [edi] +
test edi edi +
jnz loc_101770A  +
mov ecx [ebp+var_82C] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_101777D  +
push [ebp+var_820]  +
push esi  +
push edi  +
call sub_100B5BB  +
mov esi eax +
test esi esi +
jge loc_1017784  +
mov edi esi +
sar edi 10h +
and edi 1FFFh +
mov ebx 0FFFFh +
cmp edi 7 +
jnz loc_1017734  +
and eax ebx +
mov ecx [ebp+var_82C] +
mov edx [ecx] +
push eax  +
push offset aStringcchcopy  +
push 4033C364h  +
push ecx  +
call dword ptr [edx+28h]  +
add esp 10h +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101777D  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101777D  +
cmp edi 7 +
jnz loc_101776A  +
and esi ebx +
push esi  +
push offset dword_10045D4  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
jmp loc_1017994  +
mov eax [ebp+var_834] +
mov eax [eax] +
mov [ebx+2414h] eax +
xor eax eax +
inc eax  +
jmp loc_1017994  +
mov [ebp+var_828] edi +
cmp [ebx+2400h] edi +
jbe loc_1017916  +
and [ebp+var_824] 0 +
mov eax off_102B00C +
mov edi offset dword_10045D4 +
mov esi [ebx+240Ch] +
add esi [ebp+var_824] +
cmp eax offset off_102B00C +
jz loc_1017803  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017803  +
lea ecx [esi+8] +
push ecx  +
lea ecx [esi+808h] +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push [ebp+var_828]  +
push ebx  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012CFB  +
mov eax off_102B00C +
mov ecx [esi] +
cmp [ebp+arg_4] ecx +
jz loc_1017835  +
test ecx ecx +
jz loc_1017897  +
inc [ebp+var_828]  +
mov ecx [ebp+var_828] +
add [ebp+var_824] 1008h +
cmp ecx [ebx+2400h] +
jb loc_10177BD  +
jmp loc_1017916  +
push [ebp+var_820]  +
lea edi [esi+8] +
push 400h  +
push edi  +
call sub_100B5BB  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_81C] ecx +
test ecx ecx +
jz loc_10178FC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10178F3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10178F3  +
push edi  +
lea ecx [esi+808h] +
push ecx  +
push [ebp+arg_4]  +
push ebx  +
push offset dword_10045D4  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1012B4D  +
jmp loc_10178F3  +
push [ebp+var_820]  +
lea eax [esi+8] +
push 400h  +
push eax  +
call sub_100B5BB  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov [ebp+var_81C] ecx +
test ecx ecx +
jz loc_10178FC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10178E8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10178E8  +
push [ebp+var_828]  +
push [ebp+arg_4]  +
push edi  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax [ebp+arg_4] +
inc dword ptr [ebx+2408h]  +
mov [esi] eax +
mov dword ptr [esi+4] 1 +
jmp loc_1017916  +
mov ecx [ebp+var_82C] +
mov edx [ecx] +
push eax  +
push offset aStringcchcopy  +
push 4033C362h  +
push ecx  +
call dword ptr [edx+28h]  +
add esp 10h +
xor edi edi +
cmp [ebp+var_81C] edi +
jz loc_101798E  +
mov eax [ebp+var_828] +
mov esi [ebp+arg_4] +
cmp eax [ebx+2400h] +
jnz loc_101794C  +
mov eax [ebp+var_82C] +
mov ecx [eax] +
push esi  +
push 4033C38Ah  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 0Ch +
mov [ebp+var_81C] edi +
cmp [ebp+var_81C] edi +
jz loc_101798E  +
cmp esi 0BB8h +
jz loc_1017984  +
cmp esi 0BBAh +
jz loc_1017984  +
cmp esi 0BB9h +
jz loc_1017984  +
cmp esi 0BBBh +
jz loc_1017984  +
cmp esi 0BBDh +
jz loc_1017984  +
cmp esi 0BBEh +
jnz loc_101798E  +
mov dword ptr [ebx+2448h] 1 +
mov eax [ebp+var_81C] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
cmp ebx edi +
jnz loc_10179E0  +
push edi  +
push 54Fh  +
push offset a2530  +
push 9E2h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1017AFF  +
cmp [ebp+arg_4] edi +
jnz loc_10179F7  +
push ebx  +
push 54Fh  +
push offset a2531  +
push 9E3h  +
jmp loc_10179CF  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017A1F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017A1F  +
push esi  +
push offset dword_10045D4  +
push 63h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [esi+2410h] +
xor eax eax +
inc eax  +
mov [ebp+var_4] edi +
cmp ecx edi +
jz loc_1017A93  +
cmp [esi+2408h] edi +
jz loc_1017A49  +
push ebx  +
push 54Fh  +
push offset a2539  +
push 9EBh  +
jmp loc_10179CF  +
mov eax [esi+2414h] +
cmp eax edi +
jnz loc_1017A68  +
push ebx  +
push 54Fh  +
push offset a2540  +
push 9ECh  +
jmp loc_10179CF  +
lea edx [ebp+var_4] +
push edx  +
push edi  +
push edi  +
push ecx  +
push eax  +
push ebx  +
mov ecx esi +
call sub_1016EDB  +
test eax eax +
jz loc_10179D9  +
cmp [ebp+var_4] edi +
jz loc_1017A8E  +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1017AFF  +
xor ebx ebx +
cmp [esi+2408h] edi +
jbe loc_1017AFF  +
mov [ebp+var_8] edi +
mov ecx [esi+240Ch] +
add ecx [ebp+var_8] +
cmp [ecx+4] edi +
jz loc_1017AEF  +
mov edx [ecx] +
cmp edx 0BB8h +
jz loc_1017AEF  +
cmp edx 0BB9h +
jz loc_1017AEF  +
cmp edx 1774h +
jz loc_1017AEF  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push edi  +
add ecx 8 +
push ecx  +
push edx  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_1016EDB  +
cmp eax edi +
jz loc_1017AFF  +
cmp [ebp+var_4] edi +
jz loc_1017AEF  +
mov ecx [ebp+arg_4] +
mov dword ptr [ecx] 1 +
add [ebp+var_8] 1008h +
inc ebx  +
cmp ebx [esi+2408h] +
jb loc_1017AA0  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov edi ecx +
xor esi esi +
cmp [ebp+8] esi +
jnz loc_1017B41  +
push esi  +
push 54Fh  +
push offset a3630  +
push 0E2Eh  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1017C5E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017B6C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017B6C  +
push edi  +
push offset dword_10045D4  +
push 87h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+0Ch] +
xor eax eax +
inc eax  +
cmp [ecx+10h] eax +
jnz loc_1017C5E  +
mov eax [edi+2408h] +
xor ebx ebx +
mov [ebp+0Ch] esi +
mov [ebp-10h] esi +
cmp eax esi +
jbe loc_1017BC8  +
mov ecx [edi+240Ch] +
cmp dword ptr [esi+ecx+4] 0 +
jz loc_1017BBF  +
mov edx [esi+ecx] +
cmp edx 0BBBh +
jnz loc_1017BB0  +
mov dword ptr [ebp+0Ch] 1 +
lea ebx [esi+ecx+8] +
cmp edx 0BBEh +
jnz loc_1017BBF  +
mov dword ptr [ebp-10h] 1 +
add esi 1008h +
dec eax  +
jnz loc_1017B93  +
xor esi esi +
inc esi  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_1017BEB  +
push dword ptr [ebp+8]  +
call sub_100E06F  +
mov ecx [ebp+8] +
mov ebx eax +
mov eax [ecx] +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_1017B3A  +
xor eax eax +
cmp [ebp-10h] eax +
jnz loc_1017C5C  +
mov [ebp-10h] eax +
mov dword ptr [ebp-4] 1 +
mov [ebp+0Ch] eax +
mov byte ptr [ebp-4] 3 +
lea eax [ebp+0Ch] +
push eax  +
push ebx  +
push dword ptr [ebp+8]  +
call sub_100CF58  +
mov esi eax +
test esi esi +
jz loc_1017C44  +
push 0  +
push ebx  +
push 0BBBh  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_101710E  +
mov esi eax +
test esi esi +
jz loc_1017C44  +
push 0  +
push dword ptr [ebp+0Ch]  +
mov ecx edi +
push 0BBEh  +
push dword ptr [ebp+8]  +
call sub_101710E  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+0Ch] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100B90C  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017C9C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017C9C  +
push edi  +
push offset dword_10045D4  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi [ebp+arg_4] +
push 0  +
push dword ptr [esi+8]  +
mov ecx edi +
push 1770h  +
push [ebp+arg_0]  +
call sub_101710E  +
test eax eax +
jz loc_1017CE3  +
push 0  +
push dword ptr [esi+0Ch]  +
mov ecx edi +
push 1771h  +
push [ebp+arg_0]  +
call sub_101710E  +
test eax eax +
jz loc_1017CE3  +
push 0  +
push dword ptr [esi+10h]  +
mov ecx edi +
push 1772h  +
push [ebp+arg_0]  +
call sub_101710E  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017D1E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017D1E  +
push esi  +
push offset dword_10045D4  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_4] +
push 0  +
push dword ptr [eax+8]  +
mov ecx esi +
push 0BC7h  +
push [ebp+arg_0]  +
call sub_101710E  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1810h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1808] ebx +
mov [ebp+var_180C] esi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1017D97  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1017D97  +
push ebx  +
push offset dword_10045D4  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi [esi+10h] +
test esi esi +
jnz loc_1017DA5  +
mov eax offset aHttp_0 +
jmp loc_1017DB3  +
cmp esi 1 +
jnz loc_1017EB7  +
mov eax offset aHttps_0 +
push 0  +
push eax  +
push 0BB9h  +
push edi  +
mov ecx ebx +
call sub_101710E  +
mov esi eax +
test esi esi +
jz loc_1017EB3  +
mov ecx [ebx+2428h] +
and [ebp+var_1810] 0 +
push 0  +
lea eax [ebp+var_1810] +
push eax  +
lea eax [ebp+var_1804] +
push eax  +
push 400h  +
mov ebx 0BB8h +
push ebx  +
push edi  +
call sub_101E427  +
mov esi eax +
test esi esi +
jz loc_1017E1B  +
mov ecx [ebp+var_1808] +
push 0  +
lea eax [ebp+var_1804] +
push eax  +
push ebx  +
push edi  +
call sub_101710E  +
mov esi eax +
jmp loc_1017E3F  +
mov ebx [edi] +
push 14Eh  +
push offset aDW7rtmAdminW_9  +
call ds:GetLastError  +
push eax  +
push offset aCconfigmanag_0  +
push 4033C365h  +
push edi  +
call dword ptr [ebx+28h]  +
add esp 18h +
test esi esi +
jz loc_1017EB3  +
lea eax [ebp+var_1004] +
push eax  +
push [ebp+var_180C]  +
mov ebx 0BBAh +
push ebx  +
push edi  +
call sub_10115F6  +
mov esi eax +
test esi esi +
jz loc_1017EB3  +
mov ecx [ebp+var_1808] +
push 0  +
lea eax [ebp+var_1004] +
push eax  +
push ebx  +
push edi  +
call sub_101710E  +
mov esi eax +
test esi esi +
jz loc_1017EB3  +
lea eax [ebp+var_804] +
push eax  +
push [ebp+var_180C]  +
add ebx 3 +
push ebx  +
push edi  +
call sub_10115F6  +
mov esi eax +
test esi esi +
jz loc_1017EB3  +
mov ecx [ebp+var_1808] +
push 0  +
lea eax [ebp+var_804] +
push eax  +
push ebx  +
push edi  +
call sub_101710E  +
mov esi eax +
mov eax esi +
jmp loc_1017ED3  +
push edi  +
push 54Fh  +
push offset a310  +
push 136h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov esi ecx +
xor ecx ecx +
mov [ebp-43Ch] eax +
cmp [esi+2424h] ecx +
jnz loc_1017F2E  +
push ecx  +
push 54Fh  +
push offset a800  +
push 320h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10184E6  +
cmp eax ecx +
jnz loc_1017F44  +
push ecx  +
push 54Fh  +
push offset a801  +
push 321h  +
jmp loc_1017F1D  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx 200000h +
cmp eax edi +
jz loc_1017F8F  +
test [eax+1Ch] ebx +
jz loc_1017F74  +
push esi  +
push offset dword_10045D4  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1017F8F  +
test [eax+1Ch] ebx +
jz loc_1017F8F  +
push offset dword_10045D4  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor edi edi +
xor eax eax +
inc edi  +
mov [ebp-444h] eax +
mov [ebp-44Ch] eax +
cmp [esi+2488h] eax +
jnz loc_1017FB7  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1013299  +
mov edi eax +
lea ecx [ebp-464h] +
call sub_100FDDB  +
and dword ptr [ebp-4] 0 +
test edi edi +
jz loc_1018121  +
cmp dword ptr [esi+2470h] 0 +
jz loc_1018121  +
push dword ptr [ebp-43Ch]  +
mov ecx [esi+2428h] +
lea eax [ebp-464h] +
push eax  +
call sub_101F246  +
mov edi eax +
test edi edi +
jnz loc_1018012  +
call ds:GetLastError  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
push eax  +
call sub_1012E3B  +
jmp loc_1018121  +
cmp dword ptr [esi+2488h] 0 +
jz loc_1018031  +
lea eax [ebp-464h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1017B0B  +
mov edi eax +
test edi edi +
jz loc_1018121  +
lea eax [ebp-464h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1013852  +
mov edi eax +
test edi edi +
jz loc_1018121  +
xor eax eax +
inc eax  +
mov [ebp-440h] ax +
xor eax eax +
push eax  +
push 2  +
mov [ebp-43Eh] ax +
push dword ptr [ebp-440h]  +
call ds:HttpInitialize  +
test eax eax +
jnz loc_10180AC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10180A0  +
test [eax+1Ch] ebx +
jz loc_10180A0  +
push offset dword_10045D4  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov dword ptr [ebp-444h] 1 +
jmp loc_101810E  +
cmp eax 5 +
jnz loc_10180E5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10180D8  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10180D8  +
push offset dword_10045D4  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp-43Ch] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_101810C  +
mov ecx [ebp-43Ch] +
cmp eax 0Eh +
jnz loc_10180F7  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_101810C  +
mov edx [ecx] +
push eax  +
push offset aHttpinitialize  +
push 4033C360h  +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
add esp 14h +
xor edi edi +
test edi edi +
jz loc_1018121  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_101585B  +
mov edi eax +
lea ecx [ebp-438h] +
call sub_101314D  +
mov byte ptr [ebp-4] 1 +
xor ebx ebx +
cmp edi ebx +
jz loc_1018188  +
cmp [esi+2478h] ebx +
jz loc_1018188  +
push dword ptr [ebp-43Ch]  +
mov ecx [esi+2428h] +
lea eax [ebp-438h] +
push eax  +
call sub_101F1B2  +
mov edi eax +
cmp edi ebx +
jnz loc_1018172  +
call ds:GetLastError  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
push eax  +
call sub_1012E3B  +
jmp loc_1018188  +
lea eax [ebp-438h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1013D19  +
mov edi eax +
cmp [esi+247Ch] ebx +
jz loc_101824A  +
lea ecx [ebp-228h] +
mov dword ptr [esi+2484h] 1 +
call sub_1013097  +
mov byte ptr [ebp-4] 2 +
cmp edi ebx +
jz loc_101823B  +
push dword ptr [ebp-43Ch]  +
mov ecx [esi+2428h] +
lea eax [ebp-228h] +
push eax  +
call sub_101F0C5  +
mov edi eax +
cmp edi ebx +
jnz loc_10181E9  +
call ds:GetLastError  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
push eax  +
call sub_1012E3B  +
jmp loc_101823B  +
cmp [esi+2488h] ebx +
jz loc_1018207  +
lea eax [ebp-228h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1012DDA  +
mov edi eax +
cmp edi ebx +
jz loc_101823B  +
lea eax [ebp-228h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1013ACA  +
mov edi eax +
cmp edi ebx +
jz loc_101823B  +
lea eax [ebp-44Ch] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1014D2B  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-228h] +
call sub_10130F2  +
mov eax [esi+2488h] +
xor ebx ebx +
mov [ebp-448h] ebx +
mov [ebp-440h] ebx +
cmp eax ebx +
jz loc_101831C  +
cmp [esi+2470h] ebx +
jz loc_101829E  +
cmp edi ebx +
jz loc_1018336  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1014B1D  +
mov edi eax +
test edi edi +
jz loc_1018336  +
xor eax eax +
inc eax  +
mov [ebp-440h] eax +
mov [ebp-448h] eax +
jmp loc_101831C  +
cmp eax ebx +
jz loc_101831C  +
cmp [esi+247Ch] ebx +
jz loc_10182D0  +
cmp edi ebx +
jz loc_1018336  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_10143CE  +
mov edi eax +
test edi edi +
jz loc_1018336  +
xor ebx ebx +
inc ebx  +
mov [ebp-440h] ebx +
jmp loc_101831C  +
cmp eax ebx +
jz loc_101831C  +
cmp [esi+2478h] ebx +
jz loc_10182EF  +
cmp edi ebx +
jz loc_1018336  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1014679  +
jmp loc_101830C  +
cmp eax ebx +
jz loc_101831C  +
cmp [esi+2480h] ebx +
jz loc_101831C  +
cmp edi ebx +
jz loc_1018336  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_1014924  +
mov edi eax +
test edi edi +
jz loc_1018336  +
mov dword ptr [ebp-440h] 1 +
test edi edi +
jz loc_1018336  +
lea eax [ebp-440h] +
push eax  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_10179AA  +
mov edi eax +
cmp dword ptr [esi+247Ch] 0 +
jz loc_10183CC  +
test edi edi +
jnz loc_10183CC  +
cmp [ebp-44Ch] edi +
jz loc_101835A  +
mov ecx esi +
call sub_1013466  +
test ebx ebx +
jz loc_10183CC  +
push 1  +
lea ecx [ebp-488h] +
call sub_100E3AF  +
mov byte ptr [ebp-4] 3 +
push 1  +
push 1  +
lea eax [ebp-488h] +
push eax  +
mov ecx esi +
call sub_1013F12  +
test eax eax +
jnz loc_10183BD  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10183BD  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10183BD  +
lea ecx [ebp-488h] +
call sub_1009AD7  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-488h] +
call sub_100E3A3  +
cmp dword ptr [esi+2470h] 0 +
jz loc_10184AA  +
mov ecx esi +
test edi edi +
jz loc_10183ED  +
lea eax [ebp-464h] +
push eax  +
call sub_1016ABE  +
jmp loc_1018469  +
call sub_1016BBC  +
cmp dword ptr [ebp-448h] 0 +
jz loc_1018469  +
push 1  +
lea ecx [ebp-488h] +
call sub_100E3AF  +
mov byte ptr [ebp-4] 4 +
push 1  +
push 1  +
lea eax [ebp-488h] +
push eax  +
mov ecx esi +
call sub_1016668  +
test eax eax +
jnz loc_101845A  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101845A  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101845A  +
lea ecx [ebp-488h] +
call sub_1009AD7  +
push eax  +
mov eax off_102B00C +
push offset dword_10045D4  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-488h] +
call sub_100E3A3  +
cmp dword ptr [ebp-444h] 0 +
jz loc_10184AA  +
push 0  +
push 2  +
call ds:HttpTerminate  +
test eax eax +
jz loc_10184AA  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_10184AA  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_10184AA  +
push eax  +
push offset dword_10045D4  +
push 27h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
test edi edi +
jz loc_10184C6  +
cmp dword ptr [ebp-440h] 0 +
jz loc_10184C6  +
push dword ptr [ebp-43Ch]  +
mov ecx esi +
call sub_101AF7A  +
mov edi eax +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-438h] +
call sub_10131A2  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-464h] +
call sub_100FE23  +
mov eax edi +
call sub_100A18B  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push edi  +
mov edi ecx +
cmp [ebp+arg_0] ebx +
jnz loc_1018524  +
push ebx  +
push 54Fh  +
push offset a69  +
push 45h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10188E9  +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_8] ebx +
jz loc_1018545  +
cmp esi ebx +
jz loc_1018536  +
cmp [esi+4] ebx +
jnz loc_1018545  +
push ebx  +
push 54Fh  +
push offset a70  +
push 46h  +
jmp loc_10185AB  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101856D  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101856D  +
push edi  +
push offset dword_10045D4  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_8] +
mov [edi+2488h] eax +
mov eax [ebp+arg_C] +
mov [edi+248Ch] eax +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
cmp esi ebx +
jz loc_10185CE  +
mov eax [esi+4] +
dec eax  +
jz loc_10185CB  +
dec eax  +
jz loc_10185C6  +
dec eax  +
jz loc_10185C1  +
dec eax  +
jz loc_10185BC  +
push ebx  +
push 54Fh  +
push offset a99  +
push 63h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10188E8  +
mov [ebp+var_10] esi +
jmp loc_10185CE  +
mov [ebp+var_C] esi +
jmp loc_10185CE  +
mov [ebp+var_8] esi +
jmp loc_10185CE  +
mov [ebp+var_4] esi +
mov ecx edi +
call sub_101A103  +
mov [ebp+arg_C] eax +
push ebx  +
cmp eax ebx +
jnz loc_10185F8  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push offset aConfigregistry  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
jmp loc_10188E5  +
mov eax [edi+2400h] +
xor ecx ecx +
mov edx 1008h +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
lea ecx [ebp+arg_4+3] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
lea esi [edi+240Ch] +
push eax  +
mov ecx esi +
call sub_101569E  +
cmp [esi] ebx +
jnz loc_1018635  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov [ebp+arg_C] ebx +
cmp [ebp+arg_C] ebx +
jz loc_10188E5  +
mov eax [edi+2400h] +
imul eax eax +
push eax  +
push ebx  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] ebx +
jz loc_10186E9  +
mov eax [esi] +
mov dword ptr [edi+2408h] 6 +
mov dword ptr [eax] 0BBBh +
mov eax [esi] +
mov dword ptr [eax+1008h] 0BBDh +
mov eax [esi] +
mov dword ptr [eax+2010h] 0BBEh +
mov eax [esi] +
mov dword ptr [eax+3018h] 0BB8h +
mov eax [esi] +
mov dword ptr [eax+4020h] 0BBAh +
mov eax [esi] +
mov dword ptr [eax+5028h] 0BB9h +
mov eax [esi] +
mov [eax+4] ebx +
mov eax [esi] +
mov [eax+100Ch] ebx +
mov eax [esi] +
mov [eax+2014h] ebx +
mov eax [esi] +
mov [eax+301Ch] ebx +
mov eax [esi] +
mov [eax+4024h] ebx +
mov eax [esi] +
mov [eax+502Ch] ebx +
mov dword ptr [edi+2470h] 1 +
jmp loc_1018807  +
cmp [ebp+var_8] ebx +
jz loc_10187A6  +
mov eax [esi] +
mov dword ptr [edi+2408h] 7 +
mov dword ptr [eax] 1770h +
mov eax [esi] +
mov dword ptr [eax+1008h] 1771h +
mov eax [esi] +
mov dword ptr [eax+2010h] 1772h +
mov eax [esi] +
mov dword ptr [eax+3018h] 1773h +
mov eax [esi] +
mov dword ptr [eax+4020h] 1774h +
mov eax [esi] +
mov dword ptr [eax+5028h] 1775h +
mov eax [esi] +
mov dword ptr [eax+6030h] 1776h +
mov eax [esi] +
mov [eax+4] ebx +
mov eax [esi] +
mov [eax+100Ch] ebx +
mov eax [esi] +
mov [eax+2014h] ebx +
mov eax [esi] +
mov [eax+301Ch] ebx +
mov eax [esi] +
mov [eax+4024h] ebx +
mov eax [esi] +
mov [eax+502Ch] ebx +
mov eax [esi] +
mov [eax+6034h] ebx +
mov dword ptr [edi+247Ch] 1 +
cmp [ebp+var_8] ebx +
jz loc_10187E0  +
push [ebp+arg_0]  +
lea esi [edi+2428h] +
push [ebp+var_8]  +
call sub_101F000  +
jmp loc_1018839  +
cmp [ebp+var_C] ebx +
jz loc_10187F8  +
mov eax [esi] +
mov dword ptr [edi+2408h] 2 +
mov dword ptr [eax] 0BC8h +
mov eax [esi] +
mov dword ptr [eax+1008h] 0BC9h +
mov eax [esi] +
mov [eax+4] ebx +
mov eax [esi] +
mov [eax+100Ch] ebx +
mov dword ptr [edi+2478h] 1 +
cmp [ebp+var_C] ebx +
jz loc_1018823  +
push [ebp+arg_0]  +
lea esi [edi+2428h] +
push [ebp+var_C]  +
call sub_101EED5  +
jmp loc_1018839  +
cmp [ebp+var_10] ebx +
jz loc_1018843  +
mov dword ptr [edi+2480h] 1 +
cmp [ebp+var_4] ebx +
jz loc_101878B  +
push [ebp+arg_0]  +
lea esi [edi+2428h] +
push [ebp+var_4]  +
call sub_101EF46  +
jmp loc_1018839  +
cmp [ebp+var_10] ebx +
jz loc_1018843  +
push [ebp+arg_0]  +
lea esi [edi+2428h] +
push [ebp+var_10]  +
call sub_101DE21  +
push eax  +
mov ecx esi +
call sub_101FECA  +
jmp loc_1018883  +
lea esi [edi+2428h] +
call sub_101CB4D  +
push eax  +
mov ecx esi +
call sub_101FECA  +
cmp [esi] ebx +
jnz loc_101888A  +
call ds:GetLastError  +
mov ecx [ebp+arg_0] +
cmp eax 0Eh +
jnz loc_101886F  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_1018883  +
mov edx [ecx] +
push eax  +
push offset aGetconfigmanag  +
push 4033C360h  +
push ecx  +
call dword ptr [edx+28h]  +
add esp 10h +
cmp [esi] ebx +
jnz loc_101888A  +
mov [ebp+arg_C] ebx +
cmp [ebp+arg_C] ebx +
jz loc_10188E5  +
mov dword ptr [edi+2424h] 1 +
cmp [ebp+var_4] ebx +
jz loc_10188B2  +
cmp [ebp+arg_8] ebx +
jz loc_10188B2  +
push [ebp+var_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_1017D3F  +
jmp loc_10188E2  +
cmp [ebp+var_8] ebx +
jz loc_10188CB  +
cmp [ebp+arg_8] ebx +
jz loc_10188CB  +
push [ebp+var_8]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_1017C6B  +
jmp loc_10188E2  +
cmp [ebp+var_C] ebx +
jz loc_10188E5  +
cmp [ebp+arg_8] ebx +
jz loc_10188E5  +
push [ebp+var_C]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_1017CEE  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov eax off_102B00C +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_1018929  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1018929  +
push offset dword_10045D4  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi [ebp+8] +
xor esi esi +
push esi  +
cmp edi esi +
jnz loc_1018956  +
push 54Fh  +
push offset a468  +
push 1D4h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
lea eax [ebp+0Bh] +
push eax  +
push 2490h  +
mov [ebp-14h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-18h] ecx +
mov [ebp-4] esi +
cmp ecx esi +
jz loc_101897A  +
call sub_10156BA  +
jmp loc_101897C  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push eax  +
lea ecx [ebp-10h] +
call sub_100FF2B  +
xor eax eax +
inc eax  +
mov [ebp-4] eax +
mov ecx [ebp-10h] +
cmp ecx esi +
jnz loc_10189AD  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100FEFD  +
mov eax esi +
jmp loc_101894E  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+0Ch]  +
push edi  +
call sub_10184F3  +
test eax eax +
jnz loc_10189C7  +
push esi  +
lea ecx [ebp-10h] +
call sub_1016D7C  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10189EE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10189EE  +
push dword ptr [ebp-10h]  +
push offset dword_10045D4  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp-10h] +
mov [ebp-10h] esi +
mov esi eax +
jmp loc_101899D  +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
lea ecx [ebp-148h] +
call sub_10131FD  +
xor ebx ebx +
mov [ebp-4] ebx +
xor esi esi +
inc esi  +
push esi  +
lea ecx [ebp-190h] +
call sub_100E3AF  +
mov byte ptr [ebp-4] 1 +
lea eax [ebp-12Ch] +
push eax  +
mov dword ptr [ebp-16Ch] offset aWmiProvider +
mov dword ptr [ebp-168h] offset aPluginconfigur +
mov [ebp-164h] ebx +
mov dword ptr [ebp-160h] offset aEventForwardin +
mov dword ptr [ebp-15Ch] offset aPluginconfig_0 +
mov [ebp-158h] ebx +
mov dword ptr [ebp-154h] offset aSelPlugin +
mov dword ptr [ebp-150h] offset aPluginconfig_1 +
mov [ebp-14Ch] esi +
mov dword ptr [ebp-12Ch] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jnz loc_1018AFA  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1018ACB  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1018ACB  +
push esi  +
push offset dword_10045D4  +
push 7Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [edi] +
push esi  +
mov ecx edi +
call dword ptr [eax+20h]  +
mov [ebp-4] bl +
lea ecx [ebp-190h] +
call sub_100E3A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-148h] +
call sub_101323E  +
xor eax eax +
call sub_100A18B  +
retn 8  +
xor eax eax +
cmp byte ptr [ebp-12h] 1 +
mov [ebp-134h] ebx +
setnz al  +
lea esi [ebp-16Ch] +
mov [ebp-138h] eax +
cmp [ebp-138h] ebx +
jnz loc_1018B26  +
cmp [esi+8] ebx +
jnz loc_1018BC2  +
mov eax [esi] +
mov [ebp-140h] eax +
push ebx  +
lea eax [ebp-148h] +
push eax  +
push edi  +
call sub_10188F4  +
push eax  +
lea ecx [ebp-130h] +
call sub_100FF2B  +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-130h] +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp-190h] +
push 1777h  +
push eax  +
call sub_101710E  +
cmp eax ebx +
jz loc_1018B81  +
mov ecx [ebp-130h] +
lea eax [ebp-190h] +
push eax  +
call sub_1017EE9  +
cmp eax ebx +
jnz loc_1018BB3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1018BAE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1018BAE  +
push dword ptr [ebp-140h]  +
push offset dword_10045D4  +
push 7Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
cmp [ebp+0Ch] ebx +
jz loc_1018BE0  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-130h] +
call sub_100FEFD  +
inc dword ptr [ebp-134h]  +
add esi 0Ch +
cmp dword ptr [ebp-134h] 3 +
jb loc_1018B15  +
xor esi esi +
inc esi  +
jmp loc_1018C7E  +
lea ecx [ebp-190h] +
call sub_1009AD7  +
cmp eax 5 +
jz loc_1018C58  +
lea ecx [ebp-190h] +
call sub_1009AD7  +
cmp eax 0Eh +
jz loc_1018C58  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1018C2A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1018C2A  +
push offset dword_10045D4  +
push 80h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push ebx  +
push 54Fh  +
push offset a3497  +
push 0DA9h  +
push offset aDW7rtmAdminW_9  +
call sub_100A7B1  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-130h] +
call sub_100FEFD  +
jmp loc_1018AD3  +
mov esi [edi] +
lea ecx [ebp-190h] +
add esi 20h +
call sub_1009AD7  +
push eax  +
mov ecx edi +
call dword ptr [esi]  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-130h] +
call sub_100FEFD  +
xor esi esi +
mov [ebp-4] bl +
lea ecx [ebp-190h] +
call sub_100E3A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-148h] +
call sub_101323E  +
mov eax esi +
jmp loc_1018AF2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_1018CC4  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a26  +
push 1Ah  +
jmp loc_1018CED  +
mov eax [ebp+arg_4] +
test eax eax +
jl loc_1018CDE  +
cmp eax 2 +
jnb loc_1018CDE  +
mov eax off_102B23C[eax*4] +
mov [ecx] eax +
xor eax eax +
inc eax  +
jmp loc_1018CF9  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a27  +
push 1Bh  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_1018D1F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a38  +
push 26h  +
jmp loc_1018D5B  +
cmp [ebp+arg_4] 2 +
jnz loc_1018D2D  +
mov dword ptr [eax] offset aIp +
jmp loc_1018D47  +
cmp [ebp+arg_4] 3 +
jnz loc_1018D3B  +
mov dword ptr [eax] offset aMac +
jmp loc_1018D47  +
cmp [ebp+arg_4] 1 +
jnz loc_1018D4C  +
mov dword ptr [eax] offset dword_1001C58 +
xor eax eax +
inc eax  +
jmp loc_1018D67  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a54  +
push 36h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
jnz loc_1018D9A  +
push eax  +
push 54Fh  +
push offset a66  +
push 42h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1018EB3  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx eax +
jnz loc_1018DC2  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a67  +
push 43h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1018EB2  +
push edi  +
mov edi [ebp+arg_8] +
cmp edi eax +
jnz loc_1018DEA  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a68  +
push 44h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1018EB1  +
cmp [ebx] ax +
jnz loc_1018DF9  +
mov [edi] eax +
xor eax eax +
inc eax  +
jmp loc_1018EB1  +
push esi  +
mov esi offset asc_1003674 +
mov ecx esi +
mov eax ebx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1018E29  +
test dx dx +
jz loc_1018E25  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1018E29  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1018E03  +
xor eax eax +
jmp loc_1018E2E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1018E36  +
mov [edi] esi +
jmp loc_1018E90  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1018E3B  +
mov esi ds:_wcsnicmp +
sub eax edx +
sar eax 1 +
mov edi eax +
cmp edi 3 +
jbe loc_1018E71  +
push 3  +
push offset aIp  +
push ebx  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_1018E71  +
mov eax [ebp+arg_8] +
add ebx 6 +
mov [eax] ebx +
jmp loc_1018E90  +
cmp edi 4 +
jbe loc_1018E95  +
push 4  +
push offset aMac  +
push ebx  +
call esi  +
add esp 0Ch +
test eax eax +
jnz loc_1018E95  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] offset asc_1003674 +
xor eax eax +
inc eax  +
jmp loc_1018EB0  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a99  +
push 63h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+8]  +
mov edi [ebp+arg_0] +
push dword ptr [edi+8]  +
call sub_100AC10  +
test eax eax +
jz loc_1018EFB  +
push dword ptr [esi+0Ch]  +
push dword ptr [edi+0Ch]  +
call sub_100AC10  +
test eax eax +
jz loc_1018EFB  +
push dword ptr [esi+10h]  +
push dword ptr [edi+10h]  +
call sub_100AC10  +
test eax eax +
jz loc_1018EFB  +
xor eax eax +
inc eax  +
jmp loc_1018EFD  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1018F2F  +
cmp dword ptr [eax+4] 2 +
jnz loc_1018F2F  +
push eax  +
push ecx  +
call sub_1018EBC  +
movzx eax al +
jmp loc_1018F4C  +
push 0  +
push 54Fh  +
push offset a194  +
push 0C2h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jz loc_1018F7D  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_1018F7D  +
push eax  +
push ecx  +
call sub_100AC10  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1018F9A  +
push 0  +
push 54Fh  +
push offset a212  +
push 0D4h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor al al +
pop ebp  +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1018FCA  +
cmp dword ptr [eax+4] 3 +
jnz loc_1018FCA  +
push eax  +
push ecx  +
call sub_1018F55  +
movzx eax al +
jmp loc_1018FE7  +
push 0  +
push 54Fh  +
push offset a274  +
push 112h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ecx+0Ch] +
test esi esi +
jz loc_101902B  +
mov eax [ebp+arg_4] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_101902B  +
push edi  +
mov edi [ecx+8] +
cmp edi [eax+8] +
pop edi  +
jnz loc_1019046  +
mov ecx [ecx+10h] +
cmp ecx [eax+10h] +
jnz loc_1019046  +
push edx  +
push esi  +
call sub_100AC10  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1019048  +
push 0  +
push 54Fh  +
push offset a281  +
push 119h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor al al +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1018FF0  +
xor ecx ecx +
test al al +
setz cl  +
mov al cl +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_101909E  +
push eax  +
push 54Fh  +
push offset a328  +
push 148h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10190CC  +
cmp dword ptr [eax+4] 1 +
jz loc_10190B7  +
push 0  +
push 54Fh  +
push offset a329  +
push 149h  +
jmp loc_1019090  +
mov edx [eax+0Ch] +
mov [ecx+0Ch] edx +
mov edx [eax+8] +
mov [ecx+8] edx +
mov eax [eax+10h] +
mov [ecx+10h] eax +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
push offset a340  +
push 154h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1019116  +
cmp dword ptr [eax+4] 1 +
jnz loc_1019116  +
push eax  +
push ecx  +
call sub_1018FF0  +
movzx eax al +
jmp loc_1019133  +
push 0  +
push 54Fh  +
push offset a345  +
push 159h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jz loc_1019164  +
mov eax [ebp+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_1019164  +
push eax  +
push ecx  +
call sub_100AC10  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1019181  +
push 0  +
push 54Fh  +
push offset a352  +
push 160h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor al al +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10191B4  +
push eax  +
push 54Fh  +
push offset a392  +
push 188h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10191D6  +
cmp dword ptr [eax+4] 4 +
jz loc_10191CD  +
push 0  +
push 54Fh  +
push offset a393  +
push 189h  +
jmp loc_10191A6  +
mov eax [eax+8] +
mov [ecx+8] eax +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
push offset a402  +
push 192h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1019220  +
cmp dword ptr [eax+4] 4 +
jnz loc_1019220  +
push eax  +
push ecx  +
call sub_101913C  +
movzx eax al +
jmp loc_101923D  +
push 0  +
push 54Fh  +
push offset a407  +
push 197h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+14h] edi +
jz loc_101926E  +
push dword ptr [esi+8]  +
call sub_1008E30  +
push dword ptr [esi+0Ch]  +
call sub_1008E30  +
push dword ptr [esi+10h]  +
call sub_1008E30  +
add esp 0Ch +
mov [esi+8] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+0Ch] 0 +
jz loc_1019296  +
push dword ptr [esi+8]  +
call sub_1008E30  +
pop ecx  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+14h] 0 +
jz loc_10192B9  +
push dword ptr [esi+0Ch]  +
call sub_1008E30  +
pop ecx  +
and dword ptr [esi+0Ch] 0 +
and dword ptr [esi+14h] 0 +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov eax [ebp+8] +
dec eax  +
push 0  +
jz loc_101938C  +
dec eax  +
jz loc_1019359  +
dec eax  +
jz loc_1019331  +
dec eax  +
jz loc_101930C  +
push 54Fh  +
push offset a434  +
push 1B2h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
lea eax [ebp+0Bh] +
push eax  +
push 10h  +
mov [ebp-14h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-18h] ecx +
mov dword ptr [ebp-4] 3 +
test ecx ecx +
jz loc_1019381  +
call sub_10131FD  +
jmp loc_1019383  +
lea eax [ebp-0Dh] +
push eax  +
push 210h  +
mov [ebp-18h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 2 +
test ecx ecx +
jz loc_1019381  +
call sub_101314D  +
jmp loc_1019383  +
lea eax [ebp-0Eh] +
push eax  +
push 218h  +
mov [ebp-18h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-14h] ecx +
mov dword ptr [ebp-4] 1 +
test ecx ecx +
jz loc_1019381  +
call sub_1013097  +
jmp loc_1019383  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1019304  +
lea eax [ebp-0Fh] +
push eax  +
push 18h  +
mov [ebp-18h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-14h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_1019381  +
call sub_100FDDB  +
jmp loc_1019383  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_10193DD  +
push eax  +
push 54Fh  +
push offset a176  +
push 0B0h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019434  +
cmp dword ptr [eax+4] 2 +
jz loc_10193F6  +
push 0  +
push 54Fh  +
push offset a177  +
push 0B1h  +
jmp loc_10193CF  +
mov edx [eax+8] +
mov [ecx+8] edx +
mov edx [eax+0Ch] +
mov [ecx+0Ch] edx +
mov edx [eax+10h] +
add eax 18h +
push eax  +
mov [ecx+10h] edx +
push 100h  +
add ecx 18h +
push ecx  +
call sub_100B5BB  +
test eax eax +
jge loc_1019431  +
push 0  +
push 54Fh  +
push offset a183  +
push 0B7h  +
jmp loc_10193CF  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_1019467  +
push eax  +
push 54Fh  +
push offset a257  +
push 101h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10194B2  +
cmp dword ptr [eax+4] 3 +
jz loc_1019480  +
push 0  +
push 54Fh  +
push offset a258  +
push 102h  +
jmp loc_1019459  +
mov edx [eax+8] +
add eax 10h +
push eax  +
mov [ecx+8] edx +
push 100h  +
add ecx 10h +
push ecx  +
call sub_100B5BB  +
test eax eax +
jge loc_10194AF  +
push 0  +
push 54Fh  +
push offset a263  +
push 107h  +
jmp loc_1019459  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [ebp+8] +
xor ebx ebx +
push ebx  +
cmp eax ebx +
jnz loc_10194F6  +
push 54Fh  +
push offset a137  +
push 89h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
cmp dword ptr [eax+4] 2 +
jz loc_101950D  +
push 54Fh  +
push offset a138  +
push 8Ah  +
jmp loc_10194E2  +
lea eax [ebp-0Dh] +
push eax  +
mov edi 800h +
push edi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-14h] +
call sub_100C374  +
mov [ebp-4] ebx +
cmp [ebp-14h] ebx +
jnz loc_1019543  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C51B  +
jmp loc_10194EC  +
push ebx  +
lea eax [ebp-0Dh] +
push eax  +
push edi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-18h] +
call sub_100C374  +
mov byte ptr [ebp-4] 1 +
cmp [ebp-18h] ebx +
jnz loc_1019575  +
push 0Eh  +
call ds:SetLastError  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call sub_100C51B  +
jmp loc_1019535  +
push ebx  +
lea eax [ebp-0Dh] +
push eax  +
push edi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100C374  +
mov byte ptr [ebp-4] 2 +
cmp [ebp-1Ch] ebx +
jnz loc_10195A8  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100C51B  +
jmp loc_1019568  +
mov ecx [ebp-18h] +
mov eax [ebp-14h] +
mov [esi+0Ch] ecx +
mov ecx [ebp-1Ch] +
mov [esi+10h] ecx +
mov ecx [ebp+8] +
mov [esi+8] eax +
mov dword ptr [esi+14h] 1 +
push dword ptr [ecx+8]  +
mov edi 400h +
push edi  +
push eax  +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
mov [ebp-1Ch] ebx +
call sub_100B5BB  +
cmp eax ebx +
jz loc_10195FC  +
push ebx  +
push 54Fh  +
push offset a164  +
push 0A4h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
jmp loc_101959A  +
mov eax [ebp+8] +
push dword ptr [eax+0Ch]  +
push edi  +
push dword ptr [esi+0Ch]  +
call sub_100B5BB  +
cmp eax ebx +
jz loc_1019621  +
push ebx  +
push 54Fh  +
push offset a166  +
push 0A6h  +
jmp loc_10195F0  +
mov eax [ebp+8] +
push dword ptr [eax+10h]  +
push edi  +
push dword ptr [esi+10h]  +
call sub_100B5BB  +
cmp eax ebx +
jz loc_1019646  +
push ebx  +
push 54Fh  +
push offset a168  +
push 0A8h  +
jmp loc_10195F0  +
mov eax [ebp+8] +
add eax 18h +
push eax  +
push 100h  +
add esi 18h +
push esi  +
call sub_100B5BB  +
cmp eax ebx +
jz loc_10196A5  +
push ebx  +
push 54Fh  +
push offset a170  +
push 0AAh  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor esi esi +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call sub_100C51B  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call sub_100C51B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100C51B  +
mov eax esi +
jmp loc_10194EE  +
xor esi esi +
inc esi  +
jmp loc_101967B  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
xor ebx ebx +
push ebx  +
cmp edi ebx +
jnz loc_10196E7  +
push 54Fh  +
push offset a233  +
push 0E9h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10197B1  +
cmp dword ptr [edi+4] 3 +
jz loc_10196FE  +
push 54Fh  +
push offset a234  +
push 0EAh  +
jmp loc_10196D6  +
lea eax [ebp+0Bh] +
push eax  +
push 800h  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov [ebp-4] ebx +
mov eax [ebp-10h] +
cmp eax ebx +
jnz loc_1019735  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_10196E0  +
mov [ebp-10h] ebx +
xor ebx ebx +
inc ebx  +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
push dword ptr [edi+8]  +
push 400h  +
push eax  +
call sub_100B5BB  +
test eax eax +
jz loc_1019770  +
push 0  +
push 54Fh  +
push offset a248  +
push 0F8h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
jmp loc_1019727  +
add edi 10h +
push edi  +
push 100h  +
add esi 10h +
push esi  +
call sub_100B5BB  +
test eax eax +
jz loc_10197A3  +
push 0  +
push 54Fh  +
push offset a251  +
push 0FBh  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor ebx ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
mov eax ebx +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
push 0  +
test edi edi +
jnz loc_10197F8  +
push 54Fh  +
push offset a305  +
push 131h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
xor ebx ebx +
inc ebx  +
cmp [edi+4] ebx +
jz loc_1019811  +
push 54Fh  +
push offset a306  +
push 132h  +
jmp loc_10197E4  +
lea eax [ebp+0Bh] +
push eax  +
push 800h  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
and dword ptr [ebp-4] 0 +
mov eax [ebp-10h] +
test eax eax +
jnz loc_1019849  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_10197EE  +
and dword ptr [ebp-10h] 0 +
mov [esi+0Ch] eax +
mov [esi+14h] ebx +
push dword ptr [edi+0Ch]  +
push 400h  +
push eax  +
call sub_100B5BB  +
test eax eax +
jz loc_1019895  +
push 0  +
push 54Fh  +
push offset a318  +
push 13Eh  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor ebx ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
mov eax ebx +
jmp loc_10197F0  +
mov eax [edi+8] +
mov [esi+8] eax +
mov eax [edi+10h] +
mov [esi+10h] eax +
jmp loc_1019882  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
xor ebx ebx +
push ebx  +
cmp edi ebx +
jnz loc_10198E0  +
push 54Fh  +
push offset a372  +
push 174h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019977  +
cmp dword ptr [edi+4] 4 +
jz loc_10198F7  +
push 54Fh  +
push offset a373  +
push 175h  +
jmp loc_10198CF  +
lea eax [ebp+0Bh] +
push eax  +
push 800h  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-10h] +
call sub_100C374  +
mov [ebp-4] ebx +
mov eax [ebp-10h] +
cmp eax ebx +
jnz loc_101992E  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
jmp loc_10198D9  +
mov [ebp-10h] ebx +
xor ebx ebx +
inc ebx  +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
push dword ptr [edi+8]  +
push 400h  +
push eax  +
call sub_100B5BB  +
test eax eax +
jz loc_1019969  +
push 0  +
push 54Fh  +
push offset a385  +
push 181h  +
push offset aDW7rtmAdmin_10  +
call sub_100A7B1  +
xor ebx ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C51B  +
mov eax ebx +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 20h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax offset unk_102B248 +
xor ecx ecx +
cmp edx [eax] +
jz loc_1019A1D  +
add ecx 20h +
add eax 20h +
cmp ecx 7A0h +
jb loc_10199C0  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10199FC  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10199FC  +
push 3Dh  +
push edx  +
push offset dword_1006694  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
push 0  +
push 54Fh  +
push offset a655  +
push 28Fh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 8  +
mov ecx [ebp+arg_4] +
test [eax+0Ch] ecx +
jnz loc_1019A19  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019A4E  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1019A4E  +
push ecx  +
push edx  +
push offset dword_1006694  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
push 0  +
push 54Fh  +
push offset a647  +
push 287h  +
jmp loc_1019A0D  +
***
mov edi edi +
push esi  +
mov esi ecx +
and dword ptr [esi+2400h] 0 +
and dword ptr [esi+2404h] 0 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019AA1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019AA1  +
push esi  +
push offset dword_1006694  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
mov [esi] ax +
mov [esi+400h] ax +
mov [esi+800h] ax +
mov [esi+0C00h] ax +
mov [esi+1000h] ax +
mov [esi+1400h] ax +
mov [esi+1C00h] ax +
mov [esi+1800h] ax +
mov [esi+2000h] ax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz locret_1019B11  +
test dword ptr [eax+1Ch] 200000h +
jz locret_1019B11  +
push ecx  +
push offset dword_1006694  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1019B47  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1503  +
push 5DFh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019BE4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019B6F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019B6F  +
push ecx  +
push offset dword_1006694  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebx] +
xor eax eax +
inc eax  +
add ecx 0FFFFFBACh +
cmp ecx eax +
ja loc_1019B90  +
push 803380DCh  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100AE85  +
jmp loc_1019BE4  +
mov ecx [ebx+14h] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi 80338041h +
cmp [ebp+arg_8] ecx +
jnb loc_1019BBE  +
test esi esi +
jz loc_1019BBC  +
mov eax [esi] +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 4033C385h  +
push edi  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 18h +
xor eax eax +
mov ebx [ebx+18h] +
cmp [ebp+arg_8] ebx +
jbe loc_1019BE2  +
test esi esi +
jz loc_1019BE0  +
mov eax [esi] +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 4033C386h  +
push edi  +
push esi  +
call dword ptr [eax+1Ch]  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1019C1D  +
push edi  +
push 54Fh  +
push offset a1574  +
push 626h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019D1C  +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1019C46  +
push edi  +
push 54Fh  +
push offset a1575  +
push 627h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019D1B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019C6E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019C6E  +
push ecx  +
push offset dword_1006694  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
xor esi esi +
inc esi  +
mov eax ebx +
mov [ebp+arg_4] esi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1019C7A  +
sub eax ecx +
sar eax 1 +
mov [ebp+var_4] eax +
jnz loc_1019CA4  +
mov eax [edi] +
push offset aUrlprefix  +
push 4033C382h  +
push 80338041h  +
push edi  +
call dword ptr [eax+1Ch]  +
jmp loc_1019D10  +
push 2Fh  +
pop ecx  +
cmp cx [ebx] +
jz loc_1019CB3  +
cmp cx [ebx+eax*2-2] +
jnz loc_1019CC8  +
mov eax [edi] +
push 4033C383h  +
push 80338015h  +
push edi  +
call dword ptr [eax+1Ch]  +
add esp 0Ch +
jmp loc_1019D13  +
xor edi edi +
test eax eax +
jbe loc_1019D17  +
mov [ebp+arg_4] esi +
movzx esi word ptr [ebx+edi*2] +
push esi  +
call ds:iswalnum  +
pop ecx  +
test eax eax +
jnz loc_1019CF1  +
push 5Fh  +
pop eax  +
cmp ax si +
jz loc_1019CF1  +
push 2Fh  +
pop eax  +
cmp ax si +
jnz loc_1019CF9  +
inc edi  +
cmp edi [ebp+var_4] +
jb loc_1019CD1  +
jmp loc_1019D17  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
movzx edx si +
push edx  +
push 4033C384h  +
push 80338015h  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
and [ebp+arg_4] 0 +
mov eax [ebp+arg_4] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset dword_10264F8  +
mov eax large fs:0 +
push eax  +
mov eax 103Ch +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_8] +
test esi esi +
jnz loc_1019D85  +
push esi  +
push 54Fh  +
push offset a1628  +
push 65Ch  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019E34  +
test edi edi +
jnz loc_1019D9B  +
push esi  +
push 54Fh  +
push offset a1629  +
push 65Dh  +
jmp loc_1019D74  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019DC3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019DC3  +
push ecx  +
push offset dword_1006694  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
lea ecx [ebp+var_1048] +
call sub_1021A64  +
and [ebp+var_4] 0 +
cmp [ebp+arg_4] 7E2h +
jnz loc_1019DEF  +
push edi  +
push esi  +
lea ecx [ebp+var_1048] +
call sub_1021E0E  +
jmp loc_1019E05  +
cmp [ebp+arg_4] 7E3h +
jnz loc_1019E09  +
push edi  +
push esi  +
lea ecx [ebp+var_1048] +
call sub_1021EC8  +
mov ebx eax +
jmp loc_1019E23  +
push esi  +
push 54Fh  +
push offset a1647  +
push 66Fh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1048] +
call sub_10219E8  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
test esi esi +
jnz loc_1019E8C  +
push esi  +
push 54Fh  +
push offset a1658  +
push 67Ah  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019EFD  +
test edi edi +
jnz loc_1019EA2  +
push esi  +
push 54Fh  +
push offset a1659  +
push 67Bh  +
jmp loc_1019E7E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1019ECA  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019ECA  +
push ecx  +
push offset dword_1006694  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 1  +
push 1  +
lea ecx [ebp-834h] +
call sub_10222ED  +
and dword ptr [ebp-4] 0 +
push edi  +
push esi  +
lea ecx [ebp-834h] +
call sub_10226E1  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-834h] +
call sub_1022257  +
mov eax esi +
call sub_100A18B  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1019F37  +
push 0  +
push 54Fh  +
push offset a1677  +
push 68Dh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019FF4  +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1019F62  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1678  +
push 68Eh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1019FF3  +
mov eax off_102B00C +
push esi  +
push edi  +
mov edi offset off_102B00C +
mov esi offset dword_1006694 +
cmp eax edi +
jz loc_1019F8F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1019F8F  +
push ecx  +
push esi  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push offset aNone  +
push ebx  +
call sub_100AC10  +
test eax eax +
jnz loc_1019FEE  +
push offset aRelaxed  +
push ebx  +
call sub_100AC10  +
test eax eax +
jnz loc_1019FEE  +
push offset aStrict  +
push ebx  +
call sub_100AC10  +
test eax eax +
jnz loc_1019FEE  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1019FDD  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1019FDD  +
push ebx  +
push esi  +
push 41h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 803381B8h  +
call dword ptr [eax+20h]  +
xor eax eax +
jmp loc_1019FF1  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_101A02E  +
push ebx  +
push 54Fh  +
push offset a1540  +
push 604h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101A0D6  +
cmp [ebp+arg_4] 0 +
jnz loc_101A046  +
push ebx  +
push 54Fh  +
push offset a1541  +
push 605h  +
jmp loc_101A01D  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_101A06C  +
push ebx  +
push 54Fh  +
push offset a1542  +
push 606h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101A0D5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A094  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A094  +
push esi  +
push offset dword_1006694  +
push 3Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
xor eax eax +
inc eax  +
cmp ecx 3E9h +
jz loc_101A0CC  +
cmp ecx 453h +
jz loc_101A0F3  +
cmp ecx 7DFh +
jz loc_101A0E8  +
cmp ecx 7E1h +
jle loc_101A0D5  +
cmp ecx 7E3h +
jle loc_101A0DC  +
cmp ecx 0BBDh +
jnz loc_101A0D5  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1019BEE  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
push edi  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_1019D26  +
jmp loc_101A0D5  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1019F0A  +
jmp loc_101A0D5  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1019E55  +
jmp loc_101A0D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx offset dword_1006694 +
cmp eax esi +
jz loc_101A159  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A13E  +
push edi  +
push ebx  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A159  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A159  +
push ebx  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 3Dh  +
pop ecx  +
mov [edi+2400h] ecx +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A183  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A183  +
push ecx  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push offset aSoftwareMicr_3  +
mov esi 200h +
push esi  +
push edi  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicr_4  +
lea eax [edi+400h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicr_5  +
lea eax [edi+800h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicr_2  +
lea eax [edi+0C00h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicr_1  +
lea eax [edi+1800h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicr_0  +
lea eax [edi+1C00h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_101A235  +
push offset aSoftwareMicros  +
lea eax [edi+2000h] +
push esi  +
push eax  +
call sub_100B5BB  +
mov [ebp+var_4] eax +
test eax eax +
jge loc_101A26B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A25B  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101A25B  +
push [ebp+var_4]  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 54Fh  +
call ds:SetLastError  +
jmp loc_101A38B  +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A29A  +
push edi  +
push ebx  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A2C5  +
lea ecx [edi+400h] +
push ecx  +
push ebx  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A2F0  +
lea ecx [edi+800h] +
push ecx  +
push ebx  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A31B  +
lea ecx [edi+0C00h] +
push ecx  +
push ebx  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A342  +
lea ecx [edi+1800h] +
push ecx  +
push ebx  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A369  +
lea ecx [edi+1C00h] +
push ecx  +
push ebx  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101A38B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A38B  +
lea ecx [edi+2000h] +
push ecx  +
push ebx  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
xor eax eax +
cmp [ebp+var_4] eax +
jl loc_101A399  +
inc eax  +
mov [edi+2404h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset byte_1026573  +
mov eax large fs:0 +
push eax  +
mov eax 1044h +
call __alloca_probe  +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_10] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
mov esi [ebp+arg_8] +
mov [ebp+var_1028] edi +
xor edi edi +
mov [ebp+var_101C] ecx +
mov [ebp+var_1020] eax +
mov [ebp+phkResult] edx +
cmp eax edi +
jnz loc_101A421  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a775  +
push 307h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
jmp loc_101AA5A  +
cmp edx edi +
jnz loc_101A438  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a776  +
push 308h  +
jmp loc_101A412  +
cmp [ecx+2404h] edi +
jnz loc_101A453  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a777  +
push 309h  +
jmp loc_101A412  +
mov eax off_102B00C +
mov ebx offset dword_1006694 +
cmp eax offset off_102B00C +
jz loc_101A481  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A481  +
push ecx  +
push ebx  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
mov ecx [ebp+var_1020] +
mov ecx [ecx+8] +
mov edx ecx +
dec edx  +
mov [ebp+var_1014] edi +
mov [ebp+lpSubKey] edi +
jz loc_101A99E  +
dec edx  +
jz loc_101A98E  +
dec edx  +
jz loc_101A83D  +
dec edx  +
dec edx  +
jz loc_101A6E9  +
dec edx  +
jz loc_101A5AC  +
dec edx  +
jz loc_101A4F0  +
cmp eax offset off_102B00C +
jz loc_101A4E6  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101A4E6  +
mov edx [ebp+var_1020] +
push dword ptr [edx]  +
push ecx  +
push ebx  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov esi 54Fh +
jmp loc_101AA5A  +
cmp esi edi +
jnz loc_101A50A  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a927  +
push 39Fh  +
jmp loc_101A412  +
cmp dword ptr [esi+4] 4 +
jz loc_101A526  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a928  +
push 3A0h  +
jmp loc_101A412  +
mov esi [esi+8] +
cmp esi edi +
jnz loc_101A543  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a929  +
push 3A1h  +
jmp loc_101A412  +
mov eax [ebp+var_101C] +
push esi  +
add eax 2000h +
push eax  +
push offset aSS  +
lea eax [ebp+var_1010] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 14h +
cmp eax edi +
jz loc_101A59B  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101A593  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101A593  +
push eax  +
push ebx  +
push 21h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
push 7Ah  +
pop esi  +
jmp loc_101AA5A  +
lea eax [ebp+var_1010] +
mov [ebp+lpSubKey] eax +
jmp loc_101A9BE  +
cmp esi edi +
jnz loc_101A5C6  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a884  +
push 374h  +
jmp loc_101A412  +
cmp dword ptr [esi+4] 3 +
jz loc_101A5E2  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a885  +
push 375h  +
jmp loc_101A412  +
xor edi edi +
inc edi  +
push edi  +
lea ecx [ebp+var_1050] +
call sub_100E3AF  +
mov [ebp+var_4] edi +
lea edi [esi+10h] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101A5FC  +
sub eax edx +
sar eax 1 +
jnz loc_101A65A  +
push edi  +
push esi  +
lea eax [ebp+var_1050] +
push eax  +
call sub_101F10C  +
test eax eax +
jnz loc_101A65A  +
lea ecx [ebp+var_1050] +
call sub_1009AD7  +
mov [ebp+var_1014] eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A794  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101A794  +
push [ebp+var_1014]  +
push ebx  +
push 1Eh  +
jmp loc_101A789  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A684  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A684  +
push edi  +
push [ebp+var_101C]  +
push ebx  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
mov eax [ebp+var_101C] +
push edi  +
add eax 1C00h +
push eax  +
push offset aSS  +
lea eax [ebp+var_C10] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 14h +
test eax eax +
jz loc_101A6DE  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101A6D4  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101A6D4  +
push eax  +
push ebx  +
push 20h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov [ebp+var_1014] 7Ah +
lea eax [ebp+var_C10] +
jmp loc_101A832  +
cmp esi edi +
jnz loc_101A703  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a842  +
push 34Ah  +
jmp loc_101A412  +
cmp dword ptr [esi+4] 2 +
jz loc_101A71F  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a843  +
push 34Bh  +
jmp loc_101A412  +
push 1  +
lea ecx [ebp+var_1050] +
call sub_100E3AF  +
and [ebp+var_4] 0 +
lea edi [esi+18h] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101A738  +
sub eax edx +
sar eax 1 +
jnz loc_101A7A8  +
push edi  +
push esi  +
lea eax [ebp+var_1050] +
push eax  +
call sub_101F17B  +
test eax eax +
jnz loc_101A7A8  +
lea ecx [ebp+var_1050] +
call sub_1009AD7  +
mov [ebp+var_1014] eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A794  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101A794  +
push [ebp+var_1014]  +
push ebx  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
or [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1050] +
call sub_100E3A3  +
jmp loc_101A9AF  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101A7D2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101A7D2  +
push edi  +
push [ebp+var_101C]  +
push ebx  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
mov eax [ebp+var_101C] +
push edi  +
add eax 1800h +
push eax  +
push offset aSS  +
lea eax [ebp+var_810] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 14h +
test eax eax +
jz loc_101A82C  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101A822  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101A822  +
push eax  +
push ebx  +
push 1Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov [ebp+var_1014] 7Ah +
lea eax [ebp+var_810] +
mov [ebp+lpSubKey] eax +
jmp loc_101A794  +
cmp esi edi +
jnz loc_101A857  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a796  +
push 31Ch  +
jmp loc_101A412  +
cmp dword ptr [esi+4] 1 +
jz loc_101A873  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a797  +
push 31Dh  +
jmp loc_101A412  +
mov eax [esi+8] +
cmp eax edi +
jnz loc_101A890  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a798  +
push 31Eh  +
jmp loc_101A412  +
cmp dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_101A8AC  +
push edi  +
mov esi 54Fh +
push esi  +
push offset a799  +
push 31Fh  +
jmp loc_101A412  +
lea ecx [ebp+var_1014] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_1014] edi +
call sub_1018D02  +
test eax eax +
jnz loc_101A8CB  +
xor eax eax +
jmp loc_101AA5C  +
cmp [ebp+var_1014] edi +
jnz loc_101A8EF  +
push edi  +
push 54Fh  +
push offset a808  +
push 328h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
jmp loc_101A8C4  +
lea eax [ebp+lpSubKey] +
push eax  +
push dword ptr [esi+10h]  +
mov [ebp+lpSubKey] edi +
push edi  +
call sub_1018CA7  +
test eax eax +
jz loc_101A8C4  +
cmp [ebp+lpSubKey] edi +
jnz loc_101A923  +
push edi  +
push 54Fh  +
push offset a817  +
push 331h  +
jmp loc_101A8E3  +
push [ebp+lpSubKey]  +
mov eax [ebp+var_101C] +
push dword ptr [esi+0Ch]  +
add eax 0C00h +
push [ebp+var_1014]  +
push eax  +
push offset aSSSS  +
lea eax [ebp+var_410] +
push 200h  +
push eax  +
call sub_100B64F  +
add esp 1Ch +
cmp eax edi +
jz loc_101A983  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101A593  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101A593  +
push eax  +
push ebx  +
push 1Ah  +
jmp loc_101A588  +
lea eax [ebp+var_410] +
jmp loc_101A5A1  +
mov eax [ebp+var_101C] +
add eax 800h +
jmp loc_101A5A1  +
mov eax [ebp+var_101C] +
add eax 400h +
mov [ebp+lpSubKey] eax +
cmp [ebp+var_1014] 0 +
jnz loc_101AA54  +
xor edi edi +
mov eax [ebp+var_1028] +
cmp eax edi +
jnz loc_101A9CD  +
mov eax 80000002h +
push [ebp+phkResult]  +
mov ecx [ebp+arg_4] +
or ecx 100h +
push ecx  +
push edi  +
push [ebp+lpSubKey]  +
push eax  +
call ds:RegOpenKeyExW  +
mov esi eax +
cmp esi 2 +
jnz loc_101AA7F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101AA28  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101AA28  +
push [ebp+lpSubKey]  +
mov ecx [ebp+var_1020] +
push dword ptr [ecx+4]  +
push ebx  +
push 23h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
mov eax [ebp+var_1020] +
mov eax [eax+8] +
cmp eax 3 +
jz loc_101AA78  +
cmp eax 4 +
jz loc_101AA78  +
cmp eax 6 +
jz loc_101AA78  +
cmp eax 5 +
jz loc_101AA78  +
cmp eax 7 +
jz loc_101AA78  +
mov [ebp+var_1014] 80338005h +
mov esi [ebp+var_1014] +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn 14h  +
mov esi 80338000h +
jmp loc_101AA5A  +
cmp esi 5 +
jnz loc_101AAB2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101AA5A  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101AA5A  +
mov ecx [ebp+var_1020] +
push dword ptr [ecx+4]  +
push ebx  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_101AA5A  +
cmp esi edi +
jz loc_101AA5A  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101AA5A  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101AA5A  +
mov ecx [ebp+var_1020] +
push dword ptr [ecx+4]  +
push esi  +
push ebx  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
jmp loc_101AA5A  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-1Ch] ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_101AB73  +
mov edi 200000h +
test [eax+1Ch] edi +
jz loc_101AB55  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006694  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101AB73  +
test [eax+1Ch] edi +
jz loc_101AB73  +
push dword ptr [ebp-1Ch]  +
push offset dword_1006694  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi [ebp+8] +
xor eax eax +
cmp esi eax +
jnz loc_101AB9D  +
push eax  +
push 54Fh  +
push offset a1260  +
push 4ECh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101AE20  +
cmp [ebp+0Ch] eax +
jnz loc_101ABB4  +
push esi  +
push 54Fh  +
push offset a1261  +
push 4EDh  +
jmp loc_101AB8C  +
cmp [ebp+14h] eax +
jnz loc_101ABCB  +
push esi  +
push 54Fh  +
push offset a1262  +
push 4EEh  +
jmp loc_101AB8C  +
cmp [ebp+10h] eax +
jnz loc_101ABE2  +
push esi  +
push 54Fh  +
push offset a1263  +
push 4EFh  +
jmp loc_101AB8C  +
mov edi ds:RegOpenKeyExW +
lea ecx [ebp-14h] +
push ecx  +
push 104h  +
push eax  +
push dword ptr [ebp+14h]  +
mov ebx 80000002h +
push ebx  +
mov dword ptr [ebp-10h] 1 +
mov [ebp-14h] eax +
mov [ebp-18h] eax +
call edi  +
test eax eax +
jz loc_101AC22  +
mov ecx [esi] +
push 4033C44Ah  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
jmp loc_101ACB6  +
mov eax [ebp+14h] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101AC28  +
sub eax ecx +
mov ecx [ebp+0Ch] +
sar eax 1 +
lea esi [ecx+eax*2+2] +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101AC65  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101AC65  +
push esi  +
push offset dword_1006694  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push dword ptr [ebp+1Ch]  +
lea eax [ebp-18h] +
push eax  +
xor eax eax +
push eax  +
push dword ptr [ebp+18h]  +
push eax  +
push eax  +
push eax  +
push esi  +
push dword ptr [ebp-14h]  +
call ds:RegCreateKeyExW  +
mov esi eax +
test esi esi +
jz loc_101ACBA  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101ACAD  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101ACAD  +
push esi  +
push offset dword_1006694  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+8] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+20h]  +
and dword ptr [ebp-10h] 0 +
cmp dword ptr [ebp-14h] 0 +
mov esi ds:RegCloseKey +
jz loc_101ACCB  +
push dword ptr [ebp-14h]  +
call esi  +
cmp dword ptr [ebp-10h] 0 +
jz loc_101AE12  +
mov eax [ebp-18h] +
mov ecx [ebp+10h] +
mov [ecx] eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101AD07  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101AD07  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006694  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
and dword ptr [ebp+14h] 0 +
mov dword ptr [ebp-4] 1 +
lea eax [ebp+14h] +
push eax  +
push 2011Bh  +
push 0  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call edi  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jz loc_101AD55  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101ADF8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101ADF8  +
push esi  +
push offset dword_1006694  +
push 32h  +
jmp loc_101ADED  +
mov ecx [ebp+0Ch] +
mov eax [ebp-1Ch] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101AD81  +
cmp dx bx +
jz loc_101AD7D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101AD81  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_101AD5B  +
xor eax eax +
jmp loc_101AD86  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_101AE04  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov esi offset aStackversion +
cmp eax edi +
jz loc_101ADB9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101ADB9  +
push esi  +
push offset dword_1006694  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push 8  +
push offset Data  +
push 1  +
push ebx  +
push esi  +
push dword ptr [ebp+14h]  +
call ds:RegSetValueExW  +
mov esi eax +
cmp esi ebx +
jz loc_101AE04  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101ADF8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101ADF8  +
push esi  +
push offset dword_1006694  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp+8] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+20h]  +
mov [ebp-10h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+14h] +
call sub_100C353  +
jmp loc_101AE1D  +
cmp dword ptr [ebp-18h] 0 +
jz loc_101AE1D  +
push dword ptr [ebp-18h]  +
call esi  +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn 18h  +
***
call __EH_prolog3  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jnz loc_101AE63  +
push ebx  +
push 54Fh  +
push offset a1368  +
push 558h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101AF6D  +
cmp [ebp+0Ch] ebx +
jnz loc_101AE7A  +
push esi  +
push 54Fh  +
push offset a1369  +
push 559h  +
jmp loc_101AE52  +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_101AEA3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101AEA3  +
push offset dword_1006694  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
inc eax  +
mov [ebp+8] eax +
mov [ebp-10h] ebx +
mov [ebp-4] eax +
lea eax [ebp-10h] +
push eax  +
push 10100h  +
push ebx  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax 5 +
jnz loc_101AED7  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_101AEEB  +
cmp eax ebx +
jz loc_101AEF0  +
mov ecx [esi] +
push eax  +
push 4033C38Dh  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
mov [ebp+8] ebx +
jmp loc_101AF5E  +
mov ebx [ebp+0Ch] +
add ebx 54h +
mov eax off_102B00C +
cmp eax edi +
jz loc_101AF1B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101AF1B  +
push ebx  +
push offset dword_1006694  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push ebx  +
push dword ptr [ebp-10h]  +
call sub_100C6D3  +
xor edi edi +
cmp [ebp+10h] edi +
jz loc_101AF42  +
cmp eax 2 +
jnz loc_101AF42  +
mov ecx [esi] +
mov eax 80338000h +
push eax  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 0Ch +
jmp loc_101AF5B  +
cmp eax edi +
jz loc_101AF5E  +
mov ecx [esi] +
push eax  +
push offset aWrapperforregd  +
push 4033C360h  +
push eax  +
push esi  +
call dword ptr [ecx+1Ch]  +
add esp 14h +
mov [ebp+8] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_100C353  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
mov [ebp-64h] ecx +
mov dword ptr [ebp-60h] 1 +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx offset dword_1006694 +
cmp eax esi +
jz loc_101AFBE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101AFBE  +
push ecx  +
push ebx  +
push 4Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
and dword ptr [ebp-6Ch] 0 +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-6Ch] +
push eax  +
push 102h  +
push 0  +
push dword ptr [ebp-64h]  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov ecx eax +
mov [ebp-68h] ecx +
cmp ecx 2 +
jnz loc_101B01D  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101B00F  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101B00F  +
push dword ptr [ebp-64h]  +
push ebx  +
push 4Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 80338005h  +
mov ecx edi +
call dword ptr [eax+20h]  +
jmp loc_101B08C  +
cmp ecx 5 +
jnz loc_101B04E  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101B045  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101B045  +
push dword ptr [ebp-64h]  +
push ebx  +
push 4Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+10h]  +
jmp loc_101B08C  +
test ecx ecx +
jz loc_101B095  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101B076  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101B076  +
push dword ptr [ebp-64h]  +
push ecx  +
push ebx  +
push 4Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
push dword ptr [ebp-68h]  +
mov eax [edi] +
push offset aRegopenkeyex  +
push 4033C360h  +
push edi  +
call dword ptr [eax+28h]  +
add esp 10h +
and dword ptr [ebp-60h] 0 +
jmp loc_101B128  +
lea eax [ebp-5Ch] +
push eax  +
call sub_100BA35  +
push 4Ah  +
lea eax [ebp-5Ch] +
push eax  +
push 1  +
push 0  +
push offset ValueName  +
push dword ptr [ebp-6Ch]  +
call ds:RegSetValueExW  +
mov [ebp-68h] eax +
test eax eax +
jz loc_101B0FF  +
mov ecx [edi] +
and dword ptr [ebp-60h] 0 +
push eax  +
push offset aRegsetvalueex  +
push 4033C360h  +
push edi  +
call dword ptr [ecx+28h]  +
add esp 10h +
mov eax off_102B00C +
cmp eax esi +
jz loc_101B128  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101B128  +
push offset ValueName  +
push dword ptr [ebp-68h]  +
push ebx  +
push 4Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
jmp loc_101B128  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101B128  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101B128  +
lea ecx [ebp-5Ch] +
push ecx  +
push offset ValueName  +
push ebx  +
push 4Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-6Ch] +
call sub_100C353  +
mov eax [ebp-60h] +
call sub_100A18B  +
retn 4  +
***
call __EH_prolog3_GS  +
mov eax [ebp+18h] +
mov esi [ebp+0Ch] +
mov edi [ebp+10h] +
mov edx ecx +
mov ecx [ebp+8] +
xor ebx ebx +
mov [ebp-9Ch] ecx +
mov [ebp-0B0h] esi +
mov [ebp-0B8h] edi +
mov [ebp-0A4h] eax +
cmp eax ebx +
jnz loc_101B1A0  +
push ecx  +
push 54Fh  +
push offset a1753  +
push 6D9h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101B48E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101B1C8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101B1C8  +
push edx  +
push offset dword_1006694  +
push 43h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 80h  +
lea eax [ebp-90h] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push dword ptr [ebp-9Ch]  +
lea eax [ebp-90h] +
push eax  +
push edi  +
push esi  +
call sub_100BDB0  +
mov [ebp-94h] eax +
mov [ebp-0ACh] ebx +
cmp eax ebx +
jz loc_101B488  +
xor edi edi +
inc edi  +
mov eax edi +
mov [ebp-98h] ax +
push ebx  +
xor eax eax +
push 2  +
mov [ebp-96h] ax +
push dword ptr [ebp-98h]  +
call ds:HttpInitialize  +
cmp eax ebx +
jnz loc_101B235  +
mov [ebp-0ACh] edi +
jmp loc_101B26E  +
mov ecx [ebp-9Ch] +
cmp eax 5 +
jnz loc_101B247  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
jmp loc_101B268  +
cmp eax 0Eh +
jnz loc_101B253  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_101B268  +
mov edx [ecx] +
push eax  +
push offset aHttpinitialize  +
push 4033C360h  +
push eax  +
push ecx  +
call dword ptr [edx+1Ch]  +
add esp 14h +
mov [ebp-94h] ebx +
cmp [ebp-94h] ebx +
jz loc_101B449  +
mov esi ds:HttpQueryServiceConfiguration +
push ebx  +
lea eax [ebp-90h] +
mov [ebp-0C0h] eax +
lea eax [ebp-98h] +
push eax  +
push ebx  +
push ebx  +
push 0Ch  +
lea eax [ebp-0C4h] +
push eax  +
push edi  +
push ebx  +
mov [ebp-98h] ebx +
mov [ebp-0C4h] ebx +
mov [ebp-0BCh] ebx +
call esi  +
cmp eax 7Ah +
jz loc_101B320  +
cmp eax 2 +
jz loc_101B313  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101B2E9  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101B2E9  +
push eax  +
push offset dword_1006694  +
push 44h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
push dword ptr [ebp-9Ch]  +
push 54Fh  +
push offset a1801  +
push 709h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
mov [ebp-94h] ebx +
jmp loc_101B449  +
mov eax [ebp-0A4h] +
mov [eax] ebx +
jmp loc_101B449  +
mov [ebp-0A0h] ebx +
mov [ebp-4] edi +
push ebx  +
lea eax [ebp-0A5h] +
push eax  +
push dword ptr [ebp-98h]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-0A0h] +
call sub_101424F  +
cmp [ebp-0A0h] ebx +
jnz loc_101B361  +
mov ecx [ebp-9Ch] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov [ebp-94h] ebx +
cmp [ebp-94h] ebx +
jz loc_101B43A  +
push ebx  +
lea eax [ebp-98h] +
push eax  +
push dword ptr [ebp-98h]  +
lea eax [ebp-0C4h] +
push dword ptr [ebp-0A0h]  +
push 0Ch  +
push eax  +
push edi  +
push ebx  +
call esi  +
cmp eax ebx +
jz loc_101B3E3  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101B3BC  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101B3BC  +
push eax  +
push offset dword_1006694  +
push 45h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
push dword ptr [ebp-9Ch]  +
push 54Fh  +
push offset a1825  +
push 721h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
mov [ebp-94h] ebx +
jmp loc_101B43A  +
mov esi [ebp-0A0h] +
push 4  +
add esi 0Ch +
xor eax eax +
mov eax [ebp-0A4h] +
pop ecx  +
mov edi offset dword_10013EC +
cmps   +
jnz loc_101B404  +
mov [eax] ebx +
jmp loc_101B43A  +
mov dword ptr [eax] 1 +
cmp [ebp+14h] ebx +
jz loc_101B43A  +
mov eax [ebp-0B0h] +
mov [ebp-0B4h] eax +
mov eax [ebp-0B8h] +
mov [ebp-0B0h] eax +
lea eax [ebp-0B4h] +
push eax  +
push 2  +
push 72782h  +
call sub_100B154  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0A0h] +
call sub_100C51B  +
cmp [ebp-0ACh] ebx +
jz loc_101B488  +
push ebx  +
push 2  +
call ds:HttpTerminate  +
cmp eax ebx +
jz loc_101B488  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101B488  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101B488  +
push eax  +
push offset dword_1006694  +
push 46h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov eax [ebp-94h] +
call sub_100A18B  +
retn 14h  +
***
call __EH_prolog3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101B4CF  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101B4CF  +
push ecx  +
push offset dword_1006694  +
push 47h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+0Ch] +
lea edx [eax+2] +
xor ebx ebx +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101B4D7  +
sub eax edx +
sar eax 1 +
jnz loc_101B4EF  +
xor eax eax +
inc eax  +
jmp loc_101B626  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_100DEEB  +
push eax  +
lea ecx [ebp-14h] +
call sub_100C374  +
mov [ebp-4] ebx +
cmp [ebp-14h] ebx +
jnz loc_101B51E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100DE47  +
xor eax eax +
jmp loc_101B626  +
mov [ebp-10h] ebx +
mov byte ptr [ebp-4] 2 +
push ebx  +
push ebx  +
push offset a1_3_6_1_5_5_7_  +
push dword ptr [ebp-14h]  +
push 20000h  +
push dword ptr [ebp+8]  +
call sub_100D77F  +
push eax  +
lea ecx [ebp-10h] +
call sub_100B922  +
cmp [ebp-10h] ebx +
jnz loc_101B557  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call sub_100B90C  +
jmp loc_101B50B  +
mov esi ds:CertGetNameStringW +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 4  +
push dword ptr [ebp-10h]  +
call esi  +
push 2  +
mov edi eax +
pop edx  +
xor ecx ecx +
lea eax [edi+1] +
mul  edx +
seto cl  +
push ebx  +
neg ecx  +
or eax ecx +
lea ecx [ebp+13h] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp-18h] +
call sub_100C374  +
mov byte ptr [ebp-4] 3 +
cmp [ebp-18h] ebx +
jnz loc_101B5AE  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call sub_100C51B  +
jmp loc_101B54A  +
push edi  +
push dword ptr [ebp-18h]  +
push ebx  +
push ebx  +
push 4  +
push dword ptr [ebp-10h]  +
call esi  +
xor esi esi +
inc esi  +
cmp eax esi +
ja loc_101B5E0  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1910  +
push 776h  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
jmp loc_101B5A0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101B601  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 803380E9h  +
call dword ptr [eax+20h]  +
xor esi esi +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call sub_100C51B  +
mov [ebp-4] bl +
lea ecx [ebp-10h] +
call sub_100B90C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_100DE47  +
mov eax esi +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_4] ecx +
cmp edi ebx +
jnz loc_101B668  +
push ebx  +
push 54Fh  +
push offset a1706  +
push 6AAh  +
push offset aDW7rtmAdmin_11  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101B75C  +
cmp [ebp+arg_4] ebx +
jnz loc_101B67F  +
push edi  +
push 54Fh  +
push offset a1707  +
push 6ABh  +
jmp loc_101B657  +
cmp [ebp+arg_8] ebx +
jnz loc_101B696  +
push edi  +
push 54Fh  +
push offset a1708  +
push 6ACh  +
jmp loc_101B657  +
cmp [ebp+arg_C] ebx +
jnz loc_101B6AD  +
push edi  +
push 54Fh  +
push offset a1709  +
push 6ADh  +
jmp loc_101B657  +
cmp [ebp+arg_10] ebx +
jnz loc_101B6C4  +
push edi  +
push 54Fh  +
push offset a1710  +
push 6AEh  +
jmp loc_101B657  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101B6EC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101B6EC  +
push ecx  +
push offset dword_1006694  +
push 42h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_4] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101B6F2  +
push esi  +
sub eax ecx +
mov ecx [ebp+var_4] +
sar eax 1 +
mov esi eax +
lea eax [ebp+arg_0] +
push eax  +
push 1  +
push [ebp+arg_10]  +
mov [ebp+arg_0] ebx +
push [ebp+arg_C]  +
push edi  +
call sub_101B144  +
test eax eax +
jz loc_101B754  +
cmp [ebp+arg_0] ebx +
jz loc_101B72F  +
cmp esi ebx +
jz loc_101B758  +
push 803380E6h  +
jmp loc_101B738  +
cmp esi ebx +
jnz loc_101B741  +
push 803380E7h  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+20h]  +
jmp loc_101B754  +
push [ebp+arg_4]  +
mov ecx [ebp+var_4] +
push [ebp+arg_8]  +
push edi  +
call sub_101B49B  +
test eax eax +
jnz loc_101B758  +
xor eax eax +
jmp loc_101B75B  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_18] +
push ebx  +
push esi  +
push edi  +
test edx edx +
jz loc_101B7A1  +
cmp word ptr [edx] 0 +
jnz loc_101B785  +
mov [ebp+arg_18] 0Eh +
jmp loc_101B7A8  +
mov eax edx +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B78A  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp+arg_18] eax +
jmp loc_101B7A8  +
mov [ebp+arg_18] 0Ah +
mov ebx offset aNull +
test edx edx +
jz loc_101B7BE  +
cmp word ptr [edx] 0 +
jnz loc_101B7C0  +
mov edx offset aNull_0 +
jmp loc_101B7C0  +
mov edx ebx +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_101B7EA  +
cmp word ptr [edi] 0 +
jnz loc_101B7D1  +
push 0Eh  +
jmp loc_101B7EC  +
mov eax edi +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B7D6  +
sub eax esi +
sar eax 1 +
lea ecx [eax+eax+2] +
jmp loc_101B7ED  +
push 0Ah  +
pop ecx  +
test edi edi +
jz loc_101B802  +
cmp word ptr [edi] 0 +
jnz loc_101B7FE  +
mov eax offset aNull_0 +
jmp loc_101B804  +
mov eax edi +
jmp loc_101B804  +
mov eax ebx +
push 0  +
push [ebp+arg_18]  +
push edx  +
push 4  +
lea edx [ebp+arg_14] +
push edx  +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_101B866  +
cmp word ptr [edx] 0 +
jnz loc_101B84B  +
push 0Eh  +
jmp loc_101B868  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B851  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101B869  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101B87A  +
cmp word ptr [edx] 0 +
jnz loc_101B87F  +
mov edx offset aNull_0 +
jmp loc_101B87F  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_18] +
test edx edx +
jz loc_101B8E0  +
cmp word ptr [edx] 0 +
jnz loc_101B8C5  +
push 0Eh  +
jmp loc_101B8E2  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101B8CB  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101B8E3  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101B8F4  +
cmp word ptr [edx] 0 +
jnz loc_101B8F9  +
mov edx offset aNull_0 +
jmp loc_101B8F9  +
mov edx offset aNull +
push 0  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_14] +
push eax  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 30h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+Buffer] +
test esi esi +
jnz loc_101B957  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a119  +
push 77h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101B9E5  +
lea eax [ebp+var_4] +
push eax  +
push 3E8h  +
push [ebp+arg_0]  +
call sub_10114D4  +
test eax eax +
jz loc_101B950  +
and [ebp+Buffer] 0 +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+arg_0]  +
call sub_100B309  +
test eax eax +
jz loc_101B9AC  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101B950  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101B950  +
push eax  +
push offset dword_1006A3C  +
push 0Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
jmp loc_101B950  +
cmp [ebp+Buffer] 0 +
jnz loc_101B9DD  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101B9D9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101B9D9  +
push offset dword_1006A3C  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
jmp loc_101B9E0  +
mov eax [ebp+var_4] +
mov [esi] eax +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
xor eax eax +
inc eax  +
cmp [ecx+2428h] eax +
jz locret_101BA04  +
cmp [ecx+242Ch] eax +
jz locret_101BA04  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_4] ecx +
test esi esi +
jnz loc_101BA3B  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a226  +
push 0E2h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101BAA4  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_101BA89  +
test dword ptr [eax+1Ch] 200000h +
push edi  +
mov edi offset dword_1006A3C +
jz loc_101BA6D  +
push ecx  +
push edi  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101BA88  +
test dword ptr [eax+1Ch] 400h +
jz loc_101BA88  +
push edi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
pop edi  +
mov ecx [ebp+var_4] +
xor eax eax +
inc eax  +
and dword ptr [esi+10h] 0 +
mov [esi+8] eax +
mov dword ptr [esi+0Ch] offset asc_1003674 +
mov [ecx+2424h] eax +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_101BAC0  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp [ebp+arg_4] 0 +
push esi  +
mov esi ecx +
jnz loc_101BAFB  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a182  +
push 0B6h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
pop esi  +
leave   +
retn 8  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+arg_0]  +
call sub_101B929  +
test eax eax +
jz loc_101BAF4  +
cmp [ebp+Buffer] 0 +
jz loc_101BAF4  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_101BA0A  +
jmp loc_101BAF6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_101BB51  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a206  +
push 0CEh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101BB9A  +
mov eax [ecx+2414h] +
test eax eax +
jnz loc_101BB6F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a207  +
push 0CFh  +
jmp loc_101BB43  +
cmp dword ptr [eax+4] 1 +
jz loc_101BB89  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a208  +
push 0D0h  +
jmp loc_101BB43  +
xor eax eax +
cmp dword ptr [ecx+2424h] 1 +
setz al  +
mov [edx] eax +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101BBD3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101BBD3  +
push esi  +
push offset dword_1006A3C  +
push 60h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp dword ptr [esi+2410h] 0 +
jnz loc_101BBFC  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a2241  +
push 8C1h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101BC3B  +
mov esi [esi+2414h] +
test esi esi +
jnz loc_101BC1A  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a2242  +
push 8C2h  +
jmp loc_101BBEE  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_101BC35  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a2243  +
push 8C3h  +
jmp loc_101BBEE  +
mov eax [ecx] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
xor ebx ebx +
cmp [ebp+8] ebx +
jnz loc_101BC79  +
push ebx  +
push 54Fh  +
push offset a2437  +
push 985h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101BFAE  +
cmp [ebp+0Ch] ebx +
jnz loc_101BC92  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2438  +
push 986h  +
jmp loc_101BC68  +
cmp [ebp+10h] ebx +
jnz loc_101BCAB  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2439  +
push 987h  +
jmp loc_101BC68  +
push 30h  +
lea eax [ebp-64h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
mov [ebp-68h] ebx +
call memset  +
add esp 0Ch +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_101BCE9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101BCE9  +
push offset dword_1006A3C  +
push 65h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi offset unk_102C9E0 +
mov ecx edi +
call sub_100FC14  +
test eax eax +
jnz loc_101BD2F  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101BD1D  +
test dword ptr [eax+1Ch] 800h +
jz loc_101BD1D  +
push offset dword_1006A3C  +
push 66h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 54Fh  +
call dword ptr [eax+20h]  +
jmp loc_101BC72  +
push edi  +
lea ecx [ebp-24h] +
call sub_100E77B  +
mov [ebp-4] ebx +
or dword ptr [ebp-18h] 0FFFFFFFFh +
push 4  +
lea eax [ebp-18h] +
push eax  +
call sub_102545A  +
test eax eax +
jnz loc_101BD84  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2478  +
push 9AEh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-20h] ebx +
jnz loc_101BC72  +
mov ecx [ebp-24h] +
call sub_100FC34  +
jmp loc_101BC72  +
call sub_1025699  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jnz loc_101BDA3  +
mov eax [ebp+8] +
mov edi [eax] +
add edi 20h +
call ds:GetLastError  +
jmp loc_101BF14  +
push eax  +
call sub_10251B6  +
test eax eax +
jnz loc_101BDBF  +
push 80338152h  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
jmp loc_101BF1A  +
xor eax eax +
lea edi [ebp-34h] +
stos   +
stos   +
stos   +
mov [ebp-14h] ebx +
stos   +
mov eax off_102B00C +
cmp eax esi +
jz loc_101BDF7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101BDF7  +
push offset dword_1001C58  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 67h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A6D3  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
call ds:CredReadW  +
cmp eax ebx +
jz loc_101BE43  +
mov eax [ebp-10h] +
mov eax [eax+28h] +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp-14h] ecx +
mov eax off_102B00C +
cmp eax esi +
jz loc_101BE43  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101BE43  +
push ecx  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 68h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
cmp [ebp+14h] ebx +
jnz loc_101BE63  +
lea eax [ebp-14h] +
push eax  +
push edi  +
push dword ptr [ebp-14h]  +
call sub_100B2DB  +
test eax eax +
jz loc_101BE63  +
push 80338153h  +
jmp loc_101BDB2  +
mov eax [ebp+0Ch] +
mov [ebp-60h] eax +
mov eax [ebp+10h] +
push 2  +
mov [ebp-68h] ebx +
mov [ebp-64h] edi +
mov [ebp-5Ch] ebx +
lea edx [eax+2] +
pop ecx  +
mov si [eax] +
add eax ecx +
cmp si bx +
jnz loc_101BE7B  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [ebp-50h] eax +
mov eax [ebp+10h] +
mov [ebp-4Ch] eax +
lea eax [ebp-14h] +
mov [ebp-28h] eax +
mov eax [ebp+0Ch] +
mov [ebp-34h] eax +
lea eax [ebp-34h] +
mov [ebp-40h] eax +
push ebx  +
lea eax [ebp-68h] +
push eax  +
mov [ebp-48h] ecx +
mov dword ptr [ebp-2Ch] 4 +
mov [ebp-44h] edi +
mov [ebp-3Ch] ebx +
mov [ebp-38h] ebx +
call ds:CredWriteW  +
test eax eax +
jnz loc_101BF1A  +
mov eax off_102B00C +
mov esi ds:GetLastError +
cmp eax offset off_102B00C +
jz loc_101BEFF  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101BEFF  +
call esi  +
push eax  +
mov eax off_102B00C +
push offset dword_1006A3C  +
push 69h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
call esi  +
cmp eax 8 +
jz loc_101BE59  +
mov eax [ebp+8] +
mov edi [eax] +
add edi 20h +
call esi  +
mov ecx [ebp+8] +
push eax  +
call dword ptr [edi]  +
mov eax [ebp-10h] +
cmp eax ebx +
jz loc_101BF49  +
mov edx [eax+18h] +
mov ecx [eax+1Ch] +
cmp edx ebx +
jz loc_101BF34  +
mov [ecx] bl +
inc ecx  +
dec edx  +
jnz loc_101BF2B  +
mov eax [ebp-10h] +
push 34h  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101BF37  +
push dword ptr [ebp-10h]  +
call ds:CredFree  +
mov [ebp-10h] ebx +
mov ecx [ebp-50h] +
mov eax [ebp-4Ch] +
cmp ecx ebx +
jz loc_101BF59  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101BF53  +
push 34h  +
pop ecx  +
lea eax [ebp-68h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101BF5F  +
push dword ptr [ebp-1Ch]  +
call sub_1008E30  +
pop ecx  +
push dword ptr [ebp-18h]  +
call sub_1025555  +
test eax eax +
jnz loc_101BF91  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2575  +
push 0A0Fh  +
jmp loc_101BD60  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+44h]  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-20h] ebx +
jnz loc_101BFAC  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax esi +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
xor ebx ebx +
cmp [ebp+8] ebx +
jnz loc_101BFF2  +
push ebx  +
push 54Fh  +
push offset a2677  +
push 0A75h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101C374  +
cmp [ebp+0Ch] ebx +
jnz loc_101C00B  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2678  +
push 0A76h  +
jmp loc_101BFE1  +
push 30h  +
lea eax [ebp-64h] +
push ebx  +
push eax  +
mov [ebp-10h] ebx +
mov [ebp-68h] ebx +
call memset  +
add esp 0Ch +
mov [ebp-34h] ebx +
xor eax eax +
lea edi [ebp-30h] +
stos   +
stos   +
stos   +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_101C057  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C057  +
mov edi offset dword_1006A3C +
push edi  +
push 70h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_101C05C  +
mov edi offset dword_1006A3C +
mov ecx offset unk_102C9E0 +
call sub_100FC14  +
test eax eax +
jnz loc_101C09C  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C08A  +
test dword ptr [eax+1Ch] 800h +
jz loc_101C08A  +
push edi  +
push 71h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 54Fh  +
call dword ptr [eax+20h]  +
jmp loc_101BFEB  +
push offset unk_102C9E0  +
lea ecx [ebp-24h] +
call sub_100E77B  +
mov [ebp-4] ebx +
or dword ptr [ebp-18h] 0FFFFFFFFh +
push 4  +
lea eax [ebp-18h] +
push eax  +
call sub_102545A  +
test eax eax +
jnz loc_101C0F5  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2711  +
push 0A97h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-20h] ebx +
jnz loc_101BFEB  +
mov ecx [ebp-24h] +
call sub_100FC34  +
jmp loc_101BFEB  +
call sub_1025699  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jnz loc_101C119  +
mov edi [ebp+8] +
mov esi [edi] +
add esi 20h +
call ds:GetLastError  +
mov ecx edi +
push eax  +
call dword ptr [esi]  +
jmp loc_101C2FC  +
push eax  +
call sub_10251B6  +
test eax eax +
jnz loc_101C135  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 80338152h  +
call dword ptr [eax+20h]  +
jmp loc_101C2FC  +
mov [ebp-14h] ebx +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C15B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C15B  +
push dword ptr [ebp+0Ch]  +
push edi  +
push 72h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
lea eax [ebp-10h] +
push eax  +
push ebx  +
push 1  +
push dword ptr [ebp+0Ch]  +
call ds:CredReadW  +
cmp eax ebx +
jz loc_101C2D0  +
mov ecx [ebp-10h] +
cmp [ecx+24h] ebx +
jnz loc_101C19C  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2743  +
push 0AB7h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101C2FC  +
mov eax [ecx+28h] +
cmp eax ebx +
jnz loc_101C1B7  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2745  +
push 0AB9h  +
jmp loc_101C18D  +
mov eax [eax+0Ch] +
mov edx [eax] +
mov [ebp-14h] edx +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C1E6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C1E6  +
push edx  +
push dword ptr [ebp+0Ch]  +
push edi  +
push 73h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100E5A0  +
mov ecx [ebp-10h] +
cmp [ebp-14h] ebx +
ja loc_101C1FF  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2751  +
push 0ABFh  +
jmp loc_101C18D  +
dec dword ptr [ebp-14h]  +
push ebx  +
jz loc_101C2A3  +
mov eax [ebp+0Ch] +
xor edx edx +
inc edx  +
mov [ebp-60h] eax +
mov [ebp-68h] ebx +
mov [ebp-64h] edx +
mov [ebp-5Ch] ebx +
mov edi [ecx+18h] +
mov [ebp-50h] edi +
mov ecx [ecx+1Ch] +
mov [ebp-34h] eax +
lea eax [ebp-34h] +
mov [ebp-40h] eax +
mov [ebp-4Ch] ecx +
lea eax [ebp-68h] +
lea ecx [ebp-14h] +
push eax  +
mov dword ptr [ebp-48h] 2 +
mov dword ptr [ebp-2Ch] 4 +
mov [ebp-28h] ecx +
mov [ebp-44h] edx +
mov [ebp-3Ch] ebx +
mov [ebp-38h] ebx +
call ds:CredWriteW  +
test eax eax +
jnz loc_101C2FC  +
mov eax off_102B00C +
mov edi ds:GetLastError +
cmp eax esi +
jz loc_101C291  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101C291  +
call edi  +
push eax  +
mov eax off_102B00C +
push offset dword_1006A3C  +
push 74h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
mov esi [eax] +
add esi 20h +
call edi  +
mov ecx [ebp+8] +
jmp loc_101C111  +
push 1  +
push dword ptr [ebp+0Ch]  +
call ds:CredDeleteW  +
test eax eax +
jnz loc_101C2FC  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C2FC  +
test dword ptr [eax+1Ch] 800h +
jz loc_101C2FC  +
call ds:GetLastError  +
push eax  +
push edi  +
push 75h  +
jmp loc_101C2EC  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C2FC  +
test dword ptr [eax+1Ch] 800h +
jz loc_101C2FC  +
call ds:GetLastError  +
push eax  +
push edi  +
push 76h  +
mov eax off_102B00C +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp-10h] +
cmp eax ebx +
jz loc_101C32B  +
mov edx [eax+18h] +
mov ecx [eax+1Ch] +
cmp edx ebx +
jz loc_101C316  +
mov [ecx] bl +
inc ecx  +
dec edx  +
jnz loc_101C30D  +
mov eax [ebp-10h] +
push 34h  +
pop ecx  +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_101C319  +
push dword ptr [ebp-10h]  +
call ds:CredFree  +
mov [ebp-10h] ebx +
push dword ptr [ebp-1Ch]  +
call sub_1008E30  +
pop ecx  +
push dword ptr [ebp-18h]  +
call sub_1025555  +
test eax eax +
jnz loc_101C357  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2822  +
push 0B06h  +
jmp loc_101C0D1  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+44h]  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-20h] ebx +
jnz loc_101C372  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101BC45  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_101C3CD  +
push eax  +
push esi  +
call sub_101BAAE  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_101C401  +
push eax  +
push ecx  +
call sub_101BAAE  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1006B80 +
mov dword ptr [ebp-4] 4 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101C452  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C452  +
push esi  +
push offset dword_1006A3C  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+241Ch] +
call sub_100C353  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+2418h] +
call sub_100C353  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+2414h] +
call sub_101C3DE  +
mov byte ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_1003AC8 +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call sub_1019AE7  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
mov ecx [edi] +
cmp ecx 0BB8h +
jz loc_101C629  +
cmp ecx 0BB9h +
jz loc_101C629  +
xor ebx ebx +
cmp [ebp+0Ch] ebx +
jnz loc_101C4E8  +
push ebx  +
mov esi 54Fh +
push esi  +
push offset a1800  +
push 708h  +
jmp loc_101C63B  +
cmp ecx 1774h +
jnz loc_101C506  +
push ebx  +
mov esi 54Fh +
push esi  +
push offset a1802  +
push 70Ah  +
jmp loc_101C63B  +
cmp ecx 1770h +
jz loc_101C616  +
cmp ecx 1771h +
jz loc_101C616  +
cmp ecx 1772h +
jz loc_101C616  +
cmp [ebp+10h] ebx +
jbe loc_101C565  +
cmp [ebp+14h] ebx +
jnz loc_101C54A  +
push ebx  +
mov esi 54Fh +
push esi  +
push offset a1807  +
push 70Fh  +
jmp loc_101C63B  +
cmp [ebp+18h] ebx +
jnz loc_101C565  +
push ebx  +
mov esi 54Fh +
push esi  +
push offset a1808  +
push 710h  +
jmp loc_101C63B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101C591  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C591  +
push dword ptr [edi+4]  +
push ecx  +
push esi  +
push offset dword_1006A3C  +
push 4Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B8AF  +
mov [ebp+8] ebx +
xor ecx ecx +
inc ecx  +
mov [ebp-4] ecx +
mov eax [esi+2414h] +
cmp eax ebx +
jz loc_101C5D4  +
cmp [eax+4] ecx +
jnz loc_101C5B6  +
push dword ptr [esi+241Ch]  +
lea ecx [ebp+8] +
push ecx  +
push eax  +
jmp loc_101C5DA  +
cmp eax ebx +
jz loc_101C5D4  +
cmp dword ptr [eax+4] 2 +
jz loc_101C5A9  +
cmp eax ebx +
jz loc_101C5D4  +
cmp dword ptr [eax+4] 3 +
jz loc_101C5A9  +
cmp eax ebx +
jz loc_101C5D4  +
cmp dword ptr [eax+4] 4 +
jz loc_101C5A9  +
push ebx  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push 20019h  +
push edi  +
lea ecx [esi+8] +
call sub_101A3A3  +
mov esi eax +
cmp esi ebx +
jnz loc_101C608  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [edi+4]  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_1010805  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_100C353  +
jmp loc_101C645  +
push ebx  +
mov esi 54Fh +
push esi  +
push offset a1803  +
push 70Bh  +
jmp loc_101C63B  +
push 0  +
mov esi 54Fh +
push esi  +
push offset a1799  +
push 707h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
mov eax esi +
call __EH_epilog3  +
retn 14h  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101C3B5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
call sub_1019A66  +
xor edi edi +
mov [ebp-4] edi +
lea ebx [esi+4] +
mov dword ptr [esi] offset off_1003AC8 +
mov [ebx] edi +
mov byte ptr [ebp-4] 1 +
push edi  +
lea ecx [esi+2414h] +
mov dword ptr [esi] offset off_1006B80 +
mov [esi+2410h] edi +
call sub_101C654  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+2418h] +
call sub_100C369  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+241Ch] +
call sub_100C369  +
mov byte ptr [ebp-4] 4 +
mov [esi+2420h] edi +
mov [esi+2424h] edi +
mov [esi+2428h] edi +
mov [esi+242Ch] edi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101C73E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C73E  +
push esi  +
push offset dword_1006A3C  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
call ds:InterlockedIncrement  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101C40C  +
test byte ptr [ebp+8] 1 +
jz loc_101C770  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_101C7B0  +
push 0  +
push 54Fh  +
push offset a531  +
push 213h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101C8E0  +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx offset dword_1006A3C +
cmp eax esi +
jz loc_101C7DD  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C7DD  +
push dword ptr [ebp+8]  +
push ebx  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 3  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+14h]  +
call sub_10212B9  +
mov edi eax +
test edi edi +
jnz loc_101C81B  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C813  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C813  +
push dword ptr [ebp+8]  +
push ebx  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 2  +
pop eax  +
jmp loc_101C8E0  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101C83E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C83E  +
push dword ptr [ebp+8]  +
push ebx  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi [ebp+14h] +
push 0  +
push esi  +
call sub_1020F03  +
push eax  +
lea ecx [ebp-10h] +
call sub_100FEC0  +
and dword ptr [ebp-4] 0 +
mov ecx [ebp-10h] +
test ecx ecx +
jz loc_101C877  +
mov eax [edi+0Ch] +
test al 2 +
jz loc_101C890  +
push dword ptr [ebp+10h]  +
lea eax [ebp+8] +
push eax  +
push dword ptr [edi]  +
push esi  +
call sub_1020487  +
test eax eax +
jnz loc_101C881  +
call ds:GetLastError  +
mov esi eax +
jmp loc_101C8D2  +
mov ecx [ebp+0Ch] +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
mov [ecx] eax +
jmp loc_101C8A6  +
test al 1 +
jz loc_101C8B7  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [edi]  +
push esi  +
call sub_10201FB  +
test eax eax +
jz loc_101C877  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_10114A6  +
jmp loc_101C7A9  +
push esi  +
mov esi 54Fh +
push esi  +
push offset a579  +
push 243h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_10114A6  +
mov eax esi +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
xor eax eax +
cmp [ebp+0Ch] eax +
jbe loc_101C946  +
cmp [ebp+10h] eax +
jnz loc_101C92C  +
push dword ptr [ebp+1Ch]  +
mov esi 54Fh +
push esi  +
push offset a1317  +
push 525h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
mov eax esi +
call __EH_epilog3  +
retn 18h  +
cmp [ebp+14h] eax +
jnz loc_101C946  +
push dword ptr [ebp+1Ch]  +
mov esi 54Fh +
push esi  +
push offset a1318  +
push 526h  +
jmp loc_101C918  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov esi offset dword_1006A3C +
cmp eax edi +
jz loc_101C991  +
mov ebx 200000h +
test [eax+1Ch] ebx +
jz loc_101C977  +
push ecx  +
push esi  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101C991  +
test [eax+1Ch] ebx +
jz loc_101C991  +
push dword ptr [ebp+8]  +
push esi  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 1Eh  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+1Ch]  +
call sub_10212B9  +
mov ebx eax +
test ebx ebx +
jnz loc_101C9CF  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101C9C7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C9C7  +
push dword ptr [ebp+8]  +
push esi  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 2  +
pop eax  +
jmp loc_101C924  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101C9F2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101C9F2  +
push dword ptr [ebp+8]  +
push esi  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_101CA10  +
push dword ptr [ebp+1Ch]  +
mov esi 54Fh +
push esi  +
push offset a1340  +
push 53Ch  +
jmp loc_101C918  +
push 0  +
push dword ptr [ebp+1Ch]  +
call sub_1020F03  +
push eax  +
lea ecx [ebp-10h] +
call sub_100FEC0  +
xor esi esi +
mov [ebp-4] esi +
mov ecx [ebp-10h] +
cmp ecx esi +
jnz loc_101CA48  +
call ds:GetLastError  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_10114A6  +
jmp loc_101C922  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx]  +
push dword ptr [ebp+1Ch]  +
call sub_10209E4  +
test eax eax +
jz loc_101CA2F  +
jmp loc_101CA37  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi+4]  +
lea esi [ecx+2414h] +
call sub_10192C8  +
push eax  +
mov ecx esi +
call sub_101C67B  +
mov ecx [esi] +
test ecx ecx +
jnz loc_101CA9B  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101CADB  +
mov eax [ecx] +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_101CAD8  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101CAD5  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CAD5  +
push esi  +
push offset dword_1006A3C  +
push 52h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
jmp loc_101CA91  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101CB16  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101CB16  +
push esi  +
push offset dword_1006A3C  +
push 61h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101CA69  +
test eax eax +
jz loc_101CB43  +
push [ebp+arg_4]  +
lea ecx [esi+2418h] +
call sub_1014233  +
push [ebp+arg_8]  +
lea ecx [esi+241Ch] +
call sub_1014233  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov ecx dword_102C9FC +
test ecx ecx +
jz loc_101CB71  +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax dword_102C9FC +
jmp loc_101CCF3  +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx offset dword_1006A3C +
cmp eax esi +
jz loc_101CB9B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101CB9B  +
push ebx  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi offset unk_102C9E0 +
mov ecx edi +
call sub_100FC14  +
test eax eax +
jnz loc_101CBDA  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101CBCB  +
test dword ptr [eax+1Ch] 800h +
jz loc_101CBCB  +
push ebx  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_101CCF3  +
push edi  +
lea ecx [ebp-24h] +
call sub_100E77B  +
xor edi edi +
mov [ebp-4] edi +
mov ecx dword_102C9FC +
cmp ecx edi +
jnz loc_101CCD6  +
mov [ebp-14h] edi +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-0Dh] +
push edi  +
push eax  +
push 2430h  +
mov [ebp-18h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-1Ch] eax +
mov byte ptr [ebp-4] 3 +
cmp eax edi +
jz loc_101CC23  +
mov ecx eax +
call sub_101C697  +
jmp loc_101CC25  +
xor eax eax +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call sub_101FA04  +
mov eax [ebp-14h] +
cmp eax edi +
jnz loc_101CC63  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101CC59  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CC59  +
push ebx  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_101CCC8  +
lea ecx [eax+8] +
call sub_101A103  +
test eax eax +
jnz loc_101CCA3  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax esi +
jz loc_101CC98  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CC98  +
push edi  +
push ebx  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
call ds:SetLastError  +
xor edi edi +
jmp loc_101CCC8  +
mov eax [ebp-14h] +
mov dword ptr [eax+2410h] 1 +
mov ecx [ebp-14h] +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebp-14h] +
push eax  +
mov ecx offset dword_102C9FC +
mov [ebp-14h] edi +
call sub_101FA04  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call sub_10114A6  +
jmp loc_101CCDA  +
mov eax [ecx] +
call dword ptr [eax]  +
mov esi dword_102C9FC +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-20h] edi +
jnz loc_101CCF1  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
mov [ebp+var_4] ecx +
cmp edi ebx +
jnz loc_101CD35  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a246  +
push 0F6h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101CDD4  +
push esi  +
mov esi [ebp+arg_4] +
cmp esi 7E2h +
jz loc_101CDAF  +
cmp esi 7E3h +
jz loc_101CDAF  +
cmp esi 453h +
jnz loc_101CD5C  +
lea eax [ebp+arg_8] +
push eax  +
push 3F3h  +
jmp loc_101CDB8  +
cmp esi 7DFh +
jnz loc_101CD6F  +
lea eax [ebp+arg_8] +
push eax  +
push 3FAh  +
jmp loc_101CDB8  +
push 3Fh  +
push esi  +
call sub_10199B1  +
cmp eax ebx +
jz loc_101CDC7  +
test byte ptr [eax+0Ch] 3 +
jz loc_101CDAB  +
push [ebp+arg_0]  +
mov ecx [ebp+var_4] +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
mov [ebp+arg_8] ebx +
call sub_101C77C  +
cmp eax ebx +
jnz loc_101CDA6  +
xor eax eax +
cmp [ebp+arg_8] ebx +
setnz al  +
jmp loc_101CDCE  +
cmp eax 2 +
jnz loc_101CDC7  +
mov [edi] ebx +
jmp loc_101CDD0  +
lea eax [ebp+arg_8] +
push eax  +
push 3E8h  +
push [ebp+arg_0]  +
mov [ebp+arg_8] ebx +
call sub_10114D4  +
test eax eax +
jnz loc_101CDCB  +
xor eax eax +
jmp loc_101CDD3  +
mov eax [ebp+arg_8] +
mov [edi] eax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
xor esi esi +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] esi +
jnz loc_101CE13  +
push esi  +
push 54Fh  +
push offset a361  +
push 169h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101D1EB  +
cmp [ebp+arg_8] esi +
jnz loc_101CE2C  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a363  +
push 16Bh  +
jmp loc_101CE02  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
push edi  +
mov edi offset dword_1006A3C +
cmp eax ebx +
jz loc_101CE5B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101CE5B  +
push [ebp+arg_4]  +
push edi  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_0]  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_10] +
push eax  +
push [ebp+arg_8]  +
mov [ebp+var_10] esi +
push [ebp+arg_4]  +
call sub_101C77C  +
mov esi eax +
test esi esi +
jnz loc_101CE93  +
cmp [ebp+var_10] eax +
jz loc_101CEB4  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_101CE8B  +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_101D1E9  +
cmp esi 2 +
jz loc_101CEB4  +
mov edi [ebp+arg_0] +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+44h]  +
test eax eax +
jnz loc_101D1E7  +
mov eax [edi] +
push esi  +
mov ecx edi +
jmp loc_101D1E4  +
push 3  +
push [ebp+arg_4]  +
call sub_10199B1  +
mov esi eax +
test esi esi +
jnz loc_101CEE5  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a392  +
push 188h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101D1E7  +
mov ecx [ebp+var_4] +
and [ebp+var_18] 0 +
cmp dword ptr [ecx+2424h] 1 +
jz loc_101CF2A  +
call sub_101B9EF  +
test al al +
jnz loc_101CF2A  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+58h]  +
test eax eax +
jnz loc_101D00C  +
mov ecx [ebp+var_4] +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push 4  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call sub_101C4A0  +
mov [ebp+var_C] eax +
jmp loc_101CF31  +
mov [ebp+var_C] 2 +
mov ecx [ebp+var_C] +
test ecx ecx +
jnz loc_101D003  +
cmp [ebp+var_14] 4 +
jnz loc_101CFD8  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101CF6F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101CF6F  +
push [ebp+var_8]  +
push dword ptr [esi+4]  +
push [ebp+arg_4]  +
push edi  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
mov ecx [ebp+var_4] +
push 0  +
push [ebp+var_8]  +
add ecx 8 +
push esi  +
push [ebp+arg_0]  +
call sub_1019B17  +
test eax eax +
jz loc_101CFA5  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_101D0EC  +
mov dword ptr [eax] 2 +
jmp loc_101D0EC  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101CFCE  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CFCE  +
push [ebp+var_8]  +
push dword ptr [esi+4]  +
push [ebp+arg_4]  +
push edi  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
push 80338005h  +
jmp loc_101D1DF  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101CFCE  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CFCE  +
push [ebp+var_14]  +
push dword ptr [esi+4]  +
push [ebp+arg_4]  +
push edi  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
jmp loc_101CFCE  +
cmp ecx 2 +
jnz loc_101D186  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101D035  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101D035  +
push dword ptr [esi+4]  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
push edi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B8AF  +
cmp [ebp+arg_4] 0BBAh +
jnz loc_101D0B7  +
mov eax [ebp+var_4] +
mov eax [eax+2414h] +
test eax eax +
jnz loc_101D062  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a451  +
push 1C3h  +
jmp loc_101CED6  +
cmp dword ptr [eax+4] 1 +
jz loc_101D07F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a452  +
push 1C4h  +
jmp loc_101CED6  +
mov eax [eax+10h] +
test eax eax +
jnz loc_101D094  +
push offset a5985  +
call ds:_wtoi  +
pop ecx  +
jmp loc_101D0DA  +
cmp eax 1 +
jnz loc_101D0A0  +
push offset a5986  +
jmp loc_101D08B  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a465  +
push 1D1h  +
jmp loc_101CED6  +
cmp [ebp+arg_4] 138Ah +
jnz loc_101D0D7  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a471  +
push 1D7h  +
jmp loc_101CED6  +
mov eax [esi+10h] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_101D0EC  +
mov dword ptr [eax] 3 +
mov ecx [ebp+var_4] +
call sub_101B9EF  +
test al al +
jz loc_101CE8B  +
cmp [ebp+arg_4] 0BBAh +
jnz loc_101CE8B  +
mov eax [ecx+2414h] +
test eax eax +
jnz loc_101D12A  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a502  +
push 1F6h  +
jmp loc_101CED6  +
cmp dword ptr [eax+4] 1 +
jz loc_101D147  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a503  +
push 1F7h  +
jmp loc_101CED6  +
mov eax [eax+10h] +
test eax eax +
jnz loc_101D15C  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 50h +
jmp loc_101CE8B  +
cmp eax 1 +
jnz loc_101D16F  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 1BBh +
jmp loc_101CE8B  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a516  +
push 204h  +
jmp loc_101CED6  +
cmp ecx 0EAh +
jnz loc_101D1BB  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101CFCE  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101CFCE  +
push edi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_101CFCE  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101D1DC  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D1DC  +
push ecx  +
push edi  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+var_C]  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_101D222  +
push 0  +
push 54Fh  +
push offset a590  +
push 24Eh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101D297  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_101D24A  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a593  +
push 251h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101D296  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D274  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101D274  +
push [ebp+arg_4]  +
push offset dword_1006A3C  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_C]  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_101CDDF  +
test eax eax +
jz loc_101D296  +
xor ecx ecx +
cmp [ebp+arg_8] ecx +
setnz cl  +
mov [edi] ecx +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
xor ebx ebx +
cmp [ebp+8] ebx +
jnz loc_101D2D5  +
push ebx  +
push 54Fh  +
push offset a638  +
push 27Eh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101DE0F  +
cmp [esi+2410h] ebx +
jnz loc_101D2F1  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a639  +
push 27Fh  +
jmp loc_101D2C6  +
mov edi [ebp+1Ch] +
cmp [ebp+14h] ebx +
jbe loc_101D32A  +
cmp [ebp+18h] ebx +
jnz loc_101D312  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a641  +
push 281h  +
jmp loc_101D2C6  +
cmp edi ebx +
jnz loc_101D32A  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a642  +
push 282h  +
jmp loc_101D2C6  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D354  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101D354  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 21h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp+10h]  +
mov [edi] ebx +
push dword ptr [ebp+0Ch]  +
call sub_10199B1  +
mov [ebp+10h] eax +
cmp eax ebx +
jnz loc_101D37F  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a652  +
push 28Ch  +
jmp loc_101D2C6  +
mov eax [eax] +
cmp eax 0BB8h +
jnz loc_101D485  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D46E  +
cmp dword ptr [esi+4] 1 +
jnz loc_101D46E  +
lea eax [ebp+0Ch] +
push eax  +
mov [ebp+0Ch] ebx +
push dword ptr [esi+8]  +
push dword ptr [ebp+8]  +
call sub_1018D02  +
test eax eax +
jz loc_101DE0F  +
push dword ptr [esi+0Ch]  +
mov ebx offset aSS_0 +
push dword ptr [ebp+0Ch]  +
push ebx  +
call ds:_scwprintf  +
add esp 0Ch +
inc eax  +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jnz loc_101D3E3  +
push 7Ah  +
jmp loc_101DE07  +
push dword ptr [esi+0Ch]  +
push dword ptr [ebp+0Ch]  +
push ebx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B64F  +
mov esi eax +
add esp 14h +
cmp esi 8007007Ah +
jnz loc_101D414  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
call dword ptr [eax+20h]  +
and dword ptr [edi] 0 +
jmp loc_101DE0F  +
test esi esi +
jge loc_101D459  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 22h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push offset aStringcchcopyw  +
push 4033C362h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
jmp loc_101D40C  +
mov eax [ebp+20h] +
test eax eax +
jz loc_101D466  +
mov dword ptr [eax] 2 +
xor eax eax +
inc eax  +
jmp loc_101DE11  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a656  +
push 290h  +
jmp loc_101D2C6  +
cmp eax 1770h +
jnz loc_101D539  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D522  +
push 2  +
pop ebx  +
cmp [esi+4] ebx +
jnz loc_101D522  +
mov eax [esi+8] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_101D4AC  +
sub eax edx +
sar eax 1 +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jz loc_101D3DC  +
push dword ptr [esi+8]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_101D402  +
test esi esi +
jge loc_101D510  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 23h  +
jmp loc_101D435  +
mov eax [ebp+20h] +
test eax eax +
jz loc_101D466  +
mov [eax] ebx +
jmp loc_101D466  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a708  +
push 2C4h  +
jmp loc_101D2C6  +
cmp eax 1771h +
jnz loc_101D5DB  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D5C4  +
push 2  +
pop ebx  +
cmp [esi+4] ebx +
jnz loc_101D5C4  +
mov eax [esi+0Ch] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_101D55C  +
sub eax edx +
sar eax 1 +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jz loc_101D3DC  +
push dword ptr [esi+0Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_101D402  +
test esi esi +
jge loc_101D510  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 24h  +
jmp loc_101D435  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a748  +
push 2ECh  +
jmp loc_101D2C6  +
cmp eax 1772h +
jnz loc_101D67D  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D666  +
push 2  +
pop ebx  +
cmp [esi+4] ebx +
jnz loc_101D666  +
mov eax [esi+10h] +
lea edx [eax+2] +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_101D5FE  +
sub eax edx +
sar eax 1 +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jz loc_101D3DC  +
push dword ptr [esi+10h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_101D402  +
test esi esi +
jge loc_101D510  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 25h  +
jmp loc_101D435  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a789  +
push 315h  +
jmp loc_101D2C6  +
cmp eax 1774h +
jnz loc_101D71E  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D707  +
cmp dword ptr [esi+4] 2 +
jnz loc_101D707  +
xor ebx ebx +
inc ebx  +
cmp dword ptr [ebp+18h] 0 +
mov [edi] ebx +
jz loc_101D3DC  +
push offset asc_1004474  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_101D402  +
test esi esi +
jge loc_101D6F3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 26h  +
jmp loc_101D435  +
mov eax [ebp+20h] +
test eax eax +
jz loc_101D700  +
mov dword ptr [eax] 2 +
mov eax ebx +
jmp loc_101DE11  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a833  +
push 341h  +
jmp loc_101D2C6  +
cmp eax 0BC7h +
jnz loc_101D7C1  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D7AA  +
cmp dword ptr [esi+4] 3 +
jnz loc_101D7AA  +
mov eax [esi+8] +
push 2  +
lea edx [eax+2] +
pop ebx  +
mov cx [eax] +
add eax ebx +
test cx cx +
jnz loc_101D742  +
sub eax edx +
sar eax 1 +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jz loc_101D3DC  +
push dword ptr [esi+8]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jz loc_101D402  +
test esi esi +
jge loc_101D510  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D440  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D440  +
push esi  +
push offset dword_1006A3C  +
push 27h  +
jmp loc_101D435  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a873  +
push 369h  +
jmp loc_101D2C6  +
cmp eax 0BB9h +
jnz loc_101D8EF  +
mov esi [esi+2414h] +
cmp esi ebx +
jz loc_101D8D8  +
cmp dword ptr [esi+4] 1 +
jnz loc_101D8D8  +
cmp dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_101D801  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a921  +
push 399h  +
jmp loc_101D2C6  +
lea eax [ebp+0Ch] +
push eax  +
mov [ebp+0Ch] ebx +
push dword ptr [esi+10h]  +
push dword ptr [ebp+8]  +
call sub_1018CA7  +
test eax eax +
jz loc_101DE0F  +
cmp dword ptr [ebp+0Ch] 0 +
mov ebx 54Fh +
jnz loc_101D83E  +
push dword ptr [ebp+8]  +
push ebx  +
push offset a931  +
push 3A3h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
mov eax [ebp+0Ch] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101D844  +
sub eax edx +
sar eax 1 +
inc eax  +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jz loc_101D3DC  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
mov esi eax +
cmp esi 8007007Ah +
jnz loc_101D88D  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
xor esi esi +
call dword ptr [eax+20h]  +
and dword ptr [edi] 0 +
mov eax esi +
jmp loc_101DE11  +
test esi esi +
jge loc_101D459  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101D8BD  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101D8BD  +
push esi  +
push offset dword_1006A3C  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push offset aStringcchcopyw  +
push 4033C362h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
mov esi ebx +
jmp loc_101D883  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a918  +
push 396h  +
jmp loc_101D2C6  +
cmp eax 7E2h +
jz loc_101DB58  +
cmp eax 7E3h +
jz loc_101DB58  +
cmp eax 453h +
jnz loc_101D93F  +
lea eax [ebp+1Ch] +
push eax  +
push 3F3h  +
jmp loc_101DB61  +
cmp ebx 2 +
jz loc_101DA77  +
mov esi [ebp+8] +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
test eax eax +
jnz loc_101DE0F  +
push ebx  +
mov eax [esi] +
mov ecx esi +
jmp loc_101DE0C  +
cmp eax 7DFh +
jnz loc_101D954  +
lea eax [ebp+1Ch] +
push eax  +
push 3FAh  +
jmp loc_101DB61  +
cmp eax 0BBEh +
jnz loc_101DACB  +
cmp dword ptr [esi+242Ch] 1 +
jnz loc_101DACB  +
push dword ptr [ebp+8]  +
call sub_100E06F  +
mov ecx [ebp+8] +
mov ebx eax +
mov eax [ecx] +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_101DE0F  +
and dword ptr [ebp+1Ch] 0 +
xor eax eax +
inc eax  +
mov [ebp-4] eax +
push eax  +
lea ecx [ebp-3Ch] +
call sub_100E3AF  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp+1Ch] +
push eax  +
push ebx  +
lea eax [ebp-3Ch] +
push eax  +
call sub_100CF58  +
test eax eax +
jz loc_101DA5F  +
mov eax [ebp+1Ch] +
lea edx [eax+2] +
xor esi esi +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_101D9BB  +
sub eax edx +
sar eax 1 +
inc eax  +
mov [edi] eax +
cmp [ebp+18h] esi +
jnz loc_101D9F8  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
call dword ptr [eax+20h]  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-3Ch] +
call sub_100E3A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+1Ch] +
call sub_100C51B  +
jmp loc_101DE0F  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
cmp eax 8007007Ah +
jnz loc_101DA1B  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
call dword ptr [eax+20h]  +
mov [edi] esi +
jmp loc_101D9DB  +
cmp eax esi +
jge loc_101DA5A  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1138  +
push 472h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
mov [edi] esi +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-3Ch] +
call sub_100E3A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+1Ch] +
call sub_100C51B  +
jmp loc_101D886  +
xor esi esi +
inc esi  +
jmp loc_101DA3D  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-3Ch] +
call sub_100E3A3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+1Ch] +
call sub_100C51B  +
and dword ptr [ebp-10h] 0 +
cmp dword ptr [esi+2424h] 1 +
jz loc_101DBBE  +
mov ecx esi +
call sub_101B9EF  +
test al al +
jnz loc_101DBBE  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+58h]  +
mov ebx [ebp+10h] +
test eax eax +
jnz loc_101DD22  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+14h] +
add eax eax +
push eax  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_101C4A0  +
mov [ebp+1Ch] eax +
jmp loc_101DBC8  +
cmp eax 0BBBh +
jnz loc_101DA77  +
cmp dword ptr [esi+242Ch] 1 +
jnz loc_101DA77  +
mov esi [ebp+8] +
push esi  +
call sub_100E06F  +
mov ebx eax +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+44h]  +
test eax eax +
jz loc_101DE0F  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101DAFA  +
sub eax edx +
sar eax 1 +
inc eax  +
cmp dword ptr [ebp+18h] 0 +
mov [edi] eax +
jnz loc_101DB18  +
push 7Ah  +
jmp loc_101D936  +
push ebx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
cmp eax 8007007Ah +
jz loc_101D877  +
test eax eax +
jge loc_101D466  +
push esi  +
push 54Fh  +
push offset a1173  +
push 495h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor esi esi +
jmp loc_101D883  +
lea eax [ebp+1Ch] +
push eax  +
push 3E8h  +
push dword ptr [ebp+8]  +
mov [ebp+1Ch] ebx +
call sub_10114D4  +
test eax eax +
jz loc_101DE0F  +
cmp [ebp+1Ch] ebx +
jz loc_101DA77  +
push dword ptr [ebp+8]  +
and [ebp-14h] ebx +
lea eax [ebp-14h] +
push eax  +
push edi  +
push dword ptr [ebp+18h]  +
mov ecx esi +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+0Ch]  +
call sub_101C8ED  +
mov ebx eax +
test ebx ebx +
jnz loc_101D91A  +
cmp [ebp-14h] eax +
jz loc_101DA77  +
mov ecx [ebp+20h] +
inc eax  +
test ecx ecx +
jz loc_101DE11  +
mov [ecx] eax +
jmp loc_101DE11  +
mov ebx [ebp+10h] +
mov dword ptr [ebp+1Ch] 2 +
cmp dword ptr [ebp+1Ch] 0 +
jnz loc_101DCFE  +
cmp dword ptr [ebp-18h] 1 +
jnz loc_101DCBC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101DC11  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101DC11  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+4]  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
mov eax off_102B00C +
mov ecx [ebp-10h] +
cmp ecx 2 +
jb loc_101DC63  +
mov edx [ebp+18h] +
add ecx edx +
cmp byte ptr [ecx-1] 0 +
jz loc_101DC63  +
cmp byte ptr [ecx-2] 0 +
jz loc_101DC63  +
cmp eax offset off_102B00C +
jz loc_101DC4C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101DC4C  +
push offset dword_1006A3C  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
call dword ptr [eax+20h]  +
mov eax [ebp-10h] +
shr eax 1 +
inc eax  +
mov [edi] eax +
jmp loc_101DE0F  +
push dword ptr [ebp+18h]  +
lea ecx [esi+8] +
push ebx  +
push dword ptr [ebp+8]  +
call sub_1019FFD  +
test eax eax +
jz loc_101DC82  +
mov eax [ebp-10h] +
shr eax 1 +
mov [edi] eax +
jmp loc_101D459  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101DCB2  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101DCB2  +
push dword ptr [ebp+18h]  +
push dword ptr [ebx+4]  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
push 80338005h  +
jmp loc_101DE07  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101DCEC  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101DCEC  +
push dword ptr [ebp-18h]  +
push dword ptr [ebx+4]  +
push dword ptr [ebp+0Ch]  +
push offset dword_1006A3C  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 80338005h  +
call dword ptr [eax+20h]  +
jmp loc_101DB51  +
cmp dword ptr [ebp+1Ch] 7Ah +
jnz loc_101DD18  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 7Ah  +
call dword ptr [eax+20h]  +
mov eax [ebp-10h] +
shr eax 1 +
jmp loc_101DC5C  +
cmp dword ptr [ebp+1Ch] 2 +
jnz loc_101DDDA  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101DD52  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101DD52  +
push dword ptr [ebx+4]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebx+1Ch]  +
push offset dword_1006A3C  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B767  +
mov ebx [ebx+1Ch] +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101DD5A  +
sub eax edx +
sar eax 1 +
cmp eax 400h +
jb loc_101DD86  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1263  +
push 4EFh  +
jmp loc_101D2C6  +
inc eax  +
mov [edi] eax +
cmp [ebp+14h] eax +
jb loc_101D3DC  +
push ebx  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+18h]  +
call sub_100B5BB  +
cmp eax 8007007Ah +
jz loc_101D3DC  +
test eax eax +
jge loc_101DDC4  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1281  +
push 501h  +
jmp loc_101D2C6  +
mov eax [ebp+20h] +
test eax eax +
jz loc_101D466  +
mov dword ptr [eax] 3 +
jmp loc_101D466  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101DE04  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101DE04  +
push dword ptr [ebp+1Ch]  +
push offset dword_1006A3C  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp+1Ch]  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+20h]  +
xor eax eax +
call __EH_epilog3  +
retn 1Ch  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov esi [ebp+8] +
xor ebx ebx +
mov [ebp-818h] eax +
cmp eax ebx +
jnz loc_101DE66  +
push ebx  +
push 54Fh  +
push offset a1861  +
push 745h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
call sub_100A18B  +
retn 8  +
cmp esi ebx +
jnz loc_101DE7C  +
push eax  +
push 54Fh  +
push offset a1862  +
push 746h  +
jmp loc_101DE52  +
cmp [esi+4] ebx +
jnz loc_101DE93  +
push eax  +
push 54Fh  +
push offset a1863  +
push 747h  +
jmp loc_101DE52  +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_101DEBC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101DEBC  +
push offset dword_1006A3C  +
push 4Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov [ebp-814h] ebx +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-819h] +
push ebx  +
push eax  +
push 2430h  +
mov [ebp-820h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-83Ch] ecx +
mov byte ptr [ebp-4] 2 +
cmp ecx ebx +
jz loc_101DEF8  +
call sub_101C697  +
jmp loc_101DEFA  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-814h] +
call sub_101FA04  +
cmp [ebp-814h] ebx +
jnz loc_101DF55  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101DF36  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101DF36  +
push offset dword_1006A3C  +
push 4Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp-818h] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-814h] +
call sub_10114A6  +
jmp loc_101DE5C  +
lea ecx [ebp-838h] +
call sub_100FDDB  +
mov byte ptr [ebp-4] 3 +
xor ebx ebx +
cmp dword ptr [esi+4] 1 +
jnz loc_101E09E  +
cmp [esi+0Ch] ebx +
jnz loc_101DFA5  +
push dword ptr [ebp-818h]  +
push 54Fh  +
push offset a1891  +
push 763h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-838h] +
call sub_100FE23  +
jmp loc_101DF41  +
cmp [esi+8] ebx +
jnz loc_101DFC1  +
push dword ptr [ebp-818h]  +
push 54Fh  +
push offset a1892  +
push 764h  +
jmp loc_101DF8A  +
mov eax [esi+10h] +
cmp eax 0FFFFFFFFh +
jnz loc_101DFE0  +
push dword ptr [ebp-818h]  +
push 54Fh  +
push offset a1893  +
push 765h  +
jmp loc_101DF8A  +
mov [ebp-828h] eax +
push ebx  +
lea eax [ebp-810h] +
push eax  +
push esi  +
call sub_1012169  +
test eax eax +
jnz loc_101E047  +
call ds:GetLastError  +
mov ecx off_102B00C +
cmp ecx edi +
jz loc_101E024  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101E024  +
push eax  +
push offset dword_1006A3C  +
push 4Fh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov eax [ebp-818h] +
mov ecx [eax] +
push offset aAddress  +
push 4033C3B9h  +
push 8033805Dh  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
jmp loc_101DF94  +
mov esi [esi+8] +
lea eax [ebp-810h] +
mov [ebp-830h] esi +
mov [ebp-82Ch] eax +
cmp esi 1 +
jnz loc_101E098  +
cmp [ebp-828h] ebx +
jnz loc_101E098  +
lea eax [ebp-820h] +
push eax  +
push ebx  +
mov [ebp-820h] ebx +
call sub_101B929  +
test eax eax +
jz loc_101DF94  +
cmp [ebp-820h] ebx +
jz loc_101E098  +
mov eax [ebp-814h] +
mov [eax+2424h] esi +
lea esi [ebp-838h] +
mov ecx [ebp-814h] +
add ecx 8 +
call sub_101A103  +
test eax eax +
jnz loc_101E0EE  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_101E0DD  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101E0DD  +
push esi  +
push offset dword_1006A3C  +
push 50h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx [ebp-818h] +
mov eax [ecx] +
push esi  +
call dword ptr [eax+20h]  +
jmp loc_101DF94  +
mov ecx [ebp-814h] +
push esi  +
call sub_101CA69  +
test eax eax +
jnz loc_101E182  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_101E12F  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101E12F  +
push esi  +
push offset dword_1006A3C  +
push 51h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp esi 0Eh +
jnz loc_101E141  +
mov ecx [ebp-818h] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_101E15B  +
mov eax [ebp-818h] +
mov ecx [eax] +
push esi  +
push offset aCconfigmanag_1  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
xor esi esi +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-838h] +
call sub_100FE23  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-814h] +
call sub_10114A6  +
mov eax esi +
jmp loc_101DE5E  +
mov eax [ebp-814h] +
mov dword ptr [eax+2410h] 1 +
mov eax [ebp-814h] +
mov [ebp-814h] ebx +
mov esi eax +
jmp loc_101E15D  +
***
call __EH_prolog3  +
mov edi ecx +
xor ebx ebx +
cmp [ebp+8] ebx +
jnz loc_101E1DD  +
push ebx  +
push 54Fh  +
push offset a2327  +
push 917h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101E2E8  +
cmp [ebp+0Ch] ebx +
jnz loc_101E1F4  +
push ebx  +
push 54Fh  +
push offset a2328  +
push 918h  +
jmp loc_101E1CC  +
cmp [ebp+10h] ebx +
jnz loc_101E20B  +
push ebx  +
push 54Fh  +
push offset a2329  +
push 919h  +
jmp loc_101E1CC  +
mov esi [ebp+14h] +
cmp esi ebx +
jnz loc_101E224  +
push ebx  +
push 54Fh  +
push offset a2330  +
push 91Ah  +
jmp loc_101E1CC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101E24C  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101E24C  +
push edi  +
push offset dword_1006A3C  +
push 63h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [edi+2420h]  +
push dword ptr [ebp+8]  +
call sub_10127B2  +
test eax eax +
jnz loc_101E359  +
call ds:GetLastError  +
cmp eax 103h +
jnz loc_101E1D6  +
cmp [edi+2424h] ebx +
jnz loc_101E294  +
push esi  +
push ebx  +
mov ecx edi +
call sub_101BAC9  +
test eax eax +
jz loc_101E294  +
xor eax eax +
inc eax  +
jmp loc_101E2E8  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
xor eax eax +
mov [ebp-4] eax +
mov [ebp+10h] eax +
cmp [edi+2428h] eax +
jnz loc_101E30E  +
push eax  +
lea eax [ebp+10h] +
push eax  +
push 7E5h  +
lea eax [ebp-30h] +
push eax  +
mov ecx edi +
call sub_101D1F5  +
test eax eax +
jnz loc_101E2F0  +
lea ecx [ebp-30h] +
xor ebx ebx +
call sub_1009AD7  +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
mov eax ebx +
call __EH_epilog3  +
retn 10h  +
cmp dword ptr [ebp+10h] 0 +
jz loc_101E30C  +
mov [edi+2428h] ebx +
and dword ptr [esi+10h] 0 +
mov [esi+8] ebx +
mov dword ptr [esi+0Ch] offset asc_1003674 +
jmp loc_101E2DA  +
xor eax eax +
cmp [edi+242Ch] eax +
jnz loc_101E34A  +
push eax  +
lea eax [ebp+10h] +
push eax  +
push 7E6h  +
lea eax [ebp-30h] +
push eax  +
mov ecx edi +
call sub_101D1F5  +
test eax eax +
jz loc_101E2C9  +
cmp dword ptr [ebp+10h] 0 +
jz loc_101E34A  +
mov [edi+242Ch] ebx +
mov [esi+8] ebx +
mov dword ptr [esi+0Ch] offset asc_1003674 +
mov [esi+10h] ebx +
jmp loc_101E2DA  +
push 103h  +
call ds:SetLastError  +
xor ebx ebx +
jmp loc_101E2DA  +
xor ebx ebx +
inc ebx  +
cmp [esi+8] ebx +
jnz loc_101E3A6  +
xor eax eax +
cmp [esi+10h] eax +
jnz loc_101E3A8  +
cmp [edi+2424h] eax +
jz loc_101E385  +
push eax  +
push 54Fh  +
push offset a2396  +
push 95Ch  +
jmp loc_101E1CC  +
lea ecx [ebp+10h] +
push ecx  +
push eax  +
mov [ebp+10h] eax +
call sub_101B929  +
test eax eax +
jz loc_101E1D6  +
cmp dword ptr [ebp+10h] 0 +
jz loc_101E3A6  +
mov [edi+2424h] ebx +
xor eax eax +
cmp [esi+8] eax +
jnz loc_101E3C2  +
push eax  +
push 54Fh  +
push offset a2414  +
push 96Eh  +
jmp loc_101E1CC  +
cmp [esi+0Ch] eax +
jnz loc_101E3DC  +
push eax  +
push 54Fh  +
push offset a2415  +
push 96Fh  +
jmp loc_101E1CC  +
cmp dword ptr [esi+10h] 0FFFFFFFFh +
jnz loc_101E2E6  +
push eax  +
push 54Fh  +
push offset a2416  +
push 970h  +
jmp loc_101E1CC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 3Eh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D2A1  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
mov ebx ecx +
cmp [ebp+arg_0] esi +
jnz loc_101E458  +
push esi  +
push 54Fh  +
push offset a1670  +
push 686h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101E68C  +
mov eax off_102B00C +
push edi  +
mov edi dword ptr [ebp+arg_4] +
cmp eax offset off_102B00C +
jz loc_101E485  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101E485  +
push edi  +
push ebx  +
push offset dword_1006A3C  +
push 48h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
cmp [ebp+arg_8] esi +
mov esi [ebp+arg_10] +
jbe loc_101E4CC  +
cmp [ebp+arg_C] 0 +
jnz loc_101E4B4  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1677  +
push 68Dh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101E689  +
test esi esi +
jnz loc_101E4CC  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1678  +
push 68Eh  +
jmp loc_101E4A5  +
push 3Fh  +
push edi  +
call sub_10199B1  +
test eax eax +
jnz loc_101E4EC  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1682  +
push 692h  +
jmp loc_101E4A5  +
mov eax [eax+0Ch] +
dec eax  +
jz loc_101E5F2  +
dec eax  +
jz loc_101E556  +
dec eax  +
dec eax  +
jz loc_101E53C  +
sub eax 4 +
jz loc_101E520  +
sub eax 0Eh +
jz loc_101E53C  +
sub eax 1Ch +
jz loc_101E53C  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a1757  +
push 6DDh  +
jmp loc_101E4A5  +
push [ebp+arg_14]  +
mov ecx ebx +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 8  +
push edi  +
push [ebp+arg_0]  +
call sub_101D2A1  +
jmp loc_101E68B  +
push [ebp+arg_14]  +
mov ecx ebx +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push edi  +
push [ebp+arg_0]  +
call sub_101E400  +
jmp loc_101E68B  +
and dword ptr [ebp+arg_4] 0 +
lea eax [ebp+arg_10] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_101CDDF  +
test eax eax +
jz loc_101E689  +
cmp dword ptr [ebp+arg_4] 0 +
mov edi offset aFalse +
jz loc_101E585  +
mov edi offset aTrue +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101E58A  +
push edi  +
push [ebp+arg_8]  +
sub eax edx +
push [ebp+arg_C]  +
sar eax 1 +
inc eax  +
mov [esi] eax +
call sub_100B5BB  +
test eax eax +
jl loc_101E5BE  +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_101E64B  +
mov ecx [ebp+arg_10] +
jmp loc_101E649  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101E5E8  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101E5E8  +
push eax  +
push offset dword_1006A3C  +
push 4Ah  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
jmp loc_101E684  +
and dword ptr [ebp+arg_4] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
mov ecx ebx +
call sub_101CDDF  +
test eax eax +
jz loc_101E689  +
push dword ptr [ebp+arg_4]  +
push offset aLu  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
call sub_100B64F  +
add esp 10h +
test eax eax +
jl loc_101E650  +
mov eax [ebp+arg_C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101E62E  +
sub eax edx +
sar eax 1 +
inc eax  +
mov [esi] eax +
mov eax [ebp+arg_14] +
test eax eax +
jz loc_101E64B  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
inc eax  +
jmp loc_101E68B  +
mov ecx off_102B00C +
cmp ecx offset off_102B00C +
jz loc_101E67A  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101E67A  +
push eax  +
push offset dword_1006A3C  +
push 49h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
mov dword ptr [esi] 41h +
mov eax [edi] +
mov ecx edi +
push 7Ah  +
call dword ptr [eax+20h]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
call __EH_prolog3_GS  +
mov ebx [ebp+8] +
mov edi [ebp+0Ch] +
mov esi ecx +
xor ecx ecx +
cmp ebx ecx +
jnz loc_101E6D5  +
push ecx  +
push 54Fh  +
push offset a2269  +
push 8DDh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101E7F1  +
cmp edi ecx +
jnz loc_101E6EB  +
push ecx  +
push 54Fh  +
push offset a2270  +
push 8DEh  +
jmp loc_101E6C4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101E715  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101E715  +
push esi  +
push offset dword_1006A3C  +
push 62h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor ecx ecx +
mov eax [edi+4] +
dec eax  +
jz loc_101E76C  +
dec eax  +
jz loc_101E75A  +
dec eax  +
jz loc_101E748  +
dec eax  +
jz loc_101E736  +
push ecx  +
push 54Fh  +
push offset a2311  +
push 907h  +
jmp loc_101E6C4  +
push edi  +
push dword ptr [esi+2420h]  +
push ebx  +
call sub_1011931  +
jmp loc_101E7F1  +
push edi  +
push dword ptr [esi+2420h]  +
push ebx  +
call sub_1011A32  +
jmp loc_101E7F1  +
push edi  +
push dword ptr [esi+2420h]  +
push ebx  +
call sub_1011EEA  +
jmp loc_101E7F1  +
push 1FCh  +
push ecx  +
lea eax [ebp-20Ch] +
push eax  +
mov [ebp-210h] ecx +
call memset  +
and dword ptr [ebp-214h] 0 +
add esp 0Ch +
lea ecx [ebp-22Ch] +
call sub_100FDDB  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-22Ch] +
push eax  +
lea eax [ebp-214h] +
push eax  +
lea eax [ebp-210h] +
push eax  +
push ebx  +
mov ecx esi +
call sub_101E1A7  +
mov esi eax +
test esi esi +
jz loc_101E7D0  +
mov eax [edi] +
lea ecx [ebp-22Ch] +
push ecx  +
mov ecx edi +
call dword ptr [eax+0Ch]  +
mov esi eax +
mov eax [ebp-214h] +
test eax eax +
jz loc_101E7E0  +
push 2Bh  +
pop ecx  +
mov [eax] cx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-22Ch] +
call sub_100FE23  +
mov eax esi +
call sub_100A18B  +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+0Ch] +
mov [ebp-428h] eax +
mov eax off_102B00C +
mov esi offset off_102B00C +
cmp eax esi +
jz loc_101E842  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101E842  +
mov ebx offset dword_1006A3C +
push ebx  +
push 53h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_101E847  +
mov ebx offset dword_1006A3C +
xor edi edi +
mov [ebp-414h] edi +
mov dword ptr [ebp-4] 1 +
lea eax [ebp-41Dh] +
push edi  +
push eax  +
push 2430h  +
mov [ebp-42Ch] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-430h] eax +
mov byte ptr [ebp-4] 2 +
cmp eax edi +
jz loc_101E885  +
mov ecx eax +
call sub_101C697  +
jmp loc_101E887  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-414h] +
call sub_101FA04  +
cmp [ebp-414h] edi +
jnz loc_101E8E0  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101E8BF  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101E8BF  +
push ebx  +
push 54h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call sub_10114A6  +
xor eax eax +
call sub_100A18B  +
retn 8  +
mov eax [ebp+8] +
dec eax  +
jz loc_101E920  +
dec eax  +
jz loc_101E919  +
dec eax  +
jz loc_101E912  +
dec eax  +
jz loc_101E90B  +
push edi  +
push 54Fh  +
push offset a2035  +
push 7F3h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101E8C7  +
mov eax offset aSoftwareMicros +
jmp loc_101E925  +
mov eax offset aSoftwareMicr_0 +
jmp loc_101E925  +
mov eax offset aSoftwareMicr_1 +
jmp loc_101E925  +
mov eax offset aSoftwareMicr_2 +
push eax  +
push 200h  +
lea eax [ebp-410h] +
push eax  +
call sub_100B5BB  +
cmp eax edi +
jz loc_101E94D  +
push edi  +
push 54Fh  +
push offset a2043  +
push 7FBh  +
jmp loc_101E8FF  +
mov [ebp-41Ch] edi +
mov byte ptr [ebp-4] 4 +
mov [ebp-418h] edi +
mov byte ptr [ebp-4] 6 +
cmp dword ptr [ebp-428h] 0 +
mov edi 80000002h +
jz loc_101EA07  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101E999  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101E999  +
push dword ptr [ebp-428h]  +
push ebx  +
push 55h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
lea eax [ebp-418h] +
push eax  +
push edi  +
push dword ptr [ebp-428h]  +
call ds:RegConnectRegistryW  +
mov ebx eax +
test ebx ebx +
jz loc_101EA02  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101E9D8  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101E9D8  +
push ebx  +
push offset dword_1006A3C  +
push 56h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-418h] +
call sub_100C353  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-41Ch] +
call sub_100C353  +
jmp loc_101E8C7  +
mov ebx offset dword_1006A3C +
cmp dword ptr [ebp-418h] 0 +
jz loc_101EA16  +
mov edi [ebp-418h] +
lea eax [ebp-41Ch] +
push eax  +
push 108h  +
push 0  +
lea eax [ebp-410h] +
push eax  +
push edi  +
call ds:RegOpenKeyExW  +
cmp eax 5 +
jnz loc_101EA5E  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EA57  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101EA57  +
push ebx  +
push 57h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 5  +
jmp loc_101E9D9  +
test eax eax +
jz loc_101EA8E  +
mov ecx off_102B00C +
cmp ecx esi +
jz loc_101EA84  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_101EA84  +
push eax  +
push ebx  +
push 58h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
push 80338005h  +
jmp loc_101E9D9  +
mov ecx [ebp-414h] +
add ecx 8 +
call sub_101A103  +
test eax eax +
jnz loc_101EACF  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EAC9  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101EAC9  +
push edi  +
push ebx  +
push 59h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
jmp loc_101E9D9  +
push dword ptr [ebp+8]  +
call sub_10192C8  +
push eax  +
lea ecx [ebp-424h] +
call sub_101C654  +
mov byte ptr [ebp-4] 7 +
cmp dword ptr [ebp-424h] 0 +
jnz loc_101EB0C  +
push 0Eh  +
call ds:SetLastError  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-424h] +
call sub_101C3DE  +
jmp loc_101E9DF  +
push dword ptr [ebp-424h]  +
mov ecx [ebp-414h] +
push dword ptr [ebp-41Ch]  +
call sub_101E697  +
test eax eax +
jz loc_101EAF8  +
mov eax [ebp-418h] +
mov edi [ebp-41Ch] +
mov ecx [ebp-414h] +
and dword ptr [ebp-41Ch] 0 +
and dword ptr [ebp-418h] 0 +
push eax  +
push edi  +
push dword ptr [ebp-424h]  +
mov [ebp-428h] eax +
call sub_101CAE6  +
test eax eax +
jnz loc_101EC03  +
call ds:GetLastError  +
mov [ebp-42Ch] eax +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EB94  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101EB94  +
push dword ptr [ebp-42Ch]  +
push ebx  +
push 5Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov esi ds:RegCloseKey +
test edi edi +
jz loc_101EBA1  +
push edi  +
call esi  +
cmp dword ptr [ebp-428h] 0 +
jz loc_101EBB2  +
push dword ptr [ebp-428h]  +
call esi  +
push dword ptr [ebp-42Ch]  +
call ds:SetLastError  +
xor esi esi +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-424h] +
call sub_101C3DE  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-418h] +
call sub_100C353  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-41Ch] +
call sub_100C353  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-414h] +
call sub_10114A6  +
mov eax esi +
jmp loc_101E8D8  +
mov eax [ebp-414h] +
mov dword ptr [eax+2410h] 1 +
mov eax [ebp-414h] +
and dword ptr [ebp-414h] 0 +
mov esi eax +
jmp loc_101EBC0  +
***
mov edi edi +
push esi  +
mov esi ecx +
xor eax eax +
cmp [esi+2410h] eax +
jnz loc_101EC56  +
push eax  +
push 54Fh  +
push offset a2141  +
push 85Dh  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
pop esi  +
retn   +
cmp [esi+2414h] eax +
jnz loc_101EC70  +
push eax  +
push 54Fh  +
push offset a2142  +
push 85Eh  +
jmp loc_101EC48  +
cmp [esi+2418h] eax +
jnz loc_101EC8A  +
push eax  +
push 54Fh  +
push offset a2143  +
push 85Fh  +
jmp loc_101EC48  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101ECB2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101ECB2  +
push esi  +
push offset dword_1006A3C  +
push 5Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
inc dword ptr [esi+2420h]  +
lea eax [esi+2424h] +
cmp dword ptr [eax] 1 +
push 2  +
pop ecx  +
jnz loc_101ECC8  +
mov [eax] ecx +
lea eax [esi+2428h] +
cmp dword ptr [eax] 1 +
jnz loc_101ECD5  +
mov [eax] ecx +
lea eax [esi+242Ch] +
cmp dword ptr [eax] 1 +
jnz loc_101ECE2  +
mov [eax] ecx +
mov ecx [esi+2414h] +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [esi+2414h] +
mov ecx [esi+2418h] +
push eax  +
push ecx  +
mov ecx esi +
call sub_101E697  +
neg eax  +
sbb eax eax +
neg eax  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi [ebp+8] +
xor edi edi +
cmp esi edi +
jnz loc_101ED48  +
push edi  +
push 54Fh  +
push offset a2180  +
push 884h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 0Ch  +
mov eax [ebp+0Ch] +
cmp eax edi +
jnz loc_101ED61  +
push esi  +
push 54Fh  +
push offset a2181  +
push 885h  +
jmp loc_101ED34  +
cmp [ebp+10h] edi +
jnz loc_101ED78  +
push esi  +
push 54Fh  +
push offset a2182  +
push 886h  +
jmp loc_101ED34  +
push dword ptr [eax+4]  +
call sub_10192C8  +
push eax  +
lea ecx [ebp-10h] +
call sub_101C654  +
mov [ebp-4] edi +
cmp [ebp-10h] edi +
jnz loc_101EDAA  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101C3DE  +
mov eax esi +
jmp loc_101ED40  +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov edi 200000h +
mov ebx offset dword_1006A3C +
cmp eax esi +
jz loc_101EDD5  +
test [eax+1Ch] edi +
jz loc_101EDD5  +
push ebx  +
push 5Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+0Ch] +
push 0  +
push dword ptr [eax+4]  +
call sub_101E7FE  +
push eax  +
lea ecx [ebp-14h] +
call sub_100FEC0  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-14h] +
test ecx ecx +
jnz loc_101EE32  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EEA8  +
test [eax+1Ch] edi +
jz loc_101EEA8  +
push ebx  +
push 5Dh  +
jmp loc_101EE9D  +
mov ecx [ebp-10h] +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
test eax eax +
jnz loc_101EE54  +
mov ecx [ebp-14h] +
call sub_101EC29  +
test eax eax +
jz loc_101EE8C  +
mov ecx [ebp-14h] +
push dword ptr [ebp+8]  +
push dword ptr [ebp-10h]  +
call sub_101BBA3  +
test eax eax +
jnz loc_101EE14  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EEA8  +
test [eax+1Ch] edi +
jz loc_101EEA8  +
push ebx  +
push 5Eh  +
jmp loc_101EE9D  +
mov ecx [ebp-10h] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
push eax  +
push 100h  +
push dword ptr [ebp+10h]  +
call sub_100B5BB  +
test eax eax +
jge loc_101EEB5  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a2224  +
push 8B0h  +
push offset aDW7rtmAdmin_12  +
call sub_100A7B1  +
jmp loc_101EEB5  +
mov eax off_102B00C +
cmp eax esi +
jz loc_101EEA8  +
test [eax+1Ch] edi +
jz loc_101EEA8  +
push ebx  +
push 5Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 80338000h  +
call dword ptr [eax+20h]  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+44h]  +
mov esi eax +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call sub_10114A6  +
jmp loc_101ED9A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jnz loc_101EEFE  +
push eax  +
push 54Fh  +
push offset a18  +
push 12h  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 8  +
cmp [ebp+arg_0] eax +
jnz loc_101EF14  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a19  +
push 13h  +
jmp loc_101EEEE  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101EF3B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101EF3B  +
push offset dword_1006E48  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
pop ebp  +
jmp sub_101DE21  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jnz loc_101EF6F  +
push eax  +
push 54Fh  +
push offset a28  +
push 1Ch  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 8  +
cmp [ebp+arg_0] eax +
jnz loc_101EF85  +
push [ebp+arg_4]  +
push 54Fh  +
push offset a29  +
push 1Dh  +
jmp loc_101EF5F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101EFAC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101EFAC  +
push offset dword_1006E48  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
pop ebp  +
jmp sub_101DE21  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101EFE3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101EFE3  +
push offset dword_1006E48  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push [ebp+arg_0]  +
push 1  +
call sub_101E7FE  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
cmp edi eax +
jnz loc_101F02D  +
push eax  +
push 54Fh  +
push offset a109  +
push 6Dh  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F0BB  +
push esi  +
mov esi [ebp+arg_0] +
cmp esi eax +
jnz loc_101F044  +
push edi  +
push 54Fh  +
push offset a110  +
push 6Eh  +
jmp loc_101F07E  +
cmp [esi+0Ch] eax +
jnz loc_101F058  +
push edi  +
push 54Fh  +
push offset a111  +
push 6Fh  +
jmp loc_101F07E  +
cmp [esi+8] eax +
jnz loc_101F06C  +
push edi  +
push 54Fh  +
push offset a112  +
push 70h  +
jmp loc_101F07E  +
cmp [esi+10h] eax +
jnz loc_101F08C  +
push edi  +
push 54Fh  +
push offset a113  +
push 71h  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F0BA  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F0B3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F0B3  +
push offset dword_1006E48  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push edi  +
push esi  +
call sub_101DE21  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F0F5  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F0F5  +
push esi  +
push offset dword_1006E48  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_101BBA3  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp eax ecx +
jnz loc_101F138  +
push ecx  +
push 54Fh  +
push offset a166  +
push 0A6h  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F172  +
cmp [ebp+arg_4] ecx +
jnz loc_101F14F  +
push eax  +
push 54Fh  +
push offset a167  +
push 0A7h  +
jmp loc_101F12A  +
cmp [ebp+arg_8] ecx +
jnz loc_101F166  +
push eax  +
push 54Fh  +
push offset a168  +
push 0A8h  +
jmp loc_101F12A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_101ED0F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F1A7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F1A7  +
push offset dword_1006E48  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
pop ebp  +
jmp sub_101ED0F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F1E2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F1E2  +
push esi  +
push offset dword_1006E48  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_4]  +
xor eax eax +
cmp [esi+2410h] eax +
jnz loc_101F209  +
push 54Fh  +
push offset a84  +
push 54h  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F23C  +
cmp [esi+2414h] eax +
jnz loc_101F21F  +
push 54Fh  +
push offset a85  +
push 55h  +
jmp loc_101F1FB  +
cmp [ebp+arg_0] eax +
jnz loc_101F232  +
push 54Fh  +
push offset a86  +
push 56h  +
jmp loc_101F1FB  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101BBA3  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F276  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F276  +
push esi  +
push offset dword_1006E48  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_4]  +
xor eax eax +
cmp [esi+2410h] eax +
jnz loc_101F29D  +
push 54Fh  +
push offset a100  +
push 64h  +
push offset aDW7rtmAdmin_13  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F2D0  +
cmp [esi+2414h] eax +
jnz loc_101F2B3  +
push 54Fh  +
push offset a101  +
push 65h  +
jmp loc_101F28F  +
cmp [ebp+arg_0] eax +
jnz loc_101F2C6  +
push 54Fh  +
push offset a102  +
push 66h  +
jmp loc_101F28F  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_101BBA3  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_14] +
test edx edx +
jz loc_101F30B  +
cmp word ptr [edx] 0 +
jnz loc_101F2F0  +
push 0Eh  +
jmp loc_101F30D  +
mov eax edx +
push esi  +
lea esi [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101F2F6  +
sub eax esi +
sar eax 1 +
lea eax [eax+eax+2] +
pop esi  +
jmp loc_101F30E  +
push 0Ah  +
pop eax  +
test edx edx +
jz loc_101F31F  +
cmp word ptr [edx] 0 +
jnz loc_101F324  +
mov edx offset aNull_0 +
jmp loc_101F324  +
mov edx offset aNull +
push 0  +
push 4  +
lea ecx [ebp+arg_1C] +
push ecx  +
push 4  +
lea ecx [ebp+arg_18] +
push ecx  +
push eax  +
push edx  +
push 4  +
lea eax [ebp+arg_10] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push 2Bh  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call off_102B004  +
add esp 38h +
pop ebp  +
retn 20h  +
***
add ecx 0Ch +
push ecx  +
call ds:InterlockedCompareExchange  +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_101F3A1  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a547  +
push 223h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F4C0  +
test byte ptr [esi+0Ch] 3 +
jnz loc_101F3BB  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a548  +
push 224h  +
jmp loc_101F390  +
mov ecx off_102B00C +
push ebx  +
push edi  +
mov ebx offset dword_1006F50 +
cmp ecx offset off_102B00C +
jz loc_101F3F5  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101F3F5  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
push ebx  +
push 21h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_101B835  +
mov ecx off_102B00C +
mov edx [esi+18h] +
mov [ebp+arg_4] 1 +
mov edi 80338088h +
cmp [ebp+arg_8] edx +
jnb loc_101F461  +
cmp ecx offset off_102B00C +
jz loc_101F431  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101F431  +
push edx  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
push ebx  +
push 22h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_101F2DA  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101F450  +
push dword ptr [esi+18h]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push 4033C3F8h  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 18h +
push edi  +
call ds:SetLastError  +
and [ebp+arg_4] 0 +
mov ecx off_102B00C +
mov eax [esi+1Ch] +
cmp [ebp+arg_8] eax +
jbe loc_101F4BB  +
cmp ecx offset off_102B00C +
jz loc_101F491  +
test dword ptr [ecx+1Ch] 200000h +
jz loc_101F491  +
push eax  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push dword ptr [esi]  +
push ebx  +
push 23h  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_101F2DA  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101F4B0  +
push dword ptr [esi+1Ch]  +
mov ecx [eax] +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
push 4033C3F9h  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 18h +
push edi  +
call ds:SetLastError  +
and [ebp+arg_4] 0 +
mov eax [ebp+arg_4] +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_101F4F6  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a609  +
push 261h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F542  +
cmp [ebp+arg_8] 0 +
jnz loc_101F510  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a610  +
push 262h  +
jmp loc_101F4E8  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F53F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F53F  +
push [ebp+arg_8]  +
push dword ptr [ecx+8]  +
push dword ptr [ecx]  +
push offset dword_1006F50  +
push 24h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
cmp eax esi +
jnz loc_101F578  +
push esi  +
push 54Fh  +
push offset a1012  +
push 3F4h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101F5BB  +
mov eax [eax+10h] +
cmp eax 1 +
jnz loc_101F587  +
mov esi offset aSoftwarePolici +
jmp loc_101F5B9  +
cmp eax 2 +
jnz loc_101F593  +
mov esi offset aSoftwarePoli_0 +
jmp loc_101F5B9  +
cmp eax 3 +
jnz loc_101F59F  +
mov esi offset aSoftwarePoli_1 +
jmp loc_101F5B9  +
push esi  +
push 54Fh  +
push offset a1041  +
push 411h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
test edx edx +
jnz loc_101F5CF  +
xor eax eax +
retn   +
mov eax [ecx+8] +
sub eax edx +
sar eax 2 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi] +
push 0  +
push 0  +
mov ecx esi +
call dword ptr [eax+4]  +
push eax  +
push esi  +
call sub_100E4E9  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push [ebp+arg_4]  +
call ds:UnregisterWaitEx  +
test eax eax +
jnz loc_101F62B  +
call ds:GetLastError  +
cmp eax 3E5h +
jz loc_101F62B  +
push [ebp+arg_4]  +
call sub_100E524  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_1007140 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_1003AC8 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101F634  +
test byte ptr [ebp+8] 1 +
jz loc_101F678  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx] +
push offset aEntercriticalp  +
push ecx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101F6D4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F6CE  +
test dword ptr [eax+1Ch] 200h +
jz loc_101F6CE  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_1006F50  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
pop ebp  +
retn 4  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx] +
push offset aLeavecriticalp  +
push ecx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101F72C  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F726  +
test dword ptr [eax+1Ch] 200h +
jz loc_101F726  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_1006F50  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
pop ebp  +
retn 4  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx] +
push offset aRegistergpnoti  +
push ecx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101F784  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F77E  +
test dword ptr [eax+1Ch] 200h +
jz loc_101F77E  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_1006F50  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
pop ebp  +
retn 8  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx] +
push offset aUnregistergpno  +
push ecx  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_101F7DC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F7D6  +
test dword ptr [eax+1Ch] 200h +
jz loc_101F7D6  +
call ds:GetLastError  +
push eax  +
mov eax off_102B00C +
push offset dword_1006F50  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor eax eax +
pop ebp  +
retn 4  +
***
pop ebp  +
jmp eax  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_1003AC8 +
and dword ptr [ebp-4] 0 +
mov dword ptr [eax] offset off_1007140 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1006F50 +
cmp eax edi +
jz loc_101F856  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F856  +
movzx ecx byte ptr [ebp+8] +
push esi  +
push ecx  +
push ebx  +
push 37h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
push 1  +
push 1  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_101F895  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101F888  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101F888  +
push ebx  +
push 38h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 54Fh  +
call ds:SetLastError  +
jmp loc_101F8E4  +
mov ecx [esi+8] +
push 1  +
call sub_101F684  +
mov ebx eax +
xor edi edi +
cmp ebx edi +
jz loc_101F8E4  +
lea eax [esi+44h] +
push eax  +
lea ecx [ebp-14h] +
call sub_100E77B  +
mov [ebp-4] edi +
cmp byte ptr [ebp+8] 1 +
jz loc_101F8CA  +
mov ecx [esi+7Ch] +
cmp ecx edi +
jz loc_101F8CA  +
push esi  +
push edi  +
call sub_1023DCB  +
mov ecx [esi+8] +
push ebx  +
call sub_101F6DC  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] edi +
jnz loc_101F8E4  +
mov ecx [ebp-14h] +
call sub_100FC34  +
call __EH_epilog3  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
cmp ecx [ebp+10h] +
jz loc_101F912  +
mov eax [ebp+14h] +
mov eax [eax] +
cmp [ecx] eax +
jz loc_101F912  +
add ecx 4 +
mov [ebp+0Ch] ecx +
cmp ecx [ebp+10h] +
jnz loc_101F903  +
mov eax [ebp+8] +
mov [eax] ecx +
pop ebp  +
retn 10h  +
***
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz locret_101F930  +
push eax  +
push ecx  +
call sub_101F602  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_101F94E  +
push eax  +
push esi  +
call sub_101F602  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_101F982  +
push eax  +
push ecx  +
call sub_101F602  +
call __EH_epilog3  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101F9B9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101F9B9  +
push offset dword_1006F50  +
push 36h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
cmp dword ptr [ebp+8] 0 +
jnz loc_101F9DA  +
push 0  +
push 54Fh  +
push offset a1145  +
push 479h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_101F818  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_101FA1C  +
push eax  +
push esi  +
call sub_101F5DD  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_101FA47  +
lea ecx [ebp-1] +
push ecx  +
push eax  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
leave   +
retn   +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
mov ecx [ebp+8] +
mov [eax] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_101F936  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push 0  +
mov edi ecx +
call sub_100B94B  +
mov esi 104h +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_101FADC  +
xor al al +
jmp loc_101FB8C  +
lea eax [ebp+LibFileName] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FAE5  +
sub eax edx +
push 5Ch  +
sar eax 1 +
pop ecx  +
cmp cx [ebp+eax*2+var_212] +
lea eax [ebp+LibFileName] +
jnz loc_101FB0D  +
push offset aUserenv_dll_0  +
jmp loc_101FB12  +
push offset aUserenv_dll  +
push esi  +
push eax  +
call sub_100B5F5  +
test eax eax +
jge loc_101FB46  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101FAD5  +
test dword ptr [eax+1Ch] 200h +
jz loc_101FAD5  +
push offset dword_1006F50  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_101FAD5  +
push 0  +
push 0  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryExW  +
push eax  +
mov ecx edi +
call sub_100C389  +
cmp dword ptr [edi] 0 +
jnz loc_101FB8A  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101FAD5  +
test dword ptr [eax+1Ch] 200h +
jz loc_101FAD5  +
push offset dword_1006F50  +
push 0Bh  +
jmp loc_101FB39  +
mov al 1 +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100A071  +
leave   +
retn   +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
call sub_100C369  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-10h] +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov edi ecx +
xor ebx ebx +
cmp [ebp+10h] ebx +
jnz loc_101FBFE  +
push dword ptr [ebp+8]  +
mov esi 54Fh +
push esi  +
push offset a1075  +
push 433h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
mov eax esi +
jmp loc_101FD34  +
cmp [ebp+14h] ebx +
jbe loc_101FC37  +
cmp [ebp+18h] ebx +
jnz loc_101FC1D  +
push dword ptr [ebp+8]  +
mov esi 54Fh +
push esi  +
push offset a1078  +
push 436h  +
jmp loc_101FBED  +
cmp [ebp+1Ch] ebx +
jnz loc_101FC37  +
push dword ptr [ebp+8]  +
mov esi 54Fh +
push esi  +
push offset a1079  +
push 437h  +
jmp loc_101FBED  +
mov esi [ebp+0Ch] +
push esi  +
call sub_101F54B  +
cmp eax ebx +
jnz loc_101FC59  +
push dword ptr [ebp+8]  +
mov esi 54Fh +
push esi  +
push offset a1083  +
push 43Bh  +
jmp loc_101FBED  +
mov [ebp+0Ch] ebx +
mov dword ptr [ebp-4] 1 +
mov ecx [edi+80h] +
cmp ecx ebx +
jnz loc_101FC72  +
mov ecx 80000002h +
lea edx [ebp+0Ch] +
push edx  +
push 20119h  +
push ebx  +
push eax  +
push ecx  +
call ds:RegOpenKeyExW  +
mov edi eax +
cmp edi ebx +
jnz loc_101FCA8  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [esi+8]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1010805  +
mov edi eax +
jmp loc_101FD26  +
cmp edi 2 +
jnz loc_101FCD9  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101FD26  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FD26  +
push dword ptr [esi+8]  +
push offset dword_1006F50  +
push 34h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
jmp loc_101FD26  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_101FD04  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FD04  +
push dword ptr [esi+8]  +
push edi  +
push offset dword_1006F50  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
push edi  +
call ds:SetLastError  +
mov eax [ebp+8] +
cmp eax ebx +
jz loc_101FD26  +
mov ecx [eax] +
push edi  +
push offset aRegopenkeyex  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_100C353  +
mov eax edi +
call __EH_epilog3  +
retn 18h  +
***
push 8  +
mov eax offset byte_1026AA3 +
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1006F50 +
cmp eax edi +
jz loc_101FD7A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101FD7A  +
push esi  +
push ebx  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_101FDA3  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1385  +
push 569h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_101FE63  +
push 1  +
push 1  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_101FDFE  +
mov eax off_102B00C +
cmp eax edi +
jz loc_101FDD5  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FDD5  +
push ebx  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+8] +
mov esi 54Fh +
test eax eax +
jz loc_101FDF5  +
mov ecx [eax] +
push esi  +
push offset aCwsmangroupp_4  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
jmp loc_101FD9C  +
***
mov eax off_102B00C +
cmp eax edi +
jz loc_101FE1E  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FE1E  +
push ebx  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
lea eax [esi+28h] +
push eax  +
lea ecx [ebp-14h] +
call sub_100E77B  +
xor ebx ebx +
mov [ebp-4] ebx +
mov edi [esi+1Ch] +
mov esi [esi+20h] +
jmp loc_101FE4B  +
push dword ptr [ebp+0Ch]  +
mov ecx [edi] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_101FE6B  +
add edi 4 +
cmp edi esi +
jnz loc_101FE37  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jnz loc_101FE60  +
mov ecx [ebp-14h] +
call sub_100FC34  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
***
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jnz loc_101FD9C  +
mov ecx [ebp-14h] +
call sub_100FC34  +
jmp loc_101FD9C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
push eax  +
mov esi ecx +
push dword ptr [esi+8]  +
add eax 4 +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_1022F2A  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add esp 10h +
add dword ptr [esi+8] 0FFFFFFFCh +
mov [eax] ecx +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_101FA04  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_100A79B  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
mov edi offset dword_1006F50 +
cmp eax ebx +
jz loc_101FF42  +
test dword ptr [eax+1Ch] 200000h +
jz loc_101FF42  +
push esi  +
push edi  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [ebp-0Dh] +
push 0  +
push eax  +
push 6Ch  +
mov [ebp-20h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-24h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_101FF66  +
mov ecx eax +
call sub_1023900  +
jmp loc_101FF68  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push eax  +
lea ecx [ebp-14h] +
call sub_100FEC0  +
mov dword ptr [ebp-4] 1 +
mov ecx [ebp-14h] +
test ecx ecx +
jnz loc_101FFCD  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101FFA3  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FFA3  +
push edi  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_101FFAF  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_10114A6  +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
push esi  +
push dword ptr [ebp+8]  +
call sub_1023CE7  +
test eax eax +
jnz loc_101FFFC  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_101FFB7  +
test dword ptr [eax+1Ch] 400000h +
jz loc_101FFB7  +
push edi  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_101FFB7  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
call ds:CreateEventW  +
push eax  +
lea ecx [ebp-18h] +
call sub_101AAED  +
mov byte ptr [ebp-4] 2 +
cmp dword ptr [ebp-18h] 0 +
jnz loc_1020070  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020044  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020044  +
push esi  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
test eax eax +
jz loc_102005F  +
mov ecx [eax] +
push esi  +
push offset aCreateevent  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call sub_100B8F6  +
jmp loc_101FFB7  +
***
and dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-4] 4 +
push 10h  +
push 0FFFFFFFFh  +
push esi  +
push (offset byte_101F98C+1)  +
push dword ptr [ebp-18h]  +
lea eax [ebp-1Ch] +
push eax  +
call ds:RegisterWaitForSingleObject  +
test eax eax +
jnz loc_10200E8  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10200BC  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10200BC  +
push esi  +
push edi  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
test eax eax +
jz loc_10200D7  +
mov ecx [eax] +
push esi  +
push offset aRegisterwaitfo  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call sub_101F95F  +
jmp loc_102005F  +
***
mov eax [ebp-1Ch] +
and dword ptr [ebp-1Ch] 0 +
push eax  +
lea ecx [esi+14h] +
call near ptr dword_101FA80+2  +
mov eax [ebp-18h] +
and dword ptr [ebp-18h] 0 +
lea edi [esi+10h] +
push eax  +
mov ecx edi +
call near ptr dword_1011460+3  +
mov edi [edi] +
mov ecx [esi+8] +
push 1  +
push edi  +
call sub_101F734  +
test eax eax +
jnz loc_1020191  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020149  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020149  +
push esi  +
push edi  +
push offset dword_1006F50  +
push 20h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100AB5B  +
mov eax [ebp+8] +
test eax eax +
jz loc_1020164  +
mov ecx [eax] +
push edi  +
push offset aRegistergpno_0  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
xor esi esi +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call sub_101F95F  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-18h] +
call sub_100B8F6  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_10114A6  +
mov eax esi +
jmp loc_101FFC5  +
***
mov eax [ebp-14h] +
and dword ptr [ebp-14h] 0 +
push eax  +
lea ecx [esi+7Ch] +
call sub_101FECA  +
xor esi esi +
inc esi  +
jmp loc_1020166  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+arg_8] 0 +
mov [ebp+var_8] ecx +
jnz loc_102022F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a643  +
push 283h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp locret_102047E  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
push edi  +
mov edi offset dword_1006F50 +
cmp eax ebx +
jz loc_102025E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_102025E  +
push [ebp+arg_4]  +
push edi  +
push 25h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
push 3  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021255  +
mov esi eax +
test esi esi +
jnz loc_1020293  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a650  +
push 28Ah  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
jmp loc_1020479  +
mov ecx [ebp+var_8] +
and [ebp+var_14] 0 +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+arg_0]  +
call sub_101FBC5  +
mov ecx eax +
mov [ebp+dwErrCode] ecx +
test ecx ecx +
jnz loc_10203AC  +
cmp [ebp+var_C] 4 +
jnz loc_102035C  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10202F1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10202F1  +
push [ebp+var_4]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 26h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
push [ebp+var_4]  +
mov ecx [ebp+var_8] +
push esi  +
push [ebp+arg_0]  +
call sub_101F371  +
test eax eax +
jz loc_1020326  +
mov ecx [ebp+arg_8] +
mov eax [ebp+var_4] +
mov [ecx] eax +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_10203EC  +
xor edx edx +
test eax eax +
setz dl  +
inc edx  +
mov [ecx] edx +
jmp loc_10203EC  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020479  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020479  +
push [ebp+var_4]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 27h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
jmp loc_1020479  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020385  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020385  +
push [ebp+var_C]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10203A2  +
push dword ptr [esi+8]  +
push 4033C3FAh  +
mov ecx [eax] +
push 80338088h  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push 80338005h  +
jmp loc_1020473  +
cmp ecx 2 +
jnz loc_10203F4  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10203DA  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10203DA  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push dword ptr [esi+14h]  +
push edi  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B8AF  +
mov eax [esi+14h] +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10203EC  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
jmp loc_102047B  +
cmp ecx 0EAh +
jnz loc_1020434  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_102041C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_102041C  +
push edi  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10203A2  +
push dword ptr [esi+8]  +
push 4033C3FBh  +
jmp loc_1020394  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020455  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020455  +
push ecx  +
push edi  +
push 2Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1020470  +
push dword ptr [esi+8]  +
mov ecx [eax] +
push 4033C3FBh  +
push [ebp+dwErrCode]  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi ecx +
test edi edi +
jnz loc_10204B7  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a770  +
push 302h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1020503  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10204E1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10204E1  +
push [ebp+arg_4]  +
push offset dword_1006F50  +
push 2Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+arg_C]  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_10201FB  +
test eax eax +
jz loc_1020503  +
xor ecx ecx +
cmp [ebp+arg_4] ecx +
setnz cl  +
mov [edi] ecx +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
mov [ebp+var_8] ecx +
cmp [ebp+arg_C] esi +
jbe loc_1020562  +
cmp [ebp+arg_10] esi +
jnz loc_1020549  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a840  +
push 348h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1020868  +
cmp [ebp+arg_14] esi +
jnz loc_1020562  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a841  +
push 349h  +
jmp loc_1020538  +
mov eax off_102B00C +
push ebx  +
mov ebx offset off_102B00C +
push edi  +
mov edi offset dword_1006F50 +
cmp eax ebx +
jz loc_1020591  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020591  +
push [ebp+arg_4]  +
push edi  +
push 2Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push [ebp+dwErrCode]  +
mov eax [ebp+arg_14] +
push [ebp+arg_4]  +
mov [eax] esi +
push [ebp+arg_0]  +
call sub_1021255  +
mov esi eax +
test esi esi +
jnz loc_10205CB  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a851  +
push 353h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
jmp loc_1020864  +
mov ecx [ebp+var_8] +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_10]  +
mov eax [ebp+arg_C] +
add eax eax +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
push [ebp+arg_0]  +
call sub_101FBC5  +
mov ecx eax +
mov [ebp+dwErrCode] ecx +
test ecx ecx +
jnz loc_1020759  +
cmp [ebp+var_C] 1 +
jnz loc_10206FD  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020631  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020631  +
push [ebp+arg_10]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
mov eax off_102B00C +
mov ecx [ebp+var_4] +
cmp ecx 2 +
jb loc_102067D  +
mov edx [ebp+arg_10] +
add ecx edx +
cmp byte ptr [ecx-1] 0 +
jz loc_102067D  +
cmp byte ptr [ecx-2] 0 +
jz loc_102067D  +
cmp eax ebx +
jz loc_1020665  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020665  +
push edi  +
push 2Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 7Ah  +
call ds:SetLastError  +
mov eax [ebp+var_4] +
shr eax 1 +
inc eax  +
mov ecx [ebp+arg_14] +
mov [ecx] eax +
jmp loc_1020864  +
push [ebp+arg_10]  +
mov ecx [ebp+var_8] +
push esi  +
push [ebp+arg_0]  +
call sub_101F4CA  +
test eax eax +
jz loc_10206B0  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_14] +
shr eax 1 +
mov [ecx] eax +
mov eax [ebp+arg_18] +
test eax eax +
jz loc_102081A  +
mov dword ptr [eax] 3 +
jmp loc_102081A  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10206D9  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10206D9  +
push [ebp+arg_10]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 30h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100FCDA  +
mov eax [ebp+arg_0] +
mov edi 80338088h +
test eax eax +
jz loc_10206F7  +
push dword ptr [esi+8]  +
mov ecx [eax] +
push 4033C3FBh  +
push edi  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push edi  +
jmp loc_102085E  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020726  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020726  +
push [ebp+var_C]  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push edi  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B835  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1020743  +
push dword ptr [esi+8]  +
mov ecx [eax] +
push 4033C3FAh  +
push 80338088h  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push 80338005h  +
call ds:SetLastError  +
mov eax [ebp+arg_14] +
and dword ptr [eax] 0 +
jmp loc_1020864  +
cmp ecx 7Ah +
jnz loc_102076F  +
push ecx  +
call ds:SetLastError  +
mov eax [ebp+var_4] +
shr eax 1 +
jmp loc_1020673  +
cmp ecx 2 +
jnz loc_102081F  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10207A1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10207A1  +
push dword ptr [esi+8]  +
push [ebp+arg_4]  +
push dword ptr [esi+20h]  +
push edi  +
push 32h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101B767  +
mov esi [esi+20h] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10207A9  +
sub eax edx +
sar eax 1 +
cmp eax 200h +
jb loc_10207D4  +
push 0  +
push 54Fh  +
push offset a940  +
push 3ACh  +
jmp loc_10205BC  +
mov ecx [ebp+arg_14] +
inc eax  +
mov [ecx] eax +
cmp [ebp+arg_C] eax +
jnb loc_10207E3  +
push 7Ah  +
jmp loc_102085E  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_10]  +
call sub_100B5BB  +
cmp eax 8007007Ah +
jz loc_10207DF  +
test eax eax +
jge loc_1020810  +
push 0  +
push 54Fh  +
push offset a961  +
push 3C1h  +
jmp loc_10205BC  +
mov eax [ebp+arg_18] +
test eax eax +
jz loc_102081A  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
jmp loc_1020866  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1020840  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020840  +
push ecx  +
push edi  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_102085B  +
push dword ptr [esi+8]  +
mov ecx [eax] +
push 4033C3FBh  +
push [ebp+dwErrCode]  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 1Ch  +
***
push 10h  +
mov eax offset __ehhandler$?_Locimp_Addfac@_Locimp@locale@std@@CAXPAV123@PAVfacet@23@I@Z +
call __EH_prolog3  +
mov esi ecx +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1006F50 +
cmp eax edi +
jz loc_10208AB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10208AB  +
push esi  +
push ebx  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_10208D4  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1317  +
push 525h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10209B1  +
push 1  +
push 1  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_102092F  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1020906  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020906  +
push ebx  +
push 3Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+8] +
mov esi 54Fh +
test eax eax +
jz loc_1020926  +
mov ecx [eax] +
push esi  +
push offset aCwsmangroupp_5  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
jmp loc_10208CD  +
***
lea eax [esi+60h] +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100E77B  +
xor ebx ebx +
mov [ebp-4] ebx +
lea eax [esi+28h] +
push eax  +
lea ecx [ebp-14h] +
call sub_100E77B  +
mov byte ptr [ebp-4] 1 +
mov edi [esi+20h] +
mov eax [esi+1Ch] +
lea ecx [ebp+0Ch] +
push ecx  +
push edi  +
push eax  +
lea eax [ebp+8] +
push eax  +
call near ptr byte_101F8F0+1  +
cmp [ebp+8] edi +
jz loc_1020979  +
push dword ptr [ebp+8]  +
lea eax [ebp+8] +
push eax  +
lea ecx [esi+18h] +
call sub_101FE94  +
mov byte ptr [ebp-4] 0 +
cmp [ebp-10h] ebx +
jnz loc_102098A  +
mov ecx [ebp-14h] +
call sub_100FC34  +
lea ecx [esi+18h] +
call sub_101F5C5  +
test eax eax +
jnz loc_102099D  +
mov ecx esi +
call near ptr dword_10201A8+3  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-18h] ebx +
jnz loc_10209AE  +
mov ecx [ebp-1Ch] +
call sub_100FC34  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101FEE6  +
test [ebp+arg_0] 1 +
jz loc_10209D8  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 4  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102050E  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1020A1E  +
push 1  +
call sub_10209BE  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_1020A55  +
push eax  +
push esi  +
call sub_1020A0B  +
mov eax [ebp+arg_0] +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_1020A89  +
push eax  +
push ecx  +
call sub_1020A0B  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10073A8 +
mov dword ptr [ebp-4] 9 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1020ADA  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020ADA  +
push esi  +
push offset dword_1006F50  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea edi [esi+7Ch] +
mov eax [edi] +
mov ebx offset aDW7rtmAdmin_14 +
test eax eax +
jz loc_1020AFF  +
push 0  +
push 54Fh  +
push offset a262  +
push 106h  +
push ebx  +
call sub_100A7B1  +
lea ecx [esi+18h] +
call sub_101F5C5  +
test eax eax +
jz loc_1020B22  +
push 0  +
push 54Fh  +
push offset a263  +
push 107h  +
push ebx  +
call sub_100A7B1  +
mov ecx esi +
call sub_101F35A  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+80h] +
call sub_100C353  +
mov byte ptr [ebp-4] 7 +
mov ecx edi +
call sub_10114A6  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+60h] +
call sub_100FC8B  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+44h] +
call sub_100FC8B  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+28h] +
call sub_100FC8B  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+18h] +
call sub_101FA2D  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+14h] +
call sub_101F95F  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+10h] +
call sub_100B8F6  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+8] +
call sub_1020A66  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_101F634  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_1020A3D  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1020A94  +
test byte ptr [ebp+8] 1 +
jz loc_1020C06  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [esi+0Ch] +
cmp dword ptr [eax] 0 +
mov [ebp-10h] eax +
mov ebx 54Fh +
mov edi offset aDW7rtmAdmin_14 +
jz loc_1020C49  +
push dword ptr [ebp+8]  +
push ebx  +
push offset a286  +
push 11Eh  +
push edi  +
call sub_100A7B1  +
cmp dword ptr [esi+10h] 0 +
jz loc_1020C63  +
push dword ptr [ebp+8]  +
push ebx  +
push offset a287  +
push 11Fh  +
push edi  +
call sub_100A7B1  +
lea ecx [esi+28h] +
call sub_100FC14  +
test eax eax +
jz loc_1020DC3  +
lea ecx [esi+44h] +
call sub_100FC14  +
test eax eax +
jz loc_1020DC3  +
lea ecx [esi+60h] +
call sub_100FC14  +
test eax eax +
jz loc_1020DC3  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1006F50 +
cmp eax edi +
jz loc_1020CC3  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020CC3  +
push esi  +
push ebx  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1020D4F  +
cmp eax edi +
jz loc_1020CEB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020CEB  +
push dword ptr [ebp+0Ch]  +
push ebx  +
push 18h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
lea eax [esi+80h] +
push eax  +
push 80000002h  +
push dword ptr [ebp+0Ch]  +
call ds:RegConnectRegistryW  +
mov [ebp+0Ch] eax +
test eax eax +
jz loc_1020D4F  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1020D2A  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020D2A  +
push dword ptr [ebp+0Ch]  +
push ebx  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+8] +
test eax eax +
jz loc_1020D47  +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push offset aRegconnectregi  +
push 4033C364h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push dword ptr [ebp+0Ch]  +
jmp loc_1020DD1  +
lea eax [ebp+0Bh] +
push 0  +
push eax  +
push 4  +
mov [ebp+0Ch] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-14h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_1020D73  +
mov ecx eax +
call sub_101FB9F  +
jmp loc_1020D75  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
add esi 8 +
push eax  +
mov ecx esi +
call sub_1020BD0  +
mov ecx [esi] +
test ecx ecx +
jz loc_1020DCF  +
call sub_101FA9E  +
test al al +
jz loc_1020DD7  +
push 1  +
push dword ptr [ebp-10h]  +
call ds:InterlockedExchange  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1020DBE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020DBE  +
push ebx  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
inc eax  +
jmp loc_1020DD9  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1020DCF  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
call sub_101F5C5  +
test eax eax +
jnz loc_1020DFC  +
xor esi esi +
jmp loc_1020E05  +
mov esi [ebp+arg_4] +
sub esi [edi+4] +
sar esi 2 +
push [ebp+arg_8]  +
mov ecx edi +
push 1  +
push [ebp+arg_4]  +
call sub_102345E  +
mov eax [edi+4] +
lea ecx [eax+esi*4] +
mov eax [ebp+arg_0] +
pop edi  +
mov [eax] ecx +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_101F7E4  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_10073A8 +
call sub_1020BAD  +
mov byte ptr [ebp-4] 1 +
push edi  +
lea ecx [esi+10h] +
mov [esi+0Ch] edi +
call sub_101AAED  +
mov byte ptr [ebp-4] 2 +
push edi  +
lea ecx [esi+14h] +
call sub_101FA5B  +
mov byte ptr [ebp-4] 3 +
mov [esi+1Ch] edi +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+28h] +
call sub_100FB92  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+44h] +
call sub_100FB92  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+60h] +
call sub_100FB92  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+7Ch] +
call sub_1015658  +
mov byte ptr [ebp-4] 8 +
lea ecx [esi+80h] +
call sub_100C369  +
mov byte ptr [ebp-4] 9 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1020EE8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020EE8  +
push esi  +
push offset dword_1006F50  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedIncrement  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov eax off_102B00C +
mov edi offset off_102B00C +
mov ebx offset dword_1006F50 +
cmp eax edi +
jz loc_1020F39  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1020F39  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx dword_102CA1C +
test ecx ecx +
jz loc_1020F51  +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax dword_102CA1C +
jmp loc_1021081  +
mov esi offset unk_102CA00 +
mov ecx esi +
call sub_100FC14  +
test eax eax +
jnz loc_1020F70  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor eax eax +
jmp loc_1021081  +
push esi  +
lea ecx [ebp-24h] +
call sub_100E77B  +
xor esi esi +
mov [ebp-4] esi +
mov ecx dword_102CA1C +
cmp ecx esi +
jnz loc_1021063  +
lea eax [ebp-0Dh] +
push esi  +
push eax  +
push 84h  +
mov [ebp-18h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov ecx eax +
mov [ebp-1Ch] ecx +
mov byte ptr [ebp-4] 1 +
cmp ecx esi +
jz loc_1020FB2  +
call sub_1020E2A  +
jmp loc_1020FB4  +
xor eax eax +
mov byte ptr [ebp-4] 0 +
push eax  +
lea ecx [ebp-14h] +
call sub_100FEC0  +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx esi +
jnz loc_1020FFC  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1020FEC  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1020FEC  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
cmp ecx esi +
jz loc_1020FF8  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 0Eh  +
jmp loc_1021035  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1020C12  +
test eax eax +
jnz loc_102103D  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax edi +
jz loc_1021034  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1021034  +
push esi  +
push ebx  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
call ds:SetLastError  +
jmp loc_1021055  +
mov ecx [ebp-14h] +
mov eax [ecx] +
call dword ptr [eax]  +
mov eax [ebp-14h] +
push eax  +
mov ecx offset dword_102CA1C +
mov [ebp-14h] esi +
call sub_101FA04  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-14h] +
call sub_10114A6  +
jmp loc_1021067  +
mov eax [ecx] +
call dword ptr [eax]  +
mov esi dword_102CA1C +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-20h] 0 +
jnz loc_102107F  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
push 18h  +
mov eax offset dword_1026C7C +
call __EH_prolog3_catch  +
mov esi ecx +
mov eax off_102B00C +
mov edi offset off_102B00C +
cmp eax edi +
jz loc_10210C6  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10210C6  +
push esi  +
push offset dword_1006F50  +
push 39h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_10210EF  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a1232  +
push 4D0h  +
push offset aDW7rtmAdmin_14  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1021221  +
xor ebx ebx +
inc ebx  +
push ebx  +
push ebx  +
lea eax [esi+0Ch] +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_1021152  +
mov eax off_102B00C +
cmp eax edi +
jz loc_1021126  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1021126  +
push offset dword_1006F50  +
push 3Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+8] +
test eax eax +
jz loc_1021145  +
mov ecx [eax] +
push 54Fh  +
push offset aCwsmangroupp_6  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push 54Fh  +
call ds:SetLastError  +
jmp loc_10210E8  +
***
lea eax [esi+60h] +
push eax  +
lea ecx [ebp-24h] +
call sub_100E77B  +
and dword ptr [ebp-4] 0 +
lea eax [esi+28h] +
push eax  +
lea ecx [ebp-1Ch] +
call sub_100E77B  +
mov byte ptr [ebp-4] 1 +
mov edi [esi+20h] +
mov eax [esi+1Ch] +
lea ecx [ebp+0Ch] +
push ecx  +
push edi  +
push eax  +
lea eax [ebp-14h] +
push eax  +
call near ptr byte_101F8F0+1  +
cmp [ebp-14h] edi +
jz loc_10211B4  +
mov byte ptr [ebp-4] 0 +
cmp dword ptr [ebp-18h] 0 +
jnz loc_102119E  +
mov ecx [ebp-1Ch] +
call sub_100FC34  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-20h] 0 +
jnz loc_10211B0  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax ebx +
jmp loc_1021221  +
mov [ebp-14h] ebx +
lea ebx [esi+18h] +
mov ecx ebx +
call sub_101F5C5  +
mov edi eax +
neg edi  +
sbb edi edi +
inc edi  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp+0Ch] +
push eax  +
mov ecx ebx +
call sub_1022375  +
mov dword ptr [ebp-4] 1 +
test edi edi +
jz loc_10211FA  +
push dword ptr [ebp+8]  +
mov ecx esi +
call near ptr dword_101FF04+5  +
test eax eax +
jnz loc_10211FA  +
and [ebp-14h] eax +
mov ecx ebx +
call sub_1023053  +
mov byte ptr [ebp-4] 0 +
cmp dword ptr [ebp-18h] 0 +
jnz loc_102120C  +
mov ecx [ebp-1Ch] +
call sub_100FC34  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-20h] 0 +
jnz loc_102121E  +
mov ecx [ebp-24h] +
call sub_100FC34  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 8  +
***
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1021235  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push 0Eh  +
call ds:SetLastError  +
and dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_102124E +
retn   +
***
jmp loc_10211FA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset dword_1007628 +
xor ecx ecx +
mov edx [ebp+arg_4] +
cmp edx [eax] +
jz loc_1021298  +
add ecx 24h +
add eax 24h +
cmp ecx 3A8h +
jb loc_1021261  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a303  +
push 12Fh  +
push offset aDW7rtmAdmin_15  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+arg_8] +
test [eax+0Ch] ecx +
jnz loc_1021294  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a298  +
push 12Ah  +
jmp loc_1021288  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset dword_1007628 +
xor ecx ecx +
mov edx [ebp+arg_4] +
cmp edx [eax+4] +
jz loc_10212DD  +
add ecx 24h +
add eax 24h +
cmp ecx 3A8h +
jb loc_10212C5  +
jmp loc_1021301  +
mov ecx [ebp+arg_8] +
test [eax+0Ch] ecx +
jnz loc_1021303  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a338  +
push 152h  +
push offset aDW7rtmAdmin_15  +
call sub_100A7B1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp byte ptr [ecx+1030h] 0 +
jz loc_102132E  +
mov eax [ebp+Strings] +
mov [ebp+Strings] eax +
lea eax [ebp+Strings] +
push eax  +
push 1  +
push [ebp+dwEventID]  +
call sub_100B136  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1021366  +
push ebx  +
push 54Fh  +
push offset a831  +
push 33Fh  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
jmp loc_102147D  +
cmp [ebp+arg_4] ebx +
jnz loc_102137F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a832  +
push 340h  +
jmp loc_1021355  +
cmp [ebp+arg_8] ebx +
jnz loc_1021398  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a833  +
push 341h  +
jmp loc_1021355  +
mov eax off_102B00C +
push esi  +
mov esi offset off_102B00C +
push edi  +
mov edi offset dword_100807C +
cmp eax esi +
jz loc_10213C7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10213C7  +
push [ebp+arg_4]  +
push edi  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push ebx  +
push [ebp+arg_4]  +
call sub_10111DE  +
mov ebx eax +
cmp word ptr [ebx] 0 +
jnz loc_1021411  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10213F8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10213F8  +
push edi  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push ebx  +
push 4033C3B0h  +
push 803380ECh  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
jmp loc_1021479  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1021416  +
sub eax edx +
sar eax 1 +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_1011224  +
cmp [ebp+var_4] 0 +
mov esi eax +
ja loc_102144D  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a864  +
push 360h  +
jmp loc_102146F  +
inc esi  +
inc esi  +
movzx edi word ptr [esi] +
cmp di 20h +
jz loc_1021482  +
test di di +
jz loc_1021482  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a870  +
push 366h  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
push [ebp+arg_0]  +
xor eax eax +
push [ebp+arg_8]  +
mov [esi] ax +
push offset dword_1001C58  +
push ebx  +
call sub_100BDB0  +
test eax eax +
jnz loc_10214A1  +
mov [esi] di +
jmp loc_102147B  +
xor eax eax +
inc eax  +
jmp loc_102149C  +
***
mov edx [ecx+4] +
test edx edx +
jnz loc_10214B5  +
xor eax eax +
retn   +
mov eax [ecx+0Ch] +
sub eax edx +
sar eax 2 +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi 80h +
push esi  +
mov edi ecx +
push 0  +
push edi  +
call memset  +
push esi  +
lea eax [edi+80h] +
push 0  +
push eax  +
call memset  +
add esp 18h +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
mov [ebp+var_4] ecx +
cmp [ebp+arg_0] eax +
jnz loc_1021524  +
push eax  +
push 54Fh  +
push offset a511  +
push 1FFh  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
jmp locret_10215EA  +
cmp [ebp+arg_4] eax +
jnz loc_102153D  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a512  +
push 200h  +
jmp loc_1021513  +
cmp [ebp+arg_C] eax +
jnz loc_1021556  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a513  +
push 201h  +
jmp loc_1021513  +
mov eax off_102B00C +
push ebx  +
push esi  +
mov esi offset off_102B00C +
push edi  +
mov ebx 200000h +
mov edi offset dword_100807C +
cmp eax esi +
jz loc_1021587  +
test [eax+1Ch] ebx +
jz loc_1021587  +
push [ebp+arg_4]  +
push edi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
push [ebp+arg_C]  +
mov ecx [ebp+var_4] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021337  +
test eax eax +
jz loc_10215E5  +
cmp [ebp+arg_8] 0 +
jnz loc_10215AB  +
mov eax [ebp+arg_C] +
cmp word ptr [eax] 2 +
jnz loc_10215BC  +
xor eax eax +
inc eax  +
cmp [ebp+arg_8] eax +
jnz loc_10215E7  +
mov ecx [ebp+arg_C] +
cmp word ptr [ecx] 17h +
jz loc_10215E7  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10215D8  +
test [eax+1Ch] ebx +
jz loc_10215D8  +
push edi  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
push 803380ECh  +
call dword ptr [eax+20h]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_1021607  +
push [ebp+arg_4]  +
call sub_1008E30  +
pop ecx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021FE2  +
add esp 10h +
pop edi  +
leave   +
retn   +
***
call __EH_prolog3_GS  +
mov [ebp-11Ch] ecx +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
mov eax [ebp+14h] +
mov [ebp-124h] esi +
mov [ebp-120h] eax +
test edi edi +
jnz loc_102167C  +
push edi  +
push 54Fh  +
push offset a356  +
push 164h  +
jmp loc_10218DD  +
test esi esi +
jnz loc_1021695  +
push edi  +
push 54Fh  +
push offset a357  +
push 165h  +
jmp loc_10218DD  +
test eax eax +
jz loc_10218CD  +
cmp dword ptr [eax] 0 +
jnz loc_10218CD  +
push offset asc_1008118  +
xor ebx ebx +
push esi  +
inc ebx  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov [ebp-118h] eax +
test eax eax +
jnz loc_10216F9  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10216E9  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10216E9  +
push esi  +
push offset dword_100807C  +
push 12h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov eax [edi] +
push 803380ECh  +
mov ecx edi +
call dword ptr [eax+20h]  +
xor ebx ebx +
jmp loc_10216FE  +
xor ecx ecx +
mov [eax] cx +
mov esi 80h +
push esi  +
lea eax [ebp-90h] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
test ebx ebx +
jz loc_102173B  +
mov ecx [ebp-11Ch] +
lea eax [ebp-90h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-124h]  +
push edi  +
call sub_10214F3  +
test eax eax +
jnz loc_102173B  +
xor ebx ebx +
mov eax [ebp-118h] +
test eax eax +
jz loc_102174B  +
push 2Dh  +
pop ecx  +
mov [eax] cx +
push esi  +
lea eax [ebp-110h] +
push 0  +
push eax  +
call memset  +
xor esi esi +
add esp 0Ch +
cmp ebx esi +
jz loc_1021886  +
add dword ptr [ebp-118h] 2 +
mov ecx [ebp-11Ch] +
lea eax [ebp-110h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-118h]  +
push edi  +
call sub_10214F3  +
test eax eax +
jnz loc_1021790  +
xor ebx ebx +
cmp ebx esi +
jz loc_1021886  +
push esi  +
lea eax [ebp-110h] +
push eax  +
lea eax [ebp-90h] +
push eax  +
call sub_100AEE1  +
test eax eax +
jle loc_10217E5  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10217D7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10217D7  +
push offset dword_100807C  +
push 13h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [edi] +
push 803380ECh  +
mov ecx edi +
call dword ptr [eax+20h]  +
xor ebx ebx +
cmp ebx esi +
jz loc_1021886  +
lea eax [ebp-111h] +
push esi  +
push eax  +
push 100h  +
mov [ebp-118h] eax +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-128h] eax +
mov [ebp-4] esi +
cmp eax esi +
jz loc_102181B  +
mov ecx eax +
call sub_10214C3  +
jmp loc_102181D  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-120h] +
mov [ecx] eax +
cmp eax esi +
jnz loc_102185D  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021854  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1021854  +
push offset dword_100807C  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
xor ebx ebx +
cmp ebx esi +
jz loc_1021886  +
mov eax [ebp-120h] +
mov edi [eax] +
push 20h  +
pop ecx  +
lea esi [ebp-90h] +
movs   +
mov edi [eax] +
push 20h  +
sub edi 0FFFFFF80h +
pop ecx  +
lea esi [ebp-110h] +
movs   +
jmp loc_10218C9  +
call ds:GetLastError  +
cmp eax 0Eh +
jz loc_10218C9  +
mov esi [ebp-11Ch] +
add esi 1034h +
cmp dword ptr [esi] 3 +
jnz loc_10218B8  +
push dword ptr [ebp-124h]  +
mov ecx [ebp-11Ch] +
push 72793h  +
call sub_102130C  +
cmp dword ptr [esi] 1 +
jz loc_10218C9  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax+5Ch]  +
xor ebx ebx +
inc ebx  +
mov eax ebx +
jmp loc_10218E9  +
push edi  +
push 54Fh  +
push offset a358  +
push 166h  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
call sub_100A18B  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021610  +
add esp 0Ch +
pop ebp  +
retn 10h  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ecx] +
and dword ptr [ecx] 0 +
test eax eax +
jz loc_102194E  +
push eax  +
push ecx  +
call sub_10215F3  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi+4] +
mov ebx [edi+8] +
jmp loc_102197C  +
mov eax [esi] +
test eax eax +
jz loc_1021979  +
push eax  +
call sub_1008E30  +
pop ecx  +
add esi 4 +
cmp esi ebx +
jnz loc_102196C  +
mov ecx edi +
call sub_1023053  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10219C2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10219C2  +
push offset dword_100807C  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
lea eax [esi+100Ch] +
push eax  +
mov ecx esi +
call sub_1021959  +
lea eax [esi+1020h] +
push eax  +
mov ecx esi +
call sub_1021959  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_100812C +
mov dword ptr [ebp-4] 2 +
call sub_1021996  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+1020h] +
call sub_101FA2D  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+100Ch] +
call sub_101FA2D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003AC8 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10219E8  +
test byte ptr [ebp+8] 1 +
jz loc_1021A58  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea edx [esi+4] +
xor ecx ecx +
mov dword ptr [esi] offset off_1003AC8 +
mov [edx] ecx +
mov [ebp-4] ecx +
lea eax [esi+100Ch] +
mov dword ptr [esi] offset off_100812C +
mov [esi+1008h] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov byte ptr [ebp-4] 1 +
lea eax [esi+1020h] +
mov [esi+101Ch] ecx +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov byte ptr [ebp-4] 2 +
mov al [ebp+8] +
mov [esi+1030h] al +
mov eax [ebp+0Ch] +
push edx  +
mov [esi+1034h] eax +
call ds:InterlockedIncrement  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
mov [ebp-14h] ecx +
xor ebx ebx +
mov eax [ebp+8] +
cmp eax ebx +
jnz loc_1021B20  +
push ebx  +
push 54Fh  +
push offset a162  +
push 0A2h  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
jmp loc_1021DFF  +
cmp [ebp+0Ch] ebx +
jnz loc_1021B37  +
push eax  +
push 54Fh  +
push offset a163  +
push 0A3h  +
jmp loc_1021B11  +
mov esi [ebp+14h] +
cmp esi ebx +
jnz loc_1021B50  +
push eax  +
push 54Fh  +
push offset a164  +
push 0A4h  +
jmp loc_1021B11  +
cmp [ebp+18h] ebx +
jnz loc_1021B67  +
push eax  +
push 54Fh  +
push offset a165  +
push 0A5h  +
jmp loc_1021B11  +
mov eax off_102B00C +
mov edi offset dword_100807C +
cmp eax offset off_102B00C +
jz loc_1021B92  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021B92  +
push dword ptr [ebp+0Ch]  +
push edi  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100A926  +
mov [esi] ebx +
push dword ptr [ebp+18h]  +
mov ecx [ebp-14h] +
call sub_1021959  +
push ebx  +
push dword ptr [ebp+0Ch]  +
call sub_10111DE  +
mov esi eax +
cmp [esi] bx +
jnz loc_1021BDF  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021BD2  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021BD2  +
push edi  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+14h] +
mov [eax] ebx +
xor eax eax +
inc eax  +
jmp loc_1021E01  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1021BE4  +
sub eax edx +
sar eax 1 +
mov [ebp-18h] eax +
lea eax [ebp-18h] +
push eax  +
push esi  +
call sub_1011224  +
cmp [ebp-18h] ebx +
ja loc_1021C1B  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a200  +
push 0C8h  +
jmp loc_1021B11  +
xor ebx ebx +
inc ebx  +
cmp [ebp-18h] ebx +
jnz loc_1021C66  +
push ebx  +
push offset asc_1003674  +
push esi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1021C66  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021C5A  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021C5A  +
push edi  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+14h] +
mov [eax] ebx +
mov eax ebx +
jmp loc_1021E01  +
push offset asc_1003674  +
push esi  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1021CCC  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021C9B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021C9B  +
push edi  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp-14h] +
lea esi [ecx+1034h] +
cmp dword ptr [esi] 3 +
jnz loc_1021CB6  +
push dword ptr [ebp+0Ch]  +
push 72792h  +
call sub_102130C  +
cmp [esi] ebx +
jnz loc_1021C5F  +
mov ecx [ebp+8] +
mov eax [ecx] +
push 803380ECh  +
call dword ptr [eax+20h]  +
jmp loc_1021DFF  +
mov [ebp-1Ch] ebx +
push offset word_1008138  +
push esi  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov edi eax +
test edi edi +
jz loc_1021CE8  +
xor eax eax +
mov [edi] ax +
and dword ptr [ebp+0Ch] 0 +
mov [ebp-4] ebx +
lea eax [ebp+0Ch] +
push eax  +
push dword ptr [ebp+10h]  +
push esi  +
mov esi [ebp+8] +
push esi  +
mov ecx [ebp-14h] +
call sub_1021639  +
test eax eax +
jnz loc_1021D0A  +
and [ebp-1Ch] eax +
test edi edi +
jz loc_1021D14  +
push 2Ch  +
pop eax  +
mov [edi] ax +
mov byte ptr [ebp-4] 2 +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_1021D59  +
and dword ptr [ebp+0Ch] 0 +
mov [ebp-20h] eax +
lea eax [ebp-20h] +
push eax  +
mov ecx [ebp+18h] +
call sub_1022375  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021D59  +
test dword ptr [eax+1Ch] 1000h +
jz loc_1021D59  +
push offset dword_100807C  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov [ebp-4] ebx +
test edi edi +
jnz loc_1021D98  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_102192B  +
mov ecx [ebp+18h] +
call sub_101F5C5  +
test eax eax +
jz loc_1021D81  +
mov eax [ebp+14h] +
mov dword ptr [eax] 2 +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_1021D93  +
mov eax [esi] +
push 803380ECh  +
mov ecx esi +
call dword ptr [eax+20h]  +
mov eax [ebp-1Ch] +
jmp loc_1021E01  +
lea esi [edi+2] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_102192B  +
jmp loc_1021CCF  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021DD3  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1021DD3  +
push offset dword_100807C  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push dword ptr [ebp+18h]  +
mov ecx [ebp-14h] +
call sub_1021959  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1021DF3 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_102192B  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021E3E  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021E3E  +
push offset dword_100807C  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_1021E60  +
push ebx  +
push 54Fh  +
push offset a61  +
push 3Dh  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1021EBD  +
cmp [ebp+arg_4] 0 +
jnz loc_1021E75  +
push ebx  +
push 54Fh  +
push offset a62  +
push 3Eh  +
jmp loc_1021E52  +
push edi  +
push [ebp+arg_4]  +
lea edi [esi+8] +
push 400h  +
push edi  +
call sub_100B5BB  +
test eax eax +
jge loc_1021EA3  +
mov ecx [ebx] +
push eax  +
push offset aStringcchcopy  +
push 4033C362h  +
push ebx  +
call dword ptr [ecx+28h]  +
add esp 10h +
xor eax eax +
jmp loc_1021EBC  +
lea eax [esi+100Ch] +
push eax  +
lea eax [esi+1008h] +
push eax  +
push 0  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1021AE9  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1021EF8  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1021EF8  +
push offset dword_100807C  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_1021F1A  +
push ebx  +
push 54Fh  +
push offset a105  +
push 69h  +
push offset aDW7rtmAdmin_16  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1021F7A  +
cmp [ebp+arg_4] 0 +
jnz loc_1021F2F  +
push ebx  +
push 54Fh  +
push offset a106  +
push 6Ah  +
jmp loc_1021F0C  +
push edi  +
push [ebp+arg_4]  +
lea edi [esi+808h] +
push 400h  +
push edi  +
call sub_100B5BB  +
test eax eax +
jge loc_1021F60  +
mov ecx [ebx] +
push eax  +
push offset aStringcchcopy  +
push 4033C362h  +
push ebx  +
call dword ptr [ecx+28h]  +
add esp 10h +
xor eax eax +
jmp loc_1021F79  +
lea eax [esi+1020h] +
push eax  +
lea eax [esi+101Ch] +
push eax  +
push 1  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1021AE9  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp byte ptr [ecx+8] 0 +
jz loc_1021FA4  +
mov eax [ebp+Strings] +
mov [ebp+Strings] eax +
lea eax [ebp+Strings] +
push eax  +
push 1  +
push [ebp+dwEventID]  +
call sub_100B136  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
sar eax 2 +
mov ecx eax +
shl ecx 2 +
sub esi ecx +
test eax eax +
jle loc_1021FD8  +
push ecx  +
push [ebp+arg_0]  +
push ecx  +
push esi  +
call memmove_s  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jbe loc_1022003  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov ecx [ecx] +
dec [ebp+arg_4]  +
mov [eax] ecx +
add eax 4 +
cmp [ebp+arg_4] 0 +
ja loc_1021FF0  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021FAD  +
add esp 14h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1022066  +
push ebx  +
push 54Fh  +
push offset a396  +
push 18Ch  +
push offset aDW7rtmAdmin_17  +
call sub_100A7B1  +
xor eax eax +
jmp loc_102224D  +
cmp [ebp+arg_4] ebx +
jnz loc_102207F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a397  +
push 18Dh  +
jmp loc_1022055  +
mov eax off_102B00C +
push edi  +
cmp eax offset off_102B00C +
jz loc_10220AE  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10220AE  +
push [ebp+arg_4]  +
mov edi offset dword_100815C +
push ecx  +
push edi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_101013D  +
jmp loc_10220B3  +
mov edi offset dword_100815C +
mov eax [ebp+arg_8] +
push esi  +
mov [eax] ebx +
mov eax [ebp+arg_C] +
push ebx  +
push [ebp+arg_4]  +
mov [eax] ebx +
call sub_10111DE  +
mov esi eax +
cmp [esi] bx +
jnz loc_10220F3  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022221  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1022221  +
push edi  +
push 16h  +
jmp loc_1022216  +
lea eax [ebp+var_8] +
push eax  +
push 400h  +
push esi  +
mov [ebp+var_8] ebx +
call sub_100B6AE  +
cmp eax ebx +
jge loc_1022122  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
push eax  +
push offset aStringcchcopy  +
push 4033C362h  +
push ecx  +
call dword ptr [edx+28h]  +
jmp loc_1022237  +
mov eax [ebp+var_8] +
mov [ebp+cchCount1] eax +
lea eax [ebp+cchCount1] +
push eax  +
push esi  +
call sub_1011224  +
cmp [ebp+cchCount1] ebx +
ja loc_1022158  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a428  +
push 1ACh  +
push offset aDW7rtmAdmin_17  +
call sub_100A7B1  +
jmp loc_102223A  +
xor ecx ecx +
mov [eax+2] cx +
cmp [ebp+cchCount1] 1 +
jnz loc_102219B  +
push 1  +
push offset asc_1003674  +
push esi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jnz loc_102219B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022221  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1022221  +
push edi  +
push 17h  +
jmp loc_1022216  +
mov edi ds:wcschr +
push 2Ah  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_10221D8  +
add eax 2 +
push 2Ah  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10221D8  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022221  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1022221  +
push offset dword_100815C  +
push 18h  +
jmp loc_1022216  +
cmp word ptr [esi] 3Ch +
jnz loc_1022243  +
push 7  +
push offset String2  +
push [ebp+cchCount1]  +
xor edi edi +
push esi  +
inc edi  +
push edi  +
push 7Fh  +
call ds:CompareStringW  +
cmp eax 2 +
jz loc_102223E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022221  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1022221  +
push offset dword_100815C  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push [ebp+arg_4]  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push 4033C44Ch  +
push 8033809Fh  +
push eax  +
call dword ptr [ecx+1Ch]  +
add esp 10h +
xor eax eax +
jmp loc_102224B  +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov eax [ebp+arg_8] +
mov [eax] esi +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10081F0 +
mov dword ptr [ebp-4] 1 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102229D  +
test dword ptr [eax+1Ch] 200000h +
jz loc_102229D  +
push esi  +
push offset dword_100815C  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea edi [esi+10h] +
mov ecx edi +
call sub_1023053  +
mov byte ptr [ebp-4] 0 +
mov ecx edi +
call sub_101FA2D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [esi] offset off_1003AC8 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1022257  +
test byte ptr [ebp+8] 1 +
jz loc_10222E1  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea edi [esi+4] +
xor eax eax +
mov dword ptr [esi] offset off_1003AC8 +
mov [edi] eax +
mov [ebp-4] eax +
mov cl [ebp+8] +
mov dword ptr [esi] offset off_10081F0 +
mov [esi+8] cl +
mov [esi+0Ch] eax +
mov [esi+14h] eax +
mov [esi+18h] eax +
mov [esi+1Ch] eax +
mov byte ptr [ebp-4] 1 +
mov eax [ebp+0Ch] +
mov [esi+820h] eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102235B  +
test dword ptr [eax+1Ch] 200000h +
jz loc_102235B  +
push esi  +
push offset dword_100815C  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
call ds:InterlockedIncrement  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
call sub_101F5C5  +
mov ecx esi +
mov edi eax +
call sub_10214AB  +
push [ebp+arg_0]  +
cmp edi eax +
mov eax [esi+8] +
mov ecx esi +
jnb loc_10223A5  +
push 1  +
push eax  +
call sub_1023071  +
mov [esi+8] eax +
jmp loc_10223AF  +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1020DE6  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10226C2  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10226C2  +
push offset dword_100815C  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
mov ecx [ebp+14h] +
call sub_1023053  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10223EA +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022711  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1022711  +
push esi  +
push offset dword_100815C  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [esi+10h] +
push eax  +
lea eax [esi+0Ch] +
push eax  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call sub_10223BA  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_102275F  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a399  +
push 18Fh  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1022835  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_102277A  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a400  +
push 190h  +
jmp loc_102274E  +
push edi  +
mov edi [ebp+arg_C] +
test edi edi +
jnz loc_1022796  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a401  +
push 191h  +
jmp loc_10227AE  +
cmp [ebp+arg_10] 0 +
jnz loc_10227BC  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a402  +
push 192h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1022834  +
push esi  +
push [ebp+arg_10]  +
mov esi [ebp+arg_0] +
lea edx [ebp+arg_0] +
push edx  +
push dword ptr [eax]  +
push esi  +
call sub_1020487  +
test eax eax +
jnz loc_102281F  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022803  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1022803  +
push edi  +
push offset aLdlCkD  +
push 19h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test esi esi +
jz loc_102281B  +
mov eax [esi] +
push edi  +
push offset aCwsmangrouppol  +
push 4033C360h  +
push esi  +
call dword ptr [eax+28h]  +
add esp 10h +
xor eax eax +
jmp loc_1022833  +
push 0Bh  +
pop eax  +
mov [edi] ax +
mov eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
mov [edi+8] ax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_102286D  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a453  +
push 1C5h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
xor eax eax +
jmp loc_102293E  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_1022888  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a454  +
push 1C6h  +
jmp loc_102285C  +
push edi  +
mov edi [ebp+arg_C] +
test edi edi +
jnz loc_10228A4  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a455  +
push 1C7h  +
jmp loc_10228BC  +
cmp [ebp+arg_10] 0 +
jnz loc_10228CA  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a456  +
push 1C8h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
xor eax eax +
jmp loc_102293D  +
push esi  +
push [ebp+arg_10]  +
mov esi [ebp+arg_0] +
lea edx [ebp+arg_0] +
push edx  +
push dword ptr [eax]  +
push esi  +
call sub_10201FB  +
test eax eax +
jnz loc_102292D  +
call ds:GetLastError  +
mov edi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1022911  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1022911  +
push edi  +
push offset aLdlCkD  +
push 1Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test esi esi +
jz loc_1022929  +
mov eax [esi] +
push edi  +
push offset aCwsmangroupp_0  +
push 4033C360h  +
push esi  +
call dword ptr [eax+28h]  +
add esp 10h +
xor eax eax +
jmp loc_102293C  +
push 3  +
pop eax  +
mov [edi] ax +
mov eax [ebp+arg_0] +
mov [edi+8] eax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
jmp loc_102295B  +
mov ecx [ebp+arg_8] +
mov ecx [ecx] +
mov [eax] ecx +
add eax 4 +
cmp eax [ebp+arg_4] +
jnz loc_1022951  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp [ebp+arg_0] eax +
jz loc_1022987  +
sub [ebp+arg_8] 4 +
mov edx [ebp+arg_8] +
sub eax 4 +
mov ecx [eax] +
mov [edx] ecx +
cmp eax [ebp+arg_0] +
jnz loc_1022974  +
mov eax [ebp+arg_8] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
sar eax 2 +
mov ecx eax +
shl ecx 2 +
push esi  +
lea esi [ecx+edx] +
test eax eax +
jbe loc_10229BD  +
push ecx  +
push [ebp+arg_0]  +
push ecx  +
push edx  +
call memmove_s  +
add esp 10h +
mov eax esi +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp word ptr [eax] 1 +
mov ecx [ebp+arg_4] +
jnz loc_10229E4  +
cmp word ptr [ecx] 1 +
jnz loc_10229E4  +
mov al 1 +
jmp loc_10229F8  +
push 0  +
push 400h  +
push ecx  +
push eax  +
call OLEAUT32_176  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_10229C9  +
xor ecx ecx +
test al al +
setz cl  +
mov al cl +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov [ebp-10h] ecx +
mov dword ptr [ecx] offset off_1008384 +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov dword ptr [ecx] offset off_1003AC8 +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1022A23  +
test byte ptr [ebp+8] 1 +
jz loc_1022A67  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov eax ecx +
mov [ebp-10h] eax +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_1003AC8 +
and dword ptr [ebp-4] 0 +
mov dword ptr [eax] offset off_1008384 +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov [ebp+var_10] ebx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov edi offset aLdlCkD +
cmp eax esi +
jz loc_1022AE1  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1022AE1  +
push edi  +
push 1Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push 1  +
push 1  +
add ebx 8 +
push ebx  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_1022B41  +
mov eax off_102B00C +
cmp eax esi +
jz loc_1022B13  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1022B13  +
push edi  +
push 1Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+arg_0] +
mov esi 54Fh +
test eax eax +
jz loc_1022B33  +
mov ecx [eax] +
push esi  +
push offset aCwsmangroupp_1  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1022C5A  +
mov ecx [ebp+arg_C] +
call sub_101F5C5  +
mov ecx [ebp+arg_10] +
mov [ebp+var_8] eax +
call sub_101F5C5  +
xor edi edi +
cmp [ebp+var_8] edi +
jz loc_1022B7E  +
cmp eax [ebp+var_8] +
jz loc_1022B7E  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a624  +
push 270h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
jmp loc_1022B3A  +
mov esi ds:dword_10079D0 +
cmp eax esi +
jz loc_1022B9C  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a625  +
push 271h  +
jmp loc_1022B72  +
mov ebx [ebp+arg_4] +
mov ecx ebx +
call sub_101F5C5  +
mov ecx [ebp+arg_8] +
mov [ebp+var_4] eax +
call sub_101F5C5  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] edi +
jz loc_1022BD2  +
cmp eax [ebp+var_4] +
jz loc_1022BD2  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a628  +
push 274h  +
jmp loc_1022B72  +
cmp eax esi +
jz loc_1022BEA  +
push [ebp+arg_0]  +
push 54Fh  +
push offset a629  +
push 275h  +
jmp loc_1022B72  +
mov byte ptr [ebp+arg_4+3] 0 +
test eax eax +
jbe loc_1022C57  +
cmp [ebp+var_4] 0 +
jz loc_1022C31  +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
mov ecx [ebx+4] +
mov esi edi +
shl esi 2 +
add eax esi +
push dword ptr [eax]  +
add ecx esi +
push dword ptr [ecx]  +
call sub_1022A01  +
test al al +
jnz loc_1022C31  +
cmp [ebp+var_8] 0 +
jz loc_1022C31  +
mov eax [ebp+arg_C] +
mov eax [eax+4] +
mov ecx [ebp+arg_10] +
mov ecx [ecx+4] +
mov eax [esi+eax] +
cmp eax [esi+ecx] +
jz loc_1022C35  +
mov byte ptr [ebp+arg_4+3] 1 +
inc edi  +
cmp edi [ebp+var_C] +
jb loc_1022BF2  +
cmp byte ptr [ebp+arg_4+3] 0 +
jz loc_1022C57  +
push [ebp+var_10]  +
mov ecx [ebp+arg_14] +
push [ebp+arg_0]  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
test eax eax +
jz loc_1022B3A  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
push 0Ch  +
mov eax offset byte_1026E01 +
call __EH_prolog3  +
mov esi ecx +
mov eax [ebp+14h] +
xor edi edi +
cmp eax edi +
jz loc_1022E04  +
cmp [eax] edi +
jnz loc_1022E04  +
mov eax [ebp+10h] +
cmp eax edi +
jz loc_1022CAB  +
cmp [eax] edi +
jz loc_1022CAB  +
push dword ptr [ebp+8]  +
push 54Fh  +
push (offset dword_1008060+0Ch)  +
push 2BCh  +
jmp loc_1022E16  +
lea eax [esi+4Ch] +
push eax  +
lea ecx [ebp-18h] +
call sub_100E77B  +
mov [ebp-4] edi +
lea ecx [esi+0Ch] +
call sub_101F5C5  +
lea ecx [esi+1Ch] +
mov ebx eax +
call sub_101F5C5  +
lea ecx [esi+3Ch] +
mov [ebp-10h] eax +
call sub_101F5C5  +
cmp ebx edi +
jz loc_1022D16  +
cmp [ebp-10h] ebx +
jz loc_1022D16  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a709  +
push 2C5h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-14h] edi +
jnz loc_1022E20  +
mov ecx [ebp-18h] +
call sub_100FC34  +
jmp loc_1022E20  +
mov ecx ds:dword_10079D0 +
cmp [ebp-10h] ecx +
jz loc_1022D35  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a710  +
push 2C6h  +
jmp loc_1022CF2  +
***
cmp eax ecx +
jz loc_1022D4D  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a711  +
push 2C7h  +
jmp loc_1022CF2  +
***
xor edx edx +
cmp [ebp-10h] edi +
jbe loc_1022DE8  +
mov eax offset dword_1007628 +
mov ecx [ebp+0Ch] +
cmp ecx [eax] +
jz loc_1022D6F  +
inc edx  +
add eax 24h +
cmp edx [ebp-10h] +
jb loc_1022D5D  +
jmp loc_1022DE8  +
cmp ebx edi +
jz loc_1022D92  +
mov eax [esi+10h] +
cmp [eax+edx*4] edi +
jnz loc_1022D92  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a719  +
push 2CFh  +
jmp loc_1022CF2  +
***
mov ecx [esi+20h] +
mov eax edx +
shl eax 2 +
cmp [eax+ecx] edi +
jnz loc_1022DB6  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a720  +
push 2D0h  +
jmp loc_1022CF2  +
***
cmp [ebp+10h] edi +
jz loc_1022DCE  +
cmp ebx edi +
jnz loc_1022DC3  +
xor ecx ecx +
jmp loc_1022DC9  +
mov ecx [esi+10h] +
mov ecx [eax+ecx] +
mov ebx [ebp+10h] +
mov [ebx] ecx +
mov ecx [esi+20h] +
mov ecx [eax+ecx] +
mov ebx [ebp+14h] +
mov [ebx] ecx +
mov ecx [ebp+18h] +
cmp ecx edi +
jz loc_1022DE8  +
mov esi [esi+40h] +
mov eax [eax+esi] +
mov [ecx] eax +
cmp edx [ebp-10h] +
sbb esi esi +
neg esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-14h] edi +
jnz loc_1022E00  +
mov ecx [ebp-18h] +
call sub_100FC34  +
mov eax esi +
jmp loc_1022E22  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a697  +
push 2B9h  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
lea eax [ebp+arg_3] +
push eax  +
mov eax [ebp+8] +
shl eax 2 +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jnz loc_1022E62  +
lea edi [ebp+arg_3] +
stos   +
mov al byte ptr [ebp+arg_3] +
mov byte ptr [ebp+arg_3] al +
push offset dword_1027BB0  +
lea eax [ebp+arg_3] +
push eax  +
call _CxxThrowException  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022967  +
add esp 14h +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022991  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
jmp loc_1022EDD  +
mov ecx [eax] +
mov edx [ebp+arg_C] +
mov [edx] ecx +
add [ebp+arg_C] 4 +
add eax 4 +
cmp eax [ebp+arg_8] +
jnz loc_1022ECF  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
mov [eax] ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1022F04  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022E97  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_0]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022EC5  +
mov eax [ebp+arg_0] +
add esp 18h +
pop edi  +
leave   +
retn   +
***
call __EH_prolog3_catch  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
cmp eax [ebp+0Ch] +
jz loc_1022F87  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_1022EF1  +
add dword ptr [ebp+10h] 4 +
add dword ptr [ebp+8] 4 +
jmp loc_1022F6C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+10h] +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_8] +
jz loc_1022FD1  +
push ecx  +
push dword ptr [esi+8]  +
lea eax [ebp+var_4] +
push [ebp+arg_8]  +
push eax  +
call sub_1022F2A  +
mov eax [eax] +
mov ecx [ebp+arg_4] +
add esp 10h +
mov [esi+8] eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022F5C  +
pop edi  +
leave   +
retn 10h  +
***
call __EH_prolog3_catch  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_1023038  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1022EF1  +
dec dword ptr [ebp+0Ch]  +
add dword ptr [ebp+8] 4 +
jmp loc_102301E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call __EH_epilog3  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx+8] +
mov edx [ecx+4] +
push eax  +
push edx  +
lea eax [ebp+var_4] +
push eax  +
call sub_1022FA5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push ecx  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_102190C  +
lea eax [edi+esi*4] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022FE0  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102300E  +
pop edi  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov ecx [ebp+0Ch] +
xor ebx ebx +
cmp ecx ebx +
jnz loc_1023118  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a506  +
push 1FAh  +
push offset aDW7rtmAdmin_18  +
call sub_100A7B1  +
jmp loc_1023320  +
mov edi [ebp+10h] +
cmp edi ebx +
jnz loc_1023133  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a507  +
push 1FBh  +
jmp loc_1023109  +
cmp [ebp+14h] ebx +
jnz loc_102314C  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a508  +
push 1FCh  +
jmp loc_1023109  +
cmp [ebp+18h] ebx +
jnz loc_1023165  +
push dword ptr [ebp+8]  +
push 54Fh  +
push offset a509  +
push 1FDh  +
jmp loc_1023109  +
push dword ptr [ebp+18h]  +
mov esi [ebp+8] +
lea eax [ebp-10h] +
push eax  +
push ebx  +
push ebx  +
push dword ptr [edi]  +
mov [ebp-10h] ebx +
push esi  +
call sub_10209E4  +
test eax eax +
jz loc_10231D0  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10231A7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10231A7  +
push offset aLdlCkD  +
push 1Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi 54Fh +
cmp esi ebx +
jz loc_10231C4  +
mov eax [esi] +
push edi  +
push offset aCwsmangroupp_2  +
push 4033C360h  +
push esi  +
call dword ptr [eax+28h]  +
add esp 10h +
push edi  +
call ds:SetLastError  +
jmp loc_1023320  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 7Ah +
jz loc_102322A  +
call ebx  +
mov edi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1023209  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1023209  +
push edi  +
push offset aLdlCkD  +
push 1Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test esi esi +
jz loc_1023320  +
mov eax [esi] +
push edi  +
push offset aCwsmangroupp_2  +
push 4033C360h  +
push esi  +
call dword ptr [eax+28h]  +
add esp 10h +
jmp loc_1023320  +
mov eax [ebp-10h] +
push 2  +
pop edx  +
xor ecx ecx +
mul  edx +
seto cl  +
push 0  +
neg ecx  +
or eax ecx +
lea ecx [ebp+0Bh] +
push ecx  +
push eax  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
push eax  +
lea ecx [ebp+10h] +
call sub_100C374  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+10h] 0 +
jz loc_1023301  +
push dword ptr [ebp+18h]  +
mov ecx [ebp+0Ch] +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-10h]  +
push dword ptr [edi]  +
push esi  +
call sub_10209E4  +
cmp eax 1 +
jz loc_10232C1  +
call ebx  +
mov edi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10232A7  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10232A7  +
push edi  +
push offset aLdlCkD  +
push 1Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
test esi esi +
jz loc_1023314  +
mov eax [esi] +
push edi  +
push offset aCwsmangroupp_2  +
push 4033C360h  +
push esi  +
call dword ptr [eax+28h]  +
add esp 10h +
jmp loc_1023314  +
mov edi [ebp+14h] +
push 8  +
pop eax  +
mov [edi] ax +
lea eax [ebp+0Bh] +
push eax  +
push 0  +
push dword ptr [ebp+10h]  +
call ?AllocBstr@WSManMemory@@SGPAGPBGHABVCallSite@TestSystem@@@Z  +
mov [edi+8] eax +
test eax eax +
jz loc_1023301  +
cmp dword ptr [ebp-10h] 1 +
jbe loc_10232F0  +
push eax  +
call ds:SysStringLen  +
test eax eax +
jz loc_1023301  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_100C51B  +
xor eax eax +
inc eax  +
jmp loc_1023322  +
test esi esi +
jz loc_102330C  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_100C51B  +
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov edi [ebp+arg_0] +
mov esi [edi+4] +
mov ebx [edi+8] +
mov [ebp+dwErrCode] eax +
jmp loc_1023368  +
mov eax [esi] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_102335C  +
push eax  +
call ds:VariantClear  +
push [ebp+arg_0]  +
call sub_1008E30  +
pop ecx  +
add esi 4 +
cmp esi ebx +
jnz loc_102334C  +
mov ecx edi +
call sub_1023053  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push ecx  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_10230B4  +
lea eax [edi+esi*4] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call ds:GetLastError  +
mov ecx [ebp+arg_0] +
mov esi eax +
call sub_101F5C5  +
test eax eax +
jz loc_10233D3  +
mov ecx [ebp+arg_0] +
call sub_1023053  +
push esi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
push 44h  +
mov eax offset byte_1026E91 +
call __EH_prolog3  +
push offset aVectorTTooLong  +
lea ecx [ebp-28h] +
call sub_100DDD1  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_100DD0B  +
push offset dword_1027E0C  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push esi  +
mov esi ecx +
lea eax [esi+0Ch] +
push eax  +
call sub_102332F  +
lea eax [esi+1Ch] +
push eax  +
mov ecx esi +
call sub_102332F  +
lea eax [esi+2Ch] +
push eax  +
mov ecx esi +
call sub_10233B1  +
lea eax [esi+3Ch] +
push eax  +
mov ecx esi +
call sub_10233B1  +
and dword ptr [esi+68h] 0 +
pop esi  +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov eax [ebp+10h] +
mov eax [eax] +
mov [ebp-14h] eax +
call sub_10214AB  +
mov ebx eax +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_1023600  +
mov ecx esi +
call sub_101F5C5  +
mov ecx 3FFFFFFFh +
sub ecx eax +
cmp ecx edi +
jnb loc_102349D  +
call loc_10233E7  +
mov ecx esi +
call sub_101F5C5  +
add eax edi +
cmp ebx eax +
jnb loc_1023565  +
mov eax ebx +
shr eax 1 +
mov ecx 3FFFFFFFh +
sub ecx eax +
cmp ecx ebx +
jnb loc_10234C1  +
xor ebx ebx +
jmp loc_10234C3  +
add ebx eax +
mov ecx esi +
call sub_101F5C5  +
add eax edi +
cmp ebx eax +
jnb loc_10234DB  +
mov ecx esi +
call sub_101F5C5  +
mov ebx eax +
add ebx edi +
push 0  +
push ebx  +
mov ecx esi +
call sub_1022E2F  +
mov [ebp+0Ch] eax +
and dword ptr [ebp-4] 0 +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_1022F0D  +
mov [ebp-18h] eax +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
push eax  +
mov ecx esi +
call sub_1023071  +
mov [ebp-18h] eax +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_1022F0D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_101F5C5  +
add edi eax +
mov eax [esi+4] +
test eax eax +
jz loc_1023539  +
lea ecx [ebp+13h] +
push ecx  +
push eax  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
mov eax [ebp+0Ch] +
lea ecx [eax+ebx*4] +
mov [esi+0Ch] ecx +
lea ecx [eax+edi*4] +
mov [esi+8] ecx +
mov [esi+4] eax +
jmp loc_1023600  +
lea eax [ebp+13h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
push 0  +
push 0  +
call _CxxThrowException  +
mov ebx [esi+8] +
mov eax ebx +
mov ecx [ebp+8] +
sub eax ecx +
sar eax 2 +
push esi  +
cmp eax edi +
jnb loc_10235CB  +
mov eax edi +
shl eax 2 +
mov [ebp+10h] eax +
add eax ecx +
push eax  +
push ebx  +
push ecx  +
call sub_1022E97  +
mov dword ptr [ebp-4] 2 +
mov eax [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx eax +
sub ecx [ebp+8] +
sar ecx 2 +
sub edi ecx +
push edi  +
push eax  +
mov ecx esi +
call sub_1023071  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+10h] +
add [esi+8] eax +
mov esi [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
sub esi eax +
push esi  +
push dword ptr [ebp+8]  +
call sub_1022947  +
add esp 0Ch +
jmp loc_1023600  +
shl edi 2 +
mov [ebp+10h] ebx +
sub [ebp+10h] edi +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1022E97  +
mov [esi+8] eax +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_102200A  +
lea eax [ebp-14h] +
push eax  +
mov eax [ebp+8] +
add edi eax +
push edi  +
push eax  +
call sub_1022947  +
add esp 18h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
mov esi ecx +
mov eax [ebp+10h] +
mov eax [eax] +
mov [ebp-14h] eax +
call sub_10214AB  +
mov ebx eax +
mov edi [ebp+0Ch] +
test edi edi +
jz loc_10237BD  +
mov ecx esi +
call sub_101F5C5  +
mov ecx 3FFFFFFFh +
sub ecx eax +
cmp ecx edi +
jnb loc_102364C  +
call loc_10233E7  +
mov ecx esi +
call sub_101F5C5  +
add eax edi +
cmp ebx eax +
jnb loc_1023722  +
mov eax ebx +
shr eax 1 +
mov ecx 3FFFFFFFh +
sub ecx eax +
cmp ecx ebx +
jnb loc_1023670  +
xor ebx ebx +
jmp loc_1023672  +
add ebx eax +
mov ecx esi +
call sub_101F5C5  +
add eax edi +
cmp ebx eax +
jnb loc_102368A  +
mov ecx esi +
call sub_101F5C5  +
mov ebx eax +
add ebx edi +
push 0  +
push ebx  +
mov ecx esi +
call sub_1022E2F  +
mov [ebp+0Ch] eax +
and dword ptr [ebp-4] 0 +
push eax  +
push dword ptr [ebp+8]  +
push dword ptr [esi+4]  +
mov ecx esi +
call sub_1023097  +
mov [ebp-18h] eax +
lea ecx [ebp-14h] +
push ecx  +
push edi  +
push eax  +
mov ecx esi +
call sub_102338B  +
mov [ebp-18h] eax +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_1023097  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_101F5C5  +
add edi eax +
mov eax [esi+4] +
test eax eax +
jz loc_10236F6  +
mov ecx [esi+8] +
jmp loc_10236E6  +
add eax 4 +
cmp eax ecx +
jnz loc_10236E3  +
lea eax [ebp+13h] +
push eax  +
push dword ptr [esi+4]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
mov eax [ebp+0Ch] +
lea ecx [eax+ebx*4] +
mov [esi+0Ch] ecx +
lea ecx [eax+edi*4] +
mov [esi+8] ecx +
mov [esi+4] eax +
jmp loc_10237BD  +
lea eax [ebp+13h] +
push eax  +
push dword ptr [ebp+0Ch]  +
call ?Free@WSManMemory@@SGXPAXABVCallSite@TestSystem@@@Z  +
push 0  +
push 0  +
call _CxxThrowException  +
mov ebx [esi+8] +
mov eax ebx +
mov ecx [ebp+8] +
sub eax ecx +
sar eax 2 +
push esi  +
cmp eax edi +
jnb loc_1023788  +
mov eax edi +
shl eax 2 +
mov [ebp+10h] eax +
add eax ecx +
push eax  +
push ebx  +
push ecx  +
call sub_1022FE0  +
mov dword ptr [ebp-4] 2 +
mov eax [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx eax +
sub ecx [ebp+8] +
sar ecx 2 +
sub edi ecx +
push edi  +
push eax  +
mov ecx esi +
call sub_102338B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+10h] +
add [esi+8] eax +
mov esi [esi+8] +
lea ecx [ebp-14h] +
push ecx  +
sub esi eax +
push esi  +
push dword ptr [ebp+8]  +
call sub_1022947  +
add esp 0Ch +
jmp loc_10237BD  +
shl edi 2 +
mov [ebp+10h] ebx +
sub [ebp+10h] edi +
push ebx  +
push ebx  +
push dword ptr [ebp+10h]  +
call sub_1022FE0  +
mov [esi+8] eax +
push ebx  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
call sub_1022E6B  +
lea eax [ebp-14h] +
push eax  +
mov eax [ebp+8] +
add edi eax +
push edi  +
push eax  +
call sub_1022947  +
add esp 18h +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov ebx 200000h +
mov edi offset aLdlCkD +
cmp eax esi +
jz loc_1023802  +
test [eax+1Ch] ebx +
jz loc_1023802  +
push ecx  +
push edi  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_4] +
push 1  +
push 0  +
add eax 8 +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_102383B  +
mov eax off_102B00C +
cmp eax esi +
jz loc_1023833  +
test [eax+1Ch] ebx +
jz loc_1023833  +
push edi  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+var_4] +
call sub_1023424  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
call sub_101F5C5  +
mov edi [ebp+arg_0] +
mov ecx esi +
cmp eax edi +
jnb loc_102387A  +
push ebx  +
mov ebx [esi+8] +
lea eax [ebp+arg_4] +
push eax  +
call sub_101F5C5  +
sub edi eax +
push edi  +
push ebx  +
mov ecx esi +
call sub_102345E  +
pop ebx  +
jmp loc_1023899  +
call sub_101F5C5  +
cmp edi eax +
jnb loc_1023899  +
mov eax [esi+8] +
mov ecx [esi+4] +
push eax  +
lea ecx [ecx+edi*4] +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx esi +
call sub_1022FA5  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
call sub_101F5C5  +
mov edi [ebp+arg_0] +
mov ecx esi +
cmp eax edi +
jnb loc_10238D6  +
push ebx  +
mov ebx [esi+8] +
lea eax [ebp+arg_4] +
push eax  +
call sub_101F5C5  +
sub edi eax +
push edi  +
push ebx  +
mov ecx esi +
call sub_102360D  +
pop ebx  +
jmp loc_10238F5  +
call sub_101F5C5  +
cmp edi eax +
jnb loc_10238F5  +
mov eax [esi+8] +
mov ecx [esi+4] +
push eax  +
lea ecx [ecx+edi*4] +
push ecx  +
lea eax [ebp+arg_0] +
push eax  +
mov ecx esi +
call sub_1022FA5  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_1022A73  +
xor edi edi +
mov [ebp-4] edi +
mov dword ptr [esi] offset off_1008470 +
mov [esi+8] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov byte ptr [ebp-4] 1 +
mov [esi+20h] edi +
mov [esi+24h] edi +
mov [esi+28h] edi +
mov byte ptr [ebp-4] 2 +
mov [esi+30h] edi +
mov [esi+34h] edi +
mov [esi+38h] edi +
mov byte ptr [ebp-4] 3 +
mov [esi+40h] edi +
mov [esi+44h] edi +
mov [esi+48h] edi +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+4Ch] +
call sub_100FB92  +
mov byte ptr [ebp-4] 5 +
mov [esi+68h] edi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102398F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_102398F  +
push esi  +
push offset aLdlCkD  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedIncrement  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1008470 +
mov dword ptr [ebp-4] 5 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10239F0  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10239F0  +
push esi  +
push offset aLdlCkD  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov ecx esi +
call sub_10237CA  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+4Ch] +
call sub_100FC8B  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+3Ch] +
call sub_101FA2D  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+2Ch] +
call sub_101FA2D  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+1Ch] +
call sub_101FA2D  +
mov byte ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
call sub_101FA2D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_1022A23  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3_catch  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1023C5C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1023C5C  +
push offset aLdlCkD  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_1023C68  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp-18h] +
call sub_102332F  +
push 0Eh  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1023A80 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [ecx+4] +
push esi  +
mov esi [eax+4] +
mov [ecx+4] esi +
mov [eax+4] edx +
mov esi [eax+8] +
mov edx [ecx+8] +
mov [ecx+8] esi +
mov [eax+8] edx +
mov esi [eax+0Ch] +
mov edx [ecx+0Ch] +
mov [ecx+0Ch] esi +
mov [eax+0Ch] edx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10239AA  +
test byte ptr [ebp+8] 1 +
jz loc_1023CDB  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
lea eax [esi+8] +
cmp dword ptr [eax] 0 +
push edi  +
mov [ebp+Target] eax +
mov ebx 54Fh +
mov edi offset aDW7rtmAdmin_18 +
jz loc_1023D18  +
push [ebp+arg_0]  +
push ebx  +
push offset a48  +
push 30h  +
push edi  +
call sub_100A7B1  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1023D40  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1023D40  +
push esi  +
push offset aLdlCkD  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
cmp [ebp+arg_4] 0 +
jnz loc_1023D5B  +
push [ebp+arg_0]  +
push ebx  +
push offset a52  +
push 34h  +
push edi  +
call sub_100A7B1  +
xor eax eax +
jmp loc_1023DBF  +
lea ecx [esi+4Ch] +
call sub_100FC14  +
test eax eax +
jnz loc_1023D71  +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
jmp loc_1023D57  +
mov eax [ebp+arg_4] +
lea ecx [esi+3Ch] +
push ecx  +
mov [esi+68h] eax +
lea eax [esi+1Ch] +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
mov [ebp+arg_4] eax +
call sub_1023A49  +
test eax eax +
jz loc_1023D57  +
mov ecx [ebp+arg_4] +
call sub_101F5C5  +
cmp eax ds:dword_10079D0 +
jz loc_1023DB1  +
push [ebp+arg_0]  +
push ebx  +
push offset a68  +
push 44h  +
push edi  +
call sub_100A7B1  +
push 1  +
push [ebp+Target]  +
call ds:InterlockedExchange  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov edi ecx +
mov eax off_102B00C +
mov ebx offset off_102B00C +
cmp eax ebx +
jz loc_1023E03  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1023E03  +
push edi  +
push offset aLdlCkD  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 1  +
push 1  +
lea eax [edi+8] +
push eax  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_1023E67  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1023E39  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1023E39  +
push offset aLdlCkD  +
push 0Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax [ebp+8] +
mov esi 54Fh +
test eax eax +
jz loc_1023E59  +
mov ecx [eax] +
push esi  +
push offset aCwsmangroupp_3  +
push 4033C360h  +
push eax  +
call dword ptr [ecx+28h]  +
add esp 10h +
push esi  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1024009  +
lea eax [edi+4Ch] +
push eax  +
lea ecx [ebp-18h] +
call sub_100E77B  +
and dword ptr [ebp-4] 0 +
lea esi [edi+0Ch] +
push esi  +
mov ecx edi +
call sub_102332F  +
lea eax [edi+1Ch] +
push eax  +
mov ecx esi +
call sub_1023C8A  +
mov esi off_102B00C +
cmp esi ebx +
jz loc_1023EBB  +
test dword ptr [esi+1Ch] 200000h +
jz loc_1023EBB  +
lea ecx [edi+0Ch] +
call sub_101F5C5  +
push eax  +
push offset aLdlCkD  +
push 0Fh  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_1019984  +
lea esi [edi+2Ch] +
push esi  +
mov ecx edi +
call sub_10233B1  +
lea eax [edi+3Ch] +
push eax  +
mov ecx esi +
call sub_1023C8A  +
mov esi off_102B00C +
cmp esi ebx +
jz loc_1023F05  +
test dword ptr [esi+1Ch] 200000h +
jz loc_1023F05  +
lea ecx [edi+2Ch] +
call sub_101F5C5  +
push eax  +
push offset aLdlCkD  +
push 10h  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_1019984  +
mov esi off_102B00C +
and dword ptr [ebp-10h] 0 +
mov eax [ebp-10h] +
inc dword ptr [ebp-10h]  +
cmp eax 3 +
jge loc_1023F61  +
lea eax [edi+3Ch] +
push eax  +
lea eax [edi+1Ch] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_1023A49  +
test eax eax +
jnz loc_1023F9B  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_1023F51  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1023F51  +
push dword ptr [ebp-10h]  +
push offset aLdlCkD  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 32h  +
call ds:Sleep  +
mov esi off_102B00C +
jmp loc_1023F09  +
cmp esi ebx +
jz loc_1023F80  +
test dword ptr [esi+1Ch] 400000h +
jz loc_1023F80  +
push offset aLdlCkD  +
push 12h  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_100904C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-14h] 0 +
jnz loc_1023E60  +
mov ecx [ebp-18h] +
call sub_100FC34  +
jmp loc_1023E60  +
mov esi off_102B00C +
cmp esi ebx +
jz loc_1023FC9  +
test dword ptr [esi+1Ch] 200000h +
jz loc_1023FC9  +
lea ecx [edi+1Ch] +
call sub_101F5C5  +
push eax  +
push offset aLdlCkD  +
push 13h  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
call sub_1019984  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-14h] 0 +
jnz loc_1023FDB  +
mov ecx [ebp-18h] +
call sub_100FC34  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1024006  +
push dword ptr [ebp+0Ch]  +
lea eax [edi+3Ch] +
push eax  +
lea eax [edi+2Ch] +
push eax  +
lea eax [edi+1Ch] +
push eax  +
lea eax [edi+0Ch] +
push eax  +
push dword ptr [ebp+8]  +
mov ecx edi +
call sub_1022AA7  +
test eax eax +
jz loc_1023E60  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call ds:SysAllocString  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:SysFreeString  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_102407B  +
xor eax eax +
jmp loc_102409A  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1024089  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi] +
test eax eax +
jz loc_1024095  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
push edi  +
mov [esi] ebx +
mov [esi+4] ebx +
mov [esi+8] ebx +
lea edi [esi+0Ch] +
mov [edi] ebx +
mov [esi+10h] ebx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10240FB  +
test dword ptr [eax+1Ch] 200000h +
jz loc_10240FB  +
push esi  +
push offset dword_10084E0  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push ebx  +
push ebx  +
call ds:CoInitializeEx  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_102412B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1024175  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1024175  +
push [ebp+var_4]  +
push offset dword_10084E0  +
push 0Bh  +
jmp loc_102416A  +
push edi  +
xor eax eax +
push offset stru_1008530  +
inc eax  +
push eax  +
push ebx  +
push offset stru_1008520  +
mov [esi+8] eax +
call ds:CoCreateInstance  +
cmp eax ebx +
mov [ebp+var_4] eax +
jge loc_1024182  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1024175  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1024175  +
push [ebp+var_4]  +
push offset dword_10084E0  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_4] +
mov [esi+4] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
push offset a@firewallapi_d  +
lea ecx [esi+10h] +
call sub_1024035  +
mov dword ptr [esi] 1 +
jmp loc_102417B  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov [ebp-10h] ebx +
mov eax [ecx+0Ch] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 2 +
call dword ptr [ecx+48h]  +
mov esi eax +
cmp esi ebx +
jge loc_102422F  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10241F5  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10241F5  +
push esi  +
push offset dword_10084E0  +
push 28h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_1024206  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 0 +
cmp eax ebx +
jz loc_1024217  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax ebx +
jz loc_1024228  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_102463B  +
mov [ebp-1Ch] ebx +
push dword ptr [ebp+8]  +
lea ecx [ebp-28h] +
call sub_1024016  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push dword ptr [ebp-28h]  +
mov byte ptr [ebp-4] 4 +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
cmp esi ebx +
jge loc_10242A2  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102427F  +
test dword ptr [eax+1Ch] 400000h +
jz loc_102427F  +
push esi  +
push offset dword_10084E0  +
push 29h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-28h]  +
call ds:SysFreeString  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
cmp eax ebx +
jz loc_10241F5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
jmp loc_10241F5  +
mov [ebp-24h] ebx +
mov eax [ebp-1Ch] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 5 +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_1024343  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10242E8  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10242E8  +
push edi  +
push offset dword_10084E0  +
push 2Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-24h]  +
mov esi ds:SysFreeString +
call esi  +
push dword ptr [ebp-28h]  +
call esi  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
cmp eax ebx +
jz loc_1024309  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_102431A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 0 +
cmp eax ebx +
jz loc_102432B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax ebx +
jz loc_102433C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
jmp loc_102463B  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov edi eax +
cmp edi ebx +
jge loc_102437C  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10242E8  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10242E8  +
push edi  +
push offset dword_10084E0  +
push 2Bh  +
jmp loc_10242DD  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push offset dword_1008A40  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi ebx +
jge loc_10243BD  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10242E8  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10242E8  +
push edi  +
push offset dword_10084E0  +
push 2Ch  +
jmp loc_10242DD  +
mov eax [ebp-10h] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-40h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi ds:SysFreeString +
cmp eax 1 +
jz loc_1024503  +
mov ebx offset off_102B00C +
mov edi offset dword_10084E0 +
test eax eax +
jge loc_102440C  +
mov ecx off_102B00C +
cmp ecx ebx +
jz loc_102440C  +
test dword ptr [ecx+1Ch] 400000h +
jz loc_102440C  +
push eax  +
push edi  +
push 2Dh  +
push dword ptr [ecx+14h]  +
push dword ptr [ecx+10h]  +
call sub_1019984  +
and dword ptr [ebp-20h] 0 +
mov eax [ebp-38h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push offset dword_1008A30  +
push eax  +
mov byte ptr [ebp-4] 6 +
call dword ptr [ecx]  +
mov [ebp+8] eax +
lea eax [ebp-40h] +
push eax  +
call ds:VariantClear  +
cmp dword ptr [ebp+8] 0 +
jl loc_1024558  +
and dword ptr [ebp-2Ch] 0 +
mov eax [ebp-20h] +
mov ecx [eax] +
lea edx [ebp-2Ch] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 7 +
call dword ptr [ecx+1Ch]  +
mov [ebp+8] eax +
test eax eax +
jl loc_102457D  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-2Ch]  +
call sub_100AC10  +
test eax eax +
jz loc_10244D1  +
mov eax [ebp-20h] +
and dword ptr [ebp-30h] 0 +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
push eax  +
call dword ptr [ecx+94h]  +
mov [ebp+8] eax +
test eax eax +
jl loc_1024597  +
cmp byte ptr [ebp+10h] 1 +
jnz loc_10244B6  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_10244B6  +
mov ecx [ebp-30h] +
and ecx 3 +
jz loc_10244D1  +
mov eax [ebp-20h] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+98h]  +
mov [ebp+8] eax +
test eax eax +
jl loc_10245B1  +
mov eax [ebp-20h] +
mov ecx [eax] +
xor edx edx +
cmp [ebp+0Ch] dl +
setz dl  +
dec edx  +
push edx  +
push eax  +
call dword ptr [ecx+88h]  +
mov ebx offset off_102B00C +
push dword ptr [ebp-2Ch]  +
call esi  +
mov eax [ebp-20h] +
mov byte ptr [ebp-4] 5 +
test eax eax +
jz loc_10244E7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 0  +
lea edx [ebp-40h] +
push edx  +
push 1  +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax 1 +
jnz loc_10243E6  +
xor ebx ebx +
push dword ptr [ebp-24h]  +
call esi  +
push dword ptr [ebp-28h]  +
call esi  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
cmp eax ebx +
jz loc_102451E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 1 +
cmp eax ebx +
jz loc_102452F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 0 +
cmp eax ebx +
jz loc_1024540  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp eax ebx +
jz loc_1024551  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
jmp loc_102463B  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10245D9  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10245D9  +
push dword ptr [ebp+8]  +
push edi  +
push 2Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
jmp loc_10245D9  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10245D4  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10245D4  +
push dword ptr [ebp+8]  +
push edi  +
push 2Fh  +
jmp loc_10245C9  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10245D4  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10245D4  +
push dword ptr [ebp+8]  +
push edi  +
push 30h  +
jmp loc_10245C9  +
mov eax off_102B00C +
cmp eax ebx +
jz loc_10245D4  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10245D4  +
push dword ptr [ebp+8]  +
push edi  +
push 31h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push dword ptr [ebp-2Ch]  +
call esi  +
mov eax [ebp-20h] +
mov byte ptr [ebp-4] 5 +
test eax eax +
jz loc_10245EA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push dword ptr [ebp-24h]  +
call esi  +
push dword ptr [ebp-28h]  +
call esi  +
mov eax [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
test eax eax +
jz loc_1024605  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-10h] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_1024616  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 0 +
test eax eax +
jz loc_1024627  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test eax eax +
jz loc_1024638  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov edi offset dword_10084E0 +
cmp eax esi +
jz loc_1024692  +
test dword ptr [eax+1Ch] 200000h +
jz loc_1024692  +
push ebx  +
push edi  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax off_102B00C +
cmp dword ptr [ebx] 0 +
jnz loc_10246BD  +
cmp eax esi +
jz loc_10246B5  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10246B5  +
push dword ptr [ebx+4]  +
push edi  +
push 3Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebx+4] +
jmp loc_10247F9  +
push 11Ch  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jnz loc_1024735  +
mov eax off_102B00C +
cmp eax esi +
mov esi ds:GetLastError +
jz loc_102471C  +
test dword ptr [eax+1Ch] 400000h +
jz loc_102471C  +
call esi  +
push eax  +
mov eax off_102B00C +
push edi  +
push 3Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
call esi  +
test eax eax +
jle loc_10247F9  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_10247F9  +
cmp byte ptr [ebp+var_A] 1 +
jnz loc_10247BA  +
mov eax [ebx+0Ch] +
and [ebp+var_128] 0 +
mov ecx [eax] +
lea edx [ebp+var_128] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov [ebp+var_12C] eax +
test eax eax +
jge loc_102478A  +
mov eax off_102B00C +
cmp eax esi +
jz loc_1024782  +
test dword ptr [eax+1Ch] 400000h +
jz loc_1024782  +
push [ebp+var_12C]  +
push edi  +
push 3Eh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax [ebp+var_12C] +
jmp loc_10247F9  +
test byte ptr [ebp+var_128] 4 +
jz loc_10247BA  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10247B3  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10247B3  +
push edi  +
push 3Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov eax 80338169h +
jmp loc_10247F9  +
push [ebp+var_A]  +
mov ecx ebx +
push [ebp+arg_0]  +
push offset a@firewallapi_0  +
call sub_102419C  +
mov ebx eax +
test ebx ebx +
jge loc_10247F7  +
mov eax off_102B00C +
cmp eax esi +
jz loc_10247F3  +
test dword ptr [eax+1Ch] 400000h +
jz loc_10247F3  +
push ebx  +
push edi  +
push 40h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
mov eax ebx +
jmp loc_10247F9  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 1 +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102484F  +
test dword ptr [eax+1Ch] 200000h +
jz loc_102484F  +
push esi  +
push offset dword_10084E0  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 0  +
lea edi [esi+0Ch] +
push edi  +
call sub_102406A  +
lea ebx [esi+10h] +
push 0  +
mov ecx ebx +
call sub_1024035  +
cmp dword ptr [esi+8] 0 +
jz loc_1024872  +
call ds:CoUninitialize  +
push dword ptr [ebx]  +
call ds:SysFreeString  +
mov edi [edi] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test edi edi +
jz loc_102488A  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
call __EH_epilog3  +
retn   +
***
push 44h  +
mov eax offset dword_1025A6C +
call __EH_prolog3  +
push offset aStringTooLong  +
lea ecx [ebp-28h] +
call sub_100DDD1  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_100DD0B  +
push offset dword_1027E0C  +
lea eax [ebp-50h] +
push eax  +
call _CxxThrowException  +
push 44h  +
mov eax offset dword_1025A6C +
call __EH_prolog3  +
push offset aInvalidStringP  +
lea ecx [ebp-28h] +
call sub_100DDD1  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-28h] +
push eax  +
lea ecx [ebp-50h] +
call sub_100DC92  +
push offset dword_1027ECC  +
lea eax [ebp-50h] +
push eax  +
mov dword ptr [ebp-50h] offset off_1003BE4 +
call _CxxThrowException  +
push ebx  +
push esi  +
mov eax [esp+18h] +
or eax eax +
jnz loc_1024972  +
mov ecx [esp+14h] +
mov eax [esp+10h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+0Ch] +
div  ecx +
mov edx ebx +
jmp loc_10249B3  +
mov ecx eax +
mov ebx [esp+14h] +
mov edx [esp+10h] +
mov eax [esp+0Ch] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_1024980  +
div  ebx +
mov esi eax +
mul  dword ptr [esp+18h] +
mov ecx eax +
mov eax [esp+14h] +
mul  esi +
add edx ecx +
jb loc_10249AE  +
cmp edx [esp+10h] +
ja loc_10249AE  +
jb loc_10249AF  +
cmp eax [esp+0Ch] +
jbe loc_10249AF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_10249D9  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
jmp ds:?what@exception@@UBEPBDXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1024A74  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp cl 40h +
jnb loc_1024A9A  +
cmp cl 20h +
jnb loc_1024A90  +
shrd eax edx +
shr edx cl +
retn   +
***
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
***
xor eax eax +
xor edx edx +
retn   +
***
jmp ds:_purecall  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2D0h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_2D0] 10001h +
mov [ebp+var_20C] eax +
mov eax [eax-4] +
push offset OutputString  +
mov [ebp+var_21C] eax +
call ds:OutputDebugStringA  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100A071  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1024ABD  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1024C21  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_1024C21  +
push offset dword_1008A50  +
push 33h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov esi 104h +
push esi  +
lea eax [ebp-210h] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_1024C4D  +
mov esi [edi] +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call dword ptr [esi+20h]  +
xor al al +
jmp loc_1024CE8  +
lea eax [ebp-210h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024C56  +
sub eax edx +
push 5Ch  +
sar eax 1 +
pop ecx  +
cmp cx [ebp+eax*2-212h] +
lea eax [ebp-210h] +
jnz loc_1024C7E  +
push offset aShell32_dll  +
jmp loc_1024C83  +
push offset aShell32_dll_0  +
push esi  +
push eax  +
call sub_100B5F5  +
test eax eax +
jge loc_1024CAD  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_1024CA3  +
and eax 0FFFFh +
mov edx [edi] +
push eax  +
mov ecx edi +
call dword ptr [edx+20h]  +
jmp loc_1024C46  +
***
lea eax [ebp-210h] +
push eax  +
lea esi [ebx+4] +
call ds:LoadLibraryW  +
push eax  +
mov ecx esi +
call sub_100C389  +
mov esi [esi] +
test esi esi +
jz loc_1024C38  +
push offset aShgetspecialfo  +
push esi  +
call ds:GetProcAddress  +
mov [ebx+8] eax +
test eax eax +
jz loc_1024C38  +
mov al 1 +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov ebx ecx +
mov [ebp-214h] esi +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1024D48  +
test dword ptr [eax+1Ch] 1000000h +
jz loc_1024D48  +
push offset dword_1008A50  +
push 35h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
mov edi 104h +
push edi  +
lea eax [ebp-210h] +
push eax  +
call ds:GetSystemDirectoryW  +
test eax eax +
jnz loc_1024D74  +
mov edi [esi] +
call ds:GetLastError  +
push eax  +
mov ecx esi +
call dword ptr [edi+20h]  +
xor al al +
jmp loc_1024E48  +
lea eax [ebp-210h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024D7D  +
sub eax edx +
push 5Ch  +
sar eax 1 +
pop ecx  +
cmp cx [ebp+eax*2-212h] +
lea eax [ebp-210h] +
jnz loc_1024DA5  +
push offset aIphlpapi_dll  +
jmp loc_1024DAA  +
push offset aIphlpapi_dll_0  +
push edi  +
push eax  +
call sub_100B5F5  +
test eax eax +
jge loc_1024DD4  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_1024DCA  +
and eax 0FFFFh +
mov edx [esi] +
push eax  +
mov ecx esi +
call dword ptr [edx+20h]  +
jmp loc_1024D6D  +
***
lea eax [ebp-210h] +
push eax  +
lea edi [ebx+4] +
call ds:LoadLibraryW  +
push eax  +
mov ecx edi +
call sub_100C389  +
mov eax [edi] +
test eax eax +
jz loc_1024D5F  +
mov esi ds:GetProcAddress +
push offset aCancelmibchang  +
push eax  +
call esi  +
mov [ebx+8] eax +
test eax eax +
jnz loc_1024E24  +
mov edi [ebp-214h] +
mov esi [edi] +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call dword ptr [esi+20h]  +
jmp loc_1024D6D  +
***
mov eax [edi] +
push offset aGetadaptersa_0  +
push eax  +
call esi  +
mov [ebx+0Ch] eax +
test eax eax +
jz loc_1024E0B  +
mov edi [edi] +
push offset aNotifyunicasti  +
push edi  +
call esi  +
mov [ebx+10h] eax +
test eax eax +
jz loc_1024E0B  +
mov al 1 +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100A071  +
leave   +
retn 4  +
***
mov eax [ecx+4] +
and dword ptr [ecx+4] 0 +
test eax eax +
jz locret_1024E70  +
push eax  +
call ds:FreeLibrary  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1024E5E  +
test [ebp+arg_0] 1 +
jz loc_1024E90  +
push esi  +
call sub_1008E30  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_1024EAF  +
push 1  +
call sub_1024E76  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_1024EE1  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_1024F19  +
push [ebp+arg_0]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_1024EF2  +
cmp [ebp+arg_4] al +
jz loc_1024EDD  +
mov eax [esi] +
mov dword ptr [ebp+arg_4] eax +
mov eax dword ptr [ebp+arg_4] +
mov dword ptr [ebp+arg_4] eax +
mov eax dword ptr [ebp+arg_4] +
test eax eax +
jz loc_1024F0E  +
mov ecx dword ptr [ebp+arg_4] +
push 1  +
call sub_1024E76  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_1024F5E  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
and dword ptr [ebp-4] 0 +
push 1  +
lea eax [ebp-30h] +
push eax  +
mov ecx esi +
call sub_1024EB8  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
mov [ebp-14h] ebx +
push 0  +
lea eax [ebp-0Dh] +
push eax  +
push 0Ch  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jz loc_1024FAF  +
mov dword ptr [eax] offset off_1008A60 +
and dword ptr [eax+4] 0 +
mov esi eax +
jmp loc_1024FB1  +
xor esi esi +
mov [ebp-18h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jnz loc_1024FC8  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor al al +
jmp loc_1025000  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [ebx+4]  +
test al al +
jnz loc_1024FDF  +
push 1  +
mov ecx esi +
call sub_1024E76  +
jmp loc_1024FC4  +
push 0  +
push esi  +
push dword ptr [ebp-14h]  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_1024FF1  +
xor esi esi +
test esi esi +
jz loc_1024FFE  +
push 1  +
mov ecx esi +
call sub_1024E76  +
mov al 1 +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov ebx ecx +
mov [ebp-14h] ebx +
push 0  +
lea eax [ebp-0Dh] +
push eax  +
push 14h  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
test eax eax +
jz loc_102503D  +
mov dword ptr [eax] offset off_1008AB4 +
and dword ptr [eax+4] 0 +
mov esi eax +
jmp loc_102503F  +
xor esi esi +
mov [ebp-18h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jnz loc_1025056  +
mov ecx [ebp+8] +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
xor al al +
jmp loc_102508E  +
push dword ptr [ebp+8]  +
mov ecx esi +
call dword ptr [ebx+4]  +
test al al +
jnz loc_102506D  +
push 1  +
mov ecx esi +
call sub_1024E76  +
jmp loc_1025052  +
push 0  +
push esi  +
push dword ptr [ebp-14h]  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_102507F  +
xor esi esi +
test esi esi +
jz loc_102508C  +
push 1  +
mov ecx esi +
call sub_1024E76  +
mov al 1 +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_10250B1  +
push [ebp+arg_0]  +
call sub_1024F7F  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_10250D3  +
push [ebp+arg_0]  +
call sub_102500D  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
lea eax [ebp-30h] +
xor esi esi +
push eax  +
mov ecx offset dword_102CA48 +
mov [ebp-4] esi +
call sub_102509B  +
cmp eax esi +
jnz loc_1025131  +
lea ecx [ebp-30h] +
call sub_1009AD7  +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
mov eax esi +
call __EH_epilog3  +
retn 10h  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call dword ptr [eax+8]  +
mov esi eax +
jmp loc_102511B  +
***
call __EH_prolog3  +
push 1  +
lea ecx [ebp-30h] +
call sub_100E3AF  +
lea eax [ebp-30h] +
xor esi esi +
push eax  +
mov ecx offset dword_102CA60 +
mov [ebp-4] esi +
call sub_10250BD  +
cmp eax esi +
jnz loc_102519B  +
lea ecx [ebp-30h] +
call sub_1009AD7  +
push eax  +
call ds:SetLastError  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-30h] +
call sub_100E3A3  +
mov eax esi +
call __EH_epilog3  +
retn 14h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call dword ptr [eax+0Ch]  +
mov esi eax +
jmp loc_1025185  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_10251DD  +
push 0  +
push 54Fh  +
push offset a61  +
push 3Dh  +
push offset aDW7rtmAdmin_19  +
call sub_100A7B1  +
xor eax eax +
jmp loc_10251E8  +
push 18h  +
push [ebp+arg_0]  +
call ds:IsWellKnownSid  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+TokenHandle] 0 +
lea eax [ebp+TokenHandle] +
push eax  +
push 1  +
push 8  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jnz loc_1025285  +
push ebx  +
push esi  +
push edi  +
mov eax off_102B00C +
mov esi offset off_102B00C +
mov edi 10000000h +
mov ebx offset dword_1008B44 +
cmp eax esi +
jz loc_1025242  +
test [eax+1Ch] edi +
jz loc_1025242  +
push ebx  +
push 10h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
call ds:GetLastError  +
cmp eax 3F0h +
jnz loc_1025282  +
lea eax [ebp+TokenHandle] +
push eax  +
push 8  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1025282  +
mov eax off_102B00C +
cmp eax esi +
jz loc_1025282  +
test [eax+1Ch] edi +
jz loc_1025282  +
push ebx  +
push 11h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+TokenHandle] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
call ds:RevertToSelf  +
mov edi eax +
test edi edi +
jnz loc_102531E  +
push esi  +
call ds:GetLastError  +
mov esi eax +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10252DF  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_10252DF  +
push esi  +
push offset dword_1008B44  +
push 16h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push 0  +
push 54Fh  +
push offset a336  +
push 150h  +
push offset aDW7rtmAdmin_19  +
call sub_100A7B1  +
push 0Ah  +
lea eax [ebp+var_2C] +
push eax  +
push esi  +
call ds:_ultow  +
add esp 0Ch +
mov [ebp+Strings] eax +
lea eax [ebp+Strings] +
push eax  +
push 1  +
push 72798h  +
call sub_100B136  +
pop esi  +
mov ecx [ebp+var_4] +
mov eax edi +
xor ecx ebp +
pop edi  +
call sub_100A071  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+Token]  +
push 0  +
call ds:SetThreadToken  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push ecx  +
push 0  +
push 0Bh  +
mov dword ptr [ebp-4] 44h +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_1025384  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call dword ptr [esi+20h]  +
pop edi  +
xor al al +
pop esi  +
jmp locret_1025386  +
mov al 1 +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_102B01C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
push edi  +
xor eax eax +
mov esi [ebp+8] +
mov edi ecx +
lea ecx [ebp-10h] +
push ecx  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push 220h  +
push 20h  +
mov [ebp-10h] eax +
mov [ebp-0Ch] al +
mov [ebp-0Bh] al +
mov [ebp-0Ah] al +
mov [ebp-9] al +
mov [ebp-8] al +
push 2  +
lea eax [ebp-0Ch] +
push eax  +
mov byte ptr [ebp-7] 5 +
call ds:AllocateAndInitializeSid  +
test eax eax +
jnz loc_1025427  +
mov edi [esi] +
call ds:GetLastError  +
push eax  +
mov ecx esi +
call dword ptr [edi+20h]  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025423  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1025423  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+48h]  +
push eax  +
mov eax off_102B00C +
push offset dword_1008B44  +
push 3Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
xor al al +
jmp loc_102542E  +
mov eax [ebp-10h] +
mov [edi] eax +
mov al 1 +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100A071  +
leave   +
retn 4  +
***
mov al 1 +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1025488  +
push esi  +
push 54Fh  +
push offset a271  +
push 10Fh  +
push offset aDW7rtmAdmin_19  +
call sub_100A7B1  +
xor eax eax +
jmp loc_102554B  +
or dword ptr [esi] 0FFFFFFFFh +
push esi  +
push 1  +
push [ebp+DesiredAccess]  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jnz loc_1025508  +
call ds:GetLastError  +
mov esi eax +
cmp esi 3F0h +
jnz loc_10254D4  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025548  +
test dword ptr [eax+1Ch] 400h +
jz loc_1025548  +
push offset dword_1008B44  +
push 13h  +
jmp loc_102553D  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10254FC  +
test dword ptr [eax+1Ch] 400h +
jz loc_10254FC  +
push esi  +
push offset dword_1008B44  +
push 14h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push esi  +
call ds:SetLastError  +
jmp loc_1025481  +
call sub_102528F  +
test eax eax +
jnz loc_1025521  +
push dword ptr [esi]  +
call ds:CloseHandle  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_1025481  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025548  +
test dword ptr [eax+1Ch] 400h +
jz loc_1025548  +
push offset dword_1008B44  +
push 15h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi 0FFFFFFFFh +
jnz loc_1025568  +
xor esi esi +
push esi  +
call sub_1025332  +
test eax eax +
jnz loc_102559B  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102559E  +
test dword ptr [eax+1Ch] 400h +
jz loc_102559E  +
push offset dword_1008B44  +
push 17h  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_102559E  +
xor edi edi +
inc edi  +
push esi  +
call ds:CloseHandle  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-4] +
push eax  +
push ecx  +
push 0  +
push 18h  +
mov dword ptr [ebp-4] 44h +
call ds:CreateWellKnownSid  +
test eax eax +
jnz loc_10255EB  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
call ds:GetLastError  +
push eax  +
mov ecx edi +
call dword ptr [esi+20h]  +
pop edi  +
xor al al +
pop esi  +
jmp locret_10255ED  +
mov al 1 +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jnz loc_102561F  +
push eax  +
push 54Fh  +
push offset a93  +
push 5Dh  +
push offset aDW7rtmAdminW_2  +
call sub_100A7B1  +
xor al al +
jmp loc_1025649  +
push dword ptr [ebp+8]  +
mov ecx [esi] +
call dword ptr [esi+8]  +
test al al +
jnz loc_1025630  +
cmp [ebp+0Ch] al +
jz loc_102561B  +
mov eax [esi] +
mov [ebp+0Ch] eax +
push dword ptr [ebp+0Ch]  +
call sub_1008E30  +
pop ecx  +
push 0  +
push esi  +
call ds:InterlockedExchange  +
mov al 1 +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
call sub_10251F1  +
mov [ebp-18h] eax +
mov [ebp-4] ebx +
cmp eax ebx +
jz loc_1025859  +
mov esi ds:GetTokenInformation +
lea ecx [ebp-14h] +
push ecx  +
push ebx  +
push ebx  +
push 1  +
push eax  +
mov [ebp-14h] ebx +
call esi  +
test eax eax +
jnz loc_1025832  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_1025814  +
push ebx  +
lea eax [ebp-0Dh] +
push eax  +
push dword ptr [ebp-14h]  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov edi eax +
cmp edi ebx +
jz loc_10257E0  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-14h]  +
mov [ebp-20h] ebx +
push edi  +
push 1  +
push dword ptr [ebp-18h]  +
call esi  +
cmp eax 1 +
jnz loc_10257AE  +
push dword ptr [edi]  +
call ds:GetLengthSid  +
mov esi eax +
push ebx  +
lea eax [ebp-0Eh] +
push eax  +
push esi  +
call ?Alloc@WSManMemory@@SGPAXIABVCallSite@TestSystem@@W4Mode@3@@Z  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jz loc_102577D  +
push dword ptr [edi]  +
push eax  +
push esi  +
call ds:CopySid  +
test eax eax +
jnz loc_10257D7  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_102576F  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_102576F  +
push offset dword_1008B44  +
push 0Ah  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
push dword ptr [ebp-1Ch]  +
call sub_1008E30  +
pop ecx  +
mov [ebp-1Ch] ebx +
jmp loc_10257D7  +
push 0Eh  +
call ds:SetLastError  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10257D7  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_10257D7  +
push offset dword_1008B44  +
push 0Bh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
jmp loc_10257D7  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_10257D7  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_10257D7  +
push 7Ah  +
push offset dword_1008B44  +
push 0Ch  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
push edi  +
call sub_1008E30  +
pop ecx  +
jmp loc_1025859  +
push 0Eh  +
call ds:SetLastError  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025859  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1025859  +
push dword ptr [ebp-14h]  +
push offset dword_1008B44  +
push 0Dh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_1019984  +
jmp loc_1025859  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025859  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1025859  +
push offset dword_1008B44  +
push 0Eh  +
jmp loc_102584E  +
mov eax off_102B00C +
cmp eax offset off_102B00C +
jz loc_1025859  +
test dword ptr [eax+1Ch] 10000000h +
jz loc_1025859  +
push offset dword_1008B44  +
push 0Fh  +
push dword ptr [eax+14h]  +
push dword ptr [eax+10h]  +
call sub_100904C  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-18h] ebx +
jz loc_102586E  +
push dword ptr [ebp-18h]  +
lea eax [ebp-18h] +
push eax  +
call sub_100B3FF  +
mov eax [ebp-1Ch] +
call __EH_epilog3  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
jmp fword ptr [eax+6]  +
***
jmp fword ptr [eax+15h]  +
***
jp loc_1027177  +
add eax ebp +
jmp loc_10271AB  +
retn   +
***
cld   +
jmp fword ptr [eax+24h]  +
***
jp locret_1027198  +
add eax ebp +
retf 0FE32h  +
***
pop ecx  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 14h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C060 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 6Ch +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C070 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 18h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C090 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 74h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C0A0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 1Ch +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C0C0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 7Ch +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C0D0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 20h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C0F0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 84h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C100 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 24h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C120 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 8Ch +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C130 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 28h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C150 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 94h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C160 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 28h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C180 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 9Ch +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C190 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 28h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C1B0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0A4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C1C0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 2Ch +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C1E0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0ACh +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C1F0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 2Ch +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C210 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0B4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C220 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 2Ch +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C240 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0BCh +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C250 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C270 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0C4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C280 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C2A0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0CCh +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C2B0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C2D0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0D4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C2E0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C300 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0DCh +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C310 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C330 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0E4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C340 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C360 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0ECh +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C370 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
mov dword ptr [ebp-0Ch] 30h +
mov [ebp-8] eax +
mov [ebp-4] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C390 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 0F4h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C3A0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-0Ch] eax +
mov [ebp-8] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C3C0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 10h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C3D0 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-0Ch] eax +
mov [ebp-8] eax +
lea esi [ebp-0Ch] +
mov edi offset unk_102C3F0 +
movs   +
movs   +
movs   +
mov dword ptr [ebp-18h] 18h +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
lea esi [ebp-18h] +
mov edi offset unk_102C400 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 2Ch +
lea esi [ebp-0Ch] +
mov edi offset unk_102C418 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 34h +
lea esi [ebp-0Ch] +
mov edi offset unk_102C430 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 3Ch +
lea esi [ebp-0Ch] +
mov edi offset unk_102C448 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 44h +
lea esi [ebp-0Ch] +
mov edi offset unk_102C460 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 10h +
lea esi [ebp-0Ch] +
mov edi offset unk_102C478 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
push edi  +
mov dword ptr [ebp-0Ch] 18h +
lea esi [ebp-0Ch] +
mov edi offset unk_102C490 +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov ecx offset unk_102C9E0 +
jmp sub_100FC8B  +
***
jmp sub_10114A6  +
***
jmp sub_100FC8B  +
***
mov ecx offset dword_102CA1C +
jmp sub_10114A6  +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 7570E905h  +
***
