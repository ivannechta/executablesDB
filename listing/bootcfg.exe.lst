mov edi edi +
push ebp  +
mov ebp esp +
sub esp 578h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
and [ebp+var_558] 0 +
and [ebp+var_560] 0 +
mov [ebp+var_55C] eax +
call sub_100E7B7  +
mov [ebp+var_560] eax +
test eax eax +
jnz loc_1001BB7  +
push 8007000Eh  +
call ds:SetLastError  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
xor eax eax +
inc eax  +
jmp loc_10021D7  +
mov ecx 550h +
lea eax [ebp+dwErrCode] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1001BC2  +
push ebx  +
push esi  +
push edi  +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
mov eax [ebp+arg_C] +
push 0Ah  +
pop edi  +
push 8  +
mov [ebp+var_528] eax +
xor ebx ebx +
push esi  +
lea eax [ebp+var_504] +
inc ebx  +
push eax  +
mov [ebp+var_534] offset aCopy +
mov [ebp+var_54C] edi +
mov [ebp+var_53C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_10] +
push 8  +
mov [ebp+var_4D8] eax +
push esi  +
lea eax [ebp+var_4B4] +
push eax  +
mov [ebp+var_4E4] offset aQuery +
mov [ebp+var_4FC] edi +
mov [ebp+var_4EC] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_14] +
push 8  +
mov [ebp+var_488] eax +
push esi  +
lea eax [ebp+var_464] +
push eax  +
mov [ebp+var_494] offset aDelete +
mov [ebp+var_4AC] edi +
mov [ebp+var_49C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_8] +
and [ebp+var_450] 0 +
push 8  +
mov [ebp+var_438] eax +
push esi  +
lea eax [ebp+var_414] +
push eax  +
mov [ebp+var_444] offset a?H +
mov [ebp+var_45C] edi +
mov [ebp+var_454] 20000h +
mov [ebp+var_44C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_18] +
push 8  +
mov [ebp+var_3E8] eax +
push esi  +
lea eax [ebp+var_3C4] +
push eax  +
mov [ebp+var_3F4] offset aRaw +
mov [ebp+var_40C] edi +
mov [ebp+var_3FC] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_1C] +
push 8  +
mov [ebp+var_398] eax +
push esi  +
lea eax [ebp+var_374] +
push eax  +
mov [ebp+var_3A4] offset aDefault +
mov [ebp+var_3BC] edi +
mov [ebp+var_3AC] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_20] +
mov [ebp+var_354] offset KeyName +
mov [ebp+var_36C] edi +
mov [ebp+var_35C] ebx +
mov [ebp+var_348] eax +
push 8  +
push esi  +
lea eax [ebp+var_324] +
push eax  +
call sub_100D2A6  +
mov eax [ebp+arg_24] +
push 8  +
mov [ebp+var_2F8] eax +
push esi  +
lea eax [ebp+var_2D4] +
push eax  +
mov [ebp+var_304] offset aDebug +
mov [ebp+var_31C] edi +
mov [ebp+var_30C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_28] +
push 8  +
mov [ebp+var_2A8] eax +
push esi  +
lea eax [ebp+var_284] +
push eax  +
mov [ebp+var_2B4] offset aEms +
mov [ebp+var_2CC] edi +
mov [ebp+var_2BC] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_2C] +
push 8  +
mov [ebp+var_258] eax +
push esi  +
lea eax [ebp+var_234] +
push eax  +
mov [ebp+var_264] offset aAddsw +
mov [ebp+var_27C] edi +
mov [ebp+var_26C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_30] +
push 8  +
mov [ebp+var_208] eax +
push esi  +
lea eax [ebp+var_1E4] +
push eax  +
mov [ebp+var_214] offset aRmsw +
mov [ebp+var_22C] edi +
mov [ebp+var_21C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_34] +
push 8  +
mov [ebp+var_1B8] eax +
push esi  +
lea eax [ebp+var_194] +
push eax  +
mov [ebp+var_1C4] offset aDbg1394 +
mov [ebp+var_1DC] edi +
mov [ebp+var_1CC] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_38] +
push 8  +
mov [ebp+var_168] eax +
push esi  +
lea eax [ebp+var_144] +
push eax  +
mov [ebp+var_174] offset aMirror +
mov [ebp+var_18C] edi +
mov [ebp+var_17C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_3C] +
push 8  +
mov [ebp+var_118] eax +
push esi  +
lea eax [ebp+var_F4] +
push eax  +
mov [ebp+var_124] offset aList +
mov [ebp+var_13C] edi +
mov [ebp+var_12C] ebx +
call sub_100D2A6  +
mov eax [ebp+arg_40] +
push 8  +
mov [ebp+var_D4] offset aUpdate +
mov [ebp+var_EC] edi +
mov [ebp+var_DC] ebx +
mov [ebp+var_C8] eax +
push esi  +
lea eax [ebp+var_F4] +
push eax  +
call sub_100D2A6  +
mov eax [ebp+arg_40] +
push 8  +
mov [ebp+var_C8] eax +
push esi  +
lea eax [ebp+var_A4] +
push eax  +
mov [ebp+var_D4] offset aUpdate +
mov [ebp+var_EC] edi +
mov [ebp+var_DC] ebx +
call sub_100D2A6  +
push 8  +
mov [ebp+var_9C] edi +
mov edi [ebp+arg_44] +
push esi  +
lea eax [ebp+var_54] +
push eax  +
mov [ebp+var_84] offset aClone +
mov [ebp+var_8C] ebx +
mov [ebp+var_78] edi +
call sub_100D2A6  +
and [ebp+var_40] 0 +
push 0  +
lea eax [ebp+var_560] +
mov [ebp+var_28] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 11h  +
push 0FFFFFFFFh  +
push [ebp+var_55C]  +
mov [ebp+var_4C] ebx +
push [ebp+arg_0]  +
mov [ebp+var_44] 40001h +
call sub_1010470  +
test eax eax +
lea eax [ebp+var_560] +
push eax  +
jnz loc_1001F5A  +
call sub_100E82C  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_10021D2  +
call sub_100E82C  +
mov eax [ebp+arg_C] +
mov edx [eax] +
test edx edx +
jz loc_1001F6E  +
mov [ebp+var_558] ebx +
mov eax [ebp+arg_10] +
mov ecx [eax] +
test ecx ecx +
jz loc_1001F7D  +
inc [ebp+var_558]  +
mov eax [ebp+arg_14] +
mov eax [eax] +
test eax eax +
jz loc_1001F8C  +
inc [ebp+var_558]  +
mov esi [ebp+arg_18] +
cmp dword ptr [esi] 0 +
jz loc_1002054  +
mov esi [ebp+arg_20] +
inc [ebp+var_558]  +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
mov esi [ebp+arg_24] +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
mov esi [ebp+arg_2C] +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
mov esi [ebp+arg_30] +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
mov esi [ebp+arg_34] +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
mov esi [ebp+arg_28] +
cmp dword ptr [esi] 0 +
jnz loc_1001FFC  +
xor esi esi +
cmp eax esi +
jnz loc_1001FFC  +
cmp edx esi +
jnz loc_1001FFC  +
cmp ecx esi +
jnz loc_1001FFC  +
mov eax [ebp+arg_1C] +
cmp [eax] esi +
jnz loc_1001FFC  +
mov eax [ebp+arg_38] +
cmp [eax] esi +
jnz loc_1001FFC  +
mov eax [ebp+arg_3C] +
cmp [eax] esi +
jnz loc_1001FFC  +
mov eax [ebp+arg_40] +
cmp [eax] esi +
jnz loc_1001FFC  +
cmp [edi] esi +
jz loc_1002054  +
mov eax [ebp+arg_8] +
xor esi esi +
cmp [eax] esi +
jnz loc_10021BC  +
cmp [ebp+arg_0] esi +
jbe loc_100204E  +
mov eax [ebp+var_55C] +
push 0  +
push ebx  +
push offset String2  +
push dword ptr [eax+esi*4]  +
call sub_100C9D3  +
test eax eax +
jnz loc_1002048  +
lea eax [esi+1] +
cmp eax [ebp+arg_0] +
jz loc_10021BC  +
mov eax [ebp+var_55C] +
mov eax [eax+esi*4+4] +
cmp word ptr [eax] 22h +
jnz loc_10021BC  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_100200E  +
dec [ebp+var_558]  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov [ebp+var_55C] eax +
test eax eax +
jz loc_1002069  +
inc [ebp+var_558]  +
mov eax [ebp+arg_20] +
mov eax [eax] +
mov [ebp+var_578] eax +
test eax eax +
jz loc_100207E  +
inc [ebp+var_558]  +
mov eax [ebp+arg_24] +
mov eax [eax] +
mov [ebp+var_564] eax +
test eax eax +
jz loc_1002093  +
inc [ebp+var_558]  +
mov eax [ebp+arg_2C] +
mov eax [eax] +
mov [ebp+var_56C] eax +
test eax eax +
jz loc_10020A8  +
inc [ebp+var_558]  +
mov eax [ebp+arg_30] +
mov eax [eax] +
mov [ebp+var_574] eax +
test eax eax +
jz loc_10020BD  +
inc [ebp+var_558]  +
mov eax [ebp+arg_34] +
mov eax [eax] +
mov [ebp+var_568] eax +
test eax eax +
jz loc_10020D2  +
inc [ebp+var_558]  +
mov eax [ebp+arg_28] +
mov ecx [eax] +
test ecx ecx +
jz loc_10020E1  +
inc [ebp+var_558]  +
mov eax [ebp+arg_38] +
mov eax [eax] +
mov [ebp+var_570] eax +
test eax eax +
jz loc_10020F6  +
inc [ebp+var_558]  +
mov eax [ebp+arg_3C] +
mov edx [eax] +
test edx edx +
jz loc_1002105  +
inc [ebp+var_558]  +
mov eax [ebp+arg_40] +
mov eax [eax] +
test eax eax +
jz loc_1002114  +
inc [ebp+var_558]  +
mov edi [edi] +
test edi edi +
jz loc_1002120  +
inc [ebp+var_558]  +
cmp [ebp+var_558] ebx +
ja loc_10021BC  +
mov esi [ebp+arg_C] +
cmp dword ptr [esi] 0 +
jnz loc_10021A1  +
mov esi [ebp+arg_10] +
cmp dword ptr [esi] 0 +
jnz loc_10021A1  +
mov esi [ebp+arg_14] +
cmp dword ptr [esi] 0 +
jnz loc_10021A1  +
mov esi [ebp+arg_8] +
cmp dword ptr [esi] 0 +
jnz loc_10021A9  +
mov esi [ebp+arg_18] +
cmp dword ptr [esi] 0 +
jnz loc_10021A1  +
cmp [ebp+var_55C] 0 +
jnz loc_10021A1  +
cmp [ebp+var_578] 0 +
jnz loc_10021A1  +
cmp [ebp+var_564] 0 +
jnz loc_10021A1  +
xor esi esi +
cmp ecx esi +
jnz loc_10021A1  +
cmp [ebp+var_56C] esi +
jnz loc_10021A1  +
cmp [ebp+var_574] esi +
jnz loc_10021A1  +
cmp [ebp+var_568] esi +
jnz loc_10021A1  +
cmp [ebp+var_570] esi +
jnz loc_10021A1  +
cmp eax esi +
jnz loc_10021A1  +
cmp edx esi +
jnz loc_10021A1  +
cmp edi esi +
jz loc_10021BC  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax] 0 +
jz loc_10021B8  +
cmp [ebp+var_558] 0 +
ja loc_10021B8  +
cmp [ebp+arg_0] 3 +
jnb loc_10021BC  +
xor eax eax +
jmp loc_10021D4  +
push ebx  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100C0EF  +
leave   +
retn 48h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 2710h +
push esi  +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+lpMem] ebx +
mov edi 1388h +
mov [ebp+lpString] ebx +
call sub_100CBB3  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1002224  +
xor eax eax +
jmp loc_100234E  +
push esi  +
call sub_100CBB3  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_100223C  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
jmp loc_100221D  +
push [ebp+lpMem]  +
call sub_100CC5C  +
mov ecx [ebp+lpMem] +
cmp eax ebx +
jz loc_1002251  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_100224B  +
push [ebp+lpString]  +
call sub_100CC5C  +
mov ecx [ebp+lpString] +
cmp eax ebx +
jz loc_1002266  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002260  +
mov [ebp+dwBytes] esi +
push [ebp+lpFileName]  +
push edi  +
push [ebp+lpMem]  +
push offset Default  +
push ebx  +
push [ebp+lpAppName]  +
call ds:GetPrivateProfileStringW  +
mov esi eax +
lea eax [edi-2] +
cmp esi eax +
jnz loc_10022E3  +
add [ebp+dwBytes] 0C8h +
add edi 64h +
cmp [ebp+lpMem] ebx +
jz loc_10022A3  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
mov [ebp+lpMem] ebx +
push [ebp+dwBytes]  +
call sub_100CBB3  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_10022D2  +
cmp [ebp+lpString] ebx +
jz loc_10022C3  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
mov [ebp+lpString] ebx +
push [ebp+dwBytes]  +
call sub_100CBB3  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_1002269  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
jmp loc_1002234  +
call sub_100E7B7  +
mov [ebp+var_18] eax +
cmp eax ebx +
jz loc_10022D2  +
cmp esi ebx +
jbe loc_1002339  +
mov eax [ebp+var_14] +
mov ecx [ebp+lpMem] +
mov edi [ebp+var_10] +
mov edx [ebp+lpString] +
add eax eax +
mov cx [eax+ecx] +
inc [ebp+var_10]  +
mov [edx+edi*2] cx +
mov ecx [ebp+lpMem] +
cmp [eax+ecx] bx +
jnz loc_1002331  +
push ebx  +
push [ebp+lpString]  +
mov [ebp+var_10] ebx +
push [ebp+var_18]  +
call sub_100EB79  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jz loc_1002355  +
inc [ebp+var_14]  +
cmp [ebp+var_14] esi +
jb loc_10022F3  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
mov eax [ebp+var_18] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_18] +
push eax  +
call sub_100E82C  +
jmp loc_100221D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push 1  +
push 3  +
push ebx  +
push 1  +
push ebx  +
push [ebp+lpFileName]  +
mov [ebp+lpMem] ebx +
mov [ebp+lpString] ebx +
mov esi 1388h +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10023E7  +
push ebx  +
push edi  +
call ds:GetFileSize  +
push edi  +
mov esi eax +
call ds:CloseHandle  +
cmp esi 200000h +
jb loc_10023E7  +
push 0E88h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
lea edi [esi+esi] +
push edi  +
mov [ebp+var_10] ebx +
mov [ebp+var_18] ebx +
call sub_100CBB3  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_1002413  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_10023DE  +
push edi  +
call sub_100CBB3  +
mov [ebp+lpString] eax +
cmp eax ebx +
jnz loc_100243F  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
jmp loc_10023DE  +
push [ebp+lpMem]  +
call sub_100CC5C  +
mov ecx [ebp+lpMem] +
cmp eax ebx +
jz loc_1002454  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_100244E  +
lea eax [esi-2] +
mov [ebp+dwBytes] edi +
mov [ebp+var_14] eax +
mov edi 400h +
push [ebp+lpFileName]  +
push esi  +
push [ebp+lpMem]  +
push [ebp+lpAppName]  +
call ds:GetPrivateProfileSectionW  +
mov [ebp+var_1C] eax +
cmp eax [ebp+var_14] +
jnz loc_10024F5  +
add [ebp+var_14] edi +
add [ebp+dwBytes] 800h +
add esi edi +
cmp [ebp+lpMem] ebx +
jz loc_1002497  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
mov [ebp+lpMem] ebx +
cmp [ebp+lpString] ebx +
jz loc_10024A8  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
mov [ebp+lpString] ebx +
push [ebp+dwBytes]  +
call sub_100CBB3  +
push [ebp+dwBytes]  +
mov [ebp+lpMem] eax +
call sub_100CBB3  +
mov [ebp+lpString] eax +
cmp [ebp+lpMem] ebx +
jz loc_10024D0  +
cmp eax ebx +
jz loc_10024D0  +
cmp [ebp+dwBytes] 1FFFEh +
jnz loc_1002462  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
jmp loc_1002437  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
mov edx [ebp+lpMem] +
xor ecx ecx +
mov [edx+eax*2] cx +
call sub_100E7B7  +
mov esi eax +
cmp esi ebx +
jz loc_10024D0  +
mov edi [ebp+var_1C] +
cmp edi ebx +
jbe loc_100256E  +
mov eax [ebp+var_10] +
mov ecx [ebp+lpMem] +
mov edx [ebp+lpString] +
add eax eax +
mov cx [eax+ecx] +
mov [ebp+lpFileName] eax +
mov eax [ebp+var_18] +
mov [edx+eax*2] cx +
mov ecx [ebp+lpMem] +
mov edx [ebp+lpFileName] +
inc eax  +
mov [ebp+var_18] eax +
cmp [edx+ecx] bx +
jnz loc_1002566  +
mov edx [ebp+lpString] +
xor ecx ecx +
push ebx  +
mov [edx+eax*2+2] cx +
push [ebp+lpString]  +
mov [ebp+var_18] ebx +
push esi  +
call sub_100EB79  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jz loc_1002572  +
inc [ebp+var_10]  +
cmp [ebp+var_10] edi +
jb loc_1002519  +
mov ebx esi +
jmp loc_100259E  +
push 8  +
call ds:SetLastError  +
push 7Ch  +
call sub_100E6E4  +
mov esi ds:__iob_func +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call esi  +
add eax 40h +
push eax  +
call sub_100C80A  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
mov eax ebx +
jmp loc_10023E0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpFileName]  +
push 0  +
push [ebp+lpKeyName]  +
push [ebp+lpAppName]  +
call ds:WritePrivateProfileStringW  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
push esi  +
push [ebp+lpString]  +
mov dword ptr [ebp+var_C] 20h +
mov [ebp+var_8] esi +
call sub_100C9B2  +
lea eax [eax+eax+14h] +
push eax  +
call sub_100CBB3  +
mov ebx eax +
cmp ebx esi +
jnz loc_100262C  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
xor eax eax +
inc eax  +
jmp loc_10026D8  +
push ebx  +
call sub_100CC5C  +
mov ecx ebx +
cmp eax esi +
jz loc_100263F  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1002638  +
push edi  +
push esi  +
push [ebp+lpString]  +
call sub_100C9B2  +
push 2  +
mov edi eax +
push offset String  +
lea eax [ebp+var_C] +
push eax  +
add edi 0Ah +
call sub_100D2E9  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpString]  +
jmp loc_10026BC  +
push 0  +
push 1  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_10026B6  +
cmp [ebp+var_8] 0 +
jz loc_1002694  +
mov eax edi +
sub eax esi +
push eax  +
push offset String  +
lea eax [ebx+esi*2-2] +
push eax  +
call sub_100D2E9  +
inc [ebp+var_8]  +
mov eax edi +
sub eax esi +
push eax  +
push [ebp+lpString1]  +
lea eax [ebx+esi*2] +
push eax  +
call sub_100D2E9  +
push 0  +
push [ebp+lpString1]  +
call sub_100C9B2  +
lea esi [esi+eax+1] +
lea eax [ebp+var_C] +
push eax  +
push 0  +
call ds:wcstok  +
pop ecx  +
mov [ebp+lpString1] eax +
pop ecx  +
test eax eax +
jnz loc_1002667  +
push edi  +
push ebx  +
push [ebp+lpString]  +
call sub_100D2E9  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
push 6  +
pop esi  +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 17h +
jbe loc_10026E9  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 57h  +
pop esi  +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 69h +
jbe loc_1002712  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 49h  +
pop esi  +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 56h +
jbe loc_100273B  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpFileName] 0 +
jnz loc_100276D  +
xor eax eax +
jmp loc_10027B8  +
test byte ptr dwFileAttributes 1 +
jz loc_100277F  +
or dwFileAttributes 21h +
jmp loc_1002786  +
or dwFileAttributes 20h +
push dwFileAttributes  +
push [ebp+lpFileName]  +
call ds:SetFileAttributesW  +
test eax eax +
jnz loc_10027B5  +
push 8Dh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1002769  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+arg_0] edi +
jnz loc_10027DB  +
xor eax eax +
inc eax  +
jmp loc_1002894  +
push ebx  +
push [ebp+arg_0]  +
call sub_100E857  +
mov ebx eax +
mov [ebp+var_8] ebx +
test ebx ebx +
jbe loc_100280B  +
push edi  +
push [ebp+arg_0]  +
call sub_100EF86  +
test eax eax +
jz loc_1002806  +
push 0  +
push eax  +
call sub_100C9B2  +
lea esi [esi+eax+1] +
inc edi  +
cmp edi ebx +
jb loc_10027ED  +
lea eax [esi+esi+2] +
push eax  +
call sub_100CBB3  +
mov edi [ebp+arg_4] +
mov [edi] eax +
test eax eax +
jnz loc_1002837  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
xor eax eax +
inc eax  +
jmp loc_1002893  +
push eax  +
call sub_100CC5C  +
mov ecx [edi] +
test eax eax +
jz loc_100284A  +
mov byte ptr [ecx] 0 +
inc ecx  +
dec eax  +
jnz loc_1002843  +
and [ebp+arg_4] 0 +
mov [ebp+var_4] esi +
xor esi esi +
test ebx ebx +
jbe loc_1002891  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100EF86  +
mov ebx eax +
test ebx ebx +
jz loc_1002886  +
mov eax [ebp+var_4] +
sub eax esi +
push eax  +
mov eax [edi] +
push ebx  +
lea eax [eax+esi*2] +
push eax  +
call sub_100D2E9  +
push 0  +
push ebx  +
call sub_100C9B2  +
lea esi [esi+eax+1] +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_8] +
jb loc_1002857  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 0Ah  +
push 0A4h  +
call sub_100E6E4  +
push eax  +
call sub_100DF67  +
mov esi [ebp+arg_4] +
and dword ptr [esi+28Ch] 0 +
and dword ptr [esi+290h] 0 +
push 41h  +
mov [esi+200h] eax +
mov ebx offset dword_1001344 +
push ebx  +
lea eax [esi+208h] +
push eax  +
mov dword ptr [esi+204h] 10h +
call sub_100D2E9  +
mov edi 100h +
push edi  +
push 0A1h  +
call sub_100E6E4  +
push eax  +
push esi  +
call sub_100D2E9  +
push 0Ah  +
push 0A2h  +
call sub_100E6E4  +
push eax  +
call sub_100DF67  +
and dword ptr [esi+520h] 0 +
and dword ptr [esi+524h] 0 +
push 41h  +
mov [esi+494h] eax +
push ebx  +
lea eax [esi+49Ch] +
push eax  +
mov dword ptr [esi+498h] 10h +
call sub_100D2E9  +
push edi  +
push 0A0h  +
call sub_100E6E4  +
push eax  +
lea eax [esi+294h] +
push eax  +
call sub_100D2E9  +
push 0Ah  +
push 0A9h  +
call sub_100E6E4  +
push eax  +
call sub_100DF67  +
and dword ptr [esi+7B4h] 0 +
and dword ptr [esi+7B8h] 0 +
push 41h  +
mov [esi+728h] eax +
push ebx  +
lea eax [esi+730h] +
push eax  +
mov dword ptr [esi+72Ch] 10h +
call sub_100D2E9  +
push edi  +
push 0A8h  +
call sub_100E6E4  +
push eax  +
lea eax [esi+528h] +
push eax  +
call sub_100D2E9  +
push 0Ah  +
push 0A3h  +
call sub_100E6E4  +
push eax  +
call sub_100DF67  +
and dword ptr [esi+0A48h] 0 +
and dword ptr [esi+0A4Ch] 0 +
push 41h  +
mov [esi+9BCh] eax +
push ebx  +
lea eax [esi+9C4h] +
mov dword ptr [esi+9C0h] 10h +
push eax  +
call sub_100D2E9  +
push edi  +
push 9Fh  +
call sub_100E6E4  +
push eax  +
add esi 7BCh +
push esi  +
call sub_100D2E9  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi 0B4h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 0CAh +
jbe loc_1002A1E  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 193h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 1A2h +
jbe loc_1002A4C  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 1A4h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 1B3h +
jbe loc_1002A7A  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor ebx ebx +
push ebx  +
mov esi offset aBaudrate19200 +
push esi  +
push edi  +
call sub_100D279  +
test eax eax +
jnz loc_1002B02  +
push ebx  +
mov esi offset aBaudrate38400 +
push esi  +
push edi  +
call sub_100D279  +
test eax eax +
jnz loc_1002B02  +
push ebx  +
mov esi offset aBaudrate57600 +
push esi  +
push edi  +
call sub_100D279  +
test eax eax +
jnz loc_1002B02  +
push ebx  +
mov esi offset aBaudrate115200 +
push esi  +
push edi  +
call sub_100D279  +
test eax eax +
jnz loc_1002B02  +
push ebx  +
mov esi offset aBaudrate9600 +
push esi  +
push edi  +
call sub_100D279  +
test eax eax +
jz loc_1002B10  +
push 0FEh  +
push esi  +
push [ebp+arg_4]  +
call sub_100D2E9  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi 285h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 2A7h +
jbe loc_1002B24  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 2A8h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 2C4h +
jbe loc_1002B52  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+lpString] 0 +
push esi  +
mov esi 1388h +
push 2710h  +
call sub_100CBB3  +
mov [ebp+lpString] eax +
test eax eax +
jnz loc_1002BA8  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_1002C26  +
push [ebp+lpFileName]  +
push esi  +
push eax  +
push offset word_10013EC  +
push [ebp+lpKeyName]  +
push [ebp+lpAppName]  +
call ds:GetPrivateProfileStringW  +
lea ecx [esi-2] +
cmp eax ecx +
jnz loc_1002BE1  +
add esi 64h +
cmp [ebp+lpString] 0 +
jz loc_1002BDB  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
and [ebp+lpString] 0 +
lea eax [esi+esi] +
push eax  +
jmp loc_1002B8D  +
push 0  +
push [ebp+lpString]  +
call sub_100C9B2  +
mov ecx 0FEh +
cmp eax ecx +
ja loc_1002C0D  +
push ecx  +
push [ebp+lpString]  +
push [ebp+arg_C]  +
call sub_100D2E9  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
xor eax eax +
jmp loc_1002C29  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push 0E80h  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push esi  +
mov esi 384h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 3A4h +
jbe loc_1002C3B  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi 3CAh +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 3E8h +
jbe loc_1002C69  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and dword ptr [ebp+Start] 0 +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 1FAh  +
mov [ebp+var_208] eax +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
push 0  +
push edi  +
push esi  +
call sub_100D279  +
pop edi  +
pop esi  +
test eax eax +
jnz loc_1002CE4  +
inc eax  +
jmp loc_1002D44  +
push 0FFh  +
push eax  +
lea eax [ebp+Start] +
push eax  +
call sub_100D2E9  +
push 20h  +
lea eax [ebp+Start] +
push eax  +
call ds:StrChrW  +
test eax eax +
jnz loc_1002D10  +
push 0FEh  +
jmp loc_1002D30  +
lea ecx [ebp+Start] +
sub eax ecx +
sar eax 1 +
mov ecx 0FEh +
cmp eax ecx +
jle loc_1002D25  +
mov eax ecx +
xor edx edx +
mov [ebp+eax*2+Start] dx +
push ecx  +
lea eax [ebp+Start] +
push eax  +
push [ebp+var_208]  +
call sub_100D2E9  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_100C0EF  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi 7E9h +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 807h +
jbe loc_1002D5F  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
or [ebp+phkResult] 0FFFFFFFFh +
or [ebp+hKey] 0FFFFFFFFh +
push ebx  +
push esi  +
push edi  +
push 17h  +
pop ecx  +
mov esi offset aHardwareDescri +
lea edi [ebp+SubKey] +
movs   +
push 1A0h  +
mov [ebp+lpString] eax +
xor ebx ebx +
lea eax [ebp+var_3AA] +
push ebx  +
push eax  +
movs   +
call memset  +
push 200h  +
lea eax [ebp+var_204] +
push ebx  +
push eax  +
mov [ebp+dwBytes] 0FFh +
mov dword ptr [ebp+MachineName] ebx +
call memset  +
add esp 18h +
push 1FCh  +
mov [ebp+lpData] ebx +
call sub_100CBB3  +
mov [ebp+lpData] eax +
cmp eax ebx +
jnz loc_1002E3F  +
push 8  +
call ds:SetLastError  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
mov edi 0FFFFh +
jmp loc_1002FFB  +
push eax  +
call sub_100CC5C  +
mov ecx [ebp+lpData] +
cmp eax ebx +
jz loc_1002E55  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002E4F  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
lea eax [ebp+MachineName] +
jz loc_1002E91  +
mov esi 102h +
push esi  +
push offset Str2  +
push eax  +
call sub_100D2E9  +
push esi  +
push [ebp+lpString]  +
lea eax [ebp+MachineName] +
push eax  +
call sub_100D32C  +
jmp loc_1002EA2  +
push 102h  +
push [ebp+lpString]  +
push eax  +
call sub_100D2E9  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
lea eax [ebp+MachineName] +
push eax  +
call ds:RegConnectRegistryW  +
test eax eax +
jnz loc_1002E35  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1002E35  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+lpData]  +
mov edi offset ValueName +
push ebx  +
push ebx  +
push edi  +
push [ebp+phkResult]  +
call esi  +
cmp eax 0EAh +
jnz loc_1002F68  +
lea eax [ebp+lpData] +
push eax  +
call sub_100CF4F  +
push [ebp+dwBytes]  +
call sub_100CBB3  +
mov [ebp+lpData] eax +
cmp eax ebx +
jz loc_1002E19  +
push eax  +
call sub_100CC5C  +
mov ecx [ebp+lpData] +
cmp eax ebx +
jz loc_1002F50  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1002F4A  +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+lpData]  +
push ebx  +
push ebx  +
push edi  +
push [ebp+phkResult]  +
call esi  +
cmp eax ebx +
jnz loc_1002E35  +
mov ecx [ebp+lpData] +
mov edx [ebp+dwBytes] +
push ebx  +
xor eax eax +
push offset aX86  +
mov [ecx+edx*2-2] ax +
push [ebp+lpData]  +
call sub_100D279  +
test eax eax +
jz loc_1002F9C  +
xor edi edi +
jmp loc_1002FFB  +
push ebx  +
push offset aIa64  +
push [ebp+lpData]  +
call sub_100D279  +
test eax eax +
jz loc_1002FB5  +
push 6  +
jmp loc_1002FFA  +
push ebx  +
push offset aAmd64  +
push [ebp+lpData]  +
call sub_100D279  +
test eax eax +
jnz loc_1002FF8  +
push ebx  +
push offset aEm64t  +
push [ebp+lpData]  +
call sub_100D279  +
test eax eax +
jnz loc_1002FF8  +
push ebx  +
push offset aIntel64  +
push [ebp+lpData]  +
call sub_100D279  +
test eax eax +
jz loc_1002E35  +
push 9  +
pop edi  +
cmp [ebp+phkResult] 0FFFFFFFFh +
mov esi ds:RegCloseKey +
jz loc_1003012  +
push [ebp+phkResult]  +
call esi  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_1003023  +
push [ebp+hKey]  +
call esi  +
cmp [ebp+lpData] ebx +
jz loc_1003037  +
lea eax [ebp+lpData] +
push eax  +
call sub_100CF4F  +
cmp edi 0FFFFh +
jnz loc_1003059  +
push 80Ah  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_1002D85  +
cmp eax 0FFFFh +
jnz loc_100308A  +
xor eax eax +
inc eax  +
jmp loc_10030AD  +
cmp eax 6 +
jnz loc_10030AB  +
push 809h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1003085  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_10030C9  +
push [ebp+lpString]  +
call sub_1010EEF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpStart] 0 +
jnz loc_10030E1  +
xor eax eax +
jmp loc_100312E  +
push esi  +
mov esi ds:StrChrW +
push 3Dh  +
push [ebp+lpStart]  +
call esi  +
test eax eax +
jz loc_100312B  +
push 22h  +
push eax  +
call esi  +
mov esi eax +
test esi esi +
jz loc_100312B  +
push 22h  +
push 0  +
push esi  +
call ds:StrRChrW  +
test eax eax +
jz loc_100312B  +
cmp eax esi +
jbe loc_100312B  +
inc esi  +
inc esi  +
sub eax esi +
sar eax 1 +
push eax  +
push esi  +
inc eax  +
push eax  +
push [ebp+arg_4]  +
call wcsncpy_s  +
mov eax [ebp+arg_4] +
add esp 10h +
jmp loc_100312D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_100314D  +
cmp ecx 7FFFFFFFh +
jbe loc_1003152  +
mov eax 80070057h +
test eax eax +
jl loc_100318F  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100317F  +
cmp eax esi +
ja loc_100317F  +
jnz loc_100318A  +
jmp loc_1003184  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 424h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_14] +
mov [ebp+lpUserName] eax +
mov eax [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+lpPassword] eax +
mov eax [ebp+arg_C] +
xor ebx ebx +
push 1FAh  +
mov [ebp+var_424] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+lpString1] edi +
mov dword ptr [ebp+FileName] ebx +
call memset  +
or [ebp+hKey] 0FFFFFFFFh +
or [ebp+phkResult] 0FFFFFFFFh +
push 1F8h  +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+lpMem] ebx +
mov [ebp+sz] ebx +
call memset  +
xor ecx ecx +
add esp 18h +
inc ecx  +
mov [ebp+cbData] 0FEh +
mov [ebp+Type] ebx +
mov [esi] ecx +
mov edx 1FEh +
lea eax [ebp+FileName] +
mov [eax] bl +
inc eax  +
dec edx  +
jnz loc_100323E  +
push ebx  +
push ecx  +
push offset dword_1001344  +
push edi  +
call sub_100C9D3  +
mov edi ds:__iob_func +
test eax eax +
jz loc_100335E  +
push ebx  +
push [ebp+lpUserName]  +
call sub_100C9B2  +
test eax eax +
jz loc_100327E  +
push [ebp+lpUserName]  +
call sub_100CC5C  +
shr eax 1 +
jmp loc_1003283  +
mov eax 100h +
push [ebp+arg_10]  +
push 0FEh  +
push [ebp+lpPassword]  +
push eax  +
push [ebp+lpUserName]  +
push dword ptr [ebp+lpString1]  +
call sub_10110C7  +
mov [ebp+lpUserName] eax +
cmp eax ebx +
jnz loc_10032D7  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
mov eax [ebp+lpPassword] +
mov ecx 0FEh +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10032CC  +
jmp loc_1003614  +
call ds:GetLastError  +
cmp eax 4C3h +
jz loc_10032ED  +
cmp eax 50010001h +
jnz loc_10032FF  +
jmp loc_10032FD  +
push 20004h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
mov [esi] ebx +
mov eax [ebp+lpPassword] +
mov ecx 0FEh +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100330A  +
push dword ptr [ebp+lpString1]  +
call sub_1003071  +
cmp eax 1 +
jnz loc_100332B  +
mov [ebp+lpUserName] ebx +
jmp loc_1003614  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
push dword ptr [ebp+lpString1]  +
call ds:RegConnectRegistryW  +
test eax eax +
jz loc_1003397  +
call sub_100C783  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1003320  +
push dword ptr [ebp+lpString1]  +
call sub_1003071  +
cmp eax 1 +
jz loc_1003320  +
lea eax [ebp+hKey] +
push eax  +
push 80000002h  +
push ebx  +
call ds:RegConnectRegistryW  +
test eax eax +
jz loc_1003397  +
call sub_100C783  +
push 20001h  +
call ds:__iob_func  +
jmp loc_1003353  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push offset SubKey  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jz loc_10033BF  +
push ebx  +
call ds:SetLastError  +
jmp loc_1003347  +
mov eax [ebp+cbData] +
add eax eax +
push eax  +
call sub_100CBB3  +
mov dword ptr [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_10033E9  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_1003320  +
push eax  +
call sub_100CC5C  +
mov ecx dword ptr [ebp+lpMem] +
cmp eax ebx +
jz loc_10033FF  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_10033F9  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [ebp+lpMem]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aBootdir  +
push [ebp+phkResult]  +
call esi  +
cmp eax 0EAh +
jnz loc_1003452  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
mov eax [ebp+cbData] +
add eax eax +
push eax  +
call sub_100CBB3  +
mov dword ptr [ebp+lpMem] eax +
cmp eax ebx +
jz loc_10033D7  +
push dword ptr [ebp+lpMem]  +
call sub_100CC5C  +
mov ecx dword ptr [ebp+lpMem] +
cmp eax ebx +
jz loc_100346D  +
mov [ecx] bl +
inc ecx  +
dec eax  +
jnz loc_1003467  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [ebp+lpMem]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aBootdir  +
push [ebp+phkResult]  +
call esi  +
cmp eax ebx +
jz loc_10034BA  +
push eax  +
call ds:SetLastError  +
call sub_100C783  +
push 8Ah  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1003320  +
mov ecx dword ptr [ebp+lpMem] +
mov edx [ebp+cbData] +
xor eax eax +
mov esi 0FEh +
push esi  +
mov [ecx+edx*2-2] ax +
push dword ptr [ebp+lpMem]  +
lea eax [ebp+sz] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+sz] +
push eax  +
call ds:CharUpperW  +
push ebx  +
push 1  +
push offset dword_1001344  +
push dword ptr [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_1003549  +
mov ecx dword ptr [ebp+lpMem] +
push 24h  +
pop eax  +
mov [ecx+2] ax +
mov ecx dword ptr [ebp+lpMem] +
xor eax eax +
mov [ecx+4] ax +
push dword ptr [ebp+lpMem]  +
lea eax [ebp+FileName] +
push dword ptr [ebp+lpString1]  +
push offset aSSBoot_ini  +
push 0FFh  +
push eax  +
call sub_1003137  +
add esp 14h +
jmp loc_1003568  +
push dword ptr [ebp+lpMem]  +
lea eax [ebp+FileName] +
push offset aSboot_ini  +
push 0FFh  +
push eax  +
call sub_1003137  +
add esp 10h +
lea eax [ebp+FileName] +
push offset aR  +
push eax  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_100349F  +
push eax  +
call ds:fclose  +
pop ecx  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFileAttributesW  +
mov dwFileAttributes eax +
cmp eax 0FFFFFFFFh +
jz loc_1003347  +
lea eax [ebp+FileName] +
push 180h  +
push eax  +
call ds:_wchmod  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_10035E9  +
lea eax [ebp+sz] +
push eax  +
push 8Bh  +
call sub_100E6E4  +
push eax  +
push 1  +
push 1  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_1003320  +
cmp eax ebx +
jz loc_10035F7  +
push 8Bh  +
jmp loc_10034A4  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+var_424]  +
call sub_100D2E9  +
mov [ebp+lpUserName] 1 +
cmp dword ptr [ebp+lpMem] ebx +
jz loc_1003628  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
cmp [ebp+phkResult] 0FFFFFFFFh +
mov esi ds:RegCloseKey +
jz loc_100363F  +
push [ebp+phkResult]  +
call esi  +
cmp [ebp+hKey] 0FFFFFFFFh +
jz loc_1003650  +
push [ebp+hKey]  +
call esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+lpUserName] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push esi  +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_204] +
push eax  +
mov esi 24Eh +
call sub_1003071  +
cmp eax 1 +
jz loc_10036D6  +
push esi  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc esi  +
cmp esi 274h +
jbe loc_10036B5  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100C0EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0AACh +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi 1F8h +
push edi  +
mov [ebp+var_A9C] eax +
lea eax [ebp+var_5F8] +
push ebx  +
push eax  +
mov [ebp+var_AA4] ebx +
mov [ebp+var_AA0] ebx +
mov [ebp+var_AAC] ebx +
mov [ebp+var_A98] ebx +
mov [ebp+var_A8C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_A84] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
lea esi [edi+2] +
push esi  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push edi  +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_7F8] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov [ebp+var_A90] ebx +
mov [ebp+var_AA8] ebx +
mov [ebp+var_7FC] ebx +
call memset  +
add esp 30h +
mov ecx 280h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10037AD  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_AAC] +
push 8  +
mov [ebp+var_A50] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_A2C] +
inc esi  +
push eax  +
mov [ebp+var_A5C] offset aRaw +
mov [ebp+var_A74] 0Ah +
mov [ebp+var_A64] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_9DC] +
push eax  +
mov [ebp+var_A0C] offset aS +
mov [ebp+var_A1C] 12000h +
mov [ebp+var_A18] ebx +
mov [ebp+var_A24] esi +
mov [ebp+var_A14] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_98C] +
push eax  +
mov [ebp+var_9BC] offset aU +
mov [ebp+var_9CC] 12000h +
mov [ebp+var_9C8] ebx +
mov [ebp+var_9D4] esi +
mov [ebp+var_9C4] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_960] eax +
push edi  +
lea eax [ebp+var_93C] +
push eax  +
mov [ebp+var_96C] offset aP +
mov [ebp+var_97C] 10h +
mov [ebp+var_978] ebx +
mov [ebp+var_984] esi +
mov [ebp+var_974] esi +
mov [ebp+var_95C] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_AA4] +
push 8  +
mov [ebp+var_910] eax +
push edi  +
lea eax [ebp+var_8EC] +
push eax  +
mov [ebp+var_91C] offset a?H +
mov [ebp+var_92C] 20000h +
mov [ebp+var_928] ebx +
mov [ebp+var_934] 0Ah +
mov [ebp+var_924] esi +
call sub_100D2A6  +
lea eax [ebp+var_A98] +
push 8  +
mov [ebp+var_8C0] eax +
push edi  +
lea eax [ebp+var_89C] +
push eax  +
mov [ebp+var_8CC] offset aId +
mov [ebp+var_8DC] 82000h +
mov [ebp+var_8D8] ebx +
mov [ebp+var_8E4] 3 +
mov [ebp+var_8D4] esi +
call sub_100D2A6  +
mov [ebp+var_87C] offset word_10013EC +
lea eax [ebp+String] +
push 8  +
mov [ebp+var_870] eax +
push edi  +
lea eax [ebp+var_84C] +
push eax  +
mov [ebp+var_88C] 0C0000h +
mov [ebp+var_888] ebx +
mov [ebp+var_894] esi +
mov [ebp+var_884] esi +
mov [ebp+var_86C] 0FEh +
call sub_100D2A6  +
push ebx  +
lea eax [ebp+var_AA8] +
mov [ebp+var_820] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 8  +
push ebx  +
push [ebp+var_A9C]  +
mov [ebp+var_82C] offset aA +
push [ebp+arg_0]  +
mov [ebp+var_844] 0Ah +
mov [ebp+var_834] esi +
call sub_1010470  +
test eax eax +
jnz loc_10039FB  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1004040  +
mov eax [ebp+var_A00] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_9B0] +
mov [ebp+var_A84] eax +
cmp eax ebx +
jnz loc_1003A2B  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_A84] eax +
cmp eax ebx +
jz loc_10039E2  +
push 3  +
pop edi  +
push edi  +
push [ebp+lpMem]  +
call sub_100E40E  +
push edi  +
push [ebp+var_A84]  +
call sub_100E40E  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_100E40E  +
cmp [ebp+var_AA4] esi +
jnz loc_1003A7F  +
cmp [ebp+arg_0] edi +
jbe loc_1003A7F  +
push 0B3h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004040  +
cmp [ebp+var_A10] ebx +
jz loc_1003AB6  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1003AB6  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004028  +
cmp [ebp+var_9C0] ebx +
jz loc_1003AD5  +
push ebx  +
push [ebp+var_A84]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1003AD5  +
push 30Fh  +
jmp loc_1003A9C  +
cmp [ebp+var_A10] ebx +
jnz loc_1003AEC  +
cmp [ebp+var_9C0] ebx +
jz loc_1003AF4  +
push 30Bh  +
jmp loc_1003A9C  +
cmp [ebp+var_9C0] ebx +
jnz loc_1003B03  +
cmp [ebp+var_970] ebx +
jz loc_1003B03  +
push 30Ch  +
jmp loc_1003A9C  +
push [ebp+lpMem]  +
cmp [ebp+var_AA4] ebx +
jz loc_1003B2A  +
call sub_1003071  +
cmp eax esi +
jz loc_1004028  +
call sub_1002A16  +
xor esi esi +
jmp loc_1004028  +
call sub_1010CD3  +
test eax eax +
jz loc_1003B60  +
call sub_10107D7  +
test eax eax +
jnz loc_1003B60  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_1004040  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1003BE3  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_1003BE3  +
push edi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_A9C] eax +
cmp eax ebx +
jnz loc_1003BC4  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1003BC4  +
push 0E7Dh  +
jmp loc_1003A9C  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_A9C]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_1003C4D  +
cmp [ebp+var_970] ebx +
jz loc_1003C21  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1003C19  +
mov [ebp+var_AA0] esi +
jmp loc_1003C4D  +
cmp [ebp+var_970] ebx +
jnz loc_1003C4D  +
cmp [ebp+var_A10] ebx +
jnz loc_1003C31  +
cmp [ebp+var_9C0] ebx +
jz loc_1003C4D  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_AA0] esi +
call sub_100D2E9  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_1003C88  +
push ebx  +
push [ebp+var_A84]  +
call sub_100C9B2  +
test eax eax +
jz loc_1003C88  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_A90] +
push eax  +
push [ebp+var_AA0]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_A84]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jz loc_1004017  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_A88] eax +
cmp eax ebx +
jnz loc_1003CE8  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1004017  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_A98] +
cmp ecx ebx +
jbe loc_1003FEC  +
cmp ecx eax +
ja loc_1003FEC  +
cmp [ebp+var_A88] ebx +
jz loc_1003FD8  +
dec ecx  +
push ecx  +
push [ebp+var_A88]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_A9C] eax +
call sub_100C9B2  +
mov edi eax +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
add edi eax +
lea eax [edi+edi+14h] +
push eax  +
call sub_100CBB3  +
mov [ebp+var_A8C] eax +
cmp eax ebx +
jnz loc_1003D68  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1003FFF  +
push eax  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_A9C]  +
push [ebp+var_A8C]  +
call sub_100D2E9  +
cmp [ebp+var_AA8] ebx +
jnz loc_1003E0E  +
push 22h  +
push [ebp+var_A8C]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jnz loc_1003E08  +
push 829h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_A88] +
push eax  +
call sub_100E82C  +
push [ebp+var_A90]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A84] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A8C] +
jmp loc_100403A  +
xor ecx ecx +
mov [eax+2] cx +
lea eax [ebp+String] +
push eax  +
call ds:CharLowerW  +
push [ebp+var_A8C]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset String  +
push [ebp+var_A8C]  +
call sub_100D32C  +
push [ebp+var_A8C]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_A8C]  +
call sub_100D32C  +
push ebx  +
push [ebp+var_A8C]  +
call sub_100C9B2  +
mov ecx 0FEh +
cmp eax ecx +
jbe loc_1003E93  +
push ecx  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_1003DBC  +
mov eax [ebp+var_A98] +
dec eax  +
push eax  +
push [ebp+var_A88]  +
call sub_100EE7C  +
mov eax [ebp+var_A98] +
push 0FFh  +
push [ebp+var_A8C]  +
dec eax  +
push eax  +
push [ebp+var_A88]  +
call sub_100EE02  +
lea eax [ebp+var_A8C] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_A88]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1003F03  +
lea eax [ebp+var_A88] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1003CD7  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_1003F98  +
push [ebp+var_A98]  +
push 0CBh  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_A88] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_A90]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A84] +
push eax  +
call sub_100CF4F  +
xor eax eax +
jmp loc_1004042  +
push 84h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_A88] +
push eax  +
call sub_100E82C  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1004017  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
jmp loc_1003D5A  +
push 7Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_A88] +
push eax  +
call sub_100E82C  +
push [ebp+var_A90]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A84] +
push eax  +
call sub_100CF4F  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov esi 1F8h +
push esi  +
mov [ebp+var_61C] eax +
lea eax [ebp+var_224] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov [ebp+var_60C] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
push esi  +
lea eax [ebp+var_420] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
add esp 18h +
push 9  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_28] +
mov dword ptr [ebp+String] ebx +
stos   +
mov [ebp+var_614] ebx +
mov [ebp+var_624] ebx +
mov [ebp+var_620] ebx +
mov [ebp+var_610] ebx +
mov [ebp+var_618] ebx +
lea ecx [esi-18h] +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10040EB  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_624] +
push 8  +
mov [ebp+var_5D8] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_5B4] +
inc esi  +
push eax  +
mov [ebp+var_5E4] offset KeyName +
mov [ebp+var_5FC] 0Ah +
mov [ebp+var_5EC] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_564] +
push eax  +
mov [ebp+var_594] offset aS +
mov [ebp+var_5A4] 12000h +
mov [ebp+var_5A0] ebx +
mov [ebp+var_5AC] esi +
mov [ebp+var_59C] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_514] +
push eax  +
mov [ebp+var_544] offset aU +
mov [ebp+var_554] 12000h +
mov [ebp+var_550] ebx +
mov [ebp+var_55C] esi +
mov [ebp+var_54C] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_4E8] eax +
push edi  +
lea eax [ebp+var_4C4] +
push eax  +
mov [ebp+var_4F4] offset aP +
mov [ebp+var_504] 10h +
mov [ebp+var_500] ebx +
mov [ebp+var_50C] esi +
mov [ebp+var_4FC] esi +
mov [ebp+var_4E4] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_614] +
push 8  +
mov [ebp+var_498] eax +
push edi  +
lea eax [ebp+var_474] +
push eax  +
mov [ebp+var_4A4] offset word_10013EC +
mov [ebp+var_4B4] 0C0000h +
mov [ebp+var_4B0] ebx +
mov [ebp+var_4BC] 3 +
mov [ebp+var_4AC] esi +
call sub_100D2A6  +
lea eax [ebp+var_618] +
push ebx  +
mov [ebp+var_448] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push ebx  +
push [ebp+var_61C]  +
mov [ebp+var_454] offset a?H +
mov [ebp+var_464] 20000h +
mov [ebp+var_460] ebx +
mov [ebp+var_46C] 0Ah +
mov [ebp+var_45C] esi +
push [ebp+arg_0]  +
call sub_1010470  +
test eax eax +
jnz loc_10042B9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1004667  +
mov eax [ebp+var_588] +
mov [ebp+lpString] eax +
mov eax [ebp+var_538] +
mov [ebp+var_60C] eax +
cmp eax ebx +
jnz loc_10042E9  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_60C] eax +
cmp eax ebx +
jz loc_10042A0  +
push 3  +
push [ebp+lpString]  +
call sub_100E40E  +
push 3  +
push [ebp+var_60C]  +
call sub_100E40E  +
cmp [ebp+var_618] esi +
jnz loc_1004330  +
cmp [ebp+arg_0] 3 +
jbe loc_1004330  +
push 1B5h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004667  +
cmp [ebp+var_598] ebx +
jz loc_100437F  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100437F  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_60C] +
push eax  +
call sub_100CF4F  +
jmp loc_1004667  +
cmp [ebp+var_548] ebx +
jz loc_100439E  +
push ebx  +
push [ebp+var_60C]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100439E  +
push 30Fh  +
jmp loc_100434D  +
cmp [ebp+var_598] ebx +
jnz loc_10043B8  +
cmp [ebp+var_548] ebx +
jz loc_10043C0  +
push 30Bh  +
jmp loc_1004316  +
cmp [ebp+var_548] ebx +
jnz loc_10043D2  +
cmp [ebp+var_4F8] ebx +
jz loc_10043D2  +
push 30Ch  +
jmp loc_100434D  +
cmp [ebp+var_614] 3E7h +
jbe loc_10043E8  +
push 1B9h  +
jmp loc_100434D  +
push [ebp+lpString]  +
cmp [ebp+var_618] ebx +
jz loc_100440F  +
call sub_1003071  +
cmp eax esi +
jz loc_1004362  +
call sub_1002A44  +
xor esi esi +
jmp loc_1004362  +
call sub_1010CD3  +
test eax eax +
jz loc_100445D  +
call sub_10107D7  +
test eax eax +
jnz loc_100445D  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_60C] +
push eax  +
call sub_100CF4F  +
call sub_100D1D6  +
jmp loc_1004667  +
push [ebp+lpString]  +
call sub_1010CD3  +
test eax eax +
jnz loc_10044C7  +
cmp [ebp+var_4F8] ebx +
jz loc_100449B  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1004493  +
mov [ebp+var_620] esi +
jmp loc_10044C7  +
cmp [ebp+var_4F8] ebx +
jnz loc_10044C7  +
cmp [ebp+var_598] ebx +
jnz loc_10044AB  +
cmp [ebp+var_548] ebx +
jz loc_10044C7  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_620] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpString]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_100454A  +
push 3  +
push offset asc_1001584  +
push [ebp+lpString]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_100454A  +
push edi  +
push [ebp+lpString]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_61C] eax +
cmp eax ebx +
jnz loc_100452B  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpString]  +
call sub_100C9D3  +
test eax eax +
jz loc_100452B  +
push 0E7Dh  +
jmp loc_1004316  +
push [ebp+lpString]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_61C]  +
push [ebp+lpString]  +
call sub_100D2E9  +
lea eax [ebp+var_610] +
push eax  +
push [ebp+var_620]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_60C]  +
push [ebp+lpString]  +
call sub_1003196  +
test eax eax +
jnz loc_1004590  +
push [ebp+var_610]  +
push [ebp+lpString]  +
call sub_10030B6  +
jmp loc_1004362  +
push [ebp+lpString]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_10045CB  +
push ebx  +
push [ebp+var_60C]  +
call sub_100C9B2  +
test eax eax +
jz loc_10045CB  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push 0Ah  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_614]  +
call ds:_itow  +
add esp 0Ch +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset KeyName  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1004634  +
push 7Eh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_610]  +
push [ebp+lpString]  +
call sub_10030B6  +
jmp loc_1004408  +
push 9Ah  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_610]  +
push [ebp+lpString]  +
call sub_10030B6  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80Ch +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 1F8h  +
mov [ebp+var_7F8] eax +
lea eax [ebp+var_5FC] +
push ebx  +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+var_7EC] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
mov esi 1FAh +
push esi  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_800] ebx +
mov [ebp+var_80C] ebx +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov [ebp+var_7F4] ebx +
mov [ebp+var_7E8] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 24h +
mov [ebp+lpString] ebx +
mov [ebp+var_7F0] ebx +
mov [ebp+var_808] ebx +
lea ecx [esi-1Ah] +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004729  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_80C] +
push 8  +
mov [ebp+var_7B4] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_790] +
inc esi  +
push eax  +
mov [ebp+var_7C0] offset aDefault +
mov [ebp+var_7D8] 0Ah +
mov [ebp+var_7C8] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_740] +
push eax  +
mov [ebp+var_770] offset aS +
mov [ebp+var_780] 12000h +
mov [ebp+var_77C] ebx +
mov [ebp+var_788] esi +
mov [ebp+var_778] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_6F0] +
push eax  +
mov [ebp+var_720] offset aU +
mov [ebp+var_730] 12000h +
mov [ebp+var_72C] ebx +
mov [ebp+var_738] esi +
mov [ebp+var_728] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_6C4] eax +
push edi  +
lea eax [ebp+var_6A0] +
push eax  +
mov [ebp+var_6D0] offset aP +
mov [ebp+var_6E0] 10h +
mov [ebp+var_6DC] ebx +
mov [ebp+var_6E8] esi +
mov [ebp+var_6D8] esi +
mov [ebp+var_6C0] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_800] +
push 8  +
mov [ebp+var_674] eax +
push edi  +
lea eax [ebp+var_650] +
push eax  +
mov [ebp+var_680] offset aId +
mov [ebp+var_690] 82000h +
mov [ebp+var_68C] ebx +
mov [ebp+var_698] 3 +
mov [ebp+var_688] esi +
call sub_100D2A6  +
lea eax [ebp+var_808] +
push ebx  +
mov [ebp+var_624] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push ebx  +
push [ebp+var_7F8]  +
mov [ebp+var_630] offset a?H +
mov [ebp+var_640] 20000h +
mov [ebp+var_63C] ebx +
mov [ebp+var_648] 0Ah +
mov [ebp+var_638] esi +
push [ebp+arg_0]  +
call sub_1010470  +
test eax eax +
jnz loc_10048F7  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1004EDE  +
mov eax [ebp+var_764] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_714] +
mov [ebp+var_7EC] eax +
cmp eax ebx +
jnz loc_1004927  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_7EC] eax +
cmp eax ebx +
jz loc_10048DE  +
push 3  +
push [ebp+lpMem]  +
call sub_100E40E  +
push 3  +
push [ebp+var_7EC]  +
call sub_100E40E  +
cmp [ebp+var_808] esi +
jnz loc_100496E  +
cmp [ebp+arg_0] 3 +
jbe loc_100496E  +
push 1B6h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004EDE  +
cmp [ebp+var_774] ebx +
jz loc_10049A5  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10049A5  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004EC6  +
cmp [ebp+var_724] ebx +
jz loc_10049C4  +
push ebx  +
push [ebp+var_7EC]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10049C4  +
push 30Fh  +
jmp loc_100498B  +
cmp [ebp+var_774] ebx +
jnz loc_10049DB  +
cmp [ebp+var_724] ebx +
jz loc_10049E3  +
push 30Bh  +
jmp loc_100498B  +
cmp [ebp+var_724] ebx +
jnz loc_10049F2  +
cmp [ebp+var_6D4] ebx +
jz loc_10049F2  +
push 30Ch  +
jmp loc_100498B  +
push [ebp+lpMem]  +
cmp [ebp+var_808] ebx +
jz loc_1004A19  +
call sub_1003071  +
cmp eax esi +
jz loc_1004EC6  +
call sub_1002A72  +
xor esi esi +
jmp loc_1004EC6  +
call sub_1010CD3  +
test eax eax +
jz loc_1004A67  +
call sub_10107D7  +
test eax eax +
jnz loc_1004A67  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_7EC] +
push eax  +
call sub_100CF4F  +
call sub_100D1D6  +
jmp loc_1004EDE  +
cmp [ebp+var_800] ebx +
ja loc_1004A79  +
push 1B8h  +
jmp loc_100498B  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_1004AE3  +
cmp [ebp+var_6D4] ebx +
jz loc_1004AB7  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1004AAF  +
mov [ebp+var_7F4] esi +
jmp loc_1004AE3  +
cmp [ebp+var_6D4] ebx +
jnz loc_1004AE3  +
cmp [ebp+var_774] ebx +
jnz loc_1004AC7  +
cmp [ebp+var_724] ebx +
jz loc_1004AE3  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_7F4] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1004B66  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_1004B66  +
push edi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_7F8] eax +
cmp eax ebx +
jnz loc_1004B47  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1004B47  +
push 0E7Dh  +
jmp loc_100498B  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_7F8]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
lea eax [ebp+var_7F0] +
push eax  +
push [ebp+var_7F4]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_7EC]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jz loc_1004EB5  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_1004BD5  +
push ebx  +
push [ebp+var_7EC]  +
call sub_100C9B2  +
test eax eax +
jz loc_1004BD5  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100E7B7  +
mov [ebp+var_7E8] eax +
cmp eax ebx +
jnz loc_1004C01  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1004EB5  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_7E8] eax +
cmp eax ebx +
jz loc_1004E9D  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_800] +
cmp ecx ebx +
jbe loc_1004E87  +
cmp ecx eax +
ja loc_1004E87  +
cmp [ebp+var_7E8] ebx +
jz loc_1004C5B  +
dec ecx  +
push ecx  +
push [ebp+var_7E8]  +
call sub_100EF86  +
mov [ebp+var_7F8] eax +
cmp eax ebx +
jnz loc_1004C78  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1004E9D  +
push ebx  +
push eax  +
call sub_100C9B2  +
cmp eax 0FEh +
ja loc_1004E80  +
push ebx  +
push ebx  +
call sub_100C9B2  +
cmp eax 0FEh +
ja loc_1004E80  +
push 0FFh  +
push [ebp+var_7F8]  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
mov eax [ebp+var_800] +
add eax 0FFFFFFFEh +
cmp eax ebx +
mov [ebp+var_7F4] eax +
jl loc_1004D32  +
lea ecx [eax+1] +
mov [ebp+var_804] ecx +
jmp loc_1004CD7  +
mov eax [ebp+var_7F4] +
push eax  +
push [ebp+var_7E8]  +
call sub_100EF86  +
push [ebp+var_804]  +
mov [ebp+var_7F8] eax +
push [ebp+var_7E8]  +
call sub_100EE7C  +
push ebx  +
push [ebp+var_7F8]  +
call sub_100C9B2  +
push eax  +
push [ebp+var_7F8]  +
push [ebp+var_804]  +
push [ebp+var_7E8]  +
call sub_100EE02  +
dec [ebp+var_7F4]  +
dec [ebp+var_804]  +
cmp [ebp+var_7F4] ebx +
jge loc_1004CD1  +
push ebx  +
push [ebp+var_7E8]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push eax  +
lea eax [ebp+String] +
push eax  +
push ebx  +
push [ebp+var_7E8]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_7E8]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1004DAF  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_7E8] +
push eax  +
call sub_100E82C  +
push [ebp+var_7F0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1004EC6  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jnz loc_1004DE3  +
push 1B7h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1004D75  +
lea eax [ebp+String] +
push offset asc_10015C0  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1004E02  +
push 829h  +
jmp loc_1004DD0  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset aDefault  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1004E4D  +
push 82h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
jmp loc_1004D81  +
push 1B7h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_7E8] +
push eax  +
call sub_100E82C  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1004D8D  +
push 0E80h  +
jmp loc_1004E8C  +
push 1B8h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_7E8] +
push eax  +
call sub_100E82C  +
push [ebp+var_7F0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_7EC] +
push eax  +
call sub_100CF4F  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 14FCh +
call __alloca_probe  +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 1F8h +
push esi  +
mov [ebp+var_14E4] eax +
lea eax [ebp+var_11F8] +
push ebx  +
push eax  +
mov [ebp+var_14EC] ebx +
mov [ebp+var_14F0] ebx +
mov [ebp+var_14F4] ebx +
mov [ebp+var_14E0] ebx +
mov [ebp+var_14D4] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_14DC] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
push esi  +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
add esi 2 +
push esi  +
lea eax [ebp+var_DFC] +
push ebx  +
push eax  +
mov [ebp+var_E00] ebx +
call memset  +
push esi  +
lea eax [ebp+var_9FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+String2] ebx +
call memset  +
push esi  +
lea eax [ebp+var_FFC] +
push ebx  +
push eax  +
mov [ebp+var_1000] ebx +
call memset  +
push esi  +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov [ebp+var_400] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_BFC] +
push ebx  +
push eax  +
mov [ebp+var_C00] ebx +
call memset  +
push esi  +
lea eax [ebp+var_7FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_5FC] +
push ebx  +
push eax  +
mov [ebp+var_600] ebx +
call memset  +
add esp 24h +
xor eax eax +
lea edi [ebp+var_14F8] +
mov [ebp+var_14FC] ebx +
stos   +
mov [ebp+var_14D8] ebx +
mov ecx 2D0h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100502F  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_14F4] +
push 8  +
mov [ebp+var_14A0] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_147C] +
inc esi  +
push eax  +
mov [ebp+var_14AC] offset aDebug +
mov [ebp+var_14C4] 0Ah +
mov [ebp+var_14B4] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_142C] +
push eax  +
mov [ebp+var_145C] offset aS +
mov [ebp+var_146C] 12000h +
mov [ebp+var_1468] ebx +
mov [ebp+var_1474] esi +
mov [ebp+var_1464] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_13DC] +
push eax  +
mov [ebp+var_140C] offset aU +
mov [ebp+var_141C] 12000h +
mov [ebp+var_1418] ebx +
mov [ebp+var_1424] esi +
mov [ebp+var_1414] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_13B0] eax +
push edi  +
lea eax [ebp+var_138C] +
push eax  +
mov [ebp+var_13BC] offset aP +
mov [ebp+var_13CC] 10h +
mov [ebp+var_13C8] ebx +
mov [ebp+var_13D4] esi +
mov [ebp+var_13C4] esi +
mov [ebp+var_13AC] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_14EC] +
push 8  +
mov [ebp+var_1360] eax +
push edi  +
lea eax [ebp+var_133C] +
push eax  +
mov [ebp+var_136C] offset a?H +
mov [ebp+var_137C] 20000h +
mov [ebp+var_1378] ebx +
mov [ebp+var_1384] 0Ah +
mov [ebp+var_1374] esi +
call sub_100D2A6  +
lea eax [ebp+var_14E0] +
push 8  +
mov [ebp+var_1310] eax +
push edi  +
lea eax [ebp+var_12EC] +
push eax  +
mov [ebp+var_131C] offset aId +
mov [ebp+var_132C] 82000h +
mov [ebp+var_1328] ebx +
mov [ebp+var_1334] 3 +
mov [ebp+var_1324] esi +
call sub_100D2A6  +
mov [ebp+var_12CC] offset aPort +
lea eax [ebp+String2] +
push 8  +
mov [ebp+var_12C0] eax +
push edi  +
lea eax [ebp+var_129C] +
push eax  +
mov [ebp+var_12DC] 20C2h +
mov [ebp+var_12D8] ebx +
mov [ebp+var_12E4] esi +
mov [ebp+var_12D4] esi +
mov [ebp+var_12C4] offset aCom1Com2Com3Co +
mov [ebp+var_12BC] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_C00] +
push 8  +
mov [ebp+var_1270] eax +
push edi  +
lea eax [ebp+var_124C] +
push eax  +
mov [ebp+var_127C] offset aBaud +
mov [ebp+var_128C] 20C2h +
mov [ebp+var_1288] ebx +
mov [ebp+var_1294] esi +
mov [ebp+var_1284] esi +
mov [ebp+var_1274] offset a96001920038400 +
mov [ebp+var_126C] 0FEh +
call sub_100D2A6  +
push ebx  +
lea eax [ebp+var_E00] +
mov [ebp+var_1220] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 9  +
push ebx  +
push [ebp+var_14E4]  +
mov edi offset word_10013EC +
push [ebp+arg_0]  +
mov [ebp+var_122C] edi +
mov [ebp+var_123C] 0C00C0h +
mov [ebp+var_1238] ebx +
mov [ebp+var_1244] esi +
mov [ebp+var_1234] esi +
mov [ebp+var_121C] 0FEh +
call sub_1010470  +
test eax eax +
jnz loc_10052F3  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1005FF8  +
mov eax [ebp+var_1450] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_1400] +
mov [ebp+var_14DC] eax +
cmp eax ebx +
jnz loc_1005323  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_14DC] eax +
cmp eax ebx +
jz loc_10052DA  +
push 3  +
push [ebp+lpMem]  +
call sub_100E40E  +
push 3  +
push [ebp+var_14DC]  +
call sub_100E40E  +
push 3  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100E40E  +
push 3  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100E40E  +
push 3  +
lea eax [ebp+String2] +
push eax  +
call sub_100E40E  +
cmp [ebp+var_14EC] esi +
jnz loc_1005394  +
cmp [ebp+arg_0] 3 +
jbe loc_1005394  +
push 430h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1005FF8  +
cmp [ebp+var_1460] ebx +
jz loc_10053CB  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10053CB  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1005FE0  +
cmp [ebp+var_1410] ebx +
jz loc_10053EA  +
push ebx  +
push [ebp+var_14DC]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10053EA  +
push 30Fh  +
jmp loc_10053B1  +
cmp [ebp+var_1460] ebx +
jnz loc_1005401  +
cmp [ebp+var_1410] ebx +
jz loc_1005409  +
push 30Bh  +
jmp loc_10053B1  +
cmp [ebp+var_1410] ebx +
jnz loc_1005418  +
cmp [ebp+var_13C0] ebx +
jz loc_1005418  +
push 30Ch  +
jmp loc_10053B1  +
push [ebp+lpMem]  +
cmp [ebp+var_14EC] ebx +
jz loc_100543F  +
call sub_1003071  +
cmp eax esi +
jz loc_1005FE0  +
call sub_1002B4A  +
xor esi esi +
jmp loc_1005FE0  +
call sub_1010CD3  +
test eax eax +
jz loc_1005475  +
call sub_10107D7  +
test eax eax +
jnz loc_1005475  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_1005FF8  +
cmp [ebp+var_14E0] ebx +
ja loc_1005487  +
push 1B8h  +
jmp loc_10053B1  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_10054ED  +
cmp [ebp+var_13C0] ebx +
jz loc_10054C5  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_10054BD  +
mov [ebp+var_14F0] esi +
jmp loc_10054ED  +
cmp [ebp+var_13C0] ebx +
jnz loc_10054ED  +
cmp [ebp+var_1460] ebx +
jnz loc_10054D5  +
cmp [ebp+var_1410] ebx +
jz loc_10054ED  +
push 0FEh  +
push edi  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_14F0] esi +
call sub_100D2E9  +
push ebx  +
push esi  +
push offset aOn  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
mov edi offset aEdit +
test eax eax +
jz loc_100553D  +
push ebx  +
push esi  +
push offset aOff  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_100553D  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_100553D  +
push 430h  +
jmp loc_10053B1  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_100557C  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_100557C  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_100557C  +
push 30Ah  +
jmp loc_10053B1  +
call sub_100E7B7  +
mov [ebp+var_14D4] eax +
cmp eax ebx +
jnz loc_10055AC  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1005FE0  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_100562F  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_100562F  +
push edi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_14E4] eax +
cmp eax ebx +
jnz loc_1005610  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1005610  +
push 0E7Dh  +
jmp loc_100537A  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_14E4]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_100566A  +
push ebx  +
push [ebp+var_14DC]  +
call sub_100C9B2  +
test eax eax +
jz loc_100566A  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_14D8] +
push eax  +
push [ebp+var_14F0]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_14DC]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jz loc_1005FCF  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_14D4] eax +
cmp eax ebx +
jz loc_1005FB7  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_14E0] +
cmp ecx ebx +
jbe loc_1005FA1  +
cmp ecx eax +
ja loc_1005FA1  +
push ebx  +
dec ecx  +
push ecx  +
push [ebp+var_14D4]  +
call sub_100EF86  +
push eax  +
call sub_100C9B2  +
mov ecx 0FEh +
cmp eax ecx +
jbe loc_1005717  +
push ecx  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_1005FB7  +
mov eax [ebp+var_14E0] +
mov edi 0FFh +
push edi  +
dec eax  +
push eax  +
push [ebp+var_14D4]  +
call sub_100EF86  +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_100576F  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1005FB7  +
push ebx  +
push esi  +
push offset aOn  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
push ebx  +
test eax eax +
jnz loc_10059F4  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_10057D8  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_10057D8  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_10057D8  +
push 2CAh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
jmp loc_1005FAE  +
push ebx  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1005812  +
push edi  +
push offset String  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D2E9  +
push edi  +
push offset aDebug_0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
lea eax [ebp+var_600] +
push eax  +
push offset aDebugport  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
test eax eax +
jnz loc_100586E  +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100586E  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100586E  +
push [ebp+var_14E0]  +
push 27Ah  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
jmp loc_1005706  +
lea eax [ebp+var_600] +
push eax  +
push offset aDebugport1394  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
mov [ebp+var_14E4] eax +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_10058B2  +
cmp [ebp+var_14E4] ebx +
jnz loc_10058B2  +
push [ebp+var_14E0]  +
push 0E7Fh  +
jmp loc_100585B  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005995  +
lea eax [ebp+var_1000] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_10058F2  +
push 20001h  +
jmp loc_100575B  +
push ebx  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005926  +
push ebx  +
push esi  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1005926  +
push 0C15h  +
jmp loc_10057C7  +
push ebx  +
lea eax [ebp+var_400] +
push eax  +
call sub_100C9B2  +
push edi  +
test eax eax +
push offset String  +
lea eax [ebp+var_400] +
push eax  +
jnz loc_100594B  +
call sub_100D2E9  +
jmp loc_1005950  +
call sub_100D32C  +
push edi  +
push offset aDebugport  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push edi  +
push offset asc_10015C0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
lea eax [ebp+String2] +
push eax  +
call ds:CharLowerW  +
push edi  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1002AA0  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005E27  +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005DC5  +
push [ebp+var_14E0]  +
push 27Bh  +
jmp loc_100585B  +
push esi  +
push offset aOff  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
push ebx  +
test eax eax +
jnz loc_1005B79  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1005B42  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1005B42  +
push ebx  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1005A58  +
push 302h  +
jmp loc_10057C7  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1005FB7  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
push offset aDebugport  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
push ebx  +
push esi  +
push offset aDebugport1394  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1005ABC  +
push 808h  +
jmp loc_10057C7  +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005AE8  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1005FB7  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1002AA0  +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005E27  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jnz loc_1005E27  +
jmp loc_1005FB7  +
lea eax [ebp+var_14D4] +
push eax  +
call sub_100E82C  +
push 430h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1005FCF  +
push esi  +
push offset aEdit_0  +
lea eax [ebp+var_E00] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1005E27  +
push ebx  +
push offset aDebugport1394  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1005BB3  +
push 80Eh  +
jmp loc_10057C7  +
push ebx  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1005BD9  +
push [ebp+var_14E0]  +
push 279h  +
jmp loc_100585B  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
push offset aDebugport  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1005C29  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005B42  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005D70  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
push offset aDebugport  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
push ebx  +
lea eax [ebp+var_600] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1005C89  +
push [ebp+var_14E0]  +
push 277h  +
jmp loc_100585B  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1005FB7  +
push edi  +
push offset String  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D2E9  +
push edi  +
push offset aDebugport  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push edi  +
push offset asc_10015C0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
lea eax [ebp+String2] +
push eax  +
call ds:CharUpperW  +
push edi  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
lea eax [ebp+var_1000] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_1005D42  +
mov edi ds:__iob_func +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
jmp loc_1005FB7  +
push ebx  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005D70  +
push ebx  +
push esi  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_100591C  +
push ebx  +
lea eax [ebp+var_C00] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1005E27  +
push edi  +
push offset dword_1001344  +
lea eax [ebp+var_600] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_1002AA0  +
lea eax [ebp+var_600] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1005FB7  +
push ebx  +
lea eax [ebp+var_400] +
push eax  +
call sub_100C9B2  +
push edi  +
test eax eax +
push offset String  +
lea eax [ebp+var_400] +
push eax  +
jnz loc_1005DEA  +
call sub_100D2E9  +
jmp loc_1005DEF  +
call sub_100D32C  +
push edi  +
push offset aBaudrate  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push edi  +
push offset asc_10015C0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push edi  +
lea eax [ebp+var_C00] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
mov edi eax +
push ebx  +
lea eax [ebp+var_400] +
push eax  +
call sub_100C9B2  +
add edi eax +
mov eax 0FEh +
cmp edi eax +
jbe loc_1005E59  +
push eax  +
push 0C12h  +
jmp loc_100585B  +
push 0FFh  +
lea eax [ebp+var_400] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
mov eax [ebp+var_14E0] +
dec eax  +
push eax  +
push [ebp+var_14D4]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
mov eax [ebp+var_14E0] +
dec eax  +
push eax  +
push [ebp+var_14D4]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_14D4]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1005ED2  +
lea eax [ebp+var_14D4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1005B68  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_1005F4F  +
push [ebp+var_14E0]  +
push 276h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_14D8]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_14D4] +
push eax  +
call sub_100E82C  +
jmp loc_1005FE0  +
call sub_100C783  +
mov edi ds:__iob_func +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
push 84h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_14D4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1005FCF  +
push 1B8h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_14D4] +
push eax  +
call sub_100E82C  +
push [ebp+var_14D8]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_14DC] +
push eax  +
call sub_100CF4F  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1708h +
call __alloca_probe  +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov esi 1FAh +
push esi  +
mov [ebp+var_16F4] eax +
lea eax [ebp+var_1200] +
push ebx  +
push eax  +
mov [ebp+var_1704] ebx +
mov [ebp+var_16F8] ebx +
mov [ebp+var_1708] ebx +
mov [ebp+var_16FC] ebx +
mov [ebp+var_16DC] ebx +
mov [ebp+var_16F0] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_16EC] ebx +
mov [ebp+var_1204] ebx +
call memset  +
push esi  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_600] +
push ebx  +
push eax  +
mov dword ptr [ebp+String1] ebx +
call memset  +
push esi  +
lea eax [ebp+var_800] +
push ebx  +
push eax  +
mov dword ptr [ebp+Start] ebx +
call memset  +
push esi  +
lea eax [ebp+var_C00] +
push ebx  +
push eax  +
mov [ebp+var_C04] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_E00] +
push ebx  +
push eax  +
mov [ebp+var_E04] ebx +
call memset  +
push esi  +
lea eax [ebp+var_1000] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov [ebp+var_16E8] ebx +
mov [ebp+var_1004] ebx +
call memset  +
push esi  +
lea eax [ebp+var_A00] +
push ebx  +
push eax  +
mov [ebp+var_1700] ebx +
mov [ebp+sz] ebx +
call memset  +
push esi  +
lea eax [ebp+var_1400] +
push ebx  +
push eax  +
mov [ebp+var_1404] ebx +
call memset  +
add esp 30h +
mov [ebp+var_16E0] ebx +
mov ecx 2D0h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100615D  +
push 0FFh  +
push offset Buffer  +
lea eax [ebp+var_1204] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_1708] +
push 8  +
mov [ebp+var_16A8] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_1684] +
inc esi  +
push eax  +
mov [ebp+var_16B4] offset aEms +
mov [ebp+var_16CC] 0Ah +
mov [ebp+var_16BC] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_1634] +
push eax  +
mov [ebp+var_1664] offset aS +
mov [ebp+var_1674] 12000h +
mov [ebp+var_1670] ebx +
mov [ebp+var_167C] esi +
mov [ebp+var_166C] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_15E4] +
push eax  +
mov [ebp+var_1614] offset aU +
mov [ebp+var_1624] 12000h +
mov [ebp+var_1620] ebx +
mov [ebp+var_162C] esi +
mov [ebp+var_161C] esi +
call sub_100D2A6  +
lea eax [ebp+var_1204] +
push 8  +
mov [ebp+var_15B8] eax +
push edi  +
lea eax [ebp+var_1594] +
push eax  +
mov [ebp+var_15C4] offset aP +
mov [ebp+var_15D4] 10h +
mov [ebp+var_15D0] ebx +
mov [ebp+var_15DC] esi +
mov [ebp+var_15CC] esi +
mov [ebp+var_15B4] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_1704] +
push 8  +
mov [ebp+var_1568] eax +
push edi  +
lea eax [ebp+var_1544] +
push eax  +
mov [ebp+var_1574] offset a?H +
mov [ebp+var_1584] 20000h +
mov [ebp+var_1580] ebx +
mov [ebp+var_158C] 0Ah +
mov [ebp+var_157C] esi +
call sub_100D2A6  +
lea eax [ebp+var_16FC] +
push 8  +
mov [ebp+var_1518] eax +
push edi  +
lea eax [ebp+var_14F4] +
push eax  +
mov [ebp+var_1524] offset aId +
mov [ebp+var_1534] 2000h +
mov [ebp+var_1530] ebx +
mov [ebp+var_153C] 3 +
mov [ebp+var_152C] esi +
call sub_100D2A6  +
mov [ebp+var_14D4] offset aPort +
lea eax [ebp+String] +
push 8  +
mov [ebp+var_14C8] eax +
push edi  +
lea eax [ebp+var_14A4] +
push eax  +
mov [ebp+var_14E4] 20C2h +
mov [ebp+var_14E0] ebx +
mov [ebp+var_14EC] esi +
mov [ebp+var_14DC] esi +
mov [ebp+var_14CC] offset aCom1Com2Com3_0 +
mov [ebp+var_14C4] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_C04] +
push 8  +
mov [ebp+var_1478] eax +
push edi  +
lea eax [ebp+var_1454] +
push eax  +
mov [ebp+var_1484] offset aBaud +
mov [ebp+var_1494] 20C2h +
mov [ebp+var_1490] ebx +
mov [ebp+var_149C] esi +
mov [ebp+var_148C] esi +
mov [ebp+var_147C] offset a96001920057600 +
mov [ebp+var_1474] 0FEh +
call sub_100D2A6  +
push ebx  +
lea eax [ebp+String1] +
mov [ebp+var_1428] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 9  +
push ebx  +
push [ebp+var_16F4]  +
mov [ebp+var_1434] offset word_10013EC +
push [ebp+arg_0]  +
mov [ebp+var_1444] 0C00C0h +
mov [ebp+var_1440] ebx +
mov [ebp+var_144C] esi +
mov [ebp+var_143C] esi +
mov [ebp+var_1424] 0FEh +
call sub_1010470  +
test eax eax +
jnz loc_1006420  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_100694A  +
mov eax [ebp+var_1658] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_1608] +
mov [ebp+var_16EC] eax +
cmp eax ebx +
jnz loc_1006450  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_16EC] eax +
cmp eax ebx +
jz loc_1006407  +
push 3  +
push [ebp+lpMem]  +
call sub_100E40E  +
push 3  +
push [ebp+var_16EC]  +
call sub_100E40E  +
cmp [ebp+var_1704] esi +
jnz loc_1006497  +
cmp [ebp+arg_0] 3 +
jbe loc_1006497  +
push 431h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100694A  +
cmp [ebp+var_1668] ebx +
jz loc_10064CE  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10064CE  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1006932  +
cmp [ebp+var_1618] ebx +
jz loc_10064ED  +
push ebx  +
push [ebp+var_16EC]  +
call sub_100C9B2  +
test eax eax +
jnz loc_10064ED  +
push 30Fh  +
jmp loc_10064B4  +
cmp [ebp+var_1668] ebx +
jnz loc_1006504  +
cmp [ebp+var_1618] ebx +
jz loc_100650C  +
push 30Bh  +
jmp loc_10064B4  +
cmp [ebp+var_1618] ebx +
jnz loc_100651B  +
cmp [ebp+var_15C8] ebx +
jz loc_100651B  +
push 30Ch  +
jmp loc_10064B4  +
push [ebp+lpMem]  +
cmp [ebp+var_1704] ebx +
jz loc_1006542  +
call sub_1003071  +
cmp eax esi +
jz loc_1006932  +
call sub_1002B1C  +
xor esi esi +
jmp loc_1006932  +
call sub_1010CD3  +
test eax eax +
jz loc_1006578  +
call sub_10107D7  +
test eax eax +
jnz loc_1006578  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_100694A  +
push ebx  +
push esi  +
push offset aOn  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
mov edi offset aEdit +
test eax eax +
jz loc_10065C8  +
push ebx  +
push esi  +
push offset aOff  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_10065C8  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_10065C8  +
push 431h  +
jmp loc_10064B4  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006607  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1006607  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1006607  +
push 30Ah  +
jmp loc_10064B4  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006622  +
cmp [ebp+var_1528] ebx +
jnz loc_10065BE  +
push ebx  +
push esi  +
push offset aOn_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_1006650  +
push ebx  +
push esi  +
push offset aOff_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006686  +
cmp [ebp+var_1528] ebx +
jnz loc_1006686  +
push 80Ch  +
call sub_100E6E4  +
mov edi ds:__iob_func +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push 80Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
jmp loc_10064C0  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_10066F0  +
cmp [ebp+var_15C8] ebx +
jz loc_10066C4  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+var_1204] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_10066BC  +
mov [ebp+var_16F8] esi +
jmp loc_10066F0  +
cmp [ebp+var_15C8] ebx +
jnz loc_10066F0  +
cmp [ebp+var_1668] ebx +
jnz loc_10066D4  +
cmp [ebp+var_1618] ebx +
jz loc_10066F0  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+var_1204] +
push eax  +
mov [ebp+var_16F8] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1006773  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_1006773  +
push edi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_16F4] eax +
cmp eax ebx +
jnz loc_1006754  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1006754  +
push 0E7Dh  +
jmp loc_10064B4  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_16F4]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
lea eax [ebp+var_16E0] +
push eax  +
push [ebp+var_16F8]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+var_1204] +
push eax  +
push [ebp+var_16EC]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jz loc_1006921  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_10067E2  +
push ebx  +
push [ebp+var_16EC]  +
call sub_100C9B2  +
test eax eax +
jz loc_10067E2  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100E7B7  +
mov [ebp+var_16DC] eax +
cmp eax ebx +
jnz loc_100681A  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1006921  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_16DC] eax +
cmp eax ebx +
jz loc_10068F1  +
push eax  +
call sub_100E857  +
push ebx  +
push esi  +
mov [ebp+var_16F8] eax +
push offset aEdit_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_100699E  +
mov eax [ebp+var_16FC] +
cmp eax ebx +
jbe loc_100695D  +
cmp eax [ebp+var_16F8] +
ja loc_100695D  +
push ebx  +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EF86  +
push eax  +
call sub_100C9B2  +
cmp eax 0FEh +
jbe loc_10068B7  +
push 0FEh  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_1006909  +
mov eax [ebp+var_16FC] +
push 0FFh  +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EF86  +
push eax  +
lea eax [ebp+Start] +
push eax  +
call sub_100D2E9  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_100699E  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_16EC] +
push eax  +
call sub_100CF4F  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
push 1B8h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
jmp loc_100694A  +
push ebx  +
push esi  +
push offset aOn_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006F4F  +
push 22h  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
call ds:StrRChrW  +
cmp eax ebx +
jnz loc_10069E8  +
push 829h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1006909  +
push ebx  +
push offset aRedirect_0  +
add eax 2 +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1006A22  +
push 280h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
jmp loc_1006809  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1006A7E  +
lea eax [ebp+var_E04] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_1006A66  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1006A11  +
push ebx  +
lea eax [ebp+var_E04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1006A7E  +
push 30Dh  +
jmp loc_1006A00  +
push ebx  +
push offset String  +
call sub_100C9B2  +
push ebx  +
push offset aRedirect_0  +
mov [ebp+var_16F4] eax +
call sub_100C9B2  +
mov ecx [ebp+var_16F4] +
add ecx eax +
xor ebx ebx +
push ebx  +
lea eax [ebp+Start] +
push eax  +
mov [ebp+var_16F4] ecx +
call sub_100C9B2  +
add eax [ebp+var_16F4] +
cmp eax 0FEh +
jbe loc_1006B12  +
push 0FEh  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
jmp loc_1006932  +
push 0FFh  +
push offset String  +
lea eax [ebp+Start] +
push eax  +
call sub_100D32C  +
push 0FFh  +
push offset aRedirect_0  +
lea eax [ebp+Start] +
push eax  +
call sub_100D32C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1006B64  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006DB3  +
lea eax [ebp+var_1004] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jz loc_1006A54  +
lea eax [ebp+var_E04] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jz loc_1006A54  +
push ebx  +
lea eax [ebp+var_E04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006BEC  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006BE6  +
push 2C8h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
mov [ebp+var_16E8] esi +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006C2A  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006C2A  +
push 2C9h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
mov [ebp+var_1700] esi +
cmp [ebp+var_16E8] ebx +
jnz loc_1006DAB  +
push ebx  +
push esi  +
push offset aBiosset  +
lea eax [ebp+String] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006C63  +
push 0FFh  +
push offset aUsebiossetting  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006CA2  +
push 0FFh  +
push offset aDebugport_0  +
lea eax [ebp+sz] +
push eax  +
call sub_100D2E9  +
push 0FFh  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+sz] +
push eax  +
call sub_100D32C  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_16F0] eax +
cmp eax ebx +
jnz loc_1006CEB  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
jmp loc_100694A  +
mov [ebp+var_16E8] ebx +
push [ebp+var_16E8]  +
push [ebp+var_16F0]  +
call sub_100EF86  +
mov [ebp+var_16F4] eax +
push ebx  +
lea eax [ebp+sz] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006D41  +
lea eax [ebp+sz] +
push eax  +
call ds:CharLowerW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
push [ebp+var_16F4]  +
call sub_100D279  +
test eax eax +
jnz loc_1006E65  +
inc [ebp+var_16E8]  +
mov eax [ebp+var_16F8] +
dec eax  +
cmp [ebp+var_16E8] eax +
jbe loc_1006CF1  +
lea eax [ebp+var_16F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+String] +
push eax  +
call ds:CharUpperW  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1006EAF  +
push 27Ch  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
cmp [ebp+var_1700] ebx +
jnz loc_1006E00  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1006E00  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+var_C04] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1006ECA  +
push 281h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
mov eax [ebp+var_16FC] +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
mov eax [ebp+var_16FC] +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_16DC]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1006F0E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1006CBD  +
push 0C14h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_16F0] +
jmp loc_1006B07  +
push 27Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1006AE4  +
push 282h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
jmp loc_100693E  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_1006FE5  +
push [ebp+var_16FC]  +
push 276h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
push ebx  +
push esi  +
push offset aEdit  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_10071F5  +
push ebx  +
push esi  +
push offset aBiosset  +
lea eax [ebp+String] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1006F97  +
push 0FFh  +
push offset aUsebiossetting  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_1004] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_100700C  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1006809  +
push 84h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1006AE4  +
lea eax [ebp+var_E04] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jz loc_1006FB8  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_1007061  +
cmp [ebp+var_1488] ebx +
jz loc_1007061  +
push 810h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1006FC8  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_10070A0  +
push 0FFh  +
push offset aDebugport_0  +
lea eax [ebp+sz] +
push eax  +
call sub_100D2E9  +
push 0FFh  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+sz] +
push eax  +
call sub_100D32C  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_16F0] eax +
cmp eax ebx +
jz loc_1006AE4  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1007142  +
mov eax [ebp+var_16F8] +
dec eax  +
mov [ebp+var_16E8] ebx +
cmp eax ebx +
jbe loc_1007142  +
push 0FEh  +
push [ebp+var_16E8]  +
push [ebp+var_16F0]  +
call sub_100EF86  +
push eax  +
lea eax [ebp+var_1404] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+sz] +
push eax  +
call ds:CharLowerW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+var_1404] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1006E65  +
inc [ebp+var_16E8]  +
mov eax [ebp+var_16F8] +
dec eax  +
cmp [ebp+var_16E8] eax +
jb loc_10070E1  +
lea eax [ebp+var_16F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+String] +
push eax  +
call ds:CharUpperW  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_10071A8  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1007264  +
push 27Ch  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_10071F5  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+var_C04] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jz loc_1007297  +
push 281h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push ebx  +
push esi  +
push offset aOff  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1007630  +
push ebx  +
lea eax [ebp+var_C04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_10076A6  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jnz loc_10076A6  +
push 22h  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
call ds:StrRChrW  +
push ebx  +
push offset aRedirect_0  +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_100729E  +
push 27Eh  +
jmp loc_100704B  +
push 27Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1006915  +
push 282h  +
jmp loc_1007269  +
push offset aRedirect_0  +
lea eax [ebp+Start] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1006909  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
call sub_100C9B2  +
cmp eax 0FEh +
jbe loc_1007314  +
push 0FEh  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_100698B  +
mov eax [ebp+var_16FC] +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+Start] +
push eax  +
mov eax [ebp+var_16FC] +
dec eax  +
push eax  +
push [ebp+var_16DC]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_16DC]  +
call sub_10027C1  +
cmp eax esi +
jz loc_1006FC8  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_100769C  +
push [ebp+var_16FC]  +
push 276h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
push 0FFh  +
push offset aRedirect_0  +
lea eax [ebp+var_1004] +
push eax  +
call sub_100D2E9  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_16F0] eax +
cmp eax ebx +
jz loc_1006AE4  +
mov [ebp+var_1700] ebx +
mov [ebp+var_16E8] ebx +
cmp [ebp+var_16F8] ebx +
jbe loc_1007496  +
push [ebp+var_16E8]  +
push [ebp+var_16F0]  +
call sub_100EF86  +
push 22h  +
push ebx  +
push eax  +
call ds:StrRChrW  +
mov [ebp+var_16F4] eax +
cmp eax ebx +
jnz loc_1007450  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_16F0] +
push eax  +
call sub_100E82C  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_1004] +
push eax  +
call ds:CharLowerW  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
mov eax [ebp+var_16F4] +
add eax 2 +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_100747E  +
mov [ebp+var_1700] esi +
inc [ebp+var_16E8]  +
mov eax [ebp+var_16E8] +
cmp eax [ebp+var_16F8] +
jb loc_10073EA  +
lea eax [ebp+var_16F0] +
push eax  +
call sub_100E82C  +
cmp [ebp+var_1700] ebx +
jnz loc_1007630  +
lea eax [ebp+var_E04] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_100751F  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
push ebx  +
lea eax [ebp+var_E04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_10075AD  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
push offset aRedirect  +
call sub_10025BC  +
cmp eax esi +
jnz loc_1007562  +
push 0E83h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
jmp loc_10075AD  +
push 0E81h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+var_E04] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_10075EF  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_1006909  +
push ebx  +
lea eax [ebp+var_E04] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1007630  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
push offset aRedirectbaudra  +
call sub_10025BC  +
cmp eax esi +
jnz loc_100764F  +
push 0E84h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
jmp loc_1006915  +
push 0E82h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_16DC] +
push eax  +
call sub_100E82C  +
push [ebp+var_16E0]  +
push [ebp+lpMem]  +
call sub_10030B6  +
jmp loc_1007630  +
push 84h  +
jmp loc_100704B  +
push 431h  +
jmp loc_100704B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B68h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi 1FAh +
push edi  +
mov [ebp+var_B64] eax +
lea eax [ebp+var_610] +
push ebx  +
push eax  +
mov [ebp+var_B60] ebx +
mov [ebp+var_B48] ebx +
mov [ebp+var_B68] ebx +
mov [ebp+var_B4C] ebx +
mov [ebp+var_B3C] ebx +
mov dword ptr [ebp+var_614] ebx +
call memset  +
lea esi [edi-2] +
push esi  +
lea eax [ebp+var_80C] +
push ebx  +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+var_B44] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
push esi  +
lea eax [ebp+var_410] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push edi  +
lea eax [ebp+var_214] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
mov dword ptr [ebp+var_18] ebx +
add esp 30h +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
mov [ebp+lpString] ebx +
mov [ebp+var_B54] ebx +
mov [ebp+var_B5C] ebx +
mov [ebp+var_B58] ebx +
mov [ebp+var_B50] ebx +
mov [ebp+var_B40] ebx +
mov ecx 320h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1007798  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_B68] +
push 8  +
mov [ebp+var_B04] eax +
xor edi edi +
push esi  +
lea eax [ebp+var_AE0] +
inc edi  +
push eax  +
mov [ebp+var_B10] offset aAddsw +
mov [ebp+var_B28] 0Ah +
mov [ebp+var_B18] edi +
call sub_100D2A6  +
push 8  +
push esi  +
lea eax [ebp+var_A90] +
push eax  +
mov [ebp+var_AC0] offset aS +
mov [ebp+var_AD0] 12000h +
mov [ebp+var_ACC] ebx +
mov [ebp+var_AD8] edi +
mov [ebp+var_AC8] edi +
call sub_100D2A6  +
push 8  +
push esi  +
lea eax [ebp+var_A40] +
push eax  +
mov [ebp+var_A70] offset aU +
mov [ebp+var_A80] 12000h +
mov [ebp+var_A7C] ebx +
mov [ebp+var_A88] edi +
mov [ebp+var_A78] edi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_A14] eax +
push esi  +
lea eax [ebp+var_9F0] +
push eax  +
mov [ebp+var_A20] offset aP +
mov [ebp+var_A30] 10h +
mov [ebp+var_A2C] ebx +
mov [ebp+var_A38] edi +
mov [ebp+var_A28] edi +
mov [ebp+var_A10] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_B60] +
push 8  +
mov [ebp+var_9C4] eax +
push esi  +
lea eax [ebp+var_9A0] +
push eax  +
mov [ebp+var_9D0] offset a?H +
mov [ebp+var_9E0] 20000h +
mov [ebp+var_9DC] ebx +
mov [ebp+var_9E8] 0Ah +
mov [ebp+var_9D8] edi +
call sub_100D2A6  +
lea eax [ebp+var_B4C] +
push 8  +
mov [ebp+var_974] eax +
push esi  +
lea eax [ebp+var_950] +
push eax  +
mov [ebp+var_980] offset aId +
mov [ebp+var_990] 82000h +
mov [ebp+var_98C] ebx +
mov [ebp+var_998] 3 +
mov [ebp+var_988] edi +
call sub_100D2A6  +
mov [ebp+var_930] offset aMm +
lea eax [ebp+var_B50] +
push 8  +
mov [ebp+var_924] eax +
push esi  +
lea eax [ebp+var_900] +
push eax  +
mov [ebp+var_940] 2000h +
mov [ebp+var_93C] ebx +
mov [ebp+var_948] 3 +
mov [ebp+var_938] edi +
call sub_100D2A6  +
lea eax [ebp+var_B54] +
push 8  +
mov [ebp+var_8D4] eax +
push esi  +
lea eax [ebp+var_8B0] +
push eax  +
mov [ebp+var_8E0] offset aBv +
mov [ebp+var_8F8] 0Ah +
mov [ebp+var_8E8] edi +
call sub_100D2A6  +
lea eax [ebp+var_B58] +
push 8  +
mov [ebp+var_884] eax +
push esi  +
lea eax [ebp+var_860] +
push eax  +
mov [ebp+var_890] offset aNg +
mov [ebp+var_8A8] 0Ah +
mov [ebp+var_898] edi +
call sub_100D2A6  +
push 0Ah  +
pop eax  +
push ebx  +
lea ecx [ebp+var_B5C] +
mov [ebp+var_834] ecx +
lea ecx [ebp+dwErrCode] +
push ecx  +
push eax  +
push ebx  +
push [ebp+var_B64]  +
mov [ebp+var_840] offset aSo +
push [ebp+arg_0]  +
mov [ebp+var_858] eax +
mov [ebp+var_848] edi +
call sub_1010470  +
test eax eax +
jnz loc_1007A48  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_10081DC  +
mov eax [ebp+var_AB4] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_A64] +
mov [ebp+var_B44] eax +
cmp eax ebx +
jnz loc_1007A78  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_B44] eax +
cmp eax ebx +
jz loc_1007A2F  +
push 3  +
push [ebp+lpMem]  +
call sub_100E40E  +
push 3  +
push [ebp+var_B44]  +
call sub_100E40E  +
cmp [ebp+var_B60] edi +
jnz loc_1007ABF  +
cmp [ebp+arg_0] 3 +
jbe loc_1007ABF  +
push 42Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_10081DC  +
cmp [ebp+var_934] ebx +
jz loc_1007AEF  +
cmp [ebp+var_B50] 20h +
jnb loc_1007AEF  +
push 31Ah  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_10081C4  +
cmp [ebp+var_AC4] ebx +
jz loc_1007B0E  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1007B0E  +
push 30Eh  +
jmp loc_1007AD5  +
cmp [ebp+var_A74] ebx +
jz loc_1007B2D  +
push ebx  +
push [ebp+var_B44]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1007B2D  +
push 30Fh  +
jmp loc_1007AD5  +
cmp [ebp+var_AC4] ebx +
jnz loc_1007B44  +
cmp [ebp+var_A74] ebx +
jz loc_1007B4C  +
push 30Bh  +
jmp loc_1007AD5  +
cmp [ebp+var_A74] ebx +
jnz loc_1007B5E  +
cmp [ebp+var_A24] ebx +
jz loc_1007B5E  +
push 30Ch  +
jmp loc_1007AD5  +
push [ebp+lpMem]  +
cmp [ebp+var_B60] ebx +
jz loc_1007B85  +
call sub_1003071  +
cmp eax edi +
jz loc_10081C4  +
call sub_1002C33  +
xor edi edi +
jmp loc_10081C4  +
call sub_1010CD3  +
test eax eax +
jz loc_1007BBB  +
call sub_10107D7  +
test eax eax +
jnz loc_1007BBB  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_10081DC  +
cmp [ebp+var_B50] ebx +
jnz loc_1007BE5  +
cmp [ebp+var_B54] ebx +
jnz loc_1007BE5  +
cmp [ebp+var_B58] ebx +
jnz loc_1007BE5  +
cmp [ebp+var_B5C] ebx +
jnz loc_1007BE5  +
push 42Eh  +
jmp loc_1007AD5  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_1007C4F  +
cmp [ebp+var_A24] ebx +
jz loc_1007C23  +
push ebx  +
push edi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1007C1B  +
mov [ebp+var_B48] edi +
jmp loc_1007C4F  +
cmp [ebp+var_A24] ebx +
jnz loc_1007C4F  +
cmp [ebp+var_AC4] ebx +
jnz loc_1007C33  +
cmp [ebp+var_A74] ebx +
jz loc_1007C4F  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_B48] edi +
call sub_100D2E9  +
push 2  +
mov esi offset Str2 +
push esi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1007CD2  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_1007CD2  +
push esi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_B64] eax +
cmp eax ebx +
jnz loc_1007CB3  +
push ebx  +
push edi  +
push esi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1007CB3  +
push 0E7Dh  +
jmp loc_1007AA5  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_B64]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
lea eax [ebp+var_B40] +
push eax  +
push [ebp+var_B48]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_B44]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jz loc_10081A7  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov esi ds:__iob_func +
cmp eax edi +
jnz loc_1007D41  +
push ebx  +
push [ebp+var_B44]  +
call sub_100C9B2  +
test eax eax +
jz loc_1007D41  +
push 313h  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_B3C] eax +
cmp eax ebx +
jnz loc_1007D6D  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_10081A7  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_B4C] +
cmp ecx ebx +
jbe loc_100817C  +
cmp ecx eax +
ja loc_100817C  +
cmp [ebp+var_B3C] ebx +
jz loc_1008162  +
dec ecx  +
push ecx  +
push [ebp+var_B3C]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_B48] eax +
call sub_100C9B2  +
cmp eax 0FEh +
jbe loc_1007DE9  +
push 0E80h  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_10081B3  +
cmp [ebp+var_B48] ebx +
jz loc_1008162  +
mov esi 0FFh +
push esi  +
push [ebp+var_B48]  +
lea eax [ebp+var_614] +
push eax  +
call sub_100D2E9  +
cmp [ebp+var_B50] ebx +
jz loc_1007EB9  +
push ebx  +
push offset aMaxmem  +
lea eax [ebp+var_614] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1007E45  +
push 319h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
jmp loc_1008186  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push esi  +
test eax eax +
push offset String  +
lea eax [ebp+String] +
push eax  +
jnz loc_1007E6A  +
call sub_100D2E9  +
jmp loc_1007E6F  +
call sub_100D32C  +
push esi  +
push offset aMaxmem  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push esi  +
push offset asc_10015C0  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push 0Ah  +
lea eax [ebp+var_18] +
push eax  +
push [ebp+var_B50]  +
call ds:_ltow  +
add esp 0Ch +
push esi  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
cmp [ebp+var_B54] ebx +
jz loc_1007F1D  +
push ebx  +
push offset aBasevideo  +
lea eax [ebp+var_614] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1007EE1  +
push 318h  +
jmp loc_1007E34  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push esi  +
test eax eax +
push offset String  +
lea eax [ebp+String] +
push eax  +
jnz loc_1007F06  +
call sub_100D2E9  +
jmp loc_1007F0B  +
call sub_100D32C  +
push esi  +
push offset aBasevideo  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
cmp [ebp+var_B5C] ebx +
jz loc_1007F81  +
push ebx  +
push offset aSos  +
lea eax [ebp+var_614] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1007F45  +
push 317h  +
jmp loc_1007E34  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push esi  +
test eax eax +
push offset String  +
lea eax [ebp+String] +
push eax  +
jnz loc_1007F6A  +
call sub_100D2E9  +
jmp loc_1007F6F  +
call sub_100D32C  +
push esi  +
push offset aSos  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
cmp [ebp+var_B58] ebx +
jz loc_1007FE7  +
lea eax [ebp+var_614] +
push offset aNoguiboot  +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007FAB  +
push 316h  +
jmp loc_1007E34  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push esi  +
test eax eax +
push offset String  +
lea eax [ebp+String] +
push eax  +
jnz loc_1007FD0  +
call sub_100D2E9  +
jmp loc_1007FD5  +
call sub_100D32C  +
push esi  +
push offset aNoguiboot  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
mov esi eax +
push ebx  +
lea eax [ebp+var_614] +
push eax  +
call sub_100C9B2  +
add esi eax +
mov eax 0FEh +
cmp esi eax +
jbe loc_1008033  +
push eax  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push edi  +
push edi  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_1007DCC  +
push 0FFh  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_614] +
push eax  +
call sub_100D32C  +
mov eax [ebp+var_B4C] +
dec eax  +
push eax  +
push [ebp+var_B3C]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+var_614] +
push eax  +
mov eax [ebp+var_B4C] +
dec eax  +
push eax  +
push [ebp+var_B3C]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_B3C]  +
call sub_10027C1  +
cmp eax edi +
jnz loc_10080A0  +
lea eax [ebp+var_B3C] +
push eax  +
call sub_100E82C  +
jmp loc_1007DCC  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_1008137  +
push [ebp+var_B4C]  +
push 0CBh  +
call sub_100E6E4  +
push eax  +
push edi  +
push edi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
lea eax [ebp+var_B3C] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_B40]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_B44] +
push eax  +
call sub_100CF4F  +
mov eax esi +
jmp loc_10081DE  +
push 84h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_B3C] +
push eax  +
call sub_100E82C  +
jmp loc_1007D5C  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call esi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_100818F  +
push 7Dh  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_B3C] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_B40]  +
push [ebp+lpMem]  +
call sub_10030B6  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_B44] +
push eax  +
call sub_100CF4F  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F54h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 1FAh +
push esi  +
mov [ebp+var_F50] eax +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov [ebp+var_F48] ebx +
mov [ebp+var_F34] ebx +
mov [ebp+var_F54] ebx +
mov [ebp+var_F38] ebx +
mov [ebp+var_F24] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
lea edi [esi-2] +
push edi  +
lea eax [ebp+var_5FC] +
push ebx  +
push eax  +
mov [ebp+lpString1] ebx +
mov [ebp+var_F30] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
push esi  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_9F8] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov [ebp+var_F44] ebx +
mov [ebp+var_F3C] ebx +
mov [ebp+var_F40] ebx +
mov [ebp+var_F4C] ebx +
mov [ebp+var_9FC] ebx +
call memset  +
push esi  +
lea eax [ebp+var_BF8] +
push ebx  +
push eax  +
mov [ebp+var_BFC] ebx +
call memset  +
push edi  +
lea eax [ebp+var_7F8] +
push ebx  +
push eax  +
mov dword ptr [ebp+String2] ebx +
call memset  +
add esp 48h +
mov [ebp+var_F28] ebx +
mov ecx 320h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10082F3  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_F54] +
push 8  +
mov [ebp+var_EF0] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_ECC] +
inc esi  +
push eax  +
mov [ebp+var_EFC] offset aRmsw +
mov [ebp+var_F14] 0Ah +
mov [ebp+var_F04] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_E7C] +
push eax  +
mov [ebp+var_EAC] offset aS +
mov [ebp+var_EBC] 12000h +
mov [ebp+var_EB8] ebx +
mov [ebp+var_EC4] esi +
mov [ebp+var_EB4] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_E2C] +
push eax  +
mov [ebp+var_E5C] offset aU +
mov [ebp+var_E6C] 12000h +
mov [ebp+var_E68] ebx +
mov [ebp+var_E74] esi +
mov [ebp+var_E64] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_E00] eax +
push edi  +
lea eax [ebp+var_DDC] +
push eax  +
mov [ebp+var_E0C] offset aP +
mov [ebp+var_E1C] 10h +
mov [ebp+var_E18] ebx +
mov [ebp+var_E24] esi +
mov [ebp+var_E14] esi +
mov [ebp+var_DFC] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_F48] +
push 8  +
mov [ebp+var_DB0] eax +
push edi  +
lea eax [ebp+var_D8C] +
push eax  +
mov [ebp+var_DBC] offset a?H +
mov [ebp+var_DCC] 20000h +
mov [ebp+var_DC8] ebx +
mov [ebp+var_DD4] 0Ah +
mov [ebp+var_DC4] esi +
call sub_100D2A6  +
lea eax [ebp+var_F38] +
push 8  +
mov [ebp+var_D60] eax +
push edi  +
lea eax [ebp+var_D3C] +
push eax  +
mov [ebp+var_D6C] offset aId +
mov [ebp+var_D7C] 82000h +
mov [ebp+var_D78] ebx +
mov [ebp+var_D84] 3 +
mov [ebp+var_D74] esi +
call sub_100D2A6  +
mov [ebp+var_D1C] offset aMm +
lea eax [ebp+var_F4C] +
push 8  +
mov [ebp+var_D10] eax +
push edi  +
lea eax [ebp+var_CEC] +
push eax  +
mov [ebp+var_D34] 0Ah +
mov [ebp+var_D24] esi +
call sub_100D2A6  +
lea eax [ebp+var_F44] +
push 8  +
mov [ebp+var_CC0] eax +
push edi  +
lea eax [ebp+var_C9C] +
push eax  +
mov [ebp+var_CCC] offset aBv +
mov [ebp+var_CE4] 0Ah +
mov [ebp+var_CD4] esi +
call sub_100D2A6  +
lea eax [ebp+var_F40] +
push 8  +
mov [ebp+var_C70] eax +
push edi  +
lea eax [ebp+var_C4C] +
push eax  +
mov [ebp+var_C7C] offset aNg +
mov [ebp+var_C94] 0Ah +
mov [ebp+var_C84] esi +
call sub_100D2A6  +
push 0Ah  +
pop eax  +
push ebx  +
lea ecx [ebp+var_F3C] +
mov [ebp+var_C20] ecx +
lea ecx [ebp+dwErrCode] +
push ecx  +
push eax  +
push ebx  +
push [ebp+var_F50]  +
mov [ebp+var_C2C] offset aSo +
push [ebp+arg_0]  +
mov [ebp+var_C44] eax +
mov [ebp+var_C34] esi +
call sub_1010470  +
test eax eax +
jnz loc_1008593  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1008C31  +
mov eax [ebp+var_EA0] +
mov [ebp+lpString1] eax +
mov eax [ebp+var_E50] +
mov [ebp+var_F30] eax +
cmp eax ebx +
jnz loc_10085C3  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_F30] eax +
cmp eax ebx +
jz loc_100857A  +
push 3  +
push [ebp+lpString1]  +
call sub_100E40E  +
push 3  +
push [ebp+var_F30]  +
call sub_100E40E  +
cmp [ebp+var_F48] esi +
jnz loc_100860A  +
cmp [ebp+arg_0] 3 +
jbe loc_100860A  +
push 42Fh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1008C31  +
cmp [ebp+var_EB0] ebx +
jz loc_1008641  +
push ebx  +
push [ebp+lpString1]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1008641  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1008C19  +
cmp [ebp+var_E60] ebx +
jz loc_1008660  +
push ebx  +
push [ebp+var_F30]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1008660  +
push 30Fh  +
jmp loc_1008627  +
cmp [ebp+var_EB0] ebx +
jnz loc_1008677  +
cmp [ebp+var_E60] ebx +
jz loc_100867F  +
push 30Bh  +
jmp loc_1008627  +
cmp [ebp+var_E60] ebx +
jnz loc_100868E  +
cmp [ebp+var_E10] ebx +
jz loc_100868E  +
push 30Ch  +
jmp loc_1008627  +
push [ebp+lpString1]  +
cmp [ebp+var_F48] ebx +
jz loc_10086B5  +
call sub_1003071  +
cmp eax esi +
jz loc_1008C19  +
call sub_1002C61  +
xor esi esi +
jmp loc_1008C19  +
call sub_1010CD3  +
test eax eax +
jz loc_10086EB  +
call sub_10107D7  +
test eax eax +
jnz loc_10086EB  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_1008C31  +
cmp [ebp+var_F4C] ebx +
jnz loc_1008715  +
cmp [ebp+var_F44] ebx +
jnz loc_1008715  +
cmp [ebp+var_F40] ebx +
jnz loc_1008715  +
cmp [ebp+var_F3C] ebx +
jnz loc_1008715  +
push 42Eh  +
jmp loc_1008627  +
push [ebp+lpString1]  +
call sub_1010CD3  +
test eax eax +
jnz loc_100877F  +
cmp [ebp+var_E10] ebx +
jz loc_1008753  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_100874B  +
mov [ebp+var_F34] esi +
jmp loc_100877F  +
cmp [ebp+var_E10] ebx +
jnz loc_100877F  +
cmp [ebp+var_EB0] ebx +
jnz loc_1008763  +
cmp [ebp+var_E60] ebx +
jz loc_100877F  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_F34] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_10087F9  +
push 3  +
push offset asc_1001584  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_10087F9  +
push edi  +
push [ebp+lpString1]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_F50] eax +
cmp eax ebx +
jnz loc_10087E3  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_10087E3  +
push 0E7Dh  +
jmp loc_10085F0  +
push 0FEh  +
push [ebp+var_F50]  +
push [ebp+lpString1]  +
call sub_100D2E9  +
lea eax [ebp+var_F28] +
push eax  +
push [ebp+var_F34]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_F30]  +
push [ebp+lpString1]  +
call sub_1003196  +
test eax eax +
jz loc_1008C08  +
push [ebp+lpString1]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_1008868  +
push ebx  +
push [ebp+var_F30]  +
call sub_100C9B2  +
test eax eax +
jz loc_1008868  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_F24] eax +
cmp eax ebx +
jnz loc_1008894  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1008BFC  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_F38] +
cmp ecx ebx +
jbe loc_1008BD1  +
cmp ecx eax +
ja loc_1008BD1  +
cmp [ebp+var_F24] ebx +
jz loc_1008BBD  +
dec ecx  +
push ecx  +
push [ebp+var_F24]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_F34] eax +
call sub_100C9B2  +
mov ecx 0FEh +
cmp eax ecx +
jbe loc_100891D  +
push ecx  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+var_BFC] +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
jmp loc_1008BE4  +
cmp [ebp+var_F34] ebx +
jz loc_1008BA3  +
push 0FFh  +
push [ebp+var_F34]  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
cmp [ebp+var_F4C] esi +
jnz loc_10089C2  +
push ebx  +
push offset aMaxmem  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1008968  +
push 31Bh  +
jmp loc_1008BD3  +
push 0FEh  +
push offset dword_1001344  +
lea eax [ebp+var_9FC] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+String2] +
push eax  +
push offset aMaxmem  +
lea eax [ebp+String] +
push eax  +
call sub_1002C8F  +
test eax eax +
jnz loc_10089C2  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jnz loc_10089C2  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1008C08  +
cmp [ebp+var_F44] esi +
jnz loc_1008A03  +
push ebx  +
push offset aBasevideo  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_10089EA  +
push 31Dh  +
jmp loc_1008BD3  +
push offset aBasevideo  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1008BE4  +
cmp [ebp+var_F3C] esi +
jnz loc_1008A44  +
push ebx  +
push offset aSos  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1008A2B  +
push 31Ch  +
jmp loc_1008BD3  +
push offset aSos  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1008BE4  +
cmp [ebp+var_F40] esi +
jnz loc_1008A85  +
push ebx  +
push offset aNoguiboot  +
lea eax [ebp+String] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_1008A6C  +
push 31Eh  +
jmp loc_1008BD3  +
push offset aNoguiboot  +
lea eax [ebp+String] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_1008BE4  +
mov eax [ebp+var_F38] +
dec eax  +
push eax  +
push [ebp+var_F24]  +
call sub_100EE7C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
mov eax [ebp+var_F38] +
dec eax  +
push eax  +
push [ebp+var_F24]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_F24]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1008AE6  +
lea eax [ebp+var_F24] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_10089B1  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
push [ebp+var_F38]  +
test eax eax +
jz loc_1008B77  +
push 31Fh  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_F24] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_F28]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_F30] +
push eax  +
call sub_100CF4F  +
xor eax eax +
jmp loc_1008C33  +
push 320h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+var_F24] +
push eax  +
call sub_100E82C  +
jmp loc_1008883  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1008BE4  +
push 8  +
call ds:SetLastError  +
push 7Ch  +
call sub_100E6E4  +
jmp loc_1008901  +
push 7Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_F24] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_F28]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_F30] +
push eax  +
call sub_100CF4F  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10A8h +
call __alloca_probe  +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push 1FCh  +
mov [ebp+var_10A4] eax +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov [ebp+var_10A0] ebx +
mov [ebp+var_1090] ebx +
mov [ebp+var_10A8] ebx +
mov [ebp+var_1094] ebx +
mov [ebp+var_1080] ebx +
mov [ebp+var_400] ebx +
call memset  +
mov esi 1F8h +
push esi  +
lea eax [ebp+var_9F4] +
push ebx  +
push eax  +
mov [ebp+lpString1] ebx +
mov [ebp+var_108C] ebx +
mov [ebp+var_9F8] ebx +
call memset  +
push esi  +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_7F8] +
push ebx  +
push eax  +
mov [ebp+lpString] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
add esi 2 +
push esi  +
lea eax [ebp+var_BF4] +
push ebx  +
push eax  +
mov dword ptr [ebp+String2] ebx +
call memset  +
push esi  +
lea eax [ebp+var_5FC] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_DF4] +
push ebx  +
push eax  +
mov [ebp+var_109C] ebx +
mov [ebp+var_1098] ebx +
mov dword ptr [ebp+var_DF8] ebx +
call memset  +
add esp 0Ch +
mov [ebp+var_1088] ebx +
mov ecx 280h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1008D5B  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+var_9F8] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_10A8] +
push 8  +
mov [ebp+var_104C] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_1028] +
inc esi  +
push eax  +
mov [ebp+var_1058] offset aDbg1394 +
mov [ebp+var_1070] 0Ah +
mov [ebp+var_1060] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_FD8] +
push eax  +
mov [ebp+var_1008] offset aS +
mov [ebp+var_1018] 12000h +
mov [ebp+var_1014] ebx +
mov [ebp+var_1020] esi +
mov [ebp+var_1010] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_F88] +
push eax  +
mov [ebp+var_FB8] offset aU +
mov [ebp+var_FC8] 12000h +
mov [ebp+var_FC4] ebx +
mov [ebp+var_FD0] esi +
mov [ebp+var_FC0] esi +
call sub_100D2A6  +
lea eax [ebp+var_9F8] +
push 8  +
mov [ebp+var_F5C] eax +
push edi  +
lea eax [ebp+var_F38] +
push eax  +
mov [ebp+var_F68] offset aP +
mov [ebp+var_F78] 10h +
mov [ebp+var_F74] ebx +
mov [ebp+var_F80] esi +
mov [ebp+var_F70] esi +
mov [ebp+var_F58] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_10A0] +
push 8  +
mov [ebp+var_F0C] eax +
push edi  +
lea eax [ebp+var_EE8] +
push eax  +
mov [ebp+var_F18] offset a?H +
mov [ebp+var_F28] 20000h +
mov [ebp+var_F24] ebx +
mov [ebp+var_F30] 0Ah +
mov [ebp+var_F20] esi +
call sub_100D2A6  +
lea eax [ebp+var_1094] +
push 8  +
mov [ebp+var_EBC] eax +
push edi  +
lea eax [ebp+var_E98] +
push eax  +
mov [ebp+var_EC8] offset aId +
mov [ebp+var_EE0] 3 +
mov [ebp+var_ED0] esi +
call sub_100D2A6  +
mov [ebp+var_E78] offset aCh +
mov [ebp+var_E88] 2000h +
mov [ebp+var_E84] ebx +
lea eax [ebp+var_1098] +
push 8  +
mov [ebp+var_E6C] eax +
push edi  +
lea eax [ebp+var_E48] +
push eax  +
mov [ebp+var_E90] 3 +
mov [ebp+var_E80] esi +
call sub_100D2A6  +
push ebx  +
lea eax [ebp+String1] +
mov [ebp+var_E1C] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 8  +
push ebx  +
push [ebp+var_10A4]  +
mov [ebp+var_E28] offset word_10013EC +
push [ebp+arg_0]  +
mov [ebp+var_E38] 0C00C0h +
mov [ebp+var_E34] ebx +
mov [ebp+var_E40] esi +
mov [ebp+var_E30] esi +
mov [ebp+var_E18] 0FEh +
call sub_1010470  +
test eax eax +
jnz loc_1008FA9  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_100983D  +
mov eax [ebp+var_FFC] +
mov [ebp+lpString1] eax +
mov eax [ebp+var_FAC] +
mov [ebp+var_108C] eax +
cmp eax ebx +
jnz loc_1008FD9  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_108C] eax +
cmp eax ebx +
jz loc_1008F90  +
push 3  +
push [ebp+lpString1]  +
call sub_100E40E  +
push 3  +
push [ebp+var_108C]  +
call sub_100E40E  +
cmp [ebp+var_10A0] esi +
jnz loc_1009020  +
cmp [ebp+arg_0] 3 +
jbe loc_1009020  +
push 43Bh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100983D  +
cmp [ebp+var_100C] ebx +
jz loc_100903F  +
push ebx  +
push [ebp+lpString1]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100903F  +
push 30Eh  +
jmp loc_1009006  +
cmp [ebp+var_FBC] ebx +
jz loc_100905E  +
push ebx  +
push [ebp+var_108C]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100905E  +
push 30Fh  +
jmp loc_1009006  +
push [ebp+lpString1]  +
cmp [ebp+var_10A0] ebx +
jz loc_1009085  +
call sub_1003071  +
cmp eax esi +
jz loc_1009825  +
call sub_1002D57  +
xor esi esi +
jmp loc_1009825  +
call sub_1010CD3  +
test eax eax +
jz loc_10090BB  +
call sub_10107D7  +
test eax eax +
jnz loc_10090BB  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_100983D  +
push ebx  +
push esi  +
push offset aOff_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
mov edi offset aOn_0 +
test eax eax +
jz loc_1009121  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jz loc_1009121  +
push 811h  +
call sub_100E6E4  +
mov edi ds:__iob_func +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push 80Fh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1009825  +
push ebx  +
push esi  +
push offset aOff_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1009153  +
cmp [ebp+var_E7C] ebx +
jz loc_1009153  +
push 43Bh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
jmp loc_1009113  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1009175  +
cmp [ebp+var_E7C] ebx +
jnz loc_1009175  +
push 0E86h  +
jmp loc_1009145  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_10091A8  +
cmp [ebp+var_E7C] ebx +
jz loc_10091A8  +
cmp [ebp+var_1098] esi +
jb loc_10091A1  +
cmp [ebp+var_1098] 40h +
jbe loc_10091A8  +
push 43Ch  +
jmp loc_1009145  +
cmp [ebp+var_100C] ebx +
jnz loc_10091BF  +
cmp [ebp+var_FBC] ebx +
jz loc_10091C7  +
push 30Bh  +
jmp loc_1009145  +
cmp [ebp+var_FBC] ebx +
jnz loc_10091D9  +
cmp [ebp+var_F6C] ebx +
jz loc_10091D9  +
push 30Ch  +
jmp loc_1009145  +
push [ebp+lpString1]  +
call sub_1010CD3  +
test eax eax +
jnz loc_1009243  +
cmp [ebp+var_F6C] ebx +
jz loc_1009217  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+var_9F8] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_100920F  +
mov [ebp+var_1090] esi +
jmp loc_1009243  +
cmp [ebp+var_F6C] ebx +
jnz loc_1009243  +
cmp [ebp+var_100C] ebx +
jnz loc_1009227  +
cmp [ebp+var_FBC] ebx +
jz loc_1009243  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+var_9F8] +
push eax  +
mov [ebp+var_1090] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_10092BD  +
push 3  +
push offset asc_1001584  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_10092BD  +
push edi  +
push [ebp+lpString1]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_10A4] eax +
cmp eax ebx +
jnz loc_10092A7  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_10092A7  +
push 0E7Dh  +
jmp loc_1009006  +
push 0FEh  +
push [ebp+var_10A4]  +
push [ebp+lpString1]  +
call sub_100D2E9  +
lea eax [ebp+var_1088] +
push eax  +
push [ebp+var_1090]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+var_9F8] +
push eax  +
push [ebp+var_108C]  +
push [ebp+lpString1]  +
call sub_1003196  +
test eax eax +
jz loc_1009808  +
push [ebp+lpString1]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_100932C  +
push ebx  +
push [ebp+var_108C]  +
call sub_100C9B2  +
test eax eax +
jz loc_100932C  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_1080] eax +
cmp eax ebx +
jnz loc_1009358  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1009808  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_1094] +
cmp ecx ebx +
jbe loc_10097DD  +
cmp ecx eax +
ja loc_10097DD  +
cmp [ebp+var_1080] ebx +
jz loc_10097B8  +
dec ecx  +
push ecx  +
push [ebp+var_1080]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_1090] eax +
call sub_100C9B2  +
cmp eax 0FEh +
jbe loc_10093C6  +
push 0FEh  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_10097F0  +
cmp [ebp+var_1090] ebx +
jz loc_100979E  +
push 100h  +
push [ebp+var_1090]  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D2E9  +
push ebx  +
push esi  +
push offset aOn_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1009587  +
push ebx  +
push offset aDebugport_0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1009424  +
push 310h  +
jmp loc_10097DF  +
push ebx  +
push offset aBaudrate_0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1009444  +
push 0E7Eh  +
jmp loc_10097DF  +
push ebx  +
push offset aDebug_0  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D279  +
mov edi 0FFh +
test eax eax +
jnz loc_1009483  +
push edi  +
push offset String  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
push edi  +
push offset aDebug_0  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
push edi  +
test eax eax +
push offset String  +
lea eax [ebp+String] +
push eax  +
jnz loc_10094A8  +
call sub_100D2E9  +
jmp loc_10094AD  +
call sub_100D32C  +
push edi  +
push offset aDebugport1394  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
cmp [ebp+var_1098] ebx +
jz loc_1009529  +
push edi  +
push offset String  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push edi  +
push offset aChannel  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push edi  +
push offset asc_10015C0  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push 0Ah  +
lea eax [ebp+var_DF8] +
push eax  +
push [ebp+var_1098]  +
call ds:_ltow  +
add esp 0Ch +
push edi  +
lea eax [ebp+var_DF8] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
mov edi eax +
push ebx  +
lea eax [ebp+var_400] +
push eax  +
call sub_100C9B2  +
add edi eax +
mov eax 0FEh +
cmp edi eax +
jbe loc_1009569  +
push eax  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
jmp loc_10093B5  +
push 100h  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D32C  +
mov edi ds:__iob_func +
push ebx  +
push esi  +
push offset aOff_0  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1009699  +
push ebx  +
push offset aDebugport1394  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D279  +
test eax eax +
jnz loc_10095C2  +
push 438h  +
jmp loc_10097DF  +
push offset aDebugport1394  +
lea eax [ebp+var_400] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jnz loc_1009606  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_1080] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_109C] +
jmp loc_100980E  +
push offset aDebug_0  +
lea eax [ebp+var_400] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_10095D7  +
push ebx  +
push offset aChannel  +
lea eax [ebp+var_400] +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_1009699  +
push 0FEh  +
push offset dword_1001344  +
lea eax [ebp+String2] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+String2] +
push eax  +
push offset aChannel  +
lea eax [ebp+var_400] +
push eax  +
call sub_1002C8F  +
cmp eax esi +
jnz loc_100966D  +
push 829h  +
jmp loc_10097DF  +
push ebx  +
lea eax [ebp+String2] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_1009699  +
lea eax [ebp+String2] +
push eax  +
lea eax [ebp+var_400] +
push eax  +
call sub_10025E1  +
cmp eax esi +
jz loc_10095D7  +
push ebx  +
lea eax [ebp+var_400] +
push eax  +
call sub_100C9B2  +
cmp eax 0FEh +
ja loc_10093A1  +
mov eax [ebp+var_1094] +
dec eax  +
push eax  +
push [ebp+var_1080]  +
call sub_100EE7C  +
push 0FFh  +
lea eax [ebp+var_400] +
push eax  +
mov eax [ebp+var_1094] +
dec eax  +
push eax  +
push [ebp+var_1080]  +
call sub_100EE02  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_1080]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_1009722  +
lea eax [ebp+var_1080] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_1009814  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
push [ebp+var_1094]  +
test eax eax +
jz loc_1009772  +
push 305h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
jmp loc_10097FC  +
push 43Ah  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+var_1080] +
push eax  +
call sub_100E82C  +
jmp loc_1009347  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_10097F0  +
push 8  +
call ds:SetLastError  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
jmp loc_10097F0  +
push 7Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_1080] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
push [ebp+var_1088]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_108C] +
push eax  +
call sub_100CF4F  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0EE8h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 1F8h  +
mov [ebp+var_ECC] eax +
lea eax [ebp+var_284] +
push ebx  +
push eax  +
mov [ebp+var_EE8] ebx +
mov [ebp+var_EE0] ebx +
mov [ebp+var_EC0] ebx +
mov [ebp+var_288] ebx +
call memset  +
mov esi 1FAh +
push esi  +
lea eax [ebp+var_A84] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_884] +
push ebx  +
push eax  +
mov [ebp+var_ED4] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_EC8] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
push 84h  +
lea eax [ebp+var_88] +
push ebx  +
push eax  +
mov [ebp+var_8C] ebx +
call memset  +
push esi  +
lea eax [ebp+var_484] +
push ebx  +
push eax  +
mov [ebp+var_EDC] ebx +
mov [ebp+var_EC4] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_684] +
push ebx  +
push eax  +
mov [ebp+var_688] ebx +
call memset  +
add esp 48h +
push esi  +
lea eax [ebp+var_C84] +
push ebx  +
push eax  +
mov [ebp+var_ED0] ebx +
mov [ebp+var_C88] ebx +
call memset  +
add esp 0Ch +
mov [ebp+lpString] ebx +
lea ecx [esi+36h] +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100995C  +
push 0FFh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_EE8] +
push 8  +
mov [ebp+var_E8C] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_E68] +
inc esi  +
push eax  +
mov [ebp+var_E98] offset aCopy +
mov [ebp+var_EB0] 0Ah +
mov [ebp+var_EA0] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_E18] +
push eax  +
mov [ebp+var_E48] offset aS +
mov [ebp+var_E58] 12000h +
mov [ebp+var_E54] ebx +
mov [ebp+var_E60] esi +
mov [ebp+var_E50] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_DC8] +
push eax  +
mov [ebp+var_DF8] offset aU +
mov [ebp+var_E08] 12000h +
mov [ebp+var_E04] ebx +
mov [ebp+var_E10] esi +
mov [ebp+var_E00] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_D9C] eax +
push edi  +
lea eax [ebp+var_D78] +
push eax  +
mov [ebp+var_DA8] offset aP +
mov [ebp+var_DB8] 10h +
mov [ebp+var_DB4] ebx +
mov [ebp+var_DC0] esi +
mov [ebp+var_DB0] esi +
mov [ebp+var_D98] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_8C] +
push 8  +
mov [ebp+var_D4C] eax +
push edi  +
lea eax [ebp+var_D28] +
push eax  +
mov [ebp+var_D58] offset aD_0 +
mov [ebp+var_D68] 2040h +
mov [ebp+var_D64] ebx +
mov [ebp+var_D70] esi +
mov [ebp+var_D60] esi +
mov [ebp+var_D48] 44h +
call sub_100D2A6  +
lea eax [ebp+var_EE0] +
push 8  +
mov [ebp+var_CFC] eax +
push edi  +
lea eax [ebp+var_CD8] +
push eax  +
mov [ebp+var_D08] offset a?H +
mov [ebp+var_D18] 20000h +
mov [ebp+var_D14] ebx +
mov [ebp+var_D20] 0Ah +
mov [ebp+var_D10] esi +
call sub_100D2A6  +
push 3  +
lea eax [ebp+var_EDC] +
pop edi  +
mov [ebp+var_CAC] eax +
mov [ebp+var_CB8] offset aId +
mov [ebp+var_CC8] 82000h +
mov [ebp+var_CC4] ebx +
mov [ebp+var_CD0] edi +
mov [ebp+var_CC0] esi +
mov ecx 1FEh +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1009B49  +
push ebx  +
lea eax [ebp+dwErrCode] +
push eax  +
push 7  +
push ebx  +
push [ebp+var_ECC]  +
push [ebp+arg_0]  +
call sub_1010470  +
test eax eax +
jnz loc_1009B93  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
mov eax [ebp+var_E3C] +
mov [ebp+lpMem] eax +
mov eax [ebp+var_DEC] +
mov [ebp+var_EC8] eax +
cmp eax ebx +
jnz loc_1009BC3  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_EC8] eax +
cmp eax ebx +
jz loc_1009B6C  +
push edi  +
push [ebp+lpMem]  +
call sub_100E40E  +
push edi  +
push [ebp+var_EC8]  +
call sub_100E40E  +
cmp [ebp+var_EE0] esi +
jnz loc_1009C04  +
cmp [ebp+arg_0] edi +
jbe loc_1009C04  +
push 4  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_1009B80  +
cmp [ebp+var_E4C] ebx +
jz loc_1009C53  +
push ebx  +
push [ebp+lpMem]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1009C53  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_EC8] +
push eax  +
call sub_100CF4F  +
jmp loc_1009B80  +
cmp [ebp+var_DFC] ebx +
jz loc_1009C72  +
push ebx  +
push [ebp+var_EC8]  +
call sub_100C9B2  +
test eax eax +
jnz loc_1009C72  +
push 30Fh  +
jmp loc_1009C21  +
cmp [ebp+var_E4C] ebx +
jnz loc_1009C8C  +
cmp [ebp+var_DFC] ebx +
jz loc_1009C94  +
push 30Bh  +
jmp loc_1009BEA  +
cmp [ebp+var_DFC] ebx +
jnz loc_1009CA6  +
cmp [ebp+var_DAC] ebx +
jz loc_1009CA6  +
push 30Ch  +
jmp loc_1009BEA  +
push [ebp+lpMem]  +
cmp [ebp+var_EE0] ebx +
jz loc_1009CCD  +
call sub_1003071  +
cmp eax esi +
jz loc_1009C36  +
call sub_100270C  +
xor esi esi +
jmp loc_1009C36  +
call sub_1010CD3  +
test eax eax +
jz loc_1009D03  +
call sub_10107D7  +
test eax eax +
jnz loc_1009D03  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_1009B80  +
push [ebp+lpMem]  +
call sub_1010CD3  +
test eax eax +
jnz loc_1009D6D  +
cmp [ebp+var_DAC] ebx +
jz loc_1009D41  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_1009D39  +
mov [ebp+var_ED4] esi +
jmp loc_1009D6D  +
cmp [ebp+var_DAC] ebx +
jnz loc_1009D6D  +
cmp [ebp+var_E4C] ebx +
jnz loc_1009D51  +
cmp [ebp+var_DFC] ebx +
jz loc_1009D6D  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_ED4] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_1009DF0  +
push 3  +
push offset asc_1001584  +
push [ebp+lpMem]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_1009DF0  +
push edi  +
push [ebp+lpMem]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_ECC] eax +
cmp eax ebx +
jnz loc_1009DD1  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpMem]  +
call sub_100C9D3  +
test eax eax +
jz loc_1009DD1  +
push 0E7Dh  +
jmp loc_1009C21  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_ECC]  +
push [ebp+lpMem]  +
call sub_100D2E9  +
push [ebp+lpMem]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_1009E2B  +
push ebx  +
push [ebp+var_EC8]  +
call sub_100C9B2  +
test eax eax +
jz loc_1009E2B  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_EC4] +
push eax  +
push [ebp+var_ED4]  +
lea eax [ebp+var_288] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_EC8]  +
push [ebp+lpMem]  +
call sub_1003196  +
test eax eax +
jnz loc_1009E71  +
push [ebp+var_EC4]  +
push [ebp+lpMem]  +
call sub_10030B6  +
jmp loc_1009C36  +
push offset AppName  +
lea eax [ebp+var_288] +
push eax  +
call sub_100237A  +
mov [ebp+var_EC0] eax +
cmp eax ebx +
jnz loc_1009E9A  +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
jmp loc_1009E5B  +
push 0FFh  +
lea eax [ebp+var_288] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_100D2E9  +
push [ebp+var_EC0]  +
call sub_100E857  +
cmp eax 14h +
jb loc_1009EF5  +
push 314h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_EC0] +
push eax  +
call sub_100E82C  +
jmp loc_1009E5B  +
mov ecx [ebp+var_EDC] +
cmp ecx ebx +
jbe loc_100A2A7  +
cmp ecx eax +
ja loc_100A2A7  +
cmp [ebp+var_EC0] ebx +
jz loc_100A270  +
dec ecx  +
push ecx  +
push [ebp+var_EC0]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_ECC] eax +
call sub_100C9B2  +
lea eax [eax+eax+4] +
push eax  +
call sub_100CBB3  +
mov [ebp+var_ED0] eax +
cmp eax ebx +
jnz loc_1009F5A  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_1009E8C  +
push eax  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+var_ECC]  +
push [ebp+var_ED0]  +
call sub_100D2E9  +
mov eax [ebp+var_ED0] +
push 3Dh  +
push eax  +
mov [ebp+var_ECC] eax +
call ds:wcschr  +
xor ecx ecx +
mov [eax] cx +
inc eax  +
inc eax  +
push 22h  +
push eax  +
mov [ebp+var_ED4] eax +
call ds:wcsrchr  +
add esp 10h +
mov edi eax +
inc edi  +
inc edi  +
push ebx  +
push edi  +
mov [ebp+var_EE4] edi +
call sub_100C9B2  +
test eax eax +
jz loc_1009FC4  +
xor eax eax +
mov [edi] ax +
inc edi  +
inc edi  +
mov [ebp+var_EE4] edi +
push ebx  +
push edi  +
call sub_100C9B2  +
push ebx  +
push [ebp+var_ED4]  +
mov edi eax +
call sub_100C9B2  +
push ebx  +
push [ebp+var_ED0]  +
add edi eax +
call sub_100C9B2  +
lea edi [eax+edi+1] +
cmp [ebp+var_D5C] ebx +
jnz loc_100A0C2  +
mov edi [ebp+var_ED4] +
push 3  +
push offset asc_1001880  +
push edi  +
call sub_100D9B8  +
push ebx  +
push edi  +
call sub_100C9B2  +
cmp eax 3Bh +
jbe loc_100A02E  +
push 3Bh  +
push edi  +
lea eax [ebp+var_C88] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_C88] +
push eax  +
jmp loc_100A02F  +
push edi  +
push 0E7Ch  +
call sub_100E6E4  +
push eax  +
push offset aSS  +
lea eax [ebp+String] +
push 0FFh  +
push eax  +
call sub_1003137  +
add esp 14h +
push ebx  +
push [ebp+var_EE4]  +
call sub_100C9B2  +
push ebx  +
push [ebp+var_ECC]  +
mov edi eax +
call sub_100C9B2  +
add edi eax +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
lea eax [eax+edi+1] +
cmp eax 0FEh +
jbe loc_100A144  +
push 0E80h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_ED0] +
push eax  +
call sub_100CF4F  +
jmp loc_1009EE4  +
push ebx  +
push [ebp+var_ED4]  +
call sub_100C9B2  +
sub edi eax +
push ebx  +
lea eax [ebp+var_8C] +
push eax  +
call sub_100C9B2  +
add eax edi +
cmp eax 0FEh +
ja loc_100A08B  +
mov edi 0FFh +
push edi  +
push offset asc_1001880  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
push 3  +
lea eax [ebp+var_8C] +
push eax  +
call sub_100E40E  +
push ebx  +
lea eax [ebp+var_8C] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100A130  +
push edi  +
lea eax [ebp+var_8C] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
push edi  +
push offset asc_1001880  +
lea eax [ebp+String] +
push eax  +
call sub_100D32C  +
jmp loc_100A149  +
mov edi 0FFh +
push edi  +
push [ebp+var_ECC]  +
lea eax [ebp+var_688] +
push eax  +
call sub_100D2E9  +
push edi  +
push offset asc_10015C0  +
lea eax [ebp+var_688] +
push eax  +
call sub_100D32C  +
push edi  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_688] +
push eax  +
call sub_100D32C  +
push edi  +
push offset String  +
lea eax [ebp+var_688] +
push eax  +
call sub_100D32C  +
push edi  +
push [ebp+var_EE4]  +
lea eax [ebp+var_688] +
push eax  +
call sub_100D32C  +
lea eax [ebp+var_ED0] +
push eax  +
call sub_100CF4F  +
push ebx  +
lea eax [ebp+var_688] +
push eax  +
call sub_100C9B2  +
push eax  +
lea eax [ebp+var_688] +
push eax  +
push [ebp+var_EC0]  +
call sub_100EB79  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_EC0]  +
call sub_10027C1  +
cmp eax esi +
jnz loc_100A200  +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
jmp loc_100A0B7  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_100A251  +
push [ebp+var_EDC]  +
push 0CEh  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
mov esi eax +
jmp loc_100A1F5  +
push 86h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100A1E9  +
lea eax [ebp+var_288] +
push eax  +
call sub_100275E  +
push 8  +
call ds:SetLastError  +
push 7Ch  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call edi  +
add eax 40h +
push eax  +
call sub_100C80A  +
jmp loc_1009EE4  +
push 7Dh  +
jmp loc_1009EC7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A18h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 1F8h +
push esi  +
mov [ebp+var_9FC] eax +
lea eax [ebp+var_1FC] +
push ebx  +
push eax  +
mov [ebp+var_9E4] ebx +
mov [ebp+var_A04] ebx +
mov [ebp+var_A18] ebx +
mov [ebp+var_A0C] ebx +
mov [ebp+lpString] offset dword_1001344 +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
lea eax [ebp+var_5F8] +
push ebx  +
push eax  +
mov [ebp+var_9F4] ebx +
mov [ebp+lpString1] ebx +
mov [ebp+var_9E8] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
add esi 2 +
push esi  +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov [ebp+var_9F8] ebx +
mov [ebp+var_9EC] ebx +
mov [ebp+sz] ebx +
call memset  +
push esi  +
lea eax [ebp+var_7F8] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 30h +
mov [ebp+var_A10] ebx +
mov [ebp+var_A00] ebx +
mov ecx 1E0h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100A388  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_A18] +
push 8  +
mov [ebp+var_9B0] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_98C] +
inc esi  +
push eax  +
mov [ebp+var_9BC] offset aDelete +
mov [ebp+var_9D4] 0Ah +
mov [ebp+var_9C4] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_93C] +
push eax  +
mov [ebp+var_96C] offset aS +
mov [ebp+var_97C] 12000h +
mov [ebp+var_978] ebx +
mov [ebp+var_984] esi +
mov [ebp+var_974] esi +
call sub_100D2A6  +
push 8  +
push edi  +
lea eax [ebp+var_8EC] +
push eax  +
mov [ebp+var_91C] offset aU +
mov [ebp+var_92C] 12000h +
mov [ebp+var_928] ebx +
mov [ebp+var_934] esi +
mov [ebp+var_924] esi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_8C0] eax +
push edi  +
lea eax [ebp+var_89C] +
push eax  +
mov [ebp+var_8CC] offset aP +
mov [ebp+var_8DC] 10h +
mov [ebp+var_8D8] ebx +
mov [ebp+var_8E4] esi +
mov [ebp+var_8D4] esi +
mov [ebp+var_8BC] 0FEh +
call sub_100D2A6  +
lea eax [ebp+var_A0C] +
push 8  +
mov [ebp+var_870] eax +
push edi  +
lea eax [ebp+var_84C] +
push eax  +
mov [ebp+var_87C] offset a?H +
mov [ebp+var_88C] 20000h +
mov [ebp+var_888] ebx +
mov [ebp+var_894] 0Ah +
mov [ebp+var_884] esi +
call sub_100D2A6  +
lea eax [ebp+var_9F8] +
push ebx  +
mov [ebp+var_820] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push ebx  +
push [ebp+var_9FC]  +
mov [ebp+var_82C] offset aId +
mov [ebp+var_83C] 82000h +
mov [ebp+var_838] ebx +
mov [ebp+var_844] 3 +
mov [ebp+var_834] esi +
push [ebp+arg_0]  +
call sub_1010470  +
test eax eax +
jnz loc_100A556  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_100AE3B  +
mov eax [ebp+var_960] +
mov [ebp+lpString1] eax +
mov eax [ebp+var_910] +
mov [ebp+var_9E8] eax +
cmp eax ebx +
jnz loc_100A586  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_9E8] eax +
cmp eax ebx +
jz loc_100A53D  +
push 3  +
push [ebp+lpString1]  +
call sub_100E40E  +
push 3  +
push [ebp+var_9E8]  +
call sub_100E40E  +
cmp [ebp+var_A0C] esi +
jnz loc_100A5CA  +
cmp [ebp+arg_0] 3 +
jbe loc_100A5CA  +
push 5  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100AE3B  +
cmp [ebp+var_970] ebx +
jz loc_100A601  +
push ebx  +
push [ebp+lpString1]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100A601  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100AE23  +
cmp [ebp+var_920] ebx +
jz loc_100A620  +
push ebx  +
push [ebp+var_9E8]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100A620  +
push 30Fh  +
jmp loc_100A5E7  +
cmp [ebp+var_970] ebx +
jnz loc_100A647  +
cmp [ebp+var_920] ebx +
jz loc_100A64F  +
push 30Bh  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
call sub_100C6F0  +
jmp loc_100A5EC  +
cmp [ebp+var_920] ebx +
jnz loc_100A65E  +
cmp [ebp+var_8D0] ebx +
jz loc_100A65E  +
push 30Ch  +
jmp loc_100A635  +
push [ebp+lpString1]  +
cmp [ebp+var_A0C] ebx +
jz loc_100A685  +
call sub_1003071  +
cmp eax esi +
jz loc_100AE23  +
call sub_10026E3  +
xor esi esi +
jmp loc_100AE23  +
call sub_1010CD3  +
test eax eax +
jz loc_100A6BB  +
call sub_10107D7  +
test eax eax +
jnz loc_100A6BB  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_100AE3B  +
push [ebp+lpString1]  +
call sub_1010CD3  +
test eax eax +
jnz loc_100A725  +
cmp [ebp+var_8D0] ebx +
jz loc_100A6F9  +
push ebx  +
push esi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_100A6F1  +
mov [ebp+var_9F4] esi +
jmp loc_100A725  +
cmp [ebp+var_8D0] ebx +
jnz loc_100A725  +
cmp [ebp+var_970] ebx +
jnz loc_100A709  +
cmp [ebp+var_920] ebx +
jz loc_100A725  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+var_9F4] esi +
call sub_100D2E9  +
push 2  +
mov edi offset Str2 +
push edi  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_100A79F  +
push 3  +
push offset asc_1001584  +
push [ebp+lpString1]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_100A79F  +
push edi  +
push [ebp+lpString1]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_9FC] eax +
cmp eax ebx +
jnz loc_100A789  +
push ebx  +
push esi  +
push edi  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_100A789  +
push 0E7Dh  +
jmp loc_100A5B0  +
push 0FEh  +
push [ebp+var_9FC]  +
push [ebp+lpString1]  +
call sub_100D2E9  +
push [ebp+lpString1]  +
call sub_1010CD3  +
mov edi ds:__iob_func +
cmp eax esi +
jnz loc_100A7DA  +
push ebx  +
push [ebp+var_9E8]  +
call sub_100C9B2  +
test eax eax +
jz loc_100A7DA  +
push 313h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+var_9EC] +
push eax  +
push [ebp+var_9F4]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_9E8]  +
push [ebp+lpString1]  +
call sub_1003196  +
test eax eax +
jz loc_100AE12  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_9E4] eax +
cmp eax ebx +
jnz loc_100A83A  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_100AE12  +
push eax  +
call sub_100E857  +
mov ecx [ebp+var_9F8] +
cmp ecx ebx +
jbe loc_100ADE7  +
cmp ecx eax +
ja loc_100ADE7  +
cmp eax esi +
jnz loc_100A864  +
push 87h  +
jmp loc_100ADE9  +
push ebx  +
dec ecx  +
push ecx  +
push [ebp+var_9E4]  +
call sub_100EF86  +
push eax  +
call sub_100C9B2  +
cmp eax 0FEh +
jbe loc_100A8A4  +
push 0FEh  +
push 0C12h  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 40h +
push eax  +
call sub_100E591  +
add esp 14h +
jmp loc_100ADFA  +
mov eax [ebp+var_9F8] +
dec eax  +
push eax  +
push [ebp+var_9E4]  +
call sub_100EF86  +
push 22h  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
mov [ebp+var_A08] eax +
cmp eax ebx +
jnz loc_100A8FF  +
push 829h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_A04] +
push eax  +
call sub_100E82C  +
jmp loc_100AE06  +
push 0FFh  +
push offset aRedirect_0  +
lea eax [ebp+sz] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+sz] +
push eax  +
call ds:CharLowerW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
mov eax [ebp+var_A08] +
add eax 2 +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_100A943  +
mov [ebp+var_A10] esi +
mov eax [ebp+var_9F8] +
dec eax  +
push eax  +
push [ebp+var_9E4]  +
call sub_100EE7C  +
lea eax [ebp+lpString] +
push eax  +
push [ebp+var_9E4]  +
call sub_10027C1  +
cmp eax esi +
jz loc_100ADFA  +
cmp [ebp+var_9F8] esi +
jnz loc_100AA36  +
push ebx  +
push [ebp+var_9E4]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+var_A08] eax +
call sub_100C9B2  +
mov [ebp+var_9FC] eax +
lea eax [eax+eax+14h] +
push eax  +
call sub_100CBB3  +
mov [ebp+var_A00] eax +
cmp eax ebx +
jnz loc_100AA0C  +
push 10001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
push [ebp+var_9EC]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100CF4F  +
push [ebp+var_9FC]  +
push [ebp+var_A08]  +
push [ebp+var_A00]  +
call sub_100D2E9  +
push offset asc_10015C0  +
push [ebp+var_A00]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+lpString]  +
push offset AppName  +
call ds:WritePrivateProfileSectionW  +
test eax eax +
jz loc_100ADDD  +
push [ebp+var_9F8]  +
push 0CFh  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call edi  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
cmp [ebp+var_9F8] esi +
jnz loc_100AB1E  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+var_A00]  +
push offset aDefault  +
push offset aBootLoader  +
call ds:WritePrivateProfileStringW  +
test eax eax +
jnz loc_100AB12  +
push 1B7h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
push [ebp+var_9EC]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A00] +
jmp loc_100AE35  +
lea eax [ebp+var_A00] +
push eax  +
call sub_100CF4F  +
push [ebp+var_9E4]  +
call sub_100E857  +
mov [ebp+var_A14] eax +
mov [ebp+var_9FC] ebx +
mov [ebp+var_9F4] ebx +
cmp eax ebx +
jbe loc_100ABCA  +
push [ebp+var_9F4]  +
push [ebp+var_9E4]  +
call sub_100EF86  +
push 22h  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
mov [ebp+var_A08] eax +
cmp eax ebx +
jz loc_100AC2A  +
lea eax [ebp+sz] +
push eax  +
call ds:CharLowerW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
mov eax [ebp+var_A08] +
add eax 2 +
push eax  +
call sub_100D279  +
test eax eax +
jz loc_100ABAA  +
mov eax [ebp+var_9F8] +
dec eax  +
cmp [ebp+var_9F4] eax +
jz loc_100ABAA  +
mov [ebp+var_9FC] esi +
inc [ebp+var_9F4]  +
mov eax [ebp+var_9F4] +
cmp eax [ebp+var_A14] +
jb loc_100AB43  +
cmp [ebp+var_9FC] ebx +
jnz loc_100ADC1  +
cmp [ebp+var_A10] ebx +
jz loc_100ADC1  +
lea eax [ebp+String] +
push eax  +
push offset aRedirect  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_100AC69  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_A04] +
jmp loc_100AE0C  +
push 829h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_100AE12  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100AD1F  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
push offset aRedirect  +
call sub_10025BC  +
cmp eax esi +
jnz loc_100ACB0  +
push 0E83h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
jmp loc_100AD1F  +
push 0E81h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_A04] +
push eax  +
call sub_100E82C  +
push [ebp+var_9EC]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+String] +
push eax  +
push offset aRedirectbaudra  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_1002B78  +
cmp eax esi +
jnz loc_100AD79  +
push 20001h  +
call edi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
jmp loc_100AC1F  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100ADC1  +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
push offset aRedirectbaudra  +
call sub_10025BC  +
cmp eax esi +
jnz loc_100ADAB  +
push 0E84h  +
jmp loc_100ADB0  +
push 0E82h  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 20h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
mov esi eax +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
jmp loc_100AD68  +
push 88h  +
jmp loc_100AAA9  +
push 7Dh  +
call sub_100E6E4  +
push eax  +
call edi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_9E4] +
push eax  +
call sub_100E82C  +
push [ebp+var_9EC]  +
push [ebp+lpString1]  +
call sub_10030B6  +
lea eax [ebp+lpString1] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_100CF4F  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 260Ch +
call __alloca_probe  +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi 1FAh +
push esi  +
mov [ebp+var_21EC] eax +
lea eax [ebp+var_9FC] +
push ebx  +
push eax  +
mov [ebp+var_2210] ebx +
mov [ebp+var_220C] ebx +
mov [ebp+lpKeyName] ebx +
mov [ebp+var_21E8] ebx +
mov [ebp+var_21F4] ebx +
mov [ebp+var_21F0] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
push 1F8h  +
lea eax [ebp+var_13F8] +
push ebx  +
push eax  +
mov [ebp+var_13FC] ebx +
call memset  +
push esi  +
lea eax [ebp+var_BFC] +
push ebx  +
push eax  +
mov dword ptr [ebp+Start] ebx +
call memset  +
mov esi ds:dword_10018F4 +
mov edi ds:dword_10018F8 +
push 1F6h  +
lea eax [ebp+var_5FC] +
push ebx  +
push eax  +
mov [ebp+var_604] esi +
mov [ebp+var_600] edi +
call memset  +
push 1F6h  +
lea eax [ebp+var_DF8] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_E00] esi +
mov [ebp+var_DFC] edi +
call memset  +
push 1F6h  +
lea eax [ebp+var_11F8] +
push ebx  +
push eax  +
mov [ebp+var_1200] esi +
mov [ebp+var_11FC] edi +
call memset  +
add esp 48h +
push 1F6h  +
lea eax [ebp+var_3FC] +
push ebx  +
push eax  +
mov [ebp+var_404] esi +
mov [ebp+var_400] edi +
call memset  +
push 1F8h  +
lea eax [ebp+var_7FC] +
push ebx  +
push eax  +
mov [ebp+var_2208] ebx +
mov [ebp+lpString] ebx +
mov [ebp+var_21F8] ebx +
mov dword ptr [ebp+String1] ebx +
call memset  +
mov esi 1FAh +
push esi  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+FileName] ebx +
call memset  +
push esi  +
mov [ebp+var_1000] ebx +
push ebx  +
lea eax [ebp+var_FFC] +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_15F8] +
push ebx  +
push eax  +
mov [ebp+var_2204] ebx +
mov [ebp+var_15FC] ebx +
call memset  +
add esp 3Ch +
lea ecx [esi-6Ah] +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100AFE7  +
push 0FEh  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100D2E9  +
push 8  +
mov esi offset aParser2 +
push esi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_100D2A6  +
lea eax [ebp+var_2210] +
push 8  +
mov [ebp+var_1760] eax +
xor edi edi +
push esi  +
lea eax [ebp+var_173C] +
inc edi  +
push eax  +
mov [ebp+var_176C] offset aQuery +
mov [ebp+var_1784] 0Ah +
mov [ebp+var_1774] edi +
call sub_100D2A6  +
push 8  +
push esi  +
lea eax [ebp+var_16EC] +
push eax  +
mov [ebp+var_171C] offset aS +
mov [ebp+var_172C] 12000h +
mov [ebp+var_1728] ebx +
mov [ebp+var_1734] edi +
mov [ebp+var_1724] edi +
call sub_100D2A6  +
push 8  +
push esi  +
lea eax [ebp+var_169C] +
push eax  +
mov [ebp+var_16CC] offset aU +
mov [ebp+var_16DC] 12000h +
mov [ebp+var_16D8] ebx +
mov [ebp+var_16E4] edi +
mov [ebp+var_16D4] edi +
call sub_100D2A6  +
lea eax [ebp+String1] +
push 8  +
mov [ebp+var_1670] eax +
push esi  +
lea eax [ebp+var_164C] +
push eax  +
mov [ebp+var_167C] offset aP +
mov [ebp+var_168C] 10h +
mov [ebp+var_1688] ebx +
mov [ebp+var_1694] edi +
mov [ebp+var_1684] edi +
mov [ebp+var_166C] 0FEh +
call sub_100D2A6  +
push ebx  +
lea eax [ebp+var_220C] +
mov [ebp+var_1620] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 5  +
push ebx  +
push [ebp+var_21EC]  +
mov [ebp+var_162C] offset a?H +
push [ebp+arg_0]  +
mov [ebp+var_163C] 20000h +
mov [ebp+var_1638] ebx +
mov [ebp+var_1644] 0Ah +
mov [ebp+var_1634] edi +
call sub_1010470  +
test eax eax +
jnz loc_100B170  +
push 20001h  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100E6FC  +
jmp loc_100BBAB  +
mov eax [ebp+var_1710] +
mov [ebp+lpString] eax +
mov eax [ebp+var_16C0] +
mov [ebp+var_21F8] eax +
cmp eax ebx +
jnz loc_100B1A0  +
push 1FCh  +
call sub_100CBB3  +
mov [ebp+var_21F8] eax +
cmp eax ebx +
jz loc_100B157  +
push 3  +
push [ebp+lpString]  +
call sub_100E40E  +
push 3  +
push [ebp+var_21F8]  +
call sub_100E40E  +
cmp [ebp+var_220C] edi +
jnz loc_100B1E4  +
cmp [ebp+arg_0] 3 +
jbe loc_100B1E4  +
push 2  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100BBAB  +
cmp [ebp+var_1720] ebx +
jz loc_100B21B  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100B21B  +
push 30Eh  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
jmp loc_100BB93  +
cmp [ebp+var_16D0] ebx +
jz loc_100B23A  +
push ebx  +
push [ebp+var_21F8]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100B23A  +
push 30Fh  +
jmp loc_100B201  +
cmp [ebp+var_1720] ebx +
jnz loc_100B251  +
cmp [ebp+var_16D0] ebx +
jz loc_100B259  +
push 30Bh  +
jmp loc_100B201  +
cmp [ebp+var_16D0] ebx +
jnz loc_100B268  +
cmp [ebp+var_1680] ebx +
jz loc_100B268  +
push 30Ch  +
jmp loc_100B201  +
push [ebp+lpString]  +
cmp [ebp+var_220C] ebx +
jz loc_100B28F  +
call sub_1003071  +
cmp eax edi +
jz loc_100BB93  +
call sub_1002735  +
xor edi edi +
jmp loc_100BB93  +
call sub_1010CD3  +
test eax eax +
jz loc_100B2C9  +
call sub_10107D7  +
test eax eax +
jnz loc_100B343  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
call sub_100D1D6  +
jmp loc_100BBAB  +
push 2  +
mov esi offset Str2 +
push esi  +
push [ebp+lpString]  +
call ds:StrCmpNW  +
test eax eax +
jnz loc_100B343  +
push 3  +
push offset asc_1001584  +
push [ebp+lpString]  +
call ds:StrCmpNW  +
test eax eax +
jz loc_100B343  +
push esi  +
push [ebp+lpString]  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov [ebp+var_21EC] eax +
cmp eax ebx +
jnz loc_100B32D  +
push ebx  +
push edi  +
push esi  +
push [ebp+lpString]  +
call sub_100C9D3  +
test eax eax +
jz loc_100B32D  +
push 0E7Dh  +
jmp loc_100B201  +
push 0FFh  +
push [ebp+var_21EC]  +
push [ebp+lpString]  +
call sub_100D2E9  +
push [ebp+lpString]  +
call sub_1010CD3  +
test eax eax +
jnz loc_100B3AD  +
cmp [ebp+var_1680] ebx +
jz loc_100B381  +
push ebx  +
push edi  +
push offset Buffer  +
lea eax [ebp+String1] +
push eax  +
call sub_100C9D3  +
test eax eax +
jnz loc_100B379  +
mov [ebp+lpKeyName] edi +
jmp loc_100B3AD  +
cmp [ebp+var_1680] ebx +
jnz loc_100B3AD  +
cmp [ebp+var_1720] ebx +
jnz loc_100B391  +
cmp [ebp+var_16D0] ebx +
jz loc_100B3AD  +
push 0FEh  +
push offset word_10013EC  +
lea eax [ebp+String1] +
push eax  +
mov [ebp+lpKeyName] edi +
call sub_100D2E9  +
push [ebp+lpString]  +
call sub_1010CD3  +
mov esi ds:__iob_func +
cmp eax edi +
jnz loc_100B3E8  +
push ebx  +
push [ebp+var_21F8]  +
call sub_100C9B2  +
test eax eax +
jz loc_100B3E8  +
push 313h  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
push edi  +
lea eax [ebp+var_21DC] +
push eax  +
push edi  +
call sub_100289F  +
call sub_100E7B7  +
mov [ebp+var_21E8] eax +
call sub_100E7B7  +
mov [ebp+var_21F0] eax +
cmp [ebp+var_21E8] ebx +
jz loc_100BB76  +
cmp eax ebx +
jz loc_100BB76  +
lea eax [ebp+var_2204] +
push eax  +
push [ebp+lpKeyName]  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push [ebp+var_21F8]  +
push [ebp+lpString]  +
call sub_1003196  +
test eax eax +
jnz loc_100B47E  +
lea eax [ebp+var_21E8] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21F0] +
push eax  +
call sub_100E82C  +
push [ebp+var_2204]  +
push [ebp+lpString]  +
call sub_10030B6  +
jmp loc_100BB93  +
push offset AppName  +
lea eax [ebp+FileName] +
push eax  +
call sub_100237A  +
mov [ebp+var_21F4] eax +
push offset aBootLoader  +
lea eax [ebp+FileName] +
push eax  +
call sub_10021EA  +
mov [ebp+var_21F0] eax +
cmp eax ebx +
jz loc_100BB65  +
cmp [ebp+var_21F4] ebx +
jz loc_100BB65  +
push [ebp+var_21F4]  +
call sub_100E857  +
mov [ebp+var_2200] eax +
mov [ebp+var_21EC] ebx +
cmp eax ebx +
jbe loc_100B739  +
push 4  +
push [ebp+var_21E8]  +
call sub_100ED44  +
push 0FEh  +
mov [ebp+var_21FC] eax +
push offset dword_1001344  +
lea eax [ebp+var_13FC] +
push eax  +
call sub_100D2E9  +
push 0FFh  +
push offset dword_1001344  +
lea eax [ebp+var_604] +
push eax  +
call sub_100D2E9  +
push 0FFh  +
push offset dword_1001344  +
lea eax [ebp+var_404] +
push eax  +
call sub_100D2E9  +
cmp [ebp+var_21F4] ebx +
jz loc_100B8AF  +
push [ebp+var_21EC]  +
push [ebp+var_21F4]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+lpKeyName] eax +
call sub_100C9B2  +
cmp eax 0FEh +
ja loc_100B800  +
cmp [ebp+lpKeyName] ebx +
jz loc_100B884  +
push 0FFh  +
push [ebp+lpKeyName]  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
push 0FFh  +
push [ebp+lpKeyName]  +
lea eax [ebp+Start] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+String] +
push 3Dh  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_100B845  +
xor ecx ecx +
mov [eax] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100C9B2  +
test eax eax +
jz loc_100B845  +
push 0FFh  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+var_1200] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+var_15FC] +
push eax  +
lea eax [ebp+Start] +
push eax  +
call sub_10030D2  +
mov [ebp+lpKeyName] eax +
cmp eax ebx +
jz loc_100B845  +
lea eax [ebp+Start] +
push 22h  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
inc eax  +
inc eax  +
push 0FFh  +
push eax  +
lea eax [ebp+var_404] +
push eax  +
call sub_100D2E9  +
push 3  +
lea eax [ebp+var_404] +
push eax  +
call sub_100E40E  +
mov eax [ebp+var_21EC] +
push 0Ah  +
lea ecx [ebp+var_E00] +
inc eax  +
push ecx  +
push eax  +
mov [ebp+var_21EC] eax +
call ds:_ltow  +
add esp 0Ch +
push ebx  +
lea eax [ebp+var_E00] +
push eax  +
push ebx  +
push [ebp+var_21FC]  +
push [ebp+var_21E8]  +
call sub_100F306  +
push ebx  +
push [ebp+lpKeyName]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100B696  +
mov [ebp+lpKeyName] offset dword_10018F4 +
push ebx  +
push [ebp+lpKeyName]  +
push edi  +
push [ebp+var_21FC]  +
push [ebp+var_21E8]  +
call sub_100F306  +
push ebx  +
lea eax [ebp+var_1200] +
push eax  +
push 2  +
push [ebp+var_21FC]  +
push [ebp+var_21E8]  +
call sub_100F306  +
push ebx  +
lea eax [ebp+var_404] +
push eax  +
call sub_100C9B2  +
push 0FFh  +
test eax eax +
jz loc_100B6F5  +
lea eax [ebp+var_404] +
push eax  +
lea eax [ebp+var_604] +
push eax  +
call sub_100D32C  +
jmp loc_100B706  +
push offset dword_10018F4  +
lea eax [ebp+var_604] +
push eax  +
call sub_100D2E9  +
push ebx  +
lea eax [ebp+var_604] +
push eax  +
push 3  +
push [ebp+var_21FC]  +
push [ebp+var_21E8]  +
call sub_100F306  +
mov eax [ebp+var_21EC] +
mov [ebp+var_21EC] eax +
cmp eax [ebp+var_2200] +
jb loc_100B4DF  +
push [ebp+var_21F0]  +
call sub_100E857  +
mov [ebp+var_21FC] eax +
cmp eax 0FEh +
jbe loc_100B75B  +
mov [ebp+var_21FC] 0FEh +
mov [ebp+var_21EC] edi +
mov [ebp+var_2200] ebx +
cmp [ebp+var_21FC] ebx +
jbe loc_100B986  +
push [ebp+var_2200]  +
push [ebp+var_21F0]  +
call sub_100EF86  +
push 1FCh  +
mov [ebp+lpKeyName] eax +
call sub_100CBB3  +
mov ecx [ebp+var_2200] +
mov [ebp+ecx*4+var_260C] eax +
cmp eax ebx +
jz loc_100B910  +
push eax  +
push [ebp+lpKeyName]  +
lea eax [ebp+FileName] +
push offset aBootLoader  +
push eax  +
call sub_1002B78  +
cmp eax edi +
jz loc_100B910  +
push ebx  +
push [ebp+lpKeyName]  +
call sub_100C9B2  +
cmp eax [ebp+var_2208] +
jbe loc_100B7E3  +
mov [ebp+var_2208] eax +
inc [ebp+var_2200]  +
mov eax [ebp+var_2200] +
cmp eax [ebp+var_21FC] +
jb loc_100B773  +
jmp loc_100B916  +
push 0E80h  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_21F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21F4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21E8] +
jmp loc_100B462  +
push 829h  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_21F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21E8] +
push eax  +
call sub_100E82C  +
jmp loc_100B905  +
push 8  +
call ds:SetLastError  +
push 7Ch  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call esi  +
add eax 40h +
push eax  +
call sub_100C80A  +
jmp loc_100B816  +
push 8  +
call ds:SetLastError  +
push 7Ch  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 40h +
push eax  +
call sub_100D36F  +
call esi  +
add eax 40h +
push eax  +
call sub_100C80A  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_21F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21E8] +
push eax  +
call sub_100E82C  +
cmp [ebp+var_21F4] ebx +
jz loc_100B468  +
lea eax [ebp+var_21F4] +
jmp loc_100B462  +
mov [ebp+var_21EC] ebx +
cmp [ebp+var_2208] 0FEh +
jb loc_100B928  +
mov [ebp+var_21EC] ebx +
cmp [ebp+var_21EC] ebx +
jnz loc_100B986  +
mov eax [ebp+var_21FC] +
lea ebx [ebp+var_260C] +
mov [ebp+lpKeyName] eax +
push ebx  +
call sub_100CF4F  +
add ebx 4 +
dec [ebp+lpKeyName]  +
jnz loc_100B942  +
push 20001h  +
call esi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
lea eax [ebp+var_21E8] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21F0] +
jmp loc_100B879  +
push offset asc_10018F0  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push 0ACh  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push 0ADh  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
mov [ebp+var_2200] ebx +
cmp [ebp+var_21FC] ebx +
jbe loc_100BA95  +
push [ebp+var_2200]  +
push [ebp+var_21F0]  +
call sub_100EF86  +
push ebx  +
push eax  +
mov [ebp+lpKeyName] eax +
call sub_100C9B2  +
push [ebp+lpKeyName]  +
mov ecx eax +
mov eax [ebp+var_2208] +
sub eax ecx +
inc eax  +
mov [ebp+var_21EC] eax +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push 0FFh  +
push offset asc_10018EC  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100D2E9  +
mov eax [ebp+var_21EC] +
inc eax  +
push eax  +
push offset asc_1001888  +
lea eax [ebp+var_1000] +
push eax  +
call sub_100D32C  +
lea eax [ebp+var_1000] +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
mov eax [ebp+var_2200] +
push [ebp+eax*4+var_260C]  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push offset asc_10018F0  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
inc [ebp+var_2200]  +
mov eax [ebp+var_2200] +
cmp eax [ebp+var_21FC] +
jb loc_100B9D4  +
push offset asc_10018F0  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push 0AAh  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push 0ABh  +
call sub_100E6E4  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100D36F  +
push [ebp+var_21E8]  +
lea eax [ebp+var_21DC] +
push edi  +
push eax  +
push 4  +
call sub_101218C  +
cmp [ebp+var_21FC] ebx +
jbe loc_100BB06  +
mov edi [ebp+var_21FC] +
lea esi [ebp+var_260C] +
push esi  +
call sub_100CF4F  +
add esi 4 +
dec edi  +
jnz loc_100BAFA  +
lea eax [ebp+var_21E8] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21F0] +
push eax  +
call sub_100E82C  +
lea eax [ebp+var_21F4] +
push eax  +
call sub_100E82C  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
push [ebp+var_2204]  +
mov esi eax +
push [ebp+lpString]  +
call sub_10030B6  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_21F8] +
push eax  +
call sub_100CF4F  +
mov eax esi +
jmp loc_100BBAD  +
lea eax [ebp+FileName] +
push eax  +
call sub_100275E  +
jmp loc_100B450  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
push 20001h  +
call esi  +
add eax 40h +
push eax  +
call sub_100E6FC  +
lea eax [ebp+lpString] +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_21F8] +
push eax  +
call sub_100CF4F  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_4] +
push esi  +
push esi  +
push 1  +
push esi  +
mov [ebp+var_44] esi +
mov [ebp+var_10] esi +
mov [ebp+var_18] esi +
mov [ebp+var_38] esi +
mov [ebp+var_28] esi +
mov [ebp+var_30] esi +
mov [ebp+var_20] esi +
mov [ebp+var_40] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_14] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_24] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_34] esi +
mov [ebp+var_3C] esi +
call ds:HeapSetInformation  +
mov ebx [ebp+arg_0] +
cmp ebx 1 +
jnz loc_100BC68  +
call sub_10107D7  +
test eax eax +
jnz loc_100BC5C  +
push 0E87h  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
xor esi esi +
inc esi  +
call sub_100D1D6  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn   +
push edi  +
push 1  +
call sub_100AE53  +
mov esi eax +
jmp loc_100BC46  +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_44] +
push eax  +
push edi  +
push ebx  +
call sub_1001B55  +
cmp eax 1 +
jz loc_100BC43  +
cmp [ebp+var_44] 1 +
jnz loc_100BD36  +
cmp [ebp+var_10] esi +
jnz loc_100BD36  +
cmp [ebp+var_18] esi +
jnz loc_100BD36  +
cmp [ebp+var_38] esi +
jnz loc_100BD36  +
cmp [ebp+var_28] esi +
jnz loc_100BD3B  +
cmp [ebp+var_20] esi +
jnz loc_100BD6B  +
cmp [ebp+var_30] esi +
jnz loc_100BD70  +
cmp [ebp+var_40] esi +
jnz loc_100BD88  +
cmp [ebp+var_8] esi +
jnz loc_100BD94  +
cmp [ebp+var_C] esi +
jnz loc_100BDA0  +
cmp [ebp+var_14] esi +
jnz loc_100BDAC  +
cmp [ebp+var_1C] esi +
jnz loc_100BDB8  +
cmp [ebp+var_24] esi +
jnz loc_100BDC4  +
cmp [ebp+var_2C] esi +
jnz loc_100BDE3  +
cmp [ebp+var_34] esi +
jnz loc_100BE02  +
cmp [ebp+var_3C] esi +
jnz loc_100BE1C  +
call sub_100366C  +
cmp [ebp+var_28] esi +
jz loc_100BD47  +
push edi  +
push ebx  +
call sub_10036E8  +
jmp loc_100BC64  +
cmp [ebp+var_10] esi +
jz loc_100BD53  +
push edi  +
push ebx  +
call sub_1009855  +
cmp [ebp+var_38] esi +
jz loc_100BD5F  +
push edi  +
push ebx  +
call sub_100A2B3  +
cmp [ebp+var_18] esi +
jz loc_100BD6B  +
push edi  +
push ebx  +
call sub_100AE53  +
cmp [ebp+var_30] esi +
jz loc_100BD77  +
push edi  +
push ebx  +
call sub_1004058  +
cmp [ebp+var_20] esi +
jz loc_100BD83  +
push edi  +
push ebx  +
call sub_100467F  +
cmp [ebp+var_40] esi +
jz loc_100BD8F  +
push edi  +
push ebx  +
call sub_1004EF6  +
cmp [ebp+var_8] esi +
jz loc_100BD9B  +
push edi  +
push ebx  +
call sub_1006010  +
cmp [ebp+var_C] esi +
jz loc_100BDA7  +
push edi  +
push ebx  +
call sub_10076B5  +
cmp [ebp+var_14] esi +
jz loc_100BDB3  +
push edi  +
push ebx  +
call sub_10081F4  +
cmp [ebp+var_1C] esi +
jz loc_100BDBF  +
push edi  +
push ebx  +
call sub_1008C49  +
cmp [ebp+var_24] esi +
jz loc_100BDDE  +
push 1  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
xor eax eax +
inc eax  +
cmp [ebp+var_2C] esi +
jz loc_100BDFD  +
push 1  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
xor eax eax +
inc eax  +
cmp [ebp+var_34] esi +
jz loc_100BE1C  +
push 1  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
xor eax eax +
inc eax  +
cmp [ebp+var_3C] 1 +
jnz loc_100BC64  +
push 1  +
call sub_100E6E4  +
push eax  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100D36F  +
xor eax eax +
inc eax  +
jmp loc_100BC64  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_100BE66  +
test eax eax +
jnz loc_100BE6B  +
mov ecx [esi] +
test ecx ecx +
jz loc_100BE63  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_100BE57  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1013058 +
push offset dword_1013048  +
push dword_1013054  +
mov dword_1013048 eax +
push offset dword_1013038  +
push offset dword_101303C  +
push offset dword_1013034  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1013044 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_100BEF5  +
cmp eax esi +
jnz loc_100BEE8  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_100BEF8  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100BECF  +
xor esi esi +
inc esi  +
mov eax dword_10134AC +
cmp eax esi +
jnz loc_100BF0B  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_100BF46  +
mov eax dword_10134AC +
test eax eax +
jnz loc_100BF40  +
mov dword_10134AC esi +
push offset dword_100122C  +
push offset dword_1001220  +
call sub_100BE4A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100BF46  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100C010  +
mov dword_1013050 esi +
mov eax dword_10134AC +
cmp eax esi +
jnz loc_100BF6A  +
push offset dword_100121C  +
push offset dword_1001214  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10134AC 2 +
cmp [ebp+var_1C] ebx +
jnz loc_100BF77  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10134B4 ebx +
jz loc_100BF98  +
push offset dword_10134B4  +
call sub_100C249  +
pop ecx  +
test eax eax +
jz loc_100BF98  +
push ebx  +
push 2  +
push ebx  +
call dword_10134B4  +
push dword_1013038  +
push dword_101303C  +
push dword_1013034  +
call sub_100BBC3  +
add esp 0Ch +
mov dword_101304C eax +
cmp dword_1013040 ebx +
jnz loc_100BFF6  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_101304C eax +
xor ebx ebx +
cmp dword_1013040 ebx +
jnz loc_100BFF6  +
push eax  +
call ds:_exit  +
cmp dword_1013050 ebx +
jnz loc_100C004  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_101304C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100C02D  +
xor eax eax +
jmp loc_100C07A  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100C029  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_100C067  +
cmp ecx 20Bh +
jnz loc_100C029  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100C029  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_100C075  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100C029  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1013040 eax +
call sub_100C3E2  +
push eax  +
call ds:__set_app_type  +
or dword_10134A4 0FFFFFFFFh +
or dword_10134A8 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1013060 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_101305C +
mov [eax] ecx +
call sub_100C374  +
cmp dword_1013018 0 +
jnz loc_100C0D3  +
push offset sub_100C374  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100C35C  +
xor eax eax +
retn   +
***
call sub_100C421  +
jmp sub_100BEAD  +
***
cmp ecx dword_1013000 +
jnz loc_100C0FA  +
retn 0  +
jmp loc_100C4B7  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100C18D  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100C18D  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100C187  +
cmp eax 19930521h +
jz loc_100C187  +
cmp eax 19930522h +
jz loc_100C187  +
cmp eax 1994000h +
jnz loc_100C18D  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset loc_100C150  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_100C1D6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_100C1D2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_100C23D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_100C235  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_100C23F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_100C225  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_100C1C0  +
pop ecx  +
test eax eax +
jz loc_100C2A6  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_100C200  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100C2A6  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100C2AF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_100C0EF  +
push offset dword_1013000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100C3D5  +
cmp ecx 0FFFFFFFFh +
jz loc_100C3D5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100C3CE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100C3CE  +
cmp edx 10000000h +
jnb loc_100C3CE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100C3CE  +
jmp loc_100C3C9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_100C417  +
push eax  +
call sub_100C37C  +
test eax eax +
jz loc_100C417  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100C40C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_100C417  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1013000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_100C453  +
test eax ebx +
jz loc_100C453  +
not eax  +
mov dword_1013004 eax +
jmp loc_100C4AE  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_100C49A  +
test dword_1013000 ebx +
jnz loc_100C49F  +
mov esi 0BB40E64Fh +
mov dword_1013000 esi +
not esi  +
mov dword_1013004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1013168 eax +
mov dword_1013164 ecx +
mov dword_1013160 edx +
mov dword_101315C ebx +
mov dword_1013158 esi +
mov dword_1013154 edi +
mov word_1013180 ss +
mov word_1013174 cs +
mov word_1013150 ds +
mov word_101314C es +
mov word_1013148 fs +
mov word_1013144 gs +
pushf   +
pop dword_1013178  +
mov eax [ebp+0] +
mov dword_101316C eax +
mov eax [ebp+4] +
mov dword_1013170 eax +
lea eax [ebp+8] +
mov dword_101317C eax +
mov eax [ebp-320h] +
mov dword_10130B8 10001h +
mov eax dword_1013170 +
mov dword_1013074 eax +
mov dword_1013068 0C0000409h +
mov dword_101306C 1 +
mov eax dword_1013000 +
mov [ebp-328h] eax +
mov eax dword_1013004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_1013388 edi +
jnz loc_100C5E2  +
push dword_1013390  +
call sub_100E796  +
test eax eax +
jnz loc_100C5DE  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C676  +
push 42Bh  +
jmp loc_100C670  +
mov eax edi +
pop edi  +
retn   +
cmp dword_1013390 0 +
jnz loc_100C5C6  +
call sub_100E7B7  +
push eax  +
mov dword_1013390 eax +
call sub_100E796  +
test eax eax +
jz loc_100C664  +
push 0  +
push offset dword_1001908  +
push dword_1013390  +
call sub_100EB79  +
test eax eax +
jnz loc_100C664  +
push 3  +
push dword_1013390  +
call sub_100ED44  +
cmp eax edi +
jnz loc_100C664  +
push 3  +
push dword_1013390  +
call sub_100ED44  +
cmp eax 2 +
jnz loc_100C664  +
push 3  +
push dword_1013390  +
call sub_100ED44  +
cmp eax 3 +
jnz loc_100C664  +
push 0  +
mov dword_1013388 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_100C676  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1013388 0 +
push esi  +
jz loc_100C6E4  +
push 3  +
push dword_1013390  +
call sub_100EF19  +
cmp eax [ebp+arg_0] +
jbe loc_100C6E4  +
push [ebp+arg_0]  +
push 3  +
push dword_1013390  +
call sub_100F39F  +
test eax eax +
jz loc_100C6E4  +
push [ebp+arg_0]  +
push 3  +
push dword_1013390  +
call sub_100F0D1  +
mov esi eax +
test esi esi +
jz loc_100C6E4  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100C6E4  +
mov eax [esi+0Ch] +
jmp loc_100C6E6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_1013390 +
test eax eax +
jz loc_100C711  +
push eax  +
call sub_100E796  +
test eax eax +
jz loc_100C711  +
push 0  +
push dword_1013390  +
call sub_100EF86  +
retn   +
mov eax offset dword_1001908 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_100C745  +
call esi  +
test eax eax +
jnz loc_100C741  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100C778  +
call sub_100C5A9  +
test eax eax +
jz loc_100C741  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_1013390  +
call sub_100F1C1  +
test eax eax +
jnz loc_100C76E  +
call esi  +
test eax eax +
jnz loc_100C741  +
push 8  +
jmp loc_100C73B  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_100C5A9  +
test eax eax +
jz loc_100C802  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_100C7DC  +
cmp [ebp+hMem] edi +
jz loc_100C7F4  +
push [ebp+hMem]  +
call sub_100C71C  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_100C800  +
cmp [ebp+hMem] edi +
jz loc_100C7F4  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_100C7F4  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_100C7FE  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_100C783  +
test eax eax +
jz loc_100C82C  +
call sub_100C6F0  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_101301C +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1013020 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_1013394 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_100C0EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_100C90A  +
call ds:GetLastError  +
test eax eax +
jnz loc_100C906  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100C987  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_100C97B  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_100C97B  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_100C983  +
sub edi 0 +
jz loc_100C957  +
dec edi  +
jz loc_100C953  +
dec edi  +
jnz loc_100C983  +
push 0FFFFFFF4h  +
jmp loc_100C959  +
push 0FFFFFFF5h  +
jmp loc_100C959  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_100C983  +
cmp eax 0FFFFFFFFh +
jz loc_100C983  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100C985  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_100C9A0  +
xor eax eax +
jmp loc_100C9A9  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_100C9C1  +
xor eax eax +
jmp loc_100C9CA  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100CA11  +
cmp [ebp+lpString2] 0 +
jz loc_100CA11  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_100C9F7  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_100CA25  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CA23  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100CA6C  +
cmp [ebp+lpString2] 0 +
jz loc_100CA6C  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_100CA52  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_100CA80  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CA7E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_100CB4D  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_100CB4D  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_100CAB8  +
cmp [eax] edi +
jnz loc_100CB4D  +
mov eax [eax] +
cmp eax edi +
jz loc_100CAC6  +
cmp eax 1 +
jbe loc_100CB34  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_100CADD  +
cmp esi edi +
jz loc_100CADD  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_100CAF3  +
push edi  +
push [ebp+lpString]  +
call sub_100C991  +
cmp eax esi +
jle loc_100CAF3  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_100CB46  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB1B  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_100CB5F  +
cmp esi edi +
jz loc_100CB5F  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_100CB5F  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_100CB61  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_100CB41  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB5F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_100CB86  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CBA8  +
push 57h  +
jmp loc_100CBA2  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100CBA8  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_100CBAA  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_100CBD9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CC4D  +
push 57h  +
call ds:SetLastError  +
jmp loc_100CC4D  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100CC4D  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100CC4F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100CC34  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100CC34  +
push 570h  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_100CC46  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CC46  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_100CC7E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CC79  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_100CCA0  +
push [ebp+lpMem]  +
call sub_100CB6D  +
test eax eax +
jz loc_100CC79  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100CC79  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100CCD9  +
cmp [ebp+arg_4] eax +
jz loc_100CCD5  +
mov dl [ebx] +
test dl dl +
jz loc_100CCD5  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100CCBD  +
test esi esi +
jnz loc_100CCE0  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100CCEC  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100CD2D  +
cmp [ebp+arg_4] eax +
jz loc_100CD29  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_100CD29  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_100CD0C  +
test esi esi +
jnz loc_100CD35  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100CD43  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_100CD78  +
cmp eax esi +
ja loc_100CD78  +
jz loc_100CD7D  +
jmp loc_100CD85  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100CD8E  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100CDB6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CDF9  +
push 57h  +
jmp loc_100CDF3  +
push 0  +
push esi  +
call sub_100C9B2  +
test eax eax +
jz loc_100CDEE  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_100CDEE  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_100CDDE  +
call ds:StrChrIW  +
jmp loc_100CDE4  +
call ds:StrChrW  +
test eax eax +
jz loc_100CDEE  +
sub eax esi +
sar eax 1 +
jmp loc_100CDFC  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_100CE6B  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_100CE6B  +
push esi  +
push edi  +
call sub_100C9B2  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_100CE64  +
push esi  +
push ebx  +
call sub_100C9B2  +
test eax eax +
jz loc_100CE64  +
push esi  +
push ebx  +
call sub_100C9B2  +
cmp [ebp+arg_C] eax +
jnb loc_100CE64  +
cmp [ebp+arg_0] esi +
jbe loc_100CE64  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_100CD9B  +
cmp eax 0FFFFFFFFh +
jnz loc_100CE80  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_100CE48  +
push 490h  +
jmp loc_100CE77  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CE7D  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_100CEF3  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_100CEF3  +
push 0  +
push edi  +
call sub_100C9B2  +
push 0  +
push ebx  +
mov esi eax +
call sub_100C9B2  +
test eax eax +
jz loc_100CEE6  +
test esi esi +
jz loc_100CEE6  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_100CEE6  +
sub esi ecx +
cmp esi eax +
jb loc_100CEE6  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_100CEDC  +
call ds:StrStrIW  +
jmp loc_100CEE2  +
call ds:StrStrW  +
test eax eax +
jnz loc_100CEED  +
push 490h  +
jmp loc_100CEFF  +
sub eax edi +
sar eax 1 +
jmp loc_100CF08  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CF05  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_100CF43  +
push esi  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jz loc_100CF43  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_100CF45  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_100CF72  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CF6E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100CFC0  +
cmp dword ptr [esi] 0 +
jnz loc_100CF7C  +
xor eax eax +
inc eax  +
jmp loc_100CFC0  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_100CFA0  +
push dword ptr [esi]  +
call sub_100CC5C  +
cmp eax 0FFFFFFFFh +
jnz loc_100CFA4  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100CFBF  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_100D08F  +
mov eax [esi] +
cmp eax edi +
jz loc_100D08F  +
cmp [ebp+dwBytes] edi +
jnz loc_100CFFD  +
push esi  +
call sub_100CF4F  +
jmp loc_100D0A3  +
push eax  +
call sub_100CB6D  +
test eax eax +
jnz loc_100D00E  +
mov [esi] edi +
jmp loc_100D0A1  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_100D0A1  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_100D04C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D043  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100D0A1  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_100D0A3  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100D031  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100D031  +
push 570h  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_100D043  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D0A1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100D0C6  +
cmp edx 7FFFFFFFh +
jbe loc_100D0CB  +
mov eax 80070057h +
test eax eax +
jl loc_100D0E1  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100CCA9  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100D100  +
cmp edx 7FFFFFFFh +
jbe loc_100D105  +
mov eax 80070057h +
test eax eax +
jl loc_100D11B  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_100CCF8  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_100D13D  +
cmp edx ebx +
jbe loc_100D142  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100D179  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_100D166  +
cmp [eax] cx +
jz loc_100D162  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100D158  +
cmp esi ecx +
jnz loc_100D16F  +
mov [ebp+arg_4] 80070057h +
jmp loc_100D173  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_100D17B  +
xor ecx ecx +
test eax eax +
jl loc_100D18F  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_100CCF8  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100D1AF  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100D1B4  +
mov eax 80070057h +
test eax eax +
jl loc_100D1CD  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100CD4F  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_1013390  +
call sub_100E796  +
cmp eax 1 +
jnz loc_100D260  +
push edi  +
push 3  +
push dword_1013390  +
call sub_100EF19  +
mov edi eax +
test edi edi +
jz loc_100D255  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_1013390  +
call sub_100F39F  +
cmp eax 10000h +
jnz loc_100D24E  +
push esi  +
push 3  +
push dword_1013390  +
call sub_100F0D1  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100D24E  +
add eax 0Ch +
push eax  +
call sub_100CF4F  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
push esi  +
push 3  +
push dword_1013390  +
call sub_100EEE2  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_100D204  +
pop esi  +
push offset dword_1013390  +
call sub_100E82C  +
pop edi  +
cmp dword_101338C 1 +
jnz loc_100D26F  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_100CE8C  +
cmp eax 0FFFFFFFFh +
jnz loc_100D299  +
xor eax eax +
jmp loc_100D29C  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100D2D9  +
cmp [ebp+arg_4] 0 +
jz loc_100D2D9  +
cmp [ebp+arg_8] 0 +
jle loc_100D2D9  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100D0B0  +
test eax eax +
jge loc_100D2DF  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100D2DB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100D31C  +
cmp [ebp+arg_4] 0 +
jz loc_100D31C  +
cmp [ebp+arg_8] 0 +
jle loc_100D31C  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100D0EA  +
test eax eax +
jge loc_100D322  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100D31E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100D35F  +
cmp [ebp+arg_4] 0 +
jz loc_100D35F  +
cmp [ebp+arg_8] 0 +
jle loc_100D35F  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100D124  +
test eax eax +
jge loc_100D365  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100D361  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100D5B4  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_100D5B4  +
push [ebp+hConsoleOutput]  +
call sub_100C8E3  +
cmp eax 1 +
jnz loc_100D4A1  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100D3B8  +
push 0FFFFFFF5h  +
jmp loc_100D3C8  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100D489  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_100C9B2  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_100D3FC  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_100D461  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100D485  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_100C9B2  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_100D461  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_100D433  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_100D469  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_100D469  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_100D423  +
xor eax eax +
inc eax  +
jmp loc_100D5C8  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100C80A  +
call sub_100D1D6  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_100D46F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D5C6  +
push 42Bh  +
jmp loc_100D5C0  +
push edi  +
push ebx  +
call sub_100C9B2  +
push 100h  +
push edi  +
mov esi offset unk_10133A0 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_100D461  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_100D4E1  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100D53E  +
cmp eax ebx +
jbe loc_100D54C  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_100D51E  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_100D521  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_100D4EA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D53E  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_100D472  +
cmp eax [ebp+cchWideChar] +
jnb loc_100D554  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100D53E  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_0  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_100D4CC  +
jmp loc_100D461  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D5C6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov dword ptr [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_100D633  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D62C  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100D82E  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_100D7EB  +
cmp edi 0Fh +
jz loc_100D663  +
cmp edi 3 +
jz loc_100D663  +
cmp edi 0FFFFFFFFh +
jz loc_100D663  +
mov [ebp+var_40] 1 +
jmp loc_100D67F  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_100D7EB  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_100D6F1  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_100D7EB  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_100D7EF  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_100CA89  +
movzx eax [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_100D709  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_100D7DF  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_100D7EF  +
cmp ax 8 +
jnz loc_100D797  +
cmp [ebp+var_28] 0 +
jz loc_100D69D  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003137  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003137  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_1003137  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_100D69D  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_100D7AF  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_1001920  +
jmp loc_100D7D3  +
cmp ax 0Ah +
jz loc_100D69D  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset Buffer  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_100D69D  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_100D82D  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001918  +
lea eax [ebp+var_18] +
push eax  +
call sub_100D2E9  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100C0EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_100D85B  +
cmp [ebp+arg_8] 0 +
jnz loc_100D85B  +
xor eax eax +
jmp loc_100D9AF  +
call sub_100C5A9  +
test eax eax +
jz loc_100D854  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_1013390  +
call sub_100EF19  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_100D8A8  +
push esi  +
push dword_1013390  +
call sub_100EF4D  +
test eax eax +
jz loc_100D973  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100EDBF  +
cmp eax 0FFFFFFFFh +
jz loc_100D973  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F39F  +
mov edi offset aBuffer +
test eax eax +
jz loc_100D8F6  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F0D1  +
mov esi eax +
test esi esi +
jz loc_100D973  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100D973  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_100D935  +
mov edi [ebp+arg_8] +
jmp loc_100D940  +
push 10h  +
call sub_100CBB3  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_100D973  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100D2A6  +
push esi  +
push ebx  +
push 3  +
push dword_1013390  +
call sub_100F2CC  +
test eax eax +
jnz loc_100D8D5  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100CF4F  +
jmp loc_100D973  +
push 0  +
push ebx  +
call sub_100C9B2  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_100D956  +
cmp edi 100h +
jbe loc_100D96D  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100D96D  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_100D977  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100D973  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_100D982  +
xor eax eax +
jmp loc_100D9AC  +
lea eax [esi+0Ch] +
push eax  +
call sub_100CFCA  +
jmp loc_100D966  +
test ebx ebx +
jz loc_100D992  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_100D2E9  +
jmp loc_100D9A9  +
cmp [ebp+arg_C] 1 +
jnz loc_100D9A9  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_100192C +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_100DAB5  +
push eax  +
push ebx  +
call sub_100C9B2  +
test eax eax +
jz loc_100DAB5  +
cmp [ebp+lpStart] 0 +
jz loc_100DA14  +
push 0  +
push [ebp+lpStart]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100DA1A  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_100DA29  +
cmp edi 1 +
jnz loc_100DA4B  +
cmp word ptr [ebx] 0 +
jz loc_100DA48  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100DA48  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_100DA2F  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_100DA55  +
cmp edi 2 +
jnz loc_100DA97  +
cmp edi 2 +
jnz loc_100DA5C  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100DA97  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100DA7D  +
cmp [ebp+var_14] 0 +
jnz loc_100DA81  +
mov [ebp+var_14] esi +
jmp loc_100DA81  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100DA64  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_100DA97  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_100DAB1  +
push 0  +
push [ebp+var_18]  +
call sub_100C9B2  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_100D2E9  +
mov eax ebx +
jmp loc_100DABA  +
mov eax offset dword_1001908 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_100DB12  +
cmp [ebp+arg_4] edi +
jz loc_100DB12  +
push [ebp+arg_C]  +
push offset dword_1001908  +
push esi  +
call sub_100D2E9  +
cmp [ebp+arg_8] edi +
jbe loc_100DB0E  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_100D32C  +
test eax eax +
jz loc_100DB0E  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_100DAF8  +
mov eax esi +
jmp loc_100DB29  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DB24  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_100DB57  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DB53  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100DBBE  +
cmp [ebp+arg_0] esi +
jnz loc_100DB69  +
push [ebp+arg_4]  +
call sub_100C71C  +
xor eax eax +
inc eax  +
jmp loc_100DBBE  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_100D843  +
mov edi eax +
test edi edi +
jz loc_100DBA9  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_100D19A  +
cmp eax 8007007Ah +
jz loc_100DB6A  +
test eax eax +
jge loc_100DBB7  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100DBBD  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DBA5  +
push 8  +
jmp loc_100DB9F  +
push edi  +
call sub_100C71C  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_100D843  +
mov ebx eax +
test ebx ebx +
jnz loc_100DBEE  +
push 8  +
pop eax  +
jmp loc_100DC30  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_100D843  +
mov esi eax +
test esi esi +
jz loc_100DBE9  +
push esi  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_100DC30  +
push ebx  +
call sub_100C71C  +
test eax eax +
jz loc_100DBE9  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_100DC66  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DC5C  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
jmp loc_100DD73  +
call sub_100C5A9  +
test eax eax +
jz loc_100DC5C  +
push esi  +
push 1  +
push dword_1013390  +
call sub_100EF19  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_100DCC3  +
push 1  +
push dword_1013390  +
call sub_100EF4D  +
cmp eax ebx +
jz loc_100DCA7  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100EDBF  +
cmp eax 0FFFFFFFFh +
jnz loc_100DCC3  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DCB9  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
jmp loc_100DD72  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_100D843  +
mov edi eax +
cmp edi ebx +
jz loc_100DD37  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_100DD1A  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_100DD49  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_100DD49  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_100DCC9  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_1013390  +
call sub_100F306  +
test eax eax +
jnz loc_100DD50  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DD49  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
jmp loc_100DD71  +
cmp [ebp+lpString] ebx +
jz loc_100DD61  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_1013390  +
call sub_100F108  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_100DF22  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
test eax eax +
jz loc_100DF22  +
call sub_100C5A9  +
test eax eax +
jz loc_100DF34  +
call sub_100C5A9  +
test eax eax +
jz loc_100DEDC  +
push 3  +
pop esi  +
push esi  +
push dword_1013390  +
call sub_100EF19  +
mov edi eax +
cmp edi ebx +
ja loc_100DDFF  +
push esi  +
push dword_1013390  +
call sub_100EF4D  +
cmp eax ebx +
jz loc_100DEDC  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100EDBF  +
cmp eax 0FFFFFFFFh +
jz loc_100DEDC  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F39F  +
mov edi offset aBuffer +
test eax eax +
jz loc_100DE77  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F0D1  +
mov esi eax +
cmp esi ebx +
jz loc_100DEDC  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100DEDC  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100DE63  +
cmp edi 100h +
jbe loc_100DEC4  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100DEC4  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100DEB4  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100DEBF  +
push 10h  +
call sub_100CBB3  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100DEDC  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100D2A6  +
push esi  +
push ebx  +
push 3  +
push dword_1013390  +
call sub_100F2CC  +
test eax eax +
jnz loc_100DE2C  +
lea eax [ebp+var_8] +
push eax  +
call sub_100CF4F  +
jmp loc_100DEDC  +
lea eax [esi+0Ch] +
push eax  +
call sub_100CFCA  +
test eax eax +
jz loc_100DEDC  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100DEDC  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100D2E9  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100DEEA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DF34  +
push 8  +
jmp loc_100DF2E  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100DF22  +
cmp [ebp+var_4] ebx +
jz loc_100DF1D  +
push ebx  +
push [ebp+var_4]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100DF22  +
fld  qword ptr [ebp-0Ch] +
jmp loc_100DF36  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DF34  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_100DD7D  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100E12D  +
cmp [ebp+lpString] ebx +
jz loc_100E12D  +
call sub_100C5A9  +
test eax eax +
jz loc_100E13F  +
call sub_100C5A9  +
test eax eax +
jz loc_100E0C3  +
push 3  +
pop esi  +
push esi  +
push dword_1013390  +
call sub_100EF19  +
mov edi eax +
cmp edi ebx +
ja loc_100DFE6  +
push esi  +
push dword_1013390  +
call sub_100EF4D  +
cmp eax ebx +
jz loc_100E0C3  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100EDBF  +
cmp eax 0FFFFFFFFh +
jz loc_100E0C3  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F39F  +
mov edi offset aBuffer +
test eax eax +
jz loc_100E05E  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F0D1  +
mov esi eax +
cmp esi ebx +
jz loc_100E0C3  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100E0C3  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100E04A  +
cmp edi 100h +
jbe loc_100E0AB  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100E0AB  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100E09B  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100E0A6  +
push 10h  +
call sub_100CBB3  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100E0C3  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100D2A6  +
push esi  +
push ebx  +
push 3  +
push dword_1013390  +
call sub_100F2CC  +
test eax eax +
jnz loc_100E013  +
lea eax [ebp+var_8] +
push eax  +
call sub_100CF4F  +
jmp loc_100E0C3  +
lea eax [esi+0Ch] +
push eax  +
call sub_100CFCA  +
test eax eax +
jz loc_100E0C3  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100E0C3  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100D2E9  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100E0D1  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E13F  +
push 8  +
jmp loc_100E139  +
push 3  +
push ebx  +
push esi  +
call sub_100D9B8  +
push ebx  +
push esi  +
call sub_100C9B2  +
test eax eax +
jz loc_100E12D  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100E105  +
call ds:wcstol  +
jmp loc_100E10B  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100E12D  +
cmp [ebp+var_4] ebx +
jz loc_100E129  +
push ebx  +
push [ebp+var_4]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100E12D  +
mov eax esi +
jmp loc_100E141  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E13F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100E310  +
cmp [ebp+lpString] ebx +
jz loc_100E310  +
call sub_100C5A9  +
test eax eax +
jz loc_100E29C  +
push 3  +
pop esi  +
push esi  +
push dword_1013390  +
call sub_100EF19  +
mov edi eax +
cmp edi ebx +
ja loc_100E1BF  +
push esi  +
push dword_1013390  +
call sub_100EF4D  +
cmp eax ebx +
jz loc_100E29C  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100EDBF  +
cmp eax 0FFFFFFFFh +
jz loc_100E29C  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F39F  +
mov edi offset aBuffer +
test eax eax +
jz loc_100E237  +
push ebx  +
push esi  +
push dword_1013390  +
call sub_100F0D1  +
mov esi eax +
cmp esi ebx +
jz loc_100E29C  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100E29C  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100E223  +
cmp edi 100h +
jbe loc_100E284  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100E284  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100E274  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100E27F  +
push 10h  +
call sub_100CBB3  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100E29C  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100D2A6  +
push esi  +
push ebx  +
push 3  +
push dword_1013390  +
call sub_100F2CC  +
test eax eax +
jnz loc_100E1EC  +
lea eax [ebp+var_8] +
push eax  +
call sub_100CF4F  +
jmp loc_100E29C  +
lea eax [esi+0Ch] +
push eax  +
call sub_100CFCA  +
test eax eax +
jz loc_100E29C  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100E29C  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100D2E9  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100E2AA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E322  +
push 8  +
jmp loc_100E31C  +
push 3  +
push ebx  +
push esi  +
call sub_100D9B8  +
push ebx  +
push esi  +
call sub_100C9B2  +
test eax eax +
jz loc_100E322  +
cmp [ebp+arg_8] ebx +
jnz loc_100E2C9  +
cmp word ptr [esi] 2Dh +
jz loc_100E322  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100E2E9  +
call ds:wcstol  +
jmp loc_100E2EF  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100E322  +
cmp [ebp+var_4] ebx +
jz loc_100E30B  +
push ebx  +
push [ebp+var_4]  +
call sub_100C9B2  +
test eax eax +
jnz loc_100E322  +
xor eax eax +
inc eax  +
jmp loc_100E324  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E322  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_100E3EE  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_100E3EE  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100C9B2  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_100D843  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100E37F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E400  +
push 8  +
jmp loc_100E3FA  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_100C9B2  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_100D843  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100E36D  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_1 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1003137  +
add esp 10h +
test eax eax +
jge loc_100E3BE  +
movzx eax ax +
push eax  +
jmp loc_100E3FA  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1003137  +
add esp 10h +
test eax eax +
jl loc_100E3B8  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_100CE8C  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_100E402  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E400  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 0  +
push [ebp+lpString]  +
call sub_100D9B8  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_100E46F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E465  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
jmp loc_100E57C  +
push ecx  +
call sub_100CF14  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_100E480  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_100D843  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_100E4AE  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_100E509  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_100D843  +
mov esi eax +
test esi esi +
jnz loc_100E4CA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E4C0  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001908 +
jmp loc_100E57B  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset String  +
push esi  +
call sub_100DAD0  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_100E4F2  +
push esi  +
push [ebp+var_10]  +
call sub_100D2E9  +
push edi  +
push [ebp+var_18]  +
jmp loc_100E4FF  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_100D2E9  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_100D32C  +
jmp loc_100E568  +
xor ebx ebx +
cmp eax esi +
jbe loc_100E568  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
lea eax [ebp+String] +
push eax  +
call sub_100CF14  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_100E54D  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_100D32C  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_100E515  +
cmp ebx [ebp+arg_4] +
jnb loc_100E568  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset String  +
push [ebp+var_10]  +
call sub_100D32C  +
dec esi  +
jnz loc_100E557  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_100D2E9  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_100C0EF  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_100E698  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_100E698  +
cmp [ebp+arg_4] ebx +
jnz loc_100E5C3  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
jmp loc_100E6AC  +
cmp [ebp+arg_8] ebx +
jnz loc_100E658  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_100D843  +
mov edi eax +
test edi edi +
jz loc_100E645  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_100E635  +
call ds:GetLastError  +
test eax eax +
jz loc_100E653  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_100E6AA  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100E5D0  +
push edi  +
jmp loc_100E5B6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E6AA  +
push 8  +
jmp loc_100E6A4  +
xor eax eax +
inc eax  +
jmp loc_100E6AC  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_100D843  +
mov edi eax +
test edi edi +
jz loc_100E645  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_100D19A  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_100E658  +
test eax eax +
jge loc_100E63F  +
movzx eax ax +
push eax  +
jmp loc_100E6A4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E6AA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_101339C  +
mov eax dword_101339C +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_100DC39  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_100E6B5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_100E778  +
test [ebp+arg_4] 0F0000h +
jz loc_100E778  +
test [ebp+arg_4] 10000h +
jz loc_100E720  +
call sub_100C783  +
mov al byte ptr [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
test al bl +
jz loc_100E732  +
push 1389h  +
jmp loc_100E751  +
test al 4 +
jz loc_100E73D  +
push 138Ah  +
jmp loc_100E751  +
test al 2 +
jz loc_100E748  +
push 138Ch  +
jmp loc_100E751  +
test al 8 +
jz loc_100E767  +
push 138Bh  +
call sub_100E6E4  +
push eax  +
push offset aS_2  +
push ebx  +
push ebx  +
push esi  +
call sub_100E591  +
add esp 14h +
call sub_100C6F0  +
push eax  +
push esi  +
call sub_100D36F  +
mov eax ebx +
pop ebx  +
jmp loc_100E78C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E78A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100E7AC  +
cmp dword ptr [eax] 9 +
jnz loc_100E7AC  +
xor eax eax +
inc eax  +
jmp loc_100E7AE  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100E7C7  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100E796  +
test eax eax +
jz loc_100E822  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100E816  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_100E9C3  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100CF4F  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100E7FA  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100E796  +
test eax eax +
jz loc_100E84D  +
push ecx  +
call sub_100E7DC  +
push esi  +
call sub_100CF4F  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100E796  +
test eax eax +
jz loc_100E86C  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100E796  +
test eax eax +
jnz loc_100E88B  +
xor eax eax +
jmp loc_100E8B0  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100E887  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100E8A6  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_100E89E  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_100E8AF  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100E796  +
test eax eax +
jnz loc_100E8D1  +
or eax 0FFFFFFFFh +
jmp loc_100E919  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100E8CC  +
push 14h  +
call sub_100CBB3  +
test eax eax +
jz loc_100E8CC  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100E90C  +
mov [esi+8] eax +
jmp loc_100E912  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100E796  +
test eax eax +
jnz loc_100E93B  +
or eax 0FFFFFFFFh +
jmp loc_100E9B9  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jz loc_100E936  +
push edi  +
mov edi [ebp+arg_4] +
cmp eax edi +
ja loc_100E95C  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
call sub_100E8B9  +
jmp loc_100E9B8  +
push 14h  +
call sub_100CBB3  +
test eax eax +
jnz loc_100E96C  +
or eax 0FFFFFFFFh +
jmp loc_100E9B8  +
mov ecx [ebp+arg_8] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_C] +
mov [eax+8] ecx +
mov ecx [ebp+arg_10] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
test edi edi +
jnz loc_100E99D  +
mov ecx [esi+8] +
mov [eax+10h] ecx +
mov [esi+8] eax +
xor eax eax +
inc eax  +
jmp loc_100E9B8  +
mov esi [esi+8] +
lea ecx [edi-1] +
test ecx ecx +
jbe loc_100E9AD  +
dec ecx  +
mov esi [esi+10h] +
jnz loc_100E9A7  +
mov ecx [esi+10h] +
mov [eax+10h] ecx +
mov [esi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100EA37  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_100EA02  +
jz loc_100EA1E  +
cmp eax 20000h +
jz loc_100EA1E  +
cmp eax 30000h +
jz loc_100EA1E  +
cmp eax 40000h +
jz loc_100EA1E  +
cmp eax 50000h +
jz loc_100EA1E  +
cmp eax 60000h +
jz loc_100EA1E  +
jmp loc_100EA37  +
cmp eax 80000h +
jz loc_100EA29  +
cmp eax 90000h +
jz loc_100EA1E  +
cmp eax 0A0000h +
jz loc_100EA1E  +
cmp eax 0B0000h +
jnz loc_100EA37  +
add edx 0Ch +
push edx  +
call sub_100CF4F  +
jmp loc_100EA37  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100E82C  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100E796  +
test eax eax +
jnz loc_100EA5B  +
or eax 0FFFFFFFFh +
jmp loc_100EB6A  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_100EB65  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_100EB55  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100EAE9  +
jz loc_100EAD7  +
cmp eax 20000h +
jz loc_100EABB  +
cmp eax 30000h +
jz loc_100EB4C  +
cmp eax 40000h +
jz loc_100EB4C  +
cmp eax 60000h +
jnz loc_100EB55  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100EADE  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_100C9D3  +
test eax eax +
jz loc_100EB6F  +
mov edx [ebp+arg_0] +
jmp loc_100EB55  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100EB55  +
mov eax edx +
jmp loc_100EB68  +
cmp eax 90000h +
jz loc_100EB4C  +
cmp eax 0A0000h +
jz loc_100EB0F  +
cmp eax 0B0000h +
jnz loc_100EB55  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100EB55  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100EB53  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100EB55  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100EB55  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100EB55  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100EB55  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100EB55  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100EB53  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100EAE5  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100EA71  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100EB68  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jnz loc_100EB94  +
or eax 0FFFFFFFFh +
jmp locret_100EBE7  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100EBA7  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EBE2  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_100D2E9  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz loc_100EBE5  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jz loc_100EC39  +
push 4  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EC39  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz locret_100EC3C  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jz loc_100EC8E  +
push 4  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EC8E  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz locret_100EC91  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jz loc_100ECE3  +
push 4  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100ECE3  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz locret_100ECE6  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jz loc_100ED38  +
push 8  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100ED38  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz locret_100ED3B  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100E796  +
test eax eax +
jz loc_100EDB2  +
call sub_100E7B7  +
push eax  +
mov [ebp+var_4] eax +
call sub_100E796  +
test eax eax +
jz loc_100EDB2  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100ED8C  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jz loc_100ED8C  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100ED76  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100EDA9  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jnz loc_100EDB5  +
lea eax [ebp+var_4] +
push eax  +
call sub_100E82C  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100E796  +
test eax eax +
jnz loc_100EDD5  +
or eax 0FFFFFFFFh +
jmp loc_100EDF9  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_100EDF6  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100E8B9  +
cmp eax 0FFFFFFFFh +
jz loc_100EDF6  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100EDDD  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100E796  +
test eax eax +
jnz loc_100EE1D  +
or eax 0FFFFFFFFh +
jmp locret_100EE73  +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_100EE30  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_100CBB3  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EE6E  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_100D2E9  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E923  +
cmp eax 0FFFFFFFFh +
jnz loc_100EE71  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100E875  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100EED8  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100EEB5  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100EEBB  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_100EEC3  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_100E9C3  +
lea eax [ebp+var_4] +
push eax  +
call sub_100CF4F  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100EF0E  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100EF0E  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100EE7C  +
jmp loc_100EF10  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100EF42  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100EF42  +
push dword ptr [eax+0Ch]  +
call sub_100E857  +
jmp loc_100EF44  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jnz loc_100EF67  +
xor eax eax +
jmp loc_100EF7D  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100EF7A  +
cmp ecx 80000h +
jnz loc_100EF63  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jnz loc_100EFA0  +
xor eax eax +
jmp loc_100EFAC  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100EF9C  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jnz loc_100EFCF  +
xor eax eax +
jmp loc_100EFE7  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100EFE2  +
cmp ecx 30000h +
jnz loc_100EFCB  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jnz loc_100F00E  +
fld  ds:flt_1001948 +
jmp loc_100F01C  +
cmp dword ptr [eax+4] 60000h +
jnz loc_100F006  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jnz loc_100F043  +
fld  ds:dbl_1001950 +
jmp loc_100F051  +
cmp dword ptr [eax+4] 70000h +
jnz loc_100F03B  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_100E875  +
test eax eax +
jz loc_100F0C4  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_100F09E  +
cmp edx 0B0000h +
jnz loc_100F0C4  +
cmp edx ecx +
jnz loc_100F0AB  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_100F0C4  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F0FD  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F0FD  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100EF4D  +
jmp loc_100F0FF  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F134  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F134  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100EF86  +
jmp loc_100F136  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F16B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F16B  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100EFB5  +
jmp loc_100F16D  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100F187  +
xor eax eax +
jmp loc_100F1B7  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F183  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100F1AA  +
test ecx ecx +
jz loc_100F1AE  +
jmp loc_100F183  +
test ecx ecx +
jnz loc_100F1B1  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
mov esi eax +
cmp esi edi +
jnz loc_100F1E0  +
xor eax eax +
jmp loc_100F25F  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100F1F1  +
cmp eax edi +
jnz loc_100F246  +
cmp [ebp+arg_C] edi +
jnz loc_100F202  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_100F226  +
lea edi [eax+eax] +
push edi  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100F246  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100F24D  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100F24D  +
lea edi [esi+0Ch] +
push edi  +
call sub_100CF4F  +
and dword ptr [edi] 0 +
push ebx  +
call sub_100CBB3  +
mov [edi] eax +
test eax eax +
jnz loc_100F24A  +
xor eax eax +
jmp loc_100F25E  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100D2E9  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
mov esi eax +
test esi esi +
jnz loc_100F287  +
xor eax eax +
jmp loc_100F2C2  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_100F297  +
test eax eax +
jz loc_100F29B  +
jmp loc_100F283  +
test eax eax +
jnz loc_100F2B7  +
push 4  +
call sub_100CBB3  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100F283  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F2FB  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F2FB  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100F176  +
jmp loc_100F2FD  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F338  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F338  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100F1C1  +
jmp loc_100F33A  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F372  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F372  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100F26A  +
jmp loc_100F374  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F396  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100E875  +
test eax eax +
jz loc_100F3CB  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100F3CB  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100F37D  +
jmp loc_100F3CD  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100EA40  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100EA40  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100EA40  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100EA40  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100EA40  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
and dword ptr [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_100F4CF  +
xor eax eax +
jmp loc_100F583  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_100E875  +
mov esi eax +
test esi esi +
jz loc_100F4C8  +
push ebx  +
push offset dword_1001344  +
push edi  +
call sub_100D2E9  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_100F572  +
cmp eax 30000h +
jz loc_100F566  +
cmp eax 40000h +
jz loc_100F546  +
cmp eax 60000h +
jz loc_100F53F  +
cmp eax 70000h +
jnz loc_100F57C  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1003137  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_100F576  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_100F517  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_1003137  +
add esp 10h +
jmp loc_100F535  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_100F550  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_100D2E9  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100F5C7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F5BF  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100F5BF  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001970  +
call sub_100CD9B  +
cmp eax 0FFFFFFFFh +
jz loc_100F5BF  +
xor eax eax +
inc eax  +
jmp loc_100F5C1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_100F615  +
movzx eax ds:byte_100F624[eax] +
jmp ds:off_100F61C[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_100F617  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100F6B8  +
cmp [ebp+arg_4] ebx +
jnz loc_100F6B8  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_100CD9B  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100F672  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_100C9B2  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_100D843  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100F695  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F6C6  +
push 8  +
jmp loc_100F6C4  +
lea ecx [esi+1] +
push ecx  +
push offset dword_100124C  +
push eax  +
call sub_100D2E9  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_100D32C  +
mov eax [ebp+arg_4] +
jmp loc_100F6C8  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F6C6  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_100F70D  +
cmp ecx edi +
jnz loc_100F70D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F706  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_100F970  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100F6F8  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_100F96C  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_100F976  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_100CA2E  +
test eax eax +
jnz loc_100F828  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_100F828  +
cmp [edi+4] ebx +
jnz loc_100F828  +
cmp [edi+8] ebx +
jnz loc_100F828  +
cmp [edi+0Ch] ebx +
jnz loc_100F828  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100F7A3  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_100F828  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_100F828  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100F7B8  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_100F828  +
mov edx eax +
or edx ecx +
jz loc_100F7C9  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_100F828  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_100F7DE  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_100F828  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_100F7EA  +
xor eax eax +
or ebx eax +
jnz loc_100F828  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_100F828  +
jmp ds:off_100F998[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_100F841  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100F828  +
cmp [edi-10h] ecx +
jnz loc_100F828  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_100F860  +
cmp eax 2 +
jnb loc_100F860  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F83A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100F96F  +
mov eax [edi-10h] +
test eax eax +
jz loc_100F828  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_100F860  +
push dword ptr [eax]  +
call sub_100E796  +
test eax eax +
jz loc_100F828  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100F870  +
cmp [edi-14h] ecx +
jz loc_100F828  +
xor eax eax +
or ebx eax +
jnz loc_100F956  +
cmp dword ptr [edi-24h] 1 +
jnz loc_100F828  +
and esi 20h +
or esi eax +
jnz loc_100F828  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_100F956  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_100F828  +
jmp loc_100F956  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100F98E  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_100F828  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_100F828  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_100F828  +
mov edx [edi-10h] +
test edx edx +
jz loc_100F828  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_100F8FE  +
push dword ptr [edx]  +
call sub_100E796  +
test eax eax +
jz loc_100F828  +
jmp loc_100F956  +
cmp dword ptr [edi-24h] 1 +
ja loc_100F828  +
and esi 20h +
xor eax eax +
jmp loc_100F94E  +
cmp dword ptr [edi-8] 0 +
jz loc_100F828  +
cmp dword ptr [edi-4] 0 +
jnz loc_100F956  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_100F956  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_100F828  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_100F828  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_100F828  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_100F727  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F83A  +
push 42Bh  +
jmp loc_100F834  +
push 78h  +
jmp loc_100F834  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_100FA0B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F9FF  +
push 57h  +
call ebx  +
call sub_100C783  +
xor eax eax +
jmp loc_100FF6F  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_100FF59  +
cmp eax edi +
jz loc_100FF59  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_100FAAA  +
cmp [ebp+lpString2] 0 +
jnz loc_100FAAA  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_100FAAA  +
cmp dword ptr [ebp+lpString] edx +
jz loc_100FA88  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100FA88  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_100E6E4  +
push eax  +
push 2  +
call sub_100DB34  +
add esp 10h +
jmp loc_100FA9E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FA99  +
push 42Bh  +
call ebx  +
call sub_100C783  +
push 800401E4h  +
call ebx  +
jmp loc_100FF6C  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_100FAC2  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_100FACD  +
jmp loc_100FF59  +
cmp dword ptr [esi+24h] 0 +
jz loc_100FAD3  +
cmp ecx 9 +
jz loc_100FAD3  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_100FF59  +
jmp ds:off_100FF75[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100FB41  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_100FB41  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_100D843  +
test eax eax +
jnz loc_100FB21  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FF67  +
push 8  +
call ds:SetLastError  +
jmp loc_100FF67  +
push 3  +
push offset asc_100192C  +
push eax  +
call sub_100D9B8  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_100FF67  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100FBBC  +
test ebx ebx +
jz loc_100FF54  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_100E330  +
test eax eax +
jnz loc_100FBBC  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100FB93  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100FB93  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_100E6E4  +
push eax  +
push 3  +
call sub_100DB34  +
add esp 14h +
jmp loc_100FBAC  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_100E6E4  +
push eax  +
push 2  +
call sub_100DB34  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100FF6C  +
test ebx ebx +
jz loc_100FF54  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_100FC15  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_100FC15  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100FBFB  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100FBFB  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_100FB9C  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_100E6E4  +
push eax  +
push 1  +
call sub_100DB34  +
add esp 0Ch +
jmp loc_100FBAC  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_100FC65  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_100FC48  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100F462  +
cmp eax 0FFFFFFFFh +
jnz loc_100FF54  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100EB79  +
cmp eax 0FFFFFFFFh +
jnz loc_100FF54  +
jmp loc_100FB06  +
cmp [ebp+var_C] ecx +
jz loc_100FCA4  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_100FCA4  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100FC95  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100FC95  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_100FB9C  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_100FC03  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_100FCCE  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_100CBB3  +
test eax eax +
jz loc_100FB06  +
mov [esi+2Ch] eax +
jmp loc_100FCD4  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_100D2E9  +
jmp loc_100FF54  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_100FF54  +
push 0  +
push ebx  +
call sub_100C9B2  +
test eax eax +
jz loc_100FDAD  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_100E14D  +
test eax eax +
jz loc_100FDAD  +
push 0Ah  +
push ebx  +
call sub_100DF67  +
cmp [ebp+var_C] 1 +
jnz loc_100FD2F  +
mov dword ptr [ebp+String2] eax +
jmp loc_100FD32  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100FD97  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_100FD70  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100FD5D  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100F3D6  +
jmp loc_100FD67  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100F3F9  +
cmp eax 0FFFFFFFFh +
jnz loc_100FF54  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100FD88  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100EBF0  +
jmp loc_100FC57  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100EC45  +
jmp loc_100FC57  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_100FDA6  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_100FF54  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_100FDBF  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_100FE13  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100FDE1  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100FDE1  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_100FB9C  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_100FC03  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100FF54  +
push ebx  +
call sub_100DF42  +
test eax eax +
jnz loc_100FE4C  +
and edi 10h +
or edi eax +
jz loc_100FE1D  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_100FE1D  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_100FF6E  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100FE3F  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100FE3F  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_100FB9C  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_100FC03  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_100FE5D  +
call sub_100DD7D  +
fstp  [ebp+var_18] +
jmp loc_100FE65  +
call sub_100DD7D  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100FEDB  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_100FEAC  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100FE95  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100F41C  +
jmp loc_100FEA3  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100F43F  +
cmp eax 0FFFFFFFFh +
jnz loc_100FF54  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100FEC8  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100EC9A  +
jmp loc_100FC57  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100ECEF  +
jmp loc_100FC57  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_100FEEB  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_100FF54  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_100FF54  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_100FF6E  +
cmp [ebp+lpString2] 0 +
jz loc_100FF4B  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100FF2C  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100FF2C  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_100FB9C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FF41  +
push 42Bh  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_100FBAC  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_100FF6E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FF67  +
push 57h  +
call ebx  +
call sub_100C783  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1010063  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1010063  +
cmp [ebp+arg_8] edi +
jz loc_1010063  +
push [ebp+arg_8]  +
call sub_100F599  +
test eax eax +
jnz loc_100FFE8  +
push 490h  +
jmp loc_101006F  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100FFDE  +
add esi 20h +
jmp loc_100FFF7  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_1010044  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_101000F  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_1010034  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_1010034  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_100E330  +
cmp eax 1 +
jz loc_101005E  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100FFF5  +
jmp loc_100FFDE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010055  +
push 42Bh  +
call ebx  +
call sub_100C783  +
xor eax eax +
jmp loc_1010074  +
mov eax [ebp+arg_4] +
jmp loc_1010074  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010071  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_1010158  +
cmp [ebp+arg_4] edi +
jz loc_1010158  +
cmp [ebp+lpString] edi +
jz loc_1010158  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1010158  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_100CD9B  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1010169  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_100D843  +
mov [esi] eax +
test eax eax +
jnz loc_101010F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010166  +
push 8  +
call ds:SetLastError  +
jmp loc_1010166  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_100D843  +
mov [esi+4] eax +
test eax eax +
jz loc_10100FB  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_100D2E9  +
test edi edi +
jz loc_1010149  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_100D2E9  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100FFA2  +
jmp loc_1010169  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010166  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_10101F4  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_10101F4  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_100C6F0  +
test eax eax +
jnz loc_10101A5  +
push 7  +
call sub_100C67F  +
jmp loc_10101B1  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_100D843  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10101F4  +
test ebx ebx +
jbe loc_10101DE  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_10101D8  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_10101D8  +
push esi  +
call sub_100CF4F  +
add esi 50h +
dec ebx  +
jnz loc_10101BF  +
push [ebp+arg_0]  +
call sub_100C71C  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_10101F6  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_100D843  +
mov ebx eax +
cmp ebx edi +
jz loc_1010285  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_1010297  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_101022E  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_101029E  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_1010297  +
call esi  +
test eax eax +
jnz loc_1010297  +
push 57h  +
jmp loc_1010291  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010297  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1010464  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_100CBB3  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_1010297  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_10102CB  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100CF4F  +
jmp loc_1010297  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_10102C0  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_100D843  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_10102C0  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1003137  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_1010342  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_1010300  +
cmp dword ptr [ebp+lpString] edi +
jz loc_10102C0  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_100C9B2  +
cmp eax 4 +
ja loc_101037A  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100CF4F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010297  +
push 42Bh  +
jmp loc_1010291  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_100CE8C  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_10103B4  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001904 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_1010404  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_100D843  +
mov esi eax +
cmp esi edi +
jnz loc_10103EB  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100CF4F  +
jmp loc_1010285  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_0  +
push [ebp+dwLen]  +
push esi  +
call sub_1003137  +
add esp 14h +
jmp loc_1010424  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_1010412  +
push 7  +
call sub_100C67F  +
jmp loc_101041E  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_100D843  +
mov esi eax +
cmp esi edi +
jz loc_10103DD  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_100D843  +
mov esi eax +
cmp esi edi +
jz loc_10103DD  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_100E6E4  +
push eax  +
push 50h  +
push esi  +
call sub_1003137  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_100CF4F  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_10104E6  +
cmp [ebp+arg_4] ebx +
jz loc_10104E6  +
cmp [ebp+arg_C] ebx +
jz loc_10104E6  +
cmp [ebp+dwErrCode] ebx +
jz loc_10104E6  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_10104E6  +
call sub_100C835  +
test eax eax +
jnz loc_10104C6  +
push 157Fh  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
push 47Eh  +
call edi  +
jmp loc_10104EF  +
call sub_100C5A9  +
test eax eax +
jz loc_10104EA  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_101050E  +
cmp eax [ebp+arg_C] +
jl loc_10104F8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10104EA  +
push 57h  +
call edi  +
call sub_100C783  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_100F633  +
mov esi eax +
cmp esi ebx +
jz loc_10104EA  +
push esi  +
call sub_1010201  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_10104EA  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100F6D4  +
test eax eax +
jz loc_10104EA  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_1010670  +
jmp loc_1010545  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_101055E  +
mov edi [ecx+4] +
jmp loc_1010560  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100FFA2  +
cmp eax 0FFFFFFFFh +
jnz loc_10105A5  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1010080  +
cmp eax 0FFFFFFFFh +
jnz loc_1010598  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_10106AD  +
mov edi ebx +
xor ebx ebx +
jmp loc_101059E  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_10106E0  +
test edi edi +
jz loc_1010600  +
cmp [ebp+arg_8] 2 +
jnz loc_1010600  +
push dword ptr [esi+8]  +
call sub_100F5F4  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_10105FB  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100FFA2  +
cmp eax 0FFFFFFFFh +
jnz loc_10105F2  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1010080  +
cmp eax 0FFFFFFFFh +
jz loc_1010600  +
mov [ebp+arg_8] 1 +
jmp loc_10105FE  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_100F9C5  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_1010759  +
mov eax [esi+18h] +
test eax eax +
jz loc_101063B  +
cmp eax [esi+1Ch] +
jz loc_10106FE  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_1010654  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_1010542  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_10106A2  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_10106A2  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_1010743  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_1010699  +
cmp [ecx+1Ch] ebx +
jz loc_1010769  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_101067A  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_10104F1  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_100E6E4  +
push eax  +
push esi  +
call sub_100DB34  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1010175  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_10104EF  +
call ds:GetLastError  +
test eax eax +
jnz loc_10104EA  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_10104EA  +
test ebx ebx +
jz loc_101072B  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_101072B  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_100E6E4  +
push eax  +
push 3  +
call sub_100DB34  +
add esp 14h +
jmp loc_10106C5  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_100E6E4  +
push eax  +
push 2  +
jmp loc_10106BD  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010754  +
push 42Bh  +
call edi  +
call sub_100C783  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1010175  +
jmp loc_10104EF  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_1010783  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_1010743  +
mov edi [ecx+24h] +
jmp loc_101079B  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_1010799  +
push ebx  +
push eax  +
call sub_100F633  +
mov edi eax +
test edi edi +
jnz loc_101079F  +
jmp loc_1010754  +
mov edi ecx +
test edi edi +
jz loc_10107B5  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_10107B5  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_1010736  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_100E6E4  +
push eax  +
push 1  +
call sub_100DB34  +
add esp 0Ch +
jmp loc_10106C5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push 220h  +
push 20h  +
push 2  +
lea eax [ebp+pIdentifierAuthority] +
push eax  +
mov [ebp+pSid] ebx +
mov [ebp+var_14] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
call ds:AllocateAndInitializeSid  +
mov esi eax +
cmp esi 1 +
jnz loc_101084C  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+pSid]  +
push ebx  +
call ds:CheckTokenMembership  +
cmp eax esi +
jnz loc_1010841  +
cmp [ebp+var_14] esi +
jz loc_1010843  +
xor esi esi +
push [ebp+pSid]  +
call ds:FreeSid  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_1010882  +
call ds:GetLastError  +
test eax eax +
jnz loc_101087E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10108A7  +
push 0  +
push [ebp+lpString1]  +
call sub_100C9B2  +
cmp eax 2 +
jbe loc_101087E  +
push 2  +
push 1  +
push offset Str2  +
push [ebp+lpString1]  +
call sub_100C9D3  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_1010941  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1010941  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_100D843  +
cmp eax esi +
jnz loc_10108F0  +
call ds:GetLastError  +
test eax eax +
jnz loc_101094C  +
push 8  +
jmp loc_1010946  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1010941  +
push 0  +
push 0Ah  +
push ebx  +
call sub_100E14D  +
test eax eax +
jz loc_101094C  +
push 0Ah  +
push ebx  +
call sub_100DF67  +
cmp eax 0FFh +
ja loc_101094C  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1010907  +
cmp [ebp+var_4] 4 +
jnz loc_1010941  +
inc eax  +
jmp loc_101094E  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1010ADE  +
cmp ebx esi +
jz loc_1010ADE  +
mov eax [ebx] +
cmp eax esi +
jz loc_10109D7  +
cmp eax 2 +
jb loc_1010ADE  +
cmp edx esi +
jz loc_1010ADE  +
cmp dword_101338C esi +
jnz loc_1010A0B  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1010A01  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1010AEA  +
mov dword_101338C 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_1010AF0  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1010A78  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1010A7E  +
cmp eax 2AFCh +
jnz loc_1010A75  +
cmp [ebp+var_848] di +
jnz loc_1010A7E  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1010A38  +
jmp loc_1010ACA  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1010A9B  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_100C9B2  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_1010AB7  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1010ACA  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_100D2E9  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_1010AF2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010AF0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_1010B5C  +
push esi  +
push edi  +
call sub_100C9B2  +
test eax eax +
jz loc_1010B5C  +
push edi  +
call sub_1010861  +
push edi  +
test eax eax +
jnz loc_1010B64  +
push offset aS_3  +
push 1  +
call sub_100DB34  +
add esp 0Ch +
test eax eax +
jnz loc_1010B6B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010B57  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_100C71C  +
jmp loc_1010B41  +
call sub_100C6F0  +
cmp eax esi +
jnz loc_1010B7D  +
push 0Dh  +
call sub_100C67F  +
jmp loc_1010B87  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_100D843  +
cmp eax esi +
jz loc_1010B45  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1010B5C  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_1010BB6  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1010B5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_1010CC5  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_1010CC5  +
push esi  +
call sub_1010861  +
cmp eax 1 +
jnz loc_1010BFB  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1010C36  +
push offset aIpc  +
push esi  +
push offset aSS_1  +
push 2  +
call sub_100DB34  +
add esp 10h +
test eax eax +
jnz loc_1010C63  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010C2E  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_1010CC7  +
test bl 20h +
jz loc_1010C42  +
push offset aAdmin  +
jmp loc_1010C08  +
test bl 40h +
jz loc_1010C51  +
cmp [ebp+arg_4] edi +
jz loc_1010C51  +
push [ebp+arg_4]  +
jmp loc_1010C08  +
push esi  +
push offset aS_3  +
push 1  +
call sub_100DB34  +
add esp 0Ch +
jmp loc_1010C18  +
call sub_100C6F0  +
cmp eax edi +
jnz loc_1010C75  +
push 12h  +
call sub_100C67F  +
jmp loc_1010C7F  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_100D843  +
cmp eax edi +
jz loc_1010C1C  +
test ebx 10000000h +
jz loc_1010C92  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_1010CB8  +
cmp esi 4B8h +
jz loc_1010CB1  +
call sub_100C783  +
jmp loc_1010CC1  +
call sub_100DBC6  +
jmp loc_1010CC1  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_1010CC7  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_1010E2B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1010E2B  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_1010D28  +
xor eax eax +
jmp loc_1010E2E  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100D843  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_1010D4C  +
call ebx  +
test eax eax +
jnz loc_1010D21  +
push 8  +
call ds:SetLastError  +
jmp loc_1010D21  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_1010D21  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jz loc_1010E2B  +
push [ebp+lpString]  +
call sub_10108B0  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_1010DE7  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_101095A  +
test eax eax +
jz loc_1010D21  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_100D843  +
mov esi eax +
cmp esi edi +
jz loc_1010D21  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_101095A  +
test eax eax +
jz loc_1010D21  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_100C9D3  +
test eax eax +
jnz loc_1010DD3  +
mov eax ebx +
jmp loc_1010E2E  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_100C9D3  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1010E2E  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_1010D21  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100D843  +
mov ebx eax +
cmp ebx edi +
jz loc_1010D21  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_1010D21  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_1010DDB  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_1010ED6  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1010ED6  +
push ebx  +
call sub_10108B0  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_1010EB8  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_101095A  +
test eax eax +
jnz loc_1010E94  +
xor eax eax +
jmp loc_1010ED9  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_100D843  +
cmp eax esi +
jz loc_1010E90  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_101095A  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1010ED9  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_100CE06  +
cmp eax 0FFFFFFFFh +
jz loc_1010ED2  +
push 35h  +
call ds:SetLastError  +
jmp loc_1010E90  +
mov eax edi +
jmp loc_1010ED9  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_1010BC5  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1011067  +
push esi  +
call sub_1010CD3  +
cmp eax 1 +
jz loc_1011067  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_1010861  +
cmp eax 1 +
jnz loc_1010F46  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_1010E3A  +
test eax eax +
jnz loc_1010F62  +
call sub_100C783  +
call ds:GetLastError  +
jmp loc_101109B  +
cmp [ebp+lpString] ebx +
jz loc_1010F8B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1010F8B  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_1  +
push 2  +
call sub_100DB34  +
add esp 10h +
jmp loc_1010F9D  +
push dword ptr [ebp+arg_0]  +
push offset aS_3  +
push 1  +
call sub_100DB34  +
add esp 0Ch +
test eax eax +
jnz loc_1010FC0  +
call ds:GetLastError  +
test eax eax +
jnz loc_1010FB3  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
push 8  +
pop eax  +
jmp loc_101109B  +
call sub_100C6F0  +
cmp eax ebx +
jnz loc_1010FD2  +
push 12h  +
call sub_100C67F  +
jmp loc_1010FDC  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_100D843  +
mov edx eax +
cmp edx ebx +
jz loc_1010FA1  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_101102D  +
cmp esi 4B8h +
jz loc_1011026  +
push esi  +
call ds:SetLastError  +
call sub_100C783  +
jmp loc_1011095  +
call sub_100DBC6  +
jmp loc_1011095  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_1010B08  +
push eax  +
call sub_100C8CB  +
test eax eax +
jnz loc_1011095  +
push dword ptr [ebp+arg_0]  +
call sub_1010EEF  +
push 1580h  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
mov esi 4B8h +
jmp loc_1011095  +
cmp [ebp+lpUserName] ebx +
jz loc_1011099  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1011099  +
push 157Eh  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_101109B  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push dword ptr [ebp+arg_0]  +
call sub_1010F0C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
push 0  +
call ebx  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1011251  +
push 0  +
push edi  +
call sub_100C9B2  +
test eax eax +
jz loc_1011251  +
xor esi esi +
inc esi  +
cmp [ebp+arg_14] esi +
jnz loc_1011130  +
cmp [ebp+lpUserName] 0 +
jz loc_1011116  +
cmp [ebp+nSize] 2 +
jb loc_1011116  +
cmp [ebp+lpPassword] 0 +
jz loc_1011116  +
cmp [ebp+arg_10] 2 +
jnb loc_1011130  +
call ds:GetLastError  +
test eax eax +
jnz loc_1011124  +
push 57h  +
call ebx  +
call sub_100C783  +
xor eax eax +
jmp loc_1011254  +
push edi  +
mov [ebp+var_4] edi +
call sub_1010861  +
cmp eax esi +
jnz loc_1011143  +
lea eax [edi+4] +
mov [ebp+var_4] eax +
cmp [ebp+arg_14] esi +
jnz loc_1011174  +
cmp [ebp+lpPassword] 0 +
jz loc_1011174  +
push 0  +
push esi  +
push offset Buffer  +
push [ebp+lpPassword]  +
call sub_100C9D3  +
test eax eax +
jnz loc_1011174  +
push [ebp+var_4]  +
call sub_1010E3A  +
test eax eax +
jnz loc_1011268  +
jmp loc_1011124  +
push [ebp+var_4]  +
and [ebp+var_8] 0 +
call sub_1010E3A  +
test eax eax +
jz loc_1011124  +
cmp [ebp+lpUserName] 0 +
jz loc_10111B9  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10111B9  +
mov eax [ebp+arg_14] +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+lpPassword] +
push eax  +
push [ebp+lpUserName]  +
push edi  +
call sub_10110A6  +
mov edi eax +
cmp [ebp+arg_14] esi +
jnz loc_10111C8  +
mov [ebp+var_8] esi +
jmp loc_10111C8  +
push 0  +
push 0  +
push edi  +
mov [ebp+var_8] esi +
call sub_10110A6  +
mov edi eax +
cmp edi 55h +
jnz loc_10111D8  +
push 50010001h  +
call ebx  +
mov eax esi +
jmp loc_1011254  +
test edi edi +
jnz loc_10111E4  +
cmp [ebp+var_8] esi +
jz loc_10111CD  +
push edi  +
jmp loc_10111D2  +
mov eax 4C3h +
cmp edi eax +
ja loc_1011211  +
jz loc_101120E  +
cmp edi 34h +
jz loc_1011300  +
cmp edi 56h +
jz loc_101125B  +
cmp edi 4BEh +
jz loc_1011300  +
jmp loc_1011124  +
push eax  +
jmp loc_10111D2  +
cmp edi 4CFh +
jb loc_1011124  +
cmp edi 4D1h +
jbe loc_1011300  +
cmp edi 52Eh +
jz loc_101125B  +
mov esi 0A0010001h +
cmp edi esi +
jnz loc_1011124  +
push 157Eh  +
call sub_100E6E4  +
push eax  +
call sub_100C71C  +
push esi  +
call ebx  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp [ebp+arg_14] 0 +
jz loc_1011129  +
mov edi [ebp+lpString] +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jnz loc_101128B  +
lea eax [ebp+nSize] +
push eax  +
push [ebp+lpUserName]  +
push 2  +
call GetUserNameExW  +
test al al +
jz loc_1011124  +
push [ebp+lpUserName]  +
push 157Dh  +
call sub_100E6E4  +
push eax  +
push esi  +
push esi  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100E591  +
add esp 14h +
push [ebp+arg_10]  +
push [ebp+lpPassword]  +
call sub_100D5D4  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push edi  +
call sub_10110A6  +
mov edi eax +
test edi edi +
jz loc_10111D4  +
cmp edi 34h +
jz loc_1011300  +
cmp edi 4BEh +
jz loc_1011300  +
mov eax 4C3h +
cmp edi eax +
jz loc_101120E  +
cmp edi 4CEh +
jbe loc_1011124  +
cmp edi 4D1h +
ja loc_1011231  +
push 4C6h  +
call ebx  +
call sub_100C783  +
push edi  +
call ebx  +
jmp loc_1011129  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_1011479  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_1011478  +
cmp [ebp+hConsoleOutput] edi +
jz loc_1011478  +
push ebx  +
call sub_100CF14  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_1011354  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_100D843  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_1011396  +
call ds:GetLastError  +
test eax eax +
jnz loc_101137E  +
push 8  +
call ds:SetLastError  +
call sub_100C783  +
push ebx  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset dword_1001344  +
jmp loc_1011472  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_10113A9  +
push [ebp+arg_8]  +
call sub_100CF14  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_101143F  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_100D279  +
cmp eax edi +
jz loc_101143F  +
push eax  +
call sub_100CF14  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_100CF14  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_10113E0  +
mov esi eax +
xor edi edi +
jmp loc_10113AB  +
test esi esi +
jz loc_10113E9  +
cmp eax [ebp+arg_C] +
jnz loc_10113EC  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_10113F7  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_100D2E9  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_100E429  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push edi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_100D2E9  +
push ebx  +
call sub_100CF14  +
cmp eax esi +
push ebx  +
jle loc_1011465  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_1011472  +
cmp esi edi +
jz loc_10113E9  +
push ebx  +
call sub_100CF14  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_10113E9  +
push ebx  +
call sub_100CF14  +
cmp eax [ebp+arg_C] +
jg loc_10113EC  +
push ebx  +
call sub_100CF14  +
mov esi eax +
jmp loc_10113EC  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset word_10013EC  +
push ebx  +
call sub_100D2E9  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_100C67F  +
mov edi eax +
test edi edi +
jz loc_101156A  +
cmp [ebp+arg_8] 0 +
jz loc_101156A  +
push ebx  +
push esi  +
push edi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset dword_1001344  +
push edi  +
call sub_100D2E9  +
push [ebp+arg_0]  +
call sub_100E857  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_100D843  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_100D843  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_1011568  +
cmp eax esi +
jz loc_1011568  +
push [ebp+lpString]  +
call sub_100CF14  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_1011568  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_100F486  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_1003137  +
add esp 10h +
push edi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_100D32C  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_1011568  +
cmp ebx [ebp+var_C] +
jb loc_1011568  +
push edi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_100D32C  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_1011507  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS_4 +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_100C67F  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_10116F4  +
test esi esi +
jz loc_10116F4  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_100CC5C  +
shr eax 1 +
push eax  +
mov edi offset dword_1001344 +
push edi  +
push esi  +
call sub_100D2E9  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_10117B3  +
sub eax edx +
jz loc_1011775  +
sub eax edx +
jz loc_101172F  +
sub eax edx +
jz loc_1011705  +
sub eax 20h +
jz loc_1011668  +
sub eax 20h +
jz loc_1011642  +
push esi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_100D2E9  +
jmp loc_10116C3  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_10116F4  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_101165C  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_10116C3  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_100F05A  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_10116C0  +
call sub_100C783  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
call sub_100C6F0  +
push eax  +
push [ebp+lpMem]  +
call sub_100D2E9  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_10116F4  +
test dword ptr [ebx+204h] 100000h +
jz loc_10116F4  +
push esi  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_100E6E4  +
push eax  +
push esi  +
call sub_100D2E9  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1011716  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_10117D2  +
call sub_100F025  +
jmp loc_1011757  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1011740  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_10117D2  +
call sub_100EFF0  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1003137  +
add esp 14h +
jmp loc_10116C3  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_1011786  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_10117D2  +
call sub_100EFB5  +
push eax  +
push edi  +
push esi  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_1003137  +
add esp 10h +
jmp loc_10116C3  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_10117C4  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_10117F4  +
call sub_100EF4D  +
test eax eax +
jz loc_10116F4  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_1011484  +
jmp loc_10116C3  +
call sub_100EF86  +
test eax eax +
jz loc_10116F4  +
jmp loc_1011799  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_1011C6A  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_1011C6A  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_100D843  +
mov [ebp+lpMem] eax +
call sub_100E7B7  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_1011C5C  +
cmp [ebp+lpMem] edi +
jz loc_1011C5C  +
test [ebp+arg_C] ebx +
jnz loc_101195C  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_10118EE  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_10118E3  +
xor edi edi +
test eax 10000h +
jnz loc_101189A  +
and eax 0FF0h +
cmp eax 20h +
jz loc_101189A  +
cmp eax 30h +
jz loc_101189A  +
cmp eax 40h +
jnz loc_101189D  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_10118AF  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_100D2E9  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_100E429  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_1011877  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_101194F  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_1011946  +
cmp eax 1 +
jnz loc_1011924  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_10015C0  +
push [ebp+lpMem]  +
call sub_100DAD0  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_101190D  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+arg_10]  +
call sub_100E857  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_1011C51  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset dword_1001344  +
push [ebp+lpMem]  +
call sub_100D2E9  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_100EF4D  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_1011C42  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_1011AD7  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_1011AC2  +
test eax 88000h +
jz loc_10119E7  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_100CC5C  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_1001AB0 +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_1011574  +
xor ecx ecx +
test ebx ebx +
jnz loc_1011A31  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_1011A23  +
and eax 0FF0h +
cmp eax 20h +
jz loc_1011A23  +
cmp eax 30h +
jz loc_1011A23  +
cmp eax 40h +
jnz loc_1011A26  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_100E429  +
cmp ebx 1 +
jnz loc_1011A3B  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_1011A4E  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
test dword ptr [esi+4] 8000h +
jz loc_1011AB0  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_1011319  +
push [ebp+lpMem]  +
call sub_100CF14  +
test eax eax +
jz loc_1011ABB  +
push 3  +
push [ebp+var_8]  +
call sub_100ED44  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_1011ABB  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_100F343  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_100F306  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_100F306  +
jmp loc_1011ABB  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_10119BB  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+var_8]  +
call sub_100E857  +
mov [ebp+var_10] eax +
jmp loc_1011C3A  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_1011C2A  +
jmp loc_1011B0C  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100F13F  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_1011B83  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_1011B7A  +
cmp [ebp+var_C] 1 +
jnz loc_1011B54  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset String  +
push [ebp+lpMem]  +
call sub_100DAD0  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_1011B38  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_1011B99  +
push offset String  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100F108  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_100F108  +
mov ebx eax +
test edi edi +
jz loc_1011C1B  +
test ebx ebx +
jz loc_1011C1B  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_100D2E9  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_1011319  +
push edi  +
call sub_100CF14  +
test eax eax +
jnz loc_1011C0B  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100EE7C  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_1011C1B  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100F306  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_1011B09  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_1011AF4  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_1011973  +
lea eax [ebp+var_8] +
push eax  +
call sub_100E82C  +
jmp loc_1011C81  +
call ds:GetLastError  +
test eax eax +
jnz loc_1011C7C  +
push 8  +
jmp loc_1011C76  +
call ds:GetLastError  +
test eax eax +
jnz loc_1011C7C  +
push 57h  +
call ds:SetLastError  +
call sub_100C783  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_1013000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_1011F23  +
cmp edi ebx +
jz loc_1011F23  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_100D843  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_1011D17  +
call ds:GetLastError  +
test eax eax +
jnz loc_1011F35  +
push 8  +
jmp loc_1011F2F  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_1011D42  +
push edi  +
call sub_100CF14  +
cmp [ebp+var_90] eax +
jnb loc_1011D39  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_1011D25  +
push [ebp+var_9C]  +
call sub_100E857  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_1011F3A  +
mov edi offset asc_10018F0 +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_100EF4D  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_1011F09  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_1011EEE  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset dword_1001344  +
push ebx  +
call sub_100D2E9  +
test dword ptr [esi+4] 1000h +
jnz loc_1011ED3  +
lea eax [esi-200h] +
push eax  +
push offset aS_5  +
push ebx  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1003137  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_100E429  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_100CC5C  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_1011574  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_1011EC1  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_1011EC1  +
push [ebp+lpMem]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset String  +
lea eax [ebp+String] +
push eax  +
call sub_100D2E9  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100E429  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
jmp loc_1011E48  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_1011DA3  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_1011F09  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_1011D67  +
jmp loc_1011F3A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1011F35  +
push 57h  +
call ds:SetLastError  +
call sub_100C783  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_100C0EF  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1012104  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_1012104  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_100D843  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_1011F9F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012116  +
push 8  +
jmp loc_1012110  +
test [ebp+arg_C] edi +
jnz loc_1012007  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_1011FFA  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_1011FEF  +
cmp eax 1 +
jnz loc_1011FCA  +
push offset asc_1001ACC  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push esi  +
push offset aS_6  +
push ebx  +
call sub_100CC5C  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_1003137  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_1011FB0  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+arg_10]  +
call sub_100E857  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_101211B  +
mov ebx offset asc_1001880 +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_100EF4D  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_10120F3  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_10120E6  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_100CC5C  +
shr eax 1 +
push eax  +
push offset dword_1001344  +
push [ebp+lpString]  +
call sub_100D2E9  +
test [esi+4] edi +
jnz loc_10120D1  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_100CC5C  +
push offset asc_1001ACC  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_1011574  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_10120AC  +
push offset asc_1001ACC  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_1012053  +
push offset asc_10018F0  +
push [ebp+hConsoleOutput]  +
call sub_100D36F  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_1012023  +
jmp loc_101211B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1012116  +
push 57h  +
call ds:SetLastError  +
call sub_100C783  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_1012182  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_1012182  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_101216C  +
dec eax  +
jz loc_101215C  +
dec eax  +
jnz loc_101217A  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_1011F50  +
jmp loc_101217A  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_1011808  +
jmp loc_101217A  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_1011C8D  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_1012127  +
pop ebp  +
retn 10h  +
***
retn 128h  +
***
retn 129h  +
***
retf   +
***
