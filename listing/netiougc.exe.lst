retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1002493  +
mov eax [ebp+arg_0] +
jb loc_100248A  +
cmp eax 0FFFFFFFFh +
ja loc_1002493  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_100249E  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_10024C1  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_10024CC  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 2 +
push esi  +
lea esi [eax+4] +
mov eax [ebp+arg_4] +
push edi  +
mov edi eax +
jnz loc_10024F4  +
movs   +
movs   +
movs   +
movs   +
push 2  +
jmp loc_10024FB  +
push 7  +
pop ecx  +
movs   +
push 17h  +
pop ecx  +
pop edi  +
mov [eax] cx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax] 1 +
push esi  +
push edi  +
jnz loc_1002602  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_1002602  +
push 14h  +
push offset aIcmpredirectse  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1002602  +
push 74h  +
call ds:malloc  +
mov esi eax +
xor edi edi +
pop ecx  +
cmp esi edi +
jnz loc_100255A  +
push 0Eh  +
pop eax  +
jmp loc_1002605  +
push ebx  +
push edi  +
push edi  +
push edi  +
push edi  +
push 74h  +
push esi  +
push edi  +
push edi  +
push 6  +
mov ebx offset dword_10023BC +
push ebx  +
push dword_1006000  +
call NsiGetAllParameters  +
mov [ebp+8] eax +
cmp eax edi +
jnz loc_10025A6  +
mov eax [ebp+14h] +
mov al [eax] +
or dword ptr [esi+44h] 0FFFFFFFFh +
push 74h  +
push esi  +
push edi  +
push edi  +
push 6  +
push ebx  +
push 2  +
mov [esi+69h] al +
mov byte ptr [esi+2Ch] 0FFh +
push dword_1006000  +
call NsiSetAllParameters  +
mov [ebp+8] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push 74h  +
push esi  +
push edi  +
push edi  +
push 6  +
mov ebx offset dword_10023D4 +
push ebx  +
push dword_1006000  +
call NsiGetAllParameters  +
mov [ebp+1Ch] eax +
cmp eax edi +
jnz loc_10025ED  +
mov eax [ebp+14h] +
mov al [eax] +
push 74h  +
push esi  +
push edi  +
push edi  +
push 6  +
push ebx  +
push 2  +
mov [esi+69h] al +
mov byte ptr [esi+2Ch] 0FFh +
push dword_1006000  +
call NsiSetAllParameters  +
mov [ebp+1Ch] eax +
push esi  +
call ds:free  +
mov eax [ebp+8] +
pop ecx  +
pop ebx  +
cmp eax edi +
jnz loc_1002605  +
mov eax [ebp+1Ch] +
jmp loc_1002605  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp word ptr [eax] 17h +
jnz loc_100262E  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edi [eax+8] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
jmp loc_1002636  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax+4] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 4 +
push edi  +
jnz loc_10026EE  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_10026EE  +
push 6  +
push offset aMetric  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_10026EE  +
mov ebx 0B8h +
push ebx  +
call ds:malloc  +
mov edi eax +
xor eax eax +
pop ecx  +
cmp edi eax +
jnz loc_100268D  +
push 0Eh  +
pop eax  +
jmp loc_10026F1  +
push eax  +
push eax  +
push eax  +
push eax  +
mov eax [esi+18h] +
push ebx  +
push edi  +
push 8  +
push dword ptr [eax+4]  +
push 7  +
push dword ptr [esi+4]  +
push dword_1006000  +
call NsiGetAllParameters  +
mov [ebp+8] eax +
test eax eax +
jnz loc_10026E1  +
mov eax [ebp+14h] +
mov eax [eax] +
or dword ptr [edi+7Ch] 0FFFFFFFFh +
push ebx  +
push edi  +
mov [edi+1Ch] eax +
mov byte ptr [edi+6] 0 +
mov eax [esi+18h] +
push 8  +
push dword ptr [eax+4]  +
push 7  +
push dword ptr [esi+4]  +
push 0  +
push dword_1006000  +
call NsiSetAllParameters  +
mov [ebp+8] eax +
push edi  +
call ds:free  +
mov eax [ebp+8] +
pop ecx  +
jmp loc_10026F1  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov edx [ebp+arg_4] +
cmp ecx [edx+4] +
jnz loc_1002751  +
cmp ecx 1 +
jnz loc_1002739  +
mov ecx [eax+8] +
cmp ecx [edx+8] +
jnz loc_1002751  +
mov ecx [eax+0Ch] +
cmp ecx [edx+0Ch] +
jnz loc_1002751  +
mov ecx [eax+10h] +
cmp ecx [edx+10h] +
jnz loc_1002751  +
mov eax [eax+14h] +
cmp eax [edx+14h] +
jnz loc_1002751  +
mov al 1 +
jmp loc_1002753  +
cmp ecx 2 +
jnz loc_1002751  +
push esi  +
push edi  +
lea esi [eax+8] +
xor eax eax +
lea edi [edx+8] +
cmps   +
pop edi  +
setz al  +
pop esi  +
jmp loc_1002753  +
xor al al +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 4 +
push edi  +
jnz loc_10027E8  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_10027E8  +
push 0Bh  +
push offset aDhcpenabled  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_10027E8  +
mov eax [esi+18h] +
mov ebx [eax+4] +
push offset dword_10023BC  +
push dword ptr [esi+4]  +
call sub_10026FD  +
test al al +
jz loc_10027E1  +
push 202h  +
call ds:malloc  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_10027B6  +
push 0Eh  +
pop eax  +
jmp loc_10027EB  +
push 101h  +
push edi  +
push ebx  +
call ConvertInterfaceLuidToNameW  +
mov esi eax +
test esi esi +
jnz loc_10027D7  +
mov eax [ebp+14h] +
movzx eax byte ptr [eax] +
push eax  +
push edi  +
call DhcpEnableDhcp  +
mov esi eax +
push edi  +
call ds:free  +
pop ecx  +
jmp loc_10027E4  +
push 78h  +
pop esi  +
mov eax esi +
jmp loc_10027EB  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 4 +
push edi  +
jnz loc_10028B4  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_10028B4  +
push 16h  +
push offset aRouterdiscover  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_10028B4  +
mov ebx 0B8h +
push ebx  +
call ds:malloc  +
mov edi eax +
xor eax eax +
pop ecx  +
cmp edi eax +
jnz loc_1002849  +
push 0Eh  +
pop eax  +
jmp loc_10028B7  +
push eax  +
push eax  +
push eax  +
push eax  +
mov eax [esi+18h] +
push ebx  +
push edi  +
push 8  +
push dword ptr [eax+4]  +
push 7  +
push dword ptr [esi+4]  +
push dword_1006000  +
call NsiGetAllParameters  +
mov [ebp+8] eax +
test eax eax +
jnz loc_10028A7  +
mov ecx [ebp+14h] +
cmp byte ptr [ecx] 1 +
setz al  +
cmp byte ptr [edi+6] 0 +
mov [edi+14h] eax +
jz loc_1002884  +
or dword ptr [edi+1Ch] 0FFFFFFFFh +
or dword ptr [edi+7Ch] 0FFFFFFFFh +
mov eax [esi+18h] +
push ebx  +
push edi  +
push 8  +
push dword ptr [eax+4]  +
push 7  +
push dword ptr [esi+4]  +
push 0  +
push dword_1006000  +
call NsiSetAllParameters  +
mov [ebp+8] eax +
push edi  +
call ds:free  +
mov eax [ebp+8] +
pop ecx  +
jmp loc_10028B7  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 7 +
jnz loc_10029E3  +
cmp dword ptr [ebp+1Ch] 1 +
jnz loc_10029E3  +
push 6  +
push offset aPrefix  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_10029E3  +
push ebx  +
push edi  +
mov edi [esi+4] +
mov esi ds:malloc +
push 210h  +
call esi  +
pop ecx  +
mov [ebp+1Ch] eax +
test eax eax +
jnz loc_1002925  +
push 0Eh  +
pop ebx  +
jmp loc_10029DD  +
mov ebx [ebp+18h] +
lea eax [ebp-4] +
push eax  +
push 1  +
push ebx  +
call sub_10024A7  +
test eax eax +
jl loc_10029C0  +
mov eax [ebp-4] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp-4] +
push ecx  +
push edx  +
push eax  +
call sub_1002475  +
test eax eax +
jl loc_10029C0  +
push dword ptr [ebp-4]  +
call esi  +
mov esi eax +
pop ecx  +
mov [ebp-8] esi +
test esi esi +
jnz loc_1002967  +
push 0Eh  +
pop ebx  +
jmp loc_10029C5  +
lea eax [ebx+1] +
push eax  +
push esi  +
push ebx  +
push dword ptr [ebp+14h]  +
call sub_10034E8  +
test eax eax +
jnz loc_100297D  +
push 57h  +
jmp loc_1002964  +
***
lea eax [ebp+0Bh] +
push eax  +
push 0  +
push dword ptr [ebp+1Ch]  +
push 84h  +
push esi  +
call ParseNetworkString  +
mov ebx eax +
test ebx ebx +
jz loc_10029AC  +
push ebx  +
push dword ptr [ebp+14h]  +
push offset aTcpipFailedPar  +
push 1  +
call sub_1004227  +
add esp 10h +
jmp loc_10029C5  +
lea eax [edi+0Ch] +
push eax  +
push dword ptr [ebp+1Ch]  +
call sub_10024D5  +
mov al [ebp+0Bh] +
mov [edi+28h] al +
jmp loc_10029C5  +
mov ebx 216h +
push dword ptr [ebp+1Ch]  +
mov esi ds:free +
call esi  +
cmp dword ptr [ebp-8] 0 +
pop ecx  +
jz loc_10029DD  +
push dword ptr [ebp-8]  +
call esi  +
pop ecx  +
pop edi  +
mov eax ebx +
pop ebx  +
jmp loc_10029E6  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+8] +
xor ebx ebx +
cmp dword ptr [esi] 7 +
mov [ebp-8] ebx +
mov [ebp-4] ebx +
jnz loc_1002AEB  +
cmp dword ptr [ebp+1Ch] 1 +
jnz loc_1002AEB  +
push 0Eh  +
push offset aNexthopaddress  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1002AEB  +
push edi  +
mov edi [esi+4] +
mov esi ds:malloc +
push 210h  +
call esi  +
pop ecx  +
mov [ebp+8] eax +
cmp eax ebx +
jnz loc_1002A52  +
push 0Eh  +
pop ebx  +
jmp loc_1002AE6  +
lea eax [ebp-4] +
push eax  +
push 1  +
push dword ptr [ebp+18h]  +
call sub_10024A7  +
test eax eax +
jl loc_1002AC9  +
mov eax [ebp-4] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp-4] +
push ecx  +
push edx  +
push eax  +
call sub_1002475  +
test eax eax +
jl loc_1002AC9  +
push dword ptr [ebp-4]  +
call esi  +
mov esi eax +
pop ecx  +
mov [ebp-8] esi +
cmp esi ebx +
jnz loc_1002A8F  +
push 0Eh  +
pop ebx  +
jmp loc_1002ACE  +
mov eax [ebp+18h] +
lea ecx [eax+1] +
push ecx  +
push esi  +
push eax  +
push dword ptr [ebp+14h]  +
call sub_10034E8  +
test eax eax +
jnz loc_1002AA8  +
push 57h  +
jmp loc_1002A8C  +
***
push ebx  +
push ebx  +
push dword ptr [ebp+8]  +
push 9  +
push esi  +
call ParseNetworkString  +
mov ebx eax +
test ebx ebx +
jnz loc_1002ACE  +
add edi 2Ch +
push edi  +
push dword ptr [ebp+8]  +
call sub_10024D5  +
jmp loc_1002ACE  +
mov ebx 216h +
push dword ptr [ebp+8]  +
mov esi ds:free +
call esi  +
cmp dword ptr [ebp-8] 0 +
pop ecx  +
jz loc_1002AE6  +
push dword ptr [ebp-8]  +
call esi  +
pop ecx  +
mov eax ebx +
pop edi  +
jmp loc_1002AEE  +
xor eax eax +
inc eax  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi] 7 +
jnz loc_1002B32  +
cmp dword ptr [ebp+1Ch] 4 +
jnz loc_1002B32  +
push 6  +
push offset aMetric  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1002B32  +
mov ecx [ebp+14h] +
mov eax [esi+4] +
mov ecx [ecx] +
mov [eax+54h] ecx +
xor eax eax +
jmp loc_1002B35  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov esi [ebp+lpValueName] +
push edi  +
lea eax [ebp+cbMaxValueLen] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+8]  +
mov [ebp+var_14] edi +
mov [ebp+cbValueName] edi +
mov [ebp+cbMaxValueNameLen] edi +
mov [ebp+cbData] edi +
mov [ebp+cbMaxValueLen] edi +
mov [ebp+cValues] edi +
mov [ebp+Type] edi +
call ds:RegQueryInfoKeyA  +
inc [ebp+cbMaxValueNameLen]  +
inc [ebp+cbMaxValueLen]  +
mov ebx eax +
cmp ebx edi +
jz loc_1002BA7  +
push ebx  +
push dword ptr [esi+0Ch]  +
push offset aTcpipErrorQuer  +
push 1  +
call sub_1004227  +
add esp 10h +
mov eax ebx +
jmp loc_1002CF9  +
push [ebp+cbMaxValueNameLen]  +
mov ebx ds:malloc +
call ebx  +
push [ebp+cbMaxValueLen]  +
mov [ebp+lpValueName] eax +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpData] eax +
cmp [ebp+lpValueName] edi +
jz loc_1002CD3  +
cmp eax edi +
jz loc_1002CD3  +
mov [ebp+dwIndex] edi +
cmp [ebp+cValues] edi +
jbe loc_1002CDA  +
mov eax [ebp+cbMaxValueNameLen] +
mov [ebp+cbValueName] eax +
mov eax [ebp+cbMaxValueLen] +
mov [ebp+cbData] eax +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push edi  +
lea eax [ebp+cbValueName] +
push eax  +
push [ebp+lpValueName]  +
push [ebp+dwIndex]  +
push dword ptr [esi+8]  +
call ds:RegEnumValueA  +
mov ebx eax +
cmp ebx edi +
jnz loc_1002CB5  +
mov [ebp+var_C] edi +
cmp ds:off_1001240 edi +
jz loc_1002C8D  +
mov eax offset off_1001240 +
push [ebp+Type]  +
push [ebp+cbData]  +
push [ebp+lpData]  +
push [ebp+cbValueName]  +
push [ebp+lpValueName]  +
push esi  +
call dword ptr [eax]  +
xor ecx ecx +
mov ebx eax +
inc ecx  +
cmp ebx ecx +
jnz loc_1002C4D  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
lea eax off_1001240[eax*4] +
cmp [eax] edi +
jnz loc_1002C21  +
cmp ebx edi +
jz loc_1002C8D  +
cmp ebx ecx +
jnz loc_1002C6B  +
push dword ptr [esi+0Ch]  +
push [ebp+lpValueName]  +
push offset aTcpipNoConsume  +
push ecx  +
call sub_1004227  +
add esp 10h +
jmp loc_1002C83  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+lpValueName]  +
push [ebp+var_C]  +
push offset aTcpipConsumerD  +
push ecx  +
call sub_1004227  +
add esp 18h +
cmp [ebp+var_14] edi +
jnz loc_1002CA4  +
mov [ebp+var_14] ebx +
jmp loc_1002CA4  +
push dword ptr [esi+0Ch]  +
push [ebp+lpValueName]  +
push [ebp+var_C]  +
push offset aTcpipConsume_0  +
push edi  +
call sub_1004227  +
add esp 14h +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cValues] +
jb loc_1002BDC  +
jmp loc_1002CDA  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cValues]  +
push [ebp+dwIndex]  +
push offset aTcpipFailedToE  +
push 1  +
call sub_1004227  +
add esp 18h +
mov [ebp+var_14] ebx +
jmp loc_1002CDA  +
mov [ebp+var_14] 0Eh +
mov esi ds:free +
cmp [ebp+lpValueName] edi +
jz loc_1002CEB  +
push [ebp+lpValueName]  +
call esi  +
pop ecx  +
cmp [ebp+lpData] edi +
jz loc_1002CF6  +
push [ebp+lpData]  +
call esi  +
pop ecx  +
mov eax [ebp+var_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1006070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
xor ebx ebx +
mov byte ptr [ebp+var_14] bl +
lea edi [ebp+var_14+1] +
stos   +
stos   +
stos   +
stos   +
mov [ebp+var_20] ecx +
mov [ebp+var_24] edx +
stos   +
test esi esi +
jz loc_1002E27  +
test ecx ecx +
jz loc_1002E27  +
test edx edx +
jz loc_1002E27  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push 1  +
push esi  +
call ds:RtlIpv4StringToAddressW  +
push 2  +
pop edi  +
test eax eax +
jge loc_1002D89  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
call ds:RtlIpv6StringToAddressW  +
test eax eax +
jl loc_1002E27  +
mov [ebp+var_1C] 17h +
jmp loc_1002D8C  +
mov [ebp+var_1C] edi +
mov eax [ebp+var_18] +
movzx ecx word ptr [eax] +
test cx cx +
jnz loc_1002DC1  +
cmp word ptr [ebp+var_1C] 17h +
jnz loc_1002DA2  +
push 40h  +
jmp loc_1002DBE  +
cmp byte ptr [ebp+var_14] 7Fh +
ja loc_1002DAC  +
push 8  +
jmp loc_1002DBE  +
cmp byte ptr [ebp+var_14] 0BFh +
ja loc_1002DB6  +
push 10h  +
jmp loc_1002DBE  +
cmp byte ptr [ebp+var_14] 0DFh +
ja loc_1002E27  +
push 18h  +
pop ebx  +
jmp loc_1002E0A  +
add eax edi +
mov [ebp+var_18] eax +
cmp cx 2Fh +
jnz loc_1002E27  +
mov esi ds:iswdigit +
jmp loc_1002DE3  +
movzx ecx word ptr [eax] +
imul ebx ebx +
add eax edi +
lea ebx [ebx+ecx-30h] +
mov [ebp+var_18] eax +
movzx eax word ptr [eax] +
push eax  +
call esi  +
test eax eax +
mov eax [ebp+var_18] +
pop ecx  +
jnz loc_1002DD4  +
cmp word ptr [eax] 0 +
jnz loc_1002E27  +
cmp ebx 80h +
ja loc_1002E27  +
cmp word ptr [ebp+var_1C] di +
jnz loc_1002E0A  +
cmp ebx 20h +
ja loc_1002E27  +
mov eax [ebp+var_20] +
mov cx word ptr [ebp+var_1C] +
mov [eax] cx +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
call sub_1002610  +
mov eax [ebp+var_24] +
mov [eax] bl +
xor eax eax +
jmp loc_1002E2A  +
push 57h  +
pop eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10038AC  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
and dword ptr [ebp-4] 0 +
cmp dword ptr [eax] 5 +
jnz loc_1002F65  +
cmp dword ptr [ebp+1Ch] 1 +
jnz loc_1002F65  +
cmp dword ptr [ebp+14h] 0 +
jnz loc_1002E6E  +
push 57h  +
pop eax  +
jmp locret_1002F68  +
push esi  +
push edi  +
mov edi ds:malloc +
push 50h  +
call edi  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_1002E89  +
push 0Eh  +
pop edi  +
jmp loc_1002F5F  +
push ebx  +
push esi  +
call InitializeUnicastIpAddressEntry  +
mov ebx [ebp+18h] +
lea eax [ebp+1Ch] +
push eax  +
push 1  +
push ebx  +
call sub_10024A7  +
test eax eax +
jl loc_1002F43  +
mov eax [ebp+1Ch] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+1Ch] +
push ecx  +
push edx  +
push eax  +
call sub_1002475  +
test eax eax +
jl loc_1002F43  +
push dword ptr [ebp+1Ch]  +
call edi  +
pop ecx  +
mov [ebp-4] eax +
test eax eax +
jnz loc_1002ED4  +
push 0Eh  +
pop edi  +
jmp loc_1002F48  +
lea ecx [ebx+1] +
push ecx  +
push eax  +
push ebx  +
push dword ptr [ebp+14h]  +
call sub_10034E8  +
test eax eax +
jnz loc_1002EEA  +
push 57h  +
jmp loc_1002ED1  +
***
lea eax [esi+3Ch] +
push eax  +
push esi  +
push dword ptr [ebp-4]  +
call sub_1002D05  +
mov edi eax +
test edi edi +
jz loc_1002F12  +
push edi  +
push dword ptr [ebp+14h]  +
push offset aTcpipFailedP_0  +
push 1  +
call sub_1004227  +
add esp 10h +
jmp loc_1002F48  +
mov eax [ebp+8] +
mov eax [eax+18h] +
mov eax [eax+4] +
mov ecx [eax] +
mov [esi+20h] ecx +
mov eax [eax+4] +
push esi  +
mov [esi+24h] eax +
push dword_1006000  +
call InternalCreateUnicastIpAddressEntry  +
mov edi eax +
test edi edi +
jz loc_1002F48  +
push edi  +
push dword ptr [ebp+14h]  +
push offset aTcpipFailedAdd  +
jmp loc_1002F06  +
***
mov edi 216h +
push esi  +
mov esi ds:free +
call esi  +
cmp dword ptr [ebp-4] 0 +
pop ecx  +
pop ebx  +
jz loc_1002F5F  +
push dword ptr [ebp-4]  +
call esi  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
jmp locret_1002F68  +
xor eax eax +
inc eax  +
leave   +
retn 18h  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0Ah  +
push offset aInterfaces  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1002F9A  +
mov dword ptr [esi] 2 +
mov al 1 +
jmp loc_1002F9C  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1006070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
xor ebx ebx +
lea ecx [eax+1] +
mov [ebp+var_D] bl +
cmp ecx eax +
jb loc_100307B  +
lea eax [eax+eax+2] +
cmp eax ecx +
jb loc_100307B  +
push edi  +
mov edi ds:malloc +
push eax  +
call edi  +
pop ecx  +
mov [ebp+lpWideCharStr] eax +
test eax eax +
jz loc_1003075  +
mov eax [esi+10h] +
lea ecx [eax+1] +
push ecx  +
push [ebp+lpWideCharStr]  +
push eax  +
push dword ptr [esi+0Ch]  +
call sub_10034E8  +
test eax eax +
jz loc_100305B  +
push 8  +
call edi  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jz loc_100305B  +
push ebx  +
push [ebp+lpWideCharStr]  +
call ConvertInterfaceNameToLuidW  +
test eax eax +
jz loc_100304E  +
push ebx  +
push [ebp+lpWideCharStr]  +
call ConvertInterfaceAliasToLuid  +
test eax eax +
jz loc_100304E  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpWideCharStr]  +
call ConvertStringToInterfacePhysicalAddress  +
test eax eax +
jnz loc_100305B  +
push ebx  +
push 6  +
lea eax [ebp+var_C] +
push eax  +
call ConvertInterfacePhysicalAddressToLuid  +
test eax eax +
jnz loc_100305B  +
mov [esi+4] ebx +
mov dword ptr [esi] 3 +
mov [ebp+var_D] 1 +
push [ebp+lpWideCharStr]  +
mov esi ds:free +
call esi  +
pop ecx  +
test ebx ebx +
jz loc_1003075  +
cmp [ebp+var_D] 1 +
jz loc_1003075  +
push ebx  +
call esi  +
pop ecx  +
mov al [ebp+var_D] +
pop edi  +
jmp loc_100307D  +
xor al al +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10038AC  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
test eax eax +
jz loc_10030A9  +
push eax  +
call ds:free  +
pop ecx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 0Ch  +
push offset aIpv4settings  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_10030D8  +
mov eax offset dword_10023BC +
jmp loc_10030F3  +
push 0Ch  +
push offset aIpv6settings  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1003100  +
mov eax offset dword_10023D4 +
mov [esi+4] eax +
mov dword ptr [esi] 4 +
mov al 1 +
jmp loc_1003102  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push 12h  +
push offset aUnicastipaddre  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_1003135  +
mov dword ptr [esi] 5 +
mov al 1 +
jmp loc_1003137  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push 6  +
push offset aRoutes  +
push dword ptr [esi+10h]  +
push dword ptr [esi+0Ch]  +
call sub_10034B9  +
test al al +
jz loc_100316A  +
mov dword ptr [esi] 6 +
mov al 1 +
jmp loc_100316C  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 68h  +
call ds:malloc  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_100319D  +
push offset aTcpipFailedToA  +
push 1  +
call sub_1004227  +
pop ecx  +
pop ecx  +
xor al al +
jmp loc_10031C8  +
push esi  +
call InitializeIpForwardEntry  +
and dword ptr [esi+64h] 0 +
mov eax [ebp+arg_0] +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov ecx [ecx+4] +
mov edx [ecx] +
mov [esi] edx +
mov ecx [ecx+4] +
mov [esi+4] ecx +
mov [eax+4] esi +
mov dword ptr [eax] 7 +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push dword ptr [esi+4]  +
push dword_1006000  +
call InternalCreateIpForwardEntry2  +
test eax eax +
jz loc_10031FD  +
push eax  +
push offset aTcpipFailedT_0  +
push 1  +
call sub_1004227  +
add esp 0Ch +
mov esi [esi+4] +
test esi esi +
jz loc_100320C  +
push esi  +
call ds:free  +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_10032C5  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_10032C5  +
mov eax [ebp+arg_8] +
and [ebp+ValueName] 0 +
and [ebp+var_18] 0 +
mov [ebp+var_14] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_C] eax +
mov eax [esi] +
mov [ebp+var_4] edi +
mov [ebp+var_8] esi +
test eax eax +
jz loc_1003266  +
lea ecx [ebp+ValueName] +
push ecx  +
call eax  +
test al al +
jz loc_10032C5  +
push [ebp+var_10]  +
push [ebp+ValueName]  +
push offset aTcpipTransitio  +
push 0  +
call sub_1004227  +
add esp 10h +
lea eax [ebp+ValueName] +
push eax  +
call sub_1003458  +
test eax eax +
jz loc_100329A  +
push [ebp+arg_C]  +
push offset aTcpipErrorWhil  +
push 1  +
call sub_1004227  +
add esp 0Ch +
mov esi [esi+4] +
test esi esi +
jz loc_10032A7  +
lea eax [ebp+ValueName] +
push eax  +
call esi  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi]  +
push [ebp+var_10]  +
push [ebp+ValueName]  +
push offset aTcpipReturning  +
push 0  +
call sub_1004227  +
add esp 18h +
mov al 1 +
jmp loc_10032C7  +
xor al al +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi [ebp+dwIndex] +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+8]  +
mov [ebp+var_8] edi +
mov [ebp+cbName] edi +
mov [ebp+cbMaxSubKeyLen] edi +
mov [ebp+cSubKeys] edi +
call ds:RegQueryInfoKeyA  +
inc [ebp+cbMaxSubKeyLen]  +
mov ebx eax +
cmp ebx edi +
jz loc_100332A  +
push dword ptr [esi+0Ch]  +
push offset aTcpipFailedToQ  +
push 1  +
call sub_1004227  +
add esp 0Ch +
mov eax ebx +
jmp loc_100344C  +
push [ebp+cbMaxSubKeyLen]  +
call ds:malloc  +
pop ecx  +
mov [ebp+lpSubKey] eax +
cmp eax edi +
jnz loc_1003347  +
mov [ebp+var_8] 0Eh +
jmp loc_1003449  +
mov [ebp+dwIndex] edi +
cmp [ebp+cSubKeys] edi +
jbe loc_100343F  +
mov eax [ebp+cbMaxSubKeyLen] +
push edi  +
push edi  +
push edi  +
push edi  +
mov [ebp+cbName] eax +
lea eax [ebp+cbName] +
push eax  +
push [ebp+lpSubKey]  +
push [ebp+dwIndex]  +
push dword ptr [esi+8]  +
call ds:RegEnumKeyExA  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003405  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push [ebp+lpSubKey]  +
push dword ptr [esi+8]  +
call ds:RegOpenKeyExA  +
mov ebx eax +
cmp ebx edi +
jnz loc_1003420  +
mov eax [esi+14h] +
cmp [eax+8] edi +
jz loc_10033CA  +
push 8  +
pop ecx  +
mov ebx ecx +
push [ebp+cbName]  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
push dword ptr [eax+ecx]  +
push esi  +
call sub_1003216  +
test al al +
jnz loc_10033EB  +
mov eax [esi+14h] +
add ebx 4 +
mov ecx ebx +
cmp [ebx+eax] edi +
jnz loc_10033A7  +
push 57h  +
pop ebx  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+lpSubKey]  +
push offset aTcpipUnableToT  +
push 1  +
call sub_1004227  +
add esp 14h +
cmp [ebp+var_8] edi +
jnz loc_10033EB  +
mov [ebp+var_8] ebx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
inc [ebp+dwIndex]  +
mov eax [ebp+dwIndex] +
cmp eax [ebp+cSubKeys] +
jb loc_1003353  +
jmp loc_100343F  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cSubKeys]  +
push [ebp+dwIndex]  +
push offset aTcpipFailedT_1  +
push 1  +
call sub_1004227  +
add esp 18h +
jmp loc_100343C  +
push ebx  +
push dword ptr [esi+0Ch]  +
push [ebp+cSubKeys]  +
push [ebp+dwIndex]  +
push [ebp+lpSubKey]  +
push offset aTcpipFailedToO  +
push 1  +
call sub_1004227  +
add esp 1Ch +
mov [ebp+var_8] ebx +
push [ebp+lpSubKey]  +
call ds:free  +
pop ecx  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpValueName] +
push edi  +
push esi  +
xor ebx ebx +
call sub_1002B3F  +
mov edi eax +
test edi edi +
jz loc_1003486  +
push edi  +
push dword ptr [esi+0Ch]  +
push offset aTcpipErrorProc  +
push 1  +
call sub_1004227  +
add esp 10h +
mov ebx edi +
push esi  +
call sub_10032D2  +
mov edi eax +
test edi edi +
jz loc_10034AB  +
push edi  +
push dword ptr [esi+0Ch]  +
push offset aTcpipErrorPr_0  +
push 1  +
call sub_1004227  +
add esp 10h +
test ebx ebx +
jnz loc_10034AB  +
mov ebx edi +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_C] +
jz loc_10034CA  +
xor al al +
jmp loc_10034DF  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
dec eax  +
cmp [ebp+cchWideChar] eax +
jnb loc_10034F9  +
mov eax [ebp+cchWideChar] +
push esi  +
mov esi [ebp+lpWideCharStr] +
push eax  +
push esi  +
push eax  +
push [ebp+lpMultiByteStr]  +
push 0  +
push 3  +
call ds:MultiByteToWideChar  +
xor ecx ecx +
mov [esi+eax*2] cx +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
call ds:HeapSetInformation  +
mov esi eax +
call sub_1004079  +
cmp esi ebx +
jnz loc_1003554  +
push offset aTcpipHeapsetin  +
push edi  +
call sub_1004227  +
pop ecx  +
pop ecx  +
jmp loc_10035F8  +
cmp [ebp+arg_0] edi +
mov esi edi +
jle loc_100358B  +
mov eax [ebp+arg_4] +
push dword ptr [eax+esi*4]  +
push offset aOnline  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1003585  +
push offset aOnlineSpecifie  +
push ebx  +
call sub_1004227  +
pop ecx  +
pop ecx  +
mov dword_1006000 edi +
inc esi  +
cmp esi [ebp+arg_0] +
jl loc_100355B  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
mov esi offset SubKey +
push esi  +
push 80000002h  +
call ds:RegOpenKeyExA  +
cmp eax ebx +
jz loc_10035BC  +
push eax  +
push esi  +
push offset aTcpipFailedT_2  +
push edi  +
call sub_1004227  +
add esp 10h +
jmp loc_10035F8  +
mov eax [ebp+phkResult] +
mov [ebp+var_18] eax +
lea eax [ebp+ValueName] +
push eax  +
mov [ebp+var_8] ebx +
mov [ebp+var_C] offset unk_1006060 +
mov [ebp+ValueName] edi +
mov [ebp+var_1C] ebx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 43h +
call sub_1003458  +
cmp eax ebx +
jz loc_10035F8  +
push eax  +
push offset aTcpipEncounter  +
push edi  +
call sub_1004227  +
add esp 0Ch +
call sub_1003FAA  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1003625  +
test eax eax +
jnz loc_100362A  +
mov ecx [esi] +
test ecx ecx +
jz loc_1003622  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1003616  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10060C4 +
push offset dword_10060B4  +
push dword_10060C0  +
mov dword_10060B4 eax +
push offset dword_10060A4  +
push offset dword_10060A8  +
push offset dword_10060A0  +
call ds:__getmainargs  +
add esp 14h +
mov dword_10060B0 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_10036B2  +
cmp eax esi +
jnz loc_10036A5  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_10036B5  +
push 3E8h  +
call ds:Sleep  +
jmp loc_100368C  +
xor esi esi +
inc esi  +
mov eax dword_1006444 +
cmp eax esi +
jnz loc_10036C8  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1003703  +
mov eax dword_1006444 +
test eax eax +
jnz loc_10036FD  +
mov dword_1006444 esi +
push offset dword_1001184  +
push offset dword_1001178  +
call sub_1003609  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003703  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_10037CD  +
mov dword_10060BC esi +
mov eax dword_1006444 +
cmp eax esi +
jnz loc_1003727  +
push offset dword_1001174  +
push offset dword_1001168  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1006444 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1003734  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100644C ebx +
jz loc_1003755  +
push offset dword_100644C  +
call sub_10039B9  +
pop ecx  +
test eax eax +
jz loc_1003755  +
push ebx  +
push 2  +
push ebx  +
call dword_100644C  +
push dword_10060A4  +
push dword_10060A8  +
push dword_10060A0  +
call sub_100351D  +
add esp 0Ch +
mov dword_10060B8 eax +
cmp dword_10060AC ebx +
jnz loc_10037B3  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_10060B8 eax +
xor ebx ebx +
cmp dword_10060AC ebx +
jnz loc_10037B3  +
push eax  +
call ds:_exit  +
cmp dword_10060BC ebx +
jnz loc_10037C1  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_10060B8 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10037EA  +
xor eax eax +
jmp loc_1003837  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10037E6  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1003824  +
cmp ecx 20Bh +
jnz loc_10037E6  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10037E6  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1003832  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10037E6  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_10060AC eax +
call sub_1003BF8  +
push eax  +
call ds:__set_app_type  +
or dword_100643C 0FFFFFFFFh +
or dword_1006440 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10060CC +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10060C8 +
mov [eax] ecx +
call sub_1003AE4  +
cmp dword_1006080 0 +
jnz loc_1003890  +
push offset sub_1003AE4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1003ACC  +
xor eax eax +
retn   +
***
call sub_1003C37  +
jmp sub_100366A  +
***
cmp ecx dword_1006070 +
jnz loc_10038B7  +
retn 0  +
jmp loc_1003CCD  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_10038FE  +
cmp dword ptr [eax+10h] 3 +
jnz loc_10038FE  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_10038F8  +
cmp eax 19930521h +
jz loc_10038F8  +
cmp eax 19930522h +
jz loc_10038F8  +
cmp eax 1994000h +
jnz loc_10038FE  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10038C0+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1003946  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1003942  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10039AD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10039A5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10039AF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1003995  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1003930  +
pop ecx  +
test eax eax +
jz loc_1003A16  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1003970  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003A16  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1003A1F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10038AC  +
push offset dword_1006070  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_1003AEC  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1003BEB  +
cmp ecx 0FFFFFFFFh +
jz loc_1003BEB  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1003BE4  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1003BE4  +
cmp edx 10000000h +
jnb loc_1003BE4  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1003BE4  +
jmp loc_1003BDF  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1003C2D  +
push eax  +
call sub_1003B92  +
test eax eax +
jz loc_1003C2D  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1003C22  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1003C2D  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1006070 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1003C69  +
test eax ebx +
jz loc_1003C69  +
not eax  +
mov dword_1006074 eax +
jmp loc_1003CC4  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1003CB0  +
test dword_1006070 ebx +
jnz loc_1003CB5  +
mov esi 0BB40E64Fh +
mov dword_1006070 esi +
not esi  +
mov dword_1006074 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10061D0 eax +
mov dword_10061CC ecx +
mov dword_10061C8 edx +
mov dword_10061C4 ebx +
mov dword_10061C0 esi +
mov dword_10061BC edi +
mov word_10061E8 ss +
mov word_10061DC cs +
mov word_10061B8 ds +
mov word_10061B4 es +
mov word_10061B0 fs +
mov word_10061AC gs +
pushf   +
pop dword_10061E0  +
mov eax [ebp+0] +
mov dword_10061D4 eax +
mov eax [ebp+4] +
mov dword_10061D8 eax +
lea eax [ebp+8] +
mov dword_10061E4 eax +
mov eax [ebp-320h] +
mov dword_1006120 10001h +
mov eax dword_10061D8 +
mov dword_10060DC eax +
mov dword_10060D0 0C0000409h +
mov dword_10060D4 1 +
mov eax dword_1006070 +
mov [ebp-328h] eax +
mov eax dword_1006074 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov eax hModule +
push esi  +
test eax eax +
jz loc_1003E94  +
mov esi ds:GetProcAddress +
push offset ProcName  +
push eax  +
call esi  +
mov dword_10063FC eax +
test eax eax +
jz loc_1003E94  +
push offset aWdssetuplogdes  +
push hModule  +
call esi  +
mov dword_1006400 eax +
test eax eax +
jz loc_1003E94  +
push offset aWdssetuplogmes  +
push hModule  +
call esi  +
mov dword_1006404 eax +
test eax eax +
jz loc_1003E94  +
push offset aWdssetuplogm_0  +
push hModule  +
call esi  +
mov dword_1006408 eax +
test eax eax +
jz loc_1003E94  +
push offset aConstructparti  +
push hModule  +
call esi  +
mov dword_100640C eax +
test eax eax +
jz loc_1003E94  +
push offset aConstructpar_0  +
push hModule  +
call esi  +
mov dword_1006410 eax +
test eax eax +
jz loc_1003E94  +
push offset aCurrentip  +
push hModule  +
call esi  +
mov dword_1006414 eax +
test eax eax +
jz loc_1003E94  +
xor eax eax +
pop esi  +
retn   +
push ebx  +
mov ebx ds:GetLastError +
push edi  +
call ebx  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_1003EB2  +
and eax edi +
or eax esi +
test eax eax +
jge loc_1003EC0  +
call ebx  +
test eax eax +
jle loc_1003EC5  +
and eax edi +
or eax esi +
jmp loc_1003EC5  +
mov eax 80004005h +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov ebx offset CriticalSection +
push ebx  +
call ds:EnterCriticalSection  +
inc dword_10063EC  +
xor esi esi +
cmp dword_10063F0 esi +
jnz loc_1003F98  +
push edi  +
xor edi edi +
mov hModule esi +
cmp [ebp+arg_0] esi +
jnz loc_1003F19  +
push offset Src  +
call sub_1004907  +
mov edi eax +
cmp edi esi +
jz loc_1003F19  +
push edi  +
call sub_1004708  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov hModule eax +
cmp eax esi +
jz loc_1003F6C  +
call sub_1003DE3  +
test eax eax +
jl loc_1003F6C  +
cmp [ebp+arg_0] esi +
jnz loc_1003F5C  +
mov eax dword_10063FC +
cmp eax esi +
jz loc_1003F6C  +
push edi  +
push 300F000h  +
push esi  +
call eax  +
xor eax eax +
inc eax  +
mov dword_10063F0 eax +
mov dword_10063F4 eax +
jmp loc_1003F6C  +
mov dword_10063F0 1 +
mov dword_10063F4 esi +
cmp dword_10063F0 esi +
jnz loc_1003F84  +
mov eax hModule +
cmp eax esi +
jz loc_1003F84  +
push eax  +
call ds:FreeLibrary  +
cmp edi esi +
jz loc_1003F97  +
push edi  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
push ebx  +
call ds:LeaveCriticalSection  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
dec dword_10063EC  +
xor esi esi +
cmp dword_10063F0 esi +
jz loc_100400B  +
cmp dword_10063EC esi +
jnz loc_100400B  +
cmp hModule esi +
jz loc_100400B  +
cmp dword_10063F4 esi +
jz loc_1003FED  +
mov eax dword_1006400 +
cmp eax esi +
jz loc_1003FED  +
call eax  +
push hModule  +
call ds:FreeLibrary  +
mov hModule esi +
mov dword_10063F0 esi +
mov dword_10063F4 esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1004030  +
cmp ecx 7FFFFFFFh +
jbe loc_1004035  +
mov eax 80070057h +
test eax eax +
jl loc_1004072  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_1004065  +
cmp eax esi +
ja loc_1004065  +
jnz loc_100406D  +
mov [esi+edi] bl +
jmp loc_100406D  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_1006070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
mov [ebp+var_214] esi +
mov [ebp+var_218] eax +
cmp esi edi +
jz loc_1004212  +
cmp eax edi +
jz loc_1004212  +
push 204h  +
lea eax [ebp+var_208] +
push edi  +
push eax  +
mov dword ptr [ebp+Filename] edi +
call memset  +
add esp 0Ch +
push 104h  +
lea eax [ebp+Filename] +
push eax  +
push edi  +
mov dword ptr [ebp+var_210] offset aUnknown +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_1004122  +
lea eax [ebp+Filename] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_1004116  +
inc eax  +
inc eax  +
jmp loc_100411C  +
lea eax [ebp+Filename] +
mov dword ptr [ebp+var_210] eax +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1004127  +
sub eax edx +
mov ecx eax +
lea eax [ebp+Filename] +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
cmp si di +
jnz loc_100413B  +
mov edi ds:GetProcessHeap +
sub eax edx +
sar eax 1 +
push ebx  +
lea esi [eax+ecx+4] +
push esi  +
push 8  +
call edi  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1004211  +
push [ebp+var_214]  +
push dword ptr [ebp+var_210]  +
push offset aSS  +
push esi  +
push ebx  +
call sub_100401A  +
add esp 14h +
xor esi esi +
test eax eax +
jl loc_1004206  +
mov eax [ebp+arg_0] +
sub eax esi +
jz loc_10041AA  +
dec eax  +
jz loc_10041A1  +
dec eax  +
jnz loc_10041B1  +
mov [ebp+arg_0] 3000000h +
jmp loc_10041B1  +
mov [ebp+arg_0] 2000000h +
jmp loc_10041B1  +
mov [ebp+arg_0] 4000000h +
cmp dword_1006404 esi +
jz loc_1004206  +
cmp dword_100640C esi +
jz loc_1004206  +
cmp dword_1006414 esi +
jz loc_1004206  +
push esi  +
push esi  +
call ds:GetLastError  +
push eax  +
call dword_1006414  +
push eax  +
push offset aUnattendlogav  +
push offset aDW7rtmBaseNtse  +
push 1DCh  +
push esi  +
push offset aD  +
push esi  +
push [ebp+var_218]  +
push ebx  +
push [ebp+arg_0]  +
call dword_100640C  +
push eax  +
call dword_1006404  +
push ebx  +
push esi  +
call edi  +
push eax  +
call ds:HeapFree  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10038AC  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004086  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10042A7  +
mov eax [eax] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10042A7  +
mov ecx [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
and esi 4000000h +
mov edi ecx +
and edi 3000000h +
mov eax ecx +
and eax 2000000h +
push 0  +
pop edx  +
setnz dl  +
xor ebx ebx +
test edi edi +
setnz bl  +
add edx ebx +
xor ebx ebx +
test esi esi +
setnz bl  +
add edx ebx +
jz loc_10042A4  +
or eax edi +
or eax esi +
lea edx [ebp+arg_C] +
push edx  +
push [ebp+arg_8]  +
mov edx eax +
not edx  +
and edx ecx +
push edx  +
push eax  +
call [ebp+arg_0]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_10042C2  +
mov eax 80070057h +
jmp loc_100430A  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004A1D  +
mov [esi] eax +
test eax eax +
jz loc_10042D7  +
xor eax eax +
jmp loc_100430A  +
push ebx  +
mov ebx ds:GetLastError +
push edi  +
call ebx  +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jle loc_10042F5  +
and eax edi +
or eax esi +
test eax eax +
jge loc_1004303  +
call ebx  +
test eax eax +
jle loc_1004308  +
and eax edi +
or eax esi +
jmp loc_1004308  +
mov eax 80004005h +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
xor eax eax +
push ebx  +
mov ebx [ebp+lpFileName] +
mov [ebp+var_8] eax +
mov [ebp+dwErrCode] eax +
cmp ebx eax +
jz loc_1004385  +
xor ecx ecx +
cmp cx [ebx] +
jz loc_1004385  +
push esi  +
mov esi ds:GetFullPathNameW +
push edi  +
push eax  +
push eax  +
push eax  +
push ebx  +
call esi  +
mov edi eax +
test edi edi +
jz loc_100436C  +
lea eax [edi+edi] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_1004375  +
push [ebp+lpFilePart]  +
push eax  +
push edi  +
push ebx  +
call esi  +
test eax eax +
jnz loc_1004375  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
jmp loc_100438F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor edi edi +
cmp ebx edi +
jnz loc_10043B5  +
mov eax 80070057h +
jmp loc_10044DD  +
push esi  +
push offset asc_1001C24  +
push ebx  +
call sub_1004E14  +
test eax eax +
jz loc_10044BB  +
mov esi ds:wcschr +
lea eax [ebx+4] +
push 5Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jnz loc_10043E9  +
mov [ebp+arg_0] 8007000Dh +
jmp loc_10044D9  +
mov ecx ebx +
mov [ebp+lpMem] edi +
mov [ebp+var_8] edi +
lea edx [ecx+2] +
mov di [ecx] +
inc ecx  +
inc ecx  +
test di di +
jnz loc_10043F4  +
sub ecx edx +
add eax 2 +
sar ecx 1 +
push 5Ch  +
push eax  +
mov edi ecx +
call esi  +
pop ecx  +
pop ecx  +
xor ecx ecx +
cmp eax ecx +
jnz loc_1004418  +
mov esi edi +
jmp loc_100441E  +
sub eax ebx +
sar eax 1 +
mov esi eax +
cmp [ebp+arg_8] ecx +
jz loc_1004436  +
lea eax [ebp+lpMem] +
push eax  +
push esi  +
push ecx  +
push ebx  +
call sub_1004D85  +
mov [ebp+arg_0] eax +
xor ecx ecx +
jmp loc_1004439  +
mov [ebp+arg_0] ecx +
cmp [ebp+arg_0] ecx +
jl loc_1004486  +
cmp [ebp+arg_C] ecx +
jz loc_1004456  +
lea eax [ebp+var_8] +
push eax  +
sub edi esi +
push edi  +
push esi  +
push ebx  +
call sub_1004D85  +
mov [ebp+arg_0] eax +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jl loc_1004486  +
mov eax [ebp+arg_8] +
cmp eax ecx +
jz loc_100446A  +
mov edx [ebp+lpMem] +
mov [eax] edx +
mov [ebp+lpMem] ecx +
mov eax [ebp+arg_C] +
cmp eax ecx +
jz loc_1004479  +
mov edx [ebp+var_8] +
mov [eax] edx +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_4] +
cmp eax ecx +
jz loc_1004486  +
mov dword ptr [eax] 1 +
mov esi ds:HeapFree +
mov edi ds:GetProcessHeap +
cmp [ebp+lpMem] ecx +
jz loc_10044A9  +
push [ebp+lpMem]  +
push 0  +
call edi  +
push eax  +
call esi  +
test eax eax +
jz loc_10044A9  +
and [ebp+lpMem] 0 +
cmp [ebp+var_8] 0 +
jz loc_10044D9  +
push [ebp+var_8]  +
push 0  +
call edi  +
push eax  +
call esi  +
jmp loc_10044D9  +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] edi +
cmp eax edi +
jz loc_10044C7  +
mov [eax] edi +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_10044D0  +
mov [eax] edi +
mov eax [ebp+arg_C] +
cmp eax edi +
jz loc_10044D9  +
mov [eax] edi +
mov eax [ebp+arg_0] +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004399  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_1006070 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi ds:dword_1001C3C +
mov dword ptr [ebp+var_C] esi +
mov esi ds:dword_1001C40 +
push edi  +
mov [ebp+var_8] esi +
mov esi offset a?Unc +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
xor edx edx +
mov [ebp+var_30] eax +
mov [ebp+var_28] ecx +
mov [ebp+var_20] edx +
movs   +
cmp eax edx +
jz loc_10046E9  +
xor esi esi +
cmp si [eax] +
jz loc_10046E9  +
cmp ecx edx +
jz loc_1004562  +
mov [ecx] edx +
push ebx  +
push edx  +
push eax  +
call sub_1004314  +
mov [ebp+lpMem] eax +
mov ebx 0FFFFh +
mov edi 80070000h +
test eax eax +
jnz loc_10045AA  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jle loc_100458D  +
and eax ebx +
or eax edi +
test eax eax +
jge loc_100459D  +
call esi  +
test eax eax +
jle loc_1004599  +
and eax ebx +
or eax edi +
mov esi eax +
jmp loc_10045A2  +
mov esi 80004005h +
test esi esi +
jl loc_10046BD  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10045B0  +
sub eax edx +
sar eax 1 +
cmp eax 104h +
jb loc_1004671  +
mov esi ds:_wcsnicmp +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1004671  +
push 7  +
lea eax [ebp+var_1C] +
push eax  +
push [ebp+lpMem]  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1004671  +
and [ebp+var_2C] 0 +
push 0  +
lea eax [ebp+var_2C] +
push eax  +
push [ebp+lpMem]  +
call sub_10044E8  +
mov esi eax +
test esi esi +
jl loc_10046BD  +
cmp [ebp+var_2C] 1 +
lea eax [ebp+var_20] +
push eax  +
jnz loc_1004648  +
mov eax [ebp+lpMem] +
add eax 2 +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
call sub_10042AE  +
mov esi eax +
test esi esi +
jl loc_10046BD  +
mov eax [ebp+var_28] +
test eax eax +
jz loc_100466B  +
mov ecx [ebp+var_20] +
add ecx 10h +
mov [eax] ecx +
jmp loc_100466B  +
push [ebp+lpMem]  +
lea eax [ebp+var_C] +
push eax  +
call sub_10042AE  +
mov esi eax +
test esi esi +
jl loc_10046BD  +
cmp [ebp+var_28] 0 +
jz loc_100466B  +
mov eax [ebp+var_20] +
mov ecx [ebp+var_28] +
add eax 8 +
mov [ecx] eax +
cmp [ebp+var_20] 0 +
jnz loc_10046C1  +
push [ebp+var_30]  +
call sub_1004CF1  +
mov [ebp+var_20] eax +
test eax eax +
jz loc_1004684  +
xor esi esi +
jmp loc_10046AF  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jle loc_1004696  +
and eax ebx +
or eax edi +
test eax eax +
jge loc_10046A6  +
call esi  +
test eax eax +
jle loc_10046A2  +
and eax ebx +
or eax edi +
mov esi eax +
jmp loc_10046AB  +
mov esi 80004005h +
test esi esi +
jl loc_10046BD  +
mov eax [ebp+var_28] +
test eax eax +
jz loc_10046C1  +
mov ecx [ebp+var_20] +
mov [eax] ecx +
jmp loc_10046C1  +
and [ebp+var_20] 0 +
cmp [ebp+lpMem] 0 +
pop ebx  +
jz loc_10046DA  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
movzx eax si +
push eax  +
call ds:SetLastError  +
mov eax [ebp+var_20] +
jmp loc_10046F3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10038AC  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_1006070 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lpFileName] +
mov [ebp+var_20] esi +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+dwErrCode] ebx +
cmp esi ebx +
jz loc_100489C  +
xor eax eax +
cmp ax [esi] +
jz loc_100489C  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call sub_1004506  +
mov [ebp+lpPathName] eax +
cmp eax ebx +
jz loc_1004885  +
push edi  +
lea ecx [ebp+lpMem] +
push ecx  +
lea ecx [ebp+var_1C] +
push ecx  +
push eax  +
mov [ebp+lpMem] ebx +
mov [ebp+var_1C] ebx +
call sub_10044E8  +
cmp eax ebx +
jl loc_1004819  +
cmp [ebp+var_1C] 1 +
jnz loc_10047E4  +
mov eax [ebp+lpMem] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_100477E  +
mov ecx [ebp+var_14] +
sub eax edx +
sar eax 1 +
lea esi [ecx+eax*2] +
cmp [ebp+lpMem] ebx +
jz loc_10047A8  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edi ds:CreateDirectoryW +
push 5Ch  +
push esi  +
call ds:wcschr  +
pop ecx  +
mov esi eax +
pop ecx  +
push [ebp+lpPathName]  +
cmp esi ebx +
jz loc_1004859  +
xor eax eax +
mov [esi] ax +
call sub_1004E31  +
test eax eax +
jnz loc_10047DA  +
push ebx  +
push [ebp+lpPathName]  +
call edi  +
push 5Ch  +
pop eax  +
mov [esi] ax +
inc esi  +
inc esi  +
jmp loc_10047AE  +
mov esi [ebp+var_14] +
movzx eax word ptr [esi] +
cmp ax 61h +
jb loc_10047F6  +
cmp ax 7Ah +
jbe loc_1004802  +
cmp ax 41h +
jb loc_10047A8  +
cmp ax 5Ah +
ja loc_10047A8  +
push 3Ah  +
pop eax  +
cmp ax [esi+2] +
jnz loc_10047A8  +
push 5Ch  +
pop eax  +
cmp ax [esi+4] +
jnz loc_10047A8  +
add esi 8 +
jmp loc_10047A8  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
call ds:GetLastError  +
push eax  +
push esi  +
push offset aCreatepathUnab  +
push 3000000h  +
push offset unk_1006430  +
mov [ebp+dwErrCode] eax +
call sub_1004242  +
add esp 14h +
push [ebp+lpPathName]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
jmp loc_100488E  +
call sub_1004E31  +
xor esi esi +
inc esi  +
cmp eax esi +
jz loc_1004880  +
push ebx  +
push [ebp+lpPathName]  +
call edi  +
cmp eax esi +
jz loc_1004880  +
call ds:GetLastError  +
push eax  +
push [ebp+var_20]  +
push offset aCreatepathUn_0  +
jmp loc_1004830  +
mov [ebp+var_18] esi +
jmp loc_1004845  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov eax [ebp+var_18] +
jmp loc_10048A6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10038AC  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10048E4  +
cmp eax esi +
ja loc_10048E4  +
jz loc_10048E9  +
jmp loc_10048F1  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10048FA  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:ExpandEnvironmentStringsW +
push edi  +
xor edi edi +
push edi  +
push edi  +
push [ebp+lpSrc]  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_1004965  +
lea eax [ebx+ebx] +
push eax  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1004965  +
push ebx  +
push edi  +
push [ebp+lpSrc]  +
call esi  +
test eax eax +
jz loc_100494F  +
xor eax eax +
cmp ax [edi] +
jnz loc_1004965  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test eax eax +
jz loc_1004965  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1004989  +
cmp ecx 7FFFFFFFh +
jbe loc_100498E  +
mov eax 80070057h +
test eax eax +
jl loc_10049D9  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10049C9  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_10049C4  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_10049C4  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10049AC  +
pop edi  +
test esi esi +
jnz loc_10049D0  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10049F7  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10049FC  +
mov eax 80070057h +
test eax eax +
jl loc_1004A16  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10048BB  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
test edi edi +
jz loc_1004B0B  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1004B0B  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004A45  +
sub eax edx +
sar eax 1 +
mov ecx eax +
mov eax ebx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1004A5A  +
sub eax edx +
sar eax 1 +
test ecx ecx +
jz loc_1004A8E  +
push 5Ch  +
pop edx  +
cmp dx [edi+ecx*2-2] +
push edx  +
pop edx  +
jnz loc_1004A82  +
cmp dx [ebx] +
jnz loc_1004A8E  +
inc ebx  +
inc ebx  +
dec eax  +
jmp loc_1004A8E  +
cmp dx [ebx] +
jz loc_1004A8E  +
mov [ebp+var_4] 1 +
mov edx [ebp+var_4] +
add edx eax +
mov eax large fs:18h +
mov eax [eax+30h] +
lea esi [edx+ecx+1] +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_1004B18  +
cmp [ebp+var_4] 0 +
mov eax offset dword_10011AC +
ja loc_1004AC5  +
mov eax offset dword_1001EDC +
push ebx  +
push eax  +
push dword ptr [ebp+arg_0]  +
push offset aSSS  +
push esi  +
push edi  +
call sub_10049E2  +
mov esi eax +
mov eax large fs:18h +
add esp 18h +
test esi esi +
jge loc_1004B03  +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov ecx large fs:18h +
movzx eax si +
mov [ecx+34h] eax +
jmp loc_1004B18  +
and dword ptr [eax+34h] 0 +
mov eax edi +
jmp loc_1004B1A  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1004B5B  +
cmp [ebp+arg_4] eax +
jz loc_1004B57  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1004B57  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1004B3A  +
test esi esi +
jnz loc_1004B63  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1004B71  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1004C89  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1004C89  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004B9E  +
sub eax edx +
sar eax 1 +
mov [ebp+var_4] eax +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1004BB4  +
sub eax ecx +
sar eax 1 +
cmp [ebp+arg_8] 0 +
push ebx  +
mov ebx eax +
push esi  +
mov [ebp+var_8] ebx +
jz loc_1004BDB  +
xor eax eax +
cmp [ebp+var_4] ebx +
setz al  +
mov esi eax +
jmp loc_1004BE1  +
cmp [ebp+var_4] ebx +
sbb esi esi +
inc esi  +
test esi esi +
jz loc_1004C83  +
cmp [ebp+arg_C] 0 +
jz loc_1004C6E  +
push 3Fh  +
push edi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1004C6E  +
and [ebp+arg_4] 0 +
test ebx ebx +
jbe loc_1004C83  +
mov ebx [ebp+arg_0] +
sub ebx edi +
mov eax [ebp+arg_4] +
cmp eax [ebp+var_4] +
jnb loc_1004C83  +
test esi esi +
jz loc_1004C83  +
movzx edx word ptr [edi] +
push 3Fh  +
pop eax  +
cmp ax dx +
jz loc_1004C5C  +
movzx eax word ptr [ebx+edi] +
cmp ax 61h +
jb loc_1004C3A  +
cmp ax 7Ah +
ja loc_1004C3A  +
movzx ecx ax +
sub ecx 20h +
jmp loc_1004C3D  +
movzx ecx ax +
cmp dx 61h +
jb loc_1004C51  +
cmp dx 7Ah +
ja loc_1004C51  +
movzx eax dx +
sub eax 20h +
jmp loc_1004C54  +
movzx eax dx +
cmp ecx eax +
jz loc_1004C5C  +
xor esi esi +
jmp loc_1004C5F  +
xor esi esi +
inc esi  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
inc edi  +
inc edi  +
cmp eax [ebp+var_8] +
jb loc_1004C0B  +
jmp loc_1004C83  +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call ds:_wcsnicmp  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
mov eax esi +
pop esi  +
pop ebx  +
jmp loc_1004C98  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
mov ecx 80070057h +
test edx edx +
jz loc_1004CBD  +
cmp edx 7FFFFFFFh +
jbe loc_1004CBF  +
mov eax ecx +
test eax eax +
jl loc_1004CE8  +
cmp [ebp+arg_C] 7FFFFFFEh +
jbe loc_1004CD8  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_1004CE8  +
push [ebp+arg_C]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 0  +
call sub_1004B26  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1004D0D  +
mov eax large fs:18h +
mov dword ptr [eax+34h] 57h +
xor eax eax +
jmp loc_1004D7C  +
mov eax [ebp+arg_0] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1004D13  +
sub eax ecx +
push esi  +
sar eax 1 +
lea esi [eax+1] +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov edi eax +
test edi edi +
jz loc_1004D78  +
push [ebp+arg_0]  +
push esi  +
push edi  +
call sub_1004973  +
mov esi eax +
test esi esi +
jge loc_1004D78  +
mov eax large fs:18h +
mov eax [eax+30h] +
push edi  +
push 0  +
push dword ptr [eax+18h]  +
call ds:RtlFreeHeap  +
mov ecx large fs:18h +
movzx eax si +
xor edi edi +
mov [ecx+34h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
mov [ebp+var_4] 8007000Eh +
test eax eax +
jz loc_1004E04  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1004D9E  +
mov ebx [ebp+arg_C] +
sub eax edx +
sar eax 1 +
test ebx ebx +
jz loc_1004E04  +
mov ecx [ebp+arg_8] +
mov edi [ebp+arg_4] +
cmp ecx edi +
jb loc_1004E04  +
cmp edi eax +
ja loc_1004E04  +
cmp ecx eax +
ja loc_1004E04  +
mov eax large fs:18h +
mov eax [eax+30h] +
sub ecx edi +
push esi  +
inc ecx  +
mov esi ecx +
lea ecx [esi+esi] +
push ecx  +
push 8  +
push dword ptr [eax+18h]  +
call ds:RtlAllocateHeap  +
mov [ebx] eax +
test eax eax +
jz loc_1004DFE  +
lea ecx [esi-1] +
push ecx  +
mov ecx [ebp+arg_0] +
lea ecx [ecx+edi*2] +
push ecx  +
push esi  +
push eax  +
call sub_1004CA2  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_1004E09  +
mov eax 80070057h +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1004B7D  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpFileName] +
push ebx  +
push esi  +
xor esi esi +
xor ebx ebx +
cmp eax esi +
jz loc_1004EA2  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1004EA2  +
push edi  +
push esi  +
push eax  +
call sub_1004506  +
mov edi eax +
cmp edi esi +
jz loc_1004E9D  +
push edi  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jz loc_1004E6B  +
test al 10h +
jz loc_1004E6B  +
inc ebx  +
jmp loc_1004E86  +
xor ebx ebx +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jnz loc_1004E7E  +
mov esi 10Bh +
cmp esi 2 +
jnz loc_1004E86  +
push 3  +
pop esi  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push esi  +
call ds:SetLastError  +
mov eax ebx +
pop edi  +
jmp loc_1004EAC  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push offset CriticalSection  +
call ds:DeleteCriticalSection  +
retn   +
***
push 65676E61h  +
add [edx+656C5304h] dh +
jo $+3  +
jmp near ptr 756E9F0Fh  +
***
