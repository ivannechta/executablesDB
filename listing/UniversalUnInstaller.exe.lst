push [ebp+arg_C]  +
push esi  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_20] +
mov eax [ebp+arg_4] +
sub esp 10h +
mov al ds:byte_4665E3 +
mov edx [ebp+arg_4] +
mov ecx edx +
push esi  +
mov esi [ebp+arg_0] +
sub ecx offset unk_466530 +
or ecx 0B000000h +
mov eax [edx] +
mov [ebp+var_C] eax +
mov eax [edx+4] +
mov [ebp+var_8] eax +
mov eax [edx+8] +
add edx 0Ch +
mov [ebp+var_10] ecx +
mov ecx [ebp+arg_14] +
mov [ebp+var_4] eax +
mov eax [esi+4] +
push ecx  +
and dword ptr [ecx+4] 0 +
push [ebp+arg_10]  +
mov [ecx] eax +
mov eax [esi+4] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
movzx eax word ptr [eax] +
and dword ptr [ecx+14h] 0 +
mov [ecx+8] eax +
mov dword ptr [ecx+0Ch] 2 +
mov [ecx+10h] edx +
movzx eax word ptr [edx] +
mov [ecx+18h] eax +
lea eax [ebp+var_10] +
push eax  +
mov dword ptr [ecx+1Ch] 1 +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_43BFFB  +
add esp 1Ch +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_414583  +
push ecx  +
mov ecx offset dword_473C1C +
mov dword_473B50 offset off_46132C +
call sub_402DC0  +
xor eax eax +
mov dword_473C30 7 +
push offset loc_4557C0  +
mov dword_473C2C 0 +
mov word ptr dword_473C1C ax +
call sub_43717C  +
pop ecx  +
retn   +
***
call sub_402DC0  +
push offset loc_455810  +
mov dword_473B44 0 +
mov dword_473B48 0 +
mov dword_473B4C 0 +
call sub_43717C  +
pop ecx  +
retn   +
***
call sub_402DC0  +
xor eax eax +
mov dword_473C48 7 +
push offset loc_455860  +
mov dword_473C44 0 +
mov word ptr dword_473C34 ax +
call sub_43717C  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 17h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aUndefinedError  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473C4C offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473C50 +
call sub_402DC0  +
xor eax eax +
mov dword_473C64 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473C50 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473C60 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_4013E8  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_4558F0  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 27h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aCanTLoadCustom  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473C68 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473C6C +
call sub_402DC0  +
xor eax eax +
mov dword_473C80 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473C6C ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473C7C 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_4014C8  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455940  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 27h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aCanTLoadMarket  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473C84 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473C88 +
call sub_402DC0  +
xor eax eax +
mov dword_473C9C 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473C88 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473C98 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_4015A8  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455990  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 1Ah  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aModelClassDoes  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473CA0 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473CA4 +
call sub_402DC0  +
xor eax eax +
mov dword_473CB8 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473CA4 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473CB4 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401688  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_4559E0  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 14h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aRuntimeErrorOo  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473CBC offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473CC0 +
call sub_402DC0  +
xor eax eax +
mov dword_473CD4 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473CC0 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473CD0 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401768  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455A30  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 13h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aOutOfRangeErro  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473CD8 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473CDC +
call sub_402DC0  +
xor eax eax +
mov dword_473CF0 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473CDC ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473CEC 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401848  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455A80  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 10h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aInvalidArgumen  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473CF4 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473CF8 +
call sub_402DC0  +
xor eax eax +
mov dword_473D0C 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473CF8 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473D08 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401928  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455AD0  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 12h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aNoSuchIdExists  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473D10 offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473D14 +
call sub_402DC0  +
xor eax eax +
mov dword_473D28 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473D14 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473D24 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401A08  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455B20  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402DC0  +
push 14h  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aModelClassInva  +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
push ecx  +
mov [ebp+var_4] 0 +
lea ecx [ebp-29h] +
mov dword_473D2C offset off_462490 +
call sub_402DC0  +
push ecx  +
mov ecx offset dword_473D30 +
call sub_402DC0  +
xor eax eax +
mov dword_473D44 7 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr dword_473D30 ax +
lea eax [ebp+var_28] +
push eax  +
mov dword_473D40 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
jb loc_401AE8  +
mov ecx [ebp+var_28] +
push ecx  +
call nullsub_2  +
mov eax [ebp+var_14] +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
push offset sub_455B70  +
call sub_43717C  +
add esp 4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_402DC0  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
call sub_416A3C  +
call sub_416A3C  +
pop ecx  +
pop ecx  +
mov dword_472788 eax +
call sub_41A7AC  +
call sub_41A7AC  +
call sub_41A7AC  +
call sub_41A7AC  +
mov Msg eax +
mov dword_472990 eax +
pop ecx  +
pop ecx  +
mov ecx offset dword_472A80 +
retn   +
***
retn   +
***
mov ecx offset unk_472D24 +
retn   +
***
retn   +
***
pop ecx  +
mov ecx offset unk_4730FC +
call sub_419B8F  +
push offset sub_451896  +
mov byte ptr [eax+14h] 0 +
call sub_43717C  +
pop ecx  +
mov byte_4739BC al +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_45ED64 +
jz loc_401D6D  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_401D9E  +
mov eax ecx +
pop ebp  +
retn   +
add eax eax +
push eax  +
push edx  +
push ecx  +
call loc_438E80  +
add esp 0Ch +
pop ebp  +
retn   +
***
push esi  +
mov esi edx +
test ecx ecx +
jnz loc_401DBB  +
xor eax eax +
pop esi  +
retn   +
***
or eax 0FFFFFFFFh +
xor edx edx +
div  esi +
cmp eax ecx +
jb loc_401E01  +
imul ecx esi +
cmp ecx 1000h +
jb loc_401DF2  +
lea eax [ecx+23h] +
cmp eax ecx +
jbe loc_401E06  +
push eax  +
call sub_4139EA  +
mov ecx eax +
add esp 4 +
test ecx ecx +
jz loc_401E0B  +
lea eax [ecx+23h] +
and eax 0FFFFFFE0h +
pop esi  +
mov [eax-4] ecx +
retn   +
***
push ecx  +
call sub_4139EA  +
add esp 4 +
test eax eax +
jnz loc_401DB9  +
jmp loc_401E10  +
call sub_437F73  +
call sub_437F73  +
call sub_43C8C1  +
call sub_43C8C1  +
push 0FFFFFFFFh  +
push offset loc_452538  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
lea eax [ebp+var_10] +
mov [ebp+var_4] 0 +
push eax  +
mov dword ptr [esi] offset off_461888 +
mov [ebp+var_10] esi +
call sub_408940  +
mov dword ptr [esi] offset off_45EDC8 +
mov eax esi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov byte ptr [esi+2Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_4022A0  +
test [ebp+arg_0] 1 +
jz loc_401EDC  +
push 30h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4525AD  +
mov eax large fs:0 +
push eax  +
sub esp 0E4h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx [ebp+arg_0] +
xor esi esi +
mov [ebp+var_E8] esi +
mov [ebp+var_4] esi +
mov [ebp+var_EC] esi +
mov byte ptr [ebp+var_4] 2 +
call sub_40CC20  +
push ebx  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+4]  +
mov edi eax +
mov [ebp+var_EC] edi +
test edi edi +
jz loc_402089  +
mov esi [edi+10h] +
lea ecx [ebp+var_E4] +
call sub_408DD0  +
push esi  +
lea ecx [ebp+var_E4] +
mov byte ptr [ebp+var_4] 3 +
call loc_409190  +
push offset aTreetype  +
mov ecx esi +
call loc_409D70  +
mov esi eax +
test esi esi +
jz loc_4020B1  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
cmp eax 1 +
jb loc_4020B1  +
push offset aTop  +
mov ecx esi +
call loc_409D70  +
test eax eax +
jnz loc_401FE1  +
lea ecx [ebp+var_E4] +
call sub_408F60  +
mov byte ptr [ebp+var_4] 5 +
mov eax [edi] +
mov ecx edi +
push 1  +
call dword ptr [eax]  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
push 6Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_F0] eax +
mov byte ptr [ebp+var_4] 6 +
test eax eax +
jz loc_402004  +
mov ecx eax +
call sub_402E20  +
mov esi eax +
jmp loc_402006  +
xor esi esi +
lea ecx [esi+18h] +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_8C] +
mov [ebp+var_E8] esi +
cmp ecx eax +
jz loc_402027  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
push ebx  +
lea ecx [ebp+var_2C] +
call loc_402650  +
lea eax [ebp+var_2C] +
mov byte ptr [ebp+var_4] 7 +
cmp esi eax +
jz loc_402047  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
mov ecx esi +
call loc_402A60  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 3 +
call sub_402610  +
lea ecx [esi+48h] +
lea eax [ebp+var_5C] +
cmp ecx eax +
jz loc_402067  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
lea ecx [esi+30h] +
lea eax [ebp+var_A4] +
cmp ecx eax +
jz loc_40207E  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
lea ecx [ebp+var_E4] +
call sub_408F60  +
mov [ebp+var_4] 1 +
mov [ebp+var_E8] 0 +
mov byte ptr [ebp+var_4] 9 +
test edi edi +
jz loc_4020AA  +
mov edx [edi] +
mov ecx edi +
push 1  +
call dword ptr [edx]  +
mov eax esi +
jmp loc_401FC3  +
lea ecx [ebp+var_E4] +
call sub_408F60  +
mov byte ptr [ebp+var_4] 4 +
jmp loc_401FB9  +
***
push ebp  +
mov ebp esp +
mov eax [ecx+8] +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
lea edi [ecx+8] +
mov [edi+4] eax +
mov esi [ebx] +
cmp esi [ebx+4] +
jz loc_40211C  +
cmp dword ptr [esi+14h] 8 +
jb loc_4020FA  +
mov eax [esi] +
jmp loc_4020FC  +
mov eax esi +
push eax  +
call sub_401EF0  +
mov [ebp+8] eax +
test eax eax +
jz loc_402114  +
lea eax [ebp+8] +
mov ecx edi +
push eax  +
call loc_402460  +
add esi 18h +
cmp esi [ebx+4] +
jnz loc_4020F0  +
mov eax [edi+4] +
sub eax [edi] +
and eax 0FFFFFFFCh +
cmp eax 4 +
jnz loc_402140  +
mov eax [edi+4] +
mov ecx [edi] +
sub eax ecx +
sar eax 2 +
test eax eax +
jz loc_402147  +
mov eax [ecx] +
mov dword ptr [eax+64h] 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push offset aInvalidVectorT  +
call sub_437FB0  +
push 0FFFFFFFFh  +
push offset loc_4525F9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] 0 +
mov edi [ebp+arg_0] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov [ebp+var_4] 0 +
mov esi [ebx+8] +
mov [ebp+var_10] 1 +
cmp esi [ebx+0Ch] +
jz loc_4021DE  +
nop   +
mov eax [esi] +
mov [ebp+var_14] eax +
cmp dword ptr [eax+64h] 3 +
jnz loc_4021D6  +
lea eax [ebp+var_14] +
mov ecx edi +
push eax  +
call loc_402460  +
add esi 4 +
cmp esi [ebx+0Ch] +
jnz loc_4021C0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4525F9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] 0 +
mov edi [ebp+arg_0] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov [ebp+var_4] 0 +
mov esi [ebx+8] +
mov [ebp+var_10] 1 +
cmp esi [ebx+0Ch] +
jz loc_40227E  +
nop   +
mov eax [esi] +
mov [ebp+var_14] eax +
cmp byte ptr [eax+68h] 0 +
jz loc_402276  +
lea eax [ebp+var_14] +
mov ecx edi +
push eax  +
call loc_402460  +
add esi 4 +
cmp esi [ebx+0Ch] +
jnz loc_402260  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov dword ptr [edi] offset off_45EDC8 +
mov esi [edi+8] +
cmp esi [edi+0Ch] +
jz loc_4022D8  +
push ebx  +
mov ebx [esi] +
test ebx ebx +
jz loc_4022CF  +
mov ecx ebx +
call sub_402F40  +
push 6Ch  +
push ebx  +
call sub_436CA0  +
add esp 8 +
add esi 4 +
cmp esi [edi+0Ch] +
jnz loc_4022B7  +
pop ebx  +
mov eax [edi+8] +
mov [edi+0Ch] eax +
mov ecx [edi+20h] +
test ecx ecx +
jz loc_402329  +
push [ebp+var_4]  +
mov edx [edi+24h] +
push ecx  +
call loc_402DD0  +
mov esi [edi+20h] +
mov eax 2AAAAAABh +
mov ecx [edi+28h] +
add esp 8 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_402820  +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov dword ptr [edi+28h] 0 +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_402374  +
push [ebp+var_4]  +
mov edx [edi+18h] +
push ecx  +
call loc_402DD0  +
mov esi [edi+14h] +
mov eax 2AAAAAABh +
mov ecx [edi+1Ch] +
add esp 8 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_402820  +
mov dword ptr [edi+14h] 0 +
mov dword ptr [edi+18h] 0 +
mov dword ptr [edi+1Ch] 0 +
mov ecx [edi+8] +
test ecx ecx +
jz loc_40239F  +
mov eax [edi+10h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
mov dword ptr [edi] offset off_461888 +
mov ecx dword_473B44 +
mov edx dword_473B48 +
cmp ecx edx +
jz loc_4023EA  +
cmp [ecx] edi +
jz loc_4023CC  +
add ecx 4 +
cmp ecx edx +
jnz loc_4023B5  +
mov dword ptr [edi] offset off_461894 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
cmp ecx edx +
jz loc_4023EA  +
lea eax [ecx+4] +
sub edx eax +
and edx 0FFFFFFFCh +
push edx  +
push eax  +
push ecx  +
call loc_438E80  +
add esp 0Ch +
sub dword_473B48 4 +
mov dword ptr [edi] offset off_461894 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452620  +
mov eax large fs:0 +
push eax  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
test ecx ecx +
jz loc_40242E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_402459  +
mov ecx esi +
call sub_402F40  +
push 6Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov edx [esi+4] +
cmp edi edx +
jnb loc_4024EF  +
mov ebx [esi] +
cmp ebx edi +
ja loc_4024EF  +
mov ecx [esi+8] +
sub edi ebx +
sar edi 2 +
cmp edx ecx +
jnz loc_4024D4  +
mov eax ecx +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_4024D4  +
sub edx ebx +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_402557  +
sub ecx [esi] +
inc edx  +
sar ecx 2 +
mov eax ecx +
mov [ebp+8] ecx +
shr eax 1 +
add ecx eax +
mov dword ptr [ebp-4] 0 +
sub ebx eax +
cmp ebx [ebp+8] +
cmovb ecx [ebp-4] +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_4028E0  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40254A  +
mov eax [esi] +
mov eax [eax+edi*4] +
pop edi  +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ebx [esi+8] +
cmp edx ebx +
jnz loc_40253F  +
mov eax ebx +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_40253F  +
sub edx [esi] +
mov ecx 3FFFFFFFh +
sar edx 2 +
mov eax ecx +
sub eax edx +
cmp eax 1 +
jb loc_402561  +
sub ebx [esi] +
inc edx  +
sar ebx 2 +
mov eax ebx +
shr eax 1 +
sub ecx eax +
mov [ebp+8] ecx +
cmp [ebp+8] ebx +
lea ecx [eax+ebx] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_4028E0  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40254A  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_437F90  +
push offset aVectorTTooLong  +
call sub_437F90  +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_40259C  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
mov ecx [edi] +
test ecx ecx +
jz loc_4025EE  +
push [ebp+var_4]  +
mov edx [edi+4] +
push ecx  +
call loc_402DD0  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call loc_402820  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_402609  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402624  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402641  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
mov esi ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_402683  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_402720  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx edx +
push edi  +
lea edi [ecx+2] +
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_4026E7  +
cmp dword ptr [esi+14h] 8 +
jb loc_4026E7  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_4026DB  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call loc_439530  +
add esp 0Ch +
mov eax [esi+14h] +
inc eax  +
push eax  +
push ebx  +
call loc_402950  +
pop ebx  +
mov dword ptr [esi+14h] 7 +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402705  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_402776  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40273A  +
mov eax [esi] +
jmp loc_40273C  +
mov eax esi +
cmp ebx eax +
jb loc_402776  +
cmp ecx 8 +
jb loc_402749  +
mov edx [esi] +
jmp loc_40274B  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_402776  +
cmp ecx 8 +
jb loc_40275E  +
mov eax [esi] +
jmp loc_402760  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call loc_402A60  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi [ebp+0Ch] +
cmp edi 7FFFFFFEh +
ja loc_40280E  +
cmp [esi+14h] edi +
jnb loc_4027A4  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402B80  +
test edi edi +
jz loc_402805  +
cmp dword ptr [esi+14h] 8 +
jb loc_4027CF  +
mov ecx [esi] +
jmp loc_4027D1  +
test edi edi +
jnz loc_40279A  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4027C1  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov ecx esi +
test edi edi +
jz loc_4027E3  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call loc_439530  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_4027FD  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 0AAAAAAAh +
ja loc_402864  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_402857  +
test cl 1Fh +
jnz loc_402869  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_40286E  +
sub ecx eax +
cmp ecx 4 +
jb loc_402873  +
cmp ecx 23h +
ja loc_402878  +
mov ecx eax +
push ecx  +
call sub_413A17  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 3FFFFFFFh +
ja loc_4028C1  +
shl eax 2 +
cmp eax 1000h +
jb loc_4028B4  +
test cl 1Fh +
jnz loc_4028C6  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_4028CB  +
sub ecx eax +
cmp ecx 4 +
jb loc_4028D0  +
cmp ecx 23h +
ja loc_4028D5  +
mov ecx eax +
push ecx  +
call sub_413A17  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov edx 4 +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_401DB0  +
mov edx [esi] +
mov edi eax +
mov ecx [esi+4] +
sub ecx edx +
and ecx 0FFFFFFFCh +
push ecx  +
push edx  +
push edi  +
call loc_438E80  +
mov ecx [esi] +
add esp 10h +
mov ebx [esi+4] +
sub ebx ecx +
sar ebx 2 +
test ecx ecx +
jz loc_40292A  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov eax [ebp+arg_0] +
lea eax [edi+eax*4] +
mov [esi+8] eax +
lea eax [edi+ebx*4] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_402990  +
add eax eax +
cmp eax 1000h +
jb loc_402983  +
test cl 1Fh +
jnz loc_402995  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_40299A  +
sub ecx eax +
cmp ecx 4 +
jb loc_40299F  +
cmp ecx 23h +
ja loc_4029A4  +
mov ecx eax +
push ecx  +
call sub_413A17  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 7FFFFFFEh +
ja loc_402A23  +
cmp [ecx+14h] esi +
jnb loc_4029DA  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_402B80  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
cmp byte ptr [ebp+0Ch] 0 +
jz loc_402A02  +
cmp esi 8 +
jnb loc_402A02  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_4026B0  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_402A16  +
mov [ecx+10h] esi +
cmp dword ptr [ecx+14h] 8 +
jb loc_402A11  +
mov ecx [ecx] +
xor eax eax +
mov [ecx] ax +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
cmp dword ptr [ecx+14h] 8 +
jb loc_402A4B  +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
xor eax eax +
mov [ecx+edx*2] ax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov edi [ebx+10h] +
cmp edi ecx +
jb loc_402B5B  +
sub edi ecx +
cmp [ebp+10h] edi +
cmovb edi [ebp+10h] +
cmp esi ebx +
jnz loc_402AB9  +
lea eax [edi+ecx] +
cmp [esi+10h] eax +
jb loc_402B65  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_402A9F  +
mov edx [esi] +
jmp loc_402AA1  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call loc_402D00  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
cmp edi 7FFFFFFEh +
ja loc_402B6F  +
cmp [esi+14h] edi +
jnb loc_402AEE  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_402B80  +
mov ecx [ebp+0Ch] +
test edi edi +
jz loc_402B52  +
cmp dword ptr [ebx+14h] 8 +
jb loc_402AE4  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_402B19  +
mov edx [esi] +
jmp loc_402B1B  +
test edi edi +
jnz loc_402ADC  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402B0B  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test edi edi +
jz loc_402B30  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call loc_439530  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402B4A  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
push offset aInvalidStringP  +
call sub_437FB0  +
push offset aStringTooLong  +
call sub_437F90  +
push 0FFFFFFFFh  +
push offset loc_452640  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_402BC4  +
mov edi eax +
jmp loc_402BEB  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_402BEB  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_402BEB  +
mov edi 7FFFFFFEh +
push ecx  +
lea ecx [edi+1] +
mov [ebp+var_4] 0 +
mov edx 2 +
call loc_401DB0  +
add esp 4 +
mov edx eax +
jmp loc_402C35  +
mov ecx [ebp+8] +
mov edx 2 +
mov [ebp-10h] esp +
mov [ebp+8] ecx +
push ecx  +
inc ecx  +
mov byte ptr [ebp-4] 2 +
call loc_401DB0  +
mov [ebp-14h] eax +
add esp 4 +
mov eax offset loc_402C2C +
retn   +
mov esi [ebp-18h] +
mov edi [ebp+8] +
mov edx [ebp-14h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_14] edx +
test ebx ebx +
jz loc_402C5D  +
cmp dword ptr [esi+14h] 8 +
jb loc_402C49  +
mov ecx [esi] +
jmp loc_402C4B  +
mov ecx esi +
test ebx ebx +
jz loc_402C5D  +
lea eax [ebx+ebx] +
push eax  +
push ecx  +
push edx  +
call loc_439530  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402C6E  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402C86  +
mov eax [esi] +
jmp loc_402C88  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+var_14] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_402CA0  +
mov esi eax +
xor eax eax +
mov [esi+ebx*2] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jb loc_402D9D  +
mov edx [ebp+0Ch] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_402D47  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_402D39  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
***
test edx edx +
jz loc_402D95  +
cmp dword ptr [esi+14h] 8 +
jb loc_402D55  +
mov eax [esi] +
jmp loc_402D57  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_402D73  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call loc_438E80  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
pop ebx  +
jb loc_402D8D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
retn 4  +
***
push edi  +
mov edi edx +
cmp ecx edi +
jz loc_402E1B  +
push esi  +
lea esi [ecx+14h] +
mov eax [esi] +
cmp eax 8 +
jb loc_402DF1  +
inc eax  +
push eax  +
push dword ptr [esi-14h]  +
call loc_402950  +
mov dword ptr [esi] 7 +
mov dword ptr [esi-4] 0 +
cmp dword ptr [esi] 8 +
jb loc_402E08  +
mov eax [esi-14h] +
jmp loc_402E0B  +
lea eax [esi-14h] +
add esi 18h +
xor ecx ecx +
mov [eax] cx +
lea eax [esi-14h] +
cmp eax edi +
jnz loc_402DE0  +
pop esi  +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45267E  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_402E6F  +
mov eax [esi] +
jmp loc_402E71  +
mov eax esi +
xor ecx ecx +
push ecx  +
mov [eax] cx +
mov ecx esi +
push offset Default  +
call loc_402720  +
lea ecx [esi+18h] +
mov [ebp+var_4] 0 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_402EA5  +
mov eax [ecx] +
jmp loc_402EA7  +
mov eax ecx +
xor edx edx +
push edx  +
push offset Default  +
mov [eax] dx +
call loc_402720  +
lea ecx [esi+30h] +
mov byte ptr [ebp+var_4] 1 +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_402ED6  +
mov eax [ecx] +
jmp loc_402ED8  +
mov eax ecx +
xor edx edx +
push edx  +
push offset Default  +
mov [eax] dx +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp+var_4] 2 +
lea ecx [esi+48h] +
mov dword ptr [ecx+14h] 7 +
push eax  +
mov dword ptr [ecx+10h] 0 +
push offset Default  +
mov [ecx] ax +
call loc_402720  +
mov dword ptr [esi+60h] 0FFFFFFFFh +
mov eax esi +
mov dword ptr [esi+64h] 0 +
mov byte ptr [esi+68h] 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [esi+5Ch] +
push edi  +
lea edi [esi+48h] +
cmp eax 8 +
jb loc_402F58  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_402F6E  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+30h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_402F87  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_402F9D  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+18h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_402FB6  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_402FCC  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402FE2  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403000  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4526AC  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_45EDD8 +
mov dword_4739C4 0 +
mov byte ptr [ebp+var_4] 1 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40305D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40306E  +
push 8  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+4]  +
***
jmp dword ptr [eax+10h]  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+8]  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
jmp dword ptr [eax+0Ch]  +
***
test ecx ecx +
jz locret_4030DA  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
push ecx  +
mov ecx [ecx+4] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push [ebp+arg_0]  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_45EDFC +
jz loc_40312D  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
cmp dword ptr [eax+14h] 8 +
mov ecx [eax+10h] +
jb loc_403151  +
mov eax [eax] +
push ecx  +
mov ecx [ebp+arg_0] +
push eax  +
push dword ptr [ecx+10h]  +
push ecx  +
call loc_403170  +
xor ecx ecx +
test eax eax +
sets al  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
cmp [ecx+10h] edi +
cmovb edi [ecx+10h] +
cmp dword ptr [ecx+14h] 8 +
jb loc_403188  +
mov ecx [ecx] +
mov ebx [ebp+14h] +
cmp edi ebx +
mov esi ebx +
cmovb esi edi +
test esi esi +
jz loc_4031B3  +
mov edx [ebp+10h] +
mov ax [ecx] +
cmp ax [edx] +
jnz loc_4031C7  +
add ecx 2 +
add edx 2 +
sub esi 1 +
jnz loc_4031A0  +
xor eax eax +
test eax eax +
jnz loc_4031DC  +
cmp edi ebx +
jnb loc_4031D5  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 10h  +
***
movzx eax word ptr [ecx] +
cmp ax [edx] +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_4031B5  +
***
xor eax eax +
cmp edi ebx +
setnz al  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_403217  +
mov eax [esi+10h] +
add eax 1 +
jz loc_403225  +
add eax eax +
push eax  +
push esi  +
push edi  +
call loc_438E80  +
add esp 0Ch +
jmp loc_403225  +
test edi edi +
jz loc_40321F  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403252  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 4  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4526E0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
lea eax [ebp+var_10] +
mov [ebp+var_4] 0 +
push eax  +
mov dword ptr [edi] offset off_461888 +
mov [ebp+var_10] edi +
call sub_408940  +
mov [ebp+var_4] 1 +
lea esi [edi+8] +
mov dword ptr [edi] offset off_45EF6C +
mov dword ptr [edi+4] 0 +
mov [ebp+var_10] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_403A40  +
mov [esi] eax +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_403320  +
test [ebp+arg_0] 1 +
jz loc_40330C  +
push 10h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452706  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi dword_4739C8 +
mov dword ptr [edi] offset off_45EF6C +
mov [ebp+var_4] 0 +
lea ecx [esi+8] +
mov eax [esi+8] +
push dword ptr [eax+4]  +
call loc_403510  +
mov eax [esi+8] +
lea ecx [edi+8] +
mov [eax+4] eax +
mov eax [esi+8] +
mov [eax] eax +
mov eax [esi+8] +
mov [eax+8] eax +
mov dword ptr [esi+0Ch] 0 +
mov eax [edi+8] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_10] +
push eax  +
call loc_403590  +
push dword ptr [edi+8]  +
call sub_413A17  +
add esp 4 +
mov ecx edi +
call sub_4088E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452747  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov eax dword_4739C8 +
test eax eax +
jnz loc_40341F  +
push 10h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_403414  +
mov ecx eax +
call sub_403260  +
jmp loc_403416  +
xor eax eax +
mov byte ptr [ebp+var_4] 0 +
mov dword_4739C8 eax +
mov edi [eax+8] +
lea ebx [eax+8] +
lea eax [ebp+arg_0] +
mov ecx ebx +
push eax  +
call sub_403AC0  +
mov esi eax +
cmp esi [ebx] +
jz loc_40345B  +
cmp dword ptr [esi+24h] 8 +
lea eax [esi+10h] +
mov ecx [eax+10h] +
jb loc_403444  +
mov eax [eax] +
push ecx  +
push eax  +
push [ebp+arg_10]  +
push ecx  +
lea ecx [ebp+arg_0] +
call loc_403170  +
test eax eax +
js loc_40345B  +
mov [ebp+var_10] esi +
jmp loc_403460  +
mov eax [ebx] +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
cmp [eax] edi +
jnz loc_40346B  +
xor esi esi +
jmp loc_403478  +
lea eax [ebp+arg_0] +
mov ecx ebx +
push eax  +
call sub_4034A0  +
mov esi [eax] +
mov ecx [ebp+arg_14] +
cmp ecx 8 +
jb loc_40348A  +
inc ecx  +
push ecx  +
push [ebp+arg_0]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
call sub_403AC0  +
mov esi eax +
cmp esi [ebx] +
jz loc_4034E0  +
cmp dword ptr [esi+24h] 8 +
lea eax [esi+10h] +
mov ecx [eax+10h] +
jb loc_4034C5  +
mov eax [eax] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call loc_403170  +
test eax eax +
js loc_4034E0  +
pop edi  +
lea eax [esi+28h] +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_403B10  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_403BD0  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
add eax 28h +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
mov eax ecx +
push edi  +
mov [ebp-4] eax +
mov edi ebx +
cmp byte ptr [ebx+0Dh] 0 +
jnz loc_403580  +
push esi  +
push dword ptr [edi+8]  +
mov ecx eax +
call loc_403510  +
mov eax [ebx+24h] +
lea esi [ebx+10h] +
mov edi [edi] +
cmp eax 8 +
jb loc_403550  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403566  +
mov esi [esi] +
xor eax eax +
push ebx  +
mov [esi] ax +
call sub_413A17  +
mov eax [ebp-4] +
add esp 4 +
cmp byte ptr [edi+0Dh] 0 +
mov ebx edi +
jz loc_403530  +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452776  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi] +
mov esi [ebp+0Ch] +
mov edx [ebp+10h] +
cmp esi [eax] +
jnz loc_403607  +
cmp edx eax +
jnz loc_403607  +
mov dword ptr [ebp-4] 0 +
push dword ptr [eax+4]  +
call loc_403510  +
mov eax [edi] +
mov [eax+4] eax +
mov eax [edi] +
mov [eax] eax +
mov eax [edi] +
mov [eax+8] eax +
mov dword ptr [edi+4] 0 +
mov eax [edi] +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp esi edx +
jz loc_40362C  +
lea ecx [ebp+0Ch] +
call loc_403A70  +
push esi  +
lea eax [ebp-10h] +
mov ecx edi +
push eax  +
call loc_403650  +
mov esi [ebp+0Ch] +
cmp esi [ebp+10h] +
jnz loc_403610  +
mov eax [ebp+8] +
mov [eax] esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov ebx ecx +
mov [ebp-4] eax +
push edi  +
lea ecx [ebp+0Ch] +
call loc_403A70  +
mov ecx [ebp-4] +
mov edx [ecx] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_403677  +
mov esi [ecx+8] +
jmp loc_403692  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403684  +
mov esi edx +
jmp loc_403692  +
mov edi [ebp+0Ch] +
mov esi [edi+8] +
cmp edi ecx +
jnz loc_403723  +
cmp byte ptr [esi+0Dh] 0 +
mov edx [ecx+4] +
jnz loc_40369E  +
mov [esi+4] edx +
mov eax [ebx] +
cmp [eax+4] ecx +
jnz loc_4036AA  +
mov [eax+4] esi +
jmp loc_4036B5  +
cmp [edx] ecx +
jnz loc_4036B2  +
mov [edx] esi +
jmp loc_4036B5  +
mov [edx+8] esi +
mov edi [ebx] +
cmp [edi] ecx +
jnz loc_4036DF  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4036C5  +
mov ecx edx +
jmp loc_4036DA  +
mov eax [esi] +
mov ecx esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4036DA  +
nop   +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4036D0  +
mov [edi] ecx +
mov ecx [ebp-4] +
mov edi [ebx] +
cmp [edi+8] ecx +
jnz loc_403781  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4036FD  +
mov ecx edx +
mov [edi+8] ecx +
mov ecx [ebp-4] +
jmp loc_403781  +
mov eax [esi+8] +
mov ecx esi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40371B  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403710  +
mov [edi+8] ecx +
mov ecx [ebp-4] +
jmp loc_403781  +
mov [edx+4] edi +
mov eax [ecx] +
mov [edi] eax +
cmp edi [ecx+8] +
jnz loc_403733  +
mov edx edi +
jmp loc_40374D  +
cmp byte ptr [esi+0Dh] 0 +
mov edx [edi+4] +
jnz loc_40373F  +
mov [esi+4] edx +
mov [edx] esi +
mov eax [ecx+8] +
mov [edi+8] eax +
mov eax [ecx+8] +
mov [eax+4] edi +
mov eax [ebx] +
cmp [eax+4] ecx +
jnz loc_403759  +
mov [eax+4] edi +
jmp loc_403767  +
mov eax [ecx+4] +
cmp [eax] ecx +
jnz loc_403764  +
mov [eax] edi +
jmp loc_403767  +
mov [eax+8] edi +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebp-4] +
mov cl [edi+0Ch] +
mov al [eax+0Ch] +
mov [edi+0Ch] al +
mov eax [ebp-4] +
mov [eax+0Ch] cl +
mov ecx eax +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_4039E5  +
mov eax [ebx] +
cmp esi [eax+4] +
jz loc_4039E1  +
cmp byte ptr [esi+0Ch] 1 +
jnz loc_4039DE  +
mov ecx [edx] +
cmp esi ecx +
jnz loc_403858  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4037F6  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4037CE  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_4037E0  +
mov [eax+4] ecx +
jmp loc_4037EE  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_4037EB  +
mov [eax] ecx +
jmp loc_4037EE  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4038C5  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403815  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_4038C1  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4038F2  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov edi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edi+8] +
mov [ecx] eax +
mov eax [edi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40383F  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_4038DA  +
mov [eax+4] edi +
jmp loc_4038E9  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4038A2  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403879  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_40388B  +
mov [eax+4] ecx +
jmp loc_40389A  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_403898  +
mov [eax+8] ecx +
jmp loc_40389A  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4038C5  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403947  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403947  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [ebx] +
mov esi edx +
mov edx [edx+4] +
cmp esi [eax+4] +
jnz loc_403796  +
jmp loc_4039DE  +
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_4038E7  +
mov [eax+8] edi +
jmp loc_4038E9  +
mov [eax] edi +
mov [edi+8] ecx +
mov [ecx+4] edi +
mov ecx [edx+8] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403916  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_40392D  +
mov [eax+4] ecx +
mov [ecx] edx +
jmp loc_4039DB  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40393D  +
mov [eax] ecx +
mov [ecx] edx +
jmp loc_4039DB  +
mov [eax+8] ecx +
mov [ecx] edx +
jmp loc_4039DB  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_403994  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov edi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [edi] +
mov [ecx+8] eax +
mov eax [edi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40396D  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [edi+4] eax +
mov eax [ebx] +
cmp ecx [eax+4] +
jnz loc_40397F  +
mov [eax+4] edi +
jmp loc_40398D  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_40398A  +
mov [eax] edi +
jmp loc_40398D  +
mov [eax+8] edi +
mov [edi] ecx +
mov [ecx+4] edi +
mov ecx [edx] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4039B7  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [ebx] +
cmp edx [eax+4] +
jnz loc_4039C9  +
mov [eax+4] ecx +
jmp loc_4039D8  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4039D6  +
mov [eax+8] ecx +
jmp loc_4039D8  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [ebp-4] +
mov byte ptr [esi+0Ch] 1 +
mov eax [ecx+24h] +
lea esi [ecx+10h] +
cmp eax 8 +
jb loc_4039FC  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov ecx [ebp-4] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403A12  +
mov esi [esi] +
xor eax eax +
push ecx  +
mov [esi] ax +
call sub_413A17  +
mov eax [ebx+4] +
add esp 4 +
mov ecx [ebp+0Ch] +
test eax eax +
jz loc_403A2E  +
dec eax  +
mov [ebx+4] eax +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx 2Ch +
push ecx  +
lea ecx [edx-2Bh] +
call loc_401DB0  +
add esp 4 +
test eax eax +
jz loc_403A57  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_403A60  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_403A69  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403ABC  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403A9F  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403A9A  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403A90  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403ABA  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_403ABA  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403AA8  +
mov [edx] eax +
mov eax edx +
retn   +
***
push ebx  +
mov ebx [ecx] +
push esi  +
mov esi [ebx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_403B04  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+14h] 8 +
lea ecx [esi+10h] +
jb loc_403AE1  +
mov eax [edi] +
jmp loc_403AE3  +
mov eax edi +
push dword ptr [edi+10h]  +
push eax  +
push dword ptr [ecx+10h]  +
push ecx  +
call loc_403170  +
test eax eax +
jns loc_403AF9  +
mov esi [esi+8] +
jmp loc_403AFD  +
mov ebx esi +
mov esi [esi] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_403AD4  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4527B1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_403E10  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_403B99  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403B80  +
mov eax [esi] +
jmp loc_403B82  +
mov eax esi +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ecx  +
mov ecx esi +
mov [eax] dx +
call loc_402A60  +
mov dword ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4527D0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov ebx ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [ebx+4] 0 +
jnz loc_403C31  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push dword ptr [ebx]  +
push 1  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ecx [ebx] +
mov eax [ebp+arg_4] +
cmp eax [ecx] +
jnz loc_403C8A  +
mov ecx [eax+20h] +
add eax 10h +
cmp dword ptr [eax+14h] 8 +
jb loc_403C48  +
mov eax [eax] +
push ecx  +
push eax  +
mov eax [ebp+arg_8] +
push dword ptr [eax+10h]  +
push ecx  +
mov ecx eax +
call loc_403170  +
test eax eax +
jns loc_403DD5  +
push [ebp+arg_C]  +
mov esi [ebp+arg_0] +
push ecx  +
push [ebp+arg_4]  +
mov ecx ebx +
push 1  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
cmp eax ecx +
jnz loc_403CD1  +
mov eax [ecx+8] +
push [ebp+arg_8]  +
add eax 10h +
push eax  +
call sub_403140  +
test al al +
jz loc_403DD5  +
push [ebp+arg_C]  +
mov eax [ebx] +
mov esi [ebp+arg_0] +
push ecx  +
mov ecx ebx +
push dword ptr [eax+8]  +
push 0  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov edi [ebp+arg_8] +
add eax 10h +
push eax  +
push edi  +
call sub_403140  +
test al al +
jz loc_403D56  +
mov eax [ebp+arg_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_14] eax +
call loc_403EA0  +
mov esi [ebp+var_14] +
push edi  +
lea eax [esi+10h] +
push eax  +
call sub_403140  +
test al al +
jz loc_403D56  +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jz loc_403D32  +
push esi  +
mov esi [ebp+arg_0] +
push 0  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push [ebp+arg_4]  +
mov esi [ebp+arg_0] +
push 1  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_4] +
push edi  +
add eax 10h +
push eax  +
call sub_403140  +
test al al +
jz loc_403DD5  +
mov esi [ebp+arg_4] +
lea ecx [ebp+var_14] +
mov [ebp+var_14] esi +
call loc_403A70  +
mov edi [ebp+var_14] +
cmp edi [ebx] +
jz loc_403D8F  +
lea eax [edi+10h] +
push eax  +
push [ebp+arg_8]  +
call sub_403140  +
test al al +
jz loc_403DD5  +
mov esi [ebp+arg_4] +
mov eax [esi+8] +
push [ebp+arg_C]  +
push ecx  +
cmp byte ptr [eax+0Dh] 0 +
mov ecx ebx +
jnz loc_403D10  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push esi  +
call loc_403F00  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push dword ptr [ebp+14h]  +
call sub_403E50  +
push 0  +
push 0  +
call sub_43A3FD  +
push [ebp+arg_C]  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0FFFFFFFFh +
push [ebp+arg_8]  +
push ecx  +
push eax  +
mov ecx ebx +
call loc_404140  +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edx 2Ch +
push esi  +
mov esi ecx +
push ecx  +
lea ecx [edx-2Bh] +
call loc_401DB0  +
mov edx eax +
add esp 4 +
test edx edx +
jz loc_403E2E  +
mov ecx [esi] +
mov [edx] ecx +
lea ecx [edx+4] +
test ecx ecx +
jz loc_403E39  +
mov eax [esi] +
mov [ecx] eax +
lea ecx [edx+8] +
test ecx ecx +
jz loc_403E44  +
mov eax [esi] +
mov [ecx] eax +
mov eax edx +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+24h] +
lea esi [edi+10h] +
cmp eax 8 +
jb loc_403E6C  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_403E82  +
mov esi [esi] +
xor eax eax +
push edi  +
mov [esi] ax +
call sub_413A17  +
add esp 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403EB2  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
***
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403ED3  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403EF9  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_403EC3  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403EF1  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_403EF1  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_403EE0  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_403EFB  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 5D1745Ch +
jb loc_403F46  +
mov edi [ebp+18h] +
mov eax [edi+24h] +
lea esi [edi+10h] +
cmp eax 8 +
jb loc_403F29  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_404126  +
jmp loc_404124  +
mov ebx [ebp+18h] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+10h] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_403F67  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_403F86  +
cmp byte ptr [ebp+0Ch] 0 +
jz loc_403F79  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_403F86  +
mov [ecx] ebx +
jmp loc_403F86  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_403F86  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40410F  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_404050  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_404056  +
cmp eax [ecx+8] +
jnz loc_403FF1  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_403FCC  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_403FDE  +
mov [ecx+4] edx +
jmp loc_403FEC  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_403FE9  +
mov [ecx] edx +
jmp loc_403FEC  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40401B  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_404033  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_4040FF  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_404046  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_4040FF  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_4040FF  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_404073  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_404102  +
cmp eax [ecx] +
jnz loc_4040B3  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40408C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_40409E  +
mov [ecx+4] edx +
jmp loc_4040AD  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_4040AB  +
mov [ecx+8] edx +
jmp loc_4040AD  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4040DD  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_4040EF  +
mov [ecx+4] esi +
jmp loc_4040FD  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_4040FA  +
mov [ecx] esi +
jmp loc_4040FD  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_403F95  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+8] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov esi [esi] +
xor eax eax +
push edi  +
mov [esi] ax +
call sub_413A17  +
add esp 4 +
push offset aMapSetTTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4527F0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-18h] ecx +
mov dword ptr [ebp-4] 0 +
mov al 1 +
mov ebx [ecx] +
mov edi [ebp+10h] +
mov [ebp-14h] al +
mov esi [ebx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4041C9  +
push dword ptr [ebp+14h]  +
push ecx  +
push ebx  +
push 1  +
lea eax [ebp+10h] +
push eax  +
call loc_403F00  +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0  +
push 0  +
call sub_43A3FD  +
call sub_403E50  +
mov eax [ebp+8] +
mov [eax] esi +
mov byte ptr [eax+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
push esi  +
push edi  +
push 4  +
call sub_4139EA  +
mov edi eax +
add esp 4 +
mov [ebp+var_4] edi +
test edi edi +
jz loc_404291  +
mov dword ptr [edi] offset off_45F0D0 +
jmp loc_404293  +
xor edi edi +
push 8  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_4042C4  +
mov [esi+4] edi +
mov ecx esi +
mov dword ptr [esi] offset off_4617F4 +
mov edx [esi] +
mov dword_4739C4 esi +
call dword ptr [edx+1Ch]  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor esi esi +
mov ecx esi +
mov edx [esi] +
call dword ptr [edx+1Ch]  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_45F0A4 +
jz loc_4042FD  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi+4] offset off_45F0A4 +
mov dword ptr [esi] offset off_45ED64 +
jz loc_404334  +
push 14h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452846  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax dword_4739C0 +
mov byte ptr [edi+10h] 0 +
test eax eax +
jnz loc_4043A9  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-4] 0 +
test eax eax +
jz loc_40439B  +
mov ecx eax +
call sub_401E20  +
jmp loc_40439D  +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4739C0 eax +
lea ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call sub_402200  +
mov dword ptr [ebp-4] 1 +
mov esi [ebp-44h] +
cmp esi [ebp-40h] +
jz loc_40461B  +
cmp byte ptr [edi+11h] 0 +
jnz loc_40461B  +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0 +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov byte ptr [ebp-4] 3 +
mov ecx dword_4739F4 +
test ecx ecx +
jz loc_40441D  +
mov ecx [ecx+4] +
lea eax [ebp-28h] +
push eax  +
call loc_4111E0  +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-2Ch] offset aPluginfolder +
push eax  +
lea ecx [ebp-38h] +
call loc_404A20  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
lea ecx [ebp-38h] +
cmovnb eax [ebp-28h] +
mov [ebp-2Ch] eax +
lea eax [ebp-2Ch] +
push eax  +
call loc_404A20  +
cmp dword_4739F8 0 +
jz loc_404466  +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-2Ch] offset aDebug +
push eax  +
lea ecx [ebp-38h] +
call loc_404A20  +
mov eax [esi] +
cmp dword ptr [eax+14h] 8 +
jb loc_404470  +
mov eax [eax] +
mov [ebp-2Ch] eax +
lea ecx [ebp-38h] +
lea eax [ebp-2Ch] +
push eax  +
call loc_404A20  +
mov eax [ebp-34h] +
mov ebx [ebp-38h] +
sub eax ebx +
mov ecx dword_4739F4 +
sar eax 2 +
mov byte ptr [edi+10h] 1 +
test ecx ecx +
jz loc_4044C1  +
mov ecx [ecx+14h] +
mov dword ptr [ebp-2Ch] 0FFFFFFFFh +
test ecx ecx +
jz loc_4044C1  +
lea edx [ebp-2Ch] +
push edx  +
lea edx [edi+4] +
push edx  +
push ebx  +
push eax  +
push offset aUninstall_1  +
call ecx  +
cmp dword ptr [ebp-2Ch] 0 +
jz loc_404564  +
mov eax [esi] +
mov dword ptr [eax+64h] 3 +
mov eax [esi] +
mov dword ptr [eax+60h] 1 +
mov eax dword_4739C0 +
test eax eax +
jnz loc_404505  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-48h] eax +
mov byte ptr [ebp-4] 4 +
test eax eax +
jz loc_4044FA  +
mov ecx eax +
call sub_401E20  +
jmp loc_4044FC  +
xor eax eax +
mov byte ptr [ebp-4] 3 +
mov dword_4739C0 eax +
sub esp 18h +
mov dword ptr [eax+4] 64h +
mov ecx esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 8 +
jb loc_404529  +
mov eax [ecx] +
jmp loc_40452B  +
mov eax ecx +
xor edx edx +
mov [eax] dx +
mov eax 14h +
cmp ds:word_45EF74 dx +
cmovz eax edx +
push eax  +
push offset word_45EF74  +
call loc_402720  +
call sub_4033C0  +
add esp 18h +
push 0  +
push 0  +
push 84B0h  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
cmp byte ptr [edi+10h] 1 +
jnz loc_404581  +
push 3E8h  +
call ds:Sleep  +
mov eax [ebp-14h] +
add esi 4 +
cmp eax 8 +
jb loc_4045A1  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov byte ptr [ebp-4] 1 +
test ebx ebx +
jz loc_404612  +
mov eax [ebp-30h] +
sub eax ebx +
sar eax 2 +
cmp eax 3FFFFFFFh +
ja loc_404657  +
shl eax 2 +
cmp eax 1000h +
jb loc_4045F4  +
test bl 1Fh +
jnz loc_404657  +
mov eax [ebx-4] +
cmp eax ebx +
jnb loc_404657  +
sub ebx eax +
cmp ebx 4 +
jb loc_404657  +
cmp ebx 23h +
ja loc_404657  +
mov ebx eax +
push ebx  +
call sub_413A17  +
add esp 4 +
mov dword ptr [ebp-38h] 0 +
mov dword ptr [ebp-34h] 0 +
mov dword ptr [ebp-30h] 0 +
cmp esi [ebp-40h] +
jnz loc_4043D0  +
mov eax [edi] +
mov ecx edi +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp-44h] +
test ecx ecx +
jz loc_404639  +
mov eax [ebp-3Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_43C8C1  +
mov eax [ebp+arg_0] +
mov [ecx+8] eax +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_45288E  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi dword_4739C0 +
mov eax [ebp+8] +
mov [ecx+4] eax +
test esi esi +
jnz loc_4046D1  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+8] eax +
mov [ebp-4] esi +
test eax eax +
jz loc_4046C2  +
mov ecx eax +
call sub_401E20  +
mov esi eax +
jmp loc_4046C4  +
xor esi esi +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4739C0 esi +
mov eax [esi+8] +
cmp eax [esi+0Ch] +
jz loc_4046EF  +
mov ecx [esi+0Ch] +
mov edx [eax] +
cmp dword ptr [edx+64h] 1 +
jz loc_404735  +
add eax 4 +
cmp eax ecx +
jnz loc_4046E0  +
xor eax eax +
mov dword ptr [eax+64h] 2 +
test esi esi +
jnz loc_404755  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+8] eax +
mov dword ptr [ebp-4] 1 +
test eax eax +
jz loc_404739  +
mov ecx eax +
call sub_401E20  +
mov dword_4739C0 eax +
mov [eax+4] esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax edx +
jmp loc_4046F1  +
***
xor eax eax +
mov dword_4739C0 eax +
mov [eax+4] eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esi+4] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4528BF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ebx dword_4739C0 +
test ebx ebx +
jnz loc_4047E0  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] ebx +
test eax eax +
jz loc_4047D1  +
mov ecx eax +
call sub_401E20  +
mov ebx eax +
jmp loc_4047D3  +
xor ebx ebx +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4739C0 ebx +
imul ecx [esi+4] +
sub esp 18h +
mov esi [esi+8] +
mov eax ecx +
cdq   +
idiv  esi +
mov edi eax +
lea eax [ecx+64h] +
cdq   +
idiv  esi +
mov ecx eax +
mov eax 51EB851Fh +
sub ecx edi +
imul ecx [ebp+arg_0] +
imul  ecx +
mov ecx esp +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
xor edx edx +
add eax edi +
mov [ebx+4] eax +
xor eax eax +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
mov [ecx] ax +
mov eax 14h +
cmp ds:word_45EF74 dx +
cmovz eax edx +
push eax  +
push offset word_45EF74  +
call loc_402720  +
call sub_4033C0  +
add esp 18h +
push 0  +
push 0  +
push 84B0h  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4528EF  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edx dword_4739C0 +
test edx edx +
jnz loc_4048DF  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4048D0  +
mov ecx eax +
call sub_401E20  +
mov edx eax +
jmp loc_4048D2  +
xor edx edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4739C0 edx +
mov dword ptr [edx+4] 64h +
mov eax [edx+8] +
cmp eax [edx+0Ch] +
jz loc_404900  +
nop   +
mov ecx [eax] +
cmp dword ptr [ecx+64h] 2 +
jz loc_404902  +
add eax 4 +
cmp eax [edx+0Ch] +
jnz loc_4048F0  +
xor ecx ecx +
mov eax [ebp+arg_0] +
sub esp 18h +
mov [ecx+60h] eax +
xor edx edx +
mov dword ptr [ecx+64h] 3 +
xor eax eax +
mov ecx esp +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
mov [ecx] ax +
mov eax 14h +
cmp ds:word_45EF74 dx +
cmovz eax edx +
push eax  +
push offset word_45EF74  +
call loc_402720  +
call sub_4033C0  +
add esp 18h +
push 0  +
push 0  +
push 84B0h  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45291F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov byte ptr [ecx+0Ch] 0 +
mov ecx dword_4739C0 +
test ecx ecx +
jnz loc_4049DC  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4049D4  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_4049D6  +
xor ecx ecx +
mov dword_4739C0 ecx +
mov al [ebp+arg_4] +
mov [ecx+2Ch] al +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_40A250  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov edx [esi+4] +
cmp edi edx +
jnb loc_404AAF  +
mov ebx [esi] +
cmp ebx edi +
ja loc_404AAF  +
mov ecx [esi+8] +
sub edi ebx +
sar edi 2 +
cmp edx ecx +
jnz loc_404A94  +
mov eax ecx +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_404A94  +
sub edx ebx +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_404B17  +
sub ecx [esi] +
inc edx  +
sar ecx 2 +
mov eax ecx +
mov [ebp+8] ecx +
shr eax 1 +
add ecx eax +
mov dword ptr [ebp-4] 0 +
sub ebx eax +
cmp ebx [ebp+8] +
cmovb ecx [ebp-4] +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_404BB0  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_404B0A  +
mov eax [esi] +
mov eax [eax+edi*4] +
pop edi  +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ebx [esi+8] +
cmp edx ebx +
jnz loc_404AFF  +
mov eax ebx +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_404AFF  +
sub edx [esi] +
mov ecx 3FFFFFFFh +
sar edx 2 +
mov eax ecx +
sub eax edx +
cmp eax 1 +
jb loc_404B21  +
sub ebx [esi] +
inc edx  +
sar ebx 2 +
mov eax ebx +
shr eax 1 +
sub ecx eax +
mov [ebp+8] ecx +
cmp [ebp+8] ebx +
lea ecx [eax+ebx] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_404BB0  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_404B0A  +
mov eax [edi] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_437F90  +
push offset aVectorTTooLong  +
call sub_437F90  +
push esi  +
mov esi ecx +
mov edx [esi] +
test edx edx +
jz loc_404B89  +
mov eax [esi+8] +
sub eax edx +
sar eax 2 +
cmp eax 3FFFFFFFh +
ja loc_404B8B  +
shl eax 2 +
cmp eax 1000h +
jb loc_404B6C  +
test dl 1Fh +
jnz loc_404B90  +
mov eax [edx-4] +
cmp eax edx +
jnb loc_404B95  +
sub edx eax +
cmp edx 4 +
jb loc_404B9A  +
cmp edx 23h +
ja loc_404B9F  +
mov edx eax +
push edx  +
call sub_413A17  +
mov dword ptr [esi] 0 +
add esp 4 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
pop esi  +
retn   +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
***
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov edx 4 +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_401DB0  +
mov edx [esi] +
mov edi eax +
mov ecx [esi+4] +
sub ecx edx +
and ecx 0FFFFFFFCh +
push ecx  +
push edx  +
push edi  +
call loc_438E80  +
mov ecx [esi] +
add esp 10h +
mov ebx [esi+4] +
sub ebx ecx +
sar ebx 2 +
test ecx ecx +
jz loc_404C27  +
mov eax [esi+8] +
sub eax ecx +
sar eax 2 +
cmp eax 3FFFFFFFh +
ja loc_404C3F  +
shl eax 2 +
cmp eax 1000h +
jb loc_404C1E  +
test cl 1Fh +
jnz loc_404C44  +
mov eax [ecx-4] +
cmp eax ecx +
jnb loc_404C49  +
sub ecx eax +
cmp ecx 4 +
jb loc_404C4E  +
cmp ecx 23h +
ja loc_404C53  +
mov ecx eax +
push ecx  +
call sub_413A17  +
add esp 4 +
mov eax [ebp+arg_0] +
lea eax [edi+eax*4] +
mov [esi+8] eax +
lea eax [edi+ebx*4] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
int 3  +
sub ecx 4 +
jmp sub_404310  +
***
mov eax [ebp+arg_0] +
cmp eax 3 +
ja loc_404D03  +
jmp ds:off_404D0C[eax*4]  +
mov eax 40h +
jmp loc_404CA0  +
mov eax 20h +
jmp loc_404CA0  +
mov eax 30h +
jmp loc_404CA0  +
mov eax 10h +
mov ecx [ebp+arg_4] +
cmp ecx 112h +
jg loc_404CE5  +
jz loc_404CCF  +
sub ecx 1 +
jz loc_404CF0  +
sub ecx 10Fh +
jnz loc_404D03  +
push ecx  +
or eax 4 +
push eax  +
push [ebp+arg_8]  +
call sub_413A9C  +
mov ecx eax +
pop ebp  +
jmp loc_404D20  +
push 0  +
or eax 3 +
push eax  +
push [ebp+arg_8]  +
call sub_413A9C  +
mov ecx eax +
pop ebp  +
jmp loc_404D20  +
cmp ecx 111000h +
jnz loc_404D03  +
or eax 2 +
push 0  +
push eax  +
push [ebp+arg_8]  +
call sub_413A9C  +
mov ecx eax +
pop ebp  +
jmp loc_404D20  +
mov eax 3 +
pop ebp  +
retn   +
dec ecx  +
cmp ecx 6 +
ja loc_404D4E  +
jmp ds:off_404D54[ecx*4]  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
mov eax 2 +
retn   +
mov eax 5 +
retn   +
mov eax 4 +
retn   +
mov eax 6 +
retn   +
mov eax 3 +
retn   +
***
call sub_413E25  +
call loc_407D00  +
call sub_413E25  +
test eax eax +
jz loc_404DC5  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+74h]  +
push 0  +
push 0  +
push 2  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
retn   +
xor eax eax +
push eax  +
push eax  +
push 2  +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
retn   +
***
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push eax  +
push offset Default  +
mov ecx esi +
mov [ebp+var_4] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
call loc_402720  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_413E25  +
test eax eax +
jz loc_404E30  +
mov edx [eax] +
mov ecx eax +
jmp dword ptr [edx+74h]  +
xor eax eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45294B  +
mov eax large fs:0 +
push eax  +
sub esp 22Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_234] esi +
push 0  +
mov [ebp+var_238] 0 +
call ds:GetModuleHandleW  +
push 104h  +
lea ecx [ebp+Filename] +
push ecx  +
push eax  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_404FB7  +
xor eax eax +
mov [ebp+var_21C] 7 +
mov [ebp+var_220] 0 +
mov word ptr [ebp+var_230] ax +
cmp [ebp+Filename] ax +
jnz loc_404ECB  +
xor ecx ecx +
jmp loc_404EE3  +
lea ecx [ebp+Filename] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_404ED4  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Filename] +
push eax  +
lea ecx [ebp+var_230] +
call loc_402720  +
push 1  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_230] +
call loc_405000  +
cmp eax 0FFFFFFFFh +
jz loc_404F98  +
lea ecx [eax+1] +
cmp [ebp+var_220] ecx +
jnb loc_404F2B  +
push offset aInvalidStringP  +
call sub_437FB0  +
cmp [ebp+var_21C] 8 +
lea eax [ebp+var_230] +
mov [ebp+var_220] ecx +
cmovnb eax [ebp+var_230] +
xor edx edx +
push 6  +
push offset aDefine  +
mov [eax+ecx*2] dx +
lea ecx [ebp+var_230] +
call loc_405080  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
mov [esi] ax +
lea eax [ebp+var_230] +
push eax  +
call sub_4031F0  +
mov ecx [ebp+var_21C] +
cmp ecx 8 +
jb loc_404FD7  +
inc ecx  +
push ecx  +
push [ebp+var_230]  +
call loc_402950  +
jmp loc_404FD7  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_21C] +
cmp eax 8 +
jb loc_404FB7  +
inc eax  +
push eax  +
push [ebp+var_230]  +
call loc_402950  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
push eax  +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
push offset Default  +
mov [esi] ax +
call loc_402720  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_405072  +
mov eax [edi+10h] +
test eax eax +
jz loc_405072  +
cmp eax 0FFFFFFFFh +
jbe loc_405020  +
or eax 0FFFFFFFFh +
jmp loc_405021  +
dec eax  +
cmp dword ptr [edi+14h] 8 +
jb loc_405029  +
mov ecx [edi] +
lea edx [ecx+eax*2] +
test ebx ebx +
jz loc_40504D  +
movzx esi word ptr [edx] +
mov ecx ebx +
mov eax offset asc_45F0F4 +
nop   +
cmp [eax] si +
jz loc_40505D  +
add eax 2 +
sub ecx 1 +
jnz loc_405040  +
mov ecx edi +
call sub_402600  +
cmp edx eax +
jz loc_405072  +
sub edx 2 +
jmp loc_405030  +
***
cmp dword ptr [edi+14h] 8 +
jb loc_405065  +
mov edi [edi] +
sub edx edi +
pop edi  +
sar edx 1 +
pop esi  +
mov eax edx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_4050D6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40509A  +
mov eax [esi] +
jmp loc_40509C  +
mov eax esi +
cmp edi eax +
jb loc_4050D6  +
cmp ecx 8 +
jb loc_4050A9  +
mov edx [esi] +
jmp loc_4050AB  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_4050D6  +
cmp ecx 8 +
jb loc_4050BE  +
mov eax [esi] +
jmp loc_4050C0  +
mov eax esi +
push dword ptr [ebp+0Ch]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
call loc_4051B0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [esi+10h] +
or eax 0FFFFFFFFh +
mov ecx [ebp+0Ch] +
sub eax edx +
cmp eax ecx +
jbe loc_405190  +
test ecx ecx +
jz loc_405188  +
push ebx  +
lea ebx [edx+ecx] +
cmp ebx 7FFFFFFEh +
ja loc_40519A  +
cmp [esi+14h] ebx +
jnb loc_405120  +
push edx  +
push ebx  +
mov ecx esi +
call sub_402B80  +
mov ecx [ebp+0Ch] +
test ebx ebx +
jz loc_405187  +
cmp dword ptr [esi+14h] 8 +
jb loc_40514B  +
mov edx [esi] +
jmp loc_40514D  +
test ebx ebx +
jnz loc_405116  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40513D  +
mov eax [esi] +
xor ecx ecx +
pop ebx  +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop ebx  +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 8  +
***
mov edx esi +
test ecx ecx +
jz loc_405165  +
lea eax [ecx+ecx] +
push eax  +
mov eax [esi+10h] +
push edi  +
lea eax [edx+eax*2] +
push eax  +
call loc_439530  +
add esp 0Ch +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40517F  +
mov eax [esi] +
xor ecx ecx +
mov [eax+ebx*2] cx +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
mov eax [ecx+10h] +
cmp eax edx +
jb loc_405297  +
mov ebx [ebp+10h] +
sub eax edx +
mov edx [esi+10h] +
cmp eax ebx +
cmovb ebx eax +
or eax 0FFFFFFFFh +
sub eax edx +
cmp eax ebx +
jbe loc_4052A1  +
test ebx ebx +
jz loc_40528F  +
push edi  +
lea edi [edx+ebx] +
cmp edi 7FFFFFFEh +
ja loc_4052AB  +
cmp [esi+14h] edi +
jnb loc_405221  +
push edx  +
push edi  +
mov ecx esi +
call sub_402B80  +
mov ecx [ebp+8] +
test edi edi +
jz loc_40528E  +
cmp dword ptr [ecx+14h] 8 +
jb loc_405217  +
mov ecx [ecx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40524C  +
mov edx [esi] +
jmp loc_40524E  +
test edi edi +
jnz loc_40520F  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40523E  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
***
mov edx esi +
test ebx ebx +
jz loc_40526C  +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+0Ch] +
lea eax [ecx+eax*2] +
push eax  +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
push eax  +
call loc_439530  +
add esp 0Ch +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_405286  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
push offset aStringTooLong  +
call sub_437F90  +
push offset aStringTooLong  +
call sub_437F90  +
mov eax [ebp+arg_4] +
mul  [ebp+arg_8] +
test edx edx +
jnz loc_4052DB  +
cmp eax 0FFFFFFFFh +
ja loc_4052DB  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
mov eax 80070216h +
pop ebp  +
retn   +
***
call ds:InitializeCriticalSectionAndSpinCount  +
test eax eax +
jnz loc_405310  +
call ds:GetLastError  +
test eax eax +
jle locret_405312  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
mov ecx [ebp+arg_4] +
or eax 0FFFFFFFFh +
mov edx [ebp+arg_8] +
sub eax ecx +
cmp eax edx +
jnb loc_405339  +
mov eax 80070216h +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
add ecx edx +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_4] +
mov eax 7FFFFFFFh +
mov edx [ebp+arg_8] +
sub eax ecx +
cmp eax edx +
jge loc_40536B  +
mov eax 80070216h +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
add ecx edx +
mov [eax] ecx +
xor eax eax +
pop ebp  +
retn   +
***
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+0E0h] +
lea esi [edi+0CCh] +
cmp eax 8 +
jb loc_4053B1  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4053C7  +
mov esi [esi] +
xor eax eax +
mov ecx edi +
mov [esi] ax +
call sub_4146DB  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_4053FD  +
test al 4 +
jnz loc_4053EF  +
push edi  +
call sub_413A17  +
add esp 4 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push 0E4h  +
push edi  +
call nullsub_1  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4529C9  +
mov eax large fs:0 +
push eax  +
sub esp 108h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
lea eax [ebp-5Ch] +
mov dword ptr [ebp-5Ch] 8 +
push eax  +
mov dword ptr [ebp-58h] 0FFh +
call ds:InitCommonControlsEx  +
mov ecx edi +
call sub_414DE3  +
push 0  +
call sub_41584B  +
add esp 4 +
mov dword ptr [ebp-48h] 0 +
lea eax [ebp-48h] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
cmp dword ptr [ebp-48h] 2 +
mov esi eax +
jge loc_405495  +
push esi  +
call ds:LocalFree  +
jmp loc_4057FB  +
mov edx [esi+4] +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov dword ptr [ebp-30h] 0 +
mov [ebp-40h] ax +
cmp [edx] ax +
jnz loc_4054B5  +
xor ecx ecx +
jmp loc_4054CF  +
mov ecx edx +
lea ebx [ecx+2] +
retf   +
***
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-40h] +
call loc_402720  +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-50h] 0 +
mov dword ptr [ebp-4Ch] 0 +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 1 +
push eax  +
lea ecx [ebp-54h] +
call sub_4058B0  +
mov eax dword_4739C0 +
test eax eax +
jnz loc_405537  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-44h] eax +
mov byte ptr [ebp-4] 2 +
test eax eax +
jz loc_40552C  +
mov ecx eax +
call sub_401E20  +
jmp loc_40552E  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov dword_4739C0 eax +
lea ecx [ebp-54h] +
push ecx  +
mov ecx eax +
call loc_4020D0  +
call sub_404270  +
push esi  +
call ds:LocalFree  +
xor eax eax +
mov dword_473A00 offset sub_404C70 +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov byte ptr [ebp-4] 3 +
mov ecx dword_4739C0 +
test ecx ecx +
jnz loc_4055A6  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-44h] eax +
mov byte ptr [ebp-4] 4 +
test eax eax +
jz loc_40559A  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_40559C  +
xor ecx ecx +
mov byte ptr [ebp-4] 3 +
mov dword_4739C0 ecx +
mov eax [ecx+8] +
cmp eax [ecx+0Ch] +
jz loc_4055C0  +
mov ecx [ecx+0Ch] +
mov edx [eax] +
cmp dword ptr [edx+64h] 1 +
jz loc_4055D4  +
add eax 4 +
cmp eax ecx +
jnz loc_4055B1  +
mov edx [edi+50h] +
cmp word ptr [edx] 0 +
jnz loc_405750  +
xor ecx ecx +
jmp loc_405764  +
mov eax edx +
test eax eax +
jz loc_4055C0  +
add eax 18h +
lea ecx [ebp-28h] +
cmp ecx eax +
jz loc_4055EE  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
lea ecx [edi+0CCh] +
lea eax [ebp-28h] +
cmp ecx eax +
jz loc_405605  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
call sub_406E30  +
test eax eax +
jz loc_40567D  +
dec eax  +
cmp eax 3 +
ja loc_40578E  +
jmp ds:off_40581C[eax*4]  +
call sub_40A2A0  +
push offset aUixstring_uixi  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
push eax  +
push 1  +
push 2  +
call sub_40A250  +
add esp 0Ch +
jmp loc_40578E  +
call sub_40A2A0  +
push offset aUixstring_othe  +
jmp loc_405629  +
***
call sub_40A2A0  +
push offset aUixstring_exec  +
jmp loc_405629  +
***
call sub_40A2A0  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
mov edx [eax] +
push ecx  +
push offset aUixstring_unin  +
mov ecx eax +
call dword ptr [edx+8]  +
push eax  +
jmp loc_405782  +
call sub_4167F5  +
xor ecx ecx +
mov edx eax +
test edx edx +
setnz cl  +
test ecx ecx +
jnz loc_405699  +
push 80004005h  +
call loc_405FF0  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp-44h] eax +
mov byte ptr [ebp-4] 5 +
mov edx dword_473A04 +
test edx edx +
jnz loc_4056C1  +
call sub_40D2B0  +
mov edx eax +
mov dword_473A04 edx +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
mov eax [edx] +
cmovnb ecx [ebp-28h] +
push ecx  +
push offset aUixstring_un_0  +
mov ecx edx +
call dword ptr [eax+8]  +
push eax  +
lea eax [ebp-44h] +
push eax  +
call sub_405FB0  +
mov esi [ebp-44h] +
add esp 0Ch +
push 0  +
push 21h  +
push esi  +
call sub_413A9C  +
cmp eax 1 +
jnz loc_405732  +
push ecx  +
lea ecx [ebp-114h] +
call sub_406150  +
lea eax [ebp-114h] +
mov byte ptr [ebp-4] 6 +
mov ecx eax +
mov [edi+20h] eax +
call sub_417121  +
lea ecx [ebp-68h] +
mov dword ptr [ebp-68h] offset off_458AC4 +
call sub_405C20  +
lea ecx [ebp-114h] +
call sub_416C3B  +
mov byte ptr [ebp-4] 3 +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40578E  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_40578E  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_405755  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [edi+0CCh] +
call loc_402720  +
cmp dword ptr [ebp-2Ch] 8 +
lea eax [ebp-40h] +
cmovnb eax [ebp-40h] +
push eax  +
push offset aUniversalunins  +
push 1  +
push 2  +
call sub_40A250  +
add esp 10h +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_4057A0  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov esi [ebp-54h] +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
test esi esi +
jz loc_4057E9  +
push dword ptr [ebp-44h]  +
mov edx [ebp-50h] +
push ecx  +
mov ecx esi +
call loc_402DD0  +
mov ecx [ebp-4Ch] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_402820  +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_4057FB  +
inc eax  +
push eax  +
push dword ptr [ebp-40h]  +
call loc_402950  +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
lea ecx [esi+0ACh] +
mov dword ptr [ecx] offset off_458AC4 +
call sub_405C20  +
mov ecx esi +
pop esi  +
jmp sub_416C3B  +
***
push esi  +
mov esi ecx +
cmp dword ptr [esi+0E0h] 8 +
lea eax [esi+0CCh] +
push edi  +
mov edi [esi+50h] +
jb loc_40586B  +
mov eax [eax] +
push [ebp+arg_8]  +
mov [esi+50h] eax +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_413AFD  +
mov [esi+50h] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov ecx dword_4739C4 +
test ecx ecx +
jz loc_4058A2  +
mov eax [ecx] +
call dword ptr [eax+14h]  +
mov ecx esi +
pop esi  +
jmp sub_414BEC  +
***
push 0FFFFFFFFh  +
push offset loc_452A22  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov ecx [esi+4] +
mov edi [ebp+arg_0] +
cmp edi ecx +
jnb loc_40593C  +
mov eax [esi] +
cmp eax edi +
ja loc_40593C  +
sub edi eax +
mov eax 2AAAAAABh +
imul  edi +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp ecx [esi+8] +
jnz loc_405907  +
push ecx  +
mov ecx esi +
call loc_405990  +
mov eax [esi] +
lea ecx [edi+edi*2] +
lea eax [eax+ecx*8] +
mov ecx [esi+4] +
mov [ebp+arg_0] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 0 +
test ecx ecx +
jz loc_405979  +
xor edx edx +
mov dword ptr [ecx+14h] 7 +
push 0FFFFFFFFh  +
push edx  +
mov dword ptr [ecx+10h] 0 +
mov [ecx] dx +
push eax  +
jmp loc_405974  +
cmp ecx [esi+8] +
jnz loc_405949  +
push ecx  +
mov ecx esi +
call loc_405990  +
mov ecx [esi+4] +
mov [ebp+arg_0] ecx +
mov [ebp+var_10] ecx +
mov [ebp+var_4] 1 +
test ecx ecx +
jz loc_405979  +
xor eax eax +
mov dword ptr [ecx+14h] 7 +
push 0FFFFFFFFh  +
push eax  +
mov dword ptr [ecx+10h] 0 +
mov [ecx] ax +
push edi  +
call loc_402A60  +
add dword ptr [esi+4] 18h +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx ecx +
mov eax 2AAAAAABh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_405A0E  +
sub esi [ebx] +
mov eax 2AAAAAABh +
imul  esi +
push edi  +
sar edx 2 +
mov eax 0AAAAAAAh +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jb loc_405A13  +
sub ecx [ebx] +
mov eax 2AAAAAABh +
imul  ecx +
inc edi  +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0AAAAAAAh +
mov eax esi +
shr eax 1 +
sub edx eax +
cmp edx esi +
lea ecx [eax+esi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edi +
cmovb ecx edi +
push ecx  +
mov ecx ebx +
call sub_405A20  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_437F90  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov edx 18h +
push ecx  +
mov ecx [ebp+arg_0] +
call loc_401DB0  +
mov edx [edi+4] +
add esp 4 +
mov ecx [edi] +
mov ebx eax +
push [ebp+arg_0]  +
sub esp 8 +
push ebx  +
call sub_405AD0  +
mov esi [edi] +
mov eax 2AAAAAABh +
mov ecx [edi+4] +
add esp 10h +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov [ebp+var_4] ecx +
test esi esi +
jz loc_405AA2  +
push [ebp+arg_0]  +
mov edx [edi+4] +
push ecx  +
mov ecx esi +
call loc_402DD0  +
mov esi [edi] +
mov eax 2AAAAAABh +
mov ecx [edi+8] +
add esp 8 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_402820  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_0] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*8] +
mov [edi+8] eax +
lea eax [ecx+ecx*2] +
lea eax [ebx+eax*8] +
mov [edi+4] eax +
mov [edi] ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_405B11  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_405B00  +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov ecx esi +
push edi  +
mov [esi] ax +
call sub_4031F0  +
add edi 18h +
add esi 18h +
cmp edi ebx +
jnz loc_405AE1  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
retn   +
***
retn   +
***
mov eax [ecx+0ACh] +
and eax 20h +
retn   +
***
mov eax [ecx+0ACh] +
and eax 10h +
retn   +
***
mov eax [ecx+0ACh] +
and eax 8 +
retn   +
***
mov eax [ecx+0ACh] +
and eax 4 +
retn   +
***
mov eax [ecx+0ACh] +
and eax 2 +
retn   +
***
mov eax [ecx+0ACh] +
and eax 1 +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_458AC4 +
call sub_405C20  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_405BD7  +
test al 4 +
jnz loc_405BCC  +
push esi  +
call sub_413A17  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 8  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_405C20  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_405C11  +
test al 4 +
jnz loc_405C06  +
push esi  +
call sub_413A17  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 8  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
lea ecx [ebp-418h] +
call loc_406060  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-414h] +
mov esi [ebp-41Ch] +
push 0  +
push 200h  +
push ecx  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_405CD6  +
lea eax [ebp-414h] +
push eax  +
push 4Dh  +
push offset aCProgramFilesX  +
push offset aExceptionThrow  +
lea eax [ebp-418h] +
push offset aTsTsDTs  +
push eax  +
call sub_405FB0  +
add esp 18h +
jmp loc_405CF6  +
push 4Dh  +
push offset aCProgramFilesX  +
push offset aExceptionThrow  +
lea eax [ebp-418h] +
push offset aTsTsD  +
push eax  +
call sub_405FB0  +
add esp 14h +
push 0  +
push 0  +
push dword ptr [ebp-418h]  +
call sub_413A9C  +
lea ecx [ebp-418h] +
mov byte ptr [ebp-4] 1 +
call sub_405FD0  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+4]  +
mov eax offset loc_405C63 +
retn   +
***
mov dword ptr [ecx] offset off_458AC4 +
jmp sub_405C20  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov esi [ebx] +
sub esi 10h +
mov ecx [esi] +
mov eax [esi+4] +
mov [ebp-4] eax +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov edi [ebp+8] +
mov ecx eax +
push 2  +
push edi  +
mov edx [eax] +
call dword ptr [edx]  +
mov ecx eax +
mov [ebp+8] ecx +
test ecx ecx +
jz loc_405DB6  +
cmp [ebp-4] edi +
lea eax [esi+10h] +
cmovl edi [ebp-4] +
inc edi  +
lea edx [edi+edi] +
lea edi [ecx+10h] +
push edx  +
push eax  +
mov ecx edi +
call sub_4060B0  +
mov ecx [ebp+8] +
add esp 8 +
mov eax [ebp-4] +
mov [ecx+4] eax +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_405DAB  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebx] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_405DC0  +
push 8007000Eh  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov edx [edi] +
sub edx 10h +
mov ecx [edx] +
cmp [edx+8] esi +
jge loc_405E02  +
test esi esi +
jle loc_405E02  +
mov eax [ecx] +
push 2  +
push esi  +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_405E02  +
add eax 10h +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_405DC0  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi] +
cmp [ecx-0Ch] esi +
cmovg esi [ecx-0Ch] +
cmp dword ptr [ecx-4] 1 +
jle loc_405E37  +
push esi  +
mov ecx edi +
call loc_405D40  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ecx-8] +
cmp ecx esi +
jge loc_405E75  +
cmp ecx 40000000h +
jle loc_405E5F  +
add ecx 100000h +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_405DD0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_405DD0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push esi  +
mov esi ecx +
test edx edx +
js loc_405EAF  +
mov eax [esi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax edx +
or ecx eax +
jge loc_405EA8  +
push edx  +
mov ecx esi +
call sub_405E10  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_405FF0  +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
test edx edx +
js loc_405EF0  +
mov eax [ecx] +
cmp edx [eax-8] +
jg loc_405EF0  +
mov [eax-0Ch] edx +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_405F98  +
call sub_405EC0  +
push dword ptr [ebp+0Ch]  +
mov [ebp+8] eax +
push 0  +
mov ecx [eax] +
push ebx  +
push 0  +
push 0  +
push dword ptr [eax+4]  +
or ecx 6 +
push ecx  +
call sub_43EBF6  +
mov esi eax +
add esp 1Ch +
or eax 0FFFFFFFFh +
test esi esi +
cmovs esi eax +
test esi esi +
js loc_405FA2  +
mov eax [edi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_405F5F  +
push esi  +
mov ecx edi +
call sub_405E10  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
lea eax [esi+1] +
push 0  +
push ebx  +
push eax  +
push dword ptr [edi]  +
mov eax [ecx] +
push dword ptr [ecx+4]  +
or eax 4 +
push eax  +
call sub_43EC1A  +
mov eax [edi] +
add esp 1Ch +
cmp esi [eax-8] +
jg loc_405F98  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_405FF0  +
push 80004005h  +
call loc_405FF0  +
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call loc_405F00  +
pop ebp  +
retn   +
***
mov edx [ecx] +
or eax 0FFFFFFFFh +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg locret_405FEA  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 8007000Eh +
jnz loc_406002  +
call sub_416AA3  +
push eax  +
call sub_416927  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_40602E  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 80004005h  +
call loc_405FF0  +
mov edx ecx +
or eax 0FFFFFFFFh +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg locret_406057  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
retn   +
***
push esi  +
mov esi ecx +
call sub_4167F5  +
mov ecx eax +
test ecx ecx +
jz loc_40607C  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax esi +
pop esi  +
retn   +
***
push 80004005h  +
call loc_405FF0  +
push [ebp+arg_0]  +
call sub_413A17  +
add esp 4 +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi edx +
test esi esi +
jnz loc_4060C4  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_4060E1  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_4060FF  +
cmp edi esi +
jb loc_4060FF  +
push esi  +
push ebx  +
push ecx  +
call loc_439530  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
push edi  +
push 0  +
push ecx  +
call sub_439AB0  +
add esp 0Ch +
test ebx ebx +
jnz loc_406129  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
pop ebx  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
cmp edi esi +
jnb loc_40611F  +
call sub_43CB76  +
mov dword ptr [eax] 22h +
call sub_43C8B1  +
pop ebx  +
pop edi  +
mov eax 22h +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452A96  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
push 0  +
push 66h  +
call sub_416BFB  +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_46152C +
mov dword ptr [esi+0B0h] 0 +
mov dword ptr [esi+0ACh] offset off_458AC4 +
mov byte ptr [ebp+var_4] 1 +
call sub_419B8F  +
call sub_419B8F  +
push 80h  +
mov eax [eax+0Ch] +
push eax  +
call ds:LoadIconW  +
mov [esi+0A8h] eax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea ecx [esi+0ACh] +
mov dword ptr [ecx] offset off_458AC4 +
call sub_405C20  +
mov ecx esi +
call sub_416C3B  +
mov eax [ebp+arg_0] +
test al 1 +
jz loc_406227  +
test al 4 +
jnz loc_406219  +
push esi  +
call sub_413A17  +
add esp 4 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
push 0B8h  +
push esi  +
call nullsub_1  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452B4A  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-2Ch] esi +
call sub_417554  +
push dword ptr [esi+0A8h]  +
mov edi ds:SendMessageW +
push 1  +
push 80h  +
push dword ptr [esi+20h]  +
call edi  +
push dword ptr [esi+0A8h]  +
push 0  +
push 80h  +
push dword ptr [esi+20h]  +
call edi  +
mov edi ds:GetSystemMetrics +
push 20h  +
call edi  +
push 21h  +
mov [ebp-30h] eax +
call edi  +
push 21h  +
mov ebx eax +
call edi  +
push 4  +
mov esi eax +
call edi  +
mov ecx [ebp-30h] +
add esi eax +
push 1  +
lea eax [ebx+0A1h] +
mov ebx [ebp-2Ch] +
add eax esi +
push eax  +
lea ecx ds:1A7h[ecx*2] +
push ecx  +
push 0  +
push 0  +
mov ecx ebx +
call sub_41A451  +
call ds:GetDesktopWindow  +
push eax  +
call sub_41C415  +
push eax  +
mov ecx ebx +
call sub_41BB89  +
xor eax eax +
mov dword ptr [ebp-34h] 7 +
xor ecx ecx +
mov [ebp-48h] ax +
cmp ds:word_45EF74 cx +
mov eax 14h +
mov dword ptr [ebp-38h] 0 +
cmovz eax ecx +
lea ecx [ebp-48h] +
push eax  +
push offset word_45EF74  +
call loc_402720  +
mov dword ptr [ebp-4] 0 +
mov eax dword_4739C8 +
test eax eax +
jnz loc_406362  +
push 10h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_406357  +
mov ecx eax +
call sub_403260  +
jmp loc_406359  +
xor eax eax +
mov byte ptr [ebp-4] 0 +
mov dword_4739C8 eax +
lea ecx [ebp-48h] +
push ecx  +
lea ecx [eax+8] +
call sub_4034A0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax] ebx +
mov eax [ebp-34h] +
cmp eax 8 +
jb loc_406389  +
inc eax  +
push eax  +
push dword ptr [ebp-48h]  +
call loc_402950  +
push 3EAh  +
mov ecx ebx +
call sub_419E4B  +
mov edi eax +
mov dword ptr [ebp-34h] 7 +
xor eax eax +
mov dword ptr [ebp-38h] 0 +
cmp ds:word_45EFA0 ax +
mov esi 13h +
mov ecx esi +
mov [ebp-48h] ax +
cmovz ecx eax +
push ecx  +
push offset word_45EFA0  +
lea ecx [ebp-48h] +
call loc_402720  +
mov dword ptr [ebp-4] 2 +
mov eax dword_4739C8 +
test eax eax +
jnz loc_406403  +
push 10h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 3 +
test eax eax +
jz loc_4063F8  +
mov ecx eax +
call sub_403260  +
jmp loc_4063FA  +
xor eax eax +
mov byte ptr [ebp-4] 2 +
mov dword_4739C8 eax +
lea ecx [ebp-48h] +
push ecx  +
lea ecx [eax+8] +
call sub_4034A0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax] edi +
mov eax [ebp-34h] +
cmp eax 8 +
jb loc_40642A  +
inc eax  +
push eax  +
push dword ptr [ebp-48h]  +
call loc_402950  +
push 1  +
mov ecx ebx +
call sub_419E4B  +
mov edi eax +
mov dword ptr [ebp-34h] 7 +
xor eax eax +
mov dword ptr [ebp-38h] 0 +
cmp ds:word_45EFC8 ax +
lea ecx [ebp-48h] +
mov [ebp-48h] ax +
cmovz esi eax +
push esi  +
push offset word_45EFC8  +
call loc_402720  +
mov dword ptr [ebp-4] 4 +
mov eax dword_4739C8 +
test eax eax +
jnz loc_40649A  +
push 10h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 5 +
test eax eax +
jz loc_40648F  +
mov ecx eax +
call sub_403260  +
jmp loc_406491  +
xor eax eax +
mov byte ptr [ebp-4] 4 +
mov dword_4739C8 eax +
lea ecx [ebp-48h] +
push ecx  +
lea ecx [eax+8] +
call sub_4034A0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax] edi +
mov eax [ebp-34h] +
cmp eax 8 +
jb loc_4064C1  +
inc eax  +
push eax  +
push dword ptr [ebp-48h]  +
call loc_402950  +
push 3E9h  +
mov ecx ebx +
call sub_419E4B  +
mov esi eax +
mov dword ptr [ebp-34h] 7 +
xor eax eax +
mov dword ptr [ebp-38h] 0 +
cmp ds:word_45EFF0 ax +
mov ecx 18h +
mov [ebp-48h] ax +
cmovz ecx eax +
push ecx  +
push offset word_45EFF0  +
lea ecx [ebp-48h] +
call loc_402720  +
mov dword ptr [ebp-4] 6 +
mov eax dword_4739C8 +
test eax eax +
jnz loc_406539  +
push 10h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 7 +
test eax eax +
jz loc_40652E  +
mov ecx eax +
call sub_403260  +
jmp loc_406530  +
xor eax eax +
mov byte ptr [ebp-4] 6 +
mov dword_4739C8 eax +
lea ecx [ebp-48h] +
push ecx  +
lea ecx [eax+8] +
call sub_4034A0  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax] esi +
mov eax [ebp-34h] +
cmp eax 8 +
jb loc_406560  +
inc eax  +
push eax  +
push dword ptr [ebp-48h]  +
call loc_402950  +
push 3EAh  +
mov ecx ebx +
call sub_419E4B  +
mov esi eax +
test esi esi +
jz loc_4065AD  +
push 1  +
push 15h  +
push 18Fh  +
push 50h  +
push 0Eh  +
mov ecx esi +
call sub_41A451  +
mov edi ds:SendMessageW +
push 640000h  +
push 0  +
push 401h  +
push dword ptr [esi+20h]  +
call edi  +
push 0  +
push 0  +
push 402h  +
push dword ptr [esi+20h]  +
call edi  +
jmp loc_4065B3  +
mov edi ds:SendMessageW +
mov ecx dword_4739C0 +
test ecx ecx +
jnz loc_4065EF  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-4] 8 +
test eax eax +
jz loc_4065E0  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_4065E2  +
xor ecx ecx +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_4739C0 ecx +
mov eax [ecx+8] +
cmp eax [ecx+0Ch] +
jz loc_40660F  +
mov ecx [ecx+0Ch] +
xor eax eax +
xor ecx ecx +
mov dword ptr [ebp-14h] 7 +
push 0FFFFFFFFh  +
push ecx  +
add eax 18h +
mov [ebp-28h] cx +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
call loc_402A60  +
mov dword ptr [ebp-4] 9 +
lea eax [ebp-28h] +
cmp dword ptr [ebp-14h] 8 +
mov ecx ebx +
cmovnb eax [ebp-28h] +
push eax  +
call sub_41A662  +
push 1  +
mov ecx ebx +
call sub_419E4B  +
push 1  +
push 18h  +
push 66h  +
push 81h  +
push 138h  +
mov ecx eax +
call sub_41A451  +
push 1  +
mov ecx ebx +
lea esi [ebx+0ACh] +
call sub_419E4B  +
test esi esi +
jnz loc_406689  +
xor ecx ecx +
jmp loc_40668C  +
mov eax edx +
jmp loc_406611  +
***
mov ecx [esi+4] +
push 0  +
push ecx  +
push 30h  +
push dword ptr [eax+20h]  +
call edi  +
mov eax dword_473A04 +
test eax eax +
jnz loc_4066A9  +
call sub_40D2B0  +
mov dword_473A04 eax +
mov edx [eax] +
mov ecx eax +
push offset aUixstring_un_1  +
call dword ptr [edx+8]  +
push eax  +
push 1  +
mov ecx ebx +
call sub_419E4B  +
mov ecx eax +
call sub_41A662  +
push 3E9h  +
mov ecx ebx +
call sub_419E4B  +
push 1  +
push 18h  +
push 66h  +
push 81h  +
push 0CAh  +
mov ecx eax +
call sub_41A451  +
push 3E9h  +
mov ecx ebx +
call sub_419E4B  +
test esi esi +
jnz loc_4066FD  +
xor ecx ecx +
jmp loc_406700  +
mov ecx [esi+4] +
push 0  +
push ecx  +
push 30h  +
push dword ptr [eax+20h]  +
call edi  +
mov eax dword_473A04 +
test eax eax +
jnz loc_40671D  +
call sub_40D2B0  +
mov dword_473A04 eax +
mov edx [eax] +
mov ecx eax +
push offset aUixstring_un_2  +
call dword ptr [edx+8]  +
push eax  +
push 3E9h  +
mov ecx ebx +
call sub_419E4B  +
mov ecx eax +
call sub_41A662  +
call sub_4167F5  +
xor ecx ecx +
mov edx eax +
test edx edx +
setnz cl  +
test ecx ecx +
jnz loc_406759  +
push 80004005h  +
call loc_405FF0  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp-30h] eax +
mov byte ptr [ebp-4] 0Ah +
mov edx dword_473A04 +
test edx edx +
jnz loc_406781  +
call sub_40D2B0  +
mov edx eax +
mov dword_473A04 edx +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
mov eax [edx] +
cmovnb ecx [ebp-28h] +
push ecx  +
push offset aUixstting_unin  +
mov ecx edx +
call dword ptr [eax+8]  +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_405FB0  +
add esp 0Ch +
mov ecx ebx +
push 3ECh  +
call sub_419E4B  +
push 1  +
push 30h  +
push 18Fh  +
push 10h  +
push 0Eh  +
mov ecx eax +
call sub_41A451  +
push 3ECh  +
mov ecx ebx +
call sub_419E4B  +
test esi esi +
jnz loc_4067DA  +
xor ecx ecx +
jmp loc_4067DD  +
mov ecx [esi+4] +
push 0  +
push ecx  +
push 30h  +
push dword ptr [eax+20h]  +
call edi  +
mov esi [ebp-30h] +
mov ecx ebx +
push esi  +
push 3ECh  +
call sub_419E4B  +
mov ecx eax +
call sub_41A662  +
push 3E8h  +
mov ecx ebx +
call sub_419E4B  +
push 1  +
push 1  +
push 1A7h  +
push 74h  +
push 0  +
mov ecx eax +
call sub_41A451  +
mov ecx dword_4739C0 +
test ecx ecx +
jnz loc_406854  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov byte ptr [ebp-4] 0Bh +
test eax eax +
jz loc_406848  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_40684A  +
xor ecx ecx +
mov byte ptr [ebp-4] 0Ah +
mov dword_4739C0 ecx +
mov eax [ecx+8] +
cmp eax [ecx+0Ch] +
jz loc_40686F  +
mov ecx [ecx+0Ch] +
nop   +
mov edx [eax] +
cmp dword ptr [edx+64h] 1 +
jz loc_4068D8  +
add eax 4 +
cmp eax ecx +
jnz loc_406860  +
xor eax eax +
mov ecx dword_4739C4 +
mov byte ptr [eax+68h] 1 +
mov eax [ecx] +
call dword ptr [eax+4]  +
push dword ptr [ebx+20h]  +
call ds:SetForegroundWindow  +
mov byte ptr [ebp-4] 9 +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4068A5  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_4068B7  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov eax 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax edx +
jmp loc_406871  +
***
push 0FFFFFFFFh  +
push offset loc_452B7B  +
mov eax large fs:0 +
push eax  +
sub esp 0DCh +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
push dword ptr [ebx+20h]  +
call ds:IsIconic  +
push ebx  +
test eax eax +
jz loc_40699A  +
lea ecx [ebp+var_94] +
call sub_4178AF  +
push 0  +
push [ebp+hDC]  +
push 27h  +
push dword ptr [ebx+20h]  +
call ds:SendMessageW  +
mov esi ds:GetSystemMetrics +
push 0Bh  +
call esi  +
push 0Ch  +
mov edi eax +
call esi  +
mov esi eax +
xorps xmm0 xmm0 +
lea eax [ebp+Rect] +
push eax  +
push dword ptr [ebx+20h]  +
movups oword ptr [ebp+Rect.left] xmm0 +
call ds:GetClientRect  +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
push dword ptr [ebx+0A8h]  +
sub eax esi +
inc eax  +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
mov eax [ebp+Rect.right] +
sub eax [ebp+Rect.left] +
sub eax edi +
inc eax  +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
push [ebp+hDC]  +
call ds:DrawIcon  +
lea ecx [ebp+var_94] +
jmp loc_406A0B  +
lea ecx [ebp+var_E8] +
call sub_4178AF  +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
push 3E8h  +
mov ecx ebx +
movups oword ptr [ebp+Point.x] xmm0 +
call sub_419E4B  +
lea ecx [ebp+Point] +
push ecx  +
push dword ptr [eax+20h]  +
call ds:GetWindowRect  +
lea eax [ebp+Point] +
mov ecx ebx +
push eax  +
call sub_4180CF  +
lea eax [ebp+var_40] +
xorps xmm0 xmm0 +
push eax  +
push dword ptr [ebx+20h]  +
movups oword ptr [ebp+var_40.left] xmm0 +
call ds:GetClientRect  +
mov eax [ebp+Point.y] +
lea ecx [ebp+var_E8] +
mov [ebp+var_40.bottom] eax +
lea eax [ebp+var_40] +
push 0FFFFFFh  +
push eax  +
call sub_4203AA  +
lea ecx [ebp+var_E8] +
call sub_4179F1  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx+0A8h] +
retn   +
***
mov esi ecx +
call sub_419E4B  +
mov ecx eax +
call sub_41A30E  +
test eax eax +
jz loc_406A6D  +
mov ecx esi +
pop esi  +
jmp sub_4175C8  +
pop esi  +
retn   +
***
mov esi ecx +
call sub_419E4B  +
mov ecx eax +
call sub_41A30E  +
test eax eax +
jz loc_406A8D  +
mov ecx esi +
pop esi  +
jmp sub_417428  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452BE5  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax dword_4739C0 +
test eax eax +
jnz loc_406AF1  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_406AE3  +
mov ecx eax +
call sub_401E20  +
jmp loc_406AE5  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4739C0 eax +
mov edi [eax+4] +
mov ecx esi +
push 3EAh  +
call sub_419E4B  +
test eax eax +
jz loc_406B15  +
push 0  +
push edi  +
push 402h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
mov eax dword_4739C0 +
test eax eax +
jnz loc_406B4D  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 1 +
test eax eax +
jz loc_406B3F  +
mov ecx eax +
call sub_401E20  +
jmp loc_406B41  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_4739C0 eax +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx eax +
call sub_402160  +
mov [ebp+var_4] 2 +
mov edx [ebp+var_1C] +
cmp edx [ebp+var_18] +
setz al  +
test al al +
jz loc_406B73  +
xor esi esi +
jmp loc_406C41  +
push 1  +
push 1  +
mov ecx esi +
call sub_419E4B  +
mov ecx eax +
call sub_419D29  +
mov eax [ebp+var_1C] +
mov eax [eax] +
mov edi [eax+60h] +
mov eax dword_4739C0 +
test eax eax +
jnz loc_406BBF  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov byte ptr [ebp+var_4] 3 +
test eax eax +
jz loc_406BB4  +
mov ecx eax +
call sub_401E20  +
jmp loc_406BB6  +
xor eax eax +
mov byte ptr [ebp+var_4] 2 +
mov dword_4739C0 eax +
cmp byte ptr [eax+2Ch] 0 +
mov eax dword_473A04 +
jz loc_406BDF  +
test eax eax +
jnz loc_406BD8  +
call sub_40D2B0  +
mov dword_473A04 eax +
push offset aUixstring_un_3  +
jmp loc_406C0C  +
cmp edi 1 +
jz loc_406BF9  +
test eax eax +
jnz loc_406BF2  +
call sub_40D2B0  +
mov dword_473A04 eax +
push offset aUixstring_un_4  +
jmp loc_406C0C  +
test eax eax +
jnz loc_406C07  +
call sub_40D2B0  +
mov dword_473A04 eax +
push offset aUixstring_un_5  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+8]  +
push eax  +
push 3ECh  +
mov ecx esi +
call sub_419E4B  +
mov ecx eax +
call sub_41A662  +
push 105h  +
push 0  +
push 0  +
push dword ptr [esi+20h]  +
call ds:RedrawWindow  +
mov edx [ebp+var_1C] +
mov esi 1 +
test edx edx +
jz loc_406C54  +
mov ecx [ebp+var_14] +
sub ecx edx +
sar ecx 2 +
push ecx  +
push edx  +
call loc_402880  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx] +
jmp dword ptr [eax+180h]  +
***
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_0] +
push [ebp+arg_4]  +
push edi  +
call sub_41CC74  +
cmp [ebp+arg_8] 6 +
jnz loc_406CAD  +
mov eax [edi] +
mov ecx edi +
push 0FFFFFFh  +
call dword ptr [eax+2Ch]  +
push 0  +
call ds:GetStockObject  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
sub esp 60h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
lea ecx [ebp+var_60] +
push ecx  +
push 5Ch  +
push dword ptr [eax+4]  +
call ds:GetObjectW  +
push [ebp+var_60.lfHeight]  +
call sub_406D30  +
mov [ebp+var_60.lfHeight] eax +
lea esi [edi+0ACh] +
lea eax [ebp+var_60] +
push eax  +
call ds:CreateFontIndirectW  +
push eax  +
mov ecx esi +
call sub_417BD2  +
push esi  +
mov ecx edi +
call nullsub_2  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
push edi  +
push 0  +
call ds:GetDC  +
mov esi eax +
push 5Ah  +
push esi  +
call ds:GetDeviceCaps  +
push esi  +
push 0  +
mov edi eax +
call ds:ReleaseDC  +
mov ecx [ebp+arg_0] +
sub esp 8 +
movd xmm0 edi +
cvtdq2ps xmm0 xmm0 +
test ecx ecx +
js loc_406DA8  +
movd xmm1 ecx +
cvtdq2ps xmm1 xmm1 +
mulss xmm1 ds:dword_4628D4 +
divss xmm1 xmm0 +
cvtps2pd xmm0 xmm1 +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
fstp  [esp+18h+var_18] +
call sub_44FBE0  +
fstp  [ebp+var_8] +
movsd xmm0 [ebp+var_8] +
add esp 8 +
cvtpd2ps xmm0 xmm0 +
pop edi  +
pop esi  +
cvttss2si eax xmm0 +
mov esp ebp +
pop ebp  +
retn 4  +
neg ecx  +
movd xmm1 ecx +
cvtdq2ps xmm1 xmm1 +
mulss xmm1 ds:dword_4628D4 +
divss xmm1 xmm0 +
cvtps2pd xmm0 xmm1 +
movsd [ebp+var_8] xmm0 +
fld  [ebp+var_8] +
fstp  [esp+18h+var_18] +
call sub_44FBE0  +
fstp  [ebp+var_8] +
movsd xmm0 [ebp+var_8] +
add esp 8 +
cvtpd2ps xmm0 xmm0 +
pop edi  +
pop esi  +
xorps xmm0 oword ptr ds:oword_4628E0 +
cvttss2si eax xmm0 +
mov esp ebp +
pop ebp  +
retn 4  +
***
movzx eax [ebp+arg_0] +
call ds:EnableWindow  +
retn   +
***
call ds:EnableWindow  +
retn   +
***
and esp 0FFFFFFF8h +
call sub_406E80  +
test al al +
jz loc_406E48  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn   +
call sub_406FB0  +
test al al +
jz loc_406E5A  +
mov eax 3 +
mov esp ebp +
pop ebp  +
retn   +
call sub_40A300  +
test al al +
jz loc_406E6C  +
mov eax 4 +
mov esp ebp +
pop ebp  +
retn   +
call sub_4070E0  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 2 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
mov [ebp+var_8] 7 +
xor ecx ecx +
mov word ptr [ebp+lpName] ax +
cmp ds:word_46173C cx +
mov eax 15h +
push ebx  +
push esi  +
cmovz eax ecx +
mov [ebp+var_C] 0 +
push eax  +
push offset word_46173C  +
lea ecx [ebp+lpName] +
call loc_402720  +
xor bl bl +
lea eax [ebp+lpName] +
cmp [ebp+var_8] 8 +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 1F0001h  +
call ds:OpenMutexW  +
mov esi eax +
test esi esi +
jz loc_407026  +
push esi  +
mov bl 1 +
call ds:CloseHandle  +
push esi  +
call ds:ReleaseMutex  +
mov eax [ebp+var_8] +
cmp eax 8 +
jb loc_407038  +
inc eax  +
push eax  +
push [ebp+lpName]  +
call loc_402950  +
test bl bl +
jz loc_40704E  +
mov al 1 +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov [ebp+var_8] 7 +
xor ecx ecx +
mov word ptr [ebp+lpName] ax +
cmp ds:word_461768 ax +
mov eax 15h +
mov [ebp+var_C] 0 +
cmovz eax ecx +
lea ecx [ebp+lpName] +
push eax  +
push offset word_461768  +
call loc_402720  +
xor bl bl +
lea eax [ebp+lpName] +
cmp [ebp+var_8] 8 +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 1F0001h  +
call ds:OpenMutexW  +
mov esi eax +
test esi esi +
jz loc_4070B2  +
push esi  +
mov bl 1 +
call ds:CloseHandle  +
push esi  +
call ds:ReleaseMutex  +
mov eax [ebp+var_8] +
cmp eax 8 +
jb loc_4070C4  +
inc eax  +
push eax  +
push [ebp+lpName]  +
call loc_402950  +
mov ecx [ebp+var_4] +
test bl bl +
pop esi  +
setnz al  +
xor ecx ebp +
pop ebx  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
mov [ebp+var_8] 7 +
xor ecx ecx +
mov word ptr [ebp+lpName] ax +
cmp ds:word_4616B8 cx +
mov eax 11h +
push ebx  +
push esi  +
cmovz eax ecx +
mov [ebp+var_C] 0 +
push eax  +
push offset word_4616B8  +
lea ecx [ebp+lpName] +
call loc_402720  +
xor bl bl +
lea eax [ebp+lpName] +
cmp [ebp+var_8] 8 +
cmovnb eax [ebp+lpName] +
push eax  +
push 0  +
push 1F0001h  +
call ds:OpenMutexW  +
mov esi eax +
test esi esi +
jz loc_407156  +
push esi  +
mov bl 1 +
call ds:CloseHandle  +
push esi  +
call ds:ReleaseMutex  +
mov ecx [ebp+var_8] +
cmp ecx 8 +
jb loc_407168  +
inc ecx  +
push ecx  +
push [ebp+lpName]  +
call loc_402950  +
mov ecx [ebp+var_4] +
mov al bl +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452C42  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_45EDD8 +
mov dword_4739C4 0 +
mov byte ptr [ebp+var_4] 2 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_4071CD  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_4071DE  +
push 8  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452CBA  +
mov eax large fs:0 +
push eax  +
sub esp 50h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov dword_4739FC offset loc_40B390 +
call sub_40B8E0  +
movzx eax al +
mov ecx offset aUix +
mov dword_4739F8 eax +
mov dword_473A0C offset off_46EEC0 +
call sub_40AF70  +
mov ecx offset aUninstall +
call sub_40AFF0  +
call sub_40D050  +
mov dword_4739F4 eax +
mov eax [eax+8] +
test eax eax +
jz loc_407276  +
push offset off_46EED0  +
call eax  +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
lea ecx [ebp+var_58] +
mov [ebp+var_4] eax +
call sub_404E40  +
mov esi eax +
lea eax [ebp+var_28] +
cmp eax esi +
jz loc_4072CD  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_4072B0  +
inc eax  +
push eax  +
push [ebp+var_28]  +
call loc_402950  +
xor eax eax +
mov [ebp+var_14] 7 +
push esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call sub_4031F0  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_44] +
cmp eax 8 +
jb loc_4072E3  +
inc eax  +
push eax  +
push [ebp+var_58]  +
call loc_402950  +
xor eax eax +
mov [ebp+var_44] 7 +
cmp [ebp+var_14] 8 +
lea esi [ebp+var_28] +
mov word ptr [ebp+var_58] ax +
cmovnb esi [ebp+var_28] +
mov eax dword_473A1C +
mov [ebp+var_48] 0 +
test eax eax +
jnz loc_407334  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_5C] eax +
mov byte ptr [ebp+var_4] 3 +
test eax eax +
jz loc_407329  +
mov ecx eax +
call loc_40E690  +
jmp loc_40732B  +
xor eax eax +
mov byte ptr [ebp+var_4] 0 +
mov dword_473A1C eax +
push esi  +
mov ecx eax +
call sub_40E970  +
cmp [ebp+var_14] 8 +
lea eax [ebp+var_28] +
cmovnb eax [ebp+var_28] +
push eax  +
push offset aBundlepathS  +
push 0Bh  +
push 0  +
push 0  +
push 2  +
call sub_40B0B0  +
mov eax [ebp+var_14] +
add esp 18h +
cmp eax 8 +
jb loc_40736F  +
inc eax  +
push eax  +
push [ebp+var_28]  +
call loc_402950  +
xor eax eax +
mov [ebp+var_2C] 7 +
mov [ebp+var_30] 0 +
mov word ptr [ebp+var_40] ax +
mov [ebp+var_4] 4 +
mov ecx dword_4739C0 +
test ecx ecx +
jnz loc_4073C0  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_5C] eax +
mov byte ptr [ebp+var_4] 5 +
test eax eax +
jz loc_4073B4  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_4073B6  +
xor ecx ecx +
mov byte ptr [ebp+var_4] 4 +
mov dword_4739C0 ecx +
mov eax [ecx+0Ch] +
sub eax [ecx+8] +
sar eax 2 +
test eax eax +
jle loc_40742E  +
test ecx ecx +
jnz loc_4073FD  +
push 30h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_5C] eax +
mov byte ptr [ebp+var_4] 6 +
test eax eax +
jz loc_4073F1  +
mov ecx eax +
call sub_401E20  +
mov ecx eax +
jmp loc_4073F3  +
xor ecx ecx +
mov byte ptr [ebp+var_4] 4 +
mov dword_4739C0 ecx +
mov eax [ecx+0Ch] +
mov edx [ecx+8] +
sub eax edx +
sar eax 2 +
test eax eax +
jnz loc_407416  +
push offset aInvalidVectorT  +
call sub_437FB0  +
mov eax [edx] +
lea ecx [ebp+var_40] +
add eax 48h +
cmp ecx eax +
jz loc_40744D  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call loc_402A60  +
jmp loc_40744D  +
xor ecx ecx +
mov eax 2 +
cmp ds:word_45FF80 cx +
cmovz eax ecx +
lea ecx [ebp+var_40] +
push eax  +
push offset word_45FF80  +
call loc_402720  +
cmp [ebp+var_2C] 8 +
lea esi [ebp+var_40] +
mov eax dword_473A1C +
cmovnb esi [ebp+var_40] +
test eax eax +
jnz loc_40748A  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_5C] eax +
mov byte ptr [ebp+var_4] 7 +
test eax eax +
jz loc_40747F  +
mov ecx eax +
call loc_40E690  +
jmp loc_407481  +
xor eax eax +
mov byte ptr [ebp+var_4] 4 +
mov dword_473A1C eax +
push esi  +
mov ecx eax +
call loc_40EA20  +
call sub_40C330  +
mov eax [ebp+var_2C] +
cmp eax 8 +
jb loc_4074A9  +
inc eax  +
push eax  +
push [ebp+var_40]  +
call loc_402950  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452CE8  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx offset aUninstallexecu +
call loc_407A80  +
mov esi eax +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
mov ecx esi +
mov eax [esi] +
push 0  +
call dword ptr [eax+4]  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx dword_4739F4 +
test ecx ecx +
jz loc_407556  +
mov eax [ecx+0Ch] +
test eax eax +
jz loc_40754C  +
call eax  +
mov ecx dword_4739F4 +
test ecx ecx +
jz loc_407556  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_4739F4 0 +
call sub_40AEC0  +
mov dword_4739FC 0 +
call sub_40B450  +
call sub_408800  +
test esi esi +
jz loc_407585  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax]  +
pop esi  +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_40759C  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
push edi  +
mov edi [ebp+10h] +
mov esi ecx +
test edi edi +
jz loc_407601  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4075BD  +
mov eax [esi] +
jmp loc_4075BF  +
mov eax esi +
cmp edi eax +
jb loc_407601  +
cmp ecx 8 +
jb loc_4075CC  +
mov edx [esi] +
jmp loc_4075CE  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax edi +
jbe loc_407601  +
cmp ecx 8 +
jb loc_4075E1  +
mov eax [esi] +
jmp loc_4075E3  +
mov eax esi +
push dword ptr [ebp+14h]  +
sub edi eax +
mov ecx esi +
sar edi 1 +
push edi  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call loc_407750  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov eax [esi+10h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_407731  +
mov edx eax +
sub edx ecx +
mov ecx [ebp+14h] +
push ebx  +
mov ebx [ebp+0Ch] +
cmp edx ebx +
cmovb ebx edx +
sub eax ebx +
mov [ebp+0Ch] eax +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax [ebp+0Ch] +
jbe loc_40773B  +
sub edx ebx +
mov [ebp-8] edx +
cmp ecx ebx +
jnb loc_40768C  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40764D  +
mov edi [esi] +
mov [ebp+0Ch] edi +
mov edi [ebp+10h] +
jmp loc_407650  +
mov [ebp+0Ch] esi +
cmp eax 8 +
jb loc_40765C  +
mov eax [esi] +
mov [ebp-4] eax +
jmp loc_40765F  +
mov [ebp-4] esi +
test edx edx +
jz loc_40768C  +
mov edi [ebp+0Ch] +
lea eax [edx+edx] +
mov edx [ebp+8] +
push eax  +
lea eax [edx+ebx] +
lea eax [edi+eax*2] +
push eax  +
lea eax [edx+ecx] +
mov ecx [ebp-4] +
lea eax [ecx+eax*2] +
push eax  +
call loc_438E80  +
mov edi [ebp+10h] +
add esp 0Ch +
mov ecx [ebp+14h] +
test ecx ecx +
jnz loc_407698  +
test ebx ebx +
jz loc_407726  +
mov eax [esi+10h] +
sub eax ebx +
add eax ecx +
mov ecx esi +
push 0  +
push eax  +
mov [ebp+0Ch] eax +
call loc_4029B0  +
test al al +
jz loc_407726  +
mov ecx [ebp+14h] +
cmp ebx ecx +
jnb loc_4076F8  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4076C3  +
mov edx [esi] +
jmp loc_4076C5  +
mov edx esi +
cmp eax 8 +
jb loc_4076D1  +
mov eax [esi] +
mov [ebp+10h] eax +
jmp loc_4076D4  +
mov [ebp+10h] esi +
mov eax [ebp+8] +
push dword ptr [ebp-8]  +
add eax ebx +
mov ebx [ebp+8] +
lea edx [edx+eax*2] +
lea eax [ebx+ecx] +
mov ecx [ebp+10h] +
lea ecx [ecx+eax*2] +
call sub_401D90  +
mov ecx [ebp+14h] +
add esp 4 +
jmp loc_4076FB  +
mov ebx [ebp+8] +
cmp dword ptr [esi+14h] 8 +
jb loc_407705  +
mov edx [esi] +
jmp loc_407707  +
mov edx esi +
test ecx ecx +
jz loc_40771C  +
lea eax [ecx+ecx] +
push eax  +
lea eax [edx+ebx*2] +
push edi  +
push eax  +
call loc_439530  +
add esp 0Ch +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_402A30  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov eax [esi+10h] +
cmp eax edi +
jb loc_407A6D  +
mov edx [ebp+14h] +
push ebx  +
mov ebx [ebp+10h] +
mov ecx [ebx+10h] +
cmp ecx edx +
jb loc_407A6D  +
mov ebx eax +
sub ebx edi +
mov [ebp-4] ebx +
mov ebx [ebp+0Ch] +
cmp [ebp-4] ebx +
cmovb ebx [ebp-4] +
sub ecx edx +
mov [ebp-8] ecx +
mov ecx [ebp+18h] +
cmp [ebp-8] ecx +
mov [ebp+0Ch] ebx +
mov ebx eax +
cmovb ecx [ebp-8] +
or eax 0FFFFFFFFh +
sub ebx [ebp+0Ch] +
sub eax ecx +
mov [ebp-8] ebx +
cmp eax ebx +
mov ebx [ebp+10h] +
mov [ebp+18h] ecx +
jbe loc_407A63  +
mov edi [ebp-8] +
mov eax [ebp+0Ch] +
add edi ecx +
sub [ebp-4] eax +
cmp [esi+10h] edi +
mov [ebp-8] edi +
mov edi [ebp+8] +
jnb loc_4077E3  +
push 0  +
push dword ptr [ebp-8]  +
mov ecx esi +
call loc_4029B0  +
mov ecx [ebp+18h] +
mov edx [ebp+14h] +
mov eax [ebp+0Ch] +
cmp esi ebx +
jz loc_407866  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4077F6  +
mov edx [esi] +
mov [ebp+8] edx +
jmp loc_4077F9  +
mov [ebp+8] esi +
cmp eax 8 +
jb loc_407802  +
mov edx [esi] +
jmp loc_407804  +
mov edx esi +
mov eax [ebp-4] +
test eax eax +
jz loc_40782C  +
mov ebx [ebp+8] +
add eax eax +
push eax  +
mov eax [ebp+0Ch] +
add eax edi +
lea eax [ebx+eax*2] +
push eax  +
lea eax [edi+ecx] +
lea eax [edx+eax*2] +
push eax  +
call loc_438E80  +
mov ebx [ebp+10h] +
add esp 0Ch +
cmp dword ptr [ebx+14h] 8 +
jb loc_407834  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_40783E  +
mov ecx [esi] +
jmp loc_407840  +
mov ecx esi +
mov eax [ebp+18h] +
test eax eax +
jz loc_407A34  +
add eax eax +
push eax  +
mov eax [ebp+14h] +
lea eax [ebx+eax*2] +
push eax  +
lea eax [ecx+edi*2] +
push eax  +
call loc_439530  +
add esp 0Ch +
jmp loc_407A34  +
mov ebx [ebp+18h] +
cmp ebx eax +
ja loc_4078C4  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_407879  +
mov ecx [esi] +
jmp loc_40787B  +
mov ecx esi +
cmp eax 8 +
jb loc_407884  +
mov eax [esi] +
jmp loc_407886  +
mov eax esi +
lea edx [ecx+edx*2] +
push ebx  +
lea ecx [eax+edi*2] +
call sub_401D90  +
mov eax [esi+14h] +
add esp 4 +
cmp eax 8 +
jb loc_4078A1  +
mov edx [esi] +
jmp loc_4078A3  +
mov edx esi +
cmp eax 8 +
jb loc_4078AC  +
mov ecx [esi] +
jmp loc_4078AE  +
mov ecx esi +
mov eax [ebp+0Ch] +
push dword ptr [ebp-4]  +
add eax edi +
lea edx [edx+eax*2] +
lea eax [edi+ebx] +
lea ecx [ecx+eax*2] +
jmp loc_407A2C  +
cmp edx edi +
ja loc_407929  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4078D4  +
mov edx [esi] +
jmp loc_4078D6  +
mov edx esi +
cmp eax 8 +
jb loc_4078DF  +
mov ecx [esi] +
jmp loc_4078E1  +
mov ecx esi +
mov eax [ebp+0Ch] +
push dword ptr [ebp-4]  +
add eax edi +
lea edx [edx+eax*2] +
lea eax [edi+ebx] +
lea ecx [ecx+eax*2] +
call sub_401D90  +
mov eax [esi+14h] +
add esp 4 +
cmp eax 8 +
jb loc_407906  +
mov edx [esi] +
jmp loc_407908  +
mov edx esi +
cmp eax 8 +
jb loc_40791B  +
mov ecx [esi] +
mov eax [ebp+14h] +
push ebx  +
lea ecx [ecx+edi*2] +
jmp loc_407A29  +
mov eax [ebp+14h] +
mov ecx esi +
push ebx  +
lea ecx [ecx+edi*2] +
jmp loc_407A29  +
lea ecx [edi+eax] +
mov [ebp+8] ecx +
cmp ecx edx +
ja loc_40799C  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40793F  +
mov edx [esi] +
jmp loc_407941  +
mov edx esi +
cmp eax 8 +
jb loc_40794A  +
mov ecx [esi] +
jmp loc_40794C  +
mov ecx esi +
mov eax [ebp+8] +
push dword ptr [ebp-4]  +
lea edx [edx+eax*2] +
lea eax [edi+ebx] +
lea ecx [ecx+eax*2] +
call sub_401D90  +
mov eax [esi+14h] +
add esp 4 +
cmp eax 8 +
jb loc_40796F  +
mov edx [esi] +
jmp loc_407971  +
mov edx esi +
cmp eax 8 +
jb loc_407989  +
mov ecx [esi] +
mov eax [ebp+14h] +
sub eax [ebp+0Ch] +
push ebx  +
add eax ebx +
lea ecx [ecx+edi*2] +
jmp loc_407A29  +
mov eax [ebp+14h] +
mov ecx esi +
sub eax [ebp+0Ch] +
push ebx  +
add eax ebx +
lea ecx [ecx+edi*2] +
jmp loc_407A29  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4079AE  +
mov ebx [esi] +
mov [ebp+10h] ebx +
mov ebx [ebp+18h] +
jmp loc_4079B1  +
mov [ebp+10h] esi +
cmp ecx 8 +
jb loc_4079BA  +
mov ecx [esi] +
jmp loc_4079BC  +
mov ecx esi +
push eax  +
mov eax [ebp+10h] +
lea ecx [ecx+edi*2] +
lea edx [eax+edx*2] +
call sub_401D90  +
mov ecx [esi+14h] +
add esp 4 +
cmp ecx 8 +
jb loc_4079DA  +
mov eax [esi] +
jmp loc_4079DC  +
mov eax esi +
cmp ecx 8 +
jb loc_4079E5  +
mov ecx [esi] +
jmp loc_4079E7  +
mov ecx esi +
mov edx [ebp+8] +
push dword ptr [ebp-4]  +
add edx edx +
mov [ebp+18h] edx +
add edx eax +
lea eax [edi+ebx] +
lea ecx [ecx+eax*2] +
call sub_401D90  +
mov eax [esi+14h] +
add esp 4 +
cmp eax 8 +
jb loc_407A0E  +
mov edx [esi] +
jmp loc_407A10  +
mov edx esi +
cmp eax 8 +
jb loc_407A19  +
mov ecx [esi] +
jmp loc_407A1B  +
mov ecx esi +
mov eax ebx +
sub eax [ebp+0Ch] +
push eax  +
mov eax [ebp+14h] +
add eax ebx +
add ecx [ebp+18h] +
lea edx [edx+eax*2] +
call sub_401D90  +
add esp 4 +
mov ecx [ebp-8] +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
pop ebx  +
jb loc_407A53  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push offset aStringTooLong  +
call sub_437F90  +
push offset aInvalidStringP  +
call sub_437FB0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452D18  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edx ecx +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
cmp [edx] ax +
jnz loc_407AC8  +
xor ecx ecx +
jmp loc_407ADF  +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_407AD0  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-28h] +
call loc_402720  +
push 10h  +
push offset aUninstallexecu  +
mov dword ptr [ebp-4] 0 +
xor esi esi +
push dword ptr [ebp-18h]  +
push ecx  +
lea ecx [ebp-28h] +
call loc_403170  +
test eax eax +
jnz loc_407B24  +
push 4  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp-2Ch] esi +
test esi esi +
jz loc_407B6A  +
mov dword ptr [esi] offset off_46182C +
jmp loc_407B6C  +
push 9  +
push offset aUninstall_0  +
push dword ptr [ebp-18h]  +
push ecx  +
lea ecx [ebp-28h] +
call loc_403170  +
test eax eax +
jnz loc_407B6C  +
push 14h  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp-2Ch] esi +
test esi esi +
jz loc_407B6A  +
mov dword ptr [esi+4] offset off_45F0A4 +
mov dword ptr [esi] offset off_45F098 +
mov dword ptr [esi+4] offset off_45F06C +
mov word ptr [esi+10h] 0 +
jmp loc_407B6C  +
xor esi esi +
mov ecx [ebp-14h] +
cmp ecx 8 +
jb loc_407B7E  +
inc ecx  +
push ecx  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
cmp word ptr [esi] 0 +
jnz loc_407BBF  +
xor edx edx +
push edx  +
push esi  +
push dword ptr [ecx+10h]  +
push ecx  +
call loc_403170  +
pop esi  +
pop ebp  +
retn 4  +
mov edx esi +
push edi  +
lea edi [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_407BC5  +
sub edx edi +
pop edi  +
sar edx 1 +
push edx  +
push esi  +
push dword ptr [ecx+10h]  +
push ecx  +
call loc_403170  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
lea eax [ebp+var_4] +
mov [ebp+var_4] 0 +
push eax  +
push 0  +
push [ebp+arg_0]  +
push offset loc_407C30  +
push 0  +
push 0  +
call sub_43CA65  +
add esp 18h +
push eax  +
call ds:CloseHandle  +
mov esp ebp +
pop ebp  +
retn 4  +
mov ecx offset aUninstall_0 +
call loc_407A80  +
push 0  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+4]  +
xor eax eax +
retn 4  +
***
sub esp 8 +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
lea edx [esi+4] +
mov [ebp+var_4] 1 +
push edx  +
lea eax [ebp+var_8] +
mov dword ptr [esi] offset off_45A818 +
push eax  +
movq qword ptr [edx] xmm0 +
call sub_4393F4  +
add esp 8 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_4393F4  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_45A818 +
push eax  +
call sub_439457  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_407CF9  +
push 0Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 30h +
mov eax dword_46E524 +
xor eax esp +
mov [esp+2Ch] eax +
mov dword ptr [esp+4] 0 +
lea eax [esp+8] +
mov ecx 8 +
mov byte ptr [eax] 0 +
lea eax [eax+1] +
sub ecx 1 +
jnz loc_407D25  +
mov ecx 0Ch +
lea eax [esp+10h] +
mov byte ptr [eax] 0 +
lea eax [eax+1] +
sub ecx 1 +
jnz loc_407D40  +
mov ecx 10h +
lea eax [esp+1Ch] +
mov byte ptr [eax] 0 +
lea eax [eax+1] +
sub ecx 1 +
jnz loc_407D54  +
lea eax [esp+4] +
push eax  +
push 20h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_407D88  +
xor al al +
mov ecx [esp+2Ch] +
xor ecx esp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
lea eax [esp+8] +
push eax  +
push offset aSeshutdownpriv  +
push 0  +
call ds:LookupPrivilegeValueW  +
mov eax [esp+8] +
push 0  +
mov [esp+14h] eax +
mov eax [esp+10h] +
push 0  +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
movq xmm0 qword ptr [esp+18h] +
push 0  +
push eax  +
push 0  +
push dword ptr [esp+18h]  +
mov dword ptr [esp+34h] 1 +
movq qword ptr [esp+38h] xmm0 +
mov dword ptr [esp+40h] 2 +
call ds:AdjustTokenPrivileges  +
push dword ptr [esp+4]  +
call ds:CloseHandle  +
push 0  +
push 2  +
call ds:ExitWindowsEx  +
mov ecx [esp+2Ch] +
test eax eax +
setnz al  +
xor ecx esp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
add esp 8 +
mov dword ptr [edi] offset off_461874 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_45A818 +
push eax  +
call sub_439457  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_407E79  +
push 10h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452D50  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-28h] esi +
mov [ebp-2Ch] esi +
mov edi [ebp+0Ch] +
mov [ebp-30h] esi +
call sub_4167F5  +
mov ecx eax +
xor eax eax +
test ecx ecx +
setnz al  +
test eax eax +
jnz loc_407ED5  +
push 80004005h  +
call loc_405FF0  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov dword ptr [ebp-4] 0 +
test edi edi +
jle loc_408014  +
lea esi [ebp-24h] +
mov dword ptr [ebp-24h] 20h +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_407F00  +
sub esi ecx +
mov dword ptr [ebp-20h] 0 +
sar esi 1 +
lea ebx [esi+1] +
mov byte ptr [ebp-4] 1 +
mov eax ebx +
mov ecx 2 +
mul  ecx +
test edx edx +
jnz loc_408034  +
cmp eax 0FFFFFFFFh +
ja loc_408034  +
cmp eax 0Ah +
jbe loc_407F4A  +
push eax  +
lea ecx [ebp-20h] +
call loc_408130  +
mov eax [ebp-20h] +
jmp loc_407F50  +
lea eax [ebp-1Ch] +
mov [ebp-20h] eax +
push 1  +
lea ecx [ebp-24h] +
push ecx  +
push ebx  +
push eax  +
call sub_43EC3E  +
push eax  +
call sub_4083A0  +
mov ebx edi +
add esp 14h +
imul ebx esi +
test ebx ebx +
jns loc_407F79  +
push 80070057h  +
call loc_405FF0  +
mov edx [ebp-28h] +
mov ecx 1 +
mov eax [edx] +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax ebx +
or ecx eax +
jge loc_407F9A  +
push ebx  +
mov ecx edx +
call sub_405E10  +
mov edx [ebp-28h] +
mov edx [edx] +
cmp esi 1 +
jnz loc_407FC1  +
mov eax [ebp-20h] +
movzx eax word ptr [eax] +
test edi edi +
jle loc_407FE7  +
mov ecx edi +
mov edi edx +
mov edx eax +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
jmp loc_407FE7  +
test edi edi +
jle loc_407FE7  +
xor eax eax +
test esi esi +
jle loc_407FE2  +
mov ecx [ebp-20h] +
mov cx [ecx+eax*2] +
inc eax  +
mov [edx] cx +
add edx 2 +
cmp eax esi +
jl loc_407FD0  +
sub edi 1 +
jnz loc_407FC5  +
test ebx ebx +
js loc_407F6F  +
mov esi [ebp-28h] +
mov eax [esi] +
cmp ebx [eax-8] +
jg loc_407F6F  +
mov [eax-0Ch] ebx +
xor ecx ecx +
mov eax [esi] +
mov [eax+ebx*2] cx +
lea eax [ebp-1Ch] +
cmp [ebp-20h] eax +
jz loc_408014  +
lea ecx [ebp-20h] +
call sub_408120  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070216h  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
js loc_408059  +
mov ecx [ecx] +
cmp eax [ecx-0Ch] +
jg loc_408059  +
mov ax [ecx+eax*2] +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_405FF0  +
lea eax [ecx+4] +
cmp [ecx] eax +
jnz sub_408120  +
retn   +
***
sub esp 8 +
push ebx  +
mov ebx ecx +
or ecx 0FFFFFFFFh +
push esi  +
push edi  +
mov eax [ebx+10h] +
cmp eax 1 +
jb loc_40810F  +
dec eax  +
cmp eax ecx +
cmova eax ecx +
cmp dword ptr [ebx+14h] 8 +
jb loc_4080A6  +
mov ecx [ebx] +
jmp loc_4080A8  +
mov ecx ebx +
lea edi [ecx+eax*2] +
mov ecx [ebp+arg_0] +
movzx eax word ptr [ecx] +
mov [ebp+var_4] eax +
cmp [edi] ax +
jnz loc_4080F6  +
mov esi 1 +
mov edx ecx +
mov eax edi +
mov cx [eax] +
cmp cx [edx] +
jnz loc_4080EC  +
add eax 2 +
add edx 2 +
sub esi 1 +
jnz loc_4080C2  +
cmp dword ptr [ebx+14h] 8 +
jb loc_4080DD  +
mov ebx [ebx] +
sub edi ebx +
sar edi 1 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
sbb eax eax +
and eax 0FFFFFFFEh +
add eax 1 +
jz loc_4080D5  +
mov ecx ebx +
call sub_402600  +
cmp edi eax +
jz loc_40810C  +
mov eax [ebp+var_4] +
sub edi 2 +
mov ecx [ebp+arg_0] +
jmp loc_4080B4  +
or ecx 0FFFFFFFFh +
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_43EEDD  +
add esp 4 +
test eax eax +
jz loc_40814C  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mul  dword ptr [ebp+0Ch] +
test edx edx +
jnz loc_408174  +
cmp eax 0FFFFFFFFh +
ja loc_408174  +
pop ebp  +
retn   +
***
push 80070216h  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx eax +
lea eax [esi+0Ch] +
jl loc_4081A9  +
cmp ecx [esi] +
jnz loc_4081A9  +
mov edi esi +
inc dword ptr [eax]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ecx] +
push 2  +
push dword ptr [esi+4]  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jz loc_4081DE  +
mov eax [esi+4] +
lea ecx [edi+10h] +
mov [edi+4] eax +
mov eax [esi+4] +
lea edx ds:2[eax*2] +
push edx  +
lea eax [esi+10h] +
push eax  +
call sub_4060B0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call loc_405DC0  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
mov ecx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov eax [ebx] +
sub edi eax +
sar edi 1 +
mov esi [eax-0Ch] +
mov eax [ebp+0Ch] +
mov [ebp-4] esi +
test eax eax +
js loc_408297  +
test ecx ecx +
jnz loc_408220  +
xor edx edx +
mov [ebp+0Ch] edx +
jmp loc_40822F  +
push eax  +
push ecx  +
call loc_43ECC2  +
add esp 8 +
mov [ebp+0Ch] eax +
mov edx eax +
mov ecx 7FFFFFFFh +
sub ecx edx +
cmp ecx esi +
jl loc_4082A1  +
add esi edx +
js loc_4082AB  +
mov eax [ebx] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40825C  +
push esi  +
mov ecx ebx +
call sub_405E10  +
mov edx [ebp+0Ch] +
mov eax [ebx] +
mov ecx [ebp-4] +
lea eax [eax+edi*2] +
cmp edi ecx +
jbe loc_40826B  +
mov eax [ebp+8] +
add edx edx +
push edx  +
push eax  +
mov eax [ebx] +
lea ecx [eax+ecx*2] +
call sub_4060B0  +
mov eax [ebx] +
add esp 8 +
cmp esi [eax-8] +
jg loc_408297  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [ebx] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_405FF0  +
push 80070057h  +
call loc_405FF0  +
push 80070057h  +
call loc_405FF0  +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jnz loc_4082DB  +
xor eax eax +
push eax  +
push edx  +
call loc_4081F0  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4082E1  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_4081F0  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:LoadResource  +
test eax eax +
jnz loc_408315  +
pop ebp  +
retn   +
***
push esi  +
push eax  +
call ds:LockResource  +
mov esi eax +
test esi esi +
jz loc_408356  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:SizeofResource  +
mov ecx [ebp+10h] +
lea edx [esi+eax] +
and ecx 0Fh +
jbe loc_408352  +
cmp esi edx +
jb loc_40835B  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp [esi] ax +
cmovz esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
cmp ecx 50h +
ja loc_4083BE  +
movzx eax ds:byte_4083D8[ecx] +
jmp ds:off_4083C8[eax*4]  +
jmp sub_416AA3  +
jmp sub_416A89  +
mov eax ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx ecx +
push edi  +
mov edi [ebp+8] +
mov eax esi +
shr eax 4 +
inc eax  +
push 6  +
movzx eax ax +
push eax  +
push edi  +
call ds:FindResourceW  +
test eax eax +
jz loc_4084E3  +
push esi  +
push eax  +
push edi  +
call loc_408300  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_4084E3  +
movzx esi word ptr [edi] +
test esi esi +
js loc_4084EC  +
mov eax [ebx] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40848C  +
push esi  +
mov ecx ebx +
call sub_405E10  +
movzx ecx word ptr [edi] +
add edi 2 +
cmp ecx 0FFFFFFFFh +
jnz loc_4084B4  +
test edi edi +
jnz loc_40849F  +
xor ecx ecx +
jmp loc_4084B3  +
mov ecx edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4084A4  +
sub ecx edx +
sar ecx 1 +
inc ecx  +
push ecx  +
push edi  +
push esi  +
push dword ptr [ebx]  +
call sub_43EC3E  +
push eax  +
call sub_4083A0  +
mov ecx [ebx] +
add esp 14h +
cmp esi [ecx-8] +
jg loc_4084EC  +
mov [ecx-0Ch] esi +
xor edx edx +
mov ecx [ebx] +
pop edi  +
lea eax [edx+1] +
mov [ecx+esi*2] dx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_405FF0  +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
xor cl cl +
test eax eax +
jz loc_408535  +
test eax 0FFFF0000h +
jnz loc_408535  +
push esi  +
movzx esi ax +
push esi  +
call sub_42047F  +
test eax eax +
jz loc_40852D  +
push esi  +
push eax  +
mov ecx edi +
call loc_408430  +
pop esi  +
mov al 1 +
pop edi  +
pop ebp  +
retn 4  +
mov al cl +
pop edi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
cmp dword ptr [eax-0Ch] 0 +
lea edx [eax-10h] +
mov edi [edx] +
jz loc_408591  +
cmp dword ptr [edx+0Ch] 0 +
lea ecx [edx+0Ch] +
jge loc_408571  +
cmp dword ptr [eax-8] 0 +
jl loc_408594  +
mov dword ptr [eax-0Ch] 0 +
xor ecx ecx +
mov eax [esi] +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
***
or eax 0FFFFFFFFh +
xadd [ecx] eax +
dec eax  +
test eax eax +
jg loc_408585  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
pop edi  +
pop esi  +
retn   +
***
push 80070057h  +
call loc_405FF0  +
mov eax [ebp+arg_C] +
lea ecx [eax+eax] +
test ecx ecx +
jz loc_408603  +
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_4085C5  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp sub_43C8B1  +
cmp [ebp+arg_8] 0 +
jnz loc_4085DC  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp sub_43C8B1  +
mov eax [ebp+arg_4] +
add eax eax +
cmp eax ecx +
jnb loc_4085F6  +
call sub_43CB76  +
mov dword ptr [eax] 22h +
pop ebp  +
jmp sub_43C8B1  +
push ecx  +
push [ebp+arg_8]  +
push edx  +
call loc_438E80  +
add esp 0Ch +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
test esi esi +
jnz loc_408629  +
call loc_408540  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [ebp+8] +
test edx edx +
jz loc_4086A4  +
mov eax [edi] +
push ebx  +
mov ebx edx +
sub ebx eax +
mov ecx [eax-0Ch] +
sar ebx 1 +
mov [ebp+0Ch] ecx +
test esi esi +
js loc_4086AE  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40865F  +
push esi  +
mov ecx edi +
call sub_405E10  +
mov edx [ebp+8] +
mov ecx [edi] +
cmp ebx [ebp+0Ch] +
ja loc_408679  +
push esi  +
lea eax [ecx+ebx*2] +
push eax  +
push dword ptr [ecx-8]  +
push ecx  +
call sub_4085A0  +
add esp 10h +
jmp loc_40868B  +
lea eax [esi+esi] +
push eax  +
push edx  +
mov edx [ecx-8] +
add edx edx +
call sub_4060B0  +
add esp 8 +
mov eax [edi] +
pop ebx  +
cmp esi [eax-8] +
jg loc_4086A4  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_405FF0  +
push 80070057h  +
call loc_405FF0  +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jnz loc_4086DB  +
xor eax eax +
push eax  +
push edx  +
call loc_408610  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4086E1  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_408610  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452D88  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_4167F5  +
xor edx edx +
mov ecx eax +
test ecx ecx +
setnz dl  +
test edx edx +
jnz loc_408746  +
push 80004005h  +
call loc_405FF0  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
test edx edx +
jz loc_408794  +
test edx 0FFFF0000h +
jnz loc_40877E  +
movzx edi dx +
push edi  +
call sub_42047F  +
test eax eax +
jz loc_40879F  +
push edi  +
push eax  +
mov ecx esi +
call loc_408430  +
jmp loc_40879F  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_408783  +
sub ecx edi +
sar ecx 1 +
jmp loc_408796  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_408610  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_461894 +
jz loc_4087DD  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_461894 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452DB8  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
push ecx  +
lea ecx [ebp+var_20] +
call sub_4089C0  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_20] +
mov [ebp+var_14] esi +
cmp esi [ebp+var_1C] +
jz loc_408872  +
mov ecx [esi] +
mov byte ptr [ebp+var_4] 1 +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
add esi 4 +
jmp loc_40883E  +
mov eax offset loc_408863 +
retn   +
mov esi [ebp-14h] +
mov dword ptr [ebp-4] 0 +
add esi 4 +
jmp loc_40883E  +
lea ecx [ebp+var_20] +
call sub_40CB70  +
mov ecx [ebp+var_20] +
test ecx ecx +
jz loc_408890  +
mov eax [ebp+var_18] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_4088E0  +
test [ebp+arg_0] 1 +
jz loc_4088CC  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [esi] offset off_461888 +
mov eax dword_473B44 +
mov edx dword_473B48 +
cmp eax edx +
jz loc_408929  +
cmp [eax] esi +
jz loc_40890B  +
add eax 4 +
cmp eax edx +
jnz loc_4088F8  +
mov dword ptr [esi] offset off_461894 +
pop esi  +
retn   +
cmp eax edx +
jz loc_408929  +
lea ecx [eax+4] +
sub edx ecx +
and edx 0FFFFFFFCh +
push edx  +
push ecx  +
push eax  +
call loc_438E80  +
add esp 0Ch +
sub dword_473B48 4 +
mov dword ptr [esi] offset off_461894 +
pop esi  +
retn   +
***
mov ecx dword_473B48 +
push esi  +
mov esi [ebp+arg_0] +
cmp esi ecx +
jnb loc_408986  +
mov eax dword_473B44 +
cmp eax esi +
ja loc_408986  +
sub esi eax +
sar esi 2 +
cmp ecx dword_473B4C +
jnz loc_40897D  +
push ecx  +
mov ecx offset dword_473B44 +
call loc_408A20  +
mov ecx dword_473B48 +
mov eax dword_473B44 +
test ecx ecx +
jz loc_4089AD  +
mov eax [eax+esi*4] +
jmp loc_4089A5  +
cmp ecx dword_473B4C +
jnz loc_40899F  +
push ecx  +
mov ecx offset dword_473B44 +
call loc_408A20  +
mov ecx dword_473B48 +
test ecx ecx +
jz loc_4089AD  +
mov eax [esi] +
mov [ecx] eax +
mov ecx dword_473B48 +
add ecx 4 +
mov dword_473B48 ecx +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
mov eax dword_473B48 +
sub eax dword_473B44 +
sar eax 2 +
push eax  +
call loc_408A90  +
test al al +
jz loc_408A19  +
mov eax dword_473B48 +
mov ecx dword_473B44 +
sub eax ecx +
sar eax 2 +
push esi  +
lea esi ds:0[eax*4] +
push esi  +
push ecx  +
push dword ptr [edi]  +
call loc_438E80  +
add esp 0Ch +
add eax esi +
mov [edi+4] eax +
pop esi  +
mov eax edi +
pop edi  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+8] +
mov eax edi +
mov edx [esi+4] +
sub eax edx +
sar eax 2 +
cmp eax 1 +
jnb loc_408A73  +
mov ecx [esi] +
sub edx ecx +
push ebx  +
mov ebx 3FFFFFFFh +
sar edx 2 +
mov eax ebx +
sub eax edx +
cmp eax 1 +
jb loc_408A78  +
sub edi ecx +
inc edx  +
sar edi 2 +
mov eax edi +
shr eax 1 +
sub ebx eax +
cmp ebx edi +
lea ecx [eax+edi] +
mov eax 0 +
cmovb ecx eax +
cmp ecx edx +
cmovb ecx edx +
push ecx  +
mov ecx esi +
call sub_4028E0  +
pop ebx  +
pop edi  +
pop esi  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+8] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
test edi edi +
jnz loc_408ABA  +
pop edi  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
cmp edi 3FFFFFFFh +
ja loc_408AE7  +
push ecx  +
mov edx 4 +
mov ecx edi +
call loc_401DB0  +
mov [esi] eax +
add esp 4 +
mov [esi+4] eax +
mov eax [esi] +
lea eax [eax+edi*4] +
mov [esi+8] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aVectorTTooLong  +
call sub_437F90  +
push ecx  +
push esi  +
push edi  +
push 58h  +
mov edi ecx +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_408B6C  +
mov dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_4618D8 +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
mov [esi+10h] ax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov dword ptr [esi+54h] 7 +
mov [esi+50h] eax +
mov [esi+40h] ax +
jmp loc_408B6E  +
xor esi esi +
mov edx [esi] +
mov ecx esi +
push edi  +
mov dword ptr [esi+4] 2 +
call dword ptr [edx+4]  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 58h  +
mov edi edx +
mov ebx ecx +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_408BFF  +
mov dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_4618D8 +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
mov [esi+10h] ax +
mov [esi+28h] eax +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+34h] eax +
mov [esi+38h] eax +
mov [esi+3Ch] eax +
mov dword ptr [esi+54h] 7 +
mov [esi+50h] eax +
mov [esi+40h] ax +
jmp loc_408C01  +
xor esi esi +
mov eax [esi] +
mov ecx esi +
push ebx  +
mov dword ptr [esi+4] 2 +
call dword ptr [eax+4]  +
cmp word ptr [edi] 0 +
jnz loc_408C2B  +
xor eax eax +
lea ecx [esi+40h] +
push eax  +
push edi  +
call loc_402720  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_408C30  +
sub eax edx +
lea ecx [esi+40h] +
sar eax 1 +
push eax  +
push edi  +
call loc_402720  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
push 40h  +
mov edi edx +
mov ebx ecx +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_408CBD  +
mov dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_462500 +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
mov [esi+10h] ax +
mov dword ptr [esi+3Ch] 7 +
mov [esi+38h] eax +
mov [esi+28h] ax +
jmp loc_408CBF  +
xor esi esi +
mov edx [esi] +
mov ecx esi +
push ebx  +
mov dword ptr [esi+4] 3 +
call dword ptr [edx+4]  +
mov edx [esi] +
mov ecx esi +
push edi  +
call dword ptr [edx+10h]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
push edi  +
push 28h  +
mov edi ecx +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_408D2C  +
mov dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_462530 +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
mov [esi+10h] ax +
jmp loc_408D2E  +
xor esi esi +
mov edx [esi] +
mov ecx esi +
push edi  +
mov dword ptr [esi+4] 7 +
call dword ptr [edx+10h]  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_46189C +
jz loc_408D6D  +
push 10h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword_473C48 8 +
mov eax offset dword_473C34 +
cmovnb eax dword_473C34 +
retn   +
***
retn   +
***
retn   +
***
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452D18  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_2C] esi +
push 9  +
xor eax eax +
mov [ebp+var_14] 7 +
push offset aUninstall_0  +
lea ecx [ebp+var_28] +
mov [ebp+var_18] 0 +
mov word ptr [ebp+var_28] ax +
call loc_402720  +
mov [ebp+var_4] 0 +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_462560 +
xor eax eax +
push 0FFFFFFFFh  +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
push eax  +
mov [ecx] ax +
lea eax [ebp+var_28] +
push eax  +
call loc_402A60  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_408E62  +
inc eax  +
push eax  +
push [ebp+var_28]  +
call loc_402950  +
mov dword ptr [esi] offset off_4618CC +
xor eax eax +
mov dword ptr [esi+1Ch] 0 +
mov dword ptr [esi+20h] 0 +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+54h] 7 +
mov dword ptr [esi+50h] 0 +
mov [esi+40h] ax +
mov [esi+68h] eax +
mov dword ptr [esi+6Ch] 7 +
mov [esi+58h] ax +
mov [esi+80h] eax +
mov dword ptr [esi+84h] 7 +
mov [esi+70h] ax +
mov [esi+98h] eax +
mov dword ptr [esi+9Ch] 7 +
mov [esi+88h] ax +
mov [esi+0B0h] eax +
mov dword ptr [esi+0B4h] 7 +
mov [esi+0A0h] ax +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_408F60  +
test [ebp+arg_0] 1 +
jz loc_408F4F  +
push 0B8h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452E16  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
lea edi [esi+0A0h] +
mov dword ptr [esi] offset off_4618CC +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_408FA3  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_408FB9  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+88h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_408FD5  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_408FEB  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+70h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_409004  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_40901A  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+58h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_409033  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_409049  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
lea edi [esi+40h] +
mov eax [edi+14h] +
cmp eax 8 +
jb loc_409062  +
inc eax  +
push eax  +
push dword ptr [edi]  +
call loc_402950  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_409078  +
mov edi [edi] +
xor eax eax +
mov [edi] ax +
mov [ebp+var_4] eax +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_40908D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 1 +
mov ecx [esi+38h] +
test ecx ecx +
jz loc_4090A1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 2 +
mov ecx [esi+34h] +
test ecx ecx +
jz loc_4090B5  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 3 +
mov ecx [esi+30h] +
test ecx ecx +
jz loc_4090C9  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 4 +
mov ecx [esi+2Ch] +
test ecx ecx +
jz loc_4090DD  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 5 +
mov ecx [esi+28h] +
test ecx ecx +
jz loc_4090F1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 6 +
mov ecx [esi+24h] +
test ecx ecx +
jz loc_409105  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 7 +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_409119  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 8 +
mov ecx [esi+1Ch] +
test ecx ecx +
jz loc_40912D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword ptr [esi] offset off_462560 +
mov eax [esi+18h] +
cmp eax 8 +
jb loc_409145  +
inc eax  +
push eax  +
push dword ptr [esi+4]  +
call loc_402950  +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 8 +
jb loc_409172  +
mov eax [esi+4] +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov [esi+4] ax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
mov [ebp-4] ecx +
test eax eax +
jz loc_4092D0  +
push esi  +
mov esi [eax+28h] +
cmp esi [eax+2Ch] +
jz loc_4092C7  +
push ebx  +
push edi  +
push 0  +
push offset off_470768  +
push offset off_4706E4  +
push 0  +
push dword ptr [esi]  +
call sub_452444  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_4092B6  +
mov edx [edi] +
mov ecx edi +
call dword ptr [edx+0Ch]  +
mov edx [edi] +
mov ecx edi +
mov ebx eax +
call dword ptr [edx+18h]  +
mov edi eax +
mov ecx 0Ah +
xor eax eax +
cmp ds:word_461A8C ax +
cmovz ecx eax +
push ecx  +
push offset word_461A8C  +
push dword ptr [ebx+10h]  +
push ecx  +
mov ecx ebx +
call loc_403170  +
test eax eax +
jnz loc_409218  +
mov ecx [ebp-4] +
add ecx 40h +
jmp loc_4092A8  +
xor ecx ecx +
mov eax 0Bh +
cmp ds:word_461A44 cx +
cmovz eax ecx +
push eax  +
push offset word_461A44  +
push dword ptr [ebx+10h]  +
push ecx  +
mov ecx ebx +
call loc_403170  +
test eax eax +
jnz loc_409246  +
mov ecx [ebp-4] +
add ecx 58h +
jmp loc_4092A8  +
xor ecx ecx +
mov eax 0Bh +
cmp ds:word_461A5C cx +
cmovz eax ecx +
push eax  +
push offset word_461A5C  +
push dword ptr [ebx+10h]  +
push ecx  +
mov ecx ebx +
call loc_403170  +
test eax eax +
jnz loc_409274  +
mov ecx [ebp-4] +
add ecx 70h +
jmp loc_4092A8  +
push offset aUninstlang  +
mov ecx ebx +
call sub_407BA0  +
test eax eax +
jnz loc_40928F  +
mov ecx [ebp-4] +
add ecx 88h +
jmp loc_4092A8  +
push offset aXmlversion  +
mov ecx ebx +
call sub_407BA0  +
test eax eax +
jnz loc_4092B6  +
mov ecx [ebp-4] +
add ecx 0A0h +
cmp ecx edi +
jz loc_4092B6  +
push 0FFFFFFFFh  +
push 0  +
push edi  +
call loc_402A60  +
mov eax [ebp+8] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_4091B3  +
pop edi  +
pop ebx  +
mov al 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset unk_46BAFC  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] offset off_461874 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-8] offset dword_473C4C +
push eax  +
movq qword ptr [ebp-10h] xmm0 +
call sub_43A3FD  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452E9E  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
cmp dword ptr [edi+18h] 8 +
lea ecx [edi+4] +
jb loc_40933B  +
mov ecx [ecx] +
call sub_408B00  +
mov esi eax +
mov [ebp-48h] esi +
mov dword ptr [ebp-4] 0 +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_4098F1  +
cmp dword ptr [edi+54h] 8 +
lea edx [edi+40h] +
jb loc_409363  +
mov edx [edx] +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
cmp [edx] ax +
jnz loc_409380  +
xor ecx ecx +
jmp loc_409394  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409385  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-44h] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp-4] 2 +
xor ecx ecx +
mov [ebp-2Ch] ax +
cmp ds:word_461A8C cx +
mov eax 0Ah +
mov dword ptr [ebp-18h] 7 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset word_461A8C  +
lea ecx [ebp-2Ch] +
call loc_402720  +
mov byte ptr [ebp-4] 3 +
cmp dword ptr [ebp-1Ch] 0 +
setz al  +
test al al +
jnz loc_40940B  +
cmp dword ptr [ebp-30h] 8 +
lea edx [ebp-44h] +
lea ecx [ebp-2Ch] +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ecx [ebp-2Ch] +
call sub_408C60  +
test eax eax +
jz loc_40940B  +
push eax  +
mov ecx esi +
call sub_409C50  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_40941D  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
cmp eax 8 +
jb loc_409447  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_402950  +
cmp dword ptr [edi+6Ch] 8 +
lea edx [edi+58h] +
jb loc_409452  +
mov edx [edx] +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
cmp [edx] ax +
jnz loc_40946F  +
xor ecx ecx +
jmp loc_409483  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409474  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-44h] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp-4] 4 +
xor ecx ecx +
mov [ebp-2Ch] ax +
cmp ds:word_461A44 cx +
mov eax 0Bh +
mov dword ptr [ebp-18h] 7 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset word_461A44  +
lea ecx [ebp-2Ch] +
call loc_402720  +
mov byte ptr [ebp-4] 5 +
cmp dword ptr [ebp-1Ch] 0 +
setz al  +
test al al +
jnz loc_4094FA  +
cmp dword ptr [ebp-30h] 8 +
lea edx [ebp-44h] +
lea ecx [ebp-2Ch] +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ecx [ebp-2Ch] +
call sub_408C60  +
test eax eax +
jz loc_4094FA  +
push eax  +
mov ecx esi +
call sub_409C50  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_40950C  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
cmp eax 8 +
jb loc_409536  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_402950  +
cmp dword ptr [edi+9Ch] 8 +
lea edx [edi+88h] +
jb loc_409547  +
mov edx [edx] +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
cmp [edx] ax +
jnz loc_409564  +
xor ecx ecx +
jmp loc_40957F  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409570  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-44h] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp-4] 6 +
xor ecx ecx +
mov [ebp-2Ch] ax +
cmp word ptr ds:aUninstlang cx +
mov eax 0Ah +
mov dword ptr [ebp-18h] 7 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset aUninstlang  +
lea ecx [ebp-2Ch] +
call loc_402720  +
mov byte ptr [ebp-4] 7 +
cmp dword ptr [ebp-1Ch] 0 +
setz al  +
test al al +
jnz loc_4095F6  +
cmp dword ptr [ebp-30h] 8 +
lea edx [ebp-44h] +
lea ecx [ebp-2Ch] +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ecx [ebp-2Ch] +
call sub_408C60  +
test eax eax +
jz loc_4095F6  +
push eax  +
mov ecx esi +
call sub_409C50  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_409608  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
cmp eax 8 +
jb loc_409632  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_402950  +
cmp dword ptr [edi+84h] 8 +
lea edx [edi+70h] +
jb loc_409640  +
mov edx [edx] +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
cmp [edx] ax +
jnz loc_40965D  +
xor ecx ecx +
jmp loc_409671  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409662  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-44h] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp-4] 8 +
xor ecx ecx +
mov [ebp-2Ch] ax +
cmp ds:word_461A5C ax +
mov eax 0Bh +
mov dword ptr [ebp-18h] 7 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset word_461A5C  +
lea ecx [ebp-2Ch] +
call loc_402720  +
mov byte ptr [ebp-4] 9 +
cmp dword ptr [ebp-1Ch] 0 +
setz al  +
test al al +
jnz loc_4096E8  +
cmp dword ptr [ebp-30h] 8 +
lea edx [ebp-44h] +
lea ecx [ebp-2Ch] +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ecx [ebp-2Ch] +
call sub_408C60  +
test eax eax +
jz loc_4096E8  +
push eax  +
mov ecx esi +
call sub_409C50  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_4096FA  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
cmp eax 8 +
jb loc_409724  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_402950  +
cmp dword ptr [edi+0B4h] 8 +
lea edx [edi+0A0h] +
jb loc_409735  +
mov edx [edx] +
xor eax eax +
mov dword ptr [ebp-30h] 7 +
mov dword ptr [ebp-34h] 0 +
mov [ebp-44h] ax +
cmp [edx] ax +
jnz loc_409752  +
xor ecx ecx +
jmp loc_409766  +
mov ecx edx +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409757  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-44h] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp-4] 0Ah +
xor ecx ecx +
mov [ebp-2Ch] ax +
cmp word ptr ds:aXmlversion ax +
mov eax 0Ah +
mov dword ptr [ebp-18h] 7 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset aXmlversion  +
lea ecx [ebp-2Ch] +
call loc_402720  +
mov byte ptr [ebp-4] 0Bh +
cmp dword ptr [ebp-1Ch] 0 +
setz al  +
test al al +
jnz loc_4097DD  +
cmp dword ptr [ebp-30h] 8 +
lea edx [ebp-44h] +
lea ecx [ebp-2Ch] +
cmovnb edx [ebp-44h] +
cmp dword ptr [ebp-18h] 8 +
cmovnb ecx [ebp-2Ch] +
call sub_408C60  +
test eax eax +
jz loc_4097DD  +
push eax  +
mov ecx esi +
call sub_409C50  +
mov eax [ebp-18h] +
cmp eax 8 +
jb loc_4097EF  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [ebp-2Ch] ax +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 7 +
mov dword ptr [ebp-1Ch] 0 +
cmp eax 8 +
jb loc_409819  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_402950  +
mov ecx [edi+1Ch] +
test ecx ecx +
jz loc_409831  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_409831  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+20h] +
test ecx ecx +
jz loc_409849  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_409849  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_409861  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_409861  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+38h] +
test ecx ecx +
jz loc_409879  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_409879  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_409891  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_409891  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+30h] +
test ecx ecx +
jz loc_4098A9  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_4098A9  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+34h] +
test ecx ecx +
jz loc_4098C1  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_4098C1  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+3Ch] +
test ecx ecx +
jz loc_4098D9  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_4098D9  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov ecx [edi+2Ch] +
test ecx ecx +
jz loc_4098F1  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test eax eax +
jz loc_4098F1  +
push eax  +
mov ecx esi +
call sub_409BD0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_409950  +
test [ebp+arg_0] 1 +
jz loc_40993C  +
push 58h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov dword ptr [edi] offset off_4618D8 +
mov esi [edi+34h] +
cmp esi [edi+38h] +
jz loc_409976  +
mov ecx [esi] +
test ecx ecx +
jz loc_40996E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
add esi 4 +
cmp esi [edi+38h] +
jnz loc_409962  +
mov eax [edi+34h] +
mov [edi+38h] eax +
mov esi [edi+28h] +
cmp esi [edi+2Ch] +
jz loc_409998  +
mov ecx [esi] +
test ecx ecx +
jz loc_409990  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
add esi 4 +
cmp esi [edi+2Ch] +
jnz loc_409984  +
mov eax [edi+28h] +
lea esi [edi+40h] +
mov [edi+2Ch] eax +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4099B2  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4099C8  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov ecx [edi+34h] +
test ecx ecx +
jz loc_4099F8  +
mov eax [edi+3Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+34h] 0 +
mov dword ptr [edi+38h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_409A23  +
mov eax [edi+30h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
mov dword ptr [edi+30h] 0 +
mov eax [edi+24h] +
lea esi [edi+10h] +
cmp eax 8 +
jb loc_409A37  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_409A4D  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi] offset off_46189C +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_409A80  +
xor eax eax +
lea ecx [esi+10h] +
push eax  +
push edx  +
call loc_402720  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_409A86  +
sub eax edi +
lea ecx [esi+10h] +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_402720  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+24h] 8 +
lea eax [ecx+10h] +
jb locret_409ABB  +
mov eax [eax] +
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+34h] +
cmp eax [esi+38h] +
jz loc_409AF0  +
nop   +
mov ecx [eax] +
cmp dword ptr [ecx+4] 7 +
jz loc_409B05  +
add eax 4 +
cmp eax [esi+38h] +
jnz loc_409AE0  +
mov ecx [ebp+arg_0] +
call sub_408CE0  +
push eax  +
mov ecx esi +
call sub_409BD0  +
pop esi  +
pop ebp  +
retn 4  +
mov eax [ecx] +
pop esi  +
pop ebp  +
jmp dword ptr [eax+10h]  +
***
cmp dword_473C48 8 +
mov eax offset dword_473C34 +
cmovnb eax dword_473C34 +
retn   +
***
mov eax [ecx] +
jmp dword ptr [eax+14h]  +
***
mov eax offset dword_473C34 +
retn   +
***
mov eax [ecx] +
jmp dword ptr [eax+18h]  +
***
mov eax [ecx+38h] +
sub eax [ecx+34h] +
sar eax 2 +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ecx+38h] +
sub eax [ecx+34h] +
mov edx [ebp+8] +
sar eax 2 +
cmp edx eax +
jnb loc_409BBB  +
mov eax [ecx+38h] +
push esi  +
mov esi [ecx+34h] +
sub eax esi +
sar eax 2 +
cmp eax edx +
jbe loc_409BC1  +
mov eax [esi+edx*4] +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
pop ebp  +
retn 4  +
***
push offset aInvalidVectorT  +
call sub_437FB0  +
push ebx  +
mov ebx ecx +
lea ecx [ebp+arg_0] +
push esi  +
mov eax [ebx+38h] +
cmp ecx eax +
jnb loc_409C21  +
mov ecx [ebx+34h] +
lea edx [ebp+arg_0] +
cmp ecx edx +
ja loc_409C21  +
push edi  +
mov edi edx +
sub edi ecx +
sar edi 2 +
cmp eax [ebx+3Ch] +
jnz loc_409C01  +
push ecx  +
lea ecx [ebx+34h] +
call loc_408A20  +
mov ecx [ebx+38h] +
test ecx ecx +
jz loc_409C10  +
mov eax [ebx+34h] +
mov eax [eax+edi*4] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
add dword ptr [ebx+38h] 4 +
pop edi  +
pop esi  +
mov [eax+8] ebx +
pop ebx  +
pop ebp  +
retn 4  +
cmp eax [ebx+3Ch] +
jnz loc_409C2F  +
push ecx  +
lea ecx [ebx+34h] +
call loc_408A20  +
mov ecx [ebx+38h] +
mov eax [ebp+arg_0] +
test ecx ecx +
jz loc_409C3B  +
mov [ecx] eax +
add dword ptr [ebx+38h] 4 +
pop esi  +
mov [eax+8] ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov ecx ebx +
mov eax [ebx] +
mov [ebp+var_4] edi +
call dword ptr [eax+8]  +
push eax  +
mov ecx edi +
call sub_409CE0  +
mov ecx [edi+2Ch] +
lea esi [edi+28h] +
lea eax [ebp+arg_0] +
cmp eax ecx +
jnb loc_409CB9  +
mov eax [esi] +
lea edx [ebp+arg_0] +
cmp eax edx +
ja loc_409CB9  +
mov edi edx +
sub edi eax +
sar edi 2 +
cmp ecx [esi+8] +
jnz loc_409C98  +
push ecx  +
mov ecx esi +
call loc_408A20  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_409CA6  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
mov [ebx+8] eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
cmp ecx [esi+8] +
jnz loc_409CC6  +
push ecx  +
mov ecx esi +
call loc_408A20  +
mov eax [esi+4] +
test eax eax +
jz loc_409CCF  +
mov [eax] ebx +
add dword ptr [esi+4] 4 +
mov [ebx+8] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebx+28h] +
cmp esi [ebx+2Ch] +
jz loc_409D68  +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [esi] +
mov [ebp+var_4] ecx +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
cmp word ptr [edi] 0 +
mov edx eax +
jnz loc_409D0A  +
xor ecx ecx +
jmp loc_409D22  +
mov ecx edi +
lea eax [ecx+2] +
mov [ebp+arg_0] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_409D12  +
sub ecx [ebp+arg_0] +
sar ecx 1 +
push ecx  +
push edi  +
push dword ptr [edx+10h]  +
push ecx  +
mov ecx edx +
call loc_403170  +
test eax eax +
jz loc_409D44  +
add esi 4 +
cmp esi [ebx+2Ch] +
jnz loc_409CF4  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax [ebx+2Ch] +
lea edx [esi+4] +
sub eax edx +
and eax 0FFFFFFFCh +
push eax  +
push edx  +
push esi  +
call loc_438E80  +
mov ecx [ebp+var_4] +
add esp 0Ch +
add dword ptr [ebx+2Ch] 0FFFFFFFCh +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax+34h] +
mov [ebp-4] eax +
cmp esi [eax+38h] +
jz loc_409DDC  +
mov ebx [ebp+8] +
mov edi [esi] +
cmp dword ptr [edi+4] 2 +
jnz loc_409DD4  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
cmp word ptr [ebx] 0 +
mov edx eax +
jnz loc_409DA2  +
xor ecx ecx +
jmp loc_409DC0  +
mov ecx ebx +
lea eax [ecx+2] +
mov [ebp+8] eax +
push ecx  +
push ebx  +
push dword ptr [edx+10h]  +
push ecx  +
mov ecx edx +
call loc_403170  +
test eax eax +
jz loc_409DE7  +
mov eax [ebp-4] +
add esi 4 +
cmp esi [eax+38h] +
jnz loc_409D87  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0  +
push offset off_470740  +
push offset off_4706E4  +
push 0  +
push edi  +
call sub_452444  +
add esp 14h +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452EDE  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp-14h] ebx +
cmp dword ptr [ebx+54h] 8 +
lea edx [ebx+40h] +
jb loc_409E48  +
mov edx [edx] +
cmp dword ptr [ebx+24h] 8 +
lea ecx [ebx+10h] +
jb loc_409E53  +
mov ecx [ecx] +
call sub_408B90  +
mov edi eax +
mov [ebp-1Ch] edi +
mov dword ptr [ebp-4] 0 +
mov esi [ebx+34h] +
cmp esi [ebx+38h] +
jz loc_409ED4  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov ecx eax +
mov [ebp-10h] eax +
mov edx [eax] +
call dword ptr [edx+8]  +
push eax  +
mov ecx edi +
call sub_409CE0  +
mov edx [edi+2Ch] +
lea eax [ebp-10h] +
cmp eax edx +
jnb loc_409F80  +
mov ecx [edi+28h] +
cmp ecx eax +
ja loc_409F80  +
sub eax ecx +
sar eax 2 +
mov [ebp-18h] eax +
cmp edx [edi+30h] +
jnz loc_409F20  +
push ecx  +
lea ecx [edi+28h] +
call loc_408A20  +
mov ecx [ebp-18h] +
mov eax [edi+28h] +
lea eax [eax+ecx*4] +
mov ecx [edi+2Ch] +
test ecx ecx +
jz loc_409F34  +
mov eax [eax] +
mov [ecx] eax +
mov ecx [ebp-10h] +
mov eax [ebp-14h] +
add esi 4 +
add dword ptr [edi+2Ch] 4 +
mov [ecx+8] edi +
cmp esi [eax+2Ch] +
jnz loc_409EE0  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp ecx [edi+3Ch] +
jnz loc_409F6B  +
push ecx  +
lea ecx [edi+34h] +
call loc_408A20  +
mov eax [edi+38h] +
test eax eax +
jz loc_409EBD  +
mov ecx [ebp-10h] +
mov [eax] ecx +
jmp loc_409EC0  +
***
cmp edx [edi+30h] +
jnz loc_409F8E  +
push ecx  +
lea ecx [edi+28h] +
call loc_408A20  +
mov eax [edi+2Ch] +
test eax eax +
jz loc_409F34  +
mov ecx [ebp-10h] +
mov [eax] ecx +
jmp loc_409F37  +
***
sub esp 8 +
push ebx  +
push esi  +
mov esi edx +
mov ebx ecx +
mov [ebp+var_4] esi +
call sub_405EC0  +
push [ebp+arg_0]  +
mov [ebp+var_8] eax +
push 0  +
mov ecx [eax] +
push esi  +
push 0  +
push 0  +
push dword ptr [eax+4]  +
or ecx 2 +
push ecx  +
call sub_43EBF6  +
mov esi eax +
or eax 0FFFFFFFFh +
test esi esi +
cmovs esi eax +
add esi 2 +
lea ecx [esi+esi] +
push ecx  +
call sub_43EEDD  +
push [ebp+arg_0]  +
mov [ebx] eax +
push 0  +
push [ebp+var_4]  +
push esi  +
push eax  +
mov eax [ebp+var_8] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_43EC1A  +
add esp 3Ch +
mov ecx 0FFFFFFFFh +
test eax eax +
cmovs eax ecx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
lea eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push eax  +
call sub_409FB0  +
add esp 4 +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+8] +
mov dword ptr [ebp-4] 0 +
test edx edx +
jz loc_40A0B1  +
push esi  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-4] +
call sub_409FB0  +
mov esi [ebp-4] +
add esp 4 +
test esi esi +
jz loc_40A0B0  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40A090  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
call dword_4739FC  +
push esi  +
call sub_43CAF8  +
add esp 0Ch +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 40h +
retn   +
***
push ecx  +
mov eax dword_473A04 +
test eax eax +
jnz locret_40A2B3  +
call sub_40D2B0  +
mov dword_473A04 eax +
retn   +
***
mov eax dword_473A04 +
push esi  +
mov esi ecx +
xor ecx ecx +
cmp eax esi +
cmovz eax ecx +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_461F10 +
mov dword_473A04 eax +
mov dword ptr [esi] offset off_4625CC +
jz loc_40A2F4  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 140h +
push ecx  +
lea ecx [ebp+var_20] +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] 0 +
mov [ebp+var_14] 0 +
call loc_40D610  +
push 11Ch  +
lea eax [ebp+var_140] +
mov [ebp+var_10] 0 +
push 0  +
push eax  +
mov [ebp+var_C] 0 +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
call sub_439AB0  +
add esp 0Ch +
mov [ebp+var_140] 11Ch +
lea ecx [ebp+var_140] +
call loc_40D7D0  +
test eax eax +
jnz loc_40A37F  +
xor al al +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+var_13C] +
mov [ebp+var_10] eax +
mov eax [ebp+var_138] +
mov [ebp+var_C] eax +
mov [ebp+var_8] 0 +
mov [ebp+var_4] 0 +
call sub_40A3D0  +
test al al +
jz loc_40A3C1  +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_10] +
call sub_40D5B0  +
test al al +
jnz loc_40A379  +
call sub_40A620  +
test al al +
jnz loc_40A379  +
mov al 1 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
test edi edi +
jz loc_40A5E2  +
push edi  +
mov edi ds:LocalFree +
call edi  +
jmp loc_40A5E8  +
mov edi ds:LocalFree +
test esi esi +
jz loc_40A5EF  +
push esi  +
call edi  +
mov eax [ebp-4Ch] +
test eax eax +
jz loc_40A5FD  +
push eax  +
call ds:FreeSid  +
mov eax [ebp-58h] +
mov esi ds:CloseHandle +
test eax eax +
jz loc_40A60D  +
push eax  +
call esi  +
mov eax [ebp-50h] +
test eax eax +
jz locret_40A617  +
push eax  +
call esi  +
retn   +
***
push 0FFFFFFFEh  +
mov eax [ebp-224h] +
test eax eax +
jz loc_40A73D  +
push eax  +
call ds:WTSFreeMemory  +
mov eax [ebp-228h] +
test eax eax +
jz locret_40A74E  +
push eax  +
call ds:NetApiBufferFree  +
retn   +
***
push 0FFFFFFFFh  +
mov byte ptr [ebp+0Bh] 0 +
mov eax offset loc_40A836 +
retn   +
mov al [ebp+0Bh] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452F2C  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_473D80 +
cmp eax [ecx+4] +
jle loc_40A8DA  +
push offset dword_473D80  +
call sub_436E05  +
add esp 4 +
cmp dword_473D80 0FFFFFFFFh +
jnz loc_40A8DA  +
mov [ebp+var_4] 0 +
mov dword_473D84 0 +
mov dword_473D88 0 +
call sub_403A40  +
push offset loc_4558A0  +
mov dword_473D84 eax +
call sub_43717C  +
push offset dword_473D80  +
call sub_436DC6  +
add esp 8 +
mov eax offset dword_473D84 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_452F56  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi dword_473D84 +
mov eax [edi] +
mov [ebp-10h] eax +
cmp eax edi +
jz loc_40A96F  +
mov ebx ds:CloseHandle +
mov esi [eax+28h] +
test esi esi +
jz loc_40A960  +
cmp byte ptr [esi] 1 +
jnz loc_40A94F  +
mov eax [esi+4] +
test eax eax +
jz loc_40A94F  +
push eax  +
call ebx  +
push dword ptr [esi+4]  +
call ds:ReleaseMutex  +
push 8  +
push esi  +
call sub_436CA0  +
mov edi dword_473D84 +
add esp 8 +
lea ecx [ebp-10h] +
call loc_403A70  +
mov eax [ebp-10h] +
cmp eax edi +
jnz loc_40A930  +
mov dword ptr [ebp-4] 0 +
mov ecx offset dword_473D84 +
push dword ptr [edi+4]  +
call loc_403510  +
mov eax dword_473D84 +
mov [eax+4] eax +
mov eax dword_473D84 +
mov [eax] eax +
mov eax dword_473D84 +
mov [eax+8] eax +
mov eax dword_473D84 +
push eax  +
mov dword_473D88 0 +
push dword ptr [eax]  +
lea eax [ebp-10h] +
push eax  +
call sub_40A9E0  +
push dword_473D84  +
call sub_413A17  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452F86  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx dword_473D84 +
mov esi [ebp+arg_4] +
mov eax [ebp+arg_8] +
cmp esi [ecx] +
jnz loc_40AA6B  +
cmp eax ecx +
jnz loc_40AA6B  +
mov [ebp+var_4] 0 +
push dword ptr [ecx+4]  +
mov ecx offset dword_473D84 +
call loc_403510  +
mov eax dword_473D84 +
mov [eax+4] eax +
mov eax dword_473D84 +
mov [eax] eax +
mov eax dword_473D84 +
mov [eax+8] eax +
mov eax dword_473D84 +
mov dword_473D88 0 +
mov ecx [eax] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
cmp esi eax +
jz loc_40AA8A  +
nop   +
lea ecx [ebp+arg_4] +
call loc_403A70  +
push esi  +
lea eax [ebp+var_10] +
push eax  +
call loc_40AAB0  +
mov esi [ebp+arg_4] +
cmp esi [ebp+arg_8] +
jnz loc_40AA70  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
lea ecx [ebp+0Ch] +
push esi  +
push edi  +
call loc_403A70  +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40AACE  +
mov esi [ebx+8] +
jmp loc_40AAE9  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40AADB  +
mov esi ecx +
jmp loc_40AAE9  +
mov edi [ebp+0Ch] +
mov esi [edi+8] +
cmp edi ebx +
jnz loc_40AB80  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [ebx+4] +
jnz loc_40AAF5  +
mov [esi+4] eax +
mov ecx dword_473D84 +
cmp [ecx+4] ebx +
jnz loc_40AB05  +
mov [ecx+4] esi +
jmp loc_40AB10  +
cmp [eax] ebx +
jnz loc_40AB0D  +
mov [eax] esi +
jmp loc_40AB10  +
mov [eax+8] esi +
mov ecx dword_473D84 +
cmp [ecx] ebx +
jnz loc_40AB42  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_40AB24  +
mov edx eax +
jmp loc_40AB3A  +
mov ecx [esi] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40AB3A  +
nop   +
mov edx ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40AB30  +
mov ecx dword_473D84 +
mov [ecx] edx +
mov edi dword_473D84 +
cmp [edi+8] ebx +
jnz loc_40ABDA  +
cmp byte ptr [esi+0Dh] 0 +
jz loc_40AB5E  +
mov edx eax +
mov [edi+8] edx +
jmp loc_40ABDA  +
mov ecx [esi+8] +
mov edx esi +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40AB7B  +
mov edx ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40AB70  +
mov [edi+8] edx +
jmp loc_40ABDA  +
mov [ecx+4] edi +
mov eax [ebx] +
mov [edi] eax +
cmp edi [ebx+8] +
jnz loc_40AB90  +
mov eax edi +
jmp loc_40ABAA  +
cmp byte ptr [esi+0Dh] 0 +
mov eax [edi+4] +
jnz loc_40AB9C  +
mov [esi+4] eax +
mov [eax] esi +
mov ecx [ebx+8] +
mov [edi+8] ecx +
mov ecx [ebx+8] +
mov [ecx+4] edi +
mov ecx dword_473D84 +
cmp [ecx+4] ebx +
jnz loc_40ABBA  +
mov [ecx+4] edi +
jmp loc_40ABC8  +
mov ecx [ebx+4] +
cmp [ecx] ebx +
jnz loc_40ABC5  +
mov [ecx] edi +
jmp loc_40ABC8  +
mov [ecx+8] edi +
mov ecx [ebx+4] +
mov [edi+4] ecx +
mov cl [ebx+0Ch] +
mov dl [edi+0Ch] +
mov [edi+0Ch] cl +
mov [ebx+0Ch] dl +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_40AE5B  +
mov ecx dword_473D84 +
cmp esi [ecx+4] +
jz loc_40AE57  +
cmp byte ptr [esi+0Ch] 1 +
jnz loc_40AE57  +
mov edx [eax] +
cmp esi edx +
jnz loc_40ACBD  +
mov edx [eax+8] +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_40AC57  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax+8] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40AC2B  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_473D84 +
cmp eax [ecx+4] +
jnz loc_40AC41  +
mov [ecx+4] edx +
jmp loc_40AC4F  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_40AC4C  +
mov [ecx] edx +
jmp loc_40AC4F  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov edx [eax+8] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_40AD2E  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_40AC76  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jz loc_40AD2A  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_40AD5F  +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi+8] +
mov [edx] ecx +
mov ecx [edi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40ACA0  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword_473D84 +
cmp edx [ecx+4] +
jnz loc_40AD47  +
mov [ecx+4] edi +
jmp loc_40AD56  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_40AD0B  +
mov byte ptr [edx+0Ch] 1 +
mov edx [eax] +
mov byte ptr [eax+0Ch] 0 +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40ACDE  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_473D84 +
cmp eax [ecx+4] +
jnz loc_40ACF4  +
mov [ecx+4] edx +
jmp loc_40AD03  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40AD01  +
mov [ecx+8] edx +
jmp loc_40AD03  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov edx [eax] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_40AD2E  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_40ADB8  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_40ADB8  +
mov byte ptr [edx+0Ch] 0 +
mov ecx dword_473D84 +
mov esi eax +
mov eax [eax+4] +
cmp esi [ecx+4] +
jnz loc_40ABF3  +
jmp loc_40AE57  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_40AD54  +
mov [ecx+8] edi +
jmp loc_40AD56  +
mov [ecx] edi +
mov [edi+8] edx +
mov [edx+4] edi +
mov edx [eax+8] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40AD83  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_473D84 +
cmp eax [ecx+4] +
jnz loc_40AD9E  +
mov [ecx+4] edx +
mov [edx] eax +
jmp loc_40AE54  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_40ADAE  +
mov [ecx] edx +
mov [edx] eax +
jmp loc_40AE54  +
mov [ecx+8] edx +
mov [edx] eax +
jmp loc_40AE54  +
mov ecx [edx] +
cmp byte ptr [ecx+0Ch] 1 +
jnz loc_40AE09  +
mov ecx [edx+8] +
mov byte ptr [ecx+0Ch] 1 +
mov edi [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov ecx [edi] +
mov [edx+8] ecx +
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40ADDE  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [edi+4] ecx +
mov ecx dword_473D84 +
cmp edx [ecx+4] +
jnz loc_40ADF4  +
mov [ecx+4] edi +
jmp loc_40AE02  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40ADFF  +
mov [ecx] edi +
jmp loc_40AE02  +
mov [ecx+8] edi +
mov [edi] edx +
mov [edx+4] edi +
mov edx [eax] +
mov cl [eax+0Ch] +
mov [edx+0Ch] cl +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [ecx+0Ch] 1 +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40AE2C  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx dword_473D84 +
cmp eax [ecx+4] +
jnz loc_40AE42  +
mov [ecx+4] edx +
jmp loc_40AE51  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40AE4F  +
mov [ecx+8] edx +
jmp loc_40AE51  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov byte ptr [esi+0Ch] 1 +
mov eax [ebx+24h] +
lea esi [ebx+10h] +
cmp eax 8 +
jb loc_40AE6F  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40AE85  +
mov esi [esi] +
xor eax eax +
push ebx  +
mov [esi] ax +
call sub_413A17  +
mov eax dword_473D88 +
add esp 4 +
mov ecx [ebp+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz loc_40AEA8  +
dec eax  +
mov dword_473D88 eax +
mov eax [ebp+8] +
mov [eax] ecx +
pop ebp  +
retn 8  +
***
mov dword_473A0C 0 +
test esi esi +
jz loc_40AF10  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40AEE6  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40AEFE  +
mov eax [esi] +
jmp loc_40AF00  +
mov eax esi +
xor ecx ecx +
push 18h  +
push esi  +
mov [eax] cx +
call sub_436CA0  +
add esp 8 +
mov esi dword_473A08 +
mov dword_473A10 0 +
test esi esi +
jz loc_40AF5F  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40AF35  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40AF4D  +
mov eax [esi] +
jmp loc_40AF4F  +
mov eax esi +
xor ecx ecx +
push 18h  +
push esi  +
mov [eax] cx +
call sub_436CA0  +
add esp 8 +
mov dword_473A08 0 +
pop esi  +
retn   +
***
push edi  +
mov edi ecx +
test esi esi +
jz loc_40AFB9  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40AF8F  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40AFA7  +
mov eax [esi] +
jmp loc_40AFA9  +
mov eax esi +
xor ecx ecx +
push 18h  +
push esi  +
mov [eax] cx +
call sub_436CA0  +
add esp 8 +
mov dword_473A10 0 +
test edi edi +
jz loc_40AFEC  +
push 18h  +
call sub_4139EA  +
add esp 4 +
test eax eax +
jz loc_40AFE5  +
push edi  +
mov ecx eax +
call loc_402650  +
pop edi  +
mov dword_473A10 eax +
pop esi  +
retn   +
xor eax eax +
mov dword_473A10 eax +
pop edi  +
pop esi  +
retn   +
***
push edi  +
mov edi ecx +
test esi esi +
jz loc_40B039  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40B00F  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40B027  +
mov eax [esi] +
jmp loc_40B029  +
mov eax esi +
xor ecx ecx +
push 18h  +
push esi  +
mov [eax] cx +
call sub_436CA0  +
add esp 8 +
mov dword_473A08 0 +
test edi edi +
jz loc_40B06C  +
push 18h  +
call sub_4139EA  +
add esp 4 +
test eax eax +
jz loc_40B065  +
push edi  +
mov ecx eax +
call loc_402650  +
pop edi  +
mov dword_473A08 eax +
pop esi  +
retn   +
xor eax eax +
mov dword_473A08 eax +
pop edi  +
pop esi  +
retn   +
***
mov eax dword_473A0C +
test eax eax +
jz loc_40B081  +
mov eax [eax] +
pop ebp  +
jmp eax  +
pop ebp  +
retn   +
***
mov eax dword_473A0C +
test eax eax +
jz loc_40B0A2  +
mov eax [eax+4] +
pop ebp  +
jmp eax  +
pop ebp  +
retn   +
***
mov edx dword_473A0C +
test edx edx +
jz loc_40B110  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_40B0DB  +
mov eax dword_473A08 +
test eax eax +
jz loc_40B0D7  +
cmp dword ptr [eax+14h] 8 +
jb loc_40B0D9  +
mov eax [eax] +
jmp loc_40B0D9  +
xor eax eax +
mov ecx eax +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_40B0F7  +
mov eax dword_473A10 +
test eax eax +
jz loc_40B0F5  +
cmp dword ptr [eax+14h] 8 +
jb loc_40B0F7  +
mov eax [eax] +
jmp loc_40B0F7  +
xor eax eax +
push esi  +
lea esi [ebp+arg_14] +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push ecx  +
push eax  +
push [ebp+arg_0]  +
mov eax [edx+8] +
call eax  +
add esp 18h +
pop esi  +
pop ebp  +
retn   +
***
mov edx dword_473A0C +
test edx edx +
jz loc_40B173  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_40B14B  +
mov eax dword_473A08 +
test eax eax +
jz loc_40B147  +
cmp dword ptr [eax+14h] 8 +
jb loc_40B149  +
mov eax [eax] +
jmp loc_40B149  +
xor eax eax +
mov ecx eax +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_40B167  +
mov eax dword_473A10 +
test eax eax +
jz loc_40B165  +
cmp dword ptr [eax+14h] 8 +
jb loc_40B167  +
mov eax [eax] +
jmp loc_40B167  +
xor eax eax +
mov [ebp+arg_8] ecx +
mov [ebp+arg_4] eax +
mov eax [edx+8] +
pop ebp  +
jmp eax  +
pop ebp  +
retn   +
***
mov eax dword_473A0C +
test eax eax +
jz loc_40B18E  +
mov eax [eax+0Ch] +
jmp eax  +
xor eax eax +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452FF3  +
mov eax large fs:0 +
push eax  +
sub esp 6Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_74] esi +
mov [ebp+var_78] esi +
mov dword ptr [esi] 0 +
mov [ebp+var_4] 0 +
mov dword ptr [esi+4] 0 +
push 1  +
mov byte ptr [ebp+var_4] 1 +
call sub_4139EA  +
mov edi eax +
add esp 4 +
mov eax [esi+4] +
mov [ebp+var_74] edi +
cmp edi eax +
jz loc_40B210  +
test eax eax +
jz loc_40B210  +
push 1  +
push eax  +
call sub_436CA0  +
add esp 8 +
lea ecx [ebp+var_40] +
mov [esi+4] edi +
call loc_40DAF0  +
xor eax eax +
mov byte ptr [ebp+var_4] 2 +
push 0FFFFFFFFh  +
push eax  +
mov word ptr [ebp+pszPath] ax +
lea ecx [ebp+pszPath] +
lea eax [ebp+var_40] +
mov [ebp+var_14] 7 +
push eax  +
mov [ebp+var_18] 0 +
call loc_402A60  +
cmp [ebp+var_14] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_40B26E  +
cmp [ebp+var_14] 8 +
lea eax [ebp+pszPath] +
push 0  +
cmovnb eax [ebp+pszPath] +
push eax  +
push 0  +
call ds:SHCreateDirectoryExW  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40B280  +
inc eax  +
push eax  +
push [ebp+pszPath]  +
call loc_402950  +
lea eax [ebp+var_58] +
push eax  +
call loc_40DFC0  +
lea eax [ebp+var_58] +
mov byte ptr [ebp+var_4] 3 +
push eax  +
lea ecx [ebp+var_70] +
call sub_40B6F0  +
mov edx eax +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+pszPath] +
call sub_40B7E0  +
add esp 4 +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 5 +
call loc_4051B0  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40B2CD  +
inc eax  +
push eax  +
push [ebp+pszPath]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp+var_4] 3 +
mov word ptr [ebp+pszPath] ax +
mov eax [ebp+var_5C] +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
cmp eax 8 +
jb loc_40B2F7  +
inc eax  +
push eax  +
push [ebp+var_70]  +
call loc_402950  +
cmp [ebp+var_2C] 8 +
lea ecx [ebp+var_40] +
cmovnb ecx [ebp+var_40] +
call sub_40DA50  +
mov edi [esi] +
mov ebx eax +
cmp ebx edi +
jz loc_40B333  +
test edi edi +
jz loc_40B333  +
mov eax [edi] +
test eax eax +
jz loc_40B328  +
push eax  +
call sub_4401DF  +
add esp 4 +
mov dword ptr [edi] 0 +
push 4  +
push edi  +
call sub_436CA0  +
add esp 8 +
mov eax [ebp+var_44] +
mov [esi] ebx +
cmp eax 8 +
jb loc_40B347  +
inc eax  +
push eax  +
push [ebp+var_58]  +
call loc_402950  +
mov ecx [ebp+var_2C] +
xor eax eax +
mov [ebp+var_44] 7 +
mov [ebp+var_48] 0 +
mov word ptr [ebp+var_58] ax +
cmp ecx 8 +
jb loc_40B36D  +
inc ecx  +
push ecx  +
push [ebp+var_40]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453037  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi dword_473A14 +
test esi esi +
jnz loc_40B3F6  +
push 8  +
call sub_4139EA  +
add esp 4 +
mov [ebp-10h] eax +
mov [ebp-4] esi +
test eax eax +
jz loc_40B3DF  +
mov ecx eax +
call sub_40B1A0  +
mov esi eax +
jmp loc_40B3E1  +
xor esi esi +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 1 +
call sub_40B4B0  +
mov dword_473A14 esi +
mov eax [esi] +
mov edi [eax] +
test edi edi +
jz loc_40B42C  +
mov edx [ebp+8] +
test edx edx +
jz loc_40B42C  +
mov ecx edx +
lea ebx [ecx+2] +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_40B43D  +
push eax  +
call sub_4403ED  +
add esp 4 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test esi esi +
jz loc_40B4A0  +
mov eax [esi+4] +
test eax eax +
jz loc_40B46D  +
push 1  +
push eax  +
call sub_436CA0  +
add esp 8 +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_40B494  +
mov eax [edi] +
test eax eax +
jz loc_40B489  +
push eax  +
call sub_4401DF  +
add esp 4 +
mov dword ptr [edi] 0 +
push 4  +
push edi  +
call sub_436CA0  +
add esp 8 +
push 8  +
push esi  +
call sub_436CA0  +
add esp 8 +
pop edi  +
mov dword_473A14 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453078  +
mov eax large fs:0 +
push eax  +
sub esp 5Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea ecx [ebp+var_58] +
call loc_40DAF0  +
xor eax eax +
mov [ebp+var_4] 0 +
xor ecx ecx +
mov word ptr [ebp+var_40] ax +
cmp ds:word_462260 cx +
mov eax 4 +
mov [ebp+var_2C] 7 +
cmovz eax ecx +
mov [ebp+var_30] 0 +
push eax  +
push offset word_462260  +
lea ecx [ebp+var_40] +
call loc_402720  +
xor eax eax +
mov byte ptr [ebp+var_4] 1 +
xor ecx ecx +
mov word ptr [ebp+var_28] ax +
cmp ds:word_462234 cx +
mov eax 15h +
mov [ebp+var_14] 7 +
cmovz eax ecx +
mov [ebp+var_18] 0 +
push eax  +
push offset word_462234  +
lea ecx [ebp+var_28] +
call loc_402720  +
lea eax [ebp+var_40] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea edx [ebp+var_58] +
lea ecx [ebp+lpFileName] +
call loc_40B980  +
mov eax [ebp+var_14] +
add esp 8 +
cmp eax 8 +
jb loc_40B580  +
inc eax  +
push eax  +
push [ebp+var_28]  +
call loc_402950  +
xor eax eax +
mov [ebp+var_14] 7 +
mov word ptr [ebp+var_28] ax +
mov eax [ebp+var_2C] +
mov [ebp+var_18] 0 +
cmp eax 8 +
jb loc_40B5A6  +
inc eax  +
push eax  +
push [ebp+var_40]  +
call loc_402950  +
mov esi [ebp+var_60] +
mov eax 2AAAAAABh +
mov ebx [ebp+lpFileName] +
mov ecx esi +
sub ecx ebx +
imul  ecx +
sar edx 2 +
mov edi edx +
shr edi 1Fh +
add edi edx +
cmp edi 32h +
jb loc_40B5F0  +
add edi 0FFFFFFCEh +
test edi edi +
jle loc_40B5F0  +
mov esi ebx +
nop   +
cmp dword ptr [esi+14h] 8 +
jb loc_40B5DA  +
mov eax [esi] +
jmp loc_40B5DC  +
mov eax esi +
push eax  +
call sub_43F2B3  +
add esp 4 +
add esi 18h +
sub edi 1 +
jnz loc_40B5D0  +
mov esi [ebp+var_60] +
test ebx ebx +
jz loc_40B621  +
push [ebp+var_68]  +
mov edx esi +
push ecx  +
mov ecx ebx +
call loc_402DD0  +
mov ecx [ebp+var_5C] +
mov eax 2AAAAAABh +
sub ecx ebx +
add esp 8 +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push ebx  +
call loc_402820  +
mov eax [ebp+var_44] +
cmp eax 8 +
jb loc_40B633  +
inc eax  +
push eax  +
push [ebp+var_58]  +
call loc_402950  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi [ecx] +
test edi edi +
jz loc_40B69C  +
mov eax [edi+4] +
test eax eax +
jz loc_40B669  +
push 1  +
push eax  +
call sub_436CA0  +
add esp 8 +
push esi  +
mov esi [edi] +
test esi esi +
jz loc_40B690  +
mov eax [esi] +
test eax eax +
jz loc_40B685  +
push eax  +
call sub_4401DF  +
add esp 4 +
mov dword ptr [esi] 0 +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
push 8  +
push edi  +
call sub_436CA0  +
add esp 8 +
pop esi  +
pop edi  +
retn   +
***
mov eax [ecx] +
test eax eax +
jz locret_40B6B1  +
push 1  +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_40B6E7  +
mov eax [esi] +
test eax eax +
jz loc_40B6DC  +
push eax  +
call sub_4401DF  +
add esp 4 +
mov dword ptr [esi] 0 +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4530B9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40B74A  +
mov eax [esi] +
jmp loc_40B74C  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_4] ecx +
mov edi 15h +
cmp ds:word_462234 cx +
mov eax edi +
mov ebx [esi+10h] +
cmovz eax ecx +
mov [ebp+var_10] 1 +
mov ecx [ebp+arg_0] +
mov ecx [ecx+10h] +
add ecx eax +
cmp ebx ecx +
ja loc_40B7A3  +
cmp [esi+14h] ecx +
jz loc_40B7A3  +
push 1  +
push ecx  +
mov ecx esi +
call loc_4029B0  +
test al al +
jz loc_40B7A3  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 8 +
jb loc_40B79B  +
mov eax [esi] +
jmp loc_40B79D  +
mov eax esi +
xor ecx ecx +
mov [eax+ebx*2] cx +
xor eax eax +
mov ecx esi +
cmp ds:word_462234 ax +
cmovz edi eax +
push edi  +
push offset word_462234  +
call loc_405080  +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
call loc_4051B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push esi  +
mov esi ecx +
mov [ebp+var_8] 0 +
xor ecx ecx +
mov [ebp+var_4] esi +
cmp ds:word_462260 cx +
mov eax 4 +
cmovz eax ecx +
mov ecx edx +
push eax  +
push offset word_462260  +
call loc_405080  +
xor ecx ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] cx +
mov ecx esi +
push eax  +
call sub_4031F0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4530EC  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax large fs:2Ch +
mov ecx [eax] +
mov eax dword_473D78 +
cmp eax [ecx+4] +
jle loc_40B8CA  +
push offset dword_473D78  +
call sub_436E05  +
add esp 4 +
cmp dword_473D78 0FFFFFFFFh +
jnz loc_40B8CA  +
mov [ebp+var_4] 0 +
mov dword_473D70 0 +
mov dword_473D74 0 +
call sub_403A40  +
push offset sub_4558B0  +
mov dword_473D70 eax +
call sub_43717C  +
push offset dword_473D78  +
call sub_436DC6  +
add esp 8 +
mov eax offset dword_473D70 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453118  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
lea ecx [ebp+pszPath] +
call loc_40DAF0  +
xor ecx ecx +
mov [ebp+var_4] 0 +
cmp ds:word_46226C cx +
mov eax 5 +
cmovz eax ecx +
lea ecx [ebp+pszPath] +
push eax  +
push offset word_46226C  +
call loc_405080  +
cmp [ebp+var_14] 8 +
lea eax [ebp+pszPath] +
cmovnb eax [ebp+pszPath] +
push eax  +
call ds:PathFileExistsW  +
mov ecx [ebp+var_14] +
test eax eax +
setnz bl  +
cmp ecx 8 +
jb loc_40B960  +
inc ecx  +
push ecx  +
push [ebp+pszPath]  +
call loc_402950  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4531B8  +
mov eax large fs:0 +
push eax  +
sub esp 78h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-64h] esi +
mov [ebp-4Ch] esi +
mov edi [ebp+0Ch] +
xor ebx ebx +
mov eax [ebp+8] +
mov [ebp-50h] eax +
mov dword ptr [ebp-84h] 0 +
mov eax [edi+10h] +
mov [ebp-60h] eax +
mov [ebp-5Ch] ebx +
mov [ebp-58h] ebx +
mov [ebp-54h] ebx +
xor eax eax +
mov [ebp-4] ebx +
push 0FFFFFFFFh  +
push eax  +
push edx  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-14h] 7 +
mov [ebp-18h] ebx +
mov [ebp-28h] ax +
call loc_402A60  +
mov byte ptr [ebp-4] 1 +
mov eax [ebp-18h] +
lea ecx [eax-1] +
cmp eax ecx +
ja loc_40BA0E  +
push offset aInvalidStringP  +
call sub_437FB0  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
cmp word ptr [eax+ecx*2] 5Ch +
jz loc_40BA2F  +
push 1  +
push offset asc_45F0F4  +
lea ecx [ebp-28h] +
call loc_405080  +
push 0FFFFFFFFh  +
push 0  +
push dword ptr [ebp-50h]  +
lea ecx [ebp-28h] +
call loc_4051B0  +
push 1  +
push offset unk_46228C  +
lea ecx [ebp-28h] +
call loc_405080  +
lea ecx [ebp-80h] +
call sub_4204F1  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-28h] +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-80h] +
push 0  +
cmovnb eax [ebp-28h] +
push eax  +
call sub_420777  +
test eax eax +
jz loc_40BDD5  +
lea ecx [ebp-80h] +
call sub_42091F  +
test eax eax +
jnz loc_40BBC3  +
mov eax [ebp-80h] +
lea ecx [ebp-80h] +
push 10h  +
call dword ptr [eax+38h]  +
test eax eax +
jnz loc_40BB65  +
lea ecx [ebp-80h] +
call sub_420CAF  +
test eax eax +
jnz loc_40BB65  +
lea eax [ebp-48h] +
push eax  +
lea ecx [ebp-80h] +
call sub_4209D3  +
push dword ptr [ebp-60h]  +
lea ecx [ebp-50h] +
mov byte ptr [ebp-4] 3 +
push ecx  +
mov ecx eax +
call sub_40BF40  +
mov byte ptr [ebp-4] 4 +
cmp dword ptr [edi+14h] 8 +
jb loc_40BAD4  +
mov edi [edi] +
push edi  +
mov ecx eax +
call loc_40BFC0  +
test eax eax +
mov byte ptr [ebp-4] 3 +
mov edx [ebp-50h] +
setz byte ptr [ebp-41h]  +
or esi 0FFFFFFFFh +
add edx 0FFFFFFF0h +
mov eax esi +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BB03  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-48h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] esi +
dec esi  +
test esi esi +
jg loc_40BB1F  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
cmp byte ptr [ebp-41h] 0 +
jz loc_40BB62  +
lea eax [ebp-48h] +
push eax  +
lea ecx [ebp-80h] +
call sub_420A20  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-40h] +
push dword ptr [eax]  +
call loc_402650  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 6 +
push eax  +
lea ecx [ebp-5Ch] +
call sub_40BE30  +
lea ecx [ebp-40h] +
call sub_402610  +
lea ecx [ebp-48h] +
call sub_405FD0  +
mov ebx [ebp-5Ch] +
mov esi [ebp-64h] +
mov eax [ebp-58h] +
lea ecx [ebp-80h] +
mov [esi+4] eax +
mov eax [ebp-54h] +
mov [esi] ebx +
mov [esi+8] eax +
mov dword ptr [ebp-5Ch] 0 +
mov dword ptr [ebp-58h] 0 +
mov dword ptr [ebp-54h] 0 +
call sub_4206AE  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_40BBA2  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
lea ecx [ebp-5Ch] +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
call sub_4025A0  +
jmp loc_40BDFD  +
or esi 0FFFFFFFFh +
mov eax [ebp-80h] +
lea ecx [ebp-80h] +
push 10h  +
call dword ptr [eax+38h]  +
test eax eax +
jnz loc_40BCE1  +
lea ecx [ebp-80h] +
call sub_420CAF  +
test eax eax +
jnz loc_40BCE1  +
lea eax [ebp-50h] +
push eax  +
lea ecx [ebp-80h] +
call sub_4209D3  +
push dword ptr [ebp-60h]  +
lea ecx [ebp-48h] +
mov byte ptr [ebp-4] 7 +
push ecx  +
mov ecx eax +
call sub_40BF40  +
mov edx eax +
mov ecx edi +
mov byte ptr [ebp-4] 8 +
call sub_402600  +
xor ecx ecx +
test eax eax +
setnz cl  +
test ecx ecx +
jz loc_40BE1B  +
push eax  +
push dword ptr [edx]  +
call sub_43F4E9  +
add esp 8 +
mov byte ptr [ebp-4] 7 +
mov edx [ebp-48h] +
test eax eax +
mov eax esi +
setz bl  +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BC51  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 2 +
mov eax esi +
mov edx [ebp-50h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BC6F  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test bl bl +
jz loc_40BCE1  +
lea eax [ebp-4Ch] +
push eax  +
lea ecx [ebp-80h] +
call sub_420A20  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-40h] +
push dword ptr [eax]  +
call loc_402650  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
lea ecx [ebp-5Ch] +
call sub_40BE30  +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_40BCAF  +
inc eax  +
push eax  +
push dword ptr [ebp-40h]  +
call loc_402950  +
xor eax eax +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-4Ch] +
mov [ebp-40h] ax +
add edx 0FFFFFFF0h +
mov dword ptr [ebp-2Ch] 7 +
mov eax esi +
mov dword ptr [ebp-30h] 0 +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BCE1  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
lea ecx [ebp-80h] +
call sub_42091F  +
test eax eax +
jnz loc_40BBC6  +
mov eax [ebp-80h] +
lea ecx [ebp-80h] +
push 10h  +
call dword ptr [eax+38h]  +
test eax eax +
jnz loc_40BDC7  +
lea ecx [ebp-80h] +
call sub_420CAF  +
test eax eax +
jnz loc_40BDC7  +
lea eax [ebp-48h] +
push eax  +
lea ecx [ebp-80h] +
call sub_4209D3  +
push dword ptr [ebp-60h]  +
lea ecx [ebp-4Ch] +
mov byte ptr [ebp-4] 0Bh +
push ecx  +
mov ecx eax +
call sub_40BF40  +
mov byte ptr [ebp-4] 0Ch +
cmp dword ptr [edi+14h] 8 +
jb loc_40BD3E  +
mov edi [edi] +
push edi  +
mov ecx eax +
call loc_40BFC0  +
test eax eax +
mov byte ptr [ebp-4] 0Bh +
mov edx [ebp-4Ch] +
mov eax esi +
setz bl  +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BD69  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 2 +
mov edx [ebp-48h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] esi +
dec esi  +
test esi esi +
jg loc_40BD85  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test bl bl +
jz loc_40BDC7  +
lea eax [ebp-4Ch] +
push eax  +
lea ecx [ebp-80h] +
call sub_420A20  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-40h] +
push dword ptr [eax]  +
call loc_402650  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 0Eh +
push eax  +
lea ecx [ebp-5Ch] +
call sub_40BE30  +
lea ecx [ebp-40h] +
call sub_402610  +
lea ecx [ebp-4Ch] +
mov byte ptr [ebp-4] 2 +
call sub_405FD0  +
lea ecx [ebp-80h] +
call sub_420729  +
mov ebx [ebp-5Ch] +
mov esi [ebp-64h] +
mov eax [ebp-58h] +
lea ecx [ebp-80h] +
mov [esi+4] eax +
mov eax [ebp-54h] +
mov [esi] ebx +
mov [esi+8] eax +
call sub_4206AE  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_40BDFD  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004005h  +
call loc_405FF0  +
push esi  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
call sub_403AC0  +
mov esi eax +
cmp esi [ebx] +
jz loc_40BF10  +
cmp dword ptr [esi+24h] 8 +
lea eax [esi+10h] +
mov ecx [eax+10h] +
jb loc_40BEF5  +
mov eax [eax] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call loc_403170  +
test eax eax +
js loc_40BF10  +
pop edi  +
lea eax [esi+28h] +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
push ecx  +
lea eax [ebp+arg_0] +
mov [ebp+arg_0] edi +
push eax  +
push ecx  +
mov ecx ebx +
call sub_40C150  +
push eax  +
add eax 10h +
mov ecx ebx +
push eax  +
push esi  +
lea eax [ebp+arg_0] +
push eax  +
call sub_403BD0  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
add eax 28h +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor eax eax +
mov ebx ecx +
mov [ebp+var_4] 0 +
test esi esi +
push edi  +
cmovs esi eax +
mov eax [ebx] +
mov edi [eax-0Ch] +
cmp esi edi +
jl loc_40BF80  +
add eax 0FFFFFFF0h +
push eax  +
call loc_408180  +
add esp 4 +
lea ecx [eax+10h] +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 8  +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40BF90  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_40BF9C  +
call sub_4167F5  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov ecx [ebp+arg_0] +
sub edi esi +
push eax  +
mov eax [ebx] +
push esi  +
lea eax [eax+edi*2] +
push eax  +
call loc_40C010  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_40BFD9  +
push eax  +
push dword ptr [ecx]  +
call sub_43F4E9  +
add esp 8 +
pop ebp  +
retn 4  +
***
push 80004005h  +
call loc_405FF0  +
mov eax [ecx] +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40C002  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
test eax eax +
jnz locret_40C00E  +
call sub_4167F5  +
mov ecx eax +
mov edx [eax] +
jmp dword ptr [edx+10h]  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_40C068  +
cmp dword ptr [ebp+8] 0 +
mov esi [ebp+0Ch] +
jnz loc_40C02B  +
test esi esi +
jnz loc_40C072  +
mov eax [ecx] +
push 2  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jz loc_40C07C  +
add eax 10h +
mov [edi] eax +
test esi esi +
js loc_40C072  +
cmp esi [eax-8] +
jg loc_40C072  +
mov [eax-0Ch] esi +
lea edx [esi+esi] +
mov eax [edi] +
xor ecx ecx +
push edx  +
push dword ptr [ebp+8]  +
mov [edx+eax] cx +
mov ecx [edi] +
call sub_4060B0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 80004005h  +
call loc_405FF0  +
push 80070057h  +
call loc_405FF0  +
call loc_405DC0  +
push esi  +
mov esi ecx +
or eax 0FFFFFFFFh +
push edi  +
mov ecx [esi+10h] +
sub eax ecx +
cmp eax 1 +
jbe loc_40C12C  +
lea edi [ecx+1] +
cmp edi 7FFFFFFEh +
ja loc_40C136  +
cmp [esi+14h] edi +
jnb loc_40C0D3  +
push ecx  +
push edi  +
mov ecx esi +
call sub_402B80  +
test edi edi +
jz loc_40C125  +
cmp dword ptr [esi+14h] 8 +
mov ecx [esi+10h] +
jb loc_40C0FA  +
mov eax [esi] +
jmp loc_40C0FC  +
test edi edi +
jnz loc_40C0C6  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40C0EE  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
retn 8  +
***
mov eax esi +
mov edx 5Ch +
mov [eax+ecx*2] dx +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_40C11D  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
retn 8  +
***
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
push offset aStringTooLong  +
call sub_437F90  +
push 0FFFFFFFFh  +
push offset loc_4531F1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_403E10  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_40C1D6  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40C1C0  +
mov eax [esi] +
jmp loc_40C1C2  +
mov eax esi +
xor edx edx +
push 0FFFFFFFFh  +
push edx  +
push ecx  +
mov ecx esi +
mov [eax] dx +
call loc_402A60  +
mov byte ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_405EC0  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_43EC1A  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_40C265  +
mov eax [ebp+arg_4] +
movzx edx ax +
mov eax edx +
shl edx 10h +
push edi  +
mov edi [ebp+arg_0] +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov dword ptr [ecx] offset off_4622B0 +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4622B0 +
jz loc_40C29D  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45321F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax dword_473A1C +
test eax eax +
jnz loc_40C30E  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40C300  +
mov ecx eax +
call loc_40E690  +
jmp loc_40C302  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_473A1C eax +
push esi  +
mov ecx eax +
call loc_40EA20  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45324F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx dword_473A1C +
test ecx ecx +
jnz loc_40C38F  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40C380  +
mov ecx eax +
call loc_40E690  +
mov ecx eax +
jmp loc_40C382  +
xor ecx ecx +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_473A1C ecx +
xor edx edx +
mov eax 2 +
cmp ds:word_45FF80 dx +
cmovz eax edx +
add ecx 1Ch +
push eax  +
push offset word_45FF80  +
call loc_402720  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45321F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax dword_473A1C +
test eax eax +
jnz loc_40C41E  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40C410  +
mov ecx eax +
call loc_40E690  +
jmp loc_40C412  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_473A1C eax +
push ecx  +
push esi  +
mov ecx eax +
call sub_40EC70  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4532BE  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
lea ebx [esi+4] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebx] offset off_4622B0 +
mov byte ptr [ebp-4] 1 +
mov dword ptr [esi] offset off_4622A8 +
mov dword ptr [ebx] offset off_46229C +
mov dword ptr [esi+1Ch] 7 +
mov dword ptr [esi+18h] 0 +
cmp dword ptr [esi+1Ch] 8 +
jb loc_40C4A4  +
mov eax [esi+8] +
jmp loc_40C4A7  +
lea eax [esi+8] +
mov edi [ebp+8] +
xor ecx ecx +
mov [eax] cx +
cmp [edi] cx +
jz loc_40C4D0  +
mov ecx edi +
lea eax [ecx+2] +
mov [ebp+8] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40C4C0  +
sub ecx [ebp+8] +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esi+8] +
call loc_402720  +
and byte ptr [esi+20h] 0FCh +
mov dword ptr [esi+24h] 0 +
mov dword ptr [esi+28h] 0 +
mov dword ptr [esi+2Ch] 0 +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+40h] 0 +
mov byte ptr [ebp-4] 5 +
mov eax dword_473A1C +
test eax eax +
jnz loc_40C54C  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+8] eax +
mov byte ptr [ebp-4] 6 +
test eax eax +
jz loc_40C541  +
mov ecx eax +
call loc_40E690  +
jmp loc_40C543  +
xor eax eax +
mov byte ptr [ebp-4] 5 +
mov dword_473A1C eax +
push ebx  +
mov ecx eax +
call sub_40EAC0  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_40C5A0  +
test [ebp+arg_0] 1 +
jz loc_40C58C  +
push 44h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_452F56  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi dword_473A1C +
lea ecx [edi+4] +
mov dword ptr [edi] offset off_4622A8 +
mov dword ptr [ecx] offset off_46229C +
test esi esi +
jnz loc_40C605  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
test eax eax +
jz loc_40C5FA  +
mov ecx eax +
call loc_40E690  +
mov esi eax +
jmp loc_40C5FC  +
xor esi esi +
mov dword_473A1C esi +
lea ecx [edi+4] +
mov eax [esi+44h] +
mov edx [esi+40h] +
cmp edx eax +
jz loc_40C636  +
nop   +
cmp [edx] ecx +
jz loc_40C61B  +
add edx 4 +
cmp edx eax +
jnz loc_40C610  +
cmp edx eax +
jz loc_40C636  +
lea ecx [edx+4] +
sub eax ecx +
and eax 0FFFFFFFCh +
push eax  +
push ecx  +
push edx  +
call loc_438E80  +
add esp 0Ch +
add dword ptr [esi+44h] 0FFFFFFFCh +
lea ecx [edi+28h] +
call sub_40CB70  +
mov dword ptr [edi+24h] 0 +
mov ecx [edi+38h] +
test ecx ecx +
jz loc_40C690  +
push [ebp+var_10]  +
mov edx [edi+3Ch] +
push ecx  +
call loc_402DD0  +
mov esi [edi+38h] +
mov eax 2AAAAAABh +
mov ecx [edi+40h] +
add esp 8 +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call loc_402820  +
mov dword ptr [edi+38h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov dword ptr [edi+40h] 0 +
mov [ebp+var_4] 0 +
mov ecx [edi+34h] +
test ecx ecx +
jz loc_40C6A4  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_40C6CF  +
mov eax [edi+30h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+28h] 0 +
mov dword ptr [edi+2Ch] 0 +
mov dword ptr [edi+30h] 0 +
mov eax [edi+1Ch] +
lea esi [edi+8] +
cmp eax 8 +
jb loc_40C6E3  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40C6F9  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi+4] offset off_4622B0 +
mov dword ptr [edi] offset off_461894 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4532EF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
test byte ptr [edi+1Ch] 1 +
jnz loc_40C7DC  +
mov eax dword_473A1C +
test eax eax +
jnz loc_40C78A  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40C77C  +
mov ecx eax +
call loc_40E690  +
jmp loc_40C77E  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_473A1C eax +
cmp dword ptr [eax+18h] 8 +
lea esi [eax+4] +
jb loc_40C795  +
mov esi [esi] +
push esi  +
lea ecx [edi-4] +
call sub_40C810  +
test al al +
jnz loc_40C7BF  +
call sub_40E610  +
cmp dword ptr [eax+30h] 8 +
lea esi [eax+1Ch] +
jb loc_40C7B2  +
mov esi [esi] +
push esi  +
lea ecx [edi-4] +
call sub_40C810  +
test al al +
jz loc_40C7D1  +
test esi esi +
jz loc_40C7D1  +
push esi  +
lea ecx [edi-4] +
call sub_40C8F0  +
mov [edi+20h] eax +
jmp loc_40C7D8  +
mov dword ptr [edi+20h] 0 +
or byte ptr [edi+1Ch] 1 +
mov ecx [edi+20h] +
mov esi [ebp+arg_0] +
test ecx ecx +
jz loc_40C7F3  +
push [ebp+arg_4]  +
push esi  +
call sub_40E3D0  +
test eax eax +
jnz loc_40C7F5  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_453318  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_40C848  +
xor al al +
jmp loc_40C8D2  +
cmp word ptr [esi] 0 +
jz loc_40C841  +
lea eax [ecx+8] +
mov [ebp+var_18] 7 +
xor ecx ecx +
mov [ebp+var_1C] 0 +
push 0FFFFFFFFh  +
push ecx  +
mov word ptr [ebp+var_2C] cx +
lea ecx [ebp+var_2C] +
push eax  +
call loc_402A60  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_2C] +
call loc_40C090  +
cmp word ptr [esi] 0 +
jnz loc_40C88D  +
xor ecx ecx +
jmp loc_40C8A1  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40C892  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp+var_2C] +
call loc_405080  +
push ecx  +
lea eax [ebp+var_2C] +
push eax  +
call sub_40B840  +
mov ecx eax +
call sub_40DC40  +
mov ecx [ebp+var_18] +
mov bl al +
cmp ecx 8 +
jb loc_40C8D0  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
call loc_402950  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453357  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
push esi  +
call loc_40CA00  +
test eax eax +
jnz loc_40C9E0  +
xor ecx ecx +
mov [ebp+var_18] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [edi+8] +
mov word ptr [ebp+var_2C] cx +
push eax  +
lea ecx [ebp+var_2C] +
mov [ebp+var_1C] 0 +
call loc_402A60  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_2C] +
call loc_40C090  +
cmp word ptr [esi] 0 +
jnz loc_40C96C  +
xor ecx ecx +
jmp loc_40C980  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40C971  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp+var_2C] +
call loc_405080  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_30] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_40C9B7  +
cmp [ebp+var_18] 8 +
lea ecx [ebp+var_2C] +
push esi  +
cmovnb ecx [ebp+var_2C] +
push ecx  +
mov ecx eax +
call loc_40E1B0  +
mov esi eax +
jmp loc_40C9B9  +
xor esi esi +
lea eax [ebp+var_30] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
lea ecx [edi+28h] +
mov [ebp+var_30] esi +
call sub_40CA80  +
mov ecx [ebp+var_18] +
cmp ecx 8 +
jb loc_40C9DE  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax+28h] +
mov [ebp-4] eax +
cmp esi [eax+2Ch] +
jz loc_40CA5D  +
mov edi [ebp+8] +
cmp word ptr [edi] 0 +
mov ebx [esi] +
jnz loc_40CA23  +
xor eax eax +
jmp loc_40CA40  +
mov eax edi +
lea ecx [eax+2] +
mov [ebp+8] ecx +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40CA30  +
sub eax [ebp+8] +
sar eax 1 +
push eax  +
push edi  +
push dword ptr [ebx+2Ch]  +
push ecx  +
lea ecx [ebx+1Ch] +
call loc_403170  +
test eax eax +
jz loc_40CA68  +
mov eax [ebp-4] +
add esi 4 +
cmp esi [eax+2Ch] +
jnz loc_40CA17  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
sub ecx 4 +
jmp sub_40C570  +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_45A818 +
push eax  +
call sub_439457  +
pop ecx  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov dword ptr [edi] offset off_462490 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CB31  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40CB47  +
mov esi [esi] +
xor eax eax +
test [ebp+arg_0] 1 +
mov [esi] ax +
jz loc_40CB5D  +
push 1Ch  +
push edi  +
call sub_436CA0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453380  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov esi [edi+4] +
sub esi [edi] +
sar esi 2 +
test esi esi +
jz loc_40CBFA  +
mov [ebp+var_4] 0 +
dec esi  +
mov eax [edi+4] +
mov ecx [edi] +
sub eax ecx +
sar eax 2 +
mov [ebp+var_18] esi +
cmp eax esi +
ja loc_40CBE4  +
push offset aInvalidVectorT  +
call sub_437FB0  +
mov eax offset loc_40CBD5 +
retn   +
mov edi [ebp-14h] +
mov esi [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_40CBA8  +
mov ecx [ecx+esi*4] +
test ecx ecx +
jz loc_40CBF1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 0FFFFFFFFh +
jmp loc_40CBA8  +
mov eax [edi] +
mov [edi+4] eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4533C2  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi dword_473A18 +
test esi esi +
jnz loc_40CCB6  +
push 0Ch  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40CCAE  +
mov dword ptr [esi] offset off_462744 +
mov dword ptr [esi+4] 0 +
push 0  +
mov byte ptr [ebp+var_4] 2 +
call ds:CoInitialize  +
mov eax [esi+4] +
cmp eax offset asc_4626F8 +
jz loc_40CCB0  +
push eax  +
call ds:SysFreeString  +
push offset asc_4626F8  +
call ds:SysAllocString  +
mov [esi+4] eax +
test eax eax +
jnz loc_40CCB0  +
push 8007000Eh  +
call loc_405FF0  +
xor esi esi +
mov dword_473A18 esi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_462498 +
jz loc_40CCED  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_462498 +
retn   +
***
push esi  +
mov esi ecx +
mov ecx dword_473A18 +
mov dword ptr [esi] offset off_4624D0 +
test ecx ecx +
jz loc_40CD36  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov dword_473A18 0 +
mov ecx [esi+10h] +
test ecx ecx +
jz loc_40CD43  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_46189C +
jz loc_40CD5A  +
push 14h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
mov ecx [ecx+10h] +
push esi  +
xor esi esi +
test ecx ecx +
jz loc_40CD85  +
mov eax [ecx] +
call dword ptr [eax+28h]  +
mov esi eax +
push 14h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_4] eax +
test eax eax +
jz loc_40CDC7  +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax] offset off_4624D0 +
mov dword ptr [eax+10h] 0 +
mov [eax+10h] esi +
mov dword ptr [eax+4] 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov [eax+10h] esi +
mov dword ptr [eax+4] 1 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_40CE10  +
test [ebp+arg_0] 1 +
jz loc_40CDFC  +
push 40h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
lea esi [edi+28h] +
mov dword ptr [edi] offset off_462500 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CE2E  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40CE44  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+10h] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CE5D  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40CE73  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi] offset off_46189C +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_40CEB0  +
xor eax eax +
lea ecx [esi+28h] +
push eax  +
push edx  +
call loc_402720  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40CEB6  +
sub eax edi +
lea ecx [esi+28h] +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_402720  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+3Ch] 8 +
lea eax [ecx+28h] +
jb locret_40CEEB  +
mov eax [eax] +
retn   +
***
retn   +
***
cmp dword ptr [ecx+3Ch] 8 +
lea edx [ecx+28h] +
jb loc_40CF0B  +
mov edx [edx] +
add ecx 10h +
cmp dword ptr [ecx+14h] 8 +
jb loc_40CF16  +
mov ecx [ecx] +
jmp sub_408C60  +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+10h] +
mov dword ptr [edi] offset off_462530 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40CF41  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40CF57  +
mov esi [esi] +
xor eax eax +
test [ebp+arg_0] 1 +
mov [esi] ax +
mov dword ptr [edi] offset off_46189C +
jz loc_40CF73  +
push 28h  +
push edi  +
call sub_436CA0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
cmp dword ptr [ecx+24h] 8 +
push esi  +
push edi  +
lea edi [ecx+10h] +
jb loc_40CF91  +
mov edi [edi] +
push 28h  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_4] esi +
test esi esi +
jz loc_40CFD5  +
mov dword ptr [esi+4] 0 +
xor eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi] offset off_462530 +
mov dword ptr [esi+24h] 7 +
mov dword ptr [esi+20h] 0 +
mov [esi+10h] ax +
jmp loc_40CFD7  +
xor esi esi +
mov edx [esi] +
mov ecx esi +
push edi  +
mov dword ptr [esi+4] 7 +
call dword ptr [edx+10h]  +
pop edi  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+4] +
mov dword ptr [edi] offset off_462560 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40D011  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40D027  +
mov esi [esi] +
xor eax eax +
test [ebp+arg_0] 1 +
mov [esi] ax +
jz loc_40D03D  +
push 1Ch  +
push edi  +
call sub_436CA0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4533E8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor eax eax +
mov [ebp+var_14] 7 +
mov [ebp+var_18] 0 +
mov word ptr [ebp+lpLibFileName] ax +
lea ecx [ebp+lpLibFileName] +
mov [ebp+var_4] eax +
call sub_40DCD0  +
push 8  +
call sub_4139EA  +
mov edi eax +
add esp 4 +
mov [ebp+var_2C] edi +
test edi edi +
jz loc_40D0D0  +
cmp [ebp+var_14] 8 +
lea eax [ebp+lpLibFileName] +
cmovnb eax [ebp+lpLibFileName] +
push eax  +
mov dword ptr [edi] offset off_46275C +
mov dword ptr [edi+4] 0 +
call ds:LoadLibraryW  +
mov [edi+4] eax +
jmp loc_40D0D2  +
xor edi edi +
push 1Ch  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_2C] esi +
test esi esi +
jz loc_40D113  +
mov dword ptr [esi] offset off_46259C +
mov [esi+4] edi +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+18h] 0 +
jmp loc_40D115  +
xor esi esi +
mov ecx esi +
call sub_40D1C0  +
mov ecx [ebp+var_14] +
cmp ecx 8 +
jb loc_40D12E  +
inc ecx  +
push ecx  +
push [ebp+lpLibFileName]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4526AC  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
mov dword ptr [esi] offset off_46259C +
mov byte ptr [ebp+var_4] 1 +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40D193  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
test [ebp+arg_0] 1 +
jz loc_40D1A4  +
push 1Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 0 +
jz loc_40D24A  +
mov eax [eax+4] +
push edi  +
mov edi ds:GetProcAddress +
test eax eax +
jnz loc_40D1DE  +
xor eax eax +
jmp loc_40D1E6  +
push offset ProcName  +
push eax  +
call edi  +
mov [esi+8] eax +
mov eax [esi+4] +
mov eax [eax+4] +
test eax eax +
jz loc_40D1FB  +
push offset aFinalize  +
push eax  +
call edi  +
mov [esi+0Ch] eax +
mov eax [esi+4] +
mov eax [eax+4] +
test eax eax +
jz loc_40D210  +
push offset aPreparerun  +
push eax  +
call edi  +
mov [esi+10h] eax +
mov eax [esi+4] +
mov eax [eax+4] +
test eax eax +
jz loc_40D225  +
push offset aRun  +
push eax  +
call edi  +
mov [esi+14h] eax +
mov eax [esi+4] +
mov eax [eax+4] +
test eax eax +
jnz loc_40D23A  +
mov [esi+18h] eax +
mov al 1 +
pop edi  +
pop esi  +
retn   +
push offset aCancel  +
push eax  +
call edi  +
mov [esi+18h] eax +
mov al 1 +
pop edi  +
pop esi  +
retn   +
xor al al +
pop esi  +
retn   +
***
mov eax dword_473A04 +
push esi  +
mov esi ecx +
xor ecx ecx +
lea edx [esi+4] +
cmp eax edx +
mov dword ptr [edx] offset off_4625A4 +
mov dword ptr [esi] offset off_4625C0 +
cmovz eax ecx +
mov dword ptr [edx] offset off_461F10 +
mov ecx esi +
mov dword_473A04 eax +
mov dword ptr [edx] offset off_4625CC +
call sub_4088E0  +
test [ebp+arg_0] 1 +
jz loc_40D29A  +
push 8  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453427  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 8  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40D32B  +
lea eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
mov dword ptr [esi] offset off_461888 +
mov [ebp+var_10] esi +
call sub_408940  +
lea eax [esi+4] +
mov dword ptr [eax] offset off_461F10 +
mov dword ptr [esi] offset off_4625C0 +
mov dword ptr [eax] offset off_4625A4 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45321F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_473A1C +
test eax eax +
jnz loc_40D39C  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40D38E  +
mov ecx eax +
call loc_40E690  +
jmp loc_40D390  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
mov dword_473A1C eax +
push ecx  +
push [ebp+arg_0]  +
mov ecx eax +
call sub_40EC70  +
mov esi eax +
call sub_4112B0  +
push dword_473B40  +
lea ecx [eax+4] +
push ecx  +
push esi  +
call loc_4113C0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453467  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+0Ch] +
mov edi [ebp+8] +
test esi esi +
jz loc_40D4D4  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40D410  +
sub eax edx +
sar eax 1 +
jz loc_40D4D4  +
mov eax dword_473A1C +
test eax eax +
jnz loc_40D45D  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-4] 0 +
test eax eax +
jz loc_40D44F  +
mov ecx eax +
call loc_40E690  +
jmp loc_40D451  +
xor eax eax +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov dword_473A1C eax +
xor ecx ecx +
mov dword ptr [ebp-14h] 7 +
push 0FFFFFFFFh  +
push ecx  +
add eax 4 +
mov [ebp-28h] cx +
push eax  +
lea ecx [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
call loc_402A60  +
mov ecx esi +
mov dword ptr [ebp-4] 1 +
call sub_40C2B0  +
mov ecx edi +
call sub_40C3C0  +
mov esi eax +
call sub_4112B0  +
push dword_473B40  +
lea ecx [eax+4] +
push ecx  +
push esi  +
call loc_4113C0  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
mov esi eax +
cmovnb ecx [ebp-28h] +
call sub_40C2B0  +
mov eax [ebp-14h] +
cmp eax 8 +
jb loc_40D4D0  +
inc eax  +
push eax  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov eax esi +
jmp loc_40D4D6  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax offset Default +
sub ecx 4 +
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4625CC +
jz loc_40D52D  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45324F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_473A1C +
test eax eax +
jnz loc_40D594  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40D58D  +
mov ecx eax +
call loc_40E690  +
jmp loc_40D58F  +
xor eax eax +
mov dword_473A1C eax +
add eax 4 +
cmp dword ptr [eax+14h] 8 +
jb loc_40D59F  +
mov eax [eax] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp ecx eax +
jnz loc_40D5C5  +
xor eax eax +
test eax eax +
sets al  +
pop ebp  +
retn 4  +
mov edx [ecx] +
push esi  +
mov esi [eax] +
cmp edx esi +
jnz loc_40D5F8  +
mov edx [ecx+4] +
mov esi [eax+4] +
cmp edx esi +
jnz loc_40D5F8  +
mov edx [ecx+8] +
mov esi [eax+8] +
cmp edx esi +
jnz loc_40D5F8  +
mov ecx [ecx+0Ch] +
mov eax [eax+0Ch] +
cmp ecx eax +
jnz loc_40D5F8  +
xor eax eax +
test eax eax +
pop esi  +
sets al  +
pop ebp  +
retn 4  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
test eax eax +
pop esi  +
sets al  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453498  +
mov eax large fs:0 +
push eax  +
sub esp 58h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-60h] ecx +
xor eax eax +
mov dword ptr [ebp-24h] 0 +
xor ecx ecx +
mov [ebp-3Ch] ax +
cmp ds:word_4625E4 cx +
mov eax 2 +
mov dword ptr [ebp-20h] 0 +
cmovz eax ecx +
mov dword ptr [ebp-1Ch] 0 +
push eax  +
push offset word_4625E4  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-28h] 7 +
mov dword ptr [ebp-2Ch] 0 +
call loc_402720  +
xor ebx ebx +
mov dword ptr [ebp-4] 0 +
mov edi offset a6_0 +
mov [ebp-58h] ebx +
nop   +
movzx esi word ptr [edi] +
mov ecx edi +
mov [ebp-5Ch] ecx +
test si si +
jz loc_40D705  +
mov eax [ebp-2Ch] +
mov edx [ebp-28h] +
lea ebx [eax+eax] +
cmp edx 8 +
lea ecx [ebp-3Ch] +
lea eax [ebp-3Ch] +
cmovnb ecx [ebp-3Ch] +
add ecx ebx +
cmp edx 8 +
lea edx [ebp-3Ch] +
cmovnb eax [ebp-3Ch] +
add eax ebx +
cmp dword ptr [ebp-28h] 8 +
cmovnb edx [ebp-3Ch] +
cmp edx eax +
jz loc_40D6EC  +
cmp [edx] si +
jz loc_40D6EC  +
add edx 2 +
cmp edx eax +
jnz loc_40D6E0  +
cmp edx ecx +
jnz loc_40D6FF  +
movzx esi word ptr [edi+2] +
add edi 2 +
mov edx [ebp-28h] +
test si si +
jnz loc_40D6B6  +
mov ebx [ebp-58h] +
mov ecx [ebp-5Ch] +
xor eax eax +
mov dword ptr [ebp-40h] 7 +
mov [ebp-54h] ax +
mov eax edi +
sub eax ecx +
mov dword ptr [ebp-44h] 0 +
sar eax 1 +
push eax  +
push ecx  +
lea ecx [ebp-54h] +
call loc_402720  +
cmp dword ptr [ebp-40h] 8 +
lea eax [ebp-54h] +
cmovnb eax [ebp-54h] +
push eax  +
call sub_44000D  +
add esp 4 +
mov [ebp+ebx*4-24h] eax +
cmp word ptr [edi] 0 +
mov eax [ebp-40h] +
jz loc_40D76B  +
add edi 2 +
cmp eax 8 +
jb loc_40D75C  +
inc eax  +
push eax  +
push dword ptr [ebp-54h]  +
call loc_402950  +
inc ebx  +
mov [ebp-58h] ebx +
cmp ebx 4 +
jl loc_40D6A0  +
jmp loc_40D77A  +
cmp eax 8 +
jb loc_40D77A  +
inc eax  +
push eax  +
push dword ptr [ebp-54h]  +
call loc_402950  +
mov ecx [ebp-60h] +
mov eax [ebp-24h] +
mov [ecx] eax +
mov eax [ebp-20h] +
mov [ecx+4] eax +
mov eax [ebp-1Ch] +
mov [ecx+8] eax +
mov eax [ebp-18h] +
mov [ecx+0Ch] eax +
mov eax [ebp-28h] +
cmp eax 8 +
jb loc_40D7A6  +
inc eax  +
push eax  +
push dword ptr [ebp-3Ch]  +
call loc_402950  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 134h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-4] eax +
cmp dword_473A24 0 +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
jbe loc_40D815  +
mov ecx 47h +
mov esi offset unk_473A20 +
mov edi ebx +
mov eax 1 +
movs   +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 11Ch  +
lea eax [ebp-128h] +
push 0  +
push eax  +
call sub_439AB0  +
add esp 0Ch +
mov dword ptr [ebp-128h] 11Ch +
mov byte ptr [ebp-129h] 0 +
push 1  +
push 2  +
push 0  +
push 0  +
call ds:VerSetConditionMask  +
mov edi ds:VerifyVersionInfoW +
mov ecx edx +
mov [ebp-134h] eax +
mov esi 5 +
mov [ebp-130h] ecx +
push ecx  +
push eax  +
push 2  +
lea eax [ebp-128h] +
mov [ebp-124h] esi +
push eax  +
call edi  +
cmp eax 1 +
jz loc_40D88F  +
mov eax [ebp-134h] +
inc esi  +
mov ecx [ebp-130h] +
cmp esi 63h +
jbe loc_40D863  +
jmp loc_40D899  +
mov [ebx+4] esi +
mov byte ptr [ebp-129h] 1 +
push 1  +
push 1  +
push dword ptr [ebp-130h]  +
mov byte ptr [ebp-12Ah] 0 +
push dword ptr [ebp-134h]  +
call ds:VerSetConditionMask  +
mov ecx edx +
mov [ebp-130h] eax +
mov [ebp-134h] ecx +
xor esi esi +
push ecx  +
push eax  +
push 1  +
lea eax [ebp-128h] +
mov [ebp-120h] esi +
push eax  +
call edi  +
cmp eax 1 +
jz loc_40D8F2  +
mov eax [ebp-130h] +
inc esi  +
mov ecx [ebp-134h] +
cmp esi 63h +
jbe loc_40D8C6  +
jmp loc_40D8FC  +
mov [ebx+8] esi +
mov byte ptr [ebp-12Ah] 1 +
push 1  +
push 20h  +
push dword ptr [ebp-134h]  +
mov byte ptr [ebp-12Bh] 0 +
push dword ptr [ebp-130h]  +
call ds:VerSetConditionMask  +
mov ecx edx +
mov [ebp-134h] eax +
mov [ebp-130h] ecx +
xor esi esi +
push ecx  +
push eax  +
push 20h  +
lea eax [ebp-128h] +
mov [ebp-14h] si +
push eax  +
call edi  +
cmp eax 1 +
jz loc_40D960  +
mov eax [ebp-134h] +
inc esi  +
mov ecx [ebp-130h] +
cmp esi 63h +
jbe loc_40D930  +
mov al [ebp-12Bh] +
jmp loc_40D969  +
mov [ebx+114h] si +
mov al 1 +
cmp byte ptr [ebp-129h] 1 +
jnz loc_40D9A3  +
cmp byte ptr [ebp-12Ah] 1 +
jnz loc_40D9A3  +
cmp al 1 +
jnz loc_40D9A3  +
mov ecx 47h +
mov esi ebx +
mov edi offset unk_473A20 +
mov eax 1 +
movs   +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp-4] +
xor eax eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 20h +
push 0FFFFFFFFh  +
push offset loc_4534C8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
xor esi esi +
mov [ebp+var_14] esi +
push offset aWCcsUtf8  +
push ecx  +
lea eax [ebp+var_10] +
mov [ebp+var_4] esi +
push eax  +
call sub_440122  +
add esp 0Ch +
test eax eax +
jnz loc_40DAD3  +
push 4  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_14] eax +
test eax eax +
jz loc_40DABC  +
mov [eax] esi +
mov ecx [ebp+var_10] +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+var_10] +
xor eax eax +
mov [eax] ecx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453512  +
mov eax large fs:0 +
push eax  +
sub esp 218h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-220h] esi +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-21Ch] 0 +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
mov [ebp-224h] esi +
jb loc_40DB61  +
mov eax [esi] +
jmp loc_40DB63  +
mov eax esi +
xor ecx ecx +
push ecx  +
mov [eax] cx +
mov ecx esi +
push offset Default  +
call loc_402720  +
mov dword ptr [ebp-4] 0 +
lea eax [ebp-218h] +
mov dword ptr [ebp-21Ch] 1 +
mov ecx 208h +
mov byte ptr [eax] 0 +
lea eax [eax+1] +
sub ecx 1 +
jnz loc_40DB91  +
push ecx  +
push 23h  +
lea eax [ebp-218h] +
push eax  +
push ecx  +
call ds:SHGetSpecialFolderPathW  +
test eax eax +
jz loc_40DC1A  +
cmp word ptr [ebp-218h] 0 +
jnz loc_40DBBF  +
xor ecx ecx +
jmp loc_40DBDF  +
lea ecx [ebp-218h] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40DBD0  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-218h] +
mov ecx esi +
push eax  +
call loc_402720  +
xor eax eax +
mov ecx 2Bh +
cmp ds:word_462608 ax +
cmovz ecx eax +
push ecx  +
push offset word_462608  +
mov ecx esi +
call loc_405080  +
push 1  +
push offset asc_45F0F4  +
mov ecx esi +
call loc_405080  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
push edi  +
mov [ebp+var_4] ebx +
call sub_403AC0  +
mov esi eax +
cmp esi [ebx] +
jz loc_40DC7F  +
cmp dword ptr [esi+24h] 8 +
lea eax [esi+10h] +
mov ecx [eax+10h] +
jb loc_40DC69  +
mov eax [eax] +
push ecx  +
push eax  +
push dword ptr [edi+10h]  +
push ecx  +
mov ecx edi +
call loc_403170  +
test eax eax +
js loc_40DC7F  +
mov [ebp+arg_0] esi +
jmp loc_40DC84  +
mov eax [ebx] +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
mov eax [eax] +
cmp eax [ebx] +
jnz loc_40DCBB  +
cmp dword ptr [edi+14h] 8 +
jb loc_40DC97  +
mov eax [edi] +
jmp loc_40DC99  +
mov eax edi +
push eax  +
call ds:PathIsDirectoryW  +
mov ecx [ebp+var_4] +
test eax eax +
push edi  +
setnz bl  +
call sub_40BED0  +
pop edi  +
pop esi  +
mov [eax] bl +
mov al bl +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
mov al [eax+28h] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45354B  +
mov eax large fs:0 +
push eax  +
sub esp 224h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0  +
call ds:GetModuleHandleW  +
push 104h  +
lea ecx [ebp+Filename] +
push ecx  +
push eax  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_40DE41  +
xor eax eax +
mov [ebp+var_21C] 7 +
mov [ebp+var_220] 0 +
mov word ptr [ebp+var_230] ax +
cmp [ebp+Filename] ax +
jnz loc_40DD4C  +
xor ecx ecx +
jmp loc_40DD64  +
lea ecx [ebp+Filename] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40DD55  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp+Filename] +
push eax  +
lea ecx [ebp+var_230] +
call loc_402720  +
push 1  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_230] +
call loc_405000  +
cmp eax 0FFFFFFFFh +
jz loc_40DE29  +
lea ecx [eax+1] +
cmp [ebp+var_220] ecx +
jnb loc_40DDAC  +
push offset aInvalidStringP  +
call sub_437FB0  +
cmp [ebp+var_21C] 8 +
lea eax [ebp+var_230] +
mov [ebp+var_220] ecx +
cmovnb eax [ebp+var_230] +
xor edx edx +
mov [eax+ecx*2] dx +
xor ecx ecx +
cmp ds:word_462278 cx +
mov eax 9 +
cmovz eax ecx +
lea ecx [ebp+var_230] +
push eax  +
push offset word_462278  +
call loc_405080  +
cmp [ebp+var_21C] 8 +
lea edx [ebp+var_230] +
cmovnb edx [ebp+var_230] +
cmp word ptr [edx] 0 +
jnz loc_40DE0C  +
xor ecx ecx +
jmp loc_40DE20  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40DE11  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx edi +
call loc_402720  +
mov eax [ebp+var_21C] +
cmp eax 8 +
jb loc_40DE41  +
inc eax  +
push eax  +
push [ebp+var_230]  +
call loc_402950  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453599  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 0 +
mov eax [esi] +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40DEAB  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov edx eax +
test edx edx +
jnz loc_40DEB9  +
call sub_4167F5  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov edx eax +
xor ecx ecx +
test edx edx +
setnz cl  +
test ecx ecx +
jnz loc_40DECE  +
push 80004005h  +
call loc_405FF0  +
mov eax [edx] +
mov ecx edx +
call dword ptr [eax+0Ch]  +
mov ebx [ebp+8] +
add eax 10h +
mov [ebx] eax +
mov edi [ebp+10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 1 +
test edi edi +
jnz loc_40DEF6  +
xor edx edx +
jmp loc_40DF0F  +
mov edx edi +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_40DF00  +
sub edx ecx +
sar edx 1 +
mov ecx [esi] +
push edx  +
push edi  +
push dword ptr [ecx-0Ch]  +
push ecx  +
push ebx  +
call loc_40DF40  +
add esp 14h +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
add ebx [ebp+18h] +
js loc_40DFB0  +
push esi  +
mov esi [ebp+8] +
mov ecx 1 +
push edi  +
mov eax [esi] +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax ebx +
or ecx eax +
jge loc_40DF6C  +
push ebx  +
mov ecx esi +
call sub_405E10  +
mov eax [ebp+10h] +
mov edi [esi] +
mov ecx edi +
lea esi [eax+eax] +
push esi  +
push dword ptr [ebp+0Ch]  +
mov edx esi +
call sub_4060B0  +
mov eax [ebp+18h] +
lea ecx [esi+edi] +
lea edx [eax+eax] +
push edx  +
push dword ptr [ebp+14h]  +
call sub_4060B0  +
mov eax [ebp+8] +
add esp 10h +
mov ecx [eax] +
pop edi  +
pop esi  +
cmp ebx [ecx-8] +
jg loc_40DFB0  +
mov [ecx-0Ch] ebx +
xor ecx ecx +
mov eax [eax] +
mov [eax+ebx*2] cx +
pop ebx  +
pop ebp  +
retn   +
***
push 80070057h  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4535E1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 0  +
mov dword ptr [ebp-10h] 0 +
call sub_43F1FC  +
mov esi [ebp+8] +
add esp 4 +
mov [ebp-1Ch] eax +
mov [ebp-18h] edx +
mov dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40E027  +
mov eax [esi] +
jmp loc_40E029  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
push ecx  +
mov [ebp-4] ecx +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-1Ch] +
mov dword ptr [ebp-10h] 1 +
call loc_40E120  +
mov dword ptr [ebp-4] 1 +
mov edx [eax] +
cmp word ptr [edx] 0 +
jnz loc_40E058  +
xor ecx ecx +
jmp loc_40E06F  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E060  +
sub ecx edi +
sar ecx 1 +
push ecx  +
push edx  +
mov ecx esi +
call loc_402720  +
mov byte ptr [ebp-4] 0 +
or ecx 0FFFFFFFFh +
mov eax [ebp-14h] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_40E097  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [eax] +
mov edi [esi] +
sub edi 10h +
lea edx [ecx-10h] +
cmp edx edi +
jz loc_40E115  +
cmp dword ptr [edi+0Ch] 0 +
push ebx  +
lea ebx [edi+0Ch] +
jl loc_40E109  +
mov eax [edx] +
cmp eax [edi] +
jnz loc_40E109  +
push edx  +
call loc_408180  +
add esp 4 +
mov [ebp+arg_0] eax +
or ecx 0FFFFFFFFh +
xadd [ebx] ecx +
dec ecx  +
test ecx ecx +
jg loc_40E0FB  +
mov ecx [edi] +
push edi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax [ebp+arg_0] +
add eax 10h +
pop ebx  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword ptr [ecx-0Ch]  +
push ecx  +
mov ecx esi +
call loc_408610  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-128h] +
push ecx  +
push eax  +
mov dword ptr [ebp-12Ch] 0 +
call sub_43F172  +
add esp 8 +
test eax eax +
jnz loc_40E1A1  +
lea eax [ebp-128h] +
push eax  +
push offset aYMDHMS  +
lea eax [ebp-104h] +
push 80h  +
push eax  +
call sub_441A6B  +
add esp 10h +
test eax eax +
jnz loc_40E180  +
mov [ebp-104h] ax +
lea eax [ebp-104h] +
mov ecx esi +
push eax  +
call sub_408700  +
mov ecx [ebp-4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_405FF0  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453613  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 0 +
mov dword ptr [esi] offset off_4626E0 +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 8 +
jb loc_40E201  +
mov eax [esi+4] +
jmp loc_40E204  +
lea eax [esi+4] +
mov edi [ebp+8] +
xor ecx ecx +
mov [eax] cx +
cmp [edi] cx +
jz loc_40E225  +
mov ecx edi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E216  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esi+4] +
call loc_402720  +
mov edi [ebp+0Ch] +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov dword ptr [esi+30h] 7 +
mov dword ptr [esi+2Ch] 0 +
mov [esi+1Ch] ax +
cmp [edi] ax +
jnz loc_40E253  +
xor ecx ecx +
jmp loc_40E26F  +
mov ecx edi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E260  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esi+1Ch] +
call loc_402720  +
mov dword ptr [esi+34h] 0 +
mov eax esi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+40h] 0 +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_40E2F0  +
test [ebp+arg_0] 1 +
jz loc_40E2DC  +
push 4Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
lea ecx [edi+40h] +
mov dword ptr [edi] offset off_4626E0 +
call sub_40CB70  +
mov ecx [edi+40h] +
test ecx ecx +
jz loc_40E34F  +
mov eax [edi+48h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+40h] 0 +
mov dword ptr [edi+44h] 0 +
mov dword ptr [edi+48h] 0 +
mov eax [edi+30h] +
lea esi [edi+1Ch] +
cmp eax 8 +
jb loc_40E363  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40E379  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+4] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40E392  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40E3A8  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi] offset off_461894 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
test edi edi +
jnz loc_40E427  +
cmp [esi+38h] edi +
jnz loc_40E3F2  +
push offset aUixplatformstr  +
call sub_40E480  +
mov [esi+38h] eax +
mov edi [ebp+arg_0] +
mov ecx [esi+38h] +
push edi  +
call sub_411840  +
test eax eax +
jnz loc_40E476  +
cmp [esi+34h] eax +
jnz loc_40E416  +
push offset aUixstringtable  +
mov ecx esi +
call sub_40E480  +
mov [esi+34h] eax +
mov ecx [esi+34h] +
push edi  +
call sub_411840  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
pop ebp  +
retn 8  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_40E462  +
cmp word ptr [edi] 0 +
lea edx [eax+4] +
jnz loc_40E43B  +
xor ecx ecx +
jmp loc_40E44F  +
mov ecx edi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E440  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edi  +
push dword ptr [edx+10h]  +
push ecx  +
mov ecx edx +
call loc_403170  +
test eax eax +
jz loc_40E46B  +
mov ecx esi +
push edi  +
call sub_40E480  +
mov [esi+3Ch] eax +
push [ebp+arg_0]  +
mov ecx [esi+3Ch] +
call sub_411840  +
pop edi  +
pop esi  +
pop ebx  +
pop ecx  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_453667  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_14] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov esi [ebp+arg_0] +
push esi  +
call loc_40E590  +
test eax eax +
jnz loc_40E570  +
xor ecx ecx +
mov [ebp+var_18] 7 +
push 0FFFFFFFFh  +
push ecx  +
lea eax [edi+4] +
mov word ptr [ebp+var_2C] cx +
push eax  +
lea ecx [ebp+var_2C] +
mov [ebp+var_1C] 0 +
call loc_402A60  +
sub esp 8 +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_2C] +
call loc_40C090  +
cmp word ptr [esi] 0 +
jnz loc_40E4FC  +
xor ecx ecx +
jmp loc_40E510  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E501  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp+var_2C] +
call loc_405080  +
push 28h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_30] eax +
mov byte ptr [ebp+var_4] 1 +
test eax eax +
jz loc_40E547  +
cmp [ebp+var_18] 8 +
lea ecx [ebp+var_2C] +
push esi  +
cmovnb ecx [ebp+var_2C] +
push ecx  +
mov ecx eax +
call loc_411660  +
mov esi eax +
jmp loc_40E549  +
xor esi esi +
lea eax [ebp+var_30] +
mov byte ptr [ebp+var_4] 0 +
push eax  +
lea ecx [edi+40h] +
mov [ebp+var_30] esi +
call sub_40CA80  +
mov ecx [ebp+var_18] +
cmp ecx 8 +
jb loc_40E56E  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
call loc_402950  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax+40h] +
mov [ebp-4] eax +
cmp esi [eax+44h] +
jz loc_40E5ED  +
mov edi [ebp+8] +
cmp word ptr [edi] 0 +
mov ebx [esi] +
jnz loc_40E5B3  +
xor eax eax +
jmp loc_40E5D0  +
mov eax edi +
lea ecx [eax+2] +
mov [ebp+8] ecx +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40E5C0  +
sub eax [ebp+8] +
sar eax 1 +
push eax  +
push edi  +
push dword ptr [ebx+14h]  +
push ecx  +
lea ecx [ebx+4] +
call loc_403170  +
test eax eax +
jz loc_40E5F8  +
mov eax [ebp-4] +
add esi 4 +
cmp esi [eax+44h] +
jnz loc_40E5A7  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_45324F  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_473A1C +
test eax eax +
jnz loc_40E676  +
push 4Ch  +
call sub_4139EA  +
add esp 4 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40E66F  +
mov ecx eax +
call loc_40E690  +
mov dword_473A1C eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
xor eax eax +
mov dword_473A1C eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4536AB  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp-14h] esi +
lea eax [ebp-10h] +
mov dword ptr [ebp-4] 0 +
push eax  +
mov dword ptr [esi] offset off_461888 +
mov [ebp-10h] esi +
call sub_408940  +
mov dword ptr [ebp-4] 1 +
mov edi ds:off_45EF64 +
mov dword ptr [esi] offset off_4626E8 +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 8 +
jb loc_40E702  +
mov eax [esi+4] +
jmp loc_40E705  +
lea eax [esi+4] +
xor ecx ecx +
mov [eax] cx +
cmp [edi] cx +
jz loc_40E723  +
mov ecx edi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E714  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esi+4] +
call loc_402720  +
mov byte ptr [ebp-4] 2 +
xor eax eax +
mov edi ds:off_45EF64 +
mov dword ptr [esi+30h] 7 +
mov dword ptr [esi+2Ch] 0 +
mov [esi+1Ch] ax +
cmp [edi] ax +
jnz loc_40E754  +
xor ecx ecx +
jmp loc_40E76F  +
mov ecx edi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40E760  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push edi  +
lea ecx [esi+1Ch] +
call loc_402720  +
mov dword ptr [esi+34h] 0 +
mov eax esi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov dword ptr [esi+40h] 0 +
mov dword ptr [esi+44h] 0 +
mov dword ptr [esi+48h] 0 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
call sub_40E7F0  +
test [ebp+arg_0] 1 +
jz loc_40E7DC  +
push 4Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453704  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov edi ecx +
mov [ebp+var_14] edi +
mov dword ptr [edi] offset off_4626E8 +
mov [ebp+var_4] 4 +
mov esi [edi+44h] +
sub esi [edi+40h] +
sar esi 2 +
test esi esi +
jz loc_40E886  +
mov byte ptr [ebp+var_4] 5 +
dec esi  +
mov eax [edi+44h] +
mov ecx [edi+40h] +
sub eax ecx +
sar eax 2 +
mov [ebp+var_18] esi +
cmp eax esi +
ja loc_40E870  +
push offset aInvalidVectorT  +
call sub_437FB0  +
mov eax offset loc_40E861 +
retn   +
mov esi [ebp-18h] +
mov dword ptr [ebp-4] 4 +
mov edi [ebp-14h] +
jmp loc_40E836  +
mov ecx [ecx+esi*4] +
test ecx ecx +
jz loc_40E87D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov [ebp+var_4] 4 +
jmp loc_40E836  +
mov eax [edi+40h] +
mov [edi+44h] eax +
mov ecx [edi+40h] +
mov dword_473A1C 0 +
test ecx ecx +
jz loc_40E8C1  +
mov eax [edi+48h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+40h] 0 +
mov dword ptr [edi+44h] 0 +
mov dword ptr [edi+48h] 0 +
mov ecx [edi+34h] +
test ecx ecx +
jz loc_40E8EC  +
mov eax [edi+3Ch] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+34h] 0 +
mov dword ptr [edi+38h] 0 +
mov dword ptr [edi+3Ch] 0 +
mov eax [edi+30h] +
lea esi [edi+1Ch] +
cmp eax 8 +
jb loc_40E900  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40E916  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+4] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40E92F  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_40E945  +
mov esi [esi] +
xor eax eax +
mov ecx edi +
mov [esi] ax +
call sub_4088E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_45372F  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov edi [ebp+arg_0] +
push edi  +
call loc_40EBD0  +
test eax eax +
jnz loc_40EA01  +
push edi  +
mov ecx esi +
call loc_40EB30  +
test eax eax +
jz loc_40E9B7  +
add eax 4 +
mov [ebp+arg_0] eax +
jnz loc_40E9F5  +
push 44h  +
call sub_4139EA  +
add esp 4 +
mov [ebp+arg_0] eax +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40E9D9  +
push edi  +
mov ecx eax +
call loc_40C440  +
jmp loc_40E9DB  +
xor eax eax +
mov [ebp+var_4] 0FFFFFFFFh +
test eax eax +
jz loc_40E9EE  +
add eax 4 +
mov [ebp+arg_0] eax +
jmp loc_40E9F5  +
mov [ebp+arg_0] 0 +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [esi+34h] +
call sub_40CA80  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
cmp word ptr [esi] 0 +
jnz loc_40EA35  +
mov edx esi +
lea ecx [edx+2] +
mov eax [ecx+44h] +
push esi  +
lea esi [ecx+40h] +
lea ecx [ebp+arg_0] +
cmp ecx eax +
jnb loc_40EB07  +
mov ecx [esi] +
lea edx [ebp+arg_0] +
cmp ecx edx +
ja loc_40EB07  +
push edi  +
mov edi edx +
sub edi ecx +
sar edi 2 +
cmp eax [esi+8] +
jnz loc_40EAEF  +
push ecx  +
mov ecx esi +
call loc_408A20  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40EAFD  +
mov eax [esi] +
mov eax [eax+edi*4] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
cmp eax [esi+8] +
jnz loc_40EB14  +
push ecx  +
mov ecx esi +
call loc_408A20  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_40EB20  +
mov eax [ebp+arg_0] +
mov [ecx] eax +
add dword ptr [esi+4] 4 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax+40h] +
mov [ebp-4] eax +
cmp esi [eax+44h] +
jz loc_40EBAD  +
mov ebx [ebp+8] +
push 0  +
push offset off_470868  +
push offset off_47083C  +
push 0  +
push dword ptr [esi]  +
call sub_452444  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_40EBA2  +
cmp word ptr [ebx] 0 +
jnz loc_40EB78  +
xor ecx ecx +
jmp loc_40EB90  +
mov ecx ebx +
lea eax [ecx+2] +
mov [ebp+8] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40EB80  +
sub ecx [ebp+8] +
sar ecx 1 +
push ecx  +
push ebx  +
push dword ptr [edi+18h]  +
push ecx  +
lea ecx [edi+8] +
call loc_403170  +
test eax eax +
jz loc_40EBB8  +
mov eax [ebp-4] +
add esi 4 +
cmp esi [eax+44h] +
jnz loc_40EB50  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov esi [eax+34h] +
mov [ebp-4] eax +
cmp esi [eax+38h] +
jz loc_40EC4D  +
mov ebx [ebp+8] +
push 0  +
push offset off_470868  +
push offset off_47083C  +
push 0  +
push dword ptr [esi]  +
call sub_452444  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_40EC42  +
cmp word ptr [ebx] 0 +
jnz loc_40EC18  +
xor ecx ecx +
jmp loc_40EC30  +
mov ecx ebx +
lea eax [ecx+2] +
mov [ebp+8] eax +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40EC20  +
sub ecx [ebp+8] +
sar ecx 1 +
push ecx  +
push ebx  +
push dword ptr [edi+18h]  +
push ecx  +
lea ecx [edi+8] +
call loc_403170  +
test eax eax +
jz loc_40EC58  +
mov eax [ebp-4] +
add esi 4 +
cmp esi [eax+38h] +
jnz loc_40EBF0  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [edi+4] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+38h] +
cmp esi [edi+34h] +
jz loc_40ECAC  +
mov eax [esi-4] +
add esi 0FFFFFFFCh +
test eax eax +
jz loc_40EC99  +
lea ecx [eax-4] +
test ecx ecx +
jz loc_40EC99  +
add ecx 4 +
jmp loc_40EC9B  +
xor ecx ecx +
mov eax [ecx] +
push 0  +
push ebx  +
call dword ptr [eax+4]  +
cmp eax ebx +
jnz loc_40ECAE  +
cmp esi [edi+34h] +
jnz loc_40EC83  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_45375F  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40ED2D  +
push [ebp+arg_0]  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_40ED2F  +
cmp [ebp+arg_0] eax +
jz loc_40ED2F  +
push 8007000Eh  +
call sub_437FD0  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_40ED46  +
push 8007000Eh  +
call sub_437FD0  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_40EDB8  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_40EDB2  +
test esi esi +
jz loc_40EDB2  +
mov eax [esi] +
test eax eax +
jz loc_40ED90  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_40EDA7  +
push eax  +
call sub_413A17  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
call ds:VariantClear  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_462744 +
call ds:CoUninitialize  +
push dword ptr [esi+4]  +
call ds:SysFreeString  +
test [ebp+arg_0] 1 +
mov dword ptr [esi] offset off_462498 +
jz loc_40EE02  +
push 0Ch  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
mov eax offset loc_40F059 +
mov eax offset loc_40F061 +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40F316 +
mov eax offset loc_40F31E +
retn   +
***
push 0FFFFFFFFh  +
mov byte ptr [ebp-2Dh] 0 +
mov byte ptr [ebp-2Dh] 0 +
mov eax offset loc_40F4AE +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40F699 +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40F7DC +
retn   +
***
and esp 0FFFFFFF8h +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi ecx +
mov edx [esi] +
test edx edx +
jz loc_40F82F  +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
mov dword ptr [esi] 0 +
mov ecx [ebp+arg_0] +
mov eax [ecx+4] +
dec eax  +
cmp eax 6 +
ja loc_40F88C  +
jmp ds:off_40F89C[eax*4]  +
push esi  +
push ecx  +
mov ecx edi +
call sub_40FFC0  +
cmp dword ptr [esi] 0 +
setnz al  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
push ecx  +
mov ecx edi +
call loc_410450  +
cmp dword ptr [esi] 0 +
setnz al  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
push ecx  +
call sub_410D40  +
cmp dword ptr [esi] 0 +
setnz al  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
push esi  +
push ecx  +
call sub_410F30  +
cmp dword ptr [esi] 0 +
pop edi  +
setnz al  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
mov eax offset loc_40FA34 +
mov eax offset loc_40FA3F +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40FD9A +
mov eax offset loc_40FDA5 +
mov eax offset loc_40FDB0 +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40FE6D +
mov eax offset loc_40FE9C +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_40FF88 +
mov eax offset loc_40FFAE +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_410411 +
mov eax offset loc_41042B +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453A66  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ebx ecx +
mov [ebp-1Ch] ebx +
push 0  +
push offset off_470740  +
push offset off_4706E4  +
push 0  +
push dword ptr [ebp+8]  +
call sub_452444  +
add esp 14h +
mov [ebp-2Ch] eax +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-20h] +
mov byte ptr [ebp-4] 2 +
push eax  +
push offset riid  +
push 17h  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
js loc_410502  +
push dword ptr [ebp-20h]  +
call ds:OleRun  +
mov esi eax +
test esi esi +
js loc_4104F5  +
mov eax [ebp-20h] +
lea edx [ebp-18h] +
push edx  +
push offset unk_462720  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
mov esi eax +
mov eax [ebp-20h] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
test esi esi +
jns loc_410509  +
mov dword ptr [ebp-18h] 0 +
push esi  +
call sub_412310  +
mov edi [ebp-18h] +
test edi edi +
jnz loc_410520  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-2Ch] +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jnz loc_410631  +
xor esi esi +
mov [ebp-28h] esi +
mov byte ptr [ebp-4] 3 +
mov eax [ebp-14h] +
test eax eax +
jz loc_410546  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
lea ecx [ebp-14h] +
mov dword ptr [ebp-14h] 0 +
mov eax [edi] +
push ecx  +
push esi  +
push edi  +
call dword ptr [eax+0BCh]  +
push eax  +
call sub_412310  +
push esi  +
mov byte ptr [ebp-4] 2 +
call ds:SysFreeString  +
push offset loc_4110E0  +
push offset loc_4110F0  +
push 2  +
push 4  +
lea eax [ebp-40h] +
push eax  +
call sub_437390  +
mov byte ptr [ebp-4] 4 +
mov eax [ebx+8] +
inc eax  +
lea eax [eax+eax*4] +
push eax  +
push ecx  +
lea ecx [ebp-30h] +
call loc_407E80  +
mov byte ptr [ebp-4] 5 +
mov eax [eax] +
test eax eax +
jnz loc_41064F  +
xor edi edi +
mov [ebp-20h] edi +
mov byte ptr [ebp-4] 7 +
or eax 0FFFFFFFFh +
mov edx [ebp-30h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4105CA  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push offset loc_4110E0  +
push offset loc_4110F0  +
push 2  +
push 4  +
lea eax [ebp-38h] +
push eax  +
call sub_437390  +
mov byte ptr [ebp-4] 8 +
xor esi esi +
mov ecx [ebp+8] +
xor ebx ebx +
mov eax [ecx] +
call dword ptr [eax+20h]  +
mov ecx eax +
mov eax [ebp-1Ch] +
mov [ebp-28h] ecx +
inc dword ptr [eax+8]  +
cmp ebx ecx +
jge loc_410856  +
mov ecx [ebp+8] +
push ebx  +
mov eax [ecx] +
call dword ptr [eax+24h]  +
mov esi eax +
mov [ebp-24h] esi +
cmp dword ptr [esi+4] 2 +
jnz loc_4107BE  +
mov esi [ebp-18h] +
test esi esi +
jnz loc_41066D  +
push 80004003h  +
call sub_437FD0  +
push eax  +
call ds:SysAllocString  +
mov esi eax +
mov [ebp-28h] esi +
test esi esi +
jnz loc_410535  +
push 8007000Eh  +
call loc_405FF0  +
push eax  +
call ds:SysAllocString  +
mov edi eax +
mov [ebp-20h] edi +
test edi edi +
jnz loc_4105AB  +
push 8007000Eh  +
call loc_405FF0  +
mov ecx [ebp-40h] +
test ecx ecx +
jz loc_41067A  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-40h] +
mov dword ptr [ebp-40h] 0 +
mov eax [esi] +
push ecx  +
mov ecx [ebp-1Ch] +
push dword ptr [ecx+4]  +
push esi  +
call dword ptr [eax+0C4h]  +
push eax  +
call sub_412310  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_4106AB  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-34h] +
test ecx ecx +
jz loc_4106B8  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-34h] +
mov dword ptr [ebp-34h] 0 +
mov eax [esi] +
push ecx  +
push dword ptr [ebp-40h]  +
push esi  +
call dword ptr [eax+54h]  +
push eax  +
call sub_412310  +
mov ecx [ebp-40h] +
test ecx ecx +
jnz loc_4106E3  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-34h] +
mov dword ptr [ebp-40h] 0 +
test ecx ecx +
jnz loc_410701  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov esi [ebp-18h] +
mov dword ptr [ebp-34h] 0 +
test esi esi +
jnz loc_41071F  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-3Ch] +
test ecx ecx +
jz loc_41072C  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-3Ch] 0 +
mov eax [esi] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+0C4h]  +
push eax  +
call sub_412310  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_410758  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-34h] +
test ecx ecx +
jz loc_410765  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-34h] +
mov dword ptr [ebp-34h] 0 +
mov eax [esi] +
push ecx  +
push dword ptr [ebp-3Ch]  +
push esi  +
call dword ptr [eax+54h]  +
push eax  +
call sub_412310  +
mov ecx [ebp-3Ch] +
test ecx ecx +
jnz loc_410790  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-34h] +
mov dword ptr [ebp-3Ch] 0 +
test ecx ecx +
jnz loc_4107AE  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov esi [ebp-24h] +
mov dword ptr [ebp-34h] 0 +
mov ecx [ebp-1Ch] +
lea eax [ebp-38h] +
push eax  +
push esi  +
call sub_40F810  +
test al al +
jz loc_410853  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_4107E4  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-34h] +
test ecx ecx +
jz loc_4107F1  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-34h] +
mov dword ptr [ebp-34h] 0 +
mov eax [esi] +
push ecx  +
push dword ptr [ebp-38h]  +
push esi  +
call dword ptr [eax+54h]  +
push eax  +
call sub_412310  +
mov ecx [ebp-38h] +
test ecx ecx +
jnz loc_41081C  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-34h] +
mov dword ptr [ebp-38h] 0 +
test ecx ecx +
jnz loc_41083A  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov esi [ebp-24h] +
inc ebx  +
mov ecx [ebp-28h] +
mov dword ptr [ebp-34h] 0 +
jmp loc_410600  +
***
mov ecx [ebp-28h] +
mov eax [ebp-1Ch] +
dec dword ptr [eax+8]  +
cmp ebx ecx +
jge loc_410899  +
push offset loc_4110E0  +
push 2  +
push 4  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 7 +
push eax  +
call sub_4373F9  +
mov eax ds:SysFreeString +
push edi  +
call eax  +
push offset loc_4110E0  +
push 2  +
push 4  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_4373F9  +
jmp loc_410AD0  +
***
test esi esi +
jz loc_410A70  +
cmp dword ptr [esi+4] 2 +
jnz loc_410A70  +
mov esi [ebp-18h] +
test esi esi +
jnz loc_4108BC  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-40h] +
test ecx ecx +
jz loc_4108C9  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ebx [ebp-1Ch] +
lea ecx [ebp-40h] +
push ecx  +
mov dword ptr [ebp-40h] 0 +
mov eax [esi] +
push dword ptr [ebx+4]  +
push esi  +
call dword ptr [eax+0C4h]  +
push eax  +
call sub_412310  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_4108FA  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-34h] +
test ecx ecx +
jz loc_410907  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-34h] +
mov dword ptr [ebp-34h] 0 +
mov eax [esi] +
push ecx  +
push dword ptr [ebp-40h]  +
push esi  +
call dword ptr [eax+54h]  +
push eax  +
call sub_412310  +
mov ecx [ebp-40h] +
test ecx ecx +
jnz loc_410932  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-34h] +
mov dword ptr [ebp-40h] 0 +
test ecx ecx +
jnz loc_410950  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [ebx+8] +
mov dword ptr [ebp-34h] 0 +
lea eax [eax+eax*4] +
push eax  +
push ecx  +
lea ecx [ebp+8] +
call loc_407E80  +
mov byte ptr [ebp-4] 9 +
mov esi [eax] +
cmp esi edi +
jz loc_4109A2  +
mov eax ds:SysFreeString +
push edi  +
call eax  +
test esi esi +
jz loc_41099D  +
push esi  +
call ds:SysAllocString  +
mov edi eax +
mov [ebp-20h] edi +
test edi edi +
jnz loc_4109A2  +
push 8007000Eh  +
call loc_405FF0  +
xor edi edi +
mov [ebp-20h] edi +
mov byte ptr [ebp-4] 8 +
or eax 0FFFFFFFFh +
mov edx [ebp+8] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4109C1  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov esi [ebp-18h] +
test esi esi +
jnz loc_4109D2  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-3Ch] +
test ecx ecx +
jz loc_4109DF  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-3Ch] +
mov dword ptr [ebp-3Ch] 0 +
mov eax [esi] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+0C4h]  +
push eax  +
call sub_412310  +
mov esi [ebp-14h] +
test esi esi +
jnz loc_410A0B  +
push 80004003h  +
call sub_437FD0  +
mov ecx [ebp-34h] +
test ecx ecx +
jz loc_410A18  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
lea ecx [ebp-34h] +
mov dword ptr [ebp-34h] 0 +
mov eax [esi] +
push ecx  +
push dword ptr [ebp-3Ch]  +
push esi  +
call dword ptr [eax+54h]  +
push eax  +
call sub_412310  +
mov ecx [ebp-3Ch] +
test ecx ecx +
jnz loc_410A43  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp-34h] +
mov dword ptr [ebp-3Ch] 0 +
test ecx ecx +
jnz loc_410A61  +
push 80004003h  +
call sub_437FD0  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov dword ptr [ebp-34h] 0 +
jmp loc_410A72  +
mov ebx eax +
lea eax [ebp-38h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp-14h] +
push ecx  +
mov ecx esp +
mov [ecx] eax +
test eax eax +
jz loc_410A8B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov ecx [ebp-2Ch] +
push ecx  +
mov ecx ebx +
call loc_410B20  +
push offset loc_4110E0  +
push 2  +
push 4  +
lea eax [ebp-38h] +
mov byte ptr [ebp-4] 7 +
push eax  +
call sub_4373F9  +
push edi  +
call ds:SysFreeString  +
push offset loc_4110E0  +
push 2  +
push 4  +
lea eax [ebp-40h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_4373F9  +
***
mov eax offset loc_410B0F +
mov eax offset loc_410B17 +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453AB4  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-18h] ecx +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 2 +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_410B71  +
push 80004003h  +
call sub_437FD0  +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+44h]  +
push eax  +
call sub_412070  +
mov edi [ebp+8] +
mov ebx [ebp+14h] +
mov esi [edi+28h] +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
push 0FFFFFFFFh  +
push offset loc_452620  +
mov eax large fs:0 +
push eax  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
test ecx ecx +
jz loc_410D2E  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
mov eax offset loc_410F13 +
mov eax offset loc_410F1B +
mov eax offset loc_410F23 +
retn   +
***
push 0FFFFFFFFh  +
mov ecx [ebp-0Ch] +
mov eax offset loc_4110B8 +
retn   +
***
mov ecx [ecx] +
test ecx ecx +
jz locret_4110EC  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
retn   +
***
mov dword ptr [ecx] 0 +
mov eax ecx +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
mov dword ptr [esi] 0 +
test ecx ecx +
jz loc_411150  +
mov eax [ecx] +
lea edx [ebp+8] +
push ebx  +
push edi  +
push edx  +
push offset unk_462720  +
push ecx  +
mov dword ptr [ebp+8] 0 +
call dword ptr [eax]  +
mov ecx [esi] +
xor ebx ebx +
mov edi eax +
test edi edi +
cmovns ebx [ebp+8] +
test ecx ecx +
jz loc_411140  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov [esi] ebx +
test edi edi +
jns loc_41114E  +
cmp edi 80004002h +
jnz loc_411157  +
pop edi  +
pop ebx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push edi  +
call sub_437FD0  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_411176  +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push eax  +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_41116F  +
push 8007000Eh  +
call loc_405FF0  +
push dword ptr [ecx]  +
call ds:SysFreeString  +
retn   +
***
push esi  +
mov esi ecx +
mov eax [esi+4] +
mov dword ptr [esi] offset off_46275C +
test eax eax +
jz loc_4111BA  +
push eax  +
call ds:FreeLibrary  +
test [ebp+arg_0] 1 +
jz loc_4111CB  +
push 8  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
lea eax [ebp-20Ch] +
mov edx 208h +
mov byte ptr [eax] 0 +
lea eax [eax+1] +
sub edx 1 +
jnz loc_411202  +
push 104h  +
lea eax [ebp-20Ch] +
push eax  +
push dword ptr [ecx+4]  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_41128F  +
cmp word ptr [ebp-20Ch] 0 +
jnz loc_411234  +
xor ecx ecx +
jmp loc_41124F  +
lea ecx [ebp-20Ch] +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_411240  +
sub ecx edx +
sar ecx 1 +
push ecx  +
lea eax [ebp-20Ch] +
mov ecx esi +
push eax  +
call loc_402720  +
sub esp 8 +
mov dword ptr [ebp-210h] 5Ch +
lea eax [ebp-210h] +
mov ecx esi +
push eax  +
call sub_408080  +
cmp [esi+10h] eax +
jb loc_4112A0  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_411289  +
mov esi [esi] +
xor ecx ecx +
mov [esi+eax*2] cx +
mov ecx [ebp-4] +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
push 0FFFFFFFFh  +
push offset loc_453B67  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax dword_473B3C +
test eax eax +
jnz loc_411335  +
push 1Ch  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp+var_14] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_41132B  +
lea eax [ebp+var_10] +
mov byte ptr [ebp+var_4] 1 +
push eax  +
mov dword ptr [esi] offset off_461888 +
mov [ebp+var_10] esi +
call sub_408940  +
mov dword ptr [esi] offset off_4627B8 +
xor eax eax +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
mov [esi+4] ax +
jmp loc_41132D  +
xor esi esi +
mov dword_473B3C esi +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
mov dword_473B3C 0 +
lea esi [edi+4] +
mov dword ptr [edi] offset off_4627B8 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41137B  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_411391  +
mov esi [esi] +
xor eax eax +
mov ecx edi +
mov [esi] ax +
call sub_4088E0  +
test [ebp+arg_0] 1 +
jz loc_4113AE  +
push 1Ch  +
push edi  +
call sub_436CA0  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453BA0  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov esi [ebp+8] +
mov eax [ebp+10h] +
mov edi [ebp+0Ch] +
push 24h  +
push esi  +
mov [ebp-48h] eax +
call sub_439476  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_41140F  +
mov eax esi +
jmp loc_4115BB  +
lea eax [ebx+2] +
push 24h  +
push eax  +
call sub_439476  +
add esp 8 +
mov [ebp-44h] eax +
test eax eax +
jz loc_411408  +
xor eax eax +
mov dword ptr [ebp-14h] 7 +
mov dword ptr [ebp-18h] 0 +
mov [ebp-28h] ax +
mov [ebp-4] eax +
mov dword ptr [ebp-2Ch] 7 +
mov [ebp-30h] eax +
mov [ebp-40h] ax +
mov byte ptr [ebp-4] 1 +
mov [edi+10h] eax +
cmp dword ptr [edi+14h] 8 +
jb loc_41145A  +
mov eax [edi] +
jmp loc_41145C  +
mov eax edi +
xor ecx ecx +
mov [eax] cx +
mov edx [edi+14h] +
cmp edx 8 +
jb loc_41146D  +
mov ecx [edi] +
jmp loc_41146F  +
mov ecx edi +
mov eax [edi+10h] +
add eax eax +
add ecx eax +
cmp edx 8 +
jb loc_41147F  +
mov edx [edi] +
jmp loc_411481  +
mov edx edi +
push ebx  +
push esi  +
push ecx  +
add eax edx +
mov ecx edi +
push eax  +
call sub_4115E0  +
cmp dword ptr [ebp-14h] 8 +
lea ecx [ebp-28h] +
mov eax [ebp-18h] +
cmovnb ecx [ebp-28h] +
mov esi [ebp-44h] +
lea eax [ecx+eax*2] +
lea ecx [ebp-28h] +
cmovnb ecx [ebp-28h] +
add esi 2 +
push esi  +
push ebx  +
push eax  +
push ecx  +
lea ecx [ebp-28h] +
call sub_4115E0  +
mov ecx [ebp-48h] +
test ecx ecx +
jz loc_4114F1  +
mov eax [ecx] +
lea edx [ebp-40h] +
push edx  +
lea edx [ebp-28h] +
push edx  +
call dword ptr [eax+4]  +
mov edx eax +
test edx edx +
jnz loc_4114FC  +
cmp dword ptr [ebp-14h] 8 +
lea eax [ebp-28h] +
cmovnb eax [ebp-28h] +
push eax  +
push offset aSUndefindedOrN  +
push 0Ch  +
push edx  +
push edx  +
push 1  +
call sub_40B0B0  +
add esp 18h +
cmp dword ptr [ebp-14h] 8 +
lea edx [ebp-28h] +
cmovnb edx [ebp-28h] +
cmp word ptr [edx] 0 +
jnz loc_411506  +
xor eax eax +
jmp loc_41151F  +
mov eax edx +
lea ebx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_411510  +
sub eax ebx +
sar eax 1 +
push eax  +
push edx  +
mov ecx edi +
call loc_405080  +
push 24h  +
push esi  +
call sub_439476  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_411552  +
lea eax [ebx+2] +
push 24h  +
push eax  +
call sub_439476  +
add esp 8 +
mov [ebp-44h] eax +
test eax eax +
jnz loc_411461  +
cmp word ptr [esi] 0 +
jnz loc_41155C  +
xor ecx ecx +
jmp loc_411570  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_411561  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
mov ecx edi +
call loc_405080  +
cmp dword ptr [edi+14h] 8 +
jb loc_411581  +
mov edi [edi] +
mov eax [ebp-2Ch] +
cmp eax 8 +
jb loc_411593  +
inc eax  +
push eax  +
push dword ptr [ebp-40h]  +
call loc_402950  +
mov ecx [ebp-14h] +
xor eax eax +
mov dword ptr [ebp-2Ch] 7 +
mov dword ptr [ebp-30h] 0 +
mov [ebp-40h] ax +
cmp ecx 8 +
jb loc_4115B9  +
inc ecx  +
push ecx  +
push dword ptr [ebp-28h]  +
call loc_402950  +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
sub ecx eax +
push edi  +
mov edi [ebp+arg_8] +
sar ecx 1 +
cmp edi edx +
jnz loc_41162F  +
cmp dword ptr [esi+14h] 8 +
jb loc_411618  +
mov edx [esi] +
sub eax edx +
push ecx  +
sar eax 1 +
mov ecx esi +
push eax  +
call loc_402D00  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
mov edx esi +
sub eax edx +
push ecx  +
sar eax 1 +
mov ecx esi +
push eax  +
call loc_402D00  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
cmp dword ptr [esi+14h] 8 +
push ebx  +
jb loc_41163A  +
mov ebx [esi] +
jmp loc_41163C  +
mov ebx esi +
sub edx edi +
sub eax ebx +
sar edx 1 +
push edx  +
push edi  +
push ecx  +
sar eax 1 +
mov ecx esi +
push eax  +
call loc_4075A0  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453BF6  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi ecx +
mov [ebp-14h] edi +
mov dword ptr [ebp-4] 0 +
mov dword ptr [edi] offset off_4627C4 +
mov dword ptr [edi+18h] 7 +
mov dword ptr [edi+14h] 0 +
cmp dword ptr [edi+18h] 8 +
jb loc_4116B6  +
mov eax [edi+4] +
jmp loc_4116B9  +
lea eax [edi+4] +
mov esi [ebp+0Ch] +
xor ecx ecx +
mov [eax] cx +
cmp [esi] cx +
jz loc_4116DF  +
mov ecx esi +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4116D0  +
sub ecx ebx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [edi+4] +
call loc_402720  +
lea esi [edi+1Ch] +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [ebp+0Ch] offset off_4628C8 +
push esi  +
push dword ptr [ebp+8]  +
mov byte ptr [ebp-4] 4 +
call sub_412510  +
mov edx [esi+4] +
mov eax edx +
mov ecx [esi] +
sub eax ecx +
sar eax 2 +
push offset sub_4118C0  +
push eax  +
call loc_411930  +
add esp 8 +
mov eax edi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_411790  +
test [ebp+arg_0] 1 +
jz loc_41177C  +
push 28h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453630  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
lea ecx [edi+1Ch] +
mov dword ptr [edi] offset off_4627C4 +
call sub_40CB70  +
mov ecx [edi+1Ch] +
test ecx ecx +
jz loc_4117EF  +
mov eax [edi+24h] +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword ptr [edi+1Ch] 0 +
mov dword ptr [edi+20h] 0 +
mov dword ptr [edi+24h] 0 +
mov eax [edi+18h] +
lea esi [edi+4] +
cmp eax 8 +
jb loc_411803  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_411819  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi] offset off_461894 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push ecx  +
push [ebp+arg_0]  +
mov esi ecx +
lea eax [ebp+arg_0] +
push eax  +
mov edx [esi+20h] +
mov ecx [esi+1Ch] +
call loc_411A60  +
add esp 0Ch +
cmp eax [esi+20h] +
jz loc_4118AA  +
mov edx [ebp+arg_0] +
mov esi [eax] +
push edi  +
cmp word ptr [edx] 0 +
jnz loc_411871  +
xor ecx ecx +
jmp loc_411887  +
mov ecx edx +
push ebx  +
lea ebx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_411877  +
sub ecx ebx +
sar ecx 1 +
pop ebx  +
push ecx  +
push edx  +
push dword ptr [esi+14h]  +
push ecx  +
lea ecx [esi+4] +
call loc_403170  +
pop edi  +
test eax eax +
jnz loc_4118AA  +
cmp dword ptr [esi+30h] 8 +
lea eax [esi+1Ch] +
jb loc_4118AC  +
mov eax [eax] +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453C26  +
mov eax large fs:0 +
push eax  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
add ecx 4 +
mov [ebp+var_4] 0 +
cmp dword ptr [ecx+14h] 8 +
mov edx [ecx+10h] +
jb loc_4118FD  +
mov ecx [ecx] +
push edx  +
push ecx  +
push dword ptr [eax+14h]  +
push ecx  +
lea ecx [eax+4] +
call loc_403170  +
xor ecx ecx +
test eax eax +
sets al  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
mov ebx edx +
push edi  +
mov edi ecx +
mov [esp+0Ch] ebx +
mov ecx [ebp+0Ch] +
mov esi ebx +
sub esi edi +
sar esi 2 +
cmp esi 20h +
jle loc_4119DF  +
mov ebx [ebp+8] +
pop esp  +
and al 0Ch +
cmp esi 2 +
jl loc_4119F2  +
push ecx  +
push ecx  +
mov edx ebx +
mov ecx edi +
call loc_411F10  +
add esp 8 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
mov esi edx +
mov ebx ecx +
sub esi ebx +
sar esi 2 +
test esi esi +
jle loc_411ADC  +
push edi  +
mov eax esi +
cdq   +
sub eax edx +
mov edi eax +
mov eax [ebp+8] +
sar edi 1 +
mov edx [ebx+edi*4] +
lea ecx [ebx+edi*4] +
mov [ebp-8] ecx +
mov eax [eax] +
cmp word ptr [eax] 0 +
jnz loc_411A97  +
xor eax eax +
jmp loc_411AB0  +
lea ecx [eax+2] +
mov [ebp-4] ecx +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_411AA0  +
sub eax [ebp-4] +
sar eax 1 +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax]  +
push dword ptr [edx+14h]  +
push ecx  +
lea ecx [edx+4] +
call loc_403170  +
test eax eax +
jns loc_411AD5  +
mov ebx [ebp-8] +
or eax 0FFFFFFFFh +
sub eax edi +
add ebx 4 +
add esi eax +
jmp loc_411AD7  +
mov esi edi +
test esi esi +
jg loc_411A76  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov [ebp-14h] ecx +
mov ecx [ebp+8] +
mov eax ecx +
push edi  +
mov edi edx +
sub eax edi +
mov [ebp-0Ch] edi +
sar eax 2 +
cdq   +
sub eax edx +
sar eax 1 +
push esi  +
lea ebx [edi+eax*4] +
lea eax [ecx-4] +
mov edx ebx +
push eax  +
mov ecx edi +
call sub_411CE0  +
add esp 8 +
lea edi [ebx+4] +
mov [ebp-4] edi +
cmp [ebp-0Ch] ebx +
jnb loc_411B62  +
mov edi [ebp-0Ch] +
push dword ptr [ebx]  +
lea eax [ebx-4] +
push dword ptr [eax]  +
mov [ebp-10h] eax +
call esi  +
add esp 8 +
test al al +
jnz loc_411B5F  +
mov eax [ebp-10h] +
push dword ptr [eax]  +
push dword ptr [ebx]  +
call esi  +
add esp 8 +
test al al +
jnz loc_411B5F  +
mov ebx [ebp-10h] +
cmp edi ebx +
jb loc_411B35  +
mov edi [ebp-4] +
mov eax [ebp+8] +
cmp edi eax +
jnb loc_411B9C  +
push dword ptr [ebx]  +
push dword ptr [edi]  +
call esi  +
add esp 8 +
test al al +
jnz loc_411B96  +
push dword ptr [edi]  +
push dword ptr [ebx]  +
call esi  +
add esp 8 +
test al al +
mov eax [ebp+8] +
jnz loc_411B99  +
add edi 4 +
cmp edi eax +
jb loc_411B70  +
jmp loc_411B99  +
mov eax [ebp+8] +
mov [ebp-4] edi +
mov edx ebx +
mov esi edi +
mov [ebp-8] edx +
mov [ebp-10h] esi +
cmp esi eax +
jnb loc_411BF0  +
mov eax [ebp-0Ch] +
cmp edx eax +
jbe loc_411C4B  +
mov esi [ebp-8] +
lea edi [esi-4] +
push dword ptr [ebx]  +
push dword ptr [edi]  +
call dword ptr [ebp+0Ch]  +
add esp 8 +
test al al +
jnz loc_411C2B  +
push dword ptr [edi]  +
push dword ptr [ebx]  +
call dword ptr [ebp+0Ch]  +
add esp 8 +
test al al +
jnz loc_411C3A  +
sub ebx 4 +
cmp ebx edi +
jz loc_411C2B  +
mov ecx [ebx] +
mov eax [edi] +
mov [ebx] eax +
mov [edi] ecx +
mov eax [ebp-0Ch] +
sub esi 4 +
sub edi 4 +
cmp eax esi +
jb loc_411C00  +
jmp loc_411C3D  +
mov eax [ebp-0Ch] +
mov edi [ebp-4] +
mov [ebp-8] esi +
mov edx [ebp-8] +
cmp edx eax +
mov esi [ebp-10h] +
jnz loc_411C84  +
cmp esi [ebp+8] +
jz loc_411CC8  +
cmp edi esi +
jz loc_411C5E  +
mov ecx [ebx] +
mov eax [edi] +
mov [ebx] eax +
mov [edi] ecx +
add edi 4 +
mov edx ebx +
mov [ebp-4] edi +
add ebx 4 +
mov edi esi +
add esi 4 +
mov ecx [edx] +
mov eax [edi] +
mov [edx] eax +
mov edx [ebp-8] +
mov eax [ebp+8] +
mov [edi] ecx +
mov edi [ebp-4] +
jmp loc_411BA3  +
***
sub edx 4 +
mov [ebp-8] edx +
cmp esi [ebp+8] +
jnz loc_411CB5  +
sub ebx 4 +
cmp edx ebx +
jz loc_411C9E  +
mov ecx [edx] +
mov eax [ebx] +
mov [edx] eax +
mov [ebx] ecx +
mov eax [edi-4] +
sub edi 4 +
mov ecx [ebx] +
mov [ebx] eax +
mov eax [ebp+8] +
mov [ebp-4] edi +
mov [edi] ecx +
jmp loc_411BA6  +
***
mov ecx [esi] +
mov eax [edx] +
mov [esi] eax +
add esi 4 +
mov eax [ebp+8] +
mov [edx] ecx +
jmp loc_411BA3  +
***
mov eax [ebp-14h] +
mov [eax+4] edi +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax ebx +
push esi  +
push edi  +
mov edi ecx +
mov esi edx +
sub eax edi +
sar eax 2 +
push dword ptr [edi]  +
cmp eax 28h +
jle loc_411E69  +
inc eax  +
cdq   +
and edx 7 +
add eax edx +
sar eax 3 +
lea ecx ds:0[eax*8] +
shl eax 2 +
push dword ptr [eax+edi]  +
lea ebx [eax+edi] +
mov [ebp+var_C] ecx +
mov [ebp+var_4] eax +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411D34  +
mov ecx [ebx] +
mov eax [edi] +
mov [ebx] eax +
mov [edi] ecx +
mov eax [ebp+var_C] +
push dword ptr [ebx]  +
push dword ptr [eax+edi]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411D68  +
mov edx [ebp+var_C] +
mov eax [ebx] +
mov ecx [edx+edi] +
mov [edx+edi] eax +
mov [ebx] ecx +
push dword ptr [edi]  +
push ecx  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411D68  +
mov ecx [ebx] +
mov eax [edi] +
mov [ebx] eax +
mov [edi] ecx +
mov edi [ebp+arg_4] +
mov eax esi +
sub eax [ebp+var_4] +
mov [ebp+var_8] eax +
push dword ptr [eax]  +
push dword ptr [esi]  +
call edi  +
add esp 8 +
test al al +
jz loc_411D8B  +
mov edx [ebp+var_8] +
mov ecx [esi] +
mov eax [edx] +
mov [esi] eax +
mov [edx] ecx +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
push dword ptr [eax+esi]  +
call edi  +
add esp 8 +
test al al +
jz loc_411DC3  +
mov edx [ebp+var_4] +
mov eax [esi] +
mov ecx [edx+esi] +
mov [edx+esi] eax +
mov eax [ebp+var_8] +
mov [esi] ecx +
push dword ptr [eax]  +
push ecx  +
call edi  +
add esp 8 +
test al al +
jz loc_411DC3  +
mov edx [ebp+var_8] +
mov ecx [esi] +
mov eax [edx] +
mov [esi] eax +
mov [edx] ecx +
mov eax [ebp+arg_0] +
mov edi eax +
sub eax [ebp+var_C] +
sub edi [ebp+var_4] +
mov [ebp+var_C] eax +
push dword ptr [eax]  +
push dword ptr [edi]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411DEA  +
mov edx [ebp+var_C] +
mov ecx [edi] +
mov eax [edx] +
mov [edi] eax +
mov [edx] ecx +
mov eax [ebp+arg_0] +
push dword ptr [edi]  +
push dword ptr [eax]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411E21  +
mov edx [ebp+arg_0] +
mov eax [edi] +
mov ecx [edx] +
mov [edx] eax +
mov eax [ebp+var_C] +
mov [edi] ecx +
push dword ptr [eax]  +
push ecx  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411E21  +
mov edx [ebp+var_C] +
mov ecx [edi] +
mov eax [edx] +
mov [edi] eax +
mov [edx] ecx +
push dword ptr [ebx]  +
push dword ptr [esi]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411E37  +
mov ecx [esi] +
mov eax [ebx] +
mov [esi] eax +
mov [ebx] ecx +
push dword ptr [esi]  +
push dword ptr [edi]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411EA8  +
mov ecx [edi] +
mov eax [esi] +
mov [edi] eax +
mov [esi] ecx +
push dword ptr [ebx]  +
push ecx  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411EA8  +
mov ecx [esi] +
mov eax [ebx] +
pop edi  +
mov [esi] eax +
pop esi  +
mov [ebx] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push dword ptr [esi]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411E7D  +
mov ecx [esi] +
mov eax [edi] +
mov [esi] eax +
mov [edi] ecx +
push dword ptr [esi]  +
push dword ptr [ebx]  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411EA8  +
mov ecx [ebx] +
mov eax [esi] +
mov [ebx] eax +
mov [esi] ecx +
push dword ptr [edi]  +
push ecx  +
call [ebp+arg_4]  +
add esp 8 +
test al al +
jz loc_411EA8  +
mov ecx [esi] +
mov eax [edi] +
mov [esi] eax +
mov [edi] ecx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi ecx +
sub edx edi +
mov eax edx +
and eax 0FFFFFFFCh +
cmp eax 8 +
jl loc_411F05  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov eax [edi+edx-4] +
lea esi [edx-4] +
mov [ebp-4] eax +
mov ecx edi +
mov eax [edi] +
mov [edi+edx-4] eax +
lea eax [ebp-4] +
push ebx  +
push eax  +
mov eax esi +
xor edx edx +
sar eax 2 +
push eax  +
call loc_411FD0  +
mov edx esi +
add esp 0Ch +
mov eax edx +
and eax 0FFFFFFFCh +
cmp eax 8 +
jge loc_411ED0  +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov eax edx +
mov esi ecx +
mov [ebp-10h] eax +
mov [ebp-0Ch] esi +
cmp esi eax +
jz loc_411FC2  +
push edi  +
lea edi [esi+4] +
mov [ebp-8] edi +
cmp edi eax +
jz loc_411FC1  +
push ebx  +
push dword ptr [esi]  +
mov ebx [edi] +
push ebx  +
mov [ebp-4] edi +
call dword ptr [ebp+8]  +
add esp 8 +
test al al +
jz loc_411F76  +
mov eax edi +
sub eax esi +
sar eax 2 +
lea ecx ds:0[eax*4] +
mov eax edi +
push ecx  +
sub eax ecx +
add eax 4 +
push esi  +
push eax  +
call loc_438E80  +
add esp 0Ch +
mov [esi] ebx +
jmp loc_411FB5  +
push dword ptr [edi-4]  +
lea esi [edi-4] +
push ebx  +
call dword ptr [ebp+8]  +
add esp 8 +
test al al +
jz loc_411FAD  +
mov edi [ebp-4] +
clc   +
mov eax [ebp-4] +
mov esi [ebp-0Ch] +
mov [eax] ebx +
add edi 4 +
mov [ebp-8] edi +
cmp edi [ebp-10h] +
jnz loc_411F40  +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx edx +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-4] ebx +
mov ecx [ebp+8] +
lea esi ds:2[ebx*2] +
cmp esi ecx +
jge loc_412018  +
push dword ptr [edi+esi*4-4]  +
push dword ptr [edi+esi*4]  +
call dword ptr [ebp+10h]  +
add esp 8 +
test al al +
jz loc_412002  +
dec esi  +
mov eax [edi+esi*4] +
mov ecx [ebp+8] +
mov [edi+ebx*4] eax +
mov ebx esi +
lea esi ds:2[esi*2] +
cmp esi ecx +
jl loc_411FF0  +
jnz loc_412024  +
mov eax [edi+ecx*4-4] +
mov [edi+ebx*4] eax +
lea ebx [ecx-1] +
lea eax [ebx-1] +
cdq   +
sub eax edx +
mov esi eax +
sar esi 1 +
cmp [ebp-4] ebx +
jge loc_41205C  +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
push dword ptr [edi+esi*4]  +
call dword ptr [ebp+10h]  +
add esp 8 +
test al al +
jz loc_41205C  +
mov eax [edi+esi*4] +
mov [edi+ebx*4] eax +
lea eax [esi-1] +
cdq   +
mov ebx esi +
sub eax edx +
mov esi eax +
sar esi 1 +
cmp [ebp-4] ebx +
jl loc_412033  +
mov eax [ebp+0Ch] +
mov eax [eax] +
mov [edi+ebx*4] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453C58  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jge loc_4120FC  +
xorps xmm0 xmm0 +
mov [ebp+var_14] 9 +
movq [ebp+var_1C] xmm0 +
mov [ebp+var_10] 80004005h +
mov [ebp+var_20] offset off_4627FC +
lea eax [ebp+var_30] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_1C] +
mov [ebp+var_34] offset off_45A818 +
push eax  +
movq [ebp+var_30] xmm0 +
call sub_4393F4  +
mov eax [ebp+var_14] +
add esp 8 +
mov [ebp+var_28] eax +
mov eax [ebp+var_10] +
mov [ebp+var_24] eax +
lea eax [ebp+var_34] +
push offset unk_46BBF4  +
push eax  +
mov [ebp+var_34] offset off_4627FC +
call sub_43A3FD  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
mov dword ptr [edi] offset off_4627F0 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov dword ptr [edi] offset off_4627E4 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_4627FC +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
mov dword ptr [edi] offset off_4627F0 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov dword ptr [edi] offset off_4627E4 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
add esp 8 +
mov dword ptr [edi] offset off_4627F0 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 0FFFFFFFFh  +
push offset loc_453C58  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_4122AC  +
xorps xmm0 xmm0 +
mov [ebp+var_14] 9 +
movq [ebp+var_1C] xmm0 +
mov [ebp+var_10] 80004005h +
mov [ebp+var_20] offset off_4627D8 +
lea eax [ebp+var_30] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_1C] +
mov [ebp+var_34] offset off_45A818 +
push eax  +
movq [ebp+var_30] xmm0 +
call sub_4393F4  +
mov eax [ebp+var_14] +
add esp 8 +
mov [ebp+var_28] eax +
mov eax [ebp+var_10] +
mov [ebp+var_24] eax +
lea eax [ebp+var_34] +
push offset unk_46BB84  +
push eax  +
mov [ebp+var_34] offset off_4627D8 +
call sub_43A3FD  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
mov dword ptr [edi] offset off_4627F0 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov dword ptr [edi] offset off_4627E4 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_4627D8 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_453C58  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jz loc_41239C  +
xorps xmm0 xmm0 +
mov [ebp+var_14] 9 +
movq [ebp+var_1C] xmm0 +
mov [ebp+var_10] 80004005h +
mov [ebp+var_20] offset off_4627CC +
lea eax [ebp+var_30] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+var_1C] +
mov [ebp+var_34] offset off_45A818 +
push eax  +
movq [ebp+var_30] xmm0 +
call sub_4393F4  +
mov eax [ebp+var_14] +
add esp 8 +
mov [ebp+var_28] eax +
mov eax [ebp+var_10] +
mov [ebp+var_24] eax +
lea eax [ebp+var_34] +
push offset unk_46BB28  +
push eax  +
mov [ebp+var_34] offset off_4627CC +
call sub_43A3FD  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
xorps xmm0 xmm0 +
push edi  +
mov edi ecx +
lea eax [edi+4] +
push eax  +
mov dword ptr [edi] offset off_45A818 +
movq qword ptr [eax] xmm0 +
lea eax [esi+4] +
push eax  +
call sub_4393F4  +
mov dword ptr [edi] offset off_4627F0 +
add esp 8 +
mov eax [esi+0Ch] +
mov [edi+0Ch] eax +
mov dword ptr [edi] offset off_4627E4 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax edi +
mov dword ptr [edi] offset off_4627CC +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
and esp 0FFFFFFF8h +
push [ebp+arg_4]  +
push 0  +
push edx  +
push ecx  +
call sub_405EC0  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_43EB58  +
add esp 18h +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea eax [ebp+arg_4] +
push eax  +
push ecx  +
push 1  +
call sub_441BB1  +
mov edx [ebp+arg_0] +
add esp 4 +
mov ecx eax +
call sub_412400  +
add esp 8 +
pop ecx  +
pop ebp  +
retn   +
***
mov ecx [esi+8] +
mov eax [esi+4] +
cmp ecx eax +
jz loc_412478  +
movzx eax byte ptr [ecx+esi+1Dh] +
inc ecx  +
mov [esi+8] ecx +
pop esi  +
retn   +
cmp byte ptr [esi+1Ch] 0 +
jz loc_412483  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
add [esi+10h] eax +
push edi  +
push dword ptr [esi+18h]  +
lea edi [esi+1Dh] +
push 2800h  +
push 1  +
push edi  +
call sub_441E01  +
add esp 10h +
mov [esi+4] eax +
mov dword ptr [esi+8] 0 +
test eax eax +
jnz loc_4124B5  +
pop edi  +
mov byte ptr [esi+1Ch] 1 +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
movzx eax byte ptr [edi] +
pop edi  +
mov dword ptr [esi+8] 1 +
pop esi  +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4628C8 +
jz loc_4124ED  +
push 4  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_4628C8 +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_453C80  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi [ebp+arg_0] +
lea eax [ebp+var_14] +
push offset aR  +
push esi  +
push eax  +
mov [ebp+var_14] 0 +
call sub_440122  +
mov ecx [ebp+var_14] +
add esp 0Ch +
test ecx ecx +
jz loc_412593  +
push [ebp+arg_4]  +
mov edx esi +
mov [ebp+var_4] 0 +
call loc_4125B0  +
add esp 4 +
mov esi eax +
jmp loc_412586  +
mov dword ptr [ebp+8] 0FFFFFFFFh +
mov eax offset loc_412583 +
retn   +
mov esi [ebp+8] +
push [ebp+var_14]  +
call sub_4401DF  +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453CE9  +
mov eax large fs:0 +
push eax  +
mov eax 2930h +
call sub_4376C0  +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov esi ecx +
mov eax [ebp+8] +
push 28E8h  +
mov [ebp-2934h] eax +
lea eax [ebp-292Ch] +
push 0  +
push eax  +
call sub_439AB0  +
add esp 0Ch +
mov [ebp-2914h] esi +
mov dword ptr [ebp-2920h] 1 +
mov [ebp-292Ch] edi +
mov dword ptr [ebp-30h] 0Fh +
mov dword ptr [ebp-34h] 0 +
mov byte ptr [ebp-44h] 0 +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
lea ecx [ebp-292Ch] +
mov byte ptr [ebp-4] 1 +
call sub_412A70  +
lea edx [ebp-44h] +
lea ecx [ebp-292Ch] +
call loc_4127E0  +
cmp eax 0FFFFFFFFh +
jz loc_41278A  +
cmp eax 3Dh +
jz loc_4126AB  +
mov eax [ebp-2924h] +
sub eax [ebp-2918h] +
add eax [ebp-291Ch] +
push offset aSyntaxError_  +
push eax  +
push dword ptr [ebp-2920h]  +
push dword ptr [ebp-292Ch]  +
push offset aPathSLineLuByt  +
call sub_412430  +
add esp 14h +
jmp loc_412773  +
lea edx [ebp-2Ch] +
lea ecx [ebp-292Ch] +
call loc_4127E0  +
cmp eax 3Bh +
jnz loc_412675  +
cmp dword ptr [ebp-34h] 0 +
setz al  +
test al al +
jnz loc_412773  +
push 34h  +
call sub_4139EA  +
mov esi eax +
add esp 4 +
mov [ebp-2938h] esi +
test esi esi +
jz loc_412755  +
cmp dword ptr [ebp-18h] 10h +
lea ebx [ebp-2Ch] +
lea ecx [ebp-44h] +
cmovnb ebx [ebp-2Ch] +
cmp dword ptr [ebp-30h] 10h +
cmovnb ecx [ebp-44h] +
mov dword ptr [esi] offset off_4628D0 +
mov dword ptr [esi+18h] 7 +
mov dword ptr [esi+14h] 0 +
cmp dword ptr [esi+18h] 8 +
jb loc_412718  +
mov eax [esi+4] +
jmp loc_41271B  +
lea eax [esi+4] +
xor edi edi +
mov [eax] di +
mov dword ptr [esi+30h] 7 +
mov [esi+2Ch] edi +
cmp dword ptr [esi+30h] 8 +
jb loc_412735  +
mov eax [esi+1Ch] +
jmp loc_412738  +
lea eax [esi+1Ch] +
xor edx edx +
mov [eax] dx +
lea edx [esi+4] +
mov byte ptr [ebp-4] 5 +
call loc_413450  +
lea edx [esi+1Ch] +
mov ecx ebx +
call loc_413450  +
jmp loc_412757  +
xor esi esi +
mov ecx [ebp-2934h] +
lea eax [ebp-2930h] +
mov byte ptr [ebp-4] 1 +
push eax  +
mov [ebp-2930h] esi +
call sub_40CA80  +
lea edx [ebp-44h] +
lea ecx [ebp-292Ch] +
call loc_4127E0  +
cmp eax 0FFFFFFFFh +
jnz loc_412670  +
mov eax [ebp-18h] +
cmp eax 10h +
jb loc_41279C  +
inc eax  +
push eax  +
push dword ptr [ebp-2Ch]  +
call loc_413170  +
mov eax [ebp-30h] +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
cmp eax 10h +
jb loc_4127C0  +
inc eax  +
push eax  +
push dword ptr [ebp-44h]  +
call loc_413170  +
xor eax eax +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
mov ebx edx +
push esi  +
push edi  +
mov esi ecx +
mov dword ptr [ebx+10h] 0 +
cmp dword ptr [ebx+14h] 10h +
jb loc_4127F8  +
mov eax [ebx] +
jmp loc_4127FA  +
mov eax ebx +
mov byte ptr [eax] 0 +
mov eax [esi+8] +
mov ecx [esi+4] +
cmp eax ecx +
jz loc_412815  +
movzx ecx byte ptr [eax+esi+1Dh] +
inc eax  +
mov [esi+8] eax +
jmp loc_41285A  +
cmp byte ptr [esi+1Ch] 0 +
jz loc_412820  +
or ecx 0FFFFFFFFh +
jmp loc_41285A  +
push dword ptr [esi+18h]  +
add [esi+10h] ecx +
lea edi [esi+1Dh] +
push 2800h  +
push 1  +
push edi  +
call sub_441E01  +
add esp 10h +
mov [esi+4] eax +
mov dword ptr [esi+8] 0 +
test eax eax +
jnz loc_412850  +
mov byte ptr [esi+1Ch] 1 +
or ecx 0FFFFFFFFh +
jmp loc_41285A  +
movzx ecx byte ptr [edi] +
mov dword ptr [esi+8] 1 +
lea eax [ecx+1] +
cmp eax 3Eh +
ja loc_4128AF  +
movzx eax ds:byte_4128DC[eax] +
jmp ds:off_4128C8[eax*4]  +
cmp ecx 0Dh +
jnz loc_412892  +
mov ecx esi +
call sub_412460  +
cmp eax 0Ah +
jz loc_412892  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412892  +
mov eax [esi+8] +
test eax eax +
jz loc_412892  +
dec eax  +
mov [esi+8] eax +
mov eax [esi+10h] +
inc dword ptr [esi+0Ch]  +
add eax [esi+8] +
mov [esi+14h] eax +
jmp loc_412800  +
***
mov ecx esi +
call loc_412920  +
jmp loc_412800  +
***
mov edx ecx +
mov ecx esi +
push ebx  +
call loc_412AE0  +
add esp 4 +
jmp loc_412800  +
***
pop edi  +
pop esi  +
mov eax ecx +
pop ebx  +
retn   +
***
push esi  +
mov esi ecx +
call sub_412460  +
cmp eax 2Fh +
jnz loc_412981  +
mov ecx esi +
call sub_412460  +
cmp eax 0FFFFFFFFh +
jz loc_412A20  +
cmp eax 0Ah +
jz loc_412973  +
mov ecx esi +
cmp eax 0Dh +
jz loc_412958  +
call sub_412460  +
cmp eax 0FFFFFFFFh +
jnz loc_412940  +
pop esi  +
retn   +
***
call sub_412460  +
cmp eax 0Ah +
jz loc_412973  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412973  +
mov eax [esi+8] +
test eax eax +
jz loc_412973  +
dec eax  +
mov [esi+8] eax +
mov eax [esi+10h] +
inc dword ptr [esi+0Ch]  +
add eax [esi+8] +
mov [esi+14h] eax +
pop esi  +
retn   +
***
cmp eax 2Ah +
jnz loc_4129EA  +
push ebx  +
xor ebx ebx +
push edi  +
mov eax [esi+10h] +
sub eax [esi+14h] +
add eax [esi+8] +
push offset aSyntaxError_  +
push eax  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi]  +
push offset aPathSLineLuByt  +
call sub_412430  +
add esp 14h +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412A20  +
mov eax [esi+8] +
test eax eax +
jz loc_412A20  +
dec eax  +
mov [esi+8] eax +
pop esi  +
retn   +
***
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi ecx +
call sub_412460  +
mov ecx edi +
mov esi eax +
call sub_412460  +
mov ecx edi +
mov ebx eax +
call sub_412460  +
cmp esi 0EFh +
jnz loc_412AA3  +
cmp ebx 0BBh +
jnz loc_412AA3  +
cmp eax 0BFh +
jz loc_412AD3  +
mov cl [edi+1Ch] +
test cl cl +
jnz loc_412AD3  +
mov eax [edi+8] +
test eax eax +
jz loc_412AB5  +
dec eax  +
mov [edi+8] eax +
test cl cl +
jnz loc_412AD3  +
mov eax [edi+8] +
test eax eax +
jz loc_412AC4  +
dec eax  +
mov [edi+8] eax +
test cl cl +
jnz loc_412AD3  +
mov eax [edi+8] +
test eax eax +
jz loc_412AD3  +
dec eax  +
mov [edi+8] eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx edx +
mov esi ecx +
nop   +
lea eax [ebx+1] +
cmp eax 5Dh +
ja loc_412B55  +
movzx eax ds:byte_412C4C[eax] +
jmp ds:off_412C2C[eax*4]  +
cmp ebx 0Dh +
jnz loc_412B28  +
mov ecx esi +
call sub_412460  +
cmp eax 0Ah +
jz loc_412B28  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412B28  +
mov eax [esi+8] +
test eax eax +
jz loc_412B28  +
dec eax  +
mov [esi+8] eax +
mov eax [esi+10h] +
inc dword ptr [esi+0Ch]  +
add eax [esi+8] +
mov [esi+14h] eax +
jmp loc_412BA2  +
mov ecx esi +
call loc_412920  +
jmp loc_412BA2  +
mov edx edi +
mov ecx esi +
call loc_412CB0  +
jmp loc_412BA2  +
mov edx edi +
mov ecx esi +
call loc_412E50  +
jmp loc_412BA2  +
mov ecx [edi+10h] +
or eax 0FFFFFFFFh +
sub eax ecx +
mov [ebp-4] ecx +
cmp eax 1 +
jbe loc_412C22  +
lea eax [ecx+1] +
push ecx  +
push eax  +
mov ecx edi +
call loc_4131D0  +
test al al +
jz loc_412BA2  +
cmp dword ptr [edi+14h] 10h +
mov ecx [edi+10h] +
jb loc_412B86  +
mov eax [edi] +
jmp loc_412B88  +
mov eax edi +
mov [eax+ecx] bl +
mov ecx [ebp-4] +
inc ecx  +
mov [edi+10h] ecx +
cmp dword ptr [edi+14h] 10h +
jb loc_412B9C  +
mov eax [edi] +
jmp loc_412B9E  +
mov eax edi +
mov byte ptr [eax+ecx] 0 +
mov eax [esi+8] +
mov ecx [esi+4] +
cmp eax ecx +
jz loc_412BBA  +
movzx ebx byte ptr [eax+esi+1Dh] +
inc eax  +
mov [esi+8] eax +
jmp loc_412AF0  +
***
cmp byte ptr [esi+1Ch] 0 +
jz loc_412BC8  +
or ebx 0FFFFFFFFh +
jmp loc_412AF0  +
***
push dword ptr [esi+18h]  +
add [esi+10h] ecx +
lea ebx [esi+1Dh] +
push 2800h  +
push 1  +
push ebx  +
call sub_441E01  +
add esp 10h +
mov [esi+4] eax +
mov dword ptr [esi+8] 0 +
test eax eax +
jnz loc_412BFB  +
mov byte ptr [esi+1Ch] 1 +
or ebx 0FFFFFFFFh +
jmp loc_412AF0  +
***
movzx ebx byte ptr [ebx] +
mov dword ptr [esi+8] 1 +
jmp loc_412AF0  +
***
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412C1B  +
mov eax [esi+8] +
test eax eax +
jz loc_412C1B  +
dec eax  +
mov [esi+8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi edx +
mov esi ecx +
mov eax [esi+8] +
mov ecx [esi+4] +
cmp eax ecx +
jz loc_412CD5  +
movzx ebx byte ptr [eax+esi+1Dh] +
inc eax  +
mov [esi+8] eax +
jmp loc_412D1A  +
cmp byte ptr [esi+1Ch] 0 +
jz loc_412CE0  +
or ebx 0FFFFFFFFh +
jmp loc_412D1A  +
push dword ptr [esi+18h]  +
add [esi+10h] ecx +
lea ebx [esi+1Dh] +
push 2800h  +
push 1  +
push ebx  +
call sub_441E01  +
add esp 10h +
mov [esi+4] eax +
mov dword ptr [esi+8] 0 +
test eax eax +
jnz loc_412D10  +
mov byte ptr [esi+1Ch] 1 +
or ebx 0FFFFFFFFh +
jmp loc_412D1A  +
movzx ebx byte ptr [ebx] +
mov dword ptr [esi+8] 1 +
lea eax [ebx+1] +
cmp eax 5Dh +
ja loc_412D71  +
movzx eax ds:byte_412DF0[eax] +
jmp ds:off_412DDC[eax*4]  +
cmp ebx 0Dh +
jnz loc_412D52  +
mov ecx esi +
call sub_412460  +
cmp eax 0Ah +
jz loc_412D52  +
cmp byte ptr [esi+1Ch] 0 +
jnz loc_412D52  +
mov eax [esi+8] +
test eax eax +
jz loc_412D52  +
dec eax  +
mov [esi+8] eax +
mov eax [esi+10h] +
inc dword ptr [esi+0Ch]  +
add eax [esi+8] +
mov [esi+14h] eax +
jmp loc_412CC0  +
***
mov edx edi +
mov ecx esi +
call loc_412E50  +
jmp loc_412CC0  +
***
mov ecx [edi+10h] +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax 1 +
jbe loc_412DD0  +
lea eax [ecx+1] +
push ecx  +
push eax  +
mov ecx edi +
mov [ebp-4] eax +
call loc_4131D0  +
test al al +
jz loc_412CC0  +
cmp dword ptr [edi+14h] 10h +
mov ecx [edi+10h] +
jb loc_412DA2  +
mov eax [edi] +
jmp loc_412DA4  +
mov eax edi +
mov [eax+ecx] bl +
mov ecx [ebp-4] +
mov [edi+10h] ecx +
cmp dword ptr [edi+14h] 10h +
jb loc_412DBE  +
mov eax [edi] +
mov byte ptr [eax+ecx] 0 +
jmp loc_412CC0  +
***
mov eax edi +
mov byte ptr [eax+ecx] 0 +
jmp loc_412CC0  +
***
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aStringTooLong  +
call sub_437F90  +
nop   +
push ebx  +
push esi  +
push edi  +
mov esi edx +
mov edi ecx +
call sub_412460  +
mov ebx eax +
lea ecx [ebx-22h] +
cmp ecx 52h +
ja loc_412ED8  +
movzx edx ds:byte_412F28[ecx] +
jmp ds:off_412F18[edx*4]  +
push 1  +
push offset asc_462880  +
mov ecx esi +
call loc_412FC0  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 1  +
push offset asc_462820  +
mov ecx esi +
call loc_412FC0  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi [esi+10h] +
or eax 0FFFFFFFFh +
sub eax edi +
cmp eax 1 +
jbe loc_412F0E  +
push ecx  +
inc edi  +
mov ecx esi +
push edi  +
call loc_4131D0  +
test al al +
jz loc_412F0A  +
cmp dword ptr [esi+14h] 10h +
mov ecx [esi+10h] +
jb loc_412EC0  +
mov eax [esi] +
jmp loc_412EC2  +
mov eax esi +
mov [eax+ecx] bl +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_412ED0  +
mov esi [esi] +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax [edi+10h] +
sub eax [edi+14h] +
add eax [edi+8] +
push offset aNotSupportedEs  +
push eax  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi]  +
push offset aPathSLineLuByt  +
call sub_412430  +
add esp 14h +
cmp byte ptr [edi+1Ch] 0 +
jnz loc_412F0A  +
mov eax [edi+8] +
test eax eax +
jz loc_412F0A  +
dec eax  +
mov [edi+8] eax +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
test edi edi +
jz loc_413025  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_412FDA  +
mov eax [esi] +
jmp loc_412FDC  +
mov eax esi +
cmp edi eax +
jb loc_413025  +
cmp ecx 10h +
jb loc_412FE9  +
mov edx [esi] +
jmp loc_412FEB  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax edi +
jbe loc_413025  +
cmp ecx 10h +
jb loc_41300F  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
mov ecx esi +
sub edi eax +
push edi  +
push esi  +
call loc_4130B0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push dword ptr [ebp+0Ch]  +
mov eax esi +
mov ecx esi +
sub edi eax +
push edi  +
push esi  +
call loc_4130B0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov ecx [esi+10h] +
or eax 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+0Ch] +
sub eax ecx +
mov [ebp+8] ecx +
cmp eax ebx +
jbe loc_413098  +
test ebx ebx +
jz loc_41308F  +
lea eax [ecx+ebx] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4131D0  +
test al al +
jz loc_41308F  +
cmp dword ptr [esi+14h] 10h +
jb loc_413056  +
mov ecx [esi] +
jmp loc_413058  +
mov ecx esi +
test ebx ebx +
jz loc_41306C  +
mov eax [esi+10h] +
push ebx  +
add eax ecx +
push edi  +
push eax  +
call loc_439530  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_413089  +
mov eax [esi] +
pop ebx  +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi ecx +
mov ecx [ebp+0Ch] +
mov eax [edi+10h] +
cmp eax ecx +
jb loc_41314F  +
mov ebx [ebp+10h] +
sub eax ecx +
mov ecx [esi+10h] +
cmp eax ebx +
mov [ebp+8] ecx +
cmovb ebx eax +
or eax 0FFFFFFFFh +
sub eax ecx +
cmp eax ebx +
jbe loc_413159  +
test ebx ebx +
jz loc_413146  +
lea eax [ecx+ebx] +
push ecx  +
push eax  +
mov ecx esi +
call loc_4131D0  +
test al al +
jz loc_413146  +
cmp dword ptr [edi+14h] 10h +
jb loc_4130FE  +
mov edi [edi] +
cmp dword ptr [esi+14h] 10h +
jb loc_413108  +
mov ecx [esi] +
jmp loc_41310A  +
mov ecx esi +
test ebx ebx +
jz loc_413123  +
mov eax [ebp+0Ch] +
add eax edi +
push ebx  +
push eax  +
mov eax [esi+10h] +
add eax ecx +
push eax  +
call loc_439530  +
add esp 0Ch +
mov ecx [ebp+8] +
add ecx ebx +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_413140  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax esi +
mov byte ptr [eax+ecx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push offset aInvalidStringP  +
call sub_437FB0  +
push offset aStringTooLong  +
call sub_437F90  +
push ebp  +
mov ebp esp +
mov ecx [ebp+0Ch] +
mov eax [ebp+8] +
cmp ecx 0FFFFFFFFh +
ja loc_4131AC  +
cmp ecx 1000h +
jb loc_41319F  +
test al 1Fh +
jnz loc_4131B1  +
mov ecx [eax-4] +
cmp ecx eax +
jnb loc_4131B6  +
sub eax ecx +
cmp eax 4 +
jb loc_4131BB  +
cmp eax 23h +
ja loc_4131C0  +
mov eax ecx +
push eax  +
call sub_413A17  +
add esp 4 +
pop ebp  +
retn 8  +
***
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
call sub_43C8C1  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp esi 0FFFFFFFEh +
ja loc_413216  +
cmp [ecx+14h] esi +
jnb loc_4131F7  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_413230  +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
test esi esi +
jnz loc_413209  +
mov [ecx+10h] esi +
cmp dword ptr [ecx+14h] 10h +
jb loc_413206  +
mov ecx [ecx] +
mov byte ptr [ecx] 0 +
xor eax eax +
cmp eax esi +
pop esi  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
push offset aStringTooLong  +
call sub_437F90  +
push 0FFFFFFFFh  +
push offset loc_453D20  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_18] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_413271  +
mov edi eax +
jmp loc_413298  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_413298  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_413298  +
mov edi 0FFFFFFFEh +
push ecx  +
lea ecx [edi+1] +
mov [ebp+var_4] 0 +
mov edx 1 +
call loc_401DB0  +
add esp 4 +
mov ecx eax +
jmp loc_4132E2  +
mov ecx [ebp+8] +
mov edx 1 +
mov [ebp-10h] esp +
mov [ebp+8] ecx +
push ecx  +
inc ecx  +
mov byte ptr [ebp-4] 2 +
call loc_401DB0  +
mov [ebp-14h] eax +
add esp 4 +
mov eax offset loc_4132D9 +
retn   +
mov esi [ebp-18h] +
mov edi [ebp+8] +
mov ecx [ebp-14h] +
mov ebx [ebp+arg_4] +
mov [ebp+var_14] ecx +
test ebx ebx +
jz loc_413307  +
cmp dword ptr [esi+14h] 10h +
jb loc_4132F6  +
mov eax [esi] +
jmp loc_4132F8  +
mov eax esi +
test ebx ebx +
jz loc_413307  +
push ebx  +
push eax  +
push ecx  +
call loc_439530  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_413318  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_413170  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_413330  +
mov eax [esi] +
jmp loc_413332  +
mov eax esi +
mov byte ptr [eax] 0 +
mov eax [ebp+var_14] +
mov [esi] eax +
mov [esi+14h] edi +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_413348  +
mov esi eax +
mov byte ptr [esi+ebx] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_4133D0  +
test [ebp+arg_0] 1 +
jz loc_4133BC  +
push 34h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi ecx +
lea esi [edi+1Ch] +
mov dword ptr [edi] offset off_4628D0 +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4133EE  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_413404  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
lea esi [edi+4] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_41341D  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call loc_402950  +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_413433  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov dword ptr [edi] offset off_461894 +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_453D40  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-18h] edx +
mov ebx ecx +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
mov dword ptr [ebp-14h] 0 +
call ds:MultiByteToWideChar  +
mov edi eax +
test edi edi +
jz loc_413531  +
xor ecx ecx +
mov dword ptr [ebp-4] 0 +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_413A1C  +
add esp 4 +
mov esi eax +
mov [ebp-14h] esi +
push edi  +
push esi  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 0FDE9h  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_413524  +
cmp word ptr [esi] 0 +
jnz loc_4134F4  +
xor ecx ecx +
push ecx  +
mov ecx [ebp-18h] +
push esi  +
call loc_402720  +
jmp loc_413524  +
***
mov ecx esi +
lea edx [ecx+2] +
mov eax offset loc_413521 +
sub esp 0Ch +
push ebx  +
mov eax dword_470D0C +
mov eax dword_470D08 +
mov eax dword_470D10 +
mov eax dword_470D14 +
mov eax dword_470D04 +
push esi  +
pop ebp  +
pop ebp  +
call sub_437660  +
call sub_4136F0  +
push esi  +
pop ebp  +
mov eax off_46E004 +
call sub_437517  +
call sub_419B8F  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_419BE3  +
push ebx  +
sub esp 21Ch +
call sub_437517  +
push 0FFFFFFFFh  +
mov eax [ecx] +
push esi  +
call sub_419BE3  +
call sub_419BC2  +
call sub_419B8F  +
push esi  +
push ebx  +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+4] 1 +
jnz loc_413F4D  +
or eax 0FFFFFFFFh +
jmp loc_413F5F  +
cmp dword ptr [eax+4] 0Fh +
jnz loc_413F5D  +
push 0  +
push dword ptr [eax]  +
call ds:ValidateRect  +
xor eax eax +
pop ebp  +
retn 8  +
***
call sub_419BC2  +
call sub_419BC2  +
call sub_419BC2  +
call sub_419BC2  +
push edi  +
call sub_437517  +
call sub_437517  +
cmp dword ptr [ecx+28h] 0 +
push ebx  +
call sub_419BE3  +
mov eax [ecx+24h] +
mov eax [ebp+arg_0] +
push [ebp+arg_0]  +
cmp [ebp+arg_0] 0 +
sub esp 20h +
pop ebp  +
push ecx  +
call sub_419B8F  +
call sub_43754B  +
push 0FFFFFFFFh  +
cmp [ebp+lpMultiByteStr] 0 +
push esi  +
push esi  +
call sub_43754B  +
call sub_413E25  +
push ecx  +
mov eax [ebp+arg_0] +
push ecx  +
push edi  +
cmp [ebp+arg_0] 0 +
xor eax eax +
call sub_437517  +
push esi  +
mov eax dword_470D28 +
call sub_437517  +
sub esp 224h +
push esi  +
push esi  +
push [ebp+arg_4]  +
mov eax [ecx] +
cmp dword ptr [esi+20h] 0 +
mov ecx [esi+8Ch] +
push esi  +
push esi  +
sub esp 230h +
push esi  +
sub esp 228h +
sub esp 10h +
lea eax [ebp+arg_10] +
push [ebp+arg_14]  +
xor eax eax +
call sub_437582  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
test [ebp+arg_0] 1 +
test [ebp+arg_0] 1 +
push esi  +
push esi  +
push edi  +
call sub_437517  +
call sub_43754B  +
sub esp 18h +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax ecx +
mov esi edi +
mov [ebp+var_4] eax +
cmp [ebp+lpName] esi +
jz loc_415EBC  +
call sub_419B8F  +
push 0F0h  +
push [ebp+lpName]  +
mov ebx [eax+0Ch] +
push ebx  +
call ds:FindResourceW  +
test eax eax +
jz loc_415EB9  +
push eax  +
push ebx  +
call ds:LoadResource  +
mov esi eax +
test esi esi +
jz loc_415EF5  +
push esi  +
call ds:LockResource  +
mov edi eax +
mov eax [ebp+var_4] +
xor ebx ebx +
inc ebx  +
test edi edi +
jz loc_415EDE  +
push [ebp+arg_8]  +
mov edx [eax] +
mov ecx eax +
push edi  +
push [ebp+arg_0]  +
call dword ptr [edx+20h]  +
mov ebx eax +
test esi esi +
jz loc_415EDE  +
push esi  +
call ds:FreeResource  +
mov eax [ebp+arg_0] +
mov ecx [eax+70h] +
test ecx ecx +
jz loc_415EF3  +
mov eax [ecx] +
push [ebp+arg_8]  +
call dword ptr [eax+0A0h]  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 4  +
mov eax offset loc_453DAA +
call sub_437517  +
push 24h  +
call sub_420FE8  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
test ecx ecx +
jz loc_415F24  +
call sub_415627  +
call sub_4374E0  +
retn   +
***
mov dword ptr [eax] offset off_456EA8 +
retn   +
***
push esi  +
mov eax [ecx] +
push [ebp+arg_4]  +
push esi  +
pop ebp  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push [ebp+arg_C]  +
push esi  +
sub esp 0Ch +
cmp [ebp+arg_0] 0 +
push ebx  +
mov edx [ebp+arg_4] +
push [ebp+arg_C]  +
push esi  +
call sub_43754B  +
push esi  +
push ecx  +
call sub_437517  +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_43EEDD  +
pop ecx  +
test eax eax +
jz loc_4168B0  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
push 8007000Eh  +
call loc_405FF0  +
int 3  +
mov eax ecx +
retn   +
***
push esi  +
test [ebp+arg_0] 1 +
call sub_437517  +
push ebx  +
push ecx  +
mov eax [ebp+hMem] +
mov eax [ebp+arg_0] +
mov dword ptr [ecx+4] 1 +
test [ebp+arg_0] 1 +
push ecx  +
push ecx  +
push ecx  +
mov eax [ecx] +
push esi  +
push 80h  +
sub esp 408h +
push ecx  +
push 0FFFFFFFFh  +
mov eax [ecx] +
push esi  +
cmp [ebp+arg_4] 110h +
push ecx  +
push ecx  +
push ebx  +
call sub_437582  +
push esi  +
mov eax [ebp+arg_4] +
push 0  +
push 0  +
push ebx  +
call sub_437582  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ecx+0A0h] +
push edi  +
xor eax eax +
retn   +
***
push ebx  +
push esi  +
cmp [ebp+arg_0] 0 +
mov eax [ecx+80h] +
mov eax [esi+90h] +
mov esi ecx +
call sub_43754B  +
mov edi ecx +
push esi  +
call sub_41B1F5  +
mov edi ecx +
push esi  +
mov eax [ebp+arg_0] +
call sub_437600  +
cmp dword_470CFC 0 +
call sub_437517  +
xor eax eax +
call sub_437517  +
call sub_437517  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
push esi  +
push esi  +
push esi  +
push esi  +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
sub esp 10h +
cmp dword ptr [ecx+4] 0 +
mov ecx [ebp+arg_0] +
push edi  +
push edi  +
push [ebp+arg_10]  +
push [ebp+uFormat]  +
push [ebp+arg_C]  +
push [ebp+arg_18]  +
push 1  +
push 1  +
push [ebp+arg_0]  +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
sub esp 10h +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
mov edi ecx +
push esi  +
push esi  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+nTabOrigin]  +
push [ebp+arg_C]  +
call sub_437517  +
call sub_437517  +
call sub_419B8F  +
xor eax eax +
push 0FFFFFFFFh  +
call sub_419B8F  +
push esi  +
call sub_419B8F  +
mov eax 80029C4Ah +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
cmp esi 0FFFFFFFEh +
jnz loc_41863B  +
call sub_419B8F  +
cmp dword ptr [eax+3Ch] 0 +
jz loc_418723  +
call sub_419B8F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
mov ecx [eax+3Ch] +
push [ebp+arg_0]  +
push ebx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_418705  +
push edi  +
cmp esi 0FFFFFFFDh +
jnz loc_4186C7  +
mov eax [ebp+arg_8] +
xor edi edi +
test eax eax +
jz loc_418723  +
mov eax [eax+30h] +
mov [ebp+arg_4] eax +
mov eax [ebx] +
call dword ptr [eax+2Ch]  +
mov ebx eax +
mov [ebp+arg_C] eax +
jmp loc_4186BF  +
test edi edi +
jnz loc_4186C3  +
mov esi [ebx+4] +
mov eax [esi+4] +
test eax eax +
jz loc_4186BA  +
mov ebx [ebp+arg_8] +
cmp dword ptr [esi+8] 0 +
jz loc_4186B7  +
test edi edi +
jnz loc_4186B7  +
cmp [ebp+arg_0] eax +
jnz loc_4186AD  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_418691  +
cmp [esi] eax +
jz loc_4186A4  +
jmp loc_4186AD  +
cmp dword ptr [esi] 0 +
jz loc_4186AD  +
push dword ptr [esi]  +
push eax  +
call sub_418AF8  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4186AD  +
mov eax [esi+8] +
xor edi edi +
mov [ebx+4] eax +
inc edi  +
mov eax [esi+10h] +
add esi 0Ch +
test eax eax +
jnz loc_418675  +
mov ebx [ebp+arg_C] +
mov ebx [ebx] +
mov [ebp+arg_C] ebx +
test ebx ebx +
jnz loc_418664  +
mov eax edi +
jmp loc_418704  +
cmp esi 0FFFFFFFFh +
jz loc_4186D8  +
mov edi esi +
movzx esi si +
shr edi 10h +
test edi edi +
jnz loc_4186DD  +
mov edi 111h +
mov eax [ebx] +
call dword ptr [eax+28h]  +
jmp loc_4186FA  +
push [ebp+arg_0]  +
push esi  +
push edi  +
push dword ptr [eax+4]  +
call sub_41AFBF  +
test eax eax +
jnz loc_41870B  +
mov eax [ebp+arg_4] +
call dword ptr [eax]  +
cmp dword ptr [eax] 0 +
mov [ebp+arg_4] eax +
jnz loc_4186E4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
push [ebp+arg_C]  +
push dword ptr [eax+10h]  +
push [ebp+arg_8]  +
push dword ptr [eax+14h]  +
push esi  +
push [ebp+arg_0]  +
push ebx  +
call loc_418893  +
jmp loc_418704  +
call sub_416A89  +
int 3  +
push esi  +
push 0Dh  +
mov esi ecx +
call sub_42F7DE  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+20h]  +
test eax eax +
jz loc_418745  +
mov ecx eax +
call sub_419C39  +
push 0Dh  +
call sub_42F853  +
mov eax [esi] +
mov ecx esi +
push 1  +
call dword ptr [eax+4]  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov edx [esi+0Ch] +
test edx edx +
jz loc_41878E  +
cmp dword ptr [esi+10h] 0 +
jnz loc_4187C4  +
mov ecx [esi+8] +
cmp ecx [esi+20h] +
jnb loc_4187C9  +
mov eax [ebp+8] +
neg eax  +
sbb eax eax +
and eax 8 +
or eax 400h +
push eax  +
push ecx  +
push dword ptr [edx+4]  +
call ds:CheckMenuItem  +
jmp loc_4187C4  +
mov eax [esi+14h] +
test eax eax +
jz loc_4187C9  +
push 0  +
push 0  +
push 87h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
test eax 2000h +
jz loc_4187C4  +
mov eax [esi+14h] +
push 0  +
push dword ptr [ebp+8]  +
push 0F1h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_416A89  +
int 3  +
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
mov esi ecx +
cmp [ebp+8] eax +
setnz al  +
mov edx [esi] +
push eax  +
call dword ptr [edx+4]  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_418825  +
cmp dword ptr [esi+10h] 0 +
jnz loc_418825  +
mov eax [esi+8] +
cmp eax [esi+20h] +
jnb loc_41882A  +
mov eax dword_472AD0 +
test eax eax +
jnz loc_41880E  +
call sub_4189BF  +
mov eax dword_472AD0 +
test eax eax +
jz loc_418825  +
push eax  +
mov eax [esi+0Ch] +
push 0  +
push 400h  +
push dword ptr [esi+8]  +
push dword ptr [eax+4]  +
call ds:SetMenuItemBitmaps  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_416A89  +
int 3  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
sub esp 30h +
test eax eax +
jz loc_41888D  +
mov edx [ecx+0Ch] +
test edx edx +
jz loc_418877  +
cmp dword ptr [ecx+10h] 0 +
jnz loc_418887  +
push esi  +
mov esi [ecx+8] +
cmp esi [ecx+20h] +
jnb loc_41888D  +
mov [ebp-0Ch] eax +
lea eax [ebp-30h] +
push eax  +
push 1  +
push esi  +
mov dword ptr [ebp-30h] 30h +
mov dword ptr [ebp-2Ch] 40h +
push dword ptr [edx+4]  +
call ds:SetMenuItemInfoW  +
pop esi  +
jmp loc_418887  +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_41888D  +
push eax  +
push dword ptr [ecx+20h]  +
call sub_4226C0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call sub_416A89  +
int 3  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_418988  +
mov edx [ebp+20h] +
push ebx  +
xor ebx ebx +
inc ebx  +
test edx edx +
jz loc_4188BB  +
mov eax [ebp+14h] +
mov [edx+4] eax +
mov eax ebx +
mov [edx] ecx +
jmp loc_418983  +
mov eax [ebp+1Ch] +
add eax 0FFFFFFC6h +
push esi  +
cmp eax 0Bh +
ja loc_418980  +
jmp ds:off_41898F[eax*4]  +
call dword ptr [ebp+14h]  +
jmp loc_41897C  +
call dword ptr [ebp+14h]  +
jmp loc_41897A  +
push dword ptr [ebp+0Ch]  +
call dword ptr [ebp+14h]  +
jmp loc_41897C  +
push dword ptr [ebp+0Ch]  +
jmp loc_418977  +
mov eax [ebp+18h] +
test eax eax +
jz loc_418988  +
push dword ptr [eax]  +
push dword ptr [eax+4]  +
call dword ptr [ebp+14h]  +
jmp loc_41897C  +
mov eax [ebp+18h] +
test eax eax +
jz loc_418988  +
push dword ptr [eax]  +
push dword ptr [eax+4]  +
call dword ptr [ebp+14h]  +
jmp loc_41897A  +
mov eax [ebp+18h] +
test eax eax +
jz loc_418988  +
push dword ptr [eax]  +
push dword ptr [eax+4]  +
push dword ptr [ebp+0Ch]  +
call dword ptr [ebp+14h]  +
jmp loc_41897C  +
mov eax [ebp+18h] +
test eax eax +
jz loc_418988  +
push dword ptr [eax]  +
push dword ptr [eax+4]  +
push dword ptr [ebp+0Ch]  +
call dword ptr [ebp+14h]  +
jmp loc_41897A  +
mov esi [ebp+18h] +
test esi esi +
jz loc_418988  +
push esi  +
call dword ptr [ebp+14h]  +
xor ebx ebx +
cmp [esi+1Ch] ebx +
setz bl  +
and dword ptr [esi+1Ch] 0 +
jmp loc_41897C  +
mov esi [ebp+18h] +
test esi esi +
jz loc_418988  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [ebp+14h]  +
jmp loc_41894E  +
***
push dword ptr [ebp+18h]  +
jmp loc_4188E5  +
***
push dword ptr [ebp+18h]  +
call dword ptr [ebp+14h]  +
mov ebx eax +
mov eax ebx +
jmp loc_418982  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
call sub_416A89  +
mov edi edi +
sub esp 90h +
push 10h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_43A46B  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn   +
***
xor eax eax +
sub esp 0Ch +
call sub_437517  +
push ecx  +
push 0FFFFFFFFh  +
push ecx  +
xor eax eax +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push edi  +
push esi  +
sub esp 24h +
push ebx  +
call sub_437517  +
call sub_4375B9  +
mov ecx [ecx+5Ch] +
mov ecx [ecx+5Ch] +
push esi  +
call sub_43754B  +
mov edx [ebp+arg_0] +
mov ecx [ecx+5Ch] +
push ebx  +
mov edx ecx +
mov ecx [ecx+5Ch] +
mov ecx [ecx+5Ch] +
call sub_437582  +
xor eax eax +
xor eax eax +
mov dword ptr [ecx] offset off_4578C0 +
mov [ecx+34h] eax +
mov [ecx+54h] eax +
mov [ecx+4Ch] eax +
mov [ecx+50h] eax +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
cmp dword ptr [esi+2Ch] 0 +
push esi  +
push esi  +
push esi  +
call sub_421362  +
call sub_419B8F  +
call sub_421362  +
call sub_437517  +
or eax 0FFFFFFFFh +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_0] +
push esi  +
mov eax ecx +
push ecx  +
sub esp 10h +
mov eax ecx +
mov eax ecx +
mov eax ecx +
sub esp 10h +
sub esp 10h +
mov edx [ebp+arg_0] +
push ecx  +
push ecx  +
pop ebp  +
mov edx [ebp+arg_0] +
mov edx [ebp+arg_0] +
cmp dword ptr [ecx+74h] 0 +
mov eax ecx +
mov eax ecx +
call sub_437517  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
mov eax ecx +
mov eax ecx +
sub esp 10h +
sub esp 10h +
mov eax ecx +
mov ecx [ecx+70h] +
mov ecx [ecx+70h] +
push ecx  +
mov ecx [esi+74h] +
mov edx ecx +
push esi  +
mov eax ecx +
push ebx  +
call sub_437582  +
call sub_4184AD  +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_4167F5  +
push 0FFFFFFFFh  +
cmp dword ptr [ecx+4] 0 +
push esi  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 10h +
call sub_437517  +
call sub_437517  +
call sub_4375B9  +
sub esp 30h +
push ebx  +
push [ebp+hWnd]  +
push esi  +
mov esi eax +
push 0FFFFFFFFh  +
call sub_437582  +
push 0  +
mov ecx offset unk_470F78 +
mov eax [ecx] +
push ecx  +
sub esp 5Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_20] +
mov [ebp+var_2C] eax +
mov [ebp+var_30] ecx +
mov word ptr [ebp+var_5C] dx +
push ebx  +
mov ebx [ebp+arg_18] +
mov [ebp+var_38] ebx +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
test eax eax +
jnz loc_41B350  +
mov eax 80070057h +
jmp loc_41B8EA  +
test edi edi +
jnz loc_41B35E  +
mov eax 80020008h +
jmp loc_41B8EA  +
mov edx [edi+8] +
cmp edx 5 +
jbe loc_41B370  +
mov eax 8002000Eh +
jmp loc_41B8EA  +
xor eax eax +
mov esi eax +
cmp [edi+0Ch] eax +
jbe loc_41B3AB  +
mov ecx [edi+4] +
mov [ebp+var_4C] ecx +
mov [ebp+var_34] eax +
mov eax [ebp+var_4C] +
mov eax [eax+esi*4] +
cmp eax edx +
jnb loc_41B366  +
mov ebx [edi+4] +
mov eax [edi] +
add eax [ebp+var_34] +
add [ebp+var_34] 10h +
mov ecx [ebx+esi*4] +
inc esi  +
mov ebx [ebp+var_38] +
mov [ebp+ecx*4+pvarSrc] eax +
mov ecx [ebp+var_30] +
cmp esi [edi+0Ch] +
jb loc_41B382  +
cmp esi edx +
jnb loc_41B3C9  +
mov eax esi +
shl eax 4 +
add eax [edi] +
sub edx esi +
lea esi [ebp+edx*4+var_1C] +
mov [esi] eax +
add eax 10h +
lea esi [esi-4] +
sub edx 1 +
jnz loc_41B3BC  +
mov esi 80020003h +
test ecx ecx +
jnz loc_41B3D8  +
lea eax [ebp+var_38] +
mov [ebp+var_30] eax +
test ebx ebx +
jnz loc_41B3DF  +
lea ebx [ebp+var_5C] +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
mov eax [ebp+arg_4] +
lea ecx [eax+139Ah] +
cmp ecx 12h +
ja loc_41B8DE  +
mov ax [ebp+arg_10] +
jmp ds:off_41B900[ecx*4]  +
cmp dword ptr [edi+8] 1 +
jz loc_41B416  +
mov esi 8002000Eh +
jmp loc_41B8DE  +
mov esi [ebp+pvarSrc] +
sub esp 10h +
mov edx [ebp+var_2C] +
mov edi esp +
push edx  +
mov eax [edx] +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+64h]  +
mov esi eax +
jmp loc_41B8DE  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov ecx [ebp+pvarSrc] +
xor edi edi +
push 3  +
pop eax  +
cmp [ecx] ax +
jz loc_41B468  +
push eax  +
push edi  +
push ecx  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
jns loc_41B462  +
mov eax [ebp+var_30] +
mov [eax] edi +
jmp loc_41B8DE  +
push 3  +
lea ecx [ebp+pvarg] +
pop eax  +
mov ecx [ecx+8] +
mov [ebp+var_38] ecx +
mov ecx [ebp+var_14] +
cmp [ecx] ax +
jz loc_41B49A  +
push eax  +
push edi  +
push ecx  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
jns loc_41B497  +
mov eax [ebp+var_30] +
mov dword ptr [eax] 1 +
jmp loc_41B8DE  +
lea ecx [ebp+pvarg] +
mov edx [ebp+var_2C] +
push ebx  +
push dword ptr [ecx+8]  +
push [ebp+var_38]  +
mov eax [edx] +
push edx  +
call dword ptr [eax+60h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov ecx [ebp+pvarSrc] +
push 3  +
pop esi  +
cmp [ecx] si +
jz loc_41B4E0  +
push esi  +
xor edi edi +
lea eax [ebp+pvarg] +
push edi  +
push ecx  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_41B458  +
lea ecx [ebp+pvarg] +
mov esi [ebp+var_14] +
mov edx [ebp+var_2C] +
push ebx  +
sub esp 10h +
mov edi esp +
mov eax [edx] +
push dword ptr [ecx+8]  +
movs   +
push edx  +
movs   +
movs   +
movs   +
call dword ptr [eax+5Ch]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 5 +
jnz loc_41B40C  +
push 3  +
pop esi  +
xor ebx ebx +
mov edi [ebp+ebx*4+pvarSrc] +
movzx edx word ptr [edi] +
test dl 0Fh +
setnz cl  +
bt dx 0Eh +
setb al  +
test cl al +
jz loc_41B575  +
test dl 0Ch +
jz loc_41B542  +
push dword ptr [edi+8]  +
call ds:VariantClear  +
mov eax [edi+8] +
mov [eax] si +
mov eax [edi+8] +
add eax 8 +
jmp loc_41B545  +
mov eax [edi+8] +
mov [ebp+ebx*4+var_28] eax +
inc ebx  +
cmp ebx 4 +
jl loc_41B50D  +
mov esi [ebp+var_8] +
sub esp 10h +
mov edx [ebp+var_2C] +
mov edi esp +
push [ebp+var_1C]  +
mov eax [edx] +
push [ebp+var_20]  +
movs   +
push [ebp+var_24]  +
push [ebp+var_28]  +
movs   +
push edx  +
movs   +
movs   +
call dword ptr [eax+58h]  +
jmp loc_41B42B  +
mov eax [ebp+var_30] +
mov esi 80020005h +
mov [eax] ebx +
jmp loc_41B8DE  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov ecx [ebp+pvarSrc] +
push 3  +
pop esi  +
cmp [ecx] si +
jz loc_41B5B5  +
push esi  +
xor edi edi +
lea eax [ebp+pvarg] +
push edi  +
push ecx  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_41B458  +
lea ecx [ebp+pvarg] +
mov esi [ebp+var_14] +
sub esp 10h +
mov edx [ebp+var_2C] +
mov edi esp +
push dword ptr [ecx+8]  +
mov eax [edx] +
movs   +
push edx  +
movs   +
movs   +
movs   +
call dword ptr [eax+54h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+50h]  +
mov esi eax +
test esi esi +
js loc_41B8DE  +
push 8  +
jmp loc_41B8DA  +
mov edx [ebp+var_2C] +
push ebx  +
push edx  +
mov eax [edx] +
call dword ptr [eax+4Ch]  +
jmp loc_41B42B  +
mov edx [ebp+var_2C] +
push ebx  +
push edx  +
mov eax [edx] +
call dword ptr [eax+48h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+44h]  +
jmp loc_41B5F5  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
mov edi 400Ch +
movzx ecx word ptr [esi] +
lea edx [edi-0Ch] +
mov eax ecx +
and eax edi +
cmp ax dx +
jnz loc_41B676  +
mov esi 80020005h +
xor edi edi +
jmp loc_41B458  +
cmp cx di +
jnz loc_41B694  +
push dword ptr [esi+8]  +
call ds:VariantClear  +
mov eax [esi+8] +
push 8  +
pop ecx  +
mov [eax] cx +
mov eax [esi+8] +
add eax ecx +
jmp loc_41B6A1  +
mov eax 4008h +
cmp cx ax +
jnz loc_41B6A6  +
mov eax [esi+8] +
mov [ebp+var_34] eax +
jmp loc_41B6B9  +
push esi  +
call ds:VariantClear  +
lea eax [esi+8] +
push 8  +
mov [ebp+var_34] eax +
pop eax  +
mov [esi] ax +
mov esi [ebp+var_14] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push [ebp+var_34]  +
movs   +
push edx  +
movs   +
movs   +
movs   +
call dword ptr [ecx+40h]  +
mov esi eax +
test esi esi +
js loc_41B8DE  +
push 3  +
jmp loc_41B8DA  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+3Ch]  +
jmp loc_41B5F5  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
mov edx [ebp+var_2C] +
push ebx  +
sub esp 10h +
mov edi esp +
mov eax [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+38h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
mov edx [ebp+var_2C] +
push ebx  +
sub esp 10h +
mov edi esp +
mov eax [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+34h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+30h]  +
jmp loc_41B5F5  +
test al 2 +
jz loc_41B7AC  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+2Ch]  +
jmp loc_41B5F5  +
test al 4 +
jz loc_41B807  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea edi [ebp+var_28] +
mov ecx [ebp+var_14] +
movs   +
cmp word ptr [ecx] 8 +
movs   +
movs   +
movs   +
jz loc_41B7EA  +
push 3  +
xor edi edi +
lea eax [ebp+pvarg] +
push edi  +
push ecx  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_41B489  +
lea ecx [ebp+pvarg] +
push dword ptr [ecx+8]  +
mov edx [ebp+var_2C] +
lea esi [ebp+var_28] +
sub esp 10h +
mov edi esp +
mov eax [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+6Ch]  +
jmp loc_41B42B  +
test al 2 +
jz loc_41B833  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+28h]  +
jmp loc_41B5F5  +
test al 4 +
jz loc_41B88E  +
cmp dword ptr [edi+8] 2 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea edi [ebp+var_28] +
mov ecx [ebp+var_14] +
movs   +
cmp word ptr [ecx] 8 +
movs   +
movs   +
movs   +
jz loc_41B871  +
push 3  +
xor edi edi +
lea eax [ebp+pvarg] +
push edi  +
push ecx  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_41B489  +
lea ecx [ebp+pvarg] +
push dword ptr [ecx+8]  +
mov edx [ebp+var_2C] +
lea esi [ebp+var_28] +
sub esp 10h +
mov edi esp +
mov eax [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [eax+68h]  +
jmp loc_41B42B  +
cmp dword ptr [edi+8] 1 +
jnz loc_41B40C  +
mov esi [ebp+pvarSrc] +
lea eax [ebx+8] +
mov edx [ebp+var_2C] +
push eax  +
sub esp 10h +
mov edi esp +
mov ecx [edx] +
push edx  +
movs   +
movs   +
movs   +
movs   +
call dword ptr [ecx+24h]  +
jmp loc_41B8D2  +
mov edx [ebp+var_2C] +
lea eax [ebx+8] +
push eax  +
push edx  +
mov ecx [edx] +
call dword ptr [ecx+20h]  +
jmp loc_41B6D5  +
mov edx [ebp+var_2C] +
lea eax [ebx+8] +
push eax  +
push edx  +
mov ecx [edx] +
call dword ptr [ecx+1Ch]  +
mov esi eax +
test esi esi +
js loc_41B8DE  +
push 9  +
pop eax  +
mov [ebx] ax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn 24h  +
***
cmp [ebp+arg_0] 0 +
sub esp 210h +
push ebx  +
push esi  +
push esi  +
sub esp 64h +
inc eax  +
retn   +
***
mov eax 80004001h +
mov eax [ecx+60h] +
mov eax [ebp+arg_10] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_14] +
sub esp 30h +
call sub_437517  +
push esi  +
mov ecx offset unk_470F78 +
mov edi ecx +
push edi  +
call sub_43754B  +
mov eax [ebp+arg_0] +
call sub_437517  +
mov eax [ebp+arg_0] +
lea eax [ecx+28h] +
push ecx  +
push esi  +
push esi  +
push esi  +
mov ecx offset unk_470F78 +
call sub_420D95  +
push esi  +
mov eax [ebp+arg_4] +
push edi  +
mov eax [ebp+arg_0] +
push [ebp+arg_14]  +
push eax  +
cmp dword ptr [ecx+5Ch] 0 +
jz loc_41C653  +
call sub_420D95  +
push esi  +
test esi esi +
jz loc_41C707  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_4] +
call sub_437517  +
sub esp 14h +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_437517  +
mov eax [ecx] +
sub esp 0Ch +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
push [ebp+arg_C]  +
cmp [ebp+arg_0] 0 +
push esi  +
cmp dword ptr [ecx+74h] 0 +
sub esp 2Ch +
push ecx  +
mov eax [ebp+arg_4] +
push edi  +
push esi  +
call sub_404E20  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
sub esp 1Ch +
cmp dword ptr [ecx+20h] 0 +
mov eax large fs:2Ch +
push ecx  +
push edi  +
push esi  +
sub esp 0Ch +
sub esp 10h +
mov ecx [esi+70h] +
push edi  +
call sub_419B8F  +
push ecx  +
push ecx  +
sub esp 0Ch +
push esi  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_41D817  +
push 0  +
call sub_41E7EA  +
test eax eax +
jnz loc_41D81E  +
mov ecx esi +
call sub_41C0B0  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_437517  +
mov ebx ecx +
and dword ptr [ebp-10h] 0 +
mov edi 7FFFFFFFh +
mov [ebp-14h] edi +
and dword ptr [ebp-4] 0 +
mov edx [ebp+8] +
cmp edx 111h +
jnz loc_41D871  +
push dword ptr [ebp+10h]  +
mov eax [ebx] +
push dword ptr [ebp+0Ch]  +
call dword ptr [eax+0F4h]  +
test eax eax +
jz loc_41DB1D  +
xor ebx ebx +
inc ebx  +
mov [ebp-10h] ebx +
jmp loc_41DFCB  +
mov esi [ebp+10h] +
mov ecx [ebp+0Ch] +
cmp edx 1 +
jnz loc_41D8B1  +
cmp dword ptr [ebx+58h] 0 +
jz loc_41D91C  +
mov ecx [ebx+58h] +
push ebx  +
call sub_431188  +
test eax eax +
jnz loc_41D8A7  +
mov ecx [ebx+58h] +
test ecx ecx +
jz loc_41D8A1  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
and dword ptr [ebx+58h] 0 +
jmp loc_41D916  +
mov ecx ebx +
call sub_41C7E5  +
mov edx [ebp+8] +
cmp edx 4Eh +
jnz loc_41D8E1  +
mov ecx [ebp+10h] +
cmp dword ptr [ecx] 0 +
jz loc_41DB1D  +
mov eax [ebx] +
lea edx [ebp-10h] +
push edx  +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call dword ptr [eax+0F8h]  +
test eax eax +
jnz loc_41DFC8  +
jmp loc_41DB1D  +
cmp edx 6 +
jnz loc_41D8F9  +
push esi  +
call sub_41C415  +
push eax  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_41EF1E  +
mov edx [ebp+8] +
cmp edx 20h +
jnz loc_41D919  +
mov eax esi +
shr eax 10h +
push eax  +
movsx eax si +
push eax  +
push ebx  +
call sub_41EF95  +
test eax eax +
jnz loc_41D866  +
mov edx [ebp+8] +
mov ecx [ebp+0Ch] +
mov eax [ebx+70h] +
test eax eax +
jz loc_41D974  +
cmp dword ptr [eax+74h] 0 +
jle loc_41D974  +
cmp edx 200h +
jb loc_41D939  +
cmp edx 209h +
jbe loc_41D957  +
cmp edx 100h +
jb loc_41D949  +
cmp edx 10Fh +
jbe loc_41D957  +
lea eax [edx-281h] +
cmp eax 10h +
ja loc_41D974  +
mov eax [ebx+70h] +
mov eax [eax] +
lea edx [ebp-10h] +
push edx  +
mov edx [ebp+8] +
push esi  +
push ecx  +
mov ecx [ebx+70h] +
push edx  +
call dword ptr [eax+94h]  +
test eax eax +
jnz loc_41DFC8  +
mov eax [ebp+8] +
cmp eax 5 +
jz loc_41D9A3  +
cmp eax 0Fh +
jz loc_41D993  +
cmp eax 14h +
jnz loc_41D9EC  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_41D9EC  +
cmp dword ptr [eax+4] 0 +
jmp loc_41D99C  +
mov ecx ebx +
call sub_41C16A  +
test eax eax +
jz loc_41D9EC  +
jmp loc_41D866  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+148h]  +
mov ecx ebx +
call sub_41C65B  +
mov edi eax +
test edi edi +
jz loc_41D9EC  +
cmp dword ptr [edi+4] 0 +
jz loc_41D9EC  +
mov ecx esi +
movzx eax si +
shr ecx 10h +
push ecx  +
push eax  +
lea ecx [ebp-1Ch] +
call sub_421A20  +
push eax  +
mov ecx edi +
call sub_421EC9  +
push 105h  +
push 0  +
push 0  +
push dword ptr [ebx+20h]  +
call ds:RedrawWindow  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+28h]  +
mov esi eax +
mov [ebp-18h] eax +
xor esi [ebp+8] +
lea ecx [ebp-14h] +
push 7  +
and esi 1FFh +
call sub_41CAA8  +
mov eax [ebp-18h] +
imul edi esi +
mov esi [ebp+8] +
add edi offset unk_470F88 +
cmp esi [edi] +
jnz loc_41DA5A  +
cmp eax [edi+8] +
jnz loc_41DA5A  +
mov ecx [edi+4] +
mov edi [ebp-14h] +
mov [ebp+8] ecx +
cmp edi 7FFFFFFFh +
jz loc_41DA45  +
push edi  +
call sub_42F853  +
mov ecx [ebp+8] +
mov edi 7FFFFFFFh +
mov [ebp-14h] edi +
test ecx ecx +
jz loc_41DB1D  +
cmp esi 0C000h +
jb loc_41DA9F  +
jmp loc_41DFB7  +
mov [edi] esi +
mov [edi+8] eax +
jmp loc_41DAFA  +
push 0  +
push 0  +
cmp esi 0C000h +
jnb loc_41DAB8  +
push esi  +
push dword ptr [eax+4]  +
call sub_41AFBF  +
mov ecx eax +
mov [ebp+8] ecx +
test ecx ecx +
jz loc_41DAF2  +
mov [edi+4] ecx +
mov esi 7FFFFFFFh +
mov edi [ebp-14h] +
cmp edi esi +
jz loc_41DA9F  +
push edi  +
call sub_42F853  +
mov ecx [ebp+8] +
mov edi esi +
mov [ebp-14h] edi +
mov edx [ecx+10h] +
mov esi [ecx+14h] +
lea eax [edx-1] +
cmp eax 5Dh +
ja loc_41DFC8  +
jmp ds:off_41DFE0[eax*4]  +
push 0C000h  +
push dword ptr [eax+4]  +
call sub_41AFBF  +
mov ecx eax +
mov [ebp+8] ecx +
jmp loc_41DAEE  +
mov eax [ecx+10h] +
cmp [eax] esi +
jz loc_41DF98  +
push 0  +
push 0  +
push 0C000h  +
lea eax [ecx+18h] +
push eax  +
call sub_41AFBF  +
mov ecx eax +
mov [ebp+8] eax +
test ecx ecx +
jnz loc_41DACC  +
mov eax [ebp-18h] +
call dword ptr [eax]  +
mov [ebp-18h] eax +
cmp dword ptr [eax] 0 +
jnz loc_41DA64  +
and dword ptr [edi+4] 0 +
mov edi [ebp-14h] +
cmp edi 7FFFFFFFh +
jz loc_41DB1D  +
push edi  +
call sub_42F853  +
mov edi 7FFFFFFFh +
xor ebx ebx +
mov dword ptr [ebp-4] 0Ah +
cmp edi 7FFFFFFFh +
jz loc_41DB34  +
push edi  +
call sub_42F853  +
mov eax ebx +
call sub_4374E0  +
retn 10h  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx ebx +
call esi  +
jmp loc_41DFC5  +
push dword ptr [ebp+0Ch]  +
call sub_417DEF  +
push eax  +
mov ecx ebx +
call esi  +
jmp loc_41DFC5  +
mov ecx [ebp+10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
call sub_417DEF  +
push eax  +
jmp loc_41DB4A  +
push dword ptr [ebp+0Ch]  +
jmp loc_41DB5C  +
mov ecx ebx +
call esi  +
jmp loc_41DFC5  +
mov ecx [ebp+10h] +
push ecx  +
call sub_41C415  +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call esi  +
jmp loc_41DFC8  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
push eax  +
mov ecx ebx +
call esi  +
jmp loc_41DFC5  +
mov ecx [ebp+10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
jmp loc_41DB71  +
mov ecx [ebp+10h] +
push ecx  +
jmp loc_41DB5C  +
lea ecx [ebp-24h] +
call sub_41789B  +
mov ecx [ebp+10h] +
push 0  +
mov byte ptr [ebp-4] 5 +
mov eax [ecx+4] +
lea ecx [ebp-0A4h] +
mov [ebp-20h] eax +
call sub_41A7AC  +
mov dword ptr [ebp-0A4h] offset off_457AC8 +
mov ecx [ebp+10h] +
mov byte ptr [ebp-4] 6 +
mov eax [ecx] +
mov ecx [ecx+8] +
push eax  +
mov [ebp-84h] eax +
mov [ebp+0Ch] ecx +
call sub_41C43F  +
test eax eax +
jnz loc_41DC38  +
mov ecx [ebx+70h] +
test ecx ecx +
jz loc_41DC32  +
push dword ptr [ebp-84h]  +
add ecx 24h +
call sub_42F5E1  +
test eax eax +
jz loc_41DC32  +
mov [ebp-30h] eax +
lea eax [ebp-0A4h] +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
push eax  +
lea eax [ebp-24h] +
push eax  +
call esi  +
and dword ptr [ebp-20h] 0 +
lea ecx [ebp-0A4h] +
and dword ptr [ebp-84h] 0 +
mov [ebp-10h] eax +
call sub_41A9DA  +
lea ecx [ebp-24h] +
call sub_4179A8  +
jmp loc_41DFC8  +
lea ecx [ebp-24h] +
call sub_41789B  +
mov ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
mov eax [ecx+4] +
push dword ptr [ecx+8]  +
mov [ebp-20h] eax +
mov ecx ebx +
lea eax [ebp-24h] +
push eax  +
call esi  +
and dword ptr [ebp-20h] 0 +
mov [ebp-10h] eax +
jmp loc_41DC5D  +
mov eax [ebp+0Ch] +
mov ecx [ebp+10h] +
shr eax 10h +
push eax  +
push ecx  +
call sub_41C415  +
push eax  +
mov eax [ebp+0Ch] +
movzx eax ax +
jmp loc_41DBAD  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41DB71  +
mov ecx [ebp+10h] +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_417E01  +
push eax  +
jmp loc_41DB8F  +
mov ecx [ebp+10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
jmp loc_41DB4A  +
mov ecx [ebp+10h] +
push ecx  +
call sub_4308E7  +
mov ecx [ebp+0Ch] +
push eax  +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41DBAD  +
mov ecx [ebp+10h] +
push ecx  +
jmp loc_41DB8C  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call esi  +
jmp loc_41DFC8  +
mov ecx ebx +
call esi  +
jmp loc_41DFC8  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41DCCF  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
cwde   +
push eax  +
movsx eax cx +
jmp loc_41DCCF  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call esi  +
jmp loc_41DFC8  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_41C415  +
mov ecx [ebp+10h] +
push eax  +
xor eax eax +
cmp [ebx+20h] ecx +
setz al  +
push eax  +
jmp loc_41DD47  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
jmp loc_41DCCF  +
push dword ptr [ebp+0Ch]  +
call sub_417DEF  +
push eax  +
jmp loc_41DD08  +
push dword ptr [ebp+0Ch]  +
call sub_4308E7  +
jmp loc_41DD88  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
cwde   +
push eax  +
movsx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_4308E7  +
jmp loc_41DD6D  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
jmp loc_41DD88  +
push dword ptr [ebp+10h]  +
jmp loc_41DDB3  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
jmp loc_41DD6D  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
jmp loc_41DDCC  +
mov eax [ebp+0Ch] +
shr eax 10h +
push eax  +
push dword ptr [ebp+10h]  +
call sub_41C415  +
push eax  +
mov eax [ebp+0Ch] +
movzx eax ax +
jmp loc_41DD6D  +
mov eax [ebp+0Ch] +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp+8] ecx +
mov [ebp+0Ch] eax +
cmp edx 2Bh +
jnz loc_41DE28  +
push dword ptr [ebp+10h]  +
call sub_41C415  +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
jmp loc_41DD47  +
push eax  +
push ecx  +
jmp loc_41DB8F  +
push dword ptr [ebp+10h]  +
jmp loc_41DD08  +
push dword ptr [ebp+10h]  +
jmp loc_41DB8C  +
push dword ptr [ebp+10h]  +
mov ecx ebx +
push dword ptr [ebp+0Ch]  +
call esi  +
jmp loc_41D866  +
push dword ptr [ebp+10h]  +
jmp loc_41DCD9  +
mov ecx [ebp+0Ch] +
mov eax ecx +
push dword ptr [ebp+10h]  +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41DD6D  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
jmp loc_41DD44  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
mov ecx ebx +
push eax  +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jz loc_41DB1D  +
jmp loc_41DFC8  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
mov ecx ebx +
push eax  +
call esi  +
jmp loc_41DFC8  +
mov ecx ebx +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_41DB1D  +
jmp loc_41DFC8  +
push dword ptr [ebp+10h]  +
jmp loc_41DBBB  +
push dword ptr [ebp+10h]  +
call sub_4308E7  +
jmp loc_41DB8B  +
push dword ptr [ebp+10h]  +
call sub_4308E7  +
push eax  +
jmp loc_41DCD9  +
push dword ptr [ebp+10h]  +
jmp loc_41DB5C  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_4308E7  +
jmp loc_41DCCF  +
mov eax [ebp+10h] +
mov ecx eax +
movzx eax ax +
push eax  +
shr ecx 10h +
mov eax ecx +
and ecx 0FFFh +
and eax 0F000h +
push eax  +
push ecx  +
push dword ptr [ebp+0Ch]  +
call sub_41C415  +
push eax  +
mov ecx ebx +
call esi  +
jmp loc_41D866  +
mov eax [ebp+0Ch] +
push dword ptr [ebp+10h]  +
movzx eax al +
jmp loc_41DCCF  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41DF3C  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
push ecx  +
jmp loc_41DF3D  +
mov ecx [ebp+10h] +
movsx eax cx +
shr ecx 10h +
push eax  +
movsx eax cx +
jmp loc_41DB71  +
mov [edi+4] ecx +
mov edi [ebp-14h] +
cmp edi 7FFFFFFFh +
jz loc_41DFB7  +
push edi  +
call sub_42F853  +
mov ecx [ebp+8] +
mov edi 7FFFFFFFh +
mov [ebp-14h] edi +
mov eax [ecx+14h] +
mov ecx [ebp+10h] +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
call eax  +
mov [ebp-10h] eax +
xor ebx ebx +
inc ebx  +
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_41DB1F  +
mov eax [ebp-10h] +
mov [ecx] eax +
jmp loc_41DB1F  +
***
push esi  +
mov edx [ebp+lpMsg] +
push esi  +
mov esi ecx +
push [ebp+arg_8]  +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 10h +
call sub_437517  +
call sub_437517  +
mov edx [ebp+arg_0] +
call sub_437517  +
mov eax large fs:2Ch +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 10h +
call sub_437517  +
call sub_437517  +
cmp dword ptr [esi+58h] 0 +
sub esp 0Ch +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_437517  +
mov ecx [ebp+arg_0] +
push edi  +
mov edi ecx +
call sub_437582  +
mov esi [ebp-1Ch] +
push esi  +
push esi  +
call sub_437517  +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi ecx +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_8]  +
mov ecx esi +
push [ebp+arg_4]  +
mov eax [esi] +
push [ebp+arg_0]  +
call dword ptr [eax+118h]  +
test eax eax +
jnz loc_41EB35  +
push [ebp+arg_8]  +
mov eax [esi] +
mov ecx esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call dword ptr [eax+11Ch]  +
jmp loc_41EB38  +
mov eax [ebp+var_4] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push edi  +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
call sub_41C415  +
lea ecx [ebp-34h] +
mov [ebp-2Ch] eax +
push ecx  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
call sub_41F118  +
push ebx  +
push dword ptr [ebp+10h]  +
push 110h  +
push edi  +
push dword ptr [ebp-28h]  +
call ds:CallWindowProcW  +
push dword ptr [ebp-34h]  +
mov esi eax +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_41F077  +
jmp loc_41EC9C  +
***
mov eax [ebp-38h] +
call sub_43754B  +
push ebx  +
push ecx  +
cmp [ebp+arg_4] 0FFFFFFFEh +
push esi  +
push [ebp+nIndex]  +
sub esp 14h +
push esi  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
push [ebp+arg_8]  +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
call sub_437517  +
mov eax [ebp+arg_0] +
mov eax [ecx+28h] +
call sub_437517  +
call sub_437600  +
cmp dword_470CFC 0 +
mov ecx [ebp+arg_0] +
call sub_437600  +
cmp dword_470CFC 0 +
call sub_437600  +
cmp dword_470CFC 0 +
call sub_437600  +
cmp dword_470CFC 0 +
call sub_437600  +
cmp dword_470CFC 0 +
pop ebp  +
pop ebp  +
call sub_437600  +
cmp dword_470CFC 0 +
push esi  +
push ecx  +
push esi  +
push ecx  +
call sub_419B8F  +
push esi  +
push ecx  +
sub esp 2Ch +
push ecx  +
sub esp 28h +
push 0FFFFFFFFh  +
push esi  +
push edi  +
retn   +
***
sub esp 20Ch +
cmp [ebp+arg_4] 0 +
cmp dword ptr [esi+0Ch] 0 +
push ecx  +
mov edx [ecx+4] +
call sub_437517  +
call sub_437517  +
call sub_437517  +
call sub_437517  +
push ecx  +
mov edx [ecx+4] +
push ecx  +
mov edx [ecx+4] +
push ecx  +
mov edi ecx +
sub esp 1Ch +
mov eax [ecx+4] +
push [ebp+arg_8]  +
push esi  +
cmp [ebp+arg_4] 0 +
call sub_437582  +
test ecx ecx +
test ecx ecx +
call sub_437600  +
cmp dword_470CFC 0 +
xor eax eax +
cmp dword ptr [esi] 0 +
push 0FFFFFFFFh  +
push [ebp+uBytes]  +
cmp [ebp+arg_0] 0 +
test [ebp+arg_0] 1 +
push esi  +
mov ecx dword_472A38 +
test ecx ecx +
jz loc_421072  +
pop ebp  +
jmp sub_421259  +
pop ebp  +
retn 8  +
***
push ecx  +
push ecx  +
push ebx  +
push ebx  +
call sub_437582  +
push 0  +
call sub_437517  +
mov eax [ecx] +
cmp [ebp+arg_0] 0 +
push ebx  +
push ebx  +
call sub_437582  +
call sub_437517  +
push 0FFFFFFFFh  +
push esi  +
call sub_419BC2  +
push esi  +
sub esp 0Ch +
call sub_437582  +
push 0  +
push 0  +
call sub_43A3FD  +
int 3  +
***
push edi  +
push esi  +
mov eax [ebp+arg_0] +
xor eax eax +
push 0FFFFFFFFh  +
cmp dword_472A40 0 +
push ecx  +
mov ecx [ecx+28h] +
push ebx  +
sub esp 5Ch +
push ecx  +
mov ecx [ecx+4] +
push esi  +
push esi  +
mov esi ecx +
mov ecx [ecx+28h] +
push esi  +
call sub_419B8F  +
call sub_419B8F  +
mov eax dword_472A5C +
mov eax dword_472A58 +
mov eax dword_472A4C +
mov eax dword_472A44 +
sub esp 20h +
mov eax dword_472A64 +
mov eax dword_472A68 +
mov eax dword_472A54 +
mov eax dword_472A50 +
mov eax dword_472A60 +
mov eax dword_472A6C +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
push esi  +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
sub esp 204h +
sub esp 44h +
sub esp 1Ch +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
xor eax eax +
xor eax eax +
xor eax eax +
call sub_437517  +
call sub_437517  +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov ecx [esi+4] +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
call sub_419B8F  +
sub esp 10h +
call sub_437517  +
cmp [ebp+arg_0] 0 +
call sub_437517  +
call sub_437517  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_43754B  +
push esi  +
push esi  +
mov eax [ecx+0B8h] +
push ecx  +
call sub_437517  +
push ebx  +
call sub_437517  +
push ecx  +
mov eax [ecx+0BCh] +
mov eax [ecx+0C0h] +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
call sub_437517  +
call sub_437517  +
call sub_437517  +
push ecx  +
call sub_437517  +
push ecx  +
call sub_43754B  +
mov esi ecx +
mov esi ecx +
mov esi ecx +
call sub_437517  +
push ecx  +
push ecx  +
push ecx  +
call sub_437517  +
call sub_43754B  +
call sub_437517  +
call sub_437517  +
call sub_437517  +
call sub_437517  +
call sub_437517  +
mov eax [ebp+arg_0] +
add ecx 0ACh +
add ecx 0B0h +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
cmp [ebp+lpData] 0 +
push ecx  +
call sub_437517  +
push esi  +
call sub_437517  +
call sub_437517  +
push 0FFFFFFFFh  +
push esi  +
push [ebp+arg_0]  +
push edi  +
push [ebp+arg_0]  +
cmp [ebp+arg_0] 3 +
push esi  +
push [ebp+arg_8]  +
push esi  +
push esi  +
cmp [ebp+arg_0] 0 +
call sub_437517  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push ecx  +
push ecx  +
cmp [ebp+arg_8] 0 +
push ecx  +
mov edi ecx +
cmp [ebp+lpString1] 0 +
sub esp 48h +
sub esp 14h +
push ecx  +
push esi  +
push ebx  +
mov eax 0FFFFh +
push [ebp+arg_C]  +
mov eax [ebp+arg_C] +
mov eax [ebp+arg_4] +
test ecx ecx +
push ebx  +
call sub_437582  +
and dword ptr [ecx+4] 0 +
call sub_437517  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
mov ecx [ecx+4] +
push esi  +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push esi  +
push ecx  +
mov eax [ecx] +
push esi  +
sub esp 34h +
sub esp 30h +
call sub_437582  +
call sub_43754B  +
call sub_437582  +
sub esp 1Ch +
push ecx  +
push ecx  +
call sub_437517  +
mov edi ecx +
mov esi [ebp+0Ch] +
lea eax [esi+2CCh] +
cmp eax 0Fh +
ja loc_42744A  +
movzx eax ds:byte_42747F[eax] +
jmp ds:off_427457[eax*4]  +
mov eax [ebp+10h] +
push 0Bh  +
pop ecx  +
mov [eax] cx +
or ecx 0FFFFFFFFh +
mov [eax+8] cx +
xor eax eax +
inc eax  +
jmp loc_42744C  +
mov eax [ebp+10h] +
push 0Bh  +
pop ecx  +
mov [eax] cx +
xor ecx ecx +
jmp loc_4272AD  +
mov ecx [ebp+10h] +
xor edi edi +
push 2  +
pop eax  +
inc edi  +
mov [ecx] ax +
mov [ecx+8] di +
mov eax edi +
jmp loc_42744C  +
cmp dword ptr [edi+5Ch] 0FFFFFFFFh +
jnz loc_427325  +
push dword ptr [edi+20h]  +
lea ecx [ebp-20h] +
call sub_417903  +
mov eax [edi+20h] +
push dword ptr [eax+20h]  +
push dword ptr [ebp-1Ch]  +
push 138h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
push dword ptr [ebp-18h]  +
call ds:GetBkColor  +
push dword ptr [ebp-18h]  +
mov [edi+5Ch] eax +
call ds:GetTextColor  +
lea ecx [ebp-20h] +
mov [edi+60h] eax +
call sub_417A47  +
mov ecx [ebp+10h] +
push 3  +
pop eax  +
mov [ecx] ax +
cmp esi 0FFFFFD43h +
jnz loc_42733B  +
mov eax [edi+5Ch] +
jmp loc_42733E  +
mov eax [edi+60h] +
mov [ecx+8] eax +
jmp loc_4272B1  +
cmp dword ptr [edi+64h] 0 +
jnz loc_427366  +
mov ecx [edi+20h] +
call sub_4275CB  +
push eax  +
mov ecx edi +
call sub_426DF2  +
cmp dword ptr [edi+64h] 0 +
jz loc_42744A  +
mov esi [ebp+10h] +
push 9  +
pop eax  +
mov [esi] ax +
mov eax [edi+64h] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+4]  +
mov eax [edi+64h] +
mov [esi+8] eax +
jmp loc_4272B1  +
mov esi [ebp+10h] +
mov ecx [ebp+8] +
push 0Bh  +
pop eax  +
mov [esi] ax +
call sub_42B5AB  +
neg eax  +
sbb eax eax +
mov [esi+8] ax +
jmp loc_4272B1  +
mov esi [ebp+10h] +
push 3  +
pop eax  +
mov [esi] ax +
call ds:GetThreadLocale  +
jmp loc_42737B  +
call sub_4167F5  +
push eax  +
lea ecx [ebp+0Ch] +
call loc_406010  +
mov edi [ebp+10h] +
mov esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
push 8  +
pop eax  +
mov [edi] ax +
push dword ptr [esi-0Ch]  +
push esi  +
call ds:SysAllocStringLen  +
test eax eax +
jnz loc_4273E3  +
call loc_405DC0  +
lea ecx [esi-10h] +
mov [edi+8] eax +
call sub_406040  +
jmp loc_4272B1  +
call sub_4167F5  +
push eax  +
lea ecx [ebp+0Ch] +
call loc_406010  +
xor edi edi +
mov esi 0F1C0h +
inc edi  +
push esi  +
mov [ebp-4] edi +
call sub_42047F  +
test eax eax +
jz loc_427420  +
push esi  +
push eax  +
lea ecx [ebp+0Ch] +
call loc_408430  +
mov ebx [ebp+10h] +
mov esi [ebp+0Ch] +
push 8  +
pop eax  +
mov [ebx] ax +
push dword ptr [esi-0Ch]  +
push esi  +
call ds:SysAllocStringLen  +
test eax eax +
jz loc_4273DE  +
lea ecx [esi-10h] +
mov [ebx+8] eax +
call sub_406040  +
jmp loc_4272D6  +
xor eax eax +
call sub_4374E0  +
retn 0Ch  +
***
push ecx  +
push esi  +
sub esp 204h +
mov eax [ecx] +
push 31h  +
mov eax [ebp+arg_0] +
xor eax eax +
push ebx  +
call sub_437582  +
mov eax 80004001h +
call sub_437582  +
mov ecx [ebp-14h] +
xor eax eax +
push esi  +
push ecx  +
push esi  +
mov eax [ebp+arg_0] +
mov eax 80004001h +
push [ebp+arg_8]  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push ecx  +
mov eax [ecx] +
push ebx  +
sub esp 48h +
mov eax [ecx] +
mov eax 80004001h +
call sub_437582  +
cmp dword ptr [ebp+8] 0 +
call sub_437582  +
cmp dword ptr [ebp+0Ch] 0 +
push esi  +
push esi  +
cmp [ebp+arg_4] 0 +
cmp [ebp+arg_4] 0 +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
sub esp 10h +
push esi  +
push ecx  +
mov ax [ebp+arg_8] +
push ecx  +
call sub_437517  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_454CD6  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
xor ebx ebx +
mov dword ptr [edi] offset off_458FBC +
cmp [edi+58h] ebx +
jz loc_4280D2  +
mov eax [edi+50h] +
test eax eax +
jz loc_4280D2  +
mov eax [eax] +
lea edx [ebp+var_14] +
push edx  +
push offset unk_45A618  +
push eax  +
mov ecx [eax] +
call dword ptr [ecx]  +
test eax eax +
js loc_4280D2  +
mov ecx [ebp+var_14] +
test ecx ecx +
jz loc_4280D2  +
lea edx [ebp+var_10] +
mov [ebp+var_10] ebx +
mov eax [ecx] +
push edx  +
push offset unk_45A728  +
push ecx  +
call dword ptr [eax+10h]  +
test eax eax +
js loc_4280A3  +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_4280A3  +
push dword ptr [edi+58h]  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+18h]  +
mov eax [ebp+var_10] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
jmp loc_4280D2  +
mov eax [edi+1Ch] +
mov esi [eax+8] +
test esi esi +
jz loc_4280D7  +
mov ecx [esi] +
test ecx ecx +
jz loc_4280D7  +
mov eax [ecx] +
push ebx  +
push dword ptr [esi+8]  +
call dword ptr [eax+0BCh]  +
mov eax [esi] +
mov [eax+98h] ebx +
cmp [edi+24h] ebx +
jnz loc_4280AE  +
lea ecx [edi+18h] +
call sub_430656  +
cmp [edi+40h] ebx +
jz loc_428119  +
mov esi ebx +
cmp [edi+38h] ebx +
jle loc_428105  +
mov eax [edi+40h] +
add eax ebx +
push eax  +
call ds:VariantClear  +
inc esi  +
add ebx 10h +
cmp esi [edi+38h] +
jl loc_4280EB  +
xor ebx ebx +
cmp [edi+38h] ebx +
jz loc_428119  +
push dword ptr [edi+3Ch]  +
call sub_413A17  +
push dword ptr [edi+40h]  +
call sub_413A17  +
pop ecx  +
pop ecx  +
mov ecx [edi+8] +
test ecx ecx +
jz loc_428126  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov ecx [edi+0Ch] +
test ecx ecx +
jz loc_428133  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
cmp [edi+14h] ebx +
jz loc_4281A0  +
cmp dword ptr [edi+10h] 0 +
jle loc_428197  +
xor esi esi +
mov eax [edi+14h] +
mov eax [esi+eax+24h] +
mov eax [eax+4] +
mov [ebp+var_14] eax +
test eax eax +
jz loc_428170  +
mov ecx [edi+14h] +
lea eax [ebp+var_14] +
push eax  +
mov ecx [esi+ecx+24h] +
call sub_416059  +
mov eax [eax] +
and dword ptr [eax+98h] 0 +
cmp [ebp+var_14] 0 +
jnz loc_428151  +
mov ecx [edi+14h] +
mov ecx [esi+ecx+24h] +
call sub_430656  +
mov eax [edi+14h] +
mov ecx [esi+eax+24h] +
test ecx ecx +
jz loc_42818E  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
inc ebx  +
add esi 28h +
cmp ebx [edi+10h] +
jl loc_428140  +
push dword ptr [edi+14h]  +
call ds:CoTaskMemFree  +
cmp dword ptr [edi+34h] 0 +
jz loc_4281AF  +
push dword ptr [edi+34h]  +
call ds:CoTaskMemFree  +
mov ebx [edi+54h] +
test ebx ebx +
jz loc_4281D3  +
mov eax [edi+50h] +
mov ecx ebx +
mov esi [eax] +
push esi  +
call sub_42A106  +
push esi  +
mov ecx ebx +
call sub_42C46B  +
mov ecx [edi+54h] +
call sub_42944F  +
mov esi [edi+54h] +
test esi esi +
jz loc_4281EB  +
mov ecx esi +
call sub_42944F  +
push 28h  +
push esi  +
call sub_436CA0  +
pop ecx  +
pop ecx  +
mov esi [edi+50h] +
test esi esi +
jz loc_428203  +
mov ecx esi +
call sub_427FBA  +
push 14h  +
push esi  +
call sub_436CA0  +
pop ecx  +
pop ecx  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_428210  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov edx [edi+48h] +
test edx edx +
jz loc_42821D  +
mov eax [edx] +
push edx  +
call dword ptr [eax+8]  +
lea ecx [edi+18h] +
call sub_4304F3  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call sub_437517  +
push esi  +
push esi  +
push esi  +
mov eax [ebp+arg_14] +
mov ecx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
sub esp 14h +
push ecx  +
mov edx [ebp+arg_0] +
call sub_437517  +
call sub_437517  +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
call sub_437517  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov edi ecx +
mov ecx [ecx+50h] +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_8] +
mov edx [ecx] +
sub esp 30h +
sub esp 30h +
call sub_43754B  +
call sub_437517  +
mov eax 8000FFFFh +
mov eax [ebp+arg_0] +
mov esi ecx +
push esi  +
push ecx  +
mov edx ecx +
call sub_437582  +
mov esi [ebp-1Ch] +
mov ecx [ebp-20h] +
push esi  +
sub esp 24h +
test [ebp+arg_0] 3 +
push edi  +
lea edi [ecx-0E8h] +
jnz loc_42A03A  +
xor eax eax +
jmp loc_42A08D  +
push ebx  +
xor ebx ebx +
mov edx ebx +
push esi  +
cmp [ebp+arg_4] edx +
jbe loc_42A089  +
mov esi [ebp+arg_8] +
mov eax [esi] +
mov ecx ebx +
dec eax  +
cmp eax 1Eh +
ja loc_42A07C  +
movzx eax ds:byte_42A0E7[eax] +
jmp ds:off_42A0C7[eax*4]  +
xor ecx ecx +
inc ecx  +
jmp loc_42A07C  +
push 7  +
jmp loc_42A07B  +
push 5  +
jmp loc_42A07B  +
push 4  +
jmp loc_42A07B  +
push 6  +
jmp loc_42A07B  +
push 3  +
jmp loc_42A07B  +
push 2  +
pop ecx  +
test ecx ecx +
jnz loc_42A094  +
inc edx  +
add esi 28h +
cmp edx [ebp+arg_4] +
jb loc_42A048  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_C] +
or [ebp+var_20] 0FFFFFFFFh +
mov [ebp+var_8] eax +
lea eax [ebp+var_24] +
mov [ebp+var_4] ecx +
mov ecx edi +
push eax  +
mov [ebp+var_24] 3 +
mov [ebp+var_1C] ebx +
mov [ebp+var_18] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_C] ebx +
call sub_42BB62  +
mov eax [ebp+var_C] +
jmp loc_42A08B  +
***
push ecx  +
call sub_437517  +
push ecx  +
mov eax [ebp+arg_0] +
test eax 4000h +
jz loc_42A2E9  +
push 4  +
pop eax  +
pop ebp  +
retn   +
test eax 2000h +
jnz loc_42A2E4  +
test eax 1000h +
jz loc_42A2FB  +
push 2  +
jmp loc_42A2E6  +
movzx ecx ax +
cmp ecx 48h +
jg loc_42A31A  +
jz loc_42A2E4  +
push 2  +
pop eax  +
sub ecx eax +
cmp ecx 13h +
ja loc_42A316  +
jmp ds:off_42A34B[ecx*4]  +
push 8  +
jmp loc_42A2E6  +
sub ecx 80h +
jz loc_42A344  +
sub ecx 1 +
jz loc_42A344  +
sub ecx 1 +
jz loc_42A2F7  +
sub ecx 1 +
jz loc_42A344  +
push 2  +
pop eax  +
sub ecx eax +
jz loc_42A347  +
sub ecx 1 +
jz loc_42A347  +
sub ecx 1 +
jz loc_42A347  +
jmp loc_42A316  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
sub esp 18h +
push ebx  +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [esi+0Ch] +
push ecx  +
mov eax [ebp+arg_8] +
push esi  +
sub esp 2Ch +
mov edx ecx +
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
xor esi esi +
push edi  +
mov eax [ebx+8] +
mov edi esi +
mov eax [eax+4] +
mov [ebp+var_4] eax +
test eax eax +
jz loc_42A79F  +
mov ecx [ebx+8] +
push edi  +
call sub_42B58E  +
test al al +
jz loc_42A799  +
push edi  +
mov ecx ebx +
call sub_42A733  +
mov esi eax +
test esi esi +
js loc_42A79F  +
inc edi  +
cmp edi [ebp+var_4] +
jb loc_42A77E  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 1Ch +
call sub_437582  +
mov eax [ebp+arg_0] +
mov eax 80004001h +
call sub_43754B  +
mov eax [ecx] +
call sub_43754B  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push ebx  +
call sub_437582  +
mov ecx [ebp-18h] +
mov ecx [ebp-1Ch] +
sub esp 30h +
mov eax [ebp+arg_0] +
sub esp 30h +
push esi  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
test dword ptr [ecx+70h] 1000h +
push ecx  +
mov ecx [ebp-18h] +
push ebx  +
push ebx  +
call sub_42C553  +
push ecx  +
sub esp 14h +
push ecx  +
sub esp 5Ch +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
mov eax [ebp+arg_0] +
sub esp 24h +
sub esp 2Ch +
push edi  +
mov edx [ebp+arg_0] +
push [ebp+arg_8]  +
push esi  +
push esi  +
push 10h  +
push [ebp+arg_8]  +
push [ebp+arg_8]  +
push [ebp+arg_8]  +
push 10h  +
push 10h  +
call sub_43754B  +
mov ecx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
call sub_437517  +
push esi  +
xor edi edi +
call sub_437582  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov edx [ecx+4] +
xor edx edx +
sub esp 14h +
test dword ptr [ecx+70h] 1000h +
call sub_437517  +
push esi  +
test dword ptr [esi+70h] 4000h +
push esi  +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ecx  +
cmp [ebp+arg_0] 0 +
test esi esi +
push esi  +
mov eax 80004001h +
push esi  +
push ebx  +
push ebx  +
call sub_43754B  +
sub esp 18h +
cmp byte ptr [ecx+1Ch] 0 +
call sub_437517  +
call sub_437517  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_437582  +
push esi  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push ebx  +
push esi  +
push [ebp+nIDDlgItem]  +
push ebx  +
mov ecx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
push ecx  +
push ebx  +
mov eax [ebp+arg_0] +
push ebx  +
xor eax eax +
push 1F31Dh  +
call sub_437517  +
mov eax [ebp+arg_8] +
push esi  +
push 0Bh  +
mov ax [ebp+arg_4] +
call sub_43754B  +
mov edi ecx +
lea ecx [edi+0Ch] +
mov dword ptr [edi] offset off_459030 +
call loc_408540  +
mov ecx [edi+0Ch] +
sub ecx 10h +
call sub_406040  +
mov dword ptr [edi] offset off_459014 +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push esi  +
test [ebp+arg_0] 1 +
mov eax [ebp+arg_0] +
push 10h  +
push esi  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push ebx  +
mov edx [ecx+8] +
mov edx [ecx+8] +
mov edx [ecx+8] +
push esi  +
push esi  +
call sub_437517  +
push ecx  +
push esi  +
sub esp 20h +
mov edi ecx +
call sub_42EF3E  +
xor ebx ebx +
mov ecx edi +
mov [edi+24h] ebx +
call sub_42EEFA  +
push 7F02h  +
push ebx  +
call ds:LoadCursorW  +
push 7F00h  +
push ebx  +
mov [edi+3Ch] eax +
call ds:LoadCursorW  +
push 2  +
mov [edi+40h] eax +
pop eax  +
mov [edi+10h] eax +
mov [edi+14h] eax +
mov eax edi +
mov [edi+50h] ebx +
mov [edi+44h] ebx +
pop edi  +
pop ebx  +
retn   +
***
call sub_4167F5  +
push edi  +
mov esi ds:GetSystemMetrics +
cmp [ebp+arg_0] 0 +
cmp dword ptr [ecx] 0 +
push esi  +
mov edx [ebp+arg_0] +
push ecx  +
mov eax [ebp+arg_0] +
sub esp 18h +
sub esp 64h +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push ecx  +
push 0FFFFFFFFh  +
mov edx [ebp+arg_0] +
push esi  +
push ebx  +
push esi  +
push esi  +
push ecx  +
cmp dword ptr [esi+10h] 0 +
push edi  +
push esi  +
mov eax dword_472AD4 +
mov eax dword_472AD4 +
push ebx  +
mov eax [ebp+arg_0] +
push ecx  +
call sub_437517  +
push 0FFFFFFFFh  +
push esi  +
push esi  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
push 0  +
sub esp 210h +
mov ecx [ebp+arg_4] +
mov edi ecx +
push esi  +
call sub_437517  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
push ecx  +
push ecx  +
push esi  +
push [ebp+arg_C]  +
sub esp 220h +
push ecx  +
push ecx  +
push esi  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_4] +
push esi  +
push esi  +
push esi  +
call sub_43754B  +
call sub_437600  +
cmp dword_470CFC 0 +
call sub_437600  +
cmp dword_470CFC 0 +
xor eax eax +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
push edi  +
mov edx [ebp+arg_0] +
test ecx ecx +
call sub_437517  +
call sub_4306EB  +
push 0FFFFFFFFh  +
mov eax [ebp+arg_0] +
push ecx  +
cmp dword ptr [ecx+4] 0 +
push edi  +
push 1  +
push esi  +
call sub_437517  +
mov ecx [ebp+arg_4] +
xor eax eax +
xor eax eax +
fldz   +
push ecx  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push esi  +
push ebx  +
push esi  +
push ebx  +
sub esp 1Ch +
sub esp 4Ch +
push ebx  +
call sub_437517  +
mov eax [ebp+arg_0] +
mov ecx [ecx+14h] +
mov edx [ebp+arg_0] +
sub esp 14h +
xor eax eax +
call sub_437517  +
push esi  +
push ecx  +
sub esp 2Ch +
sub esp 10h +
push ecx  +
mov eax [ecx+4] +
sub esp 10h +
mov edx [ebp+arg_0] +
push 1  +
call sub_437517  +
sub esp 0Ch +
mov edx [ebp+arg_0] +
push 0FFFFFFFFh  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx [esi+8] +
xor eax eax +
push 0FFFFFFFFh  +
push esi  +
push ecx  +
push esi  +
push esi  +
call sub_437517  +
mov eax [ebp+arg_0] +
mov ecx 10Bh +
cmp eax ecx +
ja loc_431ED6  +
jz loc_431DE3  +
cmp eax 3Eh +
ja loc_431D9A  +
jz loc_431D96  +
cmp eax 19h +
ja loc_431D13  +
jz loc_431D42  +
cmp eax 18h +
ja loc_431EF9  +
jmp ds:off_431F04[eax*4]  +
xor eax eax +
jmp loc_431E15  +
push 2  +
jmp loc_431E14  +
push 4  +
jmp loc_431E14  +
push 7  +
jmp loc_431E14  +
cmp eax 27h +
ja loc_431D83  +
jz loc_431D7C  +
cmp eax 20h +
ja loc_431D50  +
jz loc_431D49  +
sub eax 1Ah +
jz loc_431E54  +
sub eax 1 +
jz loc_431D42  +
dec eax  +
sub eax 1 +
jz loc_431EAF  +
sub eax 1 +
jnz loc_431EF9  +
push 9  +
jmp loc_431E14  +
push 0Bh  +
jmp loc_431E14  +
sub eax 21h +
jz loc_431D75  +
sub eax 1 +
jz loc_431DE3  +
dec eax  +
sub eax 1 +
jz loc_431D05  +
dec eax  +
sub eax 1 +
jnz loc_431EF9  +
push 0Eh  +
jmp loc_431E14  +
push 0Ch  +
jmp loc_431E14  +
push 0Dh  +
jmp loc_431E14  +
add eax 0FFFFFFCCh +
cmp eax 8 +
ja loc_431EF9  +
jmp ds:off_431F68[eax*4]  +
push 8  +
jmp loc_431E14  +
cmp eax 6Bh +
ja loc_431E19  +
jz loc_431CFE  +
cmp eax 47h +
ja loc_431DE7  +
jz loc_431EAF  +
sub eax 40h +
jz loc_431EAF  +
sub eax 1 +
jz loc_431EAF  +
sub eax 1 +
jz loc_431E54  +
sub eax 1 +
jz loc_431DE3  +
sub eax 1 +
jz loc_431D05  +
dec eax  +
sub eax 1 +
jnz loc_431EF9  +
push 3  +
jmp loc_431E14  +
sub eax 50h +
jz loc_431EAF  +
dec eax  +
sub eax 1 +
jz loc_431EAF  +
sub eax 3 +
jz loc_431DE3  +
sub eax 1 +
jz loc_431EAF  +
dec eax  +
sub eax 1 +
jnz loc_431EF9  +
push 0Ah  +
pop eax  +
pop ebp  +
retn 4  +
mov ecx 90h +
cmp eax ecx +
ja loc_431E79  +
jz loc_431DE3  +
cmp eax 75h +
ja loc_431E58  +
jz loc_431E12  +
sub eax 6Ch +
jz loc_431D75  +
sub eax 3 +
jz loc_431DE3  +
sub eax 1 +
jz loc_431D7C  +
sub eax 1 +
jz loc_431D05  +
sub eax 1 +
jnz loc_431EF9  +
push 6  +
jmp loc_431E14  +
sub eax 7Bh +
jz loc_431DE3  +
sub eax 1 +
jz loc_431DE3  +
sub eax 1 +
jz loc_431DE3  +
sub eax 6 +
jz loc_431D42  +
jmp loc_431D39  +
mov ecx 0B6h +
cmp eax ecx +
ja loc_431EB6  +
jz loc_431E54  +
sub eax 91h +
jz loc_431D0C  +
sub eax 9 +
jz loc_431DE3  +
sub eax 7 +
jz loc_431DE3  +
sub eax 6 +
jz loc_431D75  +
sub eax 3 +
jnz loc_431EF9  +
push 5  +
jmp loc_431E14  +
sub eax 0B7h +
jz loc_431EAF  +
sub eax 8 +
jz loc_431E54  +
dec eax  +
sub eax 1 +
jz loc_431E54  +
sub eax 0Dh +
jz loc_431DE3  +
jmp loc_431DD9  +
sub eax 3E3h +
jz loc_431E12  +
sub eax 1 +
jz loc_431E12  +
sub eax 1 +
jz loc_431E12  +
dec eax  +
sub eax 1 +
jz loc_431EAF  +
xor eax eax +
inc eax  +
jmp loc_431E15  +
***
mov eax [ebp+arg_0] +
cmp [ebp+pszPath] 0 +
push esi  +
sub esp 814h +
cmp [ebp+arg_8] 0 +
call sub_43754B  +
sub esp 238h +
call sub_43754B  +
sub esp 50h +
sub esp 30h +
xor eax eax +
push 0FFFFFFFFh  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
push ecx  +
push esi  +
push esi  +
mov esi ecx +
call sub_437517  +
call sub_437517  +
mov ecx [ebp+arg_4] +
call sub_437517  +
push ecx  +
cmp dword ptr [esi+4] 0 +
push edi  +
push 10h  +
pop edi  +
mov ecx [esi+70h] +
sub ecx edi +
mov dword ptr [esi] offset off_459568 +
call sub_406040  +
mov ecx [esi+6Ch] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+68h] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+64h] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+60h] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+5Ch] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+58h] +
sub ecx edi +
call sub_406040  +
mov ecx [esi+54h] +
sub ecx edi +
call sub_406040  +
lea ecx [esi+40h] +
call sub_432C79  +
pop edi  +
lea ecx [esi+2Ch] +
pop esi  +
jmp sub_432C79  +
***
push esi  +
push esi  +
push esi  +
push esi  +
call sub_437517  +
sub esp 60h +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push ebx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
call sub_437517  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
call sub_437517  +
call sub_437517  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-9Ch] +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_432AF0  +
and dword ptr [ebp-4] 0 +
call ds:GetActiveWindow  +
push eax  +
lea ecx [ebp-9Ch] +
call sub_432E65  +
lea ecx [ebp-9Ch] +
mov esi eax +
call sub_432CB5  +
mov eax esi +
call sub_4374E0  +
retn 20h  +
***
push 0  +
mov eax offset loc_455531 +
call sub_437517  +
mov esi [ebp+18h] +
xor eax eax +
test esi esi +
setnz al  +
test eax eax +
jnz loc_4335E3  +
call sub_416A89  +
mov eax [ebp+0Ch] +
xor edi edi +
cmp eax 0Ah +
ja loc_433876  +
jmp ds:off_433880[eax*4]  +
mov eax [ebp+10h] +
mov ecx esi +
mov edx [esi] +
push eax  +
mov [esi+8Ch] eax +
call dword ptr [edx+18h]  +
jmp loc_433874  +
push dword ptr [ebp+14h]  +
lea ecx [ebp+0Ch] +
call sub_408700  +
mov edx [esi] +
mov ecx esi +
and dword ptr [ebp-4] 0 +
push eax  +
call dword ptr [edx+28h]  +
mov ecx [ebp+0Ch] +
mov edi eax +
lea ecx [ecx-10h] +
call sub_406040  +
jmp loc_433876  +
mov eax [esi] +
mov ecx esi +
push dword ptr [ebp+10h]  +
call dword ptr [eax+30h]  +
jmp loc_433874  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+14h]  +
and dword ptr [esi+4] 0 +
jmp loc_433874  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+34h]  +
jmp loc_433874  +
mov eax [ebp+10h] +
mov ecx esi +
mov edx [esi] +
push eax  +
mov [esi+88h] eax +
call dword ptr [edx+1Ch]  +
jmp loc_433874  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0Ch]  +
jmp loc_433874  +
test dword ptr [esi+14h] 200h +
mov edi [ebp+8] +
mov ebx ds:SendMessageW +
mov [esi+4] edi +
jz loc_4336E7  +
test dword ptr [esi+14h] 400h +
jz loc_4336B2  +
push dword ptr [esi+80h]  +
push dword ptr [esi+7Ch]  +
push 46Bh  +
jmp loc_4336E4  +
movzx ecx word ptr [esi+78h] +
movzx eax word ptr [esi+74h] +
shl ecx 10h +
or ecx eax +
push ecx  +
push 0  +
push 469h  +
push edi  +
call ebx  +
push 0  +
push dword ptr [esi+80h]  +
push 46Ah  +
push edi  +
call ebx  +
push 0  +
push dword ptr [esi+7Ch]  +
push 468h  +
push edi  +
call ebx  +
mov eax [esi+48h] +
mov [ebp+0Ch] eax +
test eax eax +
jz loc_433738  +
xor ebx ebx +
test eax eax +
jle loc_433732  +
lea eax [esi+40h] +
mov esi [ebp+0Ch] +
mov [ebp+10h] eax +
push ebx  +
mov ecx eax +
call sub_432EDF  +
test byte ptr [eax+8] 1 +
jnz loc_433727  +
mov ecx [ebp+10h] +
push ebx  +
call sub_432EDF  +
push 0  +
push dword ptr [eax]  +
push 470h  +
push edi  +
call ds:SendMessageW  +
mov eax [ebp+10h] +
inc ebx  +
cmp ebx esi +
jl loc_433700  +
mov esi [ebp+18h] +
mov ebx ds:SendMessageW +
mov eax [esi+34h] +
mov [ebp+14h] eax +
test eax eax +
jz loc_4337A6  +
and dword ptr [ebp+0Ch] 0 +
test eax eax +
jle loc_4337A6  +
lea eax [esi+2Ch] +
mov esi [ebp+0Ch] +
mov [ebp+10h] eax +
push esi  +
mov ecx eax +
call sub_432EDF  +
test byte ptr [eax+8] 1 +
jnz loc_433776  +
mov ecx [ebp+10h] +
push esi  +
call sub_432EDF  +
push 0  +
push dword ptr [eax]  +
push 46Fh  +
push edi  +
call ebx  +
mov ecx [ebp+10h] +
push esi  +
call sub_432EDF  +
test byte ptr [eax+8] 2 +
jz loc_43379A  +
mov ecx [ebp+10h] +
push esi  +
call sub_432EDF  +
push 1  +
push dword ptr [eax]  +
push 473h  +
push edi  +
call ebx  +
mov eax [ebp+10h] +
inc esi  +
cmp esi [ebp+14h] +
jl loc_433753  +
mov esi [ebp+18h] +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_4337B6  +
cmp dword ptr [esi+10h] 0 +
jz loc_43383F  +
mov eax [esi] +
xor ecx ecx +
inc ecx  +
mov [ebp+10h] ecx +
xor ecx ecx +
mov [ebp+18h] ecx +
mov ecx esi +
call dword ptr [eax+40h]  +
test eax eax +
jle loc_43383F  +
mov ecx [ebp+10h] +
test [esi+0Ch] ecx +
jz loc_4337FD  +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+38h]  +
test eax eax +
jz loc_4335DE  +
mov eax [esi] +
mov ecx [ebp+10h] +
push 0  +
push ecx  +
mov ecx esi +
call dword ptr [eax+38h]  +
push eax  +
push 46Fh  +
push edi  +
call ebx  +
mov ecx [ebp+10h] +
test [esi+10h] ecx +
jz loc_43382B  +
mov eax [esi] +
push ecx  +
mov ecx esi +
call dword ptr [eax+38h]  +
test eax eax +
jz loc_4335DE  +
mov eax [esi] +
mov ecx [ebp+10h] +
push 1  +
push ecx  +
mov ecx esi +
call dword ptr [eax+38h]  +
push eax  +
push 473h  +
push edi  +
call ebx  +
mov ecx [ebp+10h] +
mov eax [esi] +
add ecx ecx +
inc dword ptr [ebp+18h]  +
mov [ebp+10h] ecx +
mov ecx esi +
call dword ptr [eax+40h]  +
cmp [ebp+18h] eax +
jl loc_4337CC  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+10h]  +
jmp loc_433874  +
mov eax [ebp+10h] +
mov ecx esi +
mov edx [esi] +
push eax  +
mov [esi+84h] eax +
call dword ptr [edx+20h]  +
jmp loc_433874  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+2Ch]  +
jmp loc_433874  +
mov edx [esi] +
xor eax eax +
cmp [ebp+10h] eax +
mov ecx esi +
setnz al  +
push eax  +
call dword ptr [edx+24h]  +
mov edi eax +
mov eax edi +
call sub_4374E0  +
retn 14h  +
***
xor eax eax +
call sub_437517  +
cmp dword ptr [esi+4] 0 +
mov ecx [esi+18h] +
sub ecx 10h +
mov dword ptr [esi] offset off_4596E0 +
call sub_406040  +
mov ecx [esi+14h] +
sub ecx 10h +
call sub_406040  +
mov ecx [esi+0Ch] +
sub ecx 10h +
pop esi  +
jmp sub_406040  +
***
jmp sub_43395D  +
***
mov edx [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
call sub_4375B9  +
mov eax ecx +
mov [ebp-34h] eax +
push dword ptr [eax+1Ch]  +
lea ecx [ebp-15h] +
call sub_402DC0  +
mov ecx [ebp+8] +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-21h] bl +
mov esi [ecx+8] +
mov [ebp-1Ch] esi +
test esi esi +
jnz loc_433AC9  +
lea esi [ebp-21h] +
mov [ebp-1Ch] esi +
push esi  +
call sub_441EC0  +
test byte ptr [ebp+0Ch] 0Ch +
mov edi eax +
mov eax [ebp+8] +
pop ecx  +
mov ecx [eax+10h] +
movzx eax word ptr [eax+0Ch] +
mov [ebp-28h] ecx +
mov [ebp-30h] eax +
jz loc_433B49  +
lea esi [edi+3] +
push esi  +
call sub_43459F  +
pop ecx  +
test al al +
jnz loc_433B08  +
lea ecx [ebp-15h] +
call nullsub_1  +
mov eax 8007000Eh +
jmp loc_433D7C  +
mov eax esi +
call sub_437880  +
mov eax [ebp-1Ch] +
mov esi esp +
mov [ebp-10h] esp +
push edi  +
push eax  +
lea eax [edi+3] +
push eax  +
push esi  +
call sub_4164AD  +
mov ecx [ebp+8] +
add esp 10h +
mov [ebp-1Ch] esi +
movzx eax word ptr [ecx+0Ch] +
mov byte ptr [esi+edi] 0FFh +
mov [esi+edi+1] al +
mov [esi+edi+2] bl +
mov edi ebx +
mov eax [ecx+14h] +
mov [ebp-28h] eax +
mov [ebp-30h] edi +
jmp loc_433B4C  +
mov edi [ebp-30h] +
mov eax [ebp+14h] +
mov eax [eax+8] +
shl eax 4 +
push eax  +
call sub_43459F  +
pop ecx  +
test al al +
jz loc_433AF6  +
mov eax [ebp+14h] +
mov eax [eax+8] +
cmp eax 7FFFFFFh +
ja loc_433AF6  +
shl eax 4 +
mov [ebp-20h] eax +
call sub_437880  +
mov eax esp +
mov [ebp-10h] esp +
push dword ptr [ebp-20h]  +
mov [ebp-2Ch] eax +
push ebx  +
push eax  +
mov [ebp-48h] eax +
call sub_439AB0  +
add esp 0Ch +
push edi  +
push esi  +
call sub_433E64  +
mov [ebp-1Ch] eax +
add eax 10h +
push eax  +
mov [ebp-20h] eax +
call sub_43459F  +
pop ecx  +
test al al +
jnz loc_433BB5  +
mov esi 8007000Eh +
jmp loc_433C91  +
mov eax [ebp-20h] +
call sub_437880  +
lea ecx [ebp-60h] +
mov [ebp-10h] esp +
mov [ebp-20h] esp +
call sub_4338AC  +
mov ecx [ebp-34h] +
lea eax [ebp-60h] +
push eax  +
push dword ptr [ebp-2Ch]  +
lea eax [ebp-44h] +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push edi  +
push eax  +
push esi  +
mov esi [ebp-20h] +
push esi  +
call sub_434050  +
mov [ebp-4Ch] eax +
mov [ebp-20h] ebx +
test eax eax +
jnz loc_433C55  +
push dword ptr [ebp-1Ch]  +
movzx eax di +
mov byte ptr [ebp-4] 2 +
push esi  +
push dword ptr [ebp-28h]  +
cmp eax 4 +
jz loc_433C40  +
cmp eax 5 +
jz loc_433C36  +
cmp eax 7 +
jz loc_433C36  +
add eax 0FFFFFFECh +
cmp eax 1 +
ja loc_433C2A  +
call sub_43630E  +
mov [ebp-44h] eax +
mov [ebp-40h] edx +
jmp loc_433C4E  +
call sub_43630E  +
mov ebx eax +
mov [ebp-20h] ebx +
jmp loc_433C4E  +
call sub_43630E  +
fstp  qword ptr [ebp-44h] +
jmp loc_433C4E  +
call sub_43630E  +
fstp  dword ptr [ebp-34h] +
fld  dword ptr [ebp-34h] +
fstp  dword ptr [ebp-44h] +
mov dword ptr [ebp-4] 1 +
mov eax [ebp+14h] +
xor esi esi +
cmp [eax+8] esi +
jbe loc_433C82  +
mov edi ds:VariantClear +
mov ebx eax +
mov eax [ebp-2Ch] +
push eax  +
call edi  +
mov eax [ebp-2Ch] +
inc esi  +
add eax 10h +
mov [ebp-2Ch] eax +
cmp esi [ebx+8] +
jb loc_433C6A  +
mov ebx [ebp-20h] +
mov edi [ebp-30h] +
mov esi [ebp-4Ch] +
lea ecx [ebp-60h] +
test esi esi +
jz loc_433CCA  +
call sub_43395D  +
lea ecx [ebp-15h] +
call nullsub_1  +
mov eax esi +
jmp loc_433D7C  +
mov eax [ebp+14h] +
xor esi esi +
mov edi esi +
cmp [eax+8] esi +
jbe loc_433CC3  +
mov ebx [ebp-48h] +
mov esi eax +
push ebx  +
call ds:VariantClear  +
inc edi  +
add ebx 10h +
cmp edi [esi+8] +
jb loc_433CB1  +
xor esi esi +
push esi  +
push esi  +
call sub_43A3FD  +
call sub_433DDA  +
mov ecx [ebp+10h] +
movzx eax di +
test ecx ecx +
jz loc_433D37  +
add eax 0FFFFFFFEh +
mov [ecx] di +
cmp eax 13h +
ja loc_433D6A  +
jmp ds:off_433D8A[eax*4]  +
mov [ecx+8] bl +
jmp loc_433D6A  +
mov [ecx+8] bx +
jmp loc_433D6A  +
mov eax [ebp-44h] +
mov [ecx+8] eax +
mov eax [ebp-40h] +
mov [ecx+0Ch] eax +
jmp loc_433D6A  +
fld  dword ptr [ebp-44h] +
fstp  dword ptr [ecx+8] +
jmp loc_433D6A  +
fld  qword ptr [ebp-44h] +
fstp  qword ptr [ecx+8] +
jmp loc_433D6A  +
xor eax eax +
test bx bx +
setz al  +
dec eax  +
mov [ecx+8] ax +
jmp loc_433D6A  +
mov edi ecx +
lea esi [ebp-44h] +
movs   +
movs   +
movs   +
movs   +
jmp loc_433D6A  +
mov [ecx+8] ebx +
jmp loc_433D6A  +
sub eax 8 +
jz loc_433D63  +
sub eax 1 +
jz loc_433D4B  +
sub eax 3 +
jz loc_433D57  +
sub eax 1 +
jnz loc_433D6A  +
test ebx ebx +
jz loc_433D6A  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+8]  +
jmp loc_433D6A  +
lea eax [ebp-44h] +
push eax  +
call ds:VariantClear  +
jmp loc_433D6A  +
push ebx  +
call ds:SysFreeString  +
lea ecx [ebp-60h] +
call sub_43395D  +
lea ecx [ebp-15h] +
call nullsub_1  +
xor eax eax +
lea esp [ebp-74h] +
call sub_437506  +
retn 14h  +
***
mov edi ecx +
mov ax [ebp+arg_4] +
call sub_437517  +
mov esi [ebp+8] +
push 0Ch  +
pop eax  +
mov [esi] ecx +
add esi 4 +
cmp word ptr [ebp+14h] 6 +
jz loc_434074  +
cmp [ebp+14h] ax +
jnz loc_43407C  +
mov eax [ebp+10h] +
mov [esi] eax +
add esi 4 +
mov edx [ebp+18h] +
mov eax [edx] +
mov ecx [edx+8] +
mov [ebp-10h] eax +
xor eax eax +
mov edi eax +
mov [ebp+8] ecx +
mov eax [edx+0Ch] +
mov [ebp+10h] eax +
mov eax [ebp+0Ch] +
mov [ebp+14h] edi +
cmp byte ptr [eax] 0 +
jz loc_43426B  +
movzx ebx byte ptr [eax] +
dec ecx  +
mov eax 0FFh +
mov [ebp+8] ecx +
cmp bx ax +
jz loc_4340C5  +
test bl 40h +
jz loc_4340C5  +
and ebx 0FFBFh +
or ebx 4000h +
cmp ecx [ebp+10h] +
jl loc_43410E  +
cmp bx ax +
jz loc_434268  +
mov edi [ebp-10h] +
mov eax ecx +
shl eax 4 +
push 0Ch  +
pop edx  +
add edi eax +
cmp bx dx +
jz loc_434155  +
cmp bx [edi] +
jz loc_434155  +
add eax [ebp+20h] +
xor ecx ecx +
push ebx  +
push ecx  +
push edi  +
push eax  +
mov [ebp-14h] eax +
call ds:VariantChangeType  +
mov ecx eax +
test ecx ecx +
js loc_434274  +
mov edi [ebp-14h] +
mov ecx [ebp+8] +
jmp loc_434155  +
cmp bx ax +
jnz loc_434129  +
mov ecx [edx+0Ch] +
xor eax eax +
xor edi edi +
mov [ebp+8] ecx +
inc edi  +
mov [ebp+10h] eax +
mov [ebp+14h] edi +
jmp loc_434254  +
test edi edi +
jnz loc_434268  +
push 0Ch  +
pop eax  +
cmp bx ax +
jnz loc_434268  +
push 0Ah  +
pop eax  +
mov word_472D10 ax +
mov edi offset word_472D10 +
mov dword_472D18 80020004h +
test ebx 4000h +
jz loc_4341F0  +
mov eax 400Bh +
cmp bx ax +
jnz loc_4341E6  +
cmp dword ptr [ebp+24h] 0 +
jz loc_4341E6  +
mov eax [edi+8] +
xor ecx ecx +
xor edx edx +
push 4  +
cmp [eax] dx +
setnz cl  +
mov [ebp-14h] ecx +
call sub_4139EA  +
pop ecx  +
mov ebx eax +
xor ecx ecx +
test ebx ebx +
jz loc_434198  +
mov eax [ebp-14h] +
mov [ebx] eax +
jmp loc_43419A  +
mov ebx ecx +
mov eax [edi+8] +
mov [ebp-20h] ebx +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-18h] 1 +
test ebx ebx +
jz loc_434263  +
test eax eax +
jz loc_434263  +
lea eax [ebp-20h] +
mov [ebp-4] ecx +
push eax  +
mov eax [ebp+24h] +
mov ecx eax +
push dword ptr [eax+8]  +
call sub_434330  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-18h] 0 +
jz loc_4341E9  +
push 4  +
push dword ptr [ebp-20h]  +
call sub_436CA0  +
pop ecx  +
pop ecx  +
jmp loc_4341E9  +
mov ebx [edi+8] +
mov ecx [ebp+8] +
mov [esi] ebx +
jmp loc_43424E  +
movzx eax bx +
add eax 0FFFFFFFEh +
cmp eax 13h +
ja loc_434251  +
jmp ds:off_4342A0[eax*4]  +
movsx eax byte ptr [edi+8] +
jmp loc_43424C  +
movzx eax byte ptr [edi+8] +
jmp loc_43424C  +
movsx eax word ptr [edi+8] +
jmp loc_43424C  +
movzx eax word ptr [edi+8] +
jmp loc_43424C  +
mov eax [edi+8] +
mov [esi] eax +
mov eax [edi+0Ch] +
mov [esi+4] eax +
add esi 8 +
jmp loc_434251  +
fld  dword ptr [edi+8] +
fstp  dword ptr [esi] +
jmp loc_43424E  +
fld  qword ptr [edi+8] +
fstp  qword ptr [esi] +
jmp loc_434225  +
xor eax eax +
xor edx edx +
cmp [edi+8] dx +
setnz al  +
jmp loc_43424C  +
mov [esi] edi +
jmp loc_43424E  +
mov eax [edi+8] +
mov [esi] eax +
add esi 4 +
mov edi [ebp+14h] +
mov eax [ebp+0Ch] +
mov edx [ebp+18h] +
inc eax  +
mov [ebp+0Ch] eax +
jmp loc_43409A  +
call sub_416A89  +
mov eax [ebp+0Ch] +
test ecx ecx +
jle loc_434280  +
mov ecx 8002000Eh +
mov eax [ebp+1Ch] +
mov edx [ebp+8] +
mov [eax] edx +
mov eax ecx +
jmp loc_434296  +
cmp byte ptr [eax] 0 +
jz loc_434294  +
mov eax [ebp+1Ch] +
mov ecx [edx+8] +
mov [eax] ecx +
mov eax 8002000Fh +
jmp loc_434296  +
xor eax eax +
call sub_4374E0  +
retn 20h  +
***
push esi  +
push esi  +
push ecx  +
call sub_437660  +
and dword ptr [ecx] 0 +
mov eax ecx +
mov dword ptr [ecx+4] 1 +
retn   +
***
push esi  +
push edi  +
call sub_437517  +
mov eax ecx +
mov [ebp-20h] eax +
xor ebx ebx +
cmp [eax] ebx +
jz loc_434B42  +
mov [ebp-50h] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-48h] ebx +
mov [ebp-44h] ebx +
push 10h  +
pop eax  +
push eax  +
lea eax [ebp-50h] +
mov [ebp-4] ebx +
push ebx  +
push eax  +
call sub_439AB0  +
mov edi [ebp+18h] +
add esp 0Ch +
test edi edi +
jz loc_4346FA  +
push edi  +
call sub_441EC0  +
mov esi eax +
pop ecx  +
mov [ebp-48h] esi +
jmp loc_4346FD  +
mov esi [ebp-48h] +
test byte ptr [ebp+0Ch] 0Ch +
mov dword ptr [ebp-1Ch] 0FFFFFFFDh +
jz loc_434717  +
lea eax [ebp-1Ch] +
mov dword ptr [ebp-44h] 1 +
mov [ebp-4Ch] eax +
lea ecx [ebp-64h] +
call sub_4338AC  +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_434865  +
xor ecx ecx +
mov eax esi +
push 10h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_413A1C  +
mov ecx [ebp-48h] +
mov esi eax +
shl ecx 4 +
push ecx  +
push ebx  +
push esi  +
mov [ebp-50h] esi +
call sub_439AB0  +
mov edx [ebp-48h] +
add esp 10h +
shl edx 4 +
add edx 0FFFFFFF0h +
mov [ebp-14h] edi +
add edx esi +
cmp byte ptr [edi] 0 +
mov [ebp-10h] edx +
jz loc_434865  +
mov eax [ebp+1Ch] +
lea edi [edx+8] +
push 4  +
mov [ebp-18h] edi +
pop esi  +
lea ebx [eax-4] +
lea ecx [eax-8] +
mov eax [ebp-14h] +
movzx eax byte ptr [eax] +
mov [edx] ax +
test al 40h +
jz loc_43479D  +
and eax 0FFBFh +
or eax 4000h +
mov [edx] ax +
movzx eax word ptr [edx] +
cmp eax 4002h +
jg loc_43495B  +
jz loc_4347D6  +
sub eax 2 +
cmp eax 13h +
ja loc_434846  +
jmp ds:off_434B4A[eax*4]  +
add ecx esi +
add ebx esi +
mov al [ebx] +
mov [edi] al +
jmp loc_434846  +
add ecx esi +
add ebx esi +
mov ax [ebx] +
mov [edi] ax +
jmp loc_434846  +
add ecx esi +
add ebx esi +
mov eax [ebx] +
mov [edi] eax +
jmp loc_434846  +
add ecx 8 +
add ebx 8 +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
jmp loc_434846  +
add ecx 8 +
add ebx 8 +
fld  qword ptr [ecx] +
fstp  dword ptr [edi] +
jmp loc_434846  +
add ecx 8 +
add ebx 8 +
fld  qword ptr [ecx] +
fstp  qword ptr [edi] +
jmp loc_434846  +
add ecx esi +
add ebx esi +
mov [ebp+1Ch] ecx +
mov ecx [ebx] +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
jmp loc_434843  +
add ebx esi +
add ecx esi +
mov [ebp+1Ch] ecx +
mov esi [ebx] +
push esi  +
call ds:SysAllocString  +
mov [edi] eax +
test esi esi +
jz loc_43483D  +
test eax eax +
jz loc_4349C3  +
push 4  +
pop esi  +
mov edx [ebp-10h] +
mov ecx [ebp+1Ch] +
push 10h  +
pop eax  +
sub edx eax +
sub edi eax +
mov eax [ebp-14h] +
inc eax  +
mov [ebp-10h] edx +
mov [ebp-18h] edi +
mov [ebp-14h] eax +
cmp byte ptr [eax] 0 +
jnz loc_434786  +
xor ebx ebx +
lea eax [ebp-40h] +
mov edi ebx +
push eax  +
call sub_42E9DB  +
mov esi [ebp+10h] +
test si si +
jz loc_43487B  +
lea edi [ebp-40h] +
push 20h  +
lea eax [ebp-84h] +
push ebx  +
push eax  +
call sub_439AB0  +
mov eax [ebp-20h] +
lea edx [ebp-24h] +
or dword ptr [ebp-24h] 0FFFFFFFFh +
add esp 0Ch +
mov eax [eax] +
push edx  +
lea edx [ebp-84h] +
push edx  +
mov ecx [eax] +
lea edx [ebp-50h] +
push edi  +
push edx  +
push dword ptr [ebp+0Ch]  +
push ebx  +
push offset unk_45A4B8  +
push dword ptr [ebp+8]  +
push eax  +
call dword ptr [ecx+18h]  +
lea ecx [ebp-64h] +
mov edi eax +
call sub_434650  +
mov ecx [ebp-48h] +
test ecx ecx +
jz loc_434905  +
mov eax [ebp-50h] +
add eax 0FFFFFFF0h +
shl ecx 4 +
add eax ecx +
mov [ebp+0Ch] eax +
mov eax [ebp+18h] +
cmp byte ptr [eax] 0 +
jz loc_434905  +
mov esi [ebp+0Ch] +
push 10h  +
pop ecx  +
cmp byte ptr [eax] 8 +
jnz loc_4348F7  +
push esi  +
call ds:VariantClear  +
mov eax [ebp+18h] +
push 10h  +
pop ecx  +
sub esi ecx +
inc eax  +
mov [ebp+18h] eax +
cmp byte ptr [eax] 0 +
jnz loc_4348E5  +
mov esi [ebp+10h] +
push dword ptr [ebp-50h]  +
call sub_413A17  +
mov [ebp-50h] ebx +
pop ecx  +
test edi edi +
jns loc_434A74  +
lea eax [ebp-40h] +
push eax  +
call ds:VariantClear  +
cmp edi 80020009h +
jz loc_4349C8  +
push edi  +
call sub_416927  +
add ebx esi +
add ecx esi +
mov eax [ebx] +
neg eax  +
sbb eax eax +
jmp loc_4347D1  +
add ecx esi +
mov edi edx +
add ebx esi +
push 4  +
mov esi [ebx] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp-18h] +
pop esi  +
jmp loc_434846  +
sub eax 4003h +
cmp eax 12h +
ja loc_434846  +
jmp ds:off_434B9A[eax*4]  +
add ebx esi +
add ecx esi +
mov [ebp+1Ch] ecx +
mov ecx [ebx] +
mov [ebp-30h] ecx +
mov [ebp-2Ch] ecx +
mov eax [ecx] +
neg eax  +
sbb eax eax +
and dword ptr [ebp-28h] 0 +
and eax 0FFFFh +
mov [ecx] eax +
mov [edi] ecx +
lea eax [ebp-30h] +
mov byte ptr [ebp-4] 2 +
push eax  +
push dword ptr [ebp-5Ch]  +
lea ecx [ebp-64h] +
call sub_434330  +
cmp dword ptr [ebp-28h] 0 +
mov byte ptr [ebp-4] 1 +
jz loc_434840  +
push esi  +
push dword ptr [ebp-30h]  +
call sub_436CA0  +
pop ecx  +
pop ecx  +
jmp loc_434840  +
call sub_416AA3  +
mov eax [ebp-6Ch] +
test eax eax +
jz loc_4349D8  +
lea ecx [ebp-84h] +
push ecx  +
call eax  +
push 20h  +
call sub_4139EA  +
pop ecx  +
mov [ebp+14h] eax +
mov byte ptr [ebp-4] 3 +
test eax eax +
jz loc_4349FC  +
push dword ptr [ebp-84h]  +
mov ecx eax +
push ebx  +
push ebx  +
call sub_4338C3  +
mov ebx eax +
push dword ptr [ebp-80h]  +
mov esi ds:SysStringLen +
mov byte ptr [ebp-4] 1 +
call esi  +
test eax eax +
jz loc_434A1A  +
push dword ptr [ebp-80h]  +
lea ecx [ebx+18h] +
call sub_4086C0  +
push dword ptr [ebp-80h]  +
mov edi ds:SysFreeString +
call edi  +
push dword ptr [ebp-7Ch]  +
call esi  +
test eax eax +
jz loc_434A39  +
push dword ptr [ebp-7Ch]  +
lea ecx [ebx+0Ch] +
call sub_4086C0  +
push dword ptr [ebp-7Ch]  +
call edi  +
push dword ptr [ebp-78h]  +
call esi  +
test eax eax +
jz loc_434A52  +
push dword ptr [ebp-78h]  +
lea ecx [ebx+14h] +
call sub_4086C0  +
push dword ptr [ebp-78h]  +
call edi  +
mov eax [ebp-74h] +
mov [ebx+10h] eax +
mov eax [ebp-68h] +
mov [ebx+1Ch] eax +
lea eax [ebp+14h] +
push offset unk_46AEAC  +
push eax  +
mov [ebp+14h] ebx +
call sub_43A3FD  +
test si si +
jz loc_434B2B  +
cmp si 0Ch +
jz loc_434AA5  +
push esi  +
push ebx  +
lea eax [ebp-40h] +
push eax  +
push eax  +
call ds:VariantChangeType  +
mov edi eax +
test edi edi +
jns loc_434AA5  +
lea eax [ebp-40h] +
push eax  +
call ds:VariantClear  +
jmp loc_43492F  +
movzx eax si +
add eax 0FFFFFFFEh +
cmp eax 13h +
ja loc_434B2B  +
jmp ds:off_434BE6[eax*4]  +
mov ecx [ebp+14h] +
mov al [ebp-38h] +
mov [ecx] al +
jmp loc_434B2B  +
mov ecx [ebp+14h] +
mov ax [ebp-38h] +
mov [ecx] ax +
jmp loc_434B2B  +
mov ecx [ebp+14h] +
mov eax [ebp-38h] +
mov [ecx] eax +
mov eax [ebp-34h] +
mov [ecx+4] eax +
jmp loc_434B2B  +
mov eax [ebp+14h] +
fld  dword ptr [ebp-38h] +
fstp  dword ptr [eax] +
jmp loc_434B2B  +
mov eax [ebp+14h] +
fld  qword ptr [ebp-38h] +
fstp  qword ptr [eax] +
jmp loc_434B2B  +
push dword ptr [ebp-38h]  +
push dword ptr [ebp+14h]  +
call sub_4362D1  +
push dword ptr [ebp-38h]  +
call ds:SysFreeString  +
jmp loc_434B2B  +
mov eax [ebp+14h] +
xor ecx ecx +
cmp [ebp-38h] cx +
setnz cl  +
mov [eax] ecx +
jmp loc_434B2B  +
mov edi [ebp+14h] +
lea esi [ebp-40h] +
movs   +
movs   +
movs   +
movs   +
jmp loc_434B2B  +
mov ecx [ebp+14h] +
mov eax [ebp-38h] +
mov [ecx] eax +
lea ecx [ebp-64h] +
call sub_43395D  +
cmp dword ptr [ebp-50h] 0 +
jz loc_434B42  +
push dword ptr [ebp-50h]  +
call sub_413A17  +
pop ecx  +
call sub_4374E0  +
retn 18h  +
***
mov ecx [esi] +
push ecx  +
push 0FFFFFFFFh  +
push esi  +
mov ecx [ebp+arg_0] +
call sub_437582  +
call sub_437582  +
call sub_437517  +
push esi  +
mov eax [ecx+2Ch] +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
push esi  +
call sub_437582  +
mov edi [ebp+8] +
lea ecx [ebp+0Bh] +
push dword ptr [edi-1Ch]  +
call sub_402DC0  +
and dword ptr [ebp-4] 0 +
mov esi [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
mov [ebp+0Ch] esi +
test esi esi +
jz loc_434F80  +
mov eax [edi-38h] +
lea ecx [edi-38h] +
call dword ptr [eax+54h]  +
test eax eax +
jz loc_434F80  +
dec esi  +
jmp loc_434F58  +
mov ecx [ebp-14h] +
call loc_416AD7  +
mov eax offset loc_434F7D +
retn   +
mov esi [ebp+0Ch] +
lea ecx [ebp+0Bh] +
call nullsub_1  +
xor eax eax +
test esi esi +
setnz al  +
call sub_4374E0  +
retn 8  +
***
call sub_437517  +
call sub_4363CF  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
push 10h  +
call sub_437582  +
call sub_437582  +
call sub_437582  +
xor eax eax +
call sub_413A17  +
push esi  +
push ecx  +
push ecx  +
push ebx  +
xor eax eax +
call sub_413A17  +
push esi  +
push ecx  +
call sub_41C0B0  +
mov esi ecx +
xor eax eax +
call sub_413A17  +
push esi  +
push ecx  +
push ecx  +
push ebx  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
push esi  +
cmp dword ptr [ecx+34h] 3FFFFFFEh +
call sub_437582  +
mov edx [ebp+arg_0] +
push ecx  +
call sub_437517  +
sub esp 0Ch +
call sub_437582  +
mov ecx [ebp-14h] +
push esi  +
push ebx  +
push ebx  +
push ebx  +
cmp [ebp+arg_0] 0 +
pop edx  +
call sub_419B8F  +
cmp byte ptr [esi+4Ah] 0 +
push 0  +
call sub_437517  +
call sub_4363DF  +
mov ecx offset unk_472D74 +
mov dword ptr [esi] offset off_45A1C0 +
push esi  +
mov ecx [ebp+arg_0] +
mov eax [ecx+24h] +
mov eax [ebp+arg_0] +
sub esp 1Ch +
sub esp 1Ch +
call sub_437582  +
sub esp 1Ch +
call sub_437582  +
push [ebp+arg_8]  +
push 0  +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
mov dword ptr [ecx] offset off_45A22C +
test [ebp+arg_0] 1 +
push ecx  +
push ecx  +
mov dword ptr [ecx] offset off_459ED4 +
push esi  +
mov eax 110h +
push ecx  +
mov edx [ebp+arg_0] +
call sub_4437C0  +
call sub_437B42  +
call sub_405B30  +
push eax  +
call sub_4444D8  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_437AFE  +
test al al +
jnz loc_436C6A  +
push dword ptr [ebp-20h]  +
call sub_444275  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_436C75  +
call sub_444257  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_4378AC  +
cmp ecx dword_46E524 +
push [ebp+arg_0]  +
test [ebp+arg_0] 1 +
push edi  +
call sub_436E4B  +
call sub_436E4B  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
mov eax dword_46E524 +
mov eax [ebp+arg_0] +
call sub_437D94  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_437600  +
call sub_437D94  +
cmp byte_472DC0 0 +
mov eax dword_46E524 +
push [ebp+arg_0]  +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
call sub_437600  +
test al al +
call sub_437600  +
mov edi [ebp+10h] +
test al al +
call sub_437600  +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_46E524 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_436C8F  +
jmp sub_437646  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_4376E4  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_4376D4  +
***
cmp dword_4730F4 0 +
jz loc_437730  +
push ebp  +
mov ebp esp +
sub esp 8 +
and esp 0FFFFFFF8h +
fstp  [esp+0Ch+var_C] +
cvttsd2si eax [esp+0Ch+var_C] +
leave   +
retn   +
cmp dword_4730F4 0 +
jz loc_437730  +
sub esp 4 +
fnstcw  word ptr [esp] +
pop eax  +
and ax 7Fh +
cmp ax 7Fh +
jz loc_4376F9  +
lea esp [esp+0] +
lea ecx [ecx+0] +
push ebp  +
mov ebp esp +
sub esp 20h +
and esp 0FFFFFFF0h +
fld  st +
fst  dword ptr [esp+24h+var_C] +
fistp  [esp+24h+var_14] +
fild  [esp+24h+var_14] +
mov edx dword ptr [esp+24h+var_C] +
mov eax dword ptr [esp+24h+var_14] +
test eax eax +
jz loc_43778F  +
fsubp st(1) st +
test edx edx +
jns loc_437777  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
xor ecx 80000000h +
add ecx 7FFFFFFFh +
adc eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
adc edx 0 +
jmp locret_4377A3  +
fstp  [esp+24h+var_24] +
mov ecx [esp+24h+var_24] +
add ecx 7FFFFFFFh +
sbb eax 0 +
mov edx dword ptr [esp+24h+var_14+4] +
sbb edx 0 +
jmp locret_4377A3  +
mov edx dword ptr [esp+24h+var_14+4] +
test edx 7FFFFFFFh +
jnz loc_437753  +
fstp  dword ptr [esp+24h+var_C] +
fstp  dword ptr [esp+24h+var_C] +
leave   +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_4377D1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4377ED  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_437809  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_43784A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_437817  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_437845  +
cmp edx [esp+arg_4] +
ja loc_437845  +
jb loc_437846  +
cmp eax [esp+arg_0] +
jbe loc_437846  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_437854  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp cl 40h +
jnb loc_43787A  +
cmp cl 20h +
jnb loc_437870  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_4376C0  +
***
sub esp 14h +
retn   +
***
push 0  +
call sub_405EC0  +
xor eax eax +
sub esp 324h +
sub esp 44h +
mov ecx eax +
retn   +
***
mov eax [ebp+arg_0] +
and dword_4730F0 0 +
mov esi offset unk_466AC4 +
mov esi offset unk_466ACC +
push ebp  +
mov ebp esp +
and dword_4730F4 0 +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_46E544 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_437D8D  +
and dword ptr [ebp-14h] 0 +
xor eax eax +
or dword_46E544 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_4730F4 ebx +
lea edi [ebp-2Ch] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-2Ch] +
mov ecx [ebp-20h] +
mov [ebp-0Ch] eax +
xor ecx 49656E69h +
mov eax [ebp-24h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-28h] +
xor eax 756E6547h +
or ecx eax +
neg ecx  +
push 1  +
pop eax  +
sbb cl cl +
push 0  +
add cl 1 +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jz loc_437CCA  +
mov eax [ebp-2Ch] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_437CB9  +
cmp eax 20660h +
jz loc_437CB9  +
cmp eax 20670h +
jz loc_437CB9  +
cmp eax 30650h +
jz loc_437CB9  +
cmp eax 30660h +
jz loc_437CB9  +
cmp eax 30670h +
jnz loc_437CCA  +
mov edi dword_4730F8 +
or edi 1 +
mov dword_4730F8 edi +
jmp loc_437CD0  +
mov edi dword_4730F8 +
cmp dword ptr [ebp-0Ch] 7 +
mov eax [ebp-20h] +
mov [ebp-1Ch] eax +
mov eax [ebp-24h] +
mov [ebp-8] eax +
mov [ebp-18h] eax +
jl loc_437D17  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-2Ch] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-28h] +
test eax 200h +
mov [ebp-14h] eax +
mov eax [ebp-8] +
jz loc_437D17  +
or edi 2 +
mov dword_4730F8 edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_437D8D  +
or dword_46E544 4 +
mov dword_4730F4 2 +
test eax 8000000h +
jz loc_437D8D  +
test eax 10000000h +
jz loc_437D8D  +
xor ecx ecx +
xor eax eax +
call sub_437E0B  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_439AB0  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
jmp $+5  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_437E57  +
push dword ptr [esi]  +
call sub_43CAF8  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
push ecx  +
and dword ptr [ecx+4] 0 +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
sub esp 0Ch +
push 0  +
push [ebp+arg_0]  +
call off_46E548  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_45A860 +
mov eax [edx+4] +
mov [esi+4] eax +
mov eax [edx+8] +
mov ecx eax +
mov [esi+8] eax +
mov dword ptr [esi+0Ch] 0 +
test ecx ecx +
jz loc_43801E  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [esi+8] +
mov dword ptr [esi] offset off_45A860 +
test ecx ecx +
jz loc_438046  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [esi+0Ch] +
pop esi  +
test eax eax +
jz locret_438055  +
push eax  +
call ds:LocalFree  +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+8] +
mov dword ptr [esi] offset off_45A860 +
test ecx ecx +
jz loc_438079  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_438087  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_438098  +
push 10h  +
push esi  +
call sub_436CA0  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+8] +
mov [ebp-0Ch] eax +
mov eax [ebp+0Ch] +
mov [ebp-8] eax +
lea eax [ebp-10h] +
push offset unk_46B470  +
push eax  +
mov dword ptr [ebp-10h] offset off_45A860 +
mov dword ptr [ebp-4] 0 +
call sub_43A3FD  +
call sub_437600  +
push ecx  +
and dword ptr [ecx+4] 0 +
call sub_437600  +
mov eax [ebp-2Ch] +
call sub_437582  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
sub esp 44h +
push ecx  +
sub esp 18h +
push ebx  +
pop eax  +
mov ecx [ebp+arg_4] +
call sub_437600  +
mov esp [ebp-18h] +
call sub_437600  +
mov eax [ebp+arg_0] +
call sub_437600  +
call sub_43C291  +
push ebx  +
mov edx [ebp+arg_0] +
sal al 0Fh +
mov cl 0Ah +
mov ecx dword_46E524 +
xor eax dword_46E524 +
and ecx 1Fh +
ror eax cl +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_438EA0  +
cmp edi eax +
jb loc_439134  +
cmp ecx 20h +
jb loc_43937B  +
cmp ecx 80h +
jnb loc_438EC4  +
bt dword_46E544 1 +
jb loc_43934D  +
jmp loc_4390A7  +
bt dword_4730F8 1 +
jnb loc_438ED7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_438EF0  +
bt dword_46E544 1 +
jb loc_4392D0  +
bt dword_4730F8 0 +
jnb loc_4390A7  +
test edi 3 +
jnz loc_4390A7  +
test esi 3 +
jnz loc_4390C2  +
bt edi 2 +
jnb loc_438F29  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_438F40  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_438FAD  +
bt esi 3 +
jnb loc_439006  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_43905C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_439074  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_43905C  +
***
bt ecx 2 +
jnb loc_439087  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_43909E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_4390E4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_4390C2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_4390AF  +
mov edx ecx +
cmp ecx 20h +
jb loc_43937B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_4390E4[edx*4]  +
jmp dword ptr ds:loc_4390F4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_439294  +
bt dword_46E544 1 +
jb loc_4391E5  +
test edi 3 +
jz loc_43916D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_439160  +
cmp ecx 20h +
jb loc_439294  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_439190[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_4391FC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_4391ED  +
cmp ecx 80h +
jb loc_43926C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_4391FC  +
cmp ecx 20h +
jb loc_439294  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_439271  +
test ecx 0FFFFFFFCh +
jz loc_4392B1  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_43929C  +
test ecx ecx +
jz loc_4392C4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_4392B5  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_43934D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_4392F0  +
test ecx ecx +
jz loc_4393B0  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_43937B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_439360  +
and ecx 1Fh +
jz loc_4393B0  +
mov eax ecx +
shr ecx 2 +
jz loc_439396  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_439387  +
mov ecx eax +
and ecx 3 +
jz loc_4393B0  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_43939D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
mov ecx [ebx+8] +
sub esp 20h +
cmp dword_4730F4 1 +
mov dx [ebx+0Ch] +
jl loc_4394E5  +
movzx eax dx +
movd xmm0 eax +
pshuflw xmm0 xmm0 +
pshufd xmm2 xmm0 +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4394FA  +
movups xmm0 oword ptr [ecx] +
pxor xmm1 xmm1 +
pcmpeqw xmm1 xmm0 +
pcmpeqw xmm0 xmm2 +
por xmm1 xmm0 +
pmovmskb eax xmm1 +
test eax eax +
jnz loc_43950C  +
add ecx 10h +
jmp loc_4394AF  +
cmp ax dx +
jz loc_4394ED  +
add ecx 2 +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_4394DD  +
xor eax eax +
cmp [ecx] dx +
setnz al  +
dec eax  +
and eax ecx +
jmp loc_43951C  +
movzx eax word ptr [ecx] +
cmp ax dx +
jz loc_43951A  +
test ax ax +
jz loc_439516  +
add ecx 2 +
jmp loc_4394AF  +
bsf eax eax +
mov [ebp+var_4] eax +
add ecx eax +
jmp loc_4394ED  +
xor eax eax +
jmp loc_43951C  +
mov eax ecx +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_439550  +
cmp edi eax +
jb loc_4397E4  +
cmp ecx 20h +
jb loc_439A2B  +
cmp ecx 80h +
jnb loc_439574  +
bt dword_46E544 1 +
jb loc_4399FD  +
jmp loc_439757  +
bt dword_4730F8 1 +
jnb loc_439587  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_4395A0  +
bt dword_46E544 1 +
jb loc_439980  +
bt dword_4730F8 0 +
jnb loc_439757  +
test edi 3 +
jnz loc_439757  +
test esi 3 +
jnz loc_439772  +
bt edi 2 +
jnb loc_4395D9  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_4395F0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_43965D  +
bt esi 3 +
jnb loc_4396B6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_43970C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jl loc_439724  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_43970C  +
***
bt ecx 2 +
jnb loc_439737  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_43974E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_439794[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_439772  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_43975F  +
mov edx ecx +
cmp ecx 20h +
jb loc_439A2B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_439794[edx*4]  +
jmp dword ptr ds:loc_4397A4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi] +
lea edi [ecx+edi] +
cmp ecx 20h +
jb loc_439944  +
bt dword_46E544 1 +
jb loc_439895  +
test edi 3 +
jz loc_43981D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_439810  +
cmp ecx 20h +
jb loc_439944  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_439840[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_4398AC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_43989D  +
cmp ecx 80h +
jb loc_43991C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_4398AC  +
cmp ecx 20h +
jb loc_439944  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_439921  +
test ecx 0FFFFFFFCh +
jz loc_439961  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_43994C  +
test ecx ecx +
jz loc_439974  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_439965  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_439980  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_439A70  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_4399FD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_4399A0  +
test ecx ecx +
jz loc_439A60  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_439A2B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_439A10  +
and ecx 1Fh +
jz loc_439A60  +
mov eax ecx +
shr ecx 2 +
jz loc_439A46  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_439A37  +
mov ecx eax +
and ecx 3 +
jz loc_439A60  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_439A4D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_439A8C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_439A83  +
shr eax 2 +
jz loc_439A9E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_439A91  +
pop ecx  +
jmp loc_43998D  +
***
mov ecx [esp+arg_8] +
sub esp 18h +
sub esp 38h +
push ecx  +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_43C291  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_436C8F  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_439F39  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_439FA3  +
jmp loc_439FA3  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_438CB5  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_439F77  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_439DF1  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_439C6A  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_438CB5  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_439FFF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_436C8F  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_436C8F  +
***
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [ebp+var_1] 0 +
mov eax [ebx+8] +
lea esi [ebx+10h] +
xor eax dword_46E524 +
push esi  +
push eax  +
mov [ebp+var_C] 1 +
mov [ebp+var_10] esi +
mov [ebp+var_8] eax +
call sub_439FE0  +
mov edi [ebp+arg_8] +
push edi  +
call nullsub_1  +
mov eax [ebp+arg_0] +
add esp 0Ch +
test byte ptr [eax+4] 66h +
jnz loc_43A11D  +
mov [ebp+var_1C] eax +
lea eax [ebp+var_1C] +
mov [ebp+var_18] edi +
mov edi [ebx+0Ch] +
mov [ebx-4] eax +
cmp edi 0FFFFFFFEh +
jz loc_43A141  +
mov ecx [ebp+var_8] +
lea eax [edi+2] +
lea eax [edi+eax*2] +
mov ebx [ecx+eax*4] +
lea eax [ecx+eax*4] +
mov ecx [eax+4] +
mov [ebp+var_14] eax +
test ecx ecx +
jz loc_43A100  +
mov edx esi +
call sub_43C4DE  +
mov cl 1 +
mov [ebp+var_1] cl +
test eax eax +
js loc_43A114  +
jle loc_43A103  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_43A0EB  +
cmp ds:off_45A864 0 +
jz loc_43A0EB  +
push offset off_45A864  +
call sub_451980  +
add esp 4 +
test eax eax +
jz loc_43A0EB  +
mov esi ds:off_45A864 +
mov ecx esi +
push 1  +
push [ebp+arg_0]  +
call j_nullsub_1  +
call esi  +
mov esi [ebp+var_10] +
add esp 8 +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
call sub_43C50E  +
mov eax [ebp+arg_4] +
cmp [eax+0Ch] edi +
jz loc_43A15D  +
jmp loc_43A14B  +
mov cl [ebp+var_1] +
mov edi ebx +
cmp ebx 0FFFFFFFEh +
jnz loc_43A081  +
test cl cl +
jz loc_43A141  +
jmp loc_43A135  +
mov [ebp+var_C] 0 +
jmp loc_43A135  +
cmp dword ptr [ebx+0Ch] 0FFFFFFFEh +
jz loc_43A141  +
push offset dword_46E524  +
push esi  +
mov ecx ebx +
mov edx 0FFFFFFFEh +
call sub_43C527  +
push esi  +
push [ebp+var_8]  +
call sub_439FE0  +
add esp 8 +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push offset dword_46E524  +
push esi  +
mov edx edi +
mov ecx eax +
call sub_43C527  +
mov eax [ebp+arg_4] +
push esi  +
push [ebp+var_8]  +
mov [eax+0Ch] ebx +
call sub_439FE0  +
mov ecx [ebp+var_14] +
add esp 8 +
mov edx esi +
mov ecx [ecx+8] +
call sub_43C4F5  +
int 3  +
***
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_43A1AC  +
mov eax dword_4730F4 +
cmp eax 1 +
jle loc_43A2A4  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_43A1D0  +
movups xmm0 oword ptr [edi] +
jmp loc_43A1FB  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_43A1F3  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_43A1DA  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_43A267  +
add edx 10h +
mov ecx [ebp-8] +
jmp loc_43A1FE  +
***
lea edx [edx+ecx*2] +
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_43A27E  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_43A27E  +
movups xmm1 oword ptr [ecx] +
cmp ah [ebx+0Fh] +
or eax 41783C71h +
mov ecx [ebp-4] +
add edi 10h +
add ecx 10h +
jmp loc_43A230  +
***
cmp ax cx +
jz loc_43A22B  +
add edx esi +
jmp loc_43A1FE  +
***
cmp [edi] ax +
jnz loc_43A296  +
add edi esi +
add ecx esi +
jmp loc_43A230  +
***
add edx esi +
jmp loc_43A217  +
***
add ecx 10h +
jmp loc_43A2C5  +
***
add edx 10h +
add edi 10h +
jmp loc_43A315  +
***
cmp [edx] ax +
jnz loc_43A37F  +
add edx esi +
add edi esi +
jmp loc_43A315  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_43A2C5  +
***
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_43BB63  +
sub eax 1 +
jz loc_43BB52  +
sub eax 1 +
jz loc_43BB23  +
sub eax 1 +
jz loc_43BAD9  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_43BA51  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_43A953  +
mov eax [esi] +
cmp eax [edx] +
jz loc_43A53C  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_43A4DC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_43A4FE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_43A520  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_43A53E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A53E  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_43A5CD  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_43A56D  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_43A58F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_43A5B1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_43A5CF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A5CF  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_43A65E  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_43A5FE  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_43A620  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_43A642  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_43A660  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A660  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_43A6EF  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_43A68F  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_43A6B1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_43A6D3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_43A6F1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A6F1  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_43A785  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_43A725  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_43A747  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_43A769  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_43A787  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A787  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_43A816  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_43A7B6  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_43A7D8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_43A7FA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_43A818  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A818  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_43A8A7  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_43A847  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_43A869  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_43A88B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_43A8A9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A8A9  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_43A938  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_43A8D8  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_43A8FA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_43A91C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_43A93A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A93A  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_43A4B2  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_43AD75  +
jmp ds:off_43BB6B[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_43A9F4  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_43A994  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_43A9B6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_43A9D8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_43A9F6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43A9F6  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_43AA8B  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_43AA2B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_43AA4D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_43AA6F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_43AA8D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AA8D  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_43AB22  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_43AAC2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_43AAE4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_43AB06  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_43AB24  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AB24  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_43ABB9  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_43AB59  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_43AB7B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_43AB9D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_43ABBB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43ABBB  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_43AC51  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_43ABF1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_43AC13  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_43AC35  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_43AC53  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AC53  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_43ACE8  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_43AC88  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_43ACAA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_43ACCC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_43ACEA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43ACEA  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_43AD6F  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_43AD17  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_43AD35  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_43AD53  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_43AD71  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AD71  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_43BB65  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_43ADFC  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_43ADA4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_43ADC2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_43ADE0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_43ADFE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43ADFE  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_43AE93  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_43AE33  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_43AE55  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_43AE77  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_43AE95  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AE95  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_43AF2A  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_43AECA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_43AEEC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_43AF0E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_43AF2C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AF2C  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_43AFC1  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_43AF61  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_43AF83  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_43AFA5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_43AFC3  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AFC3  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_43B058  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_43AFF8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_43B01A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_43B03C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_43B05A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B05A  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_43B0F0  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_43B090  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_43B0B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_43B0D4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_43B0F2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B0F2  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_43B187  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_43B127  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_43B149  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_43B16B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_43B189  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B189  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_43AD77  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43AD77  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_43B241  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_43B1E1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_43B203  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_43B225  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_43B243  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B243  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_43B2D8  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_43B278  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_43B29A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_43B2BC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_43B2DA  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B2DA  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_43B36F  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_43B30F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_43B331  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_43B353  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_43B371  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B371  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_43B406  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_43B3A6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_43B3C8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_43B3EA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_43B408  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B408  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_43B49D  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_43B43D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_43B45F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_43B481  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_43B49F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B49F  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_43B535  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_43B4D5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_43B4F7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_43B519  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_43B537  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B537  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_43B5CC  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_43B56C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_43B58E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_43B5B0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_43B5CE  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B5CE  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_43AD75  +
jmp loc_43BA2E  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_43B677  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_43B617  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_43B639  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_43B65B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_43B679  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B679  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_43B70E  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_43B6AE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_43B6D0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_43B6F2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_43B710  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B710  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_43B7A5  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_43B745  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_43B767  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_43B789  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_43B7A7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B7A7  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_43B83C  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_43B7DC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_43B7FE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_43B820  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_43B83E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B83E  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_43B8D4  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_43B874  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_43B896  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_43B8B8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_43B8D6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B8D6  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_43B96B  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_43B90B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_43B92D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_43B94F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_43B96D  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43B96D  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_43BA02  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_43B9A2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_43B9C4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_43B9E6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_43BA04  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_43BA04  +
xor ecx ecx +
test ecx ecx +
jnz loc_43AD77  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_43BA2E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_43AD77  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_43B191  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_43B189  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_43BA74  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_43BA96  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_43BAB8  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_43BAD2  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_43BB65  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_43BAFB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_43BB19  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_43BAC0  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_43BB45  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_43BB65  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_43BAC0  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_43BAC0  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword_4730F4 2 +
jge loc_43BC27  +
mov edx [ebp+8] +
mov cx [ebp+0Ch] +
jmp loc_43BC42  +
movzx eax word ptr [edx] +
cmp ax cx +
jnz loc_43BC3A  +
mov esi edx +
test ax ax +
jz loc_43BC87  +
add edx 2 +
lea eax [edx+1] +
test al 0Eh +
jnz loc_43BC30  +
xor eax eax +
cmp ax cx +
jnz loc_43BC6E  +
mov eax 0FFFF0001h +
movd xmm1 eax +
jmp loc_43BC5E  +
add edx 10h +
movups xmm0 oword ptr [edx] +
movzx eax cx +
movd xmm0 eax +
push esi  +
sub esp 24Ch +
sub esp 24Ch +
xor eax eax +
pop ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_46E524 +
cmp [ebp+arg_0] 0 +
call sub_43C3BC  +
call sub_43BE11  +
mov eax [ebp+arg_0] +
mov esi [eax+4] +
mov eax [ebp+lpMem] +
call sub_43C29F  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
cmp eax 0FFFFFFFFh +
jz loc_43C362  +
push eax  +
call sub_43C07E  +
or dwTlsIndex 0FFFFFFFFh +
pop ecx  +
mov al 1 +
retn   +
***
sub esp 4 +
mov eax dword_46E524 +
and eax 1Fh +
push 20h  +
pop ecx  +
sub ecx eax +
xor eax eax +
ror eax cl +
xor eax dword_46E524 +
mov dword_473198 eax +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_43C4B5  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_436C8F  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_43C3E0  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
mov edi offset stru_47319C +
test esi esi +
jz loc_43C5A5  +
imul eax esi +
push edi  +
lea edi dword_473184[eax] +
push edi  +
call ds:DeleteCriticalSection  +
dec dword_4731B4  +
sub edi 18h +
sub esi 1 +
jnz loc_43C58F  +
pop edi  +
mov al 1 +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_43C5C8  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_43C5D0  +
push large dword ptr fs:0  +
mov eax dword_46E524 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_43C687  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_43C65A  +
cmp esi [esp+18h+arg_4] +
jbe loc_43C687  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_43C685  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_43C6C5  +
mov eax [ebx+esi*4+8] +
call sub_43C6E4  +
jmp loc_43C63E  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov ebx offset unk_46E5A0 +
mov ebx offset unk_46E5A0 +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0FFFFFFFFh +
push edi  +
jz loc_43C70C  +
push [ebp+arg_0]  +
call sub_437B8F  +
pop ecx  +
push 50h  +
lea eax [ebp+var_320] +
push 0  +
push eax  +
call sub_439AB0  +
push 2CCh  +
lea eax [ebp+var_2D0] +
push 0  +
push eax  +
call sub_439AB0  +
lea eax [ebp+var_320] +
add esp 18h +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
mov [ebp+var_218] eax +
lea eax [ebp+4] +
mov [ebp+var_20C] eax +
mov [ebp+var_2D0] 10001h +
mov eax [eax-4] +
mov [ebp+var_21C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_320] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_31C] eax +
mov eax [ebp+4] +
mov [ebp+var_314] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov edi eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_43C813  +
test edi edi +
jnz loc_43C813  +
cmp [ebp+arg_0] 0FFFFFFFFh +
jz loc_43C813  +
push [ebp+arg_0]  +
call sub_437B8F  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
xor eax eax +
mov edi edi +
test eax eax +
call sub_437660  +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_445097  +
call sub_445097  +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_43E859  +
test al al +
jnz loc_43D6C8  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_43D7A3  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
or eax 0FFFFFFFFh +
jmp loc_43D7B9  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_43D77D  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_43D794  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_43D58A  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_43D6D4  +
cmp eax 7 +
ja loc_43D6E4  +
jmp ds:off_43D7BF[eax*4]  +
mov ecx esi +
call sub_43DA6C  +
jmp loc_43D775  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_43D77D  +
mov ecx esi +
call sub_43DA2F  +
jmp loc_43D775  +
mov ecx esi +
call sub_43E2BB  +
jmp loc_43D775  +
mov [esi+28h] ebx +
jmp loc_43D77D  +
mov ecx esi +
call sub_43DAE0  +
jmp loc_43D775  +
mov ecx esi +
call sub_43DB09  +
jmp loc_43D775  +
mov ecx esi +
call sub_43DE01  +
test al al +
jz loc_43D6E4  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_43D6F7  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_43E874  +
test al al +
jz loc_43D6E4  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_43D6EC  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_43E859  +
test al al +
jnz loc_43D7F8  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_43D8D3  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
or eax 0FFFFFFFFh +
jmp loc_43D8E9  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_43D8AD  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_43D8C4  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_43D58A  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_43D804  +
cmp eax 7 +
ja loc_43D814  +
jmp ds:off_43D8EF[eax*4]  +
mov ecx esi +
call sub_43DA8B  +
jmp loc_43D8A5  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_43D8AD  +
mov ecx esi +
call sub_43DA2F  +
jmp loc_43D8A5  +
mov ecx esi +
call sub_43E2BB  +
jmp loc_43D8A5  +
mov [esi+28h] ebx +
jmp loc_43D8AD  +
mov ecx esi +
call sub_43DAE0  +
jmp loc_43D8A5  +
mov ecx esi +
call sub_43DC85  +
jmp loc_43D8A5  +
mov ecx esi +
call sub_43E05E  +
test al al +
jz loc_43D814  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_43D827  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_43E874  +
test al al +
jz loc_43D814  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_43D81C  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_43E859  +
test al al +
jnz loc_43D928  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push ebx  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_43D9F4  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
or eax 0FFFFFFFFh +
jmp loc_43DA0A  +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_43D9DD  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_43D9F4  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_43D5C1  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_43D934  +
cmp eax 7 +
ja loc_43D944  +
jmp ds:off_43DA0F[eax*4]  +
mov ecx esi +
call sub_43DA8B  +
jmp loc_43D9D5  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_43D9DD  +
mov ecx esi +
call sub_43DA2F  +
jmp loc_43D9D5  +
mov ecx esi +
call sub_43E2BB  +
jmp loc_43D9D5  +
mov [esi+28h] ebx +
jmp loc_43D9DD  +
mov ecx esi +
call sub_43DAE0  +
jmp loc_43D9D5  +
mov ecx esi +
call sub_43DC85  +
jmp loc_43D9D5  +
mov ecx esi +
call sub_43E05E  +
test al al +
jz loc_43D944  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_43D957  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_43D94C  +
mov eax [esi+18h] +
pop ebx  +
pop esi  +
retn   +
***
movzx eax word ptr [ecx+32h] +
call sub_43DAAA  +
call sub_43DAC5  +
lea edx [ecx+18h] +
lea edx [ecx+18h] +
cmp word ptr [ecx+32h] 2Ah +
movzx eax word ptr [ecx+32h] +
movzx eax word ptr [ecx+32h] +
mov edi edi +
mov edi edi +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_43E30D  +
jmp ds:off_43E313[eax*4]  +
push 4  +
pop eax  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_43E2FD  +
push 8  +
jmp loc_43E2FD  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
test esi esi +
jnz loc_43EC4F  +
xor eax eax +
jmp loc_43ECBF  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_43EC69  +
call sub_43CB76  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_43C8B1  +
mov eax esi +
jmp loc_43ECBF  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_43EC88  +
cmp [ebp+arg_4] esi +
jb loc_43EC88  +
lea eax [esi+esi] +
push eax  +
push edi  +
push ecx  +
call loc_439530  +
add esp 0Ch +
xor eax eax +
jmp loc_43ECBE  +
push [ebp+arg_4]  +
push 0  +
push ecx  +
call sub_40C240  +
add esp 0Ch +
test edi edi +
jnz loc_43ECA3  +
call sub_43CB76  +
push 16h  +
jmp loc_43ECAF  +
cmp [ebp+arg_4] esi +
jnb loc_43ECBB  +
call sub_43CB76  +
push 22h  +
pop esi  +
mov [eax] esi +
call sub_43C8B1  +
mov eax esi +
jmp loc_43ECBE  +
push 16h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_4730F4 +
mov ecx [ebp+8] +
push esi  +
push edi  +
cmp eax 5 +
jl loc_43ED97  +
test cl 1 +
jz loc_43ED07  +
mov esi ecx +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
and esi eax +
mov eax [ebp+0Ch] +
shr esi 1 +
cmp eax esi +
jnb loc_43ED22  +
mov esi eax +
lea edx [ecx+esi*2] +
xor edi edi +
mov [ebp-4] edx +
mov edx ecx +
cmp ecx [ebp-4] +
jz loc_43ED3E  +
cmp [edx] di +
jz loc_43ED3E  +
add edx 2 +
cmp edx [ebp-4] +
jnz loc_43ED31  +
sub edx ecx +
sar edx 1 +
cmp edx esi +
jnz loc_43EE71  +
lea edx [ecx+edx*2] +
mov ecx eax +
sub ecx esi +
mov eax ecx +
and eax 1Fh +
sub ecx eax +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_444BF6  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
test esi esi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
pop ecx  +
call sub_437600  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_437600  +
pop ecx  +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
test esi esi +
jz loc_440535  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_440535  +
mov ebx [ebp+arg_C] +
test ebx ebx +
jnz loc_44053E  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_440525  +
or eax 0FFFFFFFFh +
xor edx edx +
div  esi +
cmp edi eax +
ja loc_440525  +
lea eax [ebx+0Ch] +
mov [ebp+var_C] eax +
mov eax [eax] +
test eax 4C0h +
jz loc_440564  +
mov edx [ebx+18h] +
jmp loc_440569  +
mov edx 1000h +
imul esi edi +
mov [ebp+var_4] edx +
mov edi esi +
test esi esi +
jz loc_44065F  +
mov eax [ebx+0Ch] +
test al 0C0h +
jz loc_4405B9  +
mov eax [ebx+8] +
mov [ebp+var_8] eax +
test eax eax +
jz loc_4405B9  +
js loc_440667  +
cmp edi eax +
jnb loc_440599  +
mov eax edi +
mov [ebp+var_8] edi +
push eax  +
push ecx  +
push dword ptr [ebx]  +
call loc_439530  +
mov eax [ebp+var_8] +
add esp 0Ch +
sub [ebx+8] eax +
sub edi eax +
mov ecx [ebp+arg_0] +
add [ebx] eax +
add ecx eax +
mov [ebp+arg_0] ecx +
jmp loc_440629  +
cmp edi edx +
jb loc_44062E  +
mov eax [ebx+0Ch] +
test al 0C0h +
jz loc_4405D9  +
push ebx  +
call sub_44025F  +
pop ecx  +
test eax eax +
jnz loc_440670  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_4] +
mov eax edi +
test edx edx +
jz loc_4405ED  +
xor edx edx +
div  [ebp+var_4] +
mov eax edi +
sub eax edx +
mov [ebp+var_8] eax +
jmp loc_4405F0  +
mov [ebp+var_8] edi +
cmp eax 0FFFFFFFFh +
jb loc_4405FB  +
or eax 0FFFFFFFFh +
mov [ebp+var_8] eax +
push eax  +
push ecx  +
push ebx  +
call sub_44673E  +
pop ecx  +
push eax  +
call sub_4488A8  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_440667  +
mov ecx [ebp+var_8] +
mov edx ecx +
cmp eax ecx +
ja loc_44061D  +
mov edx eax +
add [ebp+arg_0] edx +
sub edi edx +
cmp eax ecx +
jb loc_440667  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_4] +
jmp loc_440657  +
movsx eax byte ptr [ecx] +
push ebx  +
push eax  +
call sub_448F65  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_440670  +
mov ecx [ebp+arg_0] +
mov edx [ebx+18h] +
inc ecx  +
dec edi  +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] edx +
test edx edx +
jg loc_440657  +
xor edx edx +
inc edx  +
mov [ebp+var_4] edx +
test edi edi +
jnz loc_440579  +
mov eax [ebp+arg_8] +
jmp loc_440537  +
mov eax [ebp+var_C] +
push 10h  +
pop ecx  +
or [eax] ecx +
sub esi edi +
xor edx edx +
mov eax esi +
div  [ebp+arg_4] +
jmp loc_440537  +
***
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
push esi  +
call sub_440765  +
add esp 0Ch +
test eax eax +
jnz loc_44081B  +
lea eax [esi-1] +
jmp loc_440822  +
mov eax esi +
jg loc_440822  +
lea eax [esi+1] +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov edx [ebp+0Ch] +
push ebx  +
movzx eax dx +
push esi  +
push edi  +
cmp eax 5Ah +
jle loc_440E04  +
cmp eax 6Eh +
jg loc_440B7A  +
jz loc_440B6A  +
cmp eax 65h +
jle loc_440939  +
sub eax 67h +
jz loc_4408F0  +
sub eax 1 +
jnz loc_44086B  +
push 62h  +
pop edx  +
push edx  +
pop eax  +
jmp loc_44083E  +
***
dec eax  +
sub eax 1 +
jz loc_4408BB  +
sub eax 3 +
jnz loc_440B34  +
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 0Bh +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
lea eax [ecx+1] +
push eax  +
call sub_441321  +
add esp 14h +
jmp loc_4412EE  +
mov eax [ebp+10h] +
mov ecx [eax+1Ch] +
test ecx ecx +
js loc_440B24  +
cmp ecx 16Dh +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 3  +
jmp loc_4408AA  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_440B24  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_440B24  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_4407FA  +
add esp 0Ch +
add eax 76Ch +
push 64h  +
cdq   +
pop ecx  +
idiv  ecx +
push edx  +
jmp loc_4408AE  +
***
jz loc_440B3B  +
sub eax 61h +
jz loc_440B03  +
sub eax 1 +
jz loc_440AD7  +
sub eax 1 +
jz loc_44099A  +
sub eax 1 +
jnz loc_440B34  +
mov eax [ebp+10h] +
cmp dword ptr [eax+0Ch] 1 +
jl loc_440B24  +
cmp dword ptr [eax+0Ch] 1Fh +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx cx cl +
movzx ecx cx +
push ecx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+0Ch]  +
jmp loc_4408AE  +
***
mov ebx [ebp+1Ch] +
mov ecx [ebp+20h] +
cmp ebx offset off_45C868 +
jnz loc_440A89  +
test cl cl +
jnz loc_440A89  +
mov edi [ebp+18h] +
xor esi esi +
push esi  +
push ebx  +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 61h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jnz loc_4409E4  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
jmp loc_440B34  +
push edi  +
push ebx  +
push offset asc_462228  +
call sub_44142A  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 62h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_462228  +
call sub_44142A  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 65h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_462228  +
call sub_44142A  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 54h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_462228  +
call sub_44142A  +
push esi  +
push dword ptr [ebp+1Ch]  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jnz loc_4412EE  +
jmp loc_4409D4  +
***
push ebx  +
push dword ptr [ebp+18h]  +
xor eax eax +
test cl cl +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_44145B  +
add esp 18h +
test al al +
jz loc_4409D4  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_462228  +
call sub_44142A  +
push ebx  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
push dword ptr [ebp+8]  +
call sub_44145B  +
add esp 24h +
jmp loc_440A7C  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 0Bh +
jg loc_440B24  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0ECh]  +
call sub_44142A  +
add esp 0Ch +
jmp loc_4412EE  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 6 +
jg loc_440B24  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0B4h]  +
jmp loc_440AF6  +
***
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
xor al al +
jmp loc_4412F0  +
mov eax [ebp+10h] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jl loc_440B24  +
cmp ecx 1Fh +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 20h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push ecx  +
jmp loc_4408AE  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_4592F0  +
jmp loc_440AF6  +
***
cmp eax 77h +
jg loc_440CE5  +
jz loc_440B9F  +
sub eax 70h +
jz loc_440CAC  +
dec eax  +
sub eax 1 +
jz loc_440BEE  +
dec eax  +
sub eax 1 +
jz loc_440BDE  +
sub eax 1 +
jnz loc_440B34  +
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 6 +
jg loc_440B24  +
test ecx ecx +
jnz loc_440BC3  +
cmp dx 75h +
jnz loc_440BC3  +
push 7  +
pop ecx  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 1  +
jmp loc_440B64  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_45B3FC  +
jmp loc_440AF6  +
***
mov esi [ebp+1Ch] +
push dword ptr [ebp+20h]  +
push esi  +
cmp esi offset off_45C868 +
jnz loc_440C91  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 49h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_456E6C  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_456E6C  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 53h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push edi  +
push ebx  +
push offset asc_462228  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push esi  +
push edi  +
push ebx  +
push dword ptr [ebp+10h]  +
push 70h  +
jmp loc_440A71  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 58h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
jmp loc_440A7C  +
***
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_440B24  +
cmp eax 17h +
jg loc_440B24  +
cmp eax 0Bh +
mov eax [ebp+1Ch] +
jg loc_440CD3  +
mov eax [eax+14Ch] +
jmp loc_440CD9  +
mov eax [eax+150h] +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push eax  +
jmp loc_440AF6  +
***
sub eax 78h +
jz loc_440DDF  +
sub eax 1 +
jz loc_440D9D  +
sub eax 1 +
jnz loc_440B34  +
call sub_4474FF  +
lea eax [ebp-4] +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call sub_446B56  +
pop ecx  +
test eax eax +
jnz loc_440B24  +
mov eax [ebp+10h] +
cmp [eax+20h] esi +
jz loc_440D44  +
lea eax [ebp-8] +
mov [ebp-8] esi +
push eax  +
call sub_446B2A  +
pop ecx  +
test eax eax +
jnz loc_440B24  +
mov ecx [ebp-4] +
add ecx [ebp-8] +
mov [ebp-4] ecx +
jmp loc_440D47  +
mov ecx [ebp-4] +
mov eax ecx +
cdq   +
xor eax edx +
sub eax edx +
cdq   +
push 3Ch  +
pop esi  +
idiv  esi +
cdq   +
idiv  esi +
test ecx ecx +
mov ecx offset asc_45B400 +
mov edi edx +
mov esi eax +
js loc_440D69  +
mov ecx offset asc_45B3F8 +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push ecx  +
call sub_44142A  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
call sub_441321  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push edi  +
call sub_441321  +
add esp 34h +
jmp loc_4412EE  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_440B24  +
cmp ecx 1FA3h +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_44092D  +
***
push dword ptr [ebp+1Ch]  +
xor eax eax +
push dword ptr [ebp+18h]  +
cmp [ebp+20h] al +
push dword ptr [ebp+14h]  +
setnz al  +
push dword ptr [ebp+10h]  +
push eax  +
push dword ptr [ebp+8]  +
call sub_44145B  +
add esp 18h +
jmp loc_440A7C  +
***
jz loc_441285  +
cmp eax 4Dh +
jg loc_4410AE  +
jz loc_441098  +
cmp eax 44h +
jg loc_440F65  +
jz loc_440EF8  +
sub eax 25h +
jz loc_440EE8  +
sub eax 1Ch +
jz loc_440EBC  +
sub eax 1 +
jz loc_440E90  +
sub eax 1 +
jnz loc_440B34  +
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_440B24  +
cmp ecx 1FA3h +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
cdq   +
push 2  +
push 64h  +
pop ecx  +
idiv  ecx +
jmp loc_4408AD  +
***
mov eax [ebp+10h] +
mov ecx [eax+10h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 0Bh +
jg loc_440B24  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+11Ch]  +
jmp loc_440AF6  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 6 +
jg loc_440B24  +
push dword ptr [ebp+18h]  +
mov eax [ebp+1Ch] +
push dword ptr [ebp+14h]  +
push dword ptr [eax+ecx*4+0D0h]  +
jmp loc_440AF6  +
***
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_45B404  +
jmp loc_440AF6  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
mov ebx offset unk_462294 +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 79h  +
jmp loc_440A71  +
***
sub eax 46h +
jz loc_44102B  +
sub eax 1 +
jz loc_440FE9  +
sub eax 1 +
jz loc_440FC2  +
sub eax 1 +
jnz loc_440B34  +
mov eax [ebp+10h] +
mov eax [eax+8] +
test eax eax +
js loc_440B24  +
cmp eax 17h +
jg loc_440B24  +
push 0Ch  +
cdq   +
pop ecx  +
idiv  ecx +
test edx edx +
jnz loc_440FA4  +
mov edx ecx +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
jmp loc_440933  +
***
mov eax [ebp+10h] +
mov ecx [eax+8] +
test ecx ecx +
js loc_440B24  +
cmp ecx 17h +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
jmp loc_440B56  +
***
mov eax [ebp+10h] +
cmp dword ptr [eax+14h] 0FFFFF894h +
jl loc_440B24  +
cmp dword ptr [eax+14h] 1FA3h +
jg loc_440B24  +
push 30h  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 4  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_4407FA  +
add esp 0Ch +
add eax 76Ch +
jmp loc_4408AD  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 59h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
mov ebx offset asc_45B3F8 +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 6Dh  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 64h  +
jmp loc_440A71  +
***
mov eax [ebp+10h] +
mov ecx [eax+4] +
test ecx ecx +
js loc_440B24  +
cmp ecx 3Bh +
jmp loc_440FD3  +
***
push 7  +
sub eax 52h +
pop edi  +
cmp eax edi +
ja loc_440B34  +
jmp ds:off_441301[eax*4]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jz loc_4409D4  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push offset asc_456E6C  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 4Dh  +
jmp loc_440A71  +
***
mov eax [ebp+10h] +
mov ecx [eax] +
test ecx ecx +
js loc_440B24  +
cmp ecx 3Ch +
jmp loc_440FD3  +
***
push dword ptr [ebp+20h]  +
mov esi [ebp+18h] +
push dword ptr [ebp+1Ch]  +
mov edi [ebp+14h] +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 48h  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 1Ch +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
mov ebx offset asc_456E6C +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 4Dh  +
push dword ptr [ebp+8]  +
call loc_440825  +
add esp 28h +
test al al +
jz loc_4409D4  +
push esi  +
push edi  +
push ebx  +
call sub_44142A  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp+1Ch]  +
push esi  +
push edi  +
push dword ptr [ebp+10h]  +
push 53h  +
jmp loc_440A71  +
***
mov eax [ebp+10h] +
mov ecx [eax+18h] +
test ecx ecx +
js loc_440B24  +
cmp ecx 6 +
jg loc_440B24  +
cmp dx 57h +
jnz loc_4411B6  +
test ecx ecx +
jnz loc_4411B5  +
push 6  +
pop ecx  +
jmp loc_4411B6  +
dec ecx  +
mov eax [eax+1Ch] +
test eax eax +
js loc_440B24  +
cmp eax 16Dh +
jg loc_440B24  +
xor esi esi +
cmp eax ecx +
jl loc_4411DC  +
cdq   +
idiv  edi +
mov esi eax +
cmp edx ecx +
jl loc_4411DC  +
inc esi  +
cmp byte ptr [ebp+20h] 0 +
setnz cl  +
dec cl  +
and cl 30h +
movsx ax cl +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push 2  +
push esi  +
jmp loc_4408AE  +
***
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
mov eax [ebp+10h] +
push dword ptr [ebp+14h]  +
push 2  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
push dword ptr [eax+14h]  +
call sub_440717  +
add esp 0Ch +
jmp loc_4408AD  +
***
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push 2  +
jmp loc_440DF4  +
***
mov eax [ebp+10h] +
mov ecx [eax+14h] +
cmp ecx 0FFFFF894h +
jl loc_440B24  +
cmp ecx 1FA3h +
jg loc_440B24  +
cmp byte ptr [ebp+20h] 0 +
setnz al  +
dec al  +
and al 30h +
cbw   +
movzx eax ax +
push eax  +
push dword ptr [ebp+18h]  +
lea eax [ecx+76Ch] +
push dword ptr [ebp+14h]  +
push 4  +
jmp loc_4408AD  +
***
call sub_4474FF  +
xor esi esi +
mov [ebp-8] esi +
call sub_446AF8  +
mov ecx [ebp+10h] +
xor edx edx +
push dword ptr [ebp+8]  +
mov edi [ebp+18h] +
mov ebx [ebp+14h] +
cmp [ecx+20h] esi +
push 0FFFFFFFFh  +
setnz dl  +
mov eax [eax+edx*4] +
push eax  +
push dword ptr [edi]  +
lea eax [ebp-8] +
push dword ptr [ebx]  +
push eax  +
call sub_4490F4  +
add esp 18h +
test eax eax +
jz loc_4412CC  +
cmp eax 16h +
jz loc_4412F7  +
cmp eax 22h +
jz loc_4412F7  +
cmp eax 50h +
jnz loc_4412DB  +
mov eax [edi] +
add eax eax +
add [ebx] eax +
mov [edi] esi +
jmp loc_4412EE  +
mov ecx [ebp-8] +
xor eax eax +
inc eax  +
sub eax ecx +
add [edi] eax +
lea eax ds:0FFFFFFFEh[ecx*2] +
add [ebx] eax +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_43C8DE  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_4731F8 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
retn   +
***
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
call ds:GetCommandLineA  +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_449E21  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] cx +
call sub_43CB76  +
mov dword ptr [eax] 22h +
call sub_43C8B1  +
push 22h  +
pop eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_0]  +
call sub_442830  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_46E524 +
mov ecx eax +
xor eax dword_473220 +
and ecx 1Fh +
ror eax cl +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_444052  +
pop ecx  +
mov dword_473220 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_473434 +
cmp dword_473434 0 +
cmp dword_473438 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_443EB4  +
mov eax dword_473214 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437660  +
mov esp [ebp-18h] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+hLibModule] 0 +
lea eax [ebp+hLibModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_44422B  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_44422A  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_456664  +
call esi  +
pop esi  +
cmp [ebp+hLibModule] 0 +
jz loc_44423A  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_437600  +
mov eax [ebp+10h] +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_446A7E  +
mov [esp+4+var_4] offset unk_47346C +
call sub_443F2F  +
mov al 1 +
retn   +
***
retn   +
***
call sub_44BE52  +
call sub_44BED5  +
call sub_437660  +
mov edi edi +
call sub_44C0B8  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
mov eax [ebp+10h] +
call sub_437600  +
mov eax [ebp+10h] +
call sub_437600  +
mov eax [ebp+10h] +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_45BDD0 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
mov dword ptr [eax+48h] offset unk_46EC10 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push 5  +
call sub_444E5D  +
lea eax [ebp+arg_0] +
mov [ebp+var_8] eax +
lea eax [ebp+arg_4] +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push 4  +
call sub_444E0D  +
add esp 10h +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov dword_46E664 eax +
mov eax dword_46E664 +
push offset aComparestringe  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_46E524 +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_473548 +
test ecx ecx +
jz loc_445828  +
xor eax eax +
cmp ecx 1 +
setz al  +
jmp loc_44587C  +
push esi  +
push offset aGetcurrentpack  +
push offset unk_45C3D8  +
push offset aGetcurrentpack  +
push 8  +
call sub_44517C  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_44586F  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push 0  +
push eax  +
mov ecx esi +
call ds:off_456664  +
call esi  +
cmp eax 7Ah +
jnz loc_44586F  +
xor ecx ecx +
mov edx offset dword_473548 +
inc ecx  +
xchg ecx [edx] +
mov al 1 +
jmp loc_44587B  +
push 2  +
pop eax  +
mov ecx offset dword_473548 +
xchg eax [ecx] +
xor al al +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_46E524 +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_44688E  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea edi [esi+0Ch] +
mov eax [edi] +
shr eax 9 +
test al 1 +
jz loc_44688C  +
push esi  +
call sub_44025F  +
pop ecx  +
mov eax 0FFFFFD7Fh +
and [edi] eax +
xor eax eax +
mov [esi+18h] eax +
mov [esi+4] eax +
mov [esi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_446933  +
cmp ecx 0FFFFFFFEh +
jz loc_446933  +
mov dl [ebx] +
test dl 1 +
jz loc_446933  +
test dl 8 +
jnz loc_44690F  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_446930  +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul edx eax +
mov eax [ebp-4] +
add edx dword_473560[ecx*4] +
mov eax [eax] +
mov [edx+18h] eax +
mov al [ebx] +
mov [edx+28h] al +
mov eax [ebp-4] +
inc edi  +
add eax 4 +
inc ebx  +
mov [ebp-4] eax +
cmp edi esi +
jnz loc_4468EC  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_473560[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_446973  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_446973  +
or byte ptr [esi+28h] 80h +
jmp loc_4469EE  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_44698E  +
sub eax 1 +
jz loc_44698A  +
push 0FFFFFFF4h  +
sub eax 1 +
jmp loc_446990  +
push 0FFFFFFF5h  +
jmp loc_446990  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_4469AC  +
test ebx ebx +
jz loc_4469AC  +
push ebx  +
call ds:GetFileType  +
jmp loc_4469AE  +
xor eax eax +
test eax eax +
jz loc_4469D0  +
and eax 0FFh +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_4469C5  +
or byte ptr [esi+28h] 40h +
jmp loc_4469EE  +
cmp eax 3 +
jnz loc_4469EE  +
or byte ptr [esi+28h] 8 +
jmp loc_4469EE  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax lpMem +
test eax eax +
jz loc_4469EE  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_44694D  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
clc   +
or edi edi +
jmp fword ptr [edx+7]  +
***
mov edi edi +
call sub_446A7E  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi 190h +
push edi  +
lea ecx [eax-1] +
add eax 12Bh +
cdq   +
idiv  esi +
push 64h  +
mov esi eax +
mov eax ecx +
cdq   +
pop edi  +
idiv  edi +
pop edi  +
sub esi eax +
mov eax ecx +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add eax 0FFFFFFEFh +
add eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebp+var_10] +
stos   +
lea esi [ebp+var_10] +
push 2  +
pop ecx  +
push 20h  +
stos   +
stos   +
mov edi ebx +
movs   +
movs   +
movs   +
mov eax dword_47345C +
mov esi [ebp+arg_4] +
mov [ebx+4] eax +
pop edi  +
jmp loc_447BB2  +
add esi ecx +
cmp [esi] di +
jz loc_447BB0  +
movzx eax word ptr [esi] +
xor edx edx +
cmp eax 61h +
jz loc_447BE2  +
cmp eax 72h +
jz loc_447BD7  +
cmp eax 77h +
jnz loc_447DAA  +
mov dword ptr [ebx] 301h +
jmp loc_447BE8  +
mov [ebx] edx +
mov dword ptr [ebx+4] 1 +
jmp loc_447BEB  +
mov dword ptr [ebx] 109h +
mov [ebx+4] ecx +
add esi ecx +
mov [ebp-3] dl +
xor ch ch +
mov [ebp+var_4] dl +
mov [ebp+var_2] dl +
mov cl 1 +
mov [ebp+var_1] ch +
movzx eax word ptr [esi] +
test ax ax +
jz loc_447CE6  +
cmp eax 53h +
jg loc_447C7E  +
jz loc_447C6C  +
sub eax edi +
jz loc_447CCF  +
sub eax 0Bh +
jz loc_447C5F  +
sub eax 1 +
jz loc_447C56  +
sub eax 18h +
jz loc_447C4E  +
sub eax 0Ah +
jz loc_447C41  +
sub eax 4 +
jnz loc_447DAA  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_447C5B  +
or dword ptr [ebx] 10h +
jmp loc_447C75  +
or dword ptr [ebx] 80h +
mov cl 1 +
jmp loc_447CCF  +
push ebx  +
call sub_447E48  +
jmp loc_447CC9  +
mov ch 1 +
mov [ebp+var_1] ch +
xor cl cl +
jmp loc_447CD2  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
call sub_447EE6  +
pop ecx  +
jmp loc_447CC9  +
mov ch [ebp+var_1] +
test dl dl +
jnz loc_447C5B  +
or [ebx] edi +
mov dl 1 +
mov [ebp+var_2] dl +
mov cl dl +
jmp loc_447CD2  +
sub eax 54h +
jz loc_447CC3  +
sub eax 0Eh +
jz loc_447CBB  +
sub eax 1 +
jz loc_447CAF  +
sub eax 0Bh +
jz loc_447CA3  +
sub eax 6 +
jnz loc_447DAA  +
push ebx  +
call sub_447F1B  +
jmp loc_447CC9  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_447EC4  +
jmp loc_447C69  +
lea eax [ebp-3] +
push eax  +
push ebx  +
call sub_447EA2  +
jmp loc_447C69  +
push ebx  +
call sub_447E82  +
jmp loc_447CC9  +
push ebx  +
call sub_447E63  +
mov dl [ebp+var_2] +
pop ecx  +
mov cl al +
mov ch [ebp+var_1] +
xor eax eax +
test cl cl +
setnz al  +
lea esi [esi+eax*2] +
test cl cl +
jnz loc_447BFD  +
jmp loc_447CE9  +
mov ch [ebp+var_1] +
test ch ch +
jz loc_447CF0  +
add esi 2 +
cmp [esi] di +
jz loc_447CED  +
test ch ch +
jnz loc_447D0D  +
xor eax eax +
cmp [esi] ax +
jnz loc_447DAA  +
mov byte ptr [ebx+8] 1 +
jmp loc_447DBA  +
push 3  +
push offset aCcs  +
push esi  +
call sub_44360D  +
add esp 0Ch +
test eax eax +
jnz loc_447DAA  +
add esi 6 +
jmp loc_447D2D  +
add esi 2 +
cmp [esi] di +
jz loc_447D2A  +
cmp word ptr [esi] 3Dh +
jnz loc_447DAA  +
add esi 2 +
cmp [esi] di +
jz loc_447D38  +
push 5  +
push offset aUtf8_0  +
push esi  +
call sub_44DFD1  +
add esp 0Ch +
test eax eax +
jnz loc_447D5F  +
add esi 0Ah +
or dword ptr [ebx] 40000h +
jmp loc_447DA0  +
push 8  +
push offset aUtf16leunicod  +
push esi  +
call sub_44DFD1  +
add esp 0Ch +
test eax eax +
jnz loc_447D7E  +
add esi 10h +
or dword ptr [ebx] 20000h +
jmp loc_447DA0  +
push 7  +
push (offset aUtf16leunicod+10h)  +
push esi  +
call sub_44DFD1  +
add esp 0Ch +
test eax eax +
jnz loc_447DAA  +
add esi 0Eh +
or dword ptr [ebx] 10000h +
jmp loc_447DA0  +
add esi 2 +
cmp [esi] di +
jz loc_447D9D  +
jmp loc_447CF9  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
mov [ebp+nNumberOfBytesToWrite] ecx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_30] edi +
test ecx ecx +
jnz loc_4489C1  +
xor eax eax +
jmp loc_448B8F  +
test edi edi +
jnz loc_4489E4  +
call sub_43CB63  +
and [eax] edi +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
or eax 0FFFFFFFFh +
jmp loc_448B8F  +
push ebx  +
mov eax esi +
mov ebx esi +
sar ebx 6 +
and eax 3Fh +
imul edx eax +
mov [ebp+var_1C] ebx +
mov eax dword_473560[ebx*4] +
mov [ebp+var_2C] eax +
mov [ebp+var_18] edx +
mov bl [eax+edx+29h] +
cmp bl 2 +
jz loc_448A10  +
cmp bl 1 +
jnz loc_448A38  +
mov eax ecx +
not eax  +
test al 1 +
jnz loc_448A35  +
call sub_43CB63  +
and dword ptr [eax] 0 +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
jmp loc_448B86  +
mov eax [ebp+var_2C] +
test byte ptr [eax+edx+28h] 20h +
jz loc_448A4E  +
push 2  +
push 0  +
push 0  +
push esi  +
call sub_44ECC9  +
add esp 10h +
push esi  +
call sub_448538  +
pop ecx  +
test al al +
jz loc_448A92  +
test bl bl +
jz loc_448A7F  +
dec bl  +
cmp bl 1 +
ja loc_448B56  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_14] +
push edi  +
push eax  +
call sub_4484CB  +
add esp 0Ch +
mov esi eax +
jmp loc_448B1B  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_14] +
push edi  +
push esi  +
push eax  +
call sub_448318  +
add esp 10h +
jmp loc_448A78  +
mov eax [ebp+var_1C] +
mov ecx dword_473560[eax*4] +
mov eax [ebp+var_18] +
test byte ptr [ecx+eax+28h] 80h +
jz loc_448AEC  +
movsx eax bl +
sub eax 0 +
jz loc_448ADC  +
sub eax 1 +
jz loc_448ACC  +
sub eax 1 +
jnz loc_448B56  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_14] +
push edi  +
push esi  +
push eax  +
call sub_44868D  +
jmp loc_448A8D  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_14] +
push edi  +
push esi  +
push eax  +
call sub_44877B  +
jmp loc_448A8D  +
push [ebp+nNumberOfBytesToWrite]  +
lea eax [ebp+var_14] +
push edi  +
push esi  +
push eax  +
call sub_4485AE  +
jmp loc_448A8D  +
mov eax [ecx+eax+18h] +
xor ecx ecx +
push ecx  +
mov [ebp+var_14] ecx +
mov [ebp+NumberOfBytesWritten] ecx +
mov [ebp+var_C] ecx +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push [ebp+nNumberOfBytesToWrite]  +
push edi  +
push eax  +
call ds:WriteFile  +
test eax eax +
jnz loc_448B18  +
call ds:GetLastError  +
mov [ebp+var_14] eax +
lea esi [ebp+var_14] +
lea edi [ebp+var_28] +
movs   +
movs   +
movs   +
mov eax [ebp+var_24] +
test eax eax +
jnz loc_448B8B  +
mov eax [ebp+var_28] +
test eax eax +
jz loc_448B53  +
push 5  +
pop esi  +
cmp eax esi +
jnz loc_448B4A  +
call sub_43CB76  +
mov dword ptr [eax] 9 +
call sub_43CB63  +
mov [eax] esi +
jmp loc_448B86  +
push eax  +
call sub_43CB40  +
pop ecx  +
jmp loc_448B86  +
mov edi [ebp+var_30] +
mov eax [ebp+var_1C] +
mov ecx [ebp+var_18] +
mov eax dword_473560[eax*4] +
test byte ptr [eax+ecx+28h] 40h +
jz loc_448B73  +
cmp byte ptr [edi] 1Ah +
jnz loc_448B73  +
xor eax eax +
jmp loc_448B8E  +
call sub_43CB76  +
mov dword ptr [eax] 1Ch +
call sub_43CB63  +
and dword ptr [eax] 0 +
or eax 0FFFFFFFFh +
jmp loc_448B8E  +
sub eax [ebp+var_20] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
call sub_44673E  +
pop ecx  +
mov ecx [ebp+arg_4] +
mov edi eax +
mov ecx [ecx+0Ch] +
test cl 6 +
jnz loc_448BDA  +
call sub_43CB76  +
mov dword ptr [eax] 9 +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_448CAD  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
shr eax 0Ch +
test al 1 +
jz loc_448BF4  +
call sub_43CB76  +
mov dword ptr [eax] 22h +
jmp loc_448BC6  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
test al 1 +
jz loc_448C26  +
mov eax [ebp+arg_4] +
and dword ptr [eax+8] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
shr eax 3 +
test al 1 +
mov eax [ebp+arg_4] +
jz loc_448BC9  +
mov ecx [eax+4] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
push 0FFFFFFFEh  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
push ebx  +
push 2  +
pop ebx  +
add eax 0Ch +
or [eax] ebx +
mov eax [ebp+arg_4] +
push 0FFFFFFF7h  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
and dword ptr [eax+8] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
test eax 4C0h +
jnz loc_448C86  +
push esi  +
mov esi [ebp+arg_4] +
push 1  +
call sub_441BB1  +
pop ecx  +
cmp esi eax +
jz loc_448C71  +
mov esi [ebp+arg_4] +
push ebx  +
call sub_441BB1  +
pop ecx  +
cmp esi eax +
jnz loc_448C7C  +
push edi  +
call sub_44DDA9  +
pop ecx  +
test eax eax +
jnz loc_448C85  +
push [ebp+arg_4]  +
call sub_44ED29  +
pop ecx  +
pop esi  +
push [ebp+arg_4]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_448DC5  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_448CA9  +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_448CAC  +
movzx eax bl +
pop ebx  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
cmp ebx 0FFFFFFFEh +
jnz loc_44989C  +
call sub_43CB63  +
and dword ptr [eax] 0 +
call sub_43CB76  +
mov dword ptr [eax] 9 +
jmp loc_449C1E  +
test ebx ebx +
js loc_449C06  +
cmp ebx dword_473760 +
jnb loc_449C06  +
mov eax ebx +
mov [ebp+var_14] 1 +
and eax 3Fh +
mov edi ebx +
sar edi 6 +
imul edx eax +
mov [ebp+var_10] edi +
mov eax dword_473560[edi*4] +
mov [ebp+var_18] edx +
mov cl [edx+eax+28h] +
mov [ebp+var_1] cl +
test cl 1 +
jz loc_449C06  +
mov ecx [ebp+arg_8] +
cmp ecx 7FFFFFFFh +
jbe loc_449904  +
call sub_43CB63  +
and dword ptr [eax] 0 +
call sub_43CB76  +
mov dword ptr [eax] 16h +
jmp loc_449C19  +
test ecx ecx +
jz loc_449C02  +
test [ebp+var_1] 2 +
jnz loc_449C02  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_4498EC  +
push esi  +
mov esi [edx+eax+18h] +
mov al [edx+eax+29h] +
mov [ebp+var_1] al +
mov [ebp+hFile] esi +
xor esi esi +
movsx eax al +
sub eax 1 +
jz loc_449950  +
sub eax 1 +
jnz loc_449942  +
mov eax ecx +
not eax  +
test al 1 +
jz loc_44995B  +
mov eax [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] eax +
jmp loc_4499EC  +
mov edx [ebp+var_14] +
mov eax ecx +
not eax  +
test al dl +
jnz loc_449977  +
call sub_43CB63  +
and [eax] esi +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
jmp loc_449B39  +
push 4  +
pop eax  +
shr ecx 1 +
mov [ebp+nNumberOfBytesToRead] eax +
cmp ecx eax +
jb loc_449988  +
mov eax ecx +
mov [ebp+nNumberOfBytesToRead] ecx +
push eax  +
call sub_444BF6  +
push 0  +
mov esi eax +
call sub_444BBC  +
push 0  +
call sub_444BBC  +
add esp 0Ch +
mov [ebp+lpBuffer] esi +
test esi esi +
jnz loc_4499C3  +
call sub_43CB76  +
mov dword ptr [eax] 0Ch +
call sub_43CB63  +
mov dword ptr [eax] 8 +
jmp loc_449B39  +
push [ebp+var_14]  +
push 0  +
push 0  +
push ebx  +
call sub_44ECC9  +
mov ecx dword_473560[edi*4] +
add esp 10h +
mov edi [ebp+var_18] +
mov [edi+ecx+20h] eax +
mov eax esi +
mov [edi+ecx+24h] edx +
mov edx edi +
mov ecx [ebp+nNumberOfBytesToRead] +
mov ebx [ebp+var_10] +
xor edi edi +
mov [ebp+var_24] eax +
mov ebx dword_473560[ebx*4] +
mov [ebp+NumberOfBytesRead] ebx +
test byte ptr [edx+ebx+28h] 48h +
mov ebx [ebp+arg_0] +
jz loc_449ADA  +
mov ebx [ebp+NumberOfBytesRead] +
mov bl [edx+ebx+2Ah] +
mov [ebp+var_2] bl +
cmp bl 0Ah +
mov ebx [ebp+arg_0] +
jz loc_449ADA  +
test ecx ecx +
jz loc_449ADA  +
mov bl [ebp+var_2] +
mov edi [ebp+var_14] +
mov [eax] bl +
inc eax  +
mov ebx [ebp+arg_0] +
dec ecx  +
cmp [ebp+var_1] 0 +
mov [ebp+lpBuffer] eax +
mov eax [ebp+var_10] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_473560[eax*4] +
mov byte ptr [edx+eax+2Ah] 0Ah +
jz loc_449ADA  +
mov eax [ebp+var_10] +
mov eax dword_473560[eax*4] +
mov al [edx+eax+2Bh] +
mov [ebp+var_2] al +
cmp al 0Ah +
jz loc_449ADA  +
test ecx ecx +
jz loc_449ADA  +
mov eax [ebp+lpBuffer] +
mov bl [ebp+var_2] +
push 2  +
pop edi  +
mov [eax] bl +
inc eax  +
mov ebx [ebp+arg_0] +
dec ecx  +
mov [ebp+lpBuffer] eax +
mov eax [ebp+var_10] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_473560[eax*4] +
mov byte ptr [edx+eax+2Bh] 0Ah +
mov al [ebp+var_1] +
cmp al byte ptr [ebp+var_14] +
jnz loc_449ADA  +
mov eax [ebp+var_10] +
mov eax dword_473560[eax*4] +
mov al [edx+eax+2Ch] +
mov [ebp+var_2] al +
cmp al 0Ah +
jz loc_449ADA  +
test ecx ecx +
jz loc_449ADA  +
mov eax [ebp+lpBuffer] +
mov bl [ebp+var_2] +
push 3  +
pop edi  +
mov [eax] bl +
inc eax  +
mov ebx [ebp+arg_0] +
dec ecx  +
mov [ebp+lpBuffer] eax +
mov eax [ebp+var_10] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_473560[eax*4] +
mov byte ptr [edx+eax+2Ch] 0Ah +
push ebx  +
call sub_44DDA9  +
pop ecx  +
test eax eax +
jz loc_449B56  +
mov eax [ebp+var_10] +
mov ecx [ebp+var_18] +
mov eax dword_473560[eax*4] +
test byte ptr [ecx+eax+28h] 80h +
jz loc_449B56  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hFile]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_449B56  +
cmp [ebp+var_1] 2 +
jnz loc_449B5A  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
shr eax 1 +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadConsoleW  +
test eax eax +
jnz loc_449B4B  +
call ds:GetLastError  +
push eax  +
call sub_43CB40  +
pop ecx  +
or edi 0FFFFFFFFh +
push esi  +
call sub_444BBC  +
pop ecx  +
mov eax edi +
pop esi  +
jmp loc_449C21  +
mov eax [ebp+NumberOfBytesRead] +
mov ecx [ebp+arg_8] +
lea edi [edi+eax*2] +
jmp loc_449B7F  +
mov byte ptr [ebp+var_14] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_449BCE  +
mov ecx [ebp+arg_8] +
cmp [ebp+NumberOfBytesRead] ecx +
ja loc_449BCE  +
add edi [ebp+NumberOfBytesRead] +
mov eax [ebp+var_10] +
mov edx [ebp+var_18] +
mov eax dword_473560[eax*4] +
test byte ptr [edx+eax+28h] 80h +
jz loc_449B3C  +
cmp [ebp+var_1] 2 +
jz loc_449BB0  +
shr ecx 1 +
push ecx  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_44958E  +
add esp 14h +
mov edi eax +
jmp loc_449B3C  +
shr edi 1 +
cmp byte ptr [ebp+var_14] 0 +
push edi  +
push [ebp+var_24]  +
push ebx  +
jz loc_449BC7  +
call sub_4496DE  +
add esp 0Ch +
jmp loc_449BAC  +
call sub_4493CE  +
jmp loc_449BC2  +
call ds:GetLastError  +
push 5  +
pop edi  +
cmp eax edi +
jnz loc_449BF2  +
call sub_43CB76  +
mov dword ptr [eax] 9 +
call sub_43CB63  +
mov [eax] edi +
jmp loc_449B39  +
cmp eax 6Dh +
jnz loc_449B32  +
xor edi edi +
jmp loc_449B3C  +
xor eax eax +
jmp loc_449C21  +
call sub_43CB63  +
and dword ptr [eax] 0 +
call sub_43CB76  +
mov dword ptr [eax] 9 +
call sub_43C8B1  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_449C27  +
***
push edi  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push eax  +
push eax  +
push 1  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_449E8A  +
add esp 18h +
pop ebp  +
retn   +
***
mov edi edi +
call ds:GetProcessHeap  +
and hHeap 0 +
mov al 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_44A1D5  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp byte_47398C 0 +
call sub_437600  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_44AF41  +
xor edi edi +
jmp loc_44AF78  +
push ebx  +
push esi  +
call sub_44AE73  +
sub eax esi +
sar eax 1 +
lea ebx [eax+eax] +
push ebx  +
call sub_444BF6  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_44AF68  +
push ebx  +
push esi  +
push edi  +
call loc_439530  +
add esp 0Ch +
push 0  +
call sub_444BBC  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
push 30h  +
push 40h  +
call sub_444C44  +
mov edi eax +
xor ebx ebx +
mov [ebp+var_8] edi +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_44B2EB  +
mov edi ebx +
jmp loc_44B333  +
lea eax [edi+0C00h] +
cmp edi eax +
jz loc_44B333  +
push esi  +
lea esi [edi+20h] +
mov edi eax +
push ebx  +
push 0FA0h  +
lea eax [esi-20h] +
push eax  +
call sub_4455AA  +
or dword ptr [esi-8] 0FFFFFFFFh +
mov [esi] ebx +
lea esi [esi+30h] +
mov [esi-2Ch] ebx +
lea eax [esi-20h] +
mov dword ptr [esi-28h] 0A0A0000h +
mov byte ptr [esi-24h] 0Ah +
and byte ptr [esi-23h] 0F8h +
mov [esi-22h] bl +
cmp eax edi +
jnz loc_44B2FB  +
mov edi [ebp+var_8] +
pop esi  +
push ebx  +
call sub_444BBC  +
pop ecx  +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+arg_0] esi +
jz loc_44BF11  +
add esi 0FFFFFFFCh +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_44BF05  +
push 0  +
mov ecx edi +
call ds:off_456664  +
call edi  +
pop ecx  +
sub esi 8 +
lea eax [esi+4] +
cmp eax [ebp+arg_0] +
jnz loc_44BEF2  +
pop edi  +
mov ecx [ebp+var_4] +
mov al 1 +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
call sub_437600  +
pop ecx  +
call sub_437600  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp-1] +
push eax  +
push 3  +
call sub_44C026  +
pop ecx  +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_445013  +
call sub_437660  +
mov esi [ebp+8] +
cmp byte ptr [ebp-1Dh] 0 +
jz locret_44C2E1  +
push 3  +
call sub_4481D2  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_443F2A  +
mov edi eax +
test edi edi +
jz loc_44DE60  +
cmp [ebp+arg_0] 0 +
jz loc_44DE60  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_44DE1E  +
sub esi ecx +
jmp loc_44DE5B  +
mov edx [edi] +
mov ecx edx +
lea eax [ecx+1] +
mov [ebp+var_4] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_44DE33  +
sub ecx [ebp+var_4] +
cmp ecx esi +
jbe loc_44DE58  +
cmp byte ptr [edx+esi] 3Dh +
jnz loc_44DE58  +
push esi  +
push [ebp+arg_0]  +
push edx  +
call sub_44F7BF  +
add esp 0Ch +
test eax eax +
jz loc_44DE68  +
add edi 4 +
cmp dword ptr [edi] 0 +
jnz loc_44DE29  +
xor eax eax +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_44DE62  +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+arg_8] esi +
jz loc_44E181  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_44E0C0  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
mov eax 7FFFFFFFh +
jmp loc_44E183  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_44E0A6  +
push [ebp+arg_C]  +
lea ecx [ebp+var_14] +
call sub_43D3B5  +
mov eax [ebp+var_10] +
cmp [eax+0A8h] esi +
jnz loc_44E130  +
mov ecx [ebp+arg_8] +
sub ebx edi +
push 41h  +
pop edx  +
push 5Ah  +
pop esi  +
mov [ebp+var_4] esi +
jmp loc_44E0F0  +
push 5Ah  +
pop esi  +
movzx eax word ptr [ebx+edi] +
cmp ax dx +
jb loc_44E106  +
cmp ax si +
ja loc_44E106  +
add eax 20h +
movzx esi ax +
jmp loc_44E108  +
mov esi eax +
movzx eax word ptr [edi] +
cmp ax dx +
jb loc_44E11C  +
cmp ax word ptr [ebp+var_4] +
ja loc_44E11C  +
add eax 20h +
movzx eax ax +
add edi 2 +
sub ecx 1 +
jz loc_44E169  +
test si si +
jz loc_44E169  +
cmp si ax +
jz loc_44E0ED  +
jmp loc_44E169  +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [ebx] +
push eax  +
call sub_4478FA  +
movzx esi ax +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [edi] +
push eax  +
call sub_4478FA  +
add esp 10h +
movzx eax ax +
sub [ebp+arg_8] 1 +
lea ebx [ebx+2] +
lea edi [edi+2] +
jz loc_44E169  +
test si si +
jz loc_44E169  +
cmp si ax +
jz loc_44E130  +
movzx eax ax +
movzx esi si +
sub esi eax +
cmp [ebp+var_8] 0 +
jz loc_44E181  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
test eax eax +
jz loc_44E1F6  +
inc edx  +
sub ebx 1 +
jbe loc_44E1F6  +
test dl 3 +
jnz loc_44E1B0  +
lea eax [edx+ecx] +
and eax 0FFFh +
cmp eax 0FFCh +
ja loc_44E1B0  +
mov eax [edx+ecx] +
cmp eax [edx] +
jnz loc_44E1B0  +
sub ebx 4 +
jbe loc_44E1F6  +
lea esi [eax-1010101h] +
add edx 4 +
not eax  +
and eax esi +
test eax 80808080h +
jz loc_44E1C7  +
xor eax eax +
pop esi  +
pop ebx  +
retn   +
***
call sub_437600  +
cmp dword ptr [ebp-20h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_437600  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx ecx +
jbe loc_44F377  +
mov eax [ebp+arg_8] +
push esi  +
push edi  +
lea edx [ecx+eax] +
mov esi edx +
mov edi ecx +
cmp esi ebx +
ja loc_44F343  +
jmp loc_44F320  +
mov ecx [ebp+arg_C] +
push edi  +
push esi  +
call ds:off_456664  +
call [ebp+arg_C]  +
add esp 8 +
test eax eax +
jle loc_44F337  +
mov edi esi +
mov eax [ebp+arg_8] +
add esi eax +
cmp esi ebx +
jbe loc_44F320  +
mov ecx [ebp+arg_0] +
mov esi eax +
mov edx ebx +
cmp edi ebx +
jz loc_44F36C  +
test eax eax +
jz loc_44F36C  +
sub edi ebx +
mov al [edx] +
lea edx [edx+1] +
mov cl [edi+edx-1] +
mov [edi+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_44F351  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edx [ecx+eax] +
cmp ebx ecx +
ja loc_44F313  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_44F3C6  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_44F3C5  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_44F3B0  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_4] +
mov [ebp+var_104] ecx +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_100] esi +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_FC] edi +
test ecx ecx +
jnz loc_44F42D  +
test edx edx +
jz loc_44F42D  +
call sub_43CB76  +
mov dword ptr [eax] 16h +
call sub_43C8B1  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_44F40D  +
test esi esi +
jz loc_44F40D  +
mov [ebp+var_108] 0 +
cmp edx 2 +
jb loc_44F75A  +
dec edx  +
imul edx edi +
push ebx  +
add edx ecx +
mov [ebp+var_F8] edx +
mov eax edx +
xor edx edx +
sub eax ecx +
div  edi +
lea ebx [eax+1] +
cmp ebx 8 +
ja loc_44F47B  +
push esi  +
push edi  +
push [ebp+var_F8]  +
push ecx  +
call sub_44F2F0  +
add esp 10h +
jmp loc_44F732  +
shr ebx 1 +
imul ebx edi +
add ebx ecx +
push ebx  +
push ecx  +
mov ecx esi +
mov [ebp+var_110] ebx +
call ds:off_456664  +
call esi  +
add esp 8 +
test eax eax +
jle loc_44F4AB  +
push edi  +
push ebx  +
push [ebp+var_104]  +
call sub_44F390  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push [ebp+var_104]  +
call ds:off_456664  +
call esi  +
add esp 8 +
test eax eax +
jle loc_44F4DD  +
push edi  +
push [ebp+var_F8]  +
push [ebp+var_104]  +
call sub_44F390  +
add esp 0Ch +
push [ebp+var_F8]  +
mov ecx esi +
push ebx  +
call ds:off_456664  +
call esi  +
add esp 8 +
test eax eax +
jle loc_44F505  +
push edi  +
push [ebp+var_F8]  +
push ebx  +
call sub_44F390  +
add esp 0Ch +
mov eax [ebp+var_F8] +
mov edi eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_FC] +
mov [ebp+var_114] eax +
nop   +
cmp ebx esi +
jbe loc_44F55B  +
add esi edx +
mov [ebp+var_10C] esi +
cmp esi ebx +
jnb loc_44F555  +
mov ecx [ebp+var_100] +
push ebx  +
push esi  +
call ds:off_456664  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jle loc_44F524  +
cmp ebx esi +
ja loc_44F592  +
mov eax [ebp+var_F8] +
mov edi [ebp+var_100] +
add esi edx +
cmp esi eax +
ja loc_44F586  +
push ebx  +
push esi  +
mov ecx edi +
call ds:off_456664  +
call edi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jle loc_44F561  +
mov edi [ebp+var_114] +
mov [ebp+var_10C] esi +
mov esi [ebp+var_100] +
jmp loc_44F5A0  +
mov edx [ebp+var_FC] +
sub edi edx +
cmp edi ebx +
jbe loc_44F5C5  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_456664  +
call esi  +
add esp 8 +
test eax eax +
jg loc_44F5A0  +
mov edx [ebp+var_FC] +
mov esi [ebp+var_10C] +
mov [ebp+var_114] edi +
cmp edi esi +
jb loc_44F633  +
mov [ebp+var_118] edx +
mov [ebp+var_11C] edi +
cmp esi edi +
jz loc_44F618  +
mov ebx esi +
mov edx edi +
mov esi [ebp+var_118] +
sub ebx edi +
mov al [edx] +
lea edx [edx+1] +
mov cl [ebx+edx-1] +
mov [ebx+edx-1] al +
mov [edx-1] cl +
sub esi 1 +
jnz loc_44F5F1  +
mov esi [ebp+var_10C] +
mov ebx [ebp+var_110] +
mov edx [ebp+var_FC] +
mov eax [ebp+var_F8] +
cmp ebx edi +
jnz loc_44F520  +
mov ebx esi +
mov [ebp+var_110] ebx +
jmp loc_44F520  +
add edi edx +
cmp ebx edi +
jnb loc_44F66B  +
lea esp [esp+0] +
sub edi edx +
cmp edi ebx +
jbe loc_44F66B  +
mov ecx [ebp+var_100] +
push ebx  +
push edi  +
call ds:off_456664  +
call [ebp+var_100]  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_44F640  +
cmp ebx edi +
jb loc_44F69A  +
mov esi [ebp+var_100] +
sub edi edx +
cmp edi [ebp+var_104] +
jbe loc_44F694  +
push ebx  +
push edi  +
mov ecx esi +
call ds:off_456664  +
call esi  +
mov edx [ebp+var_FC] +
add esp 8 +
test eax eax +
jz loc_44F671  +
mov esi [ebp+var_10C] +
mov edx [ebp+var_F8] +
mov eax edi +
mov ebx [ebp+var_104] +
mov ecx edx +
sub ecx esi +
sub eax ebx +
cmp eax ecx +
jl loc_44F6EB  +
cmp ebx edi +
jnb loc_44F6CE  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] ebx +
mov [ebp+eax*4+var_7C] edi +
inc eax  +
mov [ebp+var_108] eax +
mov edi [ebp+var_FC] +
cmp esi edx +
jnb loc_44F724  +
mov ecx esi +
mov esi [ebp+var_100] +
mov [ebp+var_104] ecx +
jmp loc_44F455  +
cmp esi edx +
jnb loc_44F707  +
mov eax [ebp+var_108] +
mov [ebp+eax*4+var_F4] esi +
mov [ebp+eax*4+var_7C] edx +
inc eax  +
mov [ebp+var_108] eax +
mov ecx [ebp+var_104] +
mov esi [ebp+var_100] +
cmp ecx edi +
jnb loc_44F72C  +
mov edx edi +
mov edi [ebp+var_FC] +
jmp loc_44F44F  +
mov esi [ebp+var_100] +
jmp loc_44F732  +
mov edi [ebp+var_FC] +
mov eax [ebp+var_108] +
sub eax 1 +
mov [ebp+var_108] eax +
js loc_44F759  +
mov ecx [ebp+eax*4+var_F4] +
mov edx [ebp+eax*4+var_7C] +
mov [ebp+var_104] ecx +
jmp loc_44F44F  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
add edx 1 +
bts [esp] eax +
jmp loc_44F784  +
***
call sub_44ABC2  +
mov edi edi +
mov edi edi +
call sub_437600  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_44F9D4  +
pop ecx  +
test eax eax +
jz loc_44FA5C  +
xor eax eax +
inc eax  +
jmp loc_44FA85  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_44F9F1  +
pop ecx  +
test eax eax +
jnz loc_44FA57  +
call sub_44C3C6  +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_473D9C 0 +
jz loc_44FB1F  +
sub esp 8 +
stmxcsr dword ptr [esp+4]  +
mov eax [esp+4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_44FAC4  +
fnstcw  word ptr [esp] +
mov ax [esp] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_44FB1F  +
jmp loc_4501E8  +
***
cmp dword_473D9C 0 +
jz loc_44FB0B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_44FB00  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_44FB0B  +
jmp sub_4501D0  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_4508E8  +
call sub_44FB28  +
add esp 0Ch +
retn   +
***
jz loc_44FB7B  +
cmp dword_473D9C 0 +
mov edi edi +
xor eax eax +
mov eax hObject +
mov edi edi +
mov edi edi +
mov dword_473D9C eax +
xor eax eax +
retn   +
***
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_4501EE  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_45E180 +
movapd xmm2 oword ptr ds:oword_45E190 +
movapd xmm3 oword ptr ds:oword_45E1F0 +
movapd xmm4 oword ptr ds:oword_45E1A0 +
movapd xmm6 oword ptr ds:oword_45E1B0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_45E7B0[eax] +
movapd xmm7 oword ptr ds:oword_45E3A0[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_450346  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_45E240 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_45E250 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_45E260 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_45E1C0 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_45E1D0[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_45E270 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_45E200 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_4503AB  +
cmp ecx 0FFFFFFFFh +
jz loc_4503C6  +
cmp ecx 7FEh +
ja loc_4503DC  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_45E180 +
movapd xmm2 oword ptr ds:oword_45E1F0 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_4503A4  +
fld  ds:dbl_45E228 +
retn   +
mov edx 3E9h +
jmp loc_4503FA  +
movlpd xmm2 oword ptr ds:oword_45E1F0 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_45E220 +
mov edx 8 +
jmp loc_4503FA  +
movlpd xmm1 oword ptr ds:oword_45E210 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_4501F3  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_450427  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_450A43  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_4503ED  +
mov edx 3E9h +
jmp loc_4503FA  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_4505AE  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_450494  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_45049B  +
fscale   +
or ch ch +
jz loc_4504A1  +
fchs   +
jmp loc_450758  +
***
call sub_4505F1  +
or eax eax +
jz loc_4504C3  +
xor ch ch +
cmp eax 2 +
jz loc_4504B8  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_45046D  +
***
jmp loc_450778  +
***
jmp loc_450813  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_45E280 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_4504C3  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_45E28A +
retn   +
***
or cl cl +
jnz loc_45055B  +
retn   +
***
fldlg2   +
jmp loc_45050F  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_4504C3  +
fyl2x   +
retn   +
***
jmp loc_450778  +
***
call sub_4505F1  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_450538  +
fldz   +
cmp eax 1 +
jnz locret_450537  +
or ch ch +
jz locret_450537  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_45E280 +
cmp eax 1 +
jnz locret_450537  +
or ch ch +
jz locret_450537  +
fchs   +
jmp locret_450537  +
***
fstp  st +
***
jmp loc_450766  +
***
fstp  st +
jmp loc_450815  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_450583  +
fstp  st +
fld  ds:tbyte_45E280 +
or ch ch +
jz locret_450582  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_450766  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_450617  +
fld  st +
fmul  ds:dbl_45E2B2 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_45061E  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_450616  +
mov eax 2 +
jmp locret_450616  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_450D7E  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_450656  +
jmp sub_450826  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_450677  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_45067B  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_45E30E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_4506DE  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_4506E2  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_45E30E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
jmp dword ptr [ebx]  +
***
call sub_450826  +
***
fxch  st(1) +
fstp  st +
retn   +
***
call sub_450826  +
jmp loc_45075A  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_450777  +
fchs   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_45079C  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_45E2FE +
retn   +
***
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4507CA  +
mov byte ptr [ebp-90h] 0 +
jmp loc_4507D1  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_450809  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_450809  +
mov byte ptr [ebp-90h] 0 +
jmp loc_450810  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_45E2F4 +
or ch ch +
jz loc_450840  +
fchs   +
or cl cl +
jz locret_45084C  +
fld  ds:dbl_45E306 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_450853  +
fchs   +
retn   +
***
fld  st +
frndint   +
fsubr st(1) st +
fxch  st(1) +
fchs   +
f2xm1   +
fld1   +
faddp st(1) st +
fscale   +
fstp  st(1) +
retn   +
***
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_4508F9  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_450909  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_450933  +
and ax 20h +
jz loc_450930  +
fstsw  ax +
and ax 20h +
jz loc_450930  +
mov eax 8 +
call sub_450A07  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_45095D  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_45099A  +
cmp eax 7FF00000h +
jz loc_4509C3  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_450998  +
and ax 20h +
jnz loc_450995  +
fstsw  ax +
and ax 20h +
jz loc_450995  +
mov eax 8 +
cmp edx 1Dh +
jz loc_45098E  +
call sub_450A07  +
pop edx  +
retn   +
***
call sub_4509F0  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  ds:dbl_45E34C +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_45E33C +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_450982  +
fmul  ds:dbl_45E35C +
jmp loc_450982  +
***
fld  ds:dbl_45E344 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_45E334 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_450982  +
fmul  ds:dbl_45E354 +
jmp loc_450982  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_46E524 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp dword_4739B8 0 +
push esi  +
push edi  +
jz loc_450A70  +
push dword_473D98  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_450A75  +
mov edi offset sub_4437FC +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_450BA2  +
jz loc_450B96  +
cmp eax 0Eh +
jg loc_450B37  +
jz loc_450B24  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_450B15  +
sub eax 1 +
jz loc_450B0C  +
sub eax 5 +
jz loc_450AFD  +
sub eax 1 +
jnz loc_450C4B  +
mov [ebp+var_20] offset aLog10_0 +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_456664  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_450C46  +
call sub_43CB76  +
mov dword ptr [eax] 21h +
jmp loc_450C46  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset aLog10_0 +
jmp loc_450C10  +
mov [ebp+var_20] offset unk_45E364 +
jmp loc_450AB7  +
mov [ebp+var_24] ecx +
mov [ebp+var_20] offset unk_45E364 +
jmp loc_450C10  +
mov [ebp+var_24] 3 +
mov [ebp+var_20] offset aExp +
jmp loc_450C10  +
sub eax 0Fh +
jz loc_450B8D  +
sub eax 9 +
jz loc_450B84  +
sub eax 1 +
jnz loc_450C4B  +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_24] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_456664  +
call edi  +
pop ecx  +
jmp loc_450C46  +
mov [ebp+var_24] 3 +
jmp loc_450C09  +
mov [ebp+var_20] offset aExp +
jmp loc_450B51  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_450C4B  +
sub eax 1Bh +
jz loc_450C02  +
sub eax 1 +
jz loc_450BF6  +
sub eax 15h +
jz loc_450BEA  +
sub eax 9 +
jz loc_450BDE  +
sub eax 3 +
jz loc_450BD2  +
sub eax 3ABh +
jz loc_450BCB  +
sub eax 1 +
jnz loc_450C4B  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_450B98  +
mov [ebp+var_20] offset aAsin +
jmp loc_450AB7  +
mov [ebp+var_20] offset aAcos +
jmp loc_450AB7  +
mov [ebp+var_20] offset aSqrt +
jmp loc_450AB7  +
mov [ebp+var_20] offset aPow +
jmp loc_450AB7  +
mov [ebp+var_24] 2 +
mov [ebp+var_20] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_1C] +
fld  qword ptr [eax] +
lea eax [ebp+var_24] +
fstp  [ebp+var_14] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_C] +
call ds:off_456664  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_450C46  +
call sub_43CB76  +
mov dword ptr [eax] 22h +
fld  [ebp+var_C] +
fstp  qword ptr [esi] +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_436C8F  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42105F  +
pop ebp  +
jmp $+5  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
or edi 0FFFFFFFFh +
call sub_413E25  +
mov esi eax +
call sub_419B8F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
mov ebx [eax+4] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_431FF0  +
test eax eax +
jz loc_45191A  +
test ebx ebx +
jz loc_4518F1  +
mov eax [ebx] +
mov ecx ebx +
call dword ptr [eax+0ACh]  +
test eax eax +
jz loc_45191A  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+50h]  +
test eax eax +
jnz loc_451911  +
mov ecx [esi+20h] +
test ecx ecx +
jz loc_451908  +
mov eax [ecx] +
call dword ptr [eax+60h]  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+68h]  +
jmp loc_451918  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+54h]  +
mov edi eax +
call sub_430790  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_45196C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_451964  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_45196E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_451954  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_46BAB8  +
push offset sub_43A020  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_46E524 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_451A40  +
add esp 4 +
test eax eax +
jz loc_451A1F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_451930  +
add esp 8 +
test eax eax +
jz loc_451A1F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
mov ecx 5A4Dh +
cmp [eax] cx +
jz loc_451A54  +
xor eax eax +
pop ebp  +
retn   +
mov ecx [eax+3Ch] +
add ecx eax +
xor eax eax +
cmp dword ptr [ecx] 4550h +
jnz loc_451A6F  +
mov edx 10Bh +
cmp [ecx+18h] dx +
setz al  +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_451AB1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_451AF8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_451ABF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_451AED  +
cmp edx [esp+arg_4] +
ja loc_451AED  +
jb loc_451AF6  +
cmp eax [esp+arg_0] +
jbe loc_451AF6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_451B40  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_451B5B  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_451B7A  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_451BC6  +
jmp loc_451BCD  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_451B88  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_451BB3  +
cmp edx [esp+arg_4] +
ja loc_451BB3  +
jb loc_451BBB  +
cmp eax [esp+arg_0] +
jbe loc_451BBB  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_451BCD  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_451C04  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_451C20  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_451C4C  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_451C93  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_451C5A  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_451C88  +
cmp edx [esp+arg_4] +
ja loc_451C88  +
jb loc_451C91  +
cmp eax [esp+arg_0] +
jbe loc_451C91  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_451CA5  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_451CB9  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_451CD9  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
cmp cl 40h +
jnb loc_451D1A  +
cmp cl 20h +
jnb loc_451D10  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
jmp ds:SystemFunction036  +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_4730F4 1 +
jb loc_451E3E  +
mov edi [ebp+8] +
ja loc_451DBD  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_451D9D  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_451D6D  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_451DFE  +
xor eax eax +
test edi 0Fh +
jz loc_451DE4  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_451DFB  +
inc edi  +
test edi 0Fh +
jnz loc_451DCF  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_451E37  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_451E23  +
bsf edx edi +
add eax edx +
jmp loc_451DFB  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_451E61  +
xor eax eax +
jmp loc_451E63  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_4730F4 1 +
push ecx  +
push ecx  +
push ecx  +
mov edx [ebp+arg_0] +
sub esp 14h +
push ecx  +
sub esp 24h +
push esi  +
push ecx  +
push ecx  +
call sub_437600  +
mov esp [ebp-18h] +
and dword ptr [ebp-1Ch] 0 +
push offset aAccessViolatio  +
lea eax [ebp-28h] +
push eax  +
call sub_452406  +
pop ecx  +
pop ecx  +
push offset unk_46BC3C  +
jmp loc_4524EC  +
***
mov ecx [ebp-14h] +
jmp loc_4087F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466AD0 +
jmp loc_439FA8  +
***
lea ecx [ebp-0E8h] +
lea ecx [ebp-0ECh] +
lea ecx [ebp-0E4h] +
push eax  +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F4h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466B00 +
jmp loc_439FA8  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4525F8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_402570  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466B98 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466BC4 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466BE8 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 30h +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466C74 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466CB0 +
jmp loc_439FA8  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
jmp sub_4088E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466CE4 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466D18 +
jmp loc_439FA8  +
***
lea ecx [ebp+8] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466D44 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466D78 +
jmp loc_439FA8  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466DA4 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466E04 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466E5C +
jmp loc_439FA8  +
***
push eax  +
lea ecx [ebp-44h] +
lea ecx [ebp-38h] +
lea ecx [ebp-28h] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466EB4 +
jmp loc_439FA8  +
***
push eax  +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466F00 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466F34 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466F60 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466F94 +
jmp loc_439FA8  +
***
lea ecx [ebp-230h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-234h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466FC0 +
jmp loc_439FA8  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-54h] +
push eax  +
lea ecx [ebp-28h] +
push eax  +
lea ecx [ebp-44h] +
lea ecx [ebp-114h] +
jmp loc_405830  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-118h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466FEC +
jmp loc_439FA8  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467048 +
jmp loc_439FA8  +
***
lea ecx [ebp-418h] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-420h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46707C +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0ACh +
jmp loc_405D30  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4670DC +
jmp loc_439FA8  +
***
lea ecx [ebp-48h] +
push eax  +
lea ecx [ebp-48h] +
push eax  +
lea ecx [ebp-48h] +
push eax  +
lea ecx [ebp-48h] +
push eax  +
push eax  +
lea ecx [ebp-28h] +
lea ecx [ebp-30h] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467110 +
jmp loc_439FA8  +
***
lea ecx [ebp-0E8h] +
jmp sub_4179F1  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0ECh] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467198 +
jmp loc_439FA8  +
***
push eax  +
push eax  +
lea ecx [ebp-1Ch] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
lea ecx [ebp-40h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467208 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467234 +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-58h] +
push eax  +
lea ecx [ebp-40h] +
push eax  +
push eax  +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-58h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467270 +
jmp loc_439FA8  +
***
lea ecx [ebp-10h] +
jmp loc_407590  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4672D8 +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467304 +
jmp loc_439FA8  +
***
mov ecx [ebp-30h] +
lea ecx [ebp-20h] +
jmp loc_408070  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467330 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467364 +
jmp loc_439FA8  +
***
lea ecx [ebp-20h] +
jmp loc_402570  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467390 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4673F0 +
jmp loc_439FA8  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467460 +
jmp loc_439FA8  +
***
lea ecx [ebp-1Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467518 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46758C +
jmp loc_439FA8  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4675E4 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467610 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46763C +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-7Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467668 +
jmp loc_439FA8  +
***
push eax  +
lea ecx [ebp-10h] +
jmp loc_40B650  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4676BC +
jmp loc_439FA8  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-40h] +
lea ecx [ebp-28h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4676F0 +
jmp loc_439FA8  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_4530B8  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp-14h] +
jmp sub_402610  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46772C +
jmp loc_439FA8  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467758 +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467784 +
jmp loc_439FA8  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-80h] +
lea ecx [ebp-48h] +
lea ecx [ebp-50h] +
lea ecx [ebp-48h] +
lea ecx [ebp-40h] +
lea ecx [ebp-50h] +
lea ecx [ebp-48h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-48h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-40h] +
jmp sub_402610  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467850 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4678B0 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4678DC +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467908 +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467964 +
jmp loc_439FA8  +
***
lea ecx [ebp-2Ch] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467990 +
jmp loc_439FA8  +
***
lea ecx [ebp-2Ch] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4679BC +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4679F0 +
jmp loc_439FA8  +
***
push eax  +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4 +
jmp loc_411190  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467A48 +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467A84 +
jmp loc_439FA8  +
***
push eax  +
mov ecx [ebp-14h] +
jmp loc_4087F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467AB0 +
jmp loc_439FA8  +
***
push eax  +
lea ecx [ebp-28h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467AE4 +
jmp loc_439FA8  +
***
lea ecx [ebp-3Ch] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-68h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467B18 +
jmp loc_439FA8  +
***
lea ecx [ebp-14h] +
jmp loc_40B6C0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467B44 +
jmp loc_439FA8  +
***
mov eax [ebp-21Ch] +
and eax 1 +
jz locret_453511  +
and dword ptr [ebp-21Ch] 0FFFFFFFEh +
mov ecx [ebp-224h] +
jmp sub_402610  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-220h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467B70 +
jmp loc_439FA8  +
***
lea ecx [ebp-230h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-230h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467B9C +
jmp loc_439FA8  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_453598  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_405FD0  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467BC8 +
jmp loc_439FA8  +
***
mov eax [ebp-10h] +
lea ecx [ebp-14h] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467BF4 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4 +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467C28 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_466BC4 +
jmp loc_439FA8  +
***
lea ecx [ebp-2Ch] +
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467C5C +
jmp loc_439FA8  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467C90 +
jmp loc_439FA8  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 40h +
jmp loc_402570  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467CCC +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467D4C +
jmp loc_439FA8  +
***
push eax  +
call sub_436CA0  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467D78 +
jmp loc_439FA8  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-48h] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467DA8 +
jmp loc_439FA8  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-38h] +
jmp sub_40ED60  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467E48 +
jmp loc_439FA8  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-38h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-4Ch] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467EF0 +
jmp loc_439FA8  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-34h] +
lea ecx [ebp-2Ch] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_467F88 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468018 +
jmp loc_439FA8  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp loc_4110E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468090 +
jmp loc_439FA8  +
***
lea ecx [ebp-14h] +
lea ecx [ebp+8] +
lea ecx [ebp-44h] +
lea ecx [ebp-18h] +
lea ecx [ebp-44h] +
jmp sub_40CAF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-70h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468118 +
jmp loc_439FA8  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4681C8 +
jmp loc_439FA8  +
***
lea ecx [ebp-20h] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468250 +
jmp loc_439FA8  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-50h] +
lea ecx [ebp-24h] +
lea ecx [ebp-30h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-30h] +
lea ecx [ebp-40h] +
lea ecx [ebp+8] +
jmp loc_4110E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-64h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4682D0 +
jmp loc_439FA8  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-28h] +
push 4  +
lea ecx [ebp-30h] +
lea ecx [ebp-20h] +
push 4  +
lea ecx [ebp+8] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468398 +
jmp loc_439FA8  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-2Ch] +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468458 +
jmp loc_439FA8  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-30h] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468508 +
jmp loc_439FA8  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp+8] +
jmp loc_411190  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4685B0 +
jmp loc_439FA8  +
***
push eax  +
mov ecx [ebp-14h] +
jmp loc_4087F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468640 +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
jmp sub_402610  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468674 +
jmp loc_439FA8  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
lea ecx [ebp+0Ch] +
jmp loc_412500  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4686A8 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468720 +
jmp loc_439FA8  +
***
lea ecx [ebp-20h] +
jmp sub_40CAF0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46874C +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468778 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2940h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4687D0 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468824 +
jmp loc_439FA8  +
***
lea ecx [ebp-10h] +
jmp sub_405FD0  +
***
mov ecx [ebp-10h] +
jmp sub_4184D3  +
***
retn   +
***
mov ecx [ebp-10h] +
jmp sub_405FD0  +
***
mov ecx [ebp-12Ch] +
jmp sub_413D70  +
***
mov ecx [ebp-41Ch] +
lea ecx [ebp-418h] +
jmp sub_405FD0  +
***
lea ecx [ebp-10Ch] +
lea ecx [ebp-108h] +
jmp sub_405FD0  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-30h] +
lea ecx [ebp-34h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-2Ch] +
jmp loc_411190  +
***
mov ecx [ebp-14h] +
add ecx 4 +
jmp sub_41569B  +
***
retn   +
***
lea ecx [ebp-5Ch] +
call sub_436CA0  +
lea ecx [ebp-0B4h] +
jmp sub_425680  +
***
retn   +
***
lea ecx [ebp-94h] +
lea ecx [ebp-11Ch] +
lea ecx [ebp-118h] +
lea ecx [ebp-11Ch] +
jmp sub_405FD0  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-38h] +
jmp sub_42EFD3  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468E08 +
jmp loc_439FA8  +
***
lea ecx [ebp-64h] +
jmp sub_4179F1  +
***
mov ecx [ebp-10h] +
jmp sub_4179A8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_468EB8 +
jmp loc_439FA8  +
***
lea ecx [ebp-18h] +
lea ecx [ebp+0Ch] +
jmp sub_405FD0  +
***
lea ecx [ebp-2014h] +
jmp sub_405FD0  +
***
lea ecx [ebp-228h] +
lea ecx [ebp-224h] +
lea ecx [ebp-224h] +
jmp sub_405FD0  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-230h] +
lea ecx [ebp-228h] +
jmp sub_405FD0  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 74h +
jmp loc_419961  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4690BC +
jmp loc_439FA8  +
***
lea ecx [ebp-418h] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-420h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4694A8 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-50h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4693C4 +
jmp loc_439FA8  +
***
call sub_417A98  +
retn   +
***
lea ecx [ebp+0Ch] +
retn   +
***
lea ecx [ebp-90h] +
jmp sub_4179A8  +
***
retn   +
***
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-24h] +
jmp sub_4179A8  +
***
lea ecx [ebp-8Ch] +
jmp sub_41A9DA  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469340 +
jmp loc_439FA8  +
***
lea ecx [ebp+0Bh] +
jmp sub_41A8D3  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46920C +
jmp loc_439FA8  +
***
lea ecx [ebp-211h] +
jmp nullsub_1  +
***
call sub_436CA0  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp+0Bh] +
jmp nullsub_1  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_454466  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_405FD0  +
retn   +
***
lea ecx [ebp-10h] +
mov eax [ebp-14h] +
and eax 1 +
jz locret_4544A2  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_405FD0  +
retn   +
***
mov eax [ebp-10h] +
lea ecx [ebp-14h] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469644 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46969C +
jmp loc_439FA8  +
***
call nullsub_1  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46973C +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 38h +
jmp sub_42F404  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_4697D0 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 74h +
jmp sub_422B0C  +
***
retn   +
***
lea ecx [ebp+8] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp sub_405FD0  +
***
lea ecx [ebp-10h] +
lea ecx [ebp+8] +
lea ecx [ebp+8] +
jmp sub_405FD0  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp sub_405FD0  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-28h] +
mov eax [ebp-2Ch] +
lea ecx [ebp-24h] +
jmp sub_405FD0  +
***
mov eax [ebp-10h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-18h] +
jmp sub_405FD0  +
***
lea ecx [ebp-14h] +
jmp sub_405FD0  +
***
call nullsub_1  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-10h] +
lea ecx [ebp-20h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-20h] +
jmp sub_405FD0  +
***
lea ecx [ebp-444h] +
lea ecx [ebp-438h] +
jmp loc_418B12  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp sub_405FD0  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
jmp sub_405FD0  +
***
lea ecx [ebp-248h] +
lea ecx [ebp-244h] +
lea ecx [ebp-248h] +
lea ecx [ebp-244h] +
lea ecx [ebp-250h] +
lea ecx [ebp-264h] +
lea ecx [ebp-260h] +
lea ecx [ebp-25Ch] +
jmp sub_405FD0  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
jmp sub_405FD0  +
***
push 4  +
lea eax [ebp-10h] +
push eax  +
call sub_4373F9  +
retn   +
***
push 4  +
push 4  +
lea eax [ebp-10h] +
push eax  +
call sub_4373F9  +
retn   +
***
push 4  +
lea eax [ebp-14h] +
push eax  +
call sub_4373F9  +
retn   +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp sub_405FD0  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-14h] +
jmp sub_405FD0  +
***
mov ecx [ebp-10h] +
jmp sub_42F8F7  +
***
mov ecx [ebp-10h] +
lea ecx [ebp+8] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469DD4 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 24h +
jmp sub_42F404  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469EB8 +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A0B4 +
jmp loc_439FA8  +
***
lea ecx [ebp-74h] +
lea ecx [ebp-78h] +
lea ecx [ebp-0ACh] +
jmp sub_417A47  +
***
retn   +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp+0Ch] +
jmp sub_405FD0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469F44 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469E84 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_469FD8 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A088 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0A4h +
jmp sub_405FD0  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A838 +
jmp loc_439FA8  +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
jmp sub_405FD0  +
***
lea ecx [ebp-40h] +
jmp sub_417957  +
***
lea ecx [ebp-70h] +
jmp sub_425B55  +
***
call sub_436CA0  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A3FC +
jmp loc_439FA8  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A560 +
jmp loc_439FA8  +
***
retn   +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-40h] +
xor ecx eax +
call sub_436C8F  +
mov ecx [edx-4] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A5B8 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A204 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A2E8 +
jmp loc_439FA8  +
***
lea ecx [ebp-3Ch] +
jmp loc_40EDC0  +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A51C +
jmp loc_439FA8  +
***
lea ecx [ebp-28h] +
jmp sub_417957  +
***
lea ecx [ebp-4Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-3Ch] +
jmp loc_40EDC0  +
***
lea ecx [ebp-48h] +
lea ecx [ebp-58h] +
jmp loc_40EDC0  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-74h] +
lea ecx [ebp-44h] +
jmp loc_40EDC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46A750 +
jmp loc_439FA8  +
***
mov ecx [ebp-10h] +
jmp loc_42E947  +
***
lea ecx [ebp-234h] +
jmp sub_42E921  +
***
lea ecx [ebp-0Dh] +
jmp nullsub_1  +
***
lea ecx [ebp-418h] +
jmp sub_405FD0  +
***
mov ecx [ebp-10h] +
add ecx 10h +
jmp sub_405FD0  +
***
mov ecx [ebp-41Ch] +
lea ecx [ebp-418h] +
jmp sub_405FD0  +
***
lea ecx [ebp-26Ch] +
jmp sub_405FD0  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
jmp sub_405FD0  +
***
retn   +
***
retn   +
***
lea ecx [ebp-28h] +
retn   +
***
retn   +
***
lea ecx [ebp+10h] +
lea ecx [ebp-10h] +
jmp sub_405FD0  +
***
mov eax [ebp-244h] +
and eax 1 +
jz locret_45534F  +
and dword ptr [ebp-244h] 0FFFFFFFEh +
mov ecx [ebp-248h] +
jmp sub_405FD0  +
retn   +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 70h +
jmp sub_405FD0  +
***
lea ecx [ebp-18h] +
jmp loc_432D24  +
***
lea ecx [ebp+8] +
jmp sub_405FD0  +
***
imul ecx [ebp-1Ch] +
mov eax [ebp-14h] +
mov eax [ebp-24h] +
mov eax [ebp-14h] +
mov eax [ebp-24h] +
mov eax [ebp-14h] +
and eax 4 +
jz locret_4554E4  +
and dword ptr [ebp-14h] 0FFFFFFFBh +
lea ecx [ebp+0Ch] +
jmp sub_405FD0  +
retn   +
***
lea ecx [ebp-9Ch] +
jmp sub_432CB5  +
***
lea ecx [ebp+0Ch] +
jmp sub_405FD0  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 18h +
jmp sub_405FD0  +
***
lea ecx [ebp-15h] +
lea ecx [ebp-60h] +
jmp loc_4339C4  +
***
lea ecx [ebp-20h] +
jmp loc_4339C9  +
***
lea ecx [ebp-50h] +
lea ecx [ebp-64h] +
lea ecx [ebp-30h] +
retn   +
***
lea ecx [ebp+0Bh] +
jmp nullsub_1  +
***
lea ecx [ebp+0Bh] +
jmp nullsub_1  +
***
lea ecx [ebp+0Bh] +
jmp nullsub_1  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46AFCC +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46B084 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46B134 +
jmp loc_439FA8  +
***
retn   +
***
retn   +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46B1C0 +
jmp loc_439FA8  +
***
lea ecx [ebp-0F4h] +
jmp sub_436907  +
***
lea ecx [ebp-0F4h] +
jmp sub_436907  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F8h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46B2E0 +
jmp loc_439FA8  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_436C8F  +
mov eax offset unk_46B568 +
jmp loc_439FA8  +
***
cmp dword_473C30 8 +
jb loc_4557E2  +
mov ecx dword_473C1C +
push ecx  +
call nullsub_2  +
mov eax dword_473C30 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473C30 7 +
mov dword_473C2C 0 +
mov ecx offset dword_473B50 +
mov word ptr dword_473C1C ax +
jmp sub_4146DB  +
***
cmp dword_473B44 0 +
jz locret_45585B  +
call nullsub_1  +
sub esp 8 +
call nullsub_3  +
mov eax dword_473B4C +
mov ecx dword_473B44 +
sub eax ecx +
sar eax 2 +
push eax  +
push ecx  +
call loc_402880  +
mov dword_473B44 0 +
mov dword_473B48 0 +
mov dword_473B4C 0 +
retn   +
***
cmp dword_473C48 8 +
jb loc_455882  +
mov ecx dword_473C34 +
push ecx  +
call nullsub_2  +
mov eax dword_473C48 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473C48 7 +
mov dword_473C44 0 +
mov word ptr dword_473C34 ax +
retn   +
***
jmp loc_40A8F0  +
***
push ecx  +
mov eax dword_473D70 +
mov ecx offset dword_473D70 +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_403590  +
mov eax dword_473D70 +
push ecx  +
call nullsub_2  +
push ecx  +
call nullsub_2  +
push ecx  +
call nullsub_2  +
push eax  +
call sub_413A17  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword_473C64 8 +
mov dword_473C4C offset off_462490 +
jb loc_45591C  +
mov ecx dword_473C50 +
push ecx  +
call nullsub_2  +
mov eax dword_473C64 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473C64 7 +
mov dword_473C60 0 +
mov word ptr dword_473C50 ax +
retn   +
***
cmp dword_473C80 8 +
mov dword_473C68 offset off_462490 +
jb loc_45596C  +
mov ecx dword_473C6C +
push ecx  +
call nullsub_2  +
mov eax dword_473C80 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473C80 7 +
mov dword_473C7C 0 +
mov word ptr dword_473C6C ax +
retn   +
***
cmp dword_473C9C 8 +
mov dword_473C84 offset off_462490 +
jb loc_4559BC  +
mov ecx dword_473C88 +
push ecx  +
call nullsub_2  +
mov eax dword_473C9C +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473C9C 7 +
mov dword_473C98 0 +
mov word ptr dword_473C88 ax +
retn   +
***
cmp dword_473CB8 8 +
mov dword_473CA0 offset off_462490 +
jb loc_455A0C  +
mov ecx dword_473CA4 +
push ecx  +
call nullsub_2  +
mov eax dword_473CB8 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473CB8 7 +
mov dword_473CB4 0 +
mov word ptr dword_473CA4 ax +
retn   +
***
cmp dword_473CD4 8 +
mov dword_473CBC offset off_462490 +
jb loc_455A5C  +
mov ecx dword_473CC0 +
push ecx  +
call nullsub_2  +
mov eax dword_473CD4 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473CD4 7 +
mov dword_473CD0 0 +
mov word ptr dword_473CC0 ax +
retn   +
***
cmp dword_473CF0 8 +
mov dword_473CD8 offset off_462490 +
jb loc_455AAC  +
mov ecx dword_473CDC +
push ecx  +
call nullsub_2  +
mov eax dword_473CF0 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473CF0 7 +
mov dword_473CEC 0 +
mov word ptr dword_473CDC ax +
retn   +
***
cmp dword_473D0C 8 +
mov dword_473CF4 offset off_462490 +
jb loc_455AFC  +
mov ecx dword_473CF8 +
push ecx  +
call nullsub_2  +
mov eax dword_473D0C +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473D0C 7 +
mov dword_473D08 0 +
mov word ptr dword_473CF8 ax +
retn   +
***
cmp dword_473D28 8 +
mov dword_473D10 offset off_462490 +
jb loc_455B4C  +
mov ecx dword_473D14 +
push ecx  +
call nullsub_2  +
mov eax dword_473D28 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473D28 7 +
mov dword_473D24 0 +
mov word ptr dword_473D14 ax +
retn   +
***
cmp dword_473D44 8 +
mov dword_473D2C offset off_462490 +
jb loc_455B9C  +
mov ecx dword_473D30 +
push ecx  +
call nullsub_2  +
mov eax dword_473D44 +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473D44 7 +
mov dword_473D40 0 +
mov word ptr dword_473D30 ax +
retn   +
***
cmp dword_473D5C 8 +
jb loc_455BE2  +
mov ecx dword_473D48 +
push ecx  +
call nullsub_2  +
mov eax dword_473D5C +
inc eax  +
push eax  +
push ecx  +
call loc_402950  +
xor eax eax +
mov dword_473D5C 7 +
mov dword_473D58 0 +
mov word ptr dword_473D48 ax +
retn   +
***
mov ecx offset unk_470D38 +
jmp loc_420F1C  +
***
mov ecx offset unk_470D34 +
jmp loc_420F1C  +
***
mov off_46E2E0 offset off_456F7C +
retn   +
***
mov off_46E1C8 offset off_456F7C +
retn   +
***
mov off_46E0B0 offset off_456F7C +
retn   +
***
mov dword_470D40 offset off_456F7C +
retn   +
***
mov dword_470E58 offset off_456F7C +
retn   +
***
mov ecx offset unk_470F7C +
jmp loc_420F1C  +
***
mov ecx offset unk_470F78 +
jmp sub_420F43  +
***
mov ecx offset unk_472810 +
jmp sub_41A9DA  +
***
mov ecx offset unk_472910 +
jmp sub_41A9DA  +
***
mov ecx offset unk_472790 +
jmp sub_41A9DA  +
***
mov ecx offset unk_472890 +
jmp sub_41A9DA  +
***
mov ecx offset unk_4729A0 +
jmp loc_420F1C  +
***
mov ecx offset dword_472A40 +
jmp loc_420F1C  +
***
mov ecx offset dword_472A80 +
jmp loc_42EDFD  +
***
mov ecx offset unk_472D74 +
jmp loc_420F1C  +
***
mov ecx offset unk_4730FC +
jmp loc_437E2E  +
***
