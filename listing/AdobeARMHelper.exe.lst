mov ecx offset unk_451808 +
call loc_410821  +
push offset loc_43AB50  +
call sub_41F478  +
pop ecx  +
retn   +
***
mov ecx offset unk_451838 +
call sub_403C53  +
push offset sub_43AB80  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_4020ED  +
push offset sub_43AB90  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_4020ED  +
push offset sub_43ABA0  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_4020ED  +
push offset sub_43ABB0  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_4020ED  +
push offset sub_43ABC0  +
call sub_41F478  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
retn   +
***
mov dword_453104 eax +
retn   +
***
call sub_412D01  +
push offset loc_43AC10  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_412D01  +
push offset loc_43AC20  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_412D01  +
push offset loc_43AC30  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_412D01  +
push offset loc_43AC40  +
call sub_41F478  +
pop ecx  +
retn   +
***
mov Msg eax +
retn   +
***
mov dword_45330C eax +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov ecx offset dword_453388 +
call sub_419FC3  +
push offset loc_43AC80  +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_40FC30  +
and dword_4535E4 0 +
and dword_4535E8 0 +
push offset loc_43AC90  +
mov dword_4535D8 offset off_443DB4 +
mov dword_4536EC 0F022h +
call sub_41F478  +
pop ecx  +
retn   +
***
call sub_40FC30  +
and dword_4536FC 0 +
and dword_453700 0 +
push offset loc_43ACA0  +
mov dword_4536F0 offset off_443DEC +
mov dword_453804 0F024h +
call sub_41F478  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov ecx offset unk_453BC0 +
call sub_4202B2  +
push offset loc_43ACC0  +
call sub_41F478  +
pop ecx  +
retn   +
***
push ebx  +
push edi  +
call sub_41EF70  +
mov edi [ebp+8] +
xor ebx ebx +
mov eax [ebp+0Ch] +
mov [ebp-60h] edi +
mov [ebp-5Ch] edi +
mov [ebp-58h] eax +
mov dword ptr [edi] offset off_43BFE0 +
mov [edi+48h] bl +
mov dword ptr [edi+4Ch] 7 +
call sub_410279  +
push eax  +
lea ecx [edi+50h] +
call sub_401330  +
mov [ebp-4] ebx +
call sub_410279  +
push eax  +
lea ecx [edi+54h] +
call sub_401330  +
mov byte ptr [ebp-4] 1 +
call sub_410279  +
push eax  +
lea ecx [edi+58h] +
call sub_401330  +
mov byte ptr [ebp-4] 2 +
call sub_410279  +
push eax  +
lea ecx [edi+5Ch] +
call sub_401330  +
mov eax [ebp+10h] +
mov byte ptr [ebp-4] 3 +
test al al +
jz loc_40149B  +
push eax  +
call ds:GetSidLengthRequired  +
cmp eax 44h +
ja loc_40149B  +
push dword ptr [ebp+10h]  +
lea eax [ebp-54h] +
push dword ptr [ebp-58h]  +
push eax  +
call ds:InitializeSid  +
test eax eax +
jz loc_4014A5  +
mov eax [ebp+10h] +
movzx eax al +
test eax eax +
jz loc_401481  +
lea esi [ebp+10h] +
mov edi eax +
push ebx  +
lea eax [ebp-54h] +
push eax  +
lea esi [esi+4] +
call ds:GetSidSubAuthority  +
mov ecx eax +
inc ebx  +
mov eax [esi] +
mov [ecx] eax +
cmp ebx edi +
jb loc_401465  +
mov edi [ebp-5Ch] +
lea eax [ebp-54h] +
mov ecx edi +
push eax  +
call sub_401674  +
mov dword ptr [edi+4Ch] 8 +
mov eax edi +
call sub_41EF1A  +
retn   +
push 80070057h  +
call sub_4015BA  +
call sub_4015D4  +
int 3  +
mov ecx [ecx] +
sub ecx 10h +
jmp sub_401A64  +
***
mov dword ptr [ecx] offset off_43BFF4 +
mov ecx [esi+5Ch] +
sub ecx 10h +
mov dword ptr [esi] offset off_43BFE0 +
call sub_401A64  +
mov ecx [esi+58h] +
sub ecx 10h +
call sub_401A64  +
mov ecx [esi+54h] +
sub ecx 10h +
call sub_401A64  +
mov ecx [esi+50h] +
sub ecx 10h +
pop esi  +
jmp sub_401A64  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_43BFE8 +
call sub_401630  +
test [ebp+arg_0] 1 +
jz loc_401521  +
push 10h  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_43BFF4 +
jz loc_40154F  +
push 20Ch  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push 220h  +
call ds:GetLastError  +
cmp [ebp+arg_0] 8007000Eh +
call ds:GetLastError  +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_401620  +
lea eax [ebp+var_4] +
push eax  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
push dword ptr [ecx+4]  +
call ds:CheckTokenMembership  +
test eax eax +
jz loc_401620  +
cmp [ebp+var_4] 0 +
setnz al  +
mov [esi] al +
mov al 1 +
jmp loc_401622  +
xor al al +
pop esi  +
leave   +
retn 8  +
***
cmp dword ptr [esi+8] 0 +
push esi  +
push ecx  +
call sub_41EF70  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
or eax 0FFFFFFFFh +
push ecx  +
sub esp 4Ch +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
test edx edx +
jz loc_401D41  +
mov eax [ebp+arg_C] +
mov edi [ebp+arg_10] +
sub eax ecx +
test edi edi +
jz loc_401D41  +
movzx ebx word ptr [eax+ecx] +
test bx bx +
jz loc_401D41  +
mov [ecx] bx +
add ecx 2 +
dec edi  +
inc esi  +
sub edx 1 +
jnz loc_401D27  +
xor eax eax +
mov edi 8007007Ah +
test edx edx +
cmovnz edi eax +
lea eax [ecx-2] +
cmovnz eax ecx +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_401D69  +
test edx edx +
lea ecx [esi-1] +
cmovnz ecx esi +
mov [eax] ecx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
push ecx  +
push ecx  +
cmp [ebp+arg_0] 0 +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp+var_8] esi +
jl loc_401E21  +
push 1  +
push [ebp+arg_0]  +
lea eax [ebp+arg_0] +
push eax  +
call sub_402012  +
add esp 0Ch +
test eax eax +
js loc_401E21  +
mov eax [ebp+arg_0] +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
cmp eax ebx +
jg loc_401E21  +
push [ebp+arg_4]  +
lea eax [ebp+var_4] +
push ebx  +
push eax  +
call sub_40205B  +
add esp 0Ch +
test eax eax +
js loc_401E21  +
push [ebp+var_4]  +
lea eax [ebp+var_4] +
push 10h  +
push eax  +
call sub_402038  +
add esp 0Ch +
test eax eax +
js loc_401E21  +
push edi  +
mov edi [esi+4] +
push [ebp+var_4]  +
mov eax [edi] +
mov esi [eax] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
test eax eax +
jz loc_401E21  +
mov ecx [ebp+var_8] +
and dword ptr [eax+4] 0 +
mov [eax] ecx +
lea ecx [ebx-1] +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] ecx +
jmp loc_401E23  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push esi  +
push edi  +
mov edi [ecx+4] +
push [ebp+arg_0]  +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
cmp [ebp+arg_4] 0 +
push ebx  +
push edi  +
mov edi ecx +
jl loc_401EE1  +
push 1  +
push [ebp+arg_4]  +
lea eax [ebp+arg_4] +
push eax  +
call sub_402012  +
add esp 0Ch +
test eax eax +
js loc_401EE1  +
mov eax [ebp+arg_4] +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
cmp eax ebx +
jg loc_401EE1  +
push [ebp+arg_8]  +
lea eax [ebp+var_4] +
push ebx  +
push eax  +
call sub_40205B  +
add esp 0Ch +
test eax eax +
js loc_401EE1  +
push [ebp+var_4]  +
lea eax [ebp+var_4] +
push 10h  +
push eax  +
call sub_402038  +
add esp 0Ch +
test eax eax +
js loc_401EE1  +
mov edi [edi+4] +
push esi  +
push [ebp+var_4]  +
mov eax [edi] +
push [ebp+arg_0]  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
test eax eax +
jz loc_401EE1  +
lea ecx [ebx-1] +
mov [eax+8] ecx +
jmp loc_401EE3  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
jz loc_401F26  +
push 1Ch  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push [ebp+dwBytes]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
cmp [ebp+lpMem] 0 +
jz loc_401F67  +
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_401F93  +
mov eax [edi] +
push [ebp+dwBytes]  +
mov esi [eax] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_401FBE  +
cmp [ebp+dwBytes] 0 +
jnz loc_401FAF  +
mov eax [edi] +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor eax eax +
jmp loc_401FBE  +
push [ebp+dwBytes]  +
push ecx  +
push 0  +
push dword ptr [edi+4]  +
call ds:HeapReAlloc  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
push esi  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_8] +
call sub_41EF3C  +
mov eax [ebp+arg_0] +
call sub_41EF3C  +
mov esi ecx +
mov [ebp-10h] esi +
call sub_40FC3F  +
mov dword ptr [esi] offset off_43C0F0 +
call sub_410279  +
push eax  +
lea ecx [esi+10h] +
call sub_401330  +
mov eax [ebp+8] +
xor ecx ecx +
mov [esi+8] eax +
mov eax [ebp+0Ch] +
mov [ebp-4] ecx +
mov [esi+0Ch] eax +
cmp [ebp+10h] ecx +
jz loc_4021B6  +
push dword ptr [ebp+10h]  +
call loc_42412E  +
pop ecx  +
mov ecx eax +
push ecx  +
push dword ptr [ebp+10h]  +
lea ecx [esi+10h] +
call sub_4035FE  +
mov eax esi +
call sub_41EF05  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
cmp byte ptr [ecx+8] 0 +
mov eax [ebp+arg_0] +
call sub_41EF3C  +
call sub_41EF3C  +
mov ebx [ebp+0Ch] +
xor esi esi +
mov ecx ebx +
mov [ebp-4] esi +
mov [ebp-10h] esi +
call sub_402954  +
mov ecx [ebp+8] +
push eax  +
call sub_401330  +
mov [ebp-4] esi +
mov dword ptr [ebp-10h] 1 +
cmp [ebp+10h] esi +
jz loc_4022EF  +
push dword ptr [ebp+10h]  +
call loc_42412E  +
pop ecx  +
mov esi eax +
mov ecx [ebx] +
push esi  +
push dword ptr [ebp+10h]  +
push dword ptr [ecx-0Ch]  +
push ecx  +
push dword ptr [ebp+8]  +
call sub_4024CD  +
mov eax [ebp+8] +
add esp 14h +
call sub_41EF05  +
retn   +
***
push esi  +
mov eax [ebp+arg_0] +
sub esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_C] +
mov eax [ebp+arg_C] +
mov eax [ebp+arg_C] +
mov edi ecx +
cmp [ebp+arg_0] 0 +
sub esp 10h +
call sub_41EF3C  +
push ecx  +
sub esp 21Ch +
mov eax large fs:2Ch +
mov eax [ecx] +
call sub_402931  +
push esi  +
sub esp 14h +
push esi  +
push esi  +
push ebx  +
call sub_41EFDE  +
call sub_41EF3C  +
push ecx  +
push esi  +
cmp [ebp+arg_0] 0 +
push ebx  +
mov eax [ebp+arg_0] +
sub esp 24h +
push ebx  +
mov edi ecx +
mov edx [ebp+arg_0] +
push ecx  +
int 3  +
***
push esi  +
push 0  +
push [ebp+arg_C]  +
mov eax [ebp+arg_C] +
push [ebp+arg_C]  +
push [ebp+arg_10]  +
push esi  +
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_403786  +
add esp 14h +
pop ebp  +
retn   +
***
push esi  +
push ecx  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
mov eax [ebp+arg_4] +
sub esp 0Ch +
push esi  +
push esi  +
push ecx  +
push ecx  +
mov edx [ebp+arg_4] +
mov edx [ebp+arg_4] +
push esi  +
push esi  +
mov edx [ecx+4] +
call sub_41EF3C  +
call sub_41EF3C  +
mov esi ecx +
mov [ebp-10h] esi +
push offset aAdobearm_exe_1  +
lea ecx [esi+4] +
mov dword ptr [esi] offset off_43C350 +
call sub_403C0F  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+8] +
push offset aAdobeAcrobat_0  +
call sub_403C0F  +
push offset aAdobeReader_0  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_403C0F  +
push offset aAdobeAcrobatUp  +
lea ecx [esi+10h] +
mov byte ptr [ebp-4] 2 +
call sub_403C0F  +
push offset aAdobeReaderUpd  +
lea ecx [esi+14h] +
mov byte ptr [ebp-4] 3 +
call sub_403C0F  +
push offset a1_8_0_0  +
lea ecx [esi+18h] +
mov byte ptr [ebp-4] 4 +
call sub_403C0F  +
push offset aAdobearmhelper  +
lea ecx [esi+1Ch] +
mov byte ptr [ebp-4] 5 +
call sub_403C0F  +
push offset aAdobearm_msi  +
lea ecx [esi+20h] +
mov byte ptr [ebp-4] 6 +
call sub_403C0F  +
push offset aAdobearm  +
lea ecx [esi+24h] +
mov byte ptr [ebp-4] 7 +
call sub_403C0F  +
push offset aArmmanifest3_m  +
lea ecx [esi+28h] +
mov byte ptr [ebp-4] 8 +
call sub_403C0F  +
push offset aThsnyavieboda  +
lea ecx [esi+2Ch] +
mov byte ptr [ebp-4] 9 +
call sub_403C0F  +
push offset aHttpsArmmf_ado  +
lea ecx [esi+30h] +
mov byte ptr [ebp-4] 0Ah +
call sub_403C0F  +
push offset aHttpWww_adobe_  +
lea ecx [esi+34h] +
mov byte ptr [ebp-4] 0Bh +
call sub_403C0F  +
push offset aHttpWww_adob_0  +
lea ecx [esi+38h] +
mov byte ptr [ebp-4] 0Ch +
call sub_403C0F  +
push offset aSoftwareAdob_8  +
lea ecx [esi+3Ch] +
mov byte ptr [ebp-4] 0Dh +
call sub_403C0F  +
push offset aSoftwareAdob_9  +
lea ecx [esi+40h] +
mov byte ptr [ebp-4] 0Eh +
call sub_403C0F  +
mov byte ptr [ebp-4] 0Fh +
push offset aSoftwareAdo_10  +
lea ecx [esi+44h] +
call sub_403C0F  +
push offset aIloglevel  +
lea ecx [esi+48h] +
mov byte ptr [ebp-4] 10h +
call sub_403C0F  +
push offset aIdebugarm  +
lea ecx [esi+4Ch] +
mov byte ptr [ebp-4] 11h +
call sub_403C0F  +
push offset aIcanexit  +
lea ecx [esi+50h] +
mov byte ptr [ebp-4] 12h +
call sub_403C0F  +
push offset aSoftwareMicr_0  +
lea ecx [esi+54h] +
mov byte ptr [ebp-4] 13h +
call sub_403C0F  +
push offset aTupgradecache  +
lea ecx [esi+58h] +
mov byte ptr [ebp-4] 14h +
call sub_403C0F  +
push offset aIstarttimedays  +
lea ecx [esi+5Ch] +
mov byte ptr [ebp-4] 15h +
call sub_403C0F  +
push offset aForceerror  +
lea ecx [esi+60h] +
mov byte ptr [ebp-4] 16h +
call sub_403C0F  +
mov eax esi +
call sub_41EF05  +
retn   +
***
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_403E70  +
mov dword ptr [esi] offset off_43C8DC +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
and dword ptr [ecx+4] 0 +
mov eax ecx +
and dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] offset aBadArrayNewLen +
mov dword ptr [ecx] offset off_43C8E8 +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_43C8BC +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
push eax  +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call sub_421976  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
jmp loc_40BDBD  +
***
push edi  +
mov eax [esi+4] +
mov dword ptr [esi] offset off_43C90C +
test eax eax +
jz loc_403FC5  +
cmp eax 0FFFFFFFFh +
jz loc_403FC5  +
push eax  +
call ds:CloseHandle  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
cmp dword ptr [ecx] 0 +
jz locret_403FD3  +
push dword ptr [ecx]  +
call MsiCloseHandle  +
retn   +
***
lea eax [ecx+4] +
cmp [ebp+lpMultiByteStr] 0 +
mov eax [ebp+arg_4] +
call sub_41EF3C  +
mov ebx [ebp+10h] +
xor esi esi +
mov ecx ebx +
mov [ebp-4] esi +
mov [ebp-10h] esi +
call sub_402954  +
mov ecx [ebp+8] +
push eax  +
call sub_401330  +
mov eax [ebx] +
mov [ebp-4] esi +
mov dword ptr [ebp-10h] 1 +
mov ecx [eax-0Ch] +
mov [ebp-14h] ecx +
cmp [ebp+0Ch] esi +
jz loc_4040BB  +
push dword ptr [ebp+0Ch]  +
call loc_42412E  +
pop ecx  +
mov ecx [ebp-14h] +
mov esi eax +
mov eax [ebx] +
push ecx  +
push eax  +
push esi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4024CD  +
mov eax [ebp+8] +
add esp 14h +
call sub_41EF05  +
retn   +
***
push esi  +
mov esi ecx +
call sub_403FA5  +
test [ebp+arg_0] 1 +
jz loc_4040FB  +
push 8  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF70  +
xor eax eax +
push ecx  +
call sub_41EF70  +
push ecx  +
push esi  +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF3C  +
mov eax [ebp+arg_0] +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF3C  +
sub esp 210h +
mov edx [ebp+arg_0] +
xor eax eax +
call sub_41EF3C  +
call sub_41EF70  +
push ecx  +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF70  +
sub esp 0Ch +
sub esp 0Ch +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF70  +
push ecx  +
call sub_41F490  +
xor esi esi +
test edi edi +
call sub_41EF3C  +
call sub_41EF70  +
call sub_41EF70  +
call sub_41EF3C  +
xor esi esi +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
add ecx 4 +
call sub_41EF70  +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF70  +
sub esp 120h +
call sub_41EF70  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF70  +
push ecx  +
push ecx  +
call sub_41EF3C  +
call sub_41EF70  +
push ecx  +
push esi  +
call sub_41EF3C  +
call sub_41EF70  +
sub esp 1Ch +
sub esp 0Ch +
call sub_41EF3C  +
sub esp 0Ch +
push ecx  +
call sub_41EF3C  +
mov ecx [ebp+arg_4] +
call sub_41EF3C  +
push 12h  +
call sub_41EF70  +
call sub_41EF3C  +
mov eax [ebp+arg_4] +
mov edx [ecx+8] +
mov edx [ecx+8] +
push esi  +
push esi  +
sub esp 0Ch +
lea ecx [ebp+var_C] +
call sub_403E4B  +
push offset unk_44C3B0  +
lea eax [ebp+var_C] +
push eax  +
call sub_4219F8  +
int 3  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_40BDE1  +
mov eax [esi+8] +
sub eax [esi] +
and eax 0FFFFFFFCh +
push eax  +
push dword ptr [esi]  +
call sub_40390E  +
xor eax eax +
mov [esi] eax +
pop ecx  +
mov [esi+4] eax +
pop ecx  +
mov [esi+8] eax +
pop esi  +
retn   +
***
int 3  +
***
mov eax [ebp+arg_0] +
cmp eax 3FFFFFFFh +
ja loc_40BE2F  +
shl eax 2 +
push eax  +
call sub_403898  +
pop ecx  +
pop ebp  +
retn 4  +
call sub_40BDA0  +
int 3  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp eax 7FFFFFFFh +
ja loc_40BE4F  +
add eax eax +
push eax  +
call sub_403898  +
pop ecx  +
pop ebp  +
retn 4  +
***
call sub_40BDA0  +
sub esp 22Ch +
push ecx  +
mov dword ptr [ecx] offset off_440448 +
mov ecx [ecx+4] +
sub ecx 10h +
jmp sub_401A64  +
***
push esi  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
push ecx  +
sub esp 0Ch +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
xor eax eax +
and dword ptr [esi+10h] 0 +
mov dword ptr [esi+14h] 7 +
mov [esi] ax +
call loc_42412E  +
pop ecx  +
push eax  +
push [ebp+arg_0]  +
mov ecx esi +
call sub_40E2E1  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
call sub_41EF70  +
push ebx  +
mov eax [ebp+arg_4] +
push ecx  +
push ecx  +
sub esp 28h +
push ecx  +
sub esp 90h +
mov eax 1030h +
mov eax [esi] +
sub esp 0Ch +
call sub_41EF70  +
call sub_41EF70  +
sub esp 120h +
call sub_41EF70  +
mov eax [ebp+arg_0] +
call sub_41EF70  +
call sub_41EF70  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push esi  +
mov eax [esi+14h] +
int 3  +
***
push ecx  +
push ecx  +
push [ebp+arg_10]  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_41EF3C  +
mov eax [ebp+arg_4] +
push ecx  +
cmp [ebp+arg_0] 0 +
push ebx  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
cmp eax 61h +
ja loc_40E840  +
jmp ds:off_40E847[eax*4]  +
mov eax offset a1_2_840_113549 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_0 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_1 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_2 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_3 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_4 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_5 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_6 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_7 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_8 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1135_9 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_10 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_11 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_12 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_13 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_14 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_15 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_16 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_17 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_18 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_19 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_20 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_21 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_22 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_23 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_24 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_25 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_26 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_27 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_28 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_29 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_30 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_31 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_32 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_33 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_34 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_35 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_36 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_37 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_38 +
pop ebp  +
retn   +
mov eax offset String2 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_40 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_41 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_42 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_43 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_44 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_45 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_46 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_47 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_48 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_49 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_50 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_51 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_52 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_53 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_54 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_55 +
pop ebp  +
retn   +
mov eax offset a1_2_840_113_56 +
pop ebp  +
retn   +
mov eax offset a1_2_840_10046 +
pop ebp  +
retn   +
mov eax offset a1_2_840_10046_ +
pop ebp  +
retn   +
mov eax offset a1_2_840_10040 +
pop ebp  +
retn   +
mov eax offset a1_2_840_10040_ +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_0 +
pop ebp  +
retn   +
mov eax offset a1_2_840_10045_ +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_1 +
pop ebp  +
retn   +
mov eax offset a1_3_132_0_34 +
pop ebp  +
retn   +
mov eax offset a1_3_132_0_35 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_2 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_3 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_4 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_5 +
pop ebp  +
retn   +
mov eax offset a1_2_840_1004_6 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_101 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_0 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_1 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_2 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_3 +
pop ebp  +
retn   +
mov eax offset a1_3_133_16_840 +
pop ebp  +
retn   +
mov eax offset a1_3_132_1_11_1 +
pop ebp  +
retn   +
mov eax offset a1_3_132_1_11_2 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_13 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_15 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_18 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_21 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_23 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_24 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_25 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_26 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_27 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_28 +
pop ebp  +
retn   +
mov eax offset a1_3_14_3_2_29 +
pop ebp  +
retn   +
mov eax offset a1_3_14_7_2_2 +
pop ebp  +
retn   +
mov eax offset a1_3_14_7_2_3_1 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_4 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_5 +
pop ebp  +
retn   +
mov eax offset a2_16_840_1_1_6 +
pop ebp  +
retn   +
mov eax offset a2_5_8_2 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
call sub_402931  +
push ecx  +
sub esp 1Ch +
mov eax [ebp+arg_4] +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [eax] esi +
mov eax [ebp+arg_8] +
mov [ebp+pcbStructInfo] esi +
mov [ebp+hCryptMsg] esi +
mov [ebp+var_C] esi +
mov [eax] esi +
cmp [edi+3Ch] esi +
jbe loc_40ECBF  +
push ebx  +
mov ebx esi +
mov eax [edi+40h] +
push offset String2  +
push dword ptr [ebx+eax]  +
call ds:lstrcmpA  +
mov ecx [edi+40h] +
test eax eax +
jz loc_40EC42  +
push offset a1_3_6_1_4_1__0  +
push dword ptr [ebx+ecx]  +
call ds:lstrcmpA  +
test eax eax +
jz loc_40EB9A  +
mov eax [ebp+var_C] +
add ebx 0Ch +
inc eax  +
mov [ebp+var_C] eax +
cmp eax [edi+3Ch] +
jb loc_40EB58  +
jmp loc_40ECAF  +
imul edx [ebp+var_C] +
mov ecx [edi+40h] +
push esi  +
mov eax [edx+ecx+8] +
mov eax [eax] +
mov [ebp+var_1C] eax +
mov eax [edx+ecx+8] +
mov eax [eax+4] +
mov [ebp+var_18] eax +
lea eax [ebp+hCryptMsg] +
push eax  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
mov [ebp+var_14] esi +
push eax  +
lea eax [ebp+var_10] +
mov [ebp+var_10] esi +
push eax  +
lea eax [ebp+var_14] +
mov [ebp+var_C] esi +
push eax  +
push esi  +
push 2  +
push 3FFEh  +
lea eax [ebp+var_1C] +
push eax  +
push 2  +
call ds:CryptQueryObject  +
test eax eax +
jz loc_40ECAF  +
cmp [ebp+hCryptMsg] esi +
jz loc_40ECBE  +
lea eax [ebp+pcbStructInfo] +
push eax  +
push esi  +
push esi  +
push 6  +
push [ebp+hCryptMsg]  +
call ds:CryptMsgGetParam  +
test eax eax +
jz loc_40ECAF  +
push [ebp+pcbStructInfo]  +
push 40h  +
call ds:LocalAlloc  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
test eax eax +
jz loc_40ECAF  +
lea ecx [ebp+pcbStructInfo] +
push ecx  +
push eax  +
push esi  +
push 6  +
push [ebp+hCryptMsg]  +
call ds:CryptMsgGetParam  +
xor ecx ecx +
inc ecx  +
test eax eax +
cmovnz esi ecx +
jmp loc_40ECAF  +
imul edx [ebp+var_C] +
lea eax [ebp+pcbStructInfo] +
push eax  +
mov eax [ebx+ecx+8] +
mov ebx 1F4h +
push esi  +
push esi  +
mov [ebp+var_14] edx +
push dword ptr [eax]  +
mov eax [edx+ecx+8] +
push dword ptr [eax+4]  +
push ebx  +
push 10001h  +
call ds:CryptDecodeObject  +
test eax eax +
jz loc_40ECAF  +
push [ebp+pcbStructInfo]  +
push 40h  +
call ds:LocalAlloc  +
mov edx eax +
mov eax [ebp+arg_4] +
mov [eax] edx +
test edx edx +
jz loc_40ECAF  +
mov eax [edi+40h] +
mov ecx [ebp+var_14] +
mov ecx [ecx+eax+8] +
lea eax [ebp+pcbStructInfo] +
push eax  +
push edx  +
push esi  +
push dword ptr [ecx]  +
push dword ptr [ecx+4]  +
push ebx  +
push 10001h  +
call ds:CryptDecodeObject  +
test eax eax +
jz loc_40ECAF  +
xor esi esi +
inc esi  +
cmp [ebp+hCryptMsg] 0 +
jz loc_40ECBE  +
push [ebp+hCryptMsg]  +
call ds:CryptMsgClose  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
call sub_41EF3C  +
pop ebp  +
push esi  +
push ecx  +
sub esp 0Ch +
sub esp 54h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+hFile] +
xor ebx ebx +
mov [ebp+var_18] ebx +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp+var_50] xmm0 +
movlpd oword ptr [ebp+var_34] xmm0 +
mov dword ptr [ebp+var_34+0Ch] ebx +
mov [ebp+ActionID.Data1] 0AAC56Bh +
mov dword ptr [ebp+ActionID.Data2] 11D0CD44h +
mov dword ptr [ebp+ActionID.Data4] 0C000C28Ch +
mov dword ptr [ebp+ActionID.Data4+4] 0EE95C24Fh +
push edi  +
mov edi [ebp+arg_0] +
test esi esi +
jz loc_40F493  +
cmp esi 0FFFFFFFFh +
jz loc_40F493  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
call ds:SetFilePointer  +
lea eax [ebp+var_24] +
mov dword ptr [ebp+var_50+0Ch] ebx +
mov [ebp+var_3C] eax +
xor ebx ebx +
lea eax [ebp+ActionData] +
mov [ebp+var_24] 10h +
push eax  +
lea eax [ebp+ActionID] +
mov [ebp+var_20] edi +
push eax  +
inc ebx  +
mov [ebp+var_1C] esi +
push 0FFFFFFFFh  +
mov [ebp+ActionData] 30h +
mov dword ptr [ebp+var_50+8] 2 +
mov [ebp+var_40] ebx +
mov dword ptr [ebp+var_34+8] 100h +
mov [ebp+var_38] ebx +
call WinVerifyTrust  +
xor edi edi +
mov [ebp+var_38] 2 +
test eax eax +
lea eax [ebp+ActionData] +
push eax  +
lea eax [ebp+ActionID] +
cmovz edi ebx +
push eax  +
push 0FFFFFFFFh  +
call WinVerifyTrust  +
test esi esi +
jz loc_40F508  +
cmp esi 0FFFFFFFFh +
jz loc_40F508  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push esi  +
call ds:SetFilePointer  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn   +
***
push esi  +
push ebx  +
mov eax [ebp+arg_0] +
call sub_40F591  +
push 0  +
push 7  +
call sub_40F591  +
push 0  +
push 6  +
call sub_40F591  +
add esp 18h +
retn   +
***
cmp hDlg esi +
cmp [ebp+hDlg] 0 +
push ebx  +
push esi  +
push esi  +
push esi  +
push esi  +
mov eax dword_4518CC +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
xor edi edi +
mov eax [ebx] +
test eax eax +
jnz loc_40F970  +
mov eax [ebp+arg_0] +
push esi  +
mov esi [eax] +
mov ecx esi +
push dword ptr [eax+4]  +
call ds:off_43B5A4  +
call esi  +
pop esi  +
test eax eax +
jz loc_40F97C  +
mov [ebx] eax +
push [ebp+lpProcName]  +
push eax  +
call ds:GetProcAddress  +
mov edi eax +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
pop ebp  +
jmp ds:GetModuleHandleW  +
***
pop ebp  +
push esi  +
call sub_41F780  +
call sub_40F83C  +
retn   +
***
push esi  +
pop ebp  +
mov eax off_450024 +
mov eax [ebp+arg_0] +
mov dword ptr [ecx+4] 1 +
push [ebp+arg_0]  +
call sub_40FC0D  +
pop ecx  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push ecx  +
push ecx  +
push offset unk_44C6C0  +
lea eax [ebp+var_4] +
mov [ebp+var_4] offset off_450140 +
push eax  +
call sub_4219F8  +
int 3  +
***
push ebp  +
mov ebp esp +
push ecx  +
push offset unk_44C774  +
lea eax [ebp-4] +
mov dword ptr [ebp-4] offset off_450028 +
push eax  +
call sub_4219F8  +
cmp dword ptr [edi+4] 0 +
jle loc_40FD3D  +
mov eax [edi] +
push esi  +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
push [ebp+arg_8]  +
mov edi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov eax [edi] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
test edi edi +
jz loc_40FDC3  +
cmp [ebp+arg_4] 0 +
jz loc_40FDC3  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_40FD8E  +
and dword ptr [eax] 0 +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_40FD99  +
call sub_40FE06  +
cmp dword ptr [esi+10h] 0 +
jz loc_40FDB9  +
push 0FFFFFFFFh  +
lea eax [esi+14h] +
push eax  +
push [ebp+arg_4]  +
push edi  +
call sub_427296  +
push eax  +
call sub_40234C  +
add esp 14h +
jmp loc_40FDBE  +
xor eax eax +
mov [edi] ax +
mov eax [esi+10h] +
jmp loc_40FDC5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
retn   +
***
retn   +
***
push 80h  +
lea eax [esi+14h] +
mov dword ptr [esi+0Ch] 1 +
push eax  +
push dword ptr [esi+114h]  +
call sub_4103BB  +
neg eax  +
sbb eax eax +
neg eax  +
mov [esi+10h] eax +
pop esi  +
retn   +
***
sub esp 408h +
call sub_40FC3F  +
push [ebp+arg_0]  +
retn   +
***
test [ebp+arg_0] 1 +
call sub_41EF3C  +
cmp [ebp+arg_0] 0 +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov eax [ebx] +
mov esi [eax-0Ch] +
lea edi [esi+1] +
push edi  +
call sub_40332E  +
mov dx [ebp+arg_0] +
mov ecx ebx +
push edi  +
mov [eax+esi*2] dx +
call sub_4035D3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_8] +
xor edx edx +
test eax eax +
jz loc_40FFBF  +
mov [eax] edx +
push edx  +
push edx  +
lea eax [ebp+hMem] +
push eax  +
push 800h  +
push dword ptr [ecx+8]  +
push edx  +
push 1100h  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_40FFE9  +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
jmp locret_41000E  +
push 0FFFFFFFFh  +
push [ebp+hMem]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_427296  +
push eax  +
call sub_40234C  +
add esp 14h +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
inc eax  +
leave   +
retn 0Ch  +
***
cmp [ebp+arg_0] 0 +
call sub_41EF70  +
push esi  +
push ecx  +
call sub_41EF3C  +
push esi  +
push esi  +
push 2  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_4101D3  +
pop ecx  +
pop ecx  +
cmp eax 80h +
jbe loc_4102D3  +
push eax  +
mov ecx esi +
call loc_41031D  +
mov eax [esi] +
jmp loc_4102D8  +
lea eax [esi+4] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
test esi esi +
js loc_410315  +
lea eax [esi+1] +
imul eax [ebp+arg_4] +
add eax 10h +
push eax  +
call sub_426BD9  +
pop ecx  +
test eax eax +
jz loc_410315  +
and dword ptr [eax+4] 0 +
mov [eax] edi +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] esi +
jmp loc_410317  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+8]  +
mov esi ecx +
call sub_426BD9  +
pop ecx  +
test eax eax +
jz loc_410337  +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
push 8007000Eh  +
call sub_4015BA  +
push [ebp+arg_0]  +
pop ecx  +
retn   +
***
push esi  +
call sub_419983  +
push esi  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
call sub_40332E  +
push [ebp+arg_0]  +
mov ecx edi +
mov esi eax +
call sub_4035D3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 8  +
mov eax offset loc_43A498 +
call sub_41EF3C  +
push 14h  +
call sub_40FEC6  +
mov ecx eax +
mov [ebp-14h] ecx +
xor eax eax +
mov [ebp-4] eax +
test ecx ecx +
jz loc_410474  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_40216B  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-10h] eax +
lea eax [ebp-10h] +
push offset unk_44C8D8  +
push eax  +
call sub_4219F8  +
call sub_41EF3C  +
mov edi ecx +
cmp dword ptr [ebp+8] 0 +
jz loc_410552  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_410552  +
mov ecx [ebp+10h] +
test ecx ecx +
jz loc_4104C3  +
mov eax [edi+8] +
add eax 0F1A0h +
mov [ecx] eax +
call sub_410279  +
push eax  +
lea ecx [ebp-10h] +
call sub_401330  +
mov eax [edi+10h] +
and dword ptr [ebp-4] 0 +
sub eax 10h +
push eax  +
call sub_402458  +
pop ecx  +
lea esi [eax+10h] +
mov [ebp-14h] esi +
cmp dword ptr [esi-0Ch] 0 +
mov byte ptr [ebp-4] 1 +
jnz loc_41050E  +
mov ebx 0F006h +
push ebx  +
call sub_4103B0  +
test eax eax +
jz loc_41050E  +
push ebx  +
push eax  +
lea ecx [ebp-14h] +
call sub_402AB5  +
mov esi [ebp-14h] +
mov eax [edi+8] +
push esi  +
add eax 0F1A0h +
push eax  +
lea eax [ebp-10h] +
push eax  +
call loc_41AD85  +
push 0FFFFFFFFh  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_427296  +
push eax  +
call sub_40234C  +
add esp 14h +
lea ecx [esi-10h] +
call sub_401A64  +
mov ecx [ebp-10h] +
add ecx 0FFFFFFF0h +
call sub_401A64  +
xor eax eax +
inc eax  +
jmp loc_410554  +
xor eax eax +
call sub_41EF05  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov ecx 10Bh +
cmp eax ecx +
ja loc_410768  +
jz loc_410677  +
cmp eax 3Eh +
ja loc_41063A  +
jz loc_410636  +
cmp eax 19h +
ja loc_4105B7  +
jz loc_410708  +
cmp eax 18h +
ja loc_41078B  +
movzx eax ds:byte_4107C2[eax] +
jmp ds:off_41079A[eax*4]  +
xor eax eax +
jmp loc_4106A9  +
cmp eax 27h +
ja loc_410623  +
jz loc_4106E8  +
cmp eax 20h +
ja loc_4105FA  +
jz loc_4105F3  +
sub eax 1Ah +
jz loc_4106E0  +
sub eax 1 +
jz loc_410708  +
dec eax  +
sub eax 1 +
jz loc_410793  +
sub eax 1 +
jz loc_410708  +
jmp loc_41078B  +
push 0Bh  +
jmp loc_4106A8  +
sub eax 21h +
jz loc_41073A  +
sub eax 1 +
jz loc_410677  +
dec eax  +
sub eax 1 +
jz loc_4106E4  +
dec eax  +
sub eax 1 +
jnz loc_41078B  +
push 0Eh  +
jmp loc_4106A8  +
add eax 0FFFFFFCCh +
cmp eax 8 +
ja loc_41078B  +
jmp ds:off_4107DE[eax*4]  +
push 8  +
jmp loc_4106A8  +
cmp eax 6Bh +
ja loc_4106B1  +
jz loc_4106AD  +
cmp eax 47h +
ja loc_41067B  +
jz loc_410793  +
sub eax 40h +
jz loc_410793  +
sub eax 1 +
jz loc_410793  +
sub eax 1 +
jz loc_4106E0  +
sub eax 1 +
jz loc_410677  +
sub eax 1 +
jz loc_4106E4  +
dec eax  +
sub eax 1 +
jnz loc_41078B  +
push 3  +
jmp loc_4106A8  +
sub eax 50h +
jz loc_410793  +
dec eax  +
sub eax 1 +
jz loc_410793  +
sub eax 3 +
jz loc_410677  +
sub eax 1 +
jz loc_410793  +
dec eax  +
sub eax 1 +
jnz loc_41078B  +
push 0Ah  +
pop eax  +
pop ebp  +
retn 4  +
push 2  +
jmp loc_4106A8  +
mov ecx 90h +
cmp eax ecx +
ja loc_41070C  +
jz loc_410677  +
cmp eax 75h +
ja loc_4106EC  +
jz loc_4106A6  +
sub eax 6Ch +
jz loc_41073A  +
sub eax 3 +
jz loc_410677  +
sub eax 1 +
jz loc_4106E8  +
sub eax 1 +
jz loc_4106E4  +
sub eax 1 +
jnz loc_41078B  +
push 6  +
jmp loc_4106A8  +
push 4  +
jmp loc_4106A8  +
push 0Dh  +
jmp loc_4106A8  +
sub eax 7Bh +
jz loc_410677  +
sub eax 1 +
jz loc_410677  +
sub eax 1 +
jz loc_410677  +
sub eax 6 +
jnz loc_4105E5  +
push 9  +
jmp loc_4106A8  +
mov ecx 0B6h +
cmp eax ecx +
ja loc_410748  +
jz loc_4106E0  +
sub eax 91h +
jz loc_410741  +
sub eax 9 +
jz loc_410677  +
sub eax 7 +
jz loc_410677  +
sub eax 6 +
jz loc_41073A  +
sub eax 3 +
jmp loc_410789  +
push 0Ch  +
jmp loc_4106A8  +
push 7  +
jmp loc_4106A8  +
sub eax 0B7h +
jz loc_410793  +
sub eax 8 +
jz loc_4106E0  +
dec eax  +
sub eax 1 +
jz loc_4106E0  +
sub eax 0Dh +
jz loc_410677  +
jmp loc_41066D  +
sub eax 3E3h +
jz loc_4106A6  +
sub eax 1 +
jz loc_4106A6  +
sub eax 1 +
jz loc_4106A6  +
dec eax  +
sub eax 1 +
jz loc_410793  +
xor eax eax +
inc eax  +
jmp loc_4106A9  +
push 5  +
jmp loc_4106A8  +
***
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push offset loc_43A4C9  +
mov eax large fs:0 +
push eax  +
sub esp 414h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_418] esi +
mov [ebp+var_41C] esi +
mov dword ptr [esi] offset off_442BCC +
xor edi edi +
mov [ebp+var_4] edi +
mov byte ptr [ebp+var_4] 1 +
cmp [esi+14h] edi +
jz loc_410969  +
cmp [esi+8] edi +
jz loc_410969  +
call loc_410A00  +
jmp loc_410969  +
call sub_410279  +
push eax  +
lea ecx [ebp+var_418] +
call sub_401330  +
mov ebx [ebp+var_420] +
lea eax [ebp+var_414] +
xor edi edi +
mov byte ptr [ebp+var_4] 3 +
push edi  +
push 200h  +
mov esi [ebx] +
push eax  +
mov ecx [esi+0Ch] +
call ds:off_43B5A4  +
mov ecx ebx +
call dword ptr [esi+0Ch]  +
test eax eax +
jz loc_410914  +
lea eax [ebp+var_414] +
push eax  +
push 5Eh  +
push offset aDAgent_work6SS  +
push offset aExceptionThrow  +
lea eax [ebp+var_418] +
push offset aTsTsDTs  +
push eax  +
call loc_410A94  +
add esp 18h +
jmp loc_410934  +
push 5Eh  +
push offset aDAgent_work6SS  +
push offset aExceptionThrow  +
lea eax [ebp+var_418] +
push offset aTsTsD  +
push eax  +
call loc_410A94  +
add esp 14h +
mov esi [ebp+var_418] +
push edi  +
push edi  +
push esi  +
call sub_419AB1  +
lea ecx [esi-10h] +
call sub_401A64  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov eax offset loc_410963 +
retn   +
mov esi [ebp-41Ch] +
mov ecx esi +
call sub_411105  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41EEF4  +
leave   +
retn   +
***
push esi  +
cmp dword ptr [esi+14h] 0 +
push [ebp+arg_0]  +
call sub_427487  +
push eax  +
call sub_40234C  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
xor eax eax +
cmp [edi+14h] eax +
jz loc_410A14  +
push dword ptr [edi+14h]  +
call sub_4275A9  +
pop ecx  +
mov ecx ds:dword_442D4C +
and dword ptr [edi+8] 0 +
and dword ptr [edi+14h] 0 +
mov [edi+4] ecx +
test eax eax +
jnz loc_410A2C  +
pop edi  +
pop esi  +
retn   +
***
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 0Dh  +
call loc_410445  +
mov edi ecx +
push [ebp+arg_C]  +
cmp [ebp+arg_0] 0 +
push [ebp+arg_4]  +
xor eax eax +
push eax  +
push [ebp+arg_0]  +
push eax  +
push eax  +
call sub_403780  +
mov ecx [eax] +
push dword ptr [eax+4]  +
or ecx 6 +
push ecx  +
call sub_426859  +
add esp 1Ch +
test eax eax +
jns loc_410B5E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push dword ptr [edi+14h]  +
call sub_428A2F  +
mov esi eax +
pop ecx  +
cmp esi 0FFFFFFFFh +
jz loc_410BC7  +
push 2  +
push 0  +
push dword ptr [edi+14h]  +
call sub_428413  +
add esp 0Ch +
test eax eax +
jz loc_410B9E  +
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 9  +
jmp loc_410BDB  +
push dword ptr [edi+14h]  +
call sub_428A2F  +
mov ebx eax +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_410BC7  +
push 0  +
push esi  +
push dword ptr [edi+14h]  +
call sub_428413  +
add esp 0Ch +
test eax eax +
jnz loc_410B88  +
pop edi  +
mov eax ebx +
pop esi  +
cdq   +
pop ebx  +
retn   +
***
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 6  +
call loc_410445  +
retn   +
***
mov eax [ebp+arg_8] +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi ecx +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov [edi+10h] eax +
mov eax [edi] +
mov esi [eax+24h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ebp+8] 0 +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
jz loc_410D90  +
mov ebx [ebp+0Ch] +
mov eax ebx +
mov edi [ebp+10h] +
and eax 0FFFFBFFFh +
and dword ptr [esi+14h] 0 +
push edi  +
push eax  +
push dword ptr [ebp+8]  +
call sub_4115F0  +
test eax eax +
jz loc_410D90  +
test ebx 1000h +
jz loc_410CCF  +
mov ecx ebx +
and ecx 2000h +
setz al  +
dec al  +
and al 0EAh +
add al 77h +
test ecx ecx +
mov [ebp-4] al +
setnz al  +
dec al  +
and al 16h +
add al 61h +
jmp loc_410CE0  +
test bl 1 +
jz loc_410CDA  +
mov byte ptr [ebp-4] 61h +
jmp loc_410CF0  +
push 72h  +
pop eax  +
mov [ebp-4] al +
cmp al 72h +
jnz loc_410CE9  +
test bl 2 +
jnz loc_410CF7  +
xor edx edx +
inc edx  +
cmp al 72h +
jz loc_410CFE  +
xor edx edx +
inc edx  +
test bl dl +
jnz loc_410CFE  +
push 2  +
mov byte ptr [ebp-3] 2Bh +
pop edx  +
mov eax ebx +
and eax 8000h +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFC000h +
add ecx 4000h +
test eax eax +
setnz al  +
dec al  +
and al 12h +
add al 62h +
mov [ebp+edx-4] al +
lea eax [edx+1] +
cmp eax 4 +
jnb loc_410D9E  +
mov byte ptr [ebp+eax-4] 0 +
test ebx 400h +
jz loc_410D47  +
xor ecx 4000h +
or ecx 10000h +
push ecx  +
push dword ptr [esi+4]  +
call sub_4290F0  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_410D66  +
lea ecx [ebp-4] +
push ecx  +
push eax  +
call sub_427A64  +
pop ecx  +
pop ecx  +
mov [esi+14h] eax +
cmp dword ptr [esi+14h] 0 +
jnz loc_410D99  +
test edi edi +
jz loc_410D89  +
call sub_426907  +
mov eax [eax] +
mov [edi+0Ch] eax +
call sub_426907  +
push dword ptr [eax]  +
call sub_410566  +
mov [edi+8] eax +
mov ecx esi +
call sub_411290  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
xor eax eax +
inc eax  +
jmp loc_410D92  +
***
call sub_41F8FB  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push edi  +
mov edi ecx +
jnz loc_410DC0  +
xor eax eax +
jmp loc_410E08  +
cmp dword ptr [ebp+8] 0 +
jz loc_410E0D  +
push esi  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+0Ch]  +
push 1  +
push dword ptr [ebp+8]  +
call sub_42801C  +
mov esi eax +
add esp 10h +
test esi esi +
jnz loc_410DED  +
push dword ptr [edi+14h]  +
call sub_427A6F  +
pop ecx  +
test eax eax +
jz loc_410E12  +
push dword ptr [edi+14h]  +
call sub_427A9B  +
pop ecx  +
test eax eax +
jz loc_410E05  +
push dword ptr [edi+14h]  +
call sub_4109EA  +
pop ecx  +
jmp loc_410E12  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
call sub_40FC94  +
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 1  +
call loc_410445  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov edi offset Default +
push edi  +
mov [ebp-4] esi +
call loc_42412E  +
pop ecx  +
push eax  +
push edi  +
mov edi [ebp+8] +
mov ecx edi +
call sub_4035FE  +
push 80h  +
mov ecx edi +
call sub_40332E  +
mov ebx eax +
push dword ptr [esi+14h]  +
push 81h  +
push ebx  +
call sub_42736B  +
add esp 0Ch +
mov ecx edi +
mov esi eax +
push 0FFFFFFFFh  +
call sub_4033B0  +
test esi esi +
jz loc_410EB9  +
test ebx ebx +
jz loc_410EC9  +
push ebx  +
call loc_42412E  +
pop ecx  +
cmp eax 80h +
jl loc_410EC9  +
push 0Ah  +
pop ecx  +
cmp [ebx+eax*2-2] cx +
jz loc_410EC9  +
mov eax [edi] +
mov ecx edi +
mov esi [eax-0Ch] +
lea eax [esi+80h] +
push eax  +
call sub_40332E  +
lea ebx [eax+esi*2] +
mov esi [ebp-4] +
jmp loc_410E62  +
***
mov ebx [ebp-4] +
push dword ptr [ebx+14h]  +
call sub_427A6F  +
pop ecx  +
test eax eax +
jz loc_410EFE  +
push 0  +
mov ecx edi +
call sub_40332E  +
mov edx [edi] +
mov esi [edx-0Ch] +
test esi esi +
jz loc_410EF0  +
push 0Ah  +
pop ecx  +
cmp [eax+esi*2-2] cx +
jnz loc_410EF0  +
lea eax [esi-1] +
mov ecx edi +
push eax  +
call sub_410422  +
xor eax eax +
test esi esi +
pop edi  +
pop esi  +
setnz al  +
pop ebx  +
leave   +
retn 4  +
***
push dword ptr [ebx+14h]  +
call sub_4109EA  +
pop ecx  +
call sub_426907  +
lea ecx [ebx+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 1  +
call loc_410445  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push esi  +
push edi  +
mov edi ecx +
jz loc_410F69  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_42736B  +
mov esi eax +
add esp 0Ch +
test esi esi +
jnz loc_410F61  +
push dword ptr [edi+14h]  +
call sub_427A6F  +
pop ecx  +
test eax eax +
jz loc_410F6E  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_40FC94  +
push dword ptr [edi+14h]  +
call sub_4109EA  +
pop ecx  +
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 1  +
call loc_410445  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0FFFFFFFFh +
push esi  +
push edi  +
mov edi ecx +
jl loc_410FEE  +
jg loc_410FB8  +
cmp dword ptr [ebp+8] 80000000h +
jb loc_410FEE  +
cmp dword ptr [ebp+0Ch] 0 +
jg loc_410FEE  +
jl loc_410FC9  +
cmp dword ptr [ebp+8] 7FFFFFFFh +
ja loc_410FEE  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+8]  +
push dword ptr [edi+14h]  +
call sub_428413  +
add esp 0Ch +
test eax eax +
jnz loc_410FFB  +
push dword ptr [edi+14h]  +
call sub_428A2F  +
pop ecx  +
pop edi  +
cdq   +
pop esi  +
pop ebp  +
retn 0Ch  +
***
lea ecx [edi+0Ch] +
call sub_40FED6  +
push eax  +
push 0FFFFFFFFh  +
jmp loc_41100D  +
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 9  +
call loc_410445  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_411032  +
add ecx 0Ch +
pop ebp  +
jmp sub_410026  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push esi  +
push edi  +
mov edi ecx +
jz loc_41106B  +
push dword ptr [edi+14h]  +
push dword ptr [ebp+0Ch]  +
push 1  +
push dword ptr [ebp+8]  +
call sub_428C59  +
add esp 10h +
cmp eax [ebp+0Ch] +
jnz loc_411070  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_40FC94  +
call sub_426907  +
lea ecx [edi+0Ch] +
mov esi eax +
call sub_40FED6  +
push eax  +
push dword ptr [esi]  +
push 1  +
call loc_410445  +
cmp [ebp+arg_0] 0 +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_43A50A  +
mov eax large fs:0 +
push eax  +
sub esp 414h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_418] esi +
mov [ebp+var_41C] esi +
mov dword ptr [esi] offset off_442DA4 +
and [ebp+var_4] 0 +
cmp dword ptr [esi+4] 0FFFFFFFFh +
mov byte ptr [ebp+var_4] 1 +
jz loc_411233  +
cmp dword ptr [esi+8] 0 +
jz loc_411233  +
call sub_411370  +
jmp loc_411233  +
call sub_410279  +
push eax  +
lea ecx [ebp+var_418] +
call sub_401330  +
mov ebx [ebp+var_420] +
lea eax [ebp+var_414] +
push 0  +
push 200h  +
push eax  +
mov esi [ebx] +
mov byte ptr [ebp+var_4] 3 +
mov ecx [esi+0Ch] +
call ds:off_43B5A4  +
mov ecx ebx +
call dword ptr [esi+0Ch]  +
test eax eax +
jz loc_4111D9  +
lea eax [ebp+var_414] +
push eax  +
push 89h  +
push offset aDAgent_work6_0  +
push offset aExceptionThrow  +
lea eax [ebp+var_418] +
push offset aTsTsDTs  +
push eax  +
call loc_410A94  +
add esp 18h +
jmp loc_4111FC  +
push 89h  +
push offset aDAgent_work6_0  +
push offset aExceptionThrow  +
lea eax [ebp+var_418] +
push offset aTsTsD  +
push eax  +
call loc_410A94  +
add esp 14h +
mov esi [ebp+var_418] +
push 0  +
push 0  +
push esi  +
call sub_419AB1  +
lea ecx [esi-10h] +
call sub_401A64  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov eax offset loc_41122D +
retn   +
mov esi [ebp-41Ch] +
mov ecx [esi+0Ch] +
sub ecx 10h +
call sub_401A64  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41EEF4  +
leave   +
retn   +
***
push esi  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
sub esp 210h +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
mov edi 104h +
push edi  +
call sub_40332E  +
push edi  +
mov esi eax +
push 0  +
push esi  +
call sub_420490  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
push edi  +
push esi  +
call sub_427296  +
push eax  +
call sub_40234C  +
add esp 20h +
push esi  +
call ds:PathStripToRootW  +
mov ecx [ebp+arg_4] +
push 0FFFFFFFFh  +
call sub_4033B0  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi ecx +
push ebx  +
call sub_41EF3C  +
mov ebx ecx +
push 14h  +
call sub_40FBD5  +
pop ecx  +
mov [ebp-14h] eax +
xor esi esi +
mov [ebp-4] esi +
test eax eax +
jz loc_41145D  +
mov ecx eax +
call sub_4110D6  +
mov edi eax +
jmp loc_41145F  +
mov edi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-10h] +
push 2  +
push esi  +
push esi  +
push eax  +
call ds:GetCurrentProcess  +
push eax  +
push dword ptr [ebx+4]  +
call ds:GetCurrentProcess  +
push eax  +
call ds:DuplicateHandle  +
test eax eax +
jnz loc_4114AC  +
test edi edi +
jz loc_41149D  +
mov eax [edi] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
push dword ptr [ebx+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
mov eax [ebp-10h] +
mov [edi+4] eax +
mov eax [ebx+8] +
mov [edi+8] eax +
mov eax [ebx+10h] +
mov [edi+10h] eax +
mov eax edi +
call sub_41EF05  +
retn   +
***
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_4114F5  +
push dword ptr [esi+4]  +
call ds:FlushFileBuffers  +
test eax eax +
jnz loc_4114F5  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
pop esi  +
retn   +
***
retn 10h  +
***
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
lea eax [ebp+FileSizeHigh] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetFileSize  +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_411549  +
call ds:GetLastError  +
test eax eax +
jz loc_411546  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
mov eax [ebp+var_8] +
mov edx [ebp+FileSizeHigh] +
pop esi  +
leave   +
retn   +
***
push ecx  +
push ecx  +
push esi  +
push 1  +
mov esi ecx +
lea eax [ebp+DistanceToMoveHigh] +
xor ecx ecx +
push eax  +
push ecx  +
push dword ptr [esi+4]  +
mov [ebp+var_8] ecx +
mov [ebp+DistanceToMoveHigh] ecx +
call ds:SetFilePointer  +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_411594  +
call ds:GetLastError  +
test eax eax +
jz loc_411591  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
mov eax [ebp+var_8] +
mov edx [ebp+DistanceToMoveHigh] +
pop esi  +
leave   +
retn   +
***
retn   +
***
push esi  +
push [ebp+nNumberOfBytesToLockHigh]  +
mov esi ecx +
push [ebp+nNumberOfBytesToLockLow]  +
push [ebp+dwFileOffsetHigh]  +
push [ebp+dwFileOffsetLow]  +
push dword ptr [esi+4]  +
call ds:LockFile  +
test eax eax +
jnz loc_4115DE  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
pop esi  +
pop ebp  +
retn 10h  +
***
sub esp 220h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax ecx +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
and dword ptr [eax+8] 0 +
or dword ptr [eax+4] 0FFFFFFFFh +
mov esi [ebp+arg_4] +
mov [ebp+var_214] eax +
and esi 0FFFF7FFFh +
add eax 0Ch +
push edi  +
mov edi [ebp+arg_0] +
mov ecx eax +
mov [ebp+dwDesiredAccess] eax +
call sub_4025B7  +
test edi edi +
jz loc_4117AB  +
push 0  +
push 104h  +
push edi  +
call sub_4118D2  +
test eax eax +
js loc_4117AB  +
push ebx  +
push edi  +
lea eax [ebp+var_20C] +
push eax  +
call sub_411A1F  +
test eax eax +
jz loc_4117BF  +
lea eax [ebp+var_20C] +
push eax  +
call loc_42412E  +
pop ecx  +
mov ecx [ebp+dwDesiredAccess] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
call sub_4035FE  +
and [ebp+dwDesiredAccess] 0 +
mov eax esi +
push 3  +
pop ecx  +
and eax ecx +
sub eax 0 +
jz loc_4116BD  +
sub eax 1 +
jz loc_4116B1  +
sub eax 1 +
jnz loc_4116C7  +
mov [ebp+dwDesiredAccess] 0C0000000h +
jmp loc_4116C7  +
mov [ebp+dwDesiredAccess] 40000000h +
jmp loc_4116C7  +
mov [ebp+dwDesiredAccess] 80000000h +
mov eax esi +
and eax 70h +
jz loc_4116F0  +
cmp eax 10h +
jz loc_4116F0  +
cmp eax 20h +
jz loc_4116EB  +
cmp eax 30h +
jz loc_4116E6  +
cmp eax 40h +
jnz loc_4116F0  +
mov edx ecx +
jmp loc_4116F2  +
push 2  +
pop edx  +
jmp loc_4116F2  +
xor edx edx +
inc edx  +
jmp loc_4116F2  +
xor edx edx +
and [ebp+SecurityAttributes.lpSecurityDescriptor] 0 +
mov eax esi +
shr eax 7 +
not eax  +
mov [ebp+SecurityAttributes.nLength] 0Ch +
and eax 1 +
mov [ebp+SecurityAttributes.bInheritHandle] eax +
test esi 1000h +
jz loc_41172D  +
mov ecx esi +
and ecx 2000h +
neg ecx  +
sbb ecx ecx +
and ecx 2 +
add ecx 2 +
mov eax esi +
and eax 10000h +
shl eax 0Dh +
or eax 80h +
test esi 20000h +
jz loc_411749  +
or eax 80000000h +
test esi 40000h +
jz loc_411756  +
or eax 10000000h +
test esi 80000h +
jz loc_411763  +
or eax 8000000h +
mov esi [ebp+var_214] +
push 0  +
push eax  +
push ecx  +
cmp dword ptr [esi+10h] 0 +
lea eax [ebp+SecurityAttributes] +
push eax  +
push edx  +
push [ebp+dwDesiredAccess]  +
push edi  +
jz loc_41178C  +
mov ecx [esi+10h] +
call sub_4113B2  +
jmp loc_411792  +
call ds:CreateFileW  +
cmp eax 0FFFFFFFFh +
jnz loc_4117A0  +
push edi  +
push ebx  +
call sub_4119F2  +
jmp loc_4117BF  +
mov [esi+4] eax +
xor eax eax +
inc eax  +
mov [esi+8] eax +
jmp loc_4117C1  +
test ebx ebx +
jz loc_4117BF  +
push edi  +
lea ecx [ebx+10h] +
mov dword ptr [ebx+8] 3 +
call sub_410026  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn 0Ch  +
***
push ecx  +
cmp [ebp+nNumberOfBytesToRead] 0 +
push esi  +
mov esi ecx +
jnz loc_4117F1  +
xor eax eax +
jmp loc_41181C  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push [ebp+nNumberOfBytesToRead]  +
push [ebp+lpBuffer]  +
push dword ptr [esi+4]  +
call ds:ReadFile  +
test eax eax +
jnz loc_411819  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
mov eax [ebp+NumberOfBytesRead] +
pop esi  +
leave   +
retn 8  +
***
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
mov edx [ebp+lDistanceToMove] +
push esi  +
push [ebp+dwMoveMethod]  +
mov [ebp+DistanceToMoveHigh] eax +
mov esi ecx +
lea eax [ebp+DistanceToMoveHigh] +
mov [ebp+var_8] edx +
push eax  +
push edx  +
push dword ptr [esi+4]  +
call ds:SetFilePointer  +
mov [ebp+var_8] eax +
cmp eax 0FFFFFFFFh +
jnz loc_411879  +
call ds:GetLastError  +
test eax eax +
jz loc_411876  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
mov eax [ebp+var_8] +
mov edx [ebp+DistanceToMoveHigh] +
pop esi  +
leave   +
retn 0Ch  +
***
push esi  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
xor edi edi +
mov esi eax +
test eax eax +
jz loc_41192B  +
mov ecx [ebp+arg_0] +
cmp [ecx] di +
jz loc_41192B  +
add ecx 2 +
sub eax 1 +
jnz loc_41191E  +
mov edx [ebp+arg_8] +
mov ecx eax +
neg ecx  +
sbb ecx ecx +
and ecx 7FF8FFA9h +
test edx edx +
jz loc_41194A  +
test eax eax +
jz loc_411948  +
sub esi eax +
mov [edx] esi +
jmp loc_41194A  +
mov [edx] edi +
pop edi  +
lea eax [ecx-7FF8FFA9h] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push [ebp+nNumberOfBytesToUnlockHigh]  +
mov esi ecx +
push [ebp+nNumberOfBytesToUnlockLow]  +
push [ebp+dwFileOffsetHigh]  +
push [ebp+dwFileOffsetLow]  +
push dword ptr [esi+4]  +
call ds:UnlockFile  +
test eax eax +
jnz loc_41198E  +
push dword ptr [esi+0Ch]  +
call ds:GetLastError  +
push eax  +
call sub_410802  +
pop esi  +
pop ebp  +
retn 10h  +
***
push ecx  +
push esi  +
call sub_41EF70  +
push [ebp+arg_8]  +
call sub_41F490  +
cmp dword_4518C0 0 +
call sub_41F490  +
or eax 0FFFFFFFFh +
cmp dword_4518C4 0 +
call sub_41F490  +
cmp dword_4518C4 0 +
jz loc_411E05  +
cmp dword_4518C0 0 +
jnz locret_411E31  +
xor ebx ebx +
test esi esi +
setz bl  +
test ebx ebx +
jz loc_411E1A  +
call ds:GetLastError  +
mov edi eax +
jmp loc_411E1C  +
xor edi edi +
push dword ptr [ebp-20h]  +
push 0  +
call sub_40F83C  +
test ebx ebx +
jz locret_411E31  +
push edi  +
call ds:SetLastError  +
retn   +
***
pop ebp  +
jmp ds:LoadLibraryW  +
***
pop ebp  +
push ecx  +
sub esp 2Ch +
push ecx  +
sub esp 28h +
push 0FFFFFFFFh  +
push offset loc_43A565  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4504C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_442F1C +
call sub_412080  +
mov ecx [esi+10h] +
sub ecx 10h +
call sub_401A64  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
push esi  +
mov edi ecx +
retn   +
***
sub esp 20Ch +
cmp [ebp+arg_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
jz loc_412284  +
cmp dword ptr [esi] 0 +
jz loc_412275  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_412284  +
push offset aFindfirstfilet  +
push eax  +
call ds:GetProcAddress  +
mov ebx eax +
test ebx ebx +
jz loc_412284  +
push dword ptr [esi]  +
xor eax eax +
mov ecx ebx +
push eax  +
push eax  +
push eax  +
push [ebp+arg_4]  +
push eax  +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
call ebx  +
jmp loc_412287  +
cmp dword ptr [esi+4] 0 +
jz loc_412284  +
pop esi  +
pop ebx  +
pop ebp  +
jmp ds:FindFirstFileW  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [esi+0Ch] +
test eax eax +
jnz loc_41229C  +
pop esi  +
retn   +
mov edx [esi+4] +
test edx edx +
jnz loc_4122B3  +
push 250h  +
call sub_40FBD5  +
mov edx eax +
mov eax [esi+0Ch] +
pop ecx  +
mov ecx [esi+8] +
push edx  +
push eax  +
mov [esi+4] ecx +
mov [esi+8] edx +
call ds:FindNextFileW  +
pop esi  +
retn   +
***
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_412315  +
add eax 4 +
push eax  +
call sub_4126CC  +
test eax eax +
jz loc_412304  +
mov eax [esi+4] +
lea ecx [ebp+var_8] +
push 0FFFFFFFFh  +
add eax 4 +
push eax  +
call sub_411E92  +
mov ecx [eax] +
mov edx [eax+4] +
jmp loc_412308  +
xor ecx ecx +
mov edx ecx +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov [eax+4] edx +
xor eax eax +
inc eax  +
jmp loc_412317  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edx [ecx+4] +
test edx edx +
jz loc_412341  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_412341  +
mov eax [edx+4] +
mov [ecx] eax +
mov eax [edx+8] +
mov [ecx+4] eax +
xor eax eax +
inc eax  +
jmp loc_412343  +
xor eax eax +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
call sub_410279  +
mov ecx [ebp+8] +
push eax  +
call sub_401330  +
and dword ptr [ebp-4] 0 +
mov ecx [esi+4] +
mov dword ptr [ebp-10h] 1 +
test ecx ecx +
jz loc_412392  +
add ecx 2Ch +
push ecx  +
mov ecx [ebp+8] +
call sub_410026  +
mov eax [ebp+8] +
call sub_41EF05  +
retn 4  +
***
push 8  +
mov eax offset loc_43A5A1 +
call sub_41EF3C  +
mov edi ecx +
xor esi esi +
mov [ebp-10h] esi +
mov eax [edi+10h] +
sub eax 10h +
mov [ebp-4] esi +
push eax  +
call sub_402458  +
mov ebx [ebp+8] +
pop ecx  +
lea edx [eax+10h] +
mov [ebx] edx +
mov eax [edx-0Ch] +
mov [ebp-4] esi +
mov dword ptr [ebp-10h] 1 +
lea eax [edx+eax*2] +
cmp edx eax +
lea ecx [eax-2] +
sbb eax eax +
and eax ecx +
jz loc_41243D  +
movzx eax word ptr [eax] +
cmp eax 5Ch +
jz loc_4123FF  +
cmp eax 2Fh +
jz loc_4123FF  +
movzx eax word ptr [edi+14h] +
mov ecx ebx +
push eax  +
call sub_40FF7E  +
mov eax [edi] +
lea ecx [ebp-14h] +
push ecx  +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov ecx [eax] +
mov dword ptr [ebp-4] 1 +
push dword ptr [ecx-0Ch]  +
push ecx  +
mov ecx ebx +
call sub_402376  +
mov ecx [ebp-14h] +
add ecx 0FFFFFFF0h +
call sub_401A64  +
mov eax ebx +
call sub_41EF05  +
retn 4  +
***
call sub_40FC94  +
call sub_41EF3C  +
mov edi ecx +
xor ebx ebx +
lea ecx [ebp-10h] +
mov [ebp-14h] ebx +
mov eax [edi] +
push ecx  +
mov [ebp-4] ebx +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor edi edi +
inc edi  +
mov [ebp-4] edi +
call sub_410279  +
mov esi [ebp+8] +
mov ecx esi +
push eax  +
call sub_401330  +
mov [ebp-14h] edi +
mov ecx esi +
mov edi 100h +
push edi  +
call sub_40332E  +
push ebx  +
push ebx  +
push edi  +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
call sub_4299CC  +
push eax  +
call sub_40234C  +
add esp 28h +
mov ecx esi +
push 0FFFFFFFFh  +
call sub_4033B0  +
mov ecx [ebp-10h] +
add ecx 0FFFFFFF0h +
call sub_401A64  +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
call sub_41EF3C  +
mov edi ecx +
xor esi esi +
mov [ebp-10h] esi +
mov ecx [ebp+8] +
push offset aFile  +
mov [ebp-4] esi +
call sub_403C0F  +
mov eax [edi] +
lea ecx [ebp-14h] +
xor ebx ebx +
mov [ebp-4] esi +
push ecx  +
inc ebx  +
mov esi [eax+10h] +
mov ecx esi +
mov [ebp-10h] ebx +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov ecx [eax] +
mov [ebp-4] ebx +
push dword ptr [ecx-0Ch]  +
push ecx  +
mov ecx [ebp+8] +
call sub_402376  +
mov ecx [ebp-14h] +
add ecx 0FFFFFFF0h +
call sub_401A64  +
mov eax [ebp+8] +
call sub_41EF05  +
retn 4  +
***
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_412595  +
add eax 0Ch +
push eax  +
call sub_4126CC  +
test eax eax +
jz loc_412584  +
mov eax [esi+4] +
lea ecx [ebp+var_8] +
push 0FFFFFFFFh  +
add eax 0Ch +
push eax  +
call sub_411E92  +
mov ecx [eax] +
mov edx [eax+4] +
jmp loc_412588  +
xor ecx ecx +
mov edx ecx +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov [eax+4] edx +
xor eax eax +
inc eax  +
jmp loc_412597  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edx [ecx+4] +
test edx edx +
jz loc_4125C1  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_4125C1  +
mov eax [edx+0Ch] +
mov [ecx] eax +
mov eax [edx+10h] +
mov [ecx+4] eax +
xor eax eax +
inc eax  +
jmp loc_4125C3  +
xor eax eax +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi+4] +
test eax eax +
jz loc_412615  +
add eax 14h +
push eax  +
call sub_4126CC  +
test eax eax +
jz loc_412604  +
mov eax [esi+4] +
lea ecx [ebp+var_8] +
push 0FFFFFFFFh  +
add eax 14h +
push eax  +
call sub_411E92  +
mov ecx [eax] +
mov edx [eax+4] +
jmp loc_412608  +
xor ecx ecx +
mov edx ecx +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov [eax+4] edx +
xor eax eax +
inc eax  +
jmp loc_412617  +
xor eax eax +
pop esi  +
leave   +
retn 4  +
***
mov edx [ecx+4] +
test edx edx +
jz loc_412641  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_412641  +
mov eax [edx+14h] +
mov [ecx] eax +
mov eax [edx+18h] +
mov [ecx+4] eax +
xor eax eax +
inc eax  +
jmp loc_412643  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax [ecx+10h] +
sub eax 10h +
push eax  +
call sub_402458  +
pop ecx  +
lea ecx [eax+10h] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi ecx +
mov edi ecx +
sub esp 1Ch +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileTime] +
lea ecx [ebp+FileTime] +
push ecx  +
push eax  +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jz loc_412705  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_412705  +
xor eax eax +
inc eax  +
jmp loc_412707  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41EEF4  +
leave   +
retn 4  +
***
mov eax [ecx+4] +
test eax eax +
jz loc_412737  +
mov eax [eax] +
and eax [ebp+arg_0] +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_412739  +
xor eax eax +
pop ebp  +
retn 4  +
***
push ecx  +
xor eax eax +
push 0FFFFFFFFh  +
call sub_410279  +
push esi  +
mov esi ecx +
mov ecx [esi] +
sub ecx 10h +
call sub_401A64  +
test [ebp+arg_0] 1 +
jz loc_4128BB  +
push 4  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
retn   +
***
push ebx  +
push esi  +
push ecx  +
push esi  +
push esi  +
cmp [ebp+arg_4] 0 +
jz loc_412BAB  +
push [ebp+arg_0]  +
mov ecx [ebp+arg_4] +
call sub_412C30  +
test eax eax +
jz loc_412BAB  +
mov eax [ebp+arg_4] +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov ecx [ebp-18h] +
call sub_40FD1F  +
mov eax offset loc_412BE9 +
retn   +
mov eax [ebp-14h] +
call sub_41EF05  +
retn   +
***
call sub_40FC94  +
test ecx ecx +
push esi  +
call sub_41EFA7  +
call sub_41D08F  +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_43A661  +
mov eax large fs:0 +
push eax  +
mov eax dword_4504C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov dword ptr [ecx] offset off_443B70 +
mov dword ptr [ecx+4] offset off_443BE8 +
mov dword ptr [ecx+10h] offset off_443BFC +
mov dword ptr [ecx+14h] 0C0000001h +
call sub_414B9F  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
leave   +
retn   +
***
mov ecx [ecx] +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_410279  +
push 0FFFFFFFFh  +
cmp dword ptr [ecx+4] 0 +
push [ebp+arg_0]  +
call sub_40FC0D  +
pop ecx  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
call sub_412D93  +
test [ebp+arg_0] 1 +
jz loc_41307B  +
push 18h  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_412F4D  +
test [ebp+arg_0] 1 +
jz loc_4130BC  +
test [ebp+arg_0] 4 +
jnz loc_4130AF  +
push esi  +
call sub_40FC0D  +
jmp loc_4130BB  +
push 80h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov ecx [ebp+arg_0] +
mov eax [ecx+14h] +
inc eax  +
mov [ecx+14h] eax +
pop ebp  +
retn 4  +
***
sub [esp+arg_0] 4 +
jmp sub_413100  +
***
sub [esp+arg_0] 10h +
jmp sub_413100  +
***
call sub_41EF3C  +
mov esi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [esi-14h]  +
call sub_4195C5  +
and dword ptr [ebp-4] 0 +
lea ecx [esi-30h] +
call sub_419D73  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
call sub_41EF3C  +
call sub_41EFDE  +
sub esp 30h +
push ebx  +
mov edi eax +
push [ebp+hWnd]  +
push esi  +
call sub_41EFA7  +
push 0  +
mov ecx offset unk_453380 +
push ecx  +
sub esp 5Ch +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
xor edx edx +
mov ecx [ebp+arg_20] +
mov [ebp+var_30] eax +
mov [ebp+var_34] ecx +
mov word ptr [ebp+var_5C] dx +
push ebx  +
mov ebx [ebp+arg_18] +
mov [ebp+var_2C] ebx +
push esi  +
push edi  +
mov edi [ebp+arg_14] +
test eax eax +
jnz loc_413928  +
mov eax 80070057h +
jmp loc_413FB4  +
test edi edi +
jnz loc_413936  +
mov eax 80020008h +
jmp loc_413FB4  +
mov edx [edi+8] +
cmp edx 5 +
ja loc_413FAF  +
xor eax eax +
mov esi eax +
cmp [edi+0Ch] eax +
jbe loc_413981  +
mov ecx [edi+4] +
mov [ebp+var_38] ecx +
mov [ebp+var_3C] eax +
mov eax [ebp+var_38] +
mov eax [eax+esi*4] +
cmp eax edx +
jnb loc_413FAF  +
mov ecx [edi+4] +
mov eax [edi] +
add eax [ebp+var_3C] +
add [ebp+var_3C] 10h +
mov ebx [ecx+esi*4] +
inc esi  +
mov ecx [ebp+var_34] +
mov [ebp+ebx*4+pvarSrc] eax +
mov ebx [ebp+var_2C] +
cmp esi [edi+0Ch] +
jb loc_413954  +
cmp esi edx +
jnb loc_41399F  +
mov eax esi +
shl eax 4 +
add eax [edi] +
sub edx esi +
lea esi [ebp+edx*4+var_1C] +
mov [esi] eax +
add eax 10h +
lea esi [esi-4] +
sub edx 1 +
jnz loc_413992  +
mov esi 80020003h +
test ecx ecx +
jnz loc_4139AE  +
lea eax [ebp+var_38] +
mov [ebp+var_34] eax +
test ebx ebx +
jnz loc_4139B8  +
lea ebx [ebp+var_5C] +
mov [ebp+var_2C] ebx +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantInit  +
mov ecx [ebp+arg_4] +
add ecx 139Ah +
cmp ecx 12h +
ja loc_413FA1  +
mov ax [ebp+arg_10] +
jmp ds:off_413FC8[ecx*4]  +
cmp dword ptr [edi+8] 1 +
jz loc_4139EF  +
mov esi 8002000Eh +
jmp loc_413FA1  +
mov esi [ebp+pvarSrc] +
sub esp 10h +
mov edx [ebp+var_30] +
mov edi esp +
push edx  +
mov ebx [edx] +
movs   +
mov ecx [ebx+64h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+64h]  +
mov esi eax +
jmp loc_413FA1  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov ecx [ebp+pvarSrc] +
xor edi edi +
push 3  +
pop eax  +
cmp [ecx] ax +
jz loc_413A4A  +
push eax  +
push edi  +
push ecx  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
jns loc_413A44  +
mov eax [ebp+var_34] +
mov [eax] edi +
jmp loc_413FA1  +
push 3  +
lea ecx [ebp+pvarg] +
pop eax  +
mov ecx [ecx+8] +
mov [ebp+var_38] ecx +
mov ecx [ebp+var_14] +
cmp [ecx] ax +
jz loc_413A7C  +
push eax  +
push edi  +
push ecx  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
jns loc_413A79  +
mov eax [ebp+var_34] +
mov dword ptr [eax] 1 +
jmp loc_413FA1  +
lea ecx [ebp+pvarg] +
mov edx [ebp+var_30] +
push ebx  +
push dword ptr [ecx+8]  +
mov esi [edx] +
push [ebp+var_38]  +
push edx  +
mov ecx [esi+60h] +
call ds:off_43B5A4  +
call dword ptr [esi+60h]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov ecx [ebp+pvarSrc] +
push 3  +
pop esi  +
cmp [ecx] si +
jz loc_413ACB  +
push esi  +
xor edi edi +
lea eax [ebp+pvarg] +
push edi  +
push ecx  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_413A3A  +
lea ecx [ebp+pvarg] +
mov eax [ebp+var_2C] +
mov esi [ebp+var_14] +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push dword ptr [ecx+8]  +
movs   +
mov ecx [ebx+5Ch] +
push edx  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+5Ch]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 5 +
jnz loc_4139E5  +
push 3  +
pop esi  +
push 8  +
pop edi  +
xor ebx ebx +
mov edx [ebp+ebx*4+pvarSrc] +
push 0Eh  +
movzx eax word ptr [edx] +
test al 0Fh +
pop edx  +
setnz cl  +
bt ax dx +
mov edx [ebp+ebx*4+pvarSrc] +
setb al  +
test cl al +
jz loc_413B7F  +
movzx ecx word ptr [edx] +
mov eax [edx+8] +
test cl 0Ch +
jz loc_413B46  +
push eax  +
call ds:VariantClear  +
mov ecx [ebp+ebx*4+pvarSrc] +
mov eax [ecx+8] +
mov [eax] si +
mov eax [ecx+8] +
add eax edi +
mov [ebp+ebx*4+var_28] eax +
inc ebx  +
cmp ebx 4 +
jl loc_413B07  +
mov esi [ebp+var_8] +
sub esp 10h +
mov edx [ebp+var_30] +
mov edi esp +
push [ebp+var_1C]  +
mov ebx [edx] +
push [ebp+var_20]  +
movs   +
push [ebp+var_24]  +
mov ecx [ebx+58h] +
push [ebp+var_28]  +
movs   +
push edx  +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+58h]  +
jmp loc_413A0D  +
mov eax [ebp+var_34] +
mov esi 80020005h +
mov [eax] ebx +
jmp loc_413FA1  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov eax [ebp+pvarSrc] +
push 3  +
pop esi  +
cmp [eax] si +
jz loc_413BBF  +
push esi  +
xor edi edi +
push edi  +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_413A3A  +
lea eax [ebp+pvarg] +
mov esi [ebp+var_14] +
sub esp 10h +
mov edx [ebp+var_30] +
mov edi esp +
push dword ptr [eax+8]  +
mov ebx [edx] +
movs   +
push edx  +
mov ecx [ebx+54h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+54h]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+50h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+50h]  +
mov esi eax +
test esi esi +
js loc_413FA1  +
push 8  +
mov eax [ebp+var_2C] +
pop ecx  +
mov [eax] cx +
jmp loc_413FA1  +
mov edx [ebp+var_30] +
mov eax [edx] +
mov esi [eax+4Ch] +
push ebx  +
push edx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
jmp loc_413A0D  +
mov edx [ebp+var_30] +
mov eax [edx] +
mov esi [eax+48h] +
jmp loc_413C34  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+44h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+44h]  +
jmp loc_413C14  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov esi [ebp+pvarSrc] +
mov edi 400Ch +
movzx ecx word ptr [esi] +
lea edx [edi-0Ch] +
mov eax ecx +
and eax edi +
cmp ax dx +
jnz loc_413CAD  +
mov esi 80020005h +
xor edi edi +
jmp loc_413A3A  +
cmp cx di +
jnz loc_413CCB  +
push dword ptr [esi+8]  +
call ds:VariantClear  +
mov eax [esi+8] +
push 8  +
pop edi  +
mov [eax] di +
mov ecx [esi+8] +
add ecx edi +
jmp loc_413CEA  +
mov eax 4008h +
cmp cx ax +
jnz loc_413CDA  +
mov ecx [esi+8] +
jmp loc_413CEA  +
push esi  +
call ds:VariantClear  +
push 8  +
pop eax  +
lea ecx [esi+8] +
mov [esi] ax +
mov eax [ebp+var_2C] +
mov esi [ebp+var_14] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push ecx  +
movs   +
mov ecx [ebx+40h] +
push edx  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+40h]  +
mov esi eax +
test esi esi +
js loc_413FA1  +
push 3  +
jmp loc_413C20  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+3Ch] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+3Ch]  +
jmp loc_413C14  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
push [ebp+var_2C]  +
mov esi [ebp+pvarSrc] +
mov edx [ebp+var_30] +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
movs   +
push edx  +
mov ecx [ebx+38h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+38h]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
push [ebp+var_2C]  +
mov esi [ebp+pvarSrc] +
mov edx [ebp+var_30] +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
movs   +
push edx  +
mov ecx [ebx+34h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+34h]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+30h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+30h]  +
jmp loc_413C14  +
test al 2 +
jz loc_413E21  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+2Ch] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+2Ch]  +
jmp loc_413C14  +
test al 4 +
jz loc_413E85  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov esi [ebp+pvarSrc] +
lea edi [ebp+var_28] +
mov eax [ebp+var_14] +
movs   +
cmp word ptr [eax] 8 +
movs   +
movs   +
movs   +
jz loc_413E5F  +
push 3  +
xor edi edi +
push edi  +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_413A6B  +
lea eax [ebp+pvarg] +
push dword ptr [eax+8]  +
mov edx [ebp+var_30] +
lea esi [ebp+var_28] +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+6Ch] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+6Ch]  +
jmp loc_413A0D  +
test al 2 +
jz loc_413EBD  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+28h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+28h]  +
jmp loc_413C14  +
test al 4 +
jz loc_413F21  +
cmp dword ptr [edi+8] 2 +
jnz loc_4139E5  +
mov esi [ebp+pvarSrc] +
lea edi [ebp+var_28] +
mov eax [ebp+var_14] +
movs   +
cmp word ptr [eax] 8 +
movs   +
movs   +
movs   +
jz loc_413EFB  +
push 3  +
xor edi edi +
push edi  +
push eax  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
js loc_413A6B  +
lea eax [ebp+pvarg] +
push dword ptr [eax+8]  +
mov edx [ebp+var_30] +
lea esi [ebp+var_28] +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+68h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+68h]  +
jmp loc_413A0D  +
cmp dword ptr [edi+8] 1 +
jnz loc_4139E5  +
mov eax [ebp+var_2C] +
mov esi [ebp+pvarSrc] +
add eax 8 +
mov edx [ebp+var_30] +
push eax  +
sub esp 10h +
mov edi esp +
mov ebx [edx] +
push edx  +
movs   +
mov ecx [ebx+24h] +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+24h]  +
mov esi eax +
test esi esi +
js loc_413FA1  +
push 9  +
jmp loc_413C20  +
mov edx [ebp+var_30] +
lea eax [ebx+8] +
push eax  +
push edx  +
mov ecx [edx] +
mov esi [ecx+20h] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov esi eax +
test esi esi +
js loc_413FA1  +
push 3  +
jmp loc_413F9D  +
mov edx [ebp+var_30] +
lea eax [ebx+8] +
push eax  +
push edx  +
mov ecx [edx] +
mov esi [ecx+1Ch] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov esi eax +
test esi esi +
js loc_413FA1  +
push 9  +
pop eax  +
mov [ebx] ax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax esi +
jmp loc_413FB4  +
mov eax 8002000Eh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn 24h  +
***
push ecx  +
sub esp 210h +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
test edi edi +
jnz loc_4141C2  +
xor eax eax +
jmp loc_4141E6  +
push esi  +
push 1  +
call sub_417D27  +
mov esi eax +
mov [ebx+20h] edi +
push edi  +
lea ecx [esi+1Ch] +
call sub_41CB7B  +
push esi  +
mov ecx ebx +
mov [eax] ebx +
call sub_418EAC  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
call ds:EnableWindow  +
retn   +
***
push esi  +
push edi  +
sub esp 64h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_64] ebx +
call sub_418F5B  +
mov esi eax +
test edi edi +
jz loc_4142C1  +
mov edi [edi+20h] +
and esi 40000000h +
jmp loc_4142FD  +
and esi 40000000h +
jz loc_4142D4  +
push dword ptr [ebx+20h]  +
call ds:GetParent  +
jmp loc_4142DF  +
push 4  +
push dword ptr [ebx+20h]  +
call ds:GetWindow  +
mov edi eax +
test edi edi +
jz loc_4142FD  +
push 0  +
push 0  +
push 36Bh  +
push edi  +
call ds:SendMessageW  +
mov ecx esi +
test eax eax +
jz loc_4142FD  +
mov edi eax +
and [ebp+Rect.left] 0 +
lea eax [ebp+Rect] +
and [ebp+Rect.top] 0 +
and [ebp+Rect.right] 0 +
and [ebp+Rect.bottom] 0 +
push eax  +
push dword ptr [ebx+20h]  +
call ds:GetWindowRect  +
xor eax eax +
mov [ebp+X] eax +
mov [ebp+Y] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
mov [ebp+Points.x] eax +
mov [ebp+Points.y] eax +
mov [ebp-2Ch] eax +
mov [ebp-28h] eax +
test esi esi +
jnz loc_4143C5  +
test edi edi +
jz loc_41435B  +
push 0FFFFFFF0h  +
push edi  +
call ds:GetWindowLongW  +
and eax 30000000h +
sub eax 10000000h +
neg eax  +
sbb eax eax +
not eax  +
and edi eax +
mov [ebp+rcSrc.left] 28h +
test edi edi +
jnz loc_414396  +
call sub_41360B  +
test eax eax +
jz loc_414372  +
mov eax [eax+20h] +
lea ecx [ebp+rcSrc] +
push ecx  +
push 1  +
push eax  +
call ds:MonitorFromWindow  +
push eax  +
call ds:GetMonitorInfoW  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp+Points] +
push eax  +
call ds:CopyRect  +
jmp loc_4143B5  +
lea eax [ebp+Points] +
push eax  +
push edi  +
call ds:GetWindowRect  +
lea eax [ebp+rcSrc] +
push eax  +
push 2  +
push edi  +
call ds:MonitorFromWindow  +
push eax  +
call ds:GetMonitorInfoW  +
lea eax [ebp-48h] +
push eax  +
lea eax [ebp+X] +
push eax  +
call ds:CopyRect  +
jmp loc_4143F4  +
push dword ptr [ebx+20h]  +
call ds:GetParent  +
mov esi eax +
lea eax [ebp+X] +
push eax  +
push esi  +
call ds:GetClientRect  +
lea eax [ebp+Points] +
push eax  +
push edi  +
call ds:GetClientRect  +
push 2  +
lea eax [ebp+Points] +
push eax  +
push esi  +
push edi  +
call ds:MapWindowPoints  +
mov eax [ebp-2Ch] +
add eax [ebp+Points.x] +
mov esi [ebp+Rect.right] +
sub esi [ebp+Rect.left] +
cdq   +
sub eax edx +
mov ebx eax +
mov eax esi +
cdq   +
sub eax edx +
sar ebx 1 +
sar eax 1 +
sub ebx eax +
mov eax [ebp+Rect.bottom] +
sub eax [ebp+Rect.top] +
mov [ebp+var_60] eax +
mov eax [ebp-28h] +
add eax [ebp+Points.y] +
lea ecx [esi+ebx] +
cdq   +
sub eax edx +
mov edi eax +
mov eax [ebp+var_60] +
cdq   +
sub eax edx +
sar edi 1 +
sar eax 1 +
sub edi eax +
cmp ecx [ebp+var_C] +
jle loc_414441  +
mov ebx [ebp+Rect.left] +
sub ebx [ebp+Rect.right] +
add ebx [ebp+var_C] +
cmp ebx [ebp+X] +
jge loc_414449  +
mov ebx [ebp+X] +
mov eax [ebp+var_60] +
add eax edi +
cmp eax [ebp+var_8] +
jle loc_41445C  +
mov edi [ebp+Rect.top] +
sub edi [ebp+Rect.bottom] +
add edi [ebp+var_8] +
cmp edi [ebp+Y] +
jge loc_414464  +
mov edi [ebp+Y] +
mov ecx [ebp+var_64] +
push 15h  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push 0  +
call sub_419028  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn 4  +
***
inc eax  +
retn   +
***
push 4  +
mov eax offset loc_43A739 +
call sub_41EF3C  +
mov ecx [ebp+8] +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_4144BF  +
call sub_412D77  +
call sub_41EF05  +
retn 4  +
***
mov eax 80004001h +
retn 8  +
***
mov eax [ecx+60h] +
and eax 10h +
retn   +
***
mov eax [ebp+arg_10] +
push esi  +
push edi  +
mov edi ecx +
test eax eax +
jz loc_414501  +
mov eax [eax+20h] +
push [ebp+arg_18]  +
mov ecx [ebp+arg_C] +
push [ebp+arg_14]  +
mov esi [edi] +
push eax  +
mov eax [ecx+0Ch] +
sub eax [ecx+4] +
push eax  +
mov eax [ecx+8] +
sub eax [ecx] +
push eax  +
push dword ptr [ecx+4]  +
mov eax [ebp+arg_8] +
push dword ptr [ecx]  +
mov ecx [esi+5Ch] +
or eax 40000000h +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push 0  +
call ds:off_43B5A4  +
mov ecx edi +
call dword ptr [esi+5Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
call sub_41EF3C  +
mov ebx ecx +
cmp dword ptr [ebp+0Ch] 0FFFFFFFCh +
mov edi 80004005h +
jnz loc_414618  +
mov eax [ebx] +
mov esi [eax+94h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_414618  +
cmp dword ptr [ebx+2Ch] 0 +
jnz loc_414601  +
lea eax [ebp-14h] +
push eax  +
call sub_412C65  +
mov edi eax +
test edi edi +
js loc_414618  +
xor edi edi +
mov [ebp-10h] edi +
mov eax [ebp-14h] +
lea ecx [ebp-10h] +
push ecx  +
push offset unk_443514  +
push eax  +
mov esi [eax] +
mov [ebp-4] edi +
mov ecx [esi] +
call ds:off_43B5A4  +
call dword ptr [esi]  +
test eax eax +
js loc_4145F7  +
mov eax [ebp-10h] +
lea ecx [ebx+34h] +
push ecx  +
mov [ebx+2Ch] eax +
lea ecx [ebx+30h] +
push ecx  +
mov esi [eax] +
push eax  +
mov ecx [esi+0Ch] +
call ds:off_43B5A4  +
call dword ptr [esi+0Ch]  +
push dword ptr [ebx+2Ch]  +
push dword ptr [ebp+8]  +
push offset stru_443524  +
call LresultFromObject  +
mov ecx [ebp+10h] +
mov [ecx] eax +
lea ecx [ebp-10h] +
call sub_412DE7  +
jmp loc_414618  +
push dword ptr [ebx+2Ch]  +
push dword ptr [ebp+8]  +
push offset stru_443524  +
call LresultFromObject  +
mov ecx [ebp+10h] +
xor edi edi +
mov [ecx] eax +
mov eax edi +
call sub_41EF05  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_414644  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_414664  +
and dword ptr [eax] 0 +
xor eax eax +
inc eax  +
pop ebp  +
retn 10h  +
***
call sub_40FC94  +
mov eax [ebp+arg_14] +
push esi  +
push edi  +
mov edi ecx +
test eax eax +
jz loc_414681  +
mov eax [eax+20h] +
push [ebp+arg_1C]  +
mov ecx [ebp+arg_10] +
push [ebp+arg_18]  +
mov esi [edi] +
push eax  +
mov eax [ecx+0Ch] +
sub eax [ecx+4] +
push eax  +
mov eax [ecx+8] +
sub eax [ecx] +
push eax  +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
mov ecx [esi+5Ch] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
mov ecx edi +
call dword ptr [esi+5Ch]  +
pop edi  +
pop esi  +
pop ebp  +
retn 20h  +
***
push ebp  +
mov ebp esp +
sub esp 30h +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_4146E1  +
push 0FFFFFFFFh  +
push esi  +
call sub_41AD27  +
test eax eax +
jz loc_4147B9  +
mov eax [ebp+8] +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
mov [ebp-8] eax +
mov eax [ebp+14h] +
mov [ebp-10h] eax +
mov eax [ebp+18h] +
mov [ebp-14h] eax +
mov eax [ebp+1Ch] +
mov [ebp-18h] eax +
mov eax [ebp+20h] +
mov [ebp-1Ch] eax +
mov eax [ebp+24h] +
mov [ebp-20h] eax +
mov eax [ebp+28h] +
mov [ebp-24h] eax +
mov eax [ebp+2Ch] +
mov [ebp-0Ch] esi +
mov [ebp-28h] eax +
call sub_419983  +
lea ecx [ebp-30h] +
push ecx  +
mov eax [eax+8] +
mov [ebp-2Ch] eax +
mov eax [ebp+30h] +
mov [ebp-30h] eax +
mov eax [edi] +
mov esi [eax+64h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
test eax eax +
jnz loc_41475C  +
mov eax [edi] +
mov esi [eax+120h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor eax eax +
jmp loc_4147B3  +
push ebx  +
push edi  +
call sub_413677  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-20h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-0Ch]  +
push dword ptr [ebp-8]  +
push dword ptr [ebp-4]  +
call sub_418B1D  +
mov ebx eax +
call sub_4137E3  +
test eax eax +
jnz loc_4147AB  +
mov ecx [edi] +
mov esi [ecx+120h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor eax eax +
test ebx ebx +
pop ebx  +
setnz al  +
pop edi  +
pop esi  +
leave   +
retn 2Ch  +
***
call sub_40FC94  +
push 0Ch  +
call sub_419112  +
test eax eax +
jz loc_4147D2  +
mov dword ptr [eax] offset off_4434D4 +
retn   +
***
xor eax eax +
retn   +
***
call sub_41EF3C  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+64h] 0 +
jz loc_41482D  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword ptr [edi+20h]  +
push dword ptr [edi+64h]  +
jmp loc_41485E  +
mov eax [edi] +
push esi  +
mov esi [eax+0FCh] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
push [ebp+lParam]  +
push [ebp+wParam]  +
mov eax [eax] +
push [ebp+Msg]  +
push dword ptr [edi+20h]  +
test eax eax +
jnz loc_41485D  +
call ds:DefWindowProcW  +
jmp loc_414864  +
push eax  +
call ds:CallWindowProcW  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
mov edi ecx +
mov ecx offset unk_453380 +
push offset loc_40FCF0  +
call sub_41938D  +
mov edx eax +
test edx edx +
jz loc_4148A2  +
push dword ptr [edx+64h]  +
mov eax [edi] +
push dword ptr [edx+60h]  +
push dword ptr [edx+5Ch]  +
mov esi [eax+11Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
call sub_40FC94  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
mov eax [edi+20h] +
test eax eax +
jnz loc_4148C6  +
cmp [edi+74h] esi +
jz loc_41490C  +
test eax eax +
jz loc_4148E2  +
push esi  +
call sub_417D27  +
test eax eax +
jz loc_41490F  +
push dword ptr [edi+20h]  +
lea ecx [eax+1Ch] +
call sub_41CD26  +
mov eax [edi+20h] +
test eax eax +
jnz loc_4148E7  +
cmp [edi+74h] esi +
jz loc_41490A  +
mov edi [edi+74h] +
test edi edi +
jnz loc_4148F7  +
push eax  +
call ds:DestroyWindow  +
jmp loc_414908  +
mov eax [edi] +
mov esi [eax+58h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov esi eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
call sub_40FC94  +
push esi  +
push edi  +
call sub_41EF70  +
mov esi ecx +
xor ebx ebx +
cmp [esi+7Ch] ebx +
jz loc_414B09  +
call sub_414DEA  +
mov edi eax +
test edi edi +
jz loc_414A0D  +
cmp [edi+4] ebx +
jnz loc_4149AE  +
push dword ptr [esi+20h]  +
mov ecx edi +
call loc_41D9CF  +
cmp [edi+4] ebx +
jz loc_414B09  +
mov ecx edi +
call sub_41D8B4  +
push edi  +
push ebx  +
push Msg  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
mov ecx edi +
mov ebx eax +
call sub_41DB0F  +
cmp eax 8899000Ch +
jnz loc_4149F2  +
push dword ptr [esi+20h]  +
mov ecx edi +
call sub_41DC40  +
push edi  +
push 0  +
push dword_45330C  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
test ebx ebx +
jz loc_414B09  +
push 0  +
push dword ptr [esi+20h]  +
call ds:ValidateRect  +
xor eax eax +
inc eax  +
jmp loc_414B0B  +
mov ecx esi +
call sub_414C49  +
mov edi eax +
test edi edi +
jz loc_414B09  +
cmp [edi+4] ebx +
jnz loc_414A56  +
fldz   +
lea eax [ebp-3Ch] +
fst  dword ptr [ebp-2Ch] +
push eax  +
mov ecx edi +
mov [ebp-3Ch] ebx +
fstp  dword ptr [ebp-30h] +
mov dword ptr [ebp-38h] 57h +
mov dword ptr [ebp-34h] 3 +
mov [ebp-28h] ebx +
mov [ebp-24h] ebx +
call sub_41D948  +
cmp [edi+4] ebx +
jz loc_414B09  +
lea ecx [ebp-8Ch] +
call sub_41BECA  +
lea eax [ebp-20h] +
mov [ebp-4] ebx +
push eax  +
push dword ptr [esi+20h]  +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
call ds:GetClientRect  +
lea eax [ebp-7Ch] +
push eax  +
push dword ptr [esi+20h]  +
call ds:BeginPaint  +
push eax  +
lea ecx [ebp-8Ch] +
call sub_41C0A0  +
lea eax [ebp-20h] +
mov ecx edi +
push eax  +
lea eax [ebp-8Ch] +
push eax  +
call sub_41D90C  +
mov ecx edi +
call sub_41D8B4  +
push edi  +
push ebx  +
push Msg  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
mov ecx edi +
mov ebx eax +
call sub_41DB0F  +
cmp eax 8899000Ch +
jnz loc_414AE2  +
push edi  +
push 0  +
push dword_45330C  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
lea ecx [ebp-8Ch] +
call sub_41C199  +
lea eax [ebp-7Ch] +
push eax  +
push dword ptr [esi+20h]  +
call ds:EndPaint  +
lea ecx [ebp-8Ch] +
call sub_41BEDE  +
mov eax ebx +
jmp loc_414B0B  +
xor eax eax +
call sub_41EF1A  +
retn   +
***
mov eax [ebp+arg_0] +
mov [ecx+28h] eax +
mov dword ptr [ecx+18h] 1 +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov [ecx+68h] eax +
mov eax [ecx+60h] +
test al 10h +
jz loc_414B64  +
and eax 0FFFFFFEFh +
mov [ecx+60h] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
call ds:EnableWindow  +
retn   +
***
lea eax [ecx+28h] +
mov ecx [ecx+0Ch] +
push esi  +
push esi  +
mov ecx offset unk_453380 +
call sub_412B8E  +
push esi  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_414CE1  +
mov eax 80004003h +
jmp loc_414CE9  +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
inc eax  +
retn 8  +
***
push ecx  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jnz loc_414D13  +
mov eax 80004003h +
jmp loc_414D32  +
push esi  +
mov esi [ebp+arg_0] +
lea ecx [ebp-1] +
push dword ptr [esi-18h]  +
call sub_4195C5  +
mov eax [esi-14h] +
lea ecx [ebp-1] +
mov [edi] eax +
call nullsub_1  +
xor eax eax +
pop esi  +
pop edi  +
leave   +
retn 8  +
***
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jnz loc_414D54  +
mov eax 80010108h +
jmp loc_414D74  +
push esi  +
push [ebp+arg_14]  +
mov esi [eax] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
mov ecx [esi+14h] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:off_43B5A4  +
call dword ptr [esi+14h]  +
pop esi  +
pop ebp  +
retn 18h  +
***
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_41387B  +
pop ebp  +
retn 18h  +
***
retn   +
***
push eax  +
retn   +
***
mov eax [ecx+5Ch] +
call sub_412B8E  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
push esi  +
push edi  +
push [ebp+nBar]  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+78h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_414E3B  +
push 2  +
push dword ptr [eax+20h]  +
jmp loc_414E41  +
push [ebp+nBar]  +
push dword ptr [edi+20h]  +
call ds:GetScrollPos  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
jz loc_414E77  +
mov esi [ecx+20h] +
test esi esi +
jz loc_414E77  +
push esi  +
jmp loc_414E66  +
mov esi eax +
push eax  +
call sub_413630  +
test eax eax +
jnz loc_414E63  +
push esi  +
call sub_414BBE  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jnz loc_414E94  +
mov eax 80010108h +
jmp loc_414EAE  +
push esi  +
push [ebp+arg_C]  +
mov esi [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov ecx [esi+10h] +
push eax  +
call ds:off_43B5A4  +
call dword ptr [esi+10h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax 80004001h +
retn 10h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_414EE4  +
mov eax 80010108h +
jmp loc_414EF9  +
mov eax [ecx] +
push esi  +
push [ebp+arg_4]  +
mov esi [eax+0Ch] +
push ecx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_414F11  +
mov eax 80004003h +
jmp loc_414F19  +
mov dword ptr [eax] 1 +
xor eax eax +
pop ebp  +
retn 8  +
***
retn 8  +
***
call sub_41EF3C  +
sub esp 14h +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx] eax +
jnz loc_4150FB  +
cmp [ecx+4] eax +
jnz loc_4150FB  +
cmp dword ptr [ecx+8] 0C0h +
jnz loc_4150FB  +
cmp dword ptr [ecx+0Ch] 46000000h +
jnz loc_4150FB  +
inc eax  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jnz loc_415114  +
mov eax 80010108h +
jmp loc_41513D  +
push esi  +
push [ebp+arg_20]  +
mov esi [eax] +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
mov ecx [esi+18h] +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:off_43B5A4  +
call dword ptr [esi+18h]  +
pop esi  +
pop ebp  +
retn 24h  +
***
call sub_41EF3C  +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0FFFFFFF0h  +
push [ebp+hWnd]  +
call sub_417753  +
pop ebp  +
retn 10h  +
***
cmp [ebp+arg_0] 0 +
jnz loc_415216  +
call sub_4199B6  +
mov eax [eax+48h] +
test eax eax +
jz loc_415216  +
test dword ptr [eax+4] 40000000h +
jnz loc_415216  +
push 1  +
call sub_41422F  +
xor eax eax +
pop ebp  +
retn 8  +
***
push ecx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_415240  +
lea eax [ebp+var_4] +
push eax  +
call sub_416F61  +
test eax eax +
jz loc_415240  +
mov eax [ebp+var_4] +
jmp loc_415247  +
mov ecx esi +
call loc_414869  +
pop esi  +
leave   +
retn 0Ch  +
***
cmp dword ptr [ecx+74h] 0 +
jz loc_415297  +
push esi  +
push [ebp+lParam]  +
mov esi [ebp+arg_0] +
push [ebp+wParam]  +
lea eax [esi+2000h] +
push eax  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
lea ecx [esi-132h] +
mov edx eax +
pop esi  +
cmp ecx 6 +
ja loc_415289  +
test edx edx +
jnz loc_415289  +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_415292  +
mov [eax] edx +
xor eax eax +
inc eax  +
jmp loc_415285  +
pop ebp  +
jmp sub_416C40  +
***
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
movzx edi si +
shr esi 10h +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_415303  +
test edi edi +
jz loc_415333  +
lea ecx [ebp-2Ch] +
call sub_412CE8  +
mov esi [ebx] +
lea eax [ebp-2Ch] +
push 0  +
push eax  +
push 0FFFFFFFFh  +
mov ecx [esi+0Ch] +
push edi  +
mov [ebp-28h] edi +
call ds:off_43B5A4  +
mov ecx ebx +
call dword ptr [esi+0Ch]  +
cmp dword ptr [ebp-4] 0 +
jz loc_415337  +
xor esi esi +
mov eax [ebx] +
push 0  +
push 0  +
push esi  +
mov esi [eax+0Ch] +
mov ecx esi +
push edi  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_41533A  +
push offset loc_40FCF0  +
mov ecx offset unk_453380 +
call sub_41938D  +
test eax eax +
jz loc_415341  +
mov eax [eax+13Ch] +
cmp eax [ebx+20h] +
jz loc_415337  +
push 0  +
push dword ptr [ebp+0Ch]  +
call sub_416D33  +
test eax eax +
jnz loc_415337  +
test edi edi +
jnz loc_4152EA  +
xor eax eax +
jmp loc_41533A  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_40FC94  +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+8]  +
call sub_416D33  +
test eax eax +
jz loc_41536F  +
mov eax [ebp+var_4] +
jmp loc_415376  +
mov ecx esi +
call loc_414869  +
pop esi  +
leave   +
retn 8  +
***
push ecx  +
push esi  +
lea eax [ebp+var_4] +
mov esi ecx +
mov ecx [ebp+arg_4] +
push eax  +
call sub_416F61  +
test eax eax +
jz loc_41539C  +
mov eax [ebp+var_4] +
jmp loc_4153A3  +
mov ecx esi +
call loc_414869  +
pop esi  +
leave   +
retn 0Ch  +
***
mov eax [ebp+arg_4] +
push esi  +
push 0  +
mov esi ecx +
push dword ptr [eax+0Ch]  +
call sub_416D33  +
test eax eax +
jnz loc_4153CE  +
mov ecx esi +
call loc_414869  +
pop esi  +
pop ebp  +
retn 8  +
***
push edi  +
mov edi ecx +
mov ebx [edi+70h] +
test ebx ebx +
jz loc_4153FF  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov ecx [edi+2Ch] +
xor ebx ebx +
mov [edi+70h] ebx +
test ecx ecx +
jz loc_41541D  +
mov eax [ecx] +
push ebx  +
push ebx  +
push ecx  +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov ecx [edi+28h] +
test ecx ecx +
jz loc_415437  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov [edi+28h] ebx +
cmp [edi+38h] ebx +
jz loc_415445  +
push ebx  +
push ebx  +
mov ecx edi +
call loc_416DDD  +
mov ebx [edi+7Ch] +
test ebx ebx +
jz loc_415463  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
and dword ptr [edi+7Ch] 0 +
mov ecx edi +
pop edi  +
pop esi  +
pop ebx  +
jmp loc_414869  +
***
push esi  +
mov esi ecx +
call sub_419983  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_41548F  +
cmp [ecx+20h] esi +
jnz loc_41548F  +
push [ebp+pDeviceName]  +
call sub_41DE65  +
mov ecx esi +
call sub_418F5B  +
test eax 40000000h +
jnz loc_4154B7  +
call sub_414C0C  +
push 1  +
push 1  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [esi+20h]  +
call sub_416FA9  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41360B  +
cmp eax esi +
jnz loc_4154D6  +
mov ecx offset dword_453388 +
call sub_41A16B  +
mov ecx esi +
call sub_418F5B  +
test eax 40000000h +
jnz loc_4154FE  +
call sub_414C0C  +
push 1  +
push 1  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
push dword ptr [esi+20h]  +
call sub_416FA9  +
mov ecx esi +
call loc_414869  +
pop esi  +
retn 0Ch  +
***
push ecx  +
push esi  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
call sub_416D33  +
test eax eax +
jz loc_41552F  +
mov eax [ebp+var_4] +
jmp loc_415536  +
mov ecx esi +
call loc_414869  +
pop esi  +
leave   +
retn 8  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41554D  +
mov eax [eax+4] +
push 1Eh  +
push eax  +
push 317h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 24h  +
***
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
push edi  +
cmp dword ptr [esi] 1 +
jnz loc_4155A2  +
push dword ptr [esi+14h]  +
call sub_41CFC5  +
mov edi eax +
test edi edi +
jz loc_4155A2  +
mov ecx [edi] +
push esi  +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_4155B7  +
push 0  +
push dword ptr [esi+14h]  +
call sub_416D33  +
test eax eax +
jnz loc_4155B7  +
mov ecx ebx +
call loc_414869  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
sub esp 1Ch +
push esi  +
push edi  +
mov esi ecx +
mov edi 121h +
jmp loc_4155DB  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push 1  +
push edi  +
push edi  +
push 0  +
lea eax [ebp+Msg] +
push eax  +
call ds:PeekMessageW  +
test eax eax +
jnz loc_4155D1  +
mov ecx esi +
call loc_414869  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi ecx +
cmp dword ptr [edi+20h] 0 +
mov esi [edi] +
jz loc_41561C  +
mov ecx [esi+60h] +
call ds:off_43B5A4  +
mov ecx edi +
call dword ptr [esi+60h]  +
jmp loc_41562E  +
mov esi [esi+120h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax dword_453338 +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
inc ebx  +
push edi  +
mov edi ecx +
test al bl +
jnz loc_415678  +
or eax ebx +
push offset aUser32_dll  +
mov dword_453338 eax +
call ds:GetModuleHandleW  +
mov ecx eax +
mov eax dword_453338 +
mov dword_453334 ecx +
jmp loc_41567E  +
mov ecx dword_453334 +
test ecx ecx +
jz loc_4158EC  +
test al 2 +
jnz loc_4156AE  +
push offset aGetgestureinfo  +
or eax 2 +
push ecx  +
mov dword_453338 eax +
call ds:GetProcAddress  +
mov ecx dword_453334 +
mov dword_45333C eax +
mov eax dword_453338 +
test al 4 +
jnz loc_4156CD  +
push offset aClosegesturein  +
or eax 4 +
push ecx  +
mov dword_453338 eax +
call ds:GetProcAddress  +
mov dword_453340 eax +
jmp loc_4156D2  +
mov eax dword_453340 +
cmp dword_45333C 0 +
jz loc_4158DE  +
test eax eax +
jz loc_4158DE  +
mov eax [edi+54h] +
push 30h  +
pop esi  +
test eax eax +
jnz loc_4156FB  +
push esi  +
call sub_40FBD5  +
pop ecx  +
mov [edi+54h] eax +
push esi  +
push 0  +
push eax  +
call sub_420490  +
mov eax [edi+54h] +
add esp 0Ch +
mov [eax] esi +
push dword ptr [edi+54h]  +
mov esi dword_45333C +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
call ds:off_43B5A4  +
call esi  +
test eax eax +
jz loc_4158CF  +
mov eax [edi+54h] +
mov edx [edi+20h] +
cmp [eax+0Ch] edx +
jnz loc_4158CF  +
movsx ecx word ptr [eax+12h] +
movsx eax word ptr [eax+10h] +
mov [ebp-8] eax +
lea eax [ebp-8] +
push eax  +
push edx  +
mov [ebp-4] ecx +
call ds:ScreenToClient  +
mov ecx [edi+54h] +
mov eax [ecx+8] +
sub eax 1 +
jz loc_4158B5  +
sub eax 1 +
jz loc_41589F  +
sub eax 1 +
jz loc_41583D  +
sub eax 1 +
jz loc_415827  +
sub eax 1 +
jz loc_4157BE  +
sub eax 1 +
jz loc_41579F  +
sub eax 1 +
jnz loc_41587C  +
mov eax [edi] +
push dword ptr [ecx+20h]  +
mov esi [eax+144h] +
jmp loc_41584C  +
mov eax [edi] +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
mov esi [eax+140h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_41585E  +
mov eax [ecx+20h] +
mov ecx [ecx+24h] +
mov esi [edi] +
mov [ebp-10h] eax +
mov eax ecx +
and ecx 7FFFFFFFh +
and eax 80000000h +
mov [ebp-0Ch] ecx +
fild  qword ptr [ebp-10h] +
and dword ptr [ebp-10h] 0 +
mov [ebp-0Ch] eax +
mov esi [esi+13Ch] +
fild  qword ptr [ebp-10h] +
push ecx  +
push ecx  +
fchs   +
faddp st(1) st +
fstp  qword ptr [ebp-10h] +
fld  qword ptr [ebp-10h] +
fdiv  ds:dbl_443C30 +
fmul  ds:dbl_443C20 +
fmul  ds:dbl_443C18 +
fsub  ds:dbl_443C28 +
fstp  qword ptr [esp] +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_41585E  +
push dword ptr [ebp-4]  +
mov eax [edi] +
push dword ptr [ebp-8]  +
push dword ptr [edi+40h]  +
mov esi [eax+138h] +
push dword ptr [edi+3Ch]  +
jmp loc_415819  +
***
mov esi [edi] +
mov eax [ecx+20h] +
sub eax [edi+48h] +
push eax  +
mov esi [esi+134h] +
push dword ptr [ebp-4]  +
mov ecx esi +
push dword ptr [ebp-8]  +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov ebx eax +
neg ebx  +
sbb ebx ebx +
inc ebx  +
test ebx ebx +
jnz loc_41587C  +
push dword ptr [ebp+0Ch]  +
mov esi dword_453340 +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov ecx [edi+54h] +
mov eax [ebp-8] +
mov [edi+3Ch] eax +
mov eax [ebp-4] +
mov [edi+40h] eax +
mov eax [ecx+20h] +
mov [edi+48h] eax +
mov eax [ecx+24h] +
mov [edi+4Ch] eax +
test ebx ebx +
jnz loc_4158DE  +
xor eax eax +
jmp loc_4158E5  +
or dword ptr [edi+3Ch] 0FFFFFFFFh +
or dword ptr [edi+40h] 0FFFFFFFFh +
xor eax eax +
push 30h  +
push eax  +
mov [edi+48h] eax +
mov [edi+4Ch] eax +
push ecx  +
jmp loc_4158D6  +
mov eax [ebp-8] +
mov [edi+3Ch] eax +
mov eax [ebp-4] +
mov [edi+40h] eax +
mov eax [ecx+20h] +
mov [edi+48h] eax +
mov eax [ecx+24h] +
mov [edi+4Ch] eax +
jmp loc_4158DE  +
push 30h  +
push 0  +
push dword ptr [edi+54h]  +
call sub_420490  +
add esp 0Ch +
mov ecx edi +
call loc_414869  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_40FC94  +
retn 0Ch  +
***
push ecx  +
push edi  +
mov edi ecx +
cmp byte ptr [edi+24h] 0 +
jnz loc_415924  +
call loc_414869  +
jmp loc_415953  +
mov eax [edi] +
lea ecx [ebp+var_4] +
and [ebp+var_4] 0 +
push esi  +
push ecx  +
push [ebp+arg_4]  +
mov esi [eax+0F0h] +
mov ecx esi +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
test eax eax +
jns loc_415950  +
mov ecx edi +
jmp loc_41591D  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_415978  +
push 0  +
call sub_416F61  +
test eax eax +
jnz loc_41597F  +
mov ecx esi +
call loc_414869  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi ecx +
call sub_418F5B  +
test eax 40000000h +
jnz loc_4159EC  +
call sub_41360B  +
mov esi eax +
test esi esi +
jz loc_4159EC  +
push 10h  +
call ds:GetKeyState  +
test ax ax +
js loc_4159EC  +
push 11h  +
call ds:GetKeyState  +
test ax ax +
js loc_4159EC  +
push 12h  +
call ds:GetKeyState  +
test ax ax +
js loc_4159EC  +
push 0  +
push 0E146h  +
push 111h  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
xor eax eax +
inc eax  +
jmp loc_4159F9  +
mov ecx edi +
call loc_414869  +
neg eax  +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [ebx] 1 +
jnz loc_415A70  +
push offset loc_40FCF0  +
mov ecx offset unk_453380 +
call sub_41938D  +
test eax eax +
jz loc_415A9C  +
mov ecx [eax+74h] +
cmp ecx [edi+20h] +
jnz loc_415A36  +
push dword ptr [eax+78h]  +
call sub_41CFB3  +
jmp loc_415A47  +
mov eax [edi] +
mov esi [eax+6Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_415A9C  +
push dword ptr [ebx+8]  +
push eax  +
call sub_4175D6  +
mov [ebp-4] eax +
test eax eax +
jz loc_415A8E  +
mov ecx [eax] +
push ebx  +
mov esi [ecx+10h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx [ebp-4] +
call esi  +
jmp loc_415A8E  +
push 1  +
push dword ptr [ebx+4]  +
push dword ptr [edi+20h]  +
call sub_414C59  +
test eax eax +
jz loc_415A8E  +
push 0  +
mov ecx eax +
call sub_416F61  +
test eax eax +
jnz loc_415A95  +
mov ecx edi +
call loc_414869  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov [ebp-8] eax +
mov eax [ebp+0Ch] +
mov ecx offset unk_453380 +
push offset loc_40FCF0  +
mov [ebp-0Ch] eax +
call sub_41938D  +
test eax eax +
jz loc_415B06  +
mov eax [eax+5Ch] +
lea ecx [ebp-0Ch] +
sub eax 132h +
mov [ebp-4] eax +
mov eax [edi] +
push ecx  +
push 0  +
push 19h  +
mov esi [eax+114h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
call sub_40FC94  +
sub esp 34h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call sub_41DDD6  +
mov esi eax +
xor ebx ebx +
test esi esi +
jz loc_415B65  +
cmp [esi+20h] edi +
jnz loc_415B5D  +
call sub_419983  +
cmp [eax+14h] bl +
jnz loc_415B5A  +
call sub_419983  +
cmp esi [eax+4] +
jnz loc_415B54  +
call sub_41DF05  +
test eax eax +
jz loc_415B5A  +
push ebx  +
call sub_41DE3B  +
mov [esi+20h] ebx +
cmp [esi+24h] edi +
jnz loc_415B65  +
mov [esi+24h] ebx +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_415B81  +
mov eax [ebx] +
mov esi [eax+50h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
and dword ptr [edi+6Ch] 0 +
mov ebx [edi+70h] +
test ebx ebx +
jz loc_415B9B  +
mov eax [ebx] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
xor ebx ebx +
test byte ptr [edi+60h] 1 +
mov [edi+70h] ebx +
jz loc_415BF0  +
call sub_4199B6  +
mov esi [eax+3Ch] +
test esi esi +
jz loc_415BF0  +
cmp [esi+20h] ebx +
jz loc_415BF0  +
push 30h  +
lea eax [ebp+lParam] +
push ebx  +
push eax  +
call sub_420490  +
mov eax [edi+20h] +
add esp 0Ch +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
lea eax [ebp+lParam] +
mov [ebp+lParam] 2Ch +
push eax  +
push ebx  +
push 433h  +
push dword ptr [esi+20h]  +
mov [ebp+var_30] 1 +
call ds:SendMessageW  +
push 0FFFFFFFCh  +
push dword ptr [edi+20h]  +
call ds:GetWindowLongW  +
mov ecx edi +
mov esi eax +
call loc_414869  +
push 0FFFFFFFCh  +
push dword ptr [edi+20h]  +
call ds:GetWindowLongW  +
cmp eax esi +
jnz loc_415C38  +
mov eax [edi] +
mov esi [eax+0FCh] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
cmp [eax] ebx +
jz loc_415C38  +
push dword ptr [eax]  +
push 0FFFFFFFCh  +
push dword ptr [edi+20h]  +
call ds:SetWindowLongW  +
mov ecx edi +
call sub_414941  +
mov eax [edi] +
mov esi [eax+120h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
mov ebx [esi] +
push ebx  +
call ds:GetDlgCtrlID  +
mov [ebp-8] eax +
mov ecx offset unk_453380 +
mov eax [esi+8] +
push offset loc_40FCF0  +
mov [ebp-4] eax +
call sub_41938D  +
test eax eax +
jz loc_415CF5  +
mov eax [eax+13Ch] +
cmp eax [edi+20h] +
jz loc_415CEB  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_416D33  +
test eax eax +
jnz loc_415CEB  +
mov eax [ebp+10h] +
mov [ebp-10h] eax +
lea eax [ebp-10h] +
push 0  +
push eax  +
mov eax [ebp-4] +
movzx eax ax +
mov [ebp-0Ch] esi +
or eax 4E0000h +
mov esi [edi] +
push eax  +
push dword ptr [ebp-8]  +
mov ecx [esi+0Ch] +
call ds:off_43B5A4  +
mov ecx edi +
call dword ptr [esi+0Ch]  +
jmp loc_415CEE  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call sub_40FC94  +
movzx eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp eax 1 +
jz loc_415D14  +
cmp eax 2 +
jnz loc_415D22  +
push 0  +
push [ebp+arg_4]  +
call sub_416D33  +
test eax eax +
jnz loc_415D29  +
mov ecx esi +
call loc_414869  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi ecx +
mov ebx [edi+70h] +
test ebx ebx +
jz loc_415D55  +
mov eax [ebx] +
push esi  +
mov esi [eax+90h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
pop esi  +
test eax eax +
jnz loc_415D5C  +
mov ecx edi +
call loc_414869  +
pop edi  +
pop ebx  +
retn 4  +
***
and dword_453100 0 +
push ebx  +
push edi  +
mov edi ecx +
mov ebx [edi+70h] +
test ebx ebx +
jz loc_415D9A  +
mov eax [ebx] +
push esi  +
push 0FFFFFD3Fh  +
mov esi [eax+50h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
pop esi  +
push 0  +
push 0  +
push 0  +
mov ecx edi +
call sub_4154C0  +
pop edi  +
pop ebx  +
retn 8  +
***
call sub_419983  +
mov eax [eax+4] +
test eax eax +
jz loc_415DCE  +
cmp [eax+20h] esi +
jnz loc_415DCE  +
mov ecx offset dword_453388 +
call sub_41A119  +
mov ecx esi +
call sub_418F5B  +
test eax 40000000h +
jnz loc_415DEE  +
push 1  +
push 1  +
push 0  +
push 0  +
push 15h  +
push dword ptr [esi+20h]  +
call sub_416FA9  +
mov ecx esi +
pop esi  +
jmp loc_414869  +
***
push ecx  +
push ecx  +
mov edx [ebp+arg_4] +
movsx eax dx +
push esi  +
mov [ebp+Point.x] eax +
shr edx 10h +
push edi  +
movsx eax dx +
mov edi ecx +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [edi+20h]  +
call ds:ScreenToClient  +
mov eax [edi] +
push [ebp+Point.y]  +
push [ebp+Point.x]  +
mov esi [eax+130h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
push ecx  +
push ebx  +
push edi  +
push [ebp+ptParentClientCoords.y]  +
mov ebx ecx +
push [ebp+ptParentClientCoords.x]  +
push dword ptr [ebx+20h]  +
call sub_41CA4C  +
mov edi eax +
test edi edi +
jz loc_415EB8  +
push esi  +
push edi  +
call ds:GetDlgCtrlID  +
mov esi [ebp+arg_8] +
mov [ebp+var_4] eax +
test esi esi +
jz loc_415EB2  +
cmp dword ptr [esi] 2Ch +
jb loc_415EB2  +
mov ecx [ebx+20h] +
or dword ptr [esi+4] 1 +
or dword ptr [esi+24h] 0FFFFFFFFh +
push 0  +
push 0  +
push 87h  +
push edi  +
mov [esi+8] ecx +
mov [esi+0Ch] edi +
call ds:SendMessageW  +
test eax 2000h +
jnz loc_415EB2  +
or dword ptr [esi+4] 80000002h +
mov eax [ebp+var_4] +
pop esi  +
jmp loc_415EBB  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
retn 14h  +
***
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+var_4] esi +
cmp [ebp+arg_0] edi +
jbe loc_415F4C  +
mov ebx [ebp+arg_4] +
push 64h  +
pop ecx  +
mov eax [ebx] +
cdq   +
idiv  ecx +
mov [ebp+Point.x] eax +
mov eax [ebx+4] +
cdq   +
idiv  ecx +
mov [ebp+Point.y] eax +
lea eax [ebp+Point] +
push eax  +
push dword ptr [esi+20h]  +
call ds:ScreenToClient  +
mov esi [esi] +
push ebx  +
push [ebp+arg_0]  +
mov esi [esi+12Ch] +
mov ecx esi +
push edi  +
push [ebp+Point.y]  +
push [ebp+Point.x]  +
call ds:off_43B5A4  +
mov ecx [ebp+var_4] +
call esi  +
test eax eax +
jz loc_415F56  +
mov esi [ebp+var_4] +
inc edi  +
add ebx 28h +
push 64h  +
pop ecx  +
cmp edi [ebp+arg_0] +
jb loc_415EFB  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor eax eax +
jmp loc_415F4F  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
movzx edi word ptr [ebp+8] +
mov ebx ecx +
test edi edi +
jz loc_41607F  +
mov eax dword_453328 +
test al 1 +
jnz loc_415FA0  +
or eax 1 +
push offset aUser32_dll  +
mov dword_453328 eax +
call ds:GetModuleHandleW  +
mov ecx eax +
mov eax dword_453328 +
mov dword_453324 ecx +
jmp loc_415FA6  +
mov ecx dword_453324 +
test ecx ecx +
jz loc_41608B  +
test al 2 +
jnz loc_415FD6  +
push offset aGettouchinputi  +
or eax 2 +
push ecx  +
mov dword_453328 eax +
call ds:GetProcAddress  +
mov ecx dword_453324 +
mov dword_45332C eax +
mov eax dword_453328 +
test al 4 +
jnz loc_415FF5  +
push offset aClosetouchinpu  +
or eax 4 +
push ecx  +
mov dword_453328 eax +
call ds:GetProcAddress  +
mov dword_453330 eax +
jmp loc_415FFA  +
mov eax dword_453330 +
cmp dword_45332C 0 +
jz loc_41607D  +
test eax eax +
jz loc_41607D  +
xor ecx ecx +
mov eax edi +
push 28h  +
pop esi  +
mul  esi +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40FC12  +
mov [ebp-4] eax +
pop ecx  +
test eax eax +
jz loc_41607D  +
push esi  +
mov esi dword_45332C +
mov ecx esi +
push eax  +
push edi  +
push dword ptr [ebp+0Ch]  +
call ds:off_43B5A4  +
call esi  +
test eax eax +
jz loc_41607D  +
mov eax [ebx] +
push dword ptr [ebp-4]  +
push edi  +
mov esi [eax+128h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
push dword ptr [ebp-4]  +
mov edi eax +
call sub_40FC0D  +
mov esi dword_453330 +
pop ecx  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
test edi edi +
jz loc_41607D  +
xor eax eax +
jmp loc_416084  +
mov ecx ebx +
call loc_414869  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call sub_40FC94  +
call sub_41EF3C  +
mov ebx ecx +
and dword ptr [ebp-10h] 0 +
mov edi 7FFFFFFFh +
mov [ebp-14h] edi +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
cmp eax 111h +
jnz loc_4160F2  +
mov eax [ebx] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
mov esi [eax+0F4h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
test eax eax +
jz loc_4168CF  +
jmp loc_416241  +
mov esi [ebp+10h] +
mov ecx [ebp+0Ch] +
cmp eax 1 +
jnz loc_416142  +
cmp dword ptr [ebx+58h] 0 +
jz loc_4161B7  +
mov ecx [ebx+58h] +
push ebx  +
call sub_41E19F  +
test eax eax +
jnz loc_416138  +
mov eax [ebx+58h] +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_416132  +
mov eax [eax] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx [ebp-1Ch] +
call esi  +
and dword ptr [ebx+58h] 0 +
jmp loc_4161B1  +
mov ecx ebx +
call sub_414FA1  +
mov eax [ebp+8] +
cmp eax 4Eh +
jnz loc_41617C  +
mov ecx [ebp+10h] +
cmp dword ptr [ecx] 0 +
jz loc_4168CF  +
mov eax [ebx] +
lea edx [ebp-10h] +
push edx  +
push ecx  +
push dword ptr [ebp+0Ch]  +
mov esi [eax+0F8h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
test eax eax +
jnz loc_4168A6  +
jmp loc_4168CF  +
cmp eax 6 +
jnz loc_416194  +
push esi  +
call sub_414BBE  +
push eax  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call sub_41764C  +
mov eax [ebp+8] +
cmp eax 20h +
jnz loc_4161B4  +
mov eax esi +
shr eax 10h +
push eax  +
movsx eax si +
push eax  +
push ebx  +
call sub_4176C1  +
test eax eax +
jnz loc_416241  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx [ebx+70h] +
mov [ebp-1Ch] edx +
test edx edx +
jz loc_416217  +
cmp dword ptr [edx+74h] 0 +
jle loc_416217  +
cmp eax 200h +
jb loc_4161D5  +
cmp eax 209h +
jbe loc_4161F0  +
cmp eax 100h +
jb loc_4161E3  +
cmp eax 10Fh +
jbe loc_4161F0  +
add eax 0FFFFFD7Fh +
cmp eax 10h +
ja loc_416217  +
mov eax [ebp+8] +
mov esi [edx] +
lea edx [ebp-10h] +
push edx  +
mov edx [ebp+10h] +
push edx  +
mov esi [esi+94h] +
push ecx  +
push eax  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx [ebp-1Ch] +
call esi  +
test eax eax +
jnz loc_4168A6  +
mov eax [ebp+8] +
cmp eax 5 +
jz loc_41624C  +
cmp eax 0Fh +
jz loc_416236  +
cmp eax 14h +
jnz loc_4162A1  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_4162A1  +
cmp dword ptr [eax+4] 0 +
jmp loc_41623F  +
mov ecx ebx +
call sub_41496F  +
test eax eax +
jz loc_4162A1  +
xor ebx ebx +
inc ebx  +
mov [ebp-10h] ebx +
jmp loc_4168A9  +
mov eax [ebx] +
mov esi [eax+148h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov ecx ebx +
call sub_414DEA  +
mov esi eax +
test esi esi +
jz loc_4162A1  +
xor edi edi +
cmp [esi+4] edi +
jz loc_4162A1  +
mov eax [ebp+10h] +
mov ecx eax +
shr ecx 10h +
push ecx  +
movzx eax ax +
lea ecx [ebp-20h] +
push eax  +
call sub_41D815  +
push eax  +
mov ecx esi +
call sub_41DD4C  +
push 105h  +
push edi  +
push edi  +
push dword ptr [ebx+20h]  +
call ds:RedrawWindow  +
mov eax [ebx] +
mov esi [eax+28h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov esi eax +
mov [ebp-1Ch] eax +
xor esi [ebp+8] +
lea ecx [ebp-14h] +
push 7  +
and esi 1FFh +
call sub_4151A0  +
mov eax [ebp-1Ch] +
imul edi esi +
mov esi [ebp+8] +
add edi offset unk_451900 +
cmp esi [edi] +
jnz loc_416319  +
cmp eax [edi+8] +
jnz loc_416319  +
mov ecx [edi+4] +
mov edi [ebp-14h] +
mov [ebp-18h] ecx +
cmp edi 7FFFFFFFh +
jz loc_416304  +
push edi  +
call sub_41BEA6  +
mov ecx [ebp-18h] +
mov edi 7FFFFFFFh +
mov [ebp-14h] edi +
test ecx ecx +
jz loc_4168CF  +
cmp esi 0C000h +
jb loc_416362  +
jmp loc_41688E  +
mov [edi] esi +
mov [edi+8] eax +
cmp dword ptr [eax] 0 +
jz loc_4168B7  +
push 0  +
push 0  +
cmp esi 0C000h +
jnb loc_41637B  +
push esi  +
push dword ptr [eax+4]  +
call sub_4135CB  +
mov ecx eax +
mov [ebp-18h] ecx +
test ecx ecx +
jz loc_4163B5  +
mov [edi+4] ecx +
mov esi 7FFFFFFFh +
mov edi [ebp-14h] +
cmp edi esi +
jz loc_416362  +
push edi  +
call sub_41BEA6  +
mov ecx [ebp-18h] +
mov edi esi +
mov [ebp-14h] edi +
mov edx [ecx+10h] +
mov esi [ecx+14h] +
lea eax [edx-1] +
cmp eax 5Dh +
ja loc_4168A6  +
jmp ds:off_4168F0[eax*4]  +
push 0C000h  +
push dword ptr [eax+4]  +
call sub_4135CB  +
mov ecx eax +
mov [ebp-18h] ecx +
jmp loc_4163B1  +
mov eax [ecx+10h] +
cmp [eax] esi +
jz loc_416871  +
push 0  +
push 0  +
push 0C000h  +
lea eax [ecx+18h] +
push eax  +
call sub_4135CB  +
mov ecx eax +
mov [ebp-18h] eax +
test ecx ecx +
jnz loc_41638F  +
mov eax [ebp-1Ch] +
mov esi [eax] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov [ebp-1Ch] eax +
cmp dword ptr [eax] 0 +
jz loc_4168B7  +
mov esi [ebp+8] +
jmp loc_416327  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
jmp loc_416897  +
push dword ptr [ebp+0Ch]  +
call sub_41C285  +
push eax  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A3  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_41C285  +
push eax  +
jmp loc_416897  +
push dword ptr [ebp+0Ch]  +
jmp loc_4163F2  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A3  +
push dword ptr [ebp+10h]  +
call sub_414BBE  +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A6  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
push eax  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A3  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
jmp loc_41640E  +
push dword ptr [ebp+10h]  +
jmp loc_4163F2  +
lea ecx [ebp-30h] +
call sub_41BECA  +
mov eax [ebp+10h] +
lea ecx [ebp-0B0h] +
push 0  +
mov byte ptr [ebp-4] 5 +
mov eax [eax+4] +
mov [ebp-2Ch] eax +
call sub_412D01  +
mov dword ptr [ebp-0B0h] offset off_4432D8 +
mov ecx [ebp+10h] +
mov byte ptr [ebp-4] 6 +
mov eax [ecx] +
mov ecx [ecx+8] +
push eax  +
mov [ebp-90h] eax +
mov [ebp-1Ch] ecx +
call sub_414BE8  +
test eax eax +
jnz loc_4164F0  +
mov ecx [ebx+70h] +
test ecx ecx +
jz loc_4164EA  +
push dword ptr [ebp-90h]  +
add ecx 24h +
call sub_41CD26  +
test eax eax +
jz loc_4164EA  +
mov [ebp-3Ch] eax +
lea eax [ebp-0B0h] +
push dword ptr [ebp-1Ch]  +
mov ecx esi +
push eax  +
lea eax [ebp-30h] +
push eax  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
and dword ptr [ebp-2Ch] 0 +
lea ecx [ebp-0B0h] +
and dword ptr [ebp-90h] 0 +
mov [ebp-10h] eax +
call sub_412F4D  +
lea ecx [ebp-30h] +
call sub_41BEDE  +
jmp loc_4168A6  +
lea ecx [ebp-30h] +
call sub_41BECA  +
mov ecx [ebp+10h] +
mov byte ptr [ebp-4] 7 +
mov eax [ecx+4] +
push dword ptr [ecx+8]  +
mov [ebp-2Ch] eax +
mov ecx esi +
lea eax [ebp-30h] +
push eax  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
and dword ptr [ebp-2Ch] 0 +
mov [ebp-10h] eax +
jmp loc_41651D  +
mov eax [ebp+0Ch] +
shr eax 10h +
push eax  +
push dword ptr [ebp+10h]  +
call sub_414BBE  +
push eax  +
mov eax [ebp+0Ch] +
movzx eax ax +
jmp loc_41645C  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41640E  +
mov eax [ebp+10h] +
movzx eax ax +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_41C297  +
push eax  +
jmp loc_416436  +
push dword ptr [ebp+10h]  +
call sub_41CFB3  +
mov ecx [ebp+0Ch] +
push eax  +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41645C  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A6  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A6  +
push dword ptr [ebp+10h]  +
jmp loc_416433  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_416596  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
cwde   +
push eax  +
movsx eax cx +
jmp loc_416596  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A6  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
push eax  +
push dword ptr [ebp+10h]  +
call sub_414BBE  +
mov edx [ebp+10h] +
push eax  +
xor eax eax +
cmp [ebx+20h] edx +
setz al  +
push eax  +
jmp loc_416610  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
jmp loc_416596  +
push dword ptr [ebp+0Ch]  +
call sub_41C285  +
push eax  +
jmp loc_4165CA  +
push dword ptr [ebp+0Ch]  +
call sub_41CFB3  +
jmp loc_416659  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
cwde   +
push eax  +
movsx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_41CFB3  +
jmp loc_41663E  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
jmp loc_416659  +
push dword ptr [ebp+10h]  +
jmp loc_416684  +
mov ecx [ebp+10h] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
push eax  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
jmp loc_41663E  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
jmp loc_41669D  +
mov eax [ebp+0Ch] +
shr eax 10h +
push eax  +
push dword ptr [ebp+10h]  +
call sub_414BBE  +
push eax  +
mov eax [ebp+0Ch] +
movzx eax ax +
jmp loc_41663E  +
mov eax [ebp+0Ch] +
movsx ecx ax +
shr eax 10h +
cwde   +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
cmp edx 2Bh +
jnz loc_4166F9  +
push dword ptr [ebp+10h]  +
call sub_414BBE  +
push eax  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-18h]  +
jmp loc_416610  +
push eax  +
push ecx  +
jmp loc_416436  +
push dword ptr [ebp+10h]  +
jmp loc_4165CA  +
mov ecx [ebp+0Ch] +
mov eax ecx +
push dword ptr [ebp+10h]  +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41663E  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
jmp loc_41660D  +
push dword ptr [ebp+10h]  +
mov ecx esi +
push dword ptr [ebp+0Ch]  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_416241  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
mov ecx esi +
push eax  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jz loc_4168CF  +
jmp loc_4168A6  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
mov ecx esi +
push eax  +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_4168A6  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_4168CF  +
jmp loc_4168A6  +
push dword ptr [ebp+10h]  +
call sub_41CFB3  +
jmp loc_416432  +
push dword ptr [ebp+10h]  +
call sub_41CFB3  +
push eax  +
jmp loc_416894  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_41CFB3  +
jmp loc_416596  +
mov eax [ebp+10h] +
mov ecx eax +
movzx eax ax +
push eax  +
shr ecx 10h +
mov eax ecx +
and ecx 0FFFh +
and eax 0F000h +
push eax  +
push ecx  +
push dword ptr [ebp+0Ch]  +
call sub_414BBE  +
push eax  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
jmp loc_416241  +
mov eax [ebp+0Ch] +
push dword ptr [ebp+10h]  +
movzx eax al +
jmp loc_416596  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
movzx eax cx +
jmp loc_41680D  +
mov eax [ebp+10h] +
movsx ecx ax +
shr eax 10h +
cwde   +
push eax  +
push ecx  +
mov ecx [ebp+0Ch] +
mov eax ecx +
shr eax 10h +
push eax  +
push ecx  +
jmp loc_41680E  +
mov ecx [ebp+10h] +
movsx eax cx +
shr ecx 10h +
push eax  +
movsx eax cx +
jmp loc_41640E  +
mov [edi+4] ecx +
mov esi 7FFFFFFFh +
mov edi [ebp-14h] +
cmp edi esi +
jz loc_41688E  +
push edi  +
call sub_41BEA6  +
mov ecx [ebp-18h] +
mov edi esi +
mov [ebp-14h] edi +
mov esi [ecx+14h] +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov [ebp-10h] eax +
xor ebx ebx +
inc ebx  +
mov ecx [ebp+14h] +
test ecx ecx +
jz loc_4168D1  +
mov eax [ebp-10h] +
mov [ecx] eax +
jmp loc_4168D1  +
and dword ptr [edi+4] 0 +
mov ebx 7FFFFFFFh +
mov edi [ebp-14h] +
cmp edi ebx +
jz loc_4168CF  +
push edi  +
call sub_41BEA6  +
mov edi ebx +
xor ebx ebx +
mov dword ptr [ebp-4] 0Ah +
cmp edi 7FFFFFFFh +
jz loc_4168E6  +
push edi  +
call sub_41BEA6  +
mov eax ebx +
call sub_41EF05  +
retn 10h  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+28h] 0 +
jnz loc_416A8E  +
push 1  +
call sub_4132DE  +
mov dword ptr [esi+28h] offset aAfxwnd140su +
cmp dword ptr [esi+8] 0 +
jnz loc_416AA0  +
test dword ptr [esi+20h] 40000000h +
jz loc_416AA0  +
mov [esi+8] edi +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
call sub_419983  +
mov esi [eax+38h] +
test esi esi +
jz loc_416AD1  +
push edi  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi] +
mov esi [eax+150h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
test eax eax +
jz loc_416B0A  +
mov eax [edi] +
mov esi [eax+1B4h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor ebx ebx +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [edi+20h]  +
call ds:SendMessageW  +
push 1  +
push 1  +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [edi+20h]  +
call sub_416FA9  +
mov ecx edi +
call sub_414E54  +
mov esi eax +
test esi esi +
jz loc_416B6C  +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [esi+20h]  +
call ds:SendMessageW  +
push 1  +
push 1  +
push ebx  +
push ebx  +
push 1Fh  +
push dword ptr [esi+20h]  +
call sub_416FA9  +
call ds:GetCapture  +
test eax eax +
jz loc_416B68  +
push ebx  +
push ebx  +
push 1Fh  +
push eax  +
call ds:SendMessageW  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_40FC94  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push offset off_4434D8  +
push [ebp+arg_0]  +
call sub_414014  +
pop ebp  +
retn 0Ch  +
***
sub [esp+arg_0] 4 +
jmp sub_416B80  +
***
sub [esp+arg_0] 10h +
jmp sub_416B80  +
***
call sub_41EF3C  +
call sub_41EF3C  +
mov eax [ebp+arg_0] +
call sub_41EF3C  +
push 0  +
call sub_417D27  +
test eax eax +
jz loc_416DD3  +
mov esi [ebp+8] +
lea edi [eax+1Ch] +
push esi  +
mov ecx edi +
call sub_41CD26  +
test eax eax +
jnz loc_416DC7  +
push esi  +
call ds:GetParent  +
push eax  +
mov ecx edi +
call sub_41CD26  +
test eax eax +
jz loc_416DD3  +
mov ecx [eax+70h] +
test ecx ecx +
jz loc_416DD3  +
push esi  +
add ecx 24h +
call sub_41CD26  +
mov edi eax +
test edi edi +
jz loc_416DD3  +
push esi  +
lea ecx [ebp-8Ch] +
call sub_412D01  +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-8Ch] +
mov [ebp-18h] edi +
call sub_416F61  +
and dword ptr [ebp-6Ch] 0 +
lea ecx [ebp-8Ch] +
mov esi eax +
call sub_412F4D  +
xor eax eax +
test esi esi +
setnz al  +
jmp loc_416DD5  +
push dword ptr [ebp+0Ch]  +
mov ecx eax +
call sub_416F61  +
jmp loc_416DD5  +
xor eax eax +
call sub_41EF05  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push offset aUser32_dll  +
and dword ptr [edi+38h] 0 +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_416E50  +
push offset aRegistertouchw  +
push esi  +
call ds:GetProcAddress  +
push offset aUnregistertouc  +
push esi  +
mov ebx eax +
call ds:GetProcAddress  +
mov esi eax +
test ebx ebx +
jz loc_416E47  +
test esi esi +
jz loc_416E47  +
cmp dword ptr [ebp+8] 0 +
mov eax [edi+20h] +
jnz loc_416E34  +
push eax  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
jmp loc_416E49  +
push dword ptr [ebp+0Ch]  +
mov ecx ebx +
push eax  +
call ds:off_43B5A4  +
call ebx  +
mov [edi+38h] eax +
jmp loc_416E49  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
call sub_40FC94  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
sub dword ptr [edi+14h] 1 +
mov ebx [edi+14h] +
jnz loc_416E8A  +
test edi edi +
jz loc_416E8A  +
mov edx [edi] +
push esi  +
push 1  +
mov esi [edx+70h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
sub [esp+arg_0] 4 +
jmp sub_416E60  +
***
sub [esp+arg_0] 10h +
jmp sub_416E60  +
***
call sub_41EF3C  +
mov esi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [esi-14h]  +
call sub_4195C5  +
and dword ptr [ebp-4] 0 +
lea ecx [esi-30h] +
call sub_419DC2  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
call sub_41EF3C  +
mov esi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [esi-18h]  +
call sub_4195C5  +
and dword ptr [ebp-4] 0 +
lea ecx [esi-34h] +
call sub_419DC2  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
cmp dword ptr [esi+58h] 0 +
push esi  +
push esi  +
push [ebp+hWnd]  +
call ds:GetTopWindow  +
jmp loc_41701B  +
cmp [ebp+arg_14] 0 +
jz loc_416FDC  +
push esi  +
call sub_414BE8  +
test eax eax +
jz loc_416FEC  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push dword ptr [eax+20h]  +
push eax  +
call sub_4131BA  +
jmp loc_416FEC  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push esi  +
call ds:SendMessageW  +
cmp [ebp+arg_10] 0 +
jz loc_417012  +
push esi  +
call ds:GetTopWindow  +
test eax eax +
jz loc_417012  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+lParam]  +
push [ebp+wParam]  +
push [ebp+Msg]  +
push esi  +
call sub_416FA9  +
push 2  +
push esi  +
call ds:GetWindow  +
mov esi eax +
test esi esi +
jnz loc_416FB8  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_41703D  +
mov eax [eax+4] +
push eax  +
push dword ptr [ecx+20h]  +
call ds:SetMenu  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov [ecx+2Ch] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-18h]  +
call sub_4195C5  +
mov eax [edi-34h] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov esi [eax+0ECh] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-34h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 8  +
***
mov ecx [ebp+arg_0] +
push edi  +
mov edi 7FFFFFFFh +
cmp [esi] edi +
jz loc_4170DE  +
push dword ptr [esi]  +
call sub_41BEA6  +
mov [esi] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
push edi  +
mov edi ecx +
call sub_419983  +
xor edx edx +
inc edx  +
mov eax [eax+4] +
cmp [eax+70h] edx +
jnz loc_41712C  +
mov eax [ebp+arg_4] +
cmp eax edx +
jnz loc_417113  +
push 0Fh  +
pop edx  +
jmp loc_417121  +
cmp eax 3 +
jz loc_417121  +
lea edx [eax-0Bh] +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [edi] +
push edx  +
mov esi [eax+80h] +
jmp loc_417134  +
mov eax [edi] +
push [ebp+arg_4]  +
mov esi [eax+7Ch] +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push 4  +
mov eax offset loc_43A7B2 +
call sub_41EF3C  +
mov esi ecx +
call sub_419983  +
mov edi [eax+4] +
call sub_419983  +
mov ecx [eax+4] +
call sub_41D106  +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call loc_416AD9  +
mov ecx esi +
call sub_414E54  +
test eax eax +
jz loc_4171BC  +
push dword ptr [ebp+8]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [edi+68h]  +
push dword ptr [eax+20h]  +
call ds:WinHelpW  +
test eax eax +
jnz loc_4171AC  +
push 0FFFFFFFFh  +
push eax  +
push 0F107h  +
call sub_419A4F  +
lea ecx [ebp-0Dh] +
call sub_412E34  +
call sub_41EF05  +
retn 8  +
***
call sub_40FC94  +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push esi  +
push edi  +
mov edi ecx +
push eax  +
push [ebp+arg_8]  +
mov esi [edi] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov esi [esi+118h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
test eax eax +
jnz loc_417220  +
push [ebp+arg_8]  +
mov eax [edi] +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
mov esi [eax+11Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_417223  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
push edi  +
mov [ebp-24h] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
call sub_414BBE  +
lea ecx [ebp-34h] +
mov [ebp-2Ch] eax +
push ecx  +
lea ecx [ebp-24h] +
push ecx  +
push eax  +
call sub_41784E  +
push ebx  +
push dword ptr [ebp+10h]  +
push 110h  +
push edi  +
push dword ptr [ebp-28h]  +
call ds:CallWindowProcW  +
push dword ptr [ebp-34h]  +
mov esi eax +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_4177A3  +
jmp loc_41738D  +
***
mov eax [ebp-38h] +
mov esi [ebp-3Ch] +
mov [ebp-58h] eax +
mov eax [ebp+0Ch] +
mov [ebp-54h] eax +
mov eax [ebp+10h] +
mov [ebp-50h] eax +
mov eax [ebp-30h] +
mov [ebp-4Ch] eax +
lea eax [ebp-58h] +
push eax  +
push esi  +
call sub_41DE06  +
mov [ebp-30h] eax +
test esi esi +
jz loc_417384  +
mov ecx esi +
call sub_40FD1F  +
mov eax offset loc_41738A +
retn   +
mov esi [ebp-30h] +
mov eax esi +
call sub_41EF2B  +
retn 10h  +
***
call sub_41EF70  +
push ecx  +
push ecx  +
cmp [ebp+arg_4] 0FFFFFFFEh +
push esi  +
push [ebp+nIndex]  +
sub esp 14h +
push esi  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+24h] eax +
call sub_419983  +
mov ecx [eax+0Ch] +
movzx eax [ebp+arg_8] +
push eax  +
push ecx  +
call ds:LoadIconW  +
mov [esi+14h] eax +
test eax eax +
jnz loc_4178A9  +
push 7F00h  +
push eax  +
call ds:LoadIconW  +
mov [esi+14h] eax +
push esi  +
call sub_413759  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_4178D7  +
mov eax 80010108h +
jmp loc_4178F2  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+64h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+64h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+64h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+64h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0E0h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 14h  +
***
mov eax [ebp+arg_0] +
mov eax [eax+8] +
test eax eax +
jnz loc_4179A4  +
mov eax 80010108h +
jmp loc_4179CB  +
cmp [ebp+arg_C] 0 +
jnz loc_4179B1  +
mov eax 80004003h +
jmp loc_4179CB  +
push esi  +
push [ebp+arg_C]  +
mov esi [eax] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov ecx [esi+60h] +
push eax  +
call ds:off_43B5A4  +
call dword ptr [esi+60h]  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax [ecx+28h] +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov esi [eax] +
push [ebp+arg_0]  +
push eax  +
mov ecx [esi+60h] +
call ds:off_43B5A4  +
call dword ptr [esi+60h]  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-14h]  +
call sub_4195C5  +
push dword ptr [ebp+14h]  +
mov eax [edi-30h] +
push dword ptr [ebp+10h]  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
mov esi [eax+0DCh] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 10h  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_417A77  +
mov eax 80010108h +
jmp loc_417ABD  +
cmp [ebp+arg_4] 0 +
jz loc_417AB8  +
cmp [ebp+arg_8] 0 +
jz loc_417AB8  +
cmp [ebp+arg_C] 0 +
jz loc_417AB8  +
cmp [ebp+arg_10] 0 +
jz loc_417AB8  +
mov ebx [eax] +
lea esi [ebp+arg_14] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+58h] +
push [ebp+arg_10]  +
movs   +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_4]  +
push eax  +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+58h]  +
jmp loc_417ABD  +
mov eax 80004003h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
mov ebx [eax] +
lea esi [ebp+arg_10] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+58h] +
push [ebp+arg_C]  +
movs   +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
movs   +
push [ebp+arg_0]  +
push eax  +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+58h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
***
call sub_41EF3C  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_417B87  +
mov eax 80010108h +
jmp loc_417BB5  +
cmp [ebp+arg_18] 0 +
jnz loc_417B94  +
mov eax 80004003h +
jmp loc_417BB5  +
push [ebp+arg_18]  +
mov ebx [eax] +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+5Ch] +
push [ebp+arg_4]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+5Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+5Ch] +
push [ebp+arg_0]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+5Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+20h]  +
mov eax [ebx-30h] +
lea esi [ebp+10h] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+0Ch]  +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0D8h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 1Ch  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_417C77  +
mov eax 80010108h +
jmp loc_417C95  +
mov ebx [eax] +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+54h] +
push [ebp+arg_4]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+54h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+54h] +
push [ebp+arg_0]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+54h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
call sub_41EF3C  +
call sub_4199B6  +
mov edi eax +
mov esi [edi+14h] +
test esi esi +
jnz loc_417D90  +
cmp [ebp+8] esi +
jz loc_417D90  +
push offset sub_41C910  +
call sub_40FC1B  +
push 60h  +
mov ebx eax +
call sub_40FBD5  +
pop ecx  +
mov [ebp-10h] eax +
mov [ebp-4] esi +
test eax eax +
jz loc_417D80  +
push 1  +
push 20h  +
push offset sub_414920  +
push offset loc_4144A0  +
push offset off_443220  +
mov ecx eax +
call sub_41E1D4  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
mov [edi+14h] esi +
call sub_40FC1B  +
mov esi [edi+14h] +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_417DB7  +
mov eax 80010108h +
jmp loc_417DE2  +
cmp [ebp+arg_14] 0 +
jnz loc_417DC4  +
mov eax 80004003h +
jmp loc_417DE2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+24h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+24h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+24h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+24h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0A0h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_417E94  +
mov eax 80010108h +
jmp loc_417EB6  +
cmp [ebp+arg_4] 0 +
jnz loc_417EA1  +
mov eax 80004003h +
jmp loc_417EB6  +
mov eax [ecx] +
push esi  +
push [ebp+arg_4]  +
mov esi [eax+20h] +
push ecx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+28h] +
push esi  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+20h] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-14h]  +
call sub_4195C5  +
mov eax [edi-30h] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov esi [eax+9Ch] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 8  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_417F47  +
mov eax 80010108h +
jmp loc_417F72  +
cmp [ebp+arg_14] 0 +
jnz loc_417F54  +
mov eax 80004003h +
jmp loc_417F72  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+50h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+50h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+50h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+50h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0CCh] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418027  +
mov eax 80010108h +
jmp loc_418052  +
cmp [ebp+arg_14] 0 +
jnz loc_418034  +
mov eax 80004003h +
jmp loc_418052  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+30h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+30h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+30h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+30h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0ACh] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_418104  +
mov eax 80010108h +
jmp loc_418126  +
cmp [ebp+arg_4] 0 +
jnz loc_418111  +
mov eax 80004003h +
jmp loc_418126  +
mov eax [ecx] +
push esi  +
push [ebp+arg_4]  +
mov esi [eax+48h] +
push ecx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+28h] +
push esi  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+48h] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-14h]  +
call sub_4195C5  +
mov eax [edi-30h] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov esi [eax+0C4h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 8  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_4181B7  +
mov eax 80010108h +
jmp loc_4181E2  +
cmp [ebp+arg_14] 0 +
jnz loc_4181C4  +
mov eax 80004003h +
jmp loc_4181E2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+3Ch] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+3Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+3Ch] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+3Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0B8h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418297  +
mov eax 80010108h +
jmp loc_4182CB  +
cmp [ebp+arg_4] 0 +
jz loc_4182C6  +
cmp [ebp+arg_18] 0 +
jz loc_4182C6  +
push [ebp+arg_18]  +
mov ebx [eax] +
lea esi [ebp+arg_8] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+40h] +
push [ebp+arg_4]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+40h]  +
jmp loc_4182CB  +
mov eax 80004003h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+40h] +
push [ebp+arg_0]  +
movs   +
push eax  +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+40h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+20h]  +
mov eax [ebx-30h] +
lea esi [ebp+10h] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
push dword ptr [ebp+0Ch]  +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0BCh] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 1Ch  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418397  +
mov eax 80010108h +
jmp loc_4183C2  +
cmp [ebp+arg_14] 0 +
jnz loc_4183A4  +
mov eax 80004003h +
jmp loc_4183C2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+44h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+44h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+44h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+44h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0C0h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418477  +
mov eax 80010108h +
jmp loc_4184A2  +
cmp [ebp+arg_14] 0 +
jnz loc_418484  +
mov eax 80004003h +
jmp loc_4184A2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+28h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+28h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+28h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+28h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0A4h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_418554  +
mov eax 80010108h +
jmp loc_418576  +
cmp [ebp+arg_4] 0 +
jnz loc_418561  +
mov eax 80004003h +
jmp loc_418576  +
mov eax [ecx] +
push esi  +
push [ebp+arg_4]  +
mov esi [eax+1Ch] +
push ecx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+28h] +
push esi  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+1Ch] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-14h]  +
call sub_4195C5  +
mov eax [edi-30h] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov esi [eax+98h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 8  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418607  +
mov eax 80010108h +
jmp loc_418632  +
cmp [ebp+arg_14] 0 +
jnz loc_418614  +
mov eax 80004003h +
jmp loc_418632  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+34h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+34h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+34h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+34h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0B0h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_4186E4  +
mov eax 80010108h +
jmp loc_418706  +
cmp [ebp+arg_4] 0 +
jnz loc_4186F1  +
mov eax 80004003h +
jmp loc_418706  +
mov eax [ecx] +
push esi  +
push [ebp+arg_4]  +
mov esi [eax+4Ch] +
push ecx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ecx+28h] +
push esi  +
push [ebp+arg_0]  +
mov ecx [eax] +
push eax  +
mov esi [ecx+4Ch] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
mov edi [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [edi-14h]  +
call sub_4195C5  +
mov eax [edi-30h] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov esi [eax+0C8h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [edi-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 8  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418797  +
mov eax 80010108h +
jmp loc_4187C2  +
cmp [ebp+arg_14] 0 +
jnz loc_4187A4  +
mov eax 80004003h +
jmp loc_4187C2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+38h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+38h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+38h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+38h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0B4h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
test eax eax +
jnz loc_418877  +
mov eax 80010108h +
jmp loc_4188A2  +
cmp [ebp+arg_14] 0 +
jnz loc_418884  +
mov eax 80004003h +
jmp loc_4188A2  +
push [ebp+arg_14]  +
mov ebx [eax] +
lea esi [ebp+arg_4] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+2Ch] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+2Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+2Ch] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+2Ch]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0A8h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
mov eax [ebp+arg_0] +
mov eax [eax+8] +
neg eax  +
sbb eax eax +
and eax 0FFFF3EF9h +
add eax 80010108h +
pop ebp  +
retn 18h  +
***
mov eax [ecx+28h] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_10]  +
mov ebx [eax] +
lea esi [ebp+arg_0] +
sub esp 10h +
mov edi esp +
mov ecx [ebx+68h] +
push eax  +
movs   +
movs   +
movs   +
movs   +
call ds:off_43B5A4  +
call dword ptr [ebx+68h]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
call sub_41EF3C  +
mov ebx [ebp+8] +
lea ecx [ebp-0Dh] +
push dword ptr [ebx-14h]  +
call sub_4195C5  +
push dword ptr [ebp+1Ch]  +
mov eax [ebx-30h] +
lea esi [ebp+0Ch] +
and dword ptr [ebp-4] 0 +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
movs   +
mov esi [eax+0E4h] +
mov ecx esi +
call ds:off_43B5A4  +
lea ecx [ebx-30h] +
call esi  +
lea ecx [ebp-0Dh] +
mov esi eax +
call nullsub_1  +
mov eax esi +
call sub_41EF05  +
retn 18h  +
***
call sub_41EF3C  +
call sub_41F490  +
cmp dword_4518C0 0 +
mov ecx [ebp+arg_0] +
call sub_41F490  +
cmp dword_4518C4 0 +
call sub_41F490  +
cmp dword_4518C4 0 +
call sub_41F490  +
cmp dword_4518C4 0 +
call sub_41F490  +
cmp dword_4518C4 0 +
call sub_41F490  +
cmp dword_4518C4 0 +
push esi  +
push edi  +
test edi edi +
test edi edi +
test edi edi +
push edi  +
mov edi [ecx+74h] +
test edi edi +
jnz loc_418FCE  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+20h]  +
call sub_4151CF  +
jmp loc_418FED  +
mov eax [edi] +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
mov esi [eax+80h] +
mov ecx esi +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
push edi  +
xor eax eax +
cmp dword ptr [esi] 0 +
push [ebp+uBytes]  +
cmp [ebp+arg_0] 0 +
jz loc_41913E  +
pop ebp  +
jmp ds:LocalFree  +
pop ebp  +
retn 4  +
***
test [ebp+arg_0] 1 +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
call sub_41EFA7  +
push 0  +
call sub_41EF3C  +
cmp [ebp+arg_0] 0 +
push ebx  +
call sub_41EFA7  +
call sub_41EFA7  +
or dword ptr [ecx+44h] 0FFFFFFFFh +
xor eax eax +
mov dword ptr [ecx] offset off_443C7C +
mov [ecx+34h] eax +
mov [ecx+54h] eax +
mov [ecx+4Ch] eax +
mov [ecx+50h] eax +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
cmp dword ptr [esi+2Ch] 0 +
mov dword ptr [esi] offset off_443C7C +
jz loc_4198BF  +
push dword ptr [esi+2Ch]  +
call ds:UnhookWindowsHookEx  +
cmp dword ptr [esi+28h] 0 +
jz loc_4198CE  +
push dword ptr [esi+28h]  +
call ds:UnhookWindowsHookEx  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_4198DD  +
push dword ptr [esi+0Ch]  +
call sub_4269DD  +
pop ecx  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
call sub_4196B5  +
test [ebp+arg_0] 1 +
jz loc_41990C  +
test [ebp+arg_0] 4 +
jnz loc_4198FF  +
push esi  +
call sub_41912E  +
jmp loc_41990C  +
push 80h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
call sub_41938D  +
call sub_419983  +
call sub_41938D  +
test eax eax +
jz sub_40FC94  +
retn   +
***
push 4  +
mov eax offset loc_43A3FC +
call sub_41EF3C  +
push 80h  +
call sub_419112  +
mov esi eax +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jz loc_419A24  +
push 1  +
mov ecx esi +
call sub_4195CA  +
mov dword ptr [esi] offset off_443C84 +
jmp loc_419A26  +
xor esi esi +
mov eax esi +
call sub_41EF05  +
retn   +
***
push ecx  +
call sub_41EF3C  +
push edi  +
push edi  +
push ebx  +
sub esp 21Ch +
push 10h  +
mov edx [ecx+8] +
mov edx [ecx+8] +
mov edx [ecx+8] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_419DE1  +
mov edi [ebp+arg_4] +
mov ecx esi +
mov [edi] eax +
test eax eax +
jz loc_419ED1  +
call sub_419D73  +
xor eax eax +
jmp loc_419EE9  +
push [ebp+arg_0]  +
call sub_419F43  +
mov [edi] eax +
neg eax  +
sbb eax eax +
and eax 7FFFBFFEh +
add eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ecx  +
mov esi ecx +
call sub_41A16B  +
xor edi edi +
mov ecx esi +
mov [esi+24h] edi +
call sub_41A119  +
push 7F02h  +
push edi  +
call ds:LoadCursorW  +
push 7F00h  +
push edi  +
mov [esi+3Ch] eax +
call ds:LoadCursorW  +
push 2  +
mov [esi+40h] eax +
pop eax  +
mov [esi+50h] edi +
mov [esi+44h] edi +
mov [esi+10h] eax +
mov [esi+14h] eax +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
call sub_410279  +
mov esi ecx +
push 0Bh  +
call sub_41EF3C  +
mov edi ecx +
mov [ebp-10h] edi +
call sub_40FC3F  +
mov dword ptr [edi] offset off_443D38 +
call sub_410279  +
push eax  +
lea ecx [edi+0Ch] +
call sub_401330  +
mov eax [ebp+8] +
lea ecx [edi+0Ch] +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-4] 0 +
mov [edi+8] eax +
call sub_410026  +
mov eax edi +
call sub_41EF05  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
sub ecx 10h +
mov dword ptr [esi] offset off_443D38 +
call sub_401A64  +
test [ebp+arg_0] 1 +
jz loc_41A255  +
test [ebp+arg_0] 4 +
jnz loc_41A24B  +
push esi  +
call sub_40FC0D  +
jmp loc_41A254  +
push 10h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 8  +
mov eax offset loc_43A498 +
call sub_41EF3C  +
push 10h  +
call sub_40FEC6  +
mov ecx eax +
mov [ebp-14h] ecx +
xor eax eax +
mov [ebp-4] eax +
test ecx ecx +
jz loc_41A288  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_41A1CF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-10h] eax +
lea eax [ebp-10h] +
push offset unk_44D248  +
push eax  +
call sub_4219F8  +
call sub_41EFA7  +
mov edi ecx +
cmp dword ptr [ebp+8] 0 +
jz loc_41A362  +
mov edx [ebp+10h] +
test edx edx +
jz loc_41A2C9  +
mov eax [edi+8] +
add eax 0F1B0h +
mov [edx] eax +
and dword ptr [ebp-4] 0 +
call sub_410279  +
push eax  +
lea ecx [ebp-14h] +
call sub_401330  +
mov eax [edi+0Ch] +
sub eax 10h +
mov byte ptr [ebp-4] 1 +
push eax  +
call sub_402458  +
pop ecx  +
lea esi [eax+10h] +
mov [ebp-18h] esi +
cmp dword ptr [esi-0Ch] 0 +
mov byte ptr [ebp-4] 2 +
jnz loc_41A318  +
mov ebx 0F006h +
push ebx  +
call sub_4103B0  +
test eax eax +
jz loc_41A318  +
push ebx  +
push eax  +
lea ecx [ebp-18h] +
call sub_402AB5  +
mov esi [ebp-18h] +
mov eax [edi+8] +
push esi  +
add eax 0F1B0h +
push eax  +
lea eax [ebp-14h] +
push eax  +
call loc_41AD85  +
push 0FFFFFFFFh  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_427296  +
push eax  +
call sub_40234C  +
add esp 14h +
lea ecx [esi-10h] +
call sub_401A64  +
mov ecx [ebp-14h] +
add ecx 0FFFFFFF0h +
call sub_401A64  +
xor eax eax +
inc eax  +
jmp loc_41A364  +
mov eax offset loc_41A362 +
retn   +
xor eax eax +
call sub_41EF05  +
retn 0Ch  +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
sub esp 0Ch +
cmp [ebp+arg_8] 0 +
sub esp 10h +
push esi  +
cmp [ebp+lpString1] 0 +
sub esp 48h +
sub esp 20h +
push ecx  +
push esi  +
sub esp 0Ch +
mov eax 0FFFFh +
xor eax eax +
push 1F31Dh  +
push [ebp+arg_4]  +
call sub_41EF3C  +
sub esp 10h +
cmp [ebp+arg_8] 0 +
push ebx  +
push esi  +
mov esi ecx +
jz loc_41AFD9  +
cmp dword ptr [esi] 0 +
jz loc_41AFCA  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_41AFD9  +
push offset aGetfileattribu  +
push eax  +
call ds:GetProcAddress  +
mov ebx eax +
test ebx ebx +
jz loc_41AFD9  +
push dword ptr [esi]  +
mov ecx ebx +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
call ebx  +
jmp loc_41AFDB  +
cmp dword ptr [esi+4] 0 +
jz loc_41AFD9  +
pop esi  +
pop ebx  +
pop ebp  +
jmp ds:GetFileAttributesExW  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call sub_41EF70  +
mov esi [ebp+8] +
lea eax [ebp-240h] +
xor edi edi +
mov [ebp-248h] esi +
mov [ebp-244h] edi +
push eax  +
mov [ebp-4] edi +
mov [ebp-240h] edi +
mov [ebp-23Ch] edi +
mov [ebp-238h] edi +
mov [ebp-234h] edi +
mov [ebp-230h] edi +
mov [ebp-22Ch] edi +
call sub_41B19B  +
call sub_410279  +
push eax  +
mov ecx esi +
call sub_401330  +
mov eax 100h +
mov [ebp-4] edi +
push eax  +
push eax  +
mov ecx esi +
mov dword ptr [ebp-244h] 1 +
call sub_40332E  +
push eax  +
lea eax [ebp-21Ch] +
push eax  +
call sub_41B31D  +
push 0FFFFFFFFh  +
mov ecx esi +
call sub_4033B0  +
mov eax esi +
call sub_41EF1A  +
retn 4  +
***
sub esp 238h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_234] eax +
mov [ebp+var_230] eax +
mov [ebp+var_22C] eax +
mov [ebp+var_228] eax +
mov [ebp+var_224] eax +
mov [ebp+var_220] eax +
lea eax [ebp+var_234] +
push eax  +
mov [ebp+var_238] esi +
call sub_41B19B  +
lea eax [ebp+var_210] +
mov ecx esi +
push eax  +
call sub_4020ED  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_41EEF4  +
leave   +
retn 4  +
***
call sub_41EF70  +
sub esp 50h +
cmp [ebp+pszPath] 0 +
push ecx  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
mov dword ptr [ecx] offset off_443D88 +
jz locret_41B430  +
push dword ptr [ecx+4]  +
call sub_40FC0D  +
pop ecx  +
retn   +
***
push esi  +
cmp dword ptr [ecx+34h] 3FFFFFFEh +
call sub_41EFA7  +
mov edx [ebp+arg_0] +
sub esp 0Ch +
call sub_41EF3C  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
test byte ptr [edi+18h] 1 +
jz loc_41B974  +
mov eax [ebp+arg_0] +
mov ecx 0FFFFh +
test eax eax +
jz loc_41B798  +
cmp [eax+8] ecx +
jz loc_41B984  +
push 0  +
mov ecx edi +
call sub_41B621  +
lea eax [ebp+var_4] +
mov ecx edi +
push eax  +
call sub_41A3BE  +
mov si word ptr [ebp+var_4] +
mov eax 7FFFh +
cmp si ax +
jnz loc_41B7CA  +
lea eax [ebp+var_C] +
mov ecx edi +
push eax  +
call sub_41A40B  +
mov ebx [ebp+var_C] +
jmp loc_41B7E0  +
movzx eax si +
mov ebx eax +
and ebx 0FFFF8000h +
shl ebx 10h +
or ebx eax +
and ebx 0FFFF7FFFh +
test ebx ebx +
js loc_41B804  +
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_41B7FB  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 5  +
jmp loc_41B97F  +
mov [eax] ebx +
xor eax eax +
jmp loc_41B96D  +
mov eax 0FFFFh +
cmp si ax +
jnz loc_41B8C1  +
lea eax [ebp+var_8] +
push eax  +
push edi  +
call sub_41A943  +
mov esi eax +
mov [ebp+var_4] esi +
test esi esi +
jnz loc_41B835  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 6  +
jmp loc_41B97F  +
mov ecx [esi+8] +
mov eax ecx +
and eax 7FFFFFFFh +
cmp eax [ebp+var_8] +
jz loc_41B874  +
test ecx ecx +
js loc_41B858  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 7  +
jmp loc_41B97F  +
push 0  +
mov ecx edi +
call sub_41B48B  +
push [ebp+var_4]  +
mov ecx [edi+3Ch] +
mov esi [ebp+var_8] +
call sub_41CB7B  +
mov [eax] esi +
mov esi [ebp+var_4] +
mov ecx edi +
call sub_41B470  +
mov ecx [edi+38h] +
push 1  +
push esi  +
push dword ptr [edi+34h]  +
call sub_41E726  +
mov ecx [edi+3Ch] +
lea eax [ebp+var_C] +
and [ebp+var_C] 0 +
push eax  +
push 1  +
call sub_41CDC8  +
mov ecx [ebp+var_C] +
test ecx ecx +
jz loc_41B989  +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [edi+34h]  +
call sub_41B587  +
inc dword ptr [edi+34h]  +
mov eax [ebp+var_8] +
jmp loc_41B93A  +
mov esi ebx +
and esi 7FFFFFFFh +
jz loc_41B7EB  +
mov eax [edi+38h] +
mov eax [eax+8] +
dec eax  +
cmp esi eax +
ja loc_41B7EB  +
mov ecx [edi+3Ch] +
lea eax [ebp+var_4] +
and [ebp+var_4] 0 +
push eax  +
push 1  +
call sub_41CDC8  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_41B989  +
push esi  +
call sub_40609F  +
cmp dword ptr [eax] 2 +
jz loc_41B7EB  +
mov ecx [edi+38h] +
push esi  +
call sub_41B568  +
mov ecx [edi+3Ch] +
mov esi eax +
test ecx ecx +
jz loc_41B92F  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call sub_41CDC8  +
test eax eax +
jz loc_41B92F  +
mov eax [ebp+var_4] +
jmp loc_41B937  +
mov eax [esi+8] +
and eax 7FFFFFFFh +
mov [ebp+var_8] eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_41B954  +
push ecx  +
mov ecx esi +
call sub_412C06  +
test eax eax +
jz loc_41B825  +
mov eax [ebp+var_8] +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_41B95F  +
mov [ecx] eax +
jmp loc_41B962  +
mov [edi+10h] eax +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_41B96B  +
mov [eax] ebx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 1  +
call loc_41A25C  +
call loc_40FCC8  +
call sub_40FC94  +
int 3  +
***
push 18h  +
mov eax offset loc_43AA68 +
call sub_41EFA7  +
mov edi ecx +
test byte ptr [edi+18h] 1 +
jz loc_41BB00  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp+8]  +
call sub_41B76E  +
xor esi esi +
mov [ebp-18h] esi +
test eax eax +
jnz loc_41BA53  +
mov eax [edi+38h] +
mov ebx [ebp-14h] +
mov eax [eax+8] +
dec eax  +
cmp ebx eax +
jbe loc_41B9E2  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 5  +
jmp loc_41BB0B  +
mov ecx [edi+3Ch] +
lea eax [ebp-14h] +
push eax  +
push 1  +
mov [ebp-14h] esi +
call sub_41CDC8  +
test eax eax +
jz loc_41BA15  +
mov ecx [ebp-14h] +
test ecx ecx +
jz loc_41BB10  +
mov eax [ecx+8] +
dec eax  +
cmp ebx eax +
ja loc_41BA15  +
push ebx  +
call sub_40609F  +
cmp dword ptr [eax] 1 +
jz loc_41B9D2  +
mov ecx [edi+38h] +
push ebx  +
call sub_41B568  +
mov ebx eax +
test ebx ebx +
jz loc_41BAD3  +
cmp [ebp+8] esi +
jz loc_41BAD3  +
push dword ptr [ebp+8]  +
mov ecx ebx +
call sub_412C30  +
test eax eax +
jnz loc_41BAD3  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 6  +
jmp loc_41BB0B  +
mov ecx eax +
mov [ebp-4] esi +
call loc_412BAF  +
mov ebx eax +
mov [ebp-18h] ebx +
test ebx ebx +
jz loc_41BB15  +
mov ecx edi +
call sub_41B470  +
mov ecx [edi+38h] +
push 1  +
push ebx  +
push dword ptr [edi+34h]  +
call sub_41E726  +
mov ecx [edi+3Ch] +
lea eax [ebp-14h] +
push eax  +
push 1  +
mov [ebp-14h] esi +
call sub_41CDC8  +
mov ecx [ebp-14h] +
test ecx ecx +
jz loc_41BB10  +
push 1  +
lea eax [ebp-1Ch] +
mov dword ptr [ebp-1Ch] 2 +
push eax  +
push dword ptr [edi+34h]  +
call sub_41B587  +
mov eax [edi+10h] +
inc dword ptr [edi+34h]  +
mov [ebp-1Ch] eax +
mov eax [ebp-20h] +
mov [edi+10h] eax +
mov eax [ebx] +
push edi  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov eax [ebp-1Ch] +
mov [edi+10h] eax +
mov eax ebx +
call sub_41EF05  +
retn 4  +
***
mov edi [ebp-18h] +
test edi edi +
jz loc_41BAF7  +
mov eax [edi] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor esi esi +
push esi  +
push esi  +
call sub_4219F8  +
lea ecx [edi+14h] +
call sub_40FED6  +
push eax  +
push 4  +
call loc_41A25C  +
call sub_40FC94  +
call sub_40FCAE  +
push esi  +
push ecx  +
push ebx  +
push ebx  +
mov eax dword_4533DC +
push esi  +
mov eax [ebp+arg_0] +
xor eax eax +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call sub_410279  +
push eax  +
lea ecx [ebp-418h] +
call sub_401330  +
mov edi [ebp-41Ch] +
lea eax [ebp-414h] +
push 0  +
push 200h  +
push eax  +
mov esi [edi] +
mov byte ptr [ebp-4] 2 +
mov ecx [esi+0Ch] +
call ds:off_43B5A4  +
mov ecx edi +
call dword ptr [esi+0Ch]  +
test eax eax +
jz loc_41BFE5  +
lea eax [ebp-414h] +
push eax  +
push 4Dh  +
push offset aDAgent_work6_4  +
push offset aExceptionThrow  +
lea eax [ebp-418h] +
push offset aTsTsDTs  +
push eax  +
call loc_410A94  +
add esp 18h +
jmp loc_41C005  +
push 4Dh  +
push offset aDAgent_work6_4  +
push offset aExceptionThrow  +
lea eax [ebp-418h] +
push offset aTsTsD  +
push eax  +
call loc_410A94  +
add esp 14h +
mov esi [ebp-418h] +
push 0  +
push 0  +
push esi  +
call sub_419AB1  +
lea ecx [esi-10h] +
call sub_401A64  +
mov eax [edi] +
push 1  +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
mov eax offset loc_41BF65 +
retn   +
***
push esi  +
push esi  +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_41C0DD  +
push esi  +
push 1  +
mov [edi+4] eax +
call sub_41C81C  +
push dword ptr [edi+4]  +
lea ecx [eax+1Ch] +
call sub_41CB7B  +
mov [eax] edi +
mov ecx [edi] +
push dword ptr [edi+4]  +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jz locret_41C125  +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_443E24 +
leave   +
retn 4  +
***
push ecx  +
push 10h  +
call sub_40FBD5  +
mov [ebp+var_4] eax +
pop ecx  +
test eax eax +
jz loc_41C156  +
xor ecx ecx +
mov dword ptr [eax] offset off_443E50 +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
push ecx  +
cmp dword ptr [ecx+4] 0 +
push edi  +
push edi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+4]  +
call ds:DrawTextExW  +
pop ebp  +
retn 14h  +
***
push [ebp+uFormat]  +
push [ebp+lpRect]  +
push [ebp+nCount]  +
push [ebp+lpString]  +
push dword ptr [ecx+4]  +
call ds:DrawTextW  +
pop ebp  +
retn 10h  +
***
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+4]  +
call ds:Escape  +
pop ebp  +
retn 10h  +
***
push [ebp+arg_18]  +
push 1  +
push 1  +
call sub_41C88F  +
mov ecx eax +
pop ebp  +
jmp sub_41E353  +
***
push [ebp+arg_0]  +
push dword ptr [ecx+4]  +
call ds:GetClipBox  +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C36C  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:OffsetViewportOrgEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C37E  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:OffsetViewportOrgEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push dword ptr [ecx+4]  +
call ds:PtVisible  +
pop ebp  +
retn 8  +
***
push [ebp+arg_0]  +
push dword ptr [ecx+4]  +
call ds:RectVisible  +
pop ebp  +
retn 4  +
***
retn   +
***
retn   +
***
push esi  +
mov esi ecx +
xor eax eax +
inc eax  +
mov edx [esi+8] +
cmp [esi+4] edx +
jz loc_41C410  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call ds:RestoreDC  +
mov edx [esi+8] +
pop esi  +
test edx edx +
jz loc_41C42E  +
test eax eax +
jz loc_41C42C  +
push [ebp+arg_0]  +
push edx  +
call ds:RestoreDC  +
test eax eax +
jz loc_41C42C  +
xor eax eax +
inc eax  +
jmp loc_41C42E  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi ecx +
xor esi esi +
mov eax [edi+8] +
test eax eax +
jz loc_41C459  +
push eax  +
call ds:SaveDC  +
mov esi eax +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C46E  +
push dword ptr [edi+4]  +
call ds:SaveDC  +
test eax eax +
jz loc_41C46E  +
or esi 0FFFFFFFFh +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C4B2  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:ScaleViewportExtEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C4CA  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:ScaleViewportExtEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C512  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:ScaleWindowExtEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C52A  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:ScaleWindowExtEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
push ebx  +
mov ebx ecx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax [ebx+8] +
xor edi edi +
mov edx edi +
cmp [ebx+4] eax +
jz loc_41C56F  +
mov eax edi +
test esi esi +
jz loc_41C560  +
mov eax [esi+4] +
push eax  +
push dword ptr [ebx+4]  +
call ds:SelectObject  +
mov edx eax +
mov eax [ebx+8] +
test eax eax +
jz loc_41C584  +
test esi esi +
jz loc_41C57A  +
mov edi [esi+4] +
push edi  +
push eax  +
call ds:SelectObject  +
mov edx eax +
push edx  +
call sub_41C297  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov edi ecx +
call ds:GetStockObject  +
mov edx [edi+8] +
mov esi eax +
xor eax eax +
cmp [edi+4] edx +
jz loc_41C5C9  +
push esi  +
push dword ptr [edi+4]  +
call ds:SelectObject  +
mov edx [edi+8] +
test edx edx +
jz loc_41C5D5  +
push esi  +
push edx  +
call ds:SelectObject  +
push eax  +
call sub_41C297  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov [ecx+8] eax +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
or edx 0FFFFFFFFh +
mov eax [esi+8] +
cmp [esi+4] eax +
jz loc_41C622  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call ds:SetBkColor  +
mov edx eax +
mov eax [esi+8] +
pop esi  +
test eax eax +
jz loc_41C633  +
push [ebp+arg_0]  +
push eax  +
call ds:SetBkColor  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xor edx edx +
mov eax [esi+8] +
cmp [esi+4] eax +
jz loc_41C661  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call ds:SetMapMode  +
mov edx eax +
mov eax [esi+8] +
pop esi  +
test eax eax +
jz loc_41C672  +
push [ebp+arg_0]  +
push eax  +
call ds:SetMapMode  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
mov [ecx+4] eax +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
or edx 0FFFFFFFFh +
mov eax [esi+8] +
cmp [esi+4] eax +
jz loc_41C6B2  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call ds:SetTextColor  +
mov edx eax +
mov eax [esi+8] +
pop esi  +
test eax eax +
jz loc_41C6C3  +
push [ebp+arg_0]  +
push eax  +
call ds:SetTextColor  +
mov edx eax +
mov eax edx +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C6FC  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:SetViewportExtEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C70E  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:SetViewportExtEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C74C  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:SetViewportOrgEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C75E  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:SetViewportOrgEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
mov eax [edi+8] +
cmp [edi+4] eax +
jz loc_41C79C  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [edi+4]  +
call ds:SetWindowExtEx  +
mov eax [edi+8] +
test eax eax +
jz loc_41C7AE  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call ds:SetWindowExtEx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push [ebp+nTabOrigin]  +
push [ebp+lpnTabStopPositions]  +
push [ebp+nTabPositions]  +
push [ebp+nCount]  +
push [ebp+lpString]  +
push [ebp+Y]  +
push [ebp+X]  +
push dword ptr [ecx+4]  +
call ds:TabbedTextOutW  +
mov edx [ebp+arg_0] +
movsx ecx ax +
shr eax 10h +
mov [edx] ecx +
movsx ecx ax +
mov eax edx +
mov [edx+4] ecx +
pop ebp  +
retn 20h  +
***
push [ebp+arg_C]  +
call sub_41EF3C  +
call sub_41EF3C  +
call sub_4199B6  +
mov edi eax +
mov esi [edi+20h] +
test esi esi +
jnz loc_41C8F8  +
cmp [ebp+8] esi +
jz loc_41C8F8  +
push offset sub_41C910  +
call sub_40FC1B  +
push 60h  +
mov ebx eax +
call sub_40FBD5  +
pop ecx  +
mov [ebp-10h] eax +
mov [ebp-4] esi +
test eax eax +
jz loc_41C8E8  +
push 1  +
push 4  +
push offset sub_414920  +
push offset sub_41C110  +
push offset off_443E04  +
mov ecx eax +
call sub_41E1D4  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
push ebx  +
mov [edi+20h] esi +
call sub_40FC1B  +
mov esi [edi+20h] +
mov eax esi +
call sub_41EF05  +
retn 4  +
***
push esi  +
push esi  +
push esi  +
sub esp 204h +
sub esp 1Ch +
mov eax [ebp+arg_0] +
push 0FFFFFFFFh  +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
mov esi ecx +
push eax  +
push edi  +
call sub_41CC61  +
mov edx eax +
test edx edx +
jnz loc_41CBC9  +
cmp [esi+4] eax +
jnz loc_41CBAC  +
push 1  +
push dword ptr [esi+8]  +
mov ecx esi +
call sub_41CD6B  +
mov ecx esi +
call sub_41CDF0  +
mov ecx [ebp+var_4] +
mov edx eax +
mov [edx+4] edi +
mov eax [esi+4] +
mov eax [eax+ecx*4] +
mov [edx] eax +
mov eax [esi+4] +
mov [eax+ecx*4] edx +
pop edi  +
lea eax [edx+8] +
pop esi  +
leave   +
retn 4  +
***
push 0FFFFFFFFh  +
mov edx [ebp+arg_0] +
push esi  +
push ebx  +
push esi  +
push esi  +
push ecx  +
cmp dword ptr [esi+10h] 0 +
push edi  +
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+4] 0 +
jz loc_41CE9B  +
mov edi [ebp+arg_0] +
push edi  +
call sub_41AD36  +
xor edx edx +
div  dword ptr [esi+8] +
mov eax [esi+4] +
lea edx [eax+edx*4] +
mov eax [edx] +
jmp loc_41CE97  +
mov ecx [eax] +
cmp [eax+4] edi +
jz loc_41CEA3  +
mov edx eax +
mov eax ecx +
test eax eax +
jnz loc_41CE8C  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov [edx] ecx +
mov ecx esi +
push eax  +
call sub_41CC44  +
xor eax eax +
inc eax  +
jmp loc_41CE9D  +
***
push 0FFFFFFFFh  +
push offset loc_43AAB6  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4504C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
and [ebp+var_4] 0 +
mov dword ptr [esi] offset off_443FE8 +
call sub_41CF73  +
test [ebp+arg_0] 1 +
jz loc_41CF12  +
test [ebp+arg_0] 4 +
jnz loc_41CF08  +
push esi  +
call sub_40FC0D  +
jmp loc_41CF11  +
push 8  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jz locret_41CF45  +
and dword ptr [eax+4] 0 +
mov dword ptr [eax] offset off_443FE8 +
leave   +
retn 4  +
***
push ecx  +
cmp dword ptr [ecx+4] 0 +
push edi  +
push 1  +
push esi  +
xor esi esi +
push esi  +
call sub_41CFF6  +
test eax eax +
jz loc_41CFE2  +
push [ebp+arg_0]  +
lea ecx [eax+1Ch] +
call sub_41CD26  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_41EF3C  +
call sub_419983  +
xor eax eax +
push 0FFFFFFFFh  +
call sub_419983  +
push 1  +
mov edi [eax+4] +
mov eax [edi] +
mov esi [eax+0B8h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
call sub_419983  +
push 0FFFFFFFFh  +
mov edi [eax+4] +
mov eax [edi] +
mov esi [eax+0B8h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
pop edi  +
pop esi  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov eax 80029C4Ah +
retn 8  +
***
inc eax  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
mov ebx ecx +
mov [ebp-4] ebx +
cmp edi 0FFFFFFFEh +
jnz loc_41D2AC  +
call sub_419983  +
cmp dword ptr [eax+3Ch] 0 +
jz loc_41D3B6  +
call sub_419983  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
mov edi [eax+3Ch] +
push dword ptr [ebp+8]  +
push ebx  +
mov eax [edi] +
mov esi [eax+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
jmp loc_41D395  +
cmp edi 0FFFFFFFDh +
jnz loc_41D343  +
mov eax [ebp+10h] +
xor edi edi +
test eax eax +
jz loc_41D3B6  +
mov eax [eax+30h] +
mov [ebp-8] eax +
mov eax [ebx] +
mov esi [eax+2Ch] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx ebx +
call esi  +
mov ebx eax +
mov [ebp-4] eax +
jmp loc_41D33B  +
test edi edi +
jnz loc_41D33F  +
mov esi [ebx+4] +
mov eax [esi+4] +
test eax eax +
jz loc_41D336  +
mov ebx [ebp+10h] +
cmp dword ptr [esi+8] 0 +
jz loc_41D333  +
test edi edi +
jnz loc_41D333  +
cmp [ebp+8] eax +
jnz loc_41D329  +
mov eax [ebp-8] +
test eax eax +
jnz loc_41D30D  +
cmp [esi] eax +
jz loc_41D320  +
jmp loc_41D329  +
cmp dword ptr [esi] 0 +
jz loc_41D329  +
push dword ptr [esi]  +
push eax  +
call sub_419D59  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41D329  +
mov eax [esi+8] +
xor edi edi +
mov [ebx+4] eax +
inc edi  +
mov eax [esi+10h] +
add esi 0Ch +
test eax eax +
jnz loc_41D2F1  +
mov ebx [ebp-4] +
mov ebx [ebx] +
mov [ebp-4] ebx +
test ebx ebx +
jnz loc_41D2E0  +
mov eax edi +
jmp loc_41D395  +
cmp edi 0FFFFFFFFh +
jz loc_41D354  +
mov ebx edi +
movzx edi di +
shr ebx 10h +
test ebx ebx +
jnz loc_41D359  +
mov ebx 111h +
mov eax ecx +
mov eax [eax] +
mov esi [eax+28h] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx [ebp-4] +
call esi  +
jmp loc_41D38C  +
push dword ptr [ebp+8]  +
push edi  +
push ebx  +
push dword ptr [esi+4]  +
call sub_4135CB  +
test eax eax +
jnz loc_41D39C  +
mov esi [esi] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
mov esi eax +
cmp dword ptr [esi] 0 +
jnz loc_41D36F  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
push dword ptr [ebp+14h]  +
push dword ptr [eax+10h]  +
push dword ptr [ebp+10h]  +
push dword ptr [eax+14h]  +
push edi  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-4]  +
call loc_41D511  +
jmp loc_41D395  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov edx [esi+0Ch] +
test edx edx +
jz loc_41D3F7  +
cmp dword ptr [esi+10h] 0 +
jnz loc_41D42D  +
mov ecx [esi+8] +
cmp ecx [esi+20h] +
jnb loc_41D432  +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
lea eax ds:400h[eax*8] +
push eax  +
push ecx  +
push dword ptr [edx+4]  +
call ds:CheckMenuItem  +
jmp loc_41D42D  +
mov eax [esi+14h] +
test eax eax +
jz loc_41D432  +
push 0  +
push 0  +
push 87h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
test eax 2000h +
jz loc_41D42D  +
mov eax [esi+14h] +
push 0  +
push dword ptr [ebp+8]  +
push 0F1h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi ecx +
xor eax eax +
cmp [ebp+8] eax +
setnz al  +
mov edx [edi] +
push eax  +
mov esi [edx+4] +
mov ecx esi +
call ds:off_43B5A4  +
mov ecx edi +
call esi  +
xor esi esi +
cmp [edi+0Ch] esi +
jz loc_41D4A2  +
cmp [edi+10h] esi +
jnz loc_41D4A2  +
mov eax [edi+8] +
cmp eax [edi+20h] +
jnb loc_41D4A8  +
mov eax dword_4533D8 +
test eax eax +
jnz loc_41D48C  +
call sub_41D6B9  +
mov eax dword_4533D8 +
test eax eax +
jz loc_41D4A2  +
push eax  +
mov eax [edi+0Ch] +
push esi  +
push 400h  +
push dword ptr [edi+8]  +
push dword ptr [eax+4]  +
call ds:SetMenuItemBitmaps  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call sub_40FC94  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
sub esp 30h +
test eax eax +
jz loc_41D50B  +
mov edx [ecx+0Ch] +
test edx edx +
jz loc_41D4F7  +
cmp dword ptr [ecx+10h] 0 +
jnz locret_41D507  +
push esi  +
mov esi [ecx+8] +
cmp esi [ecx+20h] +
jnb loc_41D50B  +
mov [ebp-0Ch] eax +
lea eax [ebp-30h] +
push eax  +
push 1  +
push esi  +
mov dword ptr [ebp-30h] 30h +
mov dword ptr [ebp-2Ch] 40h +
push dword ptr [edx+4]  +
call ds:SetMenuItemInfoW  +
pop esi  +
jmp locret_41D507  +
mov ecx [ecx+14h] +
test ecx ecx +
jz loc_41D50B  +
push eax  +
push dword ptr [ecx+20h]  +
call sub_41C9BB  +
leave   +
retn 4  +
***
call sub_40FC94  +
int 3  +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
test esi esi +
jz loc_41D684  +
mov ecx [ebp+20h] +
xor ebx ebx +
inc ebx  +
test ecx ecx +
jz loc_41D53A  +
mov eax [ebp+14h] +
mov [ecx+4] eax +
mov eax ebx +
mov [ecx] esi +
jmp loc_41D67A  +
mov eax [ebp+1Ch] +
add eax 0FFFFFFC6h +
push edi  +
cmp eax 0Bh +
ja loc_41D680  +
jmp ds:off_41D689[eax*4]  +
mov ecx [ebp+14h] +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D677  +
mov ecx [ebp+14h] +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D675  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+14h] +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D677  +
push dword ptr [ebp+0Ch]  +
jmp loc_41D667  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41D684  +
push dword ptr [eax]  +
mov ecx [ebp+14h] +
push dword ptr [eax+4]  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D677  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41D684  +
push dword ptr [eax]  +
mov ecx [ebp+14h] +
push dword ptr [eax+4]  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D675  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41D684  +
push dword ptr [eax]  +
mov ecx [ebp+14h] +
push dword ptr [eax+4]  +
push dword ptr [ebp+0Ch]  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D677  +
mov eax [ebp+18h] +
test eax eax +
jz loc_41D684  +
push dword ptr [eax]  +
mov ecx [ebp+14h] +
push dword ptr [eax+4]  +
push dword ptr [ebp+0Ch]  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D675  +
mov edi [ebp+18h] +
test edi edi +
jz loc_41D684  +
mov ecx [ebp+14h] +
push edi  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
xor ebx ebx +
cmp [edi+1Ch] ebx +
setz bl  +
and dword ptr [edi+1Ch] 0 +
jmp loc_41D677  +
mov edi [ebp+18h] +
test edi edi +
jz loc_41D684  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+14h] +
push edi  +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
jmp loc_41D633  +
***
push dword ptr [ebp+18h]  +
jmp loc_41D57A  +
***
push dword ptr [ebp+18h]  +
mov ecx [ebp+14h] +
call ds:off_43B5A4  +
mov ecx esi +
call dword ptr [ebp+14h]  +
mov ebx eax +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
xor eax eax +
jmp loc_41D679  +
***
call sub_40FC94  +
sub esp 90h +
push edi  +
mov eax [ebp+arg_0] +
xor eax eax +
mov dword ptr [ecx] offset off_44418C +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+14h] eax +
mov [ecx+4] eax +
mov [ecx+8] eax +
mov [ecx+20h] eax +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push ecx  +
mov ecx [ecx+28h] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+4] ebx +
jnz loc_41D9C0  +
push offset sub_41DAF0  +
mov ecx offset unk_453808 +
call sub_419336  +
mov esi eax +
test esi esi +
jz loc_41D9C9  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_41DB53  +
cmp [esi+0Ch] ebx +
jz loc_41D9C0  +
push offset sub_41DAF0  +
mov ecx offset unk_453808 +
call sub_419336  +
mov esi eax +
test esi esi +
jz loc_41D9C9  +
push ebx  +
push ebx  +
mov ecx esi +
call sub_41DB53  +
mov ecx [esi+0Ch] +
lea ebx [edi+28h] +
push ebx  +
push [ebp+arg_0]  +
mov eax [ecx] +
push ecx  +
mov esi [eax+40h] +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
test eax eax +
js loc_41D9C0  +
mov eax [ebx] +
mov [edi+4] eax +
xor eax eax +
inc eax  +
jmp loc_41D9C2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
call sub_40FC94  +
int 3  +
***
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov ebx ecx +
test edi edi +
jz loc_41DAD1  +
cmp dword ptr [ebx+4] 0 +
jnz loc_41DAD1  +
push offset sub_41DAF0  +
mov ecx offset unk_453808 +
call sub_419336  +
mov esi eax +
test esi esi +
jz loc_41DAE4  +
push 0  +
push 0  +
mov ecx esi +
call sub_41DB53  +
xor eax eax +
cmp [esi+0Ch] eax +
jz loc_41DAD1  +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
mov [ebp-0Ch] eax +
mov [ebp-8] eax +
lea eax [ebp-14h] +
push eax  +
push edi  +
call ds:GetClientRect  +
mov eax [ebp-8] +
lea esi [ebp-40h] +
sub eax [ebp-10h] +
mov ecx [ebp-0Ch] +
sub ecx [ebp-14h] +
fldz   +
mov [ebp-38h] eax +
xor eax eax +
mov [ebp-40h] edi +
lea edi [ebp-5Ch] +
mov [ebp-3Ch] ecx +
mov [ebp-34h] eax +
movs   +
push 7  +
pop ecx  +
push offset sub_41DAF0  +
movs   +
movs   +
movs   +
fst  dword ptr [ebp-40h] +
mov [ebp-4Ch] eax +
lea esi [ebp-4Ch] +
mov [ebp-48h] eax +
lea edi [ebp-30h] +
mov [ebp-44h] eax +
mov [ebp-38h] eax +
mov [ebp-34h] eax +
fstp  dword ptr [ebp-3Ch] +
movs   +
mov ecx offset unk_453808 +
call sub_419336  +
mov esi eax +
test esi esi +
jz loc_41DAE4  +
push 0  +
push 0  +
mov ecx esi +
call sub_41DB53  +
mov eax [esi+0Ch] +
lea edi [ebx+28h] +
push edi  +
lea ecx [ebp-5Ch] +
push ecx  +
mov esi [eax] +
lea ecx [ebp-30h] +
push ecx  +
push eax  +
mov ecx [esi+38h] +
call ds:off_43B5A4  +
call dword ptr [esi+38h]  +
test eax eax +
js loc_41DAD1  +
mov eax [edi] +
mov [ebx+4] eax +
xor eax eax +
inc eax  +
jmp loc_41DAD3  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
leave   +
retn 4  +
***
call sub_40FC94  +
push ecx  +
mov eax [ecx+4] +
mov edx [ebp+arg_0] +
push esi  +
push ecx  +
mov edi ecx +
mov ecx [ecx+28h] +
mov eax [ecx] +
push ebx  +
call sub_4199B6  +
mov eax [ebp+arg_4] +
push edi  +
call sub_41DDD6  +
push ecx  +
call sub_419983  +
sub esp 1Ch +
sub esp 4Ch +
mov eax [ebp+arg_0] +
xor eax eax +
call sub_41EF3C  +
push 0FFFFFFFFh  +
push offset loc_43A565  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_4504C0 +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov dword ptr [esi] offset off_444274 +
call sub_41E2E2  +
lea ecx [esi+38h] +
call sub_41CB41  +
lea ecx [esi+1Ch] +
call sub_41CB41  +
lea ecx [esi+4] +
call sub_41EB09  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
leave   +
retn   +
***
push esi  +
sub esp 0Ch +
call sub_41EFA7  +
mov edx [ebp+arg_0] +
push edi  +
xor edi edi +
mov ecx [esi+14h] +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+8] edi +
mov [esi+4] edi +
call sub_41E929  +
mov [esi+14h] edi +
pop edi  +
pop esi  +
retn   +
***
test ecx ecx +
jz loc_41E487  +
mov eax [ecx+4] +
test eax eax +
jz loc_41E487  +
mov edx [eax] +
push esi  +
mov esi [eax+8] +
mov [ecx+4] edx +
test edx edx +
jz loc_41E479  +
and dword ptr [edx+4] 0 +
jmp loc_41E47D  +
and dword ptr [ecx+8] 0 +
push eax  +
call sub_41E414  +
mov eax esi +
pop esi  +
retn   +
***
call sub_40FC94  +
push ecx  +
xor eax eax +
mov dword ptr [ecx] offset off_4448D8 +
mov [ecx+4] eax +
mov [ecx+10h] eax +
mov [ecx+0Ch] eax +
mov [ecx+8] eax +
mov eax ecx +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
mov dword ptr [esi] offset off_4448D8 +
call sub_40FC0D  +
test [ebp+arg_0] 1 +
pop ecx  +
jz loc_41E503  +
test [ebp+arg_0] 4 +
jnz loc_41E4F9  +
push esi  +
call sub_40FC0D  +
jmp loc_41E502  +
push 14h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push ecx  +
push ecx  +
xor eax eax +
mov dword ptr [ecx] offset off_444904 +
mov [ecx+4] eax +
mov [ecx+10h] eax +
mov [ecx+0Ch] eax +
mov [ecx+8] eax +
mov eax ecx +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
mov dword ptr [esi] offset off_444904 +
call sub_40FC0D  +
test [ebp+arg_0] 1 +
pop ecx  +
jz loc_41E713  +
test [ebp+arg_0] 4 +
jnz loc_41E709  +
push esi  +
call sub_40FC0D  +
jmp loc_41E712  +
push 14h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
test ecx ecx +
jz locret_41E93E  +
push esi  +
mov esi [ecx] +
push ecx  +
call sub_40FC0D  +
pop ecx  +
mov ecx esi +
test esi esi +
jnz loc_41E92E  +
pop esi  +
retn   +
***
push ecx  +
xor eax eax +
mov dword ptr [ecx] offset off_444928 +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+8] eax +
mov [ecx+4] eax +
mov [ecx+14h] eax +
mov eax [ebp+arg_0] +
mov [ecx+18h] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push esi  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+10h] 0 +
jnz loc_41EA60  +
push 0Ch  +
push dword ptr [esi+18h]  +
lea eax [esi+14h] +
push eax  +
call sub_41E8F8  +
mov edx [esi+18h] +
add eax 8 +
imul ecx edx +
add ecx 0FFFFFFF4h +
add ecx eax +
jmp loc_41EA5B  +
mov eax [esi+10h] +
mov [ecx] eax +
mov [esi+10h] ecx +
sub ecx 0Ch +
sub edx 1 +
jns loc_41EA50  +
mov eax [esi+10h] +
mov ecx [eax] +
mov [esi+10h] ecx +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
inc dword ptr [esi+0Ch]  +
and dword ptr [eax+8] 0 +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov edx [ebp+arg_0] +
push 0FFFFFFFFh  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx [esi+8] +
call sub_41E929  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
retn   +
***
push ecx  +
xor eax eax +
mov dword ptr [ecx] offset off_444994 +
mov [ecx+0Ch] eax +
mov [ecx+10h] eax +
mov [ecx+8] eax +
mov [ecx+4] eax +
mov [ecx+14h] eax +
mov eax [ebp+arg_0] +
mov [ecx+18h] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push esi  +
push edi  +
mov edi ecx +
push 0  +
push dword ptr [edi+8]  +
call sub_41EC96  +
push [ebp+arg_0]  +
mov esi eax +
lea ecx [esi+8] +
call sub_402209  +
mov eax [edi+8] +
test eax eax +
jz loc_41EC7D  +
mov [eax] esi +
jmp loc_41EC80  +
mov [edi+4] esi +
mov [edi+8] esi +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+10h] 0 +
jnz loc_41ECD1  +
push 0Ch  +
push dword ptr [esi+18h]  +
lea eax [esi+14h] +
push eax  +
call sub_41E8F8  +
mov edx [esi+18h] +
add eax 8 +
imul ecx edx +
add ecx 0FFFFFFF4h +
add ecx eax +
jmp loc_41ECCC  +
mov eax [esi+10h] +
mov [ecx] eax +
mov [esi+10h] ecx +
sub ecx 0Ch +
sub edx 1 +
jns loc_41ECC1  +
mov edi [esi+10h] +
mov eax [edi] +
mov [esi+10h] eax +
mov eax [ebp+arg_0] +
mov [edi+4] eax +
mov eax [ebp+arg_4] +
mov [edi] eax +
inc dword ptr [esi+0Ch]  +
lea esi [edi+8] +
test esi esi +
jz loc_41ED03  +
call sub_410279  +
push eax  +
mov ecx esi +
call sub_401330  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
call sub_40FC94  +
int 3  +
***
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
mov edi [esi+4] +
jmp loc_41ED24  +
lea ecx [edi+8] +
test ecx ecx +
jz loc_41ED43  +
push ebx  +
call sub_41289B  +
mov edi [edi] +
test edi edi +
jnz loc_41ED15  +
mov ecx [esi+14h] +
mov [esi+0Ch] ebx +
mov [esi+10h] ebx +
mov [esi+8] ebx +
mov [esi+4] ebx +
call sub_41E929  +
pop edi  +
mov [esi+14h] ebx +
pop esi  +
pop ebx  +
retn   +
***
call sub_40FC94  +
call sub_41EF3C  +
mov esi ecx +
mov edi [ebp+8] +
mov ecx edi +
mov eax [edi+18h] +
not eax  +
test al 1 +
jz loc_41ED8C  +
push dword ptr [esi+0Ch]  +
call sub_41ACF8  +
mov esi [esi+4] +
jmp loc_41ED86  +
lea eax [esi+8] +
mov ecx edi +
push eax  +
call sub_4101A4  +
mov esi [esi] +
test esi esi +
jnz loc_41ED79  +
jmp loc_41EDCF  +
call sub_41AB6F  +
mov ebx eax +
call sub_410279  +
push eax  +
lea ecx [ebp-10h] +
call sub_401330  +
and dword ptr [ebp-4] 0 +
test ebx ebx +
jz loc_41EDC4  +
lea eax [ebp-10h] +
mov ecx edi +
push eax  +
call sub_41004F  +
lea eax [ebp-10h] +
mov ecx esi +
push eax  +
call sub_41EC54  +
sub ebx 1 +
jnz loc_41EDA9  +
mov ecx [ebp-10h] +
lea ecx [ecx-10h] +
call sub_401A64  +
call sub_41EF05  +
retn 4  +
***
push ecx  +
xor eax eax +
mov dword ptr [ecx] offset off_4449B0 +
mov [ecx+4] eax +
mov [ecx+10h] eax +
mov [ecx+0Ch] eax +
mov [ecx+8] eax +
mov eax ecx +
retn   +
***
push esi  +
mov esi ecx +
push dword ptr [esi+4]  +
mov dword ptr [esi] offset off_4449B0 +
call sub_40FC0D  +
test [ebp+arg_0] 1 +
pop ecx  +
jz loc_41EE53  +
test [ebp+arg_0] 4 +
jnz loc_41EE49  +
push esi  +
call sub_40FC0D  +
jmp loc_41EE52  +
push 14h  +
push esi  +
call nullsub_1  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
push ecx  +
push [ebp+arg_0]  +
cmp ecx dword_4504C0 +
mov ecx [ebp-0Ch] +
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_4504C0 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4449E8 +
jz loc_41F03C  +
push 0Ch  +
push esi  +
call sub_41EEE6  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_41F077  +
push 0  +
call sub_41F2EB  +
pop ecx  +
test al al +
jz loc_41F06F  +
push offset loc_41F100  +
call sub_41F478  +
pop ecx  +
xor eax eax +
retn   +
push 7  +
call sub_41FD30  +
int 3  +
***
push esi  +
push edi  +
push 0FA0h  +
push offset stru_453844  +
call ds:InitializeCriticalSectionAndSpinCount  +
push offset aApiMsWinCoreSy  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jnz loc_41F0AB  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_41F0F1  +
push offset aSleepcondition  +
push esi  +
call ds:GetProcAddress  +
push offset aWakeallconditi  +
push esi  +
mov edi eax +
call ds:GetProcAddress  +
test edi edi +
jz loc_41F0DB  +
test eax eax +
jz loc_41F0DB  +
mov dword_45385C edi +
mov dword_453860 eax +
pop edi  +
pop esi  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 1  +
push eax  +
call ds:CreateEventW  +
mov hEvent eax +
test eax eax +
jnz loc_41F0D8  +
push 7  +
call sub_41FD30  +
push esi  +
push esi  +
push edi  +
mov edi offset stru_453844 +
push edi  +
call ds:EnterCriticalSection  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
jnz loc_41F18E  +
or dword ptr [esi] 0FFFFFFFFh +
jmp loc_41F1AD  +
push 64h  +
call sub_41F1EE  +
pop ecx  +
jmp loc_41F17A  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_41F184  +
mov eax large fs:2Ch +
mov ecx TlsIndex +
mov ecx [eax+ecx*4] +
mov eax dword_4504C4 +
mov [ecx+4] eax +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
mov eax [ebp+arg_0] +
test eax eax +
cmp [ebp+arg_0] 0 +
cmp byte_45386D 0 +
call sub_41F490  +
call sub_420101  +
cmp byte_45386C 0 +
cmp dword_453870 0FFFFFFFFh +
push [ebp+arg_0]  +
call sub_41F44B  +
neg eax  +
pop ecx  +
sbb eax eax +
neg eax  +
dec eax  +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_4504C0 +
xor [ebp-4] eax +
xor eax ebp +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_41F514  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_41F504  +
***
push esi  +
push 2  +
call sub_42B916  +
call sub_4201A5  +
push eax  +
call sub_42BA54  +
call sub_414DD0  +
mov esi eax +
call sub_42BBCF  +
push 1  +
mov [eax] esi +
call sub_41F2EB  +
add esp 0Ch +
pop esi  +
test al al +
jz loc_41F5C3  +
fnclex   +
call sub_420219  +
push offset sub_420250  +
call sub_41F478  +
call sub_414490  +
push eax  +
call sub_42B03E  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41F5C3  +
call sub_4201AB  +
call sub_420201  +
test eax eax +
jz loc_41F58B  +
push offset sub_414DD0  +
call sub_42B982  +
pop ecx  +
call nullsub_1  +
call nullsub_1  +
call sub_4201C3  +
call sub_414DD0  +
push eax  +
call sub_42BB37  +
pop ecx  +
call sub_4201C0  +
test al al +
jz loc_41F5B4  +
call sub_42B447  +
call sub_414DD0  +
call sub_41FE7B  +
test eax eax +
jnz loc_41F5C3  +
retn   +
***
push 7  +
call sub_41FD30  +
call loc_4201E4  +
xor eax eax +
retn   +
***
call sub_41FEC3  +
call sub_414DD0  +
push eax  +
call sub_42BBA0  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_41FE80  +
test al al +
jz loc_41F765  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_41F73E  +
call sub_42ACBB  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
push 7  +
call sub_41FD30  +
push esi  +
call sub_42AD15  +
push dword ptr [ebp-20h]  +
call sub_42ACD9  +
***
call sub_42015A  +
jmp loc_41F5F2  +
***
mov eax [esp+8+arg_4] +
mov [esp+8+arg_4] ebp +
lea ebp [esp+8+arg_4] +
sub esp eax +
push ebx  +
push esi  +
push edi  +
mov eax dword_4504C0 +
xor [ebp-4] eax +
xor eax ebp +
mov [ebp-1Ch] eax +
push eax  +
mov [ebp-18h] esp +
push dword ptr [ebp-8]  +
mov eax [ebp-4] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov [ebp-8] eax +
lea eax [ebp-10h] +
mov large fs:0 eax +
retn   +
***
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
push 17h  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_41F920  +
mov ecx [ebp+arg_0] +
int 29h  +
mov dword_453990 eax +
mov dword_45398C ecx +
mov dword_453988 edx +
mov dword_453984 ebx +
mov dword_453980 esi +
mov dword_45397C edi +
mov word_4539A8 ss +
mov word_45399C cs +
mov word_453978 ds +
mov word_453974 es +
mov word_453970 fs +
mov word_45396C gs +
pushf   +
pop dword_4539A0  +
mov eax [ebp+0] +
mov dword_453994 eax +
mov eax [ebp+4] +
mov dword_453998 eax +
lea eax [ebp+arg_0] +
mov dword_4539A4 eax +
mov eax [ebp+var_31C] +
mov eax dword_453998 +
mov dword_45389C eax +
mov dword_453890 0C0000409h +
mov dword_453894 1 +
mov dword_4538A0 1 +
push 4  +
pop eax  +
imul eax eax +
mov ecx [ebp+arg_0] +
mov dword_4538A4[eax] ecx +
push offset ExceptionInfo  +
call sub_41F7DA  +
leave   +
retn   +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_41FA01  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_41FA1D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_41FA39  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_41FA7A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_41FA47  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_41FA75  +
cmp edx [esp+arg_4] +
ja loc_41FA75  +
jb loc_41FA76  +
cmp eax [esp+arg_0] +
jbe loc_41FA76  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_41FA84  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
cmp dword_453BB0 2 +
jl loc_41FAA1  +
sub esp 4 +
fisttp  dword ptr [esp] +
pop eax  +
retn   +
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  [esp+14h+var_14] +
mov eax dword ptr [esp+14h+var_14+4] +
movzx ecx word ptr [esp+14h+var_14+8] +
btr ecx 0Fh +
sbb edx edx +
cmp cx 3FFFh +
jb loc_41FAE4  +
test eax eax +
jns loc_41FAFF  +
cmp cx 401Eh +
jnb loc_41FAEC  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
xor eax edx +
sub eax edx +
leave   +
retn   +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
ja loc_41FAFF  +
test edx edx +
jns loc_41FAFF  +
cmp eax 80000000h +
jnz loc_41FAFF  +
frndint   +
fstp  st +
leave   +
retn   +
fcomp  ds:flt_444A88 +
leave   +
mov eax 80000000h +
retn   +
***
cmp dword_453BB0 2 +
jl loc_41FB57  +
fldz   +
fucomip st st(1) +
jp loc_41FB4B  +
ja loc_41FB3C  +
fld  ds:flt_444A80 +
fucomip st st(1) +
jbe loc_41FB4B  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_41FB4B  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_444A88 +
mov eax 0FFFFFFFFh +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_41FB96  +
cmp cx 3FFFh +
jb loc_41FB9D  +
test eax eax +
jns loc_41FBA5  +
cmp cx 401Fh +
jnb loc_41FBA5  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
shr eax cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_41FBA5  +
frndint   +
fstp  st +
xor eax eax +
leave   +
retn   +
***
fcomp  ds:flt_444A88 +
leave   +
mov eax 0FFFFFFFFh +
retn   +
***
cmp dword_453BB0 2 +
jl loc_41FBDE  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
cmp cx 3FFFh +
jb loc_41FC39  +
test edx edx +
jns loc_41FC5C  +
cmp cx 403Eh +
jnb loc_41FC43  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_41FC23  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
cmp word ptr [esp+8] 0 +
jge locret_41FC37  +
neg eax  +
adc edx 0 +
neg edx  +
leave   +
retn   +
***
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
lea ecx ds:0[edx*2] +
ja loc_41FC5C  +
or ecx eax +
jnz loc_41FC5C  +
cmp word ptr [esp+8] 0 +
jge loc_41FC5C  +
fstp  st +
leave   +
retn   +
***
fcomp  ds:flt_444A88 +
leave   +
mov edx 80000000h +
xor eax eax +
retn   +
***
jmp loc_41FC70  +
cmp dword_453BB0 2 +
jl loc_41FCBC  +
fldz   +
fucomip st st(1) +
jp loc_41FCAF  +
ja loc_41FCA0  +
fld  ds:flt_444A84 +
fucomip st st(1) +
jbe loc_41FCBC  +
mov ecx esp +
add esp 0FFFFFFF8h +
and esp 0FFFFFFF8h +
fisttp  qword ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
mov esp ecx +
retn   +
***
fabs   +
fld1   +
fucomip st st(1) +
jbe loc_41FCAF  +
fisttp  dword ptr [esp-4] +
xor eax eax +
retn   +
***
fcomp  ds:flt_444A88 +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
push ebp  +
mov ebp esp +
add esp 0FFFFFFF0h +
and esp 0FFFFFFF0h +
fld  st +
fstp  tbyte ptr [esp] +
mov eax [esp] +
mov edx [esp+4] +
movzx ecx word ptr [esp+8] +
btr ecx 0Fh +
jb loc_41FD0A  +
cmp cx 3FFFh +
jb loc_41FD11  +
test edx edx +
jns loc_41FD1B  +
cmp cx 403Fh +
jnb loc_41FD1B  +
neg cx  +
add cx 403Eh +
frndint   +
fstp  st +
cmp cl 20h +
jb loc_41FD03  +
mov eax edx +
xor edx edx +
shrd eax edx +
shr edx cl +
leave   +
retn   +
***
cmp cx 3FFFh +
jnb loc_41FD1B  +
frndint   +
fstp  st +
xor eax eax +
xor edx edx +
leave   +
retn   +
***
fcomp  ds:flt_444A88 +
leave   +
mov eax 0FFFFFFFFh +
cdq   +
retn   +
***
sub esp 324h +
sub esp 44h +
test eax eax +
retn   +
***
push esi  +
and dword_453BAC 0 +
retn   +
***
push ebp  +
mov ebp esp +
and dword_453BB0 0 +
sub esp 24h +
or dword_4504E0 1 +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_4200FD  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
push ebx  +
push esi  +
push edi  +
xor ecx ecx +
lea edi [ebp-24h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
xor ecx ecx +
mov [edi+0Ch] edx +
mov eax [ebp-24h] +
mov edi [ebp-1Ch] +
mov [ebp-0Ch] eax +
xor edi 6C65746Eh +
mov eax [ebp-18h] +
xor eax 49656E69h +
mov [ebp-8] eax +
mov eax [ebp-20h] +
xor eax 756E6547h +
mov [ebp-4] eax +
xor eax eax +
inc eax  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov eax [ebp-4] +
mov [ebx+4] esi +
or eax edi +
or eax [ebp-8] +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
jnz loc_41FFFE  +
mov eax [ebp-24h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_41FFED  +
cmp eax 20660h +
jz loc_41FFED  +
cmp eax 20670h +
jz loc_41FFED  +
cmp eax 30650h +
jz loc_41FFED  +
cmp eax 30660h +
jz loc_41FFED  +
cmp eax 30670h +
jnz loc_41FFFE  +
mov edi dword_453BB4 +
or edi 1 +
mov dword_453BB4 edi +
jmp loc_420004  +
mov edi dword_453BB4 +
mov ecx [ebp-1Ch] +
push 7  +
pop eax  +
mov [ebp-4] ecx +
cmp [ebp-0Ch] eax +
jl loc_420041  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-24h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov ecx [ebp-4] +
mov [ebx+0Ch] edx +
mov ebx [ebp-20h] +
test ebx 200h +
jz loc_420044  +
or edi 2 +
mov dword_453BB4 edi +
jmp loc_420044  +
mov ebx [ebp-10h] +
mov eax dword_4504E0 +
or eax 2 +
mov dword_453BB0 1 +
mov dword_4504E0 eax +
test ecx 100000h +
jz loc_4200FA  +
or eax 4 +
mov dword_453BB0 2 +
mov dword_4504E0 eax +
test ecx 8000000h +
jz loc_4200FA  +
test ecx 10000000h +
jz loc_4200FA  +
xor ecx ecx +
xor eax eax +
sub esp 14h +
mov ecx dword_4504C0 +
retn   +
***
push 0  +
xor eax eax +
mov esi offset unk_44AD80 +
mov ebx offset unk_44AD80 +
cmp esi ebx +
jnb loc_420242  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_42023A  +
mov ecx edi +
call ds:off_43B5A4  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_42022A  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov esi offset unk_44AD88 +
call sub_420305  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_420490  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
cmp eax [esi+30h] +
jg loc_420397  +
test eax eax +
js loc_420397  +
cmp eax [esi+30h] +
jnz loc_42038A  +
mov esi [esi+8] +
jmp loc_420399  +
push eax  +
lea ecx [esi+2Ch] +
call sub_42033E  +
mov esi [eax] +
jmp loc_420399  +
xor esi esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
lea eax [ebp+var_8] +
mov [ebp+var_4] 1 +
lea edx [esi+4] +
mov dword ptr [esi] offset off_43C8BC +
and dword ptr [edx] 0 +
and dword ptr [edx+4] 0 +
push edx  +
push eax  +
call sub_421976  +
pop ecx  +
pop ecx  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push esi  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call sub_4203C5  +
mov dword ptr [esi] offset off_444B84 +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
push esi  +
sub esp 0Ch +
mov ecx [esp+arg_8] +
movzx eax [esp+arg_4] +
mov edx edi +
mov edi [esp+arg_0] +
test ecx ecx +
jz loc_4205E3  +
imul eax eax +
cmp ecx 20h +
jbe loc_420595  +
cmp ecx 80h +
jb loc_42054D  +
bt dword_453BB4 1 +
jnb loc_4204D5  +
stos   +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
bt dword_4504E0 1 +
jnb loc_420595  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
add ecx edi +
movups oword ptr [edi] xmm0 +
add edi 10h +
and edi 0FFFFFFF0h +
sub ecx edi +
cmp ecx 80h +
jbe loc_42054D  +
lea esp [esp+0] +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
sub ecx 80h +
test ecx 0FFFFFF00h +
jnz loc_420510  +
jmp loc_420560  +
bt dword_4504E0 1 +
jnb loc_420595  +
movd xmm0 eax +
pshufd xmm0 xmm0 +
cmp ecx 20h +
jb loc_420581  +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
add edi 20h +
sub ecx 20h +
cmp ecx 20h +
jnb loc_420565  +
test ecx 1Fh +
jz loc_4205E3  +
lea edi [edi+ecx-20h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm0 +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
test ecx 3 +
jz loc_4205AB  +
mov [edi] al +
inc edi  +
sub ecx 1 +
test ecx 3 +
jnz loc_42059D  +
test ecx 4 +
jz loc_4205BB  +
mov [edi] eax +
add edi 4 +
sub ecx 4 +
test ecx 0FFFFFFF8h +
jz loc_4205E3  +
lea esp [esp+0] +
lea ebx [ebx+0] +
mov [edi] eax +
mov [edi+4] eax +
add edi 8 +
sub ecx 8 +
test ecx 0FFFFFFF8h +
jnz loc_4205D0  +
mov eax [esp+arg_0] +
mov edi edx +
retn   +
***
push ebx  +
mov ebx esp +
push ecx  +
push ecx  +
and esp 0FFFFFFF0h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+4] ebp +
mov ebp esp +
sub esp 28h +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
xor eax eax +
movzx ecx word ptr [edi] +
mov [ebp-8] ecx +
cmp ax cx +
jnz loc_42061C  +
cmp dword_453BB0 1 +
jle loc_420713  +
mov eax edi +
and eax 0FFFh +
push 2  +
pop esi  +
cmp eax 0FF0h +
ja loc_42063F  +
movups xmm0 oword ptr [edi] +
jmp loc_42066A  +
push 8  +
pxor xmm0 xmm0 +
movzx ecx cx +
pop edx  +
movzx eax cx +
psrldq xmm0 2 +
pinsrw xmm0 eax +
xor eax eax +
cmp ax cx +
jz loc_420662  +
add edi esi +
movzx ecx word ptr [edi] +
sub edx 1 +
jnz loc_420649  +
mov ecx [ebp-8] +
mov edx [ebx+8] +
mov eax edx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4206D6  +
mov ecx [ebp-8] +
jmp loc_42066D  +
***
adc al 4Ah +
mov ecx [ebx+0Ch] +
mov edi edx +
mov eax edi +
mov [ebp-4] ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4206ED  +
mov eax ecx +
and eax 0FFFh +
cmp eax 0FF0h +
ja loc_4206ED  +
movups xmm1 oword ptr [ecx] +
jmp loc_42069F  +
***
cmp ax cx +
jz loc_42069A  +
add edx esi +
jmp loc_42066D  +
***
cmp [edi] ax +
jnz loc_420705  +
add edi esi +
add ecx esi +
jmp loc_42069F  +
***
add edx esi +
jmp loc_420686  +
***
add ecx 10h +
jmp loc_420734  +
***
add edx 10h +
add edi 10h +
jmp loc_420781  +
***
cmp [edx] ax +
jnz loc_4207E8  +
add edx esi +
add edi esi +
jmp loc_420781  +
***
mov edi [ebx+0Ch] +
add ecx esi +
jmp loc_420734  +
***
push ecx  +
sub esp 18h +
sub esp 40h +
push ecx  +
push ebx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov ebx large fs:0 +
mov eax [ebx] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov ebp [ebp+var_4] +
mov esp [ebx-4] +
jmp eax  +
***
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
push esi  +
push ecx  +
push ebx  +
cld   +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
xor ecx [ebp+arg_4] +
call sub_41EEF4  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
and eax 66h +
jz loc_420B6A  +
mov eax [ebp+arg_4] +
mov dword ptr [eax+24h] 1 +
xor eax eax +
inc eax  +
jmp loc_420BD4  +
jmp loc_420BD4  +
push 1  +
mov eax [ebp+arg_4] +
push dword ptr [eax+18h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+14h]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0Ch]  +
push 0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push dword ptr [eax+10h]  +
push [ebp+arg_0]  +
call sub_42353B  +
add esp 20h +
mov eax [ebp+arg_4] +
cmp dword ptr [eax+24h] 0 +
jnz loc_420BA8  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_420A4A  +
push 0  +
push 0  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 123h  +
call sub_420934  +
add esp 1Ch +
mov eax [ebp+var_4] +
mov ebx [ebp+arg_4] +
mov esp [ebx+1Ch] +
mov ebp [ebx+20h] +
jmp eax  +
xor eax eax +
inc eax  +
pop ebx  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_42353B  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41F490  +
mov ecx [ebp+arg_0] +
cmp [ebp+arg_4] 0 +
call sub_422C7C  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_422C7C  +
call sub_422C7C  +
add eax 14h +
retn   +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_420E00  +
cmp edi eax +
jb loc_421094  +
cmp ecx 20h +
jb loc_4212DB  +
cmp ecx 80h +
jnb loc_420E24  +
bt dword_4504E0 1 +
jb loc_4212AD  +
jmp loc_421007  +
bt dword_453BB4 1 +
jnb loc_420E37  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_420E50  +
bt dword_4504E0 1 +
jb loc_421230  +
bt dword_453BB4 0 +
jnb loc_421007  +
test edi 3 +
jnz loc_421007  +
test esi 3 +
jnz loc_421022  +
bt edi 2 +
jnb loc_420E89  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_420EA0  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_420F0D  +
bt esi 3 +
jnb loc_420F66  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_420FBC  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_420FD4  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_420FBC  +
***
bt ecx 2 +
jnb loc_420FE7  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_420FFE  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_421044[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_421022  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_42100F  +
mov edx ecx +
cmp ecx 20h +
jb loc_4212DB  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_421044[edx*4]  +
jmp dword ptr ds:loc_421054[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_4211F4  +
bt dword_4504E0 1 +
jb loc_421145  +
test edi 3 +
jz loc_4210CD  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_4210C0  +
cmp ecx 20h +
jb loc_4211F4  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_4210F0[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_42115C  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_42114D  +
cmp ecx 80h +
jb loc_4211CC  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_42115C  +
cmp ecx 20h +
jb loc_4211F4  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_4211D1  +
test ecx 0FFFFFFFCh +
jz loc_421211  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_4211FC  +
test ecx ecx +
jz loc_421224  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_421215  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_421230  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_421320  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_4212AD  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_421250  +
test ecx ecx +
jz loc_421310  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_4212DB  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_4212C0  +
and ecx 1Fh +
jz loc_421310  +
mov eax ecx +
shr ecx 2 +
jz loc_4212F6  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_4212E7  +
mov ecx eax +
and ecx 3 +
jz loc_421310  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4212FD  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_42133C  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_421333  +
shr eax 2 +
jz loc_42134E  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_421341  +
pop ecx  +
jmp loc_42123D  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_421380  +
cmp edi eax +
jb loc_421614  +
cmp ecx 20h +
jb loc_42185B  +
cmp ecx 80h +
jnb loc_4213A4  +
bt dword_4504E0 1 +
jb loc_42182D  +
jmp loc_421587  +
bt dword_453BB4 1 +
jnb loc_4213B7  +
movs   +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_4213D0  +
bt dword_4504E0 1 +
jb loc_4217B0  +
bt dword_453BB4 0 +
jnb loc_421587  +
test edi 3 +
jnz loc_421587  +
test esi 3 +
jnz loc_4215A2  +
bt edi 2 +
jnb loc_421409  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_421420  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_42148D  +
bt esi 3 +
jnb loc_4214E6  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx+0] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp loc_42153C  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
cmp ecx 10h +
jb loc_421554  +
movdqu xmm1 qword ptr [esi] +
sub ecx 10h +
lea esi [esi+10h] +
movdqa oword ptr [edi] xmm1 +
lea edi [edi+10h] +
jmp loc_42153C  +
***
bt ecx 2 +
jnb loc_421567  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt ecx 3 +
jnb loc_42157E  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
mov eax ds:off_4215C4[ecx*4] +
jmp eax  +
***
test edi 3 +
jz loc_4215A2  +
mov al [esi] +
mov [edi] al +
dec ecx  +
add esi 1 +
add edi 1 +
test edi 3 +
jnz loc_42158F  +
mov edx ecx +
cmp ecx 20h +
jb loc_42185B  +
shr ecx 2 +
movs   +
and edx 3 +
jmp ds:off_4215C4[edx*4]  +
jmp dword ptr ds:loc_4215D4[ecx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [esi+ecx] +
lea edi [edi+ecx] +
cmp ecx 20h +
jb loc_421774  +
bt dword_4504E0 1 +
jb loc_4216C5  +
test edi 3 +
jz loc_42164D  +
mov edx edi +
and edx 3 +
sub ecx edx +
mov al [esi-1] +
mov [edi-1] al +
dec esi  +
dec edi  +
sub edx 1 +
jnz loc_421640  +
cmp ecx 20h +
jb loc_421774  +
mov edx ecx +
shr ecx 2 +
and edx 3 +
sub esi 4 +
sub edi 4 +
std   +
movs   +
cld   +
jmp ds:off_421670[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
test edi 0Fh +
jz loc_4216DC  +
dec ecx  +
dec esi  +
dec edi  +
mov al [esi] +
mov [edi] al +
test edi 0Fh +
jnz loc_4216CD  +
cmp ecx 80h +
jb loc_42174C  +
sub esi 80h +
sub edi 80h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu xmm2 qword ptr [esi+20h] +
movdqu xmm3 qword ptr [esi+30h] +
movdqu xmm4 qword ptr [esi+40h] +
movdqu xmm5 qword ptr [esi+50h] +
movdqu xmm6 qword ptr [esi+60h] +
movdqu xmm7 qword ptr [esi+70h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
movdqu qword ptr [edi+20h] xmm2 +
movdqu qword ptr [edi+30h] xmm3 +
movdqu qword ptr [edi+40h] xmm4 +
movdqu qword ptr [edi+50h] xmm5 +
movdqu qword ptr [edi+60h] xmm6 +
movdqu qword ptr [edi+70h] xmm7 +
sub ecx 80h +
test ecx 0FFFFFF80h +
jnz loc_4216DC  +
cmp ecx 20h +
jb loc_421774  +
sub esi 20h +
sub edi 20h +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
sub ecx 20h +
test ecx 0FFFFFFE0h +
jnz loc_421751  +
test ecx 0FFFFFFFCh +
jz loc_421791  +
sub edi 4 +
sub esi 4 +
mov eax [esi] +
mov [edi] eax +
sub ecx 4 +
test ecx 0FFFFFFFCh +
jnz loc_42177C  +
test ecx ecx +
jz loc_4217A4  +
sub edi 1 +
sub esi 1 +
mov al [esi] +
mov [edi] al +
sub ecx 1 +
jnz loc_421795  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
jmp loc_4217B0  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_4218A0  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_42182D  +
lea esp [esp+0] +
mov edi edi +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_4217D0  +
test ecx ecx +
jz loc_421890  +
mov edx ecx +
shr edx 5 +
test edx edx +
jz loc_42185B  +
lea ebx [ebx+0] +
movdqu xmm0 qword ptr [esi] +
movdqu xmm1 qword ptr [esi+10h] +
movdqu qword ptr [edi] xmm0 +
movdqu qword ptr [edi+10h] xmm1 +
lea esi [esi+20h] +
lea edi [edi+20h] +
dec edx  +
jnz loc_421840  +
and ecx 1Fh +
jz loc_421890  +
mov eax ecx +
shr ecx 2 +
jz loc_421876  +
mov edx [esi] +
mov [edi] edx +
add edi 4 +
add esi 4 +
sub ecx 1 +
jnz loc_421867  +
mov ecx eax +
and ecx 3 +
jz loc_421890  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_42187D  +
lea esp [esp+0] +
lea ecx [ecx+0] +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_4218BC  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4218B3  +
shr eax 2 +
jz loc_4218CE  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_4218C1  +
pop ecx  +
jmp loc_4217BD  +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword_453BB0 2 +
jge loc_421911  +
mov edx [ebp+8] +
mov cx [ebp+0Ch] +
jmp loc_42192C  +
movzx eax word ptr [edx] +
cmp ax cx +
jnz loc_421924  +
mov esi edx +
test ax ax +
jz loc_421971  +
add edx 2 +
lea eax [edx+1] +
test al 0Eh +
jnz loc_42191A  +
xor eax eax +
cmp ax cx +
jnz loc_421958  +
mov eax 0FFFF0001h +
movd xmm1 eax +
jmp loc_421948  +
add edx 10h +
movups xmm0 oword ptr [edx] +
movzx eax cx +
movd xmm0 eax +
push edi  +
push esi  +
sub esp 10h +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
mov ebx 19930520h +
mov [ebp+var_10] eax +
test edi edi +
jz loc_421A42  +
test byte ptr [edi] 10h +
jz loc_421A34  +
mov ecx [eax] +
sub ecx 4 +
push esi  +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call ds:off_43B5A4  +
call esi  +
mov eax [ebp+var_10] +
pop esi  +
test edi edi +
jz loc_421A42  +
test byte ptr [edi] 8 +
jz loc_421A42  +
mov ebx 1994000h +
mov [ebp+var_8] eax +
lea eax [ebp+Arguments] +
push eax  +
push 3  +
push 1  +
push 0E06D7363h  +
mov [ebp+Arguments] ebx +
mov [ebp+var_4] edi +
call ds:RaiseException  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_421A8F  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_41EEF4  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_41EEF4  +
***
sub esp 1Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_1] 0 +
push dword ptr [ebx]  +
mov [ebp+var_C] 1 +
call sub_4387EB  +
mov [ebx] eax +
mov ebx [ebp+arg_4] +
mov eax [ebx+8] +
lea esi [ebx+10h] +
xor eax dword_4504C0 +
push esi  +
push eax  +
mov [ebp+var_10] esi +
mov [ebp+var_8] eax +
call sub_421A70  +
push [ebp+arg_8]  +
call sub_423AFC  +
mov eax [ebp+arg_0] +
add esp 10h +
mov edi [ebx+0Ch] +
test byte ptr [eax+4] 66h +
jnz loc_421B5D  +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_18] eax +
lea eax [ebp+var_1C] +
mov [ebx-4] eax +
cmp edi 0FFFFFFFEh +
jz loc_421B80  +
mov ecx [ebp+var_8] +
lea eax [edi+2] +
lea eax [edi+eax*2] +
mov ebx [ecx+eax*4] +
lea eax [ecx+eax*4] +
mov ecx [eax+4] +
mov [ebp+var_14] eax +
test ecx ecx +
jz loc_421B44  +
mov edx esi +
call sub_423C60  +
mov cl 1 +
mov [ebp+var_1] cl +
test eax eax +
js loc_421B54  +
jg loc_421B8A  +
jmp loc_421B47  +
mov cl [ebp+var_1] +
mov edi ebx +
cmp ebx 0FFFFFFFEh +
jnz loc_421B17  +
test cl cl +
jz loc_421B80  +
jmp loc_421B74  +
mov [ebp+var_C] 0 +
jmp loc_421B74  +
cmp edi 0FFFFFFFEh +
jz loc_421B80  +
push offset dword_4504C0  +
push esi  +
mov edx 0FFFFFFFEh +
mov ecx ebx +
call sub_423CB0  +
push esi  +
push [ebp+var_8]  +
call sub_421A70  +
add esp 8 +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_421BCD  +
cmp ds:off_444B8C 0 +
jz loc_421BCD  +
push offset off_444B8C  +
call sub_438190  +
add esp 4 +
test eax eax +
jz loc_421BCA  +
mov esi ds:off_444B8C +
mov ecx esi +
push 1  +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
call esi  +
mov esi [ebp+var_10] +
add esp 8 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx eax +
call sub_423C94  +
mov eax [ebp+arg_4] +
cmp [eax+0Ch] edi +
jz loc_421BF1  +
push offset dword_4504C0  +
push esi  +
mov edx edi +
mov ecx eax +
call sub_423CB0  +
mov eax [ebp+arg_4] +
push esi  +
push [ebp+var_8]  +
mov [eax+0Ch] ebx +
call sub_421A70  +
mov ecx [ebp+var_14] +
add esp 8 +
mov edx esi +
mov ecx [ecx+8] +
call sub_423C78  +
int 3  +
mov eax dword_453C28 +
retn   +
***
mov esi eax +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_422B59  +
sub eax 1 +
jz loc_422B4B  +
sub eax 1 +
jz loc_422B31  +
sub eax 1 +
jz loc_422B05  +
mov edx [ebp+arg_4] +
sub eax 1 +
jz loc_422AB2  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_421F9A  +
mov eax [esi] +
cmp eax [edx] +
jz loc_421CD7  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jnz loc_421CAB  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jnz loc_421CAB  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_421CBB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421CD9  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_421CD9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421CD9  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_421D38  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jnz loc_421D0C  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jnz loc_421D0C  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_421D1C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421D3A  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_421D3A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421D3A  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_421D99  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jnz loc_421D6D  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jnz loc_421D6D  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_421D7D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421D9B  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_421D9B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421D9B  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_421DFA  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jnz loc_421DCE  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jnz loc_421DCE  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_421DDE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421DFC  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_421DFC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421DFC  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_421E5C  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jnz loc_421E30  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jnz loc_421E30  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_421E40  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421E5E  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_421E5E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421E5E  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_421EBD  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jnz loc_421E91  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jnz loc_421E91  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_421EA1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421EBF  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_421EBF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421EBF  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_421F1E  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jnz loc_421EF2  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jnz loc_421EF2  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_421F02  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421F20  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_421F20  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421F20  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_421F7F  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jnz loc_421F53  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jnz loc_421F53  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_421F63  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_421F81  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_421F81  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_421F81  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_421C83  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_42224E  +
jmp ds:off_422B60[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_422005  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_421FD9  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_421FD9  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_421FE9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422007  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_422007  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422007  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_422066  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_42203A  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_42203A  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_42204A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422068  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_422068  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422068  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_4220C7  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_42209B  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_42209B  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_4220AB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4220C9  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_4220C9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4220C9  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_422128  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_4220FC  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jnz loc_4220FC  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_42210C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42212A  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_42212A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42212A  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_42218A  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jnz loc_42215E  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_42215E  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_42216E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42218C  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_42218C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42218C  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_4221EB  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_4221BF  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_4221BF  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_4221CF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4221ED  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_4221ED  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4221ED  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_422248  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_42221C  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_42221C  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_42222C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42224A  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_42224A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42224A  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_422B5B  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_4222AF  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_422283  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jnz loc_422283  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_422293  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4222B1  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_4222B1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4222B1  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_42230C  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_4222E0  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jnz loc_4222E0  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_4222F0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42230E  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_42230E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42230E  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_42236D  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_422341  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jnz loc_422341  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_422351  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42236F  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_42236F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42236F  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_4223CE  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_4223A2  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jnz loc_4223A2  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_4223B2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4223D0  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_4223D0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4223D0  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_42242F  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_422403  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jnz loc_422403  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_422413  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422431  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_422431  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422431  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_422491  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_422465  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jnz loc_422465  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_422475  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422493  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_422493  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422493  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_4224F2  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_4224C6  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jnz loc_4224C6  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_4224D6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4224F4  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_4224F4  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4224F4  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_422250  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422250  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_422576  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_42254A  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jnz loc_42254A  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_42255A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422578  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_422578  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422578  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_4225D7  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_4225AB  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jnz loc_4225AB  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_4225BB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4225D9  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_4225D9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4225D9  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_422638  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_42260C  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jnz loc_42260C  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_42261C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42263A  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_42263A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42263A  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_422699  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_42266D  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jnz loc_42266D  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_42267D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42269B  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_42269B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42269B  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_4226FA  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_4226CE  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jnz loc_4226CE  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_4226DE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4226FC  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_4226FC  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4226FC  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_42275C  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jnz loc_422730  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jnz loc_422730  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_422740  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_42275E  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_42275E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_42275E  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_4227BD  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_422791  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jnz loc_422791  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_4227A1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4227BF  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_4227BF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4227BF  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov ax [esi-2] +
cmp ax [edx-2] +
jz loc_42224E  +
jmp loc_422A8F  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_422832  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jnz loc_422806  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jnz loc_422806  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_422816  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422834  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_422834  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422834  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_422893  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jnz loc_422867  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jnz loc_422867  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_422877  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422895  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_422895  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422895  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_4228F4  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jnz loc_4228C8  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jnz loc_4228C8  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_4228D8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4228F6  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_4228F6  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4228F6  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_422955  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jnz loc_422929  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jnz loc_422929  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_422939  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422957  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_422957  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422957  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_4229B7  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jnz loc_42298B  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jnz loc_42298B  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_42299B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_4229B9  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_4229B9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_4229B9  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_422A18  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jnz loc_4229EC  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jnz loc_4229EC  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_4229FC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422A1A  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_422A1A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422A1A  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_422A79  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jnz loc_422A4D  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jnz loc_422A4D  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_422A5D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422A7B  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_422A7B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_422A7B  +
xor ecx ecx +
test ecx ecx +
jnz loc_422250  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jnz loc_422A9F  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_4224FC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422250  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jnz loc_422AD7  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jnz loc_422AD7  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_422AE7  +
xor ecx ecx +
test esi esi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_422B01  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_422B01  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_422B5B  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_422B21  +
movzx edx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
sub edx eax +
jz loc_422B27  +
xor ecx ecx +
test edx edx +
jmp loc_422ADB  +
movzx ecx byte ptr [ecx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_422AEF  +
mov ecx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx edx byte ptr [ecx] +
movzx eax byte ptr [esi] +
sub edx eax +
jnz loc_422B21  +
movzx ecx byte ptr [ecx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_422AEF  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_422AEF  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_423CC7  +
cmp [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
cmp eax ecx +
jnz loc_422C27  +
xor eax eax +
pop ebp  +
retn   +
add ecx 5 +
add eax 5 +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_422C4B  +
test dl dl +
jz loc_422C23  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_422C4B  +
add eax 2 +
add ecx 2 +
test dl dl +
jnz loc_422C2D  +
jmp loc_422C23  +
sbb eax eax +
or eax 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
call sub_422C8A  +
cmp dwTlsIndex 0FFFFFFFFh +
mov dwTlsIndex eax +
mov eax dwTlsIndex +
call sub_41F490  +
call sub_41F490  +
mov esp [ebp-18h] +
cmp [ebp+arg_18] 0 +
sub esp 68h +
sub esp 38h +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_8]  +
call sub_423AFC  +
pop ecx  +
call sub_422C7C  +
mov ecx [ebp+arg_10] +
xor esi esi +
mov edx [ebp+arg_0] +
mov ebx 1FFFFFFFh +
mov edi 19930522h +
cmp [eax+20h] esi +
jnz loc_423588  +
cmp dword ptr [edx] 0E06D7363h +
jz loc_423588  +
cmp dword ptr [edx] 80000026h +
jz loc_423588  +
mov eax [ecx] +
and eax ebx +
cmp eax edi +
jb loc_423588  +
test byte ptr [ecx+20h] 1 +
jnz loc_423635  +
test byte ptr [edx+4] 66h +
jz loc_4235B4  +
cmp [ecx+4] esi +
jz loc_423635  +
cmp [ebp+arg_14] esi +
jnz loc_423635  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call sub_4238DA  +
add esp 0Ch +
jmp loc_423635  +
cmp [ecx+0Ch] esi +
jnz loc_4235D7  +
mov eax [ecx] +
and eax ebx +
cmp eax 19930521h +
jb loc_4235C9  +
cmp [ecx+1Ch] esi +
jnz loc_4235D7  +
cmp eax edi +
jb loc_423635  +
mov eax [ecx+20h] +
shr eax 2 +
test al 1 +
jz loc_423635  +
cmp dword ptr [edx] 0E06D7363h +
jnz loc_423619  +
cmp dword ptr [edx+10h] 3 +
jb loc_423619  +
cmp [edx+14h] edi +
jbe loc_423619  +
mov eax [edx+1Ch] +
mov esi [eax+8] +
test esi esi +
jz loc_423619  +
movzx eax [ebp+arg_1C] +
push eax  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push ecx  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call ds:off_43B5A4  +
call esi  +
add esp 20h +
jmp loc_423638  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push dword ptr [ebp+arg_1C]  +
push ecx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edx  +
call sub_422FC1  +
add esp 20h +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
and dword ptr [ecx+4] 0 +
mov eax [ebp+arg_0] +
call sub_41F490  +
mov eax [ebp-30h] +
call sub_41EFA7  +
push 0FFFFFFFFh  +
call sub_41F490  +
call sub_422C7C  +
cmp dword ptr [eax+18h] 0 +
jle locret_4239D3  +
call sub_422C7C  +
dec dword ptr [eax+18h]  +
retn   +
***
sub esp 18h +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
mov eax [ebp+arg_0] +
mov eax [eax+1Ch] +
pop ebp  +
retn   +
***
sub esp 4 +
mov eax ds:off_43B5A4 +
mov eax ds:off_43B5A4 +
cmp eax offset nullsub_1 +
jz loc_423B57  +
mov ecx large fs:18h +
mov eax [ebp+arg_0] +
mov eax [eax+10h] +
cmp eax [ecx+8] +
jb loc_423B52  +
cmp eax [ecx+4] +
jbe loc_423B57  +
push 0Dh  +
pop ecx  +
int 29h  +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_423C35  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_41EEF4  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_423B60  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
push ebx  +
mov ebp edx +
xor eax eax +
xor ebx ebx +
xor edx edx +
xor esi esi +
xor edi edi +
call ecx  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov ebp edx +
mov esi ecx +
mov eax ecx +
push 1  +
call sub_4240CC  +
xor eax eax +
xor ebx ebx +
xor ecx ecx +
xor edx edx +
xor edi edi +
jmp esi  +
***
push ebx  +
push esi  +
push edi  +
push 0  +
push edx  +
push offset loc_423CA9  +
push ecx  +
call ds:RtlUnwind  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edx  +
mov edi offset stru_453C2C +
test esi esi +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov esi [eax+4] +
mov eax [ebp+arg_8] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_423FC9  +
push dword ptr [ebp+8]  +
call ds:RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_423FD1  +
push large dword ptr fs:0  +
mov eax dword_4504C0 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_424088  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_42405B  +
cmp esi [esp+18h+arg_4] +
jbe loc_424088  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_424086  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_4240CC  +
mov eax [ebx+esi*4+8] +
call sub_4240EB  +
jmp loc_42403F  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_423FD1 +
jnz locret_4240BC  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_4240BC  +
mov eax 1 +
retn   +
***
mov ebx offset unk_450500 +
jmp loc_4240D7  +
***
mov ebx offset unk_450500 +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
movzx ecx word ptr [esi] +
movzx edx word ptr [edi] +
sub edx ecx +
jnz loc_42411E  +
mov eax ecx +
sub edi esi +
test ax ax +
jz loc_42411E  +
add esi 2 +
movzx ecx word ptr [esi] +
movzx edx word ptr [edi+esi] +
mov eax ecx +
sub edx ecx +
jz loc_424109  +
mov eax edx +
shr edx 1Fh +
neg eax  +
shr eax 1Fh +
pop edi  +
sub eax edx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_453BB0 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_4241C6  +
mov eax [ebp+8] +
test al 1 +
jz loc_42415F  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_424158  +
add ecx 2 +
jmp loc_42414E  +
***
sub ecx eax +
jmp loc_42424E  +
mov esi eax +
and esi 1Fh +
push 20h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_42418B  +
cmp [ecx] dx +
jz loc_42418B  +
add ecx 2 +
cmp ecx edi +
jnz loc_42417F  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_424250  +
lea ecx [eax+ecx*2] +
cmp eax 1 +
jl loc_42423C  +
mov eax [ebp+8] +
test al 1 +
jz loc_4241E4  +
mov ecx eax +
xor edx edx +
cmp [ecx] dx +
jz loc_424158  +
add ecx 2 +
jmp loc_4241D6  +
***
mov esi eax +
and esi 0Fh +
push 10h  +
pop eax  +
sub eax esi +
neg esi  +
sbb esi esi +
xor edx edx +
and esi eax +
mov eax [ebp+8] +
shr esi 1 +
mov ecx eax +
lea edi [eax+esi*2] +
cmp eax edi +
jz loc_424210  +
cmp [ecx] dx +
jz loc_424210  +
add ecx 2 +
cmp ecx edi +
jnz loc_424204  +
sub ecx eax +
sar ecx 1 +
cmp ecx esi +
jnz loc_424250  +
lea ecx [eax+ecx*2] +
xorps xmm1 xmm1 +
movups xmm0 oword ptr [ecx] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_424232  +
add ecx 10h +
jmp loc_42421E  +
***
cmp [ecx] dx +
jz loc_42424B  +
add ecx 2 +
jmp loc_424232  +
***
mov ecx [ebp+8] +
xor edx edx +
cmp [ecx] dx +
jz loc_42424B  +
add ecx 2 +
jmp loc_424241  +
***
sub ecx [ebp+8] +
sar ecx 1 +
pop edi  +
mov eax ecx +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_453BB0 +
push esi  +
push edi  +
cmp eax 5 +
jl loc_424322  +
mov ecx [ebp+8] +
test cl 1 +
jz loc_424294  +
mov edx ecx +
and edx 1Fh +
push 20h  +
pop eax  +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
mov eax [ebp+0Ch] +
shr edx 1 +
cmp eax edx +
jnb loc_4242AF  +
mov edx eax +
mov esi [ebp+8] +
lea edi [ecx+edx*2] +
xor eax eax +
cmp esi edi +
jz loc_4242C7  +
cmp [ecx] ax +
jz loc_4242C7  +
add ecx 2 +
cmp ecx edi +
jnz loc_4242BB  +
sub ecx esi +
sar ecx 1 +
cmp ecx edx +
jnz loc_424400  +
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
and eax 0FFFFFFE0h +
add eax ecx +
mov eax [ebp+0Ch] +
mov esi ecx +
lea edx [ecx+eax*2] +
cmp esi edx +
jz loc_42428D  +
xor eax eax +
cmp [ecx] ax +
jz loc_42428D  +
add ecx 2 +
cmp ecx edx +
jnz loc_424345  +
jmp loc_42428D  +
***
mov eax [ebp+0Ch] +
lea edi [esi+ecx*2] +
sub eax edx +
xorps xmm1 xmm1 +
and eax 0FFFFFFF0h +
add eax ecx +
lea ecx [esi+eax*2] +
jmp loc_4243BC  +
movups xmm0 oword ptr [edi] +
pcmpeqw xmm0 xmm1 +
pmovmskb eax xmm0 +
test eax eax +
jnz loc_4243C0  +
add edi 10h +
cmp edi ecx +
jnz loc_4243AA  +
mov eax [ebp+0Ch] +
lea ecx [esi+eax*2] +
cmp edi ecx +
jz loc_4243D8  +
xor eax eax +
cmp [edi] ax +
jz loc_4243D8  +
add edi 2 +
cmp edi ecx +
jnz loc_4243CC  +
mov ecx edi +
jmp loc_42428D  +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_4250EA  +
add esp 14h +
retn   +
***
test eax eax +
mov edi edi +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+404h] 0 +
cmp dword ptr [ecx+404h] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_424ECB  +
test al al +
jz loc_425AD0  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_425B8D  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_425B67  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_425B7E  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_42594D  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_425AC0  +
cmp eax 7 +
ja loc_425AD0  +
jmp ds:off_425BA8[eax*4]  +
mov ecx esi +
call sub_425D21  +
jmp loc_425B5F  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_425B67  +
mov ecx esi +
call sub_425CE4  +
jmp loc_425B5F  +
mov ecx esi +
call sub_42615F  +
jmp loc_425B5F  +
mov [esi+28h] ebx +
jmp loc_425B67  +
mov ecx esi +
call sub_425D5B  +
jmp loc_425B5F  +
mov ecx esi +
call sub_425D82  +
jmp loc_425B5F  +
mov ecx esi +
call sub_425EFA  +
test al al +
jz loc_425AD0  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_425AE1  +
add dword ptr [esi+10h] 2 +
mov ecx esi +
call sub_4266EE  +
test al al +
jz loc_425AD0  +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_425AD6  +
mov eax [esi+18h] +
jmp loc_425AD3  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [esi+448h] +
call sub_424ECB  +
test al al +
jz loc_425BF8  +
xor ebx ebx +
cmp [esi+10h] ebx +
jnz loc_425CA6  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebx  +
retn   +
mov [esi+38h] ebx +
mov [esi+1Ch] ebx +
jmp loc_425C8F  +
add dword ptr [esi+10h] 2 +
cmp [esi+18h] ebx +
jl loc_425CA6  +
push dword ptr [esi+1Ch]  +
movzx eax word ptr [esi+32h] +
mov ecx esi +
push eax  +
call sub_42598F  +
mov [esi+1Ch] eax +
cmp eax 8 +
jz loc_425BE8  +
cmp eax 7 +
ja loc_425BF8  +
jmp ds:off_425CC4[eax*4]  +
mov ecx esi +
call sub_425D21  +
jmp loc_425C87  +
or dword ptr [esi+28h] 0FFFFFFFFh +
mov [esi+24h] ebx +
mov [esi+30h] bl +
mov [esi+20h] ebx +
mov [esi+2Ch] ebx +
mov [esi+3Ch] bl +
jmp loc_425C8F  +
mov ecx esi +
call sub_425CE4  +
jmp loc_425C87  +
mov ecx esi +
call sub_42615F  +
jmp loc_425C87  +
mov [esi+28h] ebx +
jmp loc_425C8F  +
mov ecx esi +
call sub_425D5B  +
jmp loc_425C87  +
mov ecx esi +
call sub_425D82  +
jmp loc_425C87  +
mov ecx esi +
call sub_425EFA  +
test al al +
jz loc_425BF8  +
mov eax [esi+10h] +
movzx eax word ptr [eax] +
mov [esi+32h] ax +
test ax ax +
jnz loc_425C09  +
add dword ptr [esi+10h] 2 +
inc dword ptr [esi+450h]  +
cmp dword ptr [esi+450h] 2 +
jnz loc_425BFE  +
mov eax [esi+18h] +
jmp loc_425BFB  +
***
movzx eax word ptr [ecx+32h] +
call sub_425D40  +
lea edx [ecx+18h] +
cmp word ptr [ecx+32h] 2Ah +
movzx edx word ptr [ecx+32h] +
mov edi edi +
cmp word ptr [ecx+32h] 2Ah +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0Bh +
ja loc_4261B8  +
movzx eax ds:byte_4261D3[eax] +
jmp ds:off_4261BF[eax*4]  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
pop eax  +
pop ebp  +
retn   +
push 4  +
jmp loc_4261AD  +
push 8  +
jmp loc_4261AD  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edx [ecx+20h] +
mov dword ptr [ecx+28h] 8 +
mov edi edi +
mov edi edi +
cmp dword ptr [ecx+1Ch] 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42C420  +
call sub_42C420  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42C2C9  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_0] +
mov ecx edx +
push ebx  +
push esi  +
push edi  +
movzx eax word ptr [edx] +
test ax ax +
jz loc_42703A  +
mov esi eax +
mov eax [ebp+arg_4] +
movzx ebx word ptr [eax] +
mov [ebp+var_4] ebx +
mov edi eax +
cmp si bx +
jz loc_427028  +
movzx ebx bx +
test bx bx +
jz loc_42703A  +
add edi 2 +
movzx eax word ptr [edi] +
mov ebx eax +
cmp si ax +
jnz loc_427013  +
mov ebx [ebp+var_4] +
add ecx 2 +
movzx eax word ptr [ecx] +
mov esi eax +
test ax ax +
jz loc_42703A  +
mov eax [ebp+arg_4] +
jmp loc_427009  +
pop edi  +
sub ecx edx +
sar ecx 1 +
pop esi  +
mov eax ecx +
pop ebx  +
leave   +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
test edx 3 +
jnz loc_4270A0  +
mov eax [edx] +
cmp al [ecx] +
jnz loc_427098  +
test al al +
jz loc_427090  +
cmp ah [ecx+1] +
jnz loc_427098  +
test ah ah +
jz loc_427090  +
shr eax 10h +
cmp al [ecx+2] +
jnz loc_427098  +
test al al +
jz loc_427090  +
cmp ah [ecx+3] +
jnz loc_427098  +
add ecx 4 +
add edx 4 +
test ah ah +
jnz loc_427060  +
mov edi edi +
xor eax eax +
retn   +
jmp loc_427098  +
sbb eax eax +
or eax 1 +
retn   +
test edx 1 +
jz loc_4270C0  +
mov al [edx] +
add edx 1 +
cmp al [ecx] +
jnz loc_427098  +
add ecx 1 +
test al al +
jz loc_427090  +
test edx 2 +
jz loc_427060  +
mov ax [edx] +
add edx 2 +
cmp al [ecx] +
jnz loc_427098  +
test al al +
jz loc_427090  +
cmp ah [ecx+1] +
jnz loc_427098  +
test ah ah +
jz loc_427090  +
add ecx 2 +
jmp loc_427060  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
push ebx  +
push edi  +
jz loc_427128  +
mov ecx [ebp+8] +
xor edi edi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax di +
jnz loc_4270F1  +
sub ecx edx +
sar ecx 1 +
lea ebx [ecx+1] +
lea eax [ebx+ebx] +
push eax  +
call sub_426BD9  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_427128  +
push dword ptr [ebp+8]  +
push ebx  +
push edi  +
call sub_4269F8  +
add esp 0Ch +
test eax eax +
jnz loc_42712E  +
mov eax edi +
jmp loc_42712A  +
xor eax eax +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_42517B  +
mov ecx [esp+arg_0] +
test ecx 3 +
jz loc_427170  +
mov al [ecx] +
add ecx 1 +
test al al +
jz loc_4271A3  +
test ecx 3 +
jnz loc_42714C  +
add eax 0 +
lea esp [esp+0] +
lea esp [esp+0] +
mov eax [ecx] +
mov edx 7EFEFEFFh +
add edx eax +
xor eax 0FFFFFFFFh +
xor eax edx +
add ecx 4 +
test eax 81010100h +
jz loc_427170  +
mov eax [ecx-4] +
test al al +
jz loc_4271C1  +
test ah ah +
jz loc_4271B7  +
test eax 0FF0000h +
jz loc_4271AD  +
test eax 0FF000000h +
jz loc_4271A3  +
jmp loc_427170  +
lea eax [ecx-1] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-2] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-3] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-4] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_42DEA4  +
***
pop ecx  +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi esi +
stos   +
stos   +
stos   +
mov eax dword_453F18 +
mov edi [ebp+arg_4] +
mov [esi+4] eax +
jmp loc_42764D  +
inc edi  +
mov al [edi] +
cmp al 20h +
jz loc_42764C  +
cmp al 61h +
jz loc_427685  +
cmp al 72h +
jz loc_42767C  +
cmp al 77h +
jz loc_427674  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
jmp loc_427851  +
mov dword ptr [esi] 301h +
jmp loc_42768B  +
mov dword ptr [esi+4] 1 +
jmp loc_427692  +
mov dword ptr [esi] 109h +
mov dword ptr [esi+4] 2 +
push ebx  +
inc edi  +
mov byte ptr [ebp+var_2+1] 0 +
xor bl bl +
mov byte ptr [ebp+var_2] 0 +
xor bh bh +
mov cl 1 +
mov al [edi] +
test al al +
jz loc_427786  +
movsx eax al +
cmp eax 53h +
jg loc_42771A  +
jz loc_42770D  +
sub eax 20h +
jz loc_427775  +
sub eax 0Bh +
jz loc_427700  +
sub eax 1 +
jz loc_4276FA  +
sub eax 18h +
jz loc_4276F2  +
sub eax 0Ah +
jz loc_4276E5  +
sub eax 4 +
jnz loc_427840  +
test bl bl +
jnz loc_4276FC  +
or dword ptr [esi] 10h +
jmp loc_427714  +
or dword ptr [esi] 80h +
mov cl 1 +
jmp loc_427775  +
push esi  +
call sub_427950  +
jmp loc_427772  +
mov bh 1 +
xor cl cl +
jmp loc_427775  +
lea eax [ebp+var_2] +
push eax  +
push esi  +
call sub_4279EE  +
pop ecx  +
jmp loc_427772  +
test bl bl +
jnz loc_4276FC  +
or dword ptr [esi] 20h +
mov bl 1 +
mov cl bl +
jmp loc_427775  +
sub eax 54h +
jz loc_42776C  +
sub eax 0Eh +
jz loc_427764  +
sub eax 1 +
jz loc_427758  +
sub eax 0Bh +
jz loc_42774C  +
sub eax 6 +
jz loc_427744  +
sub eax 4 +
jnz loc_427840  +
push esi  +
call sub_427A44  +
jmp loc_427772  +
push esi  +
call sub_427A24  +
jmp loc_427772  +
lea eax [ebp+var_2+1] +
push eax  +
push esi  +
call sub_4279CC  +
jmp loc_42770A  +
lea eax [ebp+var_2+1] +
push eax  +
push esi  +
call sub_4279AA  +
jmp loc_42770A  +
push esi  +
call sub_42798A  +
jmp loc_427772  +
push esi  +
call sub_42796B  +
pop ecx  +
mov cl al +
xor eax eax +
test cl cl +
setnz al  +
add edi eax +
test cl cl +
jnz loc_4276A2  +
test bh bh +
jz loc_42778B  +
inc edi  +
cmp byte ptr [edi] 20h +
jz loc_42778A  +
test bh bh +
jnz loc_4277A5  +
cmp [edi] bh +
jnz loc_427840  +
mov byte ptr [esi+8] 1 +
jmp loc_427850  +
push 3  +
push offset unk_4458A8  +
push edi  +
call sub_42BD80  +
add esp 0Ch +
test eax eax +
jnz loc_427840  +
push 20h  +
add edi 3 +
pop ecx  +
jmp loc_4277C6  +
inc edi  +
mov al [edi] +
cmp al cl +
jz loc_4277C5  +
cmp al 3Dh +
jnz loc_427840  +
inc edi  +
cmp [edi] cl +
jz loc_4277D0  +
push 5  +
pop ebx  +
push ebx  +
push offset aUtf8  +
push edi  +
call sub_42A751  +
add esp 0Ch +
test eax eax +
jnz loc_4277F3  +
or dword ptr [esi] 40000h +
jmp loc_42782D  +
push 8  +
pop ebx  +
push ebx  +
push offset aUtf16leunicode  +
push edi  +
call sub_42A751  +
add esp 0Ch +
test eax eax +
jnz loc_427811  +
or dword ptr [esi] 20000h +
jmp loc_42782D  +
push 7  +
pop ebx  +
push ebx  +
push (offset aUtf16leunicode+8)  +
push edi  +
call sub_42A751  +
add esp 0Ch +
test eax eax +
jnz loc_427840  +
or dword ptr [esi] 10000h +
lea ecx [edi+ebx] +
jmp loc_427833  +
inc ecx  +
mov al [ecx] +
cmp al 20h +
jz loc_427832  +
test al al +
jmp loc_427796  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
cdq   +
push edx  +
push eax  +
push [ebp+arg_0]  +
call sub_4281D1  +
add esp 10h +
pop ebp  +
retn   +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
call sub_41F490  +
test al al +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax] cx +
call sub_42691A  +
mov dword ptr [eax] 22h +
call sub_42514E  +
push 22h  +
pop eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 1  +
push [ebp+arg_0]  +
call sub_429AD7  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cdq   +
idiv  [ebp+arg_4] +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_42A7E8  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
mov eax 7FFFFFFFh +
jmp loc_42A884  +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_42A807  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
mov eax 7FFFFFFFh +
jmp loc_42A883  +
push esi  +
mov esi [ebp+arg_8] +
cmp esi 7FFFFFFFh +
jbe loc_42A82A  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
mov eax 7FFFFFFFh +
jmp loc_42A882  +
test esi esi +
jnz loc_42A832  +
xor eax eax +
jmp loc_42A882  +
push [ebp+arg_C]  +
lea ecx [ebp+var_14] +
call sub_424DF1  +
mov eax [ebp+var_10] +
mov ecx [eax+94h] +
mov [ebp+var_4] ecx +
movzx eax byte ptr [edi] +
inc edi  +
mov edx [ebp+var_4] +
movzx ecx byte ptr [eax+ecx] +
mov al [ebx] +
inc ebx  +
movzx eax al +
movzx eax byte ptr [eax+edx] +
mov edx ecx +
sub edx eax +
jnz loc_42A870  +
test ecx ecx +
jz loc_42A870  +
mov ecx [ebp+var_4] +
sub esi 1 +
jnz loc_42A849  +
cmp [ebp+var_8] 0 +
jz loc_42A880  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
mov eax edx +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
call ds:GetCommandLineA  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
call sub_41F490  +
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push 0  +
push 0  +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+uExitCode]  +
call sub_42ABB3  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_453EDC +
cmp dword_453EDC 0 +
cmp dword_453EE0 0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+4] +
jmp loc_42B3C4  +
mov ecx [ebp+arg_0] +
push esi  +
call ds:off_43B5A4  +
call [ebp+arg_0]  +
pop ecx  +
add esi 4 +
cmp esi edi +
jnz loc_42B3B3  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax dword_453EE8 +
jz loc_42B3E9  +
push eax  +
call sub_42B2F3  +
pop ecx  +
pop ebp  +
retn   +
***
call sub_42B3A5  +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
lea eax [ebp+arg_0] +
mov [ebp+var_14] eax +
lea ecx [ebp-1] +
push 2  +
lea eax [ebp+arg_4] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_42B4A7  +
leave   +
retn   +
***
mov dword_453F1C offset off_450538 +
mov al 1 +
retn   +
***
mov [esp+4+var_4] offset unk_453EF8 +
call sub_42B748  +
pop ecx  +
mov al 1 +
retn   +
***
call sub_42B410  +
mov al 1 +
retn   +
***
xor eax offset dword_4504C0 +
push esi  +
call sub_4250DB  +
push esi  +
call sub_43276A  +
push esi  +
call sub_4328F7  +
push esi  +
call sub_42B93D  +
push esi  +
call sub_42ACAC  +
add esp 14h +
mov al 1 +
pop esi  +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset dword_45444C  +
lea ecx [ebp-1] +
call sub_42B8A0  +
mov al 1 +
leave   +
retn   +
***
mov edi edi +
call sub_4326D1  +
mov edi edi +
mov edi edi +
mov eax dword_4504C0 +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_453F08 eax +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov eax dword_453CBC +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
xor eax eax +
mov ecx offset dword_453F10 +
inc eax  +
xchg eax [ecx] +
retn   +
***
mov edi edi +
mov edi edi +
mov eax dword_453F14 +
mov edi edi +
call sub_41F490  +
mov edi edi +
call sub_4328D0  +
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
test edx edx +
jz loc_42BD3F  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_42BD3F  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_42BD53  +
mov byte ptr [edx] 0 +
call sub_42691A  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_42514E  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
push edi  +
mov edi edx +
sub esi edx +
mov al [esi+edi] +
mov [edi] al +
inc edi  +
test al al +
jz loc_42BD67  +
sub ecx 1 +
jnz loc_42BD58  +
pop edi  +
test ecx ecx +
jnz loc_42BD77  +
mov [edx] cl +
call sub_42691A  +
push 22h  +
jmp loc_42BD46  +
xor esi esi +
jmp loc_42BD4E  +
***
mov ecx [esp+arg_0] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
xor ecx ecx +
inc ecx  +
push 43h  +
mov [eax+18h] ecx +
mov eax [ebp+arg_0] +
mov dword ptr [eax] offset unk_4461F8 +
mov eax [ebp+arg_0] +
mov [eax+350h] ecx +
mov eax [ebp+arg_0] +
pop ecx  +
push 5  +
mov dword ptr [eax+48h] offset unk_450880 +
mov eax [ebp+arg_0] +
mov [eax+6Ch] cx +
mov eax [ebp+arg_0] +
mov [eax+172h] cx +
lea ecx [ebp-1] +
mov eax [ebp+arg_0] +
and dword ptr [eax+34Ch] 0 +
lea eax [ebp+arg_0] +
mov [ebp+var_10] eax +
pop eax  +
mov [ebp+var_8] eax +
mov [ebp+var_14] eax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_42BF8A  +
lea eax [ebp+arg_0] +
mov [ebp+var_C] eax +
lea ecx [ebp-1] +
push 4  +
lea eax [ebp+arg_4] +
mov [ebp+var_8] eax +
pop eax  +
mov [ebp+var_14] eax +
mov [ebp+var_10] eax +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_42C09C  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov eax dword_450534 +
mov edi edi +
push ebx  +
push esi  +
push edi  +
call ds:GetLastError  +
mov esi eax +
mov eax dword_450534 +
cmp eax 0FFFFFFFFh +
jz loc_42C453  +
push eax  +
call sub_42DC1A  +
mov edi eax +
test edi edi +
jz loc_42C44E  +
cmp edi 0FFFFFFFFh +
jnz loc_42C4C0  +
xor ebx ebx +
mov edi ebx +
jmp loc_42C4C2  +
mov eax dword_450534 +
push 0FFFFFFFFh  +
push eax  +
call sub_42DC59  +
test eax eax +
jz loc_42C448  +
push 364h  +
push 1  +
call sub_4303E2  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_42C48A  +
xor ebx ebx +
push ebx  +
push dword_450534  +
call sub_42DC59  +
push ebx  +
call sub_42C584  +
pop ecx  +
jmp loc_42C44A  +
push edi  +
push dword_450534  +
call sub_42DC59  +
test eax eax +
jnz loc_42C4AB  +
xor ebx ebx +
push ebx  +
push dword_450534  +
call sub_42DC59  +
push edi  +
jmp loc_42C482  +
push offset dword_453F1C  +
push edi  +
call sub_42C0F6  +
push 0  +
call sub_42C584  +
add esp 0Ch +
mov ebx edi +
push esi  +
call ds:SetLastError  +
neg edi  +
sbb edi edi +
and edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov dword_450534 eax +
cmp eax 0FFFFFFFFh +
jnz loc_42C4F7  +
xor al al +
retn   +
call sub_42C420  +
test eax eax +
jnz loc_42C509  +
push eax  +
call sub_42C510  +
pop ecx  +
jmp loc_42C4F4  +
mov al 1 +
retn   +
***
mov eax dword_450534 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_4] +
mov eax [edi+0Ch] +
nop   +
shr eax 0Ch +
test al 1 +
jz loc_42D30C  +
push edi  +
push dword ptr [ebp+WideCharStr]  +
call sub_42D2AB  +
pop ecx  +
pop ecx  +
jmp loc_42D3F7  +
push ebx  +
push esi  +
push edi  +
call sub_427E0F  +
mov ebx offset unk_4506A8 +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_42D34F  +
push edi  +
call sub_427E0F  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_42D34F  +
push edi  +
call sub_427E0F  +
mov esi eax +
push edi  +
sar esi 6 +
call sub_427E0F  +
pop ecx  +
and eax 3Fh +
pop ecx  +
imul ecx eax +
mov eax dword_453F40[esi*4] +
add eax ecx +
jmp loc_42D351  +
mov eax ebx +
mov al [eax+29h] +
cmp al 2 +
jz loc_42D3EA  +
cmp al 1 +
jz loc_42D3EA  +
push edi  +
call sub_427E0F  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_42D39E  +
push edi  +
call sub_427E0F  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_42D39E  +
push edi  +
call sub_427E0F  +
mov esi eax +
push edi  +
sar esi 6 +
call sub_427E0F  +
mov ebx dword_453F40[esi*4] +
and eax 3Fh +
pop ecx  +
pop ecx  +
imul ecx eax +
add ebx ecx +
cmp byte ptr [ebx+28h] 0 +
jge loc_42D3EA  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp+var_C] +
push 5  +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_42C908  +
add esp 10h +
test eax eax +
jnz loc_42D3E3  +
xor esi esi +
cmp [ebp+var_10] esi +
jle loc_42D3DD  +
movsx eax byte ptr [ebp+esi+var_C] +
push edi  +
push eax  +
call sub_42D564  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_42D3E3  +
inc esi  +
cmp esi [ebp+var_10] +
jl loc_42D3C4  +
mov ax [ebp+WideCharStr] +
jmp loc_42D3F5  +
mov eax 0FFFFh +
jmp loc_42D3F5  +
push edi  +
push dword ptr [ebp+WideCharStr]  +
call sub_42D2AB  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_41EEF4  +
leave   +
retn   +
***
mov eax dword_453F28 +
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_450600 +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov ecx dword_4504C0 +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov eax edi +
mov ecx edi +
and eax 3Fh +
sar ecx 6 +
imul esi eax +
add esi dword_453F40[ecx*4] +
cmp dword ptr [esi+18h] 0FFFFFFFFh +
jz loc_42D772  +
cmp dword ptr [esi+18h] 0FFFFFFFEh +
jz loc_42D772  +
or byte ptr [esi+28h] 80h +
jmp loc_42D7EB  +
mov eax edi +
mov byte ptr [esi+28h] 81h +
sub eax 0 +
jz loc_42D78D  +
sub eax 1 +
jz loc_42D789  +
sub eax 1 +
push 0FFFFFFF4h  +
jmp loc_42D78F  +
push 0FFFFFFF5h  +
jmp loc_42D78F  +
push 0FFFFFFF6h  +
pop eax  +
push eax  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_42D7AB  +
test ebx ebx +
jz loc_42D7AB  +
push ebx  +
call ds:GetFileType  +
jmp loc_42D7AD  +
xor eax eax +
test eax eax +
jz loc_42D7CD  +
movzx eax al +
mov [esi+18h] ebx +
cmp eax 2 +
jnz loc_42D7C2  +
or byte ptr [esi+28h] 40h +
jmp loc_42D7EB  +
cmp eax 3 +
jnz loc_42D7EB  +
or byte ptr [esi+28h] 8 +
jmp loc_42D7EB  +
or byte ptr [esi+28h] 40h +
mov dword ptr [esi+18h] 0FFFFFFFEh +
mov eax dword_453F2C +
test eax eax +
jz loc_42D7EB  +
mov eax [eax+edi*4] +
mov dword ptr [eax+10h] 0FFFFFFFEh +
inc edi  +
cmp edi 3 +
jnz loc_42D74C  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
push offset aArefileapisans  +
push offset aComparestringe  +
push offset aLcmapstringex  +
push offset aLocalenametolc  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call sub_42D97C  +
mov esi eax +
test esi esi +
jz loc_42DDA5  +
push [ebp+arg_4]  +
mov ecx esi +
push [ebp+arg_0]  +
call ds:off_43B5A4  +
call esi  +
jmp loc_42DDAE  +
push [ebp+arg_0]  +
call sub_434F61  +
pop ecx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset aSystemfunction  +
push offset unk_4475D0  +
push offset aSystemfunction  +
push 21h  +
call sub_42DA5D  +
mov esi eax +
add esp 10h +
test esi esi +
jz loc_42DDED  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
push dword ptr [ebp+8]  +
call ds:off_43B5A4  +
call esi  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_42BCDD  +
mov ecx offset unk_454220 +
mov eax offset unk_454198 +
xor edx edx +
cmp ecx eax +
push esi  +
mov esi dword_4504C0 +
sbb ecx ecx +
and ecx 0FFFFFFDEh +
add ecx 22h +
inc edx  +
mov [eax] esi +
lea eax [eax+4] +
cmp edx ecx +
jnz loc_42DE1D  +
mov al 1 +
pop esi  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_42DEBC  +
push [ebp+arg_4]  +
call sub_42C5BE  +
pop ecx  +
jmp loc_42DEE0  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_42DECD  +
push edi  +
call sub_42C584  +
pop ecx  +
jmp loc_42DEDD  +
cmp esi 0FFFFFFE0h +
jbe loc_42DEF7  +
call sub_42691A  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_42BB99  +
test eax eax +
jz loc_42DED2  +
push esi  +
call sub_432779  +
pop ecx  +
test eax eax +
jz loc_42DED2  +
push esi  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_42DEE3  +
jmp loc_42DEDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_42DF0D  +
***
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
test ecx ecx +
jnz loc_42E43D  +
xor eax eax +
pop ebp  +
retn   +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
movzx edx word ptr [edi] +
lea eax [edx-41h] +
cmp eax 19h +
ja loc_42E454  +
add edx 20h +
movzx esi word ptr [ebx] +
add edi 2 +
lea eax [esi-41h] +
cmp eax 19h +
ja loc_42E465  +
add esi 20h +
mov eax edx +
add ebx 2 +
sub eax esi +
jnz loc_42E477  +
test edx edx +
jz loc_42E477  +
sub ecx 1 +
jnz loc_42E446  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
imul eax [ebp+arg_0] +
add eax offset unk_454220 +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_41F490  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
cmp ebx 0FFFFFFFEh +
jnz loc_42F6D6  +
call sub_426907  +
and dword ptr [eax] 0 +
call sub_42691A  +
mov dword ptr [eax] 9 +
jmp loc_42FA55  +
test ebx ebx +
js loc_42FA3D  +
cmp ebx dword_454140 +
jnb loc_42FA3D  +
mov eax ebx +
mov ecx ebx +
sar ecx 6 +
and eax 3Fh +
imul edi eax +
mov [ebp+var_8] ecx +
mov eax dword_453F40[ecx*4] +
xor ecx ecx +
inc ecx  +
mov [ebp+var_10] edi +
mov [ebp+var_20] ecx +
mov dl [eax+edi+28h] +
test dl cl +
jz loc_42FA3D  +
mov ecx [ebp+arg_8] +
cmp ecx 7FFFFFFFh +
jbe loc_42F739  +
call sub_426907  +
and dword ptr [eax] 0 +
call sub_42691A  +
mov dword ptr [eax] 16h +
jmp loc_42FA50  +
test ecx ecx +
jz loc_42FA39  +
test dl 2 +
jnz loc_42FA39  +
cmp [ebp+lpWideCharStr] 0 +
jz loc_42F721  +
mov edx [eax+edi+18h] +
mov [ebp+hFile] edx +
mov dl [eax+edi+29h] +
mov [ebp+var_1] dl +
push esi  +
movsx edx dl +
xor esi esi +
sub edx 1 +
jz loc_42F7B8  +
sub edx 1 +
jz loc_42F77C  +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
jmp loc_42F83C  +
mov eax ecx +
not eax  +
test al 1 +
jnz loc_42F7A0  +
call sub_426907  +
and [eax] esi +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
jmp loc_42F970  +
mov edi [ebp+var_8] +
mov edx [ebp+lpWideCharStr] +
mov [ebp+nNumberOfBytesToRead] ecx +
mov [ebp+lpBuffer] edx +
mov eax dword_453F40[edi*4] +
jmp loc_42F83C  +
mov eax ecx +
not eax  +
test al 1 +
jz loc_42F784  +
push 4  +
pop eax  +
shr ecx 1 +
mov [ebp+nNumberOfBytesToRead] eax +
cmp ecx eax +
jb loc_42F7D1  +
mov eax ecx +
mov [ebp+nNumberOfBytesToRead] ecx +
push eax  +
call sub_42C5BE  +
push 0  +
mov esi eax +
call sub_42C584  +
push 0  +
call sub_42C584  +
add esp 0Ch +
mov [ebp+lpBuffer] esi +
test esi esi +
jnz loc_42F80C  +
call sub_42691A  +
mov dword ptr [eax] 0Ch +
call sub_426907  +
mov dword ptr [eax] 8 +
jmp loc_42F970  +
push 1  +
push 0  +
push 0  +
push ebx  +
call sub_42FF64  +
mov ecx [ebp+var_8] +
add esp 10h +
mov ecx dword_453F40[ecx*4] +
mov [edi+ecx+20h] eax +
mov eax [ebp+var_8] +
mov [edi+ecx+24h] edx +
mov edx esi +
mov ecx [ebp+nNumberOfBytesToRead] +
mov eax dword_453F40[eax*4] +
mov ebx [ebp+var_10] +
xor edi edi +
mov [ebp+var_24] edx +
test byte ptr [ebx+eax+28h] 48h +
mov ebx [ebp+arg_0] +
jz loc_42F911  +
mov ebx [ebp+var_10] +
mov al [ebx+eax+2Ah] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_42F911  +
test ecx ecx +
jz loc_42F911  +
mov ebx [ebp+var_10] +
inc edi  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 0 +
mov [ebp+lpBuffer] edx +
mov [ebp+nNumberOfBytesToRead] ecx +
mov eax dword_453F40[eax*4] +
mov byte ptr [ebx+eax+2Ah] 0Ah +
mov ebx [ebp+arg_0] +
jz loc_42F911  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_453F40[eax*4] +
mov al [ebx+eax+2Bh] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_42F911  +
test ecx ecx +
jz loc_42F911  +
mov ebx [ebp+var_10] +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
cmp [ebp+var_1] 1 +
push 2  +
mov [ebp+lpBuffer] edx +
mov eax dword_453F40[eax*4] +
pop edi  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov byte ptr [ebx+eax+2Bh] 0Ah +
mov ebx [ebp+arg_0] +
jnz loc_42F911  +
mov eax [ebp+var_8] +
mov ebx [ebp+var_10] +
mov eax dword_453F40[eax*4] +
mov al [ebx+eax+2Ch] +
mov ebx [ebp+arg_0] +
cmp al 0Ah +
jz loc_42F911  +
test ecx ecx +
jz loc_42F911  +
mov [edx] al +
inc edx  +
mov eax [ebp+var_8] +
dec ecx  +
mov [ebp+nNumberOfBytesToRead] ecx +
mov ecx [ebp+var_10] +
push 3  +
mov eax dword_453F40[eax*4] +
mov [ebp+lpBuffer] edx +
pop edi  +
mov byte ptr [ecx+eax+2Ch] 0Ah +
push ebx  +
call sub_434EBB  +
pop ecx  +
test eax eax +
jz loc_42F98D  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_10] +
mov eax dword_453F40[eax*4] +
cmp byte ptr [ecx+eax+28h] 0 +
jge loc_42F98D  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hFile]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_42F98D  +
cmp [ebp+var_1] 2 +
jnz loc_42F991  +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
shr eax 1 +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadConsoleW  +
test eax eax +
jnz loc_42F982  +
call ds:GetLastError  +
push eax  +
call sub_4268E4  +
pop ecx  +
or edi 0FFFFFFFFh +
push esi  +
call sub_42C584  +
pop ecx  +
mov eax edi +
pop esi  +
jmp loc_42FA58  +
mov eax [ebp+NumberOfBytesRead] +
mov ecx [ebp+arg_8] +
lea edi [edi+eax*2] +
jmp loc_42F9B6  +
mov byte ptr [ebp+var_20] 0 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
mov eax [ebp+nNumberOfBytesToRead] +
push eax  +
push [ebp+lpBuffer]  +
push [ebp+hFile]  +
call ds:ReadFile  +
test eax eax +
jz loc_42FA05  +
mov ecx [ebp+arg_8] +
cmp [ebp+NumberOfBytesRead] ecx +
ja loc_42FA05  +
add edi [ebp+NumberOfBytesRead] +
mov eax [ebp+var_8] +
mov edx [ebp+var_10] +
mov eax dword_453F40[eax*4] +
cmp byte ptr [edx+eax+28h] 0 +
jge loc_42F973  +
cmp [ebp+var_1] 2 +
jz loc_42F9E7  +
shr ecx 1 +
push ecx  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_42F3C6  +
add esp 14h +
mov edi eax +
jmp loc_42F973  +
shr edi 1 +
cmp byte ptr [ebp+var_20] 0 +
push edi  +
push [ebp+var_24]  +
push ebx  +
jz loc_42F9FE  +
call sub_42F51D  +
add esp 0Ch +
jmp loc_42F9E3  +
call sub_42F1F5  +
jmp loc_42F9F9  +
call ds:GetLastError  +
push 5  +
pop edi  +
cmp eax edi +
jnz loc_42FA29  +
call sub_42691A  +
mov dword ptr [eax] 9 +
call sub_426907  +
mov [eax] edi +
jmp loc_42F970  +
cmp eax 6Dh +
jnz loc_42F969  +
xor edi edi +
jmp loc_42F973  +
xor eax eax +
jmp loc_42FA58  +
call sub_426907  +
and dword ptr [eax] 0 +
call sub_42691A  +
mov dword ptr [eax] 9 +
call sub_42514E  +
or eax 0FFFFFFFFh +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
test eax eax +
jnz loc_42FA81  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
or eax 0FFFFFFFFh +
jmp loc_42FBE3  +
mov eax [eax+0Ch] +
push ebx  +
nop   +
xor ebx ebx +
shr eax 0Dh +
inc ebx  +
test al bl +
jz loc_42FBDF  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 0Ch +
test al bl +
jnz loc_42FBDF  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 1 +
test al bl +
mov eax [ebp+arg_0] +
jz loc_42FAC4  +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
jmp loc_42FBDF  +
add eax 0Ch +
or [eax] ebx +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
test eax 4C0h +
jnz loc_42FAE1  +
push [ebp+arg_0]  +
call sub_434FBF  +
pop ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
mov [eax] ecx +
mov esi [ebp+arg_0] +
push dword ptr [esi+18h]  +
push dword ptr [esi+4]  +
push esi  +
call sub_427E0F  +
pop ecx  +
push eax  +
call sub_42F598  +
mov [esi+8] eax +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov edx [eax+8] +
test edx edx +
jz loc_42FBC4  +
cmp edx 0FFFFFFFFh +
jz loc_42FBC4  +
mov eax [eax+0Ch] +
nop   +
test al 6 +
jnz loc_42FB83  +
push [ebp+arg_0]  +
call sub_427E0F  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_42FB69  +
push [ebp+arg_0]  +
call sub_427E0F  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_42FB69  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
call sub_427E0F  +
mov edi eax +
push esi  +
sar edi 6 +
call sub_427E0F  +
pop ecx  +
and eax 3Fh +
pop ecx  +
imul ecx eax +
mov eax dword_453F40[edi*4] +
pop edi  +
add eax ecx +
jmp loc_42FB6E  +
mov eax offset unk_4506A8 +
mov al [eax+28h] +
and al 82h +
cmp al 82h +
jnz loc_42FB83  +
mov eax [ebp+arg_0] +
push 20h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+18h] 200h +
jnz loc_42FBB5  +
mov eax [eax+0Ch] +
nop   +
shr eax 6 +
test al bl +
jz loc_42FBB2  +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
nop   +
shr eax 8 +
test al bl +
jnz loc_42FBB2  +
mov eax [ebp+arg_0] +
mov dword ptr [eax+18h] 1000h +
mov eax [ebp+arg_0] +
dec dword ptr [eax+8]  +
mov ecx [eax] +
mov dl [ecx] +
inc ecx  +
mov [eax] ecx +
movzx eax dl +
jmp loc_42FBE2  +
xor ecx ecx +
test edx edx +
setnz cl  +
add eax 0Ch +
lea ecx ds:8[ecx*8] +
or [eax] ecx +
mov ecx [ebp+arg_0] +
and dword ptr [ecx+8] 0 +
or eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
call sub_41F490  +
mov edi [ebp+8] +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_42FECD  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
call sub_427E0F  +
pop ecx  +
mov ecx [ebp+arg_4] +
mov edi eax +
mov ecx [ecx+0Ch] +
nop   +
test cl 6 +
jnz loc_42FFBB  +
call sub_42691A  +
mov dword ptr [eax] 9 +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_430091  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
nop   +
shr eax 0Ch +
test al 1 +
jz loc_42FFD6  +
call sub_42691A  +
mov dword ptr [eax] 22h +
jmp loc_42FFA7  +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
nop   +
test al 1 +
jz loc_430009  +
push [ebp+arg_4]  +
call sub_430347  +
pop ecx  +
mov ecx [ebp+arg_4] +
and dword ptr [ecx+8] 0 +
test al al +
mov eax [ebp+arg_4] +
jz loc_42FFAA  +
mov ecx [eax+4] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
push 0FFFFFFFEh  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
push ebx  +
push 2  +
pop ebx  +
add eax 0Ch +
or [eax] ebx +
mov eax [ebp+arg_4] +
push 0FFFFFFF7h  +
pop ecx  +
add eax 0Ch +
and [eax] ecx +
mov eax [ebp+arg_4] +
and dword ptr [eax+8] 0 +
mov eax [ebp+arg_4] +
mov eax [eax+0Ch] +
nop   +
test eax 4C0h +
jnz loc_43006A  +
push esi  +
mov esi [ebp+arg_4] +
push 1  +
call sub_42D4D8  +
pop ecx  +
cmp esi eax +
jz loc_430055  +
mov esi [ebp+arg_4] +
push ebx  +
call sub_42D4D8  +
pop ecx  +
cmp esi eax +
jnz loc_430060  +
push edi  +
call sub_434EBB  +
pop ecx  +
test eax eax +
jnz loc_430069  +
push [ebp+arg_4]  +
call sub_434FBF  +
pop ecx  +
pop esi  +
push [ebp+arg_4]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_4301AD  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_43008D  +
mov eax [ebp+arg_4] +
push 10h  +
pop ecx  +
add eax 0Ch +
or [eax] ecx +
or eax 0FFFFFFFFh +
jmp loc_430090  +
movzx eax bl +
pop ebx  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+CodePage] +
xor edx edx +
push ebx  +
push esi  +
mov esi 0FDE9h +
push edi  +
lea edi [esi-1] +
cmp ecx edi +
jz loc_4306CC  +
mov bl dl +
cmp ecx esi +
jnz loc_4306CE  +
mov bl 1 +
mov eax 0C435h +
cmp ecx eax +
ja loc_4306FE  +
jz loc_430727  +
cmp ecx 2Ah +
jz loc_430727  +
cmp ecx 0C42Bh +
jbe loc_43071E  +
cmp ecx 0C42Eh +
jbe loc_430727  +
cmp ecx 0C431h +
jz loc_430727  +
cmp ecx 0C433h +
jmp loc_43071C  +
cmp ecx 0D698h +
jz loc_430727  +
cmp ecx 0DEA9h +
jbe loc_43071E  +
cmp ecx 0DEB3h +
jbe loc_430727  +
cmp ecx edi +
jz loc_430727  +
cmp ecx esi +
jz loc_430727  +
mov edx [ebp+arg_4] +
and edx 0FFFFFF7Fh +
movzx eax bl +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+arg_1C] +
push eax  +
movzx eax bl +
neg eax  +
sbb eax eax +
not eax  +
and eax [ebp+arg_18] +
push eax  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edx  +
push ecx  +
call ds:WideCharToMultiByte  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_43075A  +
***
mov dword_454374 7080h +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
and eax 80000003h +
jns loc_430939  +
dec eax  +
or eax 0FFFFFFFCh +
add eax 1 +
jnz loc_430949  +
push esi  +
push 64h  +
mov eax ecx +
pop esi  +
cdq   +
idiv  esi +
pop esi  +
test edx edx +
jnz loc_43095B  +
lea eax [ecx+76Ch] +
mov ecx 190h +
cdq   +
idiv  ecx +
test edx edx +
jnz loc_43095F  +
mov al 1 +
pop ebp  +
retn   +
xor al al +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
call sub_41F490  +
pop ecx  +
mov edi edi +
call sub_41F490  +
pop ecx  +
retn   +
***
call ds:GetProcessHeap  +
test eax eax +
mov hHeap eax +
setnz al  +
retn   +
***
and hHeap 0 +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax large fs:30h +
push esi  +
xor esi esi +
mov [ebp+var_4] esi +
mov eax [eax+10h] +
cmp [eax+8] esi +
jl loc_431553  +
lea eax [ebp+var_4] +
push eax  +
call sub_42DAE0  +
cmp [ebp+var_4] 1 +
jz loc_431556  +
xor esi esi +
inc esi  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ecx [ebp+arg_8] +
or ecx ecx +
jz loc_4315BA  +
mov esi [ebp+arg_0] +
mov edi [ebp+arg_4] +
mov bh 41h +
mov bl 5Ah +
mov dh 20h +
lea ecx [ecx+0] +
mov ah [esi] +
or ah ah +
mov al [edi] +
jz loc_4315AB  +
or al al +
jz loc_4315AB  +
add esi 1 +
add edi 1 +
cmp ah bh +
jb loc_431598  +
cmp ah bl +
ja loc_431598  +
add ah dh +
cmp al bh +
jb loc_4315A2  +
cmp al bl +
ja loc_4315A2  +
add al dh +
cmp ah al +
jnz loc_4315B1  +
sub ecx 1 +
jnz loc_43157C  +
xor ecx ecx +
cmp ah al +
jz loc_4315BA  +
mov ecx 0FFFFFFFFh +
jb loc_4315BA  +
neg ecx  +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
cmp eax [ebp+8] +
jbe loc_4315E2  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov eax [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
retn   +
***
mov eax esi +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
call sub_42BCDD  +
***
cmp byte_454454 0 +
push eax  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push esi  +
push edi  +
call ds:GetEnvironmentStringsW  +
mov esi eax +
test esi esi +
jnz loc_43232D  +
xor edi edi +
jmp loc_432364  +
push ebx  +
push esi  +
call sub_43225E  +
mov ebx eax +
sub ebx esi +
and ebx 0FFFFFFFEh +
push ebx  +
call sub_42C5BE  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_432354  +
push ebx  +
push esi  +
push edi  +
call loc_420DE0  +
add esp 0Ch +
push 0  +
call sub_42C584  +
pop ecx  +
push esi  +
call ds:FreeEnvironmentStringsW  +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
mov edi edi +
mov eax dword_453EDC +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
call sub_41F490  +
mov ecx [ebp+10h] +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_42C2C9  +
call sub_41F490  +
mov esi [ebp+8] +
cmp byte ptr [ebp-19h] 0 +
jz locret_432AC2  +
push 3  +
call sub_42E511  +
pop ecx  +
mov edx [ebp-20h] +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
pop ecx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
call sub_42B40B  +
mov edi eax +
test edi edi +
jz loc_435147  +
cmp [ebp+arg_0] 0 +
jz loc_435147  +
mov esi [ebp+arg_0] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_435106  +
sub esi ecx +
jmp loc_435141  +
mov edx ecx +
lea eax [edx+1] +
mov [ebp+var_4] eax +
mov al [edx] +
inc edx  +
test al al +
jnz loc_435119  +
sub edx [ebp+var_4] +
cmp edx esi +
jbe loc_43513E  +
cmp byte ptr [ecx+esi] 3Dh +
jnz loc_43513E  +
push esi  +
push [ebp+arg_0]  +
push ecx  +
call sub_435F2F  +
add esp 0Ch +
test eax eax +
jz loc_43514D  +
add edi 4 +
mov ecx [edi] +
test ecx ecx +
jnz loc_435111  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
mov eax [edi] +
inc eax  +
add eax esi +
jmp loc_435149  +
***
pop ecx  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov ecx ebx +
shr ecx 10h +
and ecx 3Fh +
mov eax ecx +
mov edx ecx +
shr eax 1 +
xor esi esi +
movzx eax al +
inc esi  +
and eax esi +
and edx esi +
shl eax 4 +
shl edx 5 +
or edx eax +
mov eax ecx +
shr eax 2 +
movzx eax al +
and eax esi +
shl eax 3 +
or edx eax +
mov eax ecx +
shr eax 3 +
movzx eax al +
and eax esi +
shl eax 2 +
or edx eax +
mov eax ecx +
shr eax 4 +
movzx eax al +
and eax esi +
shr ecx 5 +
or edx eax +
movzx eax cl +
and eax esi +
lea edi [ebp+var_20] +
add eax eax +
push 7  +
or edx eax +
xor eax eax +
pop ecx  +
stos   +
fnstenv  byte ptr [ebp+var_20] +
mov ecx [ebp+var_1C] +
mov eax ecx +
xor eax edx +
and eax 3Fh +
xor ecx eax +
mov [ebp+var_1C] ecx +
fldenv  byte ptr [ebp+var_20] +
shr ebx 18h +
and ebx 3Fh +
mov eax ebx +
mov ecx ebx +
shr eax 1 +
and ecx esi +
movzx eax al +
and eax esi +
shl ecx 5 +
shl eax 4 +
or ecx eax +
mov eax ebx +
shr eax 2 +
movzx eax al +
and eax esi +
shl eax 3 +
or ecx eax +
mov eax ebx +
shr eax 3 +
movzx eax al +
and eax esi +
shl eax 2 +
or ecx eax +
mov eax ebx +
shr eax 4 +
movzx eax al +
and eax esi +
or ecx eax +
shr ebx 5 +
movzx eax bl +
and eax esi +
add eax eax +
pop edi  +
or ecx eax +
cmp dword_453BB0 esi +
pop esi  +
pop ebx  +
jl locret_435806  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
and ecx 3Fh +
and eax 0FFFFFFC0h +
or eax ecx +
mov [ebp+var_4] eax +
ldmxcsr [ebp+var_4]  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_435846  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_435845  +
sub edi eax +
lea ebx [ebx+0] +
mov cl [eax] +
lea eax [eax+1] +
mov dl [edi+eax-1] +
mov [edi+eax-1] cl +
mov [eax-1] dl +
sub esi 1 +
jnz loc_435830  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 11Ch +
mov eax dword_4504C0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_104] esi +
mov [ebp+var_108] ebx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_100] edi +
test esi esi +
jnz loc_4358AF  +
test ecx ecx +
jz loc_4358AF  +
call sub_42691A  +
mov dword ptr [eax] 16h +
call sub_42514E  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_41EEF4  +
mov esp ebp +
pop ebp  +
retn   +
test edi edi +
jz loc_43588E  +
test ebx ebx +
jz loc_43588E  +
mov [ebp+var_10C] 0 +
cmp ecx 2 +
jb loc_43589E  +
dec ecx  +
imul ecx edi +
add ecx esi +
mov [ebp+var_FC] ecx +
mov eax ecx +
xor edx edx +
sub eax esi +
div  edi +
lea edi [eax+1] +
cmp edi 8 +
ja loc_4359C2  +
mov edi [ebp+var_100] +
cmp ecx esi +
jbe loc_435995  +
lea edx [edi+esi] +
mov [ebp+var_114] edx +
lea ecx [ecx+0] +
mov eax esi +
mov esi edx +
mov [ebp+var_F8] eax +
cmp esi ecx +
ja loc_43593F  +
mov edi edi +
push eax  +
push esi  +
mov ecx ebx +
call ds:off_43B5A4  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_43592D  +
mov eax esi +
mov [ebp+var_F8] eax +
jmp loc_435933  +
mov eax [ebp+var_F8] +
mov ecx [ebp+var_FC] +
add esi edi +
cmp esi ecx +
jbe loc_435910  +
mov edx ecx +
cmp eax ecx +
jz loc_435979  +
sub eax ecx +
mov ebx edi +
mov [ebp+var_F8] eax +
nop   +
mov cl [eax+edx] +
lea edx [edx+1] +
mov esi [ebp+var_F8] +
mov al [edx-1] +
mov [esi+edx-1] al +
mov eax esi +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_435950  +
mov ebx [ebp+var_108] +
mov ecx [ebp+var_FC] +
mov esi [ebp+var_104] +
sub ecx edi +
mov edx [ebp+var_114] +
mov [ebp+var_FC] ecx +
cmp ecx esi +
ja loc_435900  +
mov ecx [ebp+var_10C] +
mov eax ecx +
dec ecx  +
mov [ebp+var_10C] ecx +
test eax eax +
jle loc_43589E  +
mov esi [ebp+ecx*4+var_7C] +
mov ecx [ebp+ecx*4+var_F4] +
mov [ebp+var_104] esi +
jmp loc_4358CC  +
mov esi [ebp+var_100] +
mov ecx ebx +
mov eax [ebp+var_104] +
shr edi 1 +
imul edi esi +
add edi eax +
push edi  +
push eax  +
call ds:off_43B5A4  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_4359F8  +
push esi  +
push edi  +
push [ebp+var_104]  +
call sub_435810  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push [ebp+var_104]  +
call ds:off_43B5A4  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_435A2A  +
push esi  +
push [ebp+var_FC]  +
push [ebp+var_104]  +
call sub_435810  +
add esp 0Ch +
push [ebp+var_FC]  +
mov ecx ebx +
push edi  +
call ds:off_43B5A4  +
call ebx  +
add esp 8 +
test eax eax +
jle loc_435A52  +
push esi  +
push [ebp+var_FC]  +
push edi  +
call sub_435810  +
add esp 0Ch +
mov eax [ebp+var_FC] +
mov ebx eax +
mov esi [ebp+var_104] +
mov edx [ebp+var_100] +
mov [ebp+var_F8] eax +
lea esp [esp+0] +
cmp edi esi +
jbe loc_435AAB  +
add esi edx +
mov [ebp+var_110] esi +
cmp esi edi +
jnb loc_435AA5  +
mov ecx [ebp+var_108] +
push edi  +
push esi  +
call ds:off_43B5A4  +
call [ebp+var_108]  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
jle loc_435A74  +
cmp edi esi +
ja loc_435AE2  +
mov eax [ebp+var_FC] +
mov ebx [ebp+var_108] +
add esi edx +
cmp esi eax +
ja loc_435AD6  +
push edi  +
push esi  +
mov ecx ebx +
call ds:off_43B5A4  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_FC] +
jle loc_435AB1  +
mov ebx [ebp+var_F8] +
mov [ebp+var_110] esi +
mov esi [ebp+var_108] +
jmp loc_435AF0  +
mov edx [ebp+var_100] +
mov eax ebx +
sub ebx edx +
mov [ebp+var_F8] eax +
cmp ebx edi +
jbe loc_435B23  +
push edi  +
push ebx  +
mov ecx esi +
call ds:off_43B5A4  +
call esi  +
add esp 8 +
test eax eax +
jg loc_435AF0  +
mov edx [ebp+var_100] +
mov eax [ebp+var_F8] +
mov esi [ebp+var_110] +
mov [ebp+var_F8] ebx +
cmp ebx esi +
jb loc_435B8C  +
mov [ebp+var_11C] edx +
mov [ebp+var_118] ebx +
jz loc_435B77  +
sub esi ebx +
mov edx ebx +
mov ebx [ebp+var_11C] +
jmp loc_435B50  +
mov al [edx] +
lea edx [edx+1] +
mov cl [esi+edx-1] +
mov [esi+edx-1] al +
mov [edx-1] cl +
sub ebx 1 +
jnz loc_435B50  +
mov esi [ebp+var_110] +
mov ebx [ebp+var_F8] +
mov edx [ebp+var_100] +
mov eax [ebp+var_FC] +
cmp edi ebx +
jnz loc_435A70  +
mov edi esi +
jmp loc_435A70  +
cmp edi eax +
jnb loc_435BC5  +
mov ebx [ebp+var_108] +
sub eax edx +
mov [ebp+var_F8] eax +
cmp eax edi +
jbe loc_435BC5  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_43B5A4  +
call ebx  +
mov edx [ebp+var_100] +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_435B96  +
cmp edi eax +
jb loc_435C00  +
mov ebx [ebp+var_108] +
mov esi [ebp+var_100] +
sub eax esi +
mov [ebp+var_F8] eax +
cmp eax [ebp+var_104] +
jbe loc_435BFA  +
push edi  +
push eax  +
mov ecx ebx +
call ds:off_43B5A4  +
call ebx  +
add esp 8 +
test eax eax +
mov eax [ebp+var_F8] +
jz loc_435BD1  +
mov esi [ebp+var_110] +
mov edx [ebp+var_FC] +
mov ecx edx +
mov edi [ebp+var_104] +
sub ecx esi +
sub eax edi +
cmp eax ecx +
jl loc_435C57  +
mov eax [ebp+var_F8] +
cmp edi eax +
jnb loc_435C38  +
mov ecx [ebp+var_10C] +
mov [ebp+ecx*4+var_7C] edi +
mov [ebp+ecx*4+var_F4] eax +
inc ecx  +
mov [ebp+var_10C] ecx +
mov ecx [ebp+var_FC] +
mov edi [ebp+var_100] +
cmp esi ecx +
jnb loc_435995  +
mov [ebp+var_104] esi +
jmp loc_4358D2  +
cmp esi edx +
jnb loc_435C73  +
mov eax [ebp+var_10C] +
mov [ebp+eax*4+var_7C] esi +
mov [ebp+eax*4+var_F4] edx +
inc eax  +
mov [ebp+var_10C] eax +
mov eax [ebp+var_F8] +
mov esi [ebp+var_104] +
mov edi [ebp+var_100] +
cmp esi eax +
jnb loc_435995  +
mov ecx eax +
jmp loc_4358CC  +
***
add edx 1 +
bts [esp] eax +
jmp loc_435CB4  +
***
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_424DF1  +
push [ebp+arg_20]  +
lea eax [ebp+var_C] +
push [ebp+CodePage]  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+arg_10]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_435CE0  +
add esp 24h +
cmp [ebp+var_4] 0 +
jz locret_435F11  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
leave   +
retn   +
***
call sub_432010  +
mov edi edi +
mov edi edi +
mov edi edi +
call sub_41F490  +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
and [ebp+var_4] 0 +
push eax  +
call sub_436380  +
pop ecx  +
test eax eax +
jnz loc_436430  +
mov ecx [ebp+arg_0] +
mov edx [ebp+var_8] +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
lea eax [ebp+var_8] +
mov [ecx] edx +
or edx 1Fh +
push eax  +
mov [ebp+var_8] edx +
call sub_43639D  +
pop ecx  +
test eax eax +
jnz loc_436430  +
call sub_433305  +
xor eax eax +
leave   +
retn   +
xor eax eax +
inc eax  +
leave   +
retn   +
***
cmp dword_454498 0 +
jz loc_43647B  +
sub esp 8 +
stmxcsr [esp+8+var_4]  +
mov eax [esp+8+var_4] +
and eax 7F80h +
cmp eax 1F80h +
jnz loc_436470  +
fnstcw  [esp+8+var_8] +
mov ax [esp+8+var_8] +
and ax 7Fh +
cmp ax 7Fh +
lea esp [esp+8] +
jnz loc_43647B  +
jmp sub_436A20  +
sub esp 0Ch +
fst  qword ptr [esp] +
call sub_4371A8  +
call sub_436498  +
add esp 0Ch +
retn   +
***
jz loc_4364EB  +
cmp dword_454498 0 +
xor eax eax +
mov ecx hObject +
cmp ecx 0FFFFFFFEh +
jnz loc_4366A2  +
call sub_43666D  +
mov ecx hObject +
xor eax eax +
cmp ecx 0FFFFFFFFh +
setnz al  +
retn   +
***
mov eax hObject +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_424DF1  +
push [ebp+CodePage]  +
lea eax [ebp+var_C] +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+dwCmpFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_436738  +
add esp 20h +
cmp [ebp+var_4] 0 +
jz locret_436A07  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+350h] 0FFFFFFFDh +
leave   +
retn   +
***
mov dword_454498 eax +
sub esp 8 +
and esp 0FFFFFFF0h +
fstp  [esp+8+var_8] +
movq xmm0 [esp+8+var_8] +
call sub_436A3E  +
leave   +
retn   +
***
mov edx 0 +
movapd xmm5 xmm0 +
unpcklpd xmm0 xmm0 +
psrlq xmm5 34h +
pextrw ecx xmm5 +
movapd xmm1 oword ptr ds:oword_4485F0 +
movapd xmm2 oword ptr ds:oword_448600 +
movapd xmm3 oword ptr ds:oword_448660 +
movapd xmm4 oword ptr ds:oword_448610 +
movapd xmm6 oword ptr ds:oword_448620 +
andpd xmm0 xmm1 +
orpd xmm0 xmm3 +
addpd xmm4 xmm0 +
pextrw eax xmm4 +
and eax 7F0h +
movapd xmm4 oword ptr ds:oword_448C20[eax] +
movapd xmm7 oword ptr ds:oword_448810[eax] +
andpd xmm6 xmm0 +
subpd xmm0 xmm6 +
mulpd xmm6 xmm4 +
subpd xmm6 xmm2 +
addsd xmm7 xmm6 +
mulpd xmm0 xmm4 +
movapd xmm4 xmm0 +
addpd xmm0 xmm6 +
and ecx 0FFFh +
sub ecx 1 +
cmp ecx 7FDh +
ja loc_436B96  +
sub ecx 3FEh +
add ecx edx +
cvtsi2sd xmm6 ecx +
unpcklpd xmm6 xmm6 +
shl ecx 0Ah +
add eax ecx +
mov ecx 10h +
mov edx 0 +
cmp eax 0 +
cmovz edx ecx +
movapd xmm1 oword ptr ds:oword_4486B0 +
movapd xmm3 xmm0 +
movapd xmm2 oword ptr ds:oword_4486C0 +
mulpd xmm1 xmm0 +
mulpd xmm3 xmm3 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4486D0 +
mulsd xmm3 xmm3 +
movapd xmm5 oword ptr ds:oword_448630 +
mulpd xmm6 xmm5 +
movapd xmm5 oword ptr ds:oword_448640[edx] +
andpd xmm4 xmm5 +
addpd xmm7 xmm6 +
addpd xmm7 xmm4 +
mulpd xmm1 xmm0 +
mulsd xmm3 xmm0 +
addpd xmm1 xmm2 +
movapd xmm2 oword ptr ds:oword_4486E0 +
mulpd xmm2 xmm0 +
movapd xmm6 xmm7 +
unpckhpd xmm6 xmm6 +
mulpd xmm1 xmm3 +
sub esp 10h +
movapd xmm0 xmm1 +
addpd xmm1 xmm2 +
unpckhpd xmm0 xmm0 +
addsd xmm0 xmm1 +
addsd xmm0 xmm6 +
addsd xmm0 xmm7 +
movlpd oword ptr [esp+4] xmm0 +
fld  [esp+10h+var_C] +
add esp 10h +
retn   +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_448670 +
cmpsd xmm1 xmm0 +
pextrw eax xmm1 +
cmp eax 0 +
ja loc_436BFB  +
cmp ecx 0FFFFFFFFh +
jz loc_436C16  +
cmp ecx 7FEh +
ja loc_436C2C  +
movlpd xmm0 oword ptr [esp+arg_0] +
movapd xmm1 oword ptr ds:oword_4485F0 +
movapd xmm2 oword ptr ds:oword_448660 +
andpd xmm0 xmm1 +
orpd xmm0 xmm2 +
cmpsd xmm2 xmm0 +
pextrw eax xmm2 +
cmp eax 0 +
jz loc_436BF4  +
fld  ds:dbl_448698 +
retn   +
mov edx 3E9h +
jmp loc_436C4A  +
movlpd xmm2 oword ptr ds:oword_448660 +
divsd xmm2 xmm0 +
movlpd xmm1 oword ptr ds:unk_448690 +
mov edx 8 +
jmp loc_436C4A  +
movlpd xmm1 oword ptr ds:oword_448680 +
mulsd xmm0 xmm1 +
mov edx 0FFFFFFCCh +
jmp loc_436A43  +
add ecx 1 +
and ecx 7FFh +
cmp ecx 7FFh +
jnb loc_436C77  +
xorpd xmm1 xmm1 +
divsd xmm1 xmm1 +
mov edx 9 +
sub esp 1Ch +
movlpd oword ptr [esp+1Ch+var_C] xmm1 +
mov [esp+1Ch+var_10] edx +
mov edx esp +
add edx 10h +
mov [esp+1Ch+var_14] edx +
add edx 10h +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edx +
call sub_437303  +
fld  [esp+1Ch+var_C] +
add esp 1Ch +
retn   +
movlpd xmm2 oword ptr [esp+arg_0] +
movlpd xmm0 oword ptr [esp+arg_0] +
movd eax xmm2 +
psrlq xmm2 20h +
movd ecx xmm2 +
and ecx 0FFFFFh +
or eax ecx +
cmp eax 0 +
jz loc_436C3D  +
mov edx 3E9h +
jmp loc_436C4A  +
***
lea esp [esp+0] +
jmp loc_436CB0  +
mov byte ptr [ebp-90h] 0FEh +
or ch ch +
jnz loc_436D05  +
fxch  st(1) +
fyl2x   +
jmp loc_436CDD  +
***
mov byte ptr [ebp-90h] 0FEh +
xor ch ch +
fldl2e   +
fmulp st(1) st +
call sub_436E0D  +
fld1   +
faddp st(1) st +
test byte ptr [ebp-9Fh] 1 +
jz loc_436CF3  +
fld1   +
fdivrp st(1) st +
test dl 40h +
jnz loc_436CFA  +
fscale   +
or ch ch +
jz loc_436D00  +
fchs   +
jmp loc_436FD4  +
***
call sub_436E50  +
or eax eax +
jz loc_436D22  +
xor ch ch +
cmp eax 2 +
jz loc_436D17  +
not ch  +
fxch  st(1) +
fabs   +
jmp loc_436CBD  +
***
jmp loc_43700D  +
***
jmp loc_4370D0  +
***
fstp  st +
fstp  st +
fld  ds:tbyte_4486F0 +
mov byte ptr [ebp-90h] 2 +
retn   +
***
fldln2   +
fxch  st(1) +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 41h +
jnz loc_436D22  +
fyl2x   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fstp  st +
fld  ds:tbyte_4486FA +
retn   +
***
or cl cl +
jnz loc_436DBA  +
retn   +
***
fldlg2   +
jmp loc_436D6E  +
fldln2   +
fxch  st(1) +
or cl cl +
jnz loc_436D22  +
fyl2x   +
retn   +
***
jmp loc_43700D  +
***
call sub_436E50  +
fstp  st +
fstp  st +
or cl cl +
jnz loc_436D97  +
fldz   +
cmp eax 1 +
jnz locret_436D96  +
or ch ch +
jz locret_436D96  +
fchs   +
retn   +
***
mov byte ptr [ebp-90h] 2 +
fld  ds:tbyte_4486F0 +
cmp eax 1 +
jnz locret_436D96  +
or ch ch +
jz locret_436D96  +
fchs   +
jmp locret_436D96  +
***
fstp  st +
***
jmp loc_436FFA  +
***
fstp  st +
jmp loc_4370D2  +
***
pop eax  +
ftst   +
fstsw  word ptr [ebp-0A0h] +
wait   +
test byte ptr [ebp-9Fh] 1 +
jnz loc_436DE2  +
fstp  st +
fld  ds:tbyte_4486F0 +
or ch ch +
jz locret_436DE1  +
fchs   +
retn   +
mov byte ptr [ebp-90h] 4 +
jmp loc_436FFA  +
***
or cl cl +
fld  st +
fld  st +
frndint   +
fcomp  st(1) +
fstsw  ax +
sahf   +
jnz loc_436E76  +
fld  st +
fmul  ds:dbl_448722 +
fld  st +
frndint   +
fcompp st(1) st +
fstsw  ax +
sahf   +
jz loc_436E7D  +
mov eax 1 +
retn   +
mov eax 0 +
jmp locret_436E75  +
mov eax 2 +
jmp locret_436E75  +
***
push esi  +
sub esp 74h +
mov esi esp +
push esi  +
sub esp 8 +
fstp  qword ptr [esp] +
sub esp 8 +
fstp  qword ptr [esp] +
fsave  byte ptr [esi+8] +
call sub_437614  +
add esp 14h +
frstor  byte ptr [esi+8] +
fld  qword ptr [esi] +
add esp 74h +
pop esi  +
test eax eax +
jz locret_436EB5  +
jmp sub_4370E3  +
***
retn   +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_436ED7  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_436EDB  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_44877E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
wait   +
mov cl [ebp-9Fh] +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_43B5A4  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
cmp byte ptr [edx+0Eh] 5 +
jnz loc_436F4C  +
mov bx [ebp-0A4h] +
or bh 2 +
and bh 0FEh +
mov bl 3Fh +
jmp loc_436F50  +
mov bx 133Fh +
mov [ebp-0A2h] bx +
fldcw  word ptr [ebp-0A2h] +
mov ebx offset unk_44877E +
fxam   +
mov [ebp-94h] edx +
fstsw  word ptr [ebp-0A0h] +
mov byte ptr [ebp-90h] 0 +
fxch  st(1) +
mov cl [ebp-9Fh] +
fxam   +
fstsw  word ptr [ebp-0A0h] +
fxch  st(1) +
mov ch [ebp-9Fh] +
shl ch 1 +
sar ch 1 +
rol ch 1 +
mov al ch +
and al 0Fh +
xlat   +
mov ah al +
shl cl 1 +
sar cl 1 +
rol cl 1 +
mov al cl +
and al 0Fh +
xlat   +
shl ah 1 +
shl ah 1 +
or al ah +
movsx eax al +
and ecx 404h +
mov ebx edx +
add ebx eax +
add ebx 10h +
push eax  +
push edx  +
push ecx  +
mov ecx [ebx] +
call ds:off_43B5A4  +
pop ecx  +
pop edx  +
pop eax  +
jmp dword ptr [ebx]  +
***
call sub_4370E3  +
***
fxch  st(1) +
lea esp [esp+0] +
lea ecx [ecx+0] +
fstp  st +
lea esp [esp+0] +
lea esp [esp+0] +
retn   +
***
call sub_4370E3  +
jmp loc_436FE0  +
***
fstp  st +
***
fstp  st +
fldz   +
retn   +
***
fstp  st +
fstp  st +
fldz   +
test ch ch +
jz locret_43700C  +
fchs   +
retn   +
***
fld1   +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_43703D  +
mov byte ptr [ebp-90h] 0 +
retn   +
mov byte ptr [ebp-90h] 0 +
fadd  ds:dbl_44876E +
retn   +
***
jmp loc_437050  +
fxch  st(1) +
lea esp [esp+0] +
lea esp [esp+0] +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_43707E  +
mov byte ptr [ebp-90h] 0 +
jmp loc_437085  +
mov byte ptr [ebp-90h] 0 +
faddp st(1) st +
retn   +
***
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4370C5  +
fxch  st(1) +
fstp  tbyte ptr [ebp-9Eh] +
fld  tbyte ptr [ebp-9Eh] +
test byte ptr [ebp-97h] 40h +
jz loc_4370C5  +
mov byte ptr [ebp-90h] 0 +
jmp loc_4370CC  +
mov byte ptr [ebp-90h] 1 +
faddp st(1) st +
retn   +
***
mov byte ptr [ebp-90h] 1 +
or cl cl +
retn   +
***
fstp  st +
fstp  st +
fld  ds:tbyte_448764 +
or ch ch +
jz loc_437100  +
fchs   +
or cl cl +
jz locret_43710C  +
fld  ds:dbl_448776 +
fmulp st(1) st +
retn   +
***
or cl cl +
jz locret_437113  +
fchs   +
retn   +
***
fld  st +
frndint   +
fsubr st(1) st +
fxch  st(1) +
fchs   +
f2xm1   +
fld1   +
faddp st(1) st +
fscale   +
fstp  st(1) +
retn   +
***
test eax 80000h +
mov eax [edx+4] +
mov eax [esp+arg_4] +
and eax 7FF00000h +
cmp eax 7FF00000h +
jz loc_4371B9  +
retn   +
mov eax [esp+arg_4] +
retn   +
***
cmp [esp+2+var_2] 27Fh +
jz loc_4371C9  +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
mov ax [esp+2+var_2] +
cmp ax 27Fh +
jz loc_4371F3  +
and ax 20h +
jz loc_4371F0  +
fstsw  ax +
and ax 20h +
jz loc_4371F0  +
mov eax 8 +
call sub_4372C7  +
pop edx  +
retn   +
fldcw  [esp+2+var_2] +
pop edx  +
retn   +
***
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jmp loc_43721D  +
sub esp 8 +
fst  qword ptr [esp] +
mov eax [esp+4] +
add esp 8 +
and eax 7FF00000h +
jz loc_43725A  +
cmp eax 7FF00000h +
jz loc_437283  +
mov ax [esp] +
cmp ax 27Fh +
jz loc_437258  +
and ax 20h +
jnz loc_437255  +
fstsw  ax +
and ax 20h +
jz loc_437255  +
mov eax 8 +
cmp edx 1Dh +
jz loc_43724E  +
call sub_4372C7  +
pop edx  +
retn   +
***
call sub_4372B0  +
pop edx  +
retn   +
***
fldcw  word ptr [esp] +
pop edx  +
retn   +
***
fld  ds:dbl_4487BC +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_4487AC +
fstsw  ax +
sahf   +
mov eax 4 +
jnb loc_437242  +
fmul  ds:dbl_4487CC +
jmp loc_437242  +
***
fld  ds:dbl_4487B4 +
fxch  st(1) +
fscale   +
fstp  st(1) +
fld  st +
fabs   +
fcomp  ds:dbl_4487A4 +
fstsw  ax +
sahf   +
mov eax 3 +
jbe loc_437242  +
fmul  ds:dbl_4487C4 +
jmp loc_437242  +
***
add esp 0FFFFFFE0h +
add esp 0FFFFFFE0h +
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
cmp dword_454484 0 +
push esi  +
push edi  +
jz loc_437326  +
push dword_454494  +
call ds:DecodePointer  +
mov edi eax +
jmp loc_43732B  +
mov edi offset sub_42B950 +
mov eax [ebp+arg_C] +
cmp eax 1Ah +
jg loc_437415  +
jz loc_437409  +
cmp eax 0Eh +
jg loc_4373A7  +
jz loc_437394  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_437385  +
sub eax 1 +
jz loc_437379  +
sub eax 5 +
jz loc_43736A  +
sub eax 1 +
jnz loc_4374F3  +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_43746B  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset aLog10_0 +
jmp loc_4374B8  +
mov [ebp+var_1C] offset unk_4487D4 +
jmp loc_43746B  +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] offset unk_4487D4 +
jmp loc_4374B8  +
mov [ebp+var_20] 3 +
mov [ebp+var_1C] offset aExp +
jmp loc_4374B8  +
sub eax 0Fh +
jz loc_437400  +
sub eax 9 +
jz loc_4373F4  +
sub eax 1 +
jnz loc_4374F3  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 4 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_43B5A4  +
call edi  +
pop ecx  +
jmp loc_4374EE  +
mov [ebp+var_20] 3 +
jmp loc_4374B1  +
mov [ebp+var_1C] offset aExp +
jmp loc_4373C1  +
fld1   +
mov eax [ebp+arg_8] +
fstp  qword ptr [eax] +
jmp loc_4374F3  +
sub eax 1Bh +
jz loc_4374AA  +
sub eax 1 +
jz loc_437464  +
sub eax 15h +
jz loc_43745B  +
sub eax 9 +
jz loc_437452  +
sub eax 3 +
jz loc_437449  +
sub eax 3ABh +
jz loc_437442  +
sub eax 1 +
jnz loc_4374F3  +
mov eax [ebp+arg_0] +
fld  qword ptr [eax] +
jmp loc_43740B  +
mov [ebp+var_1C] offset aAsin +
jmp loc_43746B  +
mov [ebp+var_1C] offset aAcos +
jmp loc_43746B  +
mov [ebp+var_1C] offset aSqrt +
jmp loc_43746B  +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
mov [ebp+var_20] 1 +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_43B5A4  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4374EE  +
call sub_42691A  +
mov dword ptr [eax] 21h +
jmp loc_4374EE  +
mov [ebp+var_20] 2 +
mov [ebp+var_1C] offset aPow +
mov eax [ebp+arg_0] +
mov ecx edi +
mov esi [ebp+arg_8] +
fld  qword ptr [eax] +
mov eax [ebp+arg_4] +
fstp  [ebp+var_18] +
fld  qword ptr [eax] +
lea eax [ebp+var_20] +
fstp  [ebp+var_10] +
fld  qword ptr [esi] +
push eax  +
fstp  [ebp+var_8] +
call ds:off_43B5A4  +
call edi  +
pop ecx  +
test eax eax +
jnz loc_4374EE  +
call sub_42691A  +
mov dword ptr [eax] 22h +
fld  [ebp+var_8] +
fstp  qword ptr [esi] +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
push ebp  +
mov ebp esp +
mov cx word ptr [ebp+arg_0+6] +
mov edx 7FF0h +
mov ax cx +
and ax dx +
cmp ax dx +
jnz loc_4380DB  +
fld  qword ptr [ebp+8] +
push ecx  +
push ecx  +
fstp  [esp+8+var_8] +
call sub_438031  +
pop ecx  +
pop ecx  +
sub eax 1 +
jz loc_4380D4  +
sub eax 1 +
jz loc_4380CF  +
sub eax 1 +
jz loc_4380CB  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
push 2  +
jmp loc_4380D1  +
push 4  +
pop eax  +
pop ebp  +
retn   +
mov eax 200h +
pop ebp  +
retn   +
movzx ecx cx +
and ecx 8000h +
test ax ax +
jnz loc_438107  +
test dword ptr [ebp+0Ch] 0FFFFFh +
jnz loc_4380F8  +
cmp dword ptr [ebp+arg_0] 0 +
jz loc_438107  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF90h +
lea eax [ecx+80h] +
pop ebp  +
retn   +
fld  [ebp+arg_0] +
fldz   +
fucompp   +
fnstsw  ax +
test ah 44h +
jp loc_438121  +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFFE0h +
lea eax [ecx+40h] +
pop ebp  +
retn   +
neg ecx  +
sbb ecx ecx +
and ecx 0FFFFFF08h +
lea eax [ecx+100h] +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
xor edx edx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
movzx ebx word ptr [ecx+6] +
add eax 18h +
add eax ecx +
test ebx ebx +
jz loc_43817C  +
mov edi [ebp+arg_4] +
mov esi [eax+0Ch] +
cmp edi esi +
jb loc_438174  +
mov ecx [eax+8] +
add ecx esi +
cmp edi ecx +
jb loc_43817E  +
inc edx  +
add eax 28h +
cmp edx ebx +
jb loc_438164  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push 0FFFFFFFEh  +
push offset unk_44DC18  +
push offset sub_421AB0  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_4504C0 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_438250  +
add esp 4 +
test eax eax +
jz loc_43822F  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_438140  +
add esp 8 +
test eax eax +
jz loc_43822F  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jnz loc_43827F  +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_43827F  +
mov ecx 10Bh +
cmp [eax+18h] cx +
jnz loc_43827F  +
mov eax 1 +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_4382C1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_438308  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_4382CF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_4382FD  +
cmp edx [esp+arg_4] +
ja loc_4382FD  +
jb loc_438306  +
cmp eax [esp+arg_0] +
jbe loc_438306  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_438349  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
push ebp  +
xor edi edi +
xor ebp ebp +
mov eax [esp+arg_4] +
or eax eax +
jge loc_438394  +
inc edi  +
inc ebp  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4383B0  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4383DC  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_438423  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4383EA  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_438418  +
cmp edx [esp+arg_4] +
ja loc_438418  +
jb loc_438421  +
cmp eax [esp+arg_0] +
jbe loc_438421  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec ebp  +
jns loc_438435  +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
dec edi  +
jnz loc_438449  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebp  +
pop esi  +
pop edi  +
retn 10h  +
***
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_438470  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_43848B  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4384AA  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
dec edi  +
jns loc_4384F6  +
jmp loc_4384FD  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4384B8  +
div  ecx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_4384E3  +
cmp edx [esp+arg_4] +
ja loc_4384E3  +
jb loc_4384EB  +
cmp eax [esp+arg_0] +
jbe loc_4384EB  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
dec edi  +
jns loc_4384FD  +
neg edx  +
neg eax  +
sbb edx 0 +
pop edi  +
pop ebx  +
retn 10h  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41F4F0  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_41F4F0  +
***
cmp cl 40h +
jnb loc_43855A  +
cmp cl 20h +
jnb loc_438550  +
shld edx eax +
shl eax cl +
retn   +
mov edx eax +
xor eax eax +
and cl 1Fh +
shl edx cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
cmp cl 40h +
jnb loc_43857A  +
cmp cl 20h +
jnb loc_438570  +
shrd eax edx +
shr edx cl +
retn   +
mov eax edx +
xor edx edx +
and cl 1Fh +
shr eax cl +
retn   +
xor eax eax +
xor edx edx +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_453BB0 1 +
jb loc_43868E  +
mov edi [ebp+8] +
ja loc_43860D  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_4385ED  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_4385BD  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_43864E  +
xor eax eax +
test edi 0Fh +
jz loc_438634  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_43864B  +
inc edi  +
test edi 0Fh +
jnz loc_43861F  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_438687  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_438673  +
bsf edx edi +
add eax edx +
jmp loc_43864B  +
***
mov edi [ebp+8] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
add ecx 1 +
neg ecx  +
sub edi 1 +
mov al [ebp+0Ch] +
std   +
scas   +
add edi 1 +
cmp [edi] al +
jz loc_4386B1  +
xor eax eax +
jmp loc_4386B3  +
mov eax edi +
cld   +
pop edi  +
leave   +
retn   +
***
cmp dword_453BB0 1 +
push ecx  +
cmp dword_453BB0 1 +
jl loc_43885E  +
cmp [ebp+arg_0] 0C00002B4h +
jz loc_43880A  +
cmp [ebp+arg_0] 0C00002B5h +
jnz loc_43885E  +
stmxcsr [ebp+var_4]  +
mov eax [ebp+var_4] +
xor eax 3Fh +
test al 81h +
jz loc_438857  +
test eax 204h +
jnz loc_438826  +
mov eax 0C000008Eh +
leave   +
retn   +
test eax 102h +
jz loc_438857  +
test eax 408h +
jnz loc_43883B  +
mov eax 0C0000091h +
leave   +
retn   +
test eax 810h +
jnz loc_438849  +
mov eax 0C0000093h +
leave   +
retn   +
test eax 1020h +
jnz loc_43885E  +
mov eax 0C000008Fh +
leave   +
retn   +
mov eax 0C0000090h +
leave   +
retn   +
mov eax [ebp+arg_0] +
leave   +
retn   +
***
mov ecx [ebp-60h] +
mov ecx [ebp-60h] +
mov ecx [ebp-60h] +
mov ecx [ebp-60h] +
add ecx 5Ch +
jmp loc_4014AB  +
***
lea ecx [ebp-9Ch] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-70h] +
jmp sub_4014C7  +
***
mov ecx [ebp-10h] +
jmp loc_4014AB  +
***
mov ecx [ebp-10h] +
add ecx 10h +
jmp loc_4014AB  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_438977  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_4014AB  +
retn   +
***
lea ecx [ebp-14h] +
jmp loc_4021CC  +
***
lea ecx [ebp-24Ch] +
lea ecx [ebp-274h] +
lea ecx [ebp-254h] +
lea ecx [ebp-250h] +
lea ecx [ebp-250h] +
lea ecx [ebp-254h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-250h] +
lea ecx [ebp-25Ch] +
lea ecx [ebp-250h] +
lea ecx [ebp-25Ch] +
lea ecx [ebp-25Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
jmp loc_4014AB  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 5Ch +
jmp loc_4014AB  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_438BB5  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_4014AB  +
retn   +
***
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-224h] +
jmp loc_4014AB  +
***
lea ecx [ebp-44h] +
lea ecx [ebp-40h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-58h] +
jmp loc_4021DC  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-428h] +
lea ecx [ebp-42Ch] +
lea ecx [ebp-428h] +
lea ecx [ebp-464h] +
lea ecx [ebp-428h] +
lea ecx [ebp-450h] +
lea ecx [ebp-424h] +
lea ecx [ebp-430h] +
lea ecx [ebp-424h] +
lea ecx [ebp-424h] +
jmp loc_4014AB  +
***
lea ecx [ebp-224h] +
lea ecx [ebp-230h] +
lea ecx [ebp-228h] +
lea ecx [ebp-220h] +
lea ecx [ebp-224h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-238h] +
lea ecx [ebp-220h] +
lea ecx [ebp-23Ch] +
lea ecx [ebp-234h] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-244h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-220h] +
lea ecx [ebp-238h] +
lea ecx [ebp-220h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
jmp loc_4014AB  +
***
lea ecx [ebp-248h] +
lea ecx [ebp-224h] +
lea ecx [ebp-230h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-238h] +
lea ecx [ebp-224h] +
lea ecx [ebp-234h] +
lea ecx [ebp-228h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
mov eax [ebp-220h] +
lea ecx [ebp-228h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-28h] +
jmp loc_403E9C  +
***
lea ecx [ebp-98h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-94h] +
lea ecx [ebp-90h] +
lea ecx [ebp-88h] +
lea ecx [ebp-88h] +
lea ecx [ebp-88h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-88h] +
lea ecx [ebp-88h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-88h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
mov eax [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_4014AB  +
***
lea ecx [ebp-430h] +
lea ecx [ebp-42Ch] +
lea ecx [ebp-434h] +
lea ecx [ebp-424h] +
lea ecx [ebp-424h] +
lea ecx [ebp-428h] +
lea ecx [ebp-424h] +
jmp loc_4014AB  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
jmp loc_4014AB  +
***
lea ecx [ebp-224h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-220h] +
jmp loc_4014AB  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-38h] +
jmp loc_403EA1  +
***
lea ecx [ebp-21Ch] +
lea ecx [ebp-220h] +
lea ecx [ebp-224h] +
lea ecx [ebp-228h] +
jmp loc_4014AB  +
***
lea ecx [ebp-220h] +
jmp loc_4014AB  +
***
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-28h] +
jmp loc_4014AB  +
***
lea ecx [ebp-244h] +
lea ecx [ebp-250h] +
lea ecx [ebp-248h] +
lea ecx [ebp-244h] +
lea ecx [ebp-244h] +
lea ecx [ebp-248h] +
lea ecx [ebp-254h] +
lea ecx [ebp-240h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-240h] +
lea ecx [ebp-240h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-240h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-240h] +
jmp loc_4014AB  +
***
lea ecx [ebp-84Ch] +
lea ecx [ebp-84Ch] +
lea ecx [ebp-850h] +
lea ecx [ebp-850h] +
lea ecx [ebp-850h] +
lea ecx [ebp-858h] +
lea ecx [ebp-850h] +
lea ecx [ebp-860h] +
lea ecx [ebp-85Ch] +
lea ecx [ebp-868h] +
lea ecx [ebp-864h] +
lea ecx [ebp-870h] +
lea ecx [ebp-86Ch] +
lea ecx [ebp-878h] +
lea ecx [ebp-874h] +
lea ecx [ebp-880h] +
lea ecx [ebp-87Ch] +
lea ecx [ebp-888h] +
lea ecx [ebp-884h] +
lea ecx [ebp-890h] +
lea ecx [ebp-88Ch] +
lea ecx [ebp-898h] +
lea ecx [ebp-894h] +
lea ecx [ebp-854h] +
jmp loc_4014AB  +
***
lea ecx [ebp-18h] +
jmp loc_403E9C  +
***
lea ecx [ebp-94h] +
lea ecx [ebp-84h] +
lea ecx [ebp-70h] +
jmp sub_4014C7  +
***
lea ecx [ebp-84h] +
lea ecx [ebp-94h] +
lea ecx [ebp-70h] +
jmp sub_4014C7  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_4014AB  +
***
lea ecx [ebp-98h] +
lea ecx [ebp-88h] +
lea ecx [ebp-70h] +
lea ecx [ebp-78h] +
lea ecx [ebp-78h] +
jmp loc_4014AB  +
***
lea ecx [ebp-224h] +
lea ecx [ebp-220h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-130h] +
lea ecx [ebp-130h] +
lea ecx [ebp-134h] +
jmp loc_4014AB  +
***
lea ecx [ebp-130h] +
lea ecx [ebp-134h] +
jmp loc_4014AB  +
***
lea ecx [ebp+8] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-34h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
jmp loc_4014AB  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-1Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-21Ch] +
lea ecx [ebp-228h] +
lea ecx [ebp-224h] +
jmp loc_4014AB  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-228h] +
lea ecx [ebp-244h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-22Ch] +
lea ecx [ebp-228h] +
lea ecx [ebp-238h] +
lea ecx [ebp-228h] +
lea ecx [ebp-220h] +
lea ecx [ebp-23Ch] +
lea ecx [ebp-220h] +
lea ecx [ebp-220h] +
lea ecx [ebp-230h] +
lea ecx [ebp-220h] +
lea ecx [ebp-220h] +
lea ecx [ebp-220h] +
lea ecx [ebp-230h] +
jmp loc_4014AB  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
mov eax [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-0C8h] +
lea ecx [ebp-0C0h] +
lea ecx [ebp-0B4h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-90h] +
lea ecx [ebp-90h] +
lea ecx [ebp-90h] +
lea ecx [ebp-90h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-90h] +
lea ecx [ebp-90h] +
lea ecx [ebp-90h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-94h] +
lea ecx [ebp-94h] +
lea ecx [ebp-94h] +
lea ecx [ebp-94h] +
lea ecx [ebp-94h] +
lea ecx [ebp-94h] +
lea ecx [ebp-90h] +
lea ecx [ebp-94h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-0A4h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-38h] +
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp-20h] +
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-10h] +
lea ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
lea ecx [ebp-28h] +
jmp loc_4014AB  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-24h] +
lea ecx [ebp-28h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-20h] +
mov eax [ebp-20h] +
mov eax [ebp-20h] +
lea ecx [ebp-20h] +
jmp loc_4014AB  +
***
mov eax [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-424h] +
lea ecx [ebp-450h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-448h] +
lea ecx [ebp-444h] +
lea ecx [ebp-45Ch] +
lea ecx [ebp-428h] +
lea ecx [ebp-43Ch] +
lea ecx [ebp-464h] +
lea ecx [ebp-438h] +
lea ecx [ebp-440h] +
lea ecx [ebp-42Ch] +
lea ecx [ebp-434h] +
lea ecx [ebp-438h] +
lea ecx [ebp-434h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-438h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-434h] +
lea ecx [ebp-438h] +
lea ecx [ebp-428h] +
lea ecx [ebp-438h] +
lea ecx [ebp-428h] +
lea ecx [ebp-428h] +
lea ecx [ebp-454h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-20h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-828h] +
lea ecx [ebp-82Ch] +
lea ecx [ebp-830h] +
lea ecx [ebp-830h] +
lea ecx [ebp-82Ch] +
lea ecx [ebp-830h] +
lea ecx [ebp-82Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-220h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-224h] +
jmp loc_4014AB  +
***
lea ecx [ebp-220h] +
jmp loc_4014AB  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
jmp loc_4014AB  +
***
lea ecx [ebp-220h] +
lea ecx [ebp-21Ch] +
lea ecx [ebp-228h] +
lea ecx [ebp-224h] +
jmp loc_4014AB  +
***
lea ecx [ebp-230h] +
lea ecx [ebp-248h] +
lea ecx [ebp-24Ch] +
lea ecx [ebp-254h] +
lea ecx [ebp-264h] +
lea ecx [ebp-250h] +
lea ecx [ebp-260h] +
jmp loc_4014AB  +
***
lea ecx [ebp-20h] +
jmp loc_4014AB  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
jmp loc_4014AB  +
***
retn   +
***
retn   +
***
lea ecx [ebp-94h] +
lea ecx [ebp-11Ch] +
lea ecx [ebp-118h] +
lea ecx [ebp-11Ch] +
jmp loc_4014AB  +
***
retn   +
***
mov ecx [ebp-41Ch] +
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
mov ecx [ebp-41Ch] +
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
lea ecx [ebp-26Ch] +
jmp loc_4014AB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-278h] +
xor ecx eax +
call sub_41EEF4  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CA4C +
jmp loc_420BD7  +
***
mov eax [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_4014AB  +
***
lea ecx [ebp-10h] +
mov eax [ebp-14h] +
and eax 1 +
jz locret_43A5DC  +
and dword ptr [ebp-14h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp loc_4014AB  +
retn   +
***
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-420h] +
xor ecx eax +
call sub_41EEF4  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CB38 +
jmp loc_420BD7  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CB90 +
jmp loc_420BD7  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CFEC +
jmp loc_420BD7  +
***
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-420h] +
xor ecx eax +
call sub_41EEF4  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CEE4 +
jmp loc_420BD7  +
***
lea ecx [ebp-0Dh] +
jmp nullsub_1  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CCA8 +
jmp loc_420BD7  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41EEF4  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CE00 +
jmp loc_420BD7  +
***
call sub_413046  +
retn   +
***
lea ecx [ebp-10h] +
jmp loc_412DE2  +
***
lea ecx [ebp-8Ch] +
jmp sub_41BEDE  +
***
lea ecx [ebp-0Dh] +
jmp sub_412E34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-30h] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-30h] +
jmp sub_41BEDE  +
***
lea ecx [ebp-8Ch] +
jmp sub_412F4D  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-90h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CD7C +
jmp loc_420BD7  +
***
lea ecx [ebp-211h] +
jmp nullsub_1  +
***
call sub_41EEE6  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44CF10 +
jmp loc_420BD7  +
***
call nullsub_1  +
pop ecx  +
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D070 +
jmp loc_420BD7  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 74h +
jmp loc_4196B0  +
***
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
mov ecx [ebp-10h] +
add ecx 0Ch +
jmp loc_4014AB  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp loc_4014AB  +
***
mov eax [ebp-244h] +
and eax 1 +
jz locret_43A9EE  +
and dword ptr [ebp-244h] 0FFFFFFFEh +
mov ecx [ebp-248h] +
jmp loc_4014AB  +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D31C +
jmp loc_420BD7  +
***
lea ecx [ebp-418h] +
jmp loc_4014AB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-420h] +
xor ecx eax +
call sub_41EEF4  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D3DC +
jmp loc_420BD7  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 38h +
jmp sub_41CB41  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D444 +
jmp loc_420BD7  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D49C +
jmp loc_420BD7  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41EEF4  +
mov eax offset unk_44D5FC +
jmp loc_420BD7  +
***
mov ecx offset unk_451808 +
jmp sub_410843  +
***
mov ecx offset dword_4517D0 +
jmp sub_4021ED  +
***
mov ecx offset unk_451838 +
jmp sub_403EA6  +
***
mov ecx dword_451830 +
lea ecx [ecx-10h] +
jmp sub_401A64  +
***
mov ecx dword_451834 +
lea ecx [ecx-10h] +
jmp sub_401A64  +
***
mov ecx dword_45189C +
lea ecx [ecx-10h] +
jmp sub_401A64  +
***
mov ecx dword_4518A0 +
lea ecx [ecx-10h] +
jmp sub_401A64  +
***
mov off_450000 offset off_441660 +
jmp sub_40F5EC  +
***
mov off_450258 offset off_4429FC +
retn   +
***
mov off_450140 offset off_4429FC +
retn   +
***
mov off_450028 offset off_4429FC +
retn   +
***
mov ecx offset unk_453188 +
jmp sub_412F4D  +
***
mov ecx offset unk_453288 +
jmp sub_412F4D  +
***
mov ecx offset unk_453108 +
jmp sub_412F4D  +
***
mov ecx offset unk_453208 +
jmp sub_412F4D  +
***
mov ecx offset unk_45331C +
jmp loc_4190C5  +
***
mov ecx offset unk_453384 +
jmp loc_4190C5  +
***
mov ecx offset unk_453380 +
jmp sub_4190F4  +
***
mov ecx offset dword_453388 +
jmp loc_41A00A  +
***
mov dword_4535D8 offset off_4429FC +
retn   +
***
mov dword_4536F0 offset off_4429FC +
retn   +
***
mov ecx offset unk_453808 +
jmp loc_4190C5  +
***
mov ecx offset unk_453BC0 +
jmp loc_420328  +
***
